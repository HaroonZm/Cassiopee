================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from collections import deque
from typing import List, Tuple, Dict, Optional, Set, Iterator


class Point:
    __slots__ = ['x', 'y']

    def __init__(self, x: float, y: float):
        self.x = x
        self.y = y

    def __sub__(self, other: 'Point') -> 'Point':
        return Point(self.x - other.x, self.y - other.y)

    def cross(self, other: 'Point') -> float:
        return self.x * other.y - self.y * other.x

    def __repr__(self):
        return f"Point({self.x},{self.y})"


class Edge:
    __slots__ = ['start', 'end']

    def __init__(self, start: Point, end: Point):
        self.start = start
        self.end = end

    def intersects_segment(self, p1: Point, p2: Point) -> bool:
        """Check if this edge intersects the segment p1-p2"""
        def ccw(a: Point, b: Point, c: Point) -> bool:
            return (b - a).cross(c - a) > 0

        A, B = self.start, self.end
        return (ccw(A, p1, p2) != ccw(B, p1, p2)) and (ccw(A, B, p1) != ccw(A, B, p2))


class Polygon:
    __slots__ = ['vertices']

    def __init__(self, vertices: List[Point]):
        self.vertices = vertices

    def edges(self) -> Iterator[Edge]:
        n = len(self.vertices)
        for i in range(n):
            yield Edge(self.vertices[i], self.vertices[(i + 1) % n])

    def contains_point(self, p: Point) -> bool:
        # Winding number method for polygon contains point test
        wn = 0
        n = len(self.vertices)
        for i in range(n):
            v1 = self.vertices[i]
            v2 = self.vertices[(i + 1) % n]
            if v1.y <= p.y:
                if v2.y > p.y and (v2 - v1).cross(p - v1) > 0:
                    wn += 1
            else:
                if v2.y <= p.y and (v2 - v1).cross(p - v1) < 0:
                    wn -= 1
        return wn != 0

    def intersects_segment(self, p1: Point, p2: Point) -> bool:
        # Check if segment p1p2 intersects polygon edges or if p1 or p2 inside polygon
        if self.contains_point(p1) or self.contains_point(p2):
            return True
        for edge in self.edges():
            if edge.intersects_segment(p1, p2):
                return True
        return False


class FlowNetwork:
    __slots__ = ['graph']

    class Edge:
        __slots__ = ['to', 'rev', 'cap']

        def __init__(self, to: int, rev: int, cap: float):
            self.to = to
            self.rev = rev
            self.cap = cap

    def __init__(self, n: int):
        self.graph: List[List[FlowNetwork.Edge]] = [[] for _ in range(n)]

    def add_edge(self, fr: int, to: int, cap: float):
        forward = FlowNetwork.Edge(to, len(self.graph[to]), cap)
        backward = FlowNetwork.Edge(fr, len(self.graph[fr]), 0.0)
        self.graph[fr].append(forward)
        self.graph[to].append(backward)

    def bfs_level(self, s: int, t: int, level: List[int]) -> bool:
        for i in range(len(level)):
            level[i] = -1
        queue = deque([s])
        level[s] = 0
        while queue:
            v = queue.popleft()
            for e in self.graph[v]:
                if e.cap > 1e-15 and level[e.to] < 0:
                    level[e.to] = level[v] + 1
                    queue.append(e.to)
        return level[t] != -1

    def dfs_flow(self, v: int, t: int, f: float, iter_: List[int], level: List[int]) -> float:
        if v == t:
            return f
        while iter_[v] < len(self.graph[v]):
            e = self.graph[v][iter_[v]]
            if e.cap > 1e-15 and level[v] < level[e.to]:
                d = self.dfs_flow(e.to, t, min(f, e.cap), iter_, level)
                if d > 1e-15:
                    e.cap -= d
                    self.graph[e.to][e.rev].cap += d
                    return d
            iter_[v] += 1
        return 0.0

    def max_flow(self, s: int, t: int) -> float:
        flow = 0.0
        level = [-1] * len(self.graph)
        INF = float('inf')
        while self.bfs_level(s, t, level):
            iter_ = [0] * len(self.graph)
            while True:
                f = self.dfs_flow(s, t, INF, iter_, level)
                if f <= 1e-15:
                    break
                flow += f
        return flow


class CorridorModel:
    def __init__(self, width: float, pillars: List[Polygon]):
        self.width = width
        self.pillars = pillars
        # We will create a visibility graph between special points called nodes, build residual graph,
        # then solve max-flow from bottom to top boundaries.

    def _build_horizontal_cut_lines(self) -> List[float]:
        """Extract all y coordinates of pillar vertices plus 0 and very large maxY to define horizontal bands."""
        ys = set([0.0])
        max_y = 0.0
        for p in self.pillars:
            for v in p.vertices:
                ys.add(v.y)
                max_y = max(max_y, v.y)
        ys.add(max_y + 1.0)  # add a top beyond all pillars
        return sorted(ys)

    def _build_nodes(self, horizontal_lines: List[float]) -> List[List[Point]]:
        """
        We create nodes on each horizontal line: initial corridor edges 0 and W,
        and add pillar edges intersections projected on the line.
        """
        nodes_per_line: List[List[Point]] = []
        # For each horizontal line, find segments of free space (outside pillars) in [0,W]
        for y in horizontal_lines:
            segments = self._free_segments_at_y(y)
            # We'll mark node points at segment ends and optionally intermediate points
            pts = []
            for seg in segments:
                pts.append(Point(seg[0], y))
                pts.append(Point(seg[1], y))
            # remove duplicates and sort left to right
            pts = sorted(list({(p.x, p.y): p for p in pts}.values()), key=lambda p: p.x)
            nodes_per_line.append(pts)
        return nodes_per_line

    def _free_segments_at_y(self, y: float) -> List[Tuple[float, float]]:
        """
        Return horizontal free x segments in corridor [0,W] at height y,
        excluding pillar horizontal projections.
        """
        intervals = []  # we will subtract pillar shadow intervals on this line
        corridors = [(0.0, self.width)]
        # For each pillar, get intersection intervals at line y
        for poly in self.pillars:
            xs = []
            n = len(poly.vertices)
            for i in range(n):
                a = poly.vertices[i]
                b = poly.vertices[(i + 1) % n]
                # Check if the segment crosses y level
                if (a.y - y) * (b.y - y) < 0:  # crosses y line
                    # Solve linear interpolation for x at y
                    x = a.x + (b.x - a.x) * (y - a.y) / (b.y - a.y)
                    xs.append(x)
                elif abs(a.y - y) < 1e-15 and abs(b.y - y) < 1e-15:
                    # horizontal edge on y line, include interval between a.x and b.x
                    xs.append(a.x)
                    xs.append(b.x)
            xs.sort()
            # xs should be even number of points, pairs define pillar shadow intervals on y
            for i in range(0, len(xs) - 1, 2):
                left = xs[i]
                right = xs[i + 1]
                intervals.append((left, right))
        if not intervals:
            return corridors
        # Merge pillar intervals
        intervals.sort()
        merged = []
        cur_left, cur_right = intervals[0]
        for li, ri in intervals[1:]:
            if li <= cur_right + 1e-15:
                cur_right = max(cur_right, ri)
            else:
                merged.append((cur_left, cur_right))
                cur_left, cur_right = li, ri
        merged.append((cur_left, cur_right))
        # Subtract merged intervals from corridor
        free_segments = []
        left = 0.0
        for li, ri in merged:
            if li > left + 1e-15:
                free_segments.append((left, min(li, self.width)))
            left = max(left, ri)
        if left < self.width - 1e-15:
            free_segments.append((left, self.width))
        # Filter invalid segments (length < 1e-14)
        free_segments = [(l, r) for l, r in free_segments if r - l > 1e-14]
        return free_segments if free_segments else corridors

    def _can_connect(self, p1: Point, p2: Point) -> bool:
        # Check segment p1p2 does not intersect any pillar or walls (except if at corridor edges at x=0 or x=W)
        if p1.x < -1e-10 or p1.x > self.width + 1e-10:
            return False
        if p2.x < -1e-10 or p2.x > self.width + 1e-10:
            return False
        segment = (p1, p2)
        for poly in self.pillars:
            if poly.intersects_segment(p1, p2):
                return False
        return True

    def build_flow_network(self) -> Tuple[FlowNetwork, int, int]:
        """
        Construct the flow network graph from the corridor model:
        Each node splits in two vertices (in,out) with capacity the length of free horizontal segment.
        Vertical edges have infinite capacity.
        Source is a special node connected to all bottom line nodes.
        Sink is connected from all top line nodes.
        """
        lines = self._build_horizontal_cut_lines()
        nodes_per_line = self._build_nodes(lines)

        node_id_map: Dict[Tuple[int, int], int] = {}
        # We'll assign id to each in and out vertex of each point
        # in vertex = 2* id, out vertex = 2* id + 1
        id_counter = 0
        for i, nodes in enumerate(nodes_per_line):
            for j, p in enumerate(nodes):
                node_id_map[(i, j)] = id_counter
                id_counter += 1

        # Create flow network with 2 vertices per node for splitting capacity
        n = id_counter * 2 + 2
        network = FlowNetwork(n)
        SRC = n - 2
        SNK = n - 1

        # Add edges for splitting nodes (in->out) with capacity equal to segment length between neighbors on same line
        for i, nodes in enumerate(nodes_per_line):
            # nodes describe points where free segments start/end
            # capacity of node: segment length right of the point on line i
            # For a pair of consecutive points (nodes[j], nodes[j+1]) the free horizontal segment length is nodes[j+1].x - nodes[j].x
            for j in range(len(nodes)):
                node_id = node_id_map[(i, j)]
                # Find capacity: for point j the out capacity is horizontal free length from this point to next on same line if any
                cap = 0.0
                if j + 1 < len(nodes):
                    cap = nodes[j + 1].x - nodes[j].x
                    if cap < 0:
                        cap = 0
                if cap > 1e-15:
                    # Add edge in->out with capacity = segment length
                    network.add_edge(node_id * 2, node_id * 2 + 1, cap)
                else:
                    # If no capacity segment, still add infinite capacity edge to allow vertical edge?
                    network.add_edge(node_id * 2, node_id * 2 + 1, 0.0)

        # Add vertical edges (out of a node line i to in of node line i+1) if visible (no pillar)
        for i in range(len(nodes_per_line) - 1):
            line_a = nodes_per_line[i]
            line_b = nodes_per_line[i + 1]
            idx_map_b = {round(p.x, 8): j for j, p in enumerate(line_b)}  # to quickly find nodes by x
            for j_a, p_a in enumerate(line_a):
                out_a = node_id_map[(i, j_a)] * 2 + 1
                # Vertical connections only between nodes with same x (to keep graph sane)
                # Because free segments may differ between horizontal lines,
                # connect nodes with same x if segment is free and vertical segment p_a->p_b is free
                # Actually, we connect all pairs where segment p_a->p_b is free provided p_b in next line
                # but trying only same x points (precision required)
                x_key = round(p_a.x, 8)
                if x_key in idx_map_b:
                    j_b = idx_map_b[x_key]
                    p_b = line_b[j_b]
                    in_b = node_id_map[(i + 1, j_b)] * 2
                    if self._can_connect(p_a, p_b):
                        network.add_edge(out_a, in_b, float('inf'))

        # Connect source to all bottom line nodes' in vertex
        for j, p in enumerate(nodes_per_line[0]):
            nodeid = node_id_map[(0, j)] * 2
            network.add_edge(SRC, nodeid, float('inf'))

        # Connect all top line nodes' out vertex to sink
        top_index = len(nodes_per_line) - 1
        for j, p in enumerate(nodes_per_line[top_index]):
            nodeid = node_id_map[(top_index, j)] * 2 + 1
            network.add_edge(nodeid, SNK, float('inf'))

        return network, SRC, SNK


def read_datasets() -> Iterator[Tuple[float, List[Polygon]]]:
    input_iter = iter(sys.stdin.read().strip().split('\n'))
    while True:
        try:
            line = next(input_iter)
            if line == "0 0":
                break
            W, N = map(int, line.split())
            pillars = []
            for _ in range(N):
                M = int(next(input_iter))
                vertices = []
                for __ in range(M):
                    x, y = map(float, next(input_iter).split())
                    vertices.append(Point(x, y))
                pillars.append(Polygon(vertices))
            yield W, pillars
        except StopIteration:
            break


def main() -> None:
    for W, pillars in read_datasets():
        model = CorridorModel(W, pillars)
        flownet, SRC, SNK = model.build_flow_network()
        res = flownet.max_flow(SRC, SNK)
        print(f"{res:.8f}")


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0001601539261173457
    2. 'os' → logprob: -8.750160217285156
    3. ' math' → logprob: -14.250160217285156
    4. '"os' → logprob: -15.125160217285156
    5. ' re' → logprob: -15.250160217285156
    6. ' json' → logprob: -15.875160217285156
    7. ' ' → logprob: -16.250160217285156
    8. '	os' → logprob: -16.500160217285156
    9. ' o' → logprob: -16.625160217285156
    10. '_os' → logprob: -16.750160217285156

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17448298633098602
    2. '\n' → logprob: -2.799483060836792
    3. '
' → logprob: -3.799483060836792
    4. '<|end|>' → logprob: -3.924483060836792
    5. 'import' → logprob: -4.049482822418213
    6. '\' → logprob: -4.549482822418213
    7. '

' → logprob: -4.924482822418213
    8. '```' → logprob: -5.049482822418213
    9. '<|end|>' → logprob: -5.049482822418213
    10. ',' → logprob: -5.799482822418213

Token 6: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6925330758094788
    2. 'import' → logprob: -2.192533016204834
    3. '\n' → logprob: -2.317533016204834
    4. '<|end|>' → logprob: -2.442533016204834
    5. '
' → logprob: -2.567533016204834
    6. '```' → logprob: -3.442533016204834
    7. '

' → logprob: -3.692533016204834
    8. '\' → logprob: -3.817533016204834
    9. ',' → logprob: -4.192533016204834
    10. '<|end|>' → logprob: -4.817533016204834

Token 7: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6536301970481873
    2. ' os' → logprob: -0.7786301970481873
    3. 'collections' → logprob: -4.903630256652832
    4. 'os' → logprob: -5.278630256652832
    5. ' datetime' → logprob: -5.778630256652832
    6. ' itertools' → logprob: -6.653630256652832
    7. ' typing' → logprob: -6.778630256652832
    8. ' numpy' → logprob: -7.528630256652832
    9. ' statistics' → logprob: -7.653630256652832
    10. ' math' → logprob: -7.778630256652832

Token 8: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6330090165138245
    2. ' import' → logprob: -0.7580090165138245
    3. '.' → logprob: -8.25800895690918
    4. ' ' → logprob: -10.25800895690918
    5. '```' → logprob: -10.50800895690918
    6. '<|end|>' → logprob: -10.75800895690918
    7. ' defaultdict' → logprob: -11.13300895690918
    8. '	import' → logprob: -12.13300895690918
    9. ' ' → logprob: -12.13300895690918
    10. '_' → logprob: -12.50800895690918

Token 9: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4560529887676239
    2. ' deque' → logprob: -1.7060530185699463
    3. ' abc' → logprob: -2.3310530185699463
    4. 'deque' → logprob: -2.5810530185699463
    5. 'abc' → logprob: -4.581052780151367
    6. ' named' → logprob: -7.706052780151367
    7. 'import' → logprob: -8.331052780151367
    8. 'default' → logprob: -8.456052780151367
    9. ' import' → logprob: -8.581052780151367
    10. ' Counter' → logprob: -8.831052780151367

Token 10: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5488105416297913
    2. '
' → logprob: -2.1738104820251465
    3. '

' → logprob: -2.4238104820251465
    4. 'import' → logprob: -2.4238104820251465
    5. '\' → logprob: -2.9238104820251465
    6. '```' → logprob: -3.0488104820251465
    7. '<|end|>' → logprob: -4.0488104820251465
    8. 'newline' → logprob: -5.4238104820251465
    9. ',' → logprob: -6.5488104820251465
    10. 'n' → logprob: -6.9238104820251465

Token 11: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8653644323348999
    2. '```' → logprob: -1.7403644323349
    3. '\n' → logprob: -2.1153645515441895
    4. ',' → logprob: -3.1153645515441895
    5. 'def' → logprob: -3.1153645515441895
    6. '\' → logprob: -3.1153645515441895
    7. '

' → logprob: -3.2403645515441895
    8. '<|end|>' → logprob: -3.3653645515441895
    9. '
' → logprob: -3.6153645515441895
    10. '#' → logprob: -3.8653645515441895

Token 12: ' typing' (ID: 34152)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -1.1015795469284058
    2. ' itertools' → logprob: -1.1015795469284058
    3. ' queue' → logprob: -1.7265795469284058
    4. 'heap' → logprob: -2.8515796661376953
    5. ' typing' → logprob: -2.8515796661376953
    6. 'queue' → logprob: -3.7265796661376953
    7. 'typing' → logprob: -4.601579666137695
    8. ' functools' → logprob: -6.601579666137695
    9. ' collections' → logprob: -6.726579666137695
    10. 'collections' → logprob: -6.851579666137695

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4336552619934082
    2. 'import' → logprob: -1.0586552619934082
    3. '.' → logprob: -5.558655261993408
    4. ' ' → logprob: -7.808655261993408
    5. '<|end|>' → logprob: -7.933655261993408
    6. '```' → logprob: -9.55865478515625
    7. '	import' → logprob: -10.18365478515625
    8. '_import' → logprob: -10.43365478515625
    9. '_' → logprob: -10.55865478515625
    10. ' as' → logprob: -10.68365478515625

Token 14: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.26384982466697693
    2. 'List' → logprob: -2.6388497352600098
    3. ' Any' → logprob: -2.7638497352600098
    4. ' De' → logprob: -2.8888497352600098
    5. 'Any' → logprob: -3.5138497352600098
    6. 'Deque' → logprob: -5.38884973526001
    7. ' Generator' → logprob: -5.88884973526001
    8. 'De' → logprob: -6.26384973526001
    9. ' deque' → logprob: -6.63884973526001
    10. 'Generator' → logprob: -8.138850212097168

Token 15: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.2051376104354858
    2. '

' → logprob: -1.3301376104354858
    3. '
' → logprob: -1.9551376104354858
    4. 'def' → logprob: -2.3301377296447754
    5. '\n' → logprob: -2.7051377296447754
    6. '```' → logprob: -2.9551377296447754
    7. 'import' → logprob: -3.0801377296447754
    8. '\' → logprob: -3.9551377296447754
    9. '


' → logprob: -6.330137729644775
    10. ',' → logprob: -6.330137729644775

Token 16: ' Tuple' (ID: 50841)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -1.4543447494506836
    2. 'Tuple' → logprob: -1.5793447494506836
    3. 'Deque' → logprob: -1.7043447494506836
    4. ' De' → logprob: -2.2043447494506836
    5. 'deque' → logprob: -2.4543447494506836
    6. ' Optional' → logprob: -2.8293447494506836
    7. 'Any' → logprob: -3.2043447494506836
    8. 'De' → logprob: -3.7043447494506836
    9. ' Tuple' → logprob: -3.8293447494506836
    10. ' deque' → logprob: -4.454344749450684

Token 17: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0610519647598267
    2. '```' → logprob: -1.1860519647598267
    3. 'def' → logprob: -2.311051845550537
    4. '\' → logprob: -2.311051845550537
    5. '
' → logprob: -2.936051845550537
    6. '

' → logprob: -3.186051845550537
    7. 'class' → logprob: -3.561051845550537
    8. 'import' → logprob: -4.686051845550537
    9. '`' → logprob: -5.686051845550537
    10. 'd' → logprob: -5.811051845550537

Token 18: ' Dict' (ID: 55179)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -1.5284013748168945
    2. 'Any' → logprob: -2.0284013748168945
    3. 'Named' → logprob: -2.1534013748168945
    4. 'Deque' → logprob: -2.4034013748168945
    5. ' Union' → logprob: -2.5284013748168945
    6. ' Optional' → logprob: -2.7784013748168945
    7. 'Optional' → logprob: -2.9034013748168945
    8. ' Any' → logprob: -3.1534013748168945
    9. 'deque' → logprob: -3.1534013748168945
    10. 'Iterable' → logprob: -3.2784013748168945

Token 19: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.17015504837036133
    2. '
' → logprob: -2.7951550483703613
    3. '```' → logprob: -3.2951550483703613
    4. 'class' → logprob: -3.5451550483703613
    5. 'import' → logprob: -3.9201550483703613
    6. 'def' → logprob: -5.420155048370361
    7. '\n' → logprob: -6.045155048370361
    8. '\' → logprob: -7.170155048370361
    9. ',' → logprob: -7.420155048370361
    10. '``' → logprob: -7.920155048370361

Token 20: ' Optional' (ID: 19351)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -1.5482687950134277
    2. ' Any' → logprob: -1.9232687950134277
    3. ' Optional' → logprob: -1.9232687950134277
    4. 'Any' → logprob: -2.1732687950134277
    5. ' Union' → logprob: -2.1732687950134277
    6. ' Set' → logprob: -2.2982687950134277
    7. 'Set' → logprob: -2.7982687950134277
    8. 'Optional' → logprob: -3.6732687950134277
    9. ' deque' → logprob: -4.048268795013428
    10. 'Iterable' → logprob: -4.548268795013428

Token 21: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8944300413131714
    2. '
' → logprob: -1.3944300413131714
    3. '\n' → logprob: -1.6444300413131714
    4. 'class' → logprob: -2.894430160522461
    5. '\' → logprob: -3.394430160522461
    6. '```' → logprob: -3.519430160522461
    7. 'def' → logprob: -4.019430160522461
    8. 'import' → logprob: -5.019430160522461
    9. '<|end|>' → logprob: -7.019430160522461
    10. 'newline' → logprob: -7.269430160522461

Token 22: ' Set' (ID: 3957)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.618211567401886
    2. 'Set' → logprob: -0.993211567401886
    3. 'Union' → logprob: -3.118211507797241
    4. ' Union' → logprob: -4.49321174621582
    5. ' Any' → logprob: -4.49321174621582
    6. 'Iterable' → logprob: -4.49321174621582
    7. ' Set' → logprob: -5.11821174621582
    8. 'Named' → logprob: -6.11821174621582
    9. 'Iterator' → logprob: -6.74321174621582
    10. 'set' → logprob: -6.86821174621582

Token 23: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.25715771317481995
    2. '
' → logprob: -2.007157802581787
    3. '```' → logprob: -2.882157802581787
    4. 'class' → logprob: -4.507157802581787
    5. '\n' → logprob: -4.507157802581787
    6. 'import' → logprob: -5.257157802581787
    7. 'def' → logprob: -5.882157802581787
    8. ',' → logprob: -6.757157802581787
    9. '<|end|>' → logprob: -6.882157802581787
    10. '\' → logprob: -6.882157802581787

Token 24: ' Iterator' (ID: 41994)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.44127586483955383
    2. ' Union' → logprob: -1.8162758350372314
    3. 'Iterable' → logprob: -3.1912758350372314
    4. 'default' → logprob: -3.5662758350372314
    5. 'Union' → logprob: -3.6912758350372314
    6. 'Any' → logprob: -3.6912758350372314
    7. ' Any' → logprob: -3.8162758350372314
    8. 'Named' → logprob: -4.4412760734558105
    9. ' Iterable' → logprob: -4.5662760734558105
    10. ' Ordered' → logprob: -4.8162760734558105

Token 25: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6918455362319946
    2. '
' → logprob: -1.5668455362319946
    3. '```' → logprob: -1.5668455362319946
    4. 'class' → logprob: -3.441845417022705
    5. '\n' → logprob: -3.691845417022705
    6. 'import' → logprob: -4.941845417022705
    7. '\' → logprob: -5.191845417022705
    8. 'def' → logprob: -6.066845417022705
    9. ',' → logprob: -6.066845417022705
    10. '#' → logprob: -6.441845417022705

Token 26: 'class' (ID: 1444)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1575571894645691
    2. 'def' → logprob: -2.282557249069214
    3. 'class' → logprob: -3.157557249069214
    4. 'c' → logprob: -7.657557010650635
    5. '#' → logprob: -7.782557010650635
    6. 'de' → logprob: -8.782557487487793
    7. '@' → logprob: -9.907557487487793
    8. '```' → logprob: -10.282557487487793
    9. 'D' → logprob: -10.657557487487793
    10. 'C' → logprob: -11.157557487487793

Token 27: ' Point' (ID: 9971)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.3845161199569702
    2. ' ' → logprob: -1.7595161199569702
    3. ' BFS' → logprob: -1.7595161199569702
    4. ' Binary' → logprob: -2.2595162391662598
    5. ' Graph' → logprob: -2.3845162391662598
    6. ' My' → logprob: -2.8845162391662598
    7. ' Space' → logprob: -3.3845162391662598
    8. ' Solver' → logprob: -3.8845162391662598
    9. ' Tree' → logprob: -4.13451623916626
    10. ' ' → logprob: -4.63451623916626

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003225606167688966
    2. '(' → logprob: -5.753225803375244
    3. '<|end|>' → logprob: -10.753225326538086
    4. ' :' → logprob: -11.628225326538086
    5. '):' → logprob: -12.128225326538086
    6. '():' → logprob: -12.378225326538086
    7. ':
' → logprob: -13.378225326538086
    8. ':**' → logprob: -13.628225326538086
    9. '.' → logprob: -14.003225326538086
    10. '(Point' → logprob: -14.003225326538086

Token 29: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3138901889324188
    2. '(' → logprob: -1.8138902187347412
    3. ' ' → logprob: -2.813890218734741
    4. '   ' → logprob: -3.813890218734741
    5. '<|end|>' → logprob: -4.813889980316162
    6. ' (' → logprob: -5.063889980316162
    7. ' :' → logprob: -5.063889980316162
    8. '  ' → logprob: -7.188889980316162
    9. ')' → logprob: -7.563889980316162
    10. '(object' → logprob: -7.688889980316162

Token 30: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4146806597709656
    2. ' def' → logprob: -1.9146807193756104
    3. '(' → logprob: -2.2896807193756104
    4. '    ' → logprob: -3.6646807193756104
    5. 'def' → logprob: -3.6646807193756104
    6. ' ' → logprob: -4.414680480957031
    7. ' (' → logprob: -4.539680480957031
    8. ':' → logprob: -4.914680480957031
    9. ' :' → logprob: -6.664680480957031
    10. 'class' → logprob: -6.789680480957031

Token 31: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00013715129171032459
    2. ' init' → logprob: -9.625137329101562
    3. 'slots' → logprob: -9.750137329101562
    4. '_init' → logprob: -12.125137329101562
    5. 'i' → logprob: -12.250137329101562
    6. 'in' → logprob: -14.250137329101562
    7. '_' → logprob: -14.875137329101562
    8. 'int' → logprob: -15.250137329101562
    9. 'ini' → logprob: -15.625137329101562
    10. ' ' → logprob: -15.875137329101562

Token 32: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010542457457631826
    2. '=' → logprob: -7.376054286956787
    3. '=['' → logprob: -8.501053810119629
    4. '__[' → logprob: -9.126053810119629
    5. '___' → logprob: -10.626053810119629
    6. '__('' → logprob: -10.876053810119629
    7. '__*/' → logprob: -11.001053810119629
    8. ' =' → logprob: -11.501053810119629
    9. '__["' → logprob: -11.626053810119629
    10. '__.__' → logprob: -11.626053810119629

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.329921156167984
    2. '=' → logprob: -1.3299211263656616
    3. '__' → logprob: -4.829921245574951
    4. '=['' → logprob: -5.329921245574951
    5. '[' → logprob: -5.954921245574951
    6. '['' → logprob: -7.454921245574951
    7. ' =[' → logprob: -8.579920768737793
    8. '=[' → logprob: -9.454920768737793
    9. ' ' → logprob: -9.579920768737793
    10. ' ['' → logprob: -10.204920768737793

Token 34: ' ['' (ID: 5140)
  Prédit: ' (''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ('' → logprob: -0.5732510089874268
    2. '('' → logprob: -1.4482510089874268
    3. '('_' → logprob: -1.8232510089874268
    4. ''' → logprob: -4.198250770568848
    5. '('__' → logprob: -4.823250770568848
    6. '(' → logprob: -5.698250770568848
    7. '['' → logprob: -5.823250770568848
    8. ''s' → logprob: -6.198250770568848
    9. ' ("' → logprob: -6.448250770568848
    10. ' ' → logprob: -6.698250770568848

Token 35: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0026007455307990313
    2. '_x' → logprob: -6.00260066986084
    3. '__' → logprob: -9.00260066986084
    4. ' x' → logprob: -14.12760066986084
    5. '_' → logprob: -14.75260066986084
    6. '   ' → logprob: -16.127601623535156
    7. ''x' → logprob: -16.377601623535156
    8. 'coordinates' → logprob: -16.502601623535156
    9. '```' → logprob: -16.877601623535156
    10. 'y' → logprob: -17.002601623535156

Token 36: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.47427764534950256
    2. ',' → logprob: -0.9742776155471802
    3. ' ',' → logprob: -8.72427749633789
    4. '','' → logprob: -11.09927749633789
    5. '']' → logprob: -11.84927749633789
    6. ''' → logprob: -12.59927749633789
    7. ' ,' → logprob: -12.59927749633789
    8. '",' → logprob: -12.97427749633789
    9. ','' → logprob: -13.97427749633789
    10. ',y' → logprob: -14.09927749633789

Token 37: ' '' (ID: 461)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6967474222183228
    2. ' y' → logprob: -0.9467474222183228
    3. ''y' → logprob: -2.321747303009033
    4. ''' → logprob: -4.821747303009033
    5. ' '' → logprob: -5.321747303009033
    6. '‘y' → logprob: -6.571747303009033
    7. ' ' → logprob: -7.071747303009033
    8. '<|end|>' → logprob: -7.946747303009033
    9. '<|end|>' → logprob: -10.321747779846191
    10. 'space' → logprob: -10.821747779846191

Token 38: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.676981345459353e-06
    2. ' y' → logprob: -12.125005722045898
    3. ''y' → logprob: -15.500005722045898
    4. ''' → logprob: -18.2500057220459
    5. '	y' → logprob: -18.6250057220459
    6. '_y' → logprob: -18.8750057220459
    7. '   ' → logprob: -19.1250057220459
    8. '<|end|>' → logprob: -19.1250057220459
    9. '‘y' → logprob: -19.2500057220459
    10. 'y's' → logprob: -19.8750057220459

Token 39: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.026705579832196236
    2. '',' → logprob: -3.651705503463745
    3. ']' → logprob: -8.151705741882324
    4. ',' → logprob: -9.151705741882324
    5. ' ']' → logprob: -12.151705741882324
    6. ''' → logprob: -13.026705741882324
    7. '"]' → logprob: -13.776705741882324
    8. '   ' → logprob: -14.151705741882324
    9. '','' → logprob: -15.151705741882324
    10. '']
' → logprob: -15.276705741882324

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5723192095756531
    2. ':' → logprob: -1.0723192691802979
    3. ',' → logprob: -2.697319269180298
    4. 'def' → logprob: -4.697319030761719
    5. 'x' → logprob: -5.072319030761719
    6. '    
' → logprob: -5.697319030761719
    7. '.' → logprob: -6.697319030761719
    8. ' def' → logprob: -6.822319030761719
    9. '
' → logprob: -7.072319030761719
    10. '=' → logprob: -7.447319030761719

Token 41: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0029055625200271606
    2. ' def' → logprob: -6.002905368804932
    3. '   ' → logprob: -7.752905368804932
    4. '	def' → logprob: -15.62790584564209
    5. '    
' → logprob: -16.252904891967773
    6. ' ' → logprob: -18.377904891967773
    7. '    ' → logprob: -18.377904891967773
    8. 'x' → logprob: -18.502904891967773
    9. '
' → logprob: -19.002904891967773
    10. 'de' → logprob: -19.127904891967773

Token 42: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05916313827037811
    2. ' def' → logprob: -3.5591630935668945
    3. ' init' → logprob: -3.6841630935668945
    4. ' ' → logprob: -6.6841630935668945
    5. 'init' → logprob: -7.0591630935668945
    6. '__' → logprob: -7.4341630935668945
    7. '_init' → logprob: -7.8091630935668945
    8. '_' → logprob: -8.059163093566895
    9. ' _' → logprob: -8.184163093566895
    10. ' ' → logprob: -9.809163093566895

Token 43: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -17.75
    3. ' init' → logprob: -18.25
    4. 'inite' → logprob: -20.5
    5. 'new' → logprob: -21.125
    6. 'in' → logprob: -21.625
    7. '   ' → logprob: -21.625
    8. 'eq' → logprob: -21.875
    9. 'int' → logprob: -22.0
    10. ' ' → logprob: -22.0

Token 44: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7236384153366089
    2. '(self' → logprob: -0.9736384153366089
    3. '__(' → logprob: -2.2236385345458984
    4. ' (' → logprob: -4.098638534545898
    5. '<|end|>' → logprob: -4.723638534545898
    6. 'self' → logprob: -6.598638534545898
    7. '<|end|>' → logprob: -7.723638534545898
    8. '__(
' → logprob: -7.848638534545898
    9. '__' → logprob: -8.348638534545898
    10. '_(' → logprob: -8.723638534545898

Token 45: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.860340752406046e-05
    2. ' self' → logprob: -9.7500581741333
    3. '(self' → logprob: -15.6250581741333
    4. '	self' → logprob: -17.500059127807617
    5. 'x' → logprob: -18.000059127807617
    6. '_self' → logprob: -18.500059127807617
    7. ',self' → logprob: -18.875059127807617
    8. '0' → logprob: -19.000059127807617
    9. ')' → logprob: -19.750059127807617
    10. ' ' → logprob: -19.750059127807617

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029681527987122536
    2. ' ,' → logprob: -4.02968168258667
    3. 'self' → logprob: -4.65468168258667
    4. '<|end|>' → logprob: -6.77968168258667
    5. ')' → logprob: -8.029681205749512
    6. ',self' → logprob: -8.904681205749512
    7. ' self' → logprob: -9.029681205749512
    8. ',x' → logprob: -9.654681205749512
    9. '<|end|>' → logprob: -10.279681205749512
    10. ' )' → logprob: -10.404681205749512

Token 47: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023357518017292023
    2. ' x' → logprob: -3.773357629776001
    3. 'self' → logprob: -9.148357391357422
    4. ' self' → logprob: -12.148357391357422
    5. ' ' → logprob: -16.273357391357422
    6. '	x' → logprob: -16.898357391357422
    7. '   ' → logprob: -16.898357391357422
    8. ')x' → logprob: -17.398357391357422
    9. ')' → logprob: -17.898357391357422
    10. '_x' → logprob: -18.273357391357422

Token 48: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005470667965710163
    2. ':' → logprob: -5.2554707527160645
    3. ' ,' → logprob: -9.630470275878906
    4. ':int' → logprob: -9.630470275878906
    5. ')' → logprob: -9.880470275878906
    6. '<|end|>' → logprob: -10.505470275878906
    7. '):' → logprob: -11.130470275878906
    8. '<|end|>' → logprob: -12.255470275878906
    9. ',int' → logprob: -12.755470275878906
    10. '=' → logprob: -13.880470275878906

Token 49: ' float' (ID: 4428)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20394495129585266
    2. 'int' → logprob: -1.7039449214935303
    3. ' float' → logprob: -6.328945159912109
    4. 'float' → logprob: -7.578945159912109
    5. ' ' → logprob: -8.82894515991211
    6. ':int' → logprob: -10.07894515991211
    7. '<|end|>' → logprob: -11.32894515991211
    8. '0' → logprob: -11.70394515991211
    9. ' )' → logprob: -11.95394515991211
    10. '=int' → logprob: -12.45394515991211

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.135819760151207e-05
    2. ' ,' → logprob: -9.62507152557373
    3. '<|end|>' → logprob: -13.12507152557373
    4. ',int' → logprob: -14.00007152557373
    5. ')' → logprob: -14.62507152557373
    6. ',float' → logprob: -14.75007152557373
    7. '‌,' → logprob: -14.87507152557373
    8. ' ' → logprob: -14.87507152557373
    9. '<|end|>' → logprob: -15.62507152557373
    10. ',
' → logprob: -16.250070571899414

Token 51: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759533643722534
    2. 'y' → logprob: -0.8259533643722534
    3. ' ' → logprob: -11.825953483581543
    4. '<|end|>' → logprob: -12.825953483581543
    5. '	y' → logprob: -13.450953483581543
    6. 'x' → logprob: -13.450953483581543
    7. ' ' → logprob: -15.325953483581543
    8. '<|end|>' → logprob: -15.575953483581543
    9. ')' → logprob: -15.825953483581543
    10. ' x' → logprob: -16.325952529907227

Token 52: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011908233165740967
    2. '):' → logprob: -4.511908054351807
    3. ')' → logprob: -7.136908054351807
    4. '<|end|>' → logprob: -10.386908531188965
    5. '<|end|>' → logprob: -11.511908531188965
    6. ' :' → logprob: -11.886908531188965
    7. ' ):' → logprob: -12.011908531188965
    8. ':int' → logprob: -12.261908531188965
    9. '=' → logprob: -13.136908531188965
    10. '):
' → logprob: -13.261908531188965

Token 53: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.054983951151371
    2. 'float' → logprob: -2.9299838542938232
    3. '=float' → logprob: -10.054984092712402
    4. ' ' → logprob: -10.554984092712402
    5. '	float' → logprob: -11.304984092712402
    6. ')' → logprob: -11.929984092712402
    7. ',float' → logprob: -12.304984092712402
    8. ' ' → logprob: -12.804984092712402
    9. '(float' → logprob: -13.304984092712402
    10. '<float' → logprob: -13.429984092712402

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028212780598551035
    2. ')' → logprob: -5.877821445465088
    3. ':' → logprob: -11.75282096862793
    4. '):
' → logprob: -12.00282096862793
    5. ' ):' → logprob: -13.62782096862793
    6. ''):' → logprob: -14.25282096862793
    7. ',' → logprob: -15.50282096862793
    8. '),' → logprob: -17.12782096862793
    9. ' ' → logprob: -17.12782096862793
    10. '   ' → logprob: -17.25282096862793

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6747470498085022
    2. 'x' → logprob: -0.7997470498085022
    3. ')' → logprob: -3.7997469902038574
    4. '):' → logprob: -4.549746990203857
    5. ' )' → logprob: -6.299746990203857
    6. ' ):' → logprob: -6.674746990203857
    7. ' ' → logprob: -6.924746990203857
    8. '   ' → logprob: -6.924746990203857
    9. ' x' → logprob: -7.174746990203857
    10. '    ' → logprob: -7.174746990203857

Token 56: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002572567667812109
    2. ' self' → logprob: -6.002572536468506
    3. '       ' → logprob: -9.252573013305664
    4. '	self' → logprob: -14.127573013305664
    5. '   ' → logprob: -15.752573013305664
    6. ' ' → logprob: -16.502573013305664
    7. 'x' → logprob: -17.377573013305664
    8. 's' → logprob: -17.377573013305664
    9. ' ' → logprob: -17.877573013305664
    10. '_self' → logprob: -18.252573013305664

Token 57: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009767891839146614
    2. '.x' → logprob: -4.634768009185791
    3. ' ' → logprob: -13.009767532348633
    4. ' .' → logprob: -13.384767532348633
    5. '=' → logprob: -13.384767532348633
    6. ' =' → logprob: -13.634767532348633
    7. '<|end|>' → logprob: -13.884767532348633
    8. '.=' → logprob: -14.134767532348633
    9. '<|end|>' → logprob: -14.634767532348633
    10. '.space' → logprob: -14.884767532348633

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2521335780620575
    2. '=' → logprob: -1.5021336078643799
    3. ',' → logprob: -9.5021333694458
    4. '<|end|>' → logprob: -9.5021333694458
    5. ' ' → logprob: -10.2521333694458
    6. ')' → logprob: -12.0021333694458
    7. ' =)' → logprob: -12.3771333694458
    8. ' ,' → logprob: -12.8771333694458
    9. '=}' → logprob: -13.2521333694458
    10. '<|end|>' → logprob: -13.5021333694458

Token 59: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759401917457581
    2. 'x' → logprob: -0.8259401917457581
    3. '	x' → logprob: -14.450940132141113
    4. ' ' → logprob: -15.450940132141113
    5. ' ' → logprob: -17.20094108581543
    6. ')x' → logprob: -18.20094108581543
    7. '(x' → logprob: -19.32594108581543
    8. '_x' → logprob: -20.07594108581543
    9. '$x' → logprob: -20.20094108581543
    10. '0' → logprob: -20.45094108581543

Token 60: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.528937816619873
    2. '<|end|>' → logprob: -1.028937816619873
    3. '
' → logprob: -3.153937816619873
    4. ' 
' → logprob: -5.653937816619873
    5. '        
' → logprob: -6.153937816619873
    6. '<|end|>' → logprob: -6.278937816619873
    7. '  
' → logprob: -7.028937816619873
    8. '        ' → logprob: -7.403937816619873
    9. ' ' → logprob: -7.403937816619873
    10. '' → logprob: -8.528938293457031

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09083239734172821
    2. '
' → logprob: -4.090832233428955
    3. '<|end|>' → logprob: -4.090832233428955
    4. ',' → logprob: -4.465832233428955
    5. '        
' → logprob: -4.715832233428955
    6. '        ' → logprob: -4.965832233428955
    7. ' ' → logprob: -5.090832233428955
    8. ' 
' → logprob: -5.090832233428955
    9. ' y' → logprob: -5.965832233428955
    10. '  
' → logprob: -6.215832233428955

Token 62: ' self' (ID: 1051)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3934202194213867
    2. 'y' → logprob: -1.7684202194213867
    3. 'self' (adapté à ' self') → logprob: -2.1434202194213867
    4. ',' → logprob: -3.6434202194213867
    5. '       ' → logprob: -5.393420219421387
    6. ' self' → logprob: -5.768420219421387
    7. '
' → logprob: -6.768420219421387
    8. ',y' → logprob: -6.768420219421387
    9. ' ' → logprob: -7.518420219421387
    10. ' 
' → logprob: -9.018420219421387

Token 63: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01189739815890789
    2. '.y' → logprob: -4.511897563934326
    3. '.x' → logprob: -8.261897087097168
    4. ' .' → logprob: -8.386897087097168
    5. '<|end|>' → logprob: -8.636897087097168
    6. ' ' → logprob: -9.761897087097168
    7. ')' → logprob: -10.011897087097168
    8. '<|end|>' → logprob: -10.261897087097168
    9. 'y' → logprob: -11.011897087097168
    10. ',' → logprob: -11.886897087097168

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7866994738578796
    2. '<|end|>' → logprob: -0.7866994738578796
    3. ' =' → logprob: -2.5366995334625244
    4. '<|end|>' → logprob: -5.411699295043945
    5. ')' → logprob: -5.536699295043945
    6. ' ' → logprob: -6.661699295043945
    7. ',' → logprob: -8.661699295043945
    8. ' )' → logprob: -8.911699295043945
    9. ' ' → logprob: -9.786699295043945
    10. '.' → logprob: -10.411699295043945

Token 65: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132619559764862
    2. 'y' → logprob: -1.3132619857788086
    3. '	y' → logprob: -16.188261032104492
    4. ' ' → logprob: -16.688261032104492
    5. ' ' → logprob: -16.813261032104492
    6. 'x' → logprob: -19.563261032104492
    7. ')y' → logprob: -19.813261032104492
    8. '‘y' → logprob: -20.063261032104492
    9. ''y' → logprob: -20.438261032104492
    10. '_y' → logprob: -20.438261032104492

Token 66: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5693138241767883
    2. '
' → logprob: -0.9443138241767883
    3. 'def' → logprob: -3.6943137645721436
    4. '<|end|>' → logprob: -4.944314002990723
    5. ' def' → logprob: -5.194314002990723
    6. '    
' → logprob: -6.194314002990723
    7. '<|end|>' → logprob: -7.069314002990723
    8. ',' → logprob: -7.194314002990723
    9. ':' → logprob: -7.194314002990723
    10. '

' → logprob: -7.444314002990723

Token 68: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002192852320149541
    2. ' def' → logprob: -6.252192974090576
    3. '   ' → logprob: -8.252192497253418
    4. '    
' → logprob: -14.002192497253418
    5. '@' → logprob: -14.252192497253418
    6. '@property' → logprob: -14.252192497253418
    7. 'd' → logprob: -14.877192497253418
    8. ' ' → logprob: -15.377192497253418
    9. '	def' → logprob: -15.502192497253418
    10. ')' → logprob: -16.002193450927734

Token 69: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.096160888671875
    2. '.' → logprob: -1.471160888671875
    3. '_' → logprob: -1.971160888671875
    4. ')' → logprob: -2.346160888671875
    5. ' def' → logprob: -2.846160888671875
    6. ' .' → logprob: -3.221160888671875
    7. 'distance' → logprob: -3.846160888671875
    8. '_distance' → logprob: -4.096160888671875
    9. ' )' → logprob: -4.471160888671875
    10. ' distance' → logprob: -4.596160888671875

Token 70: 'sub' (ID: 3834)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0009258725331164896
    2. 'repr' → logprob: -7.0009260177612305
    3. 'init' → logprob: -11.62592601776123
    4. 'lt' → logprob: -13.25092601776123
    5. 'str' → logprob: -13.50092601776123
    6. 'hash' → logprob: -14.00092601776123
    7. ' eq' → logprob: -14.25092601776123
    8. 'add' → logprob: -14.25092601776123
    9. '_eq' → logprob: -16.500925064086914
    10. 'iter' → logprob: -17.625925064086914

Token 71: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8218807578086853
    2. '__(' → logprob: -1.07188081741333
    3. '(' → logprob: -2.32188081741333
    4. '<|end|>' → logprob: -2.32188081741333
    5. '(self' → logprob: -4.69688081741333
    6. '__(
' → logprob: -5.69688081741333
    7. '__('' → logprob: -5.94688081741333
    8. '_' → logprob: -6.32188081741333
    9. '__((' → logprob: -6.44688081741333
    10. '<|end|>' → logprob: -7.07188081741333

Token 72: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004443531855940819
    2. 'other' → logprob: -5.629443645477295
    3. ' self' → logprob: -7.129443645477295
    4. ' other' → logprob: -10.379443168640137
    5. ')' → logprob: -12.754443168640137
    6. ' ' → logprob: -12.879443168640137
    7. '<|end|>' → logprob: -13.004443168640137
    8. '(self' → logprob: -13.379443168640137
    9. ',' → logprob: -14.754443168640137
    10. 's' → logprob: -15.879443168640137

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006731472443789244
    2. ' ,' → logprob: -5.0067315101623535
    3. '<|end|>' → logprob: -11.631731033325195
    4. 'self' → logprob: -13.006731033325195
    5. ')' → logprob: -13.256731033325195
    6. 'other' → logprob: -13.381731033325195
    7. ',self' → logprob: -14.881731033325195
    8. '<|end|>' → logprob: -15.631731033325195
    9. ',
' → logprob: -15.756731033325195
    10. ' )' → logprob: -16.006731033325195

Token 74: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.5759637951850891
    2. 'other' → logprob: -0.8259637951850891
    3. ' ' → logprob: -11.450963973999023
    4. 'self' → logprob: -12.325963973999023
    5. 'Other' → logprob: -12.825963973999023
    6. '<|end|>' → logprob: -13.075963973999023
    7. ' o' → logprob: -13.325963973999023
    8. '_other' → logprob: -13.825963973999023
    9. ' self' → logprob: -14.450963973999023
    10. '(other' → logprob: -14.700963973999023

Token 75: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008320588618516922
    2. ':' → logprob: -5.1333208084106445
    3. ')' → logprob: -6.5083208084106445
    4. ' ):' → logprob: -7.8833208084106445
    5. '<|end|>' → logprob: -8.008320808410645
    6. '):
' → logprob: -8.758320808410645
    7. '<|end|>' → logprob: -10.883320808410645
    8. ' :' → logprob: -12.508320808410645
    9. ' )' → logprob: -13.383320808410645
    10. ' ' → logprob: -13.508320808410645

Token 76: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11115282028913498
    2. ' )' → logprob: -3.2361528873443604
    3. ' Point' → logprob: -3.2361528873443604
    4. ')' → logprob: -4.486152648925781
    5. '<|end|>' → logprob: -4.611152648925781
    6. ' '' → logprob: -5.861152648925781
    7. 'Point' → logprob: -7.486152648925781
    8. ' "' → logprob: -7.611152648925781
    9. ' ' → logprob: -7.611152648925781
    10. ' space' → logprob: -7.861152648925781

Token 77: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0009132515988312662
    2. ' Point' → logprob: -7.000913143157959
    3. '	Point' → logprob: -13.875913619995117
    4. '_Point' → logprob: -14.625913619995117
    5. '<Point' → logprob: -15.375913619995117
    6. '.Point' → logprob: -15.875913619995117
    7. 'Points' → logprob: -17.250913619995117
    8. '_point' → logprob: -17.750913619995117
    9. '(Point' → logprob: -18.000913619995117
    10. 'Po' → logprob: -19.250913619995117

Token 78: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5462863445281982
    2. ')' → logprob: -1.0462863445281982
    3. ''):' → logprob: -2.7962863445281982
    4. '):' → logprob: -4.796286582946777
    5. ':' → logprob: -8.171286582946777
    6. '')->' → logprob: -10.546286582946777
    7. ''):
' → logprob: -10.546286582946777
    8. '':' → logprob: -11.921286582946777
    9. ''' → logprob: -12.171286582946777
    10. '`)' → logprob: -12.421286582946777

Token 79: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002689444227144122
    2. '):' → logprob: -6.127689361572266
    3. ')' → logprob: -8.127689361572266
    4. ' ->' → logprob: -9.502689361572266
    5. '->' → logprob: -10.002689361572266
    6. ')->' → logprob: -10.127689361572266
    7. ' :' → logprob: -10.502689361572266
    8. '<|end|>' → logprob: -12.377689361572266
    9. ':return' → logprob: -12.377689361572266
    10. '():' → logprob: -12.627689361572266

Token 80: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.01401529461145401
    2. 'Point' → logprob: -5.264015197753906
    3. ' '' → logprob: -5.389015197753906
    4. ''' → logprob: -5.764015197753906
    5. ' float' → logprob: -7.264015197753906
    6. ' ' → logprob: -8.889015197753906
    7. '	Point' → logprob: -9.139015197753906
    8. 'float' → logprob: -10.764015197753906
    9. ' ' → logprob: -10.889015197753906
    10. '_Point' → logprob: -11.014015197753906

Token 81: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0031942317727953196
    2. ' Point' → logprob: -5.753194332122803
    3. 'Vector' → logprob: -11.878193855285645
    4. '	Point' → logprob: -12.003193855285645
    5. '_Point' → logprob: -13.253193855285645
    6. '<Point' → logprob: -14.378193855285645
    7. '.Point' → logprob: -15.003193855285645
    8. 'float' → logprob: -15.253193855285645
    9. '_point' → logprob: -15.378193855285645
    10. '(Point' → logprob: -15.503193855285645

Token 82: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037668279837816954
    2. '):' → logprob: -5.628767013549805
    3. ':
' → logprob: -9.128767013549805
    4. '':' → logprob: -11.128767013549805
    5. '<|end|>' → logprob: -11.128767013549805
    6. '():' → logprob: -11.753767013549805
    7. '):
' → logprob: -12.003767013549805
    8. ':**' → logprob: -12.253767013549805
    9. ' :' → logprob: -12.628767013549805
    10. '>:' → logprob: -13.753767013549805

Token 83: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.7447200417518616
    2. 'return' (adapté à ' return') → logprob: -1.7447199821472168
    3. ' Point' → logprob: -1.7447199821472168
    4. ' return' → logprob: -2.869719982147217
    5. '       ' → logprob: -2.994719982147217
    6. '(Point' → logprob: -3.869719982147217
    7. '<|end|>' → logprob: -3.869719982147217
    8. '	Point' → logprob: -3.994719982147217
    9. '<Point' → logprob: -5.869719982147217
    10. ' ' → logprob: -6.119719982147217

Token 85: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.004078758880496025
    2. 'Point' → logprob: -5.5040788650512695
    3. '	Point' → logprob: -14.87907886505127
    4. '(Point' → logprob: -17.379077911376953
    5. '_Point' → logprob: -18.254077911376953
    6. ' ' → logprob: -20.004077911376953
    7. ' Points' → logprob: -20.129077911376953
    8. '<Point' → logprob: -20.254077911376953
    9. ' ' → logprob: -20.504077911376953
    10. '.Point' → logprob: -21.004077911376953

Token 86: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06197552755475044
    2. '(' → logprob: -2.8119754791259766
    3. '(s' → logprob: -13.311975479125977
    4. 'self' → logprob: -13.311975479125977
    5. '(this' → logprob: -13.686975479125977
    6. '(x' → logprob: -13.686975479125977
    7. '(
' → logprob: -13.686975479125977
    8. '((' → logprob: -14.311975479125977
    9. ' (' → logprob: -14.561975479125977
    10. '(

' → logprob: -17.436975479125977

Token 87: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.2812606692314148
    2. '.' → logprob: -1.4062607288360596
    3. 'x' → logprob: -9.65626049041748
    4. ' ' → logprob: -10.78126049041748
    5. ' .' → logprob: -11.40626049041748
    6. '<|end|>' → logprob: -11.40626049041748
    7. '<|end|>' → logprob: -13.90626049041748
    8. '.
' → logprob: -14.53126049041748
    9. ').' → logprob: -15.03126049041748
    10. ')' → logprob: -15.65626049041748

Token 88: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0009800514671951532
    2. '-' → logprob: -7.125979900360107
    3. ' ' → logprob: -8.750980377197266
    4. ' ' → logprob: -11.125980377197266
    5. '<|end|>' → logprob: -13.875980377197266
    6. ' –' → logprob: -14.375980377197266
    7. ' ,' → logprob: -15.125980377197266
    8. ' −' → logprob: -15.750980377197266
    9. ' -,' → logprob: -15.875980377197266
    10. ' —' → logprob: -16.000980377197266

Token 89: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.16029226779937744
    2. 'other' → logprob: -1.9102922677993774
    3. '<|end|>' → logprob: -9.660292625427246
    4. '_other' → logprob: -13.285292625427246
    5. '(other' → logprob: -13.910292625427246
    6. ' ' → logprob: -14.535292625427246
    7. '.other' → logprob: -14.660292625427246
    8. 'Other' → logprob: -14.660292625427246
    9. ' Other' → logprob: -16.53529167175293
    10. ' ' → logprob: -16.78529167175293

Token 90: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25195586681365967
    2. '.x' → logprob: -1.5019558668136597
    3. ' .' → logprob: -11.25195598602295
    4. '<|end|>' → logprob: -12.00195598602295
    5. 'x' → logprob: -12.50195598602295
    6. ').' → logprob: -13.37695598602295
    7. ' ' → logprob: -13.87695598602295
    8. '<|end|>' → logprob: -15.62695598602295
    9. '.
' → logprob: -15.87695598602295

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022047359962016344
    2. ' ,' → logprob: -6.127204895019531
    3. ',
' → logprob: -11.127204895019531
    4. ')' → logprob: -12.627204895019531
    5. '),' → logprob: -14.752204895019531
    6. ',

' → logprob: -15.002204895019531
    7. ',self' → logprob: -15.127204895019531
    8. ' ,
' → logprob: -15.377204895019531
    9. '<|end|>' → logprob: -15.627204895019531
    10. ',y' → logprob: -16.37720489501953

Token 92: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07435451447963715
    2. '<|end|>' → logprob: -3.074354410171509
    3. ' ' → logprob: -3.949354410171509
    4. ' self' → logprob: -5.574354648590088
    5. ')' → logprob: -7.699354648590088
    6. ' other' → logprob: -8.19935417175293
    7. 'self' → logprob: -8.32435417175293
    8. ' )' → logprob: -8.69935417175293
    9. ' a' → logprob: -8.69935417175293
    10. ''' → logprob: -8.82435417175293

Token 93: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.2519587278366089
    2. '.' → logprob: -1.5019587278366089
    3. '.x' → logprob: -11.001958847045898
    4. '.
' → logprob: -12.001958847045898
    5. ' .' → logprob: -13.126958847045898
    6. 'y' → logprob: -13.126958847045898
    7. ' ' → logprob: -14.376958847045898
    8. ').' → logprob: -14.501958847045898
    9. '<|end|>' → logprob: -15.001958847045898
    10. ')' → logprob: -15.126958847045898

Token 94: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.015387652441859245
    2. ')' → logprob: -5.015387535095215
    3. ' )' → logprob: -5.265387535095215
    4. '-' → logprob: -5.765387535095215
    5. ' ' → logprob: -8.640387535095215
    6. '.' → logprob: -9.515387535095215
    7. ' ' → logprob: -10.265387535095215
    8. '	' → logprob: -11.390387535095215
    9. '<|end|>' → logprob: -11.390387535095215
    10. '-)' → logprob: -11.890387535095215

Token 95: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.2519339919090271
    2. 'other' → logprob: -1.5019340515136719
    3. ' ' → logprob: -13.126934051513672
    4. '(other' → logprob: -13.251934051513672
    5. '.other' → logprob: -15.001934051513672
    6. '<|end|>' → logprob: -15.501934051513672
    7. '_other' → logprob: -15.751934051513672
    8. 'Other' → logprob: -15.751934051513672
    9. ' oth' → logprob: -16.501934051513672
    10. 'othe' → logprob: -17.126934051513672

Token 96: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.22610335052013397
    2. '.' → logprob: -1.6011033058166504
    3. ')' → logprob: -7.85110330581665
    4. 'y' → logprob: -8.476103782653809
    5. '.x' → logprob: -10.101103782653809
    6. ' ' → logprob: -11.226103782653809
    7. '-' → logprob: -11.601103782653809
    8. ' y' → logprob: -12.101103782653809
    9. ' .' → logprob: -12.226103782653809
    10. '<|end|>' → logprob: -12.226103782653809

Token 97: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ')
' → logprob: -11.500011444091797
    3. ' )' → logprob: -13.875011444091797
    4. '<|end|>' → logprob: -15.250011444091797
    5. ')return' → logprob: -16.625011444091797
    6. ')

' → logprob: -17.000011444091797
    7. '),' → logprob: -17.250011444091797
    8. ' ' → logprob: -18.000011444091797
    9. ')`' → logprob: -18.375011444091797
    10. '
' → logprob: -18.875011444091797

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26779913902282715
    2. '
' → logprob: -1.5177991390228271
    3. '    
' → logprob: -4.892799377441406
    4. ' ' → logprob: -6.517799377441406
    5. ' 
' → logprob: -6.892799377441406
    6. '<|end|>' → logprob: -6.892799377441406
    7. '\n' → logprob: -7.267799377441406
    8. ')' → logprob: -7.517799377441406
    9. '*' → logprob: -7.517799377441406
    10. '  
' → logprob: -7.892799377441406

Token 99: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08543778210878372
    2. 'def' (adapté à ' def') → logprob: -2.585437774658203
    3. ' def' → logprob: -5.710437774658203
    4. '    
' → logprob: -6.835437774658203
    5. '
' → logprob: -7.085437774658203
    6. ')' → logprob: -7.960437774658203
    7. ' ' → logprob: -8.585437774658203
    8. '@' → logprob: -9.210437774658203
    9. ' 
' → logprob: -9.210437774658203
    10. '(' → logprob: -9.585437774658203

Token 100: ' cross' (ID: 8088)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0052145482040941715
    2. ' .' → logprob: -6.130214691162109
    3. '.' → logprob: -6.255214691162109
    4. ' x' → logprob: -7.630214691162109
    5. ' ' → logprob: -8.88021469116211
    6. ':' → logprob: -10.13021469116211
    7. ')' → logprob: -10.13021469116211
    8. '(' → logprob: -10.25521469116211
    9. '.x' → logprob: -10.25521469116211
    10. ' def' → logprob: -10.25521469116211

Token 101: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005740015767514706
    2. '(
' → logprob: -8.375574111938477
    3. '(self' → logprob: -8.375574111938477
    4. '<|end|>' → logprob: -10.000574111938477
    5. ' (' → logprob: -10.750574111938477
    6. '(

' → logprob: -10.875574111938477
    7. '(other' → logprob: -11.875574111938477
    8. ' ' → logprob: -12.500574111938477
    9. '<|end|>' → logprob: -12.500574111938477
    10. '('' → logprob: -13.125574111938477

Token 102: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015447281301021576
    2. '(other' → logprob: -4.39044713973999
    3. '(self' → logprob: -6.51544713973999
    4. '<|end|>' → logprob: -7.26544713973999
    5. ')' → logprob: -8.265447616577148
    6. ' (' → logprob: -8.640447616577148
    7. '(
' → logprob: -8.890447616577148
    8. ' ' → logprob: -9.890447616577148
    9. 'other' → logprob: -10.265447616577148
    10. '<|end|>' → logprob: -10.640447616577148

Token 103: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.02332455664873123
    2. 'other' → logprob: -3.773324489593506
    3. ' self' → logprob: -9.773324966430664
    4. 'self' → logprob: -11.148324966430664
    5. ' ' → logprob: -12.648324966430664
    6. 'Other' → logprob: -12.648324966430664
    7. '(other' → logprob: -14.148324966430664
    8. '_other' → logprob: -14.898324966430664
    9. '.other' → logprob: -16.398324966430664
    10. ' Other' → logprob: -17.023324966430664

Token 104: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6099196076393127
    2. '):' → logprob: -0.8599196076393127
    3. '<|end|>' → logprob: -3.859919548034668
    4. ':' → logprob: -4.984919548034668
    5. '):
' → logprob: -5.984919548034668
    6. '<|end|>' → logprob: -6.359919548034668
    7. ' ):' → logprob: -7.984919548034668
    8. ',' → logprob: -8.609919548034668
    9. ' )' → logprob: -8.859919548034668
    10. ' ' → logprob: -9.234919548034668

Token 105: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6891963481903076
    2. ' '' → logprob: -0.9391963481903076
    3. ' ' → logprob: -2.8141963481903076
    4. ')' → logprob: -3.6891963481903076
    5. ' Point' → logprob: -4.689196586608887
    6. '<|end|>' → logprob: -5.189196586608887
    7. 'Point' → logprob: -5.814196586608887
    8. ' other' → logprob: -6.939196586608887
    9. 'other' → logprob: -7.314196586608887
    10. ' ' → logprob: -7.564196586608887

Token 106: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00012451570364646614
    2. ' Point' → logprob: -9.00012493133545
    3. '	Point' → logprob: -14.25012493133545
    4. '.Point' → logprob: -16.000123977661133
    5. '<Point' → logprob: -16.125123977661133
    6. '_Point' → logprob: -16.625123977661133
    7. '(Point' → logprob: -17.000123977661133
    8. '_point' → logprob: -17.000123977661133
    9. 'Points' → logprob: -18.000123977661133
    10. '<|end|>' → logprob: -18.625123977661133

Token 107: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3146848678588867
    2. ')' → logprob: -1.3146848678588867
    3. ''):' → logprob: -6.689684867858887
    4. '):' → logprob: -9.189684867858887
    5. ''):
' → logprob: -10.189684867858887
    6. ' ')' → logprob: -11.064684867858887
    7. ':' → logprob: -12.064684867858887
    8. '")' → logprob: -12.689684867858887
    9. ''' → logprob: -12.814684867858887
    10. ')'' → logprob: -13.314684867858887

Token 108: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32792946696281433
    2. ')' → logprob: -1.5779294967651367
    3. '):' → logprob: -2.8279294967651367
    4. ')->' → logprob: -5.077929496765137
    5. ' ->' → logprob: -5.702929496765137
    6. ' :' → logprob: -6.827929496765137
    7. '():' → logprob: -7.327929496765137
    8. '<|end|>' → logprob: -7.327929496765137
    9. '   ' → logprob: -7.827929496765137
    10. '->' → logprob: -7.952929496765137

Token 109: ' float' (ID: 4428)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.9679591059684753
    2. ' self' → logprob: -1.0929591655731201
    3. 'self' → logprob: -2.34295916557312
    4. ' ' → logprob: -2.59295916557312
    5. '(Point' → logprob: -2.71795916557312
    6. ' (' → logprob: -3.84295916557312
    7. 'Point' → logprob: -4.592958927154541
    8. ' other' → logprob: -5.092958927154541
    9. '<|end|>' → logprob: -5.842958927154541
    10. ' float' → logprob: -5.842958927154541

Token 110: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1908780336380005
    2. ':' → logprob: -1.8158780336380005
    3. '(self' → logprob: -5.565877914428711
    4. ' (' → logprob: -5.940877914428711
    5. ',' → logprob: -6.690877914428711
    6. ' :' → logprob: -7.065877914428711
    7. '():' → logprob: -7.190877914428711
    8. '(
' → logprob: -7.940877914428711
    9. ' =' → logprob: -7.940877914428711
    10. ' ->' → logprob: -8.690877914428711

Token 111: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1914023607969284
    2. ' self' → logprob: -1.9414023160934448
    3. '       ' → logprob: -3.9414024353027344
    4. ' return' → logprob: -5.066402435302734
    5. 'return' → logprob: -5.316402435302734
    6. '(self' → logprob: -9.941402435302734
    7. ' ' → logprob: -13.191402435302734
    8. '   ' → logprob: -13.191402435302734
    9. '0' → logprob: -13.566402435302734
    10. '	self' → logprob: -13.566402435302734

Token 112: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13554483652114868
    2. 'self' → logprob: -2.385544776916504
    3. ' return' → logprob: -3.385544776916504
    4. ' self' → logprob: -7.635544776916504
    5. '       ' → logprob: -7.885544776916504
    6. '(self' → logprob: -14.260544776916504
    7. '   ' → logprob: -14.510544776916504
    8. '	return' → logprob: -14.635544776916504
    9. '```' → logprob: -15.010544776916504
    10. ' ' → logprob: -15.385544776916504

Token 113: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25193077325820923
    2. 'self' → logprob: -1.5019307136535645
    3. '(self' → logprob: -14.001931190490723
    4. '       ' → logprob: -14.501931190490723
    5. '	self' → logprob: -15.501931190490723
    6. ' ' → logprob: -16.376930236816406
    7. '   ' → logprob: -16.876930236816406
    8. ' ' → logprob: -17.376930236816406
    9. '
' → logprob: -18.751930236816406
    10. 'Self' → logprob: -18.751930236816406

Token 114: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.38696470856666565
    2. '.' → logprob: -1.1369646787643433
    3. ' .' → logprob: -9.386964797973633
    4. 'x' → logprob: -12.511964797973633
    5. ' ' → logprob: -13.261964797973633
    6. '.y' → logprob: -13.261964797973633
    7. '.user' → logprob: -14.011964797973633
    8. ').' → logprob: -14.386964797973633
    9. '`.' → logprob: -14.886964797973633
    10. '.
' → logprob: -15.386964797973633

Token 115: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00025526012177579105
    2. '*' → logprob: -8.375255584716797
    3. ' ' → logprob: -10.625255584716797
    4. ' ' → logprob: -15.125255584716797
    5. ' **' → logprob: -16.500255584716797
    6. ' *
' → logprob: -18.500255584716797
    7. '*object' → logprob: -19.000255584716797
    8. '  ' → logprob: -19.500255584716797
    9. '**' → logprob: -20.125255584716797
    10. '`' → logprob: -20.375255584716797

Token 116: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.02324547804892063
    2. ' other' → logprob: -3.7732455730438232
    3. '.other' → logprob: -18.773244857788086
    4. '(other' → logprob: -19.023244857788086
    5. ' ' → logprob: -19.523244857788086
    6. 'Other' → logprob: -19.898244857788086
    7. '_other' → logprob: -20.273244857788086
    8. 'oth' → logprob: -21.523244857788086
    9. 'o' → logprob: -22.773244857788086
    10. ' oth' → logprob: -22.898244857788086

Token 117: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.002363636391237378
    2. 'y' → logprob: -6.252363681793213
    3. '.' → logprob: -7.752363681793213
    4. '.x' → logprob: -12.627363204956055
    5. '.other' → logprob: -13.877363204956055
    6. ' .' → logprob: -14.627363204956055
    7. ' y' → logprob: -14.877363204956055
    8. '*y' → logprob: -16.752363204956055
    9. '	y' → logprob: -16.877363204956055
    10. '.py' → logprob: -17.252363204956055

Token 118: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005249056499451399
    2. '-' → logprob: -5.2552490234375
    3. ' ' → logprob: -11.6302490234375
    4. ' ' → logprob: -12.3802490234375
    5. ',' → logprob: -15.1302490234375
    6. ' —' → logprob: -15.3802490234375
    7. '        ' → logprob: -15.3802490234375
    8. ' ,' → logprob: -15.5052490234375
    9. '    ' → logprob: -15.8802490234375
    10. '+' → logprob: -15.8802490234375

Token 119: ' self' (ID: 1051)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.2519354820251465
    2. 'other' → logprob: -1.5019354820251465
    3. '<|end|>' → logprob: -13.251935958862305
    4. '(other' → logprob: -13.376935958862305
    5. '.other' → logprob: -13.376935958862305
    6. 'Other' → logprob: -14.251935958862305
    7. '_other' → logprob: -14.251935958862305
    8. 'self' → logprob: -16.251935958862305
    9. ' oth' → logprob: -17.376935958862305
    10. ' self' → logprob: -17.626935958862305

Token 120: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.022276191040873528
    2. '.x' → logprob: -3.8972761631011963
    3. '.y' → logprob: -6.397276401519775
    4. ' .' → logprob: -10.147275924682617
    5. ' ' → logprob: -10.897275924682617
    6. '.
' → logprob: -12.397275924682617
    7. '`.' → logprob: -13.522275924682617
    8. ').' → logprob: -14.022275924682617
    9. '.

' → logprob: -15.272275924682617
    10. '<|end|>' → logprob: -15.772275924682617

Token 121: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0005694755236618221
    2. '*' → logprob: -8.000569343566895
    3. '<|end|>' → logprob: -8.375569343566895
    4. '<|end|>' → logprob: -13.375569343566895
    5. '*object' → logprob: -14.000569343566895
    6. ' ' → logprob: -14.250569343566895
    7. ' ' → logprob: -15.750569343566895
    8. '.' → logprob: -16.25057029724121
    9. '`' → logprob: -16.37557029724121
    10. ',' → logprob: -16.62557029724121

Token 122: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.1002107709646225
    2. ' other' → logprob: -2.350210666656494
    3. '(other' → logprob: -13.225211143493652
    4. '<|end|>' → logprob: -13.975211143493652
    5. '.other' → logprob: -14.100211143493652
    6. '_other' → logprob: -14.850211143493652
    7. 'Other' → logprob: -14.975211143493652
    8. '-other' → logprob: -18.850210189819336
    9. 'OTHER' → logprob: -19.100210189819336
    10. '_OTHER' → logprob: -19.475210189819336

Token 123: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0032787215895950794
    2. '.' → logprob: -6.003278732299805
    3. 'x' → logprob: -7.128278732299805
    4. '.
' → logprob: -15.003278732299805
    5. ' .' → logprob: -16.503278732299805
    6. ' x' → logprob: -16.628278732299805
    7. '	x' → logprob: -17.003278732299805
    8. 's' → logprob: -17.378278732299805
    9. 'cross' → logprob: -17.753278732299805
    10. '.

' → logprob: -18.003278732299805

Token 124: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31817626953125
    2. '<|end|>' → logprob: -1.81817626953125
    3. '   ' → logprob: -2.94317626953125
    4. '\n' → logprob: -3.19317626953125
    5. 'newline' → logprob: -5.31817626953125
    6. '' → logprob: -5.81817626953125
    7. '    
' → logprob: -5.94317626953125
    8. '\' → logprob: -7.06817626953125
    9. '.' → logprob: -7.19317626953125
    10. ')' → logprob: -7.31817626953125

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5400071740150452
    2. '<|end|>' → logprob: -1.0400071144104004
    3. '
' → logprob: -3.4150071144104004
    4. ')' → logprob: -3.9150071144104004
    5. '\n' → logprob: -6.0400071144104
    6. ' ' → logprob: -6.4150071144104
    7. '.' → logprob: -6.5400071144104
    8. ',' → logprob: -6.9150071144104
    9. ':' → logprob: -7.2900071144104
    10. '```' → logprob: -7.4150071144104

Token 126: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10683222115039825
    2. 'def' (adapté à ' def') → logprob: -2.981832265853882
    3. ' def' → logprob: -3.106832265853882
    4. ' ' → logprob: -5.606832027435303
    5. ')' → logprob: -7.231832027435303
    6. '    ' → logprob: -8.606832504272461
    7. '.' → logprob: -8.606832504272461
    8. '       ' → logprob: -8.731832504272461
    9. '  ' → logprob: -8.981832504272461
    10. '\n' → logprob: -8.981832504272461

Token 127: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8490538597106934
    2. '.' → logprob: -1.0990538597106934
    3. ' .' → logprob: -2.4740538597106934
    4. ' dot' → logprob: -3.0990538597106934
    5. ' __' → logprob: -3.0990538597106934
    6. ' def' → logprob: -3.5990538597106934
    7. 'def' → logprob: -4.224053859710693
    8. 'dot' → logprob: -5.099053859710693
    9. '__' → logprob: -5.974053859710693
    10. ':' → logprob: -6.599053859710693

Token 128: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0014485642313957214
    2. 'lt' → logprob: -7.001448631286621
    3. 'repr' → logprob: -7.751448631286621
    4. 'add' → logprob: -9.501448631286621
    5. 'mul' → logprob: -11.251448631286621
    6. ' eq' → logprob: -11.501448631286621
    7. 'hash' → logprob: -12.626448631286621
    8. '_eq' → logprob: -13.251448631286621
    9. 'e' → logprob: -14.001448631286621
    10. '==' → logprob: -14.501448631286621

Token 129: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5065951347351074
    2. '__' → logprob: -1.6315951347351074
    3. '__('' → logprob: -1.6315951347351074
    4. '__(
' → logprob: -5.506595134735107
    5. '__("' → logprob: -6.756595134735107
    6. '(' → logprob: -7.756595134735107
    7. '__((' → logprob: -7.881595134735107
    8. '___' → logprob: -9.756595611572266
    9. '__(*' → logprob: -10.131595611572266
    10. '_' → logprob: -10.506595611572266

Token 130: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005991425714455545
    2. ')' → logprob: -7.500598907470703
    3. ' self' → logprob: -10.375598907470703
    4. '')' → logprob: -11.375598907470703
    5. ''' → logprob: -13.250598907470703
    6. ''s' → logprob: -14.375598907470703
    7. '	self' → logprob: -15.250598907470703
    8. '
' → logprob: -15.625598907470703
    9. ' ' → logprob: -15.625598907470703
    10. 'f' → logprob: -15.750598907470703

Token 131: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3667575716972351
    2. '):' → logprob: -1.8667576313018799
    3. ',' → logprob: -2.24175763130188
    4. '__' → logprob: -3.99175763130188
    5. '):
' → logprob: -4.116757392883301
    6. '__('' → logprob: -5.741757392883301
    7. ').__' → logprob: -6.366757392883301
    8. ')__' → logprob: -6.991757392883301
    9. ' )' → logprob: -7.241757392883301
    10. '__:' → logprob: -7.616757392883301

Token 132: '       ' (ID: 309)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.08446726948022842
    2. 'f' → logprob: -3.2094671726226807
    3. '       ' → logprob: -3.2094671726226807
    4. '    ' → logprob: -9.834466934204102
    5. ' return' → logprob: -10.084466934204102
    6. '   ' → logprob: -10.459466934204102
    7. ''f' → logprob: -10.584466934204102
    8. ''' → logprob: -10.709466934204102
    9. '(f' → logprob: -10.959466934204102
    10. '        ' → logprob: -11.334466934204102

Token 133: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06542851030826569
    2. ' f' → logprob: -2.8154284954071045
    3. 'return' (adapté à ' return') → logprob: -5.940428733825684
    4. '   ' → logprob: -7.690428733825684
    5. ' return' → logprob: -8.440428733825684
    6. '       ' → logprob: -8.940428733825684
    7. ' ' → logprob: -11.815428733825684
    8. '    ' → logprob: -12.315428733825684
    9. '     ' → logprob: -13.940428733825684
    10. '	f' → logprob: -14.065428733825684

Token 134: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.1269317865371704
    2. 'f' → logprob: -2.126931667327881
    3. ' ' → logprob: -13.001932144165039
    4. ' ' → logprob: -14.251932144165039
    5. '	f' → logprob: -15.001932144165039
    6. ' F' → logprob: -15.751932144165039
    7. ''' → logprob: -15.751932144165039
    8. 'F' → logprob: -16.25193214416504
    9. ' Point' → logprob: -16.62693214416504
    10. ''f' → logprob: -16.62693214416504

Token 135: '"' (ID: 1)
  Prédit: '(Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.8061038255691528
    2. ''' → logprob: -1.6811038255691528
    3. '('' → logprob: -2.1811037063598633
    4. '(f' → logprob: -2.4311037063598633
    5. '"' → logprob: -2.6811037063598633
    6. 'f' → logprob: -3.3061037063598633
    7. 'Point' → logprob: -3.6811037063598633
    8. '(' → logprob: -4.681103706359863
    9. '<Point' → logprob: -4.681103706359863
    10. '("' → logprob: -4.931103706359863

Token 136: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.000169332604855299
    2. '(Point' → logprob: -9.12516975402832
    3. '<Point' → logprob: -10.37516975402832
    4. ' Point' → logprob: -11.37516975402832
    5. '"' → logprob: -12.00016975402832
    6. ''' → logprob: -12.75016975402832
    7. '	Point' → logprob: -13.12516975402832
    8. 'Points' → logprob: -13.50016975402832
    9. '.Point' → logprob: -13.62516975402832
    10. 'P' → logprob: -13.75016975402832

Token 137: '({' (ID: 3972)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02934240736067295
    2. '(x' → logprob: -3.7793424129486084
    3. '({' → logprob: -5.404342174530029
    4. '("' → logprob: -7.654342174530029
    5. '(Point' → logprob: -7.779342174530029
    6. '(`' → logprob: -8.029342651367188
    7. '("("' → logprob: -9.029342651367188
    8. '(self' → logprob: -9.654342651367188
    9. '(">' → logprob: -10.779342651367188
    10. '('' → logprob: -11.029342651367188

Token 138: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.759734732331708e-05
    2. '{' → logprob: -11.250017166137695
    3. ' self' → logprob: -12.375017166137695
    4. 'sel' → logprob: -15.125017166137695
    5. '
' → logprob: -18.000017166137695
    6. '(self' → logprob: -18.750017166137695
    7. '{
' → logprob: -18.875017166137695
    8. ' ' → logprob: -19.250017166137695
    9. '	self' → logprob: -19.250017166137695
    10. '   ' → logprob: -19.375017166137695

Token 139: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.061988186091184616
    2. '.' → logprob: -2.811988115310669
    3. ' .' → logprob: -10.93698787689209
    4. ' ' → logprob: -14.31198787689209
    5. ').' → logprob: -14.68698787689209
    6. '<|end|>' → logprob: -14.81198787689209
    7. '.s' → logprob: -15.68698787689209
    8. ',' → logprob: -15.81198787689209
    9. '.y' → logprob: -15.93698787689209
    10. '.xtext' → logprob: -16.311988830566406

Token 140: '},{' (ID: 34684)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5759763121604919
    2. '},' → logprob: -0.8259763121604919
    3. '},{' → logprob: -11.075976371765137
    4. '}' → logprob: -11.450976371765137
    5. ' ,' → logprob: -12.450976371765137
    6. ' },' → logprob: -13.450976371765137
    7. '),' → logprob: -13.575976371765137
    8. '>,' → logprob: -13.575976371765137
    9. '},
' → logprob: -13.575976371765137
    10. ',
' → logprob: -14.575976371765137

Token 141: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008617172949016094
    2. ' self' → logprob: -4.758617401123047
    3. ' ' → logprob: -13.383617401123047
    4. '	self' → logprob: -14.383617401123047
    5. ' ' → logprob: -16.008617401123047
    6. '    ' → logprob: -16.508617401123047
    7. '_self' → logprob: -16.883617401123047
    8. '$self' → logprob: -17.008617401123047
    9. '<|end|>' → logprob: -17.508617401123047
    10. '  ' → logprob: -17.633617401123047

Token 142: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.2016642689704895
    2. '.' → logprob: -1.7016642093658447
    3. ',' → logprob: -8.826663970947266
    4. '.x' → logprob: -10.076663970947266
    5. ',y' → logprob: -10.326663970947266
    6. ' .' → logprob: -10.701663970947266
    7. ' ' → logprob: -12.951663970947266
    8. ')' → logprob: -13.201663970947266
    9. '.ylabel' → logprob: -14.451663970947266
    10. '.user' → logprob: -14.826663970947266

Token 143: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.00046832661610096693
    2. ')' → logprob: -7.7504682540893555
    3. '})' → logprob: -11.000468254089355
    4. '}"' → logprob: -11.375468254089355
    5. ')")' → logprob: -12.500468254089355
    6. ')}' → logprob: -13.375468254089355
    7. ')">' → logprob: -13.750468254089355
    8. '')"' → logprob: -14.000468254089355
    9. ')`' → logprob: -14.250468254089355
    10. '")' → logprob: -14.375468254089355

Token 144: '"


' (ID: 36470)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.29020461440086365
    2. ')' → logprob: -1.540204644203186
    3. '")' → logprob: -4.1652045249938965
    4. '<|end|>' → logprob: -4.5402045249938965
    5. ')"' → logprob: -4.9152045249938965
    6. '}' → logprob: -5.9152045249938965
    7. '"}' → logprob: -7.6652045249938965
    8. '}"' → logprob: -8.290205001831055
    9. '"""' → logprob: -8.415205001831055
    10. '```' → logprob: -9.665205001831055

Token 145: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17825442552566528
    2. 'def' → logprob: -2.5532543659210205
    3. '   ' → logprob: -2.9282543659210205
    4. 'class' → logprob: -4.0532546043396
    5. '    
' → logprob: -5.0532546043396
    6. ' 
' → logprob: -5.4282546043396
    7. '

' → logprob: -5.8032546043396
    8. '  
' → logprob: -8.678254127502441
    9. '   
' → logprob: -8.803254127502441
    10. '\n' → logprob: -9.803254127502441

Token 146: ' Edge' (ID: 16396)
  Prédit: ' Polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Polygon' → logprob: -0.04570100083947182
    2. ' Conv' → logprob: -3.420701026916504
    3. 'Polygon' → logprob: -5.170701026916504
    4. ' Vector' → logprob: -5.420701026916504
    5. ' Line' → logprob: -6.670701026916504
    6. 'Conv' → logprob: -8.545701026916504
    7. ' Graph' → logprob: -9.295701026916504
    8. ' Geometry' → logprob: -9.545701026916504
    9. '_polygon' → logprob: -9.795701026916504
    10. ' Segment' → logprob: -9.920701026916504

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025802976451814175
    2. '):' → logprob: -6.127580165863037
    3. '(' → logprob: -8.502580642700195
    4. ':
' → logprob: -9.502580642700195
    5. ' :' → logprob: -10.127580642700195
    6. '<|end|>' → logprob: -10.627580642700195
    7. '>:' → logprob: -10.752580642700195
    8. '():' → logprob: -11.627580642700195
    9. '(Point' → logprob: -11.752580642700195
    10. '<|end|>' → logprob: -13.002580642700195

Token 148: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.329225093126297
    2. '   ' → logprob: -1.7042250633239746
    3. '<|end|>' → logprob: -2.8292250633239746
    4. ':
' → logprob: -3.3292250633239746
    5. '<|end|>' → logprob: -6.329225063323975
    6. '(object' → logprob: -7.079225063323975
    7. '  ' → logprob: -8.079225540161133
    8. '(' → logprob: -8.829225540161133
    9. '):
' → logprob: -9.454225540161133
    10. ' ' → logprob: -9.704225540161133

Token 149: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.4390779435634613
    2. ' __' → logprob: -1.0640779733657837
    3. '   ' → logprob: -4.939077854156494
    4. '___' → logprob: -7.189077854156494
    5. ':' → logprob: -7.314077854156494
    6. '  ' → logprob: -7.689077854156494
    7. ' ' → logprob: -7.939077854156494
    8. '<|end|>' → logprob: -7.939077854156494
    9. ':
' → logprob: -9.189078330993652
    10. '    ' → logprob: -9.689078330993652

Token 150: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.0015435494715347886
    2. '_slots' → logprob: -6.5015435218811035
    3. 'sl' → logprob: -10.876543998718262
    4. ' slots' → logprob: -11.251543998718262
    5. 'slot' → logprob: -12.251543998718262
    6. '__' → logprob: -13.376543998718262
    7. 'Slots' → logprob: -13.376543998718262
    8. '_slot' → logprob: -14.626543998718262
    9. 's' → logprob: -14.751543998718262
    10. '_sl' → logprob: -15.126543998718262

Token 151: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5504239797592163
    2. '=' → logprob: -0.9254239797592163
    3. '=['' → logprob: -3.675424098968506
    4. ' =' → logprob: -6.550424098968506
    5. '['' → logprob: -10.175423622131348
    6. '_' → logprob: -10.425423622131348
    7. '___' → logprob: -11.175423622131348
    8. '__[' → logprob: -11.425423622131348
    9. '__:' → logprob: -11.675423622131348
    10. '_=' → logprob: -11.800423622131348

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5322287678718567
    2. ' =' → logprob: -0.9072287678718567
    3. '=['' → logprob: -4.782228946685791
    4. '['' → logprob: -7.532228946685791
    5. ' ['' → logprob: -8.907228469848633
    6. '__' → logprob: -12.157228469848633
    7. ' ' → logprob: -12.782228469848633
    8. ':' → logprob: -13.157228469848633
    9. ':['' → logprob: -13.282228469848633
    10. '[' → logprob: -13.782228469848633

Token 153: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0550946481525898
    2. ' ['' → logprob: -2.9300947189331055
    3. '['_' → logprob: -8.805094718933105
    4. '[' → logprob: -9.805094718933105
    5. ' [' → logprob: -12.680094718933105
    6. ' ' → logprob: -12.805094718933105
    7. '('' → logprob: -14.805094718933105
    8. '["' → logprob: -15.180094718933105
    9. ' '' → logprob: -15.805094718933105
    10. '[]' → logprob: -16.05509376525879

Token 154: 'start' (ID: 5236)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.27076858282089233
    2. 'start' → logprob: -1.520768642425537
    3. 'a' → logprob: -4.270768642425537
    4. 'u' → logprob: -5.645768642425537
    5. 'from' → logprob: -8.145768165588379
    6. 'origin' → logprob: -8.145768165588379
    7. 'source' → logprob: -8.645768165588379
    8. 'point' → logprob: -8.770768165588379
    9. 'points' → logprob: -9.145768165588379
    10. 'src' → logprob: -9.770768165588379

Token 155: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00038419815246015787
    2. ',' → logprob: -8.000384330749512
    3. '_point' → logprob: -10.750384330749512
    4. '_',' → logprob: -11.500384330749512
    5. ' ',' → logprob: -11.750384330749512
    6. ''' → logprob: -12.125384330749512
    7. '",' → logprob: -13.500384330749512
    8. '','' → logprob: -13.875384330749512
    9. '',
' → logprob: -15.125384330749512
    10. '_start' → logprob: -15.125384330749512

Token 156: ' '' (ID: 461)
  Prédit: ''end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''end' → logprob: -0.169720858335495
    2. 'end' → logprob: -2.1697208881378174
    3. ' end' → logprob: -3.5447208881378174
    4. ' '' → logprob: -4.544720649719238
    5. ''' → logprob: -6.044720649719238
    6. '’end' → logprob: -12.044720649719238
    7. ''s' → logprob: -12.794720649719238
    8. '[end' → logprob: -12.919720649719238
    9. 'finish' → logprob: -13.544720649719238
    10. ' ' → logprob: -13.544720649719238

Token 157: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.003181994194164872
    2. ' end' → logprob: -5.7531819343566895
    3. ''end' → logprob: -12.378182411193848
    4. '_end' → logprob: -16.75318145751953
    5. '	end' → logprob: -17.00318145751953
    6. ''' → logprob: -18.00318145751953
    7. ' ' → logprob: -18.25318145751953
    8. ',end' → logprob: -18.25318145751953
    9. ':end' → logprob: -18.75318145751953
    10. '.end' → logprob: -18.87818145751953

Token 158: '']

' (ID: 36979)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.048835236579179764
    2. '']' → logprob: -3.048835277557373
    3. ',' → logprob: -8.798834800720215
    4. ' ',' → logprob: -9.923834800720215
    5. ''' → logprob: -10.798834800720215
    6. ']' → logprob: -10.923834800720215
    7. ' ']' → logprob: -11.923834800720215
    8. '",' → logprob: -14.298834800720215
    9. '','' → logprob: -14.673834800720215
    10. ''],' → logprob: -14.923834800720215

Token 159: '   ' (ID: 271)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5085906386375427
    2. '   ' → logprob: -1.1335906982421875
    3. ',' → logprob: -3.1335906982421875
    4. '    

' → logprob: -4.6335906982421875
    5. ' =' → logprob: -5.2585906982421875
    6. '    
' → logprob: -5.2585906982421875
    7. '
' → logprob: -5.5085906982421875
    8. '<|end|>' → logprob: -6.0085906982421875
    9. '=['' → logprob: -6.3835906982421875
    10. '[' → logprob: -7.0085906982421875

Token 160: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9876455664634705
    2. ' def' → logprob: -1.1126456260681152
    3. 'def' (adapté à ' def') → logprob: -1.8626456260681152
    4. '
' → logprob: -2.4876456260681152
    5. '    
' → logprob: -3.6126456260681152
    6. ' 
' → logprob: -3.7376456260681152
    7. ' ' → logprob: -5.737645626068115
    8. '	def' → logprob: -6.237645626068115
    9. '  
' → logprob: -6.862645626068115
    10. '    ' → logprob: -7.237645626068115

Token 161: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02238810807466507
    2. ' __' → logprob: -4.147387981414795
    3. ' start' → logprob: -5.147387981414795
    4. '__' → logprob: -8.522388458251953
    5. '  ' → logprob: -9.397388458251953
    6. ' (' → logprob: -9.772388458251953
    7. ' ' → logprob: -9.897388458251953
    8. 'start' → logprob: -10.522388458251953
    9. '_' → logprob: -10.897388458251953
    10. ' init' → logprob: -10.897388458251953

Token 162: 'init' (ID: 3287)
  Prédit: 'slots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.2777727246284485
    2. 'init' → logprob: -1.7777726650238037
    3. '_slots' → logprob: -3.0277726650238037
    4. 'slot' → logprob: -4.777772903442383
    5. '_init' → logprob: -5.402772903442383
    6. '_slot' → logprob: -5.527772903442383
    7. 'sl' → logprob: -6.027772903442383
    8. '__' → logprob: -6.152772903442383
    9. 'Slots' → logprob: -6.652772903442383
    10. 'Slot' → logprob: -6.902772903442383

Token 163: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.09763692319393158
    2. '(' → logprob: -2.8476369380950928
    3. '(self' → logprob: -4.597636699676514
    4. ' (' → logprob: -4.597636699676514
    5. '__' → logprob: -5.097636699676514
    6. '_' → logprob: -5.222636699676514
    7. '_(' → logprob: -6.347636699676514
    8. '__(
' → logprob: -7.222636699676514
    9. '=' → logprob: -8.097637176513672
    10. '__((' → logprob: -8.847637176513672

Token 164: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011178798973560333
    2. ' self' → logprob: -4.511178970336914
    3. '(self' → logprob: -9.386178970336914
    4. ',' → logprob: -10.511178970336914
    5. ' ' → logprob: -11.761178970336914
    6. '<|end|>' → logprob: -12.011178970336914
    7. ')' → logprob: -13.886178970336914
    8. '   ' → logprob: -13.886178970336914
    9. '  ' → logprob: -14.011178970336914
    10. 's' → logprob: -14.261178970336914

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010506865568459034
    2. '(self' → logprob: -5.135506629943848
    3. ' ,' → logprob: -5.510506629943848
    4. ' (' → logprob: -7.885506629943848
    5. '(' → logprob: -9.885506629943848
    6. 'self' → logprob: -10.385506629943848
    7. '<|end|>' → logprob: -10.635506629943848
    8. ',self' → logprob: -11.260506629943848
    9. ' self' → logprob: -11.385506629943848
    10. ')' → logprob: -11.760506629943848

Token 166: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.5759773850440979
    2. 'start' → logprob: -0.8259773850440979
    3. 'self' → logprob: -10.575977325439453
    4. ' self' → logprob: -12.075977325439453
    5. '	start' → logprob: -13.325977325439453
    6. 'star' → logprob: -13.450977325439453
    7. ',start' → logprob: -14.200977325439453
    8. '[start' → logprob: -14.575977325439453
    9. ' star' → logprob: -14.950977325439453
    10. '=start' → logprob: -15.200977325439453

Token 167: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004276769235730171
    2. ' ,' → logprob: -5.629276752471924
    3. ':' → logprob: -7.379276752471924
    4. '<|end|>' → logprob: -10.379277229309082
    5. '=' → logprob: -11.504277229309082
    6. ' ' → logprob: -12.379277229309082
    7. '',' → logprob: -12.504277229309082
    8. '=None' → logprob: -13.754277229309082
    9. '‌,' → logprob: -14.879277229309082
    10. '<|end|>' → logprob: -15.004277229309082

Token 168: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0036334465257823467
    2. ' Point' → logprob: -5.628633499145508
    3. '	Point' → logprob: -10.878633499145508
    4. 'int' → logprob: -11.628633499145508
    5. '_Point' → logprob: -13.378633499145508
    6. '<|end|>' → logprob: -14.128633499145508
    7. '_point' → logprob: -14.378633499145508
    8. '.Point' → logprob: -14.378633499145508
    9. '<Point' → logprob: -14.503633499145508
    10. '(Point' → logprob: -14.753633499145508

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -10.875019073486328
    3. ',
' → logprob: -15.750019073486328
    4. '‌,' → logprob: -16.000019073486328
    5. ',start' → logprob: -16.375019073486328
    6. ')' → logprob: -17.375019073486328
    7. '<|end|>' → logprob: -17.625019073486328
    8. ',end' → logprob: -18.375019073486328
    9. ',

' → logprob: -18.750019073486328
    10. ' ' → logprob: -18.750019073486328

Token 170: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.10021906346082687
    2. 'end' → logprob: -2.3502190113067627
    3. ' ' → logprob: -12.100218772888184
    4. '	end' → logprob: -12.100218772888184
    5. ' ' → logprob: -14.850218772888184
    6. ',end' → logprob: -15.350218772888184
    7. '[end' → logprob: -15.975218772888184
    8. '=end' → logprob: -16.1002197265625
    9. ''end' → logprob: -16.1002197265625
    10. '<|end|>' → logprob: -16.2252197265625

Token 171: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.45322155952453613
    2. ':' → logprob: -1.4532215595245361
    3. ',' → logprob: -2.078221559524536
    4. ')' → logprob: -5.328221321105957
    5. '):
' → logprob: -7.703221321105957
    6. ' ):' → logprob: -9.453221321105957
    7. ''):' → logprob: -11.578221321105957
    8. ' ,' → logprob: -11.703221321105957
    9. '):

' → logprob: -11.953221321105957
    10. '<|end|>' → logprob: -12.078221321105957

Token 172: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.06199267506599426
    2. 'Point' → logprob: -2.811992645263672
    3. '	Point' → logprob: -11.311992645263672
    4. ')' → logprob: -12.561992645263672
    5. '_Point' → logprob: -12.686992645263672
    6. '<Point' → logprob: -13.186992645263672
    7. ' point' → logprob: -13.436992645263672
    8. '.Point' → logprob: -14.061992645263672
    9. '(Point' → logprob: -14.186992645263672
    10. '_point' → logprob: -14.311992645263672

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000755427754484117
    2. ')' → logprob: -7.375755310058594
    3. '):
' → logprob: -9.000755310058594
    4. ':' → logprob: -12.625755310058594
    5. ' ):' → logprob: -13.750755310058594
    6. ''):' → logprob: -14.000755310058594
    7. '):
' → logprob: -15.875755310058594
    8. '   ' → logprob: -16.125755310058594
    9. '),' → logprob: -17.375755310058594
    10. ')':' → logprob: -17.625755310058594

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020561274141073227
    2. 'start' → logprob: -4.645561218261719
    3. ' start' → logprob: -4.770561218261719
    4. 'self' → logprob: -7.270561218261719
    5. ' ' → logprob: -7.520561218261719
    6. ' self' → logprob: -7.770561218261719
    7. '=start' → logprob: -8.395561218261719
    8. ',' → logprob: -9.145561218261719
    9. ':start' → logprob: -10.270561218261719
    10. ',start' → logprob: -10.395561218261719

Token 175: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04882410541176796
    2. ' self' → logprob: -3.0488240718841553
    3. '       ' → logprob: -8.423824310302734
    4. '	self' → logprob: -11.048824310302734
    5. '   ' → logprob: -14.798824310302734
    6. '	' → logprob: -15.673824310302734
    7. '
' → logprob: -15.923824310302734
    8. ' ' → logprob: -16.048824310302734
    9. '        ' → logprob: -16.298824310302734
    10. ' ' → logprob: -16.423824310302734

Token 176: '.start' (ID: 10181)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0022086622193455696
    2. '.start' → logprob: -6.127208709716797
    3. ' .' → logprob: -10.877208709716797
    4. '.s' → logprob: -13.502208709716797
    5. '.space' → logprob: -13.752208709716797
    6. ' ' → logprob: -14.252208709716797
    7. 'start' → logprob: -14.752208709716797
    8. '.star' → logprob: -15.252208709716797
    9. ' start' → logprob: -15.252208709716797
    10. '=start' → logprob: -15.627208709716797

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25912466645240784
    2. '=' → logprob: -1.5091246366500854
    3. ' ' → logprob: -5.634124755859375
    4. ',' → logprob: -5.759124755859375
    5. ' ,' → logprob: -8.259124755859375
    6. '<|end|>' → logprob: -9.259124755859375
    7. ')' → logprob: -9.759124755859375
    8. '=start' → logprob: -11.509124755859375
    9. '_' → logprob: -12.134124755859375
    10. ' )' → logprob: -12.884124755859375

Token 178: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.25196707248687744
    2. 'start' → logprob: -1.5019670724868774
    3. ' end' → logprob: -10.751967430114746
    4. 'end' → logprob: -11.376967430114746
    5. ' ' → logprob: -12.626967430114746
    6. ' ' → logprob: -14.751967430114746
    7. '	start' → logprob: -14.751967430114746
    8. '<|end|>' → logprob: -15.251967430114746
    9. '=start' → logprob: -15.376967430114746
    10. '[start' → logprob: -15.626967430114746

Token 179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5172969102859497
    2. '
' → logprob: -1.1422969102859497
    3. '<|end|>' → logprob: -2.64229679107666
    4. ' ' → logprob: -5.39229679107666
    5. ' 
' → logprob: -6.01729679107666
    6. '<|end|>' → logprob: -6.14229679107666
    7. ',' → logprob: -6.39229679107666
    8. '  
' → logprob: -7.39229679107666
    9. '        
' → logprob: -7.39229679107666
    10. '   ' → logprob: -7.64229679107666

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021182617638260126
    2. 'self' → logprob: -7.127118110656738
    3. '
' → logprob: -7.252118110656738
    4. ' self' → logprob: -8.752118110656738
    5. ',' → logprob: -8.877118110656738
    6. '<|end|>' → logprob: -9.127118110656738
    7. ' ' → logprob: -9.502118110656738
    8. '   ' → logprob: -10.002118110656738
    9. ' 
' → logprob: -10.752118110656738
    10. '	' → logprob: -10.877118110656738

Token 181: ' self' (ID: 1051)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.16444692015647888
    2. 'self' (adapté à ' self') → logprob: -2.1644468307495117
    3. ' end' → logprob: -3.4144468307495117
    4. ' self' → logprob: -5.539446830749512
    5. '       ' → logprob: -15.289446830749512
    6. ' ' → logprob: -16.164447784423828
    7. '
' → logprob: -16.914447784423828
    8. '.end' → logprob: -17.039447784423828
    9. '	end' → logprob: -17.164447784423828
    10. '=end' → logprob: -17.414447784423828

Token 182: '.end' (ID: 10289)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18431638181209564
    2. ' end' → logprob: -2.934316396713257
    3. '.end' → logprob: -3.059316396713257
    4. ' ' → logprob: -3.059316396713257
    5. 'end' → logprob: -4.934316158294678
    6. ' =' → logprob: -5.434316158294678
    7. '=' → logprob: -5.684316158294678
    8. '=end' → logprob: -5.809316158294678
    9. ' .' → logprob: -7.184316158294678
    10. '[end' → logprob: -7.559316158294678

Token 183: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.31326285004615784
    2. ' end' → logprob: -1.3132628202438354
    3. '	end' → logprob: -15.188262939453125
    4. '=end' → logprob: -15.438262939453125
    5. 'start' → logprob: -15.563262939453125
    6. '(end' → logprob: -15.688262939453125
    7. '[end' → logprob: -15.688262939453125
    8. ' ' → logprob: -16.563262939453125
    9. '.end' → logprob: -17.688262939453125
    10. 'endmodule' → logprob: -17.938262939453125

Token 185: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.020949864760041237
    2. ' def' → logprob: -3.8959498405456543
    3. '   ' → logprob: -7.895949840545654
    4. ' ' → logprob: -11.270950317382812
    5. ')' → logprob: -11.645950317382812
    6. '@property' → logprob: -12.145950317382812
    7. '    
' → logprob: -13.270950317382812
    8. '	def' → logprob: -13.645950317382812
    9. ':' → logprob: -14.020950317382812
    10. '<|end|>' → logprob: -14.020950317382812

Token 188: ' intersects' (ID: 198484)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.36336272954940796
    2. ' def' → logprob: -1.2383627891540527
    3. ' vector' → logprob: -5.363362789154053
    4. 'length' → logprob: -5.488362789154053
    5. ' __' → logprob: -5.988362789154053
    6. 'def' → logprob: -7.113362789154053
    7. ' is' → logprob: -7.363362789154053
    8. ' reverse' → logprob: -7.738362789154053
    9. ' reversed' → logprob: -7.988362789154053
    10. ' ' → logprob: -8.488362312316895

Token 189: '_segment' (ID: 71041)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0808563232421875
    2. '(' → logprob: -2.5808563232421875
    3. '_with' → logprob: -6.5808563232421875
    4. ' (' → logprob: -8.330856323242188
    5. 'with' → logprob: -8.705856323242188
    6. '_' → logprob: -9.580856323242188
    7. '(
' → logprob: -10.205856323242188
    8. 'self' → logprob: -10.330856323242188
    9. '(

' → logprob: -11.830856323242188
    10. '?' → logprob: -11.955856323242188

Token 190: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001360947615467012
    2. '(' → logprob: -6.626360893249512
    3. ' (' → logprob: -10.876360893249512
    4. '(s' → logprob: -11.876360893249512
    5. '(
' → logprob: -12.626360893249512
    6. 'self' → logprob: -12.876360893249512
    7. '<|end|>' → logprob: -13.251360893249512
    8. 's' → logprob: -14.626360893249512
    9. ' self' → logprob: -15.251360893249512
    10. '(

' → logprob: -15.501360893249512

Token 191: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004553542472422123
    2. '(' → logprob: -6.129553318023682
    3. ',' → logprob: -6.379553318023682
    4. ' (' → logprob: -8.12955379486084
    5. ')(' → logprob: -8.50455379486084
    6. ')' → logprob: -9.12955379486084
    7. 'self' → logprob: -10.12955379486084
    8. ' ,' → logprob: -12.25455379486084
    9. ' ' → logprob: -12.62955379486084
    10. '(
' → logprob: -12.62955379486084

Token 192: ' p' (ID: 275)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.35568493604660034
    2. ' other' → logprob: -1.6056849956512451
    3. 'self' → logprob: -2.480684995651245
    4. 'other' → logprob: -4.230684757232666
    5. ' segment' → logprob: -8.855685234069824
    6. 'segment' → logprob: -9.730685234069824
    7. '(self' → logprob: -10.730685234069824
    8. ' s' → logprob: -10.730685234069824
    9. ',' → logprob: -11.105685234069824
    10. ')' → logprob: -11.230685234069824

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3590902090072632
    2. ':' → logprob: -1.2340902090072632
    3. 'oint' → logprob: -4.984090328216553
    4. ',' → logprob: -6.609090328216553
    5. '_start' → logprob: -7.359090328216553
    6. ')' → logprob: -7.359090328216553
    7. 'oints' → logprob: -7.859090328216553
    8. '):' → logprob: -8.109089851379395
    9. '0' → logprob: -9.234089851379395
    10. ' :' → logprob: -9.734089851379395

Token 194: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019651511684060097
    2. ':' → logprob: -6.751965045928955
    3. ' ,' → logprob: -7.251965045928955
    4. ',p' → logprob: -9.376965522766113
    5. ' p' → logprob: -15.001965522766113
    6. '1' → logprob: -15.626965522766113
    7. ' :' → logprob: -15.751965522766113
    8. 'p' → logprob: -15.876965522766113
    9. ',
' → logprob: -16.126964569091797
    10. ' ' → logprob: -16.626964569091797

Token 195: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.1019817590713501
    2. 'Point' → logprob: -2.3519816398620605
    3. ' '' → logprob: -6.6019816398620605
    4. ''' → logprob: -8.726982116699219
    5. '_Point' → logprob: -9.351982116699219
    6. '	Point' → logprob: -10.101982116699219
    7. ')' → logprob: -10.351982116699219
    8. '(Point' → logprob: -10.976982116699219
    9. ' ' → logprob: -11.351982116699219
    10. ''s' → logprob: -11.351982116699219

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010556964843999594
    2. ' ,' → logprob: -9.250105857849121
    3. ',p' → logprob: -11.625105857849121
    4. ' p' → logprob: -16.125104904174805
    5. '‌,' → logprob: -16.125104904174805
    6. ')' → logprob: -16.375104904174805
    7. ',
' → logprob: -17.125104904174805
    8. 'p' → logprob: -17.625104904174805
    9. 's' → logprob: -18.000104904174805
    10. ':' → logprob: -18.375104904174805

Token 197: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.06993798911571503
    2. 'p' → logprob: -2.6949379444122314
    3. ' ' → logprob: -14.069937705993652
    4. ' ' → logprob: -14.694937705993652
    5. '	p' → logprob: -14.944937705993652
    6. ')' → logprob: -15.944937705993652
    7. ' q' → logprob: -17.31993865966797
    8. ' п' → logprob: -17.44493865966797
    9. ' 
' → logprob: -18.19493865966797
    10. ',' → logprob: -18.19493865966797

Token 198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. 'oint' → logprob: -13.12500286102295
    3. 'oints' → logprob: -14.87500286102295
    4. ')' → logprob: -15.37500286102295
    5. '₂' → logprob: -16.000003814697266
    6. '```' → logprob: -17.000003814697266
    7. '۲' → logprob: -17.250003814697266
    8. '２' → logprob: -17.500003814697266
    9. ' ' → logprob: -17.875003814697266
    10. 'p' → logprob: -18.250003814697266

Token 199: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025043170899152756
    2. '):' → logprob: -6.127504348754883
    3. ':' → logprob: -8.377504348754883
    4. ' )' → logprob: -9.502504348754883
    5. '):
' → logprob: -11.877504348754883
    6. ',' → logprob: -12.377504348754883
    7. ' ):' → logprob: -13.377504348754883
    8. ' ' → logprob: -14.002504348754883
    9. '   ' → logprob: -14.877504348754883
    10. ')->' → logprob: -15.377504348754883

Token 200: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.11847438663244247
    2. 'Point' → logprob: -2.2434744834899902
    3. ' p' → logprob: -5.86847448348999
    4. ')' → logprob: -5.99347448348999
    5. 'p' → logprob: -9.493474006652832
    6. ' ' → logprob: -9.618474006652832
    7. ' )' → logprob: -9.993474006652832
    8. '	Point' → logprob: -9.993474006652832
    9. '_Point' → logprob: -10.743474006652832
    10. '.Point' → logprob: -11.368474006652832

Token 201: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. ' )' → logprob: -11.500011444091797
    3. '):' → logprob: -14.000011444091797
    4. '')' → logprob: -14.500011444091797
    5. ')->' → logprob: -16.125011444091797
    6. ':' → logprob: -16.625011444091797
    7. '):
' → logprob: -17.500011444091797
    8. '`)' → logprob: -17.875011444091797
    9. ',)' → logprob: -18.250011444091797
    10. ' ' → logprob: -18.375011444091797

Token 202: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24425587058067322
    2. ')' → logprob: -1.8692559003829956
    3. ' ->' → logprob: -2.869255781173706
    4. '->' → logprob: -5.744256019592285
    5. ' :' → logprob: -6.619256019592285
    6. ')->' → logprob: -7.369256019592285
    7. '):' → logprob: -7.744256019592285
    8. ' )' → logprob: -9.994256019592285
    9. ' ' → logprob: -10.494256019592285
    10. '   ' → logprob: -10.744256019592285

Token 203: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.020579494535923004
    2. 'bool' → logprob: -3.8955795764923096
    3. ' ' → logprob: -10.52057933807373
    4. ''' → logprob: -13.02057933807373
    5. ' '' → logprob: -13.52057933807373
    6. ' Optional' → logprob: -13.64557933807373
    7. ' True' → logprob: -13.77057933807373
    8. '	bool' → logprob: -13.77057933807373
    9. '"' → logprob: -14.39557933807373
    10. ' ' → logprob: -14.52057933807373

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034380643046461046
    2. '):' → logprob: -8.500344276428223
    3. '():' → logprob: -9.500344276428223
    4. ' :' → logprob: -9.875344276428223
    5. ':
' → logprob: -11.875344276428223
    6. ':**' → logprob: -13.625344276428223
    7. ',' → logprob: -13.625344276428223
    8. ':def' → logprob: -13.875344276428223
    9. '<|end|>' → logprob: -14.000344276428223
    10. ':return' → logprob: -14.375344276428223

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40927284955978394
    2. ':' → logprob: -1.4092729091644287
    3. '
' → logprob: -4.03427267074585
    4. '<|end|>' → logprob: -4.03427267074585
    5. ' 
' → logprob: -4.15927267074585
    6. ' ' → logprob: -4.78427267074585
    7. '        
' → logprob: -5.15927267074585
    8. ',' → logprob: -5.40927267074585
    9. ')' → logprob: -5.53427267074585
    10. ':
' → logprob: -5.53427267074585

Token 206: ' """' (ID: 9280)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.781697154045105
    2. 'def' → logprob: -0.781697154045105
    3. '       ' → logprob: -3.5316972732543945
    4. ' d' → logprob: -3.9066972732543945
    5. ' def' → logprob: -3.9066972732543945
    6. '   ' → logprob: -4.4066972732543945
    7. '#' → logprob: -6.7816972732543945
    8. 'den' → logprob: -7.6566972732543945
    9. 'dx' → logprob: -8.156697273254395
    10. 'p' → logprob: -8.781697273254395

Token 207: 'Check' (ID: 4383)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.2261754274368286
    2. 'd' → logprob: -1.6011754274368286
    3. '       ' → logprob: -1.7261754274368286
    4. ' d' → logprob: -2.226175308227539
    5. ' def' → logprob: -2.976175308227539
    6. 'p' → logprob: -3.351175308227539
    7. 'def' → logprob: -3.601175308227539
    8. '#' → logprob: -3.976175308227539
    9. '   ' → logprob: -4.101175308227539
    10. ' #' → logprob: -4.351175308227539

Token 208: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00403898349031806
    2. ' whether' → logprob: -5.6290388107299805
    3. ' for' → logprob: -9.12903881072998
    4. ' ' → logprob: -9.37903881072998
    5. ' the' → logprob: -9.75403881072998
    6. ' self' → logprob: -10.12903881072998
    7. '       ' → logprob: -10.62903881072998
    8. ' (' → logprob: -10.75403881072998
    9. 'if' → logprob: -11.12903881072998
    10. '   ' → logprob: -11.12903881072998

Token 209: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6035476922988892
    2. ' self' → logprob: -1.4785476922988892
    3. 'self' → logprob: -2.3535475730895996
    4. ' p' → logprob: -3.1035475730895996
    5. ' (' → logprob: -3.2285475730895996
    6. 'the' → logprob: -4.3535475730896
    7. '(self' → logprob: -4.4785475730896
    8. ' ' → logprob: -5.7285475730896
    9. '(p' → logprob: -5.8535475730896
    10. ' edges' → logprob: -5.8535475730896

Token 210: ' edge' (ID: 11165)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8446727991104126
    2. ' segment' → logprob: -0.8446727991104126
    3. ' edge' → logprob: -2.344672679901123
    4. ' line' → logprob: -3.219672679901123
    5. ' edges' → logprob: -6.469672679901123
    6. ' )' → logprob: -6.969672679901123
    7. ')' → logprob: -7.344672679901123
    8. ' intersects' → logprob: -7.969672679901123
    9. 'segment' → logprob: -8.219673156738281
    10. '<|end|>' → logprob: -8.719673156738281

Token 211: ' intersects' (ID: 198484)
  Prédit: ' intersects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersects' → logprob: -0.016808319836854935
    2. ' ' → logprob: -4.39180850982666
    3. '.inter' → logprob: -6.76680850982666
    4. ' intersect' → logprob: -7.14180850982666
    5. '   ' → logprob: -7.89180850982666
    6. '.' → logprob: -7.89180850982666
    7. '<|end|>' → logprob: -8.51680850982666
    8. 'inter' → logprob: -8.51680850982666
    9. ' segments' → logprob: -8.64180850982666
    10. ' overlaps' → logprob: -8.64180850982666

Token 212: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.046016719192266464
    2. ' p' → logprob: -3.5460166931152344
    3. ' a' → logprob: -5.046016693115234
    4. ' with' → logprob: -5.921016693115234
    5. ' this' → logprob: -6.421016693115234
    6. ' ' → logprob: -6.546016693115234
    7. ' any' → logprob: -6.671016693115234
    8. 'the' → logprob: -7.421016693115234
    9. ' )' → logprob: -7.546016693115234
    10. ' (' → logprob: -8.296016693115234

Token 213: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.2643420696258545
    2. ' line' → logprob: -1.5143420696258545
    3. 'segment' → logprob: -4.889342308044434
    4. ' segments' → logprob: -5.889342308044434
    5. ' edge' → logprob: -7.139342308044434
    6. ' edges' → logprob: -8.014342308044434
    7. ' two' → logprob: -8.514342308044434
    8. ' p' → logprob: -8.764342308044434
    9. 'Segment' → logprob: -9.139342308044434
    10. 'segments' → logprob: -9.764342308044434

Token 214: ' p' (ID: 275)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.8704452514648438
    2. ' (' → logprob: -1.2454452514648438
    3. ' p' → logprob: -1.4954452514648438
    4. ' between' → logprob: -2.9954452514648438
    5. ' of' → logprob: -5.620445251464844
    6. ' ' → logprob: -5.870445251464844
    7. '   ' → logprob: -5.995445251464844
    8. '(Point' → logprob: -6.120445251464844
    9. ' from' → logprob: -6.495445251464844
    10. ' [' → logprob: -6.870445251464844

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -13.750000953674316
    3. '2' → logprob: -16.000001907348633
    4. ' ' → logprob: -16.625001907348633
    5. '```' → logprob: -17.750001907348633
    6. ')' → logprob: -18.000001907348633
    7. ',' → logprob: -18.562501907348633
    8. 'oints' → logprob: -19.062501907348633
    9. '   ' → logprob: -19.312501907348633
    10. '[' → logprob: -19.562501907348633

Token 216: '-p' (ID: 3161)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014408295042812824
    2. ' p' → logprob: -5.264408111572266
    3. ' and' → logprob: -5.639408111572266
    4. ' ,' → logprob: -5.639408111572266
    5. ' ' → logprob: -7.014408111572266
    6. ' or' → logprob: -8.264408111572266
    7. '<|end|>' → logprob: -8.639408111572266
    8. 'p' → logprob: -8.764408111572266
    9. ',p' → logprob: -9.014408111572266
    10. ' -' → logprob: -9.014408111572266

Token 217: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47664374113082886
    2. '1' → logprob: -0.9766437411308289
    3. ' ' → logprob: -6.1016435623168945
    4. 'oints' → logprob: -9.351643562316895
    5. '  ' → logprob: -9.726643562316895
    6. '   ' → logprob: -10.101643562316895
    7. 'oint' → logprob: -10.476643562316895
    8. ')' → logprob: -10.601643562316895
    9. '```' → logprob: -10.976643562316895
    10. ',' → logprob: -10.976643562316895

Token 218: '"""
' (ID: 15611)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12141325324773788
    2. '.' → logprob: -2.371413230895996
    3. ')' → logprob: -4.371413230895996
    4. '"""' → logprob: -5.996413230895996
    5. ' """' → logprob: -6.371413230895996
    6. ':
' → logprob: -6.871413230895996
    7. ',' → logprob: -6.996413230895996
    8. '):' → logprob: -7.621413230895996
    9. '."""' → logprob: -7.746413230895996
    10. ' :' → logprob: -8.121413230895996

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2003604769706726
    2. ':' → logprob: -2.2003605365753174
    3. ':
' → logprob: -4.075360298156738
    4. '        
' → logprob: -4.200360298156738
    5. '   ' → logprob: -4.575360298156738
    6. '
' → logprob: -4.575360298156738
    7. '    
' → logprob: -5.075360298156738
    8. ' 
' → logprob: -5.700360298156738
    9. '  
' → logprob: -5.700360298156738
    10. ')' → logprob: -6.325360298156738

Token 220: ' def' (ID: 1056)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10246358811855316
    2. 'def' (adapté à ' def') → logprob: -2.352463483810425
    3. '   ' → logprob: -6.977463722229004
    4. '#' → logprob: -7.977463722229004
    5. '       ' → logprob: -7.977463722229004
    6. 'dx' → logprob: -7.977463722229004
    7. 'den' → logprob: -9.227463722229004
    8. 'p' → logprob: -9.477463722229004
    9. 'a' → logprob: -10.352463722229004
    10. 'dir' → logprob: -10.852463722229004

Token 221: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.5235375165939331
    2. 'orientation' → logprob: -1.273537516593933
    3. ' cc' → logprob: -3.0235376358032227
    4. 'orient' → logprob: -3.2735376358032227
    5. ' orientation' → logprob: -3.2735376358032227
    6. 'on' → logprob: -6.398537635803223
    7. '_orientation' → logprob: -7.023537635803223
    8. '_cc' → logprob: -8.398537635803223
    9. 'direction' → logprob: -8.648537635803223
    10. ' orient' → logprob: -8.773537635803223

Token 222: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0445127372804563e-05
    2. 'd' → logprob: -12.25001049041748
    3. '   ' → logprob: -13.50001049041748
    4. '_w' → logprob: -14.12501049041748
    5. '       ' → logprob: -14.37501049041748
    6. '

' → logprob: -14.62501049041748
    7. 'ｗ' → logprob: -15.25001049041748
    8. '	w' → logprob: -15.37501049041748
    9. '  ' → logprob: -15.37501049041748
    10. '
' → logprob: -15.62501049041748

Token 223: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.18609033524990082
    2. '(p' → logprob: -1.811090350151062
    3. '(' → logprob: -5.311090469360352
    4. '(A' → logprob: -6.686090469360352
    5. '(self' → logprob: -10.186090469360352
    6. ' (' → logprob: -10.561090469360352
    7. '(
' → logprob: -10.936090469360352
    8. '(P' → logprob: -11.061090469360352
    9. '(s' → logprob: -11.311090469360352
    10. '(x' → logprob: -11.686090469360352

Token 224: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004080315411556512
    2. ',a' → logprob: -8.750408172607422
    3. ' ,' → logprob: -9.125408172607422
    4. ',b' → logprob: -9.250408172607422
    5. ',p' → logprob: -10.125408172607422
    6. '(a' → logprob: -13.750408172607422
    7. 'a' → logprob: -14.250408172607422
    8. ',A' → logprob: -14.375408172607422
    9. '   ' → logprob: -14.625408172607422
    10. ',
' → logprob: -15.125408172607422

Token 225: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.011054071597754955
    2. ' Point' → logprob: -4.511054039001465
    3. 'p' → logprob: -13.511054039001465
    4. '	Point' → logprob: -13.511054039001465
    5. '(Point' → logprob: -14.261054039001465
    6. '   ' → logprob: -14.386054039001465
    7. '.Point' → logprob: -14.386054039001465
    8. 'P' → logprob: -14.511054039001465
    9. '_point' → logprob: -15.386054039001465
    10. '_Point' → logprob: -15.761054039001465

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002614550176076591
    2. ' ,' → logprob: -8.750261306762695
    3. ',b' → logprob: -9.375261306762695
    4. ',p' → logprob: -11.375261306762695
    5. ',a' → logprob: -12.375261306762695
    6. ',
' → logprob: -13.500261306762695
    7. '   ' → logprob: -15.000261306762695
    8. '<|end|>' → logprob: -16.000261306762695
    9. ',A' → logprob: -16.250261306762695
    10. ' ' → logprob: -16.250261306762695

Token 227: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029827550053596497
    2. ' b' → logprob: -3.52982759475708
    3. '   ' → logprob: -10.029827117919922
    4. '	b' → logprob: -11.154827117919922
    5. '    ' → logprob: -11.529827117919922
    6. '  ' → logprob: -12.029827117919922
    7. ' ' → logprob: -13.529827117919922
    8. ',b' → logprob: -14.654827117919922
    9. '     ' → logprob: -14.904827117919922
    10. '       ' → logprob: -15.654827117919922

Token 228: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006475433707237244
    2. ' ,' → logprob: -5.506475448608398
    3. ',b' → logprob: -6.881475448608398
    4. ',p' → logprob: -7.006475448608398
    5. ',c' → logprob: -8.756475448608398
    6. ',a' → logprob: -8.881475448608398
    7. ',
' → logprob: -9.881475448608398
    8. '<|end|>' → logprob: -10.631475448608398
    9. '   ' → logprob: -11.131475448608398
    10. ',e' → logprob: -11.381475448608398

Token 229: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.31527793407440186
    2. ' Point' → logprob: -1.3152779340744019
    3. 'c' → logprob: -6.315278053283691
    4. ' ' → logprob: -9.690278053283691
    5. '	Point' → logprob: -10.190278053283691
    6. ' c' → logprob: -10.315278053283691
    7. '   ' → logprob: -10.690278053283691
    8. '  ' → logprob: -11.190278053283691
    9. 'Points' → logprob: -12.065278053283691
    10. 'a' → logprob: -12.065278053283691

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015455135144293308
    2. ' ,' → logprob: -8.875154495239258
    3. ',c' → logprob: -11.625154495239258
    4. ',b' → logprob: -13.125154495239258
    5. ',
' → logprob: -13.375154495239258
    6. ',p' → logprob: -13.375154495239258
    7. ',a' → logprob: -15.625154495239258
    8. ')' → logprob: -16.000154495239258
    9. ',

' → logprob: -16.000154495239258
    10. '   ' → logprob: -16.625154495239258

Token 231: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009771316312253475
    2. ' c' → logprob: -4.634771347045898
    3. '   ' → logprob: -11.884771347045898
    4. '  ' → logprob: -12.634771347045898
    5. ' ' → logprob: -12.759771347045898
    6. '	c' → logprob: -13.009771347045898
    7. '    ' → logprob: -16.2597713470459
    8. '       ' → logprob: -17.2597713470459
    9. '     ' → logprob: -17.6347713470459
    10. '<|end|>' → logprob: -18.0097713470459

Token 232: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6087518334388733
    2. ')' → logprob: -1.4837517738342285
    3. '):' → logprob: -1.4837517738342285
    4. '):
' → logprob: -6.1087517738342285
    5. ',' → logprob: -9.233752250671387
    6. '   ' → logprob: -10.733752250671387
    7. '):

' → logprob: -10.983752250671387
    8. ' ):' → logprob: -11.483752250671387
    9. ' ' → logprob: -11.983752250671387
    10. ' )' → logprob: -12.233752250671387

Token 233: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.20143233239650726
    2. ' Point' → logprob: -1.7014323472976685
    3. ' ' → logprob: -11.826432228088379
    4. '	Point' → logprob: -12.451432228088379
    5. '   ' → logprob: -12.701432228088379
    6. ')' → logprob: -13.701432228088379
    7. '(Point' → logprob: -13.951432228088379
    8. '_Point' → logprob: -14.076432228088379
    9. '  ' → logprob: -14.576432228088379
    10. '.Point' → logprob: -14.826432228088379

Token 234: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001723488443531096
    2. '):' → logprob: -6.626723289489746
    3. '):
' → logprob: -7.876723289489746
    4. ' )' → logprob: -11.251723289489746
    5. '   ' → logprob: -13.126723289489746
    6. ')->' → logprob: -14.001723289489746
    7. ':' → logprob: -14.251723289489746
    8. '):
' → logprob: -14.751723289489746
    9. '):

' → logprob: -14.876723289489746
    10. ')
' → logprob: -15.126723289489746

Token 235: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10908811539411545
    2. ')' → logprob: -2.609088182449341
    3. ' ->' → logprob: -4.359087944030762
    4. '):' → logprob: -4.734087944030762
    5. '->' → logprob: -5.609087944030762
    6. '   ' → logprob: -6.109087944030762
    7. '):
' → logprob: -6.859087944030762
    8. ')->' → logprob: -7.234087944030762
    9. ':
' → logprob: -8.359087944030762
    10. ',' → logprob: -9.984087944030762

Token 236: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0005066845333203673
    2. 'int' → logprob: -7.75050687789917
    3. ' bool' → logprob: -9.875506401062012
    4. 'float' → logprob: -10.625506401062012
    5. '	bool' → logprob: -16.000507354736328
    6. '   ' → logprob: -17.375507354736328
    7. '<bool' → logprob: -17.375507354736328
    8. 'Bool' → logprob: -17.875507354736328
    9. ' ' → logprob: -18.000507354736328
    10. ' int' → logprob: -18.125507354736328

Token 237: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01435024756938219
    2. '       ' → logprob: -4.889350414276123
    3. ':
' → logprob: -5.764350414276123
    4. ',' → logprob: -6.764350414276123
    5. '):' → logprob: -7.264350414276123
    6. '<|end|>' → logprob: -7.389350414276123
    7. '):
' → logprob: -8.014349937438965
    8. ':return' → logprob: -8.514349937438965
    9. '   ' → logprob: -8.764349937438965
    10. '<|end|>' → logprob: -9.139349937438965

Token 238: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7619197964668274
    2. '           ' → logprob: -0.7619197964668274
    3. ' return' → logprob: -3.2619197368621826
    4. 'return' → logprob: -4.511919975280762
    5. '        ' → logprob: -5.136919975280762
    6. '               ' → logprob: -5.886919975280762
    7. '   ' → logprob: -6.011919975280762
    8. ' ' → logprob: -6.511919975280762
    9. '<|end|>' → logprob: -7.511919975280762
    10. ':' → logprob: -8.011919975280762

Token 239: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2530512511730194
    2. ' return' → logprob: -1.5030512809753418
    3. '           ' → logprob: -7.128051280975342
    4. '       ' → logprob: -8.628050804138184
    5. '	return' → logprob: -9.003050804138184
    6. '   ' → logprob: -11.378050804138184
    7. ' ' → logprob: -13.628050804138184
    8. '	       ' → logprob: -14.253050804138184
    9. '(return' → logprob: -14.378050804138184
    10. '	   ' → logprob: -14.378050804138184

Token 240: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.11916697770357132
    2. '(cc' → logprob: -3.2441670894622803
    3. '(self' → logprob: -3.6191670894622803
    4. ' (' → logprob: -3.8691670894622803
    5. '(a' → logprob: -4.244166851043701
    6. '((' → logprob: -4.869166851043701
    7. '(' → logprob: -6.994166851043701
    8. '(cp' → logprob: -7.244166851043701
    9. '(C' → logprob: -7.619166851043701
    10. '(ct' → logprob: -9.11916732788086

Token 241: 'b' (ID: 65)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07895247638225555
    2. '(c' → logprob: -2.5789525508880615
    3. ' c' → logprob: -10.82895278930664
    4. ' (' → logprob: -11.07895278930664
    5. 'b' → logprob: -11.32895278930664
    6. '(b' → logprob: -11.70395278930664
    7. ')c' → logprob: -13.20395278930664
    8. 'cc' → logprob: -13.57895278930664
    9. '   ' → logprob: -13.70395278930664
    10. '(cc' → logprob: -14.45395278930664

Token 242: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5928776860237122
    2. '-' → logprob: -1.4678776264190674
    3. '.x' → logprob: -1.5928776264190674
    4. ' ' → logprob: -5.4678778648376465
    5. '.y' → logprob: -5.7178778648376465
    6. 'x' → logprob: -5.8428778648376465
    7. '-x' → logprob: -6.8428778648376465
    8. '.' → logprob: -7.8428778648376465
    9. '.sub' → logprob: -8.092877388000488
    10. 'sub' → logprob: -8.217877388000488

Token 243: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023267259821295738
    2. ' a' → logprob: -3.7732672691345215
    3. '	a' → logprob: -11.398266792297363
    4. ')a' → logprob: -11.773266792297363
    5. ')' → logprob: -13.898266792297363
    6. 'c' → logprob: -14.023266792297363
    7. ' ' → logprob: -14.773266792297363
    8. '<|end|>' → logprob: -15.398266792297363
    9. '>a' → logprob: -15.523266792297363
    10. ''a' → logprob: -16.77326774597168

Token 244: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00042447797022759914
    2. ')' → logprob: -8.0004243850708
    3. ' ).' → logprob: -9.5004243850708
    4. ' cross' → logprob: -12.5004243850708
    5. ').__' → logprob: -12.8754243850708
    6. '.cross' → logprob: -13.0004243850708
    7. ')
' → logprob: -13.2504243850708
    8. 'cross' → logprob: -13.6254243850708
    9. 'Cross' → logprob: -14.1254243850708
    10. ' ' → logprob: -15.0004243850708

Token 245: 'cross' (ID: 52400)
  Prédit: 'cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -1.3425219549390022e-05
    2. ' cross' → logprob: -11.25001335144043
    3. '.cross' → logprob: -15.25001335144043
    4. 'cc' → logprob: -16.50001335144043
    5. 'c' → logprob: -18.25001335144043
    6. '_cross' → logprob: -19.75001335144043
    7. 'Cross' → logprob: -20.12501335144043
    8. '1' → logprob: -20.12501335144043
    9. 'point' → logprob: -20.50001335144043
    10. '0' → logprob: -21.00001335144043

Token 246: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.006715728435665369
    2. ' (' → logprob: -5.006715774536133
    3. '(' → logprob: -15.006715774536133
    4. '(p' → logprob: -17.131715774536133
    5. ' ' → logprob: -17.256715774536133
    6. 'c' → logprob: -18.256715774536133
    7. ' c' → logprob: -18.381715774536133
    8. '   ' → logprob: -18.631715774536133
    9. '(cc' → logprob: -19.256715774536133
    10. '(C' → logprob: -19.506715774536133

Token 247: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47408074140548706
    2. '-' → logprob: -0.9740807414054871
    3. '-b' → logprob: -13.099081039428711
    4. ' ' → logprob: -13.849081039428711
    5. 'b' → logprob: -15.849081039428711
    6. '-
' → logprob: -16.22408103942871
    7. ' -
' → logprob: -16.34908103942871
    8. ')' → logprob: -16.59908103942871
    9. '-p' → logprob: -17.09908103942871
    10. '-start' → logprob: -17.34908103942871

Token 248: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012840415351092815
    2. 'b' → logprob: -4.762840270996094
    3. ' a' → logprob: -5.512840270996094
    4. ' b' → logprob: -8.637840270996094
    5. '	a' → logprob: -12.887840270996094
    6. ')a' → logprob: -13.637840270996094
    7. ' ' → logprob: -14.387840270996094
    8. ')' → logprob: -15.512840270996094
    9. '_a' → logprob: -16.012840270996094
    10. '	b' → logprob: -16.262840270996094

Token 249: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029470553272403777
    2. ' )' → logprob: -8.50029468536377
    3. ')>' → logprob: -9.37529468536377
    4. ')>=' → logprob: -12.25029468536377
    5. ')<' → logprob: -13.75029468536377
    6. ')
' → logprob: -15.50029468536377
    7. '0' → logprob: -15.87529468536377
    8. '>' → logprob: -16.375295639038086
    9. ')<=' → logprob: -16.750295639038086
    10. '   ' → logprob: -17.500295639038086

Token 250: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.43442878127098083
    2. '>' → logprob: -1.0594288110733032
    3. ' >=' → logprob: -6.184428691864014
    4. ' <' → logprob: -6.559428691864014
    5. '<' → logprob: -7.059428691864014
    6. '>=' → logprob: -7.559428691864014
    7. ')' → logprob: -8.059429168701172
    8. ' ' → logprob: -8.809429168701172
    9. ' !=' → logprob: -9.059429168701172
    10. '0' → logprob: -9.809429168701172

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '1' → logprob: -18.001928329467773
    4. '   ' → logprob: -19.001928329467773
    5. '۰' → logprob: -20.376928329467773
    6. '  ' → logprob: -21.251928329467773
    7. ' ' → logprob: -21.501928329467773
    8. '000' → logprob: -21.626928329467773
    9. '<|end|>' → logprob: -22.126928329467773
    10. 'sys' → logprob: -22.626928329467773

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '1' → logprob: -18.125139236450195
    4. '   ' → logprob: -20.250139236450195
    5. '۰' → logprob: -20.500139236450195
    6. '<|end|>' → logprob: -20.500139236450195
    7. '000' → logprob: -20.625139236450195
    8. '  ' → logprob: -21.000139236450195
    9. '
' → logprob: -21.125139236450195
    10. '.' → logprob: -21.375139236450195

Token 253: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0416591167449951
    2. '<|end|>' → logprob: -1.1666591167449951
    3. '
' → logprob: -1.2916591167449951
    4. ')' → logprob: -3.416659116744995
    5. ' ' → logprob: -5.291659355163574
    6. '\n' → logprob: -5.416659355163574
    7. '   ' → logprob: -5.916659355163574
    8. '<|end|>' → logprob: -6.291659355163574
    9. ' 
' → logprob: -6.416659355163574
    10. '.' → logprob: -6.416659355163574

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004189044702798128
    2. '
' → logprob: -6.6291890144348145
    3. ')' → logprob: -7.3791890144348145
    4. '   ' → logprob: -7.5041890144348145
    5. '	' → logprob: -7.7541890144348145
    6. '        
' → logprob: -7.8791890144348145
    7. ',' → logprob: -8.379189491271973
    8. '  
' → logprob: -9.254189491271973
    9. '    
' → logprob: -9.254189491271973
    10. '<|end|>' → logprob: -9.254189491271973

Token 255: ' A' (ID: 355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3958996832370758
    2. 'a' → logprob: -1.8958996534347534
    3. 'return' → logprob: -1.8958996534347534
    4. 'o' → logprob: -5.020899772644043
    5. ' return' → logprob: -5.145899772644043
    6. 'p' → logprob: -5.770899772644043
    7. 'A' (adapté à ' A') → logprob: -5.770899772644043
    8. 's' → logprob: -6.020899772644043
    9. ' a' → logprob: -6.145899772644043
    10. ' o' → logprob: -7.395899772644043

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6915792226791382
    2. ' =' → logprob: -0.8165792226791382
    3. ' ,' → logprob: -2.9415793418884277
    4. '=' → logprob: -5.566579341888428
    5. '   ' → logprob: -8.19157886505127
    6. '       ' → logprob: -8.44157886505127
    7. '  ' → logprob: -10.31657886505127
    8. ' ' → logprob: -10.56657886505127
    9. '=start' → logprob: -10.56657886505127
    10. '    ' → logprob: -11.19157886505127

Token 257: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4287654161453247
    2. ' B' → logprob: -1.0537654161453247
    3. ' self' → logprob: -11.303765296936035
    4. 'b' → logprob: -11.303765296936035
    5. 'self' → logprob: -11.303765296936035
    6. ' ' → logprob: -12.053765296936035
    7. 'A' → logprob: -12.303765296936035
    8. ' =' → logprob: -12.428765296936035
    9. '   ' → logprob: -12.678765296936035
    10. '       ' → logprob: -13.428765296936035

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09907325357198715
    2. '=' → logprob: -2.4740731716156006
    3. ',' → logprob: -4.59907341003418
    4. ' ,' → logprob: -11.09907341003418
    5. ' ' → logprob: -12.97407341003418
    6. '    ' → logprob: -13.59907341003418
    7. '   ' → logprob: -13.97407341003418
    8. ')' → logprob: -13.97407341003418
    9. '=A' → logprob: -15.59907341003418
    10. '  ' → logprob: -15.72407341003418

Token 259: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2254592329263687
    2. ' self' → logprob: -1.6004592180252075
    3. '(self' → logprob: -10.975459098815918
    4. 'p' → logprob: -12.225459098815918
    5. '	self' → logprob: -12.350459098815918
    6. ' ' → logprob: -12.350459098815918
    7. '   ' → logprob: -12.350459098815918
    8. ' p' → logprob: -12.725459098815918
    9. '       ' → logprob: -13.350459098815918
    10. '[self' → logprob: -13.475459098815918

Token 260: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0002933942887466401
    2. '.' → logprob: -8.375293731689453
    3. 'start' → logprob: -10.125293731689453
    4. '.end' → logprob: -11.125293731689453
    5. ' .' → logprob: -12.375293731689453
    6. '.s' → logprob: -13.750293731689453
    7. '[start' → logprob: -14.875293731689453
    8. '.stop' → logprob: -15.125293731689453
    9. '	start' → logprob: -15.250293731689453
    10. ' start' → logprob: -15.250293731689453

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011121392250061035
    2. ' ,' → logprob: -4.5111212730407715
    3. ',p' → logprob: -10.51112174987793
    4. ' ' → logprob: -11.13612174987793
    5. '<|end|>' → logprob: -11.26112174987793
    6. ',
' → logprob: -12.13612174987793
    7. ',end' → logprob: -13.13612174987793
    8. '
' → logprob: -13.38612174987793
    9. ',A' → logprob: -13.38612174987793
    10. '),' → logprob: -13.63612174987793

Token 262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2255159467458725
    2. ' self' → logprob: -1.6005159616470337
    3. '   ' → logprob: -10.475516319274902
    4. '       ' → logprob: -10.475516319274902
    5. ' ' → logprob: -10.725516319274902
    6. '    ' → logprob: -12.100516319274902
    7. 's' → logprob: -12.350516319274902
    8. '	self' → logprob: -12.475516319274902
    9. '  ' → logprob: -13.100516319274902
    10. '           ' → logprob: -13.225516319274902

Token 263: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.000351670227246359
    2. 'end' → logprob: -8.250351905822754
    3. '.' → logprob: -9.375351905822754
    4. ' .' → logprob: -12.625351905822754
    5. ' end' → logprob: -14.125351905822754
    6. ' ' → logprob: -14.500351905822754
    7. '   ' → logprob: -15.000351905822754
    8. '	end' → logprob: -15.250351905822754
    9. '  ' → logprob: -16.125350952148438
    10. '.
' → logprob: -16.125350952148438

Token 264: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2638658583164215
    2. '       ' → logprob: -1.6388658285140991
    3. '<|end|>' → logprob: -4.388865947723389
    4. '        
' → logprob: -4.763865947723389
    5. '  
' → logprob: -5.013865947723389
    6. ' 
' → logprob: -6.013865947723389
    7. ',' → logprob: -6.513865947723389
    8. '    
' → logprob: -6.638865947723389
    9. '<|end|>' → logprob: -6.763865947723389
    10. ' ' → logprob: -7.138865947723389

Token 265: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0678241029381752
    2. '       ' → logprob: -3.942824125289917
    3. '  
' → logprob: -3.942824125289917
    4. '<|end|>' → logprob: -4.192823886871338
    5. ' 
' → logprob: -5.067823886871338
    6. '        
' → logprob: -5.942823886871338
    7. '    
' → logprob: -6.567823886871338
    8. '   ' → logprob: -8.317824363708496
    9. ' if' → logprob: -8.317824363708496
    10. '   
' → logprob: -8.692824363708496

Token 266: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8758541345596313
    2. '       ' → logprob: -1.6258541345596313
    3. 'd' → logprob: -2.000854015350342
    4. 'if' → logprob: -2.625854015350342
    5. ' return' → logprob: -3.125854015350342
    6. 'o' → logprob: -3.125854015350342
    7. ' if' → logprob: -3.625854015350342
    8. 'c' → logprob: -4.125854015350342
    9. 'cc' → logprob: -4.500854015350342
    10. ' d' → logprob: -4.750854015350342

Token 267: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5803295969963074
    2. '(cc' → logprob: -0.9553295969963074
    3. ' cc' → logprob: -3.080329656600952
    4. 'cc' → logprob: -5.205329418182373
    5. '(' → logprob: -5.580329418182373
    6. ' (
' → logprob: -9.330329895019531
    7. '(
' → logprob: -9.705329895019531
    8. '   ' → logprob: -9.830329895019531
    9. ' ((' → logprob: -9.955329895019531
    10. '((' → logprob: -9.955329895019531

Token 268: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0007235141238197684
    2. ' cc' → logprob: -7.250723361968994
    3. '(cc' → logprob: -11.250723838806152
    4. '	cc' → logprob: -15.125723838806152
    5. '   ' → logprob: -15.625723838806152
    6. '
' → logprob: -16.750722885131836
    7. ')' → logprob: -17.375722885131836
    8. '_cc' → logprob: -17.625722885131836
    9. 'ccc' → logprob: -18.250722885131836
    10. '  ' → logprob: -18.875722885131836

Token 269: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.2664456789934775e-06
    2. 'W' → logprob: -15.000000953674316
    3. '   ' → logprob: -16.125001907348633
    4. ' w' → logprob: -16.375001907348633
    5. 'wp' → logprob: -16.625001907348633
    6. 'wv' → logprob: -16.875001907348633
    7. 'wap' → logprob: -17.000001907348633
    8. '_w' → logprob: -17.062501907348633
    9. 'wb' → logprob: -17.187501907348633
    10. '       ' → logprob: -17.187501907348633

Token 270: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0001532401074655354
    2. '(p' → logprob: -9.625153541564941
    3. '(' → logprob: -10.250153541564941
    4. ')(' → logprob: -11.000153541564941
    5. ')' → logprob: -11.250153541564941
    6. '(a' → logprob: -12.000153541564941
    7. '(B' → logprob: -12.375153541564941
    8. 'A' → logprob: -12.875153541564941
    9. 'p' → logprob: -13.000153541564941
    10. '(P' → logprob: -13.000153541564941

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015546124428510666
    2. '(A' → logprob: -5.0155463218688965
    3. ' ,' → logprob: -5.8905463218688965
    4. ',p' → logprob: -6.0155463218688965
    5. ',A' → logprob: -6.0155463218688965
    6. '(p' → logprob: -7.1405463218688965
    7. '(' → logprob: -9.140545845031738
    8. 'p' → logprob: -9.515545845031738
    9. ' p' → logprob: -10.015545845031738
    10. '
' → logprob: -10.765545845031738

Token 272: ' p' (ID: 275)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2205677479505539
    2. 'p' → logprob: -2.3455677032470703
    3. ' B' → logprob: -2.3455677032470703
    4. ' p' → logprob: -5.09556770324707
    5. 'P' → logprob: -8.97056770324707
    6. ' ' → logprob: -10.47056770324707
    7. '	B' → logprob: -10.59556770324707
    8. 'A' → logprob: -12.09556770324707
    9. ',B' → logprob: -12.15806770324707
    10. '   ' → logprob: -12.28306770324707

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. '2' → logprob: -10.875020980834961
    3. 'a' → logprob: -15.062520980834961
    4. 'p' → logprob: -15.562520980834961
    5. 'oints' → logprob: -15.625020980834961
    6. ')' → logprob: -16.00002098083496
    7. 'r' → logprob: -16.31252098083496
    8. ',' → logprob: -16.62502098083496
    9. 's' → logprob: -16.75002098083496
    10. '```' → logprob: -16.81252098083496

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013851166004315019
    2. ' ,' → logprob: -7.12638521194458
    3. ',p' → logprob: -7.62638521194458
    4. 'p' → logprob: -9.876384735107422
    5. ',B' → logprob: -10.751384735107422
    6. ' p' → logprob: -11.751384735107422
    7. ',
' → logprob: -11.751384735107422
    8. 'B' → logprob: -13.251384735107422
    9. ',b' → logprob: -14.501384735107422
    10. '
' → logprob: -14.751384735107422

Token 275: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005512992385774851
    2. ' p' → logprob: -5.2555131912231445
    3. 'B' → logprob: -8.255513191223145
    4. ' B' → logprob: -11.380513191223145
    5. ' ' → logprob: -13.005513191223145
    6. '
' → logprob: -14.005513191223145
    7. '   ' → logprob: -14.005513191223145
    8. 'q' → logprob: -14.130513191223145
    9. 'P' → logprob: -14.255513191223145
    10. '           ' → logprob: -14.880513191223145

Token 276: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.171581091824919e-05
    2. '1' → logprob: -9.62507152557373
    3. 'p' → logprob: -13.12507152557373
    4. '
' → logprob: -14.18757152557373
    5. 't' → logprob: -14.68757152557373
    6. ' ' → logprob: -15.00007152557373
    7. ')' → logprob: -15.00007152557373
    8. '```' → logprob: -15.12507152557373
    9. '   ' → logprob: -15.56257152557373
    10. 'r' → logprob: -15.93757152557373

Token 277: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028088156250305474
    2. ' )' → logprob: -8.50028133392334
    3. ')!=' → logprob: -9.50028133392334
    4. ')
' → logprob: -13.50028133392334
    5. '   ' → logprob: -14.25028133392334
    6. '))' → logprob: -15.50028133392334
    7. '    ' → logprob: -16.250280380249023
    8. ' ' → logprob: -16.875280380249023
    9. '!=' → logprob: -16.875280380249023
    10. '）' → logprob: -17.375280380249023

Token 278: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0012354647042229772
    2. ' !=' → logprob: -6.751235485076904
    3. ')!=' → logprob: -9.751235008239746
    4. '!=(' → logprob: -12.626235008239746
    5. ')' → logprob: -13.126235008239746
    6. ']!=' → logprob: -14.751235008239746
    7. '!' → logprob: -14.876235008239746
    8. '()!=' → logprob: -15.001235008239746
    9. '   ' → logprob: -15.751235008239746
    10. '!==' → logprob: -15.751235008239746

Token 279: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0067167943343520164
    2. ' cc' → logprob: -5.006716728210449
    3. '	cc' → logprob: -14.25671672821045
    4. '(cc' → logprob: -14.38171672821045
    5. '
' → logprob: -16.256717681884766
    6. '_cc' → logprob: -17.131717681884766
    7. '   ' → logprob: -17.256717681884766
    8. '           ' → logprob: -17.631717681884766
    9. '       ' → logprob: -18.006717681884766
    10. 'ccc' → logprob: -18.256717681884766

Token 280: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.128163257315464e-07
    2. 'cw' → logprob: -15.125
    3. 'wc' → logprob: -17.25
    4. 'W' → logprob: -17.5
    5. 'pw' → logprob: -18.875
    6. 'p' → logprob: -18.875
    7. '	w' → logprob: -19.5
    8. ' w' → logprob: -19.625
    9. 'wv' → logprob: -19.875
    10. 'ww' → logprob: -20.0

Token 281: '(B' (ID: 8409)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.029782773926854134
    2. '(B' → logprob: -3.529782772064209
    3. '(' → logprob: -10.404783248901367
    4. 'A' → logprob: -14.529783248901367
    5. ')(' → logprob: -14.529783248901367
    6. ' (' → logprob: -14.654783248901367
    7. ')' → logprob: -14.904783248901367
    8. 'B' → logprob: -16.654783248901367
    9. '((' → logprob: -17.154783248901367
    10. '(a' → logprob: -17.279783248901367

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004580480512231588
    2. ' ,' → logprob: -6.129580497741699
    3. ',A' → logprob: -6.254580497741699
    4. '(A' → logprob: -7.754580497741699
    5. 'A' → logprob: -10.5045804977417
    6. '(' → logprob: -11.8795804977417
    7. ')' → logprob: -13.0045804977417
    8. ',
' → logprob: -13.2545804977417
    9. '),' → logprob: -13.7545804977417
    10. ' A' → logprob: -13.7545804977417

Token 283: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06197395175695419
    2. ' p' → logprob: -2.811974048614502
    3. ' ' → logprob: -12.436973571777344
    4. 'P' → logprob: -14.436973571777344
    5. ',' → logprob: -15.061973571777344
    6. '<|end|>' → logprob: -15.186973571777344
    7. '(p' → logprob: -15.436973571777344
    8. '<p' → logprob: -15.686973571777344
    9. '   ' → logprob: -15.811973571777344
    10. '	p' → logprob: -16.061973571777344

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '2' → logprob: -13.87500286102295
    3. 'oints' → logprob: -14.25000286102295
    4. 'oint' → logprob: -14.37500286102295
    5. '```' → logprob: -16.375003814697266
    6. 'ython' → logprob: -16.937503814697266
    7. '' → logprob: -17.125003814697266
    8. 's' → logprob: -17.500003814697266
    9. 'a' → logprob: -17.562503814697266
    10. '<|end|>' → logprob: -17.750003814697266

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016384923947043717
    2. ',p' → logprob: -9.000164031982422
    3. ' ,' → logprob: -10.250164031982422
    4. 'p' → logprob: -13.000164031982422
    5. ',
' → logprob: -13.875164031982422
    6. ' p' → logprob: -14.125164031982422
    7. ')' → logprob: -14.250164031982422
    8. '),' → logprob: -15.875164031982422
    9. ',

' → logprob: -16.625164031982422
    10. ',)' → logprob: -16.875164031982422

Token 286: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002613358374219388
    2. ' p' → logprob: -8.250261306762695
    3. '2' → logprob: -17.000261306762695
    4. ')p' → logprob: -17.625261306762695
    5. ')' → logprob: -18.625261306762695
    6. ' ' → logprob: -19.500261306762695
    7. '   ' → logprob: -19.875261306762695
    8. '<p' → logprob: -20.500261306762695
    9. '	p' → logprob: -21.250261306762695
    10. 'py' → logprob: -21.500261306762695

Token 287: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4849443838757e-06
    2. 'p' → logprob: -12.625004768371582
    3. ' ' → logprob: -15.812504768371582
    4. '   ' → logprob: -15.812504768371582
    5. '₂' → logprob: -16.187503814697266
    6. '```' → logprob: -16.250003814697266
    7. ')' → logprob: -16.562503814697266
    8. 's' → logprob: -16.625003814697266
    9. '_' → logprob: -16.625003814697266
    10. ' p' → logprob: -17.062503814697266

Token 288: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018816407769918442
    2. ' )' → logprob: -4.0188164710998535
    3. '))' → logprob: -7.7688164710998535
    4. ' and' → logprob: -8.393815994262695
    5. ' ))' → logprob: -11.893815994262695
    6. ')
' → logprob: -12.268815994262695
    7. 'and' → logprob: -12.893815994262695
    8. ' )
' → logprob: -13.393815994262695
    9. '),' → logprob: -15.268815994262695
    10. '       ' → logprob: -15.268815994262695

Token 289: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0013272607466205955
    2. 'and' → logprob: -6.626327037811279
    3. '    ' → logprob: -14.626327514648438
    4. ' ' → logprob: -14.876327514648438
    5. ' or' → logprob: -15.626327514648438
    6. '        ' → logprob: -15.876327514648438
    7. '	and' → logprob: -16.126327514648438
    8. ' ' → logprob: -17.001327514648438
    9. '   ' → logprob: -17.251327514648438
    10. '      ' → logprob: -17.501327514648438

Token 290: ' (' (ID: 350)
  Prédit: '(cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cc' → logprob: -0.38687971234321594
    2. ' (' → logprob: -1.1368796825408936
    3. '(' → logprob: -12.011879920959473
    4. '(c' → logprob: -14.011879920959473
    5. ' ' → logprob: -14.886879920959473
    6. ' cc' → logprob: -15.136879920959473
    7. '(pc' → logprob: -15.761879920959473
    8. '   ' → logprob: -16.011878967285156
    9. '(CC' → logprob: -16.011878967285156
    10. '
' → logprob: -16.261878967285156

Token 291: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.01478445902466774
    2. ' cc' → logprob: -4.264784336090088
    3. '(cc' → logprob: -7.389784336090088
    4. '	cc' → logprob: -13.639784812927246
    5. ' (' → logprob: -14.264784812927246
    6. 'ccc' → logprob: -14.764784812927246
    7. '   ' → logprob: -14.889784812927246
    8. '_cc' → logprob: -14.889784812927246
    9. ' ' → logprob: -16.76478385925293
    10. '       ' → logprob: -16.88978385925293

Token 292: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.088346359931165e-07
    2. 'W' → logprob: -14.500000953674316
    3. 'cw' → logprob: -15.500000953674316
    4. 'p' → logprob: -16.0
    5. 'wv' → logprob: -18.25
    6. 'wc' → logprob: -18.25
    7. 'ow' → logprob: -18.75
    8. '<w' → logprob: -19.0
    9. '```' → logprob: -19.25
    10. '(w' → logprob: -19.75

Token 293: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5233597159385681
    2. '(p' → logprob: -0.8983597159385681
    3. 'p' → logprob: -8.773359298706055
    4. '(' → logprob: -10.398359298706055
    5. '(a' → logprob: -10.523359298706055
    6. 'A' → logprob: -11.398359298706055
    7. ')' → logprob: -12.273359298706055
    8. '(P' → logprob: -13.023359298706055
    9. ' (' → logprob: -13.398359298706055
    10. '   ' → logprob: -14.148359298706055

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043710620957426727
    2. ',p' → logprob: -8.625436782836914
    3. '(B' → logprob: -9.500436782836914
    4. '(p' → logprob: -9.625436782836914
    5. ',B' → logprob: -10.000436782836914
    6. 'p' → logprob: -10.625436782836914
    7. ' ,' → logprob: -10.750436782836914
    8. '(A' → logprob: -11.875436782836914
    9. ' p' → logprob: -12.250436782836914
    10. '<|end|>' → logprob: -12.375436782836914

Token 295: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0041579375974833965
    2. ' B' → logprob: -5.504158020019531
    3. '(B' → logprob: -9.504158020019531
    4. 'p' → logprob: -13.254158020019531
    5. '	B' → logprob: -13.504158020019531
    6. '   ' → logprob: -14.004158020019531
    7. ' ' → logprob: -14.754158020019531
    8. ',' → logprob: -15.254158020019531
    9. ')' → logprob: -15.504158020019531
    10. ',B' → logprob: -15.879158020019531

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004265250638127327
    2. 'p' → logprob: -5.504265308380127
    3. ',p' → logprob: -8.879264831542969
    4. ' ,' → logprob: -10.504264831542969
    5. ' p' → logprob: -10.879264831542969
    6. ',
' → logprob: -13.754264831542969
    7. ')' → logprob: -16.50426483154297
    8. '),' → logprob: -17.12926483154297
    9. '(p' → logprob: -17.50426483154297
    10. '   ' → logprob: -18.50426483154297

Token 297: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.4391956685576588e-05
    2. ' p' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.750024795532227
    4. ')' → logprob: -19.125024795532227
    5. '(p' → logprob: -19.125024795532227
    6. '<p' → logprob: -19.500024795532227
    7. '	p' → logprob: -19.750024795532227
    8. ')p' → logprob: -20.000024795532227
    9. '_p' → logprob: -20.375024795532227
    10. ' ' → logprob: -20.625024795532227

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. 'p' → logprob: -14.125000953674316
    3. '2' → logprob: -17.5
    4. 'a' → logprob: -17.625
    5. '۱' → logprob: -18.4375
    6. '' → logprob: -19.375
    7. '১' → logprob: -19.375
    8. '```' → logprob: -19.375
    9. '१' → logprob: -19.625
    10. ')' → logprob: -19.75

Token 299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008929980103857815
    2. ' )' → logprob: -7.3758931159973145
    3. ')!=' → logprob: -8.250892639160156
    4. '!=' → logprob: -13.625892639160156
    5. ')
' → logprob: -14.250892639160156
    6. '")' → logprob: -14.375892639160156
    7. ' !=' → logprob: -14.375892639160156
    8. '   ' → logprob: -14.500892639160156
    9. '    ' → logprob: -15.500892639160156
    10. '）' → logprob: -15.500892639160156

Token 300: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.04862290248274803
    2. '!=' → logprob: -3.0486228466033936
    3. ')!=' → logprob: -11.298623085021973
    4. '!=(' → logprob: -11.298623085021973
    5. '()!=' → logprob: -11.673623085021973
    6. ')' → logprob: -13.173623085021973
    7. ' )' → logprob: -15.798623085021973
    8. '!='' → logprob: -16.298622131347656
    9. ']!=' → logprob: -16.548622131347656
    10. ' ' → logprob: -17.548622131347656

Token 301: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.06199446693062782
    2. ' cc' → logprob: -2.8119945526123047
    3. '(cc' → logprob: -10.686994552612305
    4. '	cc' → logprob: -13.436994552612305
    5. '   ' → logprob: -13.561994552612305
    6. '       ' → logprob: -15.061994552612305
    7. '
' → logprob: -15.061994552612305
    8. '_cc' → logprob: -15.936994552612305
    9. ' ' → logprob: -16.061994552612305
    10. '    ' → logprob: -16.561994552612305

Token 302: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.9361264946837764e-07
    2. 'cw' → logprob: -16.0
    3. 'wc' → logprob: -17.625
    4. 'W' → logprob: -18.125
    5. 'p' → logprob: -18.5
    6. 'q' → logprob: -19.125
    7. 'wv' → logprob: -19.25
    8. 'ww' → logprob: -19.5
    9. ' w' → logprob: -19.875
    10. '```' → logprob: -20.125

Token 303: '(A' (ID: 10706)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.20212914049625397
    2. '(A' → logprob: -1.7021291255950928
    3. '(' → logprob: -7.327129364013672
    4. '(C' → logprob: -10.077129364013672
    5. ')' → logprob: -12.077129364013672
    6. '(
' → logprob: -12.952129364013672
    7. '(CC' → logprob: -13.202129364013672
    8. 'A' → logprob: -13.327129364013672
    9. 'B' → logprob: -13.952129364013672
    10. '(cc' → logprob: -14.202129364013672

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011504596332088113
    2. ',B' → logprob: -7.376150608062744
    3. ' ,' → logprob: -7.876150608062744
    4. 'B' → logprob: -9.501150131225586
    5. ' B' → logprob: -10.501150131225586
    6. '(B' → logprob: -11.376150131225586
    7. ',
' → logprob: -11.501150131225586
    8. '[' → logprob: -11.626150131225586
    9. '(' → logprob: -12.626150131225586
    10. ')' → logprob: -13.126150131225586

Token 305: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.016039764508605003
    2. ' B' → logprob: -4.141039848327637
    3. '   ' → logprob: -12.391039848327637
    4. ' ' → logprob: -14.891039848327637
    5. ',' → logprob: -15.391039848327637
    6. '	B' → logprob: -15.641039848327637
    7. '(B' → logprob: -15.766039848327637
    8. '       ' → logprob: -15.891039848327637
    9. '<B' → logprob: -16.64103889465332
    10. '
' → logprob: -17.14103889465332

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010616567305987701
    2. ',p' → logprob: -9.375105857849121
    3. ' ,' → logprob: -11.125105857849121
    4. 'p' → logprob: -12.125105857849121
    5. ' p' → logprob: -14.000105857849121
    6. ',
' → logprob: -15.500105857849121
    7. '[' → logprob: -16.625106811523438
    8. ')' → logprob: -17.375106811523438
    9. '2' → logprob: -18.250106811523438
    10. 's' → logprob: -18.500106811523438

Token 307: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03804941102862358
    2. ' p' → logprob: -3.2880494594573975
    3. '   ' → logprob: -12.038049697875977
    4. '       ' → logprob: -13.788049697875977
    5. ' ' → logprob: -14.913049697875977
    6. '    ' → logprob: -15.163049697875977
    7. '  ' → logprob: -15.913049697875977
    8. '      ' → logprob: -16.413049697875977
    9. '           ' → logprob: -16.413049697875977
    10. '     ' → logprob: -16.788049697875977

Token 308: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. 'c' → logprob: -14.875000953674316
    3. 'p' → logprob: -15.000000953674316
    4. ' ' → logprob: -15.625000953674316
    5. '   ' → logprob: -16.125001907348633
    6. 's' → logprob: -16.125001907348633
    7. '_' → logprob: -16.625001907348633
    8. '```' → logprob: -16.625001907348633
    9. '₂' → logprob: -17.375001907348633
    10. '۲' → logprob: -17.875001907348633

Token 309: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3134220540523529
    2. '))' → logprob: -1.3134220838546753
    3. ')))' → logprob: -9.063422203063965
    4. ' )' → logprob: -10.188422203063965
    5. ' ))' → logprob: -12.563422203063965
    6. ')
' → logprob: -13.813422203063965
    7. '))
' → logprob: -14.813422203063965
    8. ')}' → logprob: -15.188422203063965
    9. ').' → logprob: -15.563422203063965
    10. ')return' → logprob: -15.563422203063965

Token 310: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3224978744983673
    2. '
' → logprob: -1.447497844696045
    3. 'class' → logprob: -3.322497844696045
    4. 'def' → logprob: -5.947497844696045
    5. '<|end|>' → logprob: -6.947497844696045
    6. '    
' → logprob: -8.447498321533203
    7. '

' → logprob: -8.447498321533203
    8. ' ' → logprob: -9.072498321533203
    9. '<|end|>' → logprob: -9.697498321533203
    10. ')' → logprob: -9.947498321533203

Token 311: ' Polygon' (ID: 96494)
  Prédit: 'Polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Polygon' → logprob: -0.1733427345752716
    2. ' Polygon' → logprob: -2.048342704772949
    3. 'Graph' → logprob: -3.673342704772949
    4. 'Visibility' → logprob: -6.423342704772949
    5. ' Graph' → logprob: -6.548342704772949
    6. 'Point' → logprob: -8.04834270477295
    7. ' Visibility' → logprob: -8.17334270477295
    8. 'Polyline' → logprob: -8.54834270477295
    9. 'Node' → logprob: -8.92334270477295
    10. 'Obstacle' → logprob: -8.92334270477295

Token 312: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006000961875542998
    2. ':
' → logprob: -7.6255998611450195
    3. '(' → logprob: -10.00059986114502
    4. '(object' → logprob: -11.12559986114502
    5. ':def' → logprob: -11.87559986114502
    6. '<|end|>' → logprob: -11.87559986114502
    7. '):' → logprob: -12.00059986114502
    8. ' :' → logprob: -12.00059986114502
    9. '(List' → logprob: -12.00059986114502
    10. '():' → logprob: -12.37559986114502

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019560402259230614
    2. ':
' → logprob: -4.39456033706665
    3. ':' → logprob: -5.51956033706665
    4. '    
' → logprob: -7.14456033706665
    5. '(' → logprob: -7.64456033706665
    6. '(List' → logprob: -8.019560813903809
    7. ' def' → logprob: -8.269560813903809
    8. 'def' → logprob: -8.269560813903809
    9. '<|end|>' → logprob: -8.644560813903809
    10. '
' → logprob: -9.019560813903809

Token 314: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0523226335644722
    2. ' def' → logprob: -3.5523226261138916
    3. '__' (adapté à ' __') → logprob: -4.177322864532471
    4. 'def' → logprob: -5.177322864532471
    5. '   ' → logprob: -6.677322864532471
    6. ' ' → logprob: -10.927322387695312
    7. '_slots' → logprob: -11.427322387695312
    8. '.__' → logprob: -11.927322387695312
    9. ' _' → logprob: -12.052322387695312
    10. '	def' → logprob: -12.302322387695312

Token 315: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -2.5776860184123507e-06
    2. '_slots' → logprob: -13.00000286102295
    3. 'init' → logprob: -15.62500286102295
    4. 'slot' → logprob: -17.125001907348633
    5. ' slots' → logprob: -17.125001907348633
    6. 'sl' → logprob: -17.250001907348633
    7. '__' → logprob: -18.750001907348633
    8. '
' → logprob: -20.000001907348633
    9. 'Slots' → logprob: -20.375001907348633
    10. 'tabs' → logprob: -20.375001907348633

Token 316: '__' (ID: 771)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026482360437512398
    2. ' =' → logprob: -3.651482343673706
    3. '=['' → logprob: -8.651482582092285
    4. '__' → logprob: -12.526482582092285
    5. '['' → logprob: -12.651482582092285
    6. ':' → logprob: -16.40148162841797
    7. '_' → logprob: -16.77648162841797
    8. '[' → logprob: -17.02648162841797
    9. '=[]' → logprob: -17.15148162841797
    10. '=
' → logprob: -17.65148162841797

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12701410055160522
    2. '=' → logprob: -2.12701416015625
    3. '=['' → logprob: -9.50201416015625
    4. '   ' → logprob: -12.37701416015625
    5. ':' → logprob: -12.75201416015625
    6. '['' → logprob: -13.00201416015625
    7. ' ' → logprob: -14.50201416015625
    8. '__' → logprob: -14.87701416015625
    9. '[' → logprob: -15.75201416015625
    10. ' ['' → logprob: -16.12701416015625

Token 318: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -5.288163083605468e-05
    2. '['_' → logprob: -10.375052452087402
    3. ' ['' → logprob: -10.750052452087402
    4. '[' → logprob: -17.50005340576172
    5. '["' → logprob: -17.50005340576172
    6. ''' → logprob: -18.00005340576172
    7. '[['' → logprob: -18.37505340576172
    8. '=['' → logprob: -19.00005340576172
    9. ' ' → logprob: -19.00005340576172
    10. '(['' → logprob: -19.75005340576172

Token 319: 'vertices' (ID: 28238)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2526046335697174
    2. 'vertices' → logprob: -1.502604603767395
    3. '_points' → logprob: -7.6276044845581055
    4. ' points' → logprob: -9.627604484558105
    5. ' vertices' → logprob: -9.752604484558105
    6. '_vertices' → logprob: -10.502604484558105
    7. 'edges' → logprob: -11.127604484558105
    8. 'outer' → logprob: -11.877604484558105
    9. '__' → logprob: -12.627604484558105
    10. 'vertex' → logprob: -13.252604484558105

Token 320: '']

' (ID: 36979)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.043582309037446976
    2. '']' → logprob: -3.1685822010040283
    3. '']

' → logprob: -7.918582439422607
    4. '']
' → logprob: -9.16858196258545
    5. ',' → logprob: -9.54358196258545
    6. ']' → logprob: -10.79358196258545
    7. ' ',' → logprob: -11.91858196258545
    8. '','' → logprob: -11.91858196258545
    9. ''' → logprob: -12.66858196258545
    10. ':' → logprob: -13.54358196258545

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11406321823596954
    2. '=['' → logprob: -3.114063262939453
    3. ':' → logprob: -3.239063262939453
    4. ' =' → logprob: -4.114063262939453
    5. '=' → logprob: -5.489063262939453
    6. ',' → logprob: -6.864063262939453
    7. '[' → logprob: -7.239063262939453
    8. ':['' → logprob: -7.364063262939453
    9. '=[]' → logprob: -7.989063262939453
    10. '['' → logprob: -8.239063262939453

Token 322: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3192538022994995
    2. ' def' → logprob: -1.6942538022994995
    3. '   ' → logprob: -2.444253921508789
    4. 'vertices' → logprob: -6.569253921508789
    5. ' vertices' → logprob: -6.694253921508789
    6. '    
' → logprob: -9.944253921508789
    7. '[]' → logprob: -10.944253921508789
    8. '
' → logprob: -11.194253921508789
    9. '    ' → logprob: -11.569253921508789
    10. '	def' → logprob: -11.569253921508789

Token 323: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.889801025390625
    2. 'def' → logprob: -1.389801025390625
    3. '__' → logprob: -1.889801025390625
    4. ' def' → logprob: -2.389801025390625
    5. ' __' → logprob: -2.389801025390625
    6. '_init' → logprob: -5.514801025390625
    7. ' init' → logprob: -6.764801025390625
    8. '_' → logprob: -9.389801025390625
    9. ' ' → logprob: -9.764801025390625
    10. 'define' → logprob: -10.014801025390625

Token 324: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.006723540835082531
    2. 'slots' → logprob: -5.006723403930664
    3. '_init' → logprob: -12.506723403930664
    4. '_slots' → logprob: -12.881723403930664
    5. '   ' → logprob: -14.006723403930664
    6. 'slot' → logprob: -15.256723403930664
    7. 'def' → logprob: -15.381723403930664
    8. '__' → logprob: -15.756723403930664
    9. ' init' → logprob: -16.381723403930664
    10. '```' → logprob: -16.631723403930664

Token 325: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5767419934272766
    2. '(self' → logprob: -0.8267419934272766
    3. '(' → logprob: -8.201742172241211
    4. 'self' → logprob: -8.451742172241211
    5. ' (' → logprob: -8.826742172241211
    6. '_(' → logprob: -9.451742172241211
    7. '__' → logprob: -10.076742172241211
    8. '__(
' → logprob: -11.201742172241211
    9. ' ' → logprob: -11.701742172241211
    10. '   ' → logprob: -11.826742172241211

Token 326: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.60414821645827e-06
    2. ' self' → logprob: -12.625004768371582
    3. '
' → logprob: -14.250004768371582
    4. '__(' → logprob: -15.500004768371582
    5. '(self' → logprob: -16.250003814697266
    6. '__' → logprob: -17.000003814697266
    7. '   ' → logprob: -17.000003814697266
    8. '       ' → logprob: -17.500003814697266
    9. '[' → logprob: -17.625003814697266
    10. ',' → logprob: -18.125003814697266

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032324944622814655
    2. 'self' → logprob: -5.753232479095459
    3. ' ,' → logprob: -10.753232955932617
    4. '(self' → logprob: -10.878232955932617
    5. ',self' → logprob: -11.753232955932617
    6. '       ' → logprob: -12.878232955932617
    7. ' self' → logprob: -13.503232955932617
    8. '   ' → logprob: -14.128232955932617
    9. '__(' → logprob: -14.378232955932617
    10. ',
' → logprob: -15.128232955932617

Token 328: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.016763420775532722
    2. ' vertices' → logprob: -4.141763210296631
    3. 'self' → logprob: -7.266763210296631
    4. '   ' → logprob: -11.266763687133789
    5. ' self' → logprob: -11.391763687133789
    6. 'verts' → logprob: -13.266763687133789
    7. '       ' → logprob: -13.516763687133789
    8. '(vertices' → logprob: -13.766763687133789
    9. '.vertices' → logprob: -14.391763687133789
    10. '_vertices' → logprob: -15.391763687133789

Token 329: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.981667537620524e-06
    2. '_:' → logprob: -14.500001907348633
    3. '):' → logprob: -14.875001907348633
    4. ' :' → logprob: -15.250001907348633
    5. '':' → logprob: -15.375001907348633
    6. ']:' → logprob: -16.000001907348633
    7. '']:' → logprob: -16.500001907348633
    8. '```' → logprob: -16.500001907348633
    9. '}:' → logprob: -16.625001907348633
    10. '__:' → logprob: -16.750001907348633

Token 330: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.001173917087726295
    2. ' List' → logprob: -6.751173973083496
    3. '[List' → logprob: -12.501173973083496
    4. '	List' → logprob: -18.37617301940918
    5. '   ' → logprob: -18.75117301940918
    6. ' ' → logprob: -20.37617301940918
    7. 'list' → logprob: -20.75117301940918
    8. '       ' → logprob: -21.12617301940918
    9. '(List' → logprob: -21.12617301940918
    10. 'Optional' → logprob: -21.75117301940918

Token 331: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. 'Point' → logprob: -14.125000953674316
    3. '<Point' → logprob: -15.750000953674316
    4. ']' → logprob: -17.000001907348633
    5. '['' → logprob: -17.125001907348633
    6. '```' → logprob: -17.125001907348633
    7. '(Point' → logprob: -17.625001907348633
    8. '[
' → logprob: -17.750001907348633
    9. '	Point' → logprob: -18.250001907348633
    10. '   ' → logprob: -19.625001907348633

Token 332: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.9361264946837764e-07
    2. ' Point' → logprob: -15.75
    3. '[' → logprob: -17.625
    4. '	Point' → logprob: -17.75
    5. '<Point' → logprob: -21.375
    6. '(Point' → logprob: -22.0
    7. '_Point' → logprob: -22.75
    8. '_point' → logprob: -23.0
    9. 'float' → logprob: -23.0
    10. ']' → logprob: -24.25

Token 333: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.3295214772224426
    2. ']):
' → logprob: -1.3295214176177979
    3. ']' → logprob: -4.829521656036377
    4. '])' → logprob: -4.954521656036377
    5. '):' → logprob: -7.329521656036377
    6. ')' → logprob: -8.579521179199219
    7. '):
' → logprob: -9.079521179199219
    8. '']):
' → logprob: -9.579521179199219
    9. ']:' → logprob: -10.579521179199219
    10. ')]' → logprob: -11.954521179199219

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002756366156972945
    2. 'self' → logprob: -8.375275611877441
    3. ' self' → logprob: -10.500275611877441
    4. ',' → logprob: -12.000275611877441
    5. '<|end|>' → logprob: -12.250275611877441
    6. ' ' → logprob: -13.500275611877441
    7. '    ' → logprob: -14.375275611877441
    8. '	self' → logprob: -14.500275611877441
    9. '        
' → logprob: -14.625275611877441
    10. '   ' → logprob: -15.000275611877441

Token 335: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00697549432516098
    2. ' self' → logprob: -5.0069756507873535
    3. '       ' → logprob: -8.256975173950195
    4. '	self' → logprob: -14.631975173950195
    5. '   ' → logprob: -15.631975173950195
    6. '(self' → logprob: -18.131975173950195
    7. ' ' → logprob: -19.006975173950195
    8. '[self' → logprob: -19.131975173950195
    9. ' ' → logprob: -20.381975173950195
    10. '	' → logprob: -20.506975173950195

Token 336: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.0053268433548510075
    2. '.' → logprob: -5.255326747894287
    3. ' .' → logprob: -10.005327224731445
    4. ' =' → logprob: -10.880327224731445
    5. ':' → logprob: -11.755327224731445
    6. 'vertices' → logprob: -12.005327224731445
    7. '.points' → logprob: -12.255327224731445
    8. '=' → logprob: -12.880327224731445
    9. '_vertices' → logprob: -13.505327224731445
    10. '.v' → logprob: -13.505327224731445

Token 337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759397745132446
    2. ' =' → logprob: -0.8259397745132446
    3. ' ' → logprob: -14.700940132141113
    4. ')' → logprob: -17.575939178466797
    5. ' =
' → logprob: -18.325939178466797
    6. ' =[' → logprob: -18.450939178466797
    7. ':' → logprob: -18.700939178466797
    8. '.' → logprob: -19.075939178466797
    9. '	' → logprob: -19.075939178466797
    10. '＝' → logprob: -19.325939178466797

Token 338: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.0011703446507453918
    2. ' vertices' → logprob: -6.7511701583862305
    3. '(vertices' → logprob: -15.87617015838623
    4. '[' → logprob: -17.501171112060547
    5. '.vertices' → logprob: -17.626171112060547
    6. 'vertex' → logprob: -17.626171112060547
    7. 'list' → logprob: -18.001171112060547
    8. '   ' → logprob: -18.751171112060547
    9. 'verts' → logprob: -19.251171112060547
    10. '[]' → logprob: -19.751171112060547

Token 339: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0233075562864542
    2. ' def' → logprob: -3.7733075618743896
    3. '   ' → logprob: -9.773307800292969
    4. '
' → logprob: -12.273307800292969
    5. '	def' → logprob: -15.773307800292969
    6. ' ' → logprob: -15.898307800292969
    7. '    
' → logprob: -16.77330780029297
    8. '

' → logprob: -17.02330780029297
    9. ' 
' → logprob: -18.77330780029297
    10. '@property' → logprob: -18.89830780029297

Token 342: ' edges' (ID: 22569)
  Prédit: ' contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contains' → logprob: -0.8745881915092468
    2. 'contains' → logprob: -1.6245882511138916
    3. ' def' → logprob: -1.7495882511138916
    4. 'def' → logprob: -1.9995882511138916
    5. ' edges' → logprob: -2.6245882511138916
    6. 'edges' → logprob: -6.8745880126953125
    7. ' has' → logprob: -7.4995880126953125
    8. '_contains' → logprob: -8.249588012695312
    9. '_edges' → logprob: -8.374588012695312
    10. ' is' → logprob: -8.374588012695312

Token 343: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.25000286102295
    3. 'self' → logprob: -14.50000286102295
    4. ' (' → logprob: -16.625001907348633
    5. ' self' → logprob: -17.000001907348633
    6. '(
' → logprob: -17.625001907348633
    7. '   ' → logprob: -17.625001907348633
    8. ' ' → logprob: -18.125001907348633
    9. '	self' → logprob: -18.250001907348633
    10. '(s' → logprob: -18.375001907348633

Token 344: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000513952283654362
    2. 'self' → logprob: -8.250514030456543
    3. '(self' → logprob: -8.875514030456543
    4. '):' → logprob: -9.250514030456543
    5. '):
' → logprob: -11.500514030456543
    6. ')->' → logprob: -12.500514030456543
    7. ' self' → logprob: -14.000514030456543
    8. ' )' → logprob: -14.125514030456543
    9. '   ' → logprob: -14.625514030456543
    10. 'def' → logprob: -15.125514030456543

Token 345: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012332366895861924
    2. 'self' → logprob: -9.625123023986816
    3. '(' → logprob: -10.750123023986816
    4. '   ' → logprob: -11.250123023986816
    5. ' self' → logprob: -11.375123023986816
    6. ' ->' → logprob: -12.500123023986816
    7. '       ' → logprob: -13.000123023986816
    8. ' (' → logprob: -13.625123023986816
    9. '->' → logprob: -13.875123023986816
    10. ' ' → logprob: -13.875123023986816

Token 346: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.04049709811806679
    2. ' Iterator' → logprob: -3.540497064590454
    3. 'List' → logprob: -4.540497303009033
    4. ' List' → logprob: -11.290496826171875
    5. '	Iterator' → logprob: -12.290496826171875
    6. 'Iterable' → logprob: -13.290496826171875
    7. '[List' → logprob: -13.915496826171875
    8. 'iterator' → logprob: -14.915496826171875
    9. '_iterator' → logprob: -15.040496826171875
    10. '[' → logprob: -15.540496826171875

Token 347: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.179569077678025e-05
    2. ':' → logprob: -11.125041961669922
    3. '<Edge' → logprob: -11.250041961669922
    4. '[Index' → logprob: -12.250041961669922
    5. ':
' → logprob: -12.625041961669922
    6. '[
' → logprob: -13.000041961669922
    7. 'Edge' → logprob: -13.375041961669922
    8. '[self' → logprob: -14.875041961669922
    9. '[List' → logprob: -15.000041961669922
    10. '['' → logprob: -15.000041961669922

Token 348: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -6.704273118884885e-07
    2. 'Point' → logprob: -15.000000953674316
    3. ' Edge' → logprob: -15.500000953674316
    4. '[' → logprob: -21.5
    5. '<Edge' → logprob: -21.75
    6. ''' → logprob: -21.875
    7. 'Edges' → logprob: -22.625
    8. 'edge' → logprob: -23.0
    9. '   ' → logprob: -23.125
    10. '_edge' → logprob: -23.75

Token 349: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15929321944713593
    2. ':' → logprob: -2.4092931747436523
    3. '():
' → logprob: -3.2842931747436523
    4. '):
' → logprob: -4.284293174743652
    5. ']:
' → logprob: -5.409293174743652
    6. '():' → logprob: -7.409293174743652
    7. '   ' → logprob: -7.784293174743652
    8. ']:' → logprob: -8.284293174743652
    9. '       ' → logprob: -8.659293174743652
    10. '):' → logprob: -8.784293174743652

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.4868770196917467e-05
    2. ':' → logprob: -10.875024795532227
    3. '
' → logprob: -13.375024795532227
    4. 'n' → logprob: -13.500024795532227
    5. ' for' → logprob: -13.625024795532227
    6. '   ' → logprob: -15.000024795532227
    7. ',' → logprob: -15.125024795532227
    8. '        
' → logprob: -15.500024795532227
    9. 'for' → logprob: -15.625024795532227
    10. '      ' → logprob: -16.000024795532227

Token 351: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8528059720993042
    2. 'for' → logprob: -1.2278059720993042
    3. '       ' → logprob: -1.6028059720993042
    4. 'n' (adapté à ' n') → logprob: -2.7278060913085938
    5. ' n' → logprob: -4.352806091308594
    6. '   ' → logprob: -7.102806091308594
    7. 'yield' → logprob: -8.102806091308594
    8. 'num' → logprob: -9.602806091308594
    9. ' yield' → logprob: -10.602806091308594
    10. 'i' → logprob: -10.977806091308594

Token 352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029778027907013893
    2. '=' → logprob: -3.529778003692627
    3. '=len' → logprob: -11.279778480529785
    4. '   ' → logprob: -12.029778480529785
    5. ' ' → logprob: -12.529778480529785
    6. 'for' → logprob: -13.029778480529785
    7. ' for' → logprob: -14.404778480529785
    8. '  ' → logprob: -14.529778480529785
    9. '=int' → logprob: -14.779778480529785
    10. ')' → logprob: -15.029778480529785

Token 353: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009115827269852161
    2. ' len' → logprob: -7.000911712646484
    3. '(len' → logprob: -18.250911712646484
    4. '   ' → logprob: -20.125911712646484
    5. '=len' → logprob: -21.000911712646484
    6. '	len' → logprob: -21.125911712646484
    7. '[len' → logprob: -21.625911712646484
    8. ' ' → logprob: -21.875911712646484
    9. '
' → logprob: -23.250911712646484
    10. '  ' → logprob: -23.250911712646484

Token 354: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.696889623621246e-06
    2. 'self' → logprob: -13.50000286102295
    3. '(' → logprob: -13.62500286102295
    4. ' self' → logprob: -17.250001907348633
    5. ' (' → logprob: -19.625001907348633
    6. '[self' → logprob: -20.125001907348633
    7. '(this' → logprob: -20.125001907348633
    8. '(s' → logprob: -20.500001907348633
    9. '	self' → logprob: -20.750001907348633
    10. '=self' → logprob: -20.875001907348633

Token 355: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -3.7697225252486533e-06
    2. '.' → logprob: -13.375003814697266
    3. ' .' → logprob: -14.000003814697266
    4. 'vertices' → logprob: -14.000003814697266
    5. '(vertices' → logprob: -15.500003814697266
    6. '.points' → logprob: -15.875003814697266
    7. ').' → logprob: -16.375003814697266
    8. '.edges' → logprob: -17.000003814697266
    9. '.v' → logprob: -18.375003814697266
    10. '.indices' → logprob: -18.625003814697266

Token 356: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03831550478935242
    2. ')' → logprob: -3.288315534591675
    3. '-' → logprob: -9.163315773010254
    4. '
' → logprob: -9.788315773010254
    5. ' )
' → logprob: -10.288315773010254
    6. '       ' → logprob: -10.413315773010254
    7. ' -' → logprob: -10.538315773010254
    8. '   ' → logprob: -11.413315773010254
    9. ' ' → logprob: -12.663315773010254
    10. ')
' → logprob: -12.788315773010254

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020546209067106247
    2. ' for' → logprob: -4.0205464363098145
    3. '
' → logprob: -7.2705464363098145
    4. '   ' → logprob: -7.6455464363098145
    5. 'for' → logprob: -7.8955464363098145
    6. '        
' → logprob: -8.395545959472656
    7. ':' → logprob: -8.770545959472656
    8. '' → logprob: -9.145545959472656
    9. '  
' → logprob: -9.520545959472656
    10. '	for' → logprob: -10.020545959472656

Token 358: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04860871285200119
    2. ' for' → logprob: -3.0486087799072266
    3. '   ' → logprob: -11.423608779907227
    4. '       ' → logprob: -11.548608779907227
    5. '	for' → logprob: -15.048608779907227
    6. '
' → logprob: -16.048608779907227
    7. 'return' → logprob: -16.173608779907227
    8. ' ' → logprob: -16.798608779907227
    9. 'i' → logprob: -17.298608779907227
    10. 'yield' → logprob: -19.048608779907227

Token 359: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141363143920898
    2. ' i' → logprob: -1.701413631439209
    3. '	i' → logprob: -14.951414108276367
    4. '_i' → logprob: -18.951414108276367
    5. ' ' → logprob: -19.576414108276367
    6. '   ' → logprob: -20.201414108276367
    7. ' ' → logprob: -20.576414108276367
    8. '  ' → logprob: -22.701414108276367
    9. ',i' → logprob: -24.076414108276367
    10. '.i' → logprob: -24.076414108276367

Token 360: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014346831478178501
    2. 'in' → logprob: -4.264346599578857
    3. ' ' → logprob: -8.764347076416016
    4. '	in' → logprob: -11.764347076416016
    5. '  ' → logprob: -12.514347076416016
    6. '_' → logprob: -12.514347076416016
    7. '_in' → logprob: -12.764347076416016
    8. ',' → logprob: -13.139347076416016
    9. '   ' → logprob: -13.389347076416016
    10. ' i' → logprob: -13.389347076416016

Token 361: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931473612785339
    2. 'range' → logprob: -0.6931473612785339
    3. ' ' → logprob: -16.443147659301758
    4. '	range' → logprob: -16.818147659301758
    5. '   ' → logprob: -17.318147659301758
    6. '  ' → logprob: -18.693147659301758
    7. '(range' → logprob: -19.943147659301758
    8. '0' → logprob: -20.568147659301758
    9. ' xrange' → logprob: -20.568147659301758
    10. '_range' → logprob: -21.068147659301758

Token 362: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.026771388947963715
    2. 'n' → logprob: -4.276771545410156
    3. ' n' → logprob: -4.526771545410156
    4. '(' → logprob: -6.401771545410156
    5. ' (' → logprob: -10.401771545410156
    6. '	n' → logprob: -11.651771545410156
    7. '1' → logprob: -11.776771545410156
    8. '(
' → logprob: -12.776771545410156
    9. '   ' → logprob: -12.776771545410156
    10. '0' → logprob: -13.901771545410156

Token 363: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03421379253268242
    2. '):
' → logprob: -3.4092137813568115
    3. ' ):' → logprob: -7.784214019775391
    4. '-' → logprob: -9.40921401977539
    5. ' -' → logprob: -10.40921401977539
    6. ')' → logprob: -11.28421401977539
    7. '   ' → logprob: -11.78421401977539
    8. ' ):
' → logprob: -11.90921401977539
    9. ' ' → logprob: -12.40921401977539
    10. '):
' → logprob: -12.90921401977539

Token 364: '           ' (ID: 352)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.3797193765640259
    2. '           ' → logprob: -1.2547193765640259
    3. 'yield' → logprob: -3.5047192573547363
    4. '	yield' → logprob: -7.254719257354736
    5. 'Yield' → logprob: -11.754719734191895
    6. '   ' → logprob: -12.254719734191895
    7. ' yields' → logprob: -12.254719734191895
    8. '       ' → logprob: -12.879719734191895
    9. '	       ' → logprob: -13.379719734191895
    10. '```' → logprob: -13.504719734191895

Token 365: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.5761003494262695
    2. 'yield' (adapté à ' yield') → logprob: -0.8261003494262695
    3. '           ' → logprob: -9.45110034942627
    4. '	yield' → logprob: -9.70110034942627
    5. 'start' → logprob: -11.07610034942627
    6. '               ' → logprob: -12.32610034942627
    7. ' start' → logprob: -13.95110034942627
    8. 'Yield' → logprob: -16.076099395751953
    9. '```' → logprob: -16.451099395751953
    10. 'j' → logprob: -17.076099395751953

Token 366: ' Edge' (ID: 16396)
  Prédit: ' Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.16022655367851257
    2. 'Edge' → logprob: -1.910226583480835
    3. '           ' → logprob: -13.660226821899414
    4. ' ' → logprob: -15.035226821899414
    5. '   ' → logprob: -15.160226821899414
    6. '<Edge' → logprob: -15.160226821899414
    7. ' edge' → logprob: -16.285226821899414
    8. ' ' → logprob: -16.785226821899414
    9. 'Edges' → logprob: -16.785226821899414
    10. '.Edge' → logprob: -17.410226821899414

Token 367: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.133198283147067e-05
    2. '(' → logprob: -10.250051498413086
    3. 'self' → logprob: -11.125051498413086
    4. '(
' → logprob: -13.750051498413086
    5. ' self' → logprob: -15.875051498413086
    6. ' (' → logprob: -18.125051498413086
    7. '	self' → logprob: -18.250051498413086
    8. '[self' → logprob: -18.500051498413086
    9. '=self' → logprob: -19.000051498413086
    10. '(Point' → logprob: -19.125051498413086

Token 368: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -2.868328920158092e-05
    2. 'vertices' → logprob: -10.625028610229492
    3. '.' → logprob: -13.375028610229492
    4. ' .' → logprob: -13.625028610229492
    5. ').' → logprob: -14.625028610229492
    6. '(vertices' → logprob: -14.875028610229492
    7. '.points' → logprob: -15.500028610229492
    8. '_vertices' → logprob: -16.125028610229492
    9. ',' → logprob: -16.125028610229492
    10. ' vertices' → logprob: -16.250028610229492

Token 369: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -14.625000953674316
    3. ' i' → logprob: -18.0
    4. ',i' → logprob: -18.125
    5. '[
' → logprob: -18.75
    6. '[(' → logprob: -18.875
    7. '(i' → logprob: -19.0
    8. '[' → logprob: -19.25
    9. '   ' → logprob: -19.75
    10. '
' → logprob: -20.625

Token 370: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00026979928952641785
    2. ',' → logprob: -8.500269889831543
    3. ' ],' → logprob: -10.000269889831543
    4. '],
' → logprob: -11.250269889831543
    5. ']' → logprob: -12.750269889831543
    6. '),' → logprob: -13.250269889831543
    7. '%' → logprob: -13.625269889831543
    8. ' ,' → logprob: -14.625269889831543
    9. ' ' → logprob: -15.000269889831543
    10. '   ' → logprob: -15.000269889831543

Token 371: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06196993216872215
    2. ' self' → logprob: -2.8119699954986572
    3. '           ' → logprob: -13.311969757080078
    4. '(self' → logprob: -15.811969757080078
    5. '	self' → logprob: -15.936969757080078
    6. '       ' → logprob: -16.061969757080078
    7. '[self' → logprob: -16.436969757080078
    8. '               ' → logprob: -16.686969757080078
    9. '            ' → logprob: -16.936969757080078
    10. ' ' → logprob: -17.186969757080078

Token 372: '.vertices' (ID: 47509)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.11321188509464264
    2. '(vertices' → logprob: -2.3632118701934814
    3. '(n' → logprob: -5.2382121086120605
    4. '(' → logprob: -5.9882121086120605
    5. '.vertices' → logprob: -6.7382121086120605
    6. '   ' → logprob: -6.8632121086120605
    7. '[(' → logprob: -7.2382121086120605
    8. '(v' → logprob: -7.3632121086120605
    9. '[i' → logprob: -7.7382121086120605
    10. '(self' → logprob: -8.113211631774902

Token 373: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0120383994653821
    2. '(i' → logprob: -4.637038230895996
    3. '[i' → logprob: -6.137038230895996
    4. '[' → logprob: -9.512038230895996
    5. '[
' → logprob: -11.262038230895996
    6. '(' → logprob: -11.262038230895996
    7. ' (' → logprob: -12.137038230895996
    8. '   ' → logprob: -12.762038230895996
    9. '(n' → logprob: -12.887038230895996
    10. '[next' → logprob: -13.012038230895996

Token 374: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00013679367839358747
    2. '(i' → logprob: -9.000136375427246
    3. ' i' → logprob: -11.250136375427246
    4. ' (' → logprob: -15.125136375427246
    5. '   ' → logprob: -16.250137329101562
    6. '{i' → logprob: -17.125137329101562
    7. '_i' → logprob: -18.625137329101562
    8. '(' → logprob: -19.125137329101562
    9. '	i' → logprob: -19.500137329101562
    10. ' ' → logprob: -20.250137329101562

Token 375: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020210856571793556
    2. ' +' → logprob: -4.3952107429504395
    3. '+i' → logprob: -4.8952107429504395
    4. '1' → logprob: -8.770211219787598
    5. 'i' → logprob: -10.645211219787598
    6. '(i' → logprob: -12.395211219787598
    7. '   ' → logprob: -13.520211219787598
    8. ' i' → logprob: -13.645211219787598
    9. '{i' → logprob: -13.770211219787598
    10. ' ' → logprob: -14.395211219787598

Token 376: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.8750057220459
    4. '
' → logprob: -19.7500057220459
    5. '```' → logprob: -19.7500057220459
    6. '  ' → logprob: -21.3750057220459
    7. 'def' → logprob: -21.6250057220459
    8. 'i' → logprob: -21.6250057220459
    9. '    ' → logprob: -22.1250057220459
    10. '     ' → logprob: -22.1875057220459

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '
' → logprob: -18.125001907348633
    4. 'i' → logprob: -19.000001907348633
    5. '   ' → logprob: -19.000001907348633
    6. 'import' → logprob: -20.000001907348633
    7. '```' → logprob: -20.250001907348633
    8. 'n' → logprob: -20.625001907348633
    9. '  ' → logprob: -21.625001907348633
    10. ')' → logprob: -21.625001907348633

Token 378: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006278486107476056
    2. ')%' → logprob: -7.3756279945373535
    3. ')i' → logprob: -14.375627517700195
    4. ' )' → logprob: -14.375627517700195
    5. ')
' → logprob: -16.625627517700195
    6. ')n' → logprob: -17.375627517700195
    7. '),' → logprob: -18.500627517700195
    8. '）' → logprob: -18.500627517700195
    9. ')])' → logprob: -19.125627517700195
    10. '%n' → logprob: -19.125627517700195

Token 379: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03134378045797348
    2. ')%' → logprob: -4.281343936920166
    3. ' %' → logprob: -4.656343936920166
    4. '%n' → logprob: -5.656343936920166
    5. '%' → logprob: -5.781343936920166
    6. ']' → logprob: -7.906343936920166
    7. '%i' → logprob: -7.906343936920166
    8. ' )' → logprob: -8.906343460083008
    9. ' ' → logprob: -10.906343460083008
    10. ')i' → logprob: -11.281343460083008

Token 380: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019286326132714748
    2. ' n' → logprob: -6.251928806304932
    3. '	n' → logprob: -17.751928329467773
    4. ')n' → logprob: -19.251928329467773
    5. ' ' → logprob: -19.876928329467773
    6. '   ' → logprob: -20.501928329467773
    7. '
' → logprob: -20.751928329467773
    8. '```' → logprob: -21.001928329467773
    9. '_n' → logprob: -21.376928329467773
    10. ' ' → logprob: -21.751928329467773

Token 381: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -4.0126840758603066e-05
    2. ')' → logprob: -10.375040054321289
    3. ' ])' → logprob: -12.250040054321289
    4. '])
' → logprob: -13.125040054321289
    5. ')]' → logprob: -13.625040054321289
    6. ']' → logprob: -14.875040054321289
    7. ')])' → logprob: -14.875040054321289
    8. '))' → logprob: -16.50004005432129
    9. ' )' → logprob: -17.37504005432129
    10. '])]' → logprob: -17.50004005432129

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10761269181966782
    2. '
' → logprob: -2.3576126098632812
    3. 'def' → logprob: -5.482612609863281
    4. '    
' → logprob: -6.482612609863281
    5. ' def' → logprob: -7.232612609863281
    6. '```' → logprob: -8.357612609863281
    7. ' 
' → logprob: -8.607612609863281
    8. '<|end|>' → logprob: -8.732612609863281
    9. '        
' → logprob: -9.232612609863281
    10. '

' → logprob: -9.357612609863281

Token 383: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3706001341342926
    2. '   ' → logprob: -1.3706001043319702
    3. '
' → logprob: -2.9956002235412598
    4. ' def' → logprob: -5.37060022354126
    5. '    
' → logprob: -7.49560022354126
    6. '

' → logprob: -8.120599746704102
    7. ' ' → logprob: -9.495599746704102
    8. ' 
' → logprob: -9.995599746704102
    9. '```' → logprob: -10.370599746704102
    10. '        
' → logprob: -10.870599746704102

Token 384: ' contains' (ID: 8895)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2937893569469452
    2. 'def' → logprob: -1.4187893867492676
    3. ' contains' → logprob: -4.668789386749268
    4. 'contains' → logprob: -5.793789386749268
    5. '_contains' → logprob: -10.29378890991211
    6. ' point' → logprob: -10.66878890991211
    7. '   ' → logprob: -10.91878890991211
    8. ' area' → logprob: -11.04378890991211
    9. ' ' → logprob: -11.41878890991211
    10. ' is' → logprob: -12.29378890991211

Token 385: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.2524835169315338
    2. '(self' → logprob: -1.5024834871292114
    3. '(' → logprob: -7.627483367919922
    4. '_' → logprob: -10.127483367919922
    5. 'point' → logprob: -12.002483367919922
    6. 'self' → logprob: -12.002483367919922
    7. '_points' → logprob: -12.502483367919922
    8. '_(' → logprob: -13.002483367919922
    9. '(point' → logprob: -13.502483367919922
    10. 'Point' → logprob: -13.627483367919922

Token 386: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -11.875007629394531
    3. 'self' → logprob: -14.500007629394531
    4. ' (' → logprob: -14.625007629394531
    5. '(
' → logprob: -16.87500762939453
    6. ' self' → logprob: -18.25000762939453
    7. '   ' → logprob: -18.37500762939453
    8. ' ' → logprob: -18.75000762939453
    9. 'def' → logprob: -18.75000762939453
    10. '	self' → logprob: -19.00000762939453

Token 387: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017331328708678484
    2. 'self' → logprob: -6.501733303070068
    3. ',' → logprob: -9.37673282623291
    4. ')' → logprob: -9.50173282623291
    5. ' self' → logprob: -10.37673282623291
    6. ' (' → logprob: -10.50173282623291
    7. ')(' → logprob: -12.25173282623291
    8. '(' → logprob: -12.87673282623291
    9. '       ' → logprob: -13.12673282623291
    10. '   ' → logprob: -13.75173282623291

Token 388: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03572984039783478
    2. ' self' → logprob: -3.5357298851013184
    3. 'point' → logprob: -5.285729885101318
    4. ' point' → logprob: -7.535729885101318
    5. 'p' → logprob: -8.03572940826416
    6. '   ' → logprob: -11.16072940826416
    7. ' p' → logprob: -11.66072940826416
    8. '       ' → logprob: -11.66072940826416
    9. 'pt' → logprob: -11.78572940826416
    10. 'Point' → logprob: -14.41072940826416

Token 389: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051997438073158264
    2. 'self' → logprob: -3.426997423171997
    3. ')' → logprob: -4.176997661590576
    4. ' self' → logprob: -6.426997661590576
    5. '(self' → logprob: -7.051997661590576
    6. ',' → logprob: -9.176997184753418
    7. '):' → logprob: -9.676997184753418
    8. '   ' → logprob: -10.301997184753418
    9. ' )' → logprob: -10.426997184753418
    10. '_point' → logprob: -10.551997184753418

Token 390: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0015448570484295487
    2. ' Point' → logprob: -6.501544952392578
    3. ''' → logprob: -10.126544952392578
    4. '(Point' → logprob: -14.001544952392578
    5. ' ' → logprob: -15.126544952392578
    6. '   ' → logprob: -15.251544952392578
    7. '	Point' → logprob: -15.251544952392578
    8. '_Point' → logprob: -15.376544952392578
    9. ')' → logprob: -15.626544952392578
    10. '.Point' → logprob: -15.751544952392578

Token 391: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3557529857498594e-05
    2. ' )' → logprob: -10.75002384185791
    3. ',' → logprob: -13.75002384185791
    4. ':' → logprob: -14.62502384185791
    5. '):' → logprob: -14.87502384185791
    6. '   ' → logprob: -16.750022888183594
    7. ')->' → logprob: -17.125022888183594
    8. ' ' → logprob: -17.875022888183594
    9. ',)' → logprob: -18.125022888183594
    10. '')' → logprob: -18.750022888183594

Token 392: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5028594136238098
    2. ' ->' → logprob: -1.252859354019165
    3. ':' → logprob: -2.502859354019165
    4. '->' → logprob: -3.752859354019165
    5. ')->' → logprob: -5.752859592437744
    6. '   ' → logprob: -7.877859592437744
    7. '(self' → logprob: -7.877859592437744
    8. '       ' → logprob: -8.627859115600586
    9. ',' → logprob: -10.252859115600586
    10. '):' → logprob: -10.877859115600586

Token 393: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -5.037835580878891e-05
    2. ' bool' → logprob: -10.12505054473877
    3. 'def' → logprob: -12.50005054473877
    4. 'Optional' → logprob: -12.62505054473877
    5. 'float' → logprob: -13.25005054473877
    6. '	bool' → logprob: -14.50005054473877
    7. ''' → logprob: -14.75005054473877
    8. '   ' → logprob: -15.87505054473877
    9. '<bool' → logprob: -16.000049591064453
    10. '(bool' → logprob: -16.500049591064453

Token 394: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029510781168937683
    2. ':
' → logprob: -5.877951145172119
    3. ' :' → logprob: -9.627950668334961
    4. '       ' → logprob: -10.502950668334961
    5. '):' → logprob: -10.502950668334961
    6. '   ' → logprob: -11.127950668334961
    7. ':def' → logprob: -13.127950668334961
    8. ')' → logprob: -13.252950668334961
    9. '():' → logprob: -13.627950668334961
    10. ' :
' → logprob: -13.627950668334961

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.504040356958285e-05
    2. '"""' → logprob: -11.250064849853516
    3. 'n' → logprob: -11.375064849853516
    4. '#' → logprob: -11.500064849853516
    5. 'count' → logprob: -11.750064849853516
    6. '   ' → logprob: -11.750064849853516
    7. '```' → logprob: -12.625064849853516
    8. ' count' → logprob: -13.125064849853516
    9. '
' → logprob: -13.375064849853516
    10. ' #' → logprob: -13.500064849853516

Token 396: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.602430522441864
    2. 'cnt' → logprob: -0.852430522441864
    3. 'inside' → logprob: -3.852430582046509
    4. '       ' → logprob: -6.10243034362793
    5. 'n' → logprob: -6.47743034362793
    6. 'cross' → logprob: -7.85243034362793
    7. 'wn' → logprob: -8.60243034362793
    8. 'result' → logprob: -8.85243034362793
    9. '   ' → logprob: -9.22743034362793
    10. 'cn' → logprob: -9.22743034362793

Token 397: ' W' (ID: 486)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.6245465278625488
    2. 'count' → logprob: -0.8745465278625488
    3. 'inside' → logprob: -3.249546527862549
    4. 'n' → logprob: -5.624546527862549
    5. 'def' → logprob: -6.249546527862549
    6. 'cross' → logprob: -7.124546527862549
    7. '   ' → logprob: -7.249546527862549
    8. 'result' → logprob: -7.624546527862549
    9. 'cn' → logprob: -7.749546527862549
    10. 'wn' → logprob: -8.37454605102539

Token 398: 'inding' (ID: 5128)
  Prédit: 'inding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inding' → logprob: -0.14940676093101501
    2. 'ind' → logprob: -2.024406671524048
    3. '   ' → logprob: -5.899406909942627
    4. '       ' → logprob: -6.774406909942627
    5. '#' → logprob: -7.149406909942627
    6. 'n' → logprob: -7.399406909942627
    7. '    ' → logprob: -8.649406433105469
    8. 'ray' → logprob: -8.649406433105469
    9. 'ound' → logprob: -9.274406433105469
    10. 'i' → logprob: -9.399406433105469

Token 399: ' number' (ID: 2086)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.268413782119751
    2. 'number' → logprob: -1.518413782119751
    3. ' number' → logprob: -4.143413543701172
    4. 'num' → logprob: -8.768413543701172
    5. '```' → logprob: -9.893413543701172
    6. '_num' → logprob: -10.018413543701172
    7. ' ' → logprob: -10.143413543701172
    8. 'method' → logprob: -10.518413543701172
    9. '   ' → logprob: -10.768413543701172
    10. 'def' → logprob: -10.893413543701172

Token 400: ' method' (ID: 2595)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9620236158370972
    2. ' =' → logprob: -1.3370236158370972
    3. '       ' → logprob: -1.9620236158370972
    4. 'count' → logprob: -2.0870237350463867
    5. ':' → logprob: -3.4620237350463867
    6. '_count' → logprob: -4.337023735046387
    7. ' count' → logprob: -4.337023735046387
    8. '   ' → logprob: -4.587023735046387
    9. 'def' → logprob: -5.087023735046387
    10. 'n' → logprob: -5.462023735046387

Token 401: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10299313813447952
    2. '
' → logprob: -2.3529932498931885
    3. ':' → logprob: -6.477993011474609
    4. 'n' → logprob: -7.477993011474609
    5. '        
' → logprob: -8.10299301147461
    6. ':
' → logprob: -9.35299301147461
    7. '  
' → logprob: -10.47799301147461
    8. ',' → logprob: -10.47799301147461
    9. '   ' → logprob: -10.47799301147461
    10. '<|end|>' → logprob: -10.72799301147461

Token 402: ' polygon' (ID: 65081)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.03742353618144989
    2. 'ray' → logprob: -4.037423610687256
    3. 'p' → logprob: -4.662423610687256
    4. ' point' → logprob: -5.162423610687256
    5. 'Point' → logprob: -6.912423610687256
    6. '_point' → logprob: -7.537423610687256
    7. 'polygon' → logprob: -7.537423610687256
    8. 'self' → logprob: -8.287423133850098
    9. 'checking' → logprob: -8.537423133850098
    10. 'inside' → logprob: -8.662423133850098

Token 403: ' contains' (ID: 8895)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00783445406705141
    2. 'count' → logprob: -5.382834434509277
    3. 'n' → logprob: -6.632834434509277
    4. ' count' → logprob: -6.882834434509277
    5. 'def' → logprob: -8.382834434509277
    6. '   ' → logprob: -8.632834434509277
    7. ' n' → logprob: -8.882834434509277
    8. 'w' → logprob: -9.757834434509277
    9. ' winding' → logprob: -9.757834434509277
    10. ':' → logprob: -10.132834434509277

Token 404: ' point' (ID: 2438)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.6111353635787964
    2. '   ' → logprob: -1.8611353635787964
    3. ' point' → logprob: -2.111135482788086
    4. '       ' → logprob: -2.361135482788086
    5. 'point' → logprob: -3.361135482788086
    6. ' p' → logprob: -3.986135482788086
    7. ' ' → logprob: -4.611135482788086
    8. 'p' → logprob: -4.861135482788086
    9. 'Point' → logprob: -5.111135482788086
    10. '-point' → logprob: -6.611135482788086

Token 405: ' test' (ID: 1746)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05582577735185623
    2. '       ' → logprob: -3.055825710296631
    3. '<|end|>' → logprob: -5.430825710296631
    4. '        
' → logprob: -7.305825710296631
    5. ':' → logprob: -7.430825710296631
    6. 'n' → logprob: -7.680825710296631
    7. ':
' → logprob: -8.555826187133789
    8. '<|end|>' → logprob: -8.680826187133789
    9. '  
' → logprob: -8.805826187133789
    10. ' 
' → logprob: -9.305826187133789

Token 406: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20362164080142975
    2. '
' → logprob: -1.7036216259002686
    3. ':' → logprob: -7.328621864318848
    4. 'n' → logprob: -7.578621864318848
    5. '        
' → logprob: -7.703621864318848
    6. '<|end|>' → logprob: -9.078621864318848
    7. ':
' → logprob: -9.328621864318848
    8. '  
' → logprob: -9.703621864318848
    9. ',' → logprob: -9.828621864318848
    10. '```' → logprob: -10.328621864318848

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016754455282352865
    2. '        
' → logprob: -10.000167846679688
    3. 'n' → logprob: -10.625167846679688
    4. '        ' → logprob: -10.875167846679688
    5. ':' → logprob: -11.125167846679688
    6. '
' → logprob: -11.250167846679688
    7. 'count' → logprob: -11.250167846679688
    8. '   ' → logprob: -11.750167846679688
    9. '    
' → logprob: -12.625167846679688
    10. ',' → logprob: -12.750167846679688

Token 408: ' wn' (ID: 114982)
  Prédit: 'wn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wn' (adapté à ' wn') → logprob: -0.5965266227722168
    2. 'w' → logprob: -0.8465266227722168
    3. '       ' → logprob: -4.096526622772217
    4. 'count' → logprob: -6.096526622772217
    5. 'n' → logprob: -7.221526622772217
    6. ' wn' → logprob: -7.971526622772217
    7. 'cnt' → logprob: -8.346527099609375
    8. '   ' → logprob: -9.221527099609375
    9. 'wind' → logprob: -10.471527099609375
    10. ' winding' → logprob: -10.846527099609375

Token 409: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022777557373047
    2. '=' → logprob: -1.9102277755737305
    3. ',' → logprob: -13.03522777557373
    4. ' ' → logprob: -13.66022777557373
    5. '   ' → logprob: -16.285228729248047
    6. '  ' → logprob: -17.160228729248047
    7. ' ' → logprob: -17.160228729248047
    8. 'w' → logprob: -17.660228729248047
    9. ':' → logprob: -17.785228729248047
    10. '	' → logprob: -18.160228729248047

Token 410: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.12509536743164
    4. '  ' → logprob: -19.87509536743164
    5. '۰' → logprob: -20.00009536743164
    6. 'int' → logprob: -20.50009536743164
    7. '
' → logprob: -21.00009536743164
    8. '1' → logprob: -21.00009536743164
    9. '=' → logprob: -21.12509536743164
    10. '０' → logprob: -21.25009536743164

Token 411: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '۰' → logprob: -21.25
    4. '０' → logprob: -22.375
    5. 'int' → logprob: -22.375
    6. '   ' → logprob: -22.875
    7. '
' → logprob: -23.0
    8. 'zero' → logprob: -23.25
    9. '```' → logprob: -23.625
    10. '=' → logprob: -24.125

Token 412: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21362866461277008
    2. '       ' → logprob: -1.7136286497116089
    3. ' for' → logprob: -4.963628768920898
    4. 'for' → logprob: -5.838628768920898
    5. 'n' → logprob: -7.088628768920898
    6. ' n' → logprob: -8.088628768920898
    7. '
' → logprob: -8.588628768920898
    8. ' 
' → logprob: -8.713628768920898
    9. '        ' → logprob: -8.963628768920898
    10. '        
' → logprob: -9.213628768920898

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040002770721912384
    2. 'n' → logprob: -4.040002822875977
    3. '
' → logprob: -4.040002822875977
    4. ' n' → logprob: -6.040002822875977
    5. '   ' → logprob: -7.040002822875977
    6. ' for' → logprob: -8.290002822875977
    7. '    ' → logprob: -9.165002822875977
    8. 'for' → logprob: -9.665002822875977
    9. '      ' → logprob: -9.790002822875977
    10. ' ' → logprob: -9.915002822875977

Token 414: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0005694755236618221
    2. 'for' → logprob: -8.250569343566895
    3. ' n' → logprob: -8.250569343566895
    4. '   ' → logprob: -10.000569343566895
    5. ' for' → logprob: -13.625569343566895
    6. '       ' → logprob: -15.000569343566895
    7. '    ' → logprob: -16.75057029724121
    8. ' ' → logprob: -16.87557029724121
    9. '	n' → logprob: -17.25057029724121
    10. 'i' → logprob: -17.37557029724121

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05838947370648384
    2. '=' → logprob: -2.93338942527771
    3. '       ' → logprob: -5.683389663696289
    4. '   ' → logprob: -9.433389663696289
    5. ' ' → logprob: -11.558389663696289
    6. '    ' → logprob: -13.183389663696289
    7. '        ' → logprob: -13.308389663696289
    8. '=len' → logprob: -13.683389663696289
    9. 'for' → logprob: -14.308389663696289
    10. '  ' → logprob: -14.308389663696289

Token 416: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01814994215965271
    2. ' len' → logprob: -4.0181498527526855
    3. '(len' → logprob: -17.643150329589844
    4. '       ' → logprob: -20.143150329589844
    5. '   ' → logprob: -20.768150329589844
    6. '[len' → logprob: -21.143150329589844
    7. '=len' → logprob: -21.643150329589844
    8. '	len' → logprob: -21.893150329589844
    9. ' ' → logprob: -22.018150329589844
    10. '           ' → logprob: -23.768150329589844

Token 417: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.517272024415433e-05
    2. 'self' → logprob: -9.500075340270996
    3. '(' → logprob: -15.250075340270996
    4. ' self' → logprob: -17.62507438659668
    5. '(this' → logprob: -17.75007438659668
    6. ' (' → logprob: -18.37507438659668
    7. '[self' → logprob: -18.50007438659668
    8. '=self' → logprob: -18.75007438659668
    9. '	self' → logprob: -20.00007438659668
    10. '   ' → logprob: -20.12507438659668

Token 418: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.024986622855067253
    2. 'self' → logprob: -4.149986743927002
    3. '(self' → logprob: -4.774986743927002
    4. 'vertices' → logprob: -9.024986267089844
    5. '.' → logprob: -9.399986267089844
    6. '(vertices' → logprob: -9.649986267089844
    7. ' .' → logprob: -10.149986267089844
    8. '.self' → logprob: -10.149986267089844
    9. ' self' → logprob: -10.274986267089844
    10. ').' → logprob: -10.774986267089844

Token 419: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31341996788978577
    2. ')' → logprob: -1.3134199380874634
    3. '       ' → logprob: -8.938420295715332
    4. ' )
' → logprob: -11.313420295715332
    5. ')
' → logprob: -12.063420295715332
    6. ' )' → logprob: -12.688420295715332
    7. ')

' → logprob: -12.938420295715332
    8. '   ' → logprob: -13.313420295715332
    9. '
' → logprob: -14.938420295715332
    10. ' ' → logprob: -15.188420295715332

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005600620643235743
    2. ' for' → logprob: -8.12555980682373
    3. '
' → logprob: -8.87555980682373
    4. '   ' → logprob: -9.75055980682373
    5. '        
' → logprob: -10.37555980682373
    6. 'for' → logprob: -11.12555980682373
    7. '    
' → logprob: -11.62555980682373
    8. '  
' → logprob: -13.12555980682373
    9. ',' → logprob: -13.37555980682373
    10. '	' → logprob: -13.62555980682373

Token 421: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2595245838165283
    2. ' for' → logprob: -1.5095245838165283
    3. '       ' → logprob: -5.009524345397949
    4. 'i' → logprob: -7.634524345397949
    5. ' i' → logprob: -8.25952434539795
    6. '   ' → logprob: -8.88452434539795
    7. '	for' → logprob: -12.50952434539795
    8. ' ' → logprob: -12.63452434539795
    9. 'j' → logprob: -12.88452434539795
    10. '    ' → logprob: -14.38452434539795

Token 422: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12693923711776733
    2. ' i' → logprob: -2.126939296722412
    3. ' ' → logprob: -12.501938819885254
    4. '_i' → logprob: -12.626938819885254
    5. '   ' → logprob: -12.751938819885254
    6. '	i' → logprob: -14.001938819885254
    7. '  ' → logprob: -15.501938819885254
    8. '0' → logprob: -16.50193977355957
    9. '1' → logprob: -16.62693977355957
    10. ')' → logprob: -17.25193977355957

Token 423: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03367140144109726
    2. 'in' → logprob: -3.4086713790893555
    3. ' ' → logprob: -10.908671379089355
    4. ',' → logprob: -12.408671379089355
    5. '  ' → logprob: -13.783671379089355
    6. 'n' → logprob: -14.033671379089355
    7. '   ' → logprob: -15.283671379089355
    8. '
' → logprob: -15.283671379089355
    9. '	in' → logprob: -15.408671379089355
    10. '=' → logprob: -15.533671379089355

Token 424: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003177952254191041
    2. ' range' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.878177642822266
    4. ' ' → logprob: -16.128177642822266
    5. '  ' → logprob: -18.128177642822266
    6. '
' → logprob: -19.753177642822266
    7. '0' → logprob: -20.503177642822266
    8. '	range' → logprob: -20.628177642822266
    9. '    ' → logprob: -20.753177642822266
    10. '(range' → logprob: -21.128177642822266

Token 425: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04920412600040436
    2. '(n' → logprob: -3.049204111099243
    3. ' n' → logprob: -7.674204349517822
    4. '1' → logprob: -9.299203872680664
    5. '(' → logprob: -9.799203872680664
    6. '   ' → logprob: -12.799203872680664
    7. '	n' → logprob: -14.174203872680664
    8. ' (' → logprob: -14.424203872680664
    9. ',n' → logprob: -15.299203872680664
    10. '0' → logprob: -15.799203872680664

Token 426: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.049306824803352356
    2. '):' → logprob: -3.049306869506836
    3. ' ):
' → logprob: -7.924306869506836
    4. ':' → logprob: -9.299306869506836
    5. '   ' → logprob: -9.299306869506836
    6. '       ' → logprob: -10.049306869506836
    7. ':
' → logprob: -10.299306869506836
    8. '):
' → logprob: -10.549306869506836
    9. ' ):' → logprob: -10.549306869506836
    10. ' ' → logprob: -10.924306869506836

Token 427: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005003074649721384
    2. ' j' → logprob: -6.130002975463867
    3. ' p' → logprob: -6.755002975463867
    4. 'j' → logprob: -7.255002975463867
    5. '   ' → logprob: -8.130002975463867
    6. 'p' → logprob: -8.255002975463867
    7. ' ' → logprob: -9.505002975463867
    8. ' current' → logprob: -9.755002975463867
    9. ' a' → logprob: -9.880002975463867
    10. '	       ' → logprob: -10.005002975463867

Token 428: ' v' (ID: 323)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.14159487187862396
    2. 'vi' → logprob: -3.641594886779785
    3. 'current' → logprob: -3.766594886779785
    4. 'p' → logprob: -3.766594886779785
    5. 'v' (adapté à ' v') → logprob: -3.891594886779785
    6. 'cur' → logprob: -4.391594886779785
    7. 'pi' → logprob: -4.516594886779785
    8. '   ' → logprob: -5.016594886779785
    9. ' curr' → logprob: -5.016594886779785
    10. 'a' → logprob: -6.516594886779785

Token 429: '1' (ID: 16)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7384371757507324
    2. 'i' → logprob: -0.8634371757507324
    3. '(i' → logprob: -3.9884371757507324
    4. '_i' → logprob: -3.9884371757507324
    5. 'ert' → logprob: -4.113437175750732
    6. '=' → logprob: -4.113437175750732
    7. ' =' → logprob: -4.363437175750732
    8. '   ' → logprob: -5.363437175750732
    9. 'self' → logprob: -6.363437175750732
    10. 'al' → logprob: -6.613437175750732

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28119957447052
    2. ' =' → logprob: -1.40619957447052
    3. ',' → logprob: -10.15619945526123
    4. ' ' → logprob: -12.90619945526123
    5. '=self' → logprob: -13.28119945526123
    6. '   ' → logprob: -13.65619945526123
    7. '=v' → logprob: -13.78119945526123
    8. 'p' → logprob: -13.90619945526123
    9. '    ' → logprob: -14.53119945526123
    10. '=
' → logprob: -14.65619945526123

Token 431: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002475777640938759
    2. ' self' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.00247573852539
    4. '(self' → logprob: -17.00247573852539
    5. '	self' → logprob: -17.75247573852539
    6. 'p' → logprob: -18.00247573852539
    7. ' ' → logprob: -18.00247573852539
    8. '[self' → logprob: -18.37747573852539
    9. 'Point' → logprob: -19.00247573852539
    10. '
' → logprob: -19.25247573852539

Token 432: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.00035083942930214107
    2. 'vertices' → logprob: -8.500350952148438
    3. 'ert' → logprob: -9.250350952148438
    4. '.points' → logprob: -11.250350952148438
    5. '(vertices' → logprob: -11.375350952148438
    6. '.' → logprob: -12.000350952148438
    7. '   ' → logprob: -12.875350952148438
    8. '[i' → logprob: -12.875350952148438
    9. ' vertices' → logprob: -13.125350952148438
    10. 'er' → logprob: -13.125350952148438

Token 433: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. 'i' → logprob: -13.25000286102295
    3. ' [' → logprob: -14.37500286102295
    4. '[' → logprob: -15.12500286102295
    5. '(i' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.250003814697266
    7. ' i' → logprob: -16.625003814697266
    8. '
' → logprob: -16.625003814697266
    9. '[
' → logprob: -16.875003814697266
    10. '       ' → logprob: -16.875003814697266

Token 434: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13564060628414154
    2. ']
' → logprob: -2.2606406211853027
    3. '           ' → logprob: -4.635640621185303
    4. ']' → logprob: -5.635640621185303
    5. 'v' → logprob: -6.260640621185303
    6. ')
' → logprob: -6.635640621185303
    7. ' ' → logprob: -7.135640621185303
    8. ' 
' → logprob: -7.385640621185303
    9. '1' → logprob: -7.510640621185303
    10. '>
' → logprob: -7.510640621185303

Token 435: '           ' (ID: 352)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.9416479468345642
    2. '           ' → logprob: -0.9416479468345642
    3. 'v' → logprob: -1.566648006439209
    4. '	v' → logprob: -5.816648006439209
    5. ' ' → logprob: -6.316648006439209
    6. '   ' → logprob: -6.441648006439209
    7. ' 
' → logprob: -7.316648006439209
    8. ',' → logprob: -7.316648006439209
    9. '       ' → logprob: -7.316648006439209
    10. '<|end|>' → logprob: -7.816648006439209

Token 436: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.038087960332632065
    2. ' v' → logprob: -3.288087844848633
    3. '           ' → logprob: -10.038087844848633
    4. '	v' → logprob: -12.913087844848633
    5. '   ' → logprob: -16.038087844848633
    6. 'vq' → logprob: -16.788087844848633
    7. ' ' → logprob: -16.913087844848633
    8. 'vj' → logprob: -17.163087844848633
    9. '       ' → logprob: -17.538087844848633
    10. '
' → logprob: -17.663087844848633

Token 437: '2' (ID: 17)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.6071082353591919
    2. '1' → logprob: -1.107108235359192
    3. '(' → logprob: -2.7321081161499023
    4. 'v' → logprob: -3.4821081161499023
    5. '((' → logprob: -4.607108116149902
    6. '   ' → logprob: -5.607108116149902
    7. '(i' → logprob: -5.732108116149902
    8. '+' → logprob: -6.732108116149902
    9. '(next' → logprob: -6.732108116149902
    10. 'n' → logprob: -6.857108116149902

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759578943252563
    2. ' =' → logprob: -0.8259578943252563
    3. ' ' → logprob: -11.325958251953125
    4. '=self' → logprob: -13.325958251953125
    5. '<|end|>' → logprob: -14.325958251953125
    6. '       ' → logprob: -14.325958251953125
    7. '        ' → logprob: -14.450958251953125
    8. '   ' → logprob: -14.575958251953125
    9. ')' → logprob: -14.825958251953125
    10. '=
' → logprob: -15.075958251953125

Token 439: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16023488342761993
    2. ' self' → logprob: -1.9102349281311035
    3. ' ' → logprob: -12.785234451293945
    4. '(self' → logprob: -13.285234451293945
    5. '       ' → logprob: -13.660234451293945
    6. '   ' → logprob: -13.660234451293945
    7. '	self' → logprob: -13.910234451293945
    8. '           ' → logprob: -14.410234451293945
    9. '[self' → logprob: -14.660234451293945
    10. '=self' → logprob: -15.160234451293945

Token 440: '.vertices' (ID: 47509)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.2685863971710205
    2. '.vertices' → logprob: -1.5185863971710205
    3. 'vertices' → logprob: -4.143586158752441
    4. ' vertices' → logprob: -7.643586158752441
    5. '(vertices' → logprob: -9.393586158752441
    6. '_vertices' → logprob: -10.143586158752441
    7. '[' → logprob: -10.893586158752441
    8. ' [(' → logprob: -11.893586158752441
    9. '[i' → logprob: -12.018586158752441
    10. 's' → logprob: -12.893586158752441

Token 441: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -8.888114098226652e-05
    2. '[i' → logprob: -9.375088691711426
    3. '[' → logprob: -13.125088691711426
    4. '[
' → logprob: -13.250088691711426
    5. ' [(' → logprob: -16.125089645385742
    6. '   ' → logprob: -16.625089645385742
    7. '
' → logprob: -17.375089645385742
    8. '[((' → logprob: -17.625089645385742
    9. '((' → logprob: -18.000089645385742
    10. '(i' → logprob: -18.000089645385742

Token 442: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0021923754829913378
    2. '(i' → logprob: -6.127192497253418
    3. ' i' → logprob: -12.502192497253418
    4. '{i' → logprob: -13.377192497253418
    5. '   ' → logprob: -14.002192497253418
    6. ' (' → logprob: -14.252192497253418
    7. '```' → logprob: -16.0021915435791
    8. '_i' → logprob: -16.2521915435791
    9. '[i' → logprob: -16.5021915435791
    10. '`' → logprob: -17.2521915435791

Token 443: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07896139472723007
    2. ' +' → logprob: -2.5789613723754883
    3. '1' → logprob: -9.703961372375488
    4. '+i' → logprob: -11.703961372375488
    5. ' ' → logprob: -13.453961372375488
    6. 'i' → logprob: -15.078961372375488
    7. '+
' → logprob: -15.453961372375488
    8. '   ' → logprob: -16.578962326049805
    9. '
' → logprob: -16.703962326049805
    10. ' i' → logprob: -17.078962326049805

Token 444: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001835141738411039
    2. ' ' → logprob: -8.62518310546875
    3. '(' → logprob: -13.62518310546875
    4. 'i' → logprob: -13.75018310546875
    5. '(i' → logprob: -14.37518310546875
    6. '   ' → logprob: -15.25018310546875
    7. '```' → logprob: -15.87518310546875
    8. ' (' → logprob: -15.87518310546875
    9. '+' → logprob: -16.18768310546875
    10. 'n' → logprob: -16.56268310546875

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -10.375032424926758
    3. '(' → logprob: -13.750032424926758
    4. '(i' → logprob: -15.000032424926758
    5. 'i' → logprob: -16.750032424926758
    6. ' (' → logprob: -17.562532424926758
    7. '   ' → logprob: -17.812532424926758
    8. '
' → logprob: -17.875032424926758
    9. '(n' → logprob: -18.000032424926758
    10. 'n' → logprob: -18.687532424926758

Token 446: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005572011577896774
    2. ')%' → logprob: -7.5005574226379395
    3. ')
' → logprob: -12.750556945800781
    4. ' )' → logprob: -14.125556945800781
    5. ')]' → logprob: -15.000556945800781
    6. ']' → logprob: -16.12555694580078
    7. ')i' → logprob: -16.62555694580078
    8. '%' → logprob: -16.87555694580078
    9. ')

' → logprob: -17.00055694580078
    10. '0' → logprob: -18.12555694580078

Token 447: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.2574554681777954
    2. '%' → logprob: -1.5074554681777954
    3. ')' → logprob: -1.5074554681777954
    4. '%n' → logprob: -2.132455348968506
    5. ')%' → logprob: -2.257455348968506
    6. '%i' → logprob: -3.132455348968506
    7. ']' → logprob: -6.007455348968506
    8. 'n' → logprob: -6.882455348968506
    9. ']%' → logprob: -6.882455348968506
    10. 'i' → logprob: -8.132455825805664

Token 448: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033558503491804004
    2. ' n' → logprob: -8.000335693359375
    3. '	n' → logprob: -17.375335693359375
    4. '
' → logprob: -17.500335693359375
    5. ' ' → logprob: -17.625335693359375
    6. ']' → logprob: -17.750335693359375
    7. '   ' → logprob: -18.000335693359375
    8. '```' → logprob: -18.125335693359375
    9. ')n' → logprob: -18.750335693359375
    10. '``' → logprob: -19.250335693359375

Token 449: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.16242696344852448
    2. ']' → logprob: -1.9124269485473633
    3. ']

' → logprob: -6.162426948547363
    4. ']
' → logprob: -9.662426948547363
    5. ' ]
' → logprob: -10.912426948547363
    6. ' ]' → logprob: -12.662426948547363
    7. ']


' → logprob: -12.787426948547363
    8. '       ' → logprob: -13.162426948547363
    9. ')]' → logprob: -14.287426948547363
    10. ')
' → logprob: -14.412426948547363

Token 450: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4685729146003723
    2. '       ' → logprob: -1.3435728549957275
    3. '
' → logprob: -2.8435728549957275
    4. ' if' → logprob: -3.5935728549957275
    5. '            
' → logprob: -5.343573093414307
    6. '        
' → logprob: -5.343573093414307
    7. '  
' → logprob: -5.468573093414307
    8. '    
' → logprob: -5.968573093414307
    9. '<|end|>' → logprob: -5.968573093414307
    10. ' 
' → logprob: -6.093573093414307

Token 451: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16105523705482483
    2. ' if' → logprob: -1.9110552072525024
    3. '           ' → logprob: -7.161055088043213
    4. '   ' → logprob: -10.286055564880371
    5. '       ' → logprob: -11.286055564880371
    6. 'dy' → logprob: -12.786055564880371
    7. ' ' → logprob: -13.661055564880371
    8. '  ' → logprob: -14.286055564880371
    9. '         ' → logprob: -14.786055564880371
    10. '        ' → logprob: -14.911055564880371

Token 452: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.664371848164592e-05
    2. 'abs' → logprob: -11.875016212463379
    3. '(v' → logprob: -12.000016212463379
    4. ' v' → logprob: -13.375016212463379
    5. 'math' → logprob: -13.750016212463379
    6. '((' → logprob: -14.875016212463379
    7. 'p' → logprob: -15.375016212463379
    8. '   ' → logprob: -16.125017166137695
    9. '$v' → logprob: -17.375017166137695
    10. '(math' → logprob: -17.500017166137695

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. '2' → logprob: -11.375014305114746
    3. 'p' → logprob: -15.937514305114746
    4. '
' → logprob: -15.937514305114746
    5. '[' → logprob: -16.00001335144043
    6. 'ector' → logprob: -16.25001335144043
    7. '(p' → logprob: -16.31251335144043
    8. '(Point' → logprob: -16.43751335144043
    9. 'ert' → logprob: -16.68751335144043
    10. '```' → logprob: -16.75001335144043

Token 454: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.04869580268859863
    2. '.' → logprob: -3.0486958026885986
    3. ' .' → logprob: -9.92369556427002
    4. '.x' → logprob: -10.29869556427002
    5. '<=' → logprob: -11.67369556427002
    6. 'y' → logprob: -11.79869556427002
    7. '==' → logprob: -12.67369556427002
    8. ' <=' → logprob: -13.54869556427002
    9. ').' → logprob: -14.04869556427002
    10. '[' → logprob: -14.54869556427002

Token 455: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.22542813420295715
    2. ' <=' → logprob: -1.6004281044006348
    3. ')<=' → logprob: -11.475428581237793
    4. ']<=' → logprob: -13.600428581237793
    5. '<' → logprob: -13.725428581237793
    6. '```' → logprob: -13.725428581237793
    7. '==' → logprob: -15.225428581237793
    8. ')' → logprob: -15.350428581237793
    9. ' ' → logprob: -15.850428581237793
    10. '<|end|>' → logprob: -16.225427627563477

Token 456: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00043102685594931245
    2. ' p' → logprob: -7.750431060791016
    3. '<p' → logprob: -15.125431060791016
    4. '	p' → logprob: -17.625431060791016
    5. '   ' → logprob: -18.875431060791016
    6. '_p' → logprob: -19.250431060791016
    7. ' ' → logprob: -19.375431060791016
    8. '[' → logprob: -20.250431060791016
    9. '
' → logprob: -20.375431060791016
    10. '<' → logprob: -20.875431060791016

Token 457: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.05638817325234413
    2. '.' → logprob: -2.9313881397247314
    3. 'y' → logprob: -6.5563883781433105
    4. ' .' → logprob: -10.181387901306152
    5. '.x' → logprob: -11.056387901306152
    6. '[' → logprob: -11.556387901306152
    7. 'and' → logprob: -11.681387901306152
    8. '.
' → logprob: -12.931387901306152
    9. ' and' → logprob: -12.931387901306152
    10. '   ' → logprob: -13.806387901306152

Token 458: ':
' (ID: 734)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2999770939350128
    2. '<' → logprob: -1.6749770641326904
    3. ' and' → logprob: -3.4249770641326904
    4. 'and' → logprob: -3.9249770641326904
    5. ':
' → logprob: -4.1749773025512695
    6. '<p' → logprob: -6.4249773025512695
    7. '<v' → logprob: -7.1749773025512695
    8. ':' → logprob: -7.2999773025512695
    9. '<n' → logprob: -7.7999773025512695
    10. ':<' → logprob: -8.67497730255127

Token 459: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08557480573654175
    2. ' <' → logprob: -3.4605748653411865
    3. '               ' → logprob: -4.335574626922607
    4. '           ' → logprob: -4.460574626922607
    5. ':
' → logprob: -4.710574626922607
    6. ':' → logprob: -5.710574626922607
    7. 'and' → logprob: -5.710574626922607
    8. ' ' → logprob: -6.085574626922607
    9. '   ' → logprob: -6.335574626922607
    10. '       ' → logprob: -6.460574626922607

Token 460: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.434087336063385
    2. 'if' (adapté à ' if') → logprob: -1.0590872764587402
    3. '                   ' → logprob: -5.43408727645874
    4. '               ' → logprob: -7.68408727645874
    5. '   ' → logprob: -8.309087753295898
    6. ' ' → logprob: -8.934087753295898
    7. '           ' → logprob: -9.559087753295898
    8. 'If' → logprob: -10.559087753295898
    9. '	if' → logprob: -10.684087753295898
    10. '       ' → logprob: -11.559087753295898

Token 461: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016234712675213814
    2. ' v' → logprob: -4.141234874725342
    3. '(v' → logprob: -9.266234397888184
    4. 'p' → logprob: -9.391234397888184
    5. ' (' → logprob: -12.266234397888184
    6. '   ' → logprob: -12.391234397888184
    7. ' p' → logprob: -12.516234397888184
    8. '	v' → logprob: -12.641234397888184
    9. '(' → logprob: -13.016234397888184
    10. ' ' → logprob: -13.891234397888184

Token 462: '2' (ID: 17)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.031518902629613876
    2. '2' → logprob: -3.5315189361572266
    3. '.x' → logprob: -8.031518936157227
    4. 'p' → logprob: -8.031518936157227
    5. '[' → logprob: -8.156518936157227
    6. '.' → logprob: -8.531518936157227
    7. '1' → logprob: -8.531518936157227
    8. 'y' → logprob: -9.281518936157227
    9. '.v' → logprob: -9.531518936157227
    10. '.p' → logprob: -10.406518936157227

Token 463: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.001730510382913053
    2. '.' → logprob: -6.376730442047119
    3. ' .' → logprob: -10.876730918884277
    4. 'y' → logprob: -11.876730918884277
    5. '>' → logprob: -14.001730918884277
    6. '.x' → logprob: -14.501730918884277
    7. '>.' → logprob: -14.501730918884277
    8. '<|end|>' → logprob: -16.00172996520996
    9. ' >' → logprob: -16.62672996520996
    10. 'and' → logprob: -16.75172996520996

Token 464: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47422683238983154
    2. '>' → logprob: -0.9742268323898315
    3. ' ' → logprob: -8.849226951599121
    4. '">' → logprob: -13.474226951599121
    5. '   ' → logprob: -13.724226951599121
    6. '  ' → logprob: -14.224226951599121
    7. ' ' → logprob: -14.349226951599121
    8. ' >
' → logprob: -15.099226951599121
    9. '>
' → logprob: -15.474226951599121
    10. '.' → logprob: -15.474226951599121

Token 465: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.002476604888215661
    2. 'p' → logprob: -6.002476692199707
    3. ' ' → logprob: -14.752476692199707
    4. ' ' → logprob: -14.752476692199707
    5. ' 
' → logprob: -16.25247573852539
    6. '	p' → logprob: -17.25247573852539
    7. '(p' → logprob: -17.62747573852539
    8. ',' → logprob: -18.00247573852539
    9. ' п' → logprob: -18.12747573852539
    10. '```' → logprob: -18.12747573852539

Token 466: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.20400367677211761
    2. 'y' → logprob: -1.7040036916732788
    3. '.' → logprob: -6.829003810882568
    4. ' y' → logprob: -6.954003810882568
    5. ' .' → logprob: -7.704003810882568
    6. 'p' → logprob: -10.45400333404541
    7. ' ' → logprob: -10.45400333404541
    8. '	y' → logprob: -11.20400333404541
    9. '   ' → logprob: -11.32900333404541
    10. '.p' → logprob: -12.20400333404541

Token 467: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0030450967606157064
    2. ':' → logprob: -6.128045082092285
    3. 'and' → logprob: -7.878045082092285
    4. ':
' → logprob: -8.503045082092285
    5. '           ' → logprob: -8.753045082092285
    6. '                   ' → logprob: -10.003045082092285
    7. '               ' → logprob: -10.003045082092285
    8. ' ' → logprob: -11.253045082092285
    9. '<|end|>' → logprob: -12.378045082092285
    10. ' :' → logprob: -13.003045082092285

Token 468: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.03586520627140999
    2. '(p' → logprob: -4.160865306854248
    3. ' (' → logprob: -4.535865306854248
    4. '((' → logprob: -5.785865306854248
    5. '           ' → logprob: -5.785865306854248
    6. '               ' → logprob: -6.785865306854248
    7. '                   ' → logprob: -7.785865306854248
    8. '(' → logprob: -8.53586483001709
    9. '   ' → logprob: -8.66086483001709
    10. '       ' → logprob: -8.78586483001709

Token 469: 'v' (ID: 85)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0007975964690558612
    2. '           ' → logprob: -7.750797748565674
    3. 'v' → logprob: -8.500797271728516
    4. ' (' → logprob: -9.375797271728516
    5. '(p' → logprob: -10.375797271728516
    6. '               ' → logprob: -10.625797271728516
    7. '(' → logprob: -11.625797271728516
    8. '   ' → logprob: -12.250797271728516
    9. '                   ' → logprob: -12.500797271728516
    10. '       ' → logprob: -13.625797271728516

Token 470: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006748527754098177
    2. 'p' → logprob: -6.131748676300049
    3. '1' → logprob: -6.631748676300049
    4. ' -' → logprob: -6.756748676300049
    5. '(p' → logprob: -7.131748676300049
    6. '-p' → logprob: -8.00674819946289
    7. '-' → logprob: -8.13174819946289
    8. '   ' → logprob: -8.88174819946289
    9. ' (' → logprob: -9.50674819946289
    10. ' p' → logprob: -9.88174819946289

Token 471: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47411590814590454
    2. ' -' → logprob: -0.9741159081459045
    3. ' ' → logprob: -11.474116325378418
    4. '-p' → logprob: -11.724116325378418
    5. '   ' → logprob: -11.849116325378418
    6. '-sub' → logprob: -12.349116325378418
    7. '-
' → logprob: -13.224116325378418
    8. '-v' → logprob: -13.599116325378418
    9. '  ' → logprob: -13.724116325378418
    10. '
' → logprob: -14.474116325378418

Token 472: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00014096579980105162
    2. 'p' → logprob: -9.125141143798828
    3. ' v' → logprob: -10.375141143798828
    4. '	v' → logprob: -14.500141143798828
    5. ')v' → logprob: -16.500141143798828
    6. 'Point' → logprob: -17.000141143798828
    7. '_v' → logprob: -17.625141143798828
    8. ')' → logprob: -17.750141143798828
    9. 'vq' → logprob: -17.875141143798828
    10. 'vj' → logprob: -18.000141143798828

Token 473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'p' → logprob: -15.75
    3. '```' → logprob: -17.1875
    4. 'v' → logprob: -17.3125
    5. ')' → logprob: -17.625
    6. '১' → logprob: -17.8125
    7. '१' → logprob: -18.3125
    8. '{' → logprob: -18.5625
    9. '۱' → logprob: -18.625
    10. '   ' → logprob: -19.0

Token 474: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -2.176947600673884e-05
    2. ' ).' → logprob: -11.500021934509277
    3. ')' → logprob: -12.500021934509277
    4. ' cross' → logprob: -12.625021934509277
    5. 'cross' → logprob: -13.875021934509277
    6. '   ' → logprob: -14.125021934509277
    7. '.cross' → logprob: -14.250021934509277
    8. 'Cross' → logprob: -14.250021934509277
    9. '           ' → logprob: -14.625021934509277
    10. ').__' → logprob: -15.125021934509277

Token 475: 'cross' (ID: 52400)
  Prédit: 'cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0014363046502694488
    2. '.cross' → logprob: -6.626436233520508
    3. ' cross' → logprob: -9.126436233520508
    4. '(c' → logprob: -14.626436233520508
    5. '
' → logprob: -15.001436233520508
    6. '(' → logprob: -15.001436233520508
    7. '(p' → logprob: -15.751436233520508
    8. '(Point' → logprob: -16.376436233520508
    9. 'cc' → logprob: -16.751436233520508
    10. '   ' → logprob: -16.876436233520508

Token 476: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.04885747656226158
    2. 'p' → logprob: -3.0488574504852295
    3. ' (' → logprob: -8.798857688903809
    4. '(' → logprob: -9.673857688903809
    5. ' p' → logprob: -10.298857688903809
    6. '
' → logprob: -12.298857688903809
    7. '(
' → logprob: -12.673857688903809
    8. '   ' → logprob: -12.673857688903809
    9. '(Point' → logprob: -12.798857688903809
    10. '((' → logprob: -13.048857688903809

Token 477: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5761198401451111
    2. ' -' → logprob: -0.8261198401451111
    3. '-v' → logprob: -8.701119422912598
    4. '-sub' → logprob: -12.076119422912598
    5. '-
' → logprob: -12.951119422912598
    6. '-vector' → logprob: -13.701119422912598
    7. '-V' → logprob: -13.951119422912598
    8. '-start' → logprob: -14.451119422912598
    9. ' ' → logprob: -14.576119422912598
    10. '-point' → logprob: -14.826119422912598

Token 478: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.4121114822482923e-06
    2. ' v' → logprob: -12.625003814697266
    3. '	v' → logprob: -16.250003814697266
    4. '   ' → logprob: -18.375003814697266
    5. 'Point' → logprob: -20.000003814697266
    6. '_v' → logprob: -20.625003814697266
    7. ')v' → logprob: -20.875003814697266
    8. '<v' → logprob: -21.000003814697266
    9. '[v' → logprob: -21.250003814697266
    10. '(v' → logprob: -21.750003814697266

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. 'v' → logprob: -12.375004768371582
    3. 'f' → logprob: -17.875003814697266
    4. 'al' → logprob: -18.625003814697266
    5. '```' → logprob: -18.750003814697266
    6. 'y' → logprob: -19.187503814697266
    7. 'alue' → logprob: -19.250003814697266
    8. 'x' → logprob: -19.500003814697266
    9. 'l' → logprob: -19.812503814697266
    10. '   ' → logprob: -19.875003814697266

Token 480: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012194052105769515
    2. ')>' → logprob: -6.876219272613525
    3. ' )' → logprob: -8.626219749450684
    4. '>' → logprob: -12.751219749450684
    5. ')>=' → logprob: -13.751219749450684
    6. ')
' → logprob: -14.001219749450684
    7. ')<' → logprob: -14.376219749450684
    8. '0' → logprob: -14.626219749450684
    9. '())' → logprob: -14.751219749450684
    10. '))' → logprob: -16.251218795776367

Token 481: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.28237608075141907
    2. ' >' → logprob: -1.4073760509490967
    3. '()>' → logprob: -7.032376289367676
    4. ')>' → logprob: -9.282376289367676
    5. ')' → logprob: -9.657376289367676
    6. '()' → logprob: -10.032376289367676
    7. '    ' → logprob: -10.282376289367676
    8. '   ' → logprob: -10.907376289367676
    9. '0' → logprob: -11.032376289367676
    10. ' ' → logprob: -11.157376289367676

Token 482: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.250036239624023
    4. '۰' → logprob: -20.875036239624023
    5. '  ' → logprob: -21.125036239624023
    6. '    ' → logprob: -21.625036239624023
    7. '     ' → logprob: -21.750036239624023
    8. '       ' → logprob: -21.875036239624023
    9. '=' → logprob: -22.375036239624023
    10. '1' → logprob: -22.500036239624023

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.250158309936523
    4. '۰' → logprob: -18.500158309936523
    5. '  ' → logprob: -20.000158309936523
    6. '=' → logprob: -20.125158309936523
    7. '  ' → logprob: -20.500158309936523
    8. '<|end|>' → logprob: -20.625158309936523
    9. '     ' → logprob: -20.687658309936523
    10. '    ' → logprob: -20.812658309936523

Token 484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11748377233743668
    2. ':
' → logprob: -2.2424838542938232
    3. '           ' → logprob: -5.742483615875244
    4. '               ' → logprob: -6.867483615875244
    5. '                   ' → logprob: -8.867484092712402
    6. '):
' → logprob: -9.117484092712402
    7. ' :' → logprob: -10.117484092712402
    8. '):' → logprob: -10.617484092712402
    9. ' :
' → logprob: -10.617484092712402
    10. ':return' → logprob: -11.242484092712402

Token 485: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.47122758626937866
    2. '               ' → logprob: -1.0962276458740234
    3. '           ' → logprob: -3.4712276458740234
    4. '                       ' → logprob: -4.721227645874023
    5. '       ' → logprob: -7.221227645874023
    6. ':' → logprob: -8.846227645874023
    7. ':
' → logprob: -8.971227645874023
    8. '
' → logprob: -9.346227645874023
    9. '\n' → logprob: -9.846227645874023
    10. '                           ' → logprob: -9.971227645874023

Token 486: ' wn' (ID: 114982)
  Prédit: 'wn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wn' (adapté à ' wn') → logprob: -0.0024920646101236343
    2. ' wn' → logprob: -6.0024919509887695
    3. '                   ' → logprob: -11.50249195098877
    4. '   ' → logprob: -13.00249195098877
    5. '
' → logprob: -13.75249195098877
    6. '1' → logprob: -14.00249195098877
    7. '                       ' → logprob: -14.12749195098877
    8. '               ' → logprob: -14.50249195098877
    9. '           ' → logprob: -15.25249195098877
    10. 'wnd' → logprob: -15.37749195098877

Token 487: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004111523274332285
    2. ' +=' → logprob: -5.504111289978027
    3. '+' → logprob: -10.629111289978027
    4. '=' → logprob: -12.754111289978027
    5. ']+=' → logprob: -13.129111289978027
    6. '               ' → logprob: -13.254111289978027
    7. '                   ' → logprob: -13.504111289978027
    8. '           ' → logprob: -14.879111289978027
    9. '                       ' → logprob: -15.254111289978027
    10. '            ' → logprob: -16.879112243652344

Token 488: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.62506675720215
    4. '+' → logprob: -19.25006675720215
    5. '  ' → logprob: -19.37506675720215
    6. '```' → logprob: -20.25006675720215
    7. '    ' → logprob: -20.87506675720215
    8. ' ' → logprob: -20.93756675720215
    9. '۱' → logprob: -21.50006675720215
    10. '１' → logprob: -21.56256675720215

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -20.375
    4. '0' → logprob: -20.75
    5. '+' → logprob: -21.0
    6. '```' → logprob: -21.5
    7. '  ' → logprob: -22.1875
    8. '１' → logprob: -22.3125
    9. '१' → logprob: -22.5625
    10. '۱' → logprob: -22.625

Token 490: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005381396040320396
    2. '       ' → logprob: -8.125537872314453
    3. '               ' → logprob: -9.625537872314453
    4. '<|end|>' → logprob: -10.375537872314453
    5. '		' → logprob: -10.625537872314453
    6. '	       ' → logprob: -11.000537872314453
    7. ' else' → logprob: -11.125537872314453
    8. '.' → logprob: -11.250537872314453
    9. '            ' → logprob: -11.500537872314453
    10. '          ' → logprob: -11.750537872314453

Token 491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.126521035796031e-05
    2. '               ' → logprob: -10.375091552734375
    3. '       ' → logprob: -10.375091552734375
    4. '		' → logprob: -11.875091552734375
    5. '            ' → logprob: -12.250091552734375
    6. '	       ' → logprob: -12.250091552734375
    7. ' else' → logprob: -12.750091552734375
    8. '          ' → logprob: -13.000091552734375
    9. ' ' → logprob: -13.750091552734375
    10. '
' → logprob: -14.000091552734375

Token 492: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033981870859861374
    2. ' else' → logprob: -3.9089818000793457
    3. 'else' (adapté à ' else') → logprob: -4.783981800079346
    4. '       ' → logprob: -5.533981800079346
    5. ' elif' → logprob: -7.283981800079346
    6. 'elif' → logprob: -8.033982276916504
    7. '               ' → logprob: -11.908982276916504
    8. '   ' → logprob: -12.033982276916504
    9. '          ' → logprob: -12.658982276916504
    10. '         ' → logprob: -12.783982276916504

Token 493: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03792419284582138
    2. '           ' → logprob: -4.037924289703369
    3. ':
' → logprob: -4.412924289703369
    4. ' if' → logprob: -5.287924289703369
    5. '               ' → logprob: -6.412924289703369
    6. 'if' → logprob: -8.162923812866211
    7. '       ' → logprob: -8.662923812866211
    8. '            ' → logprob: -9.037923812866211
    9. ' :' → logprob: -10.037923812866211
    10. '        ' → logprob: -10.662923812866211

Token 494: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5441114902496338
    2. '               ' → logprob: -1.0441114902496338
    3. 'if' → logprob: -2.794111490249634
    4. '           ' → logprob: -5.044111251831055
    5. '            ' → logprob: -11.919111251831055
    6. '                   ' → logprob: -12.919111251831055
    7. '   ' → logprob: -13.044111251831055
    8. '             ' → logprob: -13.044111251831055
    9. '              ' → logprob: -13.169111251831055
    10. '       ' → logprob: -13.169111251831055

Token 495: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2544745206832886
    2. ' if' → logprob: -1.5044745206832886
    3. '               ' → logprob: -6.004474639892578
    4. '           ' → logprob: -9.879474639892578
    5. '                   ' → logprob: -11.004474639892578
    6. ' ' → logprob: -13.629474639892578
    7. '   ' → logprob: -13.754474639892578
    8. 'If' → logprob: -14.004474639892578
    9. 'elif' → logprob: -14.004474639892578
    10. '	if' → logprob: -14.504474639892578

Token 496: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06222222000360489
    2. ' v' → logprob: -2.8122222423553467
    3. '(v' → logprob: -8.312222480773926
    4. '	v' → logprob: -12.812222480773926
    5. ' (' → logprob: -12.937222480773926
    6. '   ' → logprob: -13.562222480773926
    7. '$v' → logprob: -14.437222480773926
    8. '(' → logprob: -15.062222480773926
    9. 'not' → logprob: -15.437222480773926
    10. '[v' → logprob: -15.562222480773926

Token 497: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. '1' → logprob: -14.812501907348633
    3. 'v' → logprob: -15.312501907348633
    4. ' ' → logprob: -16.000001907348633
    5. 'ectors' → logprob: -16.250001907348633
    6. ' v' → logprob: -16.250001907348633
    7. 's' → logprob: -16.562501907348633
    8. '[' → logprob: -16.687501907348633
    9. '   ' → logprob: -16.812501907348633
    10. '(v' → logprob: -16.875001907348633

Token 498: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00014120421838015318
    2. '.' → logprob: -9.625141143798828
    3. 'y' → logprob: -9.625141143798828
    4. ' .' → logprob: -11.875141143798828
    5. ' y' → logprob: -13.375141143798828
    6. ' ' → logprob: -15.625141143798828
    7. '	y' → logprob: -16.250141143798828
    8. '<|end|>' → logprob: -16.500141143798828
    9. '[' → logprob: -16.750141143798828
    10. ''y' → logprob: -16.875141143798828

Token 499: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.33409029245376587
    2. '<' → logprob: -1.459090232849121
    3. ' <=' → logprob: -3.334090232849121
    4. '<=' → logprob: -4.334090232849121
    5. '<p' → logprob: -5.959090232849121
    6. ' p' → logprob: -9.334090232849121
    7. ' ' → logprob: -9.334090232849121
    8. 'p' → logprob: -10.834090232849121
    9. ' >' → logprob: -12.209090232849121
    10. '>' → logprob: -12.459090232849121

Token 500: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.1002068892121315
    2. 'p' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.975207328796387
    4. ' ' → logprob: -16.85020637512207
    5. '	p' → logprob: -17.47520637512207
    6. ' 
' → logprob: -18.35020637512207
    7. '
' → logprob: -18.85020637512207
    8. '(p' → logprob: -18.97520637512207
    9. ' п' → logprob: -19.10020637512207
    10. '_p' → logprob: -19.22520637512207

Token 501: '.y' (ID: 4486)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.030046096071600914
    2. 'p' → logprob: -3.530045986175537
    3. ' y' → logprob: -8.405046463012695
    4. '.p' → logprob: -10.530046463012695
    5. ' .' → logprob: -10.905046463012695
    6. ' ' → logprob: -11.530046463012695
    7. 'y' → logprob: -12.030046463012695
    8. '.' → logprob: -12.405046463012695
    9. '   ' → logprob: -13.155046463012695
    10. '	p' → logprob: -13.780046463012695

Token 502: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006211393047124147
    2. 'and' → logprob: -5.131211280822754
    3. '                   ' → logprob: -8.256211280822754
    4. ':
' → logprob: -11.631211280822754
    5. ' ' → logprob: -12.131211280822754
    6. '               ' → logprob: -12.256211280822754
    7. ':' → logprob: -13.006211280822754
    8. ',' → logprob: -15.006211280822754
    9. '           ' → logprob: -15.381211280822754
    10. '   ' → logprob: -15.381211280822754

Token 503: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.033732373267412186
    2. ' (' → logprob: -3.5337324142456055
    3. '(p' → logprob: -5.5337324142456055
    4. ' ' → logprob: -11.408732414245605
    5. '   ' → logprob: -12.658732414245605
    6. '(b' → logprob: -13.033732414245605
    7. '           ' → logprob: -13.533732414245605
    8. '       ' → logprob: -14.158732414245605
    9. '               ' → logprob: -14.158732414245605
    10. '     ' → logprob: -14.533732414245605

Token 504: 'v' (ID: 85)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.22583985328674316
    2. 'v' → logprob: -1.6008398532867432
    3. '(p' → logprob: -8.350839614868164
    4. '(v' → logprob: -8.600839614868164
    5. ' p' → logprob: -12.850839614868164
    6. ' v' → logprob: -13.850839614868164
    7. '   ' → logprob: -14.350839614868164
    8. '
' → logprob: -14.475839614868164
    9. '	v' → logprob: -14.850839614868164
    10. '	p' → logprob: -14.975839614868164

Token 505: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029720881138928235
    2. 'p' → logprob: -8.375297546386719
    3. 'v' → logprob: -10.875297546386719
    4. ' p' → logprob: -11.250297546386719
    5. ' -' → logprob: -11.500297546386719
    6. '-' → logprob: -11.750297546386719
    7. '1' → logprob: -12.375297546386719
    8. ' ' → logprob: -12.500297546386719
    9. '(p' → logprob: -13.625297546386719
    10. '(' → logprob: -14.187797546386719

Token 506: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759501457214355
    2. '-' → logprob: -0.8259501457214355
    3. ' ' → logprob: -12.450950622558594
    4. '-p' → logprob: -13.075950622558594
    5. '-point' → logprob: -13.200950622558594
    6. '-
' → logprob: -14.325950622558594
    7. '-sub' → logprob: -14.450950622558594
    8. ' -
' → logprob: -15.325950622558594
    9. '```' → logprob: -15.450950622558594
    10. '[' → logprob: -15.575950622558594

Token 507: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005533903022296727
    2. ' v' → logprob: -7.500553607940674
    3. '	v' → logprob: -15.375553131103516
    4. 'p' → logprob: -16.750553131103516
    5. 'Point' → logprob: -16.750553131103516
    6. ')v' → logprob: -17.125553131103516
    7. '```' → logprob: -17.500553131103516
    8. '
' → logprob: -18.000553131103516
    9. '   ' → logprob: -18.000553131103516
    10. '[v' → logprob: -18.375553131103516

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.281485836254433e-05
    2. 'v' → logprob: -9.375092506408691
    3. 'f' → logprob: -12.000092506408691
    4. 'p' → logprob: -13.500092506408691
    5. 'Point' → logprob: -16.125093460083008
    6. 'l' → logprob: -16.500093460083008
    7. 'point' → logprob: -16.750093460083008
    8. 'r' → logprob: -17.750093460083008
    9. ' v' → logprob: -17.875093460083008
    10. 'import' → logprob: -18.125093460083008

Token 509: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00022845028433948755
    2. ')' → logprob: -8.625228881835938
    3. '-' → logprob: -11.125228881835938
    4. ' ).' → logprob: -11.500228881835938
    5. ').__' → logprob: -12.125228881835938
    6. 'p' → logprob: -12.375228881835938
    7. '(p' → logprob: -12.500228881835938
    8. ' -' → logprob: -12.625228881835938
    9. ' ' → logprob: -13.000228881835938
    10. '(' → logprob: -13.500228881835938

Token 510: 'cross' (ID: 52400)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0022763425949960947
    2. 'p' → logprob: -6.127276420593262
    3. '(v' → logprob: -9.502276420593262
    4. ' v' → logprob: -11.502276420593262
    5. '(p' → logprob: -12.377276420593262
    6. '1' → logprob: -14.127276420593262
    7. 'vp' → logprob: -15.377276420593262
    8. '
' → logprob: -15.752276420593262
    9. '	v' → logprob: -16.002275466918945
    10. '   ' → logprob: -16.002275466918945

Token 511: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -12.00001049041748
    3. ' (' → logprob: -12.75001049041748
    4. 'p' → logprob: -13.50001049041748
    5. '(
' → logprob: -17.000011444091797
    6. '
' → logprob: -17.875011444091797
    7. ' p' → logprob: -18.375011444091797
    8. '<p' → logprob: -19.250011444091797
    9. '(point' → logprob: -19.500011444091797
    10. ')' → logprob: -19.625011444091797

Token 512: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4749545454978943
    2. ' -' → logprob: -0.9749545454978943
    3. '-p' → logprob: -7.099954605102539
    4. '-point' → logprob: -10.224954605102539
    5. ')' → logprob: -12.474954605102539
    6. ' ' → logprob: -12.849954605102539
    7. '-v' → logprob: -12.974954605102539
    8. ' p' → logprob: -13.349954605102539
    9. '-)' → logprob: -13.724954605102539
    10. '-
' → logprob: -14.099954605102539

Token 513: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.023944882676005363
    2. '1' → logprob: -3.773944854736328
    3. ' v' → logprob: -7.273944854736328
    4. 'Point' → logprob: -13.773944854736328
    5. '	v' → logprob: -13.898944854736328
    6. 'p' → logprob: -14.273944854736328
    7. '[v' → logprob: -14.523944854736328
    8. ')v' → logprob: -14.648944854736328
    9. '_v' → logprob: -14.773944854736328
    10. 'vi' → logprob: -15.023944854736328

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. 'p' → logprob: -14.625000953674316
    3. ')' → logprob: -15.500000953674316
    4. '```' → logprob: -16.125001907348633
    5. '2' → logprob: -16.250001907348633
    6. '-' → logprob: -17.062501907348633
    7. ' ' → logprob: -17.062501907348633
    8. ' p' → logprob: -17.437501907348633
    9. 'alue' → logprob: -17.625001907348633
    10. '   ' → logprob: -17.937501907348633

Token 515: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003951648832298815
    2. ')<' → logprob: -7.87539529800415
    3. '<' → logprob: -11.625394821166992
    4. ' )' → logprob: -13.250394821166992
    5. ' <' → logprob: -13.500394821166992
    6. ')
' → logprob: -14.375394821166992
    7. '()' → logprob: -14.875394821166992
    8. '   ' → logprob: -15.000394821166992
    9. '0' → logprob: -15.250394821166992
    10. '```' → logprob: -15.500394821166992

Token 516: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02649710699915886
    2. ' <' → logprob: -3.6514971256256104
    3. '0' → logprob: -9.151496887207031
    4. ')<' → logprob: -9.651496887207031
    5. ')' → logprob: -11.026496887207031
    6. '()<' → logprob: -12.401496887207031
    7. ' ' → logprob: -13.151496887207031
    8. '[' → logprob: -14.401496887207031
    9. '}<' → logprob: -15.026496887207031
    10. ']<' → logprob: -15.026496887207031

Token 517: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861468818038702
    2. ' ' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.383615493774414
    4. '   ' → logprob: -17.133615493774414
    5. '=' → logprob: -17.883615493774414
    6. '  ' → logprob: -18.758615493774414
    7. '1' → logprob: -18.821115493774414
    8. '[' → logprob: -19.196115493774414
    9. ',' → logprob: -19.383615493774414
    10. '```' → logprob: -19.508615493774414

Token 518: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234121344983578
    2. ' ' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.505233764648438
    4. '=' → logprob: -16.505233764648438
    5. '  ' → logprob: -17.380233764648438
    6. ' ' → logprob: -18.380233764648438
    7. '1' → logprob: -18.692733764648438
    8. '۰' → logprob: -18.817733764648438
    9. '```' → logprob: -19.005233764648438
    10. '00' → logprob: -19.067733764648438

Token 519: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1291809380054474
    2. ':
' → logprob: -2.129180908203125
    3. '                   ' → logprob: -6.754180908203125
    4. ' :' → logprob: -7.504180908203125
    5. ' :
' → logprob: -8.504180908203125
    6. '               ' → logprob: -8.879180908203125
    7. '):
' → logprob: -9.879180908203125
    8. '           ' → logprob: -10.004180908203125
    9. '):' → logprob: -10.004180908203125
    10. '       ' → logprob: -11.879180908203125

Token 520: '                   ' (ID: 699)
  Prédit: 'wn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wn' → logprob: -0.3522833287715912
    2. ' wn' → logprob: -1.6022833585739136
    3. '                   ' → logprob: -2.352283239364624
    4. '               ' → logprob: -8.477283477783203
    5. '                       ' → logprob: -9.602283477783203
    6. 'wnd' → logprob: -11.102283477783203
    7. '           ' → logprob: -11.352283477783203
    8. '   ' → logprob: -12.602283477783203
    9. 'wj' → logprob: -12.727283477783203
    10. ',' → logprob: -12.727283477783203

Token 521: ' wn' (ID: 114982)
  Prédit: 'wn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wn' (adapté à ' wn') → logprob: -0.0004306692280806601
    2. ' wn' → logprob: -7.750430583953857
    3. '                   ' → logprob: -17.125431060791016
    4. 'wnd' → logprob: -18.625431060791016
    5. '               ' → logprob: -19.000431060791016
    6. '           ' → logprob: -20.625431060791016
    7. '
' → logprob: -21.000431060791016
    8. '1' → logprob: -21.125431060791016
    9. '                       ' → logprob: -21.250431060791016
    10. '       ' → logprob: -21.500431060791016

Token 522: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.01452697440981865
    2. ' -=' → logprob: -4.264526844024658
    3. '-' → logprob: -8.014527320861816
    4. '+=' → logprob: -10.639527320861816
    5. '   ' → logprob: -13.014527320861816
    6. '       ' → logprob: -13.264527320861816
    7. '           ' → logprob: -13.514527320861816
    8. '    ' → logprob: -14.139527320861816
    9. '=' → logprob: -14.264527320861816
    10. '            ' → logprob: -14.889527320861816

Token 523: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -18.003599166870117
    4. ' ' → logprob: -18.628599166870117
    5. '```' → logprob: -19.503599166870117
    6. '0' → logprob: -19.878599166870117
    7. '           ' → logprob: -20.503599166870117
    8. '１' → logprob: -20.691099166870117
    9. '                   ' → logprob: -21.066099166870117
    10. '۱' → logprob: -21.253599166870117

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -20.50000762939453
    4. '   ' → logprob: -20.75000762939453
    5. '۱' → logprob: -21.68750762939453
    6. '<|end|>' → logprob: -21.93750762939453
    7. ' ' → logprob: -22.37500762939453
    8. '１' → logprob: -22.37500762939453
    9. '0' → logprob: -22.43750762939453
    10. '-' → logprob: -22.87500762939453

Token 525: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00570977758616209
    2. '
' → logprob: -5.255709648132324
    3. ' return' → logprob: -8.630709648132324
    4. '<|end|>' → logprob: -8.880709648132324
    5. 'return' → logprob: -9.880709648132324
    6. '   ' → logprob: -10.880709648132324
    7. '	' → logprob: -11.130709648132324
    8. '	return' → logprob: -11.130709648132324
    9. '        
' → logprob: -11.505709648132324
    10. '           ' → logprob: -12.005709648132324

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003576304006855935
    2. ' return' → logprob: -8.875357627868652
    3. 'return' → logprob: -9.125357627868652
    4. '<|end|>' → logprob: -9.875357627868652
    5. '   ' → logprob: -11.000357627868652
    6. '
' → logprob: -11.000357627868652
    7. '	return' → logprob: -12.250357627868652
    8. '	' → logprob: -12.625357627868652
    9. '           ' → logprob: -12.750357627868652
    10. '      ' → logprob: -13.125357627868652

Token 527: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15273183584213257
    2. ' return' → logprob: -2.6527318954467773
    3. 'return' (adapté à ' return') → logprob: -2.6527318954467773
    4. '
' → logprob: -7.777731895446777
    5. '	return' → logprob: -8.902731895446777
    6. '   ' → logprob: -9.652731895446777
    7. '<|end|>' → logprob: -10.277731895446777
    8. '	' → logprob: -11.027731895446777
    9. 'eturn' → logprob: -11.527731895446777
    10. ' ' → logprob: -11.527731895446777

Token 528: ' wn' (ID: 114982)
  Prédit: 'wn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wn' → logprob: -0.10020699352025986
    2. ' wn' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.475207328796387
    4. '(' → logprob: -16.85020637512207
    5. 'w' → logprob: -17.22520637512207
    6. 'wnd' → logprob: -17.35020637512207
    7. ' ' → logprob: -17.85020637512207
    8. 'wo' → logprob: -19.22520637512207
    9. 'bool' → logprob: -19.47520637512207
    10. 'wr' → logprob: -19.47520637512207

Token 529: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.02978578582406044
    2. ' !=' → logprob: -3.5297858715057373
    3. '!' → logprob: -10.404786109924316
    4. '()!=' → logprob: -12.779786109924316
    5. ')!=' → logprob: -13.654786109924316
    6. ' ' → logprob: -15.654786109924316
    7. '>' → logprob: -15.779786109924316
    8. '!==' → logprob: -15.904786109924316
    9. '0' → logprob: -16.27978515625
    10. ']!=' → logprob: -16.65478515625

Token 530: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. ' ' → logprob: -20.25020408630371
    4. '۰' → logprob: -21.37520408630371
    5. '```' → logprob: -21.62520408630371
    6. '_' → logprob: -22.00020408630371
    7. '=' → logprob: -22.12520408630371
    8. ' ' → logprob: -22.37520408630371
    9. '   ' → logprob: -22.62520408630371
    10. '#' → logprob: -22.75020408630371

Token 531: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۰' → logprob: -21.375
    4. '```' → logprob: -22.625
    5. '０' → logprob: -22.75
    6. 'zero' → logprob: -22.875
    7. '=' → logprob: -23.625
    8. '   ' → logprob: -23.75
    9. ' ' → logprob: -24.375
    10. ' ' → logprob: -24.375

Token 532: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4457116425037384
    2. '<|end|>' → logprob: -1.070711612701416
    3. '

' → logprob: -4.195711612701416
    4. '<|end|>' → logprob: -6.820711612701416
    5. '


' → logprob: -8.195712089538574
    6. '   ' → logprob: -8.820712089538574
    7. '```' → logprob: -9.570712089538574
    8. '    
' → logprob: -10.195712089538574
    9. '\n' → logprob: -10.195712089538574
    10. 'def' → logprob: -10.445712089538574

Token 533: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07216884195804596
    2. '   ' → logprob: -2.9471688270568848
    3. '<|end|>' → logprob: -4.947168827056885
    4. '

' → logprob: -5.072168827056885
    5. '    
' → logprob: -7.322168827056885
    6. '```' → logprob: -7.572168827056885
    7. 'def' → logprob: -7.697168827056885
    8. '\n' → logprob: -7.822168827056885
    9. ' ' → logprob: -8.322169303894043
    10. '<|end|>' → logprob: -8.322169303894043

Token 534: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6737875938415527
    2. '   ' → logprob: -1.0487875938415527
    3. '<|end|>' → logprob: -2.1737875938415527
    4. 'def' (adapté à ' def') → logprob: -4.798787593841553
    5. '

' → logprob: -5.173787593841553
    6. ' ' → logprob: -5.423787593841553
    7. '    
' → logprob: -6.048787593841553
    8. '<|end|>' → logprob: -6.423787593841553
    9. '```' → logprob: -6.673787593841553
    10. ' 
' → logprob: -8.048788070678711

Token 535: ' intersects' (ID: 198484)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8409501314163208
    2. 'is' → logprob: -1.5909501314163208
    3. ' convex' → logprob: -2.4659500122070312
    4. ' triang' → logprob: -2.9659500122070312
    5. 'conv' → logprob: -3.2159500122070312
    6. ' area' → logprob: -3.3409500122070312
    7. '__' → logprob: -3.4659500122070312
    8. ' __' → logprob: -3.9659500122070312
    9. 'area' → logprob: -4.215950012207031
    10. 'contains' → logprob: -4.215950012207031

Token 536: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.6048955321311951
    2. '(self' → logprob: -0.8548955321311951
    3. '_line' → logprob: -4.22989559173584
    4. '_self' → logprob: -5.35489559173584
    5. 'self' → logprob: -6.22989559173584
    6. '_with' → logprob: -6.22989559173584
    7. '_' → logprob: -6.60489559173584
    8. '_point' → logprob: -6.60489559173584
    9. '_edge' → logprob: -6.60489559173584
    10. '_polygon' → logprob: -7.22989559173584

Token 537: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.656383680412546e-05
    2. '(' → logprob: -10.000046730041504
    3. ' (' → logprob: -14.375046730041504
    4. 'self' → logprob: -15.375046730041504
    5. '(
' → logprob: -15.875046730041504
    6. '   ' → logprob: -16.000045776367188
    7. '(s' → logprob: -17.375045776367188
    8. ' ' → logprob: -17.625045776367188
    9. ' self' → logprob: -17.625045776367188
    10. '=self' → logprob: -17.875045776367188

Token 538: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016551809676457196
    2. 'self' → logprob: -9.125165939331055
    3. ' (' → logprob: -11.125165939331055
    4. ')' → logprob: -11.375165939331055
    5. ',' → logprob: -11.375165939331055
    6. '(' → logprob: -12.000165939331055
    7. '   ' → logprob: -12.500165939331055
    8. ' self' → logprob: -12.500165939331055
    9. ')(' → logprob: -12.750165939331055
    10. '       ' → logprob: -14.250165939331055

Token 539: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010338395833969116
    2. 'p' → logprob: -4.760338306427002
    3. ' self' → logprob: -6.385338306427002
    4. ' p' → logprob: -10.88533878326416
    5. '   ' → logprob: -11.13533878326416
    6. '	self' → logprob: -13.88533878326416
    7. '       ' → logprob: -14.01033878326416
    8. '(self' → logprob: -14.26033878326416
    9. 's' → logprob: -15.63533878326416
    10. ')' → logprob: -15.88533878326416

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015601289458572865
    2. ',' → logprob: -4.51560115814209
    3. 'self' → logprob: -6.01560115814209
    4. ':' → logprob: -6.76560115814209
    5. ')' → logprob: -8.26560115814209
    6. '   ' → logprob: -8.39060115814209
    7. '_' → logprob: -9.01560115814209
    8. ' self' → logprob: -9.14060115814209
    9. '_,' → logprob: -9.89060115814209
    10. '):' → logprob: -10.26560115814209

Token 541: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.97024549683556e-05
    2. ':' → logprob: -9.625080108642578
    3. ' ,' → logprob: -12.250080108642578
    4. ',p' → logprob: -12.250080108642578
    5. 'self' → logprob: -13.125080108642578
    6. '   ' → logprob: -13.875080108642578
    7. 'p' → logprob: -14.625080108642578
    8. ',
' → logprob: -15.500080108642578
    9. ',self' → logprob: -16.375080108642578
    10. '       ' → logprob: -16.750080108642578

Token 542: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.07891324907541275
    2. ' Point' → logprob: -2.5789132118225098
    3. '_Point' → logprob: -11.203913688659668
    4. '_point' → logprob: -12.328913688659668
    5. '<Point' → logprob: -13.078913688659668
    6. '	Point' → logprob: -13.453913688659668
    7. '.Point' → logprob: -13.703913688659668
    8. '(Point' → logprob: -14.703913688659668
    9. ' point' → logprob: -16.20391273498535
    10. 'Points' → logprob: -16.45391273498535

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ',p' → logprob: -11.37501335144043
    3. ' ,' → logprob: -13.37501335144043
    4. '   ' → logprob: -15.87501335144043
    5. 'p' → logprob: -16.50001335144043
    6. ',
' → logprob: -17.75001335144043
    7. '       ' → logprob: -18.50001335144043
    8. '_,' → logprob: -19.12501335144043
    9. ')' → logprob: -19.25001335144043
    10. ':' → logprob: -20.00001335144043

Token 544: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.061968132853507996
    2. 'p' → logprob: -2.8119680881500244
    3. 'Point' → logprob: -15.186967849731445
    4. ' Point' → logprob: -15.811967849731445
    5. '   ' → logprob: -16.561967849731445
    6. '	p' → logprob: -17.936967849731445
    7. '    ' → logprob: -18.436967849731445
    8. ' ' → logprob: -19.436967849731445
    9. ' ' → logprob: -20.061967849731445
    10. ')' → logprob: -20.061967849731445

Token 545: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5928495486150496e-05
    2. ',' → logprob: -11.750016212463379
    3. ')' → logprob: -13.000016212463379
    4. '_' → logprob: -13.500016212463379
    5. '```' → logprob: -13.500016212463379
    6. '₂' → logprob: -14.125016212463379
    7. ':' → logprob: -15.125016212463379
    8. '
' → logprob: -15.375016212463379
    9. 'oint' → logprob: -15.375016212463379
    10. 't' → logprob: -15.500016212463379

Token 546: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010270876373397186
    2. ':' → logprob: -9.375102996826172
    3. '')' → logprob: -11.875102996826172
    4. '   ' → logprob: -12.000102996826172
    5. ' )' → logprob: -12.875102996826172
    6. '`)' → logprob: -14.000102996826172
    7. ' ' → logprob: -15.500102996826172
    8. '       ' → logprob: -15.625102996826172
    9. '):' → logprob: -15.625102996826172
    10. '=' → logprob: -16.000102996826172

Token 547: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.01815006136894226
    2. ' Point' → logprob: -4.0181498527526855
    3. ')' → logprob: -16.518150329589844
    4. '	Point' → logprob: -17.893150329589844
    5. '   ' → logprob: -18.018150329589844
    6. '_Point' → logprob: -18.268150329589844
    7. ' ' → logprob: -18.768150329589844
    8. '.Point' → logprob: -19.768150329589844
    9. '_point' → logprob: -20.143150329589844
    10. ' point' → logprob: -20.393150329589844

Token 548: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.375001907348633
    4. '')' → logprob: -15.000001907348633
    5. 'self' → logprob: -16.125001907348633
    6. '       ' → logprob: -17.250001907348633
    7. '`)' → logprob: -17.375001907348633
    8. '")' → logprob: -17.750001907348633
    9. '):
' → logprob: -18.000001907348633
    10. ')
' → logprob: -18.000001907348633

Token 549: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.5931811928749084
    2. ')' → logprob: -0.8431811928749084
    3. '->' → logprob: -4.218181133270264
    4. '       ' → logprob: -6.343181133270264
    5. '   ' → logprob: -7.843181133270264
    6. ')->' → logprob: -9.218181610107422
    7. ':' → logprob: -10.218181610107422
    8. ' ' → logprob: -10.468181610107422
    9. ' )' → logprob: -10.718181610107422
    10. '(self' → logprob: -11.343181610107422

Token 550: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -1.1756367712223437e-05
    2. ' bool' → logprob: -11.500011444091797
    3. 'any' → logprob: -14.125011444091797
    4. '   ' → logprob: -14.500011444091797
    5. ' ' → logprob: -16.500011444091797
    6. '
' → logprob: -17.000011444091797
    7. '	bool' → logprob: -17.750011444091797
    8. 'Any' → logprob: -17.875011444091797
    9. 'Optional' → logprob: -18.125011444091797
    10. '  ' → logprob: -18.125011444091797

Token 551: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001953967846930027
    2. '       ' → logprob: -7.001954078674316
    3. ':
' → logprob: -7.001954078674316
    4. '):' → logprob: -9.501954078674316
    5. '   ' → logprob: -10.876954078674316
    6. ' :' → logprob: -10.876954078674316
    7. ')' → logprob: -12.251954078674316
    8. '():' → logprob: -12.751954078674316
    9. ',' → logprob: -13.001954078674316
    10. '):
' → logprob: -13.001954078674316

Token 552: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013640470569953322
    2. ' for' → logprob: -6.626364231109619
    3. 'for' → logprob: -10.626363754272461
    4. '   ' → logprob: -12.001363754272461
    5. '
' → logprob: -12.876363754272461
    6. ')' → logprob: -13.501363754272461
    7. ':' → logprob: -13.876363754272461
    8. '):
' → logprob: -14.501363754272461
    9. ',' → logprob: -14.626363754272461
    10. ' ' → logprob: -14.751363754272461

Token 553: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.811579167842865
    2. '       ' → logprob: -1.0615792274475098
    3. 'for' → logprob: -1.5615792274475098
    4. '   ' → logprob: -9.561578750610352
    5. 'return' → logprob: -10.561578750610352
    6. '
' → logprob: -11.686578750610352
    7. ' return' → logprob: -11.686578750610352
    8. 'n' → logprob: -11.811578750610352
    9. ' ' → logprob: -12.311578750610352
    10. '	for' → logprob: -12.561578750610352

Token 554: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010342398309148848
    2. 'return' → logprob: -9.250102996826172
    3. '       ' → logprob: -12.000102996826172
    4. ' for' → logprob: -13.750102996826172
    5. '   ' → logprob: -16.500102996826172
    6. '
' → logprob: -18.750102996826172
    7. '"""' → logprob: -19.375102996826172
    8. 'n' → logprob: -20.625102996826172
    9. '```' → logprob: -20.875102996826172
    10. '	for' → logprob: -21.375102996826172

Token 555: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.503923773765564
    2. ' for' → logprob: -1.253923773765564
    3. '       ' → logprob: -2.2539238929748535
    4. ' any' → logprob: -5.2539238929748535
    5. 'any' → logprob: -8.878923416137695
    6. 'return' → logprob: -9.628923416137695
    7. '   ' → logprob: -10.753923416137695
    8. ' return' → logprob: -11.253923416137695
    9. ' ' → logprob: -12.128923416137695
    10. '           ' → logprob: -13.753923416137695

Token 556: ' segment' (ID: 14806)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0003397535183466971
    2. ' any' → logprob: -8.00033950805664
    3. 'self' → logprob: -12.87533950805664
    4. '   ' → logprob: -13.50033950805664
    5. 'for' → logprob: -14.75033950805664
    6. '       ' → logprob: -17.00033950805664
    7. '           ' → logprob: -19.12533950805664
    8. '
' → logprob: -19.25033950805664
    9. '    ' → logprob: -19.37533950805664
    10. 'p' → logprob: -19.37533950805664

Token 557: ' p' (ID: 275)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.01761259324848652
    2. 'any' → logprob: -4.392612457275391
    3. ' intersects' → logprob: -6.392612457275391
    4. ' p' → logprob: -6.642612457275391
    5. ' self' → logprob: -7.267612457275391
    6. ' or' → logprob: -8.01761245727539
    7. ' from' → logprob: -8.26761245727539
    8. 'self' → logprob: -8.26761245727539
    9. ' for' → logprob: -9.39261245727539
    10. 'from' → logprob: -9.64261245727539

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. '```' → logprob: -12.37501335144043
    3. '_' → logprob: -13.00001335144043
    4. 'oints' → logprob: -13.12501335144043
    5. 'resents' → logprob: -14.12501335144043
    6. ' ' → logprob: -14.25001335144043
    7. ' intersects' → logprob: -14.62501335144043
    8. '   ' → logprob: -14.62501335144043
    9. ')' → logprob: -14.75001335144043
    10. 'oint' → logprob: -15.00001335144043

Token 559: 'p' (ID: 79)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7875019311904907
    2. ')' → logprob: -1.9125019311904907
    3. ' and' → logprob: -2.412501811981201
    4. 'p' → logprob: -2.662501811981201
    5. ' intersects' → logprob: -2.912501811981201
    6. ' or' → logprob: -3.037501811981201
    7. ' p' → logprob: -3.537501811981201
    8. '-' → logprob: -3.787501811981201
    9. ' ' → logprob: -3.787501811981201
    10. 'inter' → logprob: -4.412501811981201

Token 560: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.032732851803302765
    2. '1' → logprob: -3.5327329635620117
    3. '_' → logprob: -6.157732963562012
    4. '```' → logprob: -8.032732963562012
    5. '   ' → logprob: -8.532732963562012
    6. 'oints' → logprob: -9.282732963562012
    7. '-' → logprob: -9.532732963562012
    8. 'p' → logprob: -10.157732963562012
    9. '_segment' → logprob: -10.157732963562012
    10. 'oint' → logprob: -10.907732963562012

Token 561: ' intersects' (ID: 198484)
  Prédit: ' intersects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersects' → logprob: -0.24379216134548187
    2. ' in' → logprob: -1.743792176246643
    3. ' ' → logprob: -3.6187920570373535
    4. 'in' → logprob: -5.1187920570373535
    5. ' is' → logprob: -5.8687920570373535
    6. ' touches' → logprob: -6.3687920570373535
    7. 'inter' → logprob: -6.7437920570373535
    8. '   ' → logprob: -6.8687920570373535
    9. ' crosses' → logprob: -7.6187920570373535
    10. ')' → logprob: -7.8687920570373535

Token 562: ' polygon' (ID: 65081)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.01836988516151905
    2. 'any' → logprob: -4.018369674682617
    3. ' with' → logprob: -9.393369674682617
    4. 'with' → logprob: -10.018369674682617
    5. 'self' → logprob: -10.268369674682617
    6. '       ' → logprob: -10.643369674682617
    7. ' self' → logprob: -11.018369674682617
    8. ' the' → logprob: -11.893369674682617
    9. '_any' → logprob: -12.893369674682617
    10. 'Any' → logprob: -13.643369674682617

Token 563: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00982869602739811
    2. ' for' → logprob: -5.134828567504883
    3. '   ' → logprob: -5.884828567504883
    4. ' ' → logprob: -8.259828567504883
    5. 'for' → logprob: -8.884828567504883
    6. ':' → logprob: -9.259828567504883
    7. '.' → logprob: -9.509828567504883
    8. ':
' → logprob: -9.509828567504883
    9. ' any' → logprob: -9.634828567504883
    10. ')' → logprob: -9.759828567504883

Token 564: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6411587595939636
    2. ':' → logprob: -1.0161588191986084
    3. '   ' → logprob: -2.3911588191986084
    4. '<|end|>' → logprob: -4.516158580780029
    5. ':
' → logprob: -5.891158580780029
    6. ')' → logprob: -6.266158580780029
    7. ',' → logprob: -7.391158580780029
    8. '<|end|>' → logprob: -7.516158580780029
    9. ' for' → logprob: -7.641158580780029
    10. ' ' → logprob: -7.766158580780029

Token 565: ' if' (ID: 538)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.27839395403862
    2. 'self' → logprob: -2.0283939838409424
    3. ' p' → logprob: -2.4033939838409424
    4. ' any' → logprob: -4.653393745422363
    5. 'any' → logprob: -5.403393745422363
    6. ' self' → logprob: -5.528393745422363
    7. 'not' → logprob: -6.903393745422363
    8. 'Point' → logprob: -7.403393745422363
    9. 'point' → logprob: -8.278393745422363
    10. ' not' → logprob: -8.278393745422363

Token 566: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010547225829213858
    2. ' self' → logprob: -7.626054763793945
    3. 'Point' → logprob: -8.251054763793945
    4. 'any' → logprob: -8.501054763793945
    5. '   ' → logprob: -10.751054763793945
    6. 'p' → logprob: -11.001054763793945
    7. 'either' → logprob: -11.126054763793945
    8. 'Polygon' → logprob: -11.251054763793945
    9. '(self' → logprob: -11.501054763793945
    10. 'not' → logprob: -11.501054763793945

Token 567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005072583444416523
    2. 'oint' → logprob: -5.630072593688965
    3. 'oints' → logprob: -6.755072593688965
    4. 'olygon' → logprob: -9.005072593688965
    5. '```' → logprob: -10.880072593688965
    6. ')' → logprob: -11.005072593688965
    7. '_' → logprob: -11.255072593688965
    8. 'oin' → logprob: -11.505072593688965
    9. 'ol' → logprob: -11.692572593688965
    10. '2' → logprob: -12.005072593688965

Token 568: ' or' (ID: 503)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2302720993757248
    2. ' or' → logprob: -2.480272054672241
    3. ' in' → logprob: -2.980272054672241
    4. 'or' → logprob: -3.605272054672241
    5. '.' → logprob: -4.48027229309082
    6. 'is' → logprob: -4.60527229309082
    7. ' is' → logprob: -5.23027229309082
    8. 'inside' → logprob: -5.35527229309082
    9. 'and' → logprob: -5.73027229309082
    10. ' ' → logprob: -5.98027229309082

Token 569: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009766360744833946
    2. ' p' → logprob: -4.634766578674316
    3. 'self' → logprob: -12.009766578674316
    4. '   ' → logprob: -13.009766578674316
    5. ' self' → logprob: -13.509766578674316
    6. '       ' → logprob: -15.009766578674316
    7. '    ' → logprob: -16.134765625
    8. ' ' → logprob: -16.634765625
    9. '```' → logprob: -16.884765625
    10. '           ' → logprob: -17.009765625

Token 570: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0032818098552525043
    2. 'p' → logprob: -6.253281593322754
    3. ' p' → logprob: -7.753281593322754
    4. ' or' → logprob: -8.003281593322754
    5. '_' → logprob: -8.253281593322754
    6. ' ' → logprob: -8.753281593322754
    7. 'or' → logprob: -9.628281593322754
    8. '1' → logprob: -10.378281593322754
    9. '```' → logprob: -10.878281593322754
    10. ')' → logprob: -11.378281593322754

Token 571: ' inside' (ID: 6772)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06660471111536026
    2. ' in' → logprob: -3.0666046142578125
    3. 'is' → logprob: -4.8166046142578125
    4. 'in' → logprob: -5.1916046142578125
    5. ' inside' → logprob: -6.5666046142578125
    6. ' are' → logprob: -7.3166046142578125
    7. ')' → logprob: -7.3166046142578125
    8. ' or' → logprob: -7.8166046142578125
    9. ' ' → logprob: -8.191604614257812
    10. '   ' → logprob: -8.316604614257812

Token 572: ' polygon' (ID: 65081)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2735484838485718
    2. '(self' → logprob: -1.3985484838485718
    3. ' self' → logprob: -1.6485484838485718
    4. '       ' → logprob: -1.8985484838485718
    5. ' or' → logprob: -2.5235486030578613
    6. '(p' → logprob: -3.5235486030578613
    7. ':
' → logprob: -5.023548603057861
    8. '   ' → logprob: -5.523548603057861
    9. ' (' → logprob: -6.148548603057861
    10. 'p' → logprob: -6.898548603057861

Token 573: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003132917219772935
    2. ':' → logprob: -7.1281328201293945
    3. '
' → logprob: -7.1281328201293945
    4. ':
' → logprob: -7.2531328201293945
    5. ' or' → logprob: -8.128132820129395
    6. '   ' → logprob: -8.378132820129395
    7. ',' → logprob: -9.253132820129395
    8. ')' → logprob: -10.003132820129395
    9. ' for' → logprob: -10.253132820129395
    10. '      ' → logprob: -11.378132820129395

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006559056229889393
    2. '
' → logprob: -5.256558895111084
    3. ':' → logprob: -7.506558895111084
    4. ':
' → logprob: -7.631558895111084
    5. '   ' → logprob: -9.506559371948242
    6. '        
' → logprob: -10.506559371948242
    7. '<|end|>' → logprob: -10.631559371948242
    8. '):
' → logprob: -10.756559371948242
    9. '  
' → logprob: -10.756559371948242
    10. '    
' → logprob: -10.756559371948242

Token 575: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35567861795425415
    2. '       ' → logprob: -1.8556785583496094
    3. 'if' (adapté à ' if') → logprob: -2.1056785583496094
    4. ' for' → logprob: -4.230678558349609
    5. ' if' → logprob: -5.230678558349609
    6. '
' → logprob: -7.230678558349609
    7. '   ' → logprob: -7.480678558349609
    8. 'return' → logprob: -11.98067855834961
    9. '
' → logprob: -13.48067855834961
    10. ' ' → logprob: -13.85567855834961

Token 576: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006313055637292564
    2. ' self' → logprob: -7.375631332397461
    3. 'any' → logprob: -12.875631332397461
    4. '(self' → logprob: -13.500631332397461
    5. '
' → logprob: -15.500631332397461
    6. '	self' → logprob: -15.875631332397461
    7. 'elf' → logprob: -16.00063133239746
    8. 'p' → logprob: -16.25063133239746
    9. '[self' → logprob: -16.62563133239746
    10. ' any' → logprob: -16.62563133239746

Token 577: '.contains' (ID: 13678)
  Prédit: '.contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.contains' → logprob: -6.861651490908116e-05
    2. '.' → logprob: -9.875068664550781
    3. '.cont' → logprob: -11.625068664550781
    4. ' .' → logprob: -13.375068664550781
    5. '.inter' → logprob: -13.500068664550781
    6. '.has' → logprob: -13.750068664550781
    7. '.vertices' → logprob: -13.750068664550781
    8. '.contents' → logprob: -14.125068664550781
    9. '>.' → logprob: -14.500068664550781
    10. '.includes' → logprob: -14.625068664550781

Token 578: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -2.963691804325208e-05
    2. '(p' → logprob: -10.500029563903809
    3. 'p' → logprob: -14.000029563903809
    4. '_p' → logprob: -14.625029563903809
    5. '_points' → logprob: -15.500029563903809
    6. 'Point' → logprob: -15.625029563903809
    7. 'point' → logprob: -15.875029563903809
    8. '_Point' → logprob: -16.250030517578125
    9. ' _' → logprob: -17.375030517578125
    10. ' p' → logprob: -17.625030517578125

Token 579: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.750003814697266
    3. ' (' → logprob: -15.000003814697266
    4. '(
' → logprob: -17.375003814697266
    5. 'p' → logprob: -18.125003814697266
    6. '(P' → logprob: -18.500003814697266
    7. ' p' → logprob: -18.625003814697266
    8. ')' → logprob: -19.125003814697266
    9. '(s' → logprob: -19.625003814697266
    10. '(point' → logprob: -20.000003814697266

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. 'oint' → logprob: -12.375006675720215
    3. ')' → logprob: -14.250006675720215
    4. 'oints' → logprob: -14.250006675720215
    5. '```' → logprob: -15.500006675720215
    6. '2' → logprob: -16.1875057220459
    7. 't' → logprob: -17.3125057220459
    8. 'p' → logprob: -17.4375057220459
    9. 'oin' → logprob: -17.5625057220459
    10. 'Point' → logprob: -17.8750057220459

Token 581: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067266179248690605
    2. ' )' → logprob: -5.0067267417907715
    3. '):' → logprob: -11.756726264953613
    4. ' or' → logprob: -13.506726264953613
    5. '):
' → logprob: -14.131726264953613
    6. 'or' → logprob: -14.381726264953613
    7. ' ):' → logprob: -14.631726264953613
    8. ' ):
' → logprob: -16.88172721862793
    9. ')
' → logprob: -17.38172721862793
    10. '   ' → logprob: -17.50672721862793

Token 582: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.006723891478031874
    2. 'or' → logprob: -5.006723880767822
    3. '           ' → logprob: -12.25672435760498
    4. '       ' → logprob: -13.75672435760498
    5. ' ' → logprob: -13.88172435760498
    6. ':' → logprob: -14.25672435760498
    7. '        ' → logprob: -15.50672435760498
    8. '	or' → logprob: -15.63172435760498
    9. '    ' → logprob: -15.75672435760498
    10. '   ' → logprob: -15.88172435760498

Token 583: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759477615356445
    2. 'self' → logprob: -0.8259477615356445
    3. ' ' → logprob: -13.200947761535645
    4. '	self' → logprob: -13.700947761535645
    5. '       ' → logprob: -13.950947761535645
    6. '           ' → logprob: -14.200947761535645
    7. '        ' → logprob: -14.450947761535645
    8. ' ' → logprob: -14.575947761535645
    9. 's' → logprob: -14.700947761535645
    10. '(self' → logprob: -14.825947761535645

Token 584: '.contains' (ID: 13678)
  Prédit: '.contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.contains' → logprob: -0.31344348192214966
    2. '.inter' → logprob: -1.3134434223175049
    3. '.' → logprob: -9.188443183898926
    4. '.cont' → logprob: -9.688443183898926
    5. ' .' → logprob: -11.563443183898926
    6. 'contains' → logprob: -13.063443183898926
    7. 'inter' → logprob: -13.813443183898926
    8. ').' → logprob: -13.938443183898926
    9. '>.' → logprob: -14.813443183898926
    10. '.Contains' → logprob: -14.813443183898926

Token 585: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -4.584861744660884e-05
    2. 'point' → logprob: -10.500045776367188
    3. '(p' → logprob: -11.250045776367188
    4. 'Point' → logprob: -12.375045776367188
    5. 'p' → logprob: -14.875045776367188
    6. '(point' → logprob: -15.250045776367188
    7. '_Point' → logprob: -16.250045776367188
    8. ' point' → logprob: -16.750045776367188
    9. '_POINT' → logprob: -17.250045776367188
    10. '(Point' → logprob: -17.375045776367188

Token 586: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.008726375177502632
    2. '(' → logprob: -4.758726596832275
    3. ' (' → logprob: -9.133726119995117
    4. '(
' → logprob: -12.633726119995117
    5. '(P' → logprob: -15.508726119995117
    6. '(s' → logprob: -16.383726119995117
    7. ' ' → logprob: -16.758726119995117
    8. '(

' → logprob: -16.758726119995117
    9. ')' → logprob: -17.008726119995117
    10. 'p' → logprob: -17.133726119995117

Token 587: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -17.0
    4. 'oint' → logprob: -17.125
    5. '۲' → logprob: -17.25
    6. ')' → logprob: -17.375
    7. 'oints' → logprob: -17.625
    8. '
' → logprob: -17.875
    9. '₂' → logprob: -18.0
    10. '２' → logprob: -18.25

Token 588: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004923362284898758
    2. ')' → logprob: -6.129923343658447
    3. '):
' → logprob: -6.254923343658447
    4. ' ):' → logprob: -7.129923343658447
    5. '):
' → logprob: -12.504923820495605
    6. '   ' → logprob: -12.879923820495605
    7. ' )' → logprob: -13.254923820495605
    8. '       ' → logprob: -13.379923820495605
    9. ' ):
' → logprob: -13.629923820495605
    10. ':' → logprob: -13.879923820495605

Token 589: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25895270705223083
    2. '           ' → logprob: -1.5089527368545532
    3. ':' → logprob: -5.758952617645264
    4. ':
' → logprob: -6.258952617645264
    5. ' return' → logprob: -7.258952617645264
    6. '
' → logprob: -7.383952617645264
    7. '   ' → logprob: -8.758953094482422
    8. ':return' → logprob: -9.133953094482422
    9. 'return' → logprob: -9.633953094482422
    10. ' or' → logprob: -9.633953094482422

Token 590: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6653844714164734
    2. '       ' → logprob: -1.4153845310211182
    3. 'return' (adapté à ' return') → logprob: -1.9153845310211182
    4. ' return' → logprob: -2.540384531021118
    5. '
' → logprob: -4.665384292602539
    6. '   ' → logprob: -6.165384292602539
    7. '               ' → logprob: -6.415384292602539
    8. '	return' → logprob: -6.665384292602539
    9. ' True' → logprob: -7.415384292602539
    10. ':return' → logprob: -7.540384292602539

Token 591: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.615255839889869e-05
    2. ' True' → logprob: -9.250096321105957
    3. 'False' → logprob: -17.87509536743164
    4. '(True' → logprob: -19.50009536743164
    5. '
' → logprob: -19.75009536743164
    6. '   ' → logprob: -20.25009536743164
    7. '=True' → logprob: -21.12509536743164
    8. '           ' → logprob: -21.37509536743164
    9. '       ' → logprob: -21.62509536743164
    10. 'true' → logprob: -21.75009536743164

Token 592: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.127034991979599
    2. '
' → logprob: -2.127034902572632
    3. '        
' → logprob: -9.752035140991211
    4. '  
' → logprob: -11.502035140991211
    5. '\n' → logprob: -11.752035140991211
    6. '    
' → logprob: -12.002035140991211
    7. ' or' → logprob: -12.252035140991211
    8. '
' → logprob: -12.377035140991211
    9. ' 
' → logprob: -12.752035140991211
    10. '   ' → logprob: -12.752035140991211

Token 593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1130472868680954
    2. '
' → logprob: -2.2380473613739014
    3. '        
' → logprob: -9.11304759979248
    4. '  
' → logprob: -9.86304759979248
    5. '    
' → logprob: -10.73804759979248
    6. ' 
' → logprob: -11.48804759979248
    7. '
' → logprob: -12.11304759979248
    8. '\n' → logprob: -12.61304759979248
    9. '   ' → logprob: -12.86304759979248
    10. '<|end|>' → logprob: -12.86304759979248

Token 594: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15215566754341125
    2. '       ' → logprob: -2.652155637741089
    3. ' for' → logprob: -2.652155637741089
    4. '
' → logprob: -8.902155876159668
    5. '   ' → logprob: -11.527155876159668
    6. '	for' → logprob: -14.527155876159668
    7. '        
' → logprob: -15.277155876159668
    8. '```' → logprob: -15.652155876159668
    9. ' ' → logprob: -15.777155876159668
    10. 'n' → logprob: -17.02715492248535

Token 595: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0007105246186256409
    2. 'e' → logprob: -7.250710487365723
    3. ' edge' → logprob: -14.250710487365723
    4. 'Edge' → logprob: -18.87571144104004
    5. 'edges' → logprob: -19.75071144104004
    6. '_edge' → logprob: -20.25071144104004
    7. '(edge' → logprob: -20.37571144104004
    8. 'ed' → logprob: -20.87571144104004
    9. ' e' → logprob: -21.12571144104004
    10. '.edge' → logprob: -22.75071144104004

Token 596: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994721293449402
    2. 'in' → logprob: -2.6949472427368164
    3. '	in' → logprob: -12.319947242736816
    4. ' ' → logprob: -13.319947242736816
    5. '   ' → logprob: -13.569947242736816
    6. 'import' → logprob: -14.194947242736816
    7. ' ' → logprob: -14.194947242736816
    8. '  ' → logprob: -14.819947242736816
    9. 'edge' → logprob: -14.819947242736816
    10. '       ' → logprob: -14.944947242736816

Token 597: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.060365608893335e-05
    2. ' self' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.250041007995605
    4. '       ' → logprob: -15.250041007995605
    5. '(self' → logprob: -17.87504005432129
    6. '           ' → logprob: -18.50004005432129
    7. '	self' → logprob: -18.75004005432129
    8. ' ' → logprob: -19.75004005432129
    9. '
' → logprob: -20.25004005432129
    10. 'list' → logprob: -20.50004005432129

Token 598: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -7.941850526549388e-06
    2. 'edges' → logprob: -12.000007629394531
    3. '.' → logprob: -13.500007629394531
    4. '.vertices' → logprob: -15.625007629394531
    5. ' .' → logprob: -16.00000762939453
    6. ' edges' → logprob: -17.75000762939453
    7. '.edge' → logprob: -18.00000762939453
    8. '(edges' → logprob: -18.37500762939453
    9. '.faces' → logprob: -18.87500762939453
    10. '.ed' → logprob: -20.37500762939453

Token 599: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6368849873542786
    2. '():' → logprob: -0.7618849873542786
    3. '():
' → logprob: -6.136885166168213
    4. '):' → logprob: -7.261885166168213
    5. '()' → logprob: -7.386885166168213
    6. ':
' → logprob: -8.136884689331055
    7. '(p' → logprob: -8.386884689331055
    8. '(' → logprob: -9.261884689331055
    9. ' :' → logprob: -9.636884689331055
    10. ' ():' → logprob: -10.386884689331055

Token 600: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019602717831730843
    2. '       ' → logprob: -4.5196027755737305
    3. ' if' → logprob: -5.0196027755737305
    4. 'if' → logprob: -6.3946027755737305
    5. '
' → logprob: -8.76960277557373
    6. '   ' → logprob: -10.26960277557373
    7. '	       ' → logprob: -11.01960277557373
    8. '	   ' → logprob: -11.76960277557373
    9. '            
' → logprob: -12.14460277557373
    10. '               ' → logprob: -12.64460277557373

Token 601: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04195963591337204
    2. '           ' → logprob: -3.666959524154663
    3. ' if' → logprob: -4.166959762573242
    4. '   ' → logprob: -11.166959762573242
    5. '       ' → logprob: -11.416959762573242
    6. '               ' → logprob: -12.166959762573242
    7. ' ' → logprob: -13.041959762573242
    8. '	if' → logprob: -13.166959762573242
    9. '
' → logprob: -14.416959762573242
    10. 'If' → logprob: -14.541959762573242

Token 602: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0003805064770858735
    2. ' edge' → logprob: -7.875380516052246
    3. '=edge' → logprob: -15.750380516052246
    4. '(edge' → logprob: -16.25037956237793
    5. '   ' → logprob: -16.62537956237793
    6. 'egde' → logprob: -17.87537956237793
    7. '.edge' → logprob: -18.00037956237793
    8. 'ed' → logprob: -18.12537956237793
    9. '           ' → logprob: -18.50037956237793
    10. ' ' → logprob: -19.00037956237793

Token 603: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -1.3902033970225602e-05
    2. '.' → logprob: -11.750014305114746
    3. ' .' → logprob: -12.375014305114746
    4. ').' → logprob: -15.125014305114746
    5. '.Inter' → logprob: -15.500014305114746
    6. '.startswith' → logprob: -15.875014305114746
    7. '.in' → logprob: -15.875014305114746
    8. '.edges' → logprob: -16.00001335144043
    9. '   ' → logprob: -16.12501335144043
    10. '.is' → logprob: -16.37501335144043

Token 604: 'sects' (ID: 105681)
  Prédit: 'sects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sects' → logprob: -1.2948405128554441e-05
    2. 's' → logprob: -12.12501335144043
    3. '==' → logprob: -13.62501335144043
    4. 'sect' → logprob: -13.75001335144043
    5. 'ects' → logprob: -13.87501335144043
    6. 'se' → logprob: -14.12501335144043
    7. '```' → logprob: -14.25001335144043
    8. 'sets' → logprob: -14.37501335144043
    9. 'section' → logprob: -15.00001335144043
    10. 'cepts' → logprob: -15.37501335144043

Token 605: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -3.292907877039397e-06
    2. 's' → logprob: -13.25000286102295
    3. 'segment' → logprob: -13.75000286102295
    4. '(p' → logprob: -15.50000286102295
    5. 'Segment' → logprob: -17.375003814697266
    6. '_' → logprob: -17.375003814697266
    7. '_seg' → logprob: -18.375003814697266
    8. '_point' → logprob: -18.625003814697266
    9. ' _' → logprob: -18.875003814697266
    10. '(_' → logprob: -19.000003814697266

Token 606: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.872261317563243e-05
    2. '(' → logprob: -9.750059127807617
    3. '(
' → logprob: -15.375059127807617
    4. ' (' → logprob: -16.125059127807617
    5. '(P' → logprob: -17.000059127807617
    6. ')' → logprob: -17.875059127807617
    7. 'p' → logprob: -18.625059127807617
    8. '(
' → logprob: -19.500059127807617
    9. ')(' → logprob: -19.875059127807617
    10. '((' → logprob: -19.875059127807617

Token 607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ',' → logprob: -11.750011444091797
    3. 'oints' → logprob: -13.750011444091797
    4. 'oint' → logprob: -14.625011444091797
    5. 'olygon' → logprob: -15.187511444091797
    6. '   ' → logprob: -15.562511444091797
    7. ' ' → logprob: -15.812511444091797
    8. '2' → logprob: -15.937511444091797
    9. '
' → logprob: -16.375011444091797
    10. ')' → logprob: -16.437511444091797

Token 608: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036604066845029593
    2. ',p' → logprob: -5.628660202026367
    3. ' ,' → logprob: -9.753660202026367
    4. 'p' → logprob: -13.253660202026367
    5. ',
' → logprob: -15.128660202026367
    6. ' p' → logprob: -16.378660202026367
    7. ',end' → logprob: -17.003660202026367
    8. ')' → logprob: -17.753660202026367
    9. ',s' → logprob: -18.128660202026367
    10. '(p' → logprob: -18.128660202026367

Token 609: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00023059594968799502
    2. ' p' → logprob: -8.37523078918457
    3. '   ' → logprob: -18.25023078918457
    4. ')' → logprob: -19.87523078918457
    5. '    ' → logprob: -20.25023078918457
    6. ' ' → logprob: -20.37523078918457
    7. '           ' → logprob: -20.37523078918457
    8. ')p' → logprob: -20.50023078918457
    9. '	p' → logprob: -20.62523078918457
    10. '
' → logprob: -20.75023078918457

Token 610: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -16.375
    3. ')' → logprob: -16.5
    4. '_' → logprob: -16.875
    5. ' ' → logprob: -17.625
    6. '۲' → logprob: -18.125
    7. '₂' → logprob: -18.125
    8. '   ' → logprob: -18.625
    9. ',' → logprob: -19.125
    10. 't' → logprob: -19.375

Token 611: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08003992587327957
    2. '):
' → logprob: -2.5800399780273438
    3. ':' → logprob: -6.830039978027344
    4. '):
' → logprob: -9.830039978027344
    5. ':
' → logprob: -11.705039978027344
    6. ')' → logprob: -12.955039978027344
    7. '():
' → logprob: -13.955039978027344
    8. ' ):' → logprob: -13.955039978027344
    9. '):

' → logprob: -14.705039978027344
    10. '       ' → logprob: -14.830039978027344

Token 612: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003360582049936056
    2. '           ' → logprob: -8.375335693359375
    3. ' return' → logprob: -10.000335693359375
    4. 'return' → logprob: -10.500335693359375
    5. '=True' → logprob: -11.750335693359375
    6. ':return' → logprob: -12.250335693359375
    7. '                       ' → logprob: -12.625335693359375
    8. '<|end|>' → logprob: -13.000335693359375
    9. ':
' → logprob: -13.375335693359375
    10. '                   ' → logprob: -13.500335693359375

Token 613: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3182297646999359
    2. '               ' → logprob: -2.0682296752929688
    3. ' return' → logprob: -2.0682296752929688
    4. '                   ' → logprob: -4.693229675292969
    5. '           ' → logprob: -4.693229675292969
    6. '
' → logprob: -6.943229675292969
    7. '	return' → logprob: -8.568229675292969
    8. ':return' → logprob: -9.068229675292969
    9. '                       ' → logprob: -10.318229675292969
    10. 'True' → logprob: -10.443229675292969

Token 614: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0206720617134124e-05
    2. ' True' → logprob: -11.50001049041748
    3. '=True' → logprob: -21.750009536743164
    4. '(True' → logprob: -22.375009536743164
    5. '           ' → logprob: -22.625009536743164
    6. '   ' → logprob: -23.250009536743164
    7. 'False' → logprob: -23.750009536743164
    8. '               ' → logprob: -24.000009536743164
    9. 'true' → logprob: -24.125009536743164
    10. '
' → logprob: -24.125009536743164

Token 615: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006623355206102133
    2. '
' → logprob: -5.256623268127441
    3. 'return' → logprob: -7.006623268127441
    4. '<|end|>' → logprob: -8.631623268127441
    5. ' return' → logprob: -8.881623268127441
    6. '        
' → logprob: -10.506623268127441
    7. '    
' → logprob: -10.631623268127441
    8. '   ' → logprob: -10.756623268127441
    9. '	' → logprob: -10.881623268127441
    10. '	return' → logprob: -11.131623268127441

Token 616: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.980854959692806e-05
    2. 'return' → logprob: -9.875069618225098
    3. '   ' → logprob: -12.000069618225098
    4. '	' → logprob: -12.000069618225098
    5. ' return' → logprob: -12.750069618225098
    6. '
' → logprob: -13.750069618225098
    7. '           ' → logprob: -13.875069618225098
    8. '	return' → logprob: -14.625069618225098
    9. '      ' → logprob: -15.375069618225098
    10. '<|end|>' → logprob: -17.000070571899414

Token 617: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02046387270092964
    2. 'return' (adapté à ' return') → logprob: -4.020463943481445
    3. '   ' → logprob: -6.145463943481445
    4. ' return' → logprob: -9.020463943481445
    5. '
' → logprob: -10.145463943481445
    6. '	return' → logprob: -12.770463943481445
    7. '           ' → logprob: -13.145463943481445
    8. '	' → logprob: -14.270463943481445
    9. '0' → logprob: -15.145463943481445
    10. '        
' → logprob: -15.270463943481445

Token 618: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005233763717114925
    2. ' False' → logprob: -5.2552337646484375
    3. '(False' → logprob: -22.255233764648438
    4. 'True' → logprob: -22.630233764648438
    5. 'false' → logprob: -22.880233764648438
    6. '_false' → logprob: -24.255233764648438
    7. '   ' → logprob: -25.005233764648438
    8. '=False' → logprob: -25.380233764648438
    9. '.False' → logprob: -26.380233764648438
    10. ' false' → logprob: -27.005233764648438

Token 619: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 620: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1302613765001297
    2. 'def' → logprob: -2.5052614212036133
    3. '
' → logprob: -3.2552614212036133
    4. '

' → logprob: -6.380261421203613
    5. '```' → logprob: -9.755261421203613
    6. ' class' → logprob: -10.130261421203613
    7. '    
' → logprob: -10.755261421203613
    8. '  
' → logprob: -11.005261421203613
    9. '\n' → logprob: -11.380261421203613
    10. ' 
' → logprob: -11.380261421203613

Token 621: ' Flow' (ID: 33537)
  Prédit: 'Visibility'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Visibility' → logprob: -0.3583170175552368
    2. 'Graph' → logprob: -1.6083170175552368
    3. ' Visibility' → logprob: -2.6083168983459473
    4. 'Polygon' → logprob: -4.733316898345947
    5. ' Graph' → logprob: -5.233316898345947
    6. 'Triangle' → logprob: -5.983316898345947
    7. 'Rectangle' → logprob: -6.233316898345947
    8. 'Path' → logprob: -6.233316898345947
    9. 'Point' → logprob: -6.983316898345947
    10. 'Obstacle' → logprob: -7.108316898345947

Token 622: 'Network' (ID: 14022)
  Prédit: 'Network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Network' → logprob: -0.006313162390142679
    2. 'Graph' → logprob: -5.756313323974609
    3. 'Field' → logprob: -6.881313323974609
    4. 'Net' → logprob: -7.381313323974609
    5. 'Node' → logprob: -7.881313323974609
    6. 'Router' → logprob: -8.25631332397461
    7. 'Map' → logprob: -8.88131332397461
    8. 'Point' → logprob: -9.00631332397461
    9. 'Path' → logprob: -9.38131332397461
    10. 'N' → logprob: -9.50631332397461

Token 623: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.47757811343763e-05
    2. ':
' → logprob: -10.375044822692871
    3. ' :' → logprob: -11.750044822692871
    4. '(object' → logprob: -13.250044822692871
    5. '():' → logprob: -13.500044822692871
    6. ':

' → logprob: -14.500044822692871
    7. ':def' → logprob: -14.500044822692871
    8. '<|end|>' → logprob: -14.875044822692871
    9. '(' → logprob: -15.125044822692871
    10. ':**' → logprob: -16.000043869018555

Token 624: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1530071496963501
    2. '   ' → logprob: -2.2780070304870605
    3. ':
' → logprob: -3.2780070304870605
    4. '<|end|>' → logprob: -7.4030070304870605
    5. '(' → logprob: -8.153007507324219
    6. ' :' → logprob: -8.403007507324219
    7. '(object' → logprob: -8.903007507324219
    8. '__' → logprob: -9.528007507324219
    9. ' :
' → logprob: -10.028007507324219
    10. '():' → logprob: -10.278007507324219

Token 625: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.48584410548210144
    2. '__' (adapté à ' __') → logprob: -1.1108441352844238
    3. 'def' → logprob: -3.735844135284424
    4. ' def' → logprob: -3.860844135284424
    5. '   ' → logprob: -5.110844135284424
    6. 'class' → logprob: -5.485844135284424
    7. ':' → logprob: -8.860843658447266
    8. 'from' → logprob: -9.610843658447266
    9. ' class' → logprob: -9.985843658447266
    10. ':
' → logprob: -10.360843658447266

Token 626: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -4.008129963040119e-06
    2. '_slots' → logprob: -12.625003814697266
    3. 'init' → logprob: -15.500003814697266
    4. 'slot' → logprob: -15.625003814697266
    5. ' slots' → logprob: -15.625003814697266
    6. 'tabs' → logprob: -16.500003814697266
    7. '__' → logprob: -17.125003814697266
    8. 'sl' → logprob: -18.125003814697266
    9. 'spaces' → logprob: -18.500003814697266
    10. 'Slots' → logprob: -18.750003814697266

Token 627: '__' (ID: 771)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014136116951704025
    2. ' =' → logprob: -4.38913631439209
    3. '__' → logprob: -6.51413631439209
    4. '=['' → logprob: -8.88913631439209
    5. '['' → logprob: -13.01413631439209
    6. '_' → logprob: -13.51413631439209
    7. '_=' → logprob: -14.88913631439209
    8. ' __' → logprob: -15.76413631439209
    9. '   ' → logprob: -15.88913631439209
    10. ']' → logprob: -16.264135360717773

Token 628: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31330597400665283
    2. ' =' → logprob: -1.3133059740066528
    3. '=['' → logprob: -10.063305854797363
    4. '['' → logprob: -13.813305854797363
    5. '[' → logprob: -15.938305854797363
    6. '   ' → logprob: -16.56330680847168
    7. ':' → logprob: -16.56330680847168
    8. ' ' → logprob: -16.68830680847168
    9. '__' → logprob: -16.93830680847168
    10. ',' → logprob: -17.18830680847168

Token 629: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.001173917087726295
    2. ' ['' → logprob: -6.751173973083496
    3. '['_' → logprob: -12.626173973083496
    4. '[' → logprob: -15.376173973083496
    5. '   ' → logprob: -16.62617301940918
    6. '=['' → logprob: -16.75117301940918
    7. '[
' → logprob: -17.75117301940918
    8. '["' → logprob: -17.87617301940918
    9. ' ' → logprob: -17.87617301940918
    10. '('' → logprob: -18.12617301940918

Token 630: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.018551627174019814
    2. 'adj' → logprob: -4.518551826477051
    3. 'edges' → logprob: -5.768551826477051
    4. 'nodes' → logprob: -6.143551826477051
    5. 'capacity' → logprob: -6.518551826477051
    6. 'vertices' → logprob: -7.518551826477051
    7. 'V' → logprob: -9.76855182647705
    8. 'size' → logprob: -10.26855182647705
    9. '_graph' → logprob: -10.51855182647705
    10. 'num' → logprob: -11.01855182647705

Token 631: '']

' (ID: 36979)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.31331607699394226
    2. '']' → logprob: -1.3133161067962646
    3. ''' → logprob: -11.313316345214844
    4. ' ',' → logprob: -11.438316345214844
    5. ':' → logprob: -11.688316345214844
    6. ']' → logprob: -11.938316345214844
    7. '','' → logprob: -12.563316345214844
    8. ',' → logprob: -12.813316345214844
    9. '']

' → logprob: -12.813316345214844
    10. ' ']' → logprob: -12.938316345214844

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19173702597618103
    2. ' =' → logprob: -2.191736936569214
    3. ':' → logprob: -3.066736936569214
    4. '=' → logprob: -5.066737174987793
    5. ',' → logprob: -5.316737174987793
    6. '[' → logprob: -7.066737174987793
    7. '['' → logprob: -7.066737174987793
    8. '=['' → logprob: -7.191737174987793
    9. '={'' → logprob: -7.566737174987793
    10. ':
' → logprob: -7.941737174987793

Token 633: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021577375009655952
    2. ' def' → logprob: -4.39657735824585
    3. '   ' → logprob: -4.77157735824585
    4. 'graph' → logprob: -7.89657735824585
    5. '__' → logprob: -9.896577835083008
    6. ':' → logprob: -10.021577835083008
    7. 'class' (adapté à ' class') → logprob: -11.021577835083008
    8. '[' → logprob: -11.396577835083008
    9. '
' → logprob: -11.521577835083008
    10. '	def' → logprob: -11.771577835083008

Token 634: ' Edge' (ID: 16396)
  Prédit: ' Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.1784151941537857
    2. 'Edge' → logprob: -1.9284151792526245
    3. ' Node' → logprob: -4.678415298461914
    4. 'Node' → logprob: -4.928415298461914
    5. ' Graph' → logprob: -7.803415298461914
    6. 'Graph' → logprob: -8.178415298461914
    7. '_Node' → logprob: -8.678415298461914
    8. 'Vertex' → logprob: -9.053415298461914
    9. ' _' → logprob: -9.303415298461914
    10. '_' → logprob: -9.303415298461914

Token 635: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010021676309406757
    2. ':
' → logprob: -5.135021686553955
    3. '(' → logprob: -5.760021686553955
    4. '{' → logprob: -8.135021209716797
    5. '<|end|>' → logprob: -8.510021209716797
    6. '   ' → logprob: -9.635021209716797
    7. '(
' → logprob: -9.885021209716797
    8. ' {' → logprob: -9.885021209716797
    9. ' :' → logprob: -10.010021209716797
    10. ' (' → logprob: -10.010021209716797

Token 636: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06206795573234558
    2. ':
' → logprob: -2.937067985534668
    3. '   ' → logprob: -5.812067985534668
    4. '<|end|>' → logprob: -5.812067985534668
    5. '(object' → logprob: -7.187067985534668
    6. '(' → logprob: -8.437067985534668
    7. '<|end|>' → logprob: -10.062067985534668
    8. '(Abstract' → logprob: -10.812067985534668
    9. '  ' → logprob: -10.812067985534668
    10. '):
' → logprob: -11.062067985534668

Token 637: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.17004132270812988
    2. ' __' → logprob: -1.9200413227081299
    3. '   ' → logprob: -4.920041084289551
    4. 'def' → logprob: -6.920041084289551
    5. ' def' → logprob: -7.420041084289551
    6. '___' → logprob: -8.42004108428955
    7. '  ' → logprob: -8.54504108428955
    8. '<|end|>' → logprob: -8.92004108428955
    9. 'class' → logprob: -9.04504108428955
    10. ' ' → logprob: -10.54504108428955

Token 638: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -3.531315314830863e-06
    2. '_slots' → logprob: -13.250003814697266
    3. 'slot' → logprob: -13.875003814697266
    4. 'sl' → logprob: -14.875003814697266
    5. ' slots' → logprob: -15.625003814697266
    6. 'tabs' → logprob: -16.375003814697266
    7. '__' → logprob: -17.375003814697266
    8. ''s' → logprob: -18.000003814697266
    9. 'spaces' → logprob: -18.000003814697266
    10. 'code' → logprob: -18.125003814697266

Token 639: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018751822412014008
    2. '=' → logprob: -4.018751621246338
    3. ' =' → logprob: -8.018752098083496
    4. '=['' → logprob: -8.268752098083496
    5. '___' → logprob: -12.018752098083496
    6. '____' → logprob: -12.768752098083496
    7. '_' → logprob: -12.768752098083496
    8. '_=' → logprob: -14.268752098083496
    9. '['' → logprob: -14.893752098083496
    10. '__["' → logprob: -15.018752098083496

Token 640: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03383010998368263
    2. ' =' → logprob: -3.408830165863037
    3. '=['' → logprob: -8.658829689025879
    4. '['' → logprob: -11.533829689025879
    5. '__' → logprob: -15.033829689025879
    6. ' ['' → logprob: -15.533829689025879
    7. '=
' → logprob: -16.283830642700195
    8. ' ' → logprob: -16.658830642700195
    9. '＝' → logprob: -16.908830642700195
    10. '   ' → logprob: -17.158830642700195

Token 641: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00018494461255613714
    2. ' ['' → logprob: -8.625185012817383
    3. '('' → logprob: -13.000185012817383
    4. '['_' → logprob: -13.250185012817383
    5. '   ' → logprob: -15.000185012817383
    6. '["' → logprob: -15.250185012817383
    7. '=['' → logprob: -15.500185012817383
    8. ' ' → logprob: -15.500185012817383
    9. '[' → logprob: -16.125185012817383
    10. '('__' → logprob: -16.750185012817383

Token 642: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0019644396379590034
    2. 'u' → logprob: -7.001964569091797
    3. 'from' → logprob: -7.001964569091797
    4. 'start' → logprob: -9.376964569091797
    5. 'src' → logprob: -10.751964569091797
    6. '_to' → logprob: -11.376964569091797
    7. 'v' → logprob: -11.876964569091797
    8. 'frm' → logprob: -12.251964569091797
    9. 'source' → logprob: -12.626964569091797
    10. 'target' → logprob: -12.751964569091797

Token 643: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0003687053394969553
    2. ',' → logprob: -8.12536907196045
    3. '','' → logprob: -9.87536907196045
    4. ' ',' → logprob: -11.50036907196045
    5. ''' → logprob: -11.75036907196045
    6. '",' → logprob: -14.12536907196045
    7. '',
' → logprob: -14.62536907196045
    8. '_',' → logprob: -14.62536907196045
    9. '']' → logprob: -14.75036907196045
    10. '<|end|>' → logprob: -15.00036907196045

Token 644: ' '' (ID: 461)
  Prédit: ''re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''re' → logprob: -0.043024998158216476
    2. 'rev' → logprob: -3.668025016784668
    3. ' '' → logprob: -4.668025016784668
    4. ''' → logprob: -5.043025016784668
    5. ' rev' → logprob: -8.668025016784668
    6. 'capacity' → logprob: -8.793025016784668
    7. '   ' → logprob: -8.918025016784668
    8. '       ' → logprob: -9.168025016784668
    9. '_rev' → logprob: -9.918025016784668
    10. ' capacity' → logprob: -10.043025016784668

Token 645: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0005616117268800735
    2. 'capacity' → logprob: -7.500561714172363
    3. 'cap' → logprob: -12.250561714172363
    4. 'reverse' → logprob: -12.750561714172363
    5. '_rev' → logprob: -14.625561714172363
    6. ' rev' → logprob: -15.250561714172363
    7. '.rev' → logprob: -15.625561714172363
    8. 'res' → logprob: -16.375560760498047
    9. 'flow' → logprob: -17.625560760498047
    10. 'Rev' → logprob: -18.250560760498047

Token 646: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -3.845798710244708e-05
    2. ''' → logprob: -10.625038146972656
    3. ',' → logprob: -11.250038146972656
    4. '",' → logprob: -14.625038146972656
    5. '','' → logprob: -15.375038146972656
    6. '',
' → logprob: -15.750038146972656
    7. ' ',' → logprob: -16.750038146972656
    8. '']' → logprob: -16.750038146972656
    9. '_idx' → logprob: -16.875038146972656
    10. '`,' → logprob: -17.000038146972656

Token 647: ' '' (ID: 461)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.47494229674339294
    2. 'capacity' → logprob: -0.9749423265457153
    3. ''' → logprob: -7.099942207336426
    4. ' capacity' → logprob: -10.974942207336426
    5. 'capac' → logprob: -11.224942207336426
    6. '_cap' → logprob: -13.224942207336426
    7. '_capacity' → logprob: -13.474942207336426
    8. 'rev' → logprob: -13.849942207336426
    9. 'flow' → logprob: -13.974942207336426
    10. '(cap' → logprob: -14.099942207336426

Token 648: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.6933680772781372
    2. 'capacity' → logprob: -0.6933680772781372
    3. 'rev' → logprob: -8.568367958068848
    4. ' capacity' → logprob: -10.943367958068848
    5. 'capac' → logprob: -12.568367958068848
    6. 'flow' → logprob: -12.693367958068848
    7. '_capacity' → logprob: -13.318367958068848
    8. 'kap' → logprob: -13.568367958068848
    9. '.capacity' → logprob: -13.818367958068848
    10. '_cap' → logprob: -14.193367958068848

Token 649: '']

' (ID: 36979)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.5282602906227112
    2. '']' → logprob: -1.2782602310180664
    3. 'acity' → logprob: -2.0282602310180664
    4. 'ACITY' → logprob: -9.403260231018066
    5. ',' → logprob: -10.028260231018066
    6. '','' → logprob: -10.153260231018066
    7. ''' → logprob: -10.403260231018066
    8. 'ac' → logprob: -10.778260231018066
    9. 'city' → logprob: -10.778260231018066
    10. 'acit' → logprob: -11.028260231018066

Token 650: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2963160276412964
    2. '   ' → logprob: -1.5463160276412964
    3. ':' → logprob: -4.171316146850586
    4. '       ' → logprob: -4.296316146850586
    5. '',' → logprob: -4.921316146850586
    6. ' =' → logprob: -5.921316146850586
    7. '=' → logprob: -6.046316146850586
    8. '	' → logprob: -7.546316146850586
    9. ' ' → logprob: -8.546316146850586
    10. '    ' → logprob: -8.671316146850586

Token 651: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25322097539901733
    2. ' def' → logprob: -1.503221035003662
    3. '   ' → logprob: -6.753221035003662
    4. '	def' → logprob: -10.003220558166504
    5. '       ' → logprob: -10.128220558166504
    6. '    ' → logprob: -10.378220558166504
    7. ' ' → logprob: -12.628220558166504
    8. '  ' → logprob: -12.878220558166504
    9. '__' → logprob: -13.878220558166504
    10. '     ' → logprob: -15.503220558166504

Token 652: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011553249321877956
    2. ' __' → logprob: -4.6365532875061035
    3. 'init' → logprob: -6.7615532875061035
    4. 'to' → logprob: -7.6365532875061035
    5. 'def' → logprob: -9.261552810668945
    6. '_init' → logprob: -10.261552810668945
    7. '```' → logprob: -11.761552810668945
    8. ' to' → logprob: -12.011552810668945
    9. ' def' → logprob: -12.886552810668945
    10. '___' → logprob: -13.136552810668945

Token 653: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0002043748099822551
    2. 'slots' → logprob: -8.500204086303711
    3. ' init' → logprob: -15.250204086303711
    4. 'slot' → logprob: -15.500204086303711
    5. '_init' → logprob: -15.875204086303711
    6. '__' → logprob: -16.37520408630371
    7. '(init' → logprob: -16.50020408630371
    8. 'int' → logprob: -16.75020408630371
    9. '```' → logprob: -17.62520408630371
    10. 'def' → logprob: -17.62520408630371

Token 654: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.021986668929457664
    2. '(self' → logprob: -3.896986722946167
    3. ' (' → logprob: -7.396986484527588
    4. '(' → logprob: -7.771986484527588
    5. '__' → logprob: -7.896986484527588
    6. '_(' → logprob: -10.771986961364746
    7. '__(
' → logprob: -11.396986961364746
    8. 'self' → logprob: -13.021986961364746
    9. ' ' → logprob: -14.271986961364746
    10. '=' → logprob: -14.521986961364746

Token 655: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015139080351218581
    2. ' self' → logprob: -6.501513957977295
    3. '(self' → logprob: -12.251513481140137
    4. ',' → logprob: -12.376513481140137
    5. '0' → logprob: -13.251513481140137
    6. 'None' → logprob: -15.251513481140137
    7. ',self' → logprob: -15.501513481140137
    8. '	self' → logprob: -16.376514434814453
    9. ' None' → logprob: -16.751514434814453
    10. ' ' → logprob: -17.501514434814453

Token 656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002589096548035741
    2. ' (' → logprob: -6.752589225769043
    3. '(self' → logprob: -6.752589225769043
    4. ' ,' → logprob: -8.377589225769043
    5. 'self' → logprob: -11.752589225769043
    6. ' self' → logprob: -11.877589225769043
    7. ',self' → logprob: -12.377589225769043
    8. '(' → logprob: -14.627589225769043
    9. ',(' → logprob: -15.627589225769043
    10. ',to' → logprob: -16.127588272094727

Token 657: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -5.836499985889532e-05
    2. ' to' → logprob: -9.7500581741333
    3. 'self' → logprob: -17.375059127807617
    4. '	to' → logprob: -17.875059127807617
    5. ' ' → logprob: -18.625059127807617
    6. ',to' → logprob: -19.000059127807617
    7. '   ' → logprob: -19.125059127807617
    8. 't' → logprob: -19.375059127807617
    9. '_to' → logprob: -19.875059127807617
    10. '(to' → logprob: -20.125059127807617

Token 658: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011880877427756786
    2. ' ,' → logprob: -6.751188278198242
    3. ':' → logprob: -11.376188278198242
    4. '<|end|>' → logprob: -12.126188278198242
    5. ' ' → logprob: -15.001188278198242
    6. '=' → logprob: -15.251188278198242
    7. '‌,' → logprob: -15.501188278198242
    8. '  ' → logprob: -16.501188278198242
    9. '<|end|>' → logprob: -16.626188278198242
    10. ')' → logprob: -17.001188278198242

Token 659: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4237455427646637
    2. ',' → logprob: -1.7987455129623413
    3. ' int' → logprob: -2.548745632171631
    4. 'to' → logprob: -2.548745632171631
    5. ' to' → logprob: -4.048745632171631
    6. ':int' → logprob: -6.798745632171631
    7. ',int' → logprob: -6.798745632171631
    8. '   ' → logprob: -7.173745632171631
    9. 'None' → logprob: -7.173745632171631
    10. ' ,' → logprob: -7.548745632171631

Token 660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5597102396423e-05
    2. ' ,' → logprob: -10.250035285949707
    3. '‌,' → logprob: -15.750035285949707
    4. '<|end|>' → logprob: -17.500036239624023
    5. ',
' → logprob: -18.125036239624023
    6. ' ' → logprob: -19.000036239624023
    7. ',int' → logprob: -19.000036239624023
    8. '‍,' → logprob: -19.875036239624023
    9. '_,' → logprob: -20.000036239624023
    10. ',value' → logprob: -20.500036239624023

Token 661: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.009249863214790821
    2. ' rev' → logprob: -4.759249687194824
    3. 'cap' → logprob: -7.384249687194824
    4. ' cap' → logprob: -11.759249687194824
    5. '_rev' → logprob: -12.759249687194824
    6. 'capacity' → logprob: -13.134249687194824
    7. '.rev' → logprob: -14.259249687194824
    8. 'reverse' → logprob: -14.509249687194824
    9. ' capacity' → logprob: -15.759249687194824
    10. '   ' → logprob: -16.25925064086914

Token 662: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009113443666137755
    2. ':' → logprob: -7.125911235809326
    3. ' ,' → logprob: -9.500911712646484
    4. ':int' → logprob: -10.375911712646484
    5. ',int' → logprob: -14.750911712646484
    6. '',' → logprob: -16.000911712646484
    7. '=' → logprob: -16.250911712646484
    8. ',
' → logprob: -16.625911712646484
    9. '   ' → logprob: -16.875911712646484
    10. ' ' → logprob: -17.000911712646484

Token 663: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009258725331164896
    2. 'None' → logprob: -7.3759260177612305
    3. ' int' → logprob: -8.25092601776123
    4. '[int' → logprob: -10.62592601776123
    5. ''int' → logprob: -13.12592601776123
    6. '<int' → logprob: -13.25092601776123
    7. '0' → logprob: -13.37592601776123
    8. ' None' → logprob: -13.50092601776123
    9. 'Flow' → logprob: -13.75092601776123
    10. ':int' → logprob: -14.00092601776123

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.676292231422849e-05
    2. ' ,' → logprob: -11.000017166137695
    3. ',
' → logprob: -18.250017166137695
    4. '',' → logprob: -19.250017166137695
    5. '‌,' → logprob: -19.375017166137695
    6. '   ' → logprob: -21.250017166137695
    7. '       ' → logprob: -21.250017166137695
    8. '`,' → logprob: -22.000017166137695
    9. ')' → logprob: -22.125017166137695
    10. ',p' → logprob: -22.250017166137695

Token 665: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.0024787469301372766
    2. ' cap' → logprob: -6.00247859954834
    3. 'capacity' → logprob: -13.00247859954834
    4. ' ' → logprob: -15.50247859954834
    5. '   ' → logprob: -15.75247859954834
    6. '(cap' → logprob: -15.87747859954834
    7. 'capac' → logprob: -16.002479553222656
    8. ' capacity' → logprob: -16.752479553222656
    9. '
' → logprob: -17.127479553222656
    10. '_cap' → logprob: -17.127479553222656

Token 666: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023524489370174706
    2. '):' → logprob: -8.500235557556152
    3. '=' → logprob: -11.000235557556152
    4. ',' → logprob: -11.875235557556152
    5. ')' → logprob: -12.375235557556152
    6. ':int' → logprob: -13.500235557556152
    7. ' :' → logprob: -13.500235557556152
    8. '):
' → logprob: -14.000235557556152
    9. ' ):' → logprob: -15.875235557556152
    10. ' ' → logprob: -16.625234603881836

Token 667: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011062674224376678
    2. ' int' → logprob: -4.5110626220703125
    3. 'float' → logprob: -12.261062622070312
    4. 'cap' → logprob: -12.261062622070312
    5. '0' → logprob: -13.261062622070312
    6. ':int' → logprob: -13.511062622070312
    7. '   ' → logprob: -14.511062622070312
    8. '[int' → logprob: -14.636062622070312
    9. '	int' → logprob: -15.136062622070312
    10. ' cap' → logprob: -15.511062622070312

Token 668: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0620461031794548
    2. '):
' → logprob: -2.8120460510253906
    3. '):
' → logprob: -9.81204605102539
    4. ')' → logprob: -11.18704605102539
    5. ',' → logprob: -12.06204605102539
    6. ' ):' → logprob: -12.93704605102539
    7. '   ' → logprob: -14.43704605102539
    8. ':' → logprob: -15.06204605102539
    9. '):

' → logprob: -15.06204605102539
    10. '       ' → logprob: -15.93704605102539

Token 669: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3242487609386444
    2. '       ' → logprob: -1.4492487907409668
    3. '<|end|>' → logprob: -4.574248790740967
    4. ')' → logprob: -4.699248790740967
    5. ',' → logprob: -4.824248790740967
    6. 'self' → logprob: -5.574248790740967
    7. '               ' → logprob: -6.199248790740967
    8. '):' → logprob: -6.324248790740967
    9. '        ' → logprob: -6.449248790740967
    10. '   ' → logprob: -6.824248790740967

Token 670: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015249757561832666
    2. ' self' → logprob: -6.501524925231934
    3. '           ' → logprob: -10.751524925231934
    4. '       ' → logprob: -14.251524925231934
    5. 'to' → logprob: -15.251524925231934
    6. '   ' → logprob: -15.876524925231934
    7. '               ' → logprob: -16.25152587890625
    8. '	self' → logprob: -17.00152587890625
    9. '         ' → logprob: -17.75152587890625
    10. ' ' → logprob: -18.00152587890625

Token 671: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -7.231182826217264e-05
    2. '.' → logprob: -9.875072479248047
    3. 'to' → logprob: -11.125072479248047
    4. ' .' → logprob: -12.750072479248047
    5. '=' → logprob: -13.125072479248047
    6. ' =' → logprob: -14.500072479248047
    7. '.=' → logprob: -16.375072479248047
    8. '[to' → logprob: -16.375072479248047
    9. '.from' → logprob: -16.750072479248047
    10. '	to' → logprob: -16.875072479248047

Token 672: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519994080066681
    2. ' =' → logprob: -1.5019993782043457
    3. ',' → logprob: -9.876999855041504
    4. '<|end|>' → logprob: -11.376999855041504
    5. ' ' → logprob: -12.376999855041504
    6. ')' → logprob: -13.126999855041504
    7. ' ,' → logprob: -14.376999855041504
    8. ' )' → logprob: -15.751999855041504
    9. ' =
' → logprob: -15.751999855041504
    10. '=
' → logprob: -16.126998901367188

Token 673: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2519293427467346
    2. ' to' → logprob: -1.5019292831420898
    3. '	to' → logprob: -15.50192928314209
    4. '(to' → logprob: -17.126930236816406
    5. '[to' → logprob: -17.626930236816406
    6. 'To' → logprob: -18.876930236816406
    7. ' ' → logprob: -19.251930236816406
    8. '_to' → logprob: -19.626930236816406
    9. ',to' → logprob: -20.001930236816406
    10. '.to' → logprob: -20.626930236816406

Token 674: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4160197973251343
    2. '<|end|>' → logprob: -1.1660197973251343
    3. ' ' → logprob: -3.791019916534424
    4. ' ,' → logprob: -5.541019916534424
    5. '           ' → logprob: -7.916019916534424
    6. '<|end|>' → logprob: -8.041019439697266
    7. ' 
' → logprob: -8.166019439697266
    8. '
' → logprob: -8.541019439697266
    9. ',
' → logprob: -8.791019439697266
    10. '  ' → logprob: -9.041019439697266

Token 675: '           ' (ID: 352)
  Prédit: ' cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cap' → logprob: -0.6249122619628906
    2. '
' → logprob: -2.4999122619628906
    3. '           ' → logprob: -2.4999122619628906
    4. ',' → logprob: -2.7499122619628906
    5. 'cap' → logprob: -2.8749122619628906
    6. 'self' → logprob: -3.1249122619628906
    7. ' ' → logprob: -3.1249122619628906
    8. ' self' → logprob: -3.6249122619628906
    9. '<|end|>' → logprob: -3.7499122619628906
    10. ' 
' → logprob: -4.124912261962891

Token 676: ' self' (ID: 1051)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.005994682665914297
    2. ' rev' → logprob: -5.13099479675293
    3. 'cap' → logprob: -9.75599479675293
    4. 'self' (adapté à ' self') → logprob: -12.88099479675293
    5. ' cap' → logprob: -13.00599479675293
    6. 'rep' → logprob: -13.25599479675293
    7. '
' → logprob: -15.13099479675293
    8. '.rev' → logprob: -15.38099479675293
    9. 'prev' → logprob: -15.88099479675293
    10. '_rev' → logprob: -15.88099479675293

Token 677: '.rev' (ID: 152006)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4359840154647827
    2. '=' → logprob: -1.0609840154647827
    3. ' cap' → logprob: -5.810984134674072
    4. 'cap' → logprob: -5.810984134674072
    5. '.cap' → logprob: -7.310984134674072
    6. '_cap' → logprob: -8.060983657836914
    7. ',' → logprob: -9.560983657836914
    8. '(cap' → logprob: -9.935983657836914
    9. '.' → logprob: -10.060983657836914
    10. ' ' → logprob: -10.060983657836914

Token 678: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38831180334091187
    2. ' =' → logprob: -1.1383118629455566
    3. '<|end|>' → logprob: -7.138311862945557
    4. ',' → logprob: -8.138311386108398
    5. ' ' → logprob: -8.263311386108398
    6. ')' → logprob: -9.888311386108398
    7. ' ,' → logprob: -11.763311386108398
    8. ':' → logprob: -12.263311386108398
    9. '<|end|>' → logprob: -12.388311386108398
    10. '=None' → logprob: -12.513311386108398

Token 679: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0031777136027812958
    2. ' rev' → logprob: -5.753177642822266
    3. '.rev' → logprob: -17.128177642822266
    4. '_rev' → logprob: -18.003177642822266
    5. 're' → logprob: -18.878177642822266
    6. 'rep' → logprob: -19.128177642822266
    7. '   ' → logprob: -20.378177642822266
    8. 'r' → logprob: -20.378177642822266
    9. 'ret' → logprob: -20.628177642822266
    10. ' ' → logprob: -21.003177642822266

Token 680: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10249961912631989
    2. ',' → logprob: -2.3524997234344482
    3. '       ' → logprob: -6.602499485015869
    4. ',
' → logprob: -8.227499961853027
    5. '<|end|>' → logprob: -8.352499961853027
    6. '               ' → logprob: -9.227499961853027
    7. '         ' → logprob: -9.352499961853027
    8. '   ' → logprob: -9.727499961853027
    9. '          ' → logprob: -9.727499961853027
    10. ' ,' → logprob: -10.727499961853027

Token 681: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009323021513409913
    2. ',' → logprob: -7.250932216644287
    3. 'self' → logprob: -9.875932693481445
    4. '       ' → logprob: -10.250932693481445
    5. ' self' → logprob: -10.375932693481445
    6. '   ' → logprob: -11.125932693481445
    7. '          ' → logprob: -11.125932693481445
    8. '         ' → logprob: -11.250932693481445
    9. ' cap' → logprob: -11.625932693481445
    10. '
' → logprob: -11.625932693481445

Token 682: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004971289541572332
    2. ' self' → logprob: -5.504971504211426
    3. 'cap' → logprob: -7.254971504211426
    4. '           ' → logprob: -8.629971504211426
    5. ' cap' → logprob: -12.754971504211426
    6. '   ' → logprob: -13.254971504211426
    7. '       ' → logprob: -14.004971504211426
    8. '	self' → logprob: -14.504971504211426
    9. '         ' → logprob: -15.254971504211426
    10. ' ' → logprob: -16.00497055053711

Token 683: '.cap' (ID: 45851)
  Prédit: '.cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cap' → logprob: -0.017736973240971565
    2. '.' → logprob: -4.517736911773682
    3. 'cap' → logprob: -5.017736911773682
    4. '_cap' → logprob: -11.39273738861084
    5. ' cap' → logprob: -11.51773738861084
    6. 'Cap' → logprob: -11.89273738861084
    7. '.capacity' → logprob: -12.14273738861084
    8. ' .' → logprob: -12.39273738861084
    9. '(cap' → logprob: -12.64273738861084
    10. '=' → logprob: -12.76773738861084

Token 684: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931492686271667
    2. ' =' → logprob: -0.6931492686271667
    3. ' ' → logprob: -13.56814956665039
    4. ':' → logprob: -14.94314956665039
    5. ',' → logprob: -15.31814956665039
    6. ')' → logprob: -16.81814956665039
    7. '<|end|>' → logprob: -16.81814956665039
    8. '.' → logprob: -17.19314956665039
    9. ' =
' → logprob: -17.44314956665039
    10. ' +=' → logprob: -17.56814956665039

Token 685: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.0015023599844425917
    2. ' cap' → logprob: -6.501502513885498
    3. ' ' → logprob: -18.501502990722656
    4. '(cap' → logprob: -18.501502990722656
    5. '_cap' → logprob: -18.626502990722656
    6. 'capac' → logprob: -18.751502990722656
    7. '   ' → logprob: -19.626502990722656
    8. '0' → logprob: -19.751502990722656
    9. 'Cap' → logprob: -19.876502990722656
    10. 'caps' → logprob: -19.876502990722656

Token 686: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 687: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050840385258197784
    2. '
' → logprob: -3.050840377807617
    3. '    
' → logprob: -6.800840377807617
    4. '       ' → logprob: -7.550840377807617
    5. ' 
' → logprob: -8.675840377807617
    6. '<|end|>' → logprob: -8.925840377807617
    7. '        
' → logprob: -9.300840377807617
    8. '

' → logprob: -9.550840377807617
    9. '  
' → logprob: -10.425840377807617
    10. '```' → logprob: -10.925840377807617

Token 688: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17105171084403992
    2. '   ' → logprob: -2.0460517406463623
    3. ' def' → logprob: -4.046051502227783
    4. '
' → logprob: -5.421051502227783
    5. '	def' → logprob: -5.796051502227783
    6. '    
' → logprob: -7.046051502227783
    7. 'graph' → logprob: -7.171051502227783
    8. ' ' → logprob: -7.921051502227783
    9. ' 
' → logprob: -8.921051979064941
    10. ' graph' → logprob: -9.046051979064941

Token 689: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0008189192740246654
    2. '__' → logprob: -7.125818729400635
    3. ' def' → logprob: -11.625819206237793
    4. '_init' → logprob: -12.750819206237793
    5. ' ' → logprob: -13.875819206237793
    6. ' ' → logprob: -14.375819206237793
    7. 'def' → logprob: -14.375819206237793
    8. ' _' → logprob: -15.000819206237793
    9. '_' → logprob: -16.125818252563477
    10. '  ' → logprob: -16.875818252563477

Token 690: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. '_init' → logprob: -15.125
    3. 'slots' → logprob: -16.75
    4. ' init' → logprob: -19.25
    5. '__' → logprob: -19.875
    6. '.init' → logprob: -20.5
    7. 'ini' → logprob: -21.125
    8. 'i' → logprob: -21.375
    9. '(init' → logprob: -21.875
    10. 'inite' → logprob: -22.0

Token 691: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -9.531813702778891e-05
    2. '__' → logprob: -9.37509536743164
    3. '__(
' → logprob: -12.25009536743164
    4. '(self' → logprob: -12.37509536743164
    5. '_(' → logprob: -13.62509536743164
    6. '(' → logprob: -16.62509536743164
    7. '__('' → logprob: -17.50009536743164
    8. 'self' → logprob: -17.62509536743164
    9. '__((' → logprob: -18.12509536743164
    10. '_' → logprob: -18.12509536743164

Token 692: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1279553291387856e-05
    2. ' self' → logprob: -11.500011444091797
    3. ')' → logprob: -14.875011444091797
    4. '(self' → logprob: -15.000011444091797
    5. ',' → logprob: -15.625011444091797
    6. ')(' → logprob: -16.500011444091797
    7. '   ' → logprob: -16.625011444091797
    8. '
' → logprob: -16.875011444091797
    9. ' ' → logprob: -17.875011444091797
    10. '0' → logprob: -18.250011444091797

Token 693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0076917982660233974
    2. 'self' → logprob: -5.507691860198975
    3. '):
' → logprob: -6.632691860198975
    4. '__,' → logprob: -6.632691860198975
    5. '__' → logprob: -8.132691383361816
    6. '):' → logprob: -8.132691383361816
    7. '__(' → logprob: -8.757691383361816
    8. ' ,' → logprob: -8.757691383361816
    9. ',self' → logprob: -11.007691383361816
    10. '(self' → logprob: -11.132691383361816

Token 694: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06826378405094147
    2. ' n' → logprob: -2.8182637691497803
    3. 'num' → logprob: -5.693264007568359
    4. 'vertex' → logprob: -6.818264007568359
    5. 'node' → logprob: -6.943264007568359
    6. '   ' → logprob: -8.06826400756836
    7. ' node' → logprob: -8.94326400756836
    8. ' vertex' → logprob: -8.94326400756836
    9. 'size' → logprob: -9.19326400756836
    10. '):
' → logprob: -9.94326400756836

Token 695: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005515960976481438
    2. '):' → logprob: -5.255516052246094
    3. ' :' → logprob: -9.005516052246094
    4. ' ):' → logprob: -9.755516052246094
    5. '=' → logprob: -10.380516052246094
    6. '):
' → logprob: -10.505516052246094
    7. ':int' → logprob: -10.755516052246094
    8. ')' → logprob: -11.255516052246094
    9. ',' → logprob: -12.630516052246094
    10. 'n' → logprob: -13.880516052246094

Token 696: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002475777640938759
    2. ' int' → logprob: -6.002475738525391
    3. '[int' → logprob: -17.37747573852539
    4. ':int' → logprob: -17.62747573852539
    5. ')' → logprob: -18.12747573852539
    6. '   ' → logprob: -18.37747573852539
    7. ' ' → logprob: -18.50247573852539
    8. '=int' → logprob: -18.62747573852539
    9. '(int' → logprob: -19.12747573852539
    10. ',int' → logprob: -19.37747573852539

Token 697: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004398428834974766
    2. '):
' → logprob: -5.629398345947266
    3. ')' → logprob: -7.379398345947266
    4. ':' → logprob: -8.879398345947266
    5. ',' → logprob: -10.504398345947266
    6. ' ):' → logprob: -12.129398345947266
    7. '):
' → logprob: -13.379398345947266
    8. ' ' → logprob: -16.129398345947266
    9. '}:' → logprob: -17.004398345947266
    10. '   ' → logprob: -17.004398345947266

Token 698: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01984010450541973
    2. 'self' → logprob: -4.644840240478516
    3. '   ' → logprob: -5.144840240478516
    4. ' self' → logprob: -5.519840240478516
    5. '	self' → logprob: -8.644840240478516
    6. '	   ' → logprob: -11.894840240478516
    7. '	' → logprob: -12.769840240478516
    8. ' ' → logprob: -13.144840240478516
    9. '     ' → logprob: -13.519840240478516
    10. '      ' → logprob: -13.894840240478516

Token 699: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03407198190689087
    2. ' self' → logprob: -3.784071922302246
    3. '       ' → logprob: -4.534071922302246
    4. '   ' → logprob: -11.034071922302246
    5. '	self' → logprob: -11.409071922302246
    6. '[self' → logprob: -12.909071922302246
    7. 'from' → logprob: -14.784071922302246
    8. '
' → logprob: -14.909071922302246
    9. '	' → logprob: -15.659071922302246
    10. ' ' → logprob: -15.909071922302246

Token 700: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.043024998158216476
    2. '.' → logprob: -3.918025016784668
    3. ' .' → logprob: -3.918025016784668
    4. 'graph' → logprob: -6.918025016784668
    5. '.n' → logprob: -7.668025016784668
    6. '._' → logprob: -8.293025016784668
    7. ' ' → logprob: -8.543025016784668
    8. 'n' → logprob: -9.168025016784668
    9. '_graph' → logprob: -9.543025016784668
    10. '	graph' → logprob: -9.668025016784668

Token 701: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020732134580612
    2. ' =' → logprob: -2.3502073287963867
    3. ':' → logprob: -14.475207328796387
    4. '=[' → logprob: -16.35020637512207
    5. '=[]' → logprob: -16.85020637512207
    6. ' ' → logprob: -17.47520637512207
    7. '＝' → logprob: -18.10020637512207
    8. ' =[' → logprob: -18.60020637512207
    9. '[' → logprob: -19.22520637512207
    10. '=[[' → logprob: -19.72520637512207

Token 702: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.005269803572446108
    2. ' List' → logprob: -5.255270004272461
    3. '[List' → logprob: -10.255270004272461
    4. 'Dict' → logprob: -14.380270004272461
    5. '	List' → logprob: -15.880270004272461
    6. 'list' → logprob: -16.88027000427246
    7. '   ' → logprob: -17.13027000427246
    8. '`' → logprob: -17.13027000427246
    9. '```' → logprob: -17.13027000427246
    10. '<List' → logprob: -18.13027000427246

Token 703: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.0031687954906374216
    2. ' =' → logprob: -6.37816858291626
    3. '[' → logprob: -6.62816858291626
    4. '=' → logprob: -9.003169059753418
    5. '(List' → logprob: -12.128169059753418
    6. '[[' → logprob: -12.378169059753418
    7. 'List' → logprob: -12.503169059753418
    8. '[list' → logprob: -13.128169059753418
    9. '<List' → logprob: -13.753169059753418
    10. '[int' → logprob: -14.378169059753418

Token 704: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00042221311014145613
    2. '['' → logprob: -8.125422477722168
    3. '[self' → logprob: -9.000422477722168
    4. '[
' → logprob: -13.500422477722168
    5. ']' → logprob: -14.000422477722168
    6. '[Index' → logprob: -15.875422477722168
    7. ']=' → logprob: -16.12542152404785
    8. '[int' → logprob: -16.50042152404785
    9. 'Flow' → logprob: -16.50042152404785
    10. '[List' → logprob: -17.00042152404785

Token 705: 'Flow' (ID: 18017)
  Prédit: 'Flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flow' → logprob: -0.0005751936114393175
    2. 'self' → logprob: -7.500575065612793
    3. ''' → logprob: -11.375575065612793
    4. ' Flow' → logprob: -11.750575065612793
    5. 'Self' → logprob: -13.000575065612793
    6. '"' → logprob: -16.12557601928711
    7. '.Flow' → logprob: -16.25057601928711
    8. 'Optional' → logprob: -16.75057601928711
    9. ' self' → logprob: -16.75057601928711
    10. '_flow' → logprob: -16.87557601928711

Token 706: 'Network' (ID: 14022)
  Prédit: 'Network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Network' → logprob: -1.981667537620524e-06
    2. 'Flow' → logprob: -14.250001907348633
    3. 'network' → logprob: -15.125001907348633
    4. '.Network' → logprob: -15.375001907348633
    5. 'Node' → logprob: -15.500001907348633
    6. 'Net' → logprob: -15.750001907348633
    7. 'self' → logprob: -16.250001907348633
    8. 'Edge' → logprob: -16.250001907348633
    9. 'Networking' → logprob: -16.375001907348633
    10. 'Networks' → logprob: -16.750001907348633

Token 707: '.Edge' (ID: 195894)
  Prédit: '.Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Edge' → logprob: -6.372916686814278e-05
    2. 'Edge' → logprob: -10.0000638961792
    3. '.Flow' → logprob: -11.7500638961792
    4. ' .' → logprob: -11.7500638961792
    5. '<Edge' → logprob: -13.5000638961792
    6. '.' → logprob: -14.5000638961792
    7. '.Ed' → logprob: -14.6250638961792
    8. '.Node' → logprob: -16.375062942504883
    9. '
' → logprob: -17.750062942504883
    10. ' Edge' → logprob: -17.750062942504883

Token 708: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -1.8074162653647363e-05
    2. ']]=' → logprob: -11.000018119812012
    3. ']' → logprob: -14.250018119812012
    4. ' ]]' → logprob: -15.125018119812012
    5. '']]' → logprob: -15.625018119812012
    6. ']]]' → logprob: -16.625017166137695
    7. '[' → logprob: -17.000017166137695
    8. ']=' → logprob: -17.875017166137695
    9. ']]
' → logprob: -17.875017166137695
    10. '"]]' → logprob: -18.250017166137695

Token 709: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142288506031036
    2. ' =' → logprob: -1.701422929763794
    3. ' ' → logprob: -11.701422691345215
    4. ')' → logprob: -14.201422691345215
    5. '[' → logprob: -15.326422691345215
    6. '=create' → logprob: -16.32642364501953
    7. ']' → logprob: -16.82642364501953
    8. '  ' → logprob: -17.45142364501953
    9. '=[]' → logprob: -17.45142364501953
    10. '<|end|>' → logprob: -17.57642364501953

Token 710: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024769625160843134
    2. ' [[]' → logprob: -6.002477169036865
    3. '[[' → logprob: -13.752476692199707
    4. '[n' → logprob: -16.627477645874023
    5. '[]' → logprob: -17.002477645874023
    6. '[]
' → logprob: -17.502477645874023
    7. '[
' → logprob: -17.877477645874023
    8. '[['' → logprob: -17.877477645874023
    9. '[List' → logprob: -18.877477645874023
    10. '   ' → logprob: -19.752477645874023

Token 711: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038043782114982605
    2. 'for' → logprob: -3.288043737411499
    3. ' ' → logprob: -13.913043975830078
    4. ']' → logprob: -14.663043975830078
    5. ',' → logprob: -14.913043975830078
    6. '	for' → logprob: -15.163043975830078
    7. ' f' → logprob: -15.413043975830078
    8. ')' → logprob: -16.538043975830078
    9. '   ' → logprob: -17.038043975830078
    10. '
' → logprob: -17.038043975830078

Token 712: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.084206375409849e-05
    2. ' _' → logprob: -10.125041007995605
    3. '_
' → logprob: -14.875041007995605
    4. '_range' → logprob: -16.00004005432129
    5. '_i' → logprob: -16.00004005432129
    6. 'range' → logprob: -17.00004005432129
    7. '_=' → logprob: -17.25004005432129
    8. '_

' → logprob: -17.75004005432129
    9. ' ' → logprob: -18.00004005432129
    10. '_n' → logprob: -18.12504005432129

Token 713: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03064674511551857
    2. 'in' → logprob: -4.530646800994873
    3. ' in' → logprob: -4.905646800994873
    4. ' range' → logprob: -4.905646800994873
    5. '_' → logprob: -5.405646800994873
    6. '_range' → logprob: -9.780646324157715
    7. '(range' → logprob: -10.905646324157715
    8. 'i' → logprob: -11.155646324157715
    9. 'n' → logprob: -12.280646324157715
    10. ' _' → logprob: -12.905646324157715

Token 714: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033558503491804004
    2. ' range' → logprob: -8.000335693359375
    3. '_range' → logprob: -16.375335693359375
    4. '   ' → logprob: -19.125335693359375
    5. '	range' → logprob: -19.750335693359375
    6. '(range' → logprob: -20.500335693359375
    7. '_' → logprob: -20.500335693359375
    8. '
' → logprob: -21.000335693359375
    9. '  ' → logprob: -22.375335693359375
    10. '0' → logprob: -22.625335693359375

Token 715: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.505351095460355e-05
    2. 'n' → logprob: -9.500075340270996
    3. '(' → logprob: -16.12507438659668
    4. ' n' → logprob: -17.37507438659668
    5. ')n' → logprob: -18.37507438659668
    6. ' (' → logprob: -18.87507438659668
    7. '	n' → logprob: -19.75007438659668
    8. ']' → logprob: -20.12507438659668
    9. '](' → logprob: -20.50007438659668
    10. '
' → logprob: -21.00007438659668

Token 716: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.47757811343763e-05
    2. ']' → logprob: -10.375044822692871
    3. ')' → logprob: -11.375044822692871
    4. ' )' → logprob: -14.625044822692871
    5. ')]
' → logprob: -15.000044822692871
    6. '   ' → logprob: -15.125044822692871
    7. ' ]' → logprob: -15.625044822692871
    8. ')],' → logprob: -15.625044822692871
    9. ' ' → logprob: -16.000043869018555
    10. '])' → logprob: -16.250043869018555

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21054239571094513
    2. '<|end|>' → logprob: -2.5855424404144287
    3. '    
' → logprob: -3.3355424404144287
    4. '
' → logprob: -3.5855424404144287
    5. 'def' → logprob: -3.8355424404144287
    6. ' 
' → logprob: -4.71054220199585
    7. '[' → logprob: -5.46054220199585
    8. '```' → logprob: -5.71054220199585
    9. ' def' → logprob: -5.83554220199585
    10. ' ' → logprob: -6.21054220199585

Token 718: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00015455135144293308
    2. '   ' → logprob: -9.125154495239258
    3. ' def' → logprob: -10.250154495239258
    4. '
' → logprob: -11.500154495239258
    5. '	def' → logprob: -17.250154495239258
    6. '    
' → logprob: -18.250154495239258
    7. '

' → logprob: -19.125154495239258
    8. 'de' → logprob: -19.375154495239258
    9. ' ' → logprob: -19.875154495239258
    10. '20' → logprob: -20.000154495239258

Token 719: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.5770270228385925
    2. ' add' → logprob: -0.8270270228385925
    3. '_add' → logprob: -6.827026844024658
    4. '	add' → logprob: -13.452027320861816
    5. '.add' → logprob: -14.327027320861816
    6. ' addedge' → logprob: -15.077027320861816
    7. '_' → logprob: -15.452027320861816
    8. ' bfs' → logprob: -16.2020263671875
    9. ' ' → logprob: -16.4520263671875
    10. '   ' → logprob: -16.5770263671875

Token 720: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.001193798496387899
    2. '_' → logprob: -6.751194000244141
    3. '_flow' → logprob: -11.25119400024414
    4. '_node' → logprob: -12.62619400024414
    5. '_vertex' → logprob: -13.00119400024414
    6. '_line' → logprob: -14.25119400024414
    7. ' _' → logprob: -14.37619400024414
    8. '_token' → logprob: -14.50119400024414
    9. '_layer' → logprob: -15.00119400024414
    10. '_source' → logprob: -15.62619400024414

Token 721: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5310078859329224
    2. '(self' → logprob: -0.9060078859329224
    3. ' (' → logprob: -4.906007766723633
    4. '<|end|>' → logprob: -8.031007766723633
    5. '(s' → logprob: -10.406007766723633
    6. '(
' → logprob: -10.656007766723633
    7. '(u' → logprob: -11.156007766723633
    8. ' self' → logprob: -12.156007766723633
    9. 'self' → logprob: -12.156007766723633
    10. '(a' → logprob: -12.281007766723633

Token 722: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08776615560054779
    2. ' (' → logprob: -3.337766170501709
    3. '(' → logprob: -3.587766170501709
    4. '(u' → logprob: -4.462766170501709
    5. ',' → logprob: -5.337766170501709
    6. ')(' → logprob: -6.087766170501709
    7. ')' → logprob: -6.837766170501709
    8. 'self' → logprob: -7.962766170501709
    9. '(i' → logprob: -8.46276569366455
    10. '(from' → logprob: -8.83776569366455

Token 723: ' fr' (ID: 1441)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3475457727909088
    2. 'u' → logprob: -1.7225457429885864
    3. ' self' → logprob: -2.472545862197876
    4. ' u' → logprob: -3.972545862197876
    5. 'frm' → logprob: -4.847545623779297
    6. 'fr' → logprob: -6.722545623779297
    7. 'from' → logprob: -6.847545623779297
    8. ' frm' → logprob: -7.597545623779297
    9. ' ' → logprob: -7.847545623779297
    10. 's' → logprob: -8.847545623779297

Token 724: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007686366327106953
    2. ' ,' → logprob: -4.882686138153076
    3. 'om' → logprob: -9.507686614990234
    4. ' ' → logprob: -13.382686614990234
    5. ',
' → logprob: -13.507686614990234
    6. 'e' → logprob: -14.257686614990234
    7. ',int' → logprob: -14.382686614990234
    8. '_,' → logprob: -15.257686614990234
    9. 'o' → logprob: -15.382686614990234
    10. ')' → logprob: -15.632686614990234

Token 725: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4193359315395355
    2. ' int' → logprob: -1.669335961341858
    3. 'int' → logprob: -2.5443358421325684
    4. ',' → logprob: -3.0443358421325684
    5. ' ,' → logprob: -4.544335842132568
    6. ',int' → logprob: -4.919335842132568
    7. '<|end|>' → logprob: -5.669335842132568
    8. ':int' → logprob: -6.294335842132568
    9. ')' → logprob: -6.919335842132568
    10. ' self' → logprob: -7.419335842132568

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008046258008107543
    2. ' ,' → logprob: -7.125804424285889
    3. ',int' → logprob: -16.500804901123047
    4. ',
' → logprob: -16.875804901123047
    5. '‌,' → logprob: -17.375804901123047
    6. '<|end|>' → logprob: -19.125804901123047
    7. ',b' → logprob: -20.125804901123047
    8. ',float' → logprob: -20.250804901123047
    9. ',end' → logprob: -20.375804901123047
    10. ',

' → logprob: -20.375804901123047

Token 727: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5760596394538879
    2. ' to' → logprob: -0.8260596394538879
    3. ' ' → logprob: -9.451059341430664
    4. ',to' → logprob: -11.701059341430664
    5. '	to' → logprob: -11.951059341430664
    6. 't' → logprob: -12.326059341430664
    7. ',' → logprob: -12.701059341430664
    8. ' t' → logprob: -12.826059341430664
    9. '(to' → logprob: -12.951059341430664
    10. '    ' → logprob: -12.951059341430664

Token 728: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001333932508714497
    2. ' ,' → logprob: -6.626333713531494
    3. ':' → logprob: -11.751334190368652
    4. ',int' → logprob: -16.626333236694336
    5. ',
' → logprob: -17.001333236694336
    6. '',' → logprob: -17.376333236694336
    7. ':int' → logprob: -17.626333236694336
    8. '_,' → logprob: -17.876333236694336
    9. ' ' → logprob: -18.001333236694336
    10. '=' → logprob: -18.501333236694336

Token 729: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014164102263748646
    2. ' int' → logprob: -4.264163970947266
    3. ':int' → logprob: -14.514163970947266
    4. ',int' → logprob: -17.014163970947266
    5. '[int' → logprob: -17.889163970947266
    6. '=int' → logprob: -18.014163970947266
    7. '	int' → logprob: -18.639163970947266
    8. ',' → logprob: -19.139163970947266
    9. ' ' → logprob: -19.264163970947266
    10. '<int' → logprob: -19.639163970947266

Token 730: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -12.87500286102295
    3. '_,' → logprob: -19.750001907348633
    4. ',
' → logprob: -20.250001907348633
    5. ':' → logprob: -21.375001907348633
    6. ')' → logprob: -23.000001907348633
    7. '‌,' → logprob: -23.000001907348633
    8. '',' → logprob: -23.375001907348633
    9. ',

' → logprob: -24.125001907348633
    10. ',
' → logprob: -24.500001907348633

Token 731: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.255300909280777
    2. ' cap' → logprob: -1.5053008794784546
    3. ' float' → logprob: -6.005300998687744
    4. 'float' → logprob: -7.380300998687744
    5. 'capacity' → logprob: -8.755300521850586
    6. ' capacity' → logprob: -9.130300521850586
    7. '_cap' → logprob: -12.505300521850586
    8. ' ' → logprob: -12.755300521850586
    9. 'flo' → logprob: -13.630300521850586
    10. '(cap' → logprob: -14.505300521850586

Token 732: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023988401517271996
    2. '=' → logprob: -6.12739896774292
    3. ')' → logprob: -9.127398490905762
    4. '):' → logprob: -9.752398490905762
    5. ',' → logprob: -10.127398490905762
    6. ' :' → logprob: -12.377398490905762
    7. ' ):' → logprob: -14.127398490905762
    8. ' )' → logprob: -14.252398490905762
    9. ' ' → logprob: -14.502398490905762
    10. ' =' → logprob: -14.752398490905762

Token 733: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.31828874349594116
    2. 'float' → logprob: -1.318288803100586
    3. ' cap' → logprob: -5.693288803100586
    4. 'cap' → logprob: -6.443288803100586
    5. ')' → logprob: -10.818288803100586
    6. '=float' → logprob: -11.068288803100586
    7. ':' → logprob: -11.568288803100586
    8. ' ' → logprob: -12.693288803100586
    9. 'flo' → logprob: -12.818288803100586
    10. 'f' → logprob: -14.568288803100586

Token 734: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002158114453777671
    2. '):
' → logprob: -6.627158164978027
    3. ')' → logprob: -7.377158164978027
    4. ',' → logprob: -8.627158164978027
    5. '):
' → logprob: -10.877158164978027
    6. ' ):' → logprob: -11.877158164978027
    7. '   ' → logprob: -14.877158164978027
    8. ')->' → logprob: -15.002158164978027
    9. ':' → logprob: -15.002158164978027
    10. '):

' → logprob: -15.127158164978027

Token 735: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032134840730577707
    2. ' self' → logprob: -6.003213405609131
    3. 'self' → logprob: -7.378213405609131
    4. '	' → logprob: -10.503213882446289
    5. '	self' → logprob: -10.753213882446289
    6. ',' → logprob: -10.878213882446289
    7. '   ' → logprob: -11.378213882446289
    8. '        
' → logprob: -12.253213882446289
    9. '	       ' → logprob: -12.503213882446289
    10. '        ' → logprob: -12.628213882446289

Token 736: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' (adapté à ' forward') → logprob: -0.4835163354873657
    2. 'self' → logprob: -0.9835163354873657
    3. 'e' → logprob: -4.983516216278076
    4. ' self' → logprob: -7.233516216278076
    5. 'f' → logprob: -7.233516216278076
    6. ' forward' → logprob: -7.483516216278076
    7. '       ' → logprob: -8.233516693115234
    8. '   ' → logprob: -8.608516693115234
    9. 'edge' → logprob: -9.483516693115234
    10. ' e' → logprob: -11.608516693115234

Token 737: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7450808882713318
    2. '_edge' → logprob: -0.9950808882713318
    3. ' =' → logprob: -1.8700809478759766
    4. 'Edge' → logprob: -7.370080947875977
    5. '=edge' → logprob: -7.370080947875977
    6. '=_' → logprob: -8.995080947875977
    7. '   ' → logprob: -10.495080947875977
    8. '_' → logprob: -11.245080947875977
    9. ' Edge' → logprob: -11.370080947875977
    10. 'edge' → logprob: -11.370080947875977

Token 738: ' Flow' (ID: 33537)
  Prédit: 'Flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flow' → logprob: -0.47442278265953064
    2. 'self' → logprob: -0.974422812461853
    3. ' Flow' → logprob: -8.224422454833984
    4. ' self' → logprob: -9.474422454833984
    5. 'Self' → logprob: -14.474422454833984
    6. '.Flow' → logprob: -16.599422454833984
    7. '(self' → logprob: -17.224422454833984
    8. '_flow' → logprob: -17.224422454833984
    9. 'Flows' → logprob: -17.224422454833984
    10. 'flow' → logprob: -17.349422454833984

Token 739: 'Network' (ID: 14022)
  Prédit: 'Network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Network' → logprob: -2.1888679839321412e-05
    2. 'network' → logprob: -10.875021934509277
    3. 'Networking' → logprob: -14.250021934509277
    4. '_network' → logprob: -14.625021934509277
    5. 'NETWORK' → logprob: -14.625021934509277
    6. 'etwork' → logprob: -15.125021934509277
    7. 'Flow' → logprob: -15.500021934509277
    8. 'Edge' → logprob: -15.500021934509277
    9. 'self' → logprob: -16.12502098083496
    10. ' Network' → logprob: -16.50002098083496

Token 740: '.Edge' (ID: 195894)
  Prédit: '.Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Edge' → logprob: -6.44443862256594e-05
    2. 'Edge' → logprob: -9.750064849853516
    3. '.' → logprob: -12.875064849853516
    4. '<Edge' → logprob: -13.250064849853516
    5. '.Ed' → logprob: -13.375064849853516
    6. '.E' → logprob: -15.625064849853516
    7. '.Endpoint' → logprob: -17.500064849853516
    8. '.Node' → logprob: -18.625064849853516
    9. ' .' → logprob: -18.750064849853516
    10. '.Network' → logprob: -19.125064849853516

Token 741: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.00012415809032972902
    2. 'to' → logprob: -9.000123977661133
    3. ' to' → logprob: -14.750123977661133
    4. '(' → logprob: -15.250123977661133
    5. '[to' → logprob: -17.375123977661133
    6. 'To' → logprob: -17.875123977661133
    7. ' (' → logprob: -18.250123977661133
    8. ',to' → logprob: -18.625123977661133
    9. '	to' → logprob: -19.375123977661133
    10. '   ' → logprob: -19.500123977661133

Token 742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001302374730585143
    2. ' ,' → logprob: -9.000130653381348
    3. '=' → logprob: -12.875130653381348
    4. '   ' → logprob: -13.500130653381348
    5. ',len' → logprob: -13.875130653381348
    6. '	' → logprob: -14.375130653381348
    7. ',
' → logprob: -14.625130653381348
    8. 'fr' → logprob: -14.625130653381348
    9. '       ' → logprob: -16.12512969970703
    10. ' ' → logprob: -16.87512969970703

Token 743: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005556552205234766
    2. ' len' → logprob: -7.500555515289307
    3. '(len' → logprob: -13.375555992126465
    4. '	len' → logprob: -14.375555992126465
    5. '=len' → logprob: -15.250555992126465
    6. '[len' → logprob: -15.375555992126465
    7. ',len' → logprob: -16.50055503845215
    8. '
' → logprob: -17.62555503845215
    9. ' ' → logprob: -17.62555503845215
    10. 'length' → logprob: -17.87555503845215

Token 744: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.676292231422849e-05
    2. 'self' → logprob: -11.250017166137695
    3. '(' → logprob: -12.875017166137695
    4. '=self' → logprob: -14.750017166137695
    5. '[self' → logprob: -15.500017166137695
    6. ' self' → logprob: -15.875017166137695
    7. '	self' → logprob: -16.500017166137695
    8. ' (' → logprob: -17.125017166137695
    9. '(
' → logprob: -17.625017166137695
    10. ',self' → logprob: -17.750017166137695

Token 745: '.graph' (ID: 18104)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0026931283064186573
    2. '[self' → logprob: -6.252693176269531
    3. '(self' → logprob: -7.252693176269531
    4. ' self' → logprob: -10.002693176269531
    5. 'graph' → logprob: -12.752693176269531
    6. '.self' → logprob: -12.752693176269531
    7. '	self' → logprob: -13.502693176269531
    8. '[' → logprob: -13.627693176269531
    9. '.graph' → logprob: -13.877693176269531
    10. ',self' → logprob: -14.627693176269531

Token 746: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.318681188422488e-05
    2. '[' → logprob: -11.25001335144043
    3. 'to' → logprob: -16.50001335144043
    4. '(to' → logprob: -19.75001335144043
    5. '[
' → logprob: -20.62501335144043
    6. '[t' → logprob: -21.12501335144043
    7. '   ' → logprob: -21.50001335144043
    8. ' [' → logprob: -21.75001335144043
    9. '[top' → logprob: -22.12501335144043
    10. '[from' → logprob: -22.12501335144043

Token 747: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00013095269969198853
    2. ' ),' → logprob: -9.375130653381348
    3. '],' → logprob: -10.250130653381348
    4. '[' → logprob: -12.375130653381348
    5. ']),' → logprob: -12.875130653381348
    6. '   ' → logprob: -13.000130653381348
    7. ')' → logprob: -14.500130653381348
    8. ' ' → logprob: -14.625130653381348
    9. ''),' → logprob: -15.875130653381348
    10. '	' → logprob: -16.375131607055664

Token 748: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.0007101670489646494
    2. ' cap' → logprob: -7.2507100105285645
    3. '
' → logprob: -15.750710487365723
    4. '   ' → logprob: -17.750709533691406
    5. 'capac' → logprob: -18.750709533691406
    6. '(cap' → logprob: -19.250709533691406
    7. '
' → logprob: -19.625709533691406
    8. 'float' → logprob: -19.750709533691406
    9. 'capacity' → logprob: -19.875709533691406
    10. 'caps' → logprob: -20.250709533691406

Token 749: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931570172309875
    2. ')
' → logprob: -0.6931570172309875
    3. '       ' → logprob: -12.443157196044922
    4. ')
' → logprob: -12.568157196044922
    5. ' )
' → logprob: -13.443157196044922
    6. ' )' → logprob: -14.943157196044922
    7. '   ' → logprob: -15.318157196044922
    8. ')

' → logprob: -15.443157196044922
    9. '),' → logprob: -17.318157196044922
    10. '	' → logprob: -18.318157196044922

Token 750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023186765611171722
    2. 'self' → logprob: -6.377318859100342
    3. ' backward' → logprob: -8.752318382263184
    4. ')' → logprob: -8.877318382263184
    5. '        
' → logprob: -9.377318382263184
    6. 'forward' → logprob: -9.752318382263184
    7. ' self' → logprob: -10.252318382263184
    8. ' forward' → logprob: -10.627318382263184
    9. ')
' → logprob: -10.877318382263184
    10. ',' → logprob: -11.002318382263184

Token 751: ' backward' (ID: 58986)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07944288849830627
    2. 'back' → logprob: -2.5794429779052734
    3. 'reverse' → logprob: -7.829442977905273
    4. ' self' → logprob: -9.079442977905273
    5. ' backward' → logprob: -10.579442977905273
    6. '       ' → logprob: -11.079442977905273
    7. ' reverse' → logprob: -16.704442977905273
    8. 'Backward' → logprob: -17.204442977905273
    9. '	self' → logprob: -17.329442977905273
    10. 'rear' → logprob: -17.329442977905273

Token 752: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395360946655
    2. ' =' → logprob: -0.8259395360946655
    3. ' ' → logprob: -16.450939178466797
    4. '   ' → logprob: -17.325939178466797
    5. '	' → logprob: -17.575939178466797
    6. '    ' → logprob: -18.200939178466797
    7. ',' → logprob: -18.325939178466797
    8. ')' → logprob: -18.700939178466797
    9. '  ' → logprob: -18.825939178466797
    10. 's' → logprob: -19.075939178466797

Token 753: ' Flow' (ID: 33537)
  Prédit: 'Flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flow' → logprob: -0.03804149478673935
    2. ' Flow' → logprob: -3.288041591644287
    3. '.Flow' → logprob: -17.163042068481445
    4. ' flow' → logprob: -17.413042068481445
    5. '_flow' → logprob: -19.538042068481445
    6. 'Flows' → logprob: -20.663042068481445
    7. 'flow' → logprob: -21.288042068481445
    8. '-flow' → logprob: -21.788042068481445
    9. '_FLOW' → logprob: -22.163042068481445
    10. 'self' → logprob: -22.163042068481445

Token 754: 'Network' (ID: 14022)
  Prédit: 'Network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Network' → logprob: -3.273621405242011e-05
    2. ' Network' → logprob: -10.750032424926758
    3. 'network' → logprob: -11.875032424926758
    4. 'etwork' → logprob: -12.750032424926758
    5. '.Network' → logprob: -14.250032424926758
    6. '(Network' → logprob: -15.500032424926758
    7. 'NETWORK' → logprob: -15.625032424926758
    8. ' network' → logprob: -15.625032424926758
    9. '_network' → logprob: -16.250032424926758
    10. 'Networking' → logprob: -17.125032424926758

Token 755: '.Edge' (ID: 195894)
  Prédit: '.Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Edge' → logprob: -0.026095565408468246
    2. '.Flow' → logprob: -4.276095390319824
    3. '.Network' → logprob: -4.526095390319824
    4. 'Network' → logprob: -7.026095390319824
    5. '.Node' → logprob: -9.776095390319824
    6. '<Edge' → logprob: -10.151095390319824
    7. 'Edge' → logprob: -10.401095390319824
    8. '.Endpoint' → logprob: -11.901095390319824
    9. '.' → logprob: -12.776095390319824
    10. '.Point' → logprob: -12.901095390319824

Token 756: '(fr' (ID: 62646)
  Prédit: '(fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fr' → logprob: -8.2994620242971e-06
    2. 'fr' → logprob: -11.750008583068848
    3. ' fr' → logprob: -15.625008583068848
    4. '(' → logprob: -16.12500762939453
    5. '(frm' → logprob: -17.12500762939453
    6. '	fr' → logprob: -17.37500762939453
    7. ' (' → logprob: -17.87500762939453
    8. '(
' → logprob: -19.25000762939453
    9. '(fl' → logprob: -19.37500762939453
    10. '/fr' → logprob: -19.37500762939453

Token 757: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.953082341467962e-05
    2. ' ,' → logprob: -10.375039100646973
    3. ',len' → logprob: -11.750039100646973
    4. ',
' → logprob: -15.625039100646973
    5. ',length' → logprob: -16.25004005432129
    6. ',int' → logprob: -17.25004005432129
    7. '=' → logprob: -17.62504005432129
    8. '	' → logprob: -18.00004005432129
    9. '‌,' → logprob: -18.12504005432129
    10. '   ' → logprob: -18.12504005432129

Token 758: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02324652671813965
    2. ' len' → logprob: -3.7732465267181396
    3. '	len' → logprob: -15.148246765136719
    4. '(len' → logprob: -15.148246765136719
    5. '[len' → logprob: -15.523246765136719
    6. ',len' → logprob: -16.27324676513672
    7. '=len' → logprob: -16.39824676513672
    8. 'length' → logprob: -16.64824676513672
    9. ' ' → logprob: -17.14824676513672
    10. '<len' → logprob: -18.52324676513672

Token 759: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.750017166137695
    3. 'self' → logprob: -11.875017166137695
    4. '(
' → logprob: -13.875017166137695
    5. '[self' → logprob: -13.875017166137695
    6. ' self' → logprob: -16.875017166137695
    7. ' (' → logprob: -17.375017166137695
    8. '(this' → logprob: -17.500017166137695
    9. '=self' → logprob: -17.500017166137695
    10. '	self' → logprob: -18.375017166137695

Token 760: '.graph' (ID: 18104)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003978992172051221
    2. '.graph' → logprob: -8.000397682189941
    3. '[self' → logprob: -10.000397682189941
    4. 'graph' → logprob: -11.875397682189941
    5. '[to' → logprob: -11.875397682189941
    6. 'self' → logprob: -14.000397682189941
    7. 'Graph' → logprob: -14.250397682189941
    8. '.fr' → logprob: -14.750397682189941
    9. '[
' → logprob: -15.250397682189941
    10. '(graph' → logprob: -15.375397682189941

Token 761: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[
' → logprob: -16.125
    3. '(fr' → logprob: -16.875
    4. '[self' → logprob: -17.25
    5. 'fr' → logprob: -17.5
    6. ')' → logprob: -17.875
    7. '[to' → logprob: -20.0
    8. '```' → logprob: -20.125
    9. '[from' → logprob: -20.25
    10. '
' → logprob: -20.25

Token 762: 'fr' (ID: 1739)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0861724466085434
    2. 'fr' → logprob: -2.586172342300415
    3. '[' → logprob: -5.336172580718994
    4. '[self' → logprob: -6.086172580718994
    5. ' self' → logprob: -9.211172103881836
    6. ')' → logprob: -10.961172103881836
    7. 'graph' → logprob: -11.086172103881836
    8. '[to' → logprob: -11.586172103881836
    9. ' ' → logprob: -11.711172103881836
    10. '(fr' → logprob: -12.086172103881836

Token 763: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005015624337829649
    2. '],' → logprob: -7.75050163269043
    3. ' ),' → logprob: -10.87550163269043
    4. '   ' → logprob: -11.00050163269043
    5. ']),' → logprob: -11.12550163269043
    6. '       ' → logprob: -11.50050163269043
    7. ',' → logprob: -12.12550163269043
    8. '[' → logprob: -13.50050163269043
    9. ')' → logprob: -13.50050163269043
    10. '```' → logprob: -15.00050163269043

Token 764: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.762356209335849e-05
    2. ' ' → logprob: -10.25003719329834
    3. 'cap' → logprob: -13.12503719329834
    4. '   ' → logprob: -16.500038146972656
    5. 'len' → logprob: -17.000038146972656
    6. ' cap' → logprob: -18.500038146972656
    7. '  ' → logprob: -18.875038146972656
    8. '۰' → logprob: -19.125038146972656
    9. '00' → logprob: -19.375038146972656
    10. '
' → logprob: -19.750038146972656

Token 765: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.182190554682165e-05
    2. 'len' → logprob: -9.750061988830566
    3. 'cap' → logprob: -13.000061988830566
    4. ' ' → logprob: -13.750061988830566
    5. '   ' → logprob: -15.875061988830566
    6. '1' → logprob: -17.25006103515625
    7. 'self' → logprob: -17.62506103515625
    8. ' len' → logprob: -18.00006103515625
    9. '
' → logprob: -18.25006103515625
    10. ')' → logprob: -18.50006103515625

Token 766: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018155913800001144
    2. ')
' → logprob: -4.018156051635742
    3. '       ' → logprob: -12.518156051635742
    4. '   ' → logprob: -14.018156051635742
    5. ' )' → logprob: -14.018156051635742
    6. ')
' → logprob: -14.643156051635742
    7. ')

' → logprob: -15.768156051635742
    8. ' )
' → logprob: -16.768156051635742
    9. '),' → logprob: -17.893156051635742
    10. '	' → logprob: -18.018156051635742

Token 767: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022574368864297867
    2. ')' → logprob: -4.022574424743652
    3. 'cap' → logprob: -5.522574424743652
    4. 'float' → logprob: -8.522574424743652
    5. ' ' → logprob: -9.647574424743652
    6. ' cap' → logprob: -9.772574424743652
    7. ')
' → logprob: -10.522574424743652
    8. ' )' → logprob: -11.522574424743652
    9. '       ' → logprob: -11.647574424743652
    10. '
' → logprob: -11.897574424743652

Token 768: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12695330381393433
    2. ')
' → logprob: -2.126953363418579
    3. ' )' → logprob: -11.251953125
    4. '       ' → logprob: -12.001953125
    5. ' )
' → logprob: -12.751953125
    6. ')
' → logprob: -13.001953125
    7. '   ' → logprob: -14.376953125
    8. ')

' → logprob: -15.376953125
    9. '),' → logprob: -17.501953125
    10. ')`
' → logprob: -17.626953125

Token 769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009910020045936108
    2. ')' → logprob: -5.3849101066589355
    3. '<|end|>' → logprob: -5.5099101066589355
    4. '	' → logprob: -8.259909629821777
    5. ',' → logprob: -8.259909629821777
    6. '.' → logprob: -9.009909629821777
    7. '        
' → logprob: -9.134909629821777
    8. '
' → logprob: -9.259909629821777
    9. ')
' → logprob: -9.509909629821777
    10. '   ' → logprob: -10.134909629821777

Token 770: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009786247974261642
    2. ' self' → logprob: -7.000978469848633
    3. '       ' → logprob: -9.625978469848633
    4. '	self' → logprob: -14.250978469848633
    5. '[self' → logprob: -15.375978469848633
    6. '        
' → logprob: -15.500978469848633
    7. '(self' → logprob: -17.125978469848633
    8. '   ' → logprob: -17.250978469848633
    9. ')' → logprob: -18.000978469848633
    10. '
' → logprob: -18.000978469848633

Token 771: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -9.088346359931165e-07
    2. 'graph' → logprob: -14.250000953674316
    3. '.' → logprob: -15.750000953674316
    4. '	graph' → logprob: -17.125
    5. ' .' → logprob: -17.5
    6. '.graphics' → logprob: -18.25
    7. '.grid' → logprob: -18.5
    8. '.gr' → logprob: -19.875
    9. '_graph' → logprob: -20.875
    10. '.g' → logprob: -20.875

Token 772: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[to' → logprob: -19.0
    3. 'fr' → logprob: -19.875
    4. '   ' → logprob: -21.125
    5. ' [' → logprob: -21.75
    6. '```' → logprob: -21.875
    7. '[self' → logprob: -22.625
    8. '[from' → logprob: -22.625
    9. ')[' → logprob: -22.75
    10. '    ' → logprob: -23.0

Token 773: 'fr' (ID: 1739)
  Prédit: 'fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. ' fr' → logprob: -16.125
    4. '	fr' → logprob: -19.625
    5. '_fr' → logprob: -20.125
    6. '(fr' → logprob: -20.875
    7. 'f' → logprob: -21.75
    8. '   ' → logprob: -22.125
    9. 'fra' → logprob: -22.25
    10. 'FR' → logprob: -22.25

Token 774: '].' (ID: 1651)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.701046347618103
    2. '].' → logprob: -0.701046347618103
    3. '.append' → logprob: -5.576046466827393
    4. '.' → logprob: -5.826046466827393
    5. '   ' → logprob: -7.201046466827393
    6. '][' → logprob: -9.451045989990234
    7. ']' → logprob: -9.451045989990234
    8. '[].' → logprob: -9.701045989990234
    9. ' ].' → logprob: -10.076045989990234
    10. ').' → logprob: -10.076045989990234

Token 775: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.8889261304575484e-06
    2. '.append' → logprob: -12.500003814697266
    3. '_append' → logprob: -17.250003814697266
    4. ' append' → logprob: -17.875003814697266
    5. 'app' → logprob: -17.875003814697266
    6. '	append' → logprob: -21.000003814697266
    7. 'Append' → logprob: -22.125003814697266
    8. 'push' → logprob: -22.625003814697266
    9. 'appen' → logprob: -22.750003814697266
    10. 'insert' → logprob: -23.750003814697266

Token 776: '(for' (ID: 43629)
  Prédit: '(for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(for' → logprob: -7.896309739408025e-07
    2. 'forward' → logprob: -14.250000953674316
    3. '(' → logprob: -16.0
    4. ' forward' → logprob: -19.5
    5. '.forward' → logprob: -20.125
    6. '(
' → logprob: -20.5
    7. 'for' → logprob: -20.75
    8. '_forward' → logprob: -20.75
    9. '(with' → logprob: -21.375
    10. '((' → logprob: -21.75

Token 777: 'ward' (ID: 2076)
  Prédit: 'ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -0.0023298633750528097
    2. 'forward' → logprob: -6.5023298263549805
    3. 'or' → logprob: -8.00232982635498
    4. '_forward' → logprob: -8.50232982635498
    5. 'word' → logprob: -9.50232982635498
    6. 'ow' → logprob: -9.62732982635498
    7. 'ard' → logprob: -9.87732982635498
    8. 'w' → logprob: -11.00232982635498
    9. '```' → logprob: -11.12732982635498
    10. '       ' → logprob: -11.62732982635498

Token 778: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25194910168647766
    2. ')
' → logprob: -1.5019490718841553
    3. '       ' → logprob: -11.376949310302734
    4. ')
' → logprob: -12.751949310302734
    5. ' )
' → logprob: -12.876949310302734
    6. ' )' → logprob: -13.376949310302734
    7. '   ' → logprob: -14.626949310302734
    8. '),' → logprob: -14.626949310302734
    9. ')

' → logprob: -15.751949310302734
    10. ',' → logprob: -15.876949310302734

Token 779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6954699158668518
    2. 'self' → logprob: -0.6954699158668518
    3. ' self' → logprob: -6.070469856262207
    4. '	self' → logprob: -12.945469856262207
    5. '[self' → logprob: -13.070469856262207
    6. '   ' → logprob: -13.570469856262207
    7. '        
' → logprob: -14.195469856262207
    8. '
' → logprob: -14.195469856262207
    9. '(self' → logprob: -14.320469856262207
    10. ' ' → logprob: -14.695469856262207

Token 780: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -3.650518920039758e-06
    2. ' self' → logprob: -12.625003814697266
    3. '       ' → logprob: -15.125003814697266
    4. '	self' → logprob: -19.875003814697266
    5. '   ' → logprob: -20.500003814697266
    6. '[self' → logprob: -22.250003814697266
    7. '        
' → logprob: -22.750003814697266
    8. 's' → logprob: -23.000003814697266
    9. 'graph' → logprob: -23.000003814697266
    10. '(self' → logprob: -23.125003814697266

Token 781: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -7.896309739408025e-07
    2. 'graph' → logprob: -14.875000953674316
    3. '.' → logprob: -15.375000953674316
    4. '	graph' → logprob: -16.5
    5. '.graphics' → logprob: -18.125
    6. ' .' → logprob: -18.875
    7. '.grid' → logprob: -20.0
    8. '_graph' → logprob: -20.5
    9. '.Graph' → logprob: -20.75
    10. '.g' → logprob: -21.0

Token 782: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.0031790214125066996
    2. '[' → logprob: -5.75317907333374
    3. '[from' → logprob: -13.753178596496582
    4. '[temp' → logprob: -16.6281795501709
    5. '[t' → logprob: -17.5031795501709
    6. '[now' → logprob: -18.0031795501709
    7. '[tmp' → logprob: -18.2531795501709
    8. '[df' → logprob: -18.3781795501709
    9. '.fr' → logprob: -18.3781795501709
    10. '[data' → logprob: -18.3781795501709

Token 783: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8523730039596558
    2. '[' → logprob: -0.8523730039596558
    3. '.append' → logprob: -2.1023731231689453
    4. '].' → logprob: -4.102373123168945
    5. ').' → logprob: -5.602373123168945
    6. ' .' → logprob: -6.477373123168945
    7. '[].' → logprob: -6.727373123168945
    8. '.fr' → logprob: -6.977373123168945
    9. '.app' → logprob: -8.102373123168945
    10. '.py' → logprob: -8.727373123168945

Token 784: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.3856492842023727e-06
    2. '.append' → logprob: -14.000000953674316
    3. ' append' → logprob: -14.500000953674316
    4. 'app' → logprob: -16.750001907348633
    5. 'appen' → logprob: -20.125001907348633
    6. '_append' → logprob: -20.250001907348633
    7. 'Append' → logprob: -20.625001907348633
    8. '	append' → logprob: -21.125001907348633
    9. ' Append' → logprob: -21.750001907348633
    10. 'add' → logprob: -22.625001907348633

Token 785: '(back' (ID: 106436)
  Prédit: '(back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(back' → logprob: -1.5048530030981055e-06
    2. 'back' → logprob: -13.500001907348633
    3. '.backward' → logprob: -17.875001907348633
    4. ' backward' → logprob: -18.500001907348633
    5. 'Backward' → logprob: -19.375001907348633
    6. '	back' → logprob: -19.750001907348633
    7. '_backward' → logprob: -19.875001907348633
    8. '(reverse' → logprob: -20.000001907348633
    9. '/back' → logprob: -20.750001907348633
    10. '(
' → logprob: -21.125001907348633

Token 786: 'ward' (ID: 2076)
  Prédit: 'ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -1.6405310816480778e-05
    2. 'back' → logprob: -11.625016212463379
    3. 'word' → logprob: -12.875016212463379
    4. 'war' → logprob: -13.000016212463379
    5. 'ard' → logprob: -13.875016212463379
    6. 'forward' → logprob: -14.500016212463379
    7. 'wards' → logprob: -14.750016212463379
    8. 'w' → logprob: -15.000016212463379
    9. 'WARD' → logprob: -16.000017166137695
    10. '[' → logprob: -16.000017166137695

Token 787: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010480545461177826
    2. '<|end|>' → logprob: -7.1260480880737305
    3. '       ' → logprob: -8.50104808807373
    4. ')
' → logprob: -11.12604808807373
    5. '   ' → logprob: -11.75104808807373
    6. ' )' → logprob: -11.75104808807373
    7. '<|end|>' → logprob: -12.75104808807373
    8. '()' → logprob: -14.00104808807373
    9. '[' → logprob: -14.12604808807373
    10. '        ' → logprob: -14.37604808807373

Token 788: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6359385251998901
    2. '
' → logprob: -0.8859385251998901
    3. 'def' → logprob: -3.6359386444091797
    4. '    
' → logprob: -3.6359386444091797
    5. '```' → logprob: -6.01093864440918
    6. '

' → logprob: -6.76093864440918
    7. '\n' → logprob: -8.01093864440918
    8. '  
' → logprob: -8.38593864440918
    9. '    ' → logprob: -8.51093864440918
    10. '   
' → logprob: -8.76093864440918

Token 789: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00282924622297287
    2. '   ' → logprob: -6.252829074859619
    3. ' def' → logprob: -7.127829074859619
    4. '
' → logprob: -9.377829551696777
    5. '```' → logprob: -11.627829551696777
    6. '    
' → logprob: -13.502829551696777
    7. '	def' → logprob: -13.752829551696777
    8. 'from' → logprob: -14.877829551696777
    9. ' ' → logprob: -15.002829551696777
    10. 'de' → logprob: -15.377829551696777

Token 790: ' bfs' (ID: 147571)
  Prédit: ' bfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.6097422242164612
    2. 'max' → logprob: -0.9847422242164612
    3. 'dfs' → logprob: -3.8597421646118164
    4. ' max' → logprob: -3.8597421646118164
    5. 'din' → logprob: -4.234742164611816
    6. '_max' → logprob: -4.734742164611816
    7. '_' → logprob: -5.359742164611816
    8. 'b' → logprob: -5.484742164611816
    9. 'level' → logprob: -6.109742164611816
    10. ' dfs' → logprob: -6.484742164611816

Token 791: '_level' (ID: 18404)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.334533878136426e-05
    2. '(' → logprob: -10.375042915344238
    3. ' (' → logprob: -11.625042915344238
    4. '(s' → logprob: -13.250042915344238
    5. '   ' → logprob: -14.250042915344238
    6. '(
' → logprob: -14.625042915344238
    7. '(sel' → logprob: -16.750043869018555
    8. '       ' → logprob: -16.875043869018555
    9. 'self' → logprob: -17.125043869018555
    10. '	self' → logprob: -17.375043869018555

Token 792: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00036906293826177716
    2. '(s' → logprob: -8.75036907196045
    3. '(' → logprob: -9.50036907196045
    4. '   ' → logprob: -10.37536907196045
    5. 's' → logprob: -10.50036907196045
    6. '       ' → logprob: -10.75036907196045
    7. 'self' → logprob: -11.00036907196045
    8. ' (' → logprob: -11.25036907196045
    9. '_(' → logprob: -12.25036907196045
    10. 'graph' → logprob: -12.37536907196045

Token 793: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01382178720086813
    2. ',' → logprob: -5.138821601867676
    3. 'self' → logprob: -5.763821601867676
    4. ')(' → logprob: -6.388821601867676
    5. '   ' → logprob: -6.513821601867676
    6. '       ' → logprob: -7.513821601867676
    7. ')' → logprob: -7.638821601867676
    8. ' (' → logprob: -9.763821601867676
    9. ',self' → logprob: -9.763821601867676
    10. '(' → logprob: -10.013821601867676

Token 794: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002856497303582728
    2. 'self' → logprob: -8.500286102294922
    3. ' s' → logprob: -10.250286102294922
    4. 'level' → logprob: -11.250286102294922
    5. 'start' → logprob: -11.375286102294922
    6. 'src' → logprob: -11.750286102294922
    7. '   ' → logprob: -12.000286102294922
    8. 't' → logprob: -12.875286102294922
    9. ')' → logprob: -13.000286102294922
    10. 'source' → logprob: -14.000286102294922

Token 795: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010461445897817612
    2. ':' → logprob: -4.635461330413818
    3. ' ,' → logprob: -7.385461330413818
    4. '   ' → logprob: -10.135461807250977
    5. 'self' → logprob: -10.885461807250977
    6. ' :' → logprob: -12.135461807250977
    7. ':int' → logprob: -12.135461807250977
    8. '(self' → logprob: -12.385461807250977
    9. '       ' → logprob: -12.760461807250977
    10. ' self' → logprob: -13.135461807250977

Token 796: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00027015688829123974
    2. ' int' → logprob: -8.250269889831543
    3. '   ' → logprob: -12.625269889831543
    4. '	int' → logprob: -12.875269889831543
    5. '[int' → logprob: -13.625269889831543
    6. ')' → logprob: -14.250269889831543
    7. ':int' → logprob: -15.000269889831543
    8. '(int' → logprob: -15.125269889831543
    9. '  ' → logprob: -15.625269889831543
    10. ' ' → logprob: -16.37527084350586

Token 797: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.762356209335849e-05
    2. ',int' → logprob: -10.50003719329834
    3. ' ,' → logprob: -11.75003719329834
    4. ')' → logprob: -14.00003719329834
    5. '   ' → logprob: -14.25003719329834
    6. ':' → logprob: -15.62503719329834
    7. '):' → logprob: -16.000038146972656
    8. ',s' → logprob: -16.375038146972656
    9. ',b' → logprob: -16.625038146972656
    10. ',
' → logprob: -17.000038146972656

Token 798: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -8.876193169271573e-05
    2. ' t' → logprob: -9.375088691711426
    3. '	t' → logprob: -12.875088691711426
    4. '   ' → logprob: -13.625088691711426
    5. 'level' → logprob: -16.000089645385742
    6. '  ' → logprob: -17.250089645385742
    7. '`t' → logprob: -17.500089645385742
    8. '    ' → logprob: -18.375089645385742
    9. 'e' → logprob: -18.875089645385742
    10. ' ' → logprob: -19.125089645385742

Token 799: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.3464544432936236e-05
    2. ':int' → logprob: -10.125043869018555
    3. ')' → logprob: -13.500043869018555
    4. ' :' → logprob: -14.125043869018555
    5. 'int' → logprob: -14.500043869018555
    6. '):' → logprob: -15.000043869018555
    7. '_:' → logprob: -16.375043869018555
    8. '   ' → logprob: -16.625043869018555
    9. '):
' → logprob: -16.875043869018555
    10. '[int' → logprob: -17.000043869018555

Token 800: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.2961512513575144e-05
    2. ' int' → logprob: -10.750022888183594
    3. '[int' → logprob: -14.000022888183594
    4. ')' → logprob: -15.750022888183594
    5. 'Optional' → logprob: -16.000022888183594
    6. ' ' → logprob: -16.625022888183594
    7. '=int' → logprob: -16.875022888183594
    8. '   ' → logprob: -16.875022888183594
    9. ':int' → logprob: -17.125022888183594
    10. '	int' → logprob: -17.125022888183594

Token 801: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007803229382261634
    2. '):
' → logprob: -7.25078010559082
    3. '):' → logprob: -9.87578010559082
    4. '):
' → logprob: -11.75078010559082
    5. ' )' → logprob: -12.25078010559082
    6. ')->' → logprob: -12.37578010559082
    7. '   ' → logprob: -14.37578010559082
    8. '):

' → logprob: -14.75078010559082
    9. '`)' → logprob: -15.37578010559082
    10. '）' → logprob: -15.50078010559082

Token 802: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.00035333906998857856
    2. ' level' → logprob: -8.000353813171387
    3. 'levels' → logprob: -11.000353813171387
    4. 'lvl' → logprob: -14.500353813171387
    5. '	level' → logprob: -14.625353813171387
    6. '.level' → logprob: -16.75035285949707
    7. 'lev' → logprob: -17.00035285949707
    8. '   ' → logprob: -17.37535285949707
    9. ' levels' → logprob: -17.62535285949707
    10. '  ' → logprob: -18.12535285949707

Token 803: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035721324384212494
    2. '):' → logprob: -3.7857213020324707
    3. ')' → logprob: -4.535721302032471
    4. '):
' → logprob: -7.160721302032471
    5. ' ):' → logprob: -8.035721778869629
    6. '   ' → logprob: -8.410721778869629
    7. ' :' → logprob: -8.660721778869629
    8. ' )' → logprob: -9.535721778869629
    9. ',' → logprob: -9.785721778869629
    10. '):
' → logprob: -10.660721778869629

Token 804: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -4.008129963040119e-06
    2. ' List' → logprob: -12.500003814697266
    3. '[List' → logprob: -16.375003814697266
    4. 'list' → logprob: -16.875003814697266
    5. ')' → logprob: -17.500003814697266
    6. 'Optional' → logprob: -20.125003814697266
    7. '	List' → logprob: -20.125003814697266
    8. '_list' → logprob: -21.250003814697266
    9. '   ' → logprob: -21.625003814697266
    10. '-list' → logprob: -22.000003814697266

Token 805: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00016349162615370005
    2. 'int' → logprob: -8.750163078308105
    3. ')' → logprob: -12.750163078308105
    4. ':int' → logprob: -13.875163078308105
    5. ']int' → logprob: -15.000163078308105
    6. '[' → logprob: -15.000163078308105
    7. '=int' → logprob: -15.500163078308105
    8. '<int' → logprob: -15.875163078308105
    9. ' int' → logprob: -16.375164031982422
    10. '):' → logprob: -16.750164031982422

Token 806: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009217512793838978
    2. '):
' → logprob: -4.759217739105225
    3. '):' → logprob: -7.634217739105225
    4. '):
' → logprob: -9.634217262268066
    5. ' )' → logprob: -10.384217262268066
    6. '])' → logprob: -11.259217262268066
    7. ')->' → logprob: -12.384217262268066
    8. '）' → logprob: -13.384217262268066
    9. '):

' → logprob: -13.759217262268066
    10. '`)' → logprob: -14.259217262268066

Token 807: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016740089282393456
    2. ':
' → logprob: -4.391740322113037
    3. '):' → logprob: -5.641740322113037
    4. '):
' → logprob: -8.391739845275879
    5. '       ' → logprob: -8.641739845275879
    6. '   ' → logprob: -8.891739845275879
    7. ')' → logprob: -10.266739845275879
    8. ',' → logprob: -10.266739845275879
    9. ' :' → logprob: -11.516739845275879
    10. '():' → logprob: -11.641739845275879

Token 808: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -5.1093578804284334e-05
    2. ' bool' → logprob: -10.375051498413086
    3. 'Optional' → logprob: -10.875051498413086
    4. '   ' → logprob: -14.625051498413086
    5. '	bool' → logprob: -15.125051498413086
    6. ' ' → logprob: -16.375051498413086
    7. '[' → logprob: -17.125051498413086
    8. '```' → logprob: -17.250051498413086
    9. '<bool' → logprob: -17.875051498413086
    10. '  ' → logprob: -17.875051498413086

Token 809: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01860077865421772
    2. ':
' → logprob: -4.018600940704346
    3. '       ' → logprob: -8.143600463867188
    4. '   ' → logprob: -9.518600463867188
    5. '):' → logprob: -10.143600463867188
    6. '():' → logprob: -11.018600463867188
    7. '):
' → logprob: -11.768600463867188
    8. '():
' → logprob: -12.143600463867188
    9. ' :' → logprob: -12.393600463867188
    10. ':return' → logprob: -12.518600463867188

Token 810: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024485493078827858
    2. '   ' → logprob: -3.7744855880737305
    3. ' queue' → logprob: -6.8994855880737305
    4. 'queue' → logprob: -8.89948558807373
    5. '	' → logprob: -10.39948558807373
    6. '	queue' → logprob: -11.27448558807373
    7. '	   ' → logprob: -11.89948558807373
    8. '    
' → logprob: -12.14948558807373
    9. '        
' → logprob: -12.27448558807373
    10. '    ' → logprob: -12.27448558807373

Token 811: ' for' (ID: 395)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.12154828011989594
    2. '       ' → logprob: -2.7465481758117676
    3. 'q' → logprob: -3.6215481758117676
    4. ' queue' → logprob: -4.371548175811768
    5. 'deque' → logprob: -5.246548175811768
    6. '   ' → logprob: -5.496548175811768
    7. '```' → logprob: -7.121548175811768
    8. '	queue' → logprob: -8.621548652648926
    9. 'for' (adapté à ' for') → logprob: -8.746548652648926
    10. 'from' → logprob: -9.121548652648926

Token 812: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.8889261304575484e-06
    2. ' i' → logprob: -12.500003814697266
    3. '	i' → logprob: -16.250003814697266
    4. '_i' → logprob: -19.250003814697266
    5. '[i' → logprob: -22.125003814697266
    6. '(i' → logprob: -23.125003814697266
    7. ''i' → logprob: -23.125003814697266
    8. 'ii' → logprob: -23.375003814697266
    9. '*i' → logprob: -23.375003814697266
    10. '.i' → logprob: -23.750003814697266

Token 813: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02054702304303646
    2. 'in' → logprob: -3.8955469131469727
    3. 'import' → logprob: -13.520546913146973
    4. ' ' → logprob: -14.270546913146973
    5. ' i' → logprob: -14.270546913146973
    6. ',' → logprob: -14.395546913146973
    7. 'n' → logprob: -14.520546913146973
    8. '  ' → logprob: -15.020546913146973
    9. 'In' → logprob: -15.395546913146973
    10. 'i' → logprob: -15.770546913146973

Token 814: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.87509536743164
    4. 'rang' → logprob: -19.25009536743164
    5. '	range' → logprob: -19.50009536743164
    6. '  ' → logprob: -19.87509536743164
    7. ' ' → logprob: -20.00009536743164
    8. 'ra' → logprob: -20.25009536743164
    9. 'r' → logprob: -20.25009536743164
    10. 'level' → logprob: -20.37509536743164

Token 815: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00040815072134137154
    2. 'len' → logprob: -8.000408172607422
    3. ' len' → logprob: -9.750408172607422
    4. ',len' → logprob: -12.250408172607422
    5. '=len' → logprob: -12.875408172607422
    6. '	len' → logprob: -13.000408172607422
    7. '(level' → logprob: -13.375408172607422
    8. '(' → logprob: -13.750408172607422
    9. '<len' → logprob: -14.250408172607422
    10. '   ' → logprob: -14.750408172607422

Token 816: '(level' (ID: 51690)
  Prédit: '(level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(level' → logprob: -0.0009117019944824278
    2. 'level' → logprob: -7.000911712646484
    3. ' level' → logprob: -15.500911712646484
    4. '[level' → logprob: -18.000911712646484
    5. '	level' → logprob: -19.000911712646484
    6. '(' → logprob: -20.125911712646484
    7. '_level' → logprob: -22.375911712646484
    8. ' (' → logprob: -22.500911712646484
    9. 'levels' → logprob: -22.500911712646484
    10. 'Level' → logprob: -23.000911712646484

Token 817: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014202173799276352
    2. '):' → logprob: -4.264202117919922
    3. '):
' → logprob: -10.389202117919922
    4. ')' → logprob: -12.514202117919922
    5. ' ):
' → logprob: -12.639202117919922
    6. ':
' → logprob: -15.139202117919922
    7. '   ' → logprob: -15.514202117919922
    8. ' ):' → logprob: -16.014202117919922
    9. '():
' → logprob: -16.264202117919922
    10. '):

' → logprob: -16.514202117919922

Token 818: '           ' (ID: 352)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.6389102339744568
    2. ' level' → logprob: -0.8889102339744568
    3. '   ' → logprob: -3.5139102935791016
    4. '           ' → logprob: -3.5139102935791016
    5. '	level' → logprob: -6.888910293579102
    6. '[level' → logprob: -8.513910293579102
    7. '(level' → logprob: -8.888910293579102
    8. '       ' → logprob: -9.513910293579102
    9. '
' → logprob: -11.763910293579102
    10. '-level' → logprob: -12.013910293579102

Token 819: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -0.0380503311753273
    2. ' level' → logprob: -3.288050413131714
    3. '   ' → logprob: -12.038050651550293
    4. '	level' → logprob: -13.038050651550293
    5. '           ' → logprob: -15.038050651550293
    6. '       ' → logprob: -16.163049697875977
    7. '[level' → logprob: -16.288049697875977
    8. '(level' → logprob: -16.288049697875977
    9. '    ' → logprob: -16.413049697875977
    10. '.level' → logprob: -17.163049697875977

Token 820: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '=' → logprob: -13.875001907348633
    3. 'i' → logprob: -14.875001907348633
    4. '```' → logprob: -16.250001907348633
    5. '[' → logprob: -16.500001907348633
    6. '[:]' → logprob: -16.875001907348633
    7. '=i' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.250001907348633
    9. ' i' → logprob: -17.375001907348633
    10. '[
' → logprob: -17.500001907348633

Token 821: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018204616382718086
    2. ' =' → logprob: -4.018204689025879
    3. ']' → logprob: -10.643204689025879
    4. ']=' → logprob: -10.768204689025879
    5. '=-' → logprob: -11.768204689025879
    6. ']=-' → logprob: -14.143204689025879
    7. ')' → logprob: -14.393204689025879
    8. ')=' → logprob: -14.518204689025879
    9. '=i' → logprob: -15.893204689025879
    10. '=None' → logprob: -17.143203735351562

Token 822: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008616935461759567
    2. ' =' → logprob: -4.758616924285889
    3. '=-' → logprob: -13.008617401123047
    4. ')=' → logprob: -16.883617401123047
    5. '=
' → logprob: -17.008617401123047
    6. ']=' → logprob: -17.508617401123047
    7. ')' → logprob: -18.008617401123047
    8. '=int' → logprob: -18.383617401123047
    9. '.=' → logprob: -19.008617401123047
    10. '=None' → logprob: -19.383617401123047

Token 823: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. ' -' → logprob: -15.875
    3. '   ' → logprob: -22.75
    4. '\-' → logprob: -22.75
    5. '−' → logprob: -23.375
    6. '0' → logprob: -23.625
    7. '-​' → logprob: -24.625
    8. ' ' → logprob: -24.625
    9. '-
' → logprob: -26.0
    10. '‌' → logprob: -26.0

Token 824: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -19.375
    3. '-' → logprob: -19.75
    4. ' ' → logprob: -20.0
    5. '１' → logprob: -20.375
    6. 'float' → logprob: -20.75
    7. '0' → logprob: -21.4375
    8. '
' → logprob: -21.5
    9. '۱' → logprob: -21.5
    10. '999' → logprob: -21.6875

Token 825: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20410370826721191
    2. '<|end|>' → logprob: -2.079103708267212
    3. '       ' → logprob: -3.454103708267212
    4. ' 
' → logprob: -4.329103469848633
    5. '\n' → logprob: -5.454103469848633
    6. '<|end|>' → logprob: -5.704103469848633
    7. '  
' → logprob: -6.204103469848633
    8. '        
' → logprob: -6.579103469848633
    9. '' → logprob: -7.454103469848633
    10. '
' → logprob: -7.579103469848633

Token 826: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17194929718971252
    2. '<|end|>' → logprob: -1.9219492673873901
    3. '
' → logprob: -4.79694938659668
    4. ',' → logprob: -6.67194938659668
    5. '<|end|>' → logprob: -7.42194938659668
    6. ' 
' → logprob: -7.54694938659668
    7. ' s' → logprob: -8.54694938659668
    8. '        
' → logprob: -8.67194938659668
    9. 's' → logprob: -9.17194938659668
    10. ')' → logprob: -9.17194938659668

Token 827: ' queue' (ID: 13661)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.2053239941596985
    2. 'queue' (adapté à ' queue') → logprob: -1.7053239345550537
    3. 'q' → logprob: -6.080324172973633
    4. '       ' → logprob: -7.830324172973633
    5. ' level' → logprob: -7.830324172973633
    6. ' queue' → logprob: -7.830324172973633
    7. '   ' → logprob: -8.330324172973633
    8. '	level' → logprob: -9.580324172973633
    9. 'deque' → logprob: -10.080324172973633
    10. 'from' → logprob: -10.455324172973633

Token 828: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2850510776042938
    2. '=' → logprob: -1.4100511074066162
    3. '.append' → logprob: -5.660050868988037
    4. '.' → logprob: -8.285051345825195
    5. ' ' → logprob: -9.285051345825195
    6. ' .' → logprob: -11.035051345825195
    7. '.enqueue' → logprob: -11.535051345825195
    8. 'deque' → logprob: -12.160051345825195
    9. '=sys' → logprob: -12.660051345825195
    10. ':' → logprob: -13.035051345825195

Token 829: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -2.7610454708337784e-05
    2. ' deque' → logprob: -10.500027656555176
    3. 'collections' → logprob: -17.37502670288086
    4. 'Deque' → logprob: -17.75002670288086
    5. '[' → logprob: -19.25002670288086
    6. '   ' → logprob: -19.87502670288086
    7. 'de' → logprob: -20.25002670288086
    8. 'sys' → logprob: -21.75002670288086
    9. '	de' → logprob: -22.50002670288086
    10. '```' → logprob: -22.75002670288086

Token 830: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.1008678451180458
    2. '()
' → logprob: -2.350867748260498
    3. '()' → logprob: -7.475867748260498
    4. '([(' → logprob: -9.350868225097656
    5. '[' → logprob: -12.975868225097656
    6. '()

' → logprob: -13.350868225097656
    7. '()
' → logprob: -13.975868225097656
    8. '[(' → logprob: -14.225868225097656
    9. '();' → logprob: -14.225868225097656
    10. '[s' → logprob: -14.725868225097656

Token 831: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5048530030981055e-06
    2. ' s' → logprob: -13.500001907348633
    3. '(s' → logprob: -17.250001907348633
    4. '{s' → logprob: -19.125001907348633
    5. '   ' → logprob: -21.375001907348633
    6. '	s' → logprob: -21.750001907348633
    7. '[s' → logprob: -21.875001907348633
    8. ')s' → logprob: -22.000001907348633
    9. '_s' → logprob: -22.375001907348633
    10. '`s' → logprob: -23.250001907348633

Token 832: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4754636883735657
    2. '])
' → logprob: -0.9754636883735657
    3. ')' → logprob: -7.2254638671875
    4. ')
' → logprob: -7.3504638671875
    5. '])
' → logprob: -11.7254638671875
    6. '       ' → logprob: -12.3504638671875
    7. ')])' → logprob: -14.1004638671875
    8. ' ])
' → logprob: -14.7254638671875
    9. ' ])' → logprob: -14.9754638671875
    10. ')]' → logprob: -15.1004638671875

Token 833: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04121382161974907
    2. 'level' → logprob: -3.2912137508392334
    3. ' level' → logprob: -5.9162139892578125
    4. '	level' → logprob: -8.041213989257812
    5. '   ' → logprob: -10.041213989257812
    6. '
' → logprob: -10.291213989257812
    7. 'while' → logprob: -10.666213989257812
    8. '[level' → logprob: -11.041213989257812
    9. '           ' → logprob: -11.291213989257812
    10. ' while' → logprob: -11.916213989257812

Token 834: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -1.1472419600977446e-06
    2. ' level' → logprob: -13.750000953674316
    3. '       ' → logprob: -19.750001907348633
    4. '   ' → logprob: -20.000001907348633
    5. '
' → logprob: -20.500001907348633
    6. '	level' → logprob: -20.875001907348633
    7. 'while' → logprob: -22.750001907348633
    8. '[level' → logprob: -23.000001907348633
    9. '(level' → logprob: -23.375001907348633
    10. '           ' → logprob: -23.500001907348633

Token 835: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00020449401927180588
    2. '[' → logprob: -8.500204086303711
    3. 's' → logprob: -14.000204086303711
    4. '[S' → logprob: -16.62520408630371
    5. ' [' → logprob: -18.00020408630371
    6. '[start' → logprob: -18.12520408630371
    7. '
' → logprob: -19.25020408630371
    8. '[t' → logprob: -19.37520408630371
    9. '[
' → logprob: -19.62520408630371
    10. '```' → logprob: -19.87520408630371

Token 836: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008040298125706613
    2. ']=' → logprob: -7.2508039474487305
    3. ' ]' → logprob: -9.87580394744873
    4. '=' → logprob: -10.12580394744873
    5. ' =' → logprob: -12.87580394744873
    6. '[' → logprob: -15.87580394744873
    7. ')' → logprob: -18.500804901123047
    8. ']+=' → logprob: -19.125804901123047
    9. '[s' → logprob: -20.000804901123047
    10. '   ' → logprob: -20.000804901123047

Token 837: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.768150329589844
    4. ']=' → logprob: -18.643150329589844
    5. ']' → logprob: -19.268150329589844
    6. ',' → logprob: -19.893150329589844
    7. ')=' → logprob: -20.268150329589844
    8. '.=' → logprob: -20.268150329589844
    9. '[' → logprob: -20.393150329589844
    10. ')' → logprob: -20.643150329589844

Token 838: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -20.75
    4. '00' → logprob: -22.0
    5. '０' → logprob: -23.0
    6. '   ' → logprob: -23.25
    7. '=' → logprob: -23.625
    8. '০' → logprob: -24.125
    9. '٠' → logprob: -24.25
    10. '000' → logprob: -24.3125

Token 839: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '۰' → logprob: -20.25
    4. '```' → logprob: -21.75
    5. '
' → logprob: -22.125
    6. '０' → logprob: -22.375
    7. '   ' → logprob: -22.5
    8. '=' → logprob: -22.875
    9. '  ' → logprob: -22.875
    10. '00' → logprob: -22.875

Token 840: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4094344973564148
    2. '<|end|>' → logprob: -1.9094345569610596
    3. '       ' → logprob: -2.0344345569610596
    4. ' 
' → logprob: -3.7844345569610596
    5. '  
' → logprob: -4.4094343185424805
    6. '   ' → logprob: -5.2844343185424805
    7. '        
' → logprob: -5.5344343185424805
    8. '<|end|>' → logprob: -5.9094343185424805
    9. '    
' → logprob: -6.0344343185424805
    10. '	while' → logprob: -6.1594343185424805

Token 841: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026664717122912407
    2. '	while' → logprob: -4.026664733886719
    3. 'while' → logprob: -5.526664733886719
    4. ' while' → logprob: -5.901664733886719
    5. '   ' → logprob: -6.776664733886719
    6. '
' → logprob: -8.026664733886719
    7. '<|end|>' → logprob: -9.276664733886719
    8. '        
' → logprob: -9.526664733886719
    9. '	' → logprob: -10.276664733886719
    10. ' ' → logprob: -10.776664733886719

Token 842: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0017862061504274607
    2. ' while' → logprob: -6.501786231994629
    3. '       ' → logprob: -8.251786231994629
    4. '	while' → logprob: -10.876786231994629
    5. '   ' → logprob: -12.501786231994629
    6. 'While' → logprob: -15.376786231994629
    7. '```' → logprob: -16.001785278320312
    8. '
' → logprob: -18.126785278320312
    9. ' While' → logprob: -18.751785278320312
    10. ' ' → logprob: -18.751785278320312

Token 843: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0011835616314783692
    2. ' queue' → logprob: -6.75118350982666
    3. 'len' → logprob: -11.25118350982666
    4. '(queue' → logprob: -15.62618350982666
    5. '	queue' → logprob: -16.751184463500977
    6. ' ' → logprob: -17.751184463500977
    7. ' len' → logprob: -18.001184463500977
    8. 'que' → logprob: -18.376184463500977
    9. '   ' → logprob: -19.001184463500977
    10. 'q' → logprob: -19.251184463500977

Token 844: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002814505249261856
    2. ':
' → logprob: -5.877814292907715
    3. 'and' → logprob: -12.502814292907715
    4. '):' → logprob: -13.502814292907715
    5. 'not' → logprob: -14.377814292907715
    6. '.' → logprob: -14.627814292907715
    7. ':
' → logprob: -14.752814292907715
    8. '>:' → logprob: -14.752814292907715
    9. ' and' → logprob: -14.877814292907715
    10. ':not' → logprob: -14.877814292907715

Token 845: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8355521559715271
    2. 'v' → logprob: -0.9605521559715271
    3. 'u' → logprob: -2.210552215576172
    4. ' v' → logprob: -3.460552215576172
    5. '           ' → logprob: -4.710552215576172
    6. '	v' → logprob: -4.710552215576172
    7. ' u' → logprob: -4.960552215576172
    8. '	   ' → logprob: -5.085552215576172
    9. '   ' → logprob: -5.710552215576172
    10. '	u' → logprob: -5.960552215576172

Token 846: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4756681025028229
    2. 'v' (adapté à ' v') → logprob: -0.9756680727005005
    3. ' u' → logprob: -6.975667953491211
    4. '   ' → logprob: -7.725667953491211
    5. ' v' → logprob: -8.475667953491211
    6. '	u' → logprob: -12.725667953491211
    7. '	v' → logprob: -13.350667953491211
    8. '       ' → logprob: -15.100667953491211
    9. 'current' → logprob: -15.600667953491211
    10. '(u' → logprob: -15.975667953491211

Token 847: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889077812433243
    2. '=' → logprob: -2.578890800476074
    3. ' ' → logprob: -14.328890800476074
    4. ' =
' → logprob: -15.953890800476074
    5. '	' → logprob: -16.328889846801758
    6. '=
' → logprob: -17.078889846801758
    7. '  ' → logprob: -17.578889846801758
    8. '   ' → logprob: -17.578889846801758
    9. '＝' → logprob: -17.953889846801758
    10. '.=' → logprob: -18.078889846801758

Token 848: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.1269282102584839
    2. ' queue' → logprob: -2.1269283294677734
    3. '	queue' → logprob: -16.251928329467773
    4. '(queue' → logprob: -16.626928329467773
    5. '.queue' → logprob: -19.126928329467773
    6. 'que' → logprob: -19.251928329467773
    7. 'deque' → logprob: -20.001928329467773
    8. ' ' → logprob: -20.501928329467773
    9. '_queue' → logprob: -20.751928329467773
    10. '   ' → logprob: -21.001928329467773

Token 849: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00019042797794099897
    2. '.pop' → logprob: -9.000190734863281
    3. '.' → logprob: -9.875190734863281
    4. '=' → logprob: -11.250190734863281
    5. 'p' → logprob: -13.500190734863281
    6. '.append' → logprob: -15.125190734863281
    7. ' p' → logprob: -15.250190734863281
    8. ' .' → logprob: -15.500190734863281
    9. '=p' → logprob: -16.00019073486328
    10. '.=' → logprob: -16.00019073486328

Token 850: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -2.5822400857578032e-05
    2. 'op' → logprob: -10.750025749206543
    3. 'p' → logprob: -12.500025749206543
    4. 'ople' → logprob: -14.625025749206543
    5. '.p' → logprob: -17.25002670288086
    6. 'opt' → logprob: -19.12502670288086
    7. 'opl' → logprob: -19.37502670288086
    8. 'opy' → logprob: -19.50002670288086
    9. 'oplevel' → logprob: -19.87502670288086
    10. 'ple' → logprob: -20.00002670288086

Token 851: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08200563490390778
    2. '               ' → logprob: -3.332005739212036
    3. ')' → logprob: -4.207005500793457
    4. ')
' → logprob: -4.707005500793457
    5. '
' → logprob: -4.832005500793457
    6. '            
' → logprob: -5.832005500793457
    7. '       ' → logprob: -6.332005500793457
    8. '<|end|>' → logprob: -6.582005500793457
    9. '            ' → logprob: -6.707005500793457
    10. ' 
' → logprob: -6.832005500793457

Token 852: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026538937818259
    2. ' for' → logprob: -6.252654075622559
    3. 'for' → logprob: -7.252654075622559
    4. '               ' → logprob: -12.127654075622559
    5. '            
' → logprob: -13.127654075622559
    6. '	       ' → logprob: -13.127654075622559
    7. '       ' → logprob: -13.252654075622559
    8. '   ' → logprob: -13.752654075622559
    9. '
' → logprob: -13.752654075622559
    10. '		' → logprob: -13.877654075622559

Token 853: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001589618914294988
    2. ' for' → logprob: -8.75015926361084
    3. '           ' → logprob: -14.75015926361084
    4. 'if' → logprob: -17.375158309936523
    5. '	for' → logprob: -18.625158309936523
    6. '               ' → logprob: -19.375158309936523
    7. '```' → logprob: -20.500158309936523
    8. '   ' → logprob: -20.750158309936523
    9. '
' → logprob: -21.125158309936523
    10. '            
' → logprob: -21.500158309936523

Token 854: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -9.984787902794778e-05
    2. 'edge' → logprob: -9.250100135803223
    3. ' e' → logprob: -12.500100135803223
    4. '(e' → logprob: -19.250099182128906
    5. ' edge' → logprob: -19.375099182128906
    6. 'eid' → logprob: -19.875099182128906
    7. '	e' → logprob: -20.000099182128906
    8. ''e' → logprob: -20.875099182128906
    9. 'ed' → logprob: -21.000099182128906
    10. '   ' → logprob: -21.375099182128906

Token 855: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011050177738070488
    2. 'in' → logprob: -4.511050224304199
    3. '	in' → logprob: -14.3860502243042
    4. ' ' → logprob: -14.5110502243042
    5. '  ' → logprob: -14.7610502243042
    6. 'e' → logprob: -14.8860502243042
    7. ' i' → logprob: -15.8860502243042
    8. 'In' → logprob: -16.386049270629883
    9. 's' → logprob: -16.386049270629883
    10. 'import' → logprob: -16.511049270629883

Token 856: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015860427811276168
    2. ' self' → logprob: -8.750158309936523
    3. '(self' → logprob: -16.250158309936523
    4. '=self' → logprob: -18.250158309936523
    5. '	self' → logprob: -18.250158309936523
    6. '[self' → logprob: -18.375158309936523
    7. 'v' → logprob: -19.500158309936523
    8. 'this' → logprob: -19.625158309936523
    9. ' ' → logprob: -20.000158309936523
    10. '   ' → logprob: -20.250158309936523

Token 857: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.007666721474379301
    2. 'graph' → logprob: -4.88266658782959
    3. '[v' → logprob: -9.88266658782959
    4. '	graph' → logprob: -12.25766658782959
    5. ' .' → logprob: -13.25766658782959
    6. '.' → logprob: -14.63266658782959
    7. 'v' → logprob: -15.00766658782959
    8. '.v' → logprob: -15.00766658782959
    9. ' graph' → logprob: -15.00766658782959
    10. '   ' → logprob: -15.25766658782959

Token 858: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.842555426876061e-06
    2. 'v' → logprob: -12.250004768371582
    3. '[' → logprob: -17.7500057220459
    4. '	v' → logprob: -21.2500057220459
    5. ' v' → logprob: -21.3750057220459
    6. '[e' → logprob: -21.3750057220459
    7. '[u' → logprob: -21.7500057220459
    8. ' [' → logprob: -21.7500057220459
    9. '(v' → logprob: -21.8750057220459
    10. '<v' → logprob: -21.8750057220459

Token 859: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10228646546602249
    2. ':
' → logprob: -2.3522865772247314
    3. '):
' → logprob: -6.602286338806152
    4. '):' → logprob: -7.477286338806152
    5. ' :' → logprob: -9.102286338806152
    6. ')' → logprob: -11.102286338806152
    7. ' :
' → logprob: -11.602286338806152
    8. ':
' → logprob: -11.977286338806152
    9. ']:' → logprob: -12.477286338806152
    10. ']:
' → logprob: -12.727286338806152

Token 860: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04754212498664856
    2. ' if' → logprob: -3.297542095184326
    3. '	           ' → logprob: -5.172542095184326
    4. 'if' → logprob: -5.797542095184326
    5. '		       ' → logprob: -8.797542572021484
    6. '           ' → logprob: -9.297542572021484
    7. '<|end|>' → logprob: -9.297542572021484
    8. '	if' → logprob: -9.547542572021484
    9. '	       ' → logprob: -9.672542572021484
    10. '			   ' → logprob: -9.797542572021484

Token 861: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7626445889472961
    2. '                   ' → logprob: -0.8876445889472961
    3. 'if' (adapté à ' if') → logprob: -2.1376445293426514
    4. '               ' → logprob: -5.7626447677612305
    5. '   ' → logprob: -8.01264476776123
    6. '           ' → logprob: -8.51264476776123
    7. '                ' → logprob: -9.13764476776123
    8. '                       ' → logprob: -9.63764476776123
    9. '	if' → logprob: -9.88764476776123
    10. '                    ' → logprob: -10.26264476776123

Token 862: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03804333135485649
    2. ' e' → logprob: -3.288043260574341
    3. '	e' → logprob: -13.663043022155762
    4. '   ' → logprob: -14.913043022155762
    5. 'level' → logprob: -15.788043022155762
    6. ' ' → logprob: -15.788043022155762
    7. '(e' → logprob: -16.288043975830078
    8. '  ' → logprob: -17.663043975830078
    9. '_e' → logprob: -18.663043975830078
    10. '    ' → logprob: -18.663043975830078

Token 863: '.cap' (ID: 45851)
  Prédit: '.cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cap' → logprob: -9.13388703338569e-06
    2. '.capacity' → logprob: -11.750009536743164
    3. '.' → logprob: -13.750009536743164
    4. ' .' → logprob: -16.750009536743164
    5. 'cap' → logprob: -17.000009536743164
    6. '>.' → logprob: -17.750009536743164
    7. '.Cap' → logprob: -18.000009536743164
    8. '.cal' → logprob: -18.750009536743164
    9. '.cat' → logprob: -19.625009536743164
    10. '_cap' → logprob: -20.000009536743164

Token 864: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.22541889548301697
    2. ' >' → logprob: -1.6004189252853394
    3. ' ' → logprob: -13.225419044494629
    4. '()>' → logprob: -13.475419044494629
    5. ')>' → logprob: -13.600419044494629
    6. '">' → logprob: -14.350419044494629
    7. '&gt' → logprob: -15.350419044494629
    8. ' ' → logprob: -15.850419044494629
    9. 'and' → logprob: -16.350418090820312
    10. ')' → logprob: -16.475418090820312

Token 865: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03864460438489914
    2. '1' → logprob: -3.288644552230835
    3. ' ' → logprob: -7.413644790649414
    4. '   ' → logprob: -17.538644790649414
    5. '  ' → logprob: -18.913644790649414
    6. '9' → logprob: -19.163644790649414
    7. '>' → logprob: -19.163644790649414
    8. ' ' → logprob: -19.163644790649414
    9. '
' → logprob: -19.288644790649414
    10. '+' → logprob: -19.413644790649414

Token 866: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005572011577896774
    2. '1' → logprob: -7.5005574226379395
    3. ' ' → logprob: -12.375556945800781
    4. '
' → logprob: -20.50055694580078
    5. '   ' → logprob: -21.75055694580078
    6. '```' → logprob: -21.87555694580078
    7. '9' → logprob: -22.50055694580078
    8. '  ' → logprob: -22.87555694580078
    9. 'e' → logprob: -22.87555694580078
    10. ' ' → logprob: -23.12555694580078

Token 867: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011519553139805794
    2. '0' → logprob: -4.636519432067871
    3. ' ' → logprob: -6.386519432067871
    4. '1' → logprob: -10.136519432067871
    5. 'E' → logprob: -11.386519432067871
    6. '=' → logprob: -11.511519432067871
    7. '>' → logprob: -11.636519432067871
    8. '6' → logprob: -12.511519432067871
    9. '-' → logprob: -14.136519432067871
    10. '```' → logprob: -14.136519432067871

Token 868: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1472419600977446e-06
    2. 'e' → logprob: -14.750000953674316
    3. '9' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.250001907348633
    5. '```' → logprob: -16.750001907348633
    6. ' -' → logprob: -17.375001907348633
    7. '
' → logprob: -17.500001907348633
    8. '{-' → logprob: -17.812501907348633
    9. '_' → logprob: -17.937501907348633
    10. '  ' → logprob: -18.000001907348633

Token 869: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.045580048114061356
    2. '-' → logprob: -4.29557991027832
    3. '12' → logprob: -4.42057991027832
    4. '15' → logprob: -4.92057991027832
    5. '10' → logprob: -5.29557991027832
    6. '8' → logprob: -5.67057991027832
    7. '14' → logprob: -5.92057991027832
    8. '13' → logprob: -8.79557991027832
    9. '7' → logprob: -9.04557991027832
    10. '18' → logprob: -9.54557991027832

Token 870: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06198572739958763
    2. 'and' → logprob: -2.811985731124878
    3. ' ' → logprob: -10.936985969543457
    4. '	and' → logprob: -16.68698501586914
    5. ' ' → logprob: -17.18698501586914
    6. ' an' → logprob: -17.56198501586914
    7. ' a' → logprob: -17.81198501586914
    8. '            ' → logprob: -18.06198501586914
    9. '    ' → logprob: -18.43698501586914
    10. ' ,' → logprob: -18.56198501586914

Token 871: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.008614808320999146
    2. ' level' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.883614540100098
    4. '   ' → logprob: -17.383615493774414
    5. '(level' → logprob: -17.633615493774414
    6. '	level' → logprob: -17.633615493774414
    7. '  ' → logprob: -17.883615493774414
    8. '           ' → logprob: -18.008615493774414
    9. '0' → logprob: -18.508615493774414
    10. '    ' → logprob: -18.508615493774414

Token 872: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -6.694766489090398e-05
    2. 'e' → logprob: -9.750066757202148
    3. '[' → logprob: -11.750066757202148
    4. '```' → logprob: -15.625066757202148
    5. '[
' → logprob: -15.750066757202148
    6. ' [' → logprob: -16.37506675720215
    7. '	e' → logprob: -16.87506675720215
    8. '(e' → logprob: -17.00006675720215
    9. '   ' → logprob: -17.12506675720215
    10. '
' → logprob: -17.37506675720215

Token 873: '.to' (ID: 3552)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.00010807292710524052
    2. '[' → logprob: -9.875107765197754
    3. 'e' → logprob: -9.875107765197754
    4. '```' → logprob: -13.000107765197754
    5. '[
' → logprob: -13.875107765197754
    6. '[to' → logprob: -14.875107765197754
    7. '[v' → logprob: -15.000107765197754
    8. ' e' → logprob: -15.500107765197754
    9. '	e' → logprob: -15.750107765197754
    10. ' [' → logprob: -15.875107765197754

Token 874: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14940008521080017
    2. '[' → logprob: -2.649399995803833
    3. '[e' → logprob: -3.899399995803833
    4. ']==' → logprob: -4.024400234222412
    5. '[v' → logprob: -4.274400234222412
    6. '<' → logprob: -4.399400234222412
    7. '==' → logprob: -6.024400234222412
    8. ']<' → logprob: -7.524400234222412
    9. '==-' → logprob: -8.024399757385254
    10. 'e' → logprob: -8.899399757385254

Token 875: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0009802898857742548
    2. '==' → logprob: -7.125980377197266
    3. ' <' → logprob: -9.125980377197266
    4. '==-' → logprob: -9.875980377197266
    5. ' ==' → logprob: -11.250980377197266
    6. '[' → logprob: -13.375980377197266
    7. '=' → logprob: -14.750980377197266
    8. '&lt' → logprob: -15.250980377197266
    9. '===' → logprob: -16.250980377197266
    10. ')' → logprob: -16.625980377197266

Token 876: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -19.875003814697266
    4. '00' → logprob: -22.750003814697266
    5. '０' → logprob: -23.000003814697266
    6. '```' → logprob: -23.875003814697266
    7. ' ' → logprob: -24.250003814697266
    8. '  ' → logprob: -24.375003814697266
    9. '٠' → logprob: -24.875003814697266
    10. '   ' → logprob: -25.000003814697266

Token 877: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '۰' → logprob: -18.125
    4. '０' → logprob: -21.625
    5. '٠' → logprob: -22.75
    6. '०' → logprob: -23.125
    7. '০' → logprob: -23.125
    8. '00' → logprob: -23.375
    9. '000' → logprob: -24.25
    10. '```' → logprob: -24.625

Token 878: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03967663645744324
    2. ' and' → logprob: -3.7896766662597656
    3. ':' → logprob: -5.039676666259766
    4. '                   ' → logprob: -5.289676666259766
    5. '               ' → logprob: -6.039676666259766
    6. '                           ' → logprob: -7.539676666259766
    7. ' :
' → logprob: -7.539676666259766
    8. '                       ' → logprob: -7.664676666259766
    9. 'and' → logprob: -8.039676666259766
    10. '           ' → logprob: -8.164676666259766

Token 879: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017478883964940906
    2. '                       ' → logprob: -6.876748085021973
    3. '               ' → logprob: -8.001748085021973
    4. ' level' → logprob: -9.001748085021973
    5. '                    
' → logprob: -9.751748085021973
    6. '                    ' → logprob: -9.876748085021973
    7. '                           ' → logprob: -10.251748085021973
    8. '                  ' → logprob: -11.251748085021973
    9. '                ' → logprob: -11.376748085021973
    10. '           ' → logprob: -11.376748085021973

Token 880: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -0.4781379699707031
    2. ' level' → logprob: -0.9781379699707031
    3. '                       ' → logprob: -5.728137969970703
    4. '                   ' → logprob: -7.228137969970703
    5. '                    ' → logprob: -10.478137969970703
    6. '	level' → logprob: -10.728137969970703
    7. '[level' → logprob: -11.853137969970703
    8. '                           ' → logprob: -12.228137969970703
    9. '(level' → logprob: -12.603137969970703
    10. '               ' → logprob: -13.478137969970703

Token 881: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.375005722045898
    3. 'e' → logprob: -13.875005722045898
    4. '   ' → logprob: -16.0000057220459
    5. '                   ' → logprob: -16.7500057220459
    6. '	e' → logprob: -17.1250057220459
    7. '       ' → logprob: -17.3750057220459
    8. '           ' → logprob: -17.3750057220459
    9. ' [' → logprob: -17.7500057220459
    10. '[
' → logprob: -18.3750057220459

Token 882: '.to' (ID: 3552)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.00011069540778407827
    2. 'e' → logprob: -9.875110626220703
    3. '[' → logprob: -10.000110626220703
    4. '[
' → logprob: -13.000110626220703
    5. '.e' → logprob: -13.000110626220703
    6. '	e' → logprob: -13.375110626220703
    7. ']' → logprob: -13.625110626220703
    8. '```' → logprob: -13.750110626220703
    9. '
' → logprob: -14.125110626220703
    10. '.' → logprob: -14.125110626220703

Token 883: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39237841963768005
    2. ' =' → logprob: -1.1423784494400024
    3. ']' → logprob: -5.267378330230713
    4. ']=' → logprob: -8.017378807067871
    5. ')' → logprob: -12.642378807067871
    6. ' ]' → logprob: -14.142378807067871
    7. ' ' → logprob: -14.142378807067871
    8. ')=' → logprob: -14.767378807067871
    9. '```' → logprob: -16.017377853393555
    10. '   ' → logprob: -17.017377853393555

Token 884: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '=
' → logprob: -18.255233764648438
    4. ']=' → logprob: -18.505233764648438
    5. ' ' → logprob: -19.255233764648438
    6. '=

' → logprob: -20.005233764648438
    7. '＝' → logprob: -20.130233764648438
    8. '=v' → logprob: -20.255233764648438
    9. ']' → logprob: -20.255233764648438
    10. '.=' → logprob: -20.380233764648438

Token 885: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.0002614550176076591
    2. ' level' → logprob: -8.250261306762695
    3. '	level' → logprob: -15.750261306762695
    4. '   ' → logprob: -18.000261306762695
    5. '(level' → logprob: -18.000261306762695
    6. '    ' → logprob: -18.250261306762695
    7. '[level' → logprob: -18.500261306762695
    8. ' ' → logprob: -19.500261306762695
    9. '0' → logprob: -20.250261306762695
    10. 'v' → logprob: -20.375261306762695

Token 886: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0006274910410866141
    2. 'v' → logprob: -7.375627517700195
    3. '[' → logprob: -15.125627517700195
    4. ' v' → logprob: -15.250627517700195
    5. '<v' → logprob: -15.750627517700195
    6. '	v' → logprob: -15.875627517700195
    7. ')v' → logprob: -17.250627517700195
    8. '[e' → logprob: -17.250627517700195
    9. '(v' → logprob: -17.500627517700195
    10. '```' → logprob: -17.625627517700195

Token 887: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01822580024600029
    2. ']+' → logprob: -4.01822566986084
    3. '+' → logprob: -9.51822566986084
    4. ' ]' → logprob: -13.89322566986084
    5. '[' → logprob: -14.39322566986084
    6. ']+=' → logprob: -15.14322566986084
    7. '+]' → logprob: -15.89322566986084
    8. ' +' → logprob: -16.143226623535156
    9. ']
' → logprob: -16.393226623535156
    10. ')' → logprob: -16.518226623535156

Token 888: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011047814972698689
    2. ' +' → logprob: -4.511047840118408
    3. '＋' → logprob: -17.76104736328125
    4. '+
' → logprob: -18.01104736328125
    5. ')+' → logprob: -19.63604736328125
    6. '()+' → logprob: -19.88604736328125
    7. ' ' → logprob: -20.26104736328125
    8. ' plus' → logprob: -20.26104736328125
    9. ' ' → logprob: -20.26104736328125
    10. ']+' → logprob: -20.38604736328125

Token 889: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.875019073486328
    4. '
' → logprob: -19.250019073486328
    5. '                   ' → logprob: -19.500019073486328
    6. '```' → logprob: -19.500019073486328
    7. '  ' → logprob: -19.625019073486328
    8. '<|end|>' → logprob: -20.875019073486328
    9. '' → logprob: -20.937519073486328
    10. '     ' → logprob: -21.000019073486328

Token 890: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.125001907348633
    4. '```' → logprob: -19.625001907348633
    5. '
' → logprob: -21.000001907348633
    6. '<|end|>' → logprob: -21.500001907348633
    7. '  ' → logprob: -21.750001907348633
    8. '' → logprob: -22.062501907348633
    9. '۱' → logprob: -22.125001907348633
    10. '`' → logprob: -22.562501907348633

Token 891: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015809243777766824
    2. '
' → logprob: -7.501580715179443
    3. '                    
' → logprob: -7.876580715179443
    4. '               ' → logprob: -8.876581192016602
    5. '                       ' → logprob: -9.001581192016602
    6. '				' → logprob: -9.001581192016602
    7. '           ' → logprob: -9.876581192016602
    8. '                    ' → logprob: -9.876581192016602
    9. '<|end|>' → logprob: -9.876581192016602
    10. ',' → logprob: -10.751581192016602

Token 892: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007025416707620025
    2. '                       ' → logprob: -7.750702381134033
    3. '               ' → logprob: -9.125702857971191
    4. '                    ' → logprob: -10.125702857971191
    5. '           ' → logprob: -10.250702857971191
    6. '                    
' → logprob: -10.625702857971191
    7. '                           ' → logprob: -11.000702857971191
    8. '				' → logprob: -11.125702857971191
    9. '   ' → logprob: -12.375702857971191
    10. '       ' → logprob: -12.625702857971191

Token 893: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0003373694489710033
    2. ' queue' → logprob: -8.000337600708008
    3. '                   ' → logprob: -13.250337600708008
    4. '	queue' → logprob: -16.500337600708008
    5. '   ' → logprob: -18.875337600708008
    6. '                       ' → logprob: -19.000337600708008
    7. '.queue' → logprob: -19.250337600708008
    8. '               ' → logprob: -19.375337600708008
    9. '           ' → logprob: -19.875337600708008
    10. '(queue' → logprob: -20.375337600708008

Token 894: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008122475701384246
    2. '.' → logprob: -7.12581205368042
    3. '.enqueue' → logprob: -12.625812530517578
    4. '.extend' → logprob: -13.500812530517578
    5. '.app' → logprob: -13.875812530517578
    6. 'append' → logprob: -14.375812530517578
    7. ' .' → logprob: -14.875812530517578
    8. '.put' → logprob: -15.125812530517578
    9. '.add' → logprob: -15.375812530517578
    10. '.Append' → logprob: -15.500812530517578

Token 895: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.125000953674316
    3. 'e' → logprob: -15.750000953674316
    4. '((' → logprob: -18.25
    5. '(
' → logprob: -18.625
    6. '	e' → logprob: -21.0
    7. ' (' → logprob: -21.5
    8. '[e' → logprob: -22.0
    9. '(

' → logprob: -22.375
    10. ',e' → logprob: -23.375

Token 896: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -0.03608163818717003
    2. '[to' → logprob: -3.786081552505493
    3. '.e' → logprob: -5.536081790924072
    4. '(to' → logprob: -5.661081790924072
    5. '[e' → logprob: -5.786081790924072
    6. 'e' → logprob: -7.036081790924072
    7. 'to' → logprob: -7.036081790924072
    8. '.' → logprob: -8.536081314086914
    9. '(e' → logprob: -8.536081314086914
    10. ')' → logprob: -9.911081314086914

Token 897: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021390743495430797
    2. ')
' → logprob: -8.500213623046875
    3. ' )' → logprob: -11.750213623046875
    4. '<|end|>' → logprob: -14.125213623046875
    5. ')return' → logprob: -14.750213623046875
    6. '       ' → logprob: -14.875213623046875
    7. '               ' → logprob: -15.500213623046875
    8. ')e' → logprob: -16.500213623046875
    9. ')

' → logprob: -16.625213623046875
    10. ')
' → logprob: -16.625213623046875

Token 898: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46255603432655334
    2. '                   ' → logprob: -1.712556004524231
    3. '```' → logprob: -2.7125561237335205
    4. '               ' → logprob: -3.2125561237335205
    5. '           ' → logprob: -3.8375561237335205
    6. '<|end|>' → logprob: -4.087555885314941
    7. '                       ' → logprob: -4.462555885314941
    8. '   ' → logprob: -4.712555885314941
    9. ')' → logprob: -5.712555885314941
    10. '                           ' → logprob: -5.837555885314941

Token 899: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018509499728679657
    2. ' return' → logprob: -4.018509387969971
    3. '       ' → logprob: -8.018509864807129
    4. '   ' → logprob: -11.143509864807129
    5. '
' → logprob: -12.143509864807129
    6. '	return' → logprob: -12.268509864807129
    7. ' ' → logprob: -13.518509864807129
    8. '           ' → logprob: -13.643509864807129
    9. '               ' → logprob: -14.268509864807129
    10. 'eturn' → logprob: -14.518509864807129

Token 900: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -9.615255839889869e-05
    2. ' level' → logprob: -9.250096321105957
    3. '(level' → logprob: -17.25009536743164
    4. 'True' → logprob: -18.50009536743164
    5. '	level' → logprob: -18.50009536743164
    6. '[level' → logprob: -19.37509536743164
    7. ' ' → logprob: -21.87509536743164
    8. 'levels' → logprob: -22.12509536743164
    9. '   ' → logprob: -22.25009536743164
    10. 'layer' → logprob: -22.62509536743164

Token 901: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -1.3306015716807451e-05
    2. 't' → logprob: -11.62501335144043
    3. '[' → logprob: -13.00001335144043
    4. '[e' → logprob: -14.00001335144043
    5. '[T' → logprob: -14.75001335144043
    6. '[self' → logprob: -15.75001335144043
    7. '[s' → logprob: -15.75001335144043
    8. '[-' → logprob: -15.87501335144043
    9. '<t' → logprob: -16.87501335144043
    10. '
' → logprob: -17.00001335144043

Token 902: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1271786093711853
    2. ']>=' → logprob: -2.12717866897583
    3. '>=' → logprob: -9.002178192138672
    4. ']!=' → logprob: -9.502178192138672
    5. ']>' → logprob: -10.377178192138672
    6. ' ]' → logprob: -11.127178192138672
    7. '[' → logprob: -12.877178192138672
    8. '']' → logprob: -14.127178192138672
    9. '"]' → logprob: -14.127178192138672
    10. ')>=' → logprob: -14.252178192138672

Token 903: ' !=' (ID: 1666)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0027979835867881775
    2. ' >=' → logprob: -6.502798080444336
    3. '!=' → logprob: -7.002798080444336
    4. '>' → logprob: -8.127798080444336
    5. '!=-' → logprob: -10.252798080444336
    6. ' !=' → logprob: -10.877798080444336
    7. '[' → logprob: -11.377798080444336
    8. '   ' → logprob: -11.627798080444336
    9. ')>=' → logprob: -12.252798080444336
    10. ']>=' → logprob: -12.752798080444336

Token 904: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1472419600977446e-06
    2. ' -' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.625001907348633
    4. '−' → logprob: -21.250001907348633
    5. ' ' → logprob: -21.625001907348633
    6. '	' → logprob: -21.750001907348633
    7. '  ' → logprob: -21.750001907348633
    8. '    ' → logprob: -22.875001907348633
    9. '‌' → logprob: -24.625001907348633
    10. '-s' → logprob: -24.625001907348633

Token 905: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.250000953674316
    3. '```' → logprob: -16.125
    4. '0' → logprob: -16.25
    5. '2' → logprob: -17.9375
    6. '   ' → logprob: -18.625
    7. '``' → logprob: -18.625
    8. '' → logprob: -20.0
    9. '۱' → logprob: -20.0
    10. '
' → logprob: -20.0

Token 906: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 907: '   ' (ID: 271)
  Prédit: '\t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\t' → logprob: -0.7524933218955994
    2. 'd' → logprob: -1.8774933815002441
    3. '   ' → logprob: -1.8774933815002441
    4. '\' → logprob: -3.127493381500244
    5. 'def' → logprob: -3.252493381500244
    6. '	' → logprob: -3.252493381500244
    7. '[' → logprob: -3.627493381500244
    8. ':' → logprob: -4.252493381500244
    9. '_' → logprob: -4.502493381500244
    10. ' \' → logprob: -4.752493381500244

Token 908: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0014059479581192136
    2. '   ' → logprob: -6.626405715942383
    3. ' def' → logprob: -9.626405715942383
    4. '	def' → logprob: -11.376405715942383
    5. '
' → logprob: -13.126405715942383
    6. '  ' → logprob: -15.626405715942383
    7. ' ' → logprob: -16.001405715942383
    8. '    
' → logprob: -16.501405715942383
    9. '20' → logprob: -16.751405715942383
    10. '```' → logprob: -16.751405715942383

Token 909: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.004284011200070381
    2. 'din' → logprob: -5.504283905029297
    3. ' dfs' → logprob: -8.879283905029297
    4. 'def' → logprob: -10.129283905029297
    5. 'send' → logprob: -10.879283905029297
    6. 'df' → logprob: -12.629283905029297
    7. 'd' → logprob: -13.004283905029297
    8. 'dig' → logprob: -13.504283905029297
    9. 'dg' → logprob: -16.379283905029297
    10. '_d' → logprob: -16.379283905029297

Token 910: '_flow' (ID: 63802)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008779662661254406
    2. '_level' → logprob: -5.008779525756836
    3. '_depth' → logprob: -7.008779525756836
    4. '(' → logprob: -8.008779525756836
    5. '   ' → logprob: -8.008779525756836
    6. '_flow' → logprob: -8.383779525756836
    7. 'level' → logprob: -9.258779525756836
    8. '(
' → logprob: -10.133779525756836
    9. '_(' → logprob: -10.508779525756836
    10. 'self' → logprob: -10.508779525756836

Token 911: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3782830137643032e-05
    2. '(' → logprob: -11.25001335144043
    3. '(
' → logprob: -15.00001335144043
    4. ' (' → logprob: -15.87501335144043
    5. '(s' → logprob: -16.12501335144043
    6. '   ' → logprob: -16.50001335144043
    7. 'self' → logprob: -17.75001335144043
    8. '       ' → logprob: -18.37501335144043
    9. '(sel' → logprob: -19.00001335144043
    10. '	self' → logprob: -19.12501335144043

Token 912: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.9292415749514475e-05
    2. '(' → logprob: -10.750039100646973
    3. ',' → logprob: -12.125039100646973
    4. ' (' → logprob: -12.500039100646973
    5. 'self' → logprob: -12.750039100646973
    6. '   ' → logprob: -13.000039100646973
    7. '       ' → logprob: -13.625039100646973
    8. '(s' → logprob: -13.625039100646973
    9. ' ' → logprob: -15.375039100646973
    10. ')' → logprob: -15.500039100646973

Token 913: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029771901667118073
    2. ' v' → logprob: -3.5297718048095703
    3. 'u' → logprob: -11.15477180480957
    4. '   ' → logprob: -12.27977180480957
    5. ' ' → logprob: -13.90477180480957
    6. ' u' → logprob: -14.15477180480957
    7. '	v' → logprob: -14.77977180480957
    8. '  ' → logprob: -15.40477180480957
    9. '    ' → logprob: -16.02977180480957
    10. '(v' → logprob: -16.90477180480957

Token 914: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.88418151892256e-05
    2. ' ,' → logprob: -10.000059127807617
    3. ':' → logprob: -11.375059127807617
    4. ',int' → logprob: -14.000059127807617
    5. '   ' → logprob: -14.250059127807617
    6. ':int' → logprob: -16.625059127807617
    7. ',s' → logprob: -16.875059127807617
    8. '       ' → logprob: -16.875059127807617
    9. ',
' → logprob: -16.875059127807617
    10. ',v' → logprob: -17.375059127807617

Token 915: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011778471525758505
    2. ' int' → logprob: -6.751177787780762
    3. '   ' → logprob: -12.126177787780762
    4. '[int' → logprob: -14.626177787780762
    5. ' ' → logprob: -14.751177787780762
    6. '(int' → logprob: -15.376177787780762
    7. '  ' → logprob: -15.376177787780762
    8. '	int' → logprob: -15.376177787780762
    9. ',' → logprob: -15.376177787780762
    10. ',int' → logprob: -15.501177787780762

Token 916: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8889261304575484e-06
    2. ' ,' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.250003814697266
    4. ',int' → logprob: -18.125003814697266
    5. ',s' → logprob: -18.250003814697266
    6. '	' → logprob: -18.500003814697266
    7. ',
' → logprob: -18.625003814697266
    8. '‌,' → logprob: -19.250003814697266
    9. ',t' → logprob: -19.250003814697266
    10. 's' → logprob: -19.500003814697266

Token 917: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0040835049003362656
    2. ' t' → logprob: -5.504083633422852
    3. '   ' → logprob: -12.754083633422852
    4. '	t' → logprob: -13.129083633422852
    5. '  ' → logprob: -16.12908363342285
    6. '    ' → logprob: -17.37908363342285
    7. '
' → logprob: -17.75408363342285
    8. 'T' → logprob: -17.75408363342285
    9. '    
' → logprob: -17.75408363342285
    10. '`t' → logprob: -17.87908363342285

Token 918: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5233598351478577
    2. ':' → logprob: -0.8983598351478577
    3. ':int' → logprob: -8.648360252380371
    4. ' ,' → logprob: -11.023360252380371
    5. '<|end|>' → logprob: -11.148360252380371
    6. ')' → logprob: -11.398360252380371
    7. 'int' → logprob: -12.023360252380371
    8. ',int' → logprob: -12.648360252380371
    9. ' :' → logprob: -13.273360252380371
    10. '<int' → logprob: -13.523360252380371

Token 919: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011048170737922192
    2. ' int' → logprob: -4.511048316955566
    3. '[int' → logprob: -15.011048316955566
    4. ':int' → logprob: -17.38604736328125
    5. '<int' → logprob: -17.76104736328125
    6. ' ' → logprob: -17.88604736328125
    7. '   ' → logprob: -18.13604736328125
    8. 't' → logprob: -18.26104736328125
    9. '	int' → logprob: -18.76104736328125
    10. '(int' → logprob: -19.01104736328125

Token 920: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.25000762939453
    4. '‌,' → logprob: -18.25000762939453
    5. ',
' → logprob: -18.62500762939453
    6. '       ' → logprob: -18.87500762939453
    7. '	' → logprob: -18.87500762939453
    8. ')' → logprob: -19.00000762939453
    9. '،' → logprob: -19.62500762939453
    10. '    ' → logprob: -19.62500762939453

Token 921: ' f' (ID: 285)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.04885895177721977
    2. 'f' → logprob: -3.048858880996704
    3. 'flow' → logprob: -8.673858642578125
    4. 'flo' → logprob: -9.798858642578125
    5. ' up' → logprob: -10.923858642578125
    6. 'upd' → logprob: -12.173858642578125
    7. '    
' → logprob: -12.298858642578125
    8. 'F' → logprob: -12.673858642578125
    9. '```' → logprob: -13.048858642578125
    10. '
' → logprob: -13.173858642578125

Token 922: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038118377327919006
    2. 'loat' → logprob: -3.288118362426758
    3. 'lo' → logprob: -9.538118362426758
    4. 'low' → logprob: -13.413118362426758
    5. 'LOAT' → logprob: -13.788118362426758
    6. ',' → logprob: -14.038118362426758
    7. 'l' → logprob: -15.038118362426758
    8. ' :' → logprob: -15.163118362426758
    9. 'loor' → logprob: -15.538118362426758
    10. 'o' → logprob: -16.038118362426758

Token 923: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.06286419928073883
    2. ' float' → logprob: -2.812864303588867
    3. 'loat' → logprob: -7.062864303588867
    4. 'int' → logprob: -11.437864303588867
    5. 'lo' → logprob: -12.187864303588867
    6. '  ' → logprob: -12.187864303588867
    7. '   ' → logprob: -12.187864303588867
    8. ' ' → logprob: -12.437864303588867
    9. '	float' → logprob: -12.437864303588867
    10. 'flo' → logprob: -12.937864303588867

Token 924: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3697850704193115
    2. ',' → logprob: -1.2447850704193115
    3. '):' → logprob: -3.8697850704193115
    4. '):
' → logprob: -8.74478530883789
    5. '   ' → logprob: -10.24478530883789
    6. ')->' → logprob: -10.49478530883789
    7. ' )' → logprob: -11.61978530883789
    8. ' ,' → logprob: -12.49478530883789
    9. '):
' → logprob: -12.61978530883789
    10. '       ' → logprob: -12.74478530883789

Token 925: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.6943886876106262
    2. 'level' → logprob: -0.6943886876106262
    3. ' iter' → logprob: -7.3193888664245605
    4. ' level' → logprob: -8.569388389587402
    5. 'iterator' → logprob: -8.944388389587402
    6. 'ptr' → logprob: -9.194388389587402
    7. ' ' → logprob: -9.944388389587402
    8. 'itr' → logprob: -10.194388389587402
    9. '   ' → logprob: -10.694388389587402
    10. '  ' → logprob: -11.819388389587402

Token 926: '_:' (ID: 52270)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03834027424454689
    2. '_:' → logprob: -3.4133403301239014
    3. ',' → logprob: -5.413340091705322
    4. '_,' → logprob: -9.41334056854248
    5. ' :' → logprob: -10.53834056854248
    6. ')' → logprob: -11.03834056854248
    7. 's' → logprob: -11.16334056854248
    8. '   ' → logprob: -11.16334056854248
    9. '__:' → logprob: -11.28834056854248
    10. '_' → logprob: -12.03834056854248

Token 927: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0004952482995577157
    2. 'int' → logprob: -8.250494956970215
    3. ' List' → logprob: -8.500494956970215
    4. '[List' → logprob: -10.625494956970215
    5. '[int' → logprob: -12.625494956970215
    6. 'list' → logprob: -13.000494956970215
    7. 'Dict' → logprob: -15.250494956970215
    8. ':' → logprob: -16.25049591064453
    9. ' int' → logprob: -16.25049591064453
    10. ')' → logprob: -16.62549591064453

Token 928: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.635164754698053e-05
    2. 'int' → logprob: -9.625066757202148
    3. ']int' → logprob: -16.37506675720215
    4. ',int' → logprob: -17.62506675720215
    5. ',' → logprob: -17.62506675720215
    6. '<int' → logprob: -18.25006675720215
    7. '=int' → logprob: -18.50006675720215
    8. ':int' → logprob: -18.50006675720215
    9. '	int' → logprob: -18.62506675720215
    10. '   ' → logprob: -18.87506675720215

Token 929: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004995359340682626
    2. ',' → logprob: -7.875499725341797
    3. '])' → logprob: -9.750499725341797
    4. '):
' → logprob: -10.625499725341797
    5. '):' → logprob: -10.875499725341797
    6. ' )' → logprob: -11.750499725341797
    7. '),' → logprob: -12.625499725341797
    8. '）' → logprob: -13.000499725341797
    9. '   ' → logprob: -13.500499725341797
    10. '`)' → logprob: -14.250499725341797

Token 930: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.00671809446066618
    2. ' level' → logprob: -5.006718158721924
    3. '   ' → logprob: -13.506717681884766
    4. ')' → logprob: -14.881717681884766
    5. '	level' → logprob: -15.006717681884766
    6. ' ' → logprob: -15.631717681884766
    7. '  ' → logprob: -15.756717681884766
    8. '    ' → logprob: -16.506717681884766
    9. 'limit' → logprob: -17.131717681884766
    10. 'flow' → logprob: -17.256717681884766

Token 931: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16352324187755585
    2. '):' → logprob: -2.2885231971740723
    3. ':' → logprob: -3.0385231971740723
    4. '[int' → logprob: -7.288523197174072
    5. ',' → logprob: -7.913523197174072
    6. '):
' → logprob: -8.53852367401123
    7. '<|end|>' → logprob: -9.03852367401123
    8. ' )' → logprob: -10.66352367401123
    9. '[])' → logprob: -10.78852367401123
    10. '[]):' → logprob: -11.28852367401123

Token 932: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.01819196529686451
    2. 'int' → logprob: -4.018191814422607
    3. '[int' → logprob: -10.268192291259766
    4. ' List' → logprob: -12.018192291259766
    5. '[List' → logprob: -14.268192291259766
    6. ')' → logprob: -14.643192291259766
    7. 'list' → logprob: -16.393192291259766
    8. '   ' → logprob: -16.893192291259766
    9. ' int' → logprob: -17.018192291259766
    10. '	List' → logprob: -19.393192291259766

Token 933: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.5570885807392187e-05
    2. 'int' → logprob: -11.125015258789062
    3. ')' → logprob: -14.375015258789062
    4. '<int' → logprob: -16.875015258789062
    5. ']int' → logprob: -17.000015258789062
    6. '[' → logprob: -17.500015258789062
    7. '[in' → logprob: -18.000015258789062
    8. '[Int' → logprob: -18.375015258789062
    9. '   ' → logprob: -18.750015258789062
    10. ' int' → logprob: -19.000015258789062

Token 934: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023166537284851074
    2. '):' → logprob: -6.252316474914551
    3. '):
' → logprob: -7.877316474914551
    4. ' )' → logprob: -12.75231647491455
    5. '):
' → logprob: -13.37731647491455
    6. '   ' → logprob: -13.75231647491455
    7. '])' → logprob: -14.25231647491455
    8. '）' → logprob: -14.37731647491455
    9. ')->' → logprob: -14.37731647491455
    10. '):

' → logprob: -14.62731647491455

Token 935: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12100616097450256
    2. ')' → logprob: -2.6210062503814697
    3. ' ->' → logprob: -4.246006011962891
    4. '->' → logprob: -4.621006011962891
    5. ')->' → logprob: -5.496006011962891
    6. '   ' → logprob: -5.621006011962891
    7. '       ' → logprob: -5.621006011962891
    8. '):' → logprob: -5.871006011962891
    9. ',' → logprob: -6.621006011962891
    10. '<|end|>' → logprob: -7.371006011962891

Token 936: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.16042234003543854
    2. 'Optional' → logprob: -1.9104223251342773
    3. ' float' → logprob: -8.785422325134277
    4. ' Optional' → logprob: -10.410422325134277
    5. '[' → logprob: -11.785422325134277
    6. 'optional' → logprob: -12.785422325134277
    7. 'flo' → logprob: -13.160422325134277
    8. 'Float' → logprob: -14.410422325134277
    9. '```' → logprob: -14.785422325134277
    10. '	float' → logprob: -14.785422325134277

Token 937: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.059488698840141296
    2. '       ' → logprob: -3.0594887733459473
    3. ':
' → logprob: -5.059488773345947
    4. '   ' → logprob: -6.059488773345947
    5. '<|end|>' → logprob: -6.934488773345947
    6. ',' → logprob: -7.934488773345947
    7. '{' → logprob: -8.434488296508789
    8. '):' → logprob: -9.434488296508789
    9. '	' → logprob: -9.559488296508789
    10. '):
' → logprob: -9.684488296508789

Token 938: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25204724073410034
    2. ' if' → logprob: -2.252047300338745
    3. '   ' → logprob: -2.502047300338745
    4. 'if' → logprob: -3.627047300338745
    5. '	if' → logprob: -5.627047061920166
    6. '    ' → logprob: -6.002047061920166
    7. ' i' → logprob: -6.752047061920166
    8. 'i' → logprob: -6.877047061920166
    9. '        ' → logprob: -8.627047538757324
    10. '	' → logprob: -8.877047538757324

Token 939: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002114097122102976
    2. ' if' → logprob: -6.252114295959473
    3. '       ' → logprob: -9.002114295959473
    4. '   ' → logprob: -10.252114295959473
    5. '	if' → logprob: -10.877114295959473
    6. 'while' → logprob: -12.002114295959473
    7. '    ' → logprob: -14.127114295959473
    8. 'indent' → logprob: -14.877114295959473
    9. '           ' → logprob: -15.502114295959473
    10. '  ' → logprob: -15.752114295959473

Token 940: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.872261317563243e-05
    2. ' v' → logprob: -9.750059127807617
    3. '	v' → logprob: -15.000059127807617
    4. '   ' → logprob: -19.000059127807617
    5. ' ' → logprob: -19.000059127807617
    6. '_v' → logprob: -19.125059127807617
    7. '$v' → logprob: -20.625059127807617
    8. '  ' → logprob: -21.000059127807617
    9. 'f' → logprob: -21.250059127807617
    10. '(v' → logprob: -21.500059127807617

Token 941: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.386895090341568
    2. '==' → logprob: -1.1368950605392456
    3. '=' → logprob: -10.761895179748535
    4. ' =' → logprob: -14.136895179748535
    5. ' ' → logprob: -14.136895179748535
    6. '==
' → logprob: -14.386895179748535
    7. '	' → logprob: -15.636895179748535
    8. ']==' → logprob: -15.761895179748535
    9. ')' → logprob: -16.01189422607422
    10. ')==' → logprob: -16.13689422607422

Token 942: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0019287518225610256
    2. ' t' → logprob: -6.251928806304932
    3. '	t' → logprob: -16.001928329467773
    4. '   ' → logprob: -17.501928329467773
    5. '`t' → logprob: -17.626928329467773
    6. '       ' → logprob: -19.501928329467773
    7. ' ' → logprob: -20.126928329467773
    8. '_t' → logprob: -20.251928329467773
    9. '  ' → logprob: -20.376928329467773
    10. ')t' → logprob: -21.001928329467773

Token 943: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5350567698478699
    2. ':
' → logprob: -1.2850568294525146
    3. ' or' → logprob: -2.5350568294525146
    4. ':return' → logprob: -2.9100568294525146
    5. '       ' → logprob: -6.2850565910339355
    6. '           ' → logprob: -6.7850565910339355
    7. '   ' → logprob: -7.7850565910339355
    8. 'return' → logprob: -8.285057067871094
    9. ' return' → logprob: -9.785057067871094
    10. '          ' → logprob: -10.160057067871094

Token 944: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8950798511505127
    2. ':
' → logprob: -1.6450798511505127
    3. ':' → logprob: -1.8950798511505127
    4. '       ' → logprob: -2.1450798511505127
    5. ':return' → logprob: -2.3950798511505127
    6. ' return' → logprob: -4.020079612731934
    7. 'return' → logprob: -4.770079612731934
    8. '   ' → logprob: -5.770079612731934
    9. '
' → logprob: -6.270079612731934
    10. '		' → logprob: -6.270079612731934

Token 945: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08763227611780167
    2. ' return' → logprob: -3.337632179260254
    3. 'f' → logprob: -3.587632179260254
    4. ' f' → logprob: -3.962632179260254
    5. '       ' → logprob: -6.462632179260254
    6. '           ' → logprob: -9.837632179260254
    7. '{return' → logprob: -10.212632179260254
    8. '   ' → logprob: -10.962632179260254
    9. '	return' → logprob: -10.962632179260254
    10. 'r' → logprob: -12.712632179260254

Token 946: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00020354038861114532
    2. ' f' → logprob: -8.500203132629395
    3. '	f' → logprob: -18.50020408630371
    4. '
' → logprob: -22.00020408630371
    5. '\f' → logprob: -22.75020408630371
    6. '_f' → logprob: -24.12520408630371
    7. '   ' → logprob: -24.25020408630371
    8. 'float' → logprob: -25.37520408630371
    9. '<f' → logprob: -25.50020408630371
    10. ' ' → logprob: -25.87520408630371

Token 947: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39451631903648376
    2. '       ' → logprob: -1.1445163488388062
    3. ' 
' → logprob: -6.019516468048096
    4. '\n' → logprob: -6.519516468048096
    5. '   ' → logprob: -7.019516468048096
    6. '        
' → logprob: -7.269516468048096
    7. '<|end|>' → logprob: -7.519516468048096
    8. '	' → logprob: -8.269515991210938
    9. '  
' → logprob: -8.519515991210938
    10. '
' → logprob: -8.519515991210938

Token 948: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005086106713861227
    2. '
' → logprob: -6.2550859451293945
    3. '\n' → logprob: -6.3800859451293945
    4. '	' → logprob: -6.7550859451293945
    5. '   ' → logprob: -9.505085945129395
    6. '        
' → logprob: -9.630085945129395
    7. '\' → logprob: -10.380085945129395
    8. 'newline' → logprob: -10.630085945129395
    9. ' 
' → logprob: -10.755085945129395
    10. '    
' → logprob: -11.005085945129395

Token 949: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20188571512699127
    2. '   ' → logprob: -2.07688570022583
    3. 'while' (adapté à ' while') → logprob: -3.20188570022583
    4. ' while' → logprob: -5.07688570022583
    5. 'for' → logprob: -5.20188570022583
    6. '	' → logprob: -6.57688570022583
    7. ' for' → logprob: -6.57688570022583
    8. '	while' → logprob: -7.32688570022583
    9. '           ' → logprob: -7.95188570022583
    10. ' ' → logprob: -8.076886177062988

Token 950: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0011703446507453918
    2. ' iter' → logprob: -6.7511701583862305
    3. '	iter' → logprob: -16.751171112060547
    4. '(iter' → logprob: -18.376171112060547
    5. '_iter' → logprob: -21.001171112060547
    6. ' ' → logprob: -21.126171112060547
    7. '   ' → logprob: -23.001171112060547
    8. '
' → logprob: -24.751171112060547
    9. 'iters' → logprob: -24.876171112060547
    10. 'iterator' → logprob: -25.001171112060547

Token 951: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.06287260353565216
    2. '_' → logprob: -2.8128726482391357
    3. '[v' → logprob: -7.437872409820557
    4. '_
' → logprob: -9.812872886657715
    5. '__[' → logprob: -9.812872886657715
    6. '[' → logprob: -10.312872886657715
    7. '_v' → logprob: -10.687872886657715
    8. 'v' → logprob: -10.687872886657715
    9. '[_' → logprob: -10.812872886657715
    10. '_:' → logprob: -10.812872886657715

Token 952: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0036098056007176638
    2. '[v' → logprob: -5.628609657287598
    3. '	v' → logprob: -12.878609657287598
    4. ' v' → logprob: -12.878609657287598
    5. '[' → logprob: -13.503609657287598
    6. '<v' → logprob: -13.628609657287598
    7. '_v' → logprob: -13.753609657287598
    8. '(v' → logprob: -15.503609657287598
    9. '$v' → logprob: -15.503609657287598
    10. ')v' → logprob: -16.003610610961914

Token 953: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.29168200492858887
    2. ' <' → logprob: -1.7916820049285889
    3. ']' → logprob: -2.791682004928589
    4. '[' → logprob: -4.041682243347168
    5. '<len' → logprob: -5.291682243347168
    6. ']<' → logprob: -6.291682243347168
    7. ' ' → logprob: -8.791682243347168
    8. '<v' → logprob: -9.291682243347168
    9. '<n' → logprob: -9.416682243347168
    10. '<int' → logprob: -10.416682243347168

Token 954: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16051320731639862
    2. ' <' → logprob: -1.910513162612915
    3. '<len' → logprob: -8.285512924194336
    4. '[' → logprob: -10.660512924194336
    5. '<n' → logprob: -12.535512924194336
    6. '<int' → logprob: -13.285512924194336
    7. ' ' → logprob: -13.285512924194336
    8. '<size' → logprob: -13.410512924194336
    9. '<th' → logprob: -14.035512924194336
    10. '<num' → logprob: -14.535512924194336

Token 955: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.4140441635390744e-05
    2. ' len' → logprob: -11.375014305114746
    3. '(len' → logprob: -13.000014305114746
    4. '	len' → logprob: -16.12501335144043
    5. '=len' → logprob: -16.12501335144043
    6. '[len' → logprob: -16.75001335144043
    7. '<len' → logprob: -17.25001335144043
    8. ',len' → logprob: -18.50001335144043
    9. 'length' → logprob: -19.62501335144043
    10. '   ' → logprob: -20.87501335144043

Token 956: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005535095697268844
    2. 'self' → logprob: -7.500553607940674
    3. '[self' → logprob: -15.500553131103516
    4. '(' → logprob: -15.625553131103516
    5. '=self' → logprob: -17.125553131103516
    6. 's' → logprob: -18.250553131103516
    7. '	self' → logprob: -18.500553131103516
    8. '```' → logprob: -18.750553131103516
    9. ' self' → logprob: -19.250553131103516
    10. ':self' → logprob: -19.250553131103516

Token 957: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -4.0484450437361374e-05
    2. '.' → logprob: -10.500040054321289
    3. ' .' → logprob: -11.375040054321289
    4. 'graph' → logprob: -14.000040054321289
    5. '.grid' → logprob: -15.750040054321289
    6. '.graphics' → logprob: -16.25004005432129
    7. '	graph' → logprob: -16.62504005432129
    8. '(graph' → logprob: -17.00004005432129
    9. '​.' → logprob: -17.12504005432129
    10. '.g' → logprob: -17.25004005432129

Token 958: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.259079363080673e-05
    2. '[' → logprob: -11.375012397766113
    3. 'v' → logprob: -14.000012397766113
    4. ')' → logprob: -16.00001335144043
    5. '(v' → logprob: -17.25001335144043
    6. '[
' → logprob: -17.37501335144043
    7. ')v' → logprob: -17.75001335144043
    8. '```' → logprob: -17.75001335144043
    9. '[self' → logprob: -18.37501335144043
    10. '[e' → logprob: -18.62501335144043

Token 959: ']):
' (ID: 51989)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.7658789157867432
    2. '):
' → logprob: -1.1408789157867432
    3. '):' → logprob: -1.7658789157867432
    4. ')' → logprob: -3.390878915786743
    5. ']):
' → logprob: -5.640878677368164
    6. ']):' → logprob: -5.890878677368164
    7. '[' → logprob: -6.265878677368164
    8. ')]' → logprob: -7.015878677368164
    9. '])' → logprob: -7.890878677368164
    10. 'v' → logprob: -7.890878677368164

Token 960: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014619415625929832
    2. '       ' → logprob: -5.26461935043335
    3. '               ' → logprob: -6.38961935043335
    4. '   ' → logprob: -6.63961935043335
    5. ' :' → logprob: -6.76461935043335
    6. ':
' → logprob: -6.76461935043335
    7. ' :
' → logprob: -7.01461935043335
    8. '		' → logprob: -7.88961935043335
    9. '	       ' → logprob: -7.88961935043335
    10. ':' → logprob: -8.014619827270508

Token 961: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -5.0259150157216936e-05
    2. ' e' → logprob: -10.00005054473877
    3. '           ' → logprob: -12.25005054473877
    4. '	e' → logprob: -17.375049591064453
    5. '               ' → logprob: -18.125049591064453
    6. '   ' → logprob: -18.625049591064453
    7. 'edge' → logprob: -21.375049591064453
    8. ' ' → logprob: -21.500049591064453
    9. 'е' → logprob: -22.500049591064453
    10. '_e' → logprob: -22.625049591064453

Token 962: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868732452392578
    2. ' =' → logprob: -1.1368732452392578
    3. 's' → logprob: -14.136873245239258
    4. ' ' → logprob: -14.636873245239258
    5. '=e' → logprob: -15.386873245239258
    6. 'space' → logprob: -16.011873245239258
    7. '_=' → logprob: -16.011873245239258
    8. '	' → logprob: -16.386873245239258
    9. '  ' → logprob: -16.761873245239258
    10. '.' → logprob: -16.761873245239258

Token 963: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858918860554695
    2. ' self' → logprob: -3.0485892295837402
    3. '	self' → logprob: -13.798588752746582
    4. '           ' → logprob: -15.298588752746582
    5. '(self' → logprob: -16.0485897064209
    6. '[self' → logprob: -16.2985897064209
    7. ' ' → logprob: -16.4235897064209
    8. '=self' → logprob: -16.9235897064209
    9. '       ' → logprob: -17.4235897064209
    10. '               ' → logprob: -18.0485897064209

Token 964: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.00031508569372817874
    2. 'graph' → logprob: -8.250314712524414
    3. '.' → logprob: -10.250314712524414
    4. '	graph' → logprob: -11.500314712524414
    5. ' .' → logprob: -12.750314712524414
    6. ' graph' → logprob: -14.250314712524414
    7. '(graph' → logprob: -14.250314712524414
    8. '.g' → logprob: -14.375314712524414
    9. 'self' → logprob: -14.500314712524414
    10. '_graph' → logprob: -14.875314712524414

Token 965: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.0280383548888494e-06
    2. 'v' → logprob: -14.125000953674316
    3. '[' → logprob: -15.375000953674316
    4. '```' → logprob: -18.625001907348633
    5. '[u' → logprob: -20.000001907348633
    6. '[
' → logprob: -20.250001907348633
    7. '           ' → logprob: -20.375001907348633
    8. '	v' → logprob: -20.375001907348633
    9. '<v' → logprob: -20.375001907348633
    10. '[val' → logprob: -20.375001907348633

Token 966: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.06207367032766342
    2. '][' → logprob: -2.8120737075805664
    3. '[' → logprob: -9.562073707580566
    4. 'v' → logprob: -10.437073707580566
    5. ']' → logprob: -12.687073707580566
    6. ' [' → logprob: -14.312073707580566
    7. '[
' → logprob: -14.812073707580566
    8. ')[' → logprob: -14.812073707580566
    9. '   ' → logprob: -15.062073707580566
    10. '	v' → logprob: -15.187073707580566

Token 967: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -2.935296834039036e-06
    2. ' iter' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.375003814697266
    4. '(iter' → logprob: -17.625003814697266
    5. '	iter' → logprob: -17.750003814697266
    6. '
' → logprob: -18.250003814697266
    7. '           ' → logprob: -19.000003814697266
    8. '       ' → logprob: -20.500003814697266
    9. ' ' → logprob: -20.500003814697266
    10. 'int' → logprob: -20.875003814697266

Token 968: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.004457058850675821
    2. '_' → logprob: -5.754456996917725
    3. '[v' → logprob: -6.754456996917725
    4. '_]' → logprob: -9.629457473754883
    5. '_
' → logprob: -10.504457473754883
    6. '_v' → logprob: -11.629457473754883
    7. 'v' → logprob: -12.504457473754883
    8. '_
' → logprob: -12.754457473754883
    9. '__[' → logprob: -13.629457473754883
    10. '_

' → logprob: -14.129457473754883

Token 969: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.088346359931165e-07
    2. '[v' → logprob: -14.250000953674316
    3. ' v' → logprob: -15.875000953674316
    4. '	v' → logprob: -17.0
    5. '(v' → logprob: -18.25
    6. ')v' → logprob: -19.375
    7. '_v' → logprob: -19.375
    8. '[' → logprob: -19.75
    9. '.v' → logprob: -20.25
    10. '   ' → logprob: -21.125

Token 970: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3133169710636139
    2. ']
' → logprob: -1.3133169412612915
    3. ']
' → logprob: -10.56331729888916
    4. '];' → logprob: -11.68831729888916
    5. '           ' → logprob: -11.81331729888916
    6. ' ]' → logprob: -12.43831729888916
    7. ']

' → logprob: -12.43831729888916
    8. ' ]
' → logprob: -12.68831729888916
    9. '               ' → logprob: -14.56331729888916
    10. '].' → logprob: -14.56331729888916

Token 971: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14592698216438293
    2. ' 
' → logprob: -2.7709269523620605
    3. '            
' → logprob: -3.0209269523620605
    4. '               ' → logprob: -5.3959269523620605
    5. '            ' → logprob: -5.3959269523620605
    6. '<|end|>' → logprob: -6.5209269523620605
    7. '    
' → logprob: -6.6459269523620605
    8. '		' → logprob: -6.7709269523620605
    9. '  
' → logprob: -6.7709269523620605
    10. ' ' → logprob: -6.7709269523620605

Token 972: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4509376585483551
    2. '           ' → logprob: -1.0759376287460327
    3. 'if' (adapté à ' if') → logprob: -4.075937747955322
    4. '               ' → logprob: -5.950937747955322
    5. '            ' → logprob: -6.450937747955322
    6. '	if' → logprob: -8.450937271118164
    7. '   ' → logprob: -8.700937271118164
    8. '		' → logprob: -9.575937271118164
    9. '       ' → logprob: -9.825937271118164
    10. ' ' → logprob: -9.950937271118164

Token 973: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004078758880496025
    2. ' e' → logprob: -5.5040788650512695
    3. '	e' → logprob: -15.62907886505127
    4. '   ' → logprob: -16.504077911376953
    5. '(e' → logprob: -17.504077911376953
    6. ' ' → logprob: -18.879077911376953
    7. '  ' → logprob: -19.504077911376953
    8. '           ' → logprob: -19.629077911376953
    9. ' ' → logprob: -19.879077911376953
    10. '     ' → logprob: -20.254077911376953

Token 974: '.cap' (ID: 45851)
  Prédit: '.cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cap' → logprob: -1.3856492842023727e-06
    2. '.capacity' → logprob: -14.125000953674316
    3. '.' → logprob: -14.500000953674316
    4. ' .' → logprob: -16.625001907348633
    5. '.Cap' → logprob: -19.250001907348633
    6. '.cat' → logprob: -20.250001907348633
    7. '.can' → logprob: -20.375001907348633
    8. 'cap' → logprob: -20.875001907348633
    9. '.comp' → logprob: -21.250001907348633
    10. '(cap' → logprob: -21.375001907348633

Token 975: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04300205409526825
    2. ' >' → logprob: -3.168002128601074
    3. '>=' → logprob: -13.293002128601074
    4. ' ' → logprob: -14.543002128601074
    5. '>
' → logprob: -15.918002128601074
    6. ')>' → logprob: -16.043001174926758
    7. ' >=' → logprob: -16.418001174926758
    8. '```' → logprob: -16.793001174926758
    9. ' >
' → logprob: -16.918001174926758
    10. ' ' → logprob: -16.918001174926758

Token 976: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -19.12506675720215
    4. '0' → logprob: -19.25006675720215
    5. '=' → logprob: -19.43756675720215
    6. '  ' → logprob: -19.68756675720215
    7. ' ' → logprob: -19.81256675720215
    8. '```' → logprob: -20.06256675720215
    9. '۱' → logprob: -20.18756675720215
    10. 'e' → logprob: -20.31256675720215

Token 977: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026181264547631145
    2. ' ' → logprob: -8.250262260437012
    3. '0' → logprob: -14.625262260437012
    4. '   ' → logprob: -19.875261306762695
    5. ' ' → logprob: -20.375261306762695
    6. '  ' → logprob: -20.625261306762695
    7. '```' → logprob: -20.750261306762695
    8. '۱' → logprob: -20.750261306762695
    9. '１' → logprob: -21.437761306762695
    10. '
' → logprob: -21.437761306762695

Token 978: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2014842927455902
    2. '-' → logprob: -1.7014843225479126
    3. '-e' → logprob: -9.826484680175781
    4. ' -' → logprob: -11.826484680175781
    5. '1' → logprob: -12.451484680175781
    6. '```' → logprob: -12.951484680175781
    7. '+' → logprob: -13.826484680175781
    8. '.e' → logprob: -14.701484680175781
    9. '
' → logprob: -15.326484680175781
    10. '[' → logprob: -15.701484680175781

Token 979: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.704273118884885e-07
    2. 'e' → logprob: -14.500000953674316
    3. ' -' → logprob: -16.625
    4. '```' → logprob: -18.625
    5. '-
' → logprob: -20.25
    6. '   ' → logprob: -21.125
    7. '^-' → logprob: -21.125
    8. '-e' → logprob: -21.5
    9. '-=' → logprob: -21.625
    10. '[-' → logprob: -21.875

Token 980: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0005722135538235307
    2. '14' → logprob: -7.750572204589844
    3. '12' → logprob: -9.125572204589844
    4. '10' → logprob: -11.125572204589844
    5. '13' → logprob: -11.375572204589844
    6. '9' → logprob: -13.313072204589844
    7. '-' → logprob: -13.500572204589844
    8. '```' → logprob: -13.875572204589844
    9. '11' → logprob: -14.938072204589844
    10. '8' → logprob: -15.375572204589844

Token 981: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03804321587085724
    2. 'and' → logprob: -3.288043260574341
    3. ' ' → logprob: -13.288043022155762
    4. '	and' → logprob: -16.913043975830078
    5. '            ' → logprob: -18.413043975830078
    6. ' ' → logprob: -18.538043975830078
    7. '    ' → logprob: -18.913043975830078
    8. ' an' → logprob: -19.038043975830078
    9. '<|end|>' → logprob: -19.413043975830078
    10. ',' → logprob: -19.538043975830078

Token 982: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.0019286326132714748
    2. ' level' → logprob: -6.251928806304932
    3. '(level' → logprob: -17.001928329467773
    4. '	level' → logprob: -17.376928329467773
    5. '[level' → logprob: -20.376928329467773
    6. ' ' → logprob: -20.376928329467773
    7. '   ' → logprob: -21.001928329467773
    8. '-level' → logprob: -21.126928329467773
    9. 'e' → logprob: -21.501928329467773
    10. 'leve' → logprob: -21.626928329467773

Token 983: '[v' (ID: 36561)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.524527907371521
    2. '[v' → logprob: -0.899527907371521
    3. 'e' → logprob: -6.8995280265808105
    4. 'v' → logprob: -7.8995280265808105
    5. '[' → logprob: -11.024527549743652
    6. '	e' → logprob: -13.774527549743652
    7. '(e' → logprob: -13.899527549743652
    8. ' e' → logprob: -14.399527549743652
    9. '[u' → logprob: -14.649527549743652
    10. '[i' → logprob: -14.837027549743652

Token 984: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01974099688231945
    2. '[v' → logprob: -4.644741058349609
    3. ']+' → logprob: -4.769741058349609
    4. ']<' → logprob: -7.144741058349609
    5. '[e' → logprob: -7.769741058349609
    6. '[' → logprob: -9.14474105834961
    7. '+' → logprob: -10.01974105834961
    8. ' ]' → logprob: -10.14474105834961
    9. ']==' → logprob: -11.14474105834961
    10. '<v' → logprob: -11.89474105834961

Token 985: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10654561221599579
    2. '+' → logprob: -2.3565456867218018
    3. ' <' → logprob: -5.481545448303223
    4. '[' → logprob: -6.606545448303223
    5. ' +' → logprob: -7.731545448303223
    6. '<n' → logprob: -8.981545448303223
    7. '<v' → logprob: -9.606545448303223
    8. '<len' → logprob: -9.731545448303223
    9. '<u' → logprob: -10.856545448303223
    10. '<s' → logprob: -10.981545448303223

Token 986: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -3.5597102396423e-05
    2. ' level' → logprob: -10.250035285949707
    3. '[level' → logprob: -16.125036239624023
    4. '	level' → logprob: -17.000036239624023
    5. '=' → logprob: -17.625036239624023
    6. '(level' → logprob: -17.625036239624023
    7. '-level' → logprob: -18.250036239624023
    8. 'layer' → logprob: -18.500036239624023
    9. 'length' → logprob: -18.875036239624023
    10. '.level' → logprob: -20.000036239624023

Token 987: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.023251768201589584
    2. 'e' → logprob: -3.77325177192688
    3. '[' → logprob: -13.0232515335083
    4. '	e' → logprob: -13.1482515335083
    5. ' e' → logprob: -14.2732515335083
    6. '(e' → logprob: -14.6482515335083
    7. '```' → logprob: -14.8982515335083
    8. '   ' → logprob: -15.1482515335083
    9. '[
' → logprob: -16.023252487182617
    10. '%e' → logprob: -16.523252487182617

Token 988: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -3.726595241460018e-05
    2. '.' → logprob: -10.75003719329834
    3. 'to' → logprob: -12.00003719329834
    4. '.e' → logprob: -12.25003719329834
    5. '[e' → logprob: -13.37503719329834
    6. ' .' → logprob: -13.50003719329834
    7. '[to' → logprob: -14.00003719329834
    8. '.To' → logprob: -15.00003719329834
    9. '.t' → logprob: -15.37503719329834
    10. '   ' → logprob: -15.50003719329834

Token 989: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1246994361281395
    2. '[' → logprob: -2.874699354171753
    3. ']' → logprob: -4.124699592590332
    4. ':' → logprob: -4.249699592590332
    5. '[v' → logprob: -4.374699592590332
    6. ']:
' → logprob: -4.624699592590332
    7. ' ' → logprob: -6.499699592590332
    8. '[e' → logprob: -6.624699592590332
    9. 'e' → logprob: -6.874699592590332
    10. ']+' → logprob: -7.249699592590332

Token 990: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004829411394894123
    2. '           ' → logprob: -6.504829406738281
    3. ' ' → logprob: -7.504829406738281
    4. '                           ' → logprob: -8.004829406738281
    5. '                               ' → logprob: -8.129829406738281
    6. '                   ' → logprob: -8.379829406738281
    7. '                ' → logprob: -8.379829406738281
    8. ':' → logprob: -8.379829406738281
    9. '                       ' → logprob: -8.504829406738281
    10. ' and' → logprob: -8.504829406738281

Token 991: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.025375816971063614
    2. 'flow' → logprob: -5.025375843048096
    3. ' d' → logprob: -5.150375843048096
    4. 'f' → logprob: -5.900375843048096
    5. 'df' → logprob: -6.025375843048096
    6. '                   ' → logprob: -6.025375843048096
    7. 'res' → logprob: -6.525375843048096
    8. '               ' → logprob: -7.525375843048096
    9. 'next' → logprob: -7.525375843048096
    10. 'delta' → logprob: -7.650375843048096

Token 992: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128559485077858
    2. '=' → logprob: -2.237855911254883
    3. ' ' → logprob: -10.737855911254883
    4. '	' → logprob: -12.487855911254883
    5. 'f' → logprob: -13.487855911254883
    6. '  ' → logprob: -13.737855911254883
    7. 'e' → logprob: -13.862855911254883
    8. '   ' → logprob: -14.112855911254883
    9. '=int' → logprob: -14.112855911254883
    10. '.' → logprob: -14.612855911254883

Token 993: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06697715818881989
    2. ' self' → logprob: -2.8169772624969482
    3. 'min' → logprob: -5.441977024078369
    4. ' min' → logprob: -7.316977024078369
    5. '	self' → logprob: -13.566977500915527
    6. '   ' → logprob: -15.441977500915527
    7. ' ' → logprob: -16.69197654724121
    8. '	min' → logprob: -16.94197654724121
    9. '           ' → logprob: -17.06697654724121
    10. '(self' → logprob: -17.06697654724121

Token 994: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.012431479059159756
    2. 'dfs' → logprob: -4.637431621551514
    3. '.' → logprob: -6.262431621551514
    4. ' .' → logprob: -8.262431144714355
    5. '.fs' → logprob: -8.262431144714355
    6. '.f' → logprob: -9.012431144714355
    7. '.df' → logprob: -10.387431144714355
    8. ' dfs' → logprob: -10.637431144714355
    9. 'f' → logprob: -10.762431144714355
    10. 'd' → logprob: -11.887431144714355

Token 995: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -2.0339031834737398e-05
    2. 'f' → logprob: -11.125020027160645
    3. ' fs' → logprob: -12.625020027160645
    4. '_fs' → logprob: -14.250020027160645
    5. 'dfs' → logprob: -14.625020027160645
    6. '(fs' → logprob: -14.750020027160645
    7. '	fs' → logprob: -15.500020027160645
    8. 's' → logprob: -15.625020027160645
    9. 'sf' → logprob: -16.50002098083496
    10. '   ' → logprob: -16.62502098083496

Token 996: '_flow' (ID: 63802)
  Prédit: '_flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -1.735893965815194e-05
    2. '_' → logprob: -11.250017166137695
    3. '_flux' → logprob: -13.125017166137695
    4. ' _' → logprob: -14.375017166137695
    5. '_FLOW' → logprob: -14.625017166137695
    6. '(_' → logprob: -15.250017166137695
    7. '_f' → logprob: -15.500017166137695
    8. '_low' → logprob: -16.125017166137695
    9. '_floor' → logprob: -16.625017166137695
    10. '_
' → logprob: -16.625017166137695

Token 997: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.500004768371582
    3. '(
' → logprob: -13.750004768371582
    4. 'e' → logprob: -16.5000057220459
    5. ' (' → logprob: -17.2500057220459
    6. '   ' → logprob: -18.5000057220459
    7. '           ' → logprob: -18.8750057220459
    8. ' e' → logprob: -19.0000057220459
    9. '	e' → logprob: -19.2500057220459
    10. '```' → logprob: -20.0000057220459

Token 998: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -4.930552313453518e-05
    2. ' .' → logprob: -11.000049591064453
    3. '.' → logprob: -11.250049591064453
    4. 'to' → logprob: -12.125049591064453
    5. ',' → logprob: -13.000049591064453
    6. ',to' → logprob: -13.125049591064453
    7. '   ' → logprob: -13.250049591064453
    8. ' ' → logprob: -13.625049591064453
    9. '```' → logprob: -13.875049591064453
    10. '.from' → logprob: -13.875049591064453

Token 999: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.864272967912257e-05
    2. ',t' → logprob: -9.375088691711426
    3. ' ,' → logprob: -12.625088691711426
    4. ',
' → logprob: -15.000088691711426
    5. 't' → logprob: -16.12508773803711
    6. '   ' → logprob: -17.12508773803711
    7. ' t' → logprob: -18.37508773803711
    8. '```' → logprob: -18.62508773803711
    9. ',T' → logprob: -19.25008773803711
    10. '           ' → logprob: -19.37508773803711

Token 1000: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02324594371020794
    2. ' t' → logprob: -3.7732460498809814
    3. '	t' → logprob: -15.523245811462402
    4. '`t' → logprob: -16.02324676513672
    5. '```' → logprob: -18.27324676513672
    6. '   ' → logprob: -18.39824676513672
    7. '_t' → logprob: -18.39824676513672
    8. ' ' → logprob: -18.64824676513672
    9. ' ' → logprob: -19.02324676513672
    10. ')t' → logprob: -19.39824676513672

Token 1001: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.869017852295656e-06
    2. ' ,' → logprob: -12.625006675720215
    3. ',f' → logprob: -12.625006675720215
    4. ',
' → logprob: -15.750006675720215
    5. 'f' → logprob: -16.87500762939453
    6. '   ' → logprob: -17.75000762939453
    7. ',float' → logprob: -18.25000762939453
    8. ',int' → logprob: -18.25000762939453
    9. '_,' → logprob: -19.12500762939453
    10. ' f' → logprob: -19.37500762939453

Token 1002: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.505351095460355e-05
    2. ' min' → logprob: -9.500075340270996
    3. '	min' → logprob: -15.875075340270996
    4. '(min' → logprob: -18.25007438659668
    5. '   ' → logprob: -18.37507438659668
    6. 'mini' → logprob: -19.50007438659668
    7. '_min' → logprob: -19.75007438659668
    8. 'f' → logprob: -20.00007438659668
    9. 'minimum' → logprob: -20.75007438659668
    10. 'max' → logprob: -21.25007438659668

Token 1003: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0001605115394340828
    2. '(' → logprob: -8.750160217285156
    3. 'f' → logprob: -13.250160217285156
    4. ' (' → logprob: -16.000160217285156
    5. '(
' → logprob: -16.250160217285156
    6. ' f' → logprob: -17.000160217285156
    7. '(

' → logprob: -18.625160217285156
    8. '	f' → logprob: -19.000160217285156
    9. '(
' → logprob: -20.500160217285156
    10. '(e' → logprob: -20.875160217285156

Token 1004: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000491076149046421
    2. ' ,' → logprob: -7.750491142272949
    3. ',e' → logprob: -9.75049114227295
    4. 'e' → logprob: -14.37549114227295
    5. ',d' → logprob: -14.62549114227295
    6. ',
' → logprob: -15.25049114227295
    7. '_,' → logprob: -15.75049114227295
    8. ',float' → logprob: -16.000490188598633
    9. '   ' → logprob: -16.125490188598633
    10. ',s' → logprob: -16.750490188598633

Token 1005: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10020774602890015
    2. ' e' → logprob: -2.350207805633545
    3. '           ' → logprob: -13.975207328796387
    4. '	e' → logprob: -15.725207328796387
    5. '               ' → logprob: -16.850208282470703
    6. ')e' → logprob: -17.725208282470703
    7. '(e' → logprob: -18.350208282470703
    8. '                   ' → logprob: -18.350208282470703
    9. '            ' → logprob: -18.475208282470703
    10. ')' → logprob: -18.475208282470703

Token 1006: '.cap' (ID: 45851)
  Prédit: '.cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cap' → logprob: -7.896309739408025e-07
    2. '.capacity' → logprob: -15.250000953674316
    3. '.' → logprob: -15.500000953674316
    4. ' .' → logprob: -16.25
    5. 'cap' → logprob: -16.875
    6. '.cal' → logprob: -17.625
    7. '(cap' → logprob: -17.75
    8. '.cat' → logprob: -18.25
    9. '
' → logprob: -18.375
    10. '   ' → logprob: -19.0

Token 1007: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.003605178790166974
    2. ')' → logprob: -5.628605365753174
    3. ')
' → logprob: -13.253604888916016
    4. ' ),' → logprob: -13.503604888916016
    5. '))' → logprob: -13.753604888916016
    6. '   ' → logprob: -15.628604888916016
    7. '           ' → logprob: -15.753604888916016
    8. '),
' → logprob: -15.753604888916016
    9. ',' → logprob: -15.878604888916016
    10. '               ' → logprob: -16.628604888916016

Token 1008: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0006469102227129042
    2. ' iter' → logprob: -7.375647068023682
    3. '           ' → logprob: -11.375646591186523
    4. '               ' → logprob: -12.375646591186523
    5. '       ' → logprob: -13.500646591186523
    6. ')' → logprob: -13.750646591186523
    7. '                   ' → logprob: -14.875646591186523
    8. '   ' → logprob: -15.000646591186523
    9. '	iter' → logprob: -15.000646591186523
    10. '(iter' → logprob: -15.125646591186523

Token 1009: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.3345476984977722
    2. '_' → logprob: -1.834547758102417
    3. '_[' → logprob: -2.084547758102417
    4. '_)' → logprob: -9.084547996520996
    5. '_),' → logprob: -9.334547996520996
    6. '_,
' → logprob: -10.709547996520996
    7. '_
' → logprob: -10.959547996520996
    8. '_
' → logprob: -11.334547996520996
    9. '_)
' → logprob: -11.959547996520996
    10. '_]' → logprob: -11.959547996520996

Token 1010: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.0031777136027812958
    2. ' level' → logprob: -5.753177642822266
    3. '[level' → logprob: -18.128177642822266
    4. '	level' → logprob: -18.253177642822266
    5. ' ' → logprob: -18.628177642822266
    6. '(level' → logprob: -19.628177642822266
    7. '           ' → logprob: -19.878177642822266
    8. '   ' → logprob: -20.378177642822266
    9. '    ' → logprob: -20.503177642822266
    10. '  ' → logprob: -20.753177642822266

Token 1011: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.386979877948761
    2. ')' → logprob: -1.1369798183441162
    3. '               ' → logprob: -9.261980056762695
    4. ')
' → logprob: -11.761980056762695
    5. '           ' → logprob: -12.511980056762695
    6. '                   ' → logprob: -13.261980056762695
    7. ');' → logprob: -15.511980056762695
    8. ')

' → logprob: -15.511980056762695
    9. ')`
' → logprob: -17.011980056762695
    10. ' )
' → logprob: -17.261980056762695

Token 1012: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01776355877518654
    2. '                   ' → logprob: -4.392763614654541
    3. '           ' → logprob: -5.767763614654541
    4. '
' → logprob: -7.017763614654541
    5. '                       ' → logprob: -7.392763614654541
    6. ' if' → logprob: -8.392763137817383
    7. '                               ' → logprob: -9.142763137817383
    8. 'if' → logprob: -9.392763137817383
    9. '                           ' → logprob: -9.642763137817383
    10. '                
' → logprob: -10.892763137817383

Token 1013: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6404415965080261
    2. '               ' → logprob: -1.140441656112671
    3. ' if' → logprob: -1.890441656112671
    4. '           ' → logprob: -6.140441417694092
    5. '                   ' → logprob: -9.51544189453125
    6. '	if' → logprob: -11.26544189453125
    7. 'If' → logprob: -12.64044189453125
    8. '                       ' → logprob: -12.76544189453125
    9. '	           ' → logprob: -13.01544189453125
    10. '   ' → logprob: -13.39044189453125

Token 1014: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004307884373702109
    2. ' d' → logprob: -7.750430583953857
    3. '	d' → logprob: -16.750431060791016
    4. '   ' → logprob: -18.750431060791016
    5. 'abs' → logprob: -19.000431060791016
    6. '>d' → logprob: -20.375431060791016
    7. '  ' → logprob: -20.500431060791016
    8. '     ' → logprob: -21.375431060791016
    9. '    ' → logprob: -21.500431060791016
    10. ' ' → logprob: -21.750431060791016

Token 1015: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.22543440759181976
    2. ' >' → logprob: -1.600434422492981
    3. ')>' → logprob: -11.600434303283691
    4. ':' → logprob: -12.225434303283691
    5. ')' → logprob: -12.725434303283691
    6. '.' → logprob: -14.225434303283691
    7. ' ' → logprob: -14.350434303283691
    8. '">' → logprob: -14.475434303283691
    9. '!=' → logprob: -14.475434303283691
    10. '```' → logprob: -15.100434303283691

Token 1016: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029630844946950674
    2. '0' → logprob: -5.877963066101074
    3. ' ' → logprob: -8.752963066101074
    4. '   ' → logprob: -15.252963066101074
    5. '  ' → logprob: -17.50296401977539
    6. '	' → logprob: -18.37796401977539
    7. '```' → logprob: -18.37796401977539
    8. '
' → logprob: -19.37796401977539
    9. '    ' → logprob: -19.87796401977539
    10. '`' → logprob: -20.00296401977539

Token 1017: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009284949628636241
    2. '0' → logprob: -7.0009284019470215
    3. ' ' → logprob: -11.00092887878418
    4. '   ' → logprob: -15.50092887878418
    5. '  ' → logprob: -17.75092887878418
    6. '```' → logprob: -17.87592887878418
    7. '	' → logprob: -18.25092887878418
    8. 'float' → logprob: -18.75092887878418
    9. '(' → logprob: -18.75092887878418
    10. '`' → logprob: -18.87592887878418

Token 1018: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3856492842023727e-06
    2. '-' → logprob: -13.625000953674316
    3. '1' → logprob: -16.250001907348633
    4. '-e' → logprob: -18.250001907348633
    5. '.' → logprob: -18.375001907348633
    6. '6' → logprob: -19.250001907348633
    7. '.e' → logprob: -19.875001907348633
    8. '
' → logprob: -20.125001907348633
    9. '5' → logprob: -20.250001907348633
    10. '0' → logprob: -20.375001907348633

Token 1019: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.512236498361744e-07
    2. 'e' → logprob: -14.625000953674316
    3. ' -' → logprob: -17.0
    4. '
' → logprob: -17.75
    5. '```' → logprob: -18.625
    6. '-
' → logprob: -18.75
    7. '-=' → logprob: -19.0
    8. '15' → logprob: -19.25
    9. '   ' → logprob: -19.625
    10. '^-' → logprob: -19.9375

Token 1020: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.00010306637705070898
    2. '14' → logprob: -9.625102996826172
    3. '12' → logprob: -11.500102996826172
    4. '-' → logprob: -11.625102996826172
    5. '10' → logprob: -11.750102996826172
    6. 'e' → logprob: -13.000102996826172
    7. '13' → logprob: -13.250102996826172
    8. '1' → logprob: -13.812602996826172
    9. '```' → logprob: -13.875102996826172
    10. '9' → logprob: -14.187602996826172

Token 1021: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03440328687429428
    2. ':' → logprob: -3.9094033241271973
    3. '                   ' → logprob: -4.534403324127197
    4. '               ' → logprob: -6.034403324127197
    5. '           ' → logprob: -8.159402847290039
    6. '                       ' → logprob: -8.784402847290039
    7. '):
' → logprob: -9.534402847290039
    8. '                           ' → logprob: -9.784402847290039
    9. ' :
' → logprob: -11.034402847290039
    10. ':

' → logprob: -11.909402847290039

Token 1022: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0027214218862354755
    2. '               ' → logprob: -6.752721309661865
    3. '                       ' → logprob: -7.502721309661865
    4. ' e' → logprob: -7.752721309661865
    5. 'e' → logprob: -7.877721309661865
    6. '           ' → logprob: -9.002721786499023
    7. '                           ' → logprob: -10.627721786499023
    8. '                    ' → logprob: -12.002721786499023
    9. '                    
' → logprob: -12.252721786499023
    10. '                  ' → logprob: -12.502721786499023

Token 1023: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.007902822457253933
    2. ' e' → logprob: -5.0079026222229
    3. '                   ' → logprob: -6.7579026222229
    4. '                       ' → logprob: -10.757903099060059
    5. '	e' → logprob: -13.382903099060059
    6. '           ' → logprob: -13.632903099060059
    7. '               ' → logprob: -14.882903099060059
    8. '                           ' → logprob: -14.882903099060059
    9. '   ' → logprob: -15.632903099060059
    10. '                    ' → logprob: -16.882902145385742

Token 1024: '.cap' (ID: 45851)
  Prédit: '.cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cap' → logprob: -9.088346359931165e-07
    2. '.capacity' → logprob: -14.625000953674316
    3. '.' → logprob: -15.125000953674316
    4. ' .' → logprob: -16.625
    5. 'cap' → logprob: -17.75
    6. '.cat' → logprob: -17.875
    7. '}.' → logprob: -17.875
    8. '.cal' → logprob: -18.125
    9. '.comp' → logprob: -18.375
    10. '.Cap' → logprob: -18.625

Token 1025: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.2520117461681366
    2. '-=' → logprob: -1.502011775970459
    3. '-' → logprob: -9.6270112991333
    4. '    ' → logprob: -11.8770112991333
    5. ' -' → logprob: -12.6270112991333
    6. '   ' → logprob: -13.7520112991333
    7. '=' → logprob: -13.7520112991333
    8. '	' → logprob: -14.0020112991333
    9. '           ' → logprob: -14.0020112991333
    10. '            ' → logprob: -14.2520112991333

Token 1026: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0010328111238777637
    2. ' d' → logprob: -6.876032829284668
    3. '	d' → logprob: -17.00103187561035
    4. '_d' → logprob: -18.87603187561035
    5. '
' → logprob: -20.00103187561035
    6. '   ' → logprob: -20.12603187561035
    7. '```' → logprob: -20.37603187561035
    8. '                   ' → logprob: -20.50103187561035
    9. ')d' → logprob: -20.75103187561035
    10. '               ' → logprob: -21.12603187561035

Token 1027: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004729279782623053
    2. '
' → logprob: -5.754729270935059
    3. '           ' → logprob: -7.504729270935059
    4. '               ' → logprob: -7.504729270935059
    5. '                    
' → logprob: -9.504729270935059
    6. '                    ' → logprob: -9.879729270935059
    7. 'and' → logprob: -10.129729270935059
    8. ' and' → logprob: -10.129729270935059
    9. 'e' → logprob: -10.129729270935059
    10. '<|end|>' → logprob: -10.254729270935059

Token 1028: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00038014890742488205
    2. '
' → logprob: -8.625380516052246
    3. '               ' → logprob: -9.125380516052246
    4. '           ' → logprob: -10.500380516052246
    5. '                    
' → logprob: -10.500380516052246
    6. '                       ' → logprob: -10.875380516052246
    7. '                  ' → logprob: -12.125380516052246
    8. '                    ' → logprob: -12.875380516052246
    9. ' and' → logprob: -13.375380516052246
    10. '       ' → logprob: -13.375380516052246

Token 1029: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.676292231422849e-05
    2. ' self' → logprob: -11.750017166137695
    3. 'rev' → logprob: -12.000017166137695
    4. '                   ' → logprob: -13.750017166137695
    5. 'reverse' → logprob: -14.750017166137695
    6. '   ' → logprob: -14.750017166137695
    7. '               ' → logprob: -15.375017166137695
    8. '           ' → logprob: -15.500017166137695
    9. '       ' → logprob: -15.750017166137695
    10. 'e' → logprob: -16.250017166137695

Token 1030: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.000493937055580318
    2. 'graph' → logprob: -7.625494003295898
    3. '	graph' → logprob: -12.875494003295898
    4. '.' → logprob: -13.500494003295898
    5. '
' → logprob: -13.625494003295898
    6. ' graph' → logprob: -15.250494003295898
    7. '.graphics' → logprob: -16.1254940032959
    8. '(graph' → logprob: -16.2504940032959
    9. '.
' → logprob: -16.8754940032959
    10. 'graphql' → logprob: -17.0004940032959

Token 1031: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -8.537868779967539e-06
    2. 'e' → logprob: -11.750008583068848
    3. '[' → logprob: -14.500008583068848
    4. '```' → logprob: -17.00000762939453
    5. '   ' → logprob: -18.25000762939453
    6. '	e' → logprob: -18.62500762939453
    7. '[
' → logprob: -19.50000762939453
    8. '       ' → logprob: -19.75000762939453
    9. '           ' → logprob: -20.12500762939453
    10. '
' → logprob: -20.50000762939453

Token 1032: '.to' (ID: 3552)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.002393367700278759
    2. '[e' → logprob: -6.1273932456970215
    3. 'v' → logprob: -9.12739372253418
    4. '[' → logprob: -9.75239372253418
    5. '[to' → logprob: -10.50239372253418
    6. '.v' → logprob: -12.00239372253418
    7. 'to' → logprob: -12.37739372253418
    8. 'e' → logprob: -14.00239372253418
    9. '.to' → logprob: -14.75239372253418
    10. '```' → logprob: -14.87739372253418

Token 1033: '][' (ID: 2696)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.00524098752066493
    2. '[' → logprob: -5.2552409172058105
    3. '][' → logprob: -12.255241394042969
    4. '[
' → logprob: -13.505241394042969
    5. ' [' → logprob: -14.880241394042969
    6. 'e' → logprob: -15.630241394042969
    7. '[s' → logprob: -16.13024139404297
    8. ')[' → logprob: -16.13024139404297
    9. '[u' → logprob: -16.50524139404297
    10. '[self' → logprob: -16.50524139404297

Token 1034: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2664456789934775e-06
    2. ' e' → logprob: -14.125000953674316
    3. '
' → logprob: -14.750000953674316
    4. '	e' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '[e' → logprob: -19.250001907348633
    7. '
' → logprob: -19.625001907348633
    8. 'self' → logprob: -19.625001907348633
    9. '    
' → logprob: -20.500001907348633
    10. '(e' → logprob: -20.500001907348633

Token 1035: '.rev' (ID: 152006)
  Prédit: '.rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rev' → logprob: -0.00010115911572938785
    2. '.' → logprob: -10.125101089477539
    3. '.re' → logprob: -10.750101089477539
    4. 'rev' → logprob: -11.750101089477539
    5. '.reverse' → logprob: -11.750101089477539
    6. '[' → logprob: -11.875101089477539
    7. ' .' → logprob: -12.000101089477539
    8. '.e' → logprob: -12.500101089477539
    9. '.v' → logprob: -12.875101089477539
    10. '.rv' → logprob: -13.875101089477539

Token 1036: '].' (ID: 1651)
  Prédit: '.cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cap' → logprob: -0.5331754684448242
    2. '].' → logprob: -1.5331754684448242
    3. '.' → logprob: -1.6581754684448242
    4. ' .' → logprob: -5.033175468444824
    5. '}.' → logprob: -9.408175468444824
    6. '.capacity' → logprob: -9.658175468444824
    7. '.comp' → logprob: -10.033175468444824
    8. ').' → logprob: -10.033175468444824
    9. ' ].' → logprob: -10.158175468444824
    10. '>.' → logprob: -11.283175468444824

Token 1037: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: 0.0
    2. '.cap' → logprob: -19.75
    3. '(cap' → logprob: -19.75
    4. '
' → logprob: -20.0
    5. 'kap' → logprob: -20.25
    6. '_cap' → logprob: -20.5
    7. 'c' → logprob: -20.625
    8. 'caps' → logprob: -21.125
    9. 'capac' → logprob: -21.875
    10. '```' → logprob: -22.0

Token 1038: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10020774602890015
    2. ' +=' → logprob: -2.350207805633545
    3. '+' → logprob: -14.975207328796387
    4. ']+=' → logprob: -15.225207328796387
    5. '    ' → logprob: -15.850207328796387
    6. '                   ' → logprob: -15.975207328796387
    7. '                    ' → logprob: -16.225208282470703
    8. '   ' → logprob: -16.350208282470703
    9. ' +' → logprob: -17.350208282470703
    10. ' ' → logprob: -17.350208282470703

Token 1039: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004307884373702109
    2. ' d' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.750431060791016
    4. '	d' → logprob: -18.250431060791016
    5. ' ' → logprob: -20.125431060791016
    6. '  ' → logprob: -20.500431060791016
    7. '_d' → logprob: -21.625431060791016
    8. '
' → logprob: -22.500431060791016
    9. '       ' → logprob: -22.500431060791016
    10. '           ' → logprob: -22.500431060791016

Token 1040: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.542423165636137e-05
    2. '
' → logprob: -10.000085830688477
    3. 'return' → logprob: -11.125085830688477
    4. '				' → logprob: -11.125085830688477
    5. '               ' → logprob: -12.000085830688477
    6. '                    
' → logprob: -13.625085830688477
    7. '           ' → logprob: -13.875085830688477
    8. '                       ' → logprob: -14.625085830688477
    9. '                  ' → logprob: -14.625085830688477
    10. '   ' → logprob: -15.125085830688477

Token 1041: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001875671005109325
    2. '                       ' → logprob: -9.625187873840332
    3. '               ' → logprob: -9.750187873840332
    4. '				' → logprob: -10.875187873840332
    5. '
' → logprob: -11.750187873840332
    6. '                    
' → logprob: -11.875187873840332
    7. 'return' → logprob: -11.875187873840332
    8. '           ' → logprob: -12.000187873840332
    9. '                  ' → logprob: -12.250187873840332
    10. '       ' → logprob: -13.000187873840332

Token 1042: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001964082010090351
    2. '                   ' → logprob: -6.251964092254639
    3. ' return' → logprob: -10.25196361541748
    4. '	return' → logprob: -17.001964569091797
    5. '                       ' → logprob: -17.376964569091797
    6. '{return' → logprob: -17.501964569091797
    7. '               ' → logprob: -18.251964569091797
    8. ':return' → logprob: -18.501964569091797
    9. '
' → logprob: -18.626964569091797
    10. '           ' → logprob: -18.876964569091797

Token 1043: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0040785204619169235
    2. ' d' → logprob: -5.504078388214111
    3. '	d' → logprob: -15.87907886505127
    4. '   ' → logprob: -19.004077911376953
    5. ' ' → logprob: -20.254077911376953
    6. '                   ' → logprob: -20.504077911376953
    7. '           ' → logprob: -21.004077911376953
    8. '
' → logprob: -21.004077911376953
    9. '               ' → logprob: -21.254077911376953
    10. ' ' → logprob: -21.379077911376953

Token 1044: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6051902770996094
    2. '           ' → logprob: -0.8551902770996094
    3. '
' → logprob: -3.8551902770996094
    4. '                   ' → logprob: -5.730190277099609
    5. '                
' → logprob: -6.230190277099609
    6. '       ' → logprob: -7.605190277099609
    7. '            
' → logprob: -7.605190277099609
    8. '                    
' → logprob: -8.10519027709961
    9. ' 
' → logprob: -8.48019027709961
    10. '  
' → logprob: -8.73019027709961

Token 1045: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11353214085102081
    2. '               ' → logprob: -2.238532066345215
    3. '		' → logprob: -7.988532066345215
    4. '                   ' → logprob: -9.238532066345215
    5. '       ' → logprob: -9.363532066345215
    6. '			' → logprob: -9.488532066345215
    7. '	           ' → logprob: -10.613532066345215
    8. '            
' → logprob: -11.238532066345215
    9. '
' → logprob: -11.238532066345215
    10. '                
' → logprob: -11.488532066345215

Token 1046: ' iter' (ID: 10621)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006400577258318663
    2. '               ' → logprob: -5.2564005851745605
    3. 'iter' (adapté à ' iter') → logprob: -7.3814005851745605
    4. '		' → logprob: -8.631400108337402
    5. '                   ' → logprob: -8.631400108337402
    6. '   ' → logprob: -9.631400108337402
    7. ' iter' → logprob: -9.631400108337402
    8. '       ' → logprob: -10.381400108337402
    9. '	iter' → logprob: -12.131400108337402
    10. '\' → logprob: -12.756400108337402

Token 1047: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.31327885389328003
    2. '_' → logprob: -1.3132789134979248
    3. '_
' → logprob: -11.563279151916504
    4. '[' → logprob: -13.688279151916504
    5. '__[' → logprob: -13.938279151916504
    6. '_
' → logprob: -14.063279151916504
    7. '[_' → logprob: -14.188279151916504
    8. '_

' → logprob: -14.188279151916504
    9. '_=' → logprob: -14.313279151916504
    10. ' _' → logprob: -14.563279151916504

Token 1048: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.706686690449715e-05
    2. '[v' → logprob: -9.625066757202148
    3. ' v' → logprob: -14.000066757202148
    4. '	v' → logprob: -16.12506675720215
    5. '```' → logprob: -19.37506675720215
    6. '
' → logprob: -19.62506675720215
    7. '(v' → logprob: -20.00006675720215
    8. ')v' → logprob: -20.25006675720215
    9. '   ' → logprob: -20.62506675720215
    10. ' ' → logprob: -20.87506675720215

Token 1049: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.27582094073295593
    2. ']' → logprob: -1.7758209705352783
    3. ']+=' → logprob: -2.9008209705352783
    4. ' +=' → logprob: -4.275820732116699
    5. '[' → logprob: -5.900820732116699
    6. ' ]' → logprob: -10.2758207321167
    7. '+' → logprob: -11.4008207321167
    8. '   ' → logprob: -11.5258207321167
    9. ']+' → logprob: -11.6508207321167
    10. '+]' → logprob: -11.7758207321167

Token 1050: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01815134845674038
    2. ' +=' → logprob: -4.01815128326416
    3. ']+=' → logprob: -14.14315128326416
    4. '=' → logprob: -14.51815128326416
    5. '[' → logprob: -15.26815128326416
    6. '+' → logprob: -17.268152236938477
    7. '   ' → logprob: -17.893152236938477
    8. ' ' → logprob: -19.393152236938477
    9. '    ' → logprob: -19.768152236938477
    10. '```' → logprob: -20.018152236938477

Token 1051: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -20.375
    4. '```' → logprob: -21.375
    5. '１' → logprob: -22.25
    6. '  ' → logprob: -22.75
    7. '`' → logprob: -23.25
    8. '۱' → logprob: -23.3125
    9. '	' → logprob: -23.4375
    10. '
' → logprob: -23.4375

Token 1052: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '   ' → logprob: -22.875
    4. '```' → logprob: -23.5
    5. '
' → logprob: -24.625
    6. '１' → logprob: -25.0
    7. '۱' → logprob: -25.25
    8. '0' → logprob: -25.25
    9. '  ' → logprob: -25.5
    10. '``' → logprob: -26.0625

Token 1053: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030614540446549654
    2. 'return' → logprob: -8.500306129455566
    3. '
' → logprob: -10.125306129455566
    4. '   ' → logprob: -10.625306129455566
    5. '	' → logprob: -10.875306129455566
    6. '        
' → logprob: -11.750306129455566
    7. '           ' → logprob: -13.125306129455566
    8. '	return' → logprob: -13.125306129455566
    9. '```' → logprob: -13.750306129455566
    10. '    
' → logprob: -13.875306129455566

Token 1054: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017517358355689794
    2. 'return' → logprob: -9.000175476074219
    3. '	' → logprob: -10.250175476074219
    4. '           ' → logprob: -12.250175476074219
    5. '   ' → logprob: -12.375175476074219
    6. '
' → logprob: -13.125175476074219
    7. '	return' → logprob: -13.125175476074219
    8. '	   ' → logprob: -13.250175476074219
    9. ' return' → logprob: -14.750175476074219
    10. '        
' → logprob: -15.500175476074219

Token 1055: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2527976930141449
    2. '       ' → logprob: -1.5027977228164673
    3. ' return' → logprob: -8.127798080444336
    4. '	return' → logprob: -8.252798080444336
    5. '   ' → logprob: -8.877798080444336
    6. '```' → logprob: -9.002798080444336
    7. '	' → logprob: -10.752798080444336
    8. '           ' → logprob: -12.252798080444336
    9. '
' → logprob: -12.252798080444336
    10. 'eturn' → logprob: -12.377798080444336

Token 1056: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.625003814697266
    4. ' ' → logprob: -20.625003814697266
    5. '  ' → logprob: -21.625003814697266
    6. 'float' → logprob: -22.250003814697266
    7. '	' → logprob: -22.375003814697266
    8. '```' → logprob: -22.875003814697266
    9. '۰' → logprob: -23.312503814697266
    10. '    ' → logprob: -23.562503814697266

Token 1057: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -21.875
    4. 'float' → logprob: -22.125
    5. '```' → logprob: -22.875
    6. '۰' → logprob: -23.5625
    7. '-' → logprob: -23.6875
    8. '.' → logprob: -23.75
    9. '０' → logprob: -23.8125
    10. ' ' → logprob: -23.875

Token 1058: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1059: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. 'float' → logprob: -16.5
    3. '```' → logprob: -19.75
    4. 'f' → logprob: -20.25
    5. '1' → logprob: -21.875
    6. ' ' → logprob: -22.25
    7. '.' → logprob: -22.625
    8. ' float' → logprob: -22.625
    9. '**' → logprob: -22.75
    10. '   ' → logprob: -23.0

Token 1060: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013005275279283524
    2. '   ' → logprob: -4.388005256652832
    3. '

' → logprob: -8.638005256652832
    4. '    
' → logprob: -8.638005256652832
    5. '```' → logprob: -9.263005256652832
    6. '<|end|>' → logprob: -11.513005256652832
    7. 'def' → logprob: -12.013005256652832
    8. '  
' → logprob: -12.388005256652832
    9. ' 
' → logprob: -12.513005256652832
    10. '
' → logprob: -12.513005256652832

Token 1061: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16105139255523682
    2. 'def' → logprob: -1.9110513925552368
    3. '
' → logprob: -7.536051273345947
    4. '```' → logprob: -8.536051750183105
    5. ' def' → logprob: -9.786051750183105
    6. '    
' → logprob: -10.911051750183105
    7. '	def' → logprob: -11.411051750183105
    8. '`' → logprob: -13.536051750183105
    9. '4' → logprob: -13.661051750183105
    10. '       ' → logprob: -14.036051750183105

Token 1062: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007573262322694063
    2. '
' → logprob: -5.007573127746582
    3. '   ' → logprob: -7.132573127746582
    4. ' def' → logprob: -9.882573127746582
    5. '

' → logprob: -12.632573127746582
    6. '    
' → logprob: -13.007573127746582
    7. '	def' → logprob: -13.757573127746582
    8. '```' → logprob: -14.132573127746582
    9. ' ' → logprob: -16.1325740814209
    10. '  
' → logprob: -16.7575740814209

Token 1063: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0010100651998072863
    2. 'din' → logprob: -7.001009941101074
    3. ' max' → logprob: -9.251009941101074
    4. 'maximum' → logprob: -13.376009941101074
    5. 'flow' → logprob: -14.126009941101074
    6. '_max' → logprob: -16.50101089477539
    7. 'Max' → logprob: -18.12601089477539
    8. ' din' → logprob: -18.25101089477539
    9. '  ' → logprob: -18.62601089477539
    10. '.max' → logprob: -18.62601089477539

Token 1064: '_flow' (ID: 63802)
  Prédit: '_flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -0.00019030878320336342
    2. '_' → logprob: -8.625190734863281
    3. '_flux' → logprob: -13.125190734863281
    4. ' _' → logprob: -13.250190734863281
    5. '_FLOW' → logprob: -13.250190734863281
    6. '\' → logprob: -13.250190734863281
    7. 'flow' → logprob: -14.625190734863281
    8. '_fl' → logprob: -14.875190734863281
    9. '_push' → logprob: -15.000190734863281
    10. '_f' → logprob: -15.000190734863281

Token 1065: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10082148760557175
    2. '(' → logprob: -2.3508214950561523
    3. '(s' → logprob: -7.475821495056152
    4. ' (' → logprob: -10.475821495056152
    5. '(
' → logprob: -10.975821495056152
    6. 'self' → logprob: -13.600821495056152
    7. '   ' → logprob: -14.100821495056152
    8. ' ' → logprob: -15.600821495056152
    9. '(

' → logprob: -16.100820541381836
    10. '(sel' → logprob: -16.350820541381836

Token 1066: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.024046368896961212
    2. ',' → logprob: -3.8990464210510254
    3. '(' → logprob: -6.274046421051025
    4. 'self' → logprob: -7.149046421051025
    5. ')(' → logprob: -7.649046421051025
    6. ')' → logprob: -9.399045944213867
    7. ' (' → logprob: -9.399045944213867
    8. '   ' → logprob: -9.774045944213867
    9. '(s' → logprob: -9.899045944213867
    10. '       ' → logprob: -11.399045944213867

Token 1067: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00040695868665352464
    2. ' s' → logprob: -8.000407218933105
    3. 'self' → logprob: -9.625407218933105
    4. '   ' → logprob: -12.250407218933105
    5. 'source' → logprob: -15.250407218933105
    6. '       ' → logprob: -16.12540626525879
    7. ' ' → logprob: -16.50040626525879
    8. ' self' → logprob: -16.87540626525879
    9. '  ' → logprob: -17.25040626525879
    10. '    ' → logprob: -17.62540626525879

Token 1068: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004941754741594195
    2. ' ,' → logprob: -7.625494003295898
    3. ',int' → logprob: -12.625494003295898
    4. ',
' → logprob: -13.875494003295898
    5. '_,' → logprob: -14.250494003295898
    6. ':' → logprob: -14.625494003295898
    7. ',s' → logprob: -15.625494003295898
    8. '<|end|>' → logprob: -15.875494003295898
    9. '‌,' → logprob: -16.1254940032959
    10. ':int' → logprob: -16.5004940032959

Token 1069: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47493278980255127
    2. ' int' → logprob: -0.9749327898025513
    3. 't' → logprob: -7.474932670593262
    4. ' t' → logprob: -8.349932670593262
    5. ':int' → logprob: -11.099932670593262
    6. '   ' → logprob: -11.724932670593262
    7. ',int' → logprob: -11.849932670593262
    8. ',' → logprob: -11.974932670593262
    9. '=int' → logprob: -12.724932670593262
    10. '    ' → logprob: -12.974932670593262

Token 1070: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6047699318733066e-05
    2. ' ,' → logprob: -11.250016212463379
    3. ',t' → logprob: -12.875016212463379
    4. ':' → logprob: -15.125016212463379
    5. ',
' → logprob: -16.250015258789062
    6. ',int' → logprob: -17.250015258789062
    7. '   ' → logprob: -17.875015258789062
    8. ',n' → logprob: -20.875015258789062
    9. ':int' → logprob: -21.000015258789062
    10. '‌,' → logprob: -21.000015258789062

Token 1071: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014165041036903858
    2. ' t' → logprob: -4.264164924621582
    3. '   ' → logprob: -13.889164924621582
    4. '	t' → logprob: -14.889164924621582
    5. '  ' → logprob: -16.0141658782959
    6. ' ' → logprob: -16.3891658782959
    7. '    ' → logprob: -17.1391658782959
    8. '       ' → logprob: -19.0141658782959
    9. '     ' → logprob: -19.3891658782959
    10. '
' → logprob: -20.0141658782959

Token 1072: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003122247871942818
    2. ',' → logprob: -8.875311851501465
    3. ':int' → logprob: -9.125311851501465
    4. '):' → logprob: -10.250311851501465
    5. ')' → logprob: -10.625311851501465
    6. ' :' → logprob: -13.500311851501465
    7. '):
' → logprob: -13.875311851501465
    8. '   ' → logprob: -14.125311851501465
    9. '_:' → logprob: -15.375311851501465
    10. 'int' → logprob: -15.875311851501465

Token 1073: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015023599844425917
    2. ' int' → logprob: -6.501502513885498
    3. '[int' → logprob: -17.001502990722656
    4. '   ' → logprob: -18.126502990722656
    5. ':int' → logprob: -18.251502990722656
    6. ' ' → logprob: -18.501502990722656
    7. '(int' → logprob: -18.626502990722656
    8. '	int' → logprob: -19.376502990722656
    9. '=int' → logprob: -19.376502990722656
    10. '  ' → logprob: -19.501502990722656

Token 1074: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.011373155459296e-05
    2. '):
' → logprob: -10.500030517578125
    3. ' )' → logprob: -13.625030517578125
    4. '):' → logprob: -14.000030517578125
    5. '   ' → logprob: -15.375030517578125
    6. ',' → logprob: -16.375030517578125
    7. ')
' → logprob: -16.875030517578125
    8. ')->' → logprob: -17.000030517578125
    9. '`)' → logprob: -17.125030517578125
    10. '):
' → logprob: -17.500030517578125

Token 1075: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8175346851348877
    2. ' ->' → logprob: -0.9425346851348877
    3. '->' → logprob: -2.5675346851348877
    4. ')' → logprob: -2.8175346851348877
    5. ':' → logprob: -4.192534446716309
    6. '(' → logprob: -4.192534446716309
    7. ')->' → logprob: -6.817534446716309
    8. '   ' → logprob: -7.317534446716309
    9. 'self' → logprob: -9.442534446716309
    10. '(
' → logprob: -9.567534446716309

Token 1076: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.10020741820335388
    2. ' float' → logprob: -2.3502073287963867
    3. '	float' → logprob: -14.975207328796387
    4. 'flo' → logprob: -15.475207328796387
    5. '(float' → logprob: -16.975208282470703
    6. '   ' → logprob: -17.225208282470703
    7. 'f' → logprob: -17.350208282470703
    8. ' ' → logprob: -17.475208282470703
    9. 'Float' → logprob: -18.100208282470703
    10. 'int' → logprob: -18.225208282470703

Token 1077: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12727150321006775
    2. ':
' → logprob: -2.1272714138031006
    3. '   ' → logprob: -8.87727165222168
    4. '       ' → logprob: -9.62727165222168
    5. '():
' → logprob: -10.37727165222168
    6. '):' → logprob: -10.50227165222168
    7. '):
' → logprob: -10.62727165222168
    8. '():' → logprob: -10.75227165222168
    9. ':def' → logprob: -11.12727165222168
    10. '(self' → logprob: -12.37727165222168

Token 1078: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00812030304223299
    2. '
' → logprob: -5.133120536804199
    3. ' level' → logprob: -6.508120536804199
    4. 'level' → logprob: -7.633120536804199
    5. '	level' → logprob: -9.5081205368042
    6. '```' → logprob: -9.6331205368042
    7. '   ' → logprob: -10.5081205368042
    8. '        
' → logprob: -11.2581205368042
    9. '[level' → logprob: -11.3831205368042
    10. '	' → logprob: -11.7581205368042

Token 1079: ' flow' (ID: 7845)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' (adapté à ' flow') → logprob: -5.88418151892256e-05
    2. ' flow' → logprob: -9.750059127807617
    3. 'level' → logprob: -14.875059127807617
    4. '_flow' → logprob: -15.750059127807617
    5. '   ' → logprob: -17.625059127807617
    6. 'Flow' → logprob: -17.750059127807617
    7. '.flow' → logprob: -18.125059127807617
    8. 'max' → logprob: -18.875059127807617
    9. 'flux' → logprob: -19.125059127807617
    10. '       ' → logprob: -19.125059127807617

Token 1080: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005496514495462179
    2. '=' → logprob: -5.255496501922607
    3. ' ' → logprob: -8.255496978759766
    4. '  ' → logprob: -13.255496978759766
    5. ':' → logprob: -15.255496978759766
    6. '   ' → logprob: -15.255496978759766
    7. '_' → logprob: -15.505496978759766
    8. ',' → logprob: -16.130496978759766
    9. '.' → logprob: -16.880496978759766
    10. ' =
' → logprob: -17.005496978759766

Token 1081: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.250019073486328
    4. '  ' → logprob: -20.375019073486328
    5. ' ' → logprob: -21.125019073486328
    6. '۰' → logprob: -21.125019073486328
    7. '０' → logprob: -22.750019073486328
    8. '    ' → logprob: -22.937519073486328
    9. '.' → logprob: -22.937519073486328
    10. '	' → logprob: -23.125019073486328

Token 1082: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -21.375
    4. '۰' → logprob: -21.625
    5. '０' → logprob: -23.125
    6. '	' → logprob: -23.75
    7. '```' → logprob: -23.75
    8. ' ' → logprob: -24.0
    9. '  ' → logprob: -24.125
    10. '=' → logprob: -24.5

Token 1083: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7623090744018555
    2. '.' → logprob: -1.0123090744018555
    3. ' ' → logprob: -2.5123090744018555
    4. ' 
' → logprob: -3.1373090744018555
    5. '' → logprob: -4.7623090744018555
    6. '    
' → logprob: -5.2623090744018555
    7. ':' → logprob: -5.5123090744018555
    8. ',' → logprob: -5.5123090744018555
    9. '  ' → logprob: -5.6373090744018555
    10. '   ' → logprob: -5.7623090744018555

Token 1084: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '       ' → logprob: -20.375
    4. 'float' → logprob: -20.375
    5. 'def' → logprob: -20.625
    6. '```' → logprob: -20.75
    7. '   ' → logprob: -22.375
    8. '.' → logprob: -22.625
    9. 'return' → logprob: -22.625
    10. 'while' → logprob: -23.5

Token 1085: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011226310394704342
    2. '       ' → logprob: -4.636226177215576
    3. '        
' → logprob: -7.511226177215576
    4. ' 
' → logprob: -7.761226177215576
    5. ' while' → logprob: -8.636226654052734
    6. 'while' → logprob: -9.636226654052734
    7. '    
' → logprob: -9.761226654052734
    8. '
' → logprob: -9.886226654052734
    9. '  
' → logprob: -10.136226654052734
    10. ',
' → logprob: -11.011226654052734

Token 1086: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.227967768907547
    2. '
' → logprob: -1.6029677391052246
    3. ' while' → logprob: -6.727967739105225
    4. ' 
' → logprob: -7.852967739105225
    5. '        
' → logprob: -7.977967739105225
    6. 'while' → logprob: -8.477968215942383
    7. '	' → logprob: -8.852968215942383
    8. '	while' → logprob: -9.477968215942383
    9. '    
' → logprob: -10.227968215942383
    10. '		
' → logprob: -10.352968215942383

Token 1087: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -0.7513076663017273
    2. '       ' → logprob: -1.501307725906372
    3. 'while' → logprob: -1.751307725906372
    4. ' while' → logprob: -2.501307725906372
    5. ' level' → logprob: -3.001307725906372
    6. '	level' → logprob: -10.001307487487793
    7. '   ' → logprob: -10.501307487487793
    8. '```' → logprob: -11.126307487487793
    9. '        
' → logprob: -11.251307487487793
    10. '
' → logprob: -11.376307487487793

Token 1088: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023753583431244
    2. '=' → logprob: -1.9102375507354736
    3. '=[]' → logprob: -12.035237312316895
    4. '=[' → logprob: -13.410237312316895
    5. ' =[' → logprob: -13.410237312316895
    6. ' ' → logprob: -13.910237312316895
    7. '[:]' → logprob: -13.910237312316895
    8. ',' → logprob: -14.035237312316895
    9. '=[]
' → logprob: -14.410237312316895
    10. '   ' → logprob: -14.785237312316895

Token 1089: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0027267748955637217
    2. '[len' → logprob: -6.5027265548706055
    3. '[' → logprob: -6.7527265548706055
    4. '[n' → logprob: -10.627726554870605
    5. '[self' → logprob: -11.752726554870605
    6. ' [-' → logprob: -12.627726554870605
    7. '[level' → logprob: -12.627726554870605
    8. '[i' → logprob: -13.002726554870605
    9. '[s' → logprob: -13.127726554870605
    10. '[int' → logprob: -13.377726554870605

Token 1090: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -18.25
    3. ' ' → logprob: -19.0
    4. '-' → logprob: -19.875
    5. '```' → logprob: -20.375
    6. '   ' → logprob: -20.9375
    7. '(' → logprob: -20.9375
    8. '
' → logprob: -21.0625
    9. '۱' → logprob: -21.0625
    10. '

' → logprob: -21.1875

Token 1091: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11035514622926712
    2. ' for' → logprob: -2.6103551387786865
    3. 'for' → logprob: -4.110355377197266
    4. ']*' → logprob: -4.235355377197266
    5. ' ]' → logprob: -9.985355377197266
    6. ']*(' → logprob: -10.610355377197266
    7. ',' → logprob: -10.860355377197266
    8. '   ' → logprob: -13.110355377197266
    9. ' ' → logprob: -13.235355377197266
    10. '0' → logprob: -13.610355377197266

Token 1092: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1640385538339615
    2. ' *' → logprob: -2.53903865814209
    3. ',' → logprob: -3.66403865814209
    4. 'for' → logprob: -4.03903865814209
    5. ']' → logprob: -4.41403865814209
    6. '*' → logprob: -4.53903865814209
    7. ')' → logprob: -5.91403865814209
    8. '       ' → logprob: -6.41403865814209
    9. ' ' → logprob: -7.53903865814209
    10. ']*' → logprob: -7.53903865814209

Token 1093: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.9875325708417222e-05
    2. ' len' → logprob: -10.500029563903809
    3. '(len' → logprob: -13.000029563903809
    4. '       ' → logprob: -18.250030517578125
    5. '   ' → logprob: -20.625030517578125
    6. '           ' → logprob: -21.000030517578125
    7. '[len' → logprob: -21.500030517578125
    8. '	len' → logprob: -22.125030517578125
    9. '     ' → logprob: -23.375030517578125
    10. ',len' → logprob: -23.625030517578125

Token 1094: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9361264946837764e-07
    2. 'self' → logprob: -15.75
    3. '(' → logprob: -21.25
    4. '[self' → logprob: -21.875
    5. '(level' → logprob: -22.125
    6. '(this' → logprob: -22.375
    7. '=self' → logprob: -22.5
    8. ' (' → logprob: -24.375
    9. ' self' → logprob: -24.625
    10. '	self' → logprob: -24.75

Token 1095: '.graph' (ID: 18104)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4742985665798187
    2. 'self' → logprob: -0.9742985963821411
    3. 'graph' → logprob: -8.849298477172852
    4. ' self' → logprob: -10.474298477172852
    5. '.graph' → logprob: -11.099298477172852
    6. '.self' → logprob: -11.224298477172852
    7. '[self' → logprob: -11.724298477172852
    8. '.level' → logprob: -12.099298477172852
    9. ',self' → logprob: -13.349298477172852
    10. '	self' → logprob: -13.349298477172852

Token 1096: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3143673539161682
    2. ')' → logprob: -1.3143672943115234
    3. '       ' → logprob: -6.814367294311523
    4. ')
' → logprob: -12.314367294311523
    5. '   ' → logprob: -13.939367294311523
    6. ' )
' → logprob: -14.314367294311523
    7. '
' → logprob: -14.939367294311523
    8. ')

' → logprob: -15.689367294311523
    9. ' )' → logprob: -16.314367294311523
    10. ')`
' → logprob: -16.439367294311523

Token 1097: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0467245951294899
    2. '
' → logprob: -3.296724557876587
    3. ' while' → logprob: -5.671724796295166
    4. '        
' → logprob: -6.296724796295166
    5. '<|end|>' → logprob: -6.671724796295166
    6. 'while' → logprob: -6.796724796295166
    7. '	while' → logprob: -7.921724796295166
    8. '   ' → logprob: -8.421724319458008
    9. '	' → logprob: -9.421724319458008
    10. '		
' → logprob: -9.796724319458008

Token 1098: ' INF' (ID: 69196)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00013214473437983543
    2. ' while' → logprob: -9.25013256072998
    3. '       ' → logprob: -10.25013256072998
    4. '	while' → logprob: -14.62513256072998
    5. 'iter' → logprob: -15.87513256072998
    6. '   ' → logprob: -16.375131607055664
    7. 'While' → logprob: -18.625131607055664
    8. '```' → logprob: -19.125131607055664
    9. '
' → logprob: -19.875131607055664
    10. 'wh' → logprob: -20.250131607055664

Token 1099: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804952651262283
    2. '=' → logprob: -3.2880494594573975
    3. '=float' → logprob: -11.788049697875977
    4. ':' → logprob: -14.913049697875977
    5. ' =
' → logprob: -16.788049697875977
    6. '_' → logprob: -17.038049697875977
    7. '＝' → logprob: -18.163049697875977
    8. ' ' → logprob: -18.788049697875977
    9. '_=' → logprob: -18.788049697875977
    10. '   ' → logprob: -19.038049697875977

Token 1100: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.002645098604261875
    2. '1' → logprob: -6.002645015716553
    3. ' float' → logprob: -9.252645492553711
    4. '10' → logprob: -9.752645492553711
    5. 'math' → logprob: -11.127645492553711
    6. '(float' → logprob: -15.752645492553711
    7. ' ' → logprob: -15.752645492553711
    8. '100' → logprob: -16.00264549255371
    9. '   ' → logprob: -16.12764549255371
    10. '	float' → logprob: -16.50264549255371

Token 1101: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.8624639324116288e-06
    2. '("' → logprob: -13.250001907348633
    3. '(' → logprob: -17.500001907348633
    4. ''in' → logprob: -18.000001907348633
    5. ''' → logprob: -20.125001907348633
    6. '(in' → logprob: -20.625001907348633
    7. ' ('' → logprob: -21.750001907348633
    8. '64' → logprob: -21.875001907348633
    9. '(
' → logprob: -22.125001907348633
    10. ''s' → logprob: -22.125001907348633

Token 1102: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.04286946356296539
    2. ''' → logprob: -3.2928695678710938
    3. ''ex' → logprob: -7.042869567871094
    4. 'inf' → logprob: -7.042869567871094
    5. ''op' → logprob: -7.917869567871094
    6. ''ins' → logprob: -8.167869567871094
    7. ''on' → logprob: -8.292869567871094
    8. ''un' → logprob: -8.292869567871094
    9. ''inc' → logprob: -8.292869567871094
    10. '"' → logprob: -8.417869567871094

Token 1103: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023257825523614883
    2. ')
' → logprob: -3.7732577323913574
    3. ' )' → logprob: -11.898258209228516
    4. ' )
' → logprob: -13.023258209228516
    5. ')
' → logprob: -13.148258209228516
    6. ')

' → logprob: -14.273258209228516
    7. '')' → logprob: -15.023258209228516
    8. '       ' → logprob: -15.648258209228516
    9. '')
' → logprob: -16.773258209228516
    10. '   ' → logprob: -16.773258209228516

Token 1104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11779520660638809
    2. '
' → logprob: -2.86779522895813
    3. ' while' → logprob: -3.49279522895813
    4. 'while' → logprob: -4.367794990539551
    5. '   ' → logprob: -5.117794990539551
    6. '        
' → logprob: -5.742794990539551
    7. '	while' → logprob: -6.742794990539551
    8. '    
' → logprob: -7.992794990539551
    9. '<|end|>' → logprob: -8.86779499053955
    10. ' 
' → logprob: -9.61779499053955

Token 1105: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0012818991672247648
    2. ' while' → logprob: -7.25128173828125
    3. '       ' → logprob: -7.50128173828125
    4. '	while' → logprob: -10.87628173828125
    5. '   ' → logprob: -15.25128173828125
    6. 'While' → logprob: -15.25128173828125
    7. '```' → logprob: -16.62628173828125
    8. 'flow' → logprob: -18.12628173828125
    9. 'wh' → logprob: -18.25128173828125
    10. '
' → logprob: -18.37628173828125

Token 1106: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028476715087890625
    2. ' self' → logprob: -5.877847671508789
    3. 'True' → logprob: -10.127847671508789
    4. '   ' → logprob: -13.752847671508789
    5. ' True' → logprob: -14.127847671508789
    6. '(self' → logprob: -14.252847671508789
    7. '	self' → logprob: -15.252847671508789
    8. '       ' → logprob: -16.50284767150879
    9. ' ' → logprob: -17.12784767150879
    10. '    ' → logprob: -17.37784767150879

Token 1107: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0023890873417258263
    2. 'b' → logprob: -7.127388954162598
    3. '.max' → logprob: -7.127388954162598
    4. 'max' → logprob: -7.502388954162598
    5. ' bfs' → logprob: -9.502388954162598
    6. 's' → logprob: -10.127388954162598
    7. '.s' → logprob: -10.252388954162598
    8. '.' → logprob: -10.377388954162598
    9. 'B' → logprob: -11.877388954162598
    10. ').' → logprob: -12.002388954162598

Token 1108: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -1.3663626305060461e-05
    2. '_fs' → logprob: -11.87501335144043
    3. 'FS' → logprob: -12.25001335144043
    4. 'f' → logprob: -14.37501335144043
    5. '   ' → logprob: -14.75001335144043
    6. 'sf' → logprob: -15.50001335144043
    7. 'read' → logprob: -15.50001335144043
    8. '
' → logprob: -16.12501335144043
    9. '```' → logprob: -16.62501335144043
    10. 'fsm' → logprob: -16.75001335144043

Token 1109: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.05563680827617645
    2. '_' → logprob: -2.9306368827819824
    3. '_(' → logprob: -7.680636882781982
    4. 'level' → logprob: -8.680636405944824
    5. '(s' → logprob: -9.680636405944824
    6. '(' → logprob: -11.555636405944824
    7. '_levels' → logprob: -12.055636405944824
    8. '_Level' → logprob: -12.055636405944824
    9. '   ' → logprob: -12.305636405944824
    10. ' (' → logprob: -12.430636405944824

Token 1110: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.125006675720215
    3. ' (' → logprob: -14.000006675720215
    4. 's' → logprob: -15.000006675720215
    5. '(
' → logprob: -16.62500762939453
    6. '(t' → logprob: -17.00000762939453
    7. ' s' → logprob: -18.12500762939453
    8. ',' → logprob: -19.00000762939453
    9. '((' → logprob: -19.75000762939453
    10. ')' → logprob: -19.75000762939453

Token 1111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013858173042535782
    2. ' ,' → logprob: -9.375138282775879
    3. ',t' → logprob: -10.000138282775879
    4. ',s' → logprob: -11.750138282775879
    5. ',
' → logprob: -15.500138282775879
    6. 't' → logprob: -16.750139236450195
    7. 's' → logprob: -17.500139236450195
    8. ',
' → logprob: -18.875139236450195
    9. '‌,' → logprob: -19.000139236450195
    10. '(),' → logprob: -19.000139236450195

Token 1112: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.9027791495318525e-05
    2. ' t' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.500019073486328
    4. '	t' → logprob: -18.500019073486328
    5. '`t' → logprob: -18.750019073486328
    6. ')t' → logprob: -19.875019073486328
    7. '
' → logprob: -20.625019073486328
    8. '       ' → logprob: -20.750019073486328
    9. '  ' → logprob: -21.000019073486328
    10. ' ' → logprob: -21.000019073486328

Token 1113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02168866991996765
    2. '):' → logprob: -3.89668869972229
    3. ')' → logprob: -7.271688461303711
    4. ' ,' → logprob: -8.146688461303711
    5. '):
' → logprob: -9.021688461303711
    6. ' ):' → logprob: -11.021688461303711
    7. ':' → logprob: -11.646688461303711
    8. ',
' → logprob: -13.021688461303711
    9. '       ' → logprob: -13.146688461303711
    10. '   ' → logprob: -13.896688461303711

Token 1114: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.0001234428636962548
    2. ' level' → logprob: -9.000123023986816
    3. '[level' → logprob: -21.000123977661133
    4. '	level' → logprob: -21.500123977661133
    5. '(level' → logprob: -22.625123977661133
    6. 'length' → logprob: -24.500123977661133
    7. 'levels' → logprob: -25.125123977661133
    8. '_level' → logprob: -25.375123977661133
    9. 'layer' → logprob: -26.250123977661133
    10. '.level' → logprob: -26.250123977661133

Token 1115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06328055262565613
    2. '):
' → logprob: -2.8132805824279785
    3. ':' → logprob: -6.6882805824279785
    4. ')' → logprob: -10.06328010559082
    5. '       ' → logprob: -12.18828010559082
    6. ' ):' → logprob: -12.18828010559082
    7. '):
' → logprob: -12.31328010559082
    8. ':
' → logprob: -12.56328010559082
    9. ',' → logprob: -13.43828010559082
    10. '():' → logprob: -14.06328010559082

Token 1116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009134899592027068
    2. '       ' → logprob: -7.125913619995117
    3. '```' → logprob: -10.500913619995117
    4. '
' → logprob: -11.125913619995117
    5. '<|end|>' → logprob: -11.125913619995117
    6. '   ' → logprob: -11.625913619995117
    7. '               ' → logprob: -11.875913619995117
    8. '            
' → logprob: -11.875913619995117
    9. '          ' → logprob: -12.000913619995117
    10. '	       ' → logprob: -12.125913619995117

Token 1117: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' (adapté à ' iter') → logprob: -0.00022535098833031952
    2. ' iter' → logprob: -8.500225067138672
    3. '           ' → logprob: -10.750225067138672
    4. '	iter' → logprob: -14.750225067138672
    5. '   ' → logprob: -18.125225067138672
    6. '               ' → logprob: -19.125225067138672
    7. '       ' → logprob: -19.250225067138672
    8. ' ' → logprob: -19.875225067138672
    9. '```' → logprob: -20.125225067138672
    10. '(iter' → logprob: -20.250225067138672

Token 1118: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010381679749116302
    2. '_=' → logprob: -6.876038074493408
    3. '_[' → logprob: -12.626038551330566
    4. '_
' → logprob: -14.501038551330566
    5. ' =' → logprob: -14.626038551330566
    6. '=' → logprob: -14.626038551330566
    7. '_:' → logprob: -15.126038551330566
    8. '_
' → logprob: -16.00103759765625
    9. '_,' → logprob: -16.62603759765625
    10. '_]' → logprob: -17.00103759765625

Token 1119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022545099258423
    2. ' =' → logprob: -1.9102253913879395
    3. '   ' → logprob: -14.660225868225098
    4. '[:]' → logprob: -15.035225868225098
    5. '=[' → logprob: -15.785225868225098
    6. '[' → logprob: -15.785225868225098
    7. ' ' → logprob: -16.28522491455078
    8. ' =[' → logprob: -16.41022491455078
    9. '	' → logprob: -17.03522491455078
    10. 's' → logprob: -17.03522491455078

Token 1120: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.840432565193623e-05
    2. ' [' → logprob: -9.375088691711426
    3. '[len' → logprob: -12.625088691711426
    4. '   ' → logprob: -17.12508773803711
    5. '0' → logprob: -17.50008773803711
    6. '[n' → logprob: -17.87508773803711
    7. '[i' → logprob: -18.00008773803711
    8. ' ' → logprob: -18.25008773803711
    9. '[int' → logprob: -18.25008773803711
    10. '[ind' → logprob: -18.62508773803711

Token 1121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -21.625
    4. '   ' → logprob: -22.0
    5. '```' → logprob: -22.75
    6. '000' → logprob: -23.125
    7. '０' → logprob: -23.6875
    8. '  ' → logprob: -24.0625
    9. '[' → logprob: -24.125
    10. '00' → logprob: -24.1875

Token 1122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023408757522702217
    2. ']*' → logprob: -4.148408889770508
    3. ' for' → logprob: -5.023408889770508
    4. 'for' → logprob: -7.773408889770508
    5. ' ]' → logprob: -8.273408889770508
    6. ')' → logprob: -10.398408889770508
    7. ',' → logprob: -10.523408889770508
    8. ']*(' → logprob: -11.773408889770508
    9. '<|end|>' → logprob: -12.148408889770508
    10. ' ' → logprob: -12.273408889770508

Token 1123: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4933537542819977
    2. 'for' → logprob: -1.8683537244796753
    3. '*' → logprob: -1.9933537244796753
    4. ' *' → logprob: -2.618353843688965
    5. ']' → logprob: -4.868353843688965
    6. '<len' → logprob: -4.993353843688965
    7. ']*' → logprob: -6.118353843688965
    8. '[len' → logprob: -6.118353843688965
    9. ' ' → logprob: -6.618353843688965
    10. '(len' → logprob: -6.868353843688965

Token 1124: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.700132997939363e-05
    2. '(len' → logprob: -11.000017166137695
    3. ' len' → logprob: -15.500017166137695
    4. '[len' → logprob: -19.500017166137695
    5. '	len' → logprob: -20.000017166137695
    6. ',len' → logprob: -22.250017166137695
    7. '<len' → logprob: -22.250017166137695
    8. '=len' → logprob: -22.250017166137695
    9. '   ' → logprob: -22.750017166137695
    10. '
' → logprob: -24.375017166137695

Token 1125: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.688212614681106e-05
    2. '(level' → logprob: -11.250017166137695
    3. 'self' → logprob: -12.500017166137695
    4. 'level' → logprob: -17.250017166137695
    5. '(' → logprob: -20.000017166137695
    6. '=self' → logprob: -20.375017166137695
    7. '[self' → logprob: -20.500017166137695
    8. ' self' → logprob: -21.250017166137695
    9. '	self' → logprob: -21.375017166137695
    10. ',self' → logprob: -22.250017166137695

Token 1126: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -1.700132997939363e-05
    2. '.level' → logprob: -11.125017166137695
    3. 'graph' → logprob: -13.375017166137695
    4. '(graph' → logprob: -15.000017166137695
    5. '.' → logprob: -15.500017166137695
    6. '	graph' → logprob: -16.500017166137695
    7. ' .' → logprob: -17.250017166137695
    8. '
' → logprob: -17.375017166137695
    9. '.graphics' → logprob: -17.875017166137695
    10. '.network' → logprob: -18.000017166137695

Token 1127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023250136524438858
    2. ')
' → logprob: -3.773250102996826
    3. ')
' → logprob: -13.273250579833984
    4. '       ' → logprob: -13.773250579833984
    5. ' )' → logprob: -13.773250579833984
    6. ')

' → logprob: -15.648250579833984
    7. ' )
' → logprob: -15.773250579833984
    8. ' ' → logprob: -16.398250579833984
    9. '           ' → logprob: -16.398250579833984
    10. '   ' → logprob: -16.523250579833984

Token 1128: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00275815324857831
    2. '       ' → logprob: -6.252758026123047
    3. '               ' → logprob: -8.877758026123047
    4. '<|end|>' → logprob: -8.877758026123047
    5. '		' → logprob: -9.002758026123047
    6. '   ' → logprob: -9.127758026123047
    7. '	       ' → logprob: -9.502758026123047
    8. '```' → logprob: -10.252758026123047
    9. '
' → logprob: -10.502758026123047
    10. ' while' → logprob: -10.752758026123047

Token 1129: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.12880654633045197
    2. 'f' → logprob: -2.1288065910339355
    3. '           ' → logprob: -6.3788065910339355
    4. ' while' → logprob: -8.753806114196777
    5. ' f' → logprob: -11.753806114196777
    6. 'flow' → logprob: -12.003806114196777
    7. 'F' → logprob: -12.753806114196777
    8. 'While' → logprob: -13.878806114196777
    9. '            
' → logprob: -14.253806114196777
    10. 'df' → logprob: -14.378806114196777

Token 1130: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.026020310819149017
    2. ' True' → logprob: -3.7760202884674072
    3. '(True' → logprob: -5.901020526885986
    4. '   ' → logprob: -11.651020050048828
    5. '1' → logprob: -11.901020050048828
    6. '(' → logprob: -12.151020050048828
    7. 'd' → logprob: -12.401020050048828
    8. ' (' → logprob: -12.651020050048828
    9. ' ' → logprob: -12.651020050048828
    10. 't' → logprob: -13.776020050048828

Token 1131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2840101420879364
    2. '               ' → logprob: -1.7840101718902588
    3. ':
' → logprob: -3.159010171890259
    4. '           ' → logprob: -4.03400993347168
    5. ',' → logprob: -4.65900993347168
    6. '<|end|>' → logprob: -5.40900993347168
    7. '.' → logprob: -6.90900993347168
    8. '<|end|>' → logprob: -7.65900993347168
    9. ',
' → logprob: -7.78400993347168
    10. ' and' → logprob: -7.90900993347168

Token 1132: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024737550411373377
    2. 'd' → logprob: -6.252473831176758
    3. ' d' → logprob: -7.752473831176758
    4. '   ' → logprob: -10.127473831176758
    5. '                   ' → logprob: -10.127473831176758
    6. '           ' → logprob: -11.502473831176758
    7. '	           ' → logprob: -12.377473831176758
    8. 'f' → logprob: -12.502473831176758
    9. '                ' → logprob: -12.752473831176758
    10. '              ' → logprob: -13.127473831176758

Token 1133: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.5888068675994873
    2. 'd' → logprob: -0.8388068675994873
    3. '                   ' → logprob: -4.713807106018066
    4. ' f' → logprob: -5.963807106018066
    5. ' d' → logprob: -7.213807106018066
    6. 'flow' → logprob: -8.088807106018066
    7. 't' → logprob: -10.088807106018066
    8. '	d' → logprob: -10.463807106018066
    9. '               ' → logprob: -10.713807106018066
    10. 'delta' → logprob: -10.838807106018066

Token 1134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07894476503133774
    2. '=' → logprob: -2.578944683074951
    3. ' ' → logprob: -10.20394515991211
    4. '_' → logprob: -11.32894515991211
    5. '=f' → logprob: -13.45394515991211
    6. '_=' → logprob: -13.95394515991211
    7. '.' → logprob: -14.82894515991211
    8. '  ' → logprob: -14.82894515991211
    9. 's' → logprob: -15.20394515991211
    10. '	' → logprob: -15.32894515991211

Token 1135: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326544284820557
    2. ' self' → logprob: -1.3132654428482056
    3. '               ' → logprob: -12.813265800476074
    4. '(self' → logprob: -14.688265800476074
    5. '                   ' → logprob: -15.438265800476074
    6. '0' → logprob: -15.938265800476074
    7. '	self' → logprob: -16.063264846801758
    8. ' ' → logprob: -17.438264846801758
    9. 'Self' → logprob: -17.688264846801758
    10. '[self' → logprob: -17.688264846801758

Token 1136: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.07164034247398376
    2. '.' → logprob: -2.6966402530670166
    3. 'dfs' → logprob: -6.946640491485596
    4. ' .' → logprob: -7.571640491485596
    5. '.max' → logprob: -9.071640014648438
    6. ' dfs' → logprob: -10.571640014648438
    7. ' ' → logprob: -10.696640014648438
    8. '   ' → logprob: -11.571640014648438
    9. '.flow' → logprob: -11.571640014648438
    10. '._' → logprob: -11.571640014648438

Token 1137: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.008219508454203606
    2. 's' → logprob: -5.0082197189331055
    3. 'sf' → logprob: -6.5082197189331055
    4. 'f' → logprob: -12.508219718933105
    5. ' fs' → logprob: -12.633219718933105
    6. '_fs' → logprob: -13.008219718933105
    7. '(fs' → logprob: -13.758219718933105
    8. '   ' → logprob: -15.133219718933105
    9. '(s' → logprob: -15.633219718933105
    10. ' s' → logprob: -15.758219718933105

Token 1138: '_flow' (ID: 63802)
  Prédit: '_flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -2.570319702499546e-05
    2. '_' → logprob: -10.875025749206543
    3. '_FLOW' → logprob: -13.500025749206543
    4. '_(' → logprob: -13.875025749206543
    5. '(v' → logprob: -13.875025749206543
    6. '_
' → logprob: -14.125025749206543
    7. '(flow' → logprob: -14.125025749206543
    8. '_f' → logprob: -15.125025749206543
    9. '_flux' → logprob: -15.125025749206543
    10. '
' → logprob: -15.375025749206543

Token 1139: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0003500050224829465
    2. '(t' → logprob: -8.000349998474121
    3. 's' → logprob: -11.750349998474121
    4. '(' → logprob: -12.000349998474121
    5. ' (' → logprob: -15.125349998474121
    6. '(
' → logprob: -16.375350952148438
    7. ' s' → logprob: -16.625350952148438
    8. 't' → logprob: -17.000350952148438
    9. '(v' → logprob: -18.125350952148438
    10. '   ' → logprob: -18.625350952148438

Token 1140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.967624019831419e-05
    2. '               ' → logprob: -10.625060081481934
    3. ' ,' → logprob: -11.250060081481934
    4. '(s' → logprob: -11.375060081481934
    5. ',s' → logprob: -12.000060081481934
    6. ',
' → logprob: -13.250060081481934
    7. '(' → logprob: -13.375060081481934
    8. ',t' → logprob: -14.750060081481934
    9. '                   ' → logprob: -15.500060081481934
    10. ',f' → logprob: -16.250059127807617

Token 1141: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0004952482995577157
    2. ' t' → logprob: -7.625495433807373
    3. '   ' → logprob: -12.125494956970215
    4. '  ' → logprob: -14.750494956970215
    5. ' ' → logprob: -15.125494956970215
    6. '           ' → logprob: -15.250494956970215
    7. '	t' → logprob: -15.250494956970215
    8. '    ' → logprob: -15.375494956970215
    9. '       ' → logprob: -15.875494956970215
    10. '     ' → logprob: -16.37549591064453

Token 1142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -13.625001907348633
    3. '               ' → logprob: -15.375001907348633
    4. '(),' → logprob: -15.750001907348633
    5. ',float' → logprob: -16.250001907348633
    6. ',
' → logprob: -16.375001907348633
    7. ',f' → logprob: -16.750001907348633
    8. '                   ' → logprob: -17.000001907348633
    9. '(' → logprob: -17.250001907348633
    10. ')' → logprob: -17.875001907348633

Token 1143: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -3.128163257315464e-07
    2. ' INF' → logprob: -15.5
    3. 'float' → logprob: -18.125
    4. '   ' → logprob: -19.625
    5. 'inf' → logprob: -20.125
    6. '_INF' → logprob: -20.25
    7. 'IN' → logprob: -21.0
    8. 'FLOAT' → logprob: -22.25
    9. '-INF' → logprob: -22.375
    10. '
' → logprob: -22.375

Token 1144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.329167369287461e-05
    2. '               ' → logprob: -9.750093460083008
    3. ' ,' → logprob: -11.500093460083008
    4. '           ' → logprob: -12.250093460083008
    5. '                   ' → logprob: -12.250093460083008
    6. ')' → logprob: -12.375093460083008
    7. '),' → logprob: -12.500093460083008
    8. ')
' → logprob: -13.000093460083008
    9. '   ' → logprob: -13.250093460083008
    10. '       ' → logprob: -13.875093460083008

Token 1145: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.001502717612311244
    2. ' iter' → logprob: -6.501502513885498
    3. '	iter' → logprob: -15.626502990722656
    4. '(iter' → logprob: -16.376502990722656
    5. '               ' → logprob: -16.751502990722656
    6. '           ' → logprob: -17.251502990722656
    7. '   ' → logprob: -18.626502990722656
    8. ' ' → logprob: -18.876502990722656
    9. '_iter' → logprob: -19.751502990722656
    10. '                   ' → logprob: -20.126502990722656

Token 1146: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0022518415935337543
    2. '_' → logprob: -6.252251625061035
    3. '_[' → logprob: -8.252251625061035
    4. '_)' → logprob: -10.127251625061035
    5. '_),' → logprob: -10.877251625061035
    6. '_,
' → logprob: -13.502251625061035
    7. ',' → logprob: -14.877251625061035
    8. '_=' → logprob: -14.877251625061035
    9. '__,' → logprob: -15.127251625061035
    10. '_
' → logprob: -15.252251625061035

Token 1147: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -7.493430894101039e-05
    2. ' level' → logprob: -9.500075340270996
    3. '[level' → logprob: -17.50007438659668
    4. '	level' → logprob: -18.75007438659668
    5. 'length' → logprob: -19.37507438659668
    6. '(level' → logprob: -19.50007438659668
    7. '           ' → logprob: -20.62507438659668
    8. 'layer' → logprob: -20.87507438659668
    9. ')' → logprob: -21.37507438659668
    10. ' ' → logprob: -21.50007438659668

Token 1148: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23478999733924866
    2. ')' → logprob: -1.9847899675369263
    3. '):
' → logprob: -2.984790086746216
    4. '):' → logprob: -4.109789848327637
    5. '                   ' → logprob: -5.484789848327637
    6. ')
' → logprob: -8.234789848327637
    7. '           ' → logprob: -8.859789848327637
    8. '              ' → logprob: -10.234789848327637
    9. '):

' → logprob: -10.234789848327637
    10. ',' → logprob: -10.359789848327637

Token 1149: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04872385039925575
    2. '                   ' → logprob: -3.0487239360809326
    3. '           ' → logprob: -10.173724174499512
    4. ' if' → logprob: -10.798724174499512
    5. '                       ' → logprob: -10.923724174499512
    6. '		           ' → logprob: -11.798724174499512
    7. '	               ' → logprob: -11.923724174499512
    8. '                ' → logprob: -11.923724174499512
    9. '<|end|>' → logprob: -11.923724174499512
    10. '	           ' → logprob: -12.173724174499512

Token 1150: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6015455722808838
    2. 'if' (adapté à ' if') → logprob: -0.9765455722808838
    3. '               ' → logprob: -2.601545572280884
    4. '                   ' → logprob: -6.726545333862305
    5. '	if' → logprob: -10.601545333862305
    6. '           ' → logprob: -11.726545333862305
    7. '0' → logprob: -11.976545333862305
    8. ';if' → logprob: -12.351545333862305
    9. '	           ' → logprob: -12.476545333862305
    10. '   ' → logprob: -12.476545333862305

Token 1151: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2352385965641588e-05
    2. 'abs' → logprob: -11.875012397766113
    3. ' f' → logprob: -12.250012397766113
    4. '   ' → logprob: -14.500012397766113
    5. '	f' → logprob: -17.375011444091797
    6. ' ' → logprob: -17.625011444091797
    7. 'fabs' → logprob: -18.000011444091797
    8. '  ' → logprob: -18.125011444091797
    9. ' abs' → logprob: -18.375011444091797
    10. '    ' → logprob: -20.000011444091797

Token 1152: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.36881333589553833
    2. ' <' → logprob: -1.4938132762908936
    3. '<=' → logprob: -2.6188132762908936
    4. '<' → logprob: -4.618813514709473
    5. ' ==' → logprob: -6.993813514709473
    6. '==' → logprob: -8.368813514709473
    7. ' ' → logprob: -11.868813514709473
    8. ')<=' → logprob: -12.618813514709473
    9. ' ' → logprob: -12.868813514709473
    10. '	' → logprob: -12.993813514709473

Token 1153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.62520408630371
    4. '0' → logprob: -17.25020408630371
    5. '  ' → logprob: -18.87520408630371
    6. '```' → logprob: -19.75020408630371
    7. ' ' → logprob: -19.87520408630371
    8. '	' → logprob: -21.00020408630371
    9. '１' → logprob: -21.68770408630371
    10. '2' → logprob: -21.87520408630371

Token 1154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '0' → logprob: -16.2500057220459
    4. '   ' → logprob: -19.0000057220459
    5. '```' → logprob: -20.7500057220459
    6. ' ' → logprob: -21.2500057220459
    7. '  ' → logprob: -21.3750057220459
    8. '(' → logprob: -21.5000057220459
    9. '１' → logprob: -21.5000057220459
    10. '	' → logprob: -21.5000057220459

Token 1155: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0005535095697268844
    2. '-' → logprob: -7.500553607940674
    3. '-e' → logprob: -15.250553131103516
    4. '1' → logprob: -15.500553131103516
    5. ' -' → logprob: -16.875553131103516
    6. ' e' → logprob: -17.875553131103516
    7. '```' → logprob: -19.000553131103516
    8. 'E' → logprob: -19.125553131103516
    9. '.e' → logprob: -19.375553131103516
    10. '   ' → logprob: -19.625553131103516

Token 1156: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -19.25
    3. '15' → logprob: -20.25
    4. '```' → logprob: -21.125
    5. 'e' → logprob: -21.5
    6. '   ' → logprob: -21.875
    7. '-=' → logprob: -22.0
    8. '+' → logprob: -22.0
    9. '^-' → logprob: -22.25
    10. '-
' → logprob: -22.375

Token 1157: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0001987722353078425
    2. '-' → logprob: -9.375198364257812
    3. '14' → logprob: -10.000198364257812
    4. '12' → logprob: -10.000198364257812
    5. '10' → logprob: -11.125198364257812
    6. '13' → logprob: -12.250198364257812
    7. '8' → logprob: -14.000198364257812
    8. '9' → logprob: -14.000198364257812
    9. '```' → logprob: -14.875198364257812
    10. '7' → logprob: -15.000198364257812

Token 1158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5220975279808044
    2. ':
' → logprob: -1.0220975875854492
    3. '                   ' → logprob: -3.522097587585449
    4. '               ' → logprob: -4.147097587585449
    5. '           ' → logprob: -6.772097587585449
    6. '                       ' → logprob: -8.77209758758545
    7. ':
' → logprob: -10.14709758758545
    8. 'break' → logprob: -10.14709758758545
    9. '                  ' → logprob: -10.27209758758545
    10. '   ' → logprob: -10.39709758758545

Token 1159: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.147740689106286e-05
    2. '               ' → logprob: -10.62507152557373
    3. '                       ' → logprob: -11.00007152557373
    4. 'break' → logprob: -11.50007152557373
    5. '		           ' → logprob: -12.25007152557373
    6. '				' → logprob: -12.37507152557373
    7. '                  ' → logprob: -12.87507152557373
    8. '	               ' → logprob: -13.00007152557373
    9. '           ' → logprob: -13.62507152557373
    10. '	break' → logprob: -13.75007152557373

Token 1160: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16211378574371338
    2. 'break' (adapté à ' break') → logprob: -1.9121137857437134
    3. '                       ' → logprob: -6.787113666534424
    4. ' break' → logprob: -7.662113666534424
    5. '   ' → logprob: -8.912114143371582
    6. '               ' → logprob: -9.662114143371582
    7. '	break' → logprob: -9.912114143371582
    8. '                  ' → logprob: -11.412114143371582
    9. '           ' → logprob: -11.787114143371582
    10. '                    ' → logprob: -11.787114143371582

Token 1161: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006557276356033981
    2. '           ' → logprob: -8.125656127929688
    3. '
' → logprob: -8.375656127929688
    4. '       ' → logprob: -10.125656127929688
    5. '                   ' → logprob: -10.625656127929688
    6. '                
' → logprob: -10.750656127929688
    7. '              ' → logprob: -10.875656127929688
    8. '<|end|>' → logprob: -12.000656127929688
    9. '                ' → logprob: -12.500656127929688
    10. '   ' → logprob: -13.000656127929688

Token 1162: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015608683228492737
    2. '           ' → logprob: -4.265608787536621
    3. '
' → logprob: -7.265608787536621
    4. '                   ' → logprob: -8.015608787536621
    5. '       ' → logprob: -8.890608787536621
    6. '```' → logprob: -9.265608787536621
    7. '              ' → logprob: -9.765608787536621
    8. '                ' → logprob: -10.640608787536621
    9. '                
' → logprob: -10.765608787536621
    10. '(flow' → logprob: -11.265608787536621

Token 1163: ' flow' (ID: 7845)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' (adapté à ' flow') → logprob: -0.05856611207127571
    2. ' flow' → logprob: -3.558566093444824
    3. '               ' → logprob: -3.683566093444824
    4. '                   ' → logprob: -5.808566093444824
    5. '           ' → logprob: -9.308566093444824
    6. '(flow' → logprob: -9.308566093444824
    7. '                       ' → logprob: -10.683566093444824
    8. '
' → logprob: -10.808566093444824
    9. '.flow' → logprob: -11.308566093444824
    10. '   ' → logprob: -11.558566093444824

Token 1164: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10021217912435532
    2. '+=' → logprob: -2.3502120971679688
    3. ']+=' → logprob: -12.725212097167969
    4. '+' → logprob: -13.350212097167969
    5. ' ' → logprob: -15.100212097167969
    6. '+="' → logprob: -16.22521209716797
    7. ' +' → logprob: -16.22521209716797
    8. '   ' → logprob: -16.22521209716797
    9. '+='' → logprob: -16.47521209716797
    10. '+=(' → logprob: -16.60021209716797

Token 1165: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3132616877555847
    2. ' f' → logprob: -1.3132617473602295
    3. '	f' → logprob: -18.188261032104492
    4. 'd' → logprob: -19.313261032104492
    5. '               ' → logprob: -19.563261032104492
    6. ' ' → logprob: -19.813261032104492
    7. ' ' → logprob: -19.938261032104492
    8. '
' → logprob: -22.188261032104492
    9. ' d' → logprob: -22.688261032104492
    10. '_f' → logprob: -22.813261032104492

Token 1166: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006897831801325083
    2. '
' → logprob: -5.006897926330566
    3. 'return' → logprob: -9.506897926330566
    4. '        
' → logprob: -10.131897926330566
    5. ' return' → logprob: -10.881897926330566
    6. '<|end|>' → logprob: -11.131897926330566
    7. '           ' → logprob: -11.256897926330566
    8. '    
' → logprob: -12.506897926330566
    9. '
' → logprob: -12.881897926330566
    10. '	' → logprob: -12.881897926330566

Token 1167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16250964999198914
    2. '
' → logprob: -1.9125096797943115
    3. '        
' → logprob: -6.662509441375732
    4. 'return' → logprob: -8.16250991821289
    5. ' 
' → logprob: -8.16250991821289
    6. '  
' → logprob: -8.91250991821289
    7. ' return' → logprob: -9.16250991821289
    8. '    
' → logprob: -9.53750991821289
    9. '
' → logprob: -10.41250991821289
    10. '<|end|>' → logprob: -10.78750991821289

Token 1168: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0053356243297457695
    2. 'return' (adapté à ' return') → logprob: -5.380335807800293
    3. ' return' → logprob: -7.505335807800293
    4. '   ' → logprob: -9.255335807800293
    5. '
' → logprob: -9.755335807800293
    6. '	return' → logprob: -12.380335807800293
    7. '           ' → logprob: -12.505335807800293
    8. '      ' → logprob: -13.880335807800293
    9. '	' → logprob: -14.755335807800293
    10. '     ' → logprob: -14.755335807800293

Token 1169: ' flow' (ID: 7845)
  Prédit: ' flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flow' → logprob: -0.07888978719711304
    2. 'flow' → logprob: -2.578889846801758
    3. 'float' → logprob: -17.203889846801758
    4. '(flow' → logprob: -17.203889846801758
    5. 'flo' → logprob: -18.078889846801758
    6. ' float' → logprob: -18.203889846801758
    7. 'flux' → logprob: -20.703889846801758
    8. '.flow' → logprob: -20.828889846801758
    9. ' flo' → logprob: -21.078889846801758
    10. '_flow' → logprob: -21.703889846801758

Token 1170: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2912500202655792
    2. '<|end|>' → logprob: -1.4162499904632568
    3. '

' → logprob: -5.416250228881836
    4. 'def' → logprob: -5.666250228881836
    5. '<|end|>' → logprob: -6.916250228881836
    6. '#' → logprob: -8.041250228881836
    7. '```' → logprob: -8.291250228881836
    8. '\n' → logprob: -9.166250228881836
    9. '(
' → logprob: -9.541250228881836
    10. '[' → logprob: -9.666250228881836

Token 1171: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2608446478843689
    2. 'class' → logprob: -1.7608447074890137
    3. '
' → logprob: -2.8858447074890137
    4. '

' → logprob: -6.760844707489014
    5. '<|end|>' → logprob: -8.510844230651855
    6. 'import' → logprob: -9.135844230651855
    7. '```' → logprob: -9.135844230651855
    8. '#' → logprob: -9.260844230651855
    9. ' class' → logprob: -10.260844230651855
    10. '    
' → logprob: -10.260844230651855

Token 1172: ' Corridor' (ID: 181371)
  Prédit: 'Visibility'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Visibility' → logprob: -0.8993455171585083
    2. 'Rectangle' → logprob: -1.6493455171585083
    3. ' Visibility' → logprob: -3.0243453979492188
    4. 'Circle' → logprob: -3.1493453979492188
    5. 'Polygon' → logprob: -3.1493453979492188
    6. 'Solution' → logprob: -3.1493453979492188
    7. 'Obstacle' → logprob: -3.5243453979492188
    8. 'Graph' → logprob: -3.7743453979492188
    9. 'Path' → logprob: -4.024345397949219
    10. 'Channel' → logprob: -4.149345397949219

Token 1173: 'Model' (ID: 2239)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00040528984391130507
    2. ':
' → logprob: -8.000405311584473
    3. '(' → logprob: -10.000405311584473
    4. ' :' → logprob: -11.625405311584473
    5. '{' → logprob: -13.000405311584473
    6. '):' → logprob: -13.125405311584473
    7. 'Area' → logprob: -13.375405311584473
    8. '<|end|>' → logprob: -13.500405311584473
    9. '():' → logprob: -13.625405311584473
    10. '(object' → logprob: -14.375405311584473

Token 1174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024881421122699976
    2. ':
' → logprob: -6.002488136291504
    3. ' :' → logprob: -11.502488136291504
    4. ':def' → logprob: -13.877488136291504
    5. ':

' → logprob: -14.377488136291504
    6. '(' → logprob: -15.252488136291504
    7. '):' → logprob: -15.752488136291504
    8. ' :
' → logprob: -15.752488136291504
    9. ':
' → logprob: -16.12748908996582
    10. '   ' → logprob: -16.25248908996582

Token 1175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.47626737493556e-05
    2. '__' → logprob: -11.00003433227539
    3. ' __' → logprob: -11.75003433227539
    4. '
' → logprob: -12.62503433227539
    5. '	def' → logprob: -13.25003433227539
    6. ' def' → logprob: -13.75003433227539
    7. '[' → logprob: -14.62503433227539
    8. '\t' → logprob: -14.62503433227539
    9. '   ' → logprob: -14.62503433227539
    10. '    
' → logprob: -14.62503433227539

Token 1176: ' def' (ID: 1056)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.28322768211364746
    2. ' __' → logprob: -1.4082276821136475
    3. '   ' → logprob: -6.408227920532227
    4. 'def' (adapté à ' def') → logprob: -8.283227920532227
    5. ' def' → logprob: -8.783227920532227
    6. 'class' → logprob: -11.033227920532227
    7. '.__' → logprob: -13.033227920532227
    8. '___' → logprob: -13.908227920532227
    9. '```' → logprob: -14.408227920532227
    10. '	' → logprob: -14.658227920532227

Token 1177: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0073592099361121655
    2. ' __' → logprob: -5.632359027862549
    3. 'init' → logprob: -5.882359027862549
    4. 'def' → logprob: -7.382359027862549
    5. '```' → logprob: -8.757359504699707
    6. '___' → logprob: -10.132359504699707
    7. '____' → logprob: -10.257359504699707
    8. '...' → logprob: -10.632359504699707
    9. '_init' → logprob: -10.757359504699707
    10. '.__' → logprob: -11.257359504699707

Token 1178: 'init' (ID: 3287)
  Prédit: 'slots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.06197340786457062
    2. 'init' → logprob: -2.8119733333587646
    3. 'slot' → logprob: -12.186973571777344
    4. '_slots' → logprob: -14.561973571777344
    5. 'sl' → logprob: -16.186973571777344
    6. ' slots' → logprob: -16.311973571777344
    7. 'tabs' → logprob: -19.186973571777344
    8. 'Slots' → logprob: -19.311973571777344
    9. '_init' → logprob: -19.811973571777344
    10. 'code' → logprob: -20.061973571777344

Token 1179: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012755783274769783
    2. '(self' → logprob: -4.512755870819092
    3. '__(
' → logprob: -7.137755870819092
    4. '(' → logprob: -7.387755870819092
    5. '__' → logprob: -8.262755393981934
    6. ' (' → logprob: -11.262755393981934
    7. '__((' → logprob: -11.512755393981934
    8. '_(' → logprob: -12.512755393981934
    9. 'self' → logprob: -13.012755393981934
    10. '__("' → logprob: -13.387755393981934

Token 1180: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.1928003813372925e-05
    2. '
' → logprob: -10.750051498413086
    3. ' self' → logprob: -11.125051498413086
    4. '       ' → logprob: -11.750051498413086
    5. '   ' → logprob: -12.375051498413086
    6. '0' → logprob: -13.625051498413086
    7. ')' → logprob: -14.000051498413086
    8. '):
' → logprob: -15.000051498413086
    9. ',' → logprob: -15.500051498413086
    10. '(self' → logprob: -15.500051498413086

Token 1181: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0064698681235313416
    2. ',' → logprob: -5.6314697265625
    3. ' self' → logprob: -5.8814697265625
    4. '(self' → logprob: -10.1314697265625
    5. ')' → logprob: -11.1314697265625
    6. '
' → logprob: -12.3814697265625
    7. '   ' → logprob: -12.3814697265625
    8. ',self' → logprob: -12.7564697265625
    9. ' ' → logprob: -13.3814697265625
    10. 'def' → logprob: -13.8814697265625

Token 1182: ' width' (ID: 4345)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pol' → logprob: -1.6437195539474487
    2. 'points' → logprob: -1.6437195539474487
    3. 'self' → logprob: -2.0187196731567383
    4. 'corr' → logprob: -2.1437196731567383
    5. 'ob' → logprob: -2.2687196731567383
    6. 'width' → logprob: -2.3937196731567383
    7. 'start' → logprob: -3.6437196731567383
    8. 'rect' → logprob: -3.6437196731567383
    9. 'entr' → logprob: -4.018719673156738
    10. 'vertices' → logprob: -4.518719673156738

Token 1183: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03829255700111389
    2. '=' → logprob: -3.413292646408081
    3. ',' → logprob: -5.413292407989502
    4. '):' → logprob: -8.91329288482666
    5. ':int' → logprob: -11.41329288482666
    6. '=float' → logprob: -11.41329288482666
    7. ')' → logprob: -11.53829288482666
    8. '_:' → logprob: -12.53829288482666
    9. ' :' → logprob: -13.16329288482666
    10. '=int' → logprob: -13.16329288482666

Token 1184: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.06996723264455795
    2. ' float' → logprob: -2.694967269897461
    3. 'int' → logprob: -11.194967269897461
    4. 'flo' → logprob: -11.944967269897461
    5. ' ' → logprob: -12.944967269897461
    6. ')' → logprob: -13.194967269897461
    7. '=float' → logprob: -13.319967269897461
    8. ',float' → logprob: -13.694967269897461
    9. ' int' → logprob: -13.944967269897461
    10. '	float' → logprob: -14.069967269897461

Token 1185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005982831586152315
    2. '):' → logprob: -5.130982875823975
    3. ' ,' → logprob: -10.505982398986816
    4. ')' → logprob: -11.505982398986816
    5. '   ' → logprob: -11.880982398986816
    6. '):
' → logprob: -12.380982398986816
    7. ',width' → logprob: -13.380982398986816
    8. '       ' → logprob: -13.505982398986816
    9. ' ):' → logprob: -13.755982398986816
    10. ',
' → logprob: -14.255982398986816

Token 1186: ' pillars' (ID: 105506)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -1.1153091192245483
    2. 'ob' → logprob: -1.4903091192245483
    3. 'length' → logprob: -1.9903091192245483
    4. 'pol' → logprob: -2.115309238433838
    5. 'start' → logprob: -3.115309238433838
    6. 'left' → logprob: -3.240309238433838
    7. 'walls' → logprob: -4.365309238433838
    8. 'entr' → logprob: -4.490309238433838
    9. 'holes' → logprob: -4.490309238433838
    10. 'polygon' → logprob: -4.615309238433838

Token 1187: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002286886883666739
    2. '=' → logprob: -9.125228881835938
    3. '_points' → logprob: -9.375228881835938
    4. '_positions' → logprob: -10.750228881835938
    5. '_:' → logprob: -12.500228881835938
    6. 's' → logprob: -13.750228881835938
    7. '):' → logprob: -14.000228881835938
    8. ' :' → logprob: -14.125228881835938
    9. ')' → logprob: -14.250228881835938
    10. '=[]' → logprob: -14.375228881835938

Token 1188: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -4.668304245569743e-05
    2. '[List' → logprob: -10.500046730041504
    3. '   ' → logprob: -11.625046730041504
    4. ' List' → logprob: -12.000046730041504
    5. '       ' → logprob: -13.000046730041504
    6. '           ' → logprob: -14.125046730041504
    7. 'list' → logprob: -15.000046730041504
    8. ')' → logprob: -16.000045776367188
    9. '
' → logprob: -16.125045776367188
    10. 'Optional' → logprob: -16.625045776367188

Token 1189: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004417893942445517
    2. '[List' → logprob: -5.504417896270752
    3. '['' → logprob: -8.004417419433594
    4. '[int' → logprob: -12.879417419433594
    5. '[str' → logprob: -14.004417419433594
    6. '[
' → logprob: -14.129417419433594
    7. ')' → logprob: -15.254417419433594
    8. '[np' → logprob: -15.379417419433594
    9. '<Point' → logprob: -15.629417419433594
    10. ']' → logprob: -16.004417419433594

Token 1190: 'Polygon' (ID: 48860)
  Prédit: 'Polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Polygon' → logprob: -0.07546407729387283
    2. 'Point' → logprob: -2.7004640102386475
    3. 'List' → logprob: -5.950464248657227
    4. 'Tuple' → logprob: -6.200464248657227
    5. ''' → logprob: -7.825464248657227
    6. 'Rectangle' → logprob: -9.325464248657227
    7. 'Optional' → logprob: -9.825464248657227
    8. 'float' → logprob: -10.075464248657227
    9. 'Polyline' → logprob: -10.075464248657227
    10. 'Edge' → logprob: -10.200464248657227

Token 1191: ']):
' (ID: 51989)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4634609520435333
    2. ']):' → logprob: -1.838460922241211
    3. ']):
' → logprob: -2.088460922241211
    4. '],' → logprob: -2.713460922241211
    5. '):' → logprob: -4.338460922241211
    6. ']' → logprob: -5.838460922241211
    7. '):
' → logprob: -6.088460922241211
    8. ')' → logprob: -6.463460922241211
    9. '),' → logprob: -7.213460922241211
    10. '])' → logprob: -7.338460922241211

Token 1192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04918971285223961
    2. ':' → logprob: -3.674189805984497
    3. ':
' → logprob: -4.299189567565918
    4. ',' → logprob: -4.799189567565918
    5. '   ' → logprob: -7.924189567565918
    6. '):
' → logprob: -8.299189567565918
    7. ')' → logprob: -9.799189567565918
    8. '.' → logprob: -10.174189567565918
    9. '):' → logprob: -10.299189567565918
    10. '```' → logprob: -11.299189567565918

Token 1193: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00016480287013109773
    2. '       ' → logprob: -8.750164985656738
    3. ' self' → logprob: -12.000164985656738
    4. '
' → logprob: -17.625164031982422
    5. '   ' → logprob: -17.625164031982422
    6. 'super' → logprob: -19.875164031982422
    7. '	self' → logprob: -20.125164031982422
    8. '        
' → logprob: -21.000164031982422
    9. '(self' → logprob: -21.250164031982422
    10. '```' → logprob: -22.250164031982422

Token 1194: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.0013447580859065056
    2. '.' → logprob: -6.626344680786133
    3. ' .' → logprob: -11.751344680786133
    4. '.w' → logprob: -12.251344680786133
    5. 'width' → logprob: -12.251344680786133
    6. '.height' → logprob: -15.126344680786133
    7. '       ' → logprob: -15.501344680786133
    8. '	width' → logprob: -16.001344680786133
    9. '   ' → logprob: -16.126344680786133
    10. '.
' → logprob: -16.251344680786133

Token 1195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014213353395462
    2. '=' → logprob: -1.7014213800430298
    3. ' ' → logprob: -12.826421737670898
    4. ',' → logprob: -13.326421737670898
    5. '   ' → logprob: -13.326421737670898
    6. '_' → logprob: -14.826421737670898
    7. ':' → logprob: -15.076421737670898
    8. '    ' → logprob: -15.201421737670898
    9. '.' → logprob: -15.326421737670898
    10. '=self' → logprob: -15.451421737670898

Token 1196: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.023245595395565033
    2. ' width' → logprob: -3.7732455730438232
    3. '	width' → logprob: -17.023244857788086
    4. 'wide' → logprob: -17.773244857788086
    5. '   ' → logprob: -18.148244857788086
    6. '(width' → logprob: -18.148244857788086
    7. 'w' → logprob: -19.023244857788086
    8. '       ' → logprob: -19.148244857788086
    9. 'wid' → logprob: -20.648244857788086
    10. ' ' → logprob: -20.773244857788086

Token 1197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02521309070289135
    2. '
' → logprob: -4.275213241577148
    3. '<|end|>' → logprob: -4.525213241577148
    4. ',' → logprob: -10.275213241577148
    5. '<|end|>' → logprob: -10.775213241577148
    6. '   ' → logprob: -10.775213241577148
    7. ' ' → logprob: -10.900213241577148
    8. 'self' → logprob: -11.150213241577148
    9. '.' → logprob: -11.650213241577148
    10. '        
' → logprob: -11.900213241577148

Token 1198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030252449214458466
    2. 'self' → logprob: -6.128025054931641
    3. '
' → logprob: -7.753025054931641
    4. ' self' → logprob: -8.25302505493164
    5. '<|end|>' → logprob: -9.37802505493164
    6. '   ' → logprob: -10.62802505493164
    7. ' ' → logprob: -11.12802505493164
    8. ',' → logprob: -11.75302505493164
    9. '      ' → logprob: -12.62802505493164
    10. 'def' → logprob: -12.87802505493164

Token 1199: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.5213274309644476e-05
    2. ' self' → logprob: -11.875015258789062
    3. '       ' → logprob: -12.000015258789062
    4. 'pill' → logprob: -13.375015258789062
    5. 'assert' → logprob: -16.125015258789062
    6. '
' → logprob: -16.625015258789062
    7. '#' → logprob: -16.625015258789062
    8. '   ' → logprob: -16.875015258789062
    9. '	self' → logprob: -17.375015258789062
    10. 'for' → logprob: -17.375015258789062

Token 1200: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.20281602442264557
    2. '.width' → logprob: -2.0778160095214844
    3. '.height' → logprob: -3.3278160095214844
    4. '.' → logprob: -4.077816009521484
    5. '.length' → logprob: -5.577816009521484
    6. '.pol' → logprob: -8.202816009521484
    7. '.w' → logprob: -8.577816009521484
    8. '.points' → logprob: -8.827816009521484
    9. ' .' → logprob: -9.077816009521484
    10. '._' → logprob: -9.077816009521484

Token 1201: 'ill' (ID: 492)
  Prédit: 'ill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ill' → logprob: -0.001249281340278685
    2. 'pill' → logprob: -8.001249313354492
    3. 'illar' → logprob: -8.626249313354492
    4. 'illers' → logprob: -8.751249313354492
    5. 'oints' → logprob: -9.376249313354492
    6. 'ills' → logprob: -9.751249313354492
    7. 'r' → logprob: -10.376249313354492
    8. '#' → logprob: -10.751249313354492
    9. 'il' → logprob: -10.813749313354492
    10. '[' → logprob: -10.876249313354492

Token 1202: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.875006675720215
    3. '=' → logprob: -14.000006675720215
    4. 'ar' → logprob: -14.250006675720215
    5. '\' → logprob: -15.000006675720215
    6. '   ' → logprob: -15.000006675720215
    7. '_' → logprob: -15.000006675720215
    8. '{' → logprob: -15.125006675720215
    9. '```' → logprob: -15.875006675720215
    10. 'a' → logprob: -16.12500762939453

Token 1203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196824833750725
    2. ' =' → logprob: -2.8119683265686035
    3. ':' → logprob: -15.186967849731445
    4. ')' → logprob: -16.936967849731445
    5. '<|end|>' → logprob: -17.061967849731445
    6. '   ' → logprob: -17.311967849731445
    7. '=[]' → logprob: -17.561967849731445
    8. ' ' → logprob: -17.561967849731445
    9. '=
' → logprob: -17.686967849731445
    10. 's' → logprob: -17.686967849731445

Token 1204: ' pillars' (ID: 105506)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pill' → logprob: -0.012636551633477211
    2. ' pillars' → logprob: -4.387636661529541
    3. 'pillar' → logprob: -9.012636184692383
    4. 'pil' → logprob: -12.637636184692383
    5. ' pillar' → logprob: -14.887636184692383
    6. ' pill' → logprob: -15.387636184692383
    7. ' pilares' → logprob: -15.387636184692383
    8. '[]' → logprob: -16.137636184692383
    9. 'pan' → logprob: -16.137636184692383
    10. '   ' → logprob: -16.262636184692383

Token 1205: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13804197311401367
    2. '   ' → logprob: -2.2630419731140137
    3. '       ' → logprob: -3.8880419731140137
    4. '<|end|>' → logprob: -6.138041973114014
    5. ',' → logprob: -7.263041973114014
    6. '    
' → logprob: -7.513041973114014
    7. '

' → logprob: -8.013042449951172
    8. '        
' → logprob: -8.763042449951172
    9. 'def' → logprob: -8.763042449951172
    10. ',
' → logprob: -8.888042449951172

Token 1206: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03717110678553581
    2. '   ' → logprob: -3.6621711254119873
    3. '

' → logprob: -5.412170886993408
    4. '<|end|>' → logprob: -5.412170886993408
    5. '       ' → logprob: -6.912170886993408
    6. '    
' → logprob: -7.662170886993408
    7. 'def' → logprob: -8.537171363830566
    8. '        
' → logprob: -9.787171363830566
    9. '<|end|>' → logprob: -9.912171363830566
    10. ' def' → logprob: -10.412171363830566

Token 1207: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10675542056560516
    2. 'def' → logprob: -2.356755495071411
    3. '       ' → logprob: -6.106755256652832
    4. '
' → logprob: -6.356755256652832
    5. ' self' → logprob: -6.731755256652832
    6. 'pass' → logprob: -8.106755256652832
    7. '

' → logprob: -8.231755256652832
    8. '   ' → logprob: -8.356755256652832
    9. '#' (adapté à ' #') → logprob: -8.356755256652832
    10. 's' → logprob: -9.856755256652832

Token 1208: ' We' (ID: 1416)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06850269436836243
    2. '#' → logprob: -3.06850266456604
    3. 'def' → logprob: -4.193502902984619
    4. '       ' → logprob: -6.068502902984619
    5. 'pass' → logprob: -6.318502902984619
    6. 'n' → logprob: -8.318502426147461
    7. '   ' → logprob: -9.318502426147461
    8. '
' → logprob: -10.443502426147461
    9. 'from' → logprob: -10.693502426147461
    10. ' self' → logprob: -10.693502426147461

Token 1209: ' will' (ID: 738)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.527447521686554
    2. 'build' → logprob: -1.9024474620819092
    3. '   ' → logprob: -2.652447462081909
    4. 'create' → logprob: -3.152447462081909
    5. 'w' → logprob: -3.652447462081909
    6. 'def' → logprob: -3.902447462081909
    7. 're' → logprob: -4.027447700500488
    8. 'have' → logprob: -4.777447700500488
    9. 'continue' → logprob: -4.902447700500488
    10. 'need' → logprob: -5.027447700500488

Token 1210: ' create' (ID: 2501)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -1.240172266960144
    2. 'construct' → logprob: -1.240172266960144
    3. 'create' → logprob: -2.2401723861694336
    4. 'represent' → logprob: -2.3651723861694336
    5. '   ' → logprob: -2.9901723861694336
    6. 'define' → logprob: -3.1151723861694336
    7. 'split' → logprob: -4.240172386169434
    8. 'compute' → logprob: -4.365172386169434
    9. ' represent' → logprob: -4.490172386169434
    10. 'generate' → logprob: -4.490172386169434

Token 1211: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01027090847492218
    2. 'two' → logprob: -5.635271072387695
    3. 'a' → logprob: -5.885271072387695
    4. 'points' → logprob: -7.010271072387695
    5. ' self' → logprob: -7.010271072387695
    6. 'nodes' → logprob: -7.260271072387695
    7. ' two' → logprob: -7.635271072387695
    8. 'vertices' → logprob: -7.635271072387695
    9. 'the' → logprob: -9.010271072387695
    10. '#' → logprob: -9.635271072387695

Token 1212: ' visibility' (ID: 34377)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.055156342685222626
    2. 'def' → logprob: -3.1801562309265137
    3. 'list' → logprob: -5.430156230926514
    4. '#' → logprob: -6.055156230926514
    5. 'graph' → logprob: -6.180156230926514
    6. ' self' → logprob: -7.180156230926514
    7. 'class' → logprob: -7.680156230926514
    8. 's' → logprob: -8.805156707763672
    9. '       ' → logprob: -8.930156707763672
    10. 'horizontal' → logprob: -8.930156707763672

Token 1213: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.01508368831127882
    2. '_graph' → logprob: -4.5150837898254395
    3. ' graph' → logprob: -5.5150837898254395
    4. '	graph' → logprob: -14.515083312988281
    5. 'Graph' → logprob: -14.765083312988281
    6. '_' → logprob: -14.890083312988281
    7. '   ' → logprob: -15.015083312988281
    8. '_polygon' → logprob: -15.140083312988281
    9. 'polygon' → logprob: -15.765083312988281
    10. '_map' → logprob: -16.39008331298828

Token 1214: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028291434049606323
    2. ',' → logprob: -4.40329122543335
    3. ' with' → logprob: -5.90329122543335
    4. '(self' → logprob: -6.02829122543335
    5. 'self' → logprob: -6.15329122543335
    6. '   ' → logprob: -6.15329122543335
    7. '
' → logprob: -6.77829122543335
    8. '.' → logprob: -6.77829122543335
    9. ' for' → logprob: -7.02829122543335
    10. ' self' → logprob: -7.40329122543335

Token 1215: ' special' (ID: 3582)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1563221216201782
    2. 'all' → logprob: -1.4063221216201782
    3. 'points' → logprob: -1.5313221216201782
    4. 'self' → logprob: -2.4063220024108887
    5. 'pill' → logprob: -3.6563220024108887
    6. 'top' → logprob: -3.9063220024108887
    7. 'pillar' → logprob: -3.9063220024108887
    8. 'source' → logprob: -4.031322002410889
    9. 'entr' → logprob: -4.156322002410889
    10. 'start' → logprob: -4.781322002410889

Token 1216: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6217742562294006
    2. ' points' → logprob: -1.1217741966247559
    3. '_points' → logprob: -1.9967741966247559
    4. 'Points' → logprob: -8.246774673461914
    5. '	points' → logprob: -8.246774673461914
    6. 'vertices' → logprob: -8.496774673461914
    7. '<|end|>' → logprob: -8.621774673461914
    8. 'nodes' → logprob: -9.246774673461914
    9. '_nodes' → logprob: -9.246774673461914
    10. ' Points' → logprob: -9.371774673461914

Token 1217: ' called' (ID: 4358)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10358281433582306
    2. ',' → logprob: -2.7285828590393066
    3. '.' → logprob: -4.603582859039307
    4. '
' → logprob: -4.728582859039307
    5. '   ' → logprob: -5.853582859039307
    6. ':' → logprob: -5.978582859039307
    7. 'self' → logprob: -6.103582859039307
    8. '        
' → logprob: -6.228582859039307
    9. '        ' → logprob: -6.978582859039307
    10. ',
' → logprob: -7.103582859039307

Token 1218: ' nodes' (ID: 15749)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6613730192184448
    2. ''' → logprob: -1.2863730192184448
    3. ''s' → logprob: -2.5363731384277344
    4. 'self' → logprob: -2.7863731384277344
    5. 'vertices' → logprob: -4.536373138427734
    6. 'corn' → logprob: -4.536373138427734
    7. 'corr' → logprob: -4.911373138427734
    8. 'entr' → logprob: -5.036373138427734
    9. ''p' → logprob: -5.036373138427734
    10. '"s' → logprob: -5.661373138427734

Token 1219: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13255591690540314
    2. '
' → logprob: -2.3825559616088867
    3. ',' → logprob: -4.382555961608887
    4. 'self' → logprob: -5.132555961608887
    5. '        
' → logprob: -5.132555961608887
    6. '   ' → logprob: -6.257555961608887
    7. '.' → logprob: -6.507555961608887
    8. '        ' → logprob: -7.007555961608887
    9. '(self' → logprob: -7.632555961608887
    10. ' ' → logprob: -7.757555961608887

Token 1220: ' build' (ID: 3024)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21123965084552765
    2. '       ' → logprob: -2.2112395763397217
    3. ' self' → logprob: -3.3362395763397217
    4. '#' → logprob: -4.086239814758301
    5. '
' → logprob: -4.586239814758301
    6. ' including' → logprob: -5.336239814758301
    7. ' and' → logprob: -5.461239814758301
    8. '        
' → logprob: -5.961239814758301
    9. ' which' → logprob: -6.586239814758301
    10. 'including' → logprob: -7.086239814758301

Token 1221: ' residual' (ID: 54782)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04659261554479599
    2. ' self' → logprob: -3.5465927124023438
    3. 'the' → logprob: -5.046592712402344
    4. '   ' → logprob: -5.796592712402344
    5. '       ' → logprob: -5.796592712402344
    6. ' the' → logprob: -6.171592712402344
    7. ' a' → logprob: -7.546592712402344
    8. 'graph' → logprob: -7.921592712402344
    9. 'edges' → logprob: -7.921592712402344
    10. 'a' → logprob: -8.671592712402344

Token 1222: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6490305066108704
    2. 'graph' → logprob: -1.2740304470062256
    3. '_graph' → logprob: -1.8990304470062256
    4. '_network' → logprob: -3.2740304470062256
    5. '_flow' → logprob: -5.774030685424805
    6. ' network' → logprob: -5.899030685424805
    7. 'network' → logprob: -6.274030685424805
    8. '_edges' → logprob: -7.399030685424805
    9. '	graph' → logprob: -7.774030685424805
    10. '_capacity' → logprob: -8.399030685424805

Token 1223: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40822649002075195
    2. ',' → logprob: -1.283226490020752
    3. ' and' → logprob: -3.658226490020752
    4. ' for' → logprob: -4.533226490020752
    5. 'and' → logprob: -4.908226490020752
    6. '.' → logprob: -5.158226490020752
    7. 'for' → logprob: -5.408226490020752
    8. '   ' → logprob: -6.533226490020752
    9. 'self' → logprob: -7.158226490020752
    10. ',
' → logprob: -8.283226013183594

Token 1224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46286237239837646
    2. '#' → logprob: -1.2128623723983765
    3. 'and' → logprob: -2.712862491607666
    4. ' and' → logprob: -5.087862491607666
    5. ' #' → logprob: -7.712862491607666
    6. '   ' → logprob: -8.712862014770508
    7. '           ' → logprob: -11.337862014770508
    8. ' ' → logprob: -11.462862014770508
    9. 'self' → logprob: -12.337862014770508
    10. '...' → logprob: -12.712862014770508

Token 1225: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.23705658316612244
    2. 'and' → logprob: -1.6120566129684448
    3. ' and' → logprob: -5.112056732177734
    4. '       ' → logprob: -5.362056732177734
    5. 'self' → logprob: -7.362056732177734
    6. 'create' → logprob: -9.737056732177734
    7. ' #' → logprob: -9.737056732177734
    8. '   ' → logprob: -11.112056732177734
    9. 'build' → logprob: -11.362056732177734
    10. '
' → logprob: -11.362056732177734

Token 1226: ' then' (ID: 1815)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1273643970489502
    2. 'self' → logprob: -2.75236439704895
    3. 'and' → logprob: -3.00236439704895
    4. ' and' → logprob: -5.877364158630371
    5. '       ' → logprob: -7.002364158630371
    6. 'def' → logprob: -7.627364158630371
    7. '
' → logprob: -7.752364158630371
    8. '...' → logprob: -8.002364158630371
    9. 'build' → logprob: -8.252364158630371
    10. ' #' → logprob: -8.377364158630371

Token 1227: ' solve' (ID: 17722)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.6959162354469299
    2. 'find' → logprob: -1.5709161758422852
    3. 'build' → logprob: -2.820916175842285
    4. 'def' → logprob: -2.945916175842285
    5. ' compute' → logprob: -3.445916175842285
    6. ' find' → logprob: -3.570916175842285
    7. 'use' → logprob: -3.945916175842285
    8. 'run' → logprob: -3.945916175842285
    9. 'self' → logprob: -4.320916175842285
    10. 'perform' → logprob: -4.570916175842285

Token 1228: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4446583688259125
    2. 'max' → logprob: -1.3196583986282349
    3. 'the' → logprob: -2.6946582794189453
    4. 'self' → logprob: -4.069658279418945
    5. ' max' → logprob: -5.944658279418945
    6. ' for' → logprob: -5.944658279418945
    7. ' the' → logprob: -7.819658279418945
    8. '```' → logprob: -8.069658279418945
    9. 'maximum' → logprob: -8.569658279418945
    10. 'flow' → logprob: -8.694658279418945

Token 1229: '-flow' (ID: 111479)
  Prédit: '_flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -0.19293957948684692
    2. 'flow' → logprob: -1.9429395198822021
    3. ' flow' → logprob: -3.442939519882202
    4. '   ' → logprob: -9.067939758300781
    5. '-flow' → logprob: -9.817939758300781
    6. '```' → logprob: -11.067939758300781
    7. '(flow' → logprob: -11.817939758300781
    8. '``' → logprob: -12.067939758300781
    9. '\' → logprob: -12.692939758300781
    10. '
' → logprob: -12.817939758300781

Token 1230: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8183594346046448
    2. '(self' → logprob: -2.193359375
    3. 'from' → logprob: -2.818359375
    4. '.' → logprob: -2.818359375
    5. '
' → logprob: -2.943359375
    6. '(' → logprob: -2.943359375
    7. '   ' → logprob: -3.068359375
    8. 'def' → logprob: -3.068359375
    9. ',' → logprob: -3.193359375
    10. '        
' → logprob: -3.693359375

Token 1231: ' bottom' (ID: 8725)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.6142781972885132
    2. 'Point' → logprob: -1.6142781972885132
    3. 'the' → logprob: -2.4892783164978027
    4. 'left' → logprob: -2.6142783164978027
    5. 'start' → logprob: -3.1142783164978027
    6. ' Point' → logprob: -3.7392783164978027
    7. 'top' → logprob: -4.489278316497803
    8. 'entr' → logprob: -4.989278316497803
    9. ''s' → logprob: -5.239278316497803
    10. ' left' → logprob: -5.989278316497803

Token 1232: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.02629809081554413
    2. 'to' → logprob: -4.2762980461120605
    3. '_' → logprob: -5.5262980461120605
    4. '   ' → logprob: -6.0262980461120605
    5. '_to' → logprob: -6.5262980461120605
    6. ' source' → logprob: -6.7762980461120605
    7. '_source' → logprob: -6.9012980461120605
    8. '_left' → logprob: -7.9012980461120605
    9. ' node' → logprob: -8.401298522949219
    10. ' ' → logprob: -8.526298522949219

Token 1233: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.06197015196084976
    2. ' top' → logprob: -2.8119702339172363
    3. 'the' → logprob: -13.811969757080078
    4. '	top' → logprob: -14.436969757080078
    5. 'up' → logprob: -14.561969757080078
    6. '_top' → logprob: -15.561969757080078
    7. ' the' → logprob: -16.186969757080078
    8. ' up' → logprob: -17.436969757080078
    9. '[top' → logprob: -17.436969757080078
    10. '(top' → logprob: -17.561969757080078

Token 1234: ' boundaries' (ID: 35665)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005128922872245312
    2. '       ' → logprob: -6.005128860473633
    3. '<|end|>' → logprob: -6.255128860473633
    4. '

' → logprob: -8.255128860473633
    5. '        
' → logprob: -8.505128860473633
    6. '    
' → logprob: -10.380128860473633
    7. '   ' → logprob: -10.380128860473633
    8. ' 
' → logprob: -10.380128860473633
    9. ' ' → logprob: -10.505128860473633
    10. '  
' → logprob: -10.880128860473633

Token 1235: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35954177379608154
    2. '       ' → logprob: -1.2345417737960815
    3. '<|end|>' → logprob: -4.859541893005371
    4. '        
' → logprob: -6.859541893005371
    5. ',' → logprob: -7.359541893005371
    6. 'def' → logprob: -7.484541893005371
    7. '   ' → logprob: -8.109541893005371
    8. ' ' → logprob: -9.109541893005371
    9. '<|end|>' → logprob: -9.484541893005371
    10. '.' → logprob: -9.609541893005371

Token 1236: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31690049171447754
    2. '   ' → logprob: -1.8169004917144775
    3. 'def' → logprob: -2.5669004917144775
    4. ' def' → logprob: -4.066900253295898
    5. '       ' → logprob: -4.691900253295898
    6. '    
' → logprob: -6.441900253295898
    7. ' ' → logprob: -6.691900253295898
    8. '<|end|>' → logprob: -6.941900253295898
    9. '

' → logprob: -7.316900253295898
    10. '        
' → logprob: -7.816900253295898

Token 1237: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001194990472868085
    2. ' def' → logprob: -6.751194953918457
    3. '   ' → logprob: -11.001194953918457
    4. '
' → logprob: -11.751194953918457
    5. 'class' → logprob: -16.751195907592773
    6. '    
' → logprob: -16.876195907592773
    7. '	def' → logprob: -17.501195907592773
    8. ' 
' → logprob: -18.376195907592773
    9. 'de' → logprob: -18.501195907592773
    10. '

' → logprob: -18.626195907592773

Token 1238: ' _' (ID: 1175)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.10288722068071365
    2. ' build' → logprob: -2.3528871536254883
    3. 'compute' → logprob: -6.852887153625488
    4. '_build' → logprob: -6.977887153625488
    5. ' compute' → logprob: -8.602887153625488
    6. 'construct' → logprob: -8.852887153625488
    7. 'prepare' → logprob: -9.227887153625488
    8. 'create' → logprob: -9.352887153625488
    9. 'generate' → logprob: -9.477887153625488
    10. 'find' → logprob: -10.852887153625488

Token 1239: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.018122203648090363
    2. 'generate' → logprob: -5.01812219619751
    3. 'compute' → logprob: -5.26812219619751
    4. 'construct' → logprob: -6.14312219619751
    5. 'collect' → logprob: -6.51812219619751
    6. 'create' → logprob: -6.76812219619751
    7. 'prepare' → logprob: -7.39312219619751
    8. 'get' → logprob: -7.76812219619751
    9. 'find' → logprob: -8.643122673034668
    10. 'extract' → logprob: -9.393122673034668

Token 1240: '_horizontal' (ID: 158907)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.20735611021518707
    2. '_visibility' → logprob: -1.7073560953140259
    3. '(self' → logprob: -5.332355976104736
    4. 'graph' → logprob: -8.082356452941895
    5. '_' → logprob: -8.207356452941895
    6. '_network' → logprob: -8.332356452941895
    7. '_nodes' → logprob: -8.707356452941895
    8. 'self' → logprob: -10.582356452941895
    9. '(' → logprob: -10.582356452941895
    10. '_vis' → logprob: -10.832356452941895

Token 1241: '_cut' (ID: 81399)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.9005468487739563
    2. '_line' → logprob: -1.7755467891693115
    3. '_cut' → logprob: -1.9005467891693115
    4. '_visibility' → logprob: -2.4005467891693115
    5. '_lines' → logprob: -3.1505467891693115
    6. '_edges' → logprob: -3.5255467891693115
    7. '_segments' → logprob: -3.7755467891693115
    8. '_pass' → logprob: -3.7755467891693115
    9. '_path' → logprob: -4.525547027587891
    10. '_corr' → logprob: -4.525547027587891

Token 1242: '_lines' (ID: 42980)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.053125910460948944
    2. '_line' → logprob: -4.053125858306885
    3. '_edges' → logprob: -4.053125858306885
    4. 's' → logprob: -5.053125858306885
    5. '_lines' → logprob: -5.428125858306885
    6. 'line' → logprob: -6.553125858306885
    7. '_' → logprob: -6.678125858306885
    8. '_segments' → logprob: -7.553125858306885
    9. 'off' → logprob: -8.053126335144043
    10. 'ting' → logprob: -8.053126335144043

Token 1243: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09174507111310959
    2. '(' → logprob: -2.466745138168335
    3. 'self' → logprob: -5.966744899749756
    4. ' (' → logprob: -9.341745376586914
    5. '(
' → logprob: -10.341745376586914
    6. '_' → logprob: -10.591745376586914
    7. '_(' → logprob: -10.716745376586914
    8. 's' → logprob: -10.841745376586914
    9. '   ' → logprob: -11.216745376586914
    10. '       ' → logprob: -11.466745376586914

Token 1244: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.790324866771698
    2. '(self' → logprob: -1.1653249263763428
    3. 'self' → logprob: -1.7903249263763428
    4. ')' → logprob: -3.5403249263763428
    5. ',' → logprob: -3.9153249263763428
    6. '):
' → logprob: -4.415324687957764
    7. '(' → logprob: -6.040324687957764
    8. 'def' → logprob: -7.040324687957764
    9. ')(' → logprob: -7.415324687957764
    10. '_' → logprob: -7.540324687957764

Token 1245: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00040517066372558475
    2. 'self' → logprob: -8.375405311584473
    3. '(' → logprob: -8.750405311584473
    4. '   ' → logprob: -11.875405311584473
    5. ' (' → logprob: -12.750405311584473
    6. '       ' → logprob: -13.125405311584473
    7. ':' → logprob: -13.250405311584473
    8. 'def' → logprob: -13.500405311584473
    9. '(
' → logprob: -15.125405311584473
    10. '(s' → logprob: -15.375405311584473

Token 1246: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.001648995210416615
    2. 'Set' → logprob: -6.876648902893066
    3. ' List' → logprob: -7.626648902893066
    4. 'def' → logprob: -9.626648902893066
    5. '[]' → logprob: -10.876648902893066
    6. 'self' → logprob: -10.876648902893066
    7. ')' → logprob: -11.626648902893066
    8. 'list' → logprob: -11.626648902893066
    9. '[List' → logprob: -12.751648902893066
    10. 'set' → logprob: -13.501648902893066

Token 1247: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012856863031629473
    2. '[List' → logprob: -9.875128746032715
    3. '[int' → logprob: -10.125128746032715
    4. 'float' → logprob: -10.250128746032715
    5. '[str' → logprob: -14.625128746032715
    6. 'Point' → logprob: -15.125128746032715
    7. '[np' → logprob: -15.125128746032715
    8. 'flo' → logprob: -15.750128746032715
    9. '[
' → logprob: -16.1251277923584
    10. '[Double' → logprob: -16.1251277923584

Token 1248: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0022143693640828133
    2. 'Point' → logprob: -6.127214431762695
    3. ' float' → logprob: -11.502214431762695
    4. 'Tuple' → logprob: -11.627214431762695
    5. '[' → logprob: -12.377214431762695
    6. 'flo' → logprob: -12.877214431762695
    7. 'List' → logprob: -14.252214431762695
    8. 'Float' → logprob: -14.752214431762695
    9. '```' → logprob: -14.877214431762695
    10. '(float' → logprob: -15.127214431762695

Token 1249: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09157539159059525
    2. ':
' → logprob: -2.7165753841400146
    3. '):' → logprob: -4.716575622558594
    4. '(self' → logprob: -5.216575622558594
    5. '):
' → logprob: -5.716575622558594
    6. '(' → logprob: -6.716575622558594
    7. '       ' → logprob: -7.216575622558594
    8. '   ' → logprob: -7.341575622558594
    9. ',' → logprob: -7.841575622558594
    10. ')' → logprob: -8.091575622558594

Token 1250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003613256849348545
    2. '[' → logprob: -9.625361442565918
    3. ' lines' → logprob: -9.625361442565918
    4. 'lines' → logprob: -10.000361442565918
    5. 'cut' → logprob: -10.000361442565918
    6. 'points' → logprob: -10.125361442565918
    7. '[]' → logprob: -11.000361442565918
    8. 'return' → logprob: -11.250361442565918
    9. 'cuts' → logprob: -11.250361442565918
    10. ':' → logprob: -11.625361442565918

Token 1251: ' """' (ID: 9280)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.0386806726455688
    2. 'cuts' → logprob: -1.4136806726455688
    3. 'cut' → logprob: -1.6636806726455688
    4. 'ys' → logprob: -2.2886805534362793
    5. '       ' → logprob: -3.0386805534362793
    6. 'y' → logprob: -3.0386805534362793
    7. 'res' → logprob: -5.413680553436279
    8. ' ys' → logprob: -5.913680553436279
    9. 'hs' → logprob: -6.038680553436279
    10. 'xs' → logprob: -6.538680553436279

Token 1252: 'Extract' (ID: 33282)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.5747586488723755
    2. 'lines' → logprob: -1.5747586488723755
    3. 'cuts' → logprob: -2.199758529663086
    4. 'cut' → logprob: -2.449758529663086
    5. 'y' → logprob: -3.574758529663086
    6. ' ys' → logprob: -6.949758529663086
    7. 'Ys' → logprob: -7.199758529663086
    8. 'hs' → logprob: -7.449758529663086
    9. 'xs' → logprob: -7.949758529663086
    10. 'h' → logprob: -8.574758529663086

Token 1253: ' all' (ID: 722)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.3794518709182739
    2. 'cuts' → logprob: -2.2544517517089844
    3. 'lines' → logprob: -2.5044517517089844
    4. 'y' → logprob: -2.8794517517089844
    5. ' cut' → logprob: -4.504451751708984
    6. '[' → logprob: -4.879451751708984
    7. 'sorted' → logprob: -5.004451751708984
    8. ' y' → logprob: -5.129451751708984
    9. 'points' → logprob: -5.254451751708984
    10. '{' → logprob: -5.254451751708984

Token 1254: ' y' (ID: 342)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.1602044254541397
    2. 'y' → logprob: -2.5352044105529785
    3. 'cut' → logprob: -3.0352044105529785
    4. 'cuts' → logprob: -4.5352044105529785
    5. ' ys' → logprob: -5.5352044105529785
    6. 'lines' → logprob: -5.9102044105529785
    7. 'xs' → logprob: -7.1602044105529785
    8. ' y' → logprob: -7.4102044105529785
    9. 'x' → logprob: -7.6602044105529785
    10. 'positions' → logprob: -7.9102044105529785

Token 1255: ' coordinates' (ID: 27933)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0271226167678833
    2. '_positions' → logprob: -1.1521226167678833
    3. '_values' → logprob: -2.2771224975585938
    4. '_coords' → logprob: -3.2771224975585938
    5. '_coordinates' → logprob: -3.6521224975585938
    6. '_s' → logprob: -3.9021224975585938
    7. '_' → logprob: -3.9021224975585938
    8. '_levels' → logprob: -4.027122497558594
    9. 'positions' → logprob: -4.277122497558594
    10. ' _' → logprob: -4.277122497558594

Token 1256: ' of' (ID: 328)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0809060335159302
    2. ' from' → logprob: -1.2059060335159302
    3. ' of' → logprob: -1.7059060335159302
    4. '       ' → logprob: -2.5809059143066406
    5. '(' → logprob: -3.7059059143066406
    6. '()' → logprob: -4.080905914306641
    7. 'of' → logprob: -4.205905914306641
    8. '   ' → logprob: -4.580905914306641
    9. ':' → logprob: -4.955905914306641
    10. ' for' → logprob: -5.455905914306641

Token 1257: ' pillar' (ID: 109066)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.24677306413650513
    2. 'v' → logprob: -2.3717730045318604
    3. 'vertex' → logprob: -2.8717730045318604
    4. 'point' → logprob: -3.8717730045318604
    5. 'pillar' → logprob: -3.9967730045318604
    6. 'vertices' → logprob: -4.1217732429504395
    7. '
' → logprob: -5.3717732429504395
    8. 'pt' → logprob: -6.3717732429504395
    9. 'points' → logprob: -6.8717732429504395
    10. '   ' → logprob: -6.9967732429504395

Token 1258: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.23182421922683716
    2. ' vertices' → logprob: -1.8568241596221924
    3. '.vertices' → logprob: -3.9818241596221924
    4. ' edges' → logprob: -4.2318243980407715
    5. 'edges' → logprob: -4.2318243980407715
    6. '_vertices' → logprob: -6.3568243980407715
    7. '
' → logprob: -7.6068243980407715
    8. 's' → logprob: -8.606823921203613
    9. 'vertex' → logprob: -9.481823921203613
    10. 'tops' → logprob: -9.731823921203613

Token 1259: ' plus' (ID: 2932)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7791310548782349
    2. 'from' → logprob: -1.1541310548782349
    3. ',' → logprob: -2.9041309356689453
    4. '+' → logprob: -2.9041309356689453
    5. ' +' → logprob: -3.6541309356689453
    6. ' from' → logprob: -4.154130935668945
    7. ')' → logprob: -4.779130935668945
    8. ':' → logprob: -5.029130935668945
    9. '()' → logprob: -5.154130935668945
    10. 'and' → logprob: -5.279130935668945

Token 1260: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14403823018074036
    2. '0' → logprob: -2.019038200378418
    3. '{' → logprob: -7.019038200378418
    4. 'self' → logprob: -8.894038200378418
    5. ' [' → logprob: -9.144038200378418
    6. '[
' → logprob: -9.394038200378418
    7. '[self' → logprob: -10.144038200378418
    8. ' ' → logprob: -10.394038200378418
    9. '[]
' → logprob: -11.394038200378418
    10. '[]' → logprob: -11.394038200378418

Token 1261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11338964104652405
    2. '[' → logprob: -2.238389730453491
    3. 'self' → logprob: -8.36338996887207
    4. '{' → logprob: -9.11338996887207
    5. ' ' → logprob: -9.61338996887207
    6. '[self' → logprob: -10.11338996887207
    7. ' [' → logprob: -10.23838996887207
    8. '```' → logprob: -10.86338996887207
    9. '1' → logprob: -11.11338996887207
    10. '[
' → logprob: -11.23838996887207

Token 1262: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1180688664317131
    2. ' and' → logprob: -2.6180689334869385
    3. 'and' → logprob: -3.3680689334869385
    4. ' ,' → logprob: -5.868068695068359
    5. ',
' → logprob: -7.118068695068359
    6. '.' → logprob: -8.86806869506836
    7. ')' → logprob: -9.61806869506836
    8. '<|end|>' → logprob: -9.99306869506836
    9. ' ' → logprob: -10.86806869506836
    10. '<|end|>' → logprob: -11.61806869506836

Token 1263: ' very' (ID: 1869)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002191779436543584
    2. ' self' → logprob: -6.127191543579102
    3. '[self' → logprob: -13.252191543579102
    4. '(self' → logprob: -13.502191543579102
    5. '1' → logprob: -14.002191543579102
    6. '
' → logprob: -14.002191543579102
    7. '	self' → logprob: -14.627191543579102
    8. '       ' → logprob: -14.752191543579102
    9. '   ' → logprob: -15.752191543579102
    10. '           ' → logprob: -15.752191543579102

Token 1264: ' large' (ID: 4410)
  Prédit: ' large'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' large' → logprob: -0.09398669749498367
    2. 'large' → logprob: -2.593986749649048
    3. '_large' → logprob: -4.218986511230469
    4. 'Large' → logprob: -9.718986511230469
    5. ' small' → logprob: -9.968986511230469
    6. '100' → logprob: -10.843986511230469
    7. 'f' → logprob: -10.968986511230469
    8. '0' → logprob: -11.093986511230469
    9. '1' → logprob: -11.218986511230469
    10. 'self' → logprob: -11.343986511230469

Token 1265: ' max' (ID: 2999)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.217514157295227
    2. ' number' → logprob: -1.967514157295227
    3. '_value' → logprob: -1.967514157295227
    4. '_number' → logprob: -2.0925140380859375
    5. 'float' → logprob: -2.4675140380859375
    6. '_float' → logprob: -2.5925140380859375
    7. 'value' → logprob: -2.8425140380859375
    8. ' float' → logprob: -3.9675140380859375
    9. ' value' → logprob: -4.5925140380859375
    10. 'numbers' → logprob: -4.9675140380859375

Token 1266: 'Y' (ID: 56)
  Prédit: '_float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_float' → logprob: -0.7097868919372559
    2. '_value' → logprob: -1.3347868919372559
    3. '_y' → logprob: -2.084786891937256
    4. '_coordinate' → logprob: -3.459786891937256
    5. 'float' → logprob: -3.959786891937256
    6. ' float' → logprob: -4.459786891937256
    7. '_val' → logprob: -4.459786891937256
    8. 'value' → logprob: -4.959786891937256
    9. 'y' → logprob: -4.959786891937256
    10. 'Y' → logprob: -5.209786891937256

Token 1267: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6427657008171082
    2. '       ' → logprob: -1.642765760421753
    3. '
' → logprob: -2.767765760421753
    4. ',
' → logprob: -3.142765760421753
    5. '()
' → logprob: -3.267765760421753
    6. '   ' → logprob: -3.392765760421753
    7. '"""
' → logprob: -4.267765522003174
    8. ' and' → logprob: -4.392765522003174
    9. ')
' → logprob: -4.642765522003174
    10. '()' → logprob: -4.767765522003174

Token 1268: ' define' (ID: 13174)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cover' → logprob: -1.3238574266433716
    2. 'cut' → logprob: -1.5738574266433716
    3. 'self' → logprob: -1.9488574266433716
    4. 'include' → logprob: -2.323857307434082
    5. 'cover' → logprob: -2.323857307434082
    6. 'ensure' → logprob: -3.198857307434082
    7. '[' → logprob: -3.823857307434082
    8. ' self' → logprob: -3.948857307434082
    9. ' cut' → logprob: -4.448857307434082
    10. 'the' → logprob: -4.698857307434082

Token 1269: ' horizontal' (ID: 25511)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -1.3894506692886353
    2. ' the' → logprob: -1.6394506692886353
    3. ' horizontal' → logprob: -1.7644506692886353
    4. ' cut' → logprob: -1.8894506692886353
    5. 'horizontal' → logprob: -2.3894505500793457
    6. 'cuts' → logprob: -3.1394505500793457
    7. 'the' → logprob: -3.1394505500793457
    8. ' cuts' → logprob: -3.3894505500793457
    9. 'layers' → logprob: -5.514450550079346
    10. ' lines' → logprob: -5.764450550079346

Token 1270: ' bands' (ID: 29650)
  Prédit: '_cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.19608432054519653
    2. ' cut' → logprob: -2.3210842609405518
    3. ' lines' → logprob: -3.0710842609405518
    4. 'cut' → logprob: -4.571084499359131
    5. '_lines' → logprob: -4.696084499359131
    6. ' cuts' → logprob: -4.821084499359131
    7. 'cuts' → logprob: -6.696084499359131
    8. '_levels' → logprob: -6.696084499359131
    9. ' levels' → logprob: -6.946084499359131
    10. '_c' → logprob: -7.071084499359131

Token 1271: '."""
' (ID: 33044)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04029880464076996
    2. ',' → logprob: -4.290298938751221
    3. '
' → logprob: -4.415298938751221
    4. ' and' → logprob: -5.790298938751221
    5. '        
' → logprob: -6.290298938751221
    6. ':' → logprob: -6.415298938751221
    7. '   ' → logprob: -6.540298938751221
    8. ':
' → logprob: -6.915298938751221
    9. '.' → logprob: -7.165298938751221
    10. '[' → logprob: -7.790298938751221

Token 1272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006388116744346917
    2. '[' → logprob: -8.625638961791992
    3. '        
' → logprob: -9.250638961791992
    4. '
' → logprob: -9.250638961791992
    5. '```' → logprob: -9.375638961791992
    6. 'return' → logprob: -10.500638961791992
    7. '   ' → logprob: -10.625638961791992
    8. ',' → logprob: -11.000638961791992
    9. '[
' → logprob: -11.125638961791992
    10. '[]' → logprob: -11.250638961791992

Token 1273: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -0.15485508739948273
    2. 'lines' → logprob: -2.5298550128936768
    3. 'y' → logprob: -3.7798550128936768
    4. ' ys' → logprob: -4.154855251312256
    5. 'cut' → logprob: -4.279855251312256
    6. '       ' → logprob: -4.779855251312256
    7. 'cuts' → logprob: -6.279855251312256
    8. 'res' → logprob: -7.529855251312256
    9. 'coords' → logprob: -8.904854774475098
    10. 'Ys' → logprob: -9.529854774475098

Token 1274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868785798549652
    2. ' =' → logprob: -1.1368786096572876
    3. '       ' → logprob: -12.386878967285156
    4. ':' → logprob: -13.261878967285156
    5. '=[]' → logprob: -14.011878967285156
    6. '   ' → logprob: -15.261878967285156
    7. ' ' → logprob: -15.511878967285156
    8. '=[]
' → logprob: -16.261878967285156
    9. '        ' → logprob: -16.511878967285156
    10. ',' → logprob: -16.511878967285156

Token 1275: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038081664592027664
    2. '{' → logprob: -3.288081645965576
    3. 'set' → logprob: -10.288082122802734
    4. ' [' → logprob: -12.163082122802734
    5. ' {' → logprob: -14.288082122802734
    6. ' set' → logprob: -15.788082122802734
    7. '[self' → logprob: -16.538082122802734
    8. '[]
' → logprob: -18.788082122802734
    9. '[{' → logprob: -19.288082122802734
    10. '[list' → logprob: -19.288082122802734

Token 1276: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.07326245307922363
    2. '()' → logprob: -3.0732624530792236
    3. '({' → logprob: -3.9482624530792236
    4. '()
' → logprob: -5.8232622146606445
    5. '(p' → logprob: -6.3232622146606445
    6. '(' → logprob: -8.948262214660645
    7. '{' → logprob: -9.198262214660645
    8. '(self' → logprob: -11.198262214660645
    9. '(i' → logprob: -11.198262214660645
    10. '(range' → logprob: -11.323262214660645

Token 1277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. 'self' → logprob: -17.125
    4. '   ' → logprob: -18.5
    5. '```' → logprob: -20.25
    6. '{' → logprob: -20.3125
    7. '۰' → logprob: -20.6875
    8. '
' → logprob: -20.9375
    9. 'float' → logprob: -20.9375
    10. '`' → logprob: -21.0

Token 1278: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015173576539382339
    2. '])' → logprob: -6.876517295837402
    3. '])
' → logprob: -8.376517295837402
    4. ',
' → logprob: -8.751517295837402
    5. ' ,' → logprob: -9.626517295837402
    6. ')' → logprob: -11.376517295837402
    7. '.' → logprob: -11.876517295837402
    8. '   ' → logprob: -12.126517295837402
    9. ')
' → logprob: -13.501517295837402
    10. ']' → logprob: -13.876517295837402

Token 1279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030356988310813904
    2. 'self' → logprob: -3.5303568840026855
    3. ',' → logprob: -8.030357360839844
    4. ' self' → logprob: -8.780357360839844
    5. '])' → logprob: -10.030357360839844
    6. ')' → logprob: -10.405357360839844
    7. ' ' → logprob: -11.280357360839844
    8. ',self' → logprob: -11.530357360839844
    9. '.' → logprob: -12.405357360839844
    10. '
' → logprob: -12.655357360839844

Token 1280: '])
' (ID: 5169)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01181940920650959
    2. '])' → logprob: -4.511819362640381
    3. ',
' → logprob: -7.761819362640381
    4. ' ,' → logprob: -8.761819839477539
    5. '])
' → logprob: -8.886819839477539
    6. ')' → logprob: -10.886819839477539
    7. ']' → logprob: -12.011819839477539
    8. ' ])' → logprob: -12.136819839477539
    9. ',self' → logprob: -12.636819839477539
    10. '   ' → logprob: -12.886819839477539

Token 1281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11387452483177185
    2. '.' → logprob: -3.4888744354248047
    3. '
' → logprob: -3.4888744354248047
    4. '<|end|>' → logprob: -3.8638744354248047
    5. '.update' → logprob: -4.988874435424805
    6. ',' → logprob: -5.488874435424805
    7. '|' → logprob: -5.613874435424805
    8. ')' → logprob: -5.613874435424805
    9. 'for' → logprob: -6.488874435424805
    10. ')
' → logprob: -6.863874435424805

Token 1282: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004273919388651848
    2. 'ys' → logprob: -5.879273891448975
    3. '       ' → logprob: -7.129273891448975
    4. 'max' (adapté à ' max') → logprob: -7.629273891448975
    5. 'import' → logprob: -9.379274368286133
    6. 'float' → logprob: -10.254274368286133
    7. ' for' → logprob: -10.254274368286133
    8. '
' → logprob: -11.504274368286133
    9. 'inf' → logprob: -11.754274368286133
    10. '999' → logprob: -13.754274368286133

Token 1283: '_y' (ID: 9410)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.35201433300971985
    2. '_y' → logprob: -1.2270143032073975
    3. 'y' → logprob: -5.977014541625977
    4. '(self' → logprob: -8.102014541625977
    5. '(' → logprob: -8.352014541625977
    6. '(
' → logprob: -8.977014541625977
    7. '_Y' → logprob: -8.977014541625977
    8. '(y' → logprob: -10.352014541625977
    9. '(max' → logprob: -10.602014541625977
    10. ' =' → logprob: -10.852014541625977

Token 1284: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28131017088890076
    2. ' =' → logprob: -1.4063102006912231
    3. ',' → logprob: -10.406310081481934
    4. '+' → logprob: -10.406310081481934
    5. '+=' → logprob: -10.531310081481934
    6. '.' → logprob: -11.156310081481934
    7. ' ' → logprob: -11.531310081481934
    8. 's' → logprob: -11.531310081481934
    9. ' +=' → logprob: -12.031310081481934
    10. ':' → logprob: -12.031310081481934

Token 1285: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2702566087245941
    2. 'self' → logprob: -1.6452566385269165
    3. '0' → logprob: -3.270256519317627
    4. ' max' → logprob: -6.145256519317627
    5. 'float' → logprob: -6.645256519317627
    6. '-' → logprob: -7.270256519317627
    7. ' self' → logprob: -7.645256519317627
    8. '   ' → logprob: -8.020256996154785
    9. '100' → logprob: -8.020256996154785
    10. '-max' → logprob: -9.145256996154785

Token 1286: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0645328164100647
    2. 'self' → logprob: -2.93953275680542
    3. '0' → logprob: -4.81453275680542
    4. '-max' → logprob: -6.93953275680542
    5. '-self' → logprob: -8.439533233642578
    6. ' max' → logprob: -8.814533233642578
    7. 'float' → logprob: -9.564533233642578
    8. '-' → logprob: -10.314533233642578
    9. '-s' → logprob: -11.689533233642578
    10. ' self' → logprob: -11.689533233642578

Token 1287: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00522617157548666
    2. '       ' → logprob: -5.380226135253906
    3. '0' → logprob: -7.755226135253906
    4. 'for' → logprob: -9.255226135253906
    5. ' for' → logprob: -10.755226135253906
    6. '<|end|>' → logprob: -11.130226135253906
    7. '
' → logprob: -11.630226135253906
    8. '.
' → logprob: -12.255226135253906
    9. '<|end|>' → logprob: -12.255226135253906
    10. '   ' → logprob: -12.255226135253906

Token 1288: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5716304410016164e-05
    2. '1' → logprob: -11.500035285949707
    3. '5' → logprob: -11.875035285949707
    4. '   ' → logprob: -12.375035285949707
    5. 'max' → logprob: -12.750035285949707
    6. '       ' → logprob: -13.000035285949707
    7. 'float' → logprob: -13.000035285949707
    8. '7' → logprob: -13.250035285949707
    9. 'y' → logprob: -14.125035285949707
    10. 'for' → logprob: -14.375035285949707

Token 1289: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14442937076091766
    2. 'for' → logprob: -2.5194294452667236
    3. ' for' → logprob: -3.0194294452667236
    4. '
' → logprob: -6.1444292068481445
    5. '<|end|>' → logprob: -6.1444292068481445
    6. '.' → logprob: -8.269429206848145
    7. ',' → logprob: -9.019429206848145
    8. '        
' → logprob: -9.394429206848145
    9. ')' → logprob: -9.394429206848145
    10. '   ' → logprob: -9.644429206848145

Token 1290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06134272739291191
    2. 'for' → logprob: -3.561342716217041
    3. '
' → logprob: -3.686342716217041
    4. ' for' → logprob: -5.186342716217041
    5. '<|end|>' → logprob: -8.6863431930542
    6. '   ' → logprob: -9.9363431930542
    7. '.' → logprob: -9.9363431930542
    8. ',' → logprob: -10.3113431930542
    9. ')' → logprob: -10.5613431930542
    10. '        
' → logprob: -10.6863431930542

Token 1291: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00044711565715260804
    2. ' for' → logprob: -7.8754472732543945
    3. '       ' → logprob: -9.625447273254395
    4. '	for' → logprob: -13.875447273254395
    5. '   ' → logprob: -18.375446319580078
    6. '_for' → logprob: -18.625446319580078
    7. '
' → logprob: -18.625446319580078
    8. '```' → logprob: -18.875446319580078
    9. 'For' → logprob: -19.250446319580078
    10. '	' → logprob: -19.375446319580078

Token 1292: ' p' (ID: 275)
  Prédit: 'pillar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pillar' → logprob: -0.19177000224590302
    2. 'poly' → logprob: -2.191770076751709
    3. 'p' → logprob: -2.941770076751709
    4. 'polygon' → logprob: -5.191770076751709
    5. 'pill' → logprob: -5.441770076751709
    6. 'pl' → logprob: -10.19176959991455
    7. 'pol' → logprob: -10.56676959991455
    8. 'pil' → logprob: -10.69176959991455
    9. ' pillar' → logprob: -10.94176959991455
    10. 'ply' → logprob: -12.44176959991455

Token 1293: ' in' (ID: 306)
  Prédit: 'olygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.02724793180823326
    2. ' in' → logprob: -3.652247905731201
    3. 'oly' → logprob: -7.402247905731201
    4. 'illar' → logprob: -8.40224838256836
    5. 'ol' → logprob: -9.52724838256836
    6. 'in' → logprob: -10.65224838256836
    7. 'oint' → logprob: -12.15224838256836
    8. '
' → logprob: -13.27724838256836
    9. 'pillar' → logprob: -14.02724838256836
    10. 'polygon' → logprob: -14.15224838256836

Token 1294: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020950057660229504
    2. 'p' → logprob: -9.50020980834961
    3. ' self' → logprob: -9.87520980834961
    4. 'pill' → logprob: -9.87520980834961
    5. 'pillar' → logprob: -11.12520980834961
    6. '
' → logprob: -12.00020980834961
    7. '[self' → logprob: -12.12520980834961
    8. '(self' → logprob: -12.87520980834961
    9. '   ' → logprob: -14.50020980834961
    10. '	self' → logprob: -14.87520980834961

Token 1295: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.005953687243163586
    2. 'pill' → logprob: -5.380953788757324
    3. 'ill' → logprob: -7.630953788757324
    4. 'p' → logprob: -7.630953788757324
    5. '
' → logprob: -9.755953788757324
    6. '<p' → logprob: -10.630953788757324
    7. '	p' → logprob: -10.630953788757324
    8. 'illar' → logprob: -10.755953788757324
    9. '_p' → logprob: -11.005953788757324
    10. '```' → logprob: -11.130953788757324

Token 1296: 'ill' (ID: 492)
  Prédit: 'ill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ill' → logprob: -0.00044830769184045494
    2. 'pill' → logprob: -7.875448226928711
    3. 'illar' → logprob: -10.250448226928711
    4. '.p' → logprob: -10.875448226928711
    5. 'illers' → logprob: -12.875448226928711
    6. 'il' → logprob: -13.125448226928711
    7. 'ills' → logprob: -13.250448226928711
    8. '.' → logprob: -13.250448226928711
    9. '.vertices' → logprob: -13.375448226928711
    10. 'p' → logprob: -14.375448226928711

Token 1297: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.00011987409379798919
    2. 'ar' → logprob: -9.625120162963867
    3. 'iers' → logprob: -10.250120162963867
    4. 'rs' → logprob: -12.875120162963867
    5. '[' → logprob: -13.000120162963867
    6. 'ors' → logprob: -13.375120162963867
    7. 'gars' → logprob: -13.750120162963867
    8. 'airs' → logprob: -14.000120162963867
    9. 's' → logprob: -14.000120162963867
    10. 'points' → logprob: -14.375120162963867

Token 1298: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17649443447589874
    2. ':
' → logprob: -1.9264944791793823
    3. ' in' → logprob: -4.926494598388672
    4. '   ' → logprob: -5.301494598388672
    5. '.vertices' → logprob: -7.051494598388672
    6. 'in' → logprob: -7.676494598388672
    7. '       ' → logprob: -7.676494598388672
    8. '           ' → logprob: -7.926494598388672
    9. '.' → logprob: -8.176494598388672
    10. ':p' → logprob: -8.676494598388672

Token 1299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010615743696689606
    2. ' for' → logprob: -4.635615825653076
    3. 'for' → logprob: -7.135615825653076
    4. '	       ' → logprob: -10.885615348815918
    5. '   ' → logprob: -11.010615348815918
    6. '          ' → logprob: -12.510615348815918
    7. ',' → logprob: -12.510615348815918
    8. '       ' → logprob: -12.885615348815918
    9. '    	   ' → logprob: -12.885615348815918
    10. '		   ' → logprob: -13.135615348815918

Token 1300: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011231731623411179
    2. ' for' → logprob: -4.511231899261475
    3. '           ' → logprob: -8.636231422424316
    4. '   ' → logprob: -12.261231422424316
    5. '       ' → logprob: -14.761231422424316
    6. '               ' → logprob: -14.761231422424316
    7. ' ' → logprob: -15.261231422424316
    8. '	for' → logprob: -15.761231422424316
    9. ' ys' → logprob: -15.886231422424316
    10. ' ' → logprob: -16.261232376098633

Token 1301: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008864626288414001
    2. 'vertex' → logprob: -4.758864402770996
    3. 'pt' → logprob: -8.508864402770996
    4. 'vert' → logprob: -10.008864402770996
    5. 'point' → logprob: -12.758864402770996
    6. ' v' → logprob: -14.883864402770996
    7. ' vertex' → logprob: -16.383865356445312
    8. 'vx' → logprob: -17.383865356445312
    9. 'vp' → logprob: -17.883865356445312
    10. 'poly' → logprob: -18.008865356445312

Token 1302: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11287330836057663
    2. 'in' → logprob: -2.2378733158111572
    3. 'v' → logprob: -10.362873077392578
    4. 'n' → logprob: -12.612873077392578
    5. '	in' → logprob: -12.612873077392578
    6. 'p' → logprob: -12.737873077392578
    7. ' ' → logprob: -12.737873077392578
    8. 'import' → logprob: -13.112873077392578
    9. '  ' → logprob: -13.987873077392578
    10. '   ' → logprob: -14.362873077392578

Token 1303: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.040468934923410416
    2. 'v' → logprob: -3.29046893119812
    3. ' p' → logprob: -6.040469169616699
    4. ' v' → logprob: -10.0404691696167
    5. 'vertices' → logprob: -16.040468215942383
    6. '   ' → logprob: -16.665468215942383
    7. '	p' → logprob: -16.790468215942383
    8. ' ' → logprob: -16.790468215942383
    9. '(p' → logprob: -16.915468215942383
    10. '	v' → logprob: -16.915468215942383

Token 1304: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.00548845250159502
    2. ' in' → logprob: -6.005488395690918
    3. ' .' → logprob: -6.505488395690918
    4. 'in' → logprob: -7.505488395690918
    5. '.v' → logprob: -8.130488395690918
    6. '.' → logprob: -8.880488395690918
    7. '.in' → logprob: -8.880488395690918
    8. 'ert' → logprob: -9.130488395690918
    9. 'vertices' → logprob: -9.505488395690918
    10. '.points' → logprob: -10.380488395690918

Token 1305: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03859837353229523
    2. ':' → logprob: -3.2885982990264893
    3. '           ' → logprob: -7.913598537445068
    4. '.y' → logprob: -9.41359806060791
    5. ':
' → logprob: -9.91359806060791
    6. '               ' → logprob: -10.53859806060791
    7. '.' → logprob: -10.91359806060791
    8. '):
' → logprob: -12.03859806060791
    9. 'y' → logprob: -13.41359806060791
    10. ',' → logprob: -13.78859806060791

Token 1306: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6372959613800049
    2. '           ' → logprob: -0.7622959613800049
    3. ' if' → logprob: -5.512295722961426
    4. 'if' → logprob: -8.012295722961426
    5. ',' → logprob: -9.387295722961426
    6. '	       ' → logprob: -9.887295722961426
    7. '	           ' → logprob: -10.012295722961426
    8. '   ' → logprob: -10.887295722961426
    9. ' ' → logprob: -10.887295722961426
    10. 'y' → logprob: -11.512295722961426

Token 1307: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -0.0331302285194397
    2. 'if' → logprob: -3.533130168914795
    3. 'max' → logprob: -6.033130168914795
    4. '           ' → logprob: -7.283130168914795
    5. ' ys' → logprob: -8.658130645751953
    6. '               ' → logprob: -9.908130645751953
    7. 'y' → logprob: -10.658130645751953
    8. ' if' → logprob: -11.033130645751953
    9. '                   ' → logprob: -11.783130645751953
    10. 'yl' → logprob: -13.033130645751953

Token 1308: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0021895181853324175
    2. '.' → logprob: -6.127189636230469
    3. '.Add' → logprob: -13.377189636230469
    4. '.append' → logprob: -13.502189636230469
    5. ' .' → logprob: -14.502189636230469
    6. '.update' → logprob: -15.502189636230469
    7. '.setdefault' → logprob: -15.627189636230469
    8. ').' → logprob: -15.752189636230469
    9. '.y' → logprob: -16.12718963623047
    10. '.insert' → logprob: -16.37718963623047

Token 1309: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.000639765290543437
    2. 'v' → logprob: -7.500639915466309
    3. '(' → logprob: -9.375639915466309
    4. ' v' → logprob: -13.500639915466309
    5. '(
' → logprob: -14.750639915466309
    6. ' (' → logprob: -15.750639915466309
    7. '	v' → logprob: -17.125638961791992
    8. '(round' → logprob: -17.125638961791992
    9. '(float' → logprob: -18.250638961791992
    10. '((' → logprob: -18.750638961791992

Token 1310: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00011868205183418468
    2. '.' → logprob: -9.125118255615234
    3. ').' → logprob: -11.875118255615234
    4. ' .' → logprob: -13.250118255615234
    5. '.v' → logprob: -14.750118255615234
    6. 'y' → logprob: -15.250118255615234
    7. '.x' → logprob: -16.125118255615234
    8. ')' → logprob: -16.500118255615234
    9. '}.' → logprob: -16.875118255615234
    10. '.py' → logprob: -17.125118255615234

Token 1311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017449157312512398
    2. ')
' → logprob: -6.376744747161865
    3. ' )' → logprob: -10.626745223999023
    4. '       ' → logprob: -12.251745223999023
    5. '+' → logprob: -12.626745223999023
    6. '           ' → logprob: -12.751745223999023
    7. '               ' → logprob: -13.251745223999023
    8. '.' → logprob: -13.751745223999023
    9. '<|end|>' → logprob: -14.001745223999023
    10. ' )
' → logprob: -14.626745223999023

Token 1312: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000672639871481806
    2. '
' → logprob: -8.500672340393066
    3. '           ' → logprob: -8.625672340393066
    4. '       ' → logprob: -8.625672340393066
    5. ',' → logprob: -10.625672340393066
    6. '                
' → logprob: -10.750672340393066
    7. '                   ' → logprob: -11.000672340393066
    8. '```' → logprob: -11.500672340393066
    9. '<|end|>' → logprob: -12.625672340393066
    10. '(max' → logprob: -12.625672340393066

Token 1313: ' max' (ID: 2999)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14304685592651367
    2. 'max' (adapté à ' max') → logprob: -2.0180468559265137
    3. '               ' → logprob: -8.143047332763672
    4. ' if' → logprob: -9.893047332763672
    5. '                   ' → logprob: -11.143047332763672
    6. '           ' → logprob: -11.643047332763672
    7. ' max' → logprob: -12.268047332763672
    8. '                       ' → logprob: -14.768047332763672
    9. '
' → logprob: -15.018047332763672
    10. '       ' → logprob: -15.393047332763672

Token 1314: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0004377022560220212
    2. 'y' → logprob: -7.8754377365112305
    3. '_' → logprob: -10.00043773651123
    4. '=' → logprob: -12.87543773651123
    5. '_=' → logprob: -13.37543773651123
    6. 'Y' → logprob: -13.62543773651123
    7. '```' → logprob: -13.87543773651123
    8. ' =' → logprob: -14.37543773651123
    9. '+=' → logprob: -14.50043773651123
    10. '_x' → logprob: -14.62543773651123

Token 1315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024925414472818375
    2. ' =' → logprob: -6.002492427825928
    3. '=max' → logprob: -11.002492904663086
    4. 'max' → logprob: -16.252492904663086
    5. '=
' → logprob: -18.002492904663086
    6. '.=' → logprob: -18.127492904663086
    7. '_=' → logprob: -19.252492904663086
    8. '>' → logprob: -19.377492904663086
    9. ' max' → logprob: -19.627492904663086
    10. 's' → logprob: -19.627492904663086

Token 1316: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0067154900170862675
    2. ' max' → logprob: -5.006715297698975
    3. '	max' → logprob: -15.631715774536133
    4. '(max' → logprob: -16.881715774536133
    5. '=max' → logprob: -19.131715774536133
    6. '[max' → logprob: -19.131715774536133
    7. '_max' → logprob: -19.256715774536133
    8. ',max' → logprob: -20.381715774536133
    9. '   ' → logprob: -21.006715774536133
    10. '.max' → logprob: -21.256715774536133

Token 1317: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -2.7848862373502925e-05
    2. 'max' → logprob: -10.500027656555176
    3. '(' → logprob: -15.875027656555176
    4. '[max' → logprob: -17.375028610229492
    5. ' max' → logprob: -17.750028610229492
    6. '	max' → logprob: -18.250028610229492
    7. '=max' → logprob: -18.500028610229492
    8. ',max' → logprob: -18.750028610229492
    9. '(v' → logprob: -19.250028610229492
    10. '(
' → logprob: -19.250028610229492

Token 1318: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00036025288864038885
    2. '(max' → logprob: -8.250360488891602
    3. 'y' → logprob: -9.750360488891602
    4. 'Y' → logprob: -11.250360488891602
    5. 'max' → logprob: -11.500360488891602
    6. '_v' → logprob: -11.875360488891602
    7. 'v' → logprob: -12.500360488891602
    8. '(v' → logprob: -13.875360488891602
    9. ')' → logprob: -14.125360488891602
    10. '_' → logprob: -14.125360488891602

Token 1319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02279626578092575
    2. '(max' → logprob: -4.022796154022217
    3. ',max' → logprob: -5.772796154022217
    4. 'max' → logprob: -6.897796154022217
    5. 'v' → logprob: -7.647796154022217
    6. '(v' → logprob: -11.147796630859375
    7. '(' → logprob: -11.397796630859375
    8. ',
' → logprob: -12.772796630859375
    9. '[max' → logprob: -13.397796630859375
    10. ',v' → logprob: -13.647796630859375

Token 1320: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.4378848391061183e-05
    2. ' v' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.125014305114746
    4. '	v' → logprob: -15.875014305114746
    5. '               ' → logprob: -16.125015258789062
    6. '                   ' → logprob: -16.125015258789062
    7. '       ' → logprob: -16.375015258789062
    8. '           ' → logprob: -16.750015258789062
    9. '    ' → logprob: -17.875015258789062
    10. '  ' → logprob: -18.250015258789062

Token 1321: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.003099404275417328
    2. '.' → logprob: -6.12809944152832
    3. '.v' → logprob: -7.12809944152832
    4. 'y' → logprob: -9.25309944152832
    5. 'v' → logprob: -11.87809944152832
    6. '.x' → logprob: -12.25309944152832
    7. ' .' → logprob: -13.12809944152832
    8. '.
' → logprob: -15.25309944152832
    9. '[' → logprob: -15.37809944152832
    10. ',' → logprob: -15.50309944152832

Token 1322: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.580107569694519
    2. ')
' → logprob: -0.830107569694519
    3. '               ' → logprob: -5.580107688903809
    4. ' )
' → logprob: -8.580107688903809
    5. '       ' → logprob: -9.455107688903809
    6. '           ' → logprob: -9.955107688903809
    7. ' )' → logprob: -10.080107688903809
    8. ')

' → logprob: -11.955107688903809
    9. '                       ' → logprob: -12.330107688903809
    10. '                   ' → logprob: -12.455107688903809

Token 1323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1274290382862091
    2. '
' → logprob: -2.1274290084838867
    3. ' 
' → logprob: -8.252429008483887
    4. '        
' → logprob: -8.877429008483887
    5. '
' → logprob: -10.877429008483887
    6. ')
' → logprob: -11.502429008483887
    7. '  
' → logprob: -11.752429008483887
    8. ',' → logprob: -12.002429008483887
    9. '<|end|>' → logprob: -12.127429008483887
    10. '    
' → logprob: -12.252429008483887

Token 1324: ' ys' (ID: 67301)
  Prédit: ' ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ys' → logprob: -0.9662715196609497
    2. '       ' → logprob: -1.0912715196609497
    3. 'ys' (adapté à ' ys') → logprob: -1.3412715196609497
    4. '
' → logprob: -3.84127140045166
    5. '        
' → logprob: -8.46627140045166
    6. '   ' → logprob: -9.09127140045166
    7. 'y' → logprob: -9.34127140045166
    8. ')' → logprob: -10.09127140045166
    9. ' ' → logprob: -10.46627140045166
    10. 'hs' → logprob: -10.59127140045166

Token 1325: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.06422363966703415
    2. '.' → logprob: -2.814223527908325
    3. '.update' → logprob: -6.314223766326904
    4. ' =' → logprob: -8.439223289489746
    5. '=' → logprob: -8.814223289489746
    6. ' .' → logprob: -9.814223289489746
    7. '.=' → logprob: -11.064223289489746
    8. 'add' → logprob: -12.689223289489746
    9. '_add' → logprob: -14.189223289489746
    10. ' |=' → logprob: -14.439223289489746

Token 1326: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.4766545295715332
    2. '(self' → logprob: -0.9766545295715332
    3. '(' → logprob: -6.476654529571533
    4. 'self' → logprob: -7.726654529571533
    5. '(float' → logprob: -7.726654529571533
    6. 'max' → logprob: -8.851654052734375
    7. '(s' → logprob: -12.476654052734375
    8. '((' → logprob: -12.976654052734375
    9. 'float' → logprob: -14.101654052734375
    10. '[max' → logprob: -14.226654052734375

Token 1327: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -9.610702363715973e-06
    2. 'y' → logprob: -12.625009536743164
    3. 'Y' → logprob: -12.750009536743164
    4. '_x' → logprob: -13.000009536743164
    5. '_' → logprob: -15.000009536743164
    6. '+' → logprob: -16.000009536743164
    7. ')' → logprob: -16.250009536743164
    8. '
' → logprob: -17.000009536743164
    9. '=' → logprob: -17.125009536743164
    10. '=_' → logprob: -17.125009536743164

Token 1328: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47415122389793396
    2. ' +' → logprob: -0.9741512537002563
    3. '*' → logprob: -9.849151611328125
    4. ')' → logprob: -11.099151611328125
    5. ' *' → logprob: -12.599151611328125
    6. '+
' → logprob: -13.474151611328125
    7. '+)' → logprob: -14.724151611328125
    8. ',' → logprob: -15.474151611328125
    9. ' +
' → logprob: -15.599151611328125
    10. ')
' → logprob: -15.599151611328125

Token 1329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.767401933670044
    2. '10' → logprob: -0.892401933670044
    3. '100' → logprob: -2.142401933670044
    4. 'self' → logprob: -4.767401695251465
    5. ' ' → logprob: -9.017401695251465
    6. '2' → logprob: -10.017401695251465
    7. '5' → logprob: -11.142401695251465
    8. '50' → logprob: -11.267401695251465
    9. ' self' → logprob: -11.517401695251465
    10. '0' → logprob: -12.267401695251465

Token 1330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48674505949020386
    2. '10' → logprob: -1.2367451190948486
    3. '100' → logprob: -2.3617451190948486
    4. 'self' → logprob: -7.4867448806762695
    5. ' ' → logprob: -8.61174488067627
    6. '2' → logprob: -10.48674488067627
    7. '   ' → logprob: -12.48674488067627
    8. '5' → logprob: -12.61174488067627
    9. '0' → logprob: -12.73674488067627
    10. '50' → logprob: -13.36174488067627

Token 1331: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6411012411117554
    2. ')' → logprob: -0.7661012411117554
    3. 'e' → logprob: -5.141101360321045
    4. ')
' → logprob: -6.266101360321045
    5. '0' → logprob: -7.391101360321045
    6. ' )' → logprob: -9.641100883483887
    7. ' .' → logprob: -12.391100883483887
    8. '000' → logprob: -12.641100883483887
    9. '.)' → logprob: -12.641100883483887
    10. '   ' → logprob: -12.641100883483887

Token 1332: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '5' → logprob: -13.625001907348633
    3. '1' → logprob: -14.875001907348633
    4. 'e' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.375001907348633
    6. '000' → logprob: -16.437501907348633
    7. '6' → logprob: -16.500001907348633
    8. '```' → logprob: -16.937501907348633
    9. '00' → logprob: -17.187501907348633
    10. ')' → logprob: -17.312501907348633

Token 1333: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040242893737740815
    2. ')
' → logprob: -8.000402450561523
    3. ' )' → logprob: -9.625402450561523
    4. '       ' → logprob: -14.875402450561523
    5. ' )
' → logprob: -15.750402450561523
    6. ')
' → logprob: -16.500402450561523
    7. '   ' → logprob: -16.750402450561523
    8. ')return' → logprob: -16.750402450561523
    9. ' ' → logprob: -17.125402450561523
    10. ')

' → logprob: -17.625402450561523

Token 1334: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011845214292407036
    2. '       ' → logprob: -4.511845111846924
    3. '
' → logprob: -8.136845588684082
    4. 'return' → logprob: -8.261845588684082
    5. ')
' → logprob: -9.511845588684082
    6. ' 
' → logprob: -9.761845588684082
    7. '  
' → logprob: -10.261845588684082
    8. ')' → logprob: -10.886845588684082
    9. '        
' → logprob: -10.886845588684082
    10. ' return' → logprob: -11.386845588684082

Token 1335: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06903676688671112
    2. 'return' → logprob: -2.8190367221832275
    3. '       ' → logprob: -5.194036960601807
    4. ')' → logprob: -7.319036960601807
    5. '
' → logprob: -7.569036960601807
    6. ')
' → logprob: -9.694036483764648
    7. ' 
' → logprob: -9.819036483764648
    8. '<|end|>' → logprob: -10.069036483764648
    9. '        
' → logprob: -10.194036483764648
    10. ' return' → logprob: -10.194036483764648

Token 1336: ' add' (ID: 1147)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2918891906738281
    2. 'return' → logprob: -1.6668891906738281
    3. '
' → logprob: -3.166889190673828
    4. ' return' → logprob: -4.041889190673828
    5. ')' → logprob: -6.041889190673828
    6. ')
' → logprob: -6.791889190673828
    7. '
' → logprob: -8.291889190673828
    8. '```' → logprob: -9.041889190673828
    9. '0' → logprob: -9.291889190673828
    10. '   ' → logprob: -9.541889190673828

Token 1337: ' a' (ID: 261)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.44936734437942505
    2. '1' → logprob: -1.8243672847747803
    3. ' max' → logprob: -2.0743672847747803
    4. '<|end|>' → logprob: -3.8243672847747803
    5. 'a' → logprob: -4.324367523193359
    6. ' ' → logprob: -4.324367523193359
    7. '0' → logprob: -5.574367523193359
    8. ' a' → logprob: -5.824367523193359
    9. ' ys' → logprob: -5.949367523193359
    10. 'extra' → logprob: -6.074367523193359

Token 1338: ' top' (ID: 2344)
  Prédit: 'very'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'very' → logprob: -0.6012129187583923
    2. 'large' → logprob: -1.726212978363037
    3. ' large' → logprob: -2.476212978363037
    4. 'margin' → logprob: -2.726212978363037
    5. ' margin' → logprob: -3.726212978363037
    6. ' very' → logprob: -3.726212978363037
    7. 'n' → logprob: -4.101212978363037
    8. 'big' → logprob: -4.601212978363037
    9. 'space' → logprob: -4.726212978363037
    10. 'safe' → logprob: -4.851212978363037

Token 1339: ' beyond' (ID: 11615)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6202417612075806
    2. 'boundary' → logprob: -1.2452417612075806
    3. ' +' → logprob: -2.245241641998291
    4. ' boundary' → logprob: -2.870241641998291
    5. 'bound' → logprob: -5.745241641998291
    6. 'limit' → logprob: -6.870241641998291
    7. '_boundary' → logprob: -6.870241641998291
    8. 'line' → logprob: -7.120241641998291
    9. ' sentinel' → logprob: -7.370241641998291
    10. '```' → logprob: -7.620241641998291

Token 1340: ' all' (ID: 722)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00044068231363780797
    2. ' max' → logprob: -7.75044059753418
    3. 'the' → logprob: -11.62544059753418
    4. '(max' → logprob: -14.87544059753418
    5. 'maximum' → logprob: -15.00044059753418
    6. '[max' → logprob: -15.62544059753418
    7. '=max' → logprob: -15.75044059753418
    8. 'all' → logprob: -16.75044059753418
    9. ',max' → logprob: -17.37544059753418
    10. ' the' → logprob: -18.00044059753418

Token 1341: ' pillars' (ID: 105506)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.701812982559204
    2. 'ys' → logprob: -1.701812982559204
    3. 'points' → logprob: -1.826812982559204
    4. 'pill' → logprob: -1.826812982559204
    5. 'max' → logprob: -2.201812982559204
    6. 'vertices' → logprob: -2.451812982559204
    7. 'existing' → logprob: -2.576812982559204
    8. 'pillar' → logprob: -4.451812744140625
    9. 'yp' → logprob: -5.576812744140625
    10. 'p' → logprob: -5.576812744140625

Token 1342: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015636609867215157
    2. '
' → logprob: -4.515636444091797
    3. 'return' → logprob: -5.890636444091797
    4. ')
' → logprob: -6.515636444091797
    5. ')' → logprob: -8.390636444091797
    6. ' return' → logprob: -10.640636444091797
    7. ',
' → logprob: -11.015636444091797
    8. ',' → logprob: -11.265636444091797
    9. '
' → logprob: -11.765636444091797
    10. '        
' → logprob: -11.765636444091797

Token 1343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007193523459136486
    2. '
' → logprob: -5.007193565368652
    3. 'return' → logprob: -8.007193565368652
    4. '	' → logprob: -9.632193565368652
    5. ' return' → logprob: -10.632193565368652
    6. '        
' → logprob: -11.257193565368652
    7. ')
' → logprob: -11.632193565368652
    8. ')' → logprob: -11.757193565368652
    9. '
' → logprob: -12.132193565368652
    10. '   ' → logprob: -12.257193565368652

Token 1344: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0059355515986680984
    2. 'return' (adapté à ' return') → logprob: -5.2559356689453125
    3. ' return' → logprob: -7.3809356689453125
    4. '
' → logprob: -10.255935668945312
    5. ')' → logprob: -10.755935668945312
    6. '   ' → logprob: -11.880935668945312
    7. '        
' → logprob: -12.755935668945312
    8. 'sorted' → logprob: -12.755935668945312
    9. ' sorted' → logprob: -13.755935668945312
    10. '      ' → logprob: -14.255935668945312

Token 1345: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -2.8802491215174086e-05
    2. ' sorted' → logprob: -10.625028610229492
    3. 'list' → logprob: -12.500028610229492
    4. '   ' → logprob: -14.750028610229492
    5. '(sorted' → logprob: -15.625028610229492
    6. '[' → logprob: -16.375028610229492
    7. 'sort' → logprob: -18.750028610229492
    8. ' ' → logprob: -19.750028610229492
    9. '.sorted' → logprob: -20.125028610229492
    10. 'Sorted' → logprob: -20.250028610229492

Token 1346: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002483031013980508
    2. '(list' → logprob: -6.002482891082764
    3. 'list' → logprob: -12.127483367919922
    4. '([' → logprob: -13.627483367919922
    5. '(
' → logprob: -14.502483367919922
    6. '((' → logprob: -16.127483367919922
    7. ' (' → logprob: -17.502483367919922
    8. '({' → logprob: -17.627483367919922
    9. '([(' → logprob: -18.252483367919922
    10. '(set' → logprob: -18.752483367919922

Token 1347: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.002491595223546028
    2. 'list' → logprob: -6.002491474151611
    3. '(' → logprob: -11.12749195098877
    4. 'yt' → logprob: -15.25249195098877
    5. '(list' → logprob: -15.62749195098877
    6. ' ys' → logprob: -15.75249195098877
    7. 'yp' → logprob: -16.377490997314453
    8. 'ym' → logprob: -16.502490997314453
    9. '[' → logprob: -16.627490997314453
    10. ')' → logprob: -16.627490997314453

Token 1348: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4617256056226324e-05
    2. ' )' → logprob: -11.875014305114746
    3. ')
' → logprob: -12.625014305114746
    4. '())' → logprob: -13.500014305114746
    5. '))' → logprob: -14.000014305114746
    6. '   ' → logprob: -14.125014305114746
    7. '()' → logprob: -14.750014305114746
    8. ')}' → logprob: -16.000015258789062
    9. '       ' → logprob: -16.125015258789062
    10. ' ' → logprob: -16.250015258789062

Token 1349: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1273564100265503
    2. '   ' → logprob: -2.62735652923584
    3. '<|end|>' → logprob: -3.25235652923584
    4. '    
' → logprob: -5.62735652923584
    5. '

' → logprob: -5.87735652923584
    6. 'def' → logprob: -7.12735652923584
    7. '<|end|>' → logprob: -7.62735652923584
    8. '```' → logprob: -7.75235652923584
    9. '  
' → logprob: -8.37735652923584
    10. ' 
' → logprob: -9.37735652923584

Token 1350: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009476968087255955
    2. '
' → logprob: -4.759477138519287
    3. '   ' → logprob: -7.259477138519287
    4. ' def' → logprob: -9.009476661682129
    5. '    
' → logprob: -10.759476661682129
    6. '

' → logprob: -11.384476661682129
    7. '        
' → logprob: -14.009476661682129
    8. '	def' → logprob: -14.384476661682129
    9. '```' → logprob: -14.384476661682129
    10. '  
' → logprob: -14.634476661682129

Token 1351: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.07590968161821365
    2. ' _' → logprob: -2.7009096145629883
    3. '_create' → logprob: -6.325909614562988
    4. '_generate' → logprob: -7.450909614562988
    5. '_find' → logprob: -7.700909614562988
    6. '_' → logprob: -7.700909614562988
    7. '_get' → logprob: -7.700909614562988
    8. '_compute' → logprob: -7.950909614562988
    9. '_add' → logprob: -8.075909614562988
    10. '_points' → logprob: -8.325909614562988

Token 1352: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.022509103640913963
    2. 'collect' → logprob: -4.6475090980529785
    3. 'get' → logprob: -5.0225090980529785
    4. 'generate' → logprob: -6.2725090980529785
    5. 'create' → logprob: -6.5225090980529785
    6. 'compute' → logprob: -7.0225090980529785
    7. 'find' → logprob: -7.1475090980529785
    8. 'extract' → logprob: -7.5225090980529785
    9. 'construct' → logprob: -8.147509574890137
    10. 'prepare' → logprob: -9.272509574890137

Token 1353: '_nodes' (ID: 34593)
  Prédit: '_visibility'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_visibility' → logprob: -0.25576984882354736
    2. 'visibility' → logprob: -2.380769729614258
    3. 'graph' → logprob: -2.880769729614258
    4. '_nodes' → logprob: -3.505769729614258
    5. 'nodes' → logprob: -3.755769729614258
    6. 'vertical' → logprob: -4.380769729614258
    7. '_graph' → logprob: -5.130769729614258
    8. '_vertical' → logprob: -5.505769729614258
    9. '_node' → logprob: -8.380769729614258
    10. '_points' → logprob: -8.630769729614258

Token 1354: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008491750340908766
    2. '(' → logprob: -7.25084924697876
    3. 'self' → logprob: -9.250848770141602
    4. '   ' → logprob: -11.250848770141602
    5. '(
' → logprob: -11.500848770141602
    6. '()' → logprob: -12.250848770141602
    7. '_points' → logprob: -12.750848770141602
    8. ' (' → logprob: -13.250848770141602
    9. '       ' → logprob: -13.375848770141602
    10. 'points' → logprob: -13.500848770141602

Token 1355: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1815328747034073
    2. '(self' → logprob: -2.181532859802246
    3. 'self' → logprob: -3.056532859802246
    4. '):
' → logprob: -5.556532859802246
    5. '):' → logprob: -6.556532859802246
    6. ',' → logprob: -8.056532859802246
    7. '   ' → logprob: -8.431532859802246
    8. '       ' → logprob: -9.431532859802246
    9. ')(' → logprob: -10.431532859802246
    10. '
' → logprob: -10.556532859802246

Token 1356: ' horizontal' (ID: 25511)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -1.39509916305542
    2. 'horizontal' → logprob: -1.39509916305542
    3. ')' → logprob: -1.52009916305542
    4. ' horizontal' → logprob: -2.52009916305542
    5. 'bands' → logprob: -3.39509916305542
    6. 'ys' → logprob: -3.39509916305542
    7. 'y' → logprob: -3.64509916305542
    8. ' cut' → logprob: -4.02009916305542
    9. 'hor' → logprob: -4.14509916305542
    10. 'cuts' → logprob: -4.39509916305542

Token 1357: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.5859349966049194
    2. '_cut' → logprob: -0.8359349966049194
    3. '_c' → logprob: -5.085935115814209
    4. '_positions' → logprob: -7.210935115814209
    5. '_levels' → logprob: -7.335935115814209
    6. 'cuts' → logprob: -7.835935115814209
    7. '_' → logprob: -7.835935115814209
    8. 's' → logprob: -8.33593463897705
    9. '_ranges' → logprob: -8.71093463897705
    10. 'lines' → logprob: -8.71093463897705

Token 1358: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024855809286236763
    2. '):' → logprob: -4.274855613708496
    3. '(self' → logprob: -4.899855613708496
    4. 'self' → logprob: -6.524855613708496
    5. '):
' → logprob: -7.024855613708496
    6. ':' → logprob: -7.774855613708496
    7. '   ' → logprob: -8.149855613708496
    8. '       ' → logprob: -9.524855613708496
    9. ')->' → logprob: -11.524855613708496
    10. ' self' → logprob: -11.899855613708496

Token 1359: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.048962824046611786
    2. ')' → logprob: -3.0489628314971924
    3. ' List' → logprob: -8.298962593078613
    4. ')->' → logprob: -9.548962593078613
    5. '):
' → logprob: -11.173962593078613
    6. 'list' → logprob: -11.923962593078613
    7. '[List' → logprob: -12.048962593078613
    8. '):' → logprob: -12.173962593078613
    9. '```' → logprob: -12.298962593078613
    10. 'None' → logprob: -12.923962593078613

Token 1360: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.9650025428272784e-05
    2. 'float' → logprob: -11.000040054321289
    3. '[int' → logprob: -11.750040054321289
    4. ')' → logprob: -12.250040054321289
    5. '[
' → logprob: -13.000040054321289
    6. '):
' → logprob: -13.250040054321289
    7. ']' → logprob: -13.625040054321289
    8. '):' → logprob: -14.000040054321289
    9. '[List' → logprob: -14.125040054321289
    10. '   ' → logprob: -14.375040054321289

Token 1361: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.7697225252486533e-06
    2. ' float' → logprob: -13.125003814697266
    3. 'flo' → logprob: -14.000003814697266
    4. ')' → logprob: -14.875003814697266
    5. '[' → logprob: -16.125003814697266
    6. '	float' → logprob: -16.375003814697266
    7. ',float' → logprob: -16.625003814697266
    8. '```' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.125003814697266
    10. '(float' → logprob: -17.125003814697266

Token 1362: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002370416419580579
    2. '):
' → logprob: -6.127370357513428
    3. '):' → logprob: -9.002370834350586
    4. '])' → logprob: -10.502370834350586
    5. ' )' → logprob: -11.252370834350586
    6. '   ' → logprob: -11.752370834350586
    7. '):
' → logprob: -12.252370834350586
    8. ')->' → logprob: -12.252370834350586
    9. '):

' → logprob: -13.752370834350586
    10. '）' → logprob: -14.502370834350586

Token 1363: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6196247935295105
    2. '->' → logprob: -1.2446248531341553
    3. ':' → logprob: -2.4946248531341553
    4. ' ->' → logprob: -3.1196248531341553
    5. ')' → logprob: -4.119624614715576
    6. '   ' → logprob: -4.244624614715576
    7. '(self' → logprob: -4.744624614715576
    8. ':
' → logprob: -5.119624614715576
    9. ',' → logprob: -7.869624614715576
    10. '=' → logprob: -7.994624614715576

Token 1364: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.03300509229302406
    2. ' List' → logprob: -3.5330049991607666
    3. 'Dict' → logprob: -5.783005237579346
    4. '[List' → logprob: -9.158004760742188
    5. ' Dict' → logprob: -10.033004760742188
    6. 'dict' → logprob: -11.158004760742188
    7. '[]' → logprob: -12.533004760742188
    8. '	List' → logprob: -14.158004760742188
    9. 'list' → logprob: -14.783004760742188
    10. ' dict' → logprob: -14.908004760742188

Token 1365: '[List' (ID: 113982)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25193697214126587
    2. '[List' → logprob: -1.501936912536621
    3. 'Point' → logprob: -13.001936912536621
    4. '[
' → logprob: -13.876936912536621
    5. '[np' → logprob: -13.876936912536621
    6. '['' → logprob: -14.001936912536621
    7. '<Point' → logprob: -14.126936912536621
    8. ':' → logprob: -14.251936912536621
    9. '[int' → logprob: -14.751936912536621
    10. '[str' → logprob: -15.501936912536621

Token 1366: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07360859960317612
    2. 'Point' → logprob: -2.698608636856079
    3. '[List' → logprob: -6.4486083984375
    4. 'float' → logprob: -6.6986083984375
    5. 'Optional' → logprob: -7.4486083984375
    6. 'List' → logprob: -9.1986083984375
    7. ']' → logprob: -10.0736083984375
    8. '[
' → logprob: -10.0736083984375
    9. '(Point' → logprob: -11.3236083984375
    10. '   ' → logprob: -11.5736083984375

Token 1367: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.3501098155975342
    2. 'float' → logprob: -1.2251098155975342
    3. 'Tuple' → logprob: -6.725110054016113
    4. 'Optional' → logprob: -7.850110054016113
    5. 'List' → logprob: -10.850110054016113
    6. '[' → logprob: -10.975110054016113
    7. 'Float' → logprob: -11.100110054016113
    8. ' float' → logprob: -11.975110054016113
    9. ' Point' → logprob: -12.725110054016113
    10. 'flo' → logprob: -13.475110054016113

Token 1368: ']]:
' (ID: 183340)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3926412761211395
    2. ']:
' → logprob: -1.142641305923462
    3. ']' → logprob: -5.767641067504883
    4. ']]:
' → logprob: -6.392641067504883
    5. ']:
' → logprob: -8.017641067504883
    6. '   ' → logprob: -8.767641067504883
    7. '[' → logprob: -8.892641067504883
    8. ']:

' → logprob: -9.392641067504883
    9. ']>' → logprob: -9.642641067504883
    10. ']]' → logprob: -10.392641067504883

Token 1369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2948405128554441e-05
    2. '[' → logprob: -12.87501335144043
    3. '	' → logprob: -12.87501335144043
    4. '   ' → logprob: -12.87501335144043
    5. '[]' → logprob: -13.37501335144043
    6. '```' → logprob: -13.62501335144043
    7. '
' → logprob: -14.62501335144043
    8. ',' → logprob: -15.00001335144043
    9. ':' → logprob: -15.50001335144043
    10. 'n' → logprob: -15.62501335144043

Token 1370: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010751137509942055
    2. 'nodes' → logprob: -5.010751247406006
    3. 'points' → logprob: -5.885751247406006
    4. ' points' → logprob: -7.260751247406006
    5. ' nodes' → logprob: -7.885751247406006
    6. 'result' → logprob: -10.010750770568848
    7. 'n' → logprob: -10.260750770568848
    8. '   ' → logprob: -10.260750770568848
    9. 'node' → logprob: -10.760750770568848
    10. ' lines' → logprob: -12.260750770568848

Token 1371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027632996439933777
    2. 'nodes' → logprob: -4.027633190155029
    3. 'points' → logprob: -5.652633190155029
    4. ' nodes' → logprob: -6.027633190155029
    5. '   ' → logprob: -6.527633190155029
    6. ' points' → logprob: -6.777633190155029
    7. 'result' → logprob: -7.902633190155029
    8. 'res' → logprob: -9.027632713317871
    9. ' lines' → logprob: -9.402632713317871
    10. '[]' → logprob: -9.777632713317871

Token 1372: ' We' (ID: 1416)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.14605379104614258
    2. ' nodes' → logprob: -2.2710537910461426
    3. '       ' → logprob: -4.271053791046143
    4. 'points' → logprob: -4.896053791046143
    5. 'result' → logprob: -5.896053791046143
    6. 'res' → logprob: -5.896053791046143
    7. 'lines' → logprob: -6.271053791046143
    8. 'rows' → logprob: -6.646053791046143
    9. '#' → logprob: -7.521053791046143
    10. ' points' → logprob: -7.646053791046143

Token 1373: ' create' (ID: 2501)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6492613554000854
    2. ' =' → logprob: -1.6492613554000854
    3. ' def' → logprob: -2.399261474609375
    4. '_' → logprob: -2.774261474609375
    5. ' ' → logprob: -3.399261474609375
    6. 'def' → logprob: -3.399261474609375
    7. ':' → logprob: -3.899261474609375
    8. '=' → logprob: -4.649261474609375
    9. ' :' → logprob: -4.774261474609375
    10. '    ' → logprob: -5.149261474609375

Token 1374: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.9050336480140686
    2. '[]' → logprob: -1.1550335884094238
    3. 'nodes' → logprob: -2.655033588409424
    4. '[]
' → logprob: -2.655033588409424
    5. ' []
' → logprob: -3.280033588409424
    6. ' []' → logprob: -3.405033588409424
    7. '[
' → logprob: -4.030033588409424
    8. ' for' → logprob: -4.155033588409424
    9. ' [
' → logprob: -5.030033588409424
    10. '[' → logprob: -5.155033588409424

Token 1375: ' on' (ID: 402)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.3623188734054565
    2. 'for' → logprob: -1.6123188734054565
    3. '=' → logprob: -2.237318992614746
    4. ' for' → logprob: -2.362318992614746
    5. ' =' → logprob: -2.862318992614746
    6. '   ' → logprob: -3.237318992614746
    7. '       ' → logprob: -3.487318992614746
    8. ':' → logprob: -3.612318992614746
    9. ' on' → logprob: -3.737318992614746
    10. 'at' → logprob: -3.737318992614746

Token 1376: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.1836469173431396
    2. '[' → logprob: -1.6836469173431396
    3. 'each' → logprob: -2.0586469173431396
    4. 'the' → logprob: -2.1836469173431396
    5. ' the' → logprob: -2.4336469173431396
    6. 'horizontal' → logprob: -3.8086469173431396
    7. 'edges' → logprob: -3.9336469173431396
    8. '[
' → logprob: -3.9336469173431396
    9. ' edges' → logprob: -4.058647155761719
    10. '0' → logprob: -4.433647155761719

Token 1377: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.347109854221344
    2. ' horizontal' → logprob: -1.8471097946166992
    3. 'line' → logprob: -2.222109794616699
    4. ' line' → logprob: -3.847109794616699
    5. 'y' → logprob: -6.722109794616699
    6. ' y' → logprob: -6.847109794616699
    7. 'layer' → logprob: -7.097109794616699
    8. 'segment' → logprob: -7.722109794616699
    9. ' ' → logprob: -8.0971097946167
    10. '[' → logprob: -8.3471097946167

Token 1378: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.05214601755142212
    2. 'line' → logprob: -3.6771459579467773
    3. '_line' → logprob: -4.052145957946777
    4. '_' → logprob: -5.927145957946777
    5. ' _' → logprob: -5.927145957946777
    6. '   ' → logprob: -6.677145957946777
    7. ' ' → logprob: -7.052145957946777
    8. '_cut' → logprob: -8.927145957946777
    9. '_lines' → logprob: -9.552145957946777
    10. ' 
' → logprob: -9.552145957946777

Token 1379: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2612310647964478
    2. ' at' → logprob: -1.3862310647964478
    3. ':' → logprob: -1.5112310647964478
    4. ' for' → logprob: -2.886230945587158
    5. ' by' → logprob: -3.011230945587158
    6. ':
' → logprob: -3.636230945587158
    7. '.' → logprob: -3.761230945587158
    8. '       ' → logprob: -4.136230945587158
    9. ' that' → logprob: -4.136230945587158
    10. ' in' → logprob: -4.761230945587158

Token 1380: ' initial' (ID: 4871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.816670835018158
    2. ' points' → logprob: -1.5666708946228027
    3. ' []' → logprob: -2.4416708946228027
    4. '[]' → logprob: -2.5666708946228027
    5. '[]
' → logprob: -3.8166708946228027
    6. ' []
' → logprob: -3.9416708946228027
    7. 'points' → logprob: -4.066670894622803
    8. '[' → logprob: -4.191670894622803
    9. '           ' → logprob: -4.191670894622803
    10. ' lines' → logprob: -4.191670894622803

Token 1381: ' corridor' (ID: 92467)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7828759551048279
    2. 'and' → logprob: -2.0328760147094727
    3. 'ly' → logprob: -2.4078760147094727
    4. '[' → logprob: -3.0328760147094727
    5. ',' → logprob: -3.1578760147094727
    6. ' line' → logprob: -3.2828760147094727
    7. 'nodes' → logprob: -4.157876014709473
    8. '[]' → logprob: -4.282876014709473
    9. 'line' → logprob: -4.282876014709473
    10. ' nodes' → logprob: -4.282876014709473

Token 1382: ' edges' (ID: 22569)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.396356999874115
    2. '_width' → logprob: -2.1463570594787598
    3. 's' → logprob: -2.8963570594787598
    4. ' width' → logprob: -3.1463570594787598
    5. ',' → logprob: -3.3963570594787598
    6. '       ' → logprob: -4.27135705947876
    7. '   ' → logprob: -4.52135705947876
    8. '_points' → logprob: -5.02135705947876
    9. 'y' → logprob: -5.14635705947876
    10. 'x' → logprob: -5.64635705947876

Token 1383: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.048794150352478
    2. '[' → logprob: -1.423794150352478
    3. ',' → logprob: -1.923794150352478
    4. '       ' → logprob: -2.0487942695617676
    5. ':' → logprob: -3.2987942695617676
    6. '=' → logprob: -3.9237942695617676
    7. '   ' → logprob: -4.173794269561768
    8. '        
' → logprob: -4.673794269561768
    9. '[
' → logprob: -4.798794269561768
    10. '
' → logprob: -5.298794269561768

Token 1384: '0' (ID: 15)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.4954050779342651
    2. 'at' → logprob: -1.7454050779342651
    3. 'and' → logprob: -1.8704050779342651
    4. ' at' → logprob: -2.3704051971435547
    5. '[' → logprob: -2.7454051971435547
    6. 'between' → logprob: -2.7454051971435547
    7. ',' → logprob: -2.8704051971435547
    8. 'from' → logprob: -3.7454051971435547
    9. ' and' → logprob: -3.8704051971435547
    10. '+' → logprob: -3.9954051971435547

Token 1385: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11828090995550156
    2. ',' → logprob: -2.7432808876037598
    3. 'and' → logprob: -3.7432808876037598
    4. ' ,' → logprob: -4.99328088760376
    5. '.' → logprob: -5.24328088760376
    6. ' at' → logprob: -6.11828088760376
    7. '0' → logprob: -6.36828088760376
    8. ' (' → logprob: -6.49328088760376
    9. ' to' → logprob: -6.61828088760376
    10. ' ' → logprob: -7.36828088760376

Token 1386: ' W' (ID: 486)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11388558894395828
    2. ' self' → logprob: -2.2388856410980225
    3. '1' → logprob: -7.488885402679443
    4. ' ' → logprob: -8.113885879516602
    5. '   ' → logprob: -8.988885879516602
    6. '<|end|>' → logprob: -10.738885879516602
    7. '	self' → logprob: -10.988885879516602
    8. '  ' → logprob: -11.863885879516602
    9. '[self' → logprob: -12.363885879516602
    10. '100' → logprob: -12.613885879516602

Token 1387: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5365622043609619
    2. '       ' → logprob: -1.911562204360962
    3. '
' → logprob: -2.411562204360962
    4. '[' → logprob: -3.161562204360962
    5. ':' → logprob: -3.536562204360962
    6. ' and' → logprob: -3.786562204360962
    7. ' ,' → logprob: -3.786562204360962
    8. ',
' → logprob: -3.911562204360962
    9. ':
' → logprob: -4.286561965942383
    10. '   ' → logprob: -5.036561965942383

Token 1388: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.06852126121521
    2. '       ' → logprob: -1.56852126121521
    3. '   ' → logprob: -2.06852126121521
    4. 'and' → logprob: -2.31852126121521
    5. ',' → logprob: -2.56852126121521
    6. '    ' → logprob: -3.81852126121521
    7. ' ' → logprob: -3.94352126121521
    8. '           ' → logprob: -4.068521499633789
    9. '0' → logprob: -4.818521499633789
    10. '        ' → logprob: -5.068521499633789

Token 1389: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7348460555076599
    2. 'and' (adapté à ' and') → logprob: -0.7348460555076599
    3. '   ' → logprob: -4.109846115112305
    4. ',' → logprob: -5.359846115112305
    5. ' as' → logprob: -5.609846115112305
    6. '    ' → logprob: -5.734846115112305
    7. '           ' → logprob: -6.109846115112305
    8. '
' → logprob: -6.359846115112305
    9. '       ' → logprob: -6.484846115112305
    10. ' ' → logprob: -6.609846115112305

Token 1390: ' add' (ID: 1147)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.7088432312011719
    2. ' for' → logprob: -2.333843231201172
    3. 'points' → logprob: -2.583843231201172
    4. 'inter' → logprob: -2.583843231201172
    5. 'for' → logprob: -2.833843231201172
    6. ' intermediate' → logprob: -2.833843231201172
    7. '[' → logprob: -3.333843231201172
    8. ' in' → logprob: -4.833843231201172
    9. ' all' → logprob: -4.958843231201172
    10. '   ' → logprob: -4.958843231201172

Token 1391: ' pillar' (ID: 109066)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.4370356798171997
    2. 'points' → logprob: -1.6870356798171997
    3. ' intermediate' → logprob: -2.81203556060791
    4. 'inter' → logprob: -3.31203556060791
    5. '[' → logprob: -4.43703556060791
    6. 'vertices' → logprob: -4.56203556060791
    7. ' the' → logprob: -5.06203556060791
    8. 'internal' → logprob: -5.31203556060791
    9. ' internal' → logprob: -5.56203556060791
    10. 'the' → logprob: -5.81203556060791

Token 1392: ' edges' (ID: 22569)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.3450656533241272
    2. 's' → logprob: -1.7200655937194824
    3. ' vertices' → logprob: -2.5950655937194824
    4. '_vertices' → logprob: -4.470065593719482
    5. 'edges' → logprob: -4.720065593719482
    6. ' edges' → logprob: -5.220065593719482
    7. 'points' → logprob: -5.720065593719482
    8. '.vertices' → logprob: -5.970065593719482
    9. '   ' → logprob: -6.720065593719482
    10. '.' → logprob: -6.720065593719482

Token 1393: ' intersections' (ID: 143513)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.166465163230896
    2. '   ' → logprob: -1.541465163230896
    3. ' on' → logprob: -1.541465163230896
    4. '[' → logprob: -2.1664652824401855
    5. ',' → logprob: -3.0414652824401855
    6. 'on' → logprob: -4.1664652824401855
    7. '       ' → logprob: -4.2914652824401855
    8. '.' → logprob: -4.7914652824401855
    9. ' between' → logprob: -4.9164652824401855
    10. ' along' → logprob: -5.2914652824401855

Token 1394: ' projected' (ID: 49179)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.858078122138977
    2. '.' → logprob: -1.983078122138977
    3. ' at' → logprob: -1.983078122138977
    4. ' on' → logprob: -2.1080780029296875
    5. '   ' → logprob: -2.9830780029296875
    6. ',' → logprob: -3.3580780029296875
    7. ':' → logprob: -3.9830780029296875
    8. 'with' → logprob: -4.2330780029296875
    9. ' for' → logprob: -4.8580780029296875
    10. ' between' → logprob: -4.8580780029296875

Token 1395: ' on' (ID: 402)
  Prédit: ' onto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' onto' → logprob: -0.4142817258834839
    2. ' to' → logprob: -2.1642818450927734
    3. ' on' → logprob: -3.0392818450927734
    4. 'to' → logprob: -3.2892818450927734
    5. 'onto' → logprob: -3.2892818450927734
    6. 'from' → logprob: -3.6642818450927734
    7. ' into' → logprob: -4.289281845092773
    8. ' from' → logprob: -4.539281845092773
    9. ' along' → logprob: -4.789281845092773
    10. ' at' → logprob: -4.789281845092773

Token 1396: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.044979214668274
    2. 'horizontal' → logprob: -1.544979214668274
    3. ' the' → logprob: -2.2949790954589844
    4. 'that' → logprob: -2.7949790954589844
    5. ' horizontal' → logprob: -2.9199790954589844
    6. ' that' → logprob: -3.0449790954589844
    7. '[' → logprob: -3.0449790954589844
    8. 'each' → logprob: -3.4199790954589844
    9. ' each' → logprob: -3.9199790954589844
    10. ' these' → logprob: -4.419979095458984

Token 1397: ' line' (ID: 2543)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -1.7113796472549438
    2. ' line' → logprob: -1.8363796472549438
    3. ' lines' → logprob: -2.0863795280456543
    4. ' horizontal' → logprob: -2.2113795280456543
    5. ' corridor' → logprob: -2.3363795280456543
    6. 'line' → logprob: -2.4613795280456543
    7. 'x' → logprob: -2.7113795280456543
    8. 'right' → logprob: -3.0863795280456543
    9. ' x' → logprob: -3.2113795280456543
    10. ' right' → logprob: -3.4613795280456543

Token 1398: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052952710539102554
    2. ',' → logprob: -3.552952766418457
    3. '.' → logprob: -5.802952766418457
    4. ',
' → logprob: -5.802952766418457
    5. ':
' → logprob: -5.802952766418457
    6. '.
' → logprob: -5.927952766418457
    7. '
' → logprob: -6.302952766418457
    8. ':' → logprob: -6.302952766418457
    9. '   ' → logprob: -6.802952766418457
    10. ' for' → logprob: -6.927952766418457

Token 1399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005676874425262213
    2. '        
' → logprob: -8.125567436218262
    3. '
' → logprob: -9.375567436218262
    4. '   ' → logprob: -9.750567436218262
    5. ',' → logprob: -10.125567436218262
    6. '[' → logprob: -10.875567436218262
    7. '```' → logprob: -11.375567436218262
    8. ')' → logprob: -11.500567436218262
    9. '    
' → logprob: -12.000567436218262
    10. ' ' → logprob: -12.000567436218262

Token 1400: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004383247811347246
    2. '
' → logprob: -5.879383087158203
    3. '```' → logprob: -7.629383087158203
    4. ' lines' → logprob: -8.004383087158203
    5. '        
' → logprob: -8.254383087158203
    6. ')' → logprob: -9.254383087158203
    7. '   ' → logprob: -9.254383087158203
    8. ',' → logprob: -10.004383087158203
    9. '):
' → logprob: -10.129383087158203
    10. 'result' → logprob: -10.379383087158203

Token 1401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003288701642304659
    2. 'nodes' → logprob: -5.753288745880127
    3. ' nodes' → logprob: -10.128288269042969
    4. 'result' → logprob: -10.503288269042969
    5. 'n' → logprob: -11.128288269042969
    6. 'points' → logprob: -11.628288269042969
    7. '
' → logprob: -11.753288269042969
    8. ' lines' → logprob: -12.378288269042969
    9. 'lines' → logprob: -13.128288269042969
    10. 'width' → logprob: -13.628288269042969

Token 1402: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.0035191758070141077
    2. 'all' → logprob: -6.253519058227539
    3. '   ' → logprob: -7.503519058227539
    4. 'lines' → logprob: -7.753519058227539
    5. 'result' → logprob: -8.378519058227539
    6. 'res' → logprob: -8.878519058227539
    7. 'node' → logprob: -9.003519058227539
    8. ' nodes' → logprob: -10.628519058227539
    9. 'rows' → logprob: -10.628519058227539
    10. '       ' → logprob: -10.628519058227539

Token 1403: '_per' (ID: 10938)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16511984169483185
    2. '=' → logprob: -1.9151198863983154
    3. ':' → logprob: -5.540119647979736
    4. '_lines' → logprob: -8.165120124816895
    5. '_rows' → logprob: -8.665120124816895
    6. '=[]
' → logprob: -9.040120124816895
    7. '_per' → logprob: -9.290120124816895
    8. '=[]' → logprob: -9.415120124816895
    9. '_nodes' → logprob: -9.540120124816895
    10. '.append' → logprob: -9.915120124816895

Token 1404: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.007957342080771923
    2. 'level' → logprob: -5.132957458496094
    3. ' line' → logprob: -6.632957458496094
    4. '=' → logprob: -8.632957458496094
    5. '_line' → logprob: -9.007957458496094
    6. ' ' → logprob: -9.007957458496094
    7. '=line' → logprob: -9.757957458496094
    8. 'layer' → logprob: -10.007957458496094
    9. 'int' → logprob: -10.632957458496094
    10. '   ' → logprob: -10.632957458496094

Token 1405: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3141343891620636
    2. '=' → logprob: -1.3141343593597412
    3. ':' → logprob: -7.06413459777832
    4. '=[]' → logprob: -11.06413459777832
    5. '=[]
' → logprob: -14.06413459777832
    6. ' :' → logprob: -15.18913459777832
    7. '=[]
' → logprob: -16.31413459777832
    8. '   ' → logprob: -16.56413459777832
    9. ' ' → logprob: -17.18913459777832
    10. '.append' → logprob: -17.93913459777832

Token 1406: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.006799441296607256
    2. ' List' → logprob: -5.006799221038818
    3. '[List' → logprob: -9.506799697875977
    4. ' =' → logprob: -12.381799697875977
    5. '=' → logprob: -12.631799697875977
    6. '[]' → logprob: -13.256799697875977
    7. '[' → logprob: -15.506799697875977
    8. 'list' → logprob: -15.756799697875977
    9. '   ' → logprob: -16.506799697875977
    10. '	List' → logprob: -16.756799697875977

Token 1407: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -11.625009536743164
    3. ' =' → logprob: -16.375009536743164
    4. 'List' → logprob: -17.250009536743164
    5. '   ' → logprob: -17.375009536743164
    6. '=' → logprob: -18.750009536743164
    7. '<List' → logprob: -18.750009536743164
    8. '[int' → logprob: -18.875009536743164
    9. '[
' → logprob: -19.125009536743164
    10. '(List' → logprob: -19.750009536743164

Token 1408: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '[List' → logprob: -12.87500286102295
    3. 'Point' → logprob: -15.12500286102295
    4. '[
' → logprob: -15.12500286102295
    5. '<Point' → logprob: -16.125003814697266
    6. ']' → logprob: -16.750003814697266
    7. '   ' → logprob: -17.750003814697266
    8. '```' → logprob: -17.750003814697266
    9. '[[' → logprob: -18.625003814697266
    10. '
' → logprob: -18.625003814697266

Token 1409: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.584861744660884e-05
    2. 'float' → logprob: -10.000045776367188
    3. '[' → logprob: -15.375045776367188
    4. ' Point' → logprob: -16.375045776367188
    5. ']' → logprob: -17.500045776367188
    6. '	Point' → logprob: -17.500045776367188
    7. 'Float' → logprob: -18.000045776367188
    8. '```' → logprob: -18.500045776367188
    9. '(Point' → logprob: -19.250045776367188
    10. '`' → logprob: -19.625045776367188

Token 1410: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021843716967850924
    2. ']]' → logprob: -8.500218391418457
    3. ']=' → logprob: -11.125218391418457
    4. '[' → logprob: -16.000219345092773
    5. ')]' → logprob: -17.375219345092773
    6. '   ' → logprob: -17.625219345092773
    7. '>]' → logprob: -17.875219345092773
    8. ']>' → logprob: -18.375219345092773
    9. ']
' → logprob: -18.625219345092773
    10. ' ]' → logprob: -19.125219345092773

Token 1411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '=[]' → logprob: -15.761048316955566
    4. '       ' → logprob: -17.38604736328125
    5. ')' → logprob: -19.63604736328125
    6. ':' → logprob: -19.76104736328125
    7. '＝' → logprob: -20.01104736328125
    8. '   ' → logprob: -20.26104736328125
    9. '	' → logprob: -20.26104736328125
    10. '.append' → logprob: -20.38604736328125

Token 1412: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.026379259303212166
    2. '[]
' → logprob: -3.776379346847534
    3. '[' → logprob: -5.776379108428955
    4. '[]

' → logprob: -11.151379585266113
    5. ' []' → logprob: -11.901379585266113
    6. ' [[]' → logprob: -12.401379585266113
    7. '[][]' → logprob: -13.401379585266113
    8. '[[' → logprob: -14.401379585266113
    9. ' []
' → logprob: -14.776379585266113
    10. '       ' → logprob: -15.276379585266113

Token 1413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022556488402187824
    2. ' for' → logprob: -6.627255439758301
    3. 'for' → logprob: -7.002255439758301
    4. '   ' → logprob: -11.7522554397583
    5. '           ' → logprob: -12.3772554397583
    6. ',' → logprob: -13.2522554397583
    7. '	' → logprob: -13.5022554397583
    8. '```' → logprob: -13.8772554397583
    9. '	for' → logprob: -14.2522554397583
    10. ')' → logprob: -14.5022554397583

Token 1414: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.5597102396423e-05
    2. '       ' → logprob: -10.250035285949707
    3. ' for' → logprob: -15.750035285949707
    4. 'prev' → logprob: -17.375036239624023
    5. 'width' → logprob: -18.250036239624023
    6. 'W' → logprob: -19.125036239624023
    7. '```' → logprob: -19.500036239624023
    8. 'w' → logprob: -20.875036239624023
    9. 'max' → logprob: -21.250036239624023
    10. '   ' → logprob: -21.375036239624023

Token 1415: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011331788846291602
    2. '       ' → logprob: -9.250113487243652
    3. ' for' → logprob: -11.000113487243652
    4. '```' → logprob: -15.125113487243652
    5. '
' → logprob: -15.875113487243652
    6. '   ' → logprob: -17.875112533569336
    7. '``' → logprob: -18.500112533569336
    8. 'line' → logprob: -18.625112533569336
    9. 'width' → logprob: -18.750112533569336
    10. 'prev' → logprob: -19.125112533569336

Token 1416: ' each' (ID: 2454)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.262651652097702
    2. 'line' → logprob: -1.7626516819000244
    3. ' y' → logprob: -3.2626516819000244
    4. 'i' → logprob: -4.637651443481445
    5. ' line' → logprob: -5.512651443481445
    6. 'yl' → logprob: -5.762651443481445
    7. 'h' → logprob: -5.887651443481445
    8. 'hl' → logprob: -7.762651443481445
    9. 'yi' → logprob: -8.512651443481445
    10. '   ' → logprob: -8.762651443481445

Token 1417: ' horizontal' (ID: 25511)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9109437465667725
    2. 'line' → logprob: -0.9109437465667725
    3. 'hl' → logprob: -2.1609437465667725
    4. 'h' → logprob: -2.9109437465667725
    5. ' y' → logprob: -4.410943984985352
    6. 'horizontal' → logprob: -5.660943984985352
    7. 'yl' → logprob: -5.785943984985352
    8. 'i' → logprob: -6.035943984985352
    9. ' line' → logprob: -6.035943984985352
    10. '   ' → logprob: -7.035943984985352

Token 1418: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16165275871753693
    2. '_line' → logprob: -2.5366528034210205
    3. ' line' → logprob: -2.6616528034210205
    4. '_lines' → logprob: -8.786652565002441
    5. '_' → logprob: -9.911652565002441
    6. ' _' → logprob: -10.161652565002441
    7. '   ' → logprob: -10.911652565002441
    8. '
' → logprob: -11.286652565002441
    9. ' ' → logprob: -12.661652565002441
    10. 'l' → logprob: -12.661652565002441

Token 1419: ',' (ID: 11)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04369323328137398
    2. 'line' → logprob: -4.0436930656433105
    3. ' y' → logprob: -4.9186930656433105
    4. ',' → logprob: -5.0436930656433105
    5. ' in' → logprob: -5.5436930656433105
    6. '       ' → logprob: -6.0436930656433105
    7. ' line' → logprob: -6.2936930656433105
    8. 'i' → logprob: -7.4186930656433105
    9. 'in' → logprob: -7.6686930656433105
    10. '   ' → logprob: -7.6686930656433105

Token 1420: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005973588675260544
    2. ' for' → logprob: -5.255973815917969
    3. '       ' → logprob: -7.255973815917969
    4. 'y' → logprob: -11.255973815917969
    5. 'line' → logprob: -12.380973815917969
    6. 'range' → logprob: -12.755973815917969
    7. '   ' → logprob: -13.005973815917969
    8. '           ' → logprob: -13.130973815917969
    9. ' y' → logprob: -13.630973815917969
    10. 'width' → logprob: -13.755973815917969

Token 1421: ' segments' (ID: 33749)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5820026397705078
    2. 'the' → logprob: -2.207002639770508
    3. 'points' → logprob: -2.832002639770508
    4. 'positions' → logprob: -2.832002639770508
    5. 'all' → logprob: -3.207002639770508
    6. 'segments' → logprob: -3.207002639770508
    7. 'nodes' → logprob: -3.207002639770508
    8. '[' → logprob: -3.832002639770508
    9. 'xs' → logprob: -4.332002639770508
    10. 'possible' → logprob: -4.457002639770508

Token 1422: ' of' (ID: 328)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.0105202198028564
    2. 'between' → logprob: -2.0105202198028564
    3. 'along' → logprob: -2.2605202198028564
    4. 'that' → logprob: -2.8855202198028564
    5. '[' → logprob: -3.1355202198028564
    6. '       ' → logprob: -3.3855202198028564
    7. 'of' → logprob: -3.3855202198028564
    8. 'inside' → logprob: -3.5105202198028564
    9. ' that' → logprob: -3.7605202198028564
    10. ' on' → logprob: -3.7605202198028564

Token 1423: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.6305697560310364
    2. 'the' → logprob: -2.3805696964263916
    3. 'clear' → logprob: -2.8805696964263916
    4. 'x' → logprob: -2.8805696964263916
    5. ' corridor' → logprob: -3.1305696964263916
    6. 'horizontal' → logprob: -3.7555696964263916
    7. 'intersection' → logprob: -4.005569934844971
    8. 'corr' → logprob: -4.130569934844971
    9. 'line' → logprob: -4.255569934844971
    10. 'continuous' → logprob: -4.255569934844971

Token 1424: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.06332016736268997
    2. ' space' → logprob: -2.9383201599121094
    3. ' corridor' → logprob: -5.438320159912109
    4. '_space' → logprob: -5.938320159912109
    5. 'spaces' → logprob: -8.56332015991211
    6. 'x' → logprob: -8.56332015991211
    7. 'width' → logprob: -8.56332015991211
    8. '```' → logprob: -9.06332015991211
    9. ' ' → logprob: -9.18832015991211
    10. ')' → logprob: -9.56332015991211

Token 1425: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6636223196983337
    2. 'on' → logprob: -2.4136223793029785
    3. ' =' → logprob: -2.5386223793029785
    4. '=' → logprob: -2.6636223793029785
    5. 'between' → logprob: -2.6636223793029785
    6. ',' → logprob: -3.0386223793029785
    7. ':' → logprob: -3.6636223793029785
    8. ' on' → logprob: -4.2886223793029785
    9. ' between' → logprob: -4.4136223793029785
    10. '(' → logprob: -4.4136223793029785

Token 1426: 'outside' (ID: 141623)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2872364521026611
    2. '0' → logprob: -1.2872364521026611
    3. 'between' → logprob: -2.662236452102661
    4. '[' → logprob: -3.037236452102661
    5. 'self' → logprob: -3.037236452102661
    6. ' corridor' → logprob: -3.162236452102661
    7. '[]' → logprob: -3.787236452102661
    8. 'edges' → logprob: -3.787236452102661
    9. 'that' → logprob: -3.912236452102661
    10. 'on' → logprob: -4.162236213684082

Token 1427: ' pillars' (ID: 105506)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pill' → logprob: -0.42161789536476135
    2. 'the' → logprob: -1.296617865562439
    3. ' the' → logprob: -3.5466179847717285
    4. 'pol' → logprob: -4.2966179847717285
    5. 'pillar' → logprob: -4.2966179847717285
    6. ' pillars' → logprob: -5.4216179847717285
    7. 'self' → logprob: -5.7966179847717285
    8. 'p' → logprob: -5.9216179847717285
    9. ')' → logprob: -6.4216179847717285
    10. '       ' → logprob: -7.0466179847717285

Token 1428: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10370006412267685
    2. ')
' → logprob: -2.3537001609802246
    3. '       ' → logprob: -6.603700160980225
    4. '):
' → logprob: -7.728700160980225
    5. '),' → logprob: -7.728700160980225
    6. ').' → logprob: -7.978700160980225
    7. 'and' → logprob: -8.603699684143066
    8. ',' → logprob: -9.228699684143066
    9. ' and' → logprob: -9.353699684143066
    10. '   ' → logprob: -9.353699684143066

Token 1429: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0950460210442543
    2. 'for' → logprob: -3.720046043395996
    3. ',' → logprob: -3.845046043395996
    4. '=' → logprob: -4.845046043395996
    5. 'and' → logprob: -5.345046043395996
    6. ' for' → logprob: -5.470046043395996
    7. ' and' → logprob: -5.470046043395996
    8. ':' → logprob: -5.970046043395996
    9. '
' → logprob: -5.970046043395996
    10. ' at' → logprob: -6.095046043395996

Token 1430: ' [' (ID: 723)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4460599720478058
    2. 'that' → logprob: -1.6960599422454834
    3. '0' → logprob: -3.1960599422454834
    4. 'which' → logprob: -3.4460599422454834
    5. '[' → logprob: -3.5710599422454834
    6. 'between' → logprob: -3.8210599422454834
    7. 'x' → logprob: -4.4460601806640625
    8. 'line' → logprob: -4.6960601806640625
    9. 'horizontal' → logprob: -5.1960601806640625
    10. 'range' → logprob: -5.1960601806640625

Token 1431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.057743949990254e-05
    2. ' ' → logprob: -12.000020980834961
    3. '[' → logprob: -12.125020980834961
    4. '(' → logprob: -12.250020980834961
    5. 'Point' → logprob: -13.875020980834961
    6. '```' → logprob: -14.250020980834961
    7. '   ' → logprob: -14.625020980834961
    8. 'import' → logprob: -14.750020980834961
    9. '`' → logprob: -15.000020980834961
    10. ')' → logprob: -15.250020980834961

Token 1432: ',W' (ID: 117252)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16103972494602203
    2. ',' → logprob: -1.9110397100448608
    3. ' ,' → logprob: -7.66103982925415
    4. '.,' → logprob: -8.411039352416992
    5. ',
' → logprob: -9.911039352416992
    6. '.
' → logprob: -10.536039352416992
    7. '
' → logprob: -10.786039352416992
    8. '..' → logprob: -11.911039352416992
    9. ' ' → logprob: -12.286039352416992
    10. '```' → logprob: -13.286039352416992

Token 1433: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029851965606212616
    2. ',' → logprob: -4.279851913452148
    3. ' ]' → logprob: -4.529851913452148
    4. ']
' → logprob: -6.154851913452148
    5. '],' → logprob: -6.279851913452148
    6. ' ,' → logprob: -8.529851913452148
    7. '   ' → logprob: -9.279851913452148
    8. '].' → logprob: -9.279851913452148
    9. ' ]
' → logprob: -9.654851913452148
    10. ' ],' → logprob: -9.904851913452148

Token 1434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006735934875905514
    2. ',' → logprob: -8.250673294067383
    3. '
' → logprob: -9.375673294067383
    4. '   ' → logprob: -9.500673294067383
    5. '```' → logprob: -9.625673294067383
    6. '        
' → logprob: -9.875673294067383
    7. '.' → logprob: -10.625673294067383
    8. ':' → logprob: -10.625673294067383
    9. '           ' → logprob: -11.375673294067383
    10. ')' → logprob: -11.375673294067383

Token 1435: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006348930299282074
    2. '       ' → logprob: -5.756349086761475
    3. ' for' → logprob: -5.756349086761475
    4. '```' → logprob: -13.131348609924316
    5. '
' → logprob: -14.631348609924316
    6. '   ' → logprob: -15.006348609924316
    7. 'width' → logprob: -15.381348609924316
    8. '	for' → logprob: -15.881348609924316
    9. '        
' → logprob: -16.506349563598633
    10. 'For' → logprob: -16.631349563598633

Token 1436: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.010830268263816833
    2. 'h' → logprob: -5.010830402374268
    3. 'line' → logprob: -5.885830402374268
    4. 'yl' → logprob: -7.510830402374268
    5. 'hy' → logprob: -8.38582992553711
    6. 'yh' → logprob: -9.51082992553711
    7. 'iy' → logprob: -9.63582992553711
    8. ' y' → logprob: -9.63582992553711
    9. 'hl' → logprob: -9.76082992553711
    10. 'yi' → logprob: -9.76082992553711

Token 1437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.060234446078538895
    2. 'in' → logprob: -2.935234546661377
    3. ',' → logprob: -5.560234546661377
    4. '_in' → logprob: -7.685234546661377
    5. ':' → logprob: -7.810234546661377
    6. '_' → logprob: -8.685234069824219
    7. ' ,' → logprob: -9.310234069824219
    8. '   ' → logprob: -9.810234069824219
    9. '=' → logprob: -9.935234069824219
    10. ':
' → logprob: -10.685234069824219

Token 1438: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.0011858227662742138
    2. ' horizontal' → logprob: -6.876185894012451
    3. 'range' → logprob: -8.876185417175293
    4. '   ' → logprob: -11.751185417175293
    5. '(horizontal' → logprob: -13.251185417175293
    6. ' ' → logprob: -14.126185417175293
    7. '[' → logprob: -14.376185417175293
    8. 'enumer' → logprob: -14.501185417175293
    9. 'self' → logprob: -15.126185417175293
    10. ' range' → logprob: -15.126185417175293

Token 1439: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.008256161585450172
    2. ':' → logprob: -6.008255958557129
    3. '):
' → logprob: -6.633255958557129
    4. '_line' → logprob: -7.633255958557129
    5. '=' → logprob: -7.633255958557129
    6. ')' → logprob: -8.008255958557129
    7. '   ' → logprob: -8.008255958557129
    8. ' _' → logprob: -8.008255958557129
    9. ' =' → logprob: -8.258255958557129
    10. ' lines' → logprob: -8.383255958557129

Token 1440: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08930093795061111
    2. ':
' → logprob: -2.4643008708953857
    3. ',' → logprob: -8.714301109313965
    4. '=' → logprob: -9.589301109313965
    5. '       ' → logprob: -9.839301109313965
    6. '):
' → logprob: -10.214301109313965
    7. '   ' → logprob: -11.964301109313965
    8. ':

' → logprob: -12.089301109313965
    9. ':
' → logprob: -12.464301109313965
    10. '[' → logprob: -12.714301109313965

Token 1441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002301204949617386
    2. '       ' → logprob: -6.377301216125488
    3. 'points' → logprob: -8.127301216125488
    4. ' line' → logprob: -9.877301216125488
    5. ' points' → logprob: -9.877301216125488
    6. '```' → logprob: -10.252301216125488
    7. ',' → logprob: -10.627301216125488
    8. ' lines' → logprob: -10.627301216125488
    9. '	       ' → logprob: -10.877301216125488
    10. '   ' → logprob: -11.002301216125488

Token 1442: ' segments' (ID: 33749)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.13736864924430847
    2. 'points' → logprob: -2.887368679046631
    3. 'segments' (adapté à ' segments') → logprob: -3.387368679046631
    4. 'xs' → logprob: -4.512368679046631
    5. 'nodes' → logprob: -4.887368679046631
    6. ' line' → logprob: -5.137368679046631
    7. 'current' → logprob: -5.887368679046631
    8. 'x' → logprob: -6.137368679046631
    9. 'c' → logprob: -6.512368679046631
    10. 'positions' → logprob: -6.637368679046631

Token 1443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03047030419111252
    2. '=' → logprob: -3.530470371246338
    3. '=[]' → logprob: -7.405470371246338
    4. '=[]
' → logprob: -9.53046989440918
    5. ':' → logprob: -10.40546989440918
    6. '_points' → logprob: -14.03046989440918
    7. ',' → logprob: -14.03046989440918
    8. '   ' → logprob: -14.28046989440918
    9. '=[]
' → logprob: -14.28046989440918
    10. '           ' → logprob: -14.28046989440918

Token 1444: ' self' (ID: 1051)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.6013233661651611
    2. '[(' → logprob: -1.1013233661651611
    3. '[[' → logprob: -2.601323366165161
    4. '[]' → logprob: -3.101323366165161
    5. '[' → logprob: -8.351323127746582
    6. '[]

' → logprob: -9.476323127746582
    7. ' []
' → logprob: -13.726323127746582
    8. ' [(' → logprob: -13.851323127746582
    9. '[
' → logprob: -13.976323127746582
    10. '[((' → logprob: -14.101323127746582

Token 1445: '._' (ID: 2697)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03136180713772774
    2. '[]
' → logprob: -3.6563618183135986
    3. '[[' → logprob: -5.9063615798950195
    4. '[' → logprob: -6.9063615798950195
    5. '[(' → logprob: -7.5313615798950195
    6. '=[]' → logprob: -8.53136157989502
    7. '.append' → logprob: -9.03136157989502
    8. ' []' → logprob: -9.28136157989502
    9. '=' → logprob: -9.53136157989502
    10. '_points' → logprob: -9.90636157989502

Token 1446: 'free' (ID: 18847)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5627352595329285
    2. 'collect' → logprob: -1.4377353191375732
    3. 'find' → logprob: -2.3127353191375732
    4. 'build' → logprob: -3.0627353191375732
    5. 'g' → logprob: -3.9377353191375732
    6. 'compute' → logprob: -4.062735080718994
    7. 'free' → logprob: -5.312735080718994
    8. 'generate' → logprob: -5.687735080718994
    9. 'create' → logprob: -7.562735080718994
    10. 'extract' → logprob: -7.687735080718994

Token 1447: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.4025927782058716
    2. '_' → logprob: -2.152592658996582
    3. '_space' → logprob: -2.402592658996582
    4. '_inter' → logprob: -2.777592658996582
    5. '_points' → logprob: -3.652592658996582
    6. '_spaces' → logprob: -4.652592658996582
    7. '_segment' → logprob: -4.777592658996582
    8. '_ranges' → logprob: -5.402592658996582
    9. '_x' → logprob: -5.652592658996582
    10. '_range' → logprob: -6.152592658996582

Token 1448: '_at' (ID: 8254)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.056597717106342316
    2. '(' → logprob: -2.9315977096557617
    3. '(self' → logprob: -6.431597709655762
    4. '(
' → logprob: -10.181597709655762
    5. '           ' → logprob: -10.681597709655762
    6. '=' → logprob: -11.056597709655762
    7. 'y' → logprob: -12.056597709655762
    8. ' =' → logprob: -12.181597709655762
    9. '(x' → logprob: -12.181597709655762
    10. '=y' → logprob: -13.181597709655762

Token 1449: '_y' (ID: 9410)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.2573101818561554
    2. 'y' → logprob: -1.507310152053833
    3. 'line' → logprob: -5.507310390472412
    4. ' (' → logprob: -8.007309913635254
    5. ' y' → logprob: -8.007309913635254
    6. '(line' → logprob: -8.882309913635254
    7. '(' → logprob: -8.882309913635254
    8. '_line' → logprob: -9.507309913635254
    9. ' line' → logprob: -9.882309913635254
    10. 'each' → logprob: -10.007309913635254

Token 1450: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.004753714893013239
    2. '(' → logprob: -5.379753589630127
    3. 'y' → logprob: -10.004754066467285
    4. '(
' → logprob: -10.129754066467285
    5. ' (' → logprob: -10.504754066467285
    6. '=' → logprob: -12.254754066467285
    7. ' =' → logprob: -12.754754066467285
    8. '=y' → logprob: -12.754754066467285
    9. ' y' → logprob: -13.504754066467285
    10. '   ' → logprob: -13.754754066467285

Token 1451: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12696526944637299
    2. ')
' → logprob: -2.126965284347534
    3. ' )
' → logprob: -11.751965522766113
    4. ' )' → logprob: -11.751965522766113
    5. ')
' → logprob: -11.876965522766113
    6. ',' → logprob: -11.876965522766113
    7. ')`
' → logprob: -13.251965522766113
    8. '       ' → logprob: -13.501965522766113
    9. ')`' → logprob: -13.876965522766113
    10. '   ' → logprob: -14.001965522766113

Token 1452: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020982760470360518
    2. ',' → logprob: -7.377098083496094
    3. '       ' → logprob: -7.752098083496094
    4. 'points' → logprob: -8.377098083496094
    5. ':' → logprob: -8.502098083496094
    6. '
' → logprob: -9.002098083496094
    7. '            
' → logprob: -9.377098083496094
    8. '=' → logprob: -9.877098083496094
    9. '        
' → logprob: -10.002098083496094
    10. '```' → logprob: -10.002098083496094

Token 1453: ' #' (ID: 1069)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.047581564635038376
    2. 'points' → logprob: -3.922581672668457
    3. 'nodes' → logprob: -4.797581672668457
    4. '           ' → logprob: -4.797581672668457
    5. 'current' → logprob: -5.422581672668457
    6. 'node' → logprob: -6.297581672668457
    7. 'lines' → logprob: -6.797581672668457
    8. 'curr' → logprob: -7.297581672668457
    9. 'row' → logprob: -7.672581672668457
    10. 'cur' → logprob: -7.797581672668457

Token 1454: ' We'll' (ID: 46830)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.12226934731006622
    2. 'points' → logprob: -2.87226939201355
    3. 'current' → logprob: -4.122269153594971
    4. 'for' → logprob: -4.247269153594971
    5. 'nodes' → logprob: -4.247269153594971
    6. 'curr' → logprob: -5.622269153594971
    7. 'node' → logprob: -5.622269153594971
    8. ' line' → logprob: -6.747269153594971
    9. 'cur' → logprob: -6.872269153594971
    10. 'pts' → logprob: -7.122269153594971

Token 1455: ' mark' (ID: 1983)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.419416904449463
    2. 'append' → logprob: -1.544416904449463
    3. 'nodes' → logprob: -1.794416904449463
    4. 'points' → logprob: -2.044416904449463
    5. ' for' → logprob: -2.169416904449463
    6. '.append' → logprob: -3.044416904449463
    7. '
' → logprob: -4.044416904449463
    8. ' nodes' → logprob: -4.044416904449463
    9. 'extend' → logprob: -4.669416904449463
    10. ' points' → logprob: -4.794416904449463

Token 1456: ' node' (ID: 4596)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.3185076713562012
    2. ' nodes' → logprob: -1.6935076713562012
    3. 'nodes' → logprob: -1.8185076713562012
    4. 'segments' → logprob: -2.568507671356201
    5. 'positions' → logprob: -2.818507671356201
    6. ' points' → logprob: -3.068507671356201
    7. ' positions' → logprob: -3.818507671356201
    8. 'tokens' → logprob: -3.943507671356201
    9. ' for' → logprob: -4.193507671356201
    10. 'x' → logprob: -4.193507671356201

Token 1457: ' points' (ID: 5571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001519503304734826
    2. ' s' → logprob: -7.126519680023193
    3. 'points' → logprob: -8.751519203186035
    4. '_positions' → logprob: -8.876519203186035
    5. '_points' → logprob: -9.126519203186035
    6. 'positions' → logprob: -9.376519203186035
    7. '_s' → logprob: -9.751519203186035
    8. '       ' → logprob: -10.626519203186035
    9. '   ' → logprob: -10.626519203186035
    10. ',' → logprob: -11.001519203186035

Token 1458: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4216262400150299
    2. '.append' → logprob: -1.6716262102127075
    3. '=' → logprob: -2.421626329421997
    4. '=[]
' → logprob: -4.046626091003418
    5. '=[]' → logprob: -4.171626091003418
    6. '           ' → logprob: -4.796626091003418
    7. ',' → logprob: -4.921626091003418
    8. '.extend' → logprob: -5.671626091003418
    9. ':' → logprob: -5.796626091003418
    10. 'for' → logprob: -6.421626091003418

Token 1459: ' segment' (ID: 14806)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011338639073073864
    2. 'x' → logprob: -5.261338710784912
    3. 'segment' → logprob: -5.386338710784912
    4. 'segments' → logprob: -7.011338710784912
    5. 'each' → logprob: -8.636338233947754
    6. 'seg' → logprob: -8.761338233947754
    7. '[' → logprob: -9.261338233947754
    8. '
' → logprob: -10.511338233947754
    9. 'edges' → logprob: -10.636338233947754
    10. 'the' → logprob: -11.386338233947754

Token 1460: ' ends' (ID: 17095)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2696921229362488
    2. '.' → logprob: -1.6446921825408936
    3. 'start' → logprob: -4.1446919441223145
    4. '.start' → logprob: -4.6446919441223145
    5. 'starts' → logprob: -5.0196919441223145
    6. 's' → logprob: -5.7696919441223145
    7. ' starts' → logprob: -5.7696919441223145
    8. '_start' → logprob: -6.6446919441223145
    9. '   ' → logprob: -7.2696919441223145
    10. '           ' → logprob: -7.7696919441223145

Token 1461: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08597502112388611
    2. ' +' → logprob: -3.960974931716919
    3. ',' → logprob: -4.335975170135498
    4. 'for' → logprob: -4.335975170135498
    5. 'and' → logprob: -4.585975170135498
    6. ' and' → logprob: -4.710975170135498
    7. '
' → logprob: -5.335975170135498
    8. '+' → logprob: -5.335975170135498
    9. ' for' → logprob: -5.710975170135498
    10. '.' → logprob: -6.585975170135498

Token 1462: ' optionally' (ID: 105438)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.3288470208644867
    2. 'between' → logprob: -2.8288469314575195
    3. '[' → logprob: -3.0788469314575195
    4. 'points' → logprob: -3.5788469314575195
    5. '           ' → logprob: -3.9538469314575195
    6. 'segments' → logprob: -4.2038469314575195
    7. '(segment' → logprob: -4.2038469314575195
    8. 'for' → logprob: -4.3288469314575195
    9. 'in' → logprob: -4.3288469314575195
    10. ' segment' → logprob: -4.4538469314575195

Token 1463: ' intermediate' (ID: 47388)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.662280797958374
    2. 'segment' → logprob: -1.662280797958374
    3. ' in' → logprob: -2.162280797958374
    4. 'mid' → logprob: -2.287280797958374
    5. 'inter' → logprob: -2.537280797958374
    6. ' segment' → logprob: -2.662280797958374
    7. 'between' → logprob: -2.912280797958374
    8. 'in' → logprob: -3.287280797958374
    9. 'at' → logprob: -3.412280797958374
    10. ' mid' → logprob: -4.162281036376953

Token 1464: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.1971251219511032
    2. '_points' → logprob: -2.322125196456909
    3. ' points' → logprob: -2.572125196456909
    4. 's' → logprob: -6.19712495803833
    5. '_' → logprob: -6.82212495803833
    6. 'positions' → logprob: -7.44712495803833
    7. '_x' → logprob: -7.94712495803833
    8. 'x' → logprob: -9.947125434875488
    9. ',' → logprob: -9.947125434875488
    10. '_pts' → logprob: -9.947125434875488

Token 1465: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5196433067321777
    2. ',' → logprob: -1.7696433067321777
    3. '.' → logprob: -2.8946433067321777
    4. '
' → logprob: -3.2696433067321777
    5. ':' → logprob: -3.7696433067321777
    6. '.append' → logprob: -3.7696433067321777
    7. '[' → logprob: -4.144643306732178
    8. ',
' → logprob: -4.519643306732178
    9. ' =' → logprob: -4.894643306732178
    10. '=' → logprob: -5.019643306732178

Token 1466: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010218516690656543
    2. ',' → logprob: -7.626021862030029
    3. ' for' → logprob: -8.251021385192871
    4. '.' → logprob: -9.251021385192871
    5. 'for' → logprob: -9.626021385192871
    6. '
' → logprob: -11.001021385192871
    7. ',
' → logprob: -11.501021385192871
    8. '(' → logprob: -11.626021385192871
    9. ':' → logprob: -11.751021385192871
    10. '[' → logprob: -11.751021385192871

Token 1467: ' pts' (ID: 66515)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6213494539260864
    2. '           ' → logprob: -1.6213494539260864
    3. ' points' → logprob: -2.871349334716797
    4. '[' → logprob: -2.871349334716797
    5. 'nodes' → logprob: -3.246349334716797
    6. '[
' → logprob: -3.621349334716797
    7. 'segments' → logprob: -3.621349334716797
    8. ' [' → logprob: -3.871349334716797
    9. '[]
' → logprob: -4.746349334716797
    10. ' nodes' → logprob: -4.996349334716797

Token 1468: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6357243657112122
    2. '=' → logprob: -0.7607243657112122
    3. '.extend' → logprob: -6.2607245445251465
    4. '.append' → logprob: -7.2607245445251465
    5. '=[]' → logprob: -8.510724067687988
    6. '.' → logprob: -8.635724067687988
    7. '=[]
' → logprob: -9.885724067687988
    8. ':' → logprob: -10.260724067687988
    9. ' ' → logprob: -11.510724067687988
    10. '   ' → logprob: -11.635724067687988

Token 1469: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0238032341003418
    2. '[]' → logprob: -1.0238032341003418
    3. '[]
' → logprob: -1.5238032341003418
    4. 'segments' → logprob: -2.773803234100342
    5. '[]

' → logprob: -7.023803234100342
    6. '[
' → logprob: -8.7738037109375
    7. '[(' → logprob: -9.3988037109375
    8. '[s' → logprob: -10.7738037109375
    9. 'list' → logprob: -11.0238037109375
    10. '[]}' → logprob: -11.1488037109375

Token 1470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005972352810204029
    2. ' for' → logprob: -8.25059700012207
    3. ',' → logprob: -8.87559700012207
    4. '
' → logprob: -9.87559700012207
    5. 'for' → logprob: -10.12559700012207
    6. '[' → logprob: -10.87559700012207
    7. '            
' → logprob: -10.87559700012207
    8. '       ' → logprob: -11.75059700012207
    9. '               ' → logprob: -11.87559700012207
    10. ' 
' → logprob: -12.00059700012207

Token 1471: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11698707938194275
    2. 'if' → logprob: -2.6169869899749756
    3. 'pts' → logprob: -3.6169869899749756
    4. 'x' → logprob: -5.616987228393555
    5. '           ' → logprob: -5.741987228393555
    6. 'prev' → logprob: -6.491987228393555
    7. 'last' → logprob: -6.741987228393555
    8. 'pt' → logprob: -8.616987228393555
    9. '#' → logprob: -8.616987228393555
    10. 'w' → logprob: -9.116987228393555

Token 1472: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.023480724543333054
    2. 'start' → logprob: -4.2734808921813965
    3. 'segment' → logprob: -5.2734808921813965
    4. '(seg' → logprob: -6.3984808921813965
    5. ' seg' → logprob: -6.7734808921813965
    6. 'x' → logprob: -6.8984808921813965
    7. 's' → logprob: -9.398480415344238
    8. 'sx' → logprob: -9.648480415344238
    9. '(start' → logprob: -10.023480415344238
    10. 'l' → logprob: -10.023480415344238

Token 1473: ' in' (ID: 306)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.27015990018844604
    2. ' in' → logprob: -2.270159959793091
    3. '[' → logprob: -2.895159959793091
    4. '_' → logprob: -4.145159721374512
    5. 'start' → logprob: -4.645159721374512
    6. '.' → logprob: -4.645159721374512
    7. '._' → logprob: -4.895159721374512
    8. ' =' → logprob: -5.395159721374512
    9. ':' → logprob: -5.520159721374512
    10. ',' → logprob: -5.520159721374512

Token 1474: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -3.547789674485102e-05
    2. ' segments' → logprob: -10.250035285949707
    3. 'seg' → logprob: -18.125036239624023
    4. '[' → logprob: -18.125036239624023
    5. '           ' → logprob: -19.125036239624023
    6. '   ' → logprob: -19.625036239624023
    7. '_segments' → logprob: -20.625036239624023
    8. 'segment' → logprob: -20.750036239624023
    9. 'Segments' → logprob: -21.250036239624023
    10. 'se' → logprob: -21.375036239624023

Token 1475: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8241042494773865
    2. ':
' → logprob: -1.0741043090820312
    3. '               ' → logprob: -1.5741043090820312
    4. '[' → logprob: -5.199104309082031
    5. '.extend' → logprob: -6.074104309082031
    6. '+' → logprob: -6.449104309082031
    7. '.append' → logprob: -6.824104309082031
    8. '[::-' → logprob: -7.824104309082031
    9. '           ' → logprob: -8.199104309082031
    10. ',' → logprob: -8.449104309082031

Token 1476: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01759033463895321
    2. '(' → logprob: -4.892590522766113
    3. '[' → logprob: -5.267590522766113
    4. 'pts' → logprob: -5.767590522766113
    5. ':
' → logprob: -8.267590522766113
    6. ' pts' → logprob: -8.517590522766113
    7. ' (' → logprob: -8.642590522766113
    8. ':' → logprob: -8.767590522766113
    9. '.append' → logprob: -8.767590522766113
    10. ',' → logprob: -8.892590522766113

Token 1477: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' (adapté à ' pts') → logprob: -0.0012505853082984686
    2. ' pts' → logprob: -6.751250743865967
    3. '               ' → logprob: -9.876250267028809
    4. 'pt' → logprob: -11.501250267028809
    5. '                   ' → logprob: -11.626250267028809
    6. '   ' → logprob: -12.751250267028809
    7. 'points' → logprob: -12.876250267028809
    8. '_pts' → logprob: -13.251250267028809
    9. '           ' → logprob: -14.501250267028809
    10. '[' → logprob: -15.251250267028809

Token 1478: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04099186882376671
    2. '.' → logprob: -3.79099178314209
    3. '.extend' → logprob: -4.04099178314209
    4. '.ap' → logprob: -12.54099178314209
    5. '+=' → logprob: -12.66599178314209
    6. '.app' → logprob: -13.79099178314209
    7. ' +=' → logprob: -14.29099178314209
    8. '+.' → logprob: -14.79099178314209
    9. ' .' → logprob: -14.91599178314209
    10. 'append' → logprob: -15.29099178314209

Token 1479: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.0849379152059555
    2. '(seg' → logprob: -2.584937810897827
    3. 'Point' → logprob: -5.209938049316406
    4. 'seg' → logprob: -7.709938049316406
    5. '(' → logprob: -9.709938049316406
    6. ' Point' → logprob: -10.709938049316406
    7. '(P' → logprob: -11.584938049316406
    8. '	Point' → logprob: -11.834938049316406
    9. '(
' → logprob: -12.084938049316406
    10. 'Segment' → logprob: -13.209938049316406

Token 1480: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.10056798160076141
    2. 'seg' → logprob: -2.3505680561065674
    3. '(' → logprob: -8.100567817687988
    4. '0' → logprob: -9.975567817687988
    5. ' seg' → logprob: -12.600567817687988
    6. '(segment' → logprob: -13.225567817687988
    7. '   ' → logprob: -13.725567817687988
    8. '(s' → logprob: -13.725567817687988
    9. '(se' → logprob: -14.350567817687988
    10. '.seg' → logprob: -14.475567817687988

Token 1481: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02373838610947132
    2. '.' → logprob: -4.023738384246826
    3. '.start' → logprob: -5.648738384246826
    4. '.x' → logprob: -6.773738384246826
    5. '0' → logprob: -8.148738861083984
    6. ' .' → logprob: -9.023738861083984
    7. '.min' → logprob: -9.148738861083984
    8. 'start' → logprob: -9.148738861083984
    9. '.left' → logprob: -9.273738861083984
    10. '.s' → logprob: -10.023738861083984

Token 1482: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001217813478433527
    2. ' ' → logprob: -9.3751220703125
    3. '[' → logprob: -10.3751220703125
    4. '   ' → logprob: -13.1251220703125
    5. ')' → logprob: -13.9376220703125
    6. '1' → logprob: -14.1876220703125
    7. '.' → logprob: -15.1251220703125
    8. '
' → logprob: -15.5626220703125
    9. '    ' → logprob: -15.7501220703125
    10. '  ' → logprob: -15.9376220703125

Token 1483: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001198562909848988
    2. '),' → logprob: -7.501198768615723
    3. ' ,' → logprob: -8.251198768615723
    4. ',y' → logprob: -9.001198768615723
    5. ',),' → logprob: -9.876198768615723
    6. ',
' → logprob: -9.876198768615723
    7. '<|end|>' → logprob: -10.001198768615723
    8. ')' → logprob: -10.126198768615723
    9. ',p' → logprob: -11.126198768615723
    10. ',None' → logprob: -11.626198768615723

Token 1484: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004309076175559312
    2. ' y' → logprob: -7.750431060791016
    3. '	y' → logprob: -15.750431060791016
    4. '   ' → logprob: -18.250431060791016
    5. ')y' → logprob: -20.000431060791016
    6. ' ' → logprob: -20.875431060791016
    7. ' ' → logprob: -21.000431060791016
    8. 'y's' → logprob: -21.125431060791016
    9. '‘y' → logprob: -21.125431060791016
    10. 'yj' → logprob: -21.250431060791016

Token 1485: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6058250069618225
    2. '))' → logprob: -0.8558250069618225
    3. '))
' → logprob: -3.6058249473571777
    4. ')
' → logprob: -6.105824947357178
    5. ' )' → logprob: -10.855825424194336
    6. ' ))' → logprob: -11.480825424194336
    7. '))

' → logprob: -12.480825424194336
    8. '));' → logprob: -12.480825424194336
    9. ' ))
' → logprob: -12.480825424194336
    10. '),' → logprob: -12.855825424194336

Token 1486: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16404937207698822
    2. '           ' → logprob: -1.9140493869781494
    3. '                   ' → logprob: -6.78904914855957
    4. ')' → logprob: -7.53904914855957
    5. ',' → logprob: -7.66404914855957
    6. '<|end|>' → logprob: -8.03904914855957
    7. '                ' → logprob: -8.53904914855957
    8. '            
' → logprob: -8.78904914855957
    9. '                
' → logprob: -9.03904914855957
    10. '             ' → logprob: -9.16404914855957

Token 1487: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' (adapté à ' pts') → logprob: -0.048766426742076874
    2. ' pts' → logprob: -3.0487663745880127
    3. 'points' → logprob: -9.923766136169434
    4. 'pt' → logprob: -10.298766136169434
    5. '_pts' → logprob: -10.298766136169434
    6. 'Pts' → logprob: -11.173766136169434
    7. ' points' → logprob: -11.673766136169434
    8. 'Point' → logprob: -12.048766136169434
    9. '           ' → logprob: -12.173766136169434
    10. '
' → logprob: -12.298766136169434

Token 1488: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2528652846813202
    2. '.' → logprob: -1.5028653144836426
    3. '.
' → logprob: -7.002865314483643
    4. ' .' → logprob: -10.877864837646484
    5. 'append' → logprob: -12.127864837646484
    6. '.app' → logprob: -14.252864837646484
    7. '.

' → logprob: -14.627864837646484
    8. ').' → logprob: -15.502864837646484
    9. '
' → logprob: -16.002864837646484
    10. '.
' → logprob: -16.127864837646484

Token 1489: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -1.1472419600977446e-06
    2. 'Point' → logprob: -13.750000953674316
    3. '(' → logprob: -17.375001907348633
    4. ' Point' → logprob: -18.500001907348633
    5. '	Point' → logprob: -20.000001907348633
    6. '(P' → logprob: -20.250001907348633
    7. '.Point' → logprob: -21.875001907348633
    8. '<Point' → logprob: -21.875001907348633
    9. '_Point' → logprob: -22.375001907348633
    10. '(
' → logprob: -22.500001907348633

Token 1490: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.0021508578211069107
    2. '(Point' → logprob: -6.502151012420654
    3. 'seg' → logprob: -7.377151012420654
    4. 'Point' → logprob: -10.752150535583496
    5. '(' → logprob: -14.502150535583496
    6. ' Point' → logprob: -15.252150535583496
    7. ' seg' → logprob: -15.502150535583496
    8. 'Seg' → logprob: -15.502150535583496
    9. '(segment' → logprob: -15.877150535583496
    10. '.seg' → logprob: -16.627151489257812

Token 1491: '[' (ID: 58)
  Prédit: '(seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.018779437988996506
    2. '[' → logprob: -4.143779277801514
    3. 'seg' → logprob: -6.643779277801514
    4. '(' → logprob: -6.768779277801514
    5. '.seg' → logprob: -9.143779754638672
    6. ' seg' → logprob: -9.143779754638672
    7. '(s' → logprob: -11.018779754638672
    8. ' (' → logprob: -11.768779754638672
    9. ')' → logprob: -11.893779754638672
    10. '(segment' → logprob: -11.893779754638672

Token 1492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. '[' → logprob: -11.000025749206543
    3. '0' → logprob: -12.375025749206543
    4. 'seg' → logprob: -13.812525749206543
    5. '
' → logprob: -13.937525749206543
    6. ' ' → logprob: -14.437525749206543
    7. '2' → logprob: -15.375025749206543
    8. '```' → logprob: -15.500025749206543
    9. '``' → logprob: -15.500025749206543
    10. '{' → logprob: -15.812525749206543

Token 1493: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5928495486150496e-05
    2. ' ,' → logprob: -11.500016212463379
    3. '),' → logprob: -13.000016212463379
    4. '<|end|>' → logprob: -13.750016212463379
    5. ',
' → logprob: -14.125016212463379
    6. '‌,' → logprob: -14.750016212463379
    7. ',y' → logprob: -14.875016212463379
    8. ',),' → logprob: -16.125015258789062
    9. '           ' → logprob: -16.500015258789062
    10. '],' → logprob: -16.500015258789062

Token 1494: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132619559764862
    2. ' y' → logprob: -1.3132619857788086
    3. '	y' → logprob: -16.063261032104492
    4. ')y' → logprob: -16.063261032104492
    5. ')' → logprob: -18.938261032104492
    6. ' ' → logprob: -18.938261032104492
    7. ''y' → logprob: -19.438261032104492
    8. '‘y' → logprob: -20.063261032104492
    9. ',y' → logprob: -20.563261032104492
    10. ' ' → logprob: -21.063261032104492

Token 1495: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002518703928217292
    2. ')
' → logprob: -6.002518653869629
    3. '               ' → logprob: -10.752518653869629
    4. '           ' → logprob: -11.002518653869629
    5. ' )' → logprob: -13.377518653869629
    6. '))' → logprob: -13.627518653869629
    7. ')]' → logprob: -14.502518653869629
    8. ')#' → logprob: -15.127518653869629
    9. ')
' → logprob: -15.252518653869629
    10. ')}' → logprob: -15.377518653869629

Token 1496: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11028542369604111
    2. '<|end|>' → logprob: -2.485285520553589
    3. '
' → logprob: -4.73528528213501
    4. '               ' → logprob: -5.61028528213501
    5. ',' → logprob: -5.86028528213501
    6. '       ' → logprob: -6.86028528213501
    7. '<|end|>' → logprob: -6.86028528213501
    8. '            
' → logprob: -6.98528528213501
    9. ')' → logprob: -7.23528528213501
    10. ' 
' → logprob: -7.61028528213501

Token 1497: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7222020030021667
    2. '       ' → logprob: -1.4722020626068115
    3. ')' → logprob: -2.2222020626068115
    4. '
' → logprob: -2.7222020626068115
    5. '<|end|>' → logprob: -2.9722020626068115
    6. '   ' → logprob: -4.097201824188232
    7. '<|end|>' → logprob: -4.847201824188232
    8. ',' → logprob: -4.972201824188232
    9. ' ' → logprob: -5.597201824188232
    10. ' 
' → logprob: -5.597201824188232

Token 1498: ' remove' (ID: 6234)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.6158684492111206
    2. '#' → logprob: -1.7408684492111206
    3. 'pts' → logprob: -2.24086856842041
    4. '       ' → logprob: -2.74086856842041
    5. '           ' → logprob: -3.24086856842041
    6. 'for' → logprob: -3.99086856842041
    7. 'segments' → logprob: -4.11586856842041
    8. '   ' → logprob: -4.24086856842041
    9. '
' → logprob: -4.86586856842041
    10. ' nodes' → logprob: -5.11586856842041

Token 1499: ' duplicates' (ID: 91135)
  Prédit: ' duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.4856049418449402
    2. 'duplicates' → logprob: -0.9856049418449402
    3. 'duplicate' → logprob: -5.235604763031006
    4. ' duplicate' → logprob: -5.485604763031006
    5. '_duplicates' → logprob: -6.985604763031006
    6. 'd' → logprob: -7.110604763031006
    7. ' pts' → logprob: -9.610605239868164
    8. ' redundant' → logprob: -9.985605239868164
    9. 'pts' → logprob: -10.485605239868164
    10. ' points' → logprob: -10.860605239868164

Token 1500: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8723791837692261
    2. ',' → logprob: -1.622379183769226
    3. '       ' → logprob: -1.747379183769226
    4. '
' → logprob: -2.8723793029785156
    5. ' pts' → logprob: -3.4973793029785156
    6. 'pts' → logprob: -3.8723793029785156
    7. '_pts' → logprob: -4.372379302978516
    8. '        
' → logprob: -4.497379302978516
    9. '(points' → logprob: -4.497379302978516
    10. ' =' → logprob: -4.872379302978516

Token 1501: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.10064138472080231
    2. ' sort' → logprob: -2.3506414890289307
    3. 'pts' → logprob: -8.350641250610352
    4. 'sorted' → logprob: -8.975641250610352
    5. ' pts' → logprob: -10.350641250610352
    6. 'points' → logprob: -10.475641250610352
    7. ' points' → logprob: -13.100641250610352
    8. '.sort' → logprob: -13.225641250610352
    9. ' sorted' → logprob: -13.475641250610352
    10. 'pt' → logprob: -13.850641250610352

Token 1502: ' left' (ID: 3561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3119005560874939
    2. '           ' → logprob: -1.8119006156921387
    3. '(' → logprob: -3.0619006156921387
    4. ' pts' → logprob: -4.686900615692139
    5. ',
' → logprob: -4.811900615692139
    6. 'pts' → logprob: -5.061900615692139
    7. '       ' → logprob: -5.311900615692139
    8. '            
' → logprob: -5.436900615692139
    9. '(points' → logprob: -5.561900615692139
    10. ' by' → logprob: -5.811900615692139

Token 1503: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0720292329788208
    2. '_pts' → logprob: -1.0720292329788208
    3. '=' → logprob: -1.6970292329788208
    4. '           ' → logprob: -3.0720291137695312
    5. 'pts' → logprob: -3.5720291137695312
    6. ' pts' → logprob: -4.947029113769531
    7. '=True' → logprob: -5.072029113769531
    8. 'points' → logprob: -5.072029113769531
    9. '(' → logprob: -5.072029113769531
    10. '(points' → logprob: -5.197029113769531

Token 1504: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0010393599513918161
    2. ' right' → logprob: -7.001039505004883
    3. 'pts' → logprob: -9.001039505004883
    4. 'Right' → logprob: -13.251039505004883
    5. ' pts' → logprob: -14.501039505004883
    6. '_right' → logprob: -14.751039505004883
    7. '	right' → logprob: -15.001039505004883
    8. ')' → logprob: -15.001039505004883
    9. ',right' → logprob: -15.126039505004883
    10. '```' → logprob: -15.626039505004883

Token 1505: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.549512505531311
    2. '
' → logprob: -1.049512505531311
    3. ',' → logprob: -3.0495123863220215
    4. '            
' → logprob: -4.6745123863220215
    5. '        
' → logprob: -5.4245123863220215
    6. '       ' → logprob: -5.4245123863220215
    7. '    
' → logprob: -6.1745123863220215
    8. ',
' → logprob: -6.2995123863220215
    9. ' 
' → logprob: -7.1745123863220215
    10. '
' → logprob: -8.04951286315918

Token 1506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015075122006237507
    2. '
' → logprob: -4.765075206756592
    3. ',' → logprob: -5.515075206756592
    4. '            
' → logprob: -6.890075206756592
    5. '    
' → logprob: -8.015074729919434
    6. '       ' → logprob: -8.140074729919434
    7. '        
' → logprob: -8.265074729919434
    8. ' 
' → logprob: -8.890074729919434
    9. ',
' → logprob: -9.265074729919434
    10. '   ' → logprob: -9.640074729919434

Token 1507: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' (adapté à ' pts') → logprob: -0.3004171550273895
    2. ' pts' → logprob: -1.425417184829712
    3. 'points' → logprob: -4.800416946411133
    4. 'nodes' → logprob: -5.675416946411133
    5. ' points' → logprob: -6.050416946411133
    6. ' nodes' → logprob: -6.425416946411133
    7. '       ' → logprob: -6.675416946411133
    8. '           ' → logprob: -7.175416946411133
    9. '   ' → logprob: -7.425416946411133
    10. '
' → logprob: -9.175416946411133

Token 1508: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018389426171779633
    2. ' =' → logprob: -4.3933892250061035
    3. '.sort' → logprob: -5.1433892250061035
    4. 'sort' → logprob: -12.018389701843262
    5. '.' → logprob: -12.143389701843262
    6. ':' → logprob: -12.518389701843262
    7. ',' → logprob: -13.393389701843262
    8. '=
' → logprob: -13.893389701843262
    9. '=[]' → logprob: -14.018389701843262
    10. '[' → logprob: -14.393389701843262

Token 1509: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0009214656893163919
    2. 'list' → logprob: -7.000921249389648
    3. ' sorted' → logprob: -11.625921249389648
    4. '(sorted' → logprob: -14.500921249389648
    5. '[' → logprob: -14.875921249389648
    6. '   ' → logprob: -16.00092124938965
    7. ' list' → logprob: -17.62592124938965
    8. '.sorted' → logprob: -18.75092124938965
    9. ' ' → logprob: -19.75092124938965
    10. '[list' → logprob: -19.75092124938965

Token 1510: '(list' (ID: 13116)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026729601086117327
    2. '(set' → logprob: -8.250267028808594
    3. '(
' → logprob: -12.750267028808594
    4. '((' → logprob: -14.125267028808594
    5. '(pt' → logprob: -14.250267028808594
    6. '(key' → logprob: -14.375267028808594
    7. '([' → logprob: -15.250267028808594
    8. '(list' → logprob: -15.500267028808594
    9. '(points' → logprob: -15.500267028808594
    10. '({' → logprob: -15.500267028808594

Token 1511: '({' (ID: 3972)
  Prédit: '(set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.023478049784898758
    2. '({' → logprob: -3.7734780311584473
    3. 'set' → logprob: -8.898478507995605
    4. '(' → logprob: -9.398478507995605
    5. '(dict' → logprob: -12.273478507995605
    6. '{' → logprob: -12.523478507995605
    7. '(filter' → logprob: -13.023478507995605
    8. '(
' → logprob: -13.523478507995605
    9. '(sorted' → logprob: -14.898478507995605
    10. 'dict' → logprob: -15.523478507995605

Token 1512: '(' (ID: 7)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.17674711346626282
    2. '(Point' → logprob: -2.4267470836639404
    3. '(pt' → logprob: -2.8017470836639404
    4. 'p' → logprob: -5.1767473220825195
    5. '(' → logprob: -5.6767473220825195
    6. 'pt' → logprob: -6.5517473220825195
    7. '(x' → logprob: -6.8017473220825195
    8. '(point' → logprob: -7.4267473220825195
    9. ' (' → logprob: -7.8017473220825195
    10. 'Point' → logprob: -8.42674732208252

Token 1513: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5760173797607422
    2. 'pt' → logprob: -0.8260173797607422
    3. 'x' → logprob: -10.826017379760742
    4. ' pt' → logprob: -10.951017379760742
    5. ' p' → logprob: -11.201017379760742
    6. 'point' → logprob: -11.951017379760742
    7. 'v' → logprob: -12.076017379760742
    8. 'pts' → logprob: -12.701017379760742
    9. '(pt' → logprob: -12.826017379760742
    10. '   ' → logprob: -12.826017379760742

Token 1514: '.x' (ID: 3700)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02014251798391342
    2. ' p' → logprob: -5.020142555236816
    3. '.' → logprob: -5.520142555236816
    4. '.p' → logprob: -5.770142555236816
    5. '.x' → logprob: -5.895142555236816
    6. '(p' → logprob: -6.395142555236816
    7. 'x' → logprob: -7.020142555236816
    8. ' .' → logprob: -7.895142555236816
    9. '.pt' → logprob: -9.020142555236816
    10. '.point' → logprob: -9.145142555236816

Token 1515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2279788851737976
    2. ',p' → logprob: -1.6029789447784424
    3. 'for' → logprob: -6.477978706359863
    4. ' ,' → logprob: -7.727978706359863
    5. 'p' → logprob: -7.977978706359863
    6. ' for' → logprob: -9.352978706359863
    7. ')' → logprob: -10.227978706359863
    8. ':' → logprob: -10.852978706359863
    9. '
' → logprob: -10.852978706359863
    10. ',
' → logprob: -10.977978706359863

Token 1516: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00833407137542963
    2. 'Point' → logprob: -5.008334159851074
    3. 'y' → logprob: -6.758334159851074
    4. ' p' → logprob: -8.383334159851074
    5. '0' → logprob: -9.133334159851074
    6. ' Point' → logprob: -10.883334159851074
    7. '   ' → logprob: -11.008334159851074
    8. '(Point' → logprob: -11.883334159851074
    9. 'point' → logprob: -11.945834159851074
    10. 'pt' → logprob: -12.008334159851074

Token 1517: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.07932517677545547
    2. 'y' → logprob: -2.5793251991271973
    3. ')' → logprob: -8.204324722290039
    4. '),' → logprob: -9.329324722290039
    5. ')y' → logprob: -10.579324722290039
    6. '.x' → logprob: -11.579324722290039
    7. ')}' → logprob: -11.704324722290039
    8. '```' → logprob: -11.954324722290039
    9. 'x' → logprob: -12.829324722290039
    10. '
' → logprob: -12.954324722290039

Token 1518: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013517236337065697
    2. ')' → logprob: -4.513517379760742
    3. ',' → logprob: -7.013517379760742
    4. 'for' → logprob: -7.513517379760742
    5. '):(' → logprob: -7.638517379760742
    6. '(p' → logprob: -8.888517379760742
    7. ' for' → logprob: -9.763517379760742
    8. '   ' → logprob: -10.013517379760742
    9. '(Point' → logprob: -10.013517379760742
    10. ' ):' → logprob: -10.138517379760742

Token 1519: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07042784988880157
    2. 'Point' → logprob: -2.695427894592285
    3. '[' → logprob: -8.695427894592285
    4. ' Point' → logprob: -9.570427894592285
    5. ' p' → logprob: -9.695427894592285
    6. '   ' → logprob: -10.195427894592285
    7. '[p' → logprob: -10.445427894592285
    8. '(Point' → logprob: -10.820427894592285
    9. '[]' → logprob: -11.195427894592285
    10. 'pt' → logprob: -11.695427894592285

Token 1520: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11351361870765686
    2. ' for' → logprob: -2.238513708114624
    3. 'p' → logprob: -8.238513946533203
    4. '   ' → logprob: -8.738513946533203
    5. '[p' → logprob: -9.863513946533203
    6. '[' → logprob: -9.988513946533203
    7. '
' → logprob: -10.238513946533203
    8. ' p' → logprob: -10.488513946533203
    9. ' ' → logprob: -10.738513946533203
    10. '           ' → logprob: -10.738513946533203

Token 1521: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00014704519708175212
    2. ' p' → logprob: -9.250146865844727
    3. 'pts' → logprob: -10.000146865844727
    4. 'pt' → logprob: -12.625146865844727
    5. '(p' → logprob: -13.750146865844727
    6. '
' → logprob: -15.125146865844727
    7. 'points' → logprob: -15.375146865844727
    8. ' pts' → logprob: -15.750146865844727
    9. 'pth' → logprob: -16.625146865844727
    10. '(' → logprob: -16.625146865844727

Token 1522: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1645224690437317
    2. 'pts' → logprob: -2.664522409439087
    3. 'in' → logprob: -2.789522409439087
    4. ' in' → logprob: -4.414522647857666
    5. 'pt' → logprob: -4.789522647857666
    6. ' p' → logprob: -9.164522171020508
    7. ' pts' → logprob: -10.164522171020508
    8. '_pts' → logprob: -10.789522171020508
    9. '
' → logprob: -12.289522171020508
    10. 'ps' → logprob: -12.414522171020508

Token 1523: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.00045902872807346284
    2. '[p' → logprob: -8.750458717346191
    3. ' pts' → logprob: -9.125458717346191
    4. '[' → logprob: -9.625458717346191
    5. '[(' → logprob: -10.500458717346191
    6. 'p' → logprob: -10.500458717346191
    7. '
' → logprob: -10.750458717346191
    8. 'points' → logprob: -11.125458717346191
    9. 'pt' → logprob: -11.625458717346191
    10. '_pts' → logprob: -11.875458717346191

Token 1524: '}.' (ID: 16255)
  Prédit: '}.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}.' → logprob: -0.0049169547855854034
    2. '}).' → logprob: -5.629917144775391
    3. ').' → logprob: -7.629917144775391
    4. '.values' → logprob: -7.754917144775391
    5. ' }.' → logprob: -9.12991714477539
    6. '       ' → logprob: -9.37991714477539
    7. 'values' → logprob: -9.87991714477539
    8. '           ' → logprob: -10.37991714477539
    9. '   ' → logprob: -10.50491714477539
    10. '})' → logprob: -10.75491714477539

Token 1525: 'values' (ID: 7222)
  Prédit: 'values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.00034714414505288005
    2. '.values' → logprob: -8.000347137451172
    3. ' values' → logprob: -11.375347137451172
    4. 'value' → logprob: -15.875347137451172
    5. '
' → logprob: -16.250347137451172
    6. 'points' → logprob: -18.375347137451172
    7. 'items' → logprob: -18.625347137451172
    8. '(values' → logprob: -18.875347137451172
    9. '   ' → logprob: -19.000347137451172
    10. '	values' → logprob: -19.125347137451172

Token 1526: '()),' (ID: 24379)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.36865341663360596
    2. '()))
' → logprob: -1.618653416633606
    3. '()' → logprob: -3.2436532974243164
    4. '))' → logprob: -3.4936532974243164
    5. '}))' → logprob: -3.9936532974243164
    6. '()),' → logprob: -4.368653297424316
    7. '}))
' → logprob: -6.118653297424316
    8. '))
' → logprob: -6.493653297424316
    9. '(p' → logprob: -6.993653297424316
    10. '),' → logprob: -7.118653297424316

Token 1527: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.3782830137643032e-05
    2. ' key' → logprob: -11.25001335144043
    3. '
' → logprob: -15.25001335144043
    4. '   ' → logprob: -15.87501335144043
    5. '(key' → logprob: -15.87501335144043
    6. '       ' → logprob: -16.12501335144043
    7. '           ' → logprob: -17.12501335144043
    8. '               ' → logprob: -17.87501335144043
    9. '	key' → logprob: -18.00001335144043
    10. '                       ' → logprob: -18.87501335144043

Token 1528: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.03823529928922653
    2. 'lambda' → logprob: -3.2882351875305176
    3. '=' → logprob: -8.663235664367676
    4. '(lambda' → logprob: -11.038235664367676
    5. 'attr' → logprob: -12.788235664367676
    6. 'operator' → logprob: -13.913235664367676
    7. '_lambda' → logprob: -14.413235664367676
    8. '   ' → logprob: -15.038235664367676
    9. ' lambda' → logprob: -15.788235664367676
    10. 'λ' → logprob: -17.03823471069336

Token 1529: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05285422131419182
    2. 'lambda' → logprob: -3.052854299545288
    3. ' p' → logprob: -5.802854061126709
    4. ' lambda' → logprob: -6.802854061126709
    5. '=lambda' → logprob: -9.302854537963867
    6. 'x' → logprob: -11.802854537963867
    7. '_lambda' → logprob: -12.302854537963867
    8. '(lambda' → logprob: -12.302854537963867
    9. '_p' → logprob: -12.552854537963867
    10. '   ' → logprob: -13.052854537963867

Token 1530: ':' (ID: 25)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5136925578117371
    2. ' p' → logprob: -1.0136926174163818
    3. ':' → logprob: -3.263692617416382
    4. ':p' → logprob: -8.013692855834961
    5. ' :' → logprob: -8.638692855834961
    6. '(p' → logprob: -9.638692855834961
    7. '	p' → logprob: -12.138692855834961
    8. '   ' → logprob: -12.763692855834961
    9. '    ' → logprob: -12.888692855834961
    10. ' (' → logprob: -12.888692855834961

Token 1531: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00043496055877767503
    2. ' p' → logprob: -7.750434875488281
    3. '(p' → logprob: -12.375434875488281
    4. ' (' → logprob: -17.37543487548828
    5. '	p' → logprob: -18.50043487548828
    6. 'lambda' → logprob: -18.50043487548828
    7. '   ' → logprob: -18.62543487548828
    8. '(' → logprob: -18.75043487548828
    9. '_' → logprob: -19.25043487548828
    10. '_p' → logprob: -19.87543487548828

Token 1532: '.x' (ID: 3700)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02336415834724903
    2. ' p' → logprob: -3.7733640670776367
    3. '.p' → logprob: -9.398364067077637
    4. '(p' → logprob: -11.023364067077637
    5. 'x' → logprob: -11.648364067077637
    6. ':' → logprob: -12.898364067077637
    7. '.' → logprob: -13.023364067077637
    8. '	p' → logprob: -13.148364067077637
    9. '   ' → logprob: -13.898364067077637
    10. ')p' → logprob: -14.023364067077637

Token 1533: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003755782498046756
    2. ')
' → logprob: -5.753755569458008
    3. '           ' → logprob: -8.003755569458008
    4. '       ' → logprob: -8.878755569458008
    5. '   ' → logprob: -10.128755569458008
    6. ' )' → logprob: -10.253755569458008
    7. '               ' → logprob: -11.753755569458008
    8. ',' → logprob: -12.003755569458008
    9. ')
' → logprob: -13.503755569458008
    10. '))' → logprob: -13.503755569458008

Token 1534: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013195235515013337
    2. '
' → logprob: -6.751319408416748
    3. '       ' → logprob: -9.501319885253906
    4. 'return' → logprob: -11.001319885253906
    5. '<|end|>' → logprob: -11.376319885253906
    6. '		' → logprob: -11.501319885253906
    7. ',' → logprob: -11.751319885253906
    8. '            
' → logprob: -12.001319885253906
    9. '               ' → logprob: -12.501319885253906
    10. ')' → logprob: -12.876319885253906

Token 1535: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.2631990611553192
    2. '           ' → logprob: -1.7631990909576416
    3. '       ' → logprob: -3.1381990909576416
    4. '
' → logprob: -4.6381988525390625
    5. ' nodes' → logprob: -5.1381988525390625
    6. '   ' → logprob: -8.263198852539062
    7. '	nodes' → logprob: -8.263198852539062
    8. '(nodes' → logprob: -8.388198852539062
    9. '.nodes' → logprob: -9.763198852539062
    10. '               ' → logprob: -9.763198852539062

Token 1536: '_per' (ID: 10938)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.050297416746616364
    2. '.' → logprob: -3.175297498703003
    3. '.extend' → logprob: -5.300297260284424
    4. '_per' → logprob: -6.925297260284424
    5. ' .' → logprob: -8.050297737121582
    6. '.setdefault' → logprob: -8.175297737121582
    7. 'append' → logprob: -9.050297737121582
    8. '   ' → logprob: -9.175297737121582
    9. ')' → logprob: -9.550297737121582
    10. ',' → logprob: -9.800297737121582

Token 1537: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.026320040225982666
    2. '_line' → logprob: -3.651319980621338
    3. 'append' → logprob: -11.151320457458496
    4. 'Line' → logprob: -13.276320457458496
    5. '-line' → logprob: -14.026320457458496
    6. 'lin' → logprob: -14.651320457458496
    7. ' line' → logprob: -15.026320457458496
    8. 'ine' → logprob: -15.401320457458496
    9. '```' → logprob: -15.401320457458496
    10. '_LINE' → logprob: -15.526320457458496

Token 1538: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0556858591735363
    2. '.' → logprob: -2.9306857585906982
    3. '.app' → logprob: -7.930685997009277
    4. '.extend' → logprob: -7.930685997009277
    5. '.ap' → logprob: -10.305685997009277
    6. ' .' → logprob: -10.555685997009277
    7. 'append' → logprob: -12.555685997009277
    8. '.
' → logprob: -12.680685997009277
    9. '.setdefault' → logprob: -12.805685997009277
    10. ').' → logprob: -12.805685997009277

Token 1539: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014195004478096962
    2. 'pts' → logprob: -4.264194965362549
    3. ' pts' → logprob: -11.389195442199707
    4. ' (' → logprob: -12.014195442199707
    5. '(
' → logprob: -12.139195442199707
    6. '(pt' → logprob: -12.264195442199707
    7. '(points' → logprob: -13.264195442199707
    8. '_pts' → logprob: -13.764195442199707
    9. 'pt' → logprob: -14.764195442199707
    10. '[' → logprob: -15.139195442199707

Token 1540: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -5.512236498361744e-07
    2. ' pts' → logprob: -14.750000953674316
    3. 'pt' → logprob: -16.0
    4. '[' → logprob: -19.0
    5. '   ' → logprob: -20.375
    6. '_pts' → logprob: -21.625
    7. 'points' → logprob: -22.875
    8. 'p' → logprob: -23.125
    9. 'nts' → logprob: -23.375
    10. '
' → logprob: -23.375

Token 1541: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003188524628058076
    2. '       ' → logprob: -6.003188610076904
    3. ')
' → logprob: -7.753188610076904
    4. '   ' → logprob: -9.253188133239746
    5. '           ' → logprob: -9.253188133239746
    6. '
' → logprob: -9.878188133239746
    7. '<|end|>' → logprob: -11.128188133239746
    8. '        
' → logprob: -12.503188133239746
    9. '               ' → logprob: -12.878188133239746
    10. '[' → logprob: -13.128188133239746

Token 1542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19552947580814362
    2. '
' → logprob: -1.8205294609069824
    3. '<|end|>' → logprob: -4.320529460906982
    4. '   ' → logprob: -6.695529460906982
    5. '```' → logprob: -7.945529460906982
    6. '        
' → logprob: -8.44552993774414
    7. '<|end|>' → logprob: -9.19552993774414
    8. ')' → logprob: -9.32052993774414
    9. '	' → logprob: -9.82052993774414
    10. 'return' → logprob: -9.94552993774414

Token 1543: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018467605113983154
    2. '
' → logprob: -4.393467426300049
    3. '<|end|>' → logprob: -5.643467426300049
    4. 'return' (adapté à ' return') → logprob: -6.893467426300049
    5. '   ' → logprob: -7.393467426300049
    6. ')' → logprob: -8.393467903137207
    7. '        
' → logprob: -8.893467903137207
    8. '	' → logprob: -9.393467903137207
    9. ' return' → logprob: -10.143467903137207
    10. '```' → logprob: -10.268467903137207

Token 1544: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -7.517272024415433e-05
    2. ' nodes' → logprob: -9.500075340270996
    3. '(nodes' → logprob: -16.00007438659668
    4. '	nodes' → logprob: -17.00007438659668
    5. '   ' → logprob: -17.37507438659668
    6. 'tokens' → logprob: -19.12507438659668
    7. 'points' → logprob: -19.25007438659668
    8. '.nodes' → logprob: -19.37507438659668
    9. '       ' → logprob: -19.50007438659668
    10. '[' → logprob: -19.62507438659668

Token 1545: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0009724444826133549
    2. 'per' → logprob: -7.375972270965576
    3. '<|end|>' → logprob: -8.125972747802734
    4. '_tokens' → logprob: -10.625972747802734
    5. '_token' → logprob: -11.500972747802734
    6. '[' → logprob: -12.750972747802734
    7. 'Per' → logprob: -12.875972747802734
    8. '_' → logprob: -13.125972747802734
    9. '<|end|>' → logprob: -13.250972747802734
    10. ')' → logprob: -13.750972747802734

Token 1546: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.3856492842023727e-06
    2. 'list' → logprob: -14.125000953674316
    3. 'ine' → logprob: -14.500000953674316
    4. '_line' → logprob: -16.000001907348633
    5. ' line' → logprob: -17.125001907348633
    6. '[line' → logprob: -18.125001907348633
    7. 'Line' → logprob: -18.250001907348633
    8. '-line' → logprob: -19.125001907348633
    9. '[' → logprob: -20.125001907348633
    10. '(line' → logprob: -20.500001907348633

Token 1547: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2557448446750641
    2. '
' → logprob: -1.5057448148727417
    3. '<|end|>' → logprob: -6.630744934082031
    4. 'def' → logprob: -7.005744934082031
    5. '    
' → logprob: -7.130744934082031
    6. '

' → logprob: -7.505744934082031
    7. '<|end|>' → logprob: -9.380744934082031
    8. '```' → logprob: -9.880744934082031
    9. '        
' → logprob: -10.005744934082031
    10. ' def' → logprob: -11.505744934082031

Token 1548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036567214876413345
    2. '
' → logprob: -3.661567211151123
    3. 'def' → logprob: -4.911567211151123
    4. '

' → logprob: -6.786567211151123
    5. '<|end|>' → logprob: -7.161567211151123
    6. '    
' → logprob: -8.161567687988281
    7. '<|end|>' → logprob: -8.411567687988281
    8. ' def' → logprob: -9.036567687988281
    9. '```' → logprob: -9.161567687988281
    10. '	def' → logprob: -9.661567687988281

Token 1549: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.32212069630622864
    2. '   ' → logprob: -1.3221206665039062
    3. '
' → logprob: -4.822120666503906
    4. ' def' → logprob: -7.322120666503906
    5. '    
' → logprob: -9.447120666503906
    6. '	def' → logprob: -11.572120666503906
    7. '        
' → logprob: -11.822120666503906
    8. '

' → logprob: -12.197120666503906
    9. '```' → logprob: -13.072120666503906
    10. 'class' → logprob: -13.447120666503906

Token 1550: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.7719390988349915
    2. '_free' → logprob: -0.8969390988349915
    3. ' _' → logprob: -2.1469390392303467
    4. '_find' → logprob: -5.396939277648926
    5. '_connect' → logprob: -5.771939277648926
    6. '_' → logprob: -6.021939277648926
    7. '_create' → logprob: -7.521939277648926
    8. '_add' → logprob: -7.771939277648926
    9. '_compute' → logprob: -7.771939277648926
    10. '_get' → logprob: -7.896939277648926

Token 1551: 'free' (ID: 18847)
  Prédit: 'free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.0003542926860973239
    2. '_free' → logprob: -8.375354766845703
    3. 'build' → logprob: -9.125354766845703
    4. 'find' → logprob: -12.125354766845703
    5. 'can' → logprob: -12.750354766845703
    6. 'def' → logprob: -13.250354766845703
    7. 'is' → logprob: -13.750354766845703
    8. 'get' → logprob: -14.125354766845703
    9. 'has' → logprob: -14.625354766845703
    10. 'segments' → logprob: -14.750354766845703

Token 1552: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.009630593471229076
    2. '_' → logprob: -4.7596306800842285
    3. '_points' → logprob: -8.25963020324707
    4. '_spaces' → logprob: -8.38463020324707
    5. '_segment' → logprob: -8.50963020324707
    6. '_space' → logprob: -8.75963020324707
    7. '_inter' → logprob: -10.25963020324707
    8. '_ranges' → logprob: -10.38463020324707
    9. '   ' → logprob: -10.63463020324707
    10. '```' → logprob: -11.00963020324707

Token 1553: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.0006141475751064718
    2. '(self' → logprob: -7.500614166259766
    3. '   ' → logprob: -10.625614166259766
    4. 'at' → logprob: -10.750614166259766
    5. 'self' → logprob: -11.625614166259766
    6. '
' → logprob: -13.000614166259766
    7. '(' → logprob: -14.000614166259766
    8. '_' → logprob: -14.375614166259766
    9. '_(' → logprob: -14.750614166259766
    10. '@' → logprob: -15.000614166259766

Token 1554: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.19184328615665436
    2. 'y' → logprob: -2.066843271255493
    3. 'self' → logprob: -3.066843271255493
    4. '(self' → logprob: -6.691843509674072
    5. '   ' → logprob: -10.066843032836914
    6. 'def' → logprob: -10.316843032836914
    7. '_x' → logprob: -10.566843032836914
    8. '_' → logprob: -11.066843032836914
    9. ' self' → logprob: -11.441843032836914
    10. 'Y' → logprob: -11.566843032836914

Token 1555: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.856408536899835e-05
    2. '(' → logprob: -10.750028610229492
    3. ' (' → logprob: -12.000028610229492
    4. 'self' → logprob: -14.500028610229492
    5. '
' → logprob: -15.875028610229492
    6. '   ' → logprob: -16.000028610229492
    7. '(
' → logprob: -16.250028610229492
    8. '```' → logprob: -16.875028610229492
    9. 'def' → logprob: -17.500028610229492
    10. '(s' → logprob: -17.500028610229492

Token 1556: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1543116271495819
    2. ')' → logprob: -2.2793116569519043
    3. 'self' → logprob: -3.4043116569519043
    4. ',' → logprob: -6.029311656951904
    5. ')(' → logprob: -6.529311656951904
    6. '   ' → logprob: -6.779311656951904
    7. '       ' → logprob: -7.154311656951904
    8. ':' → logprob: -7.779311656951904
    9. '
' → logprob: -8.154311180114746
    10. ' self' → logprob: -8.529311180114746

Token 1557: ' y' (ID: 342)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03597031906247139
    2. 'y' → logprob: -3.4109702110290527
    3. ' self' → logprob: -6.535970211029053
    4. ' y' → logprob: -7.910970211029053
    5. '   ' → logprob: -8.035970687866211
    6. 'float' → logprob: -9.160970687866211
    7. 'def' → logprob: -10.410970687866211
    8. ')' → logprob: -11.285970687866211
    9. '       ' → logprob: -11.410970687866211
    10. '(self' → logprob: -11.785970687866211

Token 1558: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006882676389068365
    2. ')' → logprob: -5.006882667541504
    3. '):' → logprob: -9.506882667541504
    4. '(self' → logprob: -10.006882667541504
    5. 'self' → logprob: -10.381882667541504
    6. '   ' → logprob: -11.881882667541504
    7. ':self' → logprob: -13.131882667541504
    8. '       ' → logprob: -13.256882667541504
    9. ':)' → logprob: -13.631882667541504
    10. '):
' → logprob: -13.631882667541504

Token 1559: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.7755875129951164e-05
    2. ' float' → logprob: -10.12504768371582
    3. ')' → logprob: -12.00004768371582
    4. '   ' → logprob: -14.25004768371582
    5. '
' → logprob: -15.37504768371582
    6. '(float' → logprob: -15.62504768371582
    7. '	float' → logprob: -16.25004768371582
    8. '=float' → logprob: -16.37504768371582
    9. 'flo' → logprob: -16.75004768371582
    10. '<float' → logprob: -16.75004768371582

Token 1560: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.966313281329349e-05
    2. 'self' → logprob: -10.000049591064453
    3. '   ' → logprob: -12.750049591064453
    4. '       ' → logprob: -14.250049591064453
    5. '(self' → logprob: -14.875049591064453
    6. ' )' → logprob: -16.250049591064453
    7. '):
' → logprob: -16.375049591064453
    8. ')->' → logprob: -17.000049591064453
    9. '):' → logprob: -18.250049591064453
    10. ' self' → logprob: -18.875049591064453

Token 1561: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.15306852757930756
    2. ' ->' → logprob: -2.6530685424804688
    3. ')' → logprob: -3.1530685424804688
    4. '(self' → logprob: -3.6530685424804688
    5. 'self' → logprob: -6.528068542480469
    6. '       ' → logprob: -7.028068542480469
    7. '   ' → logprob: -8.028068542480469
    8. ')->' → logprob: -9.153068542480469
    9. ' self' → logprob: -10.028068542480469
    10. 'def' → logprob: -11.278068542480469

Token 1562: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -2.629921436891891e-05
    2. ' List' → logprob: -10.75002670288086
    3. '[List' → logprob: -12.37502670288086
    4. '[]' → logprob: -15.62502670288086
    5. '   ' → logprob: -15.62502670288086
    6. 'list' → logprob: -16.25002670288086
    7. '	List' → logprob: -17.75002670288086
    8. '_list' → logprob: -17.87502670288086
    9. 'def' → logprob: -18.75002670288086
    10. '[(' → logprob: -19.12502670288086

Token 1563: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001514384988695383
    2. '[List' → logprob: -6.501514434814453
    3. '[(' → logprob: -12.001514434814453
    4. '[
' → logprob: -13.126514434814453
    5. '   ' → logprob: -13.251514434814453
    6. '```' → logprob: -14.626514434814453
    7. '[np' → logprob: -14.876514434814453
    8. '[Double' → logprob: -15.376514434814453
    9. '[[' → logprob: -15.751514434814453
    10. 'Tuple' → logprob: -15.751514434814453

Token 1564: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -2.45848218582978e-06
    2. 'float' → logprob: -13.87500286102295
    3. ' Tuple' → logprob: -13.87500286102295
    4. '[' → logprob: -14.50000286102295
    5. '   ' → logprob: -17.125001907348633
    6. 'tuple' → logprob: -19.250001907348633
    7. ' ' → logprob: -20.250001907348633
    8. '       ' → logprob: -20.875001907348633
    9. 'Tu' → logprob: -21.000001907348633
    10. '
' → logprob: -21.125001907348633

Token 1565: '[' (ID: 58)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.029768308624625206
    2. '[' → logprob: -3.529768228530884
    3. '   ' → logprob: -11.529767990112305
    4. '(float' → logprob: -12.404767990112305
    5. ',float' → logprob: -13.279767990112305
    6. ' float' → logprob: -13.529767990112305
    7. '	float' → logprob: -15.279767990112305
    8. '[
' → logprob: -15.904767990112305
    9. 'flo' → logprob: -15.904767990112305
    10. '
' → logprob: -16.279767990112305

Token 1566: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -7.896309739408025e-07
    2. ' float' → logprob: -14.750000953674316
    3. '[' → logprob: -15.125000953674316
    4. '   ' → logprob: -15.875000953674316
    5. 'Optional' → logprob: -18.0
    6. '(float' → logprob: -18.875
    7. 'flo' → logprob: -19.0
    8. ',float' → logprob: -19.375
    9. '
' → logprob: -19.5
    10. '	float' → logprob: -19.5

Token 1567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004090508911758661
    2. ',float' → logprob: -5.504090309143066
    3. ' ,' → logprob: -12.504090309143066
    4. ',int' → logprob: -12.629090309143066
    5. ',
' → logprob: -12.879090309143066
    6. '   ' → logprob: -13.379090309143066
    7. 'float' → logprob: -14.254090309143066
    8. ',List' → logprob: -16.254091262817383
    9. ',bool' → logprob: -16.504091262817383
    10. ',double' → logprob: -16.754091262817383

Token 1568: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0002619318547658622
    2. ' float' → logprob: -8.250262260437012
    3. ',float' → logprob: -15.875262260437012
    4. 'flo' → logprob: -16.000261306762695
    5. '	float' → logprob: -16.250261306762695
    6. '=float' → logprob: -16.625261306762695
    7. 'Optional' → logprob: -16.625261306762695
    8. '   ' → logprob: -17.125261306762695
    9. '(float' → logprob: -17.875261306762695
    10. '<float' → logprob: -18.000261306762695

Token 1569: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.013246467337012291
    2. ']:' → logprob: -4.513246536254883
    3. ']' → logprob: -6.388246536254883
    4. ']]:
' → logprob: -8.013246536254883
    5. ']:
' → logprob: -9.263246536254883
    6. ']:

' → logprob: -10.013246536254883
    7. ']>' → logprob: -10.513246536254883
    8. '']:
' → logprob: -11.763246536254883
    9. ']:


' → logprob: -13.263246536254883
    10. ']>
' → logprob: -13.388246536254883

Token 1570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.97024549683556e-05
    2. 'segments' → logprob: -10.125080108642578
    3. '```' → logprob: -11.250080108642578
    4. 'points' → logprob: -12.125080108642578
    5. '   ' → logprob: -12.375080108642578
    6. 'ranges' → logprob: -12.625080108642578
    7. '#' → logprob: -13.250080108642578
    8. '[' → logprob: -13.375080108642578
    9. '	' → logprob: -13.875080108642578
    10. ',' → logprob: -14.250080108642578

Token 1571: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0734226256608963
    2. 'segments' → logprob: -2.69842267036438
    3. 'ranges' → logprob: -6.323422431945801
    4. '#' → logprob: -8.0734224319458
    5. 'interval' → logprob: -8.3234224319458
    6. 'result' → logprob: -8.6984224319458
    7. '[' → logprob: -8.6984224319458
    8. ' segments' → logprob: -8.8234224319458
    9. 'lines' → logprob: -9.4484224319458
    10. 'points' → logprob: -9.8234224319458

Token 1572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31898781657218933
    2. 'segments' → logprob: -1.3189878463745117
    3. 'ranges' → logprob: -6.193987846374512
    4. '#' → logprob: -7.193987846374512
    5. 'free' → logprob: -7.193987846374512
    6. 'result' → logprob: -7.443987846374512
    7. 'interval' → logprob: -7.443987846374512
    8. ' segments' → logprob: -9.068987846374512
    9. 'seg' → logprob: -9.193987846374512
    10. 'lines' → logprob: -9.318987846374512

Token 1573: ' Return' (ID: 6318)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.01392653863877058
    2. '#' → logprob: -4.6389265060424805
    3. 'free' → logprob: -6.7639265060424805
    4. '       ' → logprob: -7.1389265060424805
    5. 'ranges' → logprob: -7.7639265060424805
    6. 'result' → logprob: -7.8889265060424805
    7. 'res' → logprob: -8.13892650604248
    8. 'interval' → logprob: -8.51392650604248
    9. 'lines' → logprob: -8.76392650604248
    10. 'bounds' → logprob: -9.13892650604248

Token 1574: ' horizontal' (ID: 25511)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.32740724086761475
    2. '[(' → logprob: -2.2024073600769043
    3. '[' → logprob: -2.5774073600769043
    4. '[
' → logprob: -3.0774073600769043
    5. 'segments' → logprob: -3.9524073600769043
    6. 'List' → logprob: -4.452407360076904
    7. '[]
' → logprob: -4.952407360076904
    8. '[List' → logprob: -5.327407360076904
    9. 'free' → logprob: -6.827407360076904
    10. ' List' → logprob: -7.452407360076904

Token 1575: ' free' (ID: 2240)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.3948674499988556
    2. '[' → logprob: -1.3948674201965332
    3. ' segments' → logprob: -3.269867420196533
    4. '[
' → logprob: -4.644867420196533
    5. ' intervals' → logprob: -4.644867420196533
    6. 'interval' → logprob: -5.144867420196533
    7. '_segments' → logprob: -5.269867420196533
    8. '_list' → logprob: -5.894867420196533
    9. '[]' → logprob: -6.394867420196533
    10. ')' → logprob: -6.894867420196533

Token 1576: ' x' (ID: 1215)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.46449220180511475
    2. 'segments' → logprob: -1.0894922018051147
    3. ' segments' → logprob: -3.8394923210144043
    4. '[' → logprob: -4.714492321014404
    5. '[
' → logprob: -6.839492321014404
    6. ',' → logprob: -7.089492321014404
    7. 'interval' → logprob: -7.089492321014404
    8. '(' → logprob: -7.839492321014404
    9. ' intervals' → logprob: -8.214491844177246
    10. 'Segments' → logprob: -8.339491844177246

Token 1577: ' segments' (ID: 33749)
  Prédit: '_ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ranges' → logprob: -1.021003246307373
    2. '_inter' → logprob: -1.396003246307373
    3. '_segments' → logprob: -1.521003246307373
    4. ' intervals' → logprob: -2.896003246307373
    5. 'segments' → logprob: -3.146003246307373
    6. 'ranges' → logprob: -3.396003246307373
    7. 'interval' → logprob: -4.271003246307373
    8. ' segments' → logprob: -4.521003246307373
    9. ' ranges' → logprob: -4.771003246307373
    10. ',' → logprob: -5.146003246307373

Token 1578: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4101616144180298
    2. 'in' → logprob: -1.5351616144180298
    3. ' in' → logprob: -1.5351616144180298
    4. ',' → logprob: -2.6601614952087402
    5. ' between' → logprob: -2.6601614952087402
    6. '   ' → logprob: -2.7851614952087402
    7. ' that' → logprob: -3.9101614952087402
    8. ' (' → logprob: -4.03516149520874
    9. '(' → logprob: -4.28516149520874
    10. ' at' → logprob: -4.78516149520874

Token 1579: ' corridor' (ID: 92467)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6561601758003235
    2. '[' → logprob: -0.7811601758003235
    3. '(' → logprob: -4.406160354614258
    4. 'the' → logprob: -5.156160354614258
    5. 'self' → logprob: -5.406160354614258
    6. '
' → logprob: -8.156160354614258
    7. '   ' → logprob: -9.031160354614258
    8. '[(' → logprob: -9.781160354614258
    9. 'def' → logprob: -9.906160354614258
    10. '[
' → logprob: -10.031160354614258

Token 1580: ' [' (ID: 723)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.1484471559524536
    2. 'between' → logprob: -1.6484471559524536
    3. 'at' → logprob: -2.023447036743164
    4. ' between' → logprob: -2.398447036743164
    5. '=' → logprob: -2.773447036743164
    6. '[' → logprob: -2.898447036743164
    7. 'from' → logprob: -3.148447036743164
    8. ',' → logprob: -4.023447036743164
    9. '   ' → logprob: -4.148447036743164
    10. 'in' → logprob: -4.273447036743164

Token 1581: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028096288442611694
    2. '(' → logprob: -5.877809524536133
    3. ' ' → logprob: -13.252809524536133
    4. '   ' → logprob: -13.877809524536133
    5. ',' → logprob: -14.377809524536133
    6. ' (' → logprob: -14.502809524536133
    7. '[' → logprob: -14.627809524536133
    8. '```' → logprob: -16.002809524536133
    9. '
' → logprob: -16.127809524536133
    10. ')' → logprob: -16.377809524536133

Token 1582: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07944387942552567
    2. '.' → logprob: -2.57944393157959
    3. '.,' → logprob: -8.82944393157959
    4. ' ,' → logprob: -8.95444393157959
    5. 'self' → logprob: -9.32944393157959
    6. '   ' → logprob: -10.07944393157959
    7. ',self' → logprob: -10.07944393157959
    8. ',
' → logprob: -10.32944393157959
    9. '```' → logprob: -10.57944393157959
    10. '
' → logprob: -11.07944393157959

Token 1583: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10263863950967789
    2. ']' → logprob: -2.3526387214660645
    3. '   ' → logprob: -6.7276387214660645
    4. '],' → logprob: -7.7276387214660645
    5. ' ,' → logprob: -7.7276387214660645
    6. ']
' → logprob: -8.977638244628906
    7. ',
' → logprob: -9.352638244628906
    8. ' ]' → logprob: -9.352638244628906
    9. '
' → logprob: -10.852638244628906
    10. '       ' → logprob: -11.852638244628906

Token 1584: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.492753803730011
    2. ' at' → logprob: -2.617753744125366
    3. ' that' → logprob: -2.617753744125366
    4. ',' → logprob: -2.992753744125366
    5. ' between' → logprob: -3.242753744125366
    6. '   ' → logprob: -3.367753744125366
    7. '=' → logprob: -3.867753744125366
    8. ' =' → logprob: -4.117753982543945
    9. 'that' → logprob: -4.117753982543945
    10. ')' → logprob: -4.617753982543945

Token 1585: ' height' (ID: 4679)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0031808018684387207
    2. ' y' → logprob: -5.753180980682373
    3. ' that' → logprob: -13.753180503845215
    4. 'that' → logprob: -13.753180503845215
    5. '   ' → logprob: -14.628180503845215
    6. 'the' → logprob: -15.378180503845215
    7. '	y' → logprob: -15.753180503845215
    8. '```' → logprob: -16.75318145751953
    9. '
' → logprob: -17.00318145751953
    10. '       ' → logprob: -17.12818145751953

Token 1586: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1603446751832962
    2. ' y' → logprob: -1.9103447198867798
    3. '       ' → logprob: -9.785345077514648
    4. '   ' → logprob: -10.785345077514648
    5. ',' → logprob: -11.410345077514648
    6. '(y' → logprob: -11.660345077514648
    7. '```' → logprob: -11.785345077514648
    8. '	y' → logprob: -11.910345077514648
    9. '
' → logprob: -12.160345077514648
    10. ',y' → logprob: -13.910345077514648

Token 1587: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08698337525129318
    2. ',' → logprob: -3.4619834423065186
    3. ':
' → logprob: -4.7119832038879395
    4. '   ' → logprob: -4.7119832038879395
    5. '
' → logprob: -4.9619832038879395
    6. ':' → logprob: -5.3369832038879395
    7. '(' → logprob: -5.3369832038879395
    8. '(self' → logprob: -5.4619832038879395
    9. '```' → logprob: -5.9619832038879395
    10. ' (' → logprob: -5.9619832038879395

Token 1588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034572917968034744
    2. '   ' → logprob: -4.409573078155518
    3. '        ' → logprob: -4.909573078155518
    4. ' intervals' → logprob: -6.284573078155518
    5. ' that' → logprob: -6.409573078155518
    6. '    ' → logprob: -6.534573078155518
    7. 'excluding' → logprob: -7.034573078155518
    8. ' excluding' → logprob: -7.409573078155518
    9. 'from' → logprob: -7.534573078155518
    10. '
' → logprob: -7.659573078155518

Token 1589: ' excluding' (ID: 76651)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40436965227127075
    2. 'excluding' (adapté à ' excluding') → logprob: -2.154369592666626
    3. 'segments' → logprob: -3.404369592666626
    4. 'cover' → logprob: -3.529369592666626
    5. 'covered' → logprob: -3.779369592666626
    6. '   ' → logprob: -3.904369592666626
    7. 'exclude' → logprob: -4.404369831085205
    8. 'excluded' → logprob: -4.404369831085205
    9. '
' → logprob: -4.654369831085205
    10. ' intervals' → logprob: -4.779369831085205

Token 1590: ' pillar' (ID: 109066)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pill' → logprob: -1.2362308502197266
    2. 'pillar' → logprob: -1.6112308502197266
    3. 'segments' → logprob: -1.9862308502197266
    4. 'x' → logprob: -2.6112308502197266
    5. 'the' → logprob: -2.6112308502197266
    6. 'any' → logprob: -2.8612308502197266
    7. '[' → logprob: -3.2362308502197266
    8. 'interval' → logprob: -3.6112308502197266
    9. 'inter' → logprob: -3.9862308502197266
    10. '[(' → logprob: -4.111230850219727

Token 1591: ' horizontal' (ID: 25511)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0064587593078613
    2. 'interval' → logprob: -1.2564587593078613
    3. 'inter' → logprob: -1.8814587593078613
    4. 'segments' → logprob: -2.3814587593078613
    5. 'edges' → logprob: -3.3814587593078613
    6. 'bound' → logprob: -4.506458759307861
    7. 'regions' → logprob: -4.631458759307861
    8. 'ranges' → logprob: -5.131458759307861
    9. 'x' → logprob: -5.506458759307861
    10. ' intervals' → logprob: -5.506458759307861

Token 1592: ' projections' (ID: 74016)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.1410241723060608
    2. 'edges' → logprob: -2.391024112701416
    3. 'interval' → logprob: -3.891024112701416
    4. ' segments' → logprob: -4.641024112701416
    5. 'bound' → logprob: -6.016024112701416
    6. 'line' → logprob: -6.266024112701416
    7. 'sp' → logprob: -6.891024112701416
    8. ' edges' → logprob: -7.141024112701416
    9. 'inter' → logprob: -7.516024112701416
    10. ' line' → logprob: -7.516024112701416

Token 1593: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2585628032684326
    2. ':
' → logprob: -2.3835628032684326
    3. '   ' → logprob: -3.3835628032684326
    4. ':' → logprob: -3.5085628032684326
    5. '(self' → logprob: -4.133563041687012
    6. ',' → logprob: -4.508563041687012
    7. '(' → logprob: -4.508563041687012
    8. '.' → logprob: -4.633563041687012
    9. '.
' → logprob: -5.133563041687012
    10. '
' → logprob: -5.633563041687012

Token 1594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010622471570968628
    2. '
' → logprob: -4.885622501373291
    3. '```' → logprob: -6.385622501373291
    4. '   ' → logprob: -7.510622501373291
    5. '        
' → logprob: -8.760622024536133
    6. '[' → logprob: -9.010622024536133
    7. '[
' → logprob: -9.510622024536133
    8. '"""
' → logprob: -9.510622024536133
    9. ')
' → logprob: -9.760622024536133
    10. ':' → logprob: -9.885622024536133

Token 1595: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19284403324127197
    2. '
' → logprob: -1.942844033241272
    3. 'segments' → logprob: -3.8178439140319824
    4. 'excluded' → logprob: -5.942843914031982
    5. '```' → logprob: -6.442843914031982
    6. 'exclude' → logprob: -7.317843914031982
    7. '"""
' (adapté à ' """
') → logprob: -7.317843914031982
    8. 'points' → logprob: -7.692843914031982
    9. 'ranges' → logprob: -7.692843914031982
    10. ')
' → logprob: -7.942843914031982

Token 1596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0863877609372139
    2. 'segments' → logprob: -2.836387872695923
    3. 'ranges' → logprob: -5.086387634277344
    4. 'interval' → logprob: -5.461387634277344
    5. '
' → logprob: -6.211387634277344
    6. 'x' → logprob: -6.211387634277344
    7. 'result' → logprob: -6.461387634277344
    8. 'excluded' → logprob: -6.711387634277344
    9. 'free' → logprob: -6.961387634277344
    10. 'rect' → logprob: -6.961387634277344

Token 1597: ' intervals' (ID: 49900)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.862995445728302
    2. 'interval' → logprob: -0.987995445728302
    3. 'blocked' → logprob: -2.3629953861236572
    4. 'ob' → logprob: -3.2379953861236572
    5. 'free' → logprob: -3.2379953861236572
    6. 'occupied' → logprob: -4.362995624542236
    7. 'for' → logprob: -4.737995624542236
    8. 'blocks' → logprob: -6.237995624542236
    9. 'excluded' → logprob: -6.237995624542236
    10. '#' → logprob: -6.362995624542236

Token 1598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47425952553749084
    2. '=' → logprob: -0.9742594957351685
    3. '=[]' → logprob: -8.974259376525879
    4. ':' → logprob: -9.849259376525879
    5. '=[]
' → logprob: -13.474259376525879
    6. '=[' → logprob: -14.724259376525879
    7. '   ' → logprob: -14.724259376525879
    8. '       ' → logprob: -15.974259376525879
    9. ' :' → logprob: -15.974259376525879
    10. ' ' → logprob: -16.224260330200195

Token 1599: ' []' (ID: 6126)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.315487802028656
    2. '[]' → logprob: -1.3154878616333008
    3. '[[' → logprob: -6.815487861633301
    4. '[]
' → logprob: -6.815487861633301
    5. '[' → logprob: -11.3154878616333
    6. ' [(' → logprob: -12.0654878616333
    7. '[]

' → logprob: -12.0654878616333
    8. ' []' → logprob: -12.8154878616333
    9. '[]}' → logprob: -13.4404878616333
    10. '[])' → logprob: -13.4404878616333

Token 1600: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7894360423088074
    2. '       ' → logprob: -1.2894361019134521
    3. 'for' → logprob: -1.4144361019134521
    4. ')' → logprob: -4.914435863494873
    5. '[' → logprob: -4.914435863494873
    6. '
' → logprob: -5.664435863494873
    7. '<|end|>' → logprob: -5.789435863494873
    8. '[]' → logprob: -6.289435863494873
    9. '[]
' → logprob: -6.789435863494873
    10. '        
' → logprob: -7.539435863494873

Token 1601: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04403150826692581
    2. '       ' → logprob: -3.7940316200256348
    3. ' for' → logprob: -3.9190316200256348
    4. '
' → logprob: -7.669031620025635
    5. ')' → logprob: -9.419031143188477
    6. ')
' → logprob: -10.544031143188477
    7. '=' → logprob: -10.919031143188477
    8. '        
' → logprob: -11.169031143188477
    9. '#' → logprob: -11.294031143188477
    10. '[' → logprob: -11.294031143188477

Token 1602: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01226462796330452
    2. '(' → logprob: -4.762264728546143
    3. ' for' → logprob: -6.887264728546143
    4. '#' → logprob: -7.262264728546143
    5. '
' → logprob: -7.512264728546143
    6. '[' → logprob: -8.012264251708984
    7. '[(' → logprob: -8.012264251708984
    8. '0' → logprob: -8.387264251708984
    9. 'segments' → logprob: -9.512264251708984
    10. '[]' → logprob: -9.512264251708984

Token 1603: ' will' (ID: 738)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.357777714729309
    2. ' for' → logprob: -1.607777714729309
    3. 'for' → logprob: -1.607777714729309
    4. '.append' → logprob: -2.3577775955200195
    5. '       ' → logprob: -2.4827775955200195
    6. 'import' → logprob: -3.8577775955200195
    7. 'add' → logprob: -4.1077775955200195
    8. 'start' → logprob: -4.2327775955200195
    9. '...' → logprob: -4.3577775955200195
    10. 'will' → logprob: -4.6077775955200195

Token 1604: ' subtract' (ID: 71973)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.5168542265892029
    2. 'collect' → logprob: -1.3918542861938477
    3. 'add' → logprob: -2.0168542861938477
    4. 'for' → logprob: -5.766854286193848
    5. 'fill' → logprob: -6.016854286193848
    6. 'insert' → logprob: -6.141854286193848
    7. ' add' → logprob: -6.141854286193848
    8. 'acc' → logprob: -6.641854286193848
    9. '   ' → logprob: -6.766854286193848
    10. 'extract' → logprob: -7.141854286193848

Token 1605: ' pillar' (ID: 109066)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.11668767035007477
    2. '[' → logprob: -2.491687774658203
    3. '(' → logprob: -4.366687774658203
    4. ' [(' → logprob: -4.991687774658203
    5. 'from' → logprob: -5.616687774658203
    6. '0' → logprob: -6.866687774658203
    7. 'import' → logprob: -7.616687774658203
    8. '[]' → logprob: -7.866687774658203
    9. '
' → logprob: -7.991687774658203
    10. '<|end|>' → logprob: -7.991687774658203

Token 1606: ' shadow' (ID: 21884)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.11502466350793839
    2. 'x' → logprob: -2.9900245666503906
    3. ' intervals' → logprob: -3.6150245666503906
    4. 'pro' → logprob: -3.7400245666503906
    5. ' projections' → logprob: -6.115024566650391
    6. 's' → logprob: -6.740024566650391
    7. 'horizontal' → logprob: -6.990024566650391
    8. 'segments' → logprob: -7.740024566650391
    9. 'inter' → logprob: -7.865024566650391
    10. 'ranges' → logprob: -7.990024566650391

Token 1607: ' intervals' (ID: 49900)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13465170562267303
    2. 'from' → logprob: -3.1346516609191895
    3. 'for' → logprob: -4.0096516609191895
    4. ' intervals' → logprob: -4.1346516609191895
    5. '=[]' → logprob: -4.2596516609191895
    6. 'ranges' → logprob: -5.1346516609191895
    7. 'interval' → logprob: -5.2596516609191895
    8. ' for' → logprob: -5.5096516609191895
    9. '[' → logprob: -6.0096516609191895
    10. '=' → logprob: -6.1346516609191895

Token 1608: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5672943592071533
    2. 'for' → logprob: -1.6922943592071533
    3. '       ' → logprob: -1.8172943592071533
    4. 'from' → logprob: -3.0672943592071533
    5. '[' → logprob: -4.567294120788574
    6. ' from' → logprob: -4.692294120788574
    7. ',' → logprob: -5.442294120788574
    8. '=' → logprob: -5.567294120788574
    9. '[
' → logprob: -5.942294120788574
    10. '
' → logprob: -6.192294120788574

Token 1609: ' this' (ID: 495)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9174619317054749
    2. '[' → logprob: -1.04246187210083
    3. 'the' → logprob: -1.54246187210083
    4. 'x' → logprob: -3.91746187210083
    5. 'y' → logprob: -5.16746187210083
    6. 'each' → logprob: -5.79246187210083
    7. '
' → logprob: -6.66746187210083
    8. 'self' → logprob: -7.04246187210083
    9. 'range' → logprob: -7.66746187210083
    10. '<|end|>' → logprob: -7.79246187210083

Token 1610: ' line' (ID: 2543)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.2624212503433228
    2. '[(' → logprob: -1.5124212503433228
    3. 'from' → logprob: -1.6374212503433228
    4. '[' → logprob: -1.8874212503433228
    5. 'interval' → logprob: -3.012421131134033
    6. ',' → logprob: -3.887421131134033
    7. '
' → logprob: -4.262421131134033
    8. ' from' → logprob: -4.387421131134033
    9. '(' → logprob: -4.387421131134033
    10. '[
' → logprob: -5.012421131134033

Token 1611: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.905067503452301
    2. '       ' → logprob: -1.2800674438476562
    3. 'for' → logprob: -1.4050674438476562
    4. ' for' → logprob: -3.0300674438476562
    5. 'x' → logprob: -5.280067443847656
    6. ',' → logprob: -5.780067443847656
    7. '        
' → logprob: -5.905067443847656
    8. '[' → logprob: -5.905067443847656
    9. 'from' → logprob: -6.655067443847656
    10. 'current' → logprob: -6.905067443847656

Token 1612: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25225234031677246
    2. 'x' → logprob: -2.7522523403167725
    3. '       ' → logprob: -3.1272523403167725
    4. ' for' → logprob: -3.5022523403167725
    5. 'curr' → logprob: -3.6272523403167725
    6. 'start' → logprob: -4.502252578735352
    7. 'pillar' → logprob: -4.502252578735352
    8. 'current' → logprob: -4.752252578735352
    9. 'pill' → logprob: -5.377252578735352
    10. '
' → logprob: -5.502252578735352

Token 1613: ' corridors' (ID: 154015)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.0416947603225708
    2. 'curr' → logprob: -1.7916947603225708
    3. 'x' → logprob: -1.9166947603225708
    4. 'for' → logprob: -2.2916946411132812
    5. 'interval' → logprob: -2.9166946411132812
    6. 'cur' → logprob: -3.0416946411132812
    7. 'covered' → logprob: -3.5416946411132812
    8. 'if' → logprob: -3.6666946411132812
    9. 'corr' → logprob: -4.416694641113281
    10. '#' → logprob: -4.666694641113281

Token 1614: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26414644718170166
    2. '=' → logprob: -2.139146327972412
    3. '_inter' → logprob: -2.514146327972412
    4. '.append' → logprob: -4.389146327972412
    5. '=[]' → logprob: -5.764146327972412
    6. '_' → logprob: -6.014146327972412
    7. '[' → logprob: -6.514146327972412
    8. '_start' → logprob: -6.639146327972412
    9. '_width' → logprob: -6.764146327972412
    10. '_x' → logprob: -6.889146327972412

Token 1615: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -6.869017852295656e-06
    2. '[[' → logprob: -13.000006675720215
    3. '[' → logprob: -13.125006675720215
    4. ' [(' → logprob: -13.625006675720215
    5. '[]' → logprob: -13.875006675720215
    6. '[((' → logprob: -15.125006675720215
    7. '[]
' → logprob: -16.25000762939453
    8. '[
' → logprob: -18.00000762939453
    9. '([(' → logprob: -20.25000762939453
    10. '[\' → logprob: -20.62500762939453

Token 1616: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009213464800268412
    2. '(' → logprob: -7.000921249389648
    3. ' ' → logprob: -11.625921249389648
    4. ' (' → logprob: -14.500921249389648
    5. '   ' → logprob: -14.750921249389648
    6. '[' → logprob: -16.75092124938965
    7. '  ' → logprob: -17.50092124938965
    8. 'float' → logprob: -18.25092124938965
    9. '    ' → logprob: -18.31342124938965
    10. '       ' → logprob: -18.37592124938965

Token 1617: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11287853121757507
    2. ',' → logprob: -2.2378785610198975
    3. ' ,' → logprob: -11.112878799438477
    4. '```' → logprob: -11.737878799438477
    5. '.,' → logprob: -11.862878799438477
    6. '0' → logprob: -12.487878799438477
    7. '   ' → logprob: -12.737878799438477
    8. '[' → logprob: -12.737878799438477
    9. ',
' → logprob: -12.862878799438477
    10. ' ' → logprob: -12.862878799438477

Token 1618: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00480758398771286
    2. ',' → logprob: -5.629807472229004
    3. '.' → logprob: -6.754807472229004
    4. ' ' → logprob: -10.754807472229004
    5. 'float' → logprob: -12.254807472229004
    6. ' ,' → logprob: -12.379807472229004
    7. '```' → logprob: -12.629807472229004
    8. '   ' → logprob: -12.754807472229004
    9. ')' → logprob: -13.629807472229004
    10. '),' → logprob: -14.004807472229004

Token 1619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005653033731505275
    2. ',self' → logprob: -7.750565528869629
    3. ',
' → logprob: -9.375565528869629
    4. 'self' → logprob: -10.750565528869629
    5. ' ,' → logprob: -10.750565528869629
    6. '<|end|>' → logprob: -13.625565528869629
    7. '),' → logprob: -13.750565528869629
    8. ',float' → logprob: -14.000565528869629
    9. '0' → logprob: -14.000565528869629
    10. ',y' → logprob: -14.375565528869629

Token 1620: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004336493439041078
    2. ' self' → logprob: -7.750433444976807
    3. '0' → logprob: -13.000433921813965
    4. '	self' → logprob: -15.750433921813965
    5. '(self' → logprob: -16.25043296813965
    6. '
' → logprob: -16.37543296813965
    7. '<|end|>' → logprob: -16.50043296813965
    8. '[self' → logprob: -16.62543296813965
    9. '1' → logprob: -16.75043296813965
    10. '```' → logprob: -17.00043296813965

Token 1621: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -1.4855663721391466e-05
    2. 'width' → logprob: -11.375015258789062
    3. '.' → logprob: -13.000015258789062
    4. '.w' → logprob: -14.375015258789062
    5. ' .' → logprob: -14.875015258789062
    6. '.height' → logprob: -16.625015258789062
    7. '	width' → logprob: -17.000015258789062
    8. '
' → logprob: -18.000015258789062
    9. '   ' → logprob: -18.000015258789062
    10. ' width' → logprob: -18.375015258789062

Token 1622: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.05950441211462021
    2. ',' → logprob: -2.934504508972168
    3. '),' → logprob: -5.684504508972168
    4. ')]
' → logprob: -7.934504508972168
    5. '),(' → logprob: -8.059504508972168
    6. ')],' → logprob: -8.184504508972168
    7. ')' → logprob: -8.809504508972168
    8. '),
' → logprob: -10.934504508972168
    9. ' )' → logprob: -11.059504508972168
    10. ')])' → logprob: -11.309504508972168

Token 1623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03668374940752983
    2. 'for' → logprob: -4.661683559417725
    3. '
' → logprob: -4.786683559417725
    4. ')' → logprob: -5.411683559417725
    5. '```' → logprob: -5.411683559417725
    6. ')
' → logprob: -5.911683559417725
    7. ',' → logprob: -6.036683559417725
    8. 'segments' → logprob: -7.036683559417725
    9. ' for' → logprob: -7.286683559417725
    10. 'interval' → logprob: -7.661683559417725

Token 1624: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011174555867910385
    2. '       ' → logprob: -4.76117467880249
    3. 'blocked' → logprob: -7.51117467880249
    4. 'occupied' → logprob: -7.63617467880249
    5. '#' (adapté à ' #') → logprob: -7.76117467880249
    6. 'sub' → logprob: -8.386174201965332
    7. 'pill' → logprob: -8.386174201965332
    8. 'pillar' → logprob: -8.761174201965332
    9. 'excluded' → logprob: -9.511174201965332
    10. 'subtract' → logprob: -9.636174201965332

Token 1625: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.375538163818419e-05
    2. '       ' → logprob: -9.625083923339844
    3. '#' → logprob: -11.500083923339844
    4. ' for' → logprob: -12.500083923339844
    5. '
' → logprob: -14.250083923339844
    6. 'from' → logprob: -14.500083923339844
    7. 'occupied' → logprob: -14.625083923339844
    8. 'free' → logprob: -15.250083923339844
    9. 'def' → logprob: -15.375083923339844
    10. 'current' → logprob: -15.375083923339844

Token 1626: ' each' (ID: 2454)
  Prédit: 'pillar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pillar' → logprob: -0.14767690002918243
    2. 'p' → logprob: -2.022676944732666
    3. 'pill' → logprob: -5.647676944732666
    4. 'poly' → logprob: -7.022676944732666
    5. 'polygon' → logprob: -7.897676944732666
    6. ' pillar' → logprob: -8.772676467895508
    7. ' p' → logprob: -11.147676467895508
    8. 'pol' → logprob: -12.397676467895508
    9. '
' → logprob: -12.522676467895508
    10. '   ' → logprob: -12.772676467895508

Token 1627: ' pillar' (ID: 109066)
  Prédit: 'pillar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pillar' → logprob: -0.301480770111084
    2. 'p' → logprob: -1.426480770111084
    3. 'pill' → logprob: -4.676480770111084
    4. 'polygon' → logprob: -5.301480770111084
    5. ' p' → logprob: -5.926480770111084
    6. ' pillar' → logprob: -6.176480770111084
    7. 'poly' → logprob: -7.676480770111084
    8. 'pol' → logprob: -8.176481246948242
    9. '   ' → logprob: -10.176481246948242
    10. 'pier' → logprob: -10.176481246948242

Token 1628: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13052180409431458
    2. ':
' → logprob: -3.005521774291992
    3. '           ' → logprob: -3.755521774291992
    4. ',' → logprob: -3.755521774291992
    5. ' p' → logprob: -5.005521774291992
    6. ' for' → logprob: -5.255521774291992
    7. 'polygon' → logprob: -5.630521774291992
    8. 'for' → logprob: -5.880521774291992
    9. ':' → logprob: -6.255521774291992
    10. ' in' → logprob: -6.380521774291992

Token 1629: ' get' (ID: 717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05163126066327095
    2. ' for' → logprob: -3.051631212234497
    3. '           ' → logprob: -5.801631450653076
    4. '
' → logprob: -12.301630973815918
    5. '       ' → logprob: -12.301630973815918
    6. '	for' → logprob: -13.176630973815918
    7. 'interval' → logprob: -13.426630973815918
    8. '```' → logprob: -14.051630973815918
    9. '   ' → logprob: -14.426630973815918
    10. 'points' → logprob: -14.801630973815918

Token 1630: ' intersection' (ID: 42002)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.8353422284126282
    2. 'shadow' → logprob: -1.7103421688079834
    3. 'pillar' → logprob: -1.9603421688079834
    4. 'horizontal' → logprob: -2.4603421688079834
    5. 'h' → logprob: -3.3353421688079834
    6. 'for' → logprob: -3.5853421688079834
    7. 'proj' → logprob: -3.8353421688079834
    8. 'p' → logprob: -4.3353424072265625
    9. 'vertical' → logprob: -4.5853424072265625
    10. '   ' → logprob: -4.9603424072265625

Token 1631: ' intervals' (ID: 49900)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.4313866198062897
    2. '_points' → logprob: -2.056386709213257
    3. 's' → logprob: -2.931386709213257
    4. ' =' → logprob: -2.931386709213257
    5. 'interval' → logprob: -2.931386709213257
    6. 'with' → logprob: -3.056386709213257
    7. '=' → logprob: -5.681386470794678
    8. ' points' → logprob: -5.931386470794678
    9. '   ' → logprob: -6.431386470794678
    10. 'inter' → logprob: -6.931386470794678

Token 1632: ' at' (ID: 540)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.5722727179527283
    2. '       ' → logprob: -1.447272777557373
    3. 'for' → logprob: -1.947272777557373
    4. ' with' → logprob: -3.322272777557373
    5. ' for' → logprob: -4.822272777557373
    6. 'on' → logprob: -5.197272777557373
    7. '           ' → logprob: -6.072272777557373
    8. '   ' → logprob: -6.572272777557373
    9. ' on' → logprob: -6.572272777557373
    10. '=' → logprob: -7.947272777557373

Token 1633: ' line' (ID: 2543)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.709308167453855e-05
    2. 'line' → logprob: -9.750086784362793
    3. ' y' → logprob: -11.000086784362793
    4. '   ' → logprob: -12.500086784362793
    5. 'that' → logprob: -12.750086784362793
    6. 'this' → logprob: -13.750086784362793
    7. 'horizontal' → logprob: -14.000086784362793
    8. 'the' → logprob: -14.375086784362793
    9. ' ' → logprob: -14.375086784362793
    10. '
' → logprob: -14.500086784362793

Token 1634: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09028218686580658
    2. ' y' → logprob: -2.4652822017669678
    3. '   ' → logprob: -6.840281963348389
    4. '       ' → logprob: -9.340282440185547
    5. '=' → logprob: -10.090282440185547
    6. ' =' → logprob: -10.215282440185547
    7. '=y' → logprob: -11.215282440185547
    8. ' line' → logprob: -11.465282440185547
    9. 'line' → logprob: -11.590282440185547
    10. '_y' → logprob: -11.715282440185547

Token 1635: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026511257514357567
    2. ' for' → logprob: -4.651511192321777
    3. 'for' → logprob: -4.776511192321777
    4. ',' → logprob: -5.401511192321777
    5. ':' → logprob: -6.651511192321777
    6. ':
' → logprob: -6.651511192321777
    7. '           ' → logprob: -7.651511192321777
    8. '
' → logprob: -9.526511192321777
    9. '   ' → logprob: -9.776511192321777
    10. ' with' → logprob: -9.776511192321777

Token 1636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027454745024442673
    2. ' for' → logprob: -4.277454853057861
    3. 'for' → logprob: -4.902454853057861
    4. '           ' → logprob: -5.527454853057861
    5. ',' → logprob: -6.777454853057861
    6. '```' → logprob: -8.777454376220703
    7. ':
' → logprob: -8.902454376220703
    8. ':' → logprob: -9.152454376220703
    9. '   ' → logprob: -9.652454376220703
    10. '.' → logprob: -9.777454376220703

Token 1637: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.033924952149391174
    2. ' for' → logprob: -3.4089250564575195
    3. '       ' → logprob: -8.28392505645752
    4. '```' → logprob: -10.78392505645752
    5. '
' → logprob: -13.15892505645752
    6. '``' → logprob: -13.90892505645752
    7. 'interval' → logprob: -14.03392505645752
    8. '	for' → logprob: -14.40892505645752
    9. '   ' → logprob: -14.65892505645752
    10. '#' → logprob: -15.40892505645752

Token 1638: ' poly' (ID: 14600)
  Prédit: 'pillar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pillar' → logprob: -0.19062288105487823
    2. 'p' → logprob: -1.8156229257583618
    3. 'poly' → logprob: -5.065622806549072
    4. 'pill' → logprob: -5.690622806549072
    5. 'polygon' → logprob: -6.815622806549072
    6. ' pillar' → logprob: -11.31562328338623
    7. 'pol' → logprob: -11.81562328338623
    8. 'pier' → logprob: -12.19062328338623
    9. 'pil' → logprob: -12.44062328338623
    10. ' p' → logprob: -13.94062328338623

Token 1639: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011305048130452633
    2. 'in' → logprob: -4.51130485534668
    3. 'g' → logprob: -9.76130485534668
    4. 'gon' → logprob: -9.76130485534668
    5. '   ' → logprob: -9.88630485534668
    6. 'olygon' → logprob: -10.26130485534668
    7. '       ' → logprob: -11.13630485534668
    8. 'n' → logprob: -12.01130485534668
    9. 'l' → logprob: -12.13630485534668
    10. 'gn' → logprob: -12.13630485534668

Token 1640: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010187433508690447
    2. ' self' → logprob: -9.250102043151855
    3. '
' → logprob: -13.000102043151855
    4. '       ' → logprob: -13.500102043151855
    5. '   ' → logprob: -14.000102043151855
    6. '           ' → logprob: -14.125102043151855
    7. '(self' → logprob: -15.375102043151855
    8. '[self' → logprob: -15.500102043151855
    9. '	self' → logprob: -16.50010108947754
    10. ' ' → logprob: -17.50010108947754

Token 1641: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.47422873973846436
    2. 'pill' → logprob: -0.9742287397384644
    3. 'pillar' → logprob: -9.224228858947754
    4. '-pill' → logprob: -10.974228858947754
    5. 'p' → logprob: -11.349228858947754
    6. '
' → logprob: -11.724228858947754
    7. '	p' → logprob: -12.224228858947754
    8. '<p' → logprob: -12.224228858947754
    9. ' pillars' → logprob: -13.224228858947754
    10. '   ' → logprob: -14.349228858947754

Token 1642: 'ill' (ID: 492)
  Prédit: 'ill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ill' → logprob: -0.12699435651302338
    2. 'pill' → logprob: -2.1269943714141846
    3. 'illar' → logprob: -10.501994132995605
    4. 'illers' → logprob: -11.251994132995605
    5. '
' → logprob: -12.501994132995605
    6. '_p' → logprob: -12.751994132995605
    7. 'ills' → logprob: -13.001994132995605
    8. '-pill' → logprob: -13.251994132995605
    9. ' pillars' → logprob: -13.376994132995605
    10. 'p' → logprob: -13.626994132995605

Token 1643: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -5.3120038501219824e-05
    2. 'gars' → logprob: -10.375053405761719
    3. 'ar' → logprob: -11.375053405761719
    4. 'rs' → logprob: -13.250053405761719
    5. 'ons' → logprob: -13.625053405761719
    6. 'ors' → logprob: -13.750053405761719
    7. 'args' → logprob: -13.875053405761719
    8. 'l' → logprob: -14.000053405761719
    9. 'g' → logprob: -14.125053405761719
    10. '[' → logprob: -14.500053405761719

Token 1644: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2713785767555237
    2. ':' → logprob: -1.521378517150879
    3. '           ' → logprob: -4.021378517150879
    4. '       ' → logprob: -6.896378517150879
    5. 'for' → logprob: -9.396378517150879
    6. ',' → logprob: -9.521378517150879
    7. '):
' → logprob: -9.646378517150879
    8. ' for' → logprob: -10.396378517150879
    9. '[' → logprob: -11.646378517150879
    10. '   ' → logprob: -11.646378517150879

Token 1645: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14247822761535645
    2. ' for' → logprob: -2.2674782276153564
    3. '       ' → logprob: -4.392477989196777
    4. 'for' → logprob: -4.517477989196777
    5. '   ' → logprob: -5.267477989196777
    6. ' edges' → logprob: -8.267477989196777
    7. '	   ' → logprob: -9.767477989196777
    8. 'points' → logprob: -10.017477989196777
    9. '		' → logprob: -10.142477989196777
    10. ',' → logprob: -10.142477989196777

Token 1646: ' xs' (ID: 26642)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6187893748283386
    2. 'edges' → logprob: -1.2437894344329834
    3. 'vertices' → logprob: -3.2437894344329834
    4. 'interval' → logprob: -3.7437894344329834
    5. 'verts' → logprob: -3.8687894344329834
    6. '   ' → logprob: -3.9937894344329834
    7. 'ys' → logprob: -4.243789196014404
    8. 'xs' (adapté à ' xs') → logprob: -4.868789196014404
    9. 'points' → logprob: -4.868789196014404
    10. '#' → logprob: -4.868789196014404

Token 1647: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5253809690475464
    2. ' =' → logprob: -0.9003809690475464
    3. '=[]' → logprob: -6.400381088256836
    4. '_inter' → logprob: -8.775381088256836
    5. ':' → logprob: -9.650381088256836
    6. '           ' → logprob: -9.775381088256836
    7. 'inter' → logprob: -9.775381088256836
    8. 'for' → logprob: -10.150381088256836
    9. '=set' → logprob: -10.400381088256836
    10. '=[]
' → logprob: -10.525381088256836

Token 1648: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5762258768081665
    2. '[]
' → logprob: -0.8262258768081665
    3. '[]

' → logprob: -8.951226234436035
    4. 'set' → logprob: -9.451226234436035
    5. '[' → logprob: -9.951226234436035
    6. '[
' → logprob: -11.701226234436035
    7. 'poly' → logprob: -11.826226234436035
    8. ' []' → logprob: -12.576226234436035
    9. '[]}' → logprob: -12.701226234436035
    10. '[p' → logprob: -12.951226234436035

Token 1649: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7658117413520813
    2. '           ' → logprob: -1.0158116817474365
    3. 'for' → logprob: -1.7658116817474365
    4. '               ' → logprob: -7.515811920166016
    5. '[' → logprob: -8.265811920166016
    6. '=' → logprob: -8.640811920166016
    7. ':' → logprob: -8.765811920166016
    8. ',' → logprob: -8.890811920166016
    9. ' =' → logprob: -9.265811920166016
    10. '		' → logprob: -9.765811920166016

Token 1650: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023048853501677513
    2. '           ' → logprob: -4.3980488777160645
    3. 'n' (adapté à ' n') → logprob: -4.6480488777160645
    4. '#' → logprob: -7.3980488777160645
    5. '       ' → logprob: -9.148048400878906
    6. ' for' → logprob: -9.898048400878906
    7. 'edges' → logprob: -9.898048400878906
    8. 'vertices' → logprob: -10.523048400878906
    9. '   ' → logprob: -10.648048400878906
    10. 'points' → logprob: -12.023048400878906

Token 1651: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2015160620212555
    2. ' =' → logprob: -1.701516032218933
    3. '=len' → logprob: -9.451516151428223
    4. '_vertices' → logprob: -11.326516151428223
    5. 'vertices' → logprob: -12.326516151428223
    6. '   ' → logprob: -13.201516151428223
    7. 'for' → logprob: -13.576516151428223
    8. 'v' → logprob: -14.076516151428223
    9. '=n' → logprob: -14.451516151428223
    10. '=v' → logprob: -14.451516151428223

Token 1652: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.7697225252486533e-06
    2. ' len' → logprob: -12.625003814697266
    3. '(len' → logprob: -15.000003814697266
    4. '=len' → logprob: -16.250003814697266
    5. '[len' → logprob: -18.000003814697266
    6. '	len' → logprob: -18.875003814697266
    7. '   ' → logprob: -19.500003814697266
    8. '           ' → logprob: -20.125003814697266
    9. ',len' → logprob: -20.125003814697266
    10. '<len' → logprob: -20.125003814697266

Token 1653: '(poly' (ID: 175644)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.38687434792518616
    2. '(poly' → logprob: -1.1368743181228638
    3. ' poly' → logprob: -12.636874198913574
    4. '(pol' → logprob: -17.13687515258789
    5. '(' → logprob: -17.88687515258789
    6. '
' → logprob: -17.88687515258789
    7. '.poly' → logprob: -18.26187515258789
    8. 'pol' → logprob: -18.51187515258789
    9. '   ' → logprob: -18.63687515258789
    10. 'polygon' → logprob: -18.76187515258789

Token 1654: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.014696473255753517
    2. '.poly' → logprob: -4.8896965980529785
    3. 'poly' → logprob: -5.5146965980529785
    4. '(poly' → logprob: -6.5146965980529785
    5. '(vertices' → logprob: -7.1396965980529785
    6. 'vertices' → logprob: -7.2646965980529785
    7. ' poly' → logprob: -11.51469612121582
    8. '   ' → logprob: -11.63969612121582
    9. '.pol' → logprob: -11.76469612121582
    10. '_vertices' → logprob: -12.01469612121582

Token 1655: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11353224515914917
    2. ')' → logprob: -2.238532304763794
    3. '           ' → logprob: -7.363532066345215
    4. '       ' → logprob: -9.863532066345215
    5. '):
' → logprob: -11.613532066345215
    6. '   ' → logprob: -12.988532066345215
    7. ')
' → logprob: -12.988532066345215
    8. ')-' → logprob: -13.488532066345215
    9. 'for' → logprob: -13.613532066345215
    10. ')#' → logprob: -13.613532066345215

Token 1656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00479204161092639
    2. 'for' → logprob: -5.629792213439941
    3. ' for' → logprob: -7.004792213439941
    4. '       ' → logprob: -8.629792213439941
    5. '   ' → logprob: -9.379792213439941
    6. '```' → logprob: -12.504792213439941
    7. '	       ' → logprob: -12.629792213439941
    8. '		' → logprob: -12.629792213439941
    9. ' ' → logprob: -12.879792213439941
    10. '	   ' → logprob: -13.004792213439941

Token 1657: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007533632684499025
    2. ' for' → logprob: -5.007533550262451
    3. '           ' → logprob: -7.132533550262451
    4. '       ' → logprob: -11.75753402709961
    5. '```' → logprob: -12.25753402709961
    6. '	for' → logprob: -13.38253402709961
    7. '   ' → logprob: -13.38253402709961
    8. 'i' → logprob: -13.88253402709961
    9. '``' → logprob: -13.88253402709961
    10. 'prev' → logprob: -14.38253402709961

Token 1658: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.1424973713001236e-05
    2. 'j' → logprob: -10.875031471252441
    3. ' i' → logprob: -12.500031471252441
    4. '
' → logprob: -12.750031471252441
    5. '```' → logprob: -13.000031471252441
    6. '   ' → logprob: -13.875031471252441
    7. 'poly' → logprob: -14.500031471252441
    8. 'idx' → logprob: -14.750031471252441
    9. 'k' → logprob: -15.000031471252441
    10. '0' → logprob: -15.125031471252441

Token 1659: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023342495784163475
    2. 'in' → logprob: -3.7733426094055176
    3. ' i' → logprob: -10.02334213256836
    4. 'i' → logprob: -11.02334213256836
    5. '=' → logprob: -11.14834213256836
    6. ' ' → logprob: -12.02334213256836
    7. '   ' → logprob: -12.39834213256836
    8. ' =' → logprob: -12.77334213256836
    9. '	in' → logprob: -13.02334213256836
    10. 'n' → logprob: -13.52334213256836

Token 1660: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.596781946020201e-05
    2. ' range' → logprob: -10.000045776367188
    3. '0' → logprob: -14.750045776367188
    4. '(range' → logprob: -17.750045776367188
    5. '	range' → logprob: -18.125045776367188
    6. '
' → logprob: -18.750045776367188
    7. ' ' → logprob: -19.000045776367188
    8. '[' → logprob: -19.875045776367188
    9. '(' → logprob: -20.125045776367188
    10. '   ' → logprob: -21.000045776367188

Token 1661: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.129266067640856e-05
    2. '(n' → logprob: -11.125020980834961
    3. ' n' → logprob: -12.125020980834961
    4. '0' → logprob: -14.625020980834961
    5. '(' → logprob: -15.375020980834961
    6. '   ' → logprob: -15.875020980834961
    7. '	n' → logprob: -16.12502098083496
    8. '```' → logprob: -16.62502098083496
    9. '_n' → logprob: -17.37502098083496
    10. '1' → logprob: -17.50002098083496

Token 1662: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.041258662939071655
    2. '):' → logprob: -3.6662585735321045
    3. '-' → logprob: -4.291258811950684
    4. ' -' → logprob: -7.666258811950684
    5. ':' → logprob: -8.666258811950684
    6. '           ' → logprob: -8.791258811950684
    7. '):
' → logprob: -9.166258811950684
    8. '       ' → logprob: -9.291258811950684
    9. ':
' → logprob: -9.791258811950684
    10. '+' → logprob: -10.166258811950684

Token 1663: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.511121392250061
    2. 'v' → logprob: -1.261121392250061
    3. ' v' → logprob: -2.2611212730407715
    4. 'a' → logprob: -5.3861212730407715
    5. 'p' → logprob: -5.8861212730407715
    6. ' p' → logprob: -6.1361212730407715
    7. ' a' → logprob: -6.8861212730407715
    8. 'start' → logprob: -7.2611212730407715
    9. 'A' → logprob: -7.7611212730407715
    10. 'j' → logprob: -8.76112174987793

Token 1664: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07235193997621536
    2. 'a' (adapté à ' a') → logprob: -2.9473519325256348
    3. 'p' → logprob: -4.447351932525635
    4. '               ' → logprob: -5.572351932525635
    5. '                   ' → logprob: -7.322351932525635
    6. 'A' → logprob: -7.322351932525635
    7. 'curr' → logprob: -8.197352409362793
    8. 'start' → logprob: -9.697352409362793
    9. ' v' → logprob: -10.197352409362793
    10. '           ' → logprob: -10.447352409362793

Token 1665: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5803784728050232
    2. '=' → logprob: -0.8303784728050232
    3. ',' → logprob: -5.455378532409668
    4. '=
' → logprob: -9.830378532409668
    5. '   ' → logprob: -11.080378532409668
    6. ' ,' → logprob: -11.080378532409668
    7. 'a' → logprob: -11.205378532409668
    8. ' ' → logprob: -11.705378532409668
    9. '=a' → logprob: -11.955378532409668
    10. 'p' → logprob: -12.330378532409668

Token 1666: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -1.1756367712223437e-05
    2. ' poly' → logprob: -11.375011444091797
    3. '(poly' → logprob: -16.000011444091797
    4. 'py' → logprob: -17.500011444091797
    5. 'pol' → logprob: -17.875011444091797
    6. 'polygon' → logprob: -18.125011444091797
    7. '           ' → logprob: -18.875011444091797
    8. '   ' → logprob: -18.875011444091797
    9. 'p' → logprob: -19.125011444091797
    10. '
' → logprob: -20.250011444091797

Token 1667: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.0006104522035457194
    2. 'vertices' → logprob: -7.5006103515625
    3. '(vertices' → logprob: -10.6256103515625
    4. '   ' → logprob: -11.2506103515625
    5. '           ' → logprob: -12.5006103515625
    6. '       ' → logprob: -13.1256103515625
    7. '.edges' → logprob: -13.2506103515625
    8. ' vertices' → logprob: -13.3756103515625
    9. '
' → logprob: -13.3756103515625
    10. '_vertices' → logprob: -13.7506103515625

Token 1668: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.719917630311102e-05
    2. 'i' → logprob: -9.750077247619629
    3. ')[' → logprob: -12.375077247619629
    4. '(i' → logprob: -12.500077247619629
    5. '][' → logprob: -13.375077247619629
    6. '[
' → logprob: -13.375077247619629
    7. '[' → logprob: -13.625077247619629
    8. ')' → logprob: -13.625077247619629
    9. ' [' → logprob: -14.000077247619629
    10. ',i' → logprob: -14.125077247619629

Token 1669: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25711485743522644
    2. '               ' → logprob: -1.5071148872375488
    3. '                   ' → logprob: -5.882114887237549
    4. ')' → logprob: -7.132114887237549
    5. '           ' → logprob: -8.38211441040039
    6. ',
' → logprob: -8.75711441040039
    7. '
' → logprob: -8.75711441040039
    8. ' ,' → logprob: -8.75711441040039
    9. ')
' → logprob: -8.88211441040039
    10. '                ' → logprob: -9.00711441040039

Token 1670: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25397905707359314
    2. ' b' → logprob: -2.253978967666626
    3. 'b' → logprob: -2.628978967666626
    4. '```' → logprob: -4.003979206085205
    5. '                ' → logprob: -5.003979206085205
    6. 'a' → logprob: -5.378979206085205
    7. ' p' → logprob: -5.628979206085205
    8. ',' → logprob: -5.878979206085205
    9. ' ' → logprob: -6.628979206085205
    10. '           ' → logprob: -7.128979206085205

Token 1671: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0023173687513917685
    2. ' b' → logprob: -6.502317428588867
    3. '               ' → logprob: -7.252317428588867
    4. '           ' → logprob: -10.002317428588867
    5. '                   ' → logprob: -10.127317428588867
    6. '   ' → logprob: -11.002317428588867
    7. ' ' → logprob: -14.127317428588867
    8. '	b' → logprob: -14.127317428588867
    9. '                ' → logprob: -14.502317428588867
    10. '       ' → logprob: -14.627317428588867

Token 1672: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868805766105652
    2. ' =' → logprob: -1.13688063621521
    3. '=
' → logprob: -11.886880874633789
    4. ' ' → logprob: -14.136880874633789
    5. ',' → logprob: -14.511880874633789
    6. ' =
' → logprob: -14.761880874633789
    7. '   ' → logprob: -15.011880874633789
    8. '           ' → logprob: -15.886880874633789
    9. ')' → logprob: -16.13688087463379
    10. 'a' → logprob: -16.51188087463379

Token 1673: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.04859213903546333
    2. ' poly' → logprob: -3.0485920906066895
    3. '(poly' → logprob: -12.923592567443848
    4. 'polygon' → logprob: -14.048592567443848
    5. 'pol' → logprob: -14.423592567443848
    6. '           ' → logprob: -14.923592567443848
    7. 'Poly' → logprob: -16.17359161376953
    8. '       ' → logprob: -16.67359161376953
    9. '               ' → logprob: -16.67359161376953
    10. ' ' → logprob: -16.92359161376953

Token 1674: '.vertices' (ID: 47509)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6415358185768127
    2. '.vertices' → logprob: -0.8915358185768127
    3. 'vertices' → logprob: -3.016535758972168
    4. '(vertices' → logprob: -5.016535758972168
    5. '           ' → logprob: -6.516535758972168
    6. '_vertices' → logprob: -6.766535758972168
    7. '       ' → logprob: -6.766535758972168
    8. '   ' → logprob: -6.766535758972168
    9. '               ' → logprob: -6.891535758972168
    10. '((' → logprob: -8.016535758972168

Token 1675: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0003649017889983952
    2. '[i' → logprob: -8.750365257263184
    3. '(i' → logprob: -8.875365257263184
    4. '
' → logprob: -10.750365257263184
    5. '   ' → logprob: -10.750365257263184
    6. '[
' → logprob: -11.750365257263184
    7. '       ' → logprob: -12.625365257263184
    8. 'i' → logprob: -12.625365257263184
    9. '[' → logprob: -12.750365257263184
    10. '           ' → logprob: -13.125365257263184

Token 1676: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002658655575942248
    2. '(i' → logprob: -8.250266075134277
    3. '   ' → logprob: -13.375266075134277
    4. '           ' → logprob: -13.750266075134277
    5. ' i' → logprob: -13.750266075134277
    6. ' (' → logprob: -15.500266075134277
    7. '
' → logprob: -15.625266075134277
    8. '       ' → logprob: -15.750266075134277
    9. '               ' → logprob: -15.750266075134277
    10. '         ' → logprob: -16.50026512145996

Token 1677: ' +' (ID: 659)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6378971338272095
    2. 'i' → logprob: -0.7628971338272095
    3. ' (' → logprob: -6.51289701461792
    4. '+' → logprob: -6.51289701461792
    5. '[i' → logprob: -7.01289701461792
    6. '{i' → logprob: -7.51289701461792
    7. '+i' → logprob: -8.637897491455078
    8. '1' → logprob: -8.637897491455078
    9. '_i' → logprob: -8.887897491455078
    10. ' i' → logprob: -9.137897491455078

Token 1678: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. '
' → logprob: -16.625
    4. '```' → logprob: -18.0
    5. '           ' → logprob: -18.125
    6. 'i' → logprob: -18.375
    7. '   ' → logprob: -18.5
    8. '...' → logprob: -20.125
    9. '                   ' → logprob: -20.375
    10. '       ' → logprob: -20.375

Token 1679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.250000953674316
    3. ' ' → logprob: -16.25
    4. '
' → logprob: -17.25
    5. 'import' → logprob: -18.125
    6. 'i' → logprob: -18.625
    7. '0' → logprob: -18.875
    8. '   ' → logprob: -19.0
    9. '...' → logprob: -19.5
    10. 'next' → logprob: -19.5

Token 1680: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7328619360923767
    2. 'i' → logprob: -0.8578619360923767
    3. ')i' → logprob: -2.9828619956970215
    4. ')%' → logprob: -4.2328619956970215
    5. '%i' → logprob: -4.4828619956970215
    6. '(i' → logprob: -5.1078619956970215
    7. '[i' → logprob: -5.6078619956970215
    8. '```' → logprob: -6.2328619956970215
    9. '_i' → logprob: -6.8578619956970215
    10. '%' → logprob: -6.9828619956970215

Token 1681: ' %' (ID: 1851)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29314562678337097
    2. ')' → logprob: -2.4181456565856934
    3. ')%' → logprob: -3.1681456565856934
    4. '(i' → logprob: -3.4181456565856934
    5. '%' → logprob: -3.7931456565856934
    6. '
' → logprob: -4.668145656585693
    7. ')i' → logprob: -4.668145656585693
    8. '%i' → logprob: -4.668145656585693
    9. ']' → logprob: -5.293145656585693
    10. ' i' → logprob: -5.293145656585693

Token 1682: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.173704271830502e-06
    2. ' n' → logprob: -12.75000286102295
    3. 'poly' → logprob: -15.75000286102295
    4. '
' → logprob: -18.375003814697266
    5. 'i' → logprob: -19.500003814697266
    6. ')n' → logprob: -19.625003814697266
    7. '	n' → logprob: -20.125003814697266
    8. '           ' → logprob: -20.375003814697266
    9. '(n' → logprob: -20.375003814697266
    10. '   ' → logprob: -20.500003814697266

Token 1683: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.007954858243465424
    2. ']' → logprob: -4.882955074310303
    3. '           ' → logprob: -9.507954597473145
    4. ']:
' → logprob: -9.632954597473145
    5. ']

' → logprob: -9.757954597473145
    6. ']
' → logprob: -10.007954597473145
    7. '               ' → logprob: -10.132954597473145
    8. '].' → logprob: -10.257954597473145
    9. '       ' → logprob: -11.882954597473145
    10. ')
' → logprob: -12.007954597473145

Token 1684: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007389386650174856
    2. '           ' → logprob: -5.132389545440674
    3. ' if' → logprob: -7.257389545440674
    4. 'if' → logprob: -8.132389068603516
    5. '                   ' → logprob: -8.382389068603516
    6. ',' → logprob: -9.382389068603516
    7. '	           ' → logprob: -10.257389068603516
    8. ')' → logprob: -11.007389068603516
    9. '       ' → logprob: -11.257389068603516
    10. 'x' → logprob: -11.382389068603516

Token 1685: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018529583467170596
    2. '               ' → logprob: -7.126852989196777
    3. '#' (adapté à ' #') → logprob: -7.876852989196777
    4. '           ' → logprob: -8.001852989196777
    5. ' if' → logprob: -9.376852989196777
    6. 'dy' → logprob: -9.376852989196777
    7. 'inter' → logprob: -9.501852989196777
    8. 't' → logprob: -10.251852989196777
    9. 'y' → logprob: -10.376852989196777
    10. '                   ' → logprob: -12.501852989196777

Token 1686: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0030247678514569998
    2. '               ' → logprob: -6.253024578094482
    3. ' if' → logprob: -8.12802505493164
    4. 'dy' → logprob: -8.37802505493164
    5. '           ' → logprob: -8.75302505493164
    6. '#' → logprob: -9.12802505493164
    7. 't' → logprob: -9.25302505493164
    8. 'inter' → logprob: -9.87802505493164
    9. '```' → logprob: -10.12802505493164
    10. 'y' → logprob: -10.62802505493164

Token 1687: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46006789803504944
    2. 'abs' → logprob: -1.585067868232727
    3. ' if' → logprob: -2.2100679874420166
    4. '(abs' → logprob: -4.0850677490234375
    5. ' abs' → logprob: -4.3350677490234375
    6. 'y' → logprob: -4.7100677490234375
    7. '           ' → logprob: -5.2100677490234375
    8. ' (' → logprob: -6.0850677490234375
    9. '(y' → logprob: -6.4600677490234375
    10. ' y' → logprob: -6.7100677490234375

Token 1688: ' the' (ID: 290)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.43165451288223267
    2. '(min' → logprob: -1.806654453277588
    3. 'a' → logprob: -2.556654453277588
    4. 'min' → logprob: -2.681654453277588
    5. '(y' → logprob: -4.431654453277588
    6. '(abs' → logprob: -4.556654453277588
    7. 'y' → logprob: -5.056654453277588
    8. '(b' → logprob: -5.181654453277588
    9. 'abs' → logprob: -5.681654453277588
    10. '((' → logprob: -7.181654453277588

Token 1689: ' segment' (ID: 14806)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.2711045742034912
    2. '(a' → logprob: -1.2711045742034912
    3. '(min' → logprob: -1.7711045742034912
    4. '(y' → logprob: -1.8961045742034912
    5. '(b' → logprob: -3.021104574203491
    6. 'min' → logprob: -3.396104574203491
    7. 'a' → logprob: -3.896104574203491
    8. '(abs' → logprob: -4.77110481262207
    9. 'b' → logprob: -5.89610481262207
    10. ' (' → logprob: -6.64610481262207

Token 1690: ' crosses' (ID: 95853)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.397431880235672
    2. '.y' → logprob: -1.3974318504333496
    3. 'a' → logprob: -4.02243185043335
    4. 'min' → logprob: -4.39743185043335
    5. 'has' → logprob: -4.77243185043335
    6. ' has' → logprob: -4.89743185043335
    7. 'inter' → logprob: -5.39743185043335
    8. '```' → logprob: -5.64743185043335
    9. '.min' → logprob: -5.64743185043335
    10. 's' → logprob: -6.02243185043335

Token 1691: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.007954741828143597
    2. ' y' → logprob: -5.2579545974731445
    3. 'the' → logprob: -6.7579545974731445
    4. 'min' → logprob: -7.1329545974731445
    5. 'a' → logprob: -8.132954597473145
    6. ' the' → logprob: -9.132954597473145
    7. '(y' → logprob: -9.507954597473145
    8. ' min' → logprob: -10.132954597473145
    9. '```' → logprob: -10.132954597473145
    10. '   ' → logprob: -10.632954597473145

Token 1692: ' level' (ID: 3211)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2198234796524048
    2. 'and' → logprob: -1.4698234796524048
    3. ' between' → logprob: -2.5948233604431152
    4. '>=' → logprob: -2.7198233604431152
    5. '=' → logprob: -2.8448233604431152
    6. 'between' → logprob: -3.2198233604431152
    7. '==' → logprob: -3.3448233604431152
    8. ':
' → logprob: -3.5948233604431152
    9. '           ' → logprob: -3.8448233604431152
    10. ',' → logprob: -3.8448233604431152

Token 1693: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9233002066612244
    2. '               ' → logprob: -0.9233002066612244
    3. 'and' → logprob: -1.6733002662658691
    4. ' or' → logprob: -5.173300266265869
    5. ':' → logprob: -5.548300266265869
    6. ' (' → logprob: -5.673300266265869
    7. ',' → logprob: -6.548300266265869
    8. ':
' → logprob: -6.798300266265869
    9. ' if' → logprob: -7.298300266265869
    10. '                   ' → logprob: -7.798300266265869

Token 1694: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.100486159324646
    2. ' and' → logprob: -2.4754862785339355
    3. ' or' → logprob: -5.4754862785339355
    4. 'and' → logprob: -5.4754862785339355
    5. ' (' → logprob: -7.2254862785339355
    6. ',' → logprob: -7.4754862785339355
    7. ':' → logprob: -7.7254862785339355
    8. '```' → logprob: -7.7254862785339355
    9. ':
' → logprob: -7.9754862785339355
    10. '                   ' → logprob: -8.225485801696777

Token 1695: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7124601006507874
    2. ' if' → logprob: -0.7124601006507874
    3. '               ' → logprob: -4.087460041046143
    4. '                   ' → logprob: -6.212460041046143
    5. '                       ' → logprob: -8.9624605178833
    6. ' ' → logprob: -9.5874605178833
    7. '```' → logprob: -10.0874605178833
    8. '           ' → logprob: -10.4624605178833
    9. 'abs' → logprob: -11.2124605178833
    10. '   ' → logprob: -11.5874605178833

Token 1696: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4319782555103302
    2. '(min' → logprob: -1.8069782257080078
    3. 'min' → logprob: -2.056978225708008
    4. 'a' → logprob: -3.181978225708008
    5. '(abs' → logprob: -4.306978225708008
    6. 'abs' → logprob: -6.056978225708008
    7. ' (' → logprob: -7.431978225708008
    8. '(y' → logprob: -8.556978225708008
    9. ' min' → logprob: -9.056978225708008
    10. '   ' → logprob: -9.181978225708008

Token 1697: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6726263761520386
    2. '(a' → logprob: -1.1726263761520386
    3. 'min' → logprob: -2.422626495361328
    4. '(min' → logprob: -2.422626495361328
    5. 'y' → logprob: -6.672626495361328
    6. '(y' → logprob: -7.172626495361328
    7. ' (' → logprob: -8.172626495361328
    8. '(math' → logprob: -9.672626495361328
    9. '
' → logprob: -9.922626495361328
    10. '(abs' → logprob: -9.922626495361328

Token 1698: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00067323591792956
    2. 'y' → logprob: -8.000673294067383
    3. ').' → logprob: -8.750673294067383
    4. '.' → logprob: -9.000673294067383
    5. '<|end|>' → logprob: -11.125673294067383
    6. '.x' → logprob: -11.875673294067383
    7. '<|end|>' → logprob: -12.000673294067383
    8. '```' → logprob: -12.000673294067383
    9. ')' → logprob: -12.125673294067383
    10. ' .' → logprob: -12.375673294067383

Token 1699: ' -' (ID: 533)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8085899353027344
    2. ' <' → logprob: -1.4335899353027344
    3. '<=' → logprob: -1.8085899353027344
    4. ' -' → logprob: -2.4335899353027344
    5. '-' → logprob: -3.4335899353027344
    6. '<' → logprob: -3.6835899353027344
    7. ' >' → logprob: -6.558589935302734
    8. ' ==' → logprob: -6.808589935302734
    9. '==' → logprob: -7.183589935302734
    10. ' !=' → logprob: -7.308589935302734

Token 1700: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0011777279432862997
    2. ' y' → logprob: -6.751177787780762
    3. ')' → logprob: -13.376177787780762
    4. 'b' → logprob: -13.376177787780762
    5. '<|end|>' → logprob: -13.501177787780762
    6. '
' → logprob: -14.376177787780762
    7. '<|end|>' → logprob: -14.626177787780762
    8. ')y' → logprob: -14.751177787780762
    9. ' ' → logprob: -14.876177787780762
    10. '   ' → logprob: -15.501177787780762

Token 1701: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03023035079240799
    2. ')*(' → logprob: -3.5302302837371826
    3. ')*' → logprob: -7.655230522155762
    4. '<=' → logprob: -13.780230522155762
    5. ' )' → logprob: -13.905230522155762
    6. '==' → logprob: -14.030230522155762
    7. ')**' → logprob: -14.280230522155762
    8. '```' → logprob: -14.405230522155762
    9. ')
' → logprob: -15.030230522155762
    10. '   ' → logprob: -15.030230522155762

Token 1702: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30190396308898926
    2. ')*(' → logprob: -1.5519039630889893
    3. ')*' → logprob: -3.0519039630889893
    4. '*' → logprob: -6.92690372467041
    5. '```' → logprob: -8.30190372467041
    6. '==' → logprob: -9.17690372467041
    7. '       ' → logprob: -9.67690372467041
    8. '   ' → logprob: -11.05190372467041
    9. '<=' → logprob: -11.67690372467041
    10. '>' → logprob: -11.80190372467041

Token 1703: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00011021859245374799
    2. ' (' → logprob: -9.125110626220703
    3. '   ' → logprob: -14.375110626220703
    4. '       ' → logprob: -15.125110626220703
    5. ' ' → logprob: -15.375110626220703
    6. '           ' → logprob: -17.125110626220703
    7. '  ' → logprob: -17.500110626220703
    8. '(B' → logprob: -18.000110626220703
    9. '(' → logprob: -18.250110626220703
    10. '     ' → logprob: -18.375110626220703

Token 1704: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.7252845029579476e-05
    2. ' b' → logprob: -11.250027656555176
    3. '(b' → logprob: -11.250027656555176
    4. '   ' → logprob: -14.000027656555176
    5. ' ' → logprob: -16.62502670288086
    6. '	b' → logprob: -17.00002670288086
    7. '  ' → logprob: -17.25002670288086
    8. '       ' → logprob: -17.50002670288086
    9. '    ' → logprob: -18.25002670288086
    10. '           ' → logprob: -18.37502670288086

Token 1705: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.000241801084484905
    2. 'y' → logprob: -8.375242233276367
    3. '[' → logprob: -12.125242233276367
    4. '.' → logprob: -13.750242233276367
    5. '.py' → logprob: -13.875242233276367
    6. '.x' → logprob: -14.000242233276367
    7. '```' → logprob: -14.500242233276367
    8. '[y' → logprob: -15.000242233276367
    9. '<|end|>' → logprob: -15.000242233276367
    10. '.user' → logprob: -15.125242233276367

Token 1706: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6740604639053345
    2. '<' → logprob: -1.4240604639053345
    3. ')<' → logprob: -2.049060344696045
    4. '<=' → logprob: -2.799060344696045
    5. '-' → logprob: -4.049060344696045
    6. ')<=' → logprob: -4.424060344696045
    7. ' <' → logprob: -5.174060344696045
    8. '+' → logprob: -5.799060344696045
    9. '<|end|>' → logprob: -5.799060344696045
    10. '```' → logprob: -5.924060344696045

Token 1707: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004691610229201615
    2. ' y' → logprob: -7.750469207763672
    3. 'a' → logprob: -10.875469207763672
    4. ')' → logprob: -12.375469207763672
    5. ' ' → logprob: -12.875469207763672
    6. 'p' → logprob: -12.875469207763672
    7. '(y' → logprob: -13.375469207763672
    8. '   ' → logprob: -13.500469207763672
    9. '```' → logprob: -14.000469207763672
    10. '1' → logprob: -14.000469207763672

Token 1708: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.39325860142707825
    2. '<=' → logprob: -1.8932585716247559
    3. ' <' → logprob: -2.518258571624756
    4. ')' → logprob: -2.643258571624756
    5. ' <=' → logprob: -4.143258571624756
    6. ')<' → logprob: -5.143258571624756
    7. ')<=' → logprob: -7.018258571624756
    8. '[' → logprob: -9.768259048461914
    9. ' )' → logprob: -10.268259048461914
    10. '```' → logprob: -10.393259048461914

Token 1709: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6653390526771545
    2. '<' → logprob: -0.7903390526771545
    3. ' <=' → logprob: -3.9153389930725098
    4. ' <' → logprob: -4.41533899307251
    5. '<
' → logprob: -9.790339469909668
    6. '```' → logprob: -10.415339469909668
    7. '[' → logprob: -10.790339469909668
    8. ')<=' → logprob: -10.915339469909668
    9. '≤' → logprob: -11.165339469909668
    10. ']<=' → logprob: -11.790339469909668

Token 1710: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.3458322731312364e-06
    2. '-' → logprob: -12.625007629394531
    3. ' ' → logprob: -12.625007629394531
    4. '1' → logprob: -14.375007629394531
    5. '=' → logprob: -16.62500762939453
    6. ' -' → logprob: -17.25000762939453
    7. '```' → logprob: -17.75000762939453
    8. '   ' → logprob: -18.62500762939453
    9. '۰' → logprob: -19.37500762939453
    10. '
' → logprob: -19.81250762939453

Token 1711: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.50001335144043
    3. '-' → logprob: -13.12501335144043
    4. '1' → logprob: -13.87501335144043
    5. '   ' → logprob: -17.00001335144043
    6. ' -' → logprob: -17.06251335144043
    7. '```' → logprob: -17.56251335144043
    8. '(' → logprob: -18.12501335144043
    9. '۰' → logprob: -18.25001335144043
    10. '
' → logprob: -18.50001335144043

Token 1712: ':' (ID: 25)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10695135593414307
    2. ':' → logprob: -2.8569512367248535
    3. ':
' → logprob: -3.7319512367248535
    4. ' and' → logprob: -4.1069512367248535
    5. '           ' → logprob: -5.9819512367248535
    6. 'or' → logprob: -7.7319512367248535
    7. ',' → logprob: -8.856951713562012
    8. '               ' → logprob: -8.981951713562012
    9. '                       ' → logprob: -9.356951713562012
    10. 'and' → logprob: -9.856951713562012

Token 1713: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1529437154531479
    2. '               ' → logprob: -3.1529436111450195
    3. ' continue' → logprob: -3.2779436111450195
    4. '                ' → logprob: -4.4029436111450195
    5. '                       ' → logprob: -5.0279436111450195
    6. '           ' → logprob: -5.4029436111450195
    7. '<|end|>' → logprob: -5.4029436111450195
    8. 'continue' → logprob: -5.5279436111450195
    9. ' #' → logprob: -5.6529436111450195
    10. ' ' → logprob: -5.7779436111450195

Token 1714: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3968365490436554
    2. 't' → logprob: -1.521836519241333
    3. '#' → logprob: -2.896836519241333
    4. ' t' → logprob: -3.646836519241333
    5. ' #' → logprob: -4.896836757659912
    6. 's' → logprob: -5.521836757659912
    7. 'alpha' → logprob: -5.646836757659912
    8. 'dy' → logprob: -6.146836757659912
    9. 'x' → logprob: -6.271836757659912
    10. '               ' → logprob: -7.021836757659912

Token 1715: ' crosses' (ID: 95853)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.851223111152649
    2. 'continue' → logprob: -1.976223111152649
    3. ')' → logprob: -2.1012229919433594
    4. ' t' → logprob: -2.3512229919433594
    5. '#' → logprob: -2.4762229919433594
    6. ' continue' → logprob: -2.6012229919433594
    7. 'True' → logprob: -3.1012229919433594
    8. 'x' → logprob: -3.2262229919433594
    9. ' x' → logprob: -3.3512229919433594
    10. ' #' → logprob: -3.4762229919433594

Token 1716: ' y' (ID: 342)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3720032274723053
    2. '<|end|>' → logprob: -2.2470033168792725
    3. ')' → logprob: -2.3720033168792725
    4. 'or' → logprob: -3.3720033168792725
    5. '<|end|>' → logprob: -3.3720033168792725
    6. 'True' → logprob: -5.122003078460693
    7. ':' → logprob: -5.247003078460693
    8. ' ' → logprob: -5.247003078460693
    9. ' True' → logprob: -5.872003078460693
    10. '=True' → logprob: -5.872003078460693

Token 1717: ' line' (ID: 2543)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11626708507537842
    2. ':' → logprob: -2.991267204284668
    3. ' and' → logprob: -3.616267204284668
    4. '           ' → logprob: -4.241267204284668
    5. ':
' → logprob: -4.866267204284668
    6. '<|end|>' → logprob: -5.741267204284668
    7. '               ' → logprob: -6.241267204284668
    8. ')' → logprob: -6.741267204284668
    9. '<|end|>' → logprob: -6.741267204284668
    10. '                       ' → logprob: -6.866267204284668

Token 1718: '
' (ID: 198)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5178436636924744
    2. '                   ' → logprob: -1.3928437232971191
    3. ':' → logprob: -3.017843723297119
    4. ' and' → logprob: -3.392843723297119
    5. '                       ' → logprob: -3.392843723297119
    6. '               ' → logprob: -4.267843723297119
    7. ',' → logprob: -4.392843723297119
    8. ':
' → logprob: -5.392843723297119
    9. '                           ' → logprob: -6.517843723297119
    10. ')' → logprob: -6.642843723297119

Token 1719: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1382361352443695
    2. '                       ' → logprob: -2.6382360458374023
    3. '               ' → logprob: -3.8882360458374023
    4. ' or' → logprob: -4.513236045837402
    5. ',' → logprob: -4.763236045837402
    6. '<|end|>' → logprob: -5.763236045837402
    7. ':' → logprob: -5.888236045837402
    8. '                           ' → logprob: -5.888236045837402
    9. ')' → logprob: -6.138236045837402
    10. '           ' → logprob: -6.888236045837402

Token 1720: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2886810004711151
    2. 'dy' → logprob: -1.9136810302734375
    3. 'x' → logprob: -2.6636810302734375
    4. '                   ' → logprob: -5.2886810302734375
    5. 'alpha' → logprob: -5.4136810302734375
    6. 'inter' → logprob: -5.6636810302734375
    7. '                       ' → logprob: -5.6636810302734375
    8. '#' (adapté à ' #') → logprob: -5.6636810302734375
    9. 'dx' → logprob: -5.7886810302734375
    10. ' t' → logprob: -5.9136810302734375

Token 1721: ' Solve' (ID: 116151)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.39387279748916626
    2. 't' → logprob: -1.3938727378845215
    3. 'inter' → logprob: -3.6438727378845215
    4. 'dy' → logprob: -3.7688727378845215
    5. 'dx' → logprob: -4.5188727378845215
    6. '#' → logprob: -5.2688727378845215
    7. 'tx' → logprob: -6.2688727378845215
    8. 'interp' → logprob: -6.2688727378845215
    9. 'ratio' → logprob: -6.3938727378845215
    10. 'cross' → logprob: -6.5188727378845215

Token 1722: ' linear' (ID: 23876)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0028456486761569977
    2. ' x' → logprob: -7.502845764160156
    3. '```' → logprob: -7.502845764160156
    4. 'intersection' → logprob: -7.752845764160156
    5. 'inter' → logprob: -8.252845764160156
    6. 'for' → logprob: -9.002845764160156
    7. 't' → logprob: -9.127845764160156
    8. 'cross' → logprob: -9.252845764160156
    9. 'segment' → logprob: -9.252845764160156
    10. '
' → logprob: -10.002845764160156

Token 1723: ' interpolation' (ID: 85086)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14536669850349426
    2. 'inter' → logprob: -2.520366668701172
    3. ' interpolation' → logprob: -3.270366668701172
    4. '_inter' → logprob: -4.645366668701172
    5. '_interp' → logprob: -5.645366668701172
    6. 'interp' → logprob: -6.270366668701172
    7. 't' → logprob: -7.770366668701172
    8. '(inter' → logprob: -8.270366668701172
    9. '(x' → logprob: -8.520366668701172
    10. '```' → logprob: -9.145366668701172

Token 1724: ' for' (ID: 395)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6670129895210266
    2. 't' → logprob: -1.7920129299163818
    3. '                   ' → logprob: -1.7920129299163818
    4. ' t' → logprob: -2.417012929916382
    5. ' x' → logprob: -3.292012929916382
    6. ':' → logprob: -5.042013168334961
    7. '                       ' → logprob: -5.167013168334961
    8. ',' → logprob: -6.167013168334961
    9. 'alpha' → logprob: -6.417013168334961
    10. ' factor' → logprob: -6.417013168334961

Token 1725: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001158211671281606
    2. ' x' → logprob: -9.250115394592285
    3. '   ' → logprob: -12.625115394592285
    4. 'inter' → logprob: -12.875115394592285
    5. 'intersection' → logprob: -12.875115394592285
    6. 'cross' → logprob: -13.000115394592285
    7. '```' → logprob: -13.250115394592285
    8. '_x' → logprob: -13.375115394592285
    9. 'new' → logprob: -14.125115394592285
    10. '
' → logprob: -14.375115394592285

Token 1726: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.876646101474762
    2. ' =' → logprob: -0.876646101474762
    3. ' x' → logprob: -3.126646041870117
    4. '                   ' → logprob: -3.251646041870117
    5. 'x' → logprob: -3.376646041870117
    6. ':' → logprob: -3.626646041870117
    7. ' +' → logprob: -5.376646041870117
    8. ' (' → logprob: -5.501646041870117
    9. ' at' → logprob: -6.376646041870117
    10. '+' → logprob: -6.501646041870117

Token 1727: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008777298033237457
    2. 'a' → logprob: -5.758777141571045
    3. ' y' → logprob: -6.133777141571045
    4. 'b' → logprob: -7.633777141571045
    5. 'line' → logprob: -7.633777141571045
    6. '```' → logprob: -7.883777141571045
    7. '   ' → logprob: -8.008777618408203
    8. '(a' → logprob: -8.008777618408203
    9. 'intersection' → logprob: -8.008777618408203
    10. 'cross' → logprob: -8.508777618408203

Token 1728: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7782434821128845
    2. '=' → logprob: -1.9032435417175293
    3. ' x' → logprob: -1.9032435417175293
    4. 'x' → logprob: -2.0282435417175293
    5. ':' → logprob: -2.9032435417175293
    6. '                   ' → logprob: -3.5282435417175293
    7. ',' → logprob: -5.028243541717529
    8. 'a' → logprob: -5.403243541717529
    9. '                       ' → logprob: -5.778243541717529
    10. 'b' → logprob: -6.403243541717529

Token 1729: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2944990396499634
    2. 'x' → logprob: -2.419498920440674
    3. ' x' → logprob: -2.669498920440674
    4. ' =' → logprob: -3.419498920440674
    5. ':' → logprob: -3.544498920440674
    6. '=' → logprob: -4.294498920440674
    7. '                    ' → logprob: -5.294498920440674
    8. '                       ' → logprob: -5.294498920440674
    9. ',' → logprob: -5.794498920440674
    10. ' t' → logprob: -6.294498920440674

Token 1730: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.013051170855760574
    2. ' x' → logprob: -4.6380510330200195
    3. 't' → logprob: -6.3880510330200195
    4. ' t' → logprob: -8.26305103302002
    5. 'alpha' → logprob: -8.51305103302002
    6. 'xi' → logprob: -8.63805103302002
    7. 'dx' → logprob: -8.88805103302002
    8. '                   ' → logprob: -9.13805103302002
    9. 'a' → logprob: -9.26305103302002
    10. 'bx' → logprob: -9.38805103302002

Token 1731: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026305755600333214
    2. ' =' → logprob: -3.651305675506592
    3. '=
' → logprob: -13.27630615234375
    4. '    ' → logprob: -14.02630615234375
    5. ')' → logprob: -14.65130615234375
    6. '=(' → logprob: -14.65130615234375
    7. ':' → logprob: -15.02630615234375
    8. '=((' → logprob: -15.15130615234375
    9. ' ' → logprob: -15.65130615234375
    10. '```' → logprob: -15.90130615234375

Token 1732: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.158350151963532e-05
    2. ' a' → logprob: -9.875061988830566
    3. 'b' → logprob: -11.750061988830566
    4. '(a' → logprob: -13.125061988830566
    5. '	a' → logprob: -16.62506103515625
    6. '   ' → logprob: -16.75006103515625
    7. '(' → logprob: -18.50006103515625
    8. '_a' → logprob: -18.87506103515625
    9. '[a' → logprob: -19.00006103515625
    10. '```' → logprob: -19.00006103515625

Token 1733: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0014648657524958253
    2. 'x' → logprob: -6.62646484375
    3. '.' → logprob: -9.12646484375
    4. ' +' → logprob: -11.87646484375
    5. ' .' → logprob: -12.12646484375
    6. ' x' → logprob: -12.25146484375
    7. '```' → logprob: -12.75146484375
    8. '	x' → logprob: -13.62646484375
    9. '<|end|>' → logprob: -13.62646484375
    10. ')x' → logprob: -14.00146484375

Token 1734: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932079195976257
    2. ' +' → logprob: -0.6932079195976257
    3. '+
' → logprob: -10.693207740783691
    4. '```' → logprob: -11.068207740783691
    5. '                   ' → logprob: -12.318207740783691
    6. '+(' → logprob: -12.943207740783691
    7. '+x' → logprob: -12.943207740783691
    8. ' +
' → logprob: -13.068207740783691
    9. '+b' → logprob: -13.568207740783691
    10. '+a' → logprob: -13.818207740783691

Token 1735: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.018438931554555893
    2. '(a' → logprob: -4.518438816070557
    3. ' (' → logprob: -5.018438816070557
    4. '((' → logprob: -7.893438816070557
    5. '(B' → logprob: -8.018439292907715
    6. '(A' → logprob: -10.143439292907715
    7. '(abs' → logprob: -12.768439292907715
    8. '(' → logprob: -13.518439292907715
    9. '   ' → logprob: -14.393439292907715
    10. ' ' → logprob: -14.393439292907715

Token 1736: 'b' (ID: 65)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.18978214263916016
    2. 'b' → logprob: -1.8147821426391602
    3. 'y' → logprob: -5.18978214263916
    4. '(y' → logprob: -5.43978214263916
    5. ' (' → logprob: -10.18978214263916
    6. '(' → logprob: -11.06478214263916
    7. '   ' → logprob: -12.18978214263916
    8. '((' → logprob: -12.43978214263916
    9. '```' → logprob: -12.81478214263916
    10. ')b' → logprob: -13.81478214263916

Token 1737: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0014662963803857565
    2. 'x' → logprob: -6.626466274261475
    3. ').' → logprob: -9.501466751098633
    4. '.' → logprob: -9.876466751098633
    5. '```' → logprob: -11.876466751098633
    6. '_x' → logprob: -13.876466751098633
    7. '-' → logprob: -14.001466751098633
    8. '.y' → logprob: -14.001466751098633
    9. ')' → logprob: -14.501466751098633
    10. '[' → logprob: -14.626466751098633

Token 1738: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030038341879844666
    2. ' -' → logprob: -3.530038356781006
    3. '.x' → logprob: -8.405037879943848
    4. ')' → logprob: -11.280037879943848
    5. 'x' → logprob: -11.655037879943848
    6. '```' → logprob: -11.780037879943848
    7. '   ' → logprob: -11.905037879943848
    8. ' ' → logprob: -12.030037879943848
    9. '-x' → logprob: -12.155037879943848
    10. '.y' → logprob: -12.405037879943848

Token 1739: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.79811754100956e-05
    2. ' a' → logprob: -10.375038146972656
    3. '(a' → logprob: -13.125038146972656
    4. ')a' → logprob: -13.500038146972656
    5. ')' → logprob: -13.625038146972656
    6. '```' → logprob: -14.500038146972656
    7. '   ' → logprob: -14.625038146972656
    8. ' ' → logprob: -15.375038146972656
    9. '  ' → logprob: -15.625038146972656
    10. '	a' → logprob: -16.000038146972656

Token 1740: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003662191331386566
    2. '.x' → logprob: -5.628662109375
    3. ')' → logprob: -10.753662109375
    4. 'a' → logprob: -11.378662109375
    5. '[' → logprob: -11.628662109375
    6. '```' → logprob: -11.628662109375
    7. ')x' → logprob: -11.878662109375
    8. '0' → logprob: -13.753662109375
    9. ' x' → logprob: -14.003662109375
    10. '
' → logprob: -14.503662109375

Token 1741: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000644764571916312
    2. ')*' → logprob: -7.875644683837891
    3. ')*(' → logprob: -8.25064468383789
    4. '   ' → logprob: -13.50064468383789
    5. ')
' → logprob: -14.00064468383789
    6. '*' → logprob: -14.37564468383789
    7. '*)' → logprob: -15.62564468383789
    8. '       ' → logprob: -16.00064468383789
    9. '```' → logprob: -16.37564468383789
    10. '*(' → logprob: -16.62564468383789

Token 1742: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04037116467952728
    2. ' *' → logprob: -3.2903711795806885
    3. '*(' → logprob: -6.165370941162109
    4. '*((' → logprob: -8.79037094116211
    5. '   ' → logprob: -10.29037094116211
    6. ')' → logprob: -11.54037094116211
    7. '
' → logprob: -12.04037094116211
    8. '           ' → logprob: -12.54037094116211
    9. ' ' → logprob: -12.66537094116211
    10. '       ' → logprob: -12.91537094116211

Token 1743: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.2260226309299469
    2. '((' → logprob: -1.6010226011276245
    3. ' (' → logprob: -8.226022720336914
    4. '(' → logprob: -8.226022720336914
    5. '(abs' → logprob: -10.226022720336914
    6. ' ((' → logprob: -10.726022720336914
    7. '
' → logprob: -12.601022720336914
    8. '   ' → logprob: -12.976022720336914
    9. '(a' → logprob: -13.726022720336914
    10. '(x' → logprob: -13.726022720336914

Token 1744: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -7.20734242349863e-05
    2. '((' → logprob: -9.625072479248047
    3. ' (' → logprob: -12.500072479248047
    4. 'y' → logprob: -14.125072479248047
    5. '   ' → logprob: -14.125072479248047
    6. '
' → logprob: -15.000072479248047
    7. '(' → logprob: -15.500072479248047
    8. '(Y' → logprob: -16.500072479248047
    9. ')(' → logprob: -17.250072479248047
    10. ')' → logprob: -17.375072479248047

Token 1745: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22542937099933624
    2. ' -' → logprob: -1.6004294157028198
    3. ')' → logprob: -12.60042953491211
    4. '
' → logprob: -12.85042953491211
    5. '-y' → logprob: -12.85042953491211
    6. '```' → logprob: -13.10042953491211
    7. '   ' → logprob: -13.35042953491211
    8. ',' → logprob: -14.22542953491211
    9. ' ' → logprob: -14.35042953491211
    10. '[' → logprob: -14.47542953491211

Token 1746: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.198043699143454e-05
    2. ' a' → logprob: -9.375091552734375
    3. '   ' → logprob: -12.000091552734375
    4. ')' → logprob: -15.625091552734375
    5. '
' → logprob: -15.875091552734375
    6. ')a' → logprob: -15.875091552734375
    7. '	a' → logprob: -15.875091552734375
    8. '  ' → logprob: -16.375091552734375
    9. '       ' → logprob: -16.500091552734375
    10. ' ' → logprob: -16.500091552734375

Token 1747: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.013031281530857086
    2. '.x' → logprob: -4.388031482696533
    3. 'y' → logprob: -7.763031482696533
    4. 'a' → logprob: -10.388031005859375
    5. ')' → logprob: -10.888031005859375
    6. '.' → logprob: -11.013031005859375
    7. 'x' → logprob: -11.763031005859375
    8. ').' → logprob: -12.263031005859375
    9. '```' → logprob: -12.388031005859375
    10. '.a' → logprob: -12.513031005859375

Token 1748: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028709694743156433
    2. ')/(' → logprob: -6.127871036529541
    3. ')/' → logprob: -7.377871036529541
    4. ' )' → logprob: -10.252870559692383
    5. ')
' → logprob: -11.502870559692383
    6. '   ' → logprob: -12.377870559692383
    7. 'a' → logprob: -13.002870559692383
    8. '       ' → logprob: -13.127870559692383
    9. '           ' → logprob: -13.502870559692383
    10. '                   ' → logprob: -14.002870559692383

Token 1749: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1699684113264084
    2. ' /' → logprob: -2.419968366622925
    3. '/(' → logprob: -2.919968366622925
    4. ')/(' → logprob: -5.294968605041504
    5. ')' → logprob: -5.419968605041504
    6. '/
' → logprob: -6.169968605041504
    7. '           ' → logprob: -7.544968605041504
    8. '                   ' → logprob: -7.794968605041504
    9. '/a' → logprob: -8.044968605041504
    10. '               ' → logprob: -8.669968605041504

Token 1750: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.011055129580199718
    2. '(a' → logprob: -4.511054992675781
    3. ' (' → logprob: -11.886054992675781
    4. '(B' → logprob: -15.886054992675781
    5. '   ' → logprob: -16.01105499267578
    6. '((' → logprob: -16.38605499267578
    7. '(abs' → logprob: -17.13605499267578
    8. '(c' → logprob: -17.38605499267578
    9. '(' → logprob: -17.63605499267578
    10. '(ab' → logprob: -18.13605499267578

Token 1751: 'b' (ID: 65)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.001957298256456852
    2. '(a' → logprob: -6.251957416534424
    3. ' (' → logprob: -10.626956939697266
    4. '((' → logprob: -12.626956939697266
    5. '(' → logprob: -15.251956939697266
    6. '   ' → logprob: -15.376956939697266
    7. '(B' → logprob: -15.876956939697266
    8. ')(' → logprob: -16.001956939697266
    9. ')' → logprob: -16.251956939697266
    10. '(abs' → logprob: -16.251956939697266

Token 1752: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0005837726057507098
    2. 'y' → logprob: -8.00058364868164
    3. '.x' → logprob: -10.00058364868164
    4. '-' → logprob: -10.25058364868164
    5. '_y' → logprob: -10.25058364868164
    6. '.py' → logprob: -10.50058364868164
    7. '-y' → logprob: -10.75058364868164
    8. ' -' → logprob: -10.87558364868164
    9. '```' → logprob: -10.87558364868164
    10. '.a' → logprob: -11.50058364868164

Token 1753: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5760442614555359
    2. ' -' → logprob: -0.8260442614555359
    3. '-a' → logprob: -9.701044082641602
    4. '```' → logprob: -10.576044082641602
    5. '   ' → logprob: -12.326044082641602
    6. '-b' → logprob: -12.701044082641602
    7. 'a' → logprob: -12.826044082641602
    8. ' ' → logprob: -13.326044082641602
    9. 'b' → logprob: -13.451044082641602
    10. '-y' → logprob: -14.076044082641602

Token 1754: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.021384619176387787
    2. '(b' → logprob: -4.6463847160339355
    3. ' (' → logprob: -4.8963847160339355
    4. 'a' → logprob: -5.5213847160339355
    5. 'b' → logprob: -10.396384239196777
    6. '(' → logprob: -11.021384239196777
    7. ' a' → logprob: -11.396384239196777
    8. '   ' → logprob: -11.521384239196777
    9. ' ' → logprob: -12.396384239196777
    10. ')' → logprob: -13.021384239196777

Token 1755: '.y' (ID: 4486)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47213172912597656
    2. '-' → logprob: -1.9721317291259766
    3. ' -' → logprob: -2.4721317291259766
    4. '-a' → logprob: -2.4721317291259766
    5. 'y' → logprob: -2.9721317291259766
    6. '-y' → logprob: -4.972131729125977
    7. 'x' → logprob: -5.722131729125977
    8. ')' → logprob: -6.222131729125977
    9. 'b' → logprob: -6.597131729125977
    10. '```' → logprob: -7.222131729125977

Token 1756: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036355883348733187
    2. ')
' → logprob: -5.628635406494141
    3. '           ' → logprob: -11.37863540649414
    4. '               ' → logprob: -11.62863540649414
    5. '       ' → logprob: -11.87863540649414
    6. '                   ' → logprob: -13.50363540649414
    7. '                       ' → logprob: -13.62863540649414
    8. ' )' → logprob: -13.87863540649414
    9. ')
' → logprob: -14.00363540649414
    10. ')return' → logprob: -14.37863540649414

Token 1757: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012527543120086193
    2. '               ' → logprob: -5.0125274658203125
    3. ')' → logprob: -5.6375274658203125
    4. '           ' → logprob: -7.3875274658203125
    5. '<|end|>' → logprob: -7.3875274658203125
    6. ',' → logprob: -8.137527465820312
    7. '                       ' → logprob: -9.262527465820312
    8. '<|end|>' → logprob: -9.637527465820312
    9. '),' → logprob: -9.762527465820312
    10. ')
' → logprob: -9.887527465820312

Token 1758: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' (adapté à ' xs') → logprob: -0.008975457400083542
    2. ' xs' → logprob: -4.758975505828857
    3. '               ' → logprob: -8.6339750289917
    4. '                   ' → logprob: -10.0089750289917
    5. '                           ' → logprob: -10.1339750289917
    6. '(xs' → logprob: -10.3839750289917
    7. 'x' → logprob: -10.8839750289917
    8. '           ' → logprob: -11.1339750289917
    9. '                       ' → logprob: -11.3839750289917
    10. 'Xs' → logprob: -12.5089750289917

Token 1759: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10058285295963287
    2. '.' → logprob: -2.3505828380584717
    3. '.app' → logprob: -8.60058307647705
    4. ').' → logprob: -9.60058307647705
    5. ' .' → logprob: -10.47558307647705
    6. '.extend' → logprob: -10.85058307647705
    7. '.add' → logprob: -11.85058307647705
    8. '.setdefault' → logprob: -11.97558307647705
    9. '.=' → logprob: -12.22558307647705
    10. 'app' → logprob: -12.22558307647705

Token 1760: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02975395694375038
    2. 'x' → logprob: -3.5297539234161377
    3. '(' → logprob: -13.654753684997559
    4. ' x' → logprob: -13.904753684997559
    5. '((' → logprob: -14.154753684997559
    6. '(
' → logprob: -14.904753684997559
    7. '(float' → logprob: -15.779753684997559
    8. '(round' → logprob: -16.779754638671875
    9. '	x' → logprob: -16.904754638671875
    10. 'float' → logprob: -17.029754638671875

Token 1761: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008848914876580238
    2. ')
' → logprob: -4.758849143981934
    3. '       ' → logprob: -9.383849143981934
    4. ' )' → logprob: -10.133849143981934
    5. '           ' → logprob: -10.258849143981934
    6. ',' → logprob: -10.758849143981934
    7. '               ' → logprob: -11.008849143981934
    8. '                       ' → logprob: -11.383849143981934
    9. '                   ' → logprob: -11.883849143981934
    10. '                           ' → logprob: -12.758849143981934

Token 1762: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23329809308052063
    2. ',' → logprob: -2.3582980632781982
    3. '           ' → logprob: -2.7332980632781982
    4. '                   ' → logprob: -3.6082980632781982
    5. '[' → logprob: -4.983298301696777
    6. ')' → logprob: -5.483298301696777
    7. '       ' → logprob: -5.983298301696777
    8. ',
' → logprob: -5.983298301696777
    9. '
' → logprob: -7.358298301696777
    10. '.' → logprob: -7.608298301696777

Token 1763: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03084157221019268
    2. '               ' → logprob: -3.655841588973999
    3. '
' → logprob: -6.65584135055542
    4. '       ' → logprob: -6.65584135055542
    5. ',' → logprob: -7.15584135055542
    6. '[' → logprob: -8.155841827392578
    7. '            
' → logprob: -8.780841827392578
    8. ')' → logprob: -8.905841827392578
    9. '	       ' → logprob: -9.530841827392578
    10. 'elif' (adapté à ' elif') → logprob: -10.030841827392578

Token 1764: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.48350104689598083
    2. 'a' → logprob: -1.1085010766983032
    3. ' abs' → logprob: -3.6085009574890137
    4. 'math' → logprob: -3.9835009574890137
    5. '(a' → logprob: -5.858500957489014
    6. ' a' → logprob: -6.233500957489014
    7. ' math' → logprob: -6.608500957489014
    8. '(abs' → logprob: -6.733500957489014
    9. '(math' → logprob: -9.108501434326172
    10. ' (' → logprob: -9.608501434326172

Token 1765: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.018538283184170723
    2. '(b' → logprob: -4.018538475036621
    3. '(y' → logprob: -8.893538475036621
    4. '(' → logprob: -9.018538475036621
    5. '(x' → logprob: -9.518538475036621
    6. 'a' → logprob: -10.143538475036621
    7. '((' → logprob: -11.893538475036621
    8. 'b' → logprob: -12.518538475036621
    9. '(
' → logprob: -13.018538475036621
    10. '   ' → logprob: -14.268538475036621

Token 1766: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0006389308837242424
    2. '.' → logprob: -7.500638961791992
    3. '.x' → logprob: -9.750638961791992
    4. ' .' → logprob: -11.000638961791992
    5. 'y' → logprob: -12.750638961791992
    6. '[' → logprob: -12.875638961791992
    7. '<|end|>' → logprob: -13.375638961791992
    8. '<|end|>' → logprob: -13.750638961791992
    9. ' ' → logprob: -14.375638961791992
    10. '```' → logprob: -14.750638961791992

Token 1767: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6932006478309631
    2. ' -' → logprob: -0.6932006478309631
    3. ' ' → logprob: -10.068201065063477
    4. ')' → logprob: -13.193201065063477
    5. '   ' → logprob: -14.068201065063477
    6. '[' → logprob: -14.318201065063477
    7. '  ' → logprob: -14.318201065063477
    8. '<|end|>' → logprob: -14.443201065063477
    9. '()-' → logprob: -14.568201065063477
    10. '<|end|>' → logprob: -14.568201065063477

Token 1768: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020699352025986
    2. ' y' → logprob: -2.3502070903778076
    3. '	y' → logprob: -15.475207328796387
    4. ' ' → logprob: -16.47520637512207
    5. '   ' → logprob: -17.35020637512207
    6. ')y' → logprob: -18.22520637512207
    7. '```' → logprob: -18.22520637512207
    8. '(y' → logprob: -18.97520637512207
    9. ''y' → logprob: -19.10020637512207
    10. ')' → logprob: -19.22520637512207

Token 1769: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018446780450176448
    2. ')<' → logprob: -8.875184059143066
    3. ' )' → logprob: -10.500184059143066
    4. ')<=' → logprob: -11.500184059143066
    5. '[' → logprob: -12.750184059143066
    6. '```' → logprob: -14.375184059143066
    7. ')
' → logprob: -14.625184059143066
    8. '<' → logprob: -14.750184059143066
    9. '')' → logprob: -14.750184059143066
    10. '）' → logprob: -15.125184059143066

Token 1770: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16825240850448608
    2. '<' → logprob: -2.293252468109131
    3. ' <=' → logprob: -3.043252468109131
    4. '<=' → logprob: -5.168252468109131
    5. '<|end|>' → logprob: -9.043251991271973
    6. '[' → logprob: -9.168251991271973
    7. ')' → logprob: -9.668251991271973
    8. '```' → logprob: -10.043251991271973
    9. ')<=' → logprob: -10.293251991271973
    10. ')<' → logprob: -10.793251991271973

Token 1771: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '=' → logprob: -15.875001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '
' → logprob: -16.625001907348633
    6. '```' → logprob: -17.500001907348633
    7. '(' → logprob: -18.250001907348633
    8. '[' → logprob: -19.375001907348633
    9. '>' → logprob: -19.375001907348633
    10. '0' → logprob: -19.625001907348633

Token 1772: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5120287066092715e-05
    2. ' ' → logprob: -10.375035285949707
    3. '
' → logprob: -13.500035285949707
    4. '=' → logprob: -14.000035285949707
    5. '   ' → logprob: -14.000035285949707
    6. '0' → logprob: -15.250035285949707
    7. '(' → logprob: -15.375035285949707
    8. '```' → logprob: -16.12503433227539
    9. '  ' → logprob: -17.00003433227539
    10. '[' → logprob: -17.12503433227539

Token 1773: 'e' (ID: 68)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5490277409553528
    2. '-' → logprob: -0.9240277409553528
    3. 'e' → logprob: -3.674027681350708
    4. '```' → logprob: -9.924027442932129
    5. '   ' → logprob: -10.049027442932129
    6. '**' → logprob: -10.549027442932129
    7. '           ' → logprob: -11.174027442932129
    8. '       ' → logprob: -11.799027442932129
    9. ' -' → logprob: -11.924027442932129
    10. ' ' → logprob: -12.299027442932129

Token 1774: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.319370302458992e-06
    2. '8' → logprob: -13.125005722045898
    3. '9' → logprob: -14.000005722045898
    4. '7' → logprob: -14.375005722045898
    5. ' -' → logprob: -14.500005722045898
    6. '15' → logprob: -14.875005722045898
    7. '12' → logprob: -15.000005722045898
    8. '6' → logprob: -15.375005722045898
    9. '10' → logprob: -15.375005722045898
    10. '5' → logprob: -16.3750057220459

Token 1775: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0724444389343262
    2. '15' → logprob: -1.1974444389343262
    3. '12' → logprob: -1.6974444389343262
    4. '10' → logprob: -2.447444438934326
    5. '8' → logprob: -2.572444438934326
    6. '14' → logprob: -4.947444438934326
    7. '7' → logprob: -6.322444438934326
    8. '13' → logprob: -7.447444438934326
    9. '11' → logprob: -8.197444915771484
    10. '6' → logprob: -9.947444915771484

Token 1776: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.49315574765205383
    2. 'and' → logprob: -1.1181557178497314
    3. ' or' → logprob: -3.7431557178497314
    4. ':
' → logprob: -3.9931557178497314
    5. ':' → logprob: -4.4931559562683105
    6. '           ' → logprob: -5.4931559562683105
    7. 'or' → logprob: -5.4931559562683105
    8. '               ' → logprob: -7.8681559562683105
    9. '                   ' → logprob: -8.743155479431152
    10. '                       ' → logprob: -9.368155479431152

Token 1777: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.012267456389963627
    2. '(abs' → logprob: -5.262267589569092
    3. ' abs' → logprob: -6.012267589569092
    4. 'a' → logprob: -6.512267589569092
    5. '((' → logprob: -6.512267589569092
    6. '(a' → logprob: -6.887267589569092
    7. '0' → logprob: -8.887267112731934
    8. ' (' → logprob: -9.137267112731934
    9. '(b' → logprob: -9.387267112731934
    10. 'b' → logprob: -9.512267112731934

Token 1778: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.008873247541487217
    2. 'b' → logprob: -4.883873462677002
    3. '(a' → logprob: -6.758873462677002
    4. 'a' → logprob: -9.383872985839844
    5. ' (' → logprob: -11.258872985839844
    6. '   ' → logprob: -13.508872985839844
    7. '           ' → logprob: -13.758872985839844
    8. '               ' → logprob: -13.883872985839844
    9. '((' → logprob: -14.008872985839844
    10. '                   ' → logprob: -14.008872985839844

Token 1779: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.000587821879889816
    2. '<|end|>' → logprob: -8.250587463378906
    3. '<|end|>' → logprob: -9.125587463378906
    4. '[' → logprob: -9.375587463378906
    5. '.' → logprob: -10.125587463378906
    6. '.gridy' → logprob: -10.750587463378906
    7. '.x' → logprob: -11.250587463378906
    8. 'y' → logprob: -11.375587463378906
    9. ' .' → logprob: -11.750587463378906
    10. '.user' → logprob: -11.750587463378906

Token 1780: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10046330094337463
    2. '-' → logprob: -2.350463390350342
    3. ' ' → logprob: -9.475462913513184
    4. '<|end|>' → logprob: -9.725462913513184
    5. '<|end|>' → logprob: -9.975462913513184
    6. ' y' → logprob: -11.475462913513184
    7. '–' → logprob: -11.475462913513184
    8. '[' → logprob: -11.600462913513184
    9. 'Let's' → logprob: -11.975462913513184
    10. '...' → logprob: -12.100462913513184

Token 1781: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02325817570090294
    2. ' y' → logprob: -3.7732582092285156
    3. '1' → logprob: -12.773258209228516
    4. '	y' → logprob: -13.148258209228516
    5. 'a' → logprob: -13.273258209228516
    6. '   ' → logprob: -13.398258209228516
    7. ' ' → logprob: -13.898258209228516
    8. '...' → logprob: -14.523258209228516
    9. '```' → logprob: -14.523258209228516
    10. '[' → logprob: -14.773258209228516

Token 1782: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003448792558629066
    2. ')<' → logprob: -8.500345230102539
    3. ' )' → logprob: -9.250345230102539
    4. ' -' → logprob: -11.250345230102539
    5. '[' → logprob: -11.250345230102539
    6. ')>' → logprob: -12.125345230102539
    7. '-' → logprob: -12.500345230102539
    8. ' <' → logprob: -12.625345230102539
    9. '')' → logprob: -14.125345230102539
    10. ')<=' → logprob: -14.125345230102539

Token 1783: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3878795802593231
    2. '<' → logprob: -1.1378796100616455
    3. '>' → logprob: -8.137879371643066
    4. ' >' → logprob: -8.137879371643066
    5. ')' → logprob: -8.387879371643066
    6. ')<' → logprob: -9.012879371643066
    7. ' ' → logprob: -11.012879371643066
    8. '()<' → logprob: -11.762879371643066
    9. '<p' → logprob: -12.262879371643066
    10. '<|end|>' → logprob: -12.387879371643066

Token 1784: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000804745068307966
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -16.125804901123047
    4. '0' → logprob: -16.750804901123047
    5. '(' → logprob: -17.750804901123047
    6. '=' → logprob: -18.375804901123047
    7. '
' → logprob: -18.688304901123047
    8. '```' → logprob: -18.750804901123047
    9. '  ' → logprob: -19.125804901123047
    10. '[' → logprob: -19.313304901123047

Token 1785: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012773419439326972
    2. ' ' → logprob: -9.000127792358398
    3. '0' → logprob: -13.000127792358398
    4. '15' → logprob: -14.375127792358398
    5. '(' → logprob: -14.625127792358398
    6. '   ' → logprob: -14.750127792358398
    7. '
' → logprob: -15.937627792358398
    8. '=' → logprob: -16.6251277923584
    9. '-' → logprob: -16.6251277923584
    10. '[' → logprob: -16.8126277923584

Token 1786: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.5954712075181305e-05
    2. 'e' → logprob: -10.250036239624023
    3. ' -' → logprob: -16.125036239624023
    4. '15' → logprob: -16.250036239624023
    5. '
' → logprob: -16.375036239624023
    6. '^-' → logprob: -17.000036239624023
    7. '1' → logprob: -17.250036239624023
    8. '−' → logprob: -17.250036239624023
    9. '```' → logprob: -17.250036239624023
    10. '**' → logprob: -17.375036239624023

Token 1787: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001605115394340828
    2. '15' → logprob: -8.750160217285156
    3. '```' → logprob: -15.000160217285156
    4. '**' → logprob: -15.125160217285156
    5. 'e' → logprob: -15.625160217285156
    6. ' -' → logprob: -15.875160217285156
    7. '−' → logprob: -15.875160217285156
    8. '
' → logprob: -15.875160217285156
    9. '^-' → logprob: -15.875160217285156
    10. '-
' → logprob: -16.375160217285156

Token 1788: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -1.0087516784551553e-05
    2. '7' → logprob: -13.62501049041748
    3. '12' → logprob: -13.75001049041748
    4. '5' → logprob: -13.87501049041748
    5. '14' → logprob: -13.87501049041748
    6. '10' → logprob: -14.00001049041748
    7. '1' → logprob: -14.43751049041748
    8. '9' → logprob: -14.62501049041748
    9. '13' → logprob: -14.62501049041748
    10. '8' → logprob: -14.62501049041748

Token 1789: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5149269104003906
    2. ':' → logprob: -1.5149269104003906
    3. ':
' → logprob: -2.0149269104003906
    4. 'and' → logprob: -3.3899269104003906
    5. '           ' → logprob: -4.639926910400391
    6. '               ' → logprob: -6.639926910400391
    7. '                       ' → logprob: -6.639926910400391
    8. '                   ' → logprob: -6.764926910400391
    9. ',' → logprob: -7.514926910400391
    10. '   ' → logprob: -8.13992691040039

Token 1790: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005986385513097048
    2. ',' → logprob: -5.505986213684082
    3. '                       ' → logprob: -7.255986213684082
    4. '               ' → logprob: -7.505986213684082
    5. '[' → logprob: -8.380986213684082
    6. ':' → logprob: -9.380986213684082
    7. ' if' → logprob: -10.130986213684082
    8. '           ' → logprob: -10.255986213684082
    9. '                    ' → logprob: -10.630986213684082
    10. ' :' → logprob: -10.880986213684082

Token 1791: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.19967758655548096
    2. ' intervals' → logprob: -2.3246774673461914
    3. ' xs' → logprob: -3.5746774673461914
    4. '#' (adapté à ' #') → logprob: -3.8246774673461914
    5. 'xs' → logprob: -4.199677467346191
    6. '                   ' → logprob: -5.199677467346191
    7. 'x' → logprob: -5.324677467346191
    8. '                       ' → logprob: -5.699677467346191
    9. ' x' → logprob: -7.199677467346191
    10. ' #' → logprob: -7.199677467346191

Token 1792: ' horizontal' (ID: 25511)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.27360638976097107
    2. '#' → logprob: -1.8986064195632935
    3. ' intervals' → logprob: -2.773606300354004
    4. ' xs' → logprob: -4.398606300354004
    5. 'xs' → logprob: -5.148606300354004
    6. ' #' → logprob: -5.273606300354004
    7. 'x' → logprob: -7.148606300354004
    8. 'if' → logprob: -7.273606300354004
    9. 'continue' → logprob: -7.898606300354004
    10. '                   ' → logprob: -7.898606300354004

Token 1793: ' edge' (ID: 11165)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.04672413691878319
    2. ' segment' → logprob: -3.5467240810394287
    3. 'edge' → logprob: -4.546724319458008
    4. 'segments' → logprob: -6.296724319458008
    5. '_segment' → logprob: -6.921724319458008
    6. ' edge' → logprob: -7.296724319458008
    7. 'seg' → logprob: -7.546724319458008
    8. ')' → logprob: -7.671724319458008
    9. 'line' → logprob: -7.671724319458008
    10. 'a' → logprob: -7.921724319458008

Token 1794: ' on' (ID: 402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8625017404556274
    2. ',' → logprob: -1.8625017404556274
    3. '                       ' → logprob: -1.8625017404556274
    4. ':' → logprob: -2.112501621246338
    5. ' and' → logprob: -2.987501621246338
    6. ':
' → logprob: -3.487501621246338
    7. ' if' → logprob: -4.362501621246338
    8. ' =' → logprob: -5.362501621246338
    9. '<|end|>' → logprob: -5.487501621246338
    10. '<|end|>' → logprob: -5.487501621246338

Token 1795: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4298577308654785
    2. 'a' → logprob: -1.1798577308654785
    3. 'min' → logprob: -3.9298577308654785
    4. 'the' → logprob: -4.6798577308654785
    5. ' y' → logprob: -5.8048577308654785
    6. ' min' → logprob: -6.1798577308654785
    7. 'line' → logprob: -6.4298577308654785
    8. 'p' → logprob: -6.6798577308654785
    9. '#' → logprob: -6.6798577308654785
    10. 'max' → logprob: -7.1798577308654785

Token 1796: ' line' (ID: 2543)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4946957230567932
    2. '                       ' → logprob: -1.7446956634521484
    3. ',' → logprob: -2.1196956634521484
    4. ':' → logprob: -2.8696956634521484
    5. ':
' → logprob: -3.8696956634521484
    6. ' and' → logprob: -5.494695663452148
    7. '               ' → logprob: -6.744695663452148
    8. ' =' → logprob: -6.994695663452148
    9. ' if' → logprob: -6.994695663452148
    10. ' (' → logprob: -7.119695663452148

Token 1797: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04472641274333
    2. ',' → logprob: -4.169726371765137
    3. '                   ' → logprob: -4.794726371765137
    4. ':' → logprob: -4.794726371765137
    5. ' and' → logprob: -5.044726371765137
    6. ':
' → logprob: -5.544726371765137
    7. ' if' → logprob: -7.544726371765137
    8. '               ' → logprob: -8.794726371765137
    9. '           ' → logprob: -9.419726371765137
    10. '
' → logprob: -9.544726371765137

Token 1798: ' include' (ID: 3931)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6998757719993591
    2. ' intervals' → logprob: -1.324875831604004
    3. '                   ' → logprob: -2.074875831604004
    4. '                       ' → logprob: -2.449875831604004
    5. 'xs' → logprob: -4.324875831604004
    6. ' xs' → logprob: -5.074875831604004
    7. '#' → logprob: -6.324875831604004
    8. '                           ' → logprob: -6.574875831604004
    9. 'segments' → logprob: -6.949875831604004
    10. 'continue' → logprob: -8.074875831604004

Token 1799: ' interval' (ID: 17116)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5320486426353455
    2. 'a' → logprob: -0.9070486426353455
    3. 'xs' → logprob: -5.28204870223999
    4. '(min' → logprob: -6.78204870223999
    5. ' min' → logprob: -7.03204870223999
    6. 'interval' → logprob: -7.28204870223999
    7. 'x' → logprob: -7.90704870223999
    8. '(a' → logprob: -8.032048225402832
    9. 'xmin' → logprob: -8.782048225402832
    10. 'max' → logprob: -9.657048225402832

Token 1800: ' between' (ID: 2870)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6764997243881226
    2. ' =' → logprob: -0.9264997243881226
    3. '[' → logprob: -3.801499843597412
    4. '               ' → logprob: -4.301499843597412
    5. ' (' → logprob: -4.426499843597412
    6. ' between' → logprob: -4.801499843597412
    7. ',' → logprob: -4.926499843597412
    8. '		           ' → logprob: -5.426499843597412
    9. '(s' → logprob: -5.676499843597412
    10. '(' → logprob: -5.676499843597412

Token 1801: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6933977007865906
    2. 'min' → logprob: -0.6933977007865906
    3. ' min' → logprob: -8.443397521972656
    4. '   ' → logprob: -11.318397521972656
    5. ' a' → logprob: -11.818397521972656
    6. 'sorted' → logprob: -12.443397521972656
    7. '(min' → logprob: -12.693397521972656
    8. 'max' → logprob: -12.943397521972656
    9. '           ' → logprob: -13.568397521972656
    10. '	min' → logprob: -14.318397521972656

Token 1802: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.004780526738613844
    2. 'x' → logprob: -5.379780292510986
    3. 'a' → logprob: -9.754780769348145
    4. '.' → logprob: -10.254780769348145
    5. ' and' → logprob: -10.629780769348145
    6. ',' → logprob: -11.379780769348145
    7. ' .' → logprob: -11.879780769348145
    8. 'and' → logprob: -12.004780769348145
    9. ' ' → logprob: -12.504780769348145
    10. '```' → logprob: -12.754780769348145

Token 1803: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.24686722457408905
    2. ' and' → logprob: -1.7468671798706055
    3. ',' → logprob: -3.1218671798706055
    4. '                   ' → logprob: -8.496867179870605
    5. ',
' → logprob: -9.621867179870605
    6. ' ,' → logprob: -10.371867179870605
    7. '                       ' → logprob: -10.621867179870605
    8. '                           ' → logprob: -11.746867179870605
    9. '	and' → logprob: -12.746867179870605
    10. '           ' → logprob: -12.871867179870605

Token 1804: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000431861262768507
    2. ' b' → logprob: -7.750432014465332
    3. '   ' → logprob: -13.875432014465332
    4. '	b' → logprob: -16.625431060791016
    5. '                   ' → logprob: -17.000431060791016
    6. ' ' → logprob: -18.000431060791016
    7. '           ' → logprob: -18.250431060791016
    8. '       ' → logprob: -18.375431060791016
    9. '  ' → logprob: -18.875431060791016
    10. '    ' → logprob: -18.875431060791016

Token 1805: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.2113979209971149e-05
    2. '.' → logprob: -11.750012397766113
    3. 'x' → logprob: -12.500012397766113
    4. ' .' → logprob: -16.000011444091797
    5. '[' → logprob: -16.750011444091797
    6. '.
' → logprob: -17.250011444091797
    7. '```' → logprob: -17.250011444091797
    8. '`.' → logprob: -17.750011444091797
    9. ').' → logprob: -18.250011444091797
    10. '   ' → logprob: -18.250011444091797

Token 1806: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15353314578533173
    2. '                       ' → logprob: -2.5285332202911377
    3. ':
' → logprob: -3.7785332202911377
    4. ',' → logprob: -3.9035332202911377
    5. ':' → logprob: -5.153532981872559
    6. '               ' → logprob: -5.403532981872559
    7. '[' → logprob: -5.528532981872559
    8. '           ' → logprob: -6.903532981872559
    9. '
' → logprob: -7.403532981872559
    10. ',
' → logprob: -7.778532981872559

Token 1807: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005258689634501934
    2. ',' → logprob: -8.50052547454834
    3. '                       ' → logprob: -8.87552547454834
    4. '               ' → logprob: -9.50052547454834
    5. ':' → logprob: -10.25052547454834
    6. '           ' → logprob: -11.00052547454834
    7. ':
' → logprob: -11.50052547454834
    8. '
' → logprob: -11.50052547454834
    9. '[' → logprob: -11.87552547454834
    10. '		           ' → logprob: -11.87552547454834

Token 1808: ' xs' (ID: 26642)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0005122834118083119
    2. ' intervals' → logprob: -8.37551212310791
    3. 'x' → logprob: -8.50051212310791
    4. '                   ' → logprob: -9.87551212310791
    5. 'left' → logprob: -11.62551212310791
    6. 'xmin' → logprob: -12.75051212310791
    7. 'xs' (adapté à ' xs') → logprob: -12.87551212310791
    8. '                           ' → logprob: -13.00051212310791
    9. 'l' → logprob: -13.12551212310791
    10. '           ' → logprob: -13.12551212310791

Token 1809: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2032308280467987
    2. '.extend' → logprob: -1.703230857849121
    3. '.' → logprob: -6.328230857849121
    4. '+=' → logprob: -10.703230857849121
    5. ' +=' → logprob: -13.078230857849121
    6. '.app' → logprob: -13.203230857849121
    7. 'append' → logprob: -13.953230857849121
    8. '.ap' → logprob: -14.078230857849121
    9. '+' → logprob: -14.328230857849121
    10. '=' → logprob: -14.328230857849121

Token 1810: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3133857846260071
    2. 'min' → logprob: -1.3133857250213623
    3. '(min' → logprob: -9.938385963439941
    4. '(a' → logprob: -10.563385963439941
    5. ' min' → logprob: -10.688385963439941
    6. 'max' → logprob: -10.938385963439941
    7. ' a' → logprob: -12.938385963439941
    8. '   ' → logprob: -13.688385963439941
    9. '
' → logprob: -13.813385963439941
    10. '[min' → logprob: -13.938385963439941

Token 1811: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0017483653500676155
    2. '.' → logprob: -6.376748561859131
    3. ').' → logprob: -11.001748085021973
    4. '<|end|>' → logprob: -12.001748085021973
    5. ' .' → logprob: -12.126748085021973
    6. 'x' → logprob: -12.251748085021973
    7. '<|end|>' → logprob: -12.501748085021973
    8. ')' → logprob: -13.001748085021973
    9. '[' → logprob: -13.501748085021973
    10. ' ' → logprob: -14.001748085021973

Token 1812: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0194412712007761
    2. ')' → logprob: -4.0194411277771
    3. ');' → logprob: -6.8944411277771
    4. '),' → logprob: -8.769441604614258
    5. '                   ' → logprob: -9.894441604614258
    6. ');
' → logprob: -10.269441604614258
    7. '           ' → logprob: -12.144441604614258
    8. ' )
' → logprob: -12.269441604614258
    9. '<|end|>' → logprob: -12.644441604614258
    10. '       ' → logprob: -12.769441604614258

Token 1813: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00046546570956707
    2. '               ' → logprob: -8.625465393066406
    3. '           ' → logprob: -9.000465393066406
    4. ',' → logprob: -9.500465393066406
    5. '		           ' → logprob: -10.875465393066406
    6. ' and' → logprob: -11.250465393066406
    7. '   ' → logprob: -11.500465393066406
    8. 'and' → logprob: -11.875465393066406
    9. '		   ' → logprob: -12.625465393066406
    10. '
' → logprob: -12.625465393066406

Token 1814: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' (adapté à ' xs') → logprob: -4.143808109802194e-05
    2. ' xs' → logprob: -10.250041007995605
    3. 'b' → logprob: -12.875041007995605
    4. '(xs' → logprob: -13.125041007995605
    5. 'x' → logprob: -14.500041007995605
    6. '       ' → logprob: -15.375041007995605
    7. '           ' → logprob: -15.500041007995605
    8. 'Xs' → logprob: -15.625041007995605
    9. 'bs' → logprob: -15.750041007995605
    10. '               ' → logprob: -16.750041961669922

Token 1815: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.013076347298920155
    2. '.' → logprob: -5.138076305389404
    3. '.x' → logprob: -5.138076305389404
    4. '<|end|>' → logprob: -7.388076305389404
    5. '<|end|>' → logprob: -8.388076782226562
    6. '.add' → logprob: -9.138076782226562
    7. ' .' → logprob: -10.263076782226562
    8. 'append' → logprob: -10.263076782226562
    9. '.push' → logprob: -10.763076782226562
    10. '.app' → logprob: -11.013076782226562

Token 1816: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00016027313540689647
    2. '(b' → logprob: -8.750160217285156
    3. ' b' → logprob: -13.375160217285156
    4. '	b' → logprob: -16.000160217285156
    5. '   ' → logprob: -16.250160217285156
    6. '       ' → logprob: -19.500160217285156
    7. '(
' → logprob: -19.875160217285156
    8. '(' → logprob: -20.250160217285156
    9. ')b' → logprob: -20.625160217285156
    10. ' (' → logprob: -20.875160217285156

Token 1817: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -7.584239938296378e-06
    2. '.' → logprob: -12.000007629394531
    3. ' .' → logprob: -14.125007629394531
    4. ').' → logprob: -14.875007629394531
    5. ' ' → logprob: -16.25000762939453
    6. '   ' → logprob: -16.75000762939453
    7. 'x' → logprob: -17.37500762939453
    8. '[' → logprob: -17.37500762939453
    9. ')' → logprob: -18.62500762939453
    10. '```' → logprob: -18.75000762939453

Token 1818: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3947998881340027
    2. ')
' → logprob: -1.1447999477386475
    3. '               ' → logprob: -5.144799709320068
    4. '           ' → logprob: -6.519799709320068
    5. '                   ' → logprob: -8.019800186157227
    6. '       ' → logprob: -9.019800186157227
    7. ')
' → logprob: -9.769800186157227
    8. '                       ' → logprob: -11.894800186157227
    9. ')

' → logprob: -12.019800186157227
    10. '   ' → logprob: -12.019800186157227

Token 1819: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05058440566062927
    2. '           ' → logprob: -3.300584316253662
    3. '               ' → logprob: -5.175584316253662
    4. '
' → logprob: -5.925584316253662
    5. '                   ' → logprob: -6.550584316253662
    6. ')' → logprob: -6.925584316253662
    7. ')
' → logprob: -7.675584316253662
    8. ',' → logprob: -7.925584316253662
    9. '        
' → logprob: -8.42558479309082
    10. '<|end|>' → logprob: -8.55058479309082

Token 1820: ' xs' (ID: 26642)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01337185874581337
    2. 'xs' (adapté à ' xs') → logprob: -5.13837194442749
    3. 'if' → logprob: -5.63837194442749
    4. '
' → logprob: -6.01337194442749
    5. '           ' → logprob: -7.51337194442749
    6. 'interval' → logprob: -8.013371467590332
    7. '#' → logprob: -8.513371467590332
    8. '```' → logprob: -9.763371467590332
    9. '   ' → logprob: -9.888371467590332
    10. ')' → logprob: -10.013371467590332

Token 1821: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.003610163228586316
    2. '.append' → logprob: -6.128610134124756
    3. '.extend' → logprob: -7.003610134124756
    4. '.' → logprob: -7.628610134124756
    5. 'sort' → logprob: -11.128610610961914
    6. '=' → logprob: -12.503610610961914
    7. ' .' → logprob: -12.628610610961914
    8. '+=' → logprob: -12.628610610961914
    9. ' +=' → logprob: -14.128610610961914
    10. ' =' → logprob: -14.253610610961914

Token 1822: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.251825749874115
    2. '
' → logprob: -1.8768258094787598
    3. ',' → logprob: -3.6268258094787598
    4. ')' → logprob: -5.12682580947876
    5. ' intervals' → logprob: -5.37682580947876
    6. '<|end|>' → logprob: -5.37682580947876
    7. '        
' → logprob: -5.62682580947876
    8. 'prev' → logprob: -5.62682580947876
    9. ';' → logprob: -6.12682580947876
    10. ':' → logprob: -6.37682580947876

Token 1823: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025888581294566393
    2. ',' → logprob: -6.377588748931885
    3. '           ' → logprob: -8.002589225769043
    4. '```' → logprob: -8.377589225769043
    5. ')' → logprob: -9.252589225769043
    6. '[' → logprob: -10.127589225769043
    7. 'if' → logprob: -10.502589225769043
    8. '
' → logprob: -10.627589225769043
    9. '<|end|>' → logprob: -10.752589225769043
    10. ' if' → logprob: -10.752589225769043

Token 1824: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011217580176889896
    2. '       ' → logprob: -4.8862175941467285
    3. '           ' → logprob: -6.1362175941467285
    4. ' if' → logprob: -7.3862175941467285
    5. 'interval' → logprob: -7.5112175941467285
    6. 'for' → logprob: -8.51121711730957
    7. 'start' → logprob: -10.76121711730957
    8. 'i' → logprob: -11.01121711730957
    9. '#' (adapté à ' #') → logprob: -11.88621711730957
    10. '   ' → logprob: -12.13621711730957

Token 1825: ' xs' (ID: 26642)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01526638213545084
    2. '           ' → logprob: -4.765266418457031
    3. ' if' → logprob: -5.765266418457031
    4. '       ' → logprob: -6.140266418457031
    5. 'interval' → logprob: -7.390266418457031
    6. 'for' → logprob: -7.890266418457031
    7. 'from' → logprob: -9.390266418457031
    8. 'start' → logprob: -9.390266418457031
    9. 'i' → logprob: -9.390266418457031
    10. 'left' → logprob: -11.140266418457031

Token 1826: ' should' (ID: 1757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3738177716732025
    2. '+=' → logprob: -2.2488176822662354
    3. ' +=' → logprob: -2.2488176822662354
    4. '           ' → logprob: -3.2488176822662354
    5. '.extend' → logprob: -3.8738176822662354
    6. '_len' → logprob: -4.9988179206848145
    7. 'len' → logprob: -4.9988179206848145
    8. '=' → logprob: -5.1238179206848145
    9. ':' → logprob: -5.1238179206848145
    10. 'append' → logprob: -5.8738179206848145

Token 1827: ' be' (ID: 413)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4388420879840851
    2. '=' → logprob: -1.5638420581817627
    3. '+=' → logprob: -2.3138420581817627
    4. '_len' → logprob: -4.188842296600342
    5. 'be' → logprob: -5.313842296600342
    6. '=len' → logprob: -5.438842296600342
    7. ' +=' → logprob: -5.688842296600342
    8. 'if' → logprob: -5.938842296600342
    9. 'continue' → logprob: -6.063842296600342
    10. 'append' → logprob: -6.063842296600342

Token 1828: ' even' (ID: 1952)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12328977137804031
    2. 'len' → logprob: -2.8732898235321045
    3. '[len' → logprob: -3.9982898235321045
    4. '[
' → logprob: -4.248289585113525
    5. '[]' → logprob: -5.498289585113525
    6. 'even' → logprob: -5.623289585113525
    7. '[(' → logprob: -5.623289585113525
    8. '[x' → logprob: -5.873289585113525
    9. '[]
' → logprob: -5.998289585113525
    10. 'at' → logprob: -6.123289585113525

Token 1829: ' number' (ID: 2086)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6419815421104431
    2. 'if' → logprob: -0.8919815421104431
    3. '           ' → logprob: -3.641981601715088
    4. 'for' → logprob: -4.266981601715088
    5. ' for' → logprob: -4.516981601715088
    6. ',' → logprob: -5.391981601715088
    7. '       ' → logprob: -5.641981601715088
    8. ' and' → logprob: -7.016981601715088
    9. '<|end|>' → logprob: -7.391981601715088
    10. ')' → logprob: -7.641981601715088

Token 1830: ' of' (ID: 328)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3952946662902832
    2. '       ' → logprob: -2.270294666290283
    3. '           ' → logprob: -2.520294666290283
    4. 'if' → logprob: -3.270294666290283
    5. ',' → logprob: -3.395294666290283
    6. '<|end|>' → logprob: -3.770294666290283
    7. ' and' → logprob: -3.895294666290283
    8. 'and' → logprob: -5.145294666290283
    9. '<|end|>' → logprob: -5.145294666290283
    10. ' for' → logprob: -5.645294666290283

Token 1831: ' points' (ID: 5571)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.48601365089416504
    2. 'points' → logprob: -1.236013650894165
    3. 'entries' → logprob: -2.986013650894165
    4. 'values' → logprob: -3.486013650894165
    5. 'items' → logprob: -4.736013412475586
    6. 'xs' → logprob: -5.736013412475586
    7. 'coordinates' → logprob: -7.486013412475586
    8. ' elements' → logprob: -8.236013412475586
    9. ' points' → logprob: -8.611013412475586
    10. 'x' → logprob: -8.986013412475586

Token 1832: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16564422845840454
    2. ',' → logprob: -2.4156441688537598
    3. ' if' → logprob: -3.0406441688537598
    4. 'if' → logprob: -5.16564416885376
    5. '
' → logprob: -5.91564416885376
    6. '       ' → logprob: -6.16564416885376
    7. ' for' → logprob: -6.41564416885376
    8. ';' → logprob: -7.16564416885376
    9. ' (' → logprob: -7.79064416885376
    10. ' and' → logprob: -7.79064416885376

Token 1833: ' pairs' (ID: 24702)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12403685599565506
    2. '           ' → logprob: -2.9990367889404297
    3. ' for' → logprob: -2.9990367889404297
    4. 'if' → logprob: -4.62403678894043
    5. 'i' → logprob: -5.49903678894043
    6. ' intervals' → logprob: -7.12403678894043
    7. 'interval' → logprob: -7.24903678894043
    8. 'n' → logprob: -7.87403678894043
    9. ' if' → logprob: -8.12403678894043
    10. '               ' → logprob: -9.12403678894043

Token 1834: ' define' (ID: 13174)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0451889038085938
    2. '=' → logprob: -1.4201889038085938
    3. 'for' → logprob: -1.5451889038085938
    4. ' for' → logprob: -3.1701889038085938
    5. 'represent' → logprob: -3.6701889038085938
    6. '(' → logprob: -3.7951889038085938
    7. '           ' → logprob: -3.9201889038085938
    8. ' represent' → logprob: -4.420188903808594
    9. 'define' → logprob: -4.795188903808594
    10. ' form' → logprob: -4.795188903808594

Token 1835: ' pillar' (ID: 109066)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.031209301203489304
    2. 'shadow' → logprob: -4.656209468841553
    3. 'blocked' → logprob: -5.281209468841553
    4. ' intervals' → logprob: -5.406209468841553
    5. 'for' → logprob: -5.781209468841553
    6. '[' → logprob: -6.406209468841553
    7. 'ob' → logprob: -6.406209468841553
    8. '[p' → logprob: -7.031209468841553
    9. '[
' → logprob: -7.156209468841553
    10. '[(' → logprob: -7.156209468841553

Token 1836: ' shadow' (ID: 21884)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.025195766240358353
    2. ' intervals' → logprob: -4.025195598602295
    3. 'segments' → logprob: -5.775195598602295
    4. 'shadow' → logprob: -6.150195598602295
    5. '           ' → logprob: -7.900195598602295
    6. 'edges' → logprob: -8.150196075439453
    7. '[' → logprob: -8.400196075439453
    8. 'inter' → logprob: -8.650196075439453
    9. 's' → logprob: -9.150196075439453
    10. 'sh' → logprob: -9.650196075439453

Token 1837: ' intervals' (ID: 49900)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.9100074768066406
    2. '       ' → logprob: -1.4100074768066406
    3. ',' → logprob: -2.7850074768066406
    4. ' intervals' → logprob: -3.0350074768066406
    5. '           ' → logprob: -3.2850074768066406
    6. '[' → logprob: -3.2850074768066406
    7. 's' → logprob: -3.5350074768066406
    8. 'interval' → logprob: -3.9100074768066406
    9. '
' → logprob: -4.160007476806641
    10. ':' → logprob: -4.160007476806641

Token 1838: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05702749267220497
    2. '       ' → logprob: -3.557027578353882
    3. ',' → logprob: -3.807027578353882
    4. '
' → logprob: -6.807027339935303
    5. '               ' → logprob: -6.932027339935303
    6. ' for' → logprob: -7.432027339935303
    7. 'for' → logprob: -8.182027816772461
    8. ')' → logprob: -8.307027816772461
    9. '[' → logprob: -8.307027816772461
    10. '                   ' → logprob: -8.682027816772461

Token 1839: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.034197788685560226
    2. 'the' → logprob: -3.9091978073120117
    3. 'line' → logprob: -4.909197807312012
    4. ' y' → logprob: -5.534197807312012
    5. 'x' → logprob: -7.034197807312012
    6. ' line' → logprob: -7.659197807312012
    7. ' the' → logprob: -7.659197807312012
    8. '           ' → logprob: -8.409197807312012
    9. '   ' → logprob: -10.284197807312012
    10. 'this' → logprob: -10.409197807312012

Token 1840: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27041324973106384
    2. 'for' → logprob: -2.1454131603240967
    3. ' for' → logprob: -2.2704131603240967
    4. ',' → logprob: -4.895413398742676
    5. '       ' → logprob: -5.645413398742676
    6. '
' → logprob: -5.895413398742676
    7. ':' → logprob: -7.770413398742676
    8. ')' → logprob: -8.020413398742676
    9. '               ' → logprob: -8.520413398742676
    10. '[' → logprob: -8.645413398742676

Token 1841: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036782924085855484
    2. '       ' → logprob: -4.036782741546631
    3. ',' → logprob: -4.536782741546631
    4. '               ' → logprob: -5.786782741546631
    5. '[' → logprob: -5.911782741546631
    6. ')' → logprob: -7.786782741546631
    7. '                   ' → logprob: -8.036783218383789
    8. ',
' → logprob: -8.536783218383789
    9. '
' → logprob: -9.036783218383789
    10. '   ' → logprob: -9.411783218383789

Token 1842: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26720789074897766
    2. '       ' → logprob: -2.6422078609466553
    3. 'for' (adapté à ' for') → logprob: -2.7672078609466553
    4. ' for' → logprob: -2.7672078609466553
    5. ' if' → logprob: -3.7672078609466553
    6. 'if' → logprob: -4.392208099365234
    7. ',' → logprob: -7.767208099365234
    8. ' intervals' → logprob: -8.142208099365234
    9. '
' → logprob: -8.392208099365234
    10. '               ' → logprob: -8.642208099365234

Token 1843: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22167910635471344
    2. 'j' → logprob: -1.7216790914535522
    3. 'idx' → logprob: -3.971679210662842
    4. 'k' → logprob: -6.846679210662842
    5. 'index' → logprob: -9.846678733825684
    6. ' j' → logprob: -9.971678733825684
    7. ' i' → logprob: -10.221678733825684
    8. 'ix' → logprob: -12.221678733825684
    9. ' idx' → logprob: -12.221678733825684
    10. '
' → logprob: -12.721678733825684

Token 1844: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2259778380393982
    2. 'in' → logprob: -1.600977897644043
    3. '0' → logprob: -8.475977897644043
    4. '	in' → logprob: -9.350977897644043
    5. 'i' → logprob: -9.725977897644043
    6. ' ' → logprob: -9.975977897644043
    7. '           ' → logprob: -10.350977897644043
    8. '=' → logprob: -10.600977897644043
    9. ',' → logprob: -10.850977897644043
    10. ' i' → logprob: -10.975977897644043

Token 1845: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007102862582542002
    2. ' range' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.250710487365723
    4. '0' → logprob: -15.750710487365723
    5. '   ' → logprob: -17.250709533691406
    6. '  ' → logprob: -18.625709533691406
    7. '	range' → logprob: -18.750709533691406
    8. '[' → logprob: -19.250709533691406
    9. '
' → logprob: -19.500709533691406
    10. '(' → logprob: -20.375709533691406

Token 1846: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3133102357387543
    2. '1' → logprob: -1.3133102655410767
    3. ' ' → logprob: -10.563310623168945
    4. 'i' → logprob: -11.188310623168945
    5. '(' → logprob: -11.938310623168945
    6. '   ' → logprob: -13.563310623168945
    7. '           ' → logprob: -14.813310623168945
    8. '(i' → logprob: -15.688310623168945
    9. 'len' → logprob: -16.188310623168945
    10. '```' → logprob: -16.313310623168945

Token 1847: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024763736873865128
    2. '1' → logprob: -6.002476215362549
    3. ' ' → logprob: -14.627476692199707
    4. '
' → logprob: -15.752476692199707
    5. '   ' → logprob: -15.752476692199707
    6. 'len' → logprob: -17.87747573852539
    7. 'i' → logprob: -18.12747573852539
    8. '           ' → logprob: -18.25247573852539
    9. '```' → logprob: -18.50247573852539
    10. '2' → logprob: -18.87747573852539

Token 1848: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030238451436161995
    2. 'i' → logprob: -3.905238389968872
    3. ' i' → logprob: -5.780238628387451
    4. ',len' → logprob: -6.280238628387451
    5. ',i' → logprob: -6.405238628387451
    6. '1' → logprob: -6.655238628387451
    7. '+' → logprob: -7.280238628387451
    8. '   ' → logprob: -8.030238151550293
    9. ' ' → logprob: -8.780238151550293
    10. '0' → logprob: -9.155238151550293

Token 1849: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -8.41866585687967e-06
    2. ' len' → logprob: -11.750008583068848
    3. '           ' → logprob: -15.125008583068848
    4. '   ' → logprob: -16.62500762939453
    5. '(len' → logprob: -17.37500762939453
    6. '       ' → logprob: -17.75000762939453
    7. ' ' → logprob: -18.25000762939453
    8. '     ' → logprob: -18.50000762939453
    9. '         ' → logprob: -18.62500762939453
    10. '
' → logprob: -18.62500762939453

Token 1850: '(xs' (ID: 132690)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.3869900405406952
    2. '(xs' → logprob: -1.1369900703430176
    3. ' xs' → logprob: -9.13698959350586
    4. 'Xs' → logprob: -11.51198959350586
    5. '   ' → logprob: -14.88698959350586
    6. 'XS' → logprob: -15.88698959350586
    7. '
' → logprob: -15.88698959350586
    8. '-xs' → logprob: -16.01198959350586
    9. 's' → logprob: -16.38698959350586
    10. ' ' → logprob: -16.63698959350586

Token 1851: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -4.2987729102605954e-05
    2. ' ,' → logprob: -10.250042915344238
    3. '   ' → logprob: -12.500042915344238
    4. ' ' → logprob: -14.250042915344238
    5. '+' → logprob: -14.375042915344238
    6. '```' → logprob: -14.625042915344238
    7. '       ' → logprob: -14.875042915344238
    8. '),' → logprob: -15.125042915344238
    9. '           ' → logprob: -15.250042915344238
    10. '     ' → logprob: -15.625042915344238

Token 1852: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010127831774298102
    2. ' ,' → logprob: -9.625101089477539
    3. '+' → logprob: -10.875101089477539
    4. '   ' → logprob: -12.250101089477539
    5. ' ' → logprob: -12.625101089477539
    6. ',
' → logprob: -13.375101089477539
    7. '           ' → logprob: -13.500101089477539
    8. '       ' → logprob: -13.750101089477539
    9. ' +' → logprob: -14.125101089477539
    10. '2' → logprob: -14.250101089477539

Token 1853: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.908022285439074e-05
    2. '2' → logprob: -9.750059127807617
    3. ' ' → logprob: -14.375059127807617
    4. '```' → logprob: -16.625059127807617
    5. '   ' → logprob: -17.125059127807617
    6. '0' → logprob: -17.500059127807617
    7. '3' → logprob: -18.625059127807617
    8. '(' → logprob: -19.125059127807617
    9. '``' → logprob: -19.125059127807617
    10. '5' → logprob: -19.562559127807617

Token 1854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -14.250000953674316
    3. '2' → logprob: -16.875
    4. ' ' → logprob: -17.25
    5. '```' → logprob: -17.625
    6. '   ' → logprob: -18.375
    7. '3' → logprob: -18.625
    8. '``' → logprob: -19.25
    9. '5' → logprob: -19.5
    10. '15' → logprob: -19.5

Token 1855: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012451570364646614
    2. ' ,' → logprob: -9.25012493133545
    3. '           ' → logprob: -11.12512493133545
    4. '               ' → logprob: -11.87512493133545
    5. '+' → logprob: -14.25012493133545
    6. '```' → logprob: -14.37512493133545
    7. '[' → logprob: -14.62512493133545
    8. ',[' → logprob: -14.62512493133545
    9. ',
' → logprob: -14.62512493133545
    10. '):
' → logprob: -14.62512493133545

Token 1856: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.625059127807617
    4. '```' → logprob: -19.375059127807617
    5. '1' → logprob: -20.750059127807617
    6. '3' → logprob: -20.875059127807617
    7. '۲' → logprob: -21.125059127807617
    8. '２' → logprob: -21.500059127807617
    9. ')' → logprob: -21.875059127807617
    10. '  ' → logprob: -22.000059127807617

Token 1857: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.750011444091797
    4. '1' → logprob: -18.375011444091797
    5. '  ' → logprob: -19.000011444091797
    6. '```' → logprob: -19.000011444091797
    7. '۲' → logprob: -19.562511444091797
    8. '    ' → logprob: -19.875011444091797
    9. '２' → logprob: -20.000011444091797
    10. '     ' → logprob: -20.562511444091797

Token 1858: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.29238826036453247
    2. ',' → logprob: -1.9173882007598877
    3. ':
' → logprob: -2.5423882007598877
    4. '           ' → logprob: -4.167388439178467
    5. '               ' → logprob: -5.542388439178467
    6. '):' → logprob: -5.667388439178467
    7. ':' → logprob: -5.667388439178467
    8. '       ' → logprob: -7.792388439178467
    9. ',
' → logprob: -8.167387962341309
    10. '```' → logprob: -8.917387962341309

Token 1859: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004978670622222126
    2. '           ' → logprob: -8.625497817993164
    3. ',' → logprob: -8.750497817993164
    4. '                   ' → logprob: -10.000497817993164
    5. '                       ' → logprob: -10.625497817993164
    6. '[' → logprob: -11.125497817993164
    7. '<|end|>' → logprob: -11.125497817993164
    8. '```' → logprob: -11.500497817993164
    9. 'interval' → logprob: -11.875497817993164
    10. 'inter' → logprob: -12.375497817993164

Token 1860: ' left' (ID: 3561)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.010363883338868618
    2. '               ' → logprob: -5.260364055633545
    3. ' intervals' → logprob: -6.135364055633545
    4. '           ' → logprob: -6.510364055633545
    5. 'inter' → logprob: -7.260364055633545
    6. '   ' → logprob: -7.885364055633545
    7. '                   ' → logprob: -8.385363578796387
    8. 'start' → logprob: -9.510363578796387
    9. 'left' (adapté à ' left') → logprob: -10.885363578796387
    10. 'segments' → logprob: -11.010363578796387

Token 1861: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06327473372220993
    2. '=' → logprob: -2.813274621963501
    3. ' ,' → logprob: -7.81327486038208
    4. ' =' → logprob: -8.063274383544922
    5. '_,' → logprob: -8.188274383544922
    6. '<|end|>' → logprob: -9.813274383544922
    7. ',
' → logprob: -10.313274383544922
    8. ',x' → logprob: -10.438274383544922
    9. '=
' → logprob: -10.813274383544922
    10. ',right' → logprob: -10.938274383544922

Token 1862: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.004081009421497583
    2. ' xs' → logprob: -5.504080772399902
    3. '(xs' → logprob: -13.504080772399902
    4. 'max' → logprob: -14.879080772399902
    5. 'min' → logprob: -15.129080772399902
    6. 'xmin' → logprob: -15.754080772399902
    7. 'Xs' → logprob: -16.12908172607422
    8. 'x' → logprob: -16.50408172607422
    9. '           ' → logprob: -16.50408172607422
    10. '   ' → logprob: -16.75408172607422

Token 1863: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007141690235584974
    2. '=' → logprob: -5.882141590118408
    3. ',' → logprob: -6.757141590118408
    4. '[' → logprob: -7.257141590118408
    5. '```' → logprob: -7.632141590118408
    6. 'i' → logprob: -7.882141590118408
    7. ',i' → logprob: -8.257142066955566
    8. ' =' → logprob: -8.257142066955566
    9. '           ' → logprob: -8.507142066955566
    10. '=i' → logprob: -8.757142066955566

Token 1864: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07986175268888474
    2. '+' → logprob: -2.954861640930176
    3. ' +' → logprob: -4.579861640930176
    4. ',
' → logprob: -4.704861640930176
    5. '               ' → logprob: -6.579861640930176
    6. ' ,' → logprob: -6.704861640930176
    7. '                   ' → logprob: -6.954861640930176
    8. '+,' → logprob: -8.204861640930176
    9. '),' → logprob: -8.329861640930176
    10. '+
' → logprob: -8.579861640930176

Token 1865: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49190738797187805
    2. '               ' → logprob: -0.9919073581695557
    3. ',right' → logprob: -5.366907596588135
    4. ' ,' → logprob: -5.616907596588135
    5. '',' → logprob: -5.866907596588135
    6. 'right' → logprob: -6.241907596588135
    7. ' right' → logprob: -6.741907596588135
    8. '                ' → logprob: -7.241907596588135
    9. ',
' → logprob: -7.366907596588135
    10. '                   ' → logprob: -7.491907596588135

Token 1866: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.003457872197031975
    2. ' right' → logprob: -5.753458023071289
    3. '               ' → logprob: -8.378458023071289
    4. ',right' → logprob: -11.503458023071289
    5. '	right' → logprob: -11.503458023071289
    6. '                   ' → logprob: -12.003458023071289
    7. '
' → logprob: -12.128458023071289
    8. '           ' → logprob: -12.253458023071289
    9. '   ' → logprob: -12.378458023071289
    10. '1' → logprob: -12.628458023071289

Token 1867: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6472471952438354
    2. '+' → logprob: -1.1472471952438354
    3. ',' → logprob: -2.772247314453125
    4. '=' → logprob: -3.147247314453125
    5. '               ' → logprob: -3.522247314453125
    6. '<|end|>' → logprob: -4.522247314453125
    7. ' =' → logprob: -5.147247314453125
    8. '                   ' → logprob: -6.272247314453125
    9. '                ' → logprob: -6.647247314453125
    10. ')' → logprob: -6.897247314453125

Token 1868: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.018152287229895592
    2. ' xs' → logprob: -4.018152236938477
    3. '(xs' → logprob: -13.143152236938477
    4. 'x' → logprob: -15.393152236938477
    5. 'Xs' → logprob: -16.018152236938477
    6. '_x' → logprob: -18.768152236938477
    7. ' ' → logprob: -19.018152236938477
    8. 'xi' → logprob: -19.143152236938477
    9. 'xis' → logprob: -19.143152236938477
    10. ' x' → logprob: -19.268152236938477

Token 1869: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29648861289024353
    2. '[i' → logprob: -1.421488642692566
    3. 'i' → logprob: -4.5464887619018555
    4. ' +' → logprob: -5.7964887619018555
    5. '(i' → logprob: -7.2964887619018555
    6. '+i' → logprob: -7.6714887619018555
    7. '[' → logprob: -8.671488761901855
    8. '{i' → logprob: -9.921488761901855
    9. ' i' → logprob: -10.171488761901855
    10. '+
' → logprob: -10.171488761901855

Token 1870: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01105890329927206
    2. ' +' → logprob: -4.511058807373047
    3. '+i' → logprob: -12.136058807373047
    4. ']' → logprob: -13.261058807373047
    5. '+
' → logprob: -13.261058807373047
    6. '[' → logprob: -14.136058807373047
    7. '[i' → logprob: -14.636058807373047
    8. '1' → logprob: -14.761058807373047
    9. '   ' → logprob: -15.636058807373047
    10. ' +
' → logprob: -16.136058807373047

Token 1871: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '
' → logprob: -18.75
    4. '   ' → logprob: -18.875
    5. '```' → logprob: -19.5
    6. '１' → logprob: -20.0
    7. '0' → logprob: -20.6875
    8. '  ' → logprob: -20.875
    9. '۱' → logprob: -21.25
    10. 'i' → logprob: -21.8125

Token 1872: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -20.25
    5. '
' → logprob: -20.5
    6. '0' → logprob: -21.375
    7. '3' → logprob: -21.8125
    8. '１' → logprob: -22.0625
    9. '  ' → logprob: -22.125
    10. 'i' → logprob: -22.125

Token 1873: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17879003286361694
    2. ')' → logprob: -2.6787900924682617
    3. ')
' → logprob: -3.0537900924682617
    4. ',' → logprob: -4.178790092468262
    5. '
' → logprob: -4.553790092468262
    6. '           ' → logprob: -4.678790092468262
    7. '+' → logprob: -5.928790092468262
    8. ',
' → logprob: -6.053790092468262
    9. '                   ' → logprob: -6.428790092468262
    10. ']' → logprob: -6.428790092468262

Token 1874: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.274932143744081e-05
    2. '                   ' → logprob: -10.875042915344238
    3. '
' → logprob: -11.750042915344238
    4. ' if' → logprob: -11.875042915344238
    5. ',' → logprob: -12.750042915344238
    6. '           ' → logprob: -13.375042915344238
    7. '                       ' → logprob: -13.625042915344238
    8. 'if' → logprob: -14.250042915344238
    9. '                
' → logprob: -14.750042915344238
    10. ')' → logprob: -14.875042915344238

Token 1875: ' intervals' (ID: 49900)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6878125071525574
    2. 'if' → logprob: -1.3128125667572021
    3. 'interval' → logprob: -1.5628125667572021
    4. 'corr' → logprob: -4.812812328338623
    5. '#' → logprob: -5.687812328338623
    6. '           ' → logprob: -5.937812328338623
    7. 'segments' → logprob: -6.562812328338623
    8. 'for' → logprob: -7.312812328338623
    9. ' intervals' → logprob: -7.562812328338623
    10. ' if' → logprob: -7.562812328338623

Token 1876: '.append' (ID: 3709)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5379617810249329
    2. '.append' → logprob: -1.037961721420288
    3. '.' → logprob: -3.662961721420288
    4. '               ' → logprob: -3.787961721420288
    5. ' ,' → logprob: -5.662961959838867
    6. '                   ' → logprob: -6.412961959838867
    7. '+=' → logprob: -6.662961959838867
    8. ' +=' → logprob: -6.787961959838867
    9. '[' → logprob: -7.037961959838867
    10. ' =' → logprob: -7.287961959838867

Token 1877: '((' (ID: 2054)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00590129941701889
    2. ' (' → logprob: -6.005901336669922
    3. '(' → logprob: -6.255901336669922
    4. '(right' → logprob: -6.505901336669922
    5. '           ' → logprob: -13.005901336669922
    6. '   ' → logprob: -13.505901336669922
    7. '               ' → logprob: -13.630901336669922
    8. '[left' → logprob: -14.255901336669922
    9. '                   ' → logprob: -15.505901336669922
    10. '((' → logprob: -16.380901336669922

Token 1878: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -2.816093228830141e-06
    2. ' left' → logprob: -13.62500286102295
    3. '   ' → logprob: -14.12500286102295
    4. 'max' → logprob: -14.87500286102295
    5. '	left' → logprob: -15.62500286102295
    6. '           ' → logprob: -16.250001907348633
    7. 'lef' → logprob: -16.875001907348633
    8. 'float' → logprob: -17.000001907348633
    9. 'min' → logprob: -17.250001907348633
    10. 'right' → logprob: -17.625001907348633

Token 1879: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.576873758807778e-05
    2. ',right' → logprob: -9.750075340270996
    3. ',
' → logprob: -11.625075340270996
    4. ' ,' → logprob: -12.000075340270996
    5. '<|end|>' → logprob: -14.625075340270996
    6. '               ' → logprob: -15.500075340270996
    7. '   ' → logprob: -15.500075340270996
    8. '       ' → logprob: -15.750075340270996
    9. '           ' → logprob: -16.000076293945312
    10. '+,' → logprob: -16.125076293945312

Token 1880: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.002476135268807411
    2. ' right' → logprob: -6.002476215362549
    3. '	right' → logprob: -15.00247573852539
    4. '               ' → logprob: -16.62747573852539
    5. '   ' → logprob: -17.37747573852539
    6. '                   ' → logprob: -18.37747573852539
    7. '[right' → logprob: -18.50247573852539
    8. ',right' → logprob: -18.87747573852539
    9. 'Right' → logprob: -19.12747573852539
    10. ' ' → logprob: -19.62747573852539

Token 1881: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06359561532735825
    2. '))' → logprob: -2.8135955333709717
    3. '               ' → logprob: -6.938595771789551
    4. ')
' → logprob: -8.93859577178955
    5. ' )' → logprob: -8.93859577178955
    6. '))
' → logprob: -9.18859577178955
    7. '           ' → logprob: -9.18859577178955
    8. ',' → logprob: -9.31359577178955
    9. ' ))' → logprob: -10.81359577178955
    10. '       ' → logprob: -10.93859577178955

Token 1882: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20165042579174042
    2. '       ' → logprob: -1.7016503810882568
    3. '        
' → logprob: -9.201650619506836
    4. ')' → logprob: -9.701650619506836
    5. ')
' → logprob: -10.326650619506836
    6. '

' → logprob: -10.951650619506836
    7. '
' → logprob: -11.826650619506836
    8. ',' → logprob: -12.326650619506836
    9. '```' → logprob: -12.701650619506836
    10. '           ' → logprob: -13.076650619506836

Token 1883: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13477464020252228
    2. '
' → logprob: -2.259774684906006
    3. 'corr' → logprob: -4.509774684906006
    4. 'interval' → logprob: -4.884774684906006
    5. 'def' → logprob: -7.009774684906006
    6. '#' → logprob: -7.009774684906006
    7. '```' → logprob: -7.759774684906006
    8. 'segments' → logprob: -8.384774208068848
    9. '   ' → logprob: -8.634774208068848
    10. 'if' (adapté à ' if') → logprob: -8.634774208068848

Token 1884: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03770598769187927
    2. 'interval' → logprob: -3.537705898284912
    3. ' not' → logprob: -5.412705898284912
    4. 'len' → logprob: -5.787705898284912
    5. 'corr' → logprob: -9.28770637512207
    6. 'segments' → logprob: -9.41270637512207
    7. '   ' → logprob: -9.53770637512207
    8. ' intervals' → logprob: -9.66270637512207
    9. '
' → logprob: -10.91270637512207
    10. '	not' → logprob: -11.66270637512207

Token 1885: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.005685003008693457
    2. 'corr' → logprob: -5.505684852600098
    3. ' intervals' → logprob: -6.505684852600098
    4. 'segments' → logprob: -9.630684852600098
    5. ' corridors' → logprob: -11.505684852600098
    6. 'self' → logprob: -11.505684852600098
    7. 'len' → logprob: -12.005684852600098
    8. '(interval' → logprob: -12.755684852600098
    9. '
' → logprob: -12.880684852600098
    10. 'cor' → logprob: -13.130684852600098

Token 1886: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35471439361572266
    2. ':' → logprob: -1.2297143936157227
    3. '.sort' → logprob: -5.854714393615723
    4. '       ' → logprob: -6.854714393615723
    5. ' =' → logprob: -7.354714393615723
    6. '[' → logprob: -7.479714393615723
    7. ',' → logprob: -8.104714393615723
    8. '=' → logprob: -8.229714393615723
    9. '.' → logprob: -9.104714393615723
    10. '.append' → logprob: -9.479714393615723

Token 1887: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6535730361938477
    2. ':
' → logprob: -0.9035730361938477
    3. ':' → logprob: -2.7785730361938477
    4. '       ' → logprob: -4.653573036193848
    5. '[' → logprob: -7.153573036193848
    6. ',' → logprob: -7.153573036193848
    7. '):
' → logprob: -7.528573036193848
    8. 'segments' → logprob: -8.403573036193848
    9. 'return' → logprob: -8.903573036193848
    10. ' =' → logprob: -9.278573036193848

Token 1888: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.30814647674560547
    2. '           ' → logprob: -1.8081464767456055
    3. ' return' → logprob: -2.3081464767456055
    4. '       ' → logprob: -6.8081464767456055
    5. '   ' → logprob: -8.308146476745605
    6. 'corr' → logprob: -8.933146476745605
    7. 'segments' → logprob: -9.433146476745605
    8. '
' → logprob: -10.058146476745605
    9. ' corridors' → logprob: -10.308146476745605
    10. '[' → logprob: -10.433146476745605

Token 1889: ' corridors' (ID: 154015)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.31788545846939087
    2. 'corr' → logprob: -1.317885398864746
    3. '[c' → logprob: -6.192885398864746
    4. ' corridors' → logprob: -6.692885398864746
    5. ' [(' → logprob: -7.692885398864746
    6. '[' → logprob: -7.817885398864746
    7. 'corn' → logprob: -8.442885398864746
    8. '[((' → logprob: -9.317885398864746
    9. 'segments' → logprob: -10.817885398864746
    10. '   ' → logprob: -10.942885398864746

Token 1890: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.056499265134334564
    2. '       ' → logprob: -3.0564992427825928
    3. '        
' → logprob: -5.431499481201172
    4. '[' → logprob: -5.806499481201172
    5. '[:' → logprob: -9.556499481201172
    6. '
' → logprob: -9.556499481201172
    7. '

' → logprob: -9.806499481201172
    8. '    
' → logprob: -10.056499481201172
    9. '[
' → logprob: -10.306499481201172
    10. '  
' → logprob: -10.556499481201172

Token 1891: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14896941184997559
    2. '
' → logprob: -2.3989694118499756
    3. '[' → logprob: -3.2739694118499756
    4. '        
' → logprob: -6.023969650268555
    5. '   ' → logprob: -6.148969650268555
    6. '[
' → logprob: -6.523969650268555
    7. ',
' → logprob: -6.773969650268555
    8. ')' → logprob: -7.523969650268555
    9. '[]
' → logprob: -7.648969650268555
    10. ',' → logprob: -7.898969650268555

Token 1892: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24283891916275024
    2. 'interval' → logprob: -1.9928388595581055
    3. '
' → logprob: -2.7428388595581055
    4. '#' (adapté à ' #') → logprob: -4.9928388595581055
    5. 'segments' → logprob: -6.1178388595581055
    6. 'corr' → logprob: -6.4928388595581055
    7. 'def' → logprob: -6.7428388595581055
    8. '   ' → logprob: -7.1178388595581055
    9. ' intervals' → logprob: -7.2428388595581055
    10. 'inter' → logprob: -7.7428388595581055

Token 1893: ' Merge' (ID: 71009)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.05007939785718918
    2. 'merged' → logprob: -3.800079345703125
    3. '#' → logprob: -4.050079345703125
    4. 'def' → logprob: -4.925079345703125
    5. 'free' → logprob: -7.300079345703125
    6. '       ' → logprob: -8.300079345703125
    7. '
' → logprob: -8.300079345703125
    8. 'segments' → logprob: -8.550079345703125
    9. '   ' → logprob: -9.050079345703125
    10. 'result' → logprob: -9.300079345703125

Token 1894: ' pillar' (ID: 109066)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.005237668287009001
    2. ' intervals' → logprob: -5.255237579345703
    3. '       ' → logprob: -13.255237579345703
    4. '   ' → logprob: -14.005237579345703
    5. '(interval' → logprob: -14.505237579345703
    6. 'sorted' → logprob: -14.880237579345703
    7. ',' → logprob: -15.755237579345703
    8. '           ' → logprob: -15.755237579345703
    9. 'Intervals' → logprob: -16.380237579345703
    10. 'sort' → logprob: -16.755237579345703

Token 1895: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0120254410430789
    2. ' intervals' → logprob: -4.762025356292725
    3. '_inter' → logprob: -6.012025356292725
    4. ',' → logprob: -7.387025356292725
    5. '(interval' → logprob: -8.887025833129883
    6. 'inter' → logprob: -9.637025833129883
    7. '_interval' → logprob: -10.512025833129883
    8. '   ' → logprob: -10.887025833129883
    9. 's' → logprob: -10.887025833129883
    10. 'segments' → logprob: -11.012025833129883

Token 1896: '
' (ID: 198)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.10139458626508713
    2. ' intervals' → logprob: -2.6013946533203125
    3. '       ' → logprob: -4.3513946533203125
    4. ',' → logprob: -5.6013946533203125
    5. '
' → logprob: -6.6013946533203125
    6. '(interval' → logprob: -6.6013946533203125
    7. '```' → logprob: -7.4763946533203125
    8. ',
' → logprob: -7.4763946533203125
    9. 'inter' → logprob: -7.6013946533203125
    10. 'sorted' → logprob: -8.101394653320312

Token 1897: '       ' (ID: 309)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1968921422958374
    2. '       ' → logprob: -2.196892261505127
    3. ' intervals' → logprob: -2.821892261505127
    4. ',' → logprob: -6.321892261505127
    5. '```' → logprob: -6.571892261505127
    6. '[' → logprob: -7.071892261505127
    7. 'sorted' → logprob: -7.571892261505127
    8. ',
' → logprob: -7.696892261505127
    9. '[
' → logprob: -7.821892261505127
    10. '(interval' → logprob: -7.946892261505127

Token 1898: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0014085668371990323
    2. '       ' → logprob: -6.751408576965332
    3. 'merged' → logprob: -8.501408576965332
    4. ' intervals' → logprob: -11.001408576965332
    5. '   ' → logprob: -11.376408576965332
    6. '
' → logprob: -12.751408576965332
    7. 'def' → logprob: -12.876408576965332
    8. 'sorted' → logprob: -14.001408576965332
    9. 'segments' → logprob: -15.751408576965332
    10. '           ' → logprob: -15.876408576965332

Token 1899: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0458032600581646
    2. '=' → logprob: -3.2958033084869385
    3. ' =' → logprob: -4.920803070068359
    4. '=[' → logprob: -8.79580307006836
    5. '=[]' → logprob: -9.04580307006836
    6. 'sort' → logprob: -9.29580307006836
    7. '[' → logprob: -10.42080307006836
    8. '=[]
' → logprob: -11.29580307006836
    9. '       ' → logprob: -11.92080307006836
    10. '_sorted' → logprob: -12.04580307006836

Token 1900: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08968787640333176
    2. ',' → logprob: -3.3396878242492676
    3. '[' → logprob: -4.464687824249268
    4. ')' → logprob: -4.839687824249268
    5. '[
' → logprob: -5.214687824249268
    6. '        
' → logprob: -5.339687824249268
    7. 'def' → logprob: -5.339687824249268
    8. ')
' → logprob: -5.964687824249268
    9. '   ' → logprob: -6.089687824249268
    10. '           ' → logprob: -6.339687824249268

Token 1901: '       ' (ID: 309)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.23505078256130219
    2. '       ' → logprob: -1.6100507974624634
    3. 'prev' → logprob: -6.110050678253174
    4. '
' → logprob: -6.110050678253174
    5. 'def' → logprob: -7.235050678253174
    6. 'cur' → logprob: -7.235050678253174
    7. 'result' → logprob: -7.485050678253174
    8. ' merged' → logprob: -7.610050678253174
    9. 'left' → logprob: -7.735050678253174
    10. '   ' → logprob: -7.860050678253174

Token 1902: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' (adapté à ' merged') → logprob: -0.00014597235713154078
    2. '       ' → logprob: -9.25014591217041
    3. ' merged' → logprob: -10.50014591217041
    4. 'new' → logprob: -11.25014591217041
    5. 'result' → logprob: -13.12514591217041
    6. 'merge' → logprob: -13.75014591217041
    7. '   ' → logprob: -13.75014591217041
    8. 'current' → logprob: -13.87514591217041
    9. 'combined' → logprob: -14.12514591217041
    10. 'cur' → logprob: -14.12514591217041

Token 1903: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7231832146644592
    2. '=' → logprob: -1.3481831550598145
    3. '_inter' → logprob: -1.9731831550598145
    4. '_left' → logprob: -2.2231831550598145
    5. '[' → logprob: -6.3481831550598145
    6. 'left' → logprob: -6.8481831550598145
    7. '=[]
' → logprob: -6.8481831550598145
    8. '=[]' → logprob: -7.4731831550598145
    9. '_start' → logprob: -7.5981831550598145
    10. '_interval' → logprob: -7.8481831550598145

Token 1904: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.010779095813632011
    2. '[]' → logprob: -5.010778903961182
    3. '[' → logprob: -5.510778903961182
    4. '[ind' → logprob: -13.13577938079834
    5. '[int' → logprob: -13.26077938079834
    6. '[start' → logprob: -13.38577938079834
    7. '[]

' → logprob: -13.38577938079834
    8. '[i' → logprob: -13.76077938079834
    9. '[array' → logprob: -14.38577938079834
    10. '[in' → logprob: -14.63577938079834

Token 1905: '       ' (ID: 309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6559514403343201
    2. '       ' → logprob: -1.1559514999389648
    3. 'left' → logprob: -2.405951499938965
    4. 'start' → logprob: -3.655951499938965
    5. 'prev' → logprob: -4.530951499938965
    6. '           ' → logprob: -4.780951499938965
    7. '[' → logprob: -5.280951499938965
    8. 'current' → logprob: -5.405951499938965
    9. 'cur' → logprob: -5.655951499938965
    10. '   ' → logprob: -6.155951499938965

Token 1906: ' cur' (ID: 4396)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8987039923667908
    2. 'left' → logprob: -1.3987040519714355
    3. 'for' → logprob: -1.8987040519714355
    4. 'cur' (adapté à ' cur') → logprob: -2.3987040519714355
    5. 'current' → logprob: -2.8987040519714355
    6. 'start' → logprob: -3.6487040519714355
    7. 'curr' → logprob: -4.2737040519714355
    8. 'lx' → logprob: -5.1487040519714355
    9. '       ' → logprob: -6.2737040519714355
    10. '   ' → logprob: -7.5237040519714355

Token 1907: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.09944652020931244
    2. '_start' → logprob: -2.8494465351104736
    3. 'left' → logprob: -4.0994462966918945
    4. '_l' → logprob: -4.4744462966918945
    5. 'start' → logprob: -5.5994462966918945
    6. '=' → logprob: -6.0994462966918945
    7. 'L' → logprob: -6.7244462966918945
    8. 'l' → logprob: -6.7244462966918945
    9. ' =' → logprob: -8.474446296691895
    10. 'Left' → logprob: -9.849446296691895

Token 1908: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0046733953058719635
    2. '=' → logprob: -5.379673480987549
    3. ' =' → logprob: -10.50467300415039
    4. ',
' → logprob: -11.37967300415039
    5. ' ,' → logprob: -11.87967300415039
    6. ',c' → logprob: -13.75467300415039
    7. 'cur' → logprob: -14.12967300415039
    8. ',right' → logprob: -14.25467300415039
    9. '=None' → logprob: -14.50467300415039
    10. '       ' → logprob: -14.62967300415039

Token 1909: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -7.111979357432574e-05
    2. 'interval' → logprob: -10.62507152557373
    3. ' cur' → logprob: -10.62507152557373
    4. '       ' → logprob: -11.00007152557373
    5. 'curr' → logprob: -13.37507152557373
    6. '0' → logprob: -13.75007152557373
    7. '   ' → logprob: -13.75007152557373
    8. '	cur' → logprob: -14.12507152557373
    9. ' intervals' → logprob: -14.50007152557373
    10. '_cur' → logprob: -15.37507152557373

Token 1910: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.023771677166223526
    2. 'right' → logprob: -4.1487717628479
    3. ',' → logprob: -5.0237717628479
    4. ',right' → logprob: -6.8987717628479
    5. 'Right' → logprob: -9.898771286010742
    6. '=' → logprob: -10.773771286010742
    7. ',_' → logprob: -11.148771286010742
    8. '_cur' → logprob: -11.773771286010742
    9. '_,' → logprob: -11.898771286010742
    10. 'cur' → logprob: -12.523771286010742

Token 1911: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015124812489375472
    2. ' =' → logprob: -6.50151252746582
    3. ',' → logprob: -11.62651252746582
    4. '=None' → logprob: -14.00151252746582
    5. '=
' → logprob: -15.25151252746582
    6. '=_' → logprob: -17.50151252746582
    7. '=}' → logprob: -17.50151252746582
    8. '<|end|>' → logprob: -17.50151252746582
    9. '=

' → logprob: -18.37651252746582
    10. ' ' → logprob: -18.87651252746582

Token 1912: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.00013095269969198853
    2. ' intervals' → logprob: -9.000130653381348
    3. '   ' → logprob: -12.750130653381348
    4. 'float' → logprob: -12.750130653381348
    5. 'None' → logprob: -13.625130653381348
    6. '0' → logprob: -15.500130653381348
    7. '-' → logprob: -16.000131607055664
    8. '(interval' → logprob: -16.125131607055664
    9. '       ' → logprob: -17.125131607055664
    10. ' None' → logprob: -17.250131607055664

Token 1913: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005791324190795422
    2. ' =' → logprob: -5.255791187286377
    3. ',' → logprob: -8.255791664123535
    4. '0' → logprob: -8.755791664123535
    5. '[' → logprob: -9.505791664123535
    6. '=
' → logprob: -10.255791664123535
    7. '=None' → logprob: -11.255791664123535
    8. ' intervals' → logprob: -11.380791664123535
    9. 'interval' → logprob: -13.005791664123535
    10. ' ' → logprob: -14.880791664123535

Token 1914: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8444881536415778e-05
    2. '[' → logprob: -11.250028610229492
    3. '-' → logprob: -12.000028610229492
    4. ' ' → logprob: -12.125028610229492
    5. '   ' → logprob: -13.250028610229492
    6. '(' → logprob: -14.125028610229492
    7. 'interval' → logprob: -14.250028610229492
    8. 'float' → logprob: -14.875028610229492
    9. 'None' → logprob: -15.625028610229492
    10. '  ' → logprob: -17.500028610229492

Token 1915: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003210746217519045
    2. ',
' → logprob: -6.378210544586182
    3. '[' → logprob: -7.753210544586182
    4. '=' → logprob: -7.878210544586182
    5. '<|end|>' → logprob: -8.25321102142334
    6. ' ,' → logprob: -8.50321102142334
    7. '<|end|>' → logprob: -10.12821102142334
    8. ' =' → logprob: -10.37821102142334
    9. ')' → logprob: -10.37821102142334
    10. '0' → logprob: -10.75321102142334

Token 1916: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6782418489456177
    2. '       ' → logprob: -0.8032418489456177
    3. ',
' → logprob: -3.678241729736328
    4. '<|end|>' → logprob: -5.428241729736328
    5. '   ' → logprob: -6.303241729736328
    6. '        
' → logprob: -6.428241729736328
    7. 'while' → logprob: -6.553241729736328
    8. '           ' → logprob: -6.553241729736328
    9. ')' → logprob: -6.678241729736328
    10. ' ,' → logprob: -7.053241729736328

Token 1917: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.14819766581058502
    2. '       ' → logprob: -2.148197650909424
    3. ' for' → logprob: -3.898197650909424
    4. '   ' → logprob: -7.898197650909424
    5. '
' → logprob: -8.523198127746582
    6. 'if' → logprob: -8.898198127746582
    7. ',' → logprob: -10.648198127746582
    8. '           ' → logprob: -11.398198127746582
    9. ' if' → logprob: -11.523198127746582
    10. ' ' → logprob: -12.023198127746582

Token 1918: ' li' (ID: 3476)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4867457151412964
    2. 'l' → logprob: -0.9867457151412964
    3. 'i' → logprob: -4.861745834350586
    4. '(left' → logprob: -5.986745834350586
    5. 'li' → logprob: -6.861745834350586
    6. '   ' → logprob: -7.861745834350586
    7. ' left' → logprob: -7.861745834350586
    8. 'start' → logprob: -9.361745834350586
    9. ' l' → logprob: -9.486745834350586
    10. 'L' → logprob: -9.486745834350586

Token 1919: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03385327011346817
    2. ' ,' → logprob: -3.53385329246521
    3. '_,' → logprob: -6.283853054046631
    4. '   ' → logprob: -7.533853054046631
    5. ',right' → logprob: -7.783853054046631
    6. 'nt' → logprob: -8.783853530883789
    7. 'n' → logprob: -8.908853530883789
    8. ' in' → logprob: -9.283853530883789
    9. ',_' → logprob: -9.658853530883789
    10. 'ght' → logprob: -9.658853530883789

Token 1920: ' ri' (ID: 10274)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.4238465130329132
    2. 'ri' → logprob: -1.1738464832305908
    3. 'cr' → logprob: -3.548846483230591
    4. 'rir' → logprob: -6.17384672164917
    5. ' cur' → logprob: -6.42384672164917
    6. 'lr' → logprob: -7.29884672164917
    7. ' ri' → logprob: -7.42384672164917
    8. 'right' → logprob: -7.67384672164917
    9. 'li' → logprob: -7.92384672164917
    10. 'rr' → logprob: -8.173846244812012

Token 1921: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0737646147608757
    2. 'in' → logprob: -2.6987645626068115
    3. ',' → logprob: -5.573764801025391
    4. ' ,' → logprob: -11.32376480102539
    5. ',in' → logprob: -12.94876480102539
    6. ' ' → logprob: -13.32376480102539
    7. '_in' → logprob: -13.44876480102539
    8. '=' → logprob: -13.69876480102539
    9. '   ' → logprob: -13.94876480102539
    10. '	in' → logprob: -14.44876480102539

Token 1922: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.03497762605547905
    2. ' intervals' → logprob: -3.409977674484253
    3. 'range' → logprob: -7.409977436065674
    4. '(interval' → logprob: -7.909977436065674
    5. '   ' → logprob: -9.034977912902832
    6. ' ' → logprob: -9.284977912902832
    7. ',' → logprob: -10.409977912902832
    8. ' (' → logprob: -11.034977912902832
    9. ' range' → logprob: -11.284977912902832
    10. ')' → logprob: -11.409977912902832

Token 1923: '[' (ID: 58)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5050770044326782
    2. ' in' → logprob: -1.1300770044326782
    3. ',' → logprob: -2.6300768852233887
    4. ',in' → logprob: -7.755076885223389
    5. ' ,' → logprob: -8.505077362060547
    6. '[' → logprob: -8.630077362060547
    7. '_in' → logprob: -8.630077362060547
    8. '   ' → logprob: -9.380077362060547
    9. '	in' → logprob: -9.505077362060547
    10. '=' → logprob: -10.005077362060547

Token 1924: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000508591765537858
    2. 'range' → logprob: -8.125508308410645
    3. 'i' → logprob: -9.375508308410645
    4. ' ' → logprob: -9.875508308410645
    5. '(' → logprob: -10.375508308410645
    6. '   ' → logprob: -11.250508308410645
    7. ' range' → logprob: -11.375508308410645
    8. ',' → logprob: -12.250508308410645
    9. '0' → logprob: -12.375508308410645
    10. '(i' → logprob: -12.375508308410645

Token 1925: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002022258937358856
    2. 'in' → logprob: -7.1270222663879395
    3. ' in' → logprob: -7.3770222663879395
    4. ' ,' → logprob: -7.5020222663879395
    5. ',in' → logprob: -11.752021789550781
    6. ',right' → logprob: -12.502021789550781
    7. ',
' → logprob: -12.877021789550781
    8. ',j' → logprob: -13.002021789550781
    9. '_,' → logprob: -13.002021789550781
    10. ',i' → logprob: -13.127021789550781

Token 1926: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0759865865111351
    2. ':
' → logprob: -3.325986623764038
    3. ' if' → logprob: -3.700986623764038
    4. '       ' → logprob: -5.075986385345459
    5. '   ' → logprob: -6.075986385345459
    6. 'if' → logprob: -6.575986385345459
    7. ' ,' → logprob: -7.200986385345459
    8. ',
' → logprob: -7.575986385345459
    9. '           ' → logprob: -7.575986385345459
    10. ' in' → logprob: -8.075986862182617

Token 1927: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03806478902697563
    2. '       ' → logprob: -3.41306471824646
    3. ' if' → logprob: -5.663064956665039
    4. '   ' → logprob: -7.663064956665039
    5. 'if' → logprob: -7.913064956665039
    6. ',' → logprob: -10.038064956665039
    7. '```' → logprob: -10.788064956665039
    8. '               ' → logprob: -11.538064956665039
    9. '	       ' → logprob: -11.788064956665039
    10. '	   ' → logprob: -12.538064956665039

Token 1928: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2587091326713562
    2. ' if' → logprob: -1.508709192276001
    3. '           ' → logprob: -5.008708953857422
    4. '       ' → logprob: -9.633708953857422
    5. '               ' → logprob: -12.633708953857422
    6. '```' → logprob: -12.633708953857422
    7. '	if' → logprob: -12.883708953857422
    8. '   ' → logprob: -13.633708953857422
    9. '	       ' → logprob: -14.133708953857422
    10. ',' → logprob: -15.258708953857422

Token 1929: ' li' (ID: 3476)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.0019161454401910305
    2. 'li' → logprob: -6.62691593170166
    3. 'cur' → logprob: -7.50191593170166
    4. ' ri' → logprob: -10.37691593170166
    5. '   ' → logprob: -13.62691593170166
    6. 'rir' → logprob: -13.75191593170166
    7. 'rig' → logprob: -14.00191593170166
    8. 'ci' → logprob: -14.25191593170166
    9. 'ric' → logprob: -14.50191593170166
    10. '
' → logprob: -15.12691593170166

Token 1930: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5759409070014954
    2. ' <=' → logprob: -0.8259409070014954
    3. ')<=' → logprob: -14.82594108581543
    4. '```' → logprob: -15.70094108581543
    5. ']<=' → logprob: -15.95094108581543
    6. '≤' → logprob: -16.07594108581543
    7. ' ' → logprob: -16.07594108581543
    8. '<' → logprob: -16.32594108581543
    9. '[' → logprob: -16.45094108581543
    10. ' ≤' → logprob: -16.45094108581543

Token 1931: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.0206720617134124e-05
    2. ' cur' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.250009536743164
    4. 'max' → logprob: -19.500009536743164
    5. '	cur' → logprob: -20.625009536743164
    6. ' ' → logprob: -20.875009536743164
    7. 'curr' → logprob: -22.375009536743164
    8. '[cur' → logprob: -22.625009536743164
    9. '(cur' → logprob: -22.875009536743164
    10. '
' → logprob: -23.000009536743164

Token 1932: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -1.6240566083070007e-06
    2. 'right' → logprob: -13.750001907348633
    3. '_r' → logprob: -16.000001907348633
    4. 'Right' → logprob: -16.625001907348633
    5. '_RIGHT' → logprob: -16.625001907348633
    6. '_Right' → logprob: -16.750001907348633
    7. 'r' → logprob: -17.375001907348633
    8. '_' → logprob: -18.000001907348633
    9. '_left' → logprob: -19.000001907348633
    10. ' _' → logprob: -19.500001907348633

Token 1933: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.708777904510498
    2. ':
' → logprob: -1.083777904510498
    3. ' and' → logprob: -2.708777904510498
    4. '               ' → logprob: -3.208777904510498
    5. ':' → logprob: -3.833777904510498
    6. '+' → logprob: -3.833777904510498
    7. '       ' → logprob: -5.208777904510498
    8. '           ' → logprob: -5.208777904510498
    9. ' <' → logprob: -5.583777904510498
    10. ' or' → logprob: -6.833777904510498

Token 1934: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '0' → logprob: -15.500051498413086
    4. '   ' → logprob: -17.125051498413086
    5. '(' → logprob: -19.625051498413086
    6. '  ' → logprob: -20.625051498413086
    7. '-' → logprob: -20.625051498413086
    8. '```' → logprob: -20.750051498413086
    9. '
' → logprob: -21.125051498413086
    10. '2' → logprob: -21.375051498413086

Token 1935: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.750008583068848
    3. '0' → logprob: -14.125008583068848
    4. '   ' → logprob: -16.250009536743164
    5. '
' → logprob: -16.875009536743164
    6. '```' → logprob: -17.875009536743164
    7. '(' → logprob: -18.000009536743164
    8. '-' → logprob: -18.750009536743164
    9. '+' → logprob: -18.750009536743164
    10. '`' → logprob: -19.000009536743164

Token 1936: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -4.320199877838604e-07
    2. 'E' → logprob: -15.0
    3. '.' → logprob: -17.125
    4. '-' → logprob: -17.625
    5. ':
' → logprob: -19.75
    6. '           ' → logprob: -20.0
    7. '```' → logprob: -20.5
    8. '       ' → logprob: -21.25
    9. '.e' → logprob: -21.25
    10. ':' → logprob: -21.25

Token 1937: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. 'e' → logprob: -15.375
    3. ' -' → logprob: -16.375
    4. '```' → logprob: -19.25
    5. '^-' → logprob: -19.375
    6. '-e' → logprob: -20.0
    7. '−' → logprob: -20.75
    8. '   ' → logprob: -20.875
    9. '           ' → logprob: -21.375
    10. '(-' → logprob: -21.75

Token 1938: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.4468192160129547
    2. '12' → logprob: -1.4468191862106323
    3. '10' → logprob: -2.946819305419922
    4. '9' → logprob: -3.321819305419922
    5. '14' → logprob: -3.446819305419922
    6. '8' → logprob: -5.946819305419922
    7. '-' → logprob: -6.946819305419922
    8. '13' → logprob: -7.071819305419922
    9. '11' → logprob: -9.446819305419922
    10. '7' → logprob: -9.696819305419922

Token 1939: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16216902434825897
    2. '               ' → logprob: -2.7871689796447754
    3. ':
' → logprob: -3.1621689796447754
    4. 'and' → logprob: -3.5371689796447754
    5. ':' → logprob: -4.537168979644775
    6. '           ' → logprob: -5.162168979644775
    7. '       ' → logprob: -9.537169456481934
    8. ' or' → logprob: -10.287169456481934
    9. '              ' → logprob: -10.787169456481934
    10. ',' → logprob: -10.912169456481934

Token 1940: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000891332805622369
    2. 'cur' → logprob: -7.500891208648682
    3. ' cur' → logprob: -8.25089168548584
    4. '           ' → logprob: -10.00089168548584
    5. '```' → logprob: -11.37589168548584
    6. '[cur' → logprob: -12.37589168548584
    7. ' ' → logprob: -12.50089168548584
    8. '              ' → logprob: -13.00089168548584
    9. '                   ' → logprob: -13.12589168548584
    10. '   ' → logprob: -13.25089168548584

Token 1941: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.015468415804207325
    2. ' cur' → logprob: -4.265468597412109
    3. 'if' → logprob: -7.390468597412109
    4. '               ' → logprob: -7.765468597412109
    5. '                   ' → logprob: -8.64046859741211
    6. '           ' → logprob: -10.01546859741211
    7. ' if' → logprob: -10.64046859741211
    8. '[cur' → logprob: -12.39046859741211
    9. '                       ' → logprob: -12.76546859741211
    10. '_cur' → logprob: -13.01546859741211

Token 1942: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -1.0087516784551553e-05
    2. 'Right' → logprob: -12.00001049041748
    3. 'right' → logprob: -13.25001049041748
    4. '_left' → logprob: -14.50001049041748
    5. '_Right' → logprob: -14.50001049041748
    6. ' _' → logprob: -14.75001049041748
    7. '```' → logprob: -15.37501049041748
    8. '_RIGHT' → logprob: -15.50001049041748
    9. '	right' → logprob: -16.250009536743164
    10. '__' → logprob: -16.500009536743164

Token 1943: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751067981123924
    2. ' =' → logprob: -3.5297510623931885
    3. '=
' → logprob: -16.02975082397461
    4. '+=' → logprob: -16.02975082397461
    5. ',' → logprob: -16.27975082397461
    6. '=max' → logprob: -16.52975082397461
    7. '.=' → logprob: -16.90475082397461
    8. ' ' → logprob: -17.52975082397461
    9. ' +=' → logprob: -17.52975082397461
    10. '   ' → logprob: -17.52975082397461

Token 1944: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007100477814674377
    2. ' max' → logprob: -7.2507100105285645
    3. 'ri' → logprob: -16.125709533691406
    4. 'min' → logprob: -18.125709533691406
    5. '	max' → logprob: -18.375709533691406
    6. '(max' → logprob: -18.625709533691406
    7. '   ' → logprob: -20.750709533691406
    8. 'maximum' → logprob: -21.375709533691406
    9. '_max' → logprob: -21.375709533691406
    10. 'li' → logprob: -21.500709533691406

Token 1945: '(cur' (ID: 34723)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.318681188422488e-05
    2. '(cur' → logprob: -11.25001335144043
    3. ' cur' → logprob: -15.75001335144043
    4. '[cur' → logprob: -18.87501335144043
    5. '	cur' → logprob: -19.87501335144043
    6. '   ' → logprob: -20.62501335144043
    7. '_cur' → logprob: -22.37501335144043
    8. '.cur' → logprob: -22.75001335144043
    9. '```' → logprob: -24.62501335144043
    10. '               ' → logprob: -25.12501335144043

Token 1946: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -8.840432565193623e-05
    2. 'cur' → logprob: -10.000088691711426
    3. 'right' → logprob: -10.500088691711426
    4. '_cur' → logprob: -11.250088691711426
    5. 'Right' → logprob: -13.750088691711426
    6. '_' → logprob: -14.750088691711426
    7. 'r' → logprob: -14.875088691711426
    8. '_r' → logprob: -15.500088691711426
    9. '(cur' → logprob: -16.00008773803711
    10. ' cur' → logprob: -16.62508773803711

Token 1947: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001242772996192798
    2. ' ,' → logprob: -9.750123977661133
    3. 'cur' → logprob: -10.000123977661133
    4. '[cur' → logprob: -12.000123977661133
    5. ' cur' → logprob: -12.125123977661133
    6. ',
' → logprob: -12.125123977661133
    7. '(cur' → logprob: -12.875123977661133
    8. '_cur' → logprob: -15.375123977661133
    9. ',right' → logprob: -15.375123977661133
    10. '```' → logprob: -15.500123977661133

Token 1948: ' ri' (ID: 10274)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.0005548207554966211
    2. ' ri' → logprob: -7.500555038452148
    3. '   ' → logprob: -13.500555038452148
    4. ' ' → logprob: -15.750555038452148
    5. '
' → logprob: -15.875555038452148
    6. ' ' → logprob: -16.87555503845215
    7. '  ' → logprob: -17.12555503845215
    8. '       ' → logprob: -18.12555503845215
    9. '     ' → logprob: -18.12555503845215
    10. 'rii' → logprob: -18.37555503845215

Token 1949: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06259829550981522
    2. ')
' → logprob: -2.81259822845459
    3. '           ' → logprob: -7.81259822845459
    4. '       ' → logprob: -9.31259822845459
    5. '               ' → logprob: -9.43759822845459
    6. ' )' → logprob: -10.56259822845459
    7. ' )
' → logprob: -11.81259822845459
    8. '                   ' → logprob: -11.93759822845459
    9. '```' → logprob: -12.81259822845459
    10. '                       ' → logprob: -13.31259822845459

Token 1950: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10016903281211853
    2. '               ' → logprob: -2.9751689434051514
    3. 'else' → logprob: -3.6001689434051514
    4. ' else' → logprob: -4.1001691818237305
    5. '```' → logprob: -8.60016918182373
    6. '       ' → logprob: -8.72516918182373
    7. '                   ' → logprob: -10.85016918182373
    8. 'elif' → logprob: -12.97516918182373
    9. '[' → logprob: -13.22516918182373
    10. '                       ' → logprob: -13.35016918182373

Token 1951: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8700042366981506
    2. '       ' → logprob: -1.3700041770935059
    3. 'else' (adapté à ' else') → logprob: -1.3700041770935059
    4. ' else' → logprob: -2.620004177093506
    5. ',' → logprob: -11.745004653930664
    6. '   ' → logprob: -12.120004653930664
    7. '
' → logprob: -12.745004653930664
    8. 'elif' → logprob: -12.745004653930664
    9. '```' → logprob: -12.870004653930664
    10. ' elif' → logprob: -12.995004653930664

Token 1952: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13704948127269745
    2. ':
' → logprob: -2.137049436569214
    3. ':' → logprob: -5.012049674987793
    4. ',' → logprob: -6.012049674987793
    5. '           ' → logprob: -7.762049674987793
    6. '):
' → logprob: -8.637049674987793
    7. '.' → logprob: -9.762049674987793
    8. ')' → logprob: -9.887049674987793
    9. '[' → logprob: -10.137049674987793
    10. '       ' → logprob: -10.137049674987793

Token 1953: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015188653953373432
    2. '       ' → logprob: -4.515188694000244
    3. 'merged' → logprob: -5.765188694000244
    4. ' merged' → logprob: -7.515188694000244
    5. '           ' → logprob: -8.015188217163086
    6. ',' → logprob: -9.640188217163086
    7. ' ' → logprob: -11.515188217163086
    8. '   ' → logprob: -12.140188217163086
    9. '+' → logprob: -12.265188217163086
    10. '```' → logprob: -12.390188217163086

Token 1954: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' (adapté à ' merged') → logprob: -0.01135195977985859
    2. ' merged' → logprob: -4.511352062225342
    3. '               ' → logprob: -8.136351585388184
    4. '       ' → logprob: -11.761351585388184
    5. '           ' → logprob: -13.261351585388184
    6. '   ' → logprob: -14.261351585388184
    7. '                   ' → logprob: -14.261351585388184
    8. ' ' → logprob: -15.511351585388184
    9. 'Merged' → logprob: -15.886351585388184
    10. '#' → logprob: -16.1363525390625

Token 1955: '.append' (ID: 3709)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12884458899497986
    2. '.append' → logprob: -2.1288444995880127
    3. '.' → logprob: -7.128844738006592
    4. '=' → logprob: -7.253844738006592
    5. '.extend' → logprob: -9.378844261169434
    6. ',
' → logprob: -9.753844261169434
    7. ' =' → logprob: -10.003844261169434
    8. '+=' → logprob: -10.378844261169434
    9. '```' → logprob: -10.628844261169434
    10. '           ' → logprob: -10.753844261169434

Token 1956: '((' (ID: 2054)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cur' → logprob: -1.6166903151315637e-05
    2. ' (' → logprob: -11.250016212463379
    3. '(current' → logprob: -13.375016212463379
    4. '[cur' → logprob: -14.375016212463379
    5. '(curr' → logprob: -14.625016212463379
    6. '(' → logprob: -15.750016212463379
    7. '   ' → logprob: -16.000015258789062
    8. 'cur' → logprob: -16.375015258789062
    9. '(c' → logprob: -17.000015258789062
    10. '(prev' → logprob: -17.375015258789062

Token 1957: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.9361264946837764e-07
    2. ' cur' → logprob: -16.125
    3. '	cur' → logprob: -19.375
    4. '(cur' → logprob: -19.625
    5. '[cur' → logprob: -19.75
    6. '   ' → logprob: -21.375
    7. '
' → logprob: -21.875
    8. '_cur' → logprob: -22.375
    9. '.cur' → logprob: -23.125
    10. '```' → logprob: -23.875

Token 1958: '_left' (ID: 22189)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.023281587287783623
    2. '_left' → logprob: -3.7732815742492676
    3. 'right' → logprob: -10.523282051086426
    4. 'Right' → logprob: -12.023282051086426
    5. 'cur' → logprob: -13.273282051086426
    6. 'left' → logprob: -14.523282051086426
    7. '_cur' → logprob: -14.648282051086426
    8. '_RIGHT' → logprob: -15.898282051086426
    9. '_Right' → logprob: -16.39828109741211
    10. '1' → logprob: -16.77328109741211

Token 1959: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. ',
' → logprob: -11.00002384185791
    3. ' ,' → logprob: -13.62502384185791
    4. '   ' → logprob: -14.25002384185791
    5. '       ' → logprob: -14.62502384185791
    6. '```' → logprob: -14.75002384185791
    7. '),' → logprob: -14.87502384185791
    8. '[cur' → logprob: -15.00002384185791
    9. '           ' → logprob: -15.00002384185791
    10. ',current' → logprob: -15.12502384185791

Token 1960: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.306760805164231e-05
    2. ' cur' → logprob: -11.25001335144043
    3. '	cur' → logprob: -18.37501335144043
    4. '               ' → logprob: -20.12501335144043
    5. '
' → logprob: -21.00001335144043
    6. '   ' → logprob: -21.12501335144043
    7. '[cur' → logprob: -21.62501335144043
    8. '(cur' → logprob: -21.75001335144043
    9. '                   ' → logprob: -21.87501335144043
    10. '_cur' → logprob: -22.25001335144043

Token 1961: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.023800896480679512
    2. 'ight' → logprob: -3.773800849914551
    3. 'right' → logprob: -7.523800849914551
    4. '_left' → logprob: -12.27380084991455
    5. 'Right' → logprob: -12.27380084991455
    6. 'igh' → logprob: -12.64880084991455
    7. 'ght' → logprob: -14.77380084991455
    8. '
' → logprob: -15.14880084991455
    9. 'igth' → logprob: -15.14880084991455
    10. 'i' → logprob: -15.39880084991455

Token 1962: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5012469291687012
    2. ')' → logprob: -1.0012469291687012
    3. '))
' → logprob: -3.876246929168701
    4. '))' → logprob: -5.626246929168701
    5. ',' → logprob: -6.251246929168701
    6. '               ' → logprob: -8.00124740600586
    7. '       ' → logprob: -9.87624740600586
    8. '           ' → logprob: -10.62624740600586
    9. ',
' → logprob: -10.75124740600586
    10. ')')
' → logprob: -11.25124740600586

Token 1963: '               ' (ID: 506)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.41288086771965027
    2. '               ' → logprob: -1.1628808975219727
    3. ' cur' → logprob: -4.287880897521973
    4. '       ' → logprob: -4.662880897521973
    5. '```' → logprob: -6.412880897521973
    6. '``' → logprob: -8.037880897521973
    7. '
' → logprob: -8.537880897521973
    8. '           ' → logprob: -9.037880897521973
    9. '(cur' → logprob: -9.287880897521973
    10. '[cur' → logprob: -9.537880897521973

Token 1964: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -3.650518920039758e-06
    2. '(cur' → logprob: -13.250003814697266
    3. ' cur' → logprob: -13.875003814697266
    4. '               ' → logprob: -14.375003814697266
    5. '       ' → logprob: -15.500003814697266
    6. '           ' → logprob: -16.625003814697266
    7. '	cur' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.375003814697266
    9. '_cur' → logprob: -19.250003814697266
    10. '
' → logprob: -19.375003814697266

Token 1965: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0031781906727701426
    2. '_right' → logprob: -5.753178119659424
    3. '_Left' → logprob: -15.628178596496582
    4. 'Left' → logprob: -16.003177642822266
    5. '_LEFT' → logprob: -16.128177642822266
    6. '_' → logprob: -17.003177642822266
    7. '_l' → logprob: -18.128177642822266
    8. '_le' → logprob: -18.378177642822266
    9. 'left' → logprob: -18.503177642822266
    10. '_inter' → logprob: -18.878177642822266

Token 1966: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.349738210439682
    2. '=' → logprob: -1.2247382402420044
    3. ' =' → logprob: -6.724738121032715
    4. ' ,' → logprob: -9.599738121032715
    5. ',
' → logprob: -12.099738121032715
    6. ')' → logprob: -12.224738121032715
    7. '```' → logprob: -12.849738121032715
    8. '           ' → logprob: -13.349738121032715
    9. '=
' → logprob: -14.099738121032715
    10. '<|end|>' → logprob: -14.099738121032715

Token 1967: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0011703446507453918
    2. ' cur' → logprob: -6.7511701583862305
    3. '[cur' → logprob: -17.251171112060547
    4. '_cur' → logprob: -17.751171112060547
    5. 'curr' → logprob: -18.501171112060547
    6. '	cur' → logprob: -18.751171112060547
    7. '(cur' → logprob: -19.126171112060547
    8. 'cu' → logprob: -19.126171112060547
    9. '
' → logprob: -20.501171112060547
    10. ' curt' → logprob: -21.126171112060547

Token 1968: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.02336951531469822
    2. 'right' → logprob: -3.773369550704956
    3. 'ight' → logprob: -9.273369789123535
    4. 'Right' → logprob: -10.773369789123535
    5. 'ri' → logprob: -12.023369789123535
    6. '_left' → logprob: -13.898369789123535
    7. '
' → logprob: -14.398369789123535
    8. '_RIGHT' → logprob: -14.773369789123535
    9. 'cur' → logprob: -14.898369789123535
    10. ' right' → logprob: -15.773369789123535

Token 1969: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048408225178719
    2. ' =' → logprob: -4.511048316955566
    3. ',' → logprob: -14.886048316955566
    4. '=
' → logprob: -15.511048316955566
    5. ')' → logprob: -17.511049270629883
    6. ' ' → logprob: -18.636049270629883
    7. '   ' → logprob: -18.886049270629883
    8. '=

' → logprob: -19.511049270629883
    9. '```' → logprob: -20.261049270629883
    10. ')=' → logprob: -20.261049270629883

Token 1970: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -3.5597102396423e-05
    2. ' li' → logprob: -10.500035285949707
    3. '(li' → logprob: -11.750035285949707
    4. '<li' → logprob: -16.500036239624023
    5. '_li' → logprob: -19.375036239624023
    6. '(' → logprob: -19.500036239624023
    7. 'la' → logprob: -20.625036239624023
    8. 'Li' → logprob: -20.750036239624023
    9. '   ' → logprob: -21.125036239624023
    10. '.li' → logprob: -21.125036239624023

Token 1971: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019635679200291634
    2. ',
' → logprob: -4.0196356773376465
    3. '               ' → logprob: -6.8946356773376465
    4. '
' → logprob: -8.644636154174805
    5. ' ,' → logprob: -9.144636154174805
    6. ',true' → logprob: -10.269636154174805
    7. '_,' → logprob: -10.394636154174805
    8. ',right' → logprob: -10.519636154174805
    9. '```' → logprob: -10.894636154174805
    10. ',None' → logprob: -11.144636154174805

Token 1972: ' ri' (ID: 10274)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.0007327937055379152
    2. ' ri' → logprob: -7.250732898712158
    3. 'cur' → logprob: -10.750732421875
    4. '   ' → logprob: -14.875732421875
    5. ' ' → logprob: -15.500732421875
    6. 'rii' → logprob: -15.500732421875
    7. ' ' → logprob: -15.750732421875
    8. '
' → logprob: -15.750732421875
    9. 'rir' → logprob: -16.125732421875
    10. 'r' → logprob: -16.875732421875

Token 1973: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.566264295950532e-05
    2. '
' → logprob: -9.500085830688477
    3. 'merged' → logprob: -11.750085830688477
    4. '[' → logprob: -13.875085830688477
    5. '```' → logprob: -14.125085830688477
    6. '   ' → logprob: -15.000085830688477
    7. '        
' → logprob: -15.750085830688477
    8. ' merged' → logprob: -16.500085830688477
    9. ')
' → logprob: -16.625085830688477
    10. '1' → logprob: -16.750085830688477

Token 1974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.400689305039123e-05
    2. 'merged' → logprob: -9.375094413757324
    3. '```' → logprob: -12.375094413757324
    4. '
' → logprob: -12.625094413757324
    5. '               ' → logprob: -14.750094413757324
    6. '   ' → logprob: -14.875094413757324
    7. ' merged' → logprob: -15.500094413757324
    8. '           ' → logprob: -15.750094413757324
    9. '``' → logprob: -15.875094413757324
    10. '[' → logprob: -15.875094413757324

Token 1975: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' (adapté à ' merged') → logprob: -0.16090098023414612
    2. '       ' → logprob: -1.9109009504318237
    3. ' merged' → logprob: -7.410901069641113
    4. '
' → logprob: -9.785901069641113
    5. '   ' → logprob: -11.660901069641113
    6. '```' → logprob: -12.535901069641113
    7. '#' → logprob: -14.035901069641113
    8. 'merge' → logprob: -14.660901069641113
    9. 'Merged' → logprob: -14.660901069641113
    10. '[' → logprob: -14.910901069641113

Token 1976: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006743087433278561
    2. ',' → logprob: -8.2506742477417
    3. '.' → logprob: -8.2506742477417
    4. '       ' → logprob: -9.5006742477417
    5. 'append' → logprob: -9.8756742477417
    6. '           ' → logprob: -11.2506742477417
    7. ',
' → logprob: -13.0006742477417
    8. ' .' → logprob: -13.7506742477417
    9. 'Append' → logprob: -13.7506742477417
    10. '.
' → logprob: -13.8756742477417

Token 1977: '((' (ID: 2054)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.00025549851125106215
    2. '((' → logprob: -8.375255584716797
    3. '(' → logprob: -11.125255584716797
    4. '   ' → logprob: -12.000255584716797
    5. ' (' → logprob: -13.125255584716797
    6. '       ' → logprob: -14.375255584716797
    7. '(curr' → logprob: -14.750255584716797
    8. ' ' → logprob: -14.750255584716797
    9. '(current' → logprob: -15.250255584716797
    10. '[cur' → logprob: -15.625255584716797

Token 1978: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -3.128163257315464e-07
    2. ' cur' → logprob: -15.125
    3. '(cur' → logprob: -18.5
    4. '	cur' → logprob: -19.375
    5. '   ' → logprob: -19.75
    6. '_cur' → logprob: -20.875
    7. '[cur' → logprob: -21.25
    8. '       ' → logprob: -22.625
    9. '.cur' → logprob: -23.0
    10. '
' → logprob: -23.125

Token 1979: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.03812812268733978
    2. '_right' → logprob: -3.288128137588501
    3. 'left' → logprob: -9.538127899169922
    4. 'Left' → logprob: -11.663127899169922
    5. 'right' → logprob: -12.663127899169922
    6. 'Right' → logprob: -13.413127899169922
    7. '_LEFT' → logprob: -14.538127899169922
    8. '_cur' → logprob: -15.913127899169922
    9. '_Left' → logprob: -15.913127899169922
    10. '[' → logprob: -16.288127899169922

Token 1980: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ',
' → logprob: -12.500005722045898
    3. ' ,' → logprob: -13.125005722045898
    4. '       ' → logprob: -17.6250057220459
    5. ',user' → logprob: -18.1250057220459
    6. ',current' → logprob: -18.1250057220459
    7. '),' → logprob: -18.2500057220459
    8. '   ' → logprob: -18.2500057220459
    9. '
' → logprob: -18.3750057220459
    10. ',c' → logprob: -18.5000057220459

Token 1981: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00033558503491804004
    2. ' cur' → logprob: -8.000335693359375
    3. '	cur' → logprob: -16.500335693359375
    4. 'curr' → logprob: -17.250335693359375
    5. '   ' → logprob: -17.875335693359375
    6. '(cur' → logprob: -18.250335693359375
    7. '_cur' → logprob: -18.625335693359375
    8. '       ' → logprob: -18.875335693359375
    9. ' ' → logprob: -19.000335693359375
    10. 'Cur' → logprob: -19.375335693359375

Token 1982: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00312554812990129
    2. 'right' → logprob: -5.8781256675720215
    3. 'ight' → logprob: -8.128125190734863
    4. 'Right' → logprob: -10.628125190734863
    5. '_RIGHT' → logprob: -15.128125190734863
    6. '_left' → logprob: -15.628125190734863
    7. 'ght' → logprob: -15.628125190734863
    8. 'igh' → logprob: -15.753125190734863
    9. ' right' → logprob: -15.878125190734863
    10. 'rightness' → logprob: -16.25312614440918

Token 1983: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030121726449579
    2. ')
' → logprob: -5.878012180328369
    3. '       ' → logprob: -8.503011703491211
    4. '))' → logprob: -12.503011703491211
    5. ')

' → logprob: -16.00301170349121
    6. ')`' → logprob: -16.25301170349121
    7. ')
' → logprob: -16.37801170349121
    8. '),' → logprob: -16.50301170349121
    9. '))
' → logprob: -16.50301170349121
    10. '   ' → logprob: -16.62801170349121

Token 1984: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14644832909107208
    2. '
' → logprob: -2.0214483737945557
    3. '```' → logprob: -5.896448135375977
    4. 'def' → logprob: -7.646448135375977
    5. '        
' → logprob: -8.271448135375977
    6. '#' → logprob: -9.271448135375977
    7. 'segments' → logprob: -9.521448135375977
    8. '   ' → logprob: -10.271448135375977
    9. '``' → logprob: -10.771448135375977
    10. '
' → logprob: -11.271448135375977

Token 1985: ' #' (ID: 1069)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.3200732171535492
    2. '       ' → logprob: -1.6950732469558716
    3. 'result' → logprob: -2.445073127746582
    4. 'res' → logprob: -6.820073127746582
    5. 'segments' → logprob: -6.945073127746582
    6. 'available' → logprob: -8.445073127746582
    7. 'results' → logprob: -8.445073127746582
    8. 'def' → logprob: -8.945073127746582
    9. ' free' → logprob: -8.945073127746582
    10. 'g' → logprob: -9.070073127746582

Token 1986: ' Sub' (ID: 5934)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.1764378696680069
    2. 'result' → logprob: -1.9264378547668457
    3. 'res' → logprob: -4.926437854766846
    4. '       ' → logprob: -5.301437854766846
    5. '   ' → logprob: -6.926437854766846
    6. 'segments' → logprob: -7.051437854766846
    7. 'def' → logprob: -7.801437854766846
    8. '#' → logprob: -8.051438331604004
    9. 'new' → logprob: -8.176438331604004
    10. 'available' → logprob: -8.426438331604004

Token 1987: 'tract' (ID: 2642)
  Prédit: 'tract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tract' → logprob: -0.0002625278721097857
    2. 'stract' → logprob: -8.375262260437012
    3. 'tr' → logprob: -11.250262260437012
    4. '       ' → logprob: -11.875262260437012
    5. 'tracted' → logprob: -12.125262260437012
    6. '#' → logprob: -13.250262260437012
    7. 'segments' → logprob: -14.000262260437012
    8. 'truct' → logprob: -14.250262260437012
    9. '
' → logprob: -14.250262260437012
    10. 'free' → logprob: -14.375262260437012

Token 1988: ' merged' (ID: 49536)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.3179337680339813
    2. 'result' → logprob: -1.6929337978363037
    3. 'prev' → logprob: -3.9429337978363037
    4. 'corr' → logprob: -4.317933559417725
    5. 'segments' → logprob: -4.567933559417725
    6. 'curr' → logprob: -4.817933559417725
    7. 'current' → logprob: -4.942933559417725
    8. 'sub' → logprob: -5.317933559417725
    9. 'cur' → logprob: -5.567933559417725
    10. 'remaining' → logprob: -5.692933559417725

Token 1989: ' intervals' (ID: 49900)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.9868876934051514
    2. 'segments' → logprob: -1.2368876934051514
    3. 'corr' → logprob: -1.3618876934051514
    4. 'interval' → logprob: -2.7368876934051514
    5. 'prev' → logprob: -5.3618879318237305
    6. 'g' → logprob: -6.3618879318237305
    7. 'curr' → logprob: -6.9868879318237305
    8. 'spaces' → logprob: -6.9868879318237305
    9. 'last' → logprob: -7.2368879318237305
    10. '   ' → logprob: -7.2368879318237305

Token 1990: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0963444709777832
    2. '       ' → logprob: -1.3463444709777832
    3. 'result' → logprob: -1.4713444709777832
    4. ',' → logprob: -2.471344470977783
    5. 'segments' → logprob: -3.471344470977783
    6. 'free' → logprob: -3.846344470977783
    7. ' from' → logprob: -4.346344470977783
    8. '```' → logprob: -5.346344470977783
    9. '
' → logprob: -5.471344470977783
    10. 'results' → logprob: -5.971344470977783

Token 1991: ' corridor' (ID: 92467)
  Prédit: 'corr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corr' → logprob: -0.1150890588760376
    2. '[(' → logprob: -2.865088939666748
    3. '[]
' → logprob: -3.115088939666748
    4. '0' → logprob: -6.240088939666748
    5. 'interval' → logprob: -6.865088939666748
    6. '[]' → logprob: -7.240088939666748
    7. 'segments' → logprob: -7.240088939666748
    8. '[' → logprob: -7.240088939666748
    9. '[
' → logprob: -7.365088939666748
    10. 'cor' → logprob: -7.865088939666748

Token 1992: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.508466362953186
    2. 'result' → logprob: -1.508466362953186
    3. 'segments' → logprob: -2.6334662437438965
    4. ',' → logprob: -3.0084662437438965
    5. '
' → logprob: -4.0084662437438965
    6. 'free' → logprob: -4.6334662437438965
    7. 'res' → logprob: -5.3834662437438965
    8. 'results' → logprob: -5.7584662437438965
    9. '```' → logprob: -5.8834662437438965
    10. ',
' → logprob: -6.3834662437438965

Token 1993: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21036091446876526
    2. 'segments' → logprob: -2.2103610038757324
    3. '[
' → logprob: -3.2103610038757324
    4. ',' → logprob: -3.9603610038757324
    5. '[' → logprob: -5.210361003875732
    6. '```' → logprob: -5.585361003875732
    7. 'result' → logprob: -5.835361003875732
    8. '   ' → logprob: -6.210361003875732
    9. ',
' → logprob: -6.960361003875732
    10. 'curr' → logprob: -7.085361003875732

Token 1994: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' (adapté à ' free') → logprob: -0.41385459899902344
    2. 'result' → logprob: -1.2888545989990234
    3. '       ' → logprob: -3.4138545989990234
    4. 'res' → logprob: -4.538854598999023
    5. ' free' → logprob: -4.788854598999023
    6. 'segments' → logprob: -5.163854598999023
    7. ' result' → logprob: -5.788854598999023
    8. 'results' → logprob: -7.538854598999023
    9. 'out' → logprob: -7.663854598999023
    10. 'remaining' → logprob: -7.788854598999023

Token 1995: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.4504980444908142
    2. '_inter' → logprob: -1.450498104095459
    3. ' =' → logprob: -2.700498104095459
    4. '_spaces' → logprob: -3.825498104095459
    5. 's' → logprob: -3.950498104095459
    6. '_' → logprob: -4.700498104095459
    7. '=' → logprob: -5.200498104095459
    8. '_ranges' → logprob: -6.075498104095459
    9. '_corr' → logprob: -7.825498104095459
    10. '_space' → logprob: -7.950498104095459

Token 1996: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933619976043701
    2. ' =' → logprob: -0.6933619976043701
    3. '=[]
' → logprob: -9.56836223602295
    4. ':' → logprob: -9.81836223602295
    5. 's' → logprob: -10.19336223602295
    6. '=[]' → logprob: -10.56836223602295
    7. '       ' → logprob: -11.94336223602295
    8. '[' → logprob: -12.31836223602295
    9. ',' → logprob: -12.44336223602295
    10. '   ' → logprob: -12.44336223602295

Token 1997: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.0009201543871313334
    2. '[]' → logprob: -7.000920295715332
    3. '[]

' → logprob: -11.750920295715332
    4. '[(' → logprob: -14.250920295715332
    5. ' []
' → logprob: -15.750920295715332
    6. '[])
' → logprob: -18.625919342041016
    7. '[' → logprob: -19.125919342041016
    8. '   ' → logprob: -20.375919342041016
    9. '[
' → logprob: -20.500919342041016
    10. '       ' → logprob: -20.625919342041016

Token 1998: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015897223725914955
    2. 'prev' → logprob: -5.140897274017334
    3. 'cur' → logprob: -5.765897274017334
    4. '[' → logprob: -6.390897274017334
    5. ',' → logprob: -6.765897274017334
    6. '[
' → logprob: -7.140897274017334
    7. '```' → logprob: -7.140897274017334
    8. 'for' → logprob: -7.515897274017334
    9. '   ' → logprob: -7.765897274017334
    10. 'i' → logprob: -7.765897274017334

Token 1999: ' left' (ID: 3561)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.5356156826019287
    2. 'prev' → logprob: -1.0356156826019287
    3. '       ' → logprob: -3.5356156826019287
    4. 'last' → logprob: -4.035615921020508
    5. 'curr' → logprob: -4.660615921020508
    6. 'current' → logprob: -6.160615921020508
    7. 'for' → logprob: -7.160615921020508
    8. 'left' (adapté à ' left') → logprob: -8.535615921020508
    9. 'start' → logprob: -8.910615921020508
    10. '   ' → logprob: -9.535615921020508

Token 2000: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034080516546964645
    2. ',' → logprob: -3.7840805053710938
    3. ' =' → logprob: -4.534080505371094
    4. ' ,' → logprob: -11.159080505371094
    5. '0' → logprob: -11.909080505371094
    6. '_,' → logprob: -12.409080505371094
    7. '_=' → logprob: -13.034080505371094
    8. '=
' → logprob: -13.409080505371094
    9. ',right' → logprob: -13.784080505371094
    10. '_' → logprob: -13.909080505371094

Token 2001: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.133198283147067e-05
    2. ' ' → logprob: -10.000051498413086
    3. '       ' → logprob: -12.875051498413086
    4. '   ' → logprob: -13.250051498413086
    5. '           ' → logprob: -15.125051498413086
    6. 'corr' → logprob: -15.875051498413086
    7. 'segments' → logprob: -16.000051498413086
    8. '        ' → logprob: -16.250051498413086
    9. 'c' → logprob: -16.375051498413086
    10. 'float' → logprob: -16.625051498413086

Token 2002: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8550976164988242e-05
    2. ' ' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.125018119812012
    4. '       ' → logprob: -15.250018119812012
    5. '           ' → logprob: -16.250019073486328
    6. 'float' → logprob: -16.500019073486328
    7. 'corr' → logprob: -16.500019073486328
    8. '  ' → logprob: -16.875019073486328
    9. 'segments' → logprob: -17.125019073486328
    10. '        ' → logprob: -17.250019073486328

Token 2003: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007445951923727989
    2. ',' → logprob: -5.132445812225342
    3. '=' → logprob: -6.632445812225342
    4. '0' → logprob: -9.1324462890625
    5. '       ' → logprob: -10.3824462890625
    6. ' =' → logprob: -10.7574462890625
    7. ',
' → logprob: -11.2574462890625
    8. '.
' → logprob: -11.2574462890625
    9. ' ,' → logprob: -13.0074462890625
    10. '```' → logprob: -13.0074462890625

Token 2004: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '       ' → logprob: -14.875000953674316
    3. '   ' → logprob: -15.250000953674316
    4. ' ' → logprob: -16.0
    5. '```' → logprob: -17.125
    6. '.' → logprob: -17.25
    7. '        ' → logprob: -18.0
    8. 'def' → logprob: -18.25
    9. '           ' → logprob: -18.625
    10. '    ' → logprob: -19.125

Token 2005: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012621482834219933
    2. '       ' → logprob: -5.1376214027404785
    3. ',
' → logprob: -5.5126214027404785
    4. '
' → logprob: -6.7626214027404785
    5. 'for' → logprob: -7.6376214027404785
    6. '0' → logprob: -8.387621879577637
    7. '=' → logprob: -8.887621879577637
    8. ',right' → logprob: -8.887621879577637
    9. 'while' → logprob: -9.137621879577637
    10. ' ,' → logprob: -9.137621879577637

Token 2006: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002602887572720647
    2. 'for' → logprob: -6.002603054046631
    3. '0' → logprob: -10.252602577209473
    4. '
' → logprob: -10.502602577209473
    5. ',' → logprob: -10.877602577209473
    6. ' for' → logprob: -11.877602577209473
    7. '   ' → logprob: -12.002602577209473
    8. '.' → logprob: -12.377602577209473
    9. '[' → logprob: -12.377602577209473
    10. 'while' → logprob: -12.502602577209473

Token 2007: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026349881663918495
    2. '       ' → logprob: -3.6513497829437256
    3. ' for' → logprob: -10.276350021362305
    4. '           ' → logprob: -12.151350021362305
    5. 'while' → logprob: -12.401350021362305
    6. '	for' → logprob: -13.026350021362305
    7. '   ' → logprob: -14.026350021362305
    8. '0' → logprob: -14.151350021362305
    9. 'segments' → logprob: -14.776350021362305
    10. 'right' → logprob: -14.901350021362305

Token 2008: ' li' (ID: 3476)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.5071238279342651
    2. 'l' → logprob: -1.5071238279342651
    3. 'start' → logprob: -3.2571239471435547
    4. 'li' → logprob: -3.5071239471435547
    5. 'ms' → logprob: -3.7571239471435547
    6. 'm' → logprob: -4.132123947143555
    7. 'ml' → logprob: -4.632123947143555
    8. 'fr' → logprob: -4.757123947143555
    9. 'r' → logprob: -5.007123947143555
    10. '(l' → logprob: -5.132123947143555

Token 2009: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038419815246015787
    2. ' ,' → logprob: -8.500384330749512
    3. '       ' → logprob: -9.500384330749512
    4. '_,' → logprob: -10.625384330749512
    5. ',
' → logprob: -10.625384330749512
    6. '           ' → logprob: -10.875384330749512
    7. '=' → logprob: -12.125384330749512
    8. ',l' → logprob: -12.625384330749512
    9. '   ' → logprob: -12.750384330749512
    10. '<=' → logprob: -13.000384330749512

Token 2010: ' ri' (ID: 10274)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.0007386347278952599
    2. ' ri' → logprob: -7.250738620758057
    3. 'left' → logprob: -11.125739097595215
    4. 'lr' → logprob: -11.750739097595215
    5. 'right' → logprob: -12.500739097595215
    6. 'li' → logprob: -14.875739097595215
    7. 'lf' → logprob: -15.250739097595215
    8. 'lj' → logprob: -15.375739097595215
    9. '   ' → logprob: -15.500739097595215
    10. 'lo' → logprob: -15.625739097595215

Token 2011: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8489403128623962
    2. 'in' → logprob: -1.223940372467041
    3. ',' → logprob: -1.348940372467041
    4. ':' → logprob: -5.098940372467041
    5. ':
' → logprob: -5.098940372467041
    6. '       ' → logprob: -5.973940372467041
    7. ' ,' → logprob: -6.598940372467041
    8. '           ' → logprob: -7.348940372467041
    9. '=' → logprob: -7.848940372467041
    10. '[' → logprob: -8.473939895629883

Token 2012: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.0040655783377587795
    2. 'left' → logprob: -6.12906551361084
    3. 'right' → logprob: -6.75406551361084
    4. ' merged' → logprob: -8.12906551361084
    5. 'ri' → logprob: -9.12906551361084
    6. 'li' → logprob: -9.12906551361084
    7. '(' → logprob: -9.25406551361084
    8. 'free' → logprob: -10.12906551361084
    9. '(left' → logprob: -11.25406551361084
    10. '[' → logprob: -11.75406551361084

Token 2013: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31020838022232056
    2. ':' → logprob: -1.8102083206176758
    3. '       ' → logprob: -2.435208320617676
    4. ',' → logprob: -4.810208320617676
    5. '           ' → logprob: -6.435208320617676
    6. ' if' → logprob: -7.185208320617676
    7. '        ' → logprob: -7.185208320617676
    8. 'if' → logprob: -7.310208320617676
    9. '<|end|>' → logprob: -7.310208320617676
    10. '=' → logprob: -7.435208320617676

Token 2014: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0634753480553627
    2. '           ' → logprob: -2.8134753704071045
    3. ' if' → logprob: -7.188475131988525
    4. 'if' → logprob: -7.438475131988525
    5. '   ' → logprob: -9.063475608825684
    6. '```' → logprob: -10.563475608825684
    7. ',' → logprob: -12.063475608825684
    8. '	if' → logprob: -12.438475608825684
    9. '#' → logprob: -13.063475608825684
    10. '	' → logprob: -13.313475608825684

Token 2015: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10420217365026474
    2. '           ' → logprob: -2.8542022705078125
    3. '       ' → logprob: -3.2292022705078125
    4. 'free' → logprob: -6.8542022705078125
    5. ' if' → logprob: -7.3542022705078125
    6. '   ' → logprob: -9.979202270507812
    7. '               ' → logprob: -10.979202270507812
    8. '	if' → logprob: -12.604202270507812
    9. ' free' → logprob: -13.354202270507812
    10. '```' → logprob: -14.604202270507812

Token 2016: ' li' (ID: 3476)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.03781837597489357
    2. 'li' → logprob: -3.412818431854248
    3. ' left' → logprob: -5.537818431854248
    4. ' li' → logprob: -9.41281795501709
    5. 'right' → logprob: -9.78781795501709
    6. 'ri' → logprob: -10.28781795501709
    7. '	left' → logprob: -10.41281795501709
    8. '   ' → logprob: -12.28781795501709
    9. ' ri' → logprob: -12.78781795501709
    10. '<li' → logprob: -12.78781795501709

Token 2017: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.616030752658844
    2. '>' → logprob: -0.866030752658844
    3. ' <' → logprob: -3.741030693054199
    4. '<' → logprob: -4.241030693054199
    5. ' -' → logprob: -8.4910306930542
    6. '<|end|>' → logprob: -8.8660306930542
    7. ' ' → logprob: -8.9910306930542
    8. '>
' → logprob: -9.2410306930542
    9. ' >
' → logprob: -9.3660306930542
    10. '-' → logprob: -9.3660306930542

Token 2018: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0007118358626030385
    2. ' left' → logprob: -7.250711917877197
    3. '   ' → logprob: -14.000711441040039
    4. 'right' → logprob: -14.375711441040039
    5. '	left' → logprob: -15.750711441040039
    6. '
' → logprob: -16.37571144104004
    7. '1' → logprob: -16.62571144104004
    8. '           ' → logprob: -16.87571144104004
    9. '[left' → logprob: -16.87571144104004
    10. '       ' → logprob: -17.62571144104004

Token 2019: ' +' (ID: 659)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8359451293945312
    2. ':
' → logprob: -1.3359451293945312
    3. ' and' → logprob: -1.7109451293945312
    4. 'and' → logprob: -2.7109451293945312
    5. ':' → logprob: -3.7109451293945312
    6. '+' → logprob: -3.9609451293945312
    7. ' +' → logprob: -4.835945129394531
    8. ',' → logprob: -6.210945129394531
    9. '           ' → logprob: -6.335945129394531
    10. '[' → logprob: -8.210945129394531

Token 2020: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. '0' → logprob: -15.250059127807617
    4. '   ' → logprob: -15.375059127807617
    5. '           ' → logprob: -17.625059127807617
    6. '+' → logprob: -17.625059127807617
    7. '-' → logprob: -17.875059127807617
    8. '
' → logprob: -17.875059127807617
    9. '       ' → logprob: -18.625059127807617
    10. '    ' → logprob: -18.750059127807617

Token 2021: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.875003814697266
    4. '0' → logprob: -19.375003814697266
    5. '=' → logprob: -19.625003814697266
    6. '           ' → logprob: -19.875003814697266
    7. '```' → logprob: -19.875003814697266
    8. '-' → logprob: -20.000003814697266
    9. '       ' → logprob: -20.875003814697266
    10. '  ' → logprob: -20.875003814697266

Token 2022: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0003013809327967465
    2. '.' → logprob: -8.125301361083984
    3. '-' → logprob: -13.000301361083984
    4. '.e' → logprob: -13.375301361083984
    5. '[' → logprob: -14.250301361083984
    6. '```' → logprob: -15.625301361083984
    7. 'E' → logprob: -16.500301361083984
    8. '-e' → logprob: -16.625301361083984
    9. '
' → logprob: -16.875301361083984
    10. '1' → logprob: -17.000301361083984

Token 2023: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '-
' → logprob: -18.125
    3. '```' → logprob: -18.5
    4. ' -' → logprob: -19.0
    5. '15' → logprob: -19.875
    6. '−' → logprob: -20.75
    7. 'e' → logprob: -21.0
    8. '{-' → logprob: -21.25
    9. '-=' → logprob: -21.5
    10. '^-' → logprob: -22.125

Token 2024: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.006041727494448423
    2. '-' → logprob: -5.131041526794434
    3. '10' → logprob: -9.881041526794434
    4. '12' → logprob: -10.506041526794434
    5. '14' → logprob: -10.881041526794434
    6. '9' → logprob: -12.381041526794434
    7. '8' → logprob: -13.006041526794434
    8. '13' → logprob: -13.256041526794434
    9. ' ' → logprob: -13.631041526794434
    10. '7' → logprob: -13.631041526794434

Token 2025: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5045610666275024
    2. ':
' → logprob: -1.0045610666275024
    3. ':' → logprob: -4.004560947418213
    4. ' and' → logprob: -4.629560947418213
    5. 'and' → logprob: -6.754560947418213
    6. '           ' → logprob: -7.379560947418213
    7. ' :
' → logprob: -9.879561424255371
    8. ' free' → logprob: -10.004561424255371
    9. '):
' → logprob: -10.254561424255371
    10. ',' → logprob: -10.254561424255371

Token 2026: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05223732814192772
    2. '           ' → logprob: -3.3022372722625732
    3. 'free' → logprob: -4.302237510681152
    4. ' free' → logprob: -8.677237510681152
    5. '                   ' → logprob: -8.677237510681152
    6. '   ' → logprob: -9.552237510681152
    7. '       ' → logprob: -9.677237510681152
    8. '                       ' → logprob: -10.052237510681152
    9. '
' → logprob: -10.802237510681152
    10. '```' → logprob: -12.427237510681152

Token 2027: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' (adapté à ' free') → logprob: -2.236549335066229e-05
    2. ' free' → logprob: -10.750021934509277
    3. '           ' → logprob: -14.625021934509277
    4. '               ' → logprob: -15.000021934509277
    5. 'fre' → logprob: -16.125022888183594
    6. '	free' → logprob: -18.375022888183594
    7. '   ' → logprob: -18.875022888183594
    8. '                   ' → logprob: -19.000022888183594
    9. '.free' → logprob: -19.375022888183594
    10. '       ' → logprob: -19.500022888183594

Token 2028: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.03551597148180008
    2. 'segments' → logprob: -4.285515785217285
    3. ',' → logprob: -4.410515785217285
    4. '           ' → logprob: -4.910515785217285
    5. '       ' → logprob: -7.410515785217285
    6. 'Segments' → logprob: -8.285515785217285
    7. ' ,' → logprob: -8.410515785217285
    8. '_segment' → logprob: -9.035515785217285
    9. '               ' → logprob: -9.410515785217285
    10. '```' → logprob: -10.035515785217285

Token 2029: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001402025343850255
    2. '.' → logprob: -6.626401901245117
    3. '.extend' → logprob: -10.126401901245117
    4. ',' → logprob: -11.501401901245117
    5. '=' → logprob: -11.626401901245117
    6. '               ' → logprob: -11.876401901245117
    7. 'append' → logprob: -12.751401901245117
    8. '+=' → logprob: -12.751401901245117
    9. ' .' → logprob: -13.501401901245117
    10. '.Append' → logprob: -14.751401901245117

Token 2030: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01115570031106472
    2. '(left' → logprob: -4.511155605316162
    3. ' (' → logprob: -9.51115608215332
    4. '               ' → logprob: -10.51115608215332
    5. '           ' → logprob: -12.76115608215332
    6. '[left' → logprob: -13.76115608215332
    7. '                   ' → logprob: -13.88615608215332
    8. '(right' → logprob: -15.26115608215332
    9. '(l' → logprob: -15.51115608215332
    10. '(prev' → logprob: -15.63615608215332

Token 2031: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.023343777284026146
    2. '(left' → logprob: -3.773343801498413
    3. '[left' → logprob: -9.898344039916992
    4. '(' → logprob: -10.773344039916992
    5. '0' → logprob: -11.148344039916992
    6. ' left' → logprob: -11.898344039916992
    7. '           ' → logprob: -13.023344039916992
    8. '               ' → logprob: -14.023344039916992
    9. ',left' → logprob: -14.398344039916992
    10. '	left' → logprob: -14.398344039916992

Token 2032: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015097891446202993
    2. ',
' → logprob: -9.375150680541992
    3. ' ,' → logprob: -10.625150680541992
    4. '               ' → logprob: -11.000150680541992
    5. '           ' → logprob: -11.500150680541992
    6. '                   ' → logprob: -12.000150680541992
    7. '
' → logprob: -13.500150680541992
    8. '0' → logprob: -13.875150680541992
    9. '       ' → logprob: -13.875150680541992
    10. '                       ' → logprob: -14.500150680541992

Token 2033: ' min' (ID: 1349)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'li' → logprob: -4.320199877838604e-07
    2. ' li' → logprob: -15.125
    3. '<li' → logprob: -16.125
    4. '(li' → logprob: -17.375
    5. 'Li' → logprob: -19.625
    6. '   ' → logprob: -20.5
    7. 'lli' → logprob: -20.625
    8. '_li' → logprob: -21.25
    9. '           ' → logprob: -21.25
    10. '/li' → logprob: -21.625

Token 2034: '(li' (ID: 111234)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.00016718693950679153
    2. 'ri' → logprob: -8.750166893005371
    3. '(li' → logprob: -12.000166893005371
    4. ' li' → logprob: -13.250166893005371
    5. '<li' → logprob: -14.375166893005371
    6. '(' → logprob: -16.250167846679688
    7. '   ' → logprob: -16.750167846679688
    8. '           ' → logprob: -18.625167846679688
    9. 'lli' → logprob: -18.625167846679688
    10. 'lic' → logprob: -18.625167846679688

Token 2035: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6118259429931641
    2. ' -' → logprob: -0.9868259429931641
    3. ',' → logprob: -2.486825942993164
    4. ')' → logprob: -7.111825942993164
    5. '<|end|>' → logprob: -8.361825942993164
    6. ' ' → logprob: -8.861825942993164
    7. '))' → logprob: -9.236825942993164
    8. ' ,' → logprob: -9.486825942993164
    9. '[' → logprob: -9.611825942993164
    10. '
' → logprob: -10.111825942993164

Token 2036: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.2576454335358e-05
    2. ' self' → logprob: -9.625092506408691
    3. '0' → logprob: -11.875092506408691
    4. 'right' → logprob: -11.875092506408691
    5. ')' → logprob: -12.500092506408691
    6. '(self' → logprob: -13.250092506408691
    7. '[self' → logprob: -13.750092506408691
    8. 'ri' → logprob: -13.875092506408691
    9. '               ' → logprob: -14.000092506408691
    10. '
' → logprob: -14.250092506408691

Token 2037: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.00013762809976469725
    2. 'width' → logprob: -9.000137329101562
    3. '.' → logprob: -11.250137329101562
    4. '.w' → logprob: -14.625137329101562
    5. '	width' → logprob: -14.750137329101562
    6. ' .' → logprob: -16.250137329101562
    7. '   ' → logprob: -16.500137329101562
    8. '.height' → logprob: -17.000137329101562
    9. ',width' → logprob: -17.125137329101562
    10. ' width' → logprob: -17.125137329101562

Token 2038: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.18320827186107635
    2. ')))' → logprob: -2.6832082271575928
    3. '-' → logprob: -3.0582082271575928
    4. ' -' → logprob: -3.1832082271575928
    5. '))
' → logprob: -5.183208465576172
    6. ')))
' → logprob: -5.808208465576172
    7. ' ))' → logprob: -6.558208465576172
    8. '+' → logprob: -8.433208465576172
    9. ')' → logprob: -8.558208465576172
    10. ' ))
' → logprob: -9.433208465576172

Token 2039: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037324778735637665
    2. 'left' → logprob: -4.037324905395508
    3. '               ' → logprob: -4.537324905395508
    4. '(' → logprob: -5.787324905395508
    5. '                   ' → logprob: -7.037324905395508
    6. ' left' → logprob: -7.162324905395508
    7. '[' → logprob: -7.287324905395508
    8. ',' → logprob: -7.537324905395508
    9. '```' → logprob: -7.662324905395508
    10. '(left' → logprob: -7.787324905395508

Token 2040: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.1607663929462433
    2. '           ' → logprob: -1.910766363143921
    3. 'if' → logprob: -7.6607666015625
    4. ' left' → logprob: -9.7857666015625
    5. '       ' → logprob: -11.5357666015625
    6. '               ' → logprob: -13.5357666015625
    7. '
' → logprob: -13.7857666015625
    8. '```' → logprob: -14.1607666015625
    9. '	left' → logprob: -15.0357666015625
    10. ' if' → logprob: -15.1607666015625

Token 2041: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010644878260791302
    2. ' =' → logprob: -4.760644912719727
    3. ',' → logprob: -6.260644912719727
    4. ':' → logprob: -10.760644912719727
    5. '+=' → logprob: -10.760644912719727
    6. ' ,' → logprob: -11.010644912719727
    7. '=
' → logprob: -11.135644912719727
    8. '<' → logprob: -11.510644912719727
    9. '<|end|>' → logprob: -11.885644912719727
    10. ' +=' → logprob: -11.885644912719727

Token 2042: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06774678826332092
    2. 'min' → logprob: -2.817746877670288
    3. 'ri' → logprob: -5.192746639251709
    4. ' max' → logprob: -8.567747116088867
    5. ' min' → logprob: -11.942747116088867
    6. 'mi' → logprob: -12.442747116088867
    7. 'right' → logprob: -13.567747116088867
    8. '	max' → logprob: -13.942747116088867
    9. ' ri' → logprob: -14.192747116088867
    10. '   ' → logprob: -14.442747116088867

Token 2043: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0009107483783736825
    2. '(' → logprob: -7.625910758972168
    3. '(right' → logprob: -8.500910758972168
    4. 'left' → logprob: -8.500910758972168
    5. '(li' → logprob: -11.125910758972168
    6. '[left' → logprob: -14.750910758972168
    7. 'right' → logprob: -15.500910758972168
    8. '   ' → logprob: -16.00090980529785
    9. '	left' → logprob: -16.00090980529785
    10. 'ri' → logprob: -16.00090980529785

Token 2044: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008084330474957824
    2. '+' → logprob: -8.250808715820312
    3. ' ,' → logprob: -8.500808715820312
    4. ',left' → logprob: -9.000808715820312
    5. ',right' → logprob: -9.000808715820312
    6. '(left' → logprob: -10.250808715820312
    7. ' +' → logprob: -11.250808715820312
    8. 'left' → logprob: -11.625808715820312
    9. '(' → logprob: -11.625808715820312
    10. ',
' → logprob: -12.000808715820312

Token 2045: ' ri' (ID: 10274)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -4.9424725148128346e-05
    2. ' ri' → logprob: -10.250049591064453
    3. 'rii' → logprob: -12.500049591064453
    4. 'min' → logprob: -12.875049591064453
    5. '   ' → logprob: -13.125049591064453
    6. 'right' → logprob: -13.375049591064453
    7. '
' → logprob: -13.875049591064453
    8. 'rir' → logprob: -14.500049591064453
    9. 'rij' → logprob: -14.750049591064453
    10. 'rig' → logprob: -15.000049591064453

Token 2046: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48094049096107483
    2. '+' → logprob: -1.2309404611587524
    3. ' +' → logprob: -2.605940580368042
    4. ')
' → logprob: -4.355940341949463
    5. '           ' → logprob: -6.105940341949463
    6. '       ' → logprob: -7.855940341949463
    7. ',' → logprob: -8.980940818786621
    8. ')+' → logprob: -8.980940818786621
    9. ' )' → logprob: -10.230940818786621
    10. '   ' → logprob: -10.230940818786621

Token 2047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004507493227720261
    2. '
' → logprob: -6.754507541656494
    3. '        
' → logprob: -6.754507541656494
    4. '```' → logprob: -7.254507541656494
    5. ' 
' → logprob: -7.879507541656494
    6. '           ' → logprob: -8.004507064819336
    7. '[' → logprob: -8.504507064819336
    8. '<|end|>' → logprob: -9.129507064819336
    9. '        ' → logprob: -9.379507064819336
    10. '+
' → logprob: -9.754507064819336

Token 2048: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11411501467227936
    2. '       ' → logprob: -2.614114999771118
    3. ' if' → logprob: -3.364114999771118
    4. '
' → logprob: -11.614114761352539
    5. '```' → logprob: -11.739114761352539
    6. '	if' → logprob: -13.364114761352539
    7. '	' → logprob: -15.614114761352539
    8. 'If' → logprob: -15.739114761352539
    9. '   ' → logprob: -15.739114761352539
    10. 'for' → logprob: -16.48911476135254

Token 2049: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.004079589620232582
    2. ' left' → logprob: -5.504079818725586
    3. '   ' → logprob: -14.254079818725586
    4. 'right' → logprob: -15.629079818725586
    5. ' ' → logprob: -15.879079818725586
    6. '	left' → logprob: -16.129079818725586
    7. '(left' → logprob: -16.254079818725586
    8. 'self' → logprob: -16.879079818725586
    9. ' lef' → logprob: -17.754079818725586
    10. '  ' → logprob: -17.754079818725586

Token 2050: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.28118959069252014
    2. ' <' → logprob: -1.4061895608901978
    3. ' ' → logprob: -10.781189918518066
    4. '
' → logprob: -12.906189918518066
    5. '+' → logprob: -13.031189918518066
    6. '[' → logprob: -13.406189918518066
    7. '<
' → logprob: -13.656189918518066
    8. ' ' → logprob: -13.656189918518066
    9. '	' → logprob: -13.906189918518066
    10. '   ' → logprob: -13.906189918518066

Token 2051: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0040830280631780624
    2. ' self' → logprob: -5.504083156585693
    3. '   ' → logprob: -13.129082679748535
    4. '       ' → logprob: -13.879082679748535
    5. '	self' → logprob: -14.004082679748535
    6. '           ' → logprob: -15.129082679748535
    7. '1' → logprob: -15.504082679748535
    8. '    ' → logprob: -16.12908363342285
    9. '
' → logprob: -16.12908363342285
    10. ' ' → logprob: -16.50408363342285

Token 2052: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.0517752543091774
    2. '.' → logprob: -3.0517752170562744
    3. 'width' → logprob: -6.5517754554748535
    4. 'self' → logprob: -6.5517754554748535
    5. ' .' → logprob: -8.801774978637695
    6. ' width' → logprob: -10.301774978637695
    7. '.self' → logprob: -10.301774978637695
    8. '   ' → logprob: -10.551774978637695
    9. ' ' → logprob: -10.551774978637695
    10. ' self' → logprob: -10.801774978637695

Token 2053: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16214612126350403
    2. '-' → logprob: -2.0371460914611816
    3. ':
' → logprob: -5.162146091461182
    4. ' +' → logprob: -5.412146091461182
    5. '+' → logprob: -5.662146091461182
    6. '       ' → logprob: -6.037146091461182
    7. ':' → logprob: -6.662146091461182
    8. '   ' → logprob: -6.912146091461182
    9. ' ' → logprob: -7.412146091461182
    10. '           ' → logprob: -8.28714656829834

Token 2054: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008056987426243722
    2. ' ' → logprob: -7.125805854797363
    3. '+' → logprob: -14.000805854797363
    4. '   ' → logprob: -15.000805854797363
    5. ' +' → logprob: -17.250804901123047
    6. '           ' → logprob: -17.750804901123047
    7. '       ' → logprob: -18.000804901123047
    8. '  ' → logprob: -18.000804901123047
    9. '0' → logprob: -18.375804901123047
    10. '    ' → logprob: -19.000804901123047

Token 2055: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '+' → logprob: -15.500008583068848
    4. '   ' → logprob: -17.75000762939453
    5. '0' → logprob: -19.25000762939453
    6. '           ' → logprob: -19.75000762939453
    7. '(' → logprob: -20.50000762939453
    8. '       ' → logprob: -20.50000762939453
    9. '  ' → logprob: -20.75000762939453
    10. ' +' → logprob: -21.25000762939453

Token 2056: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0903799906373024
    2. '.' → logprob: -2.5903799533843994
    3. '.e' → logprob: -4.9653801918029785
    4. '+' → logprob: -6.0903801918029785
    5. '1' → logprob: -6.7153801918029785
    6. 'E' → logprob: -7.9653801918029785
    7. ' ' → logprob: -8.84037971496582
    8. '[' → logprob: -9.09037971496582
    9. ' +' → logprob: -9.46537971496582
    10. '0' → logprob: -9.84037971496582

Token 2057: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. 'e' → logprob: -17.625
    3. '+' → logprob: -18.875
    4. '```' → logprob: -20.25
    5. '−' → logprob: -20.375
    6. '15' → logprob: -20.625
    7. ' -' → logprob: -21.25
    8. '5' → logprob: -21.625
    9. '--' → logprob: -22.625
    10. '^-' → logprob: -22.75

Token 2058: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0001227276516146958
    2. '5' → logprob: -9.875123023986816
    3. '-' → logprob: -11.125123023986816
    4. ' ' → logprob: -11.375123023986816
    5. '10' → logprob: -12.000123023986816
    6. '8' → logprob: -12.000123023986816
    7. '7' → logprob: -12.000123023986816
    8. '4' → logprob: -12.000123023986816
    9. '```' → logprob: -12.500123023986816
    10. '2' → logprob: -12.875123023986816

Token 2059: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12148166447877884
    2. ':' → logprob: -2.2464816570281982
    3. '           ' → logprob: -5.371481895446777
    4. '       ' → logprob: -5.621481895446777
    5. '+' → logprob: -9.121481895446777
    6. '   ' → logprob: -9.371481895446777
    7. '):
' → logprob: -10.121481895446777
    8. ',' → logprob: -10.496481895446777
    9. ' and' → logprob: -10.621481895446777
    10. ' +' → logprob: -11.371481895446777

Token 2060: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.848420551046729e-05
    2. ' free' → logprob: -11.0000581741333
    3. '		' → logprob: -11.2500581741333
    4. '	       ' → logprob: -11.7500581741333
    5. '       ' → logprob: -11.8750581741333
    6. 'free' → logprob: -12.1250581741333
    7. '   ' → logprob: -13.1250581741333
    8. ',' → logprob: -13.2500581741333
    9. '               ' → logprob: -13.8750581741333
    10. '	free' → logprob: -14.0000581741333

Token 2061: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' (adapté à ' free') → logprob: -0.008775054477155209
    2. ' free' → logprob: -4.758775234222412
    3. '           ' → logprob: -8.758774757385254
    4. '       ' → logprob: -13.383774757385254
    5. '	free' → logprob: -14.133774757385254
    6. '   ' → logprob: -14.383774757385254
    7. '               ' → logprob: -15.508774757385254
    8. '.free' → logprob: -15.883774757385254
    9. 'fre' → logprob: -16.00877571105957
    10. '_free' → logprob: -16.25877571105957

Token 2062: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.771655115589965e-05
    2. '_' → logprob: -12.250018119812012
    3. 'Segments' → logprob: -12.250018119812012
    4. '           ' → logprob: -13.250018119812012
    5. ' _' → logprob: -13.500018119812012
    6. '```' → logprob: -13.750018119812012
    7. '   ' → logprob: -14.000018119812012
    8. 'segments' → logprob: -14.250018119812012
    9. '
' → logprob: -14.625018119812012
    10. '_segment' → logprob: -15.125018119812012

Token 2063: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008657239377498627
    2. '.' → logprob: -4.758657455444336
    3. '           ' → logprob: -10.758657455444336
    4. ' .' → logprob: -11.008657455444336
    5. '+=' → logprob: -13.758657455444336
    6. '.app' → logprob: -14.008657455444336
    7. 'append' → logprob: -14.133657455444336
    8. '.ap' → logprob: -14.258657455444336
    9. ' +=' → logprob: -14.758657455444336
    10. '.
' → logprob: -14.758657455444336

Token 2064: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014497115276753902
    2. '(' → logprob: -4.26449728012085
    3. '(
' → logprob: -8.014496803283691
    4. '(left' → logprob: -13.389496803283691
    5. '   ' → logprob: -13.764496803283691
    6. '(('' → logprob: -15.514496803283691
    7. '(("' → logprob: -16.389497756958008
    8. '(
' → logprob: -17.889497756958008
    9. '(

' → logprob: -18.139497756958008
    10. ' (' → logprob: -18.264497756958008

Token 2065: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -5.512236498361744e-07
    2. ' left' → logprob: -14.500000953674316
    3. '(left' → logprob: -18.0
    4. '   ' → logprob: -18.125
    5. '	left' → logprob: -19.375
    6. '[left' → logprob: -22.0
    7. '.left' → logprob: -23.125
    8. '
' → logprob: -23.5
    9. ',left' → logprob: -23.875
    10. '_left' → logprob: -23.875

Token 2066: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010723850573413074
    2. ',
' → logprob: -9.625106811523438
    3. ' ,' → logprob: -10.125106811523438
    4. '+' → logprob: -14.875106811523438
    5. ',self' → logprob: -15.500106811523438
    6. '+,' → logprob: -16.000106811523438
    7. ',

' → logprob: -16.750106811523438
    8. '
' → logprob: -17.125106811523438
    9. '‌,' → logprob: -17.125106811523438
    10. '   ' → logprob: -17.500106811523438

Token 2067: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416398212313652
    2. ' self' → logprob: -4.264163970947266
    3. '	self' → logprob: -15.514163970947266
    4. '           ' → logprob: -16.264163970947266
    5. '       ' → logprob: -16.764163970947266
    6. '        ' → logprob: -17.639163970947266
    7. '               ' → logprob: -18.139163970947266
    8. '            ' → logprob: -18.139163970947266
    9. '   ' → logprob: -18.139163970947266
    10. ' ' → logprob: -18.514163970947266

Token 2068: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.011074231006205082
    2. '.' → logprob: -4.511074066162109
    3. 'width' → logprob: -11.76107406616211
    4. '.height' → logprob: -12.01107406616211
    5. ' .' → logprob: -12.26107406616211
    6. '.w' → logprob: -12.76107406616211
    7. '.size' → logprob: -13.38607406616211
    8. '.space' → logprob: -14.13607406616211
    9. '	width' → logprob: -14.63607406616211
    10. '.length' → logprob: -14.76107406616211

Token 2069: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010563143528997898
    2. '))
' → logprob: -4.635563373565674
    3. ')' → logprob: -7.385563373565674
    4. '       ' → logprob: -8.885562896728516
    5. '           ' → logprob: -11.010562896728516
    6. '-' → logprob: -11.510562896728516
    7. '+' → logprob: -12.260562896728516
    8. ' ))' → logprob: -12.260562896728516
    9. ')))' → logprob: -12.635562896728516
    10. ')
' → logprob: -12.635562896728516

Token 2070: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002124330261722207
    2. 'return' → logprob: -6.252124309539795
    3. '
' → logprob: -9.377124786376953
    4. '   ' → logprob: -9.502124786376953
    5. ' return' → logprob: -11.252124786376953
    6. '	' → logprob: -11.502124786376953
    7. '	return' → logprob: -12.127124786376953
    8. '           ' → logprob: -12.502124786376953
    9. '        
' → logprob: -14.002124786376953
    10. '```' → logprob: -14.252124786376953

Token 2071: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06522727012634277
    2. 'return' → logprob: -2.8152272701263428
    3. ' return' → logprob: -5.940227508544922
    4. '
' → logprob: -7.940227508544922
    5. '	return' → logprob: -8.690227508544922
    6. '	' → logprob: -9.690227508544922
    7. '   ' → logprob: -10.315227508544922
    8. '```' → logprob: -14.065227508544922
    9. '        
' → logprob: -14.315227508544922
    10. '           ' → logprob: -14.815227508544922

Token 2072: ' Filter' (ID: 20308)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001192371710203588
    2. '       ' → logprob: -6.751192569732666
    3. ' return' → logprob: -10.751192092895508
    4. '
' → logprob: -15.251192092895508
    5. '   ' → logprob: -15.376192092895508
    6. 'free' → logprob: -15.501192092895508
    7. '#' → logprob: -17.126192092895508
    8. '	return' → logprob: -18.126192092895508
    9. '```' → logprob: -19.501192092895508
    10. '           ' → logprob: -19.751192092895508

Token 2073: ' invalid' (ID: 15796)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.1403545141220093
    2. '[' → logprob: -1.3903545141220093
    3. 'free' → logprob: -1.7653545141220093
    4. 'lambda' → logprob: -1.8903545141220093
    5. '[
' → logprob: -2.890354633331299
    6. '#' → logprob: -4.265354633331299
    7. 'return' → logprob: -4.515354633331299
    8. 'def' → logprob: -4.890354633331299
    9. '(
' → logprob: -4.890354633331299
    10. '[f' → logprob: -6.390354633331299

Token 2074: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.7253192663192749
    2. '_segments' → logprob: -0.7253192663192749
    3. 'free' → logprob: -3.8503193855285645
    4. ' segments' → logprob: -5.4753193855285645
    5. '[' → logprob: -6.1003193855285645
    6. '[(' → logprob: -6.4753193855285645
    7. '[
' → logprob: -7.4753193855285645
    8. '
' → logprob: -7.8503193855285645
    9. ' free' → logprob: -8.100318908691406
    10. 'Segments' → logprob: -8.600318908691406

Token 2075: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5265107750892639
    2. ' =' → logprob: -1.4015107154846191
    3. '=' → logprob: -2.526510715484619
    4. '[' → logprob: -3.776510715484619
    5. '=[]
' → logprob: -3.776510715484619
    6. '=[' → logprob: -5.401510715484619
    7. 'free' → logprob: -5.651510715484619
    8. '[]
' → logprob: -5.776510715484619
    9. '.append' → logprob: -5.776510715484619
    10. '[:]' → logprob: -6.026510715484619

Token 2076: 'length' (ID: 7914)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6116386651992798
    2. 'lambda' → logprob: -1.3616386651992798
    3. 'len' → logprob: -2.2366385459899902
    4. 'free' → logprob: -3.6116385459899902
    5. 'def' → logprob: -4.11163854598999
    6. ')' → logprob: -4.11163854598999
    7. 'while' → logprob: -5.36163854598999
    8. '
' → logprob: -5.48663854598999
    9. 'left' → logprob: -5.48663854598999
    10. '       ' → logprob: -5.73663854598999

Token 2077: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.026367876678705215
    2. ' >' → logprob: -3.6513679027557373
    3. '<' → logprob: -10.776368141174316
    4. '>=' → logprob: -11.151368141174316
    5. '>
' → logprob: -11.776368141174316
    6. '[' → logprob: -12.276368141174316
    7. '<=' → logprob: -12.526368141174316
    8. ' <' → logprob: -12.901368141174316
    9. '=' → logprob: -13.276368141174316
    10. '```' → logprob: -13.276368141174316

Token 2078: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.513339445111342e-05
    2. ' ' → logprob: -10.250044822692871
    3. '   ' → logprob: -11.625044822692871
    4. '       ' → logprob: -14.625044822692871
    5. '           ' → logprob: -15.875044822692871
    6. '0' → logprob: -16.875045776367188
    7. '(' → logprob: -17.375045776367188
    8. '     ' → logprob: -18.750045776367188
    9. '=' → logprob: -18.875045776367188
    10. '  ' → logprob: -19.000045776367188

Token 2079: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6047699318733066e-05
    2. ' ' → logprob: -11.250016212463379
    3. '   ' → logprob: -13.000016212463379
    4. '       ' → logprob: -15.500016212463379
    5. '(' → logprob: -16.000015258789062
    6. '           ' → logprob: -16.125015258789062
    7. '0' → logprob: -16.875015258789062
    8. '
' → logprob: -17.000015258789062
    9. '+' → logprob: -17.375015258789062
    10. '-' → logprob: -17.375015258789062

Token 2080: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0280383548888494e-06
    2. '+' → logprob: -15.125000953674316
    3. '.' → logprob: -15.250000953674316
    4. '-' → logprob: -16.000001907348633
    5. '.e' → logprob: -16.125001907348633
    6. '```' → logprob: -16.250001907348633
    7. '[' → logprob: -16.500001907348633
    8. 'E' → logprob: -17.000001907348633
    9. '1' → logprob: -17.500001907348633
    10. '-e' → logprob: -18.375001907348633

Token 2081: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '```' → logprob: -17.75
    3. ' -' → logprob: -20.25
    4. '^-' → logprob: -20.875
    5. '−' → logprob: -21.125
    6. '
' → logprob: -21.125
    7. '   ' → logprob: -21.625
    8. '-
' → logprob: -21.625
    9. '``' → logprob: -22.0
    10. '{-' → logprob: -22.375

Token 2082: '14' (ID: 1265)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.07234694808721542
    2. '-' → logprob: -3.0723469257354736
    3. '8' → logprob: -4.572347164154053
    4. '9' → logprob: -5.072347164154053
    5. '7' → logprob: -6.072347164154053
    6. '10' → logprob: -6.197347164154053
    7. '6' → logprob: -7.072347164154053
    8. '12' → logprob: -7.197347164154053
    9. '14' → logprob: -7.322347164154053
    10. '5' → logprob: -9.322346687316895

Token 2083: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5138577818870544
    2. ')
' → logprob: -1.0138578414916992
    3. ')' → logprob: -4.388857841491699
    4. ' or' → logprob: -4.513857841491699
    5. '):
' → logprob: -5.013857841491699
    6. '           ' → logprob: -5.888857841491699
    7. ' if' → logprob: -6.638857841491699
    8. ',' → logprob: -7.388857841491699
    9. 'if' → logprob: -7.388857841491699
    10. ' )
' → logprob: -7.513857841491699

Token 2084: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.513339445111342e-05
    2. 'return' → logprob: -10.375044822692871
    3. 'filtered' → logprob: -12.250044822692871
    4. 'final' → logprob: -13.250044822692871
    5. '           ' → logprob: -13.375044822692871
    6. '```' → logprob: -13.750044822692871
    7. '   ' → logprob: -13.875044822692871
    8. 'segments' → logprob: -13.875044822692871
    9. ',' → logprob: -14.250044822692871
    10. '[' → logprob: -14.625044822692871

Token 2085: ' free' (ID: 2240)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02068972773849964
    2. 'free' (adapté à ' free') → logprob: -4.270689964294434
    3. 'segments' → logprob: -6.020689964294434
    4. 'filtered' → logprob: -6.145689964294434
    5. 'final' → logprob: -6.895689964294434
    6. 'return' → logprob: -7.645689964294434
    7. 'result' → logprob: -8.520689964294434
    8. ' free' → logprob: -8.770689964294434
    9. '   ' → logprob: -10.395689964294434
    10. 'fre' → logprob: -10.770689964294434

Token 2086: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -9.014684110297821e-06
    2. 'segments' → logprob: -12.625008583068848
    3. '
' → logprob: -13.625008583068848
    4. '_' → logprob: -14.250008583068848
    5. '```' → logprob: -14.250008583068848
    6. 's' → logprob: -14.375008583068848
    7. '   ' → logprob: -14.750008583068848
    8. '\' → logprob: -14.750008583068848
    9. 'Segments' → logprob: -15.125008583068848
    10. '_lengths' → logprob: -15.750008583068848

Token 2087: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023490624502301216
    2. ' =' → logprob: -3.7734906673431396
    3. '[:]' → logprob: -9.148490905761719
    4. '=[]' → logprob: -9.273490905761719
    5. '.append' → logprob: -10.523490905761719
    6. '=[' → logprob: -11.273490905761719
    7. '=[]
' → logprob: -13.648490905761719
    8. '       ' → logprob: -13.773490905761719
    9. '.clear' → logprob: -14.398490905761719
    10. '.extend' → logprob: -14.398490905761719

Token 2088: ' [(' (ID: 43900)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.8938816785812378
    2. '[' → logprob: -1.1438816785812378
    3. '[(' → logprob: -1.6438816785812378
    4. '[i' → logprob: -3.3938817977905273
    5. '[p' → logprob: -3.8938817977905273
    6. '[x' → logprob: -4.643881797790527
    7. '[f' → logprob: -5.893881797790527
    8. '[line' → logprob: -5.893881797790527
    9. '[s' → logprob: -6.393881797790527
    10. '[k' → logprob: -7.018881797790527

Token 2089: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5184742212295532
    2. 'seg' → logprob: -1.7684742212295532
    3. 'fs' → logprob: -2.5184741020202637
    4. 'f' → logprob: -2.8934741020202637
    5. 's' → logprob: -2.8934741020202637
    6. 'a' → logprob: -3.7684741020202637
    7. 'start' → logprob: -4.643474102020264
    8. 'x' → logprob: -4.768474102020264
    9. 'lx' → logprob: -7.518474102020264
    10. 'ls' → logprob: -9.018474578857422

Token 2090: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005056333262473345
    2. '[' → logprob: -5.505056381225586
    3. ',l' → logprob: -7.755056381225586
    4. ' ,' → logprob: -8.005056381225586
    5. 'x' → logprob: -10.005056381225586
    6. 's' → logprob: -10.255056381225586
    7. '0' → logprob: -10.505056381225586
    8. ' ' → logprob: -10.755056381225586
    9. 'l' → logprob: -10.755056381225586
    10. '+' → logprob: -11.755056381225586

Token 2091: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1472419600977446e-06
    2. ' r' → logprob: -13.875000953674316
    3. '	r' → logprob: -16.625001907348633
    4. '
' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.375001907348633
    6. ' ' → logprob: -19.875001907348633
    7. ' ' → logprob: -20.125001907348633
    8. '```' → logprob: -20.125001907348633
    9. 'u' → logprob: -20.500001907348633
    10. ' 
' → logprob: -21.250001907348633

Token 2092: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3157222867012024
    2. ' for' → logprob: -1.9407222270965576
    3. 'for' → logprob: -2.0657222270965576
    4. 'if' → logprob: -8.690722465515137
    5. ' )' → logprob: -9.440722465515137
    6. ' if' → logprob: -9.565722465515137
    7. '   ' → logprob: -10.440722465515137
    8. 'r' → logprob: -11.065722465515137
    9. ' ' → logprob: -11.315722465515137
    10. '    ' → logprob: -11.815722465515137

Token 2093: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12700161337852478
    2. ' for' → logprob: -2.1270015239715576
    3. 'if' → logprob: -10.002001762390137
    4. '           ' → logprob: -11.502001762390137
    5. ' if' → logprob: -12.002001762390137
    6. '          ' → logprob: -12.752001762390137
    7. '               ' → logprob: -13.377001762390137
    8. '       ' → logprob: -13.377001762390137
    9. '	for' → logprob: -13.502001762390137
    10. '        ' → logprob: -13.752001762390137

Token 2094: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002533332910388708
    2. '(l' → logprob: -6.002533435821533
    3. ' l' → logprob: -10.002532958984375
    4. ' (' → logprob: -11.502532958984375
    5. '	l' → logprob: -13.502532958984375
    6. '   ' → logprob: -14.752532958984375
    7. 'seg' → logprob: -16.252532958984375
    8. '(' → logprob: -16.752532958984375
    9. '_l' → logprob: -16.877532958984375
    10. 'r' → logprob: -16.877532958984375

Token 2095: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02200043387711048
    2. ',r' → logprob: -3.897000551223755
    3. ' ,' → logprob: -6.772000312805176
    4. 'r' → logprob: -8.772000312805176
    5. ',l' → logprob: -9.772000312805176
    6. '_,' → logprob: -9.897000312805176
    7. ' in' → logprob: -10.897000312805176
    8. ' r' → logprob: -11.772000312805176
    9. 'l' → logprob: -11.772000312805176
    10. ',
' → logprob: -12.647000312805176

Token 2096: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.623244553338736e-05
    2. ' r' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.75006675720215
    4. '	r' → logprob: -18.75006675720215
    5. ' ' → logprob: -19.00006675720215
    6. '           ' → logprob: -19.37506675720215
    7. '(r' → logprob: -19.50006675720215
    8. '    ' → logprob: -19.50006675720215
    9. '       ' → logprob: -19.75006675720215
    10. '  ' → logprob: -19.87506675720215

Token 2097: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06197742745280266
    2. ' in' → logprob: -2.8119773864746094
    3. ' ' → logprob: -12.81197738647461
    4. 'if' → logprob: -12.81197738647461
    5. '
' → logprob: -13.06197738647461
    6. '   ' → logprob: -14.56197738647461
    7. 'i' → logprob: -14.81197738647461
    8. ',' → logprob: -14.93697738647461
    9. ')' → logprob: -15.31197738647461
    10. ' ' → logprob: -15.93697738647461

Token 2098: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.004490177612751722
    2. ' free' → logprob: -6.129490375518799
    3. 'r' → logprob: -7.004490375518799
    4. '(r' → logprob: -7.754490375518799
    5. 'segments' → logprob: -7.879490375518799
    6. 'l' → logprob: -8.00448989868164
    7. '(l' → logprob: -8.87948989868164
    8. '(' → logprob: -11.12948989868164
    9. ')' → logprob: -11.37948989868164
    10. '
' → logprob: -11.50448989868164

Token 2099: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.00519569031894207
    2. 'segments' → logprob: -5.630195617675781
    3. '-' → logprob: -7.255195617675781
    4. 'Segments' → logprob: -7.380195617675781
    5. 'gments' → logprob: -9.505195617675781
    6. ' segments' → logprob: -10.505195617675781
    7. '   ' → logprob: -10.755195617675781
    8. ',' → logprob: -11.005195617675781
    9. '-se' → logprob: -11.380195617675781
    10. '_SEG' → logprob: -11.505195617675781

Token 2100: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01105878408998251
    2. 'if' → logprob: -4.511058807373047
    3. '	if' → logprob: -11.636058807373047
    4. ' ' → logprob: -13.636058807373047
    5. '           ' → logprob: -16.011058807373047
    6. '   ' → logprob: -16.136058807373047
    7. '    ' → logprob: -16.261058807373047
    8. '  ' → logprob: -16.386058807373047
    9. '        ' → logprob: -16.511058807373047
    10. '       ' → logprob: -16.761058807373047

Token 2101: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.012376019731163979
    2. '(r' → logprob: -4.762375831604004
    3. ' r' → logprob: -5.637375831604004
    4. ' (' → logprob: -8.637375831604004
    5. '   ' → logprob: -11.887375831604004
    6. '(' → logprob: -13.137375831604004
    7. '	r' → logprob: -13.262375831604004
    8. ' ' → logprob: -14.137375831604004
    9. '           ' → logprob: -14.512375831604004
    10. ' ' → logprob: -14.637375831604004

Token 2102: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.39542514085769653
    2. '-' → logprob: -1.1454250812530518
    3. '>' → logprob: -5.270425319671631
    4. '-l' → logprob: -6.020425319671631
    5. ' >' → logprob: -7.020425319671631
    6. ' ' → logprob: -11.020424842834473
    7. '   ' → logprob: -11.145424842834473
    8. '>
' → logprob: -11.895424842834473
    9. '  ' → logprob: -13.270424842834473
    10. '     ' → logprob: -13.270424842834473

Token 2103: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007113590254448354
    2. ' l' → logprob: -7.250711441040039
    3. '           ' → logprob: -14.000711441040039
    4. '	l' → logprob: -15.625711441040039
    5. '   ' → logprob: -15.875711441040039
    6. '       ' → logprob: -16.25071144104004
    7. '     ' → logprob: -17.37571144104004
    8. '         ' → logprob: -17.62571144104004
    9. '    ' → logprob: -17.62571144104004
    10. '1' → logprob: -18.00071144104004

Token 2104: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.014183246530592442
    2. ' >' → logprob: -4.264183044433594
    3. '>
' → logprob: -11.139183044433594
    4. '>=' → logprob: -13.014183044433594
    5. ')>' → logprob: -13.889183044433594
    6. '
' → logprob: -14.264183044433594
    7. '   ' → logprob: -15.389183044433594
    8. ']>' → logprob: -15.514183044433594
    9. ')' → logprob: -15.764183044433594
    10. ' >
' → logprob: -16.014183044433594

Token 2105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003936152206733823
    2. ' ' → logprob: -7.875393390655518
    3. '   ' → logprob: -11.250393867492676
    4. '       ' → logprob: -15.875393867492676
    5. '           ' → logprob: -16.12539291381836
    6. '                   ' → logprob: -16.50039291381836
    7. '  ' → logprob: -16.87539291381836
    8. '    ' → logprob: -17.50039291381836
    9. '               ' → logprob: -17.50039291381836
    10. '     ' → logprob: -17.62539291381836

Token 2106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.875008583068848
    3. '   ' → logprob: -13.500008583068848
    4. '(' → logprob: -18.25000762939453
    5. '       ' → logprob: -18.75000762939453
    6. '           ' → logprob: -18.75000762939453
    7. '  ' → logprob: -19.12500762939453
    8. '
' → logprob: -19.37500762939453
    9. '                   ' → logprob: -20.12500762939453
    10. '```' → logprob: -20.12500762939453

Token 2107: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0625411868095398
    2. '-' → logprob: -2.8125412464141846
    3. '4' → logprob: -7.5625410079956055
    4. '2' → logprob: -11.312541007995605
    5. '1' → logprob: -11.312541007995605
    6. '           ' → logprob: -11.812541007995605
    7. '   ' → logprob: -12.312541007995605
    8. '```' → logprob: -12.687541007995605
    9. '
' → logprob: -12.812541007995605
    10. '3' → logprob: -12.812541007995605

Token 2108: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '```' → logprob: -17.875
    3. 'e' → logprob: -18.875
    4. '   ' → logprob: -19.25
    5. '       ' → logprob: -19.625
    6. '14' → logprob: -19.75
    7. '           ' → logprob: -20.25
    8. ' -' → logprob: -20.25
    9. '-
' → logprob: -21.125
    10. '
' → logprob: -22.375

Token 2109: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.0012330879690125585
    2. '15' → logprob: -7.251233100891113
    3. '13' → logprob: -8.001233100891113
    4. '12' → logprob: -8.626233100891113
    5. '10' → logprob: -12.751233100891113
    6. '-' → logprob: -13.126233100891113
    7. '16' → logprob: -14.001233100891113
    8. '+' → logprob: -14.501233100891113
    9. '```' → logprob: -14.938733100891113
    10. '11' → logprob: -15.063733100891113

Token 2110: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4166066646575928
    2. ']
' → logprob: -1.1666066646575928
    3. '       ' → logprob: -3.5416066646575928
    4. ']
' → logprob: -9.041606903076172
    5. ')' → logprob: -9.416606903076172
    6. ' ]
' → logprob: -10.041606903076172
    7. ' ]' → logprob: -10.041606903076172
    8. ']

' → logprob: -11.291606903076172
    9. '           ' → logprob: -11.416606903076172
    10. ')
' → logprob: -11.541606903076172

Token 2111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030837133526802063
    2. '
' → logprob: -6.1280837059021
    3. '           ' → logprob: -7.5030837059021
    4. 'return' → logprob: -8.628084182739258
    5. '	' → logprob: -9.253084182739258
    6. '   ' → logprob: -10.503084182739258
    7. '	return' → logprob: -10.878084182739258
    8. ' return' → logprob: -11.753084182739258
    9. '```' → logprob: -12.003084182739258
    10. ')
' → logprob: -13.378084182739258

Token 2112: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00867271889001131
    2. 'return' (adapté à ' return') → logprob: -4.758672714233398
    3. '   ' → logprob: -10.008672714233398
    4. ' return' → logprob: -11.633672714233398
    5. '	return' → logprob: -12.883672714233398
    6. '	' → logprob: -14.133672714233398
    7. '           ' → logprob: -14.133672714233398
    8. '
' → logprob: -15.508672714233398
    9. '      ' → logprob: -16.7586727142334
    10. '     ' → logprob: -17.0086727142334

Token 2113: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -4.5491004129871726e-05
    2. ' free' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.125045776367188
    4. '	free' → logprob: -19.375045776367188
    5. 'fre' → logprob: -20.125045776367188
    6. 'segments' → logprob: -20.875045776367188
    7. 'full' → logprob: -22.125045776367188
    8. '.free' → logprob: -22.250045776367188
    9. '       ' → logprob: -22.375045776367188
    10. '_free' → logprob: -23.000045776367188

Token 2114: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -5.512236498361744e-07
    2. 'segments' → logprob: -14.625000953674316
    3. 'Segments' → logprob: -18.125
    4. '_sequences' → logprob: -18.25
    5. '```' → logprob: -18.375
    6. '_' → logprob: -19.0
    7. ' _' → logprob: -19.25
    8. '_segment' → logprob: -20.125
    9. '\' → logprob: -20.125
    10. '_sections' → logprob: -20.25

Token 2115: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03573765233159065
    2. '
' → logprob: -3.5357377529144287
    3. 'def' → logprob: -5.41073751449585
    4. '```' → logprob: -7.16073751449585
    5. '<|end|>' → logprob: -7.66073751449585
    6. '    
' → logprob: -9.035737991333008
    7. '

' → logprob: -10.285737991333008
    8. '<|end|>' → logprob: -10.660737991333008
    9. ' def' → logprob: -11.160737991333008
    10. ')' → logprob: -11.660737991333008

Token 2116: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.003491380950435996
    2. 'len' → logprob: -5.753491401672363
    3. ' free' → logprob: -8.628491401672363
    4. 'True' → logprob: -9.128491401672363
    5. 'y' → logprob: -11.378491401672363
    6. 'segments' → logprob: -11.628491401672363
    7. 'true' → logprob: -14.128491401672363
    8. ' len' → logprob: -14.253491401672363
    9. 'nodes' → logprob: -14.378491401672363
    10. 'full' → logprob: -14.378491401672363

Token 2117: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.004064982756972313
    2. '       ' → logprob: -6.754065036773682
    3. 'Segments' → logprob: -7.379065036773682
    4. 'else' → logprob: -7.379065036773682
    5. 'segments' → logprob: -7.379065036773682
    6. '   ' → logprob: -8.004064559936523
    7. '>' → logprob: -8.629064559936523
    8. '           ' → logprob: -8.754064559936523
    9. ' else' → logprob: -9.629064559936523
    10. ' >' → logprob: -10.504064559936523

Token 2118: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.042637716978788376
    2. ' else' → logprob: -3.292637825012207
    3. '!=' → logprob: -5.542637825012207
    4. '<|end|>' → logprob: -8.167637825012207
    5. '[' → logprob: -8.917637825012207
    6. '!==' → logprob: -9.917637825012207
    7. ' !=' → logprob: -9.917637825012207
    8. '[:]' → logprob: -10.417637825012207
    9. '	else' → logprob: -10.917637825012207
    10. ')' → logprob: -11.167637825012207

Token 2119: ' corridors' (ID: 154015)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.029770279303193092
    2. '[]' → logprob: -3.5297703742980957
    3. ' [(' → logprob: -11.654769897460938
    4. '[((' → logprob: -12.279769897460938
    5. '[])' → logprob: -13.279769897460938
    6. '[]
' → logprob: -13.654769897460938
    7. '[' → logprob: -13.904769897460938
    8. '[]}' → logprob: -14.154769897460938
    9. '[].' → logprob: -14.404769897460938
    10. '[]

' → logprob: -14.904769897460938

Token 2120: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06627709418535233
    2. '
' → logprob: -3.191277027130127
    3. '<|end|>' → logprob: -4.191277027130127
    4. 'def' → logprob: -5.066277027130127
    5. '    
' → logprob: -7.441277027130127
    6. '```' → logprob: -7.941277027130127
    7. '

' → logprob: -8.816277503967285
    8. '<|end|>' → logprob: -8.816277503967285
    9. ')' → logprob: -9.566277503967285
    10. ' def' → logprob: -9.691277503967285

Token 2121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011866421438753605
    2. 'def' → logprob: -4.511866569519043
    3. '
' → logprob: -8.011866569519043
    4. '<|end|>' → logprob: -8.136866569519043
    5. ' def' → logprob: -9.386866569519043
    6. '    
' → logprob: -10.511866569519043
    7. '```' → logprob: -10.511866569519043
    8. '<|end|>' → logprob: -10.761866569519043
    9. '

' → logprob: -12.011866569519043
    10. ' ' → logprob: -12.511866569519043

Token 2122: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.143941730260849
    2. 'def' (adapté à ' def') → logprob: -2.018941640853882
    3. '
' → logprob: -6.893941879272461
    4. ' def' → logprob: -8.768941879272461
    5. '    
' → logprob: -9.393941879272461
    6. '

' → logprob: -13.018941879272461
    7. '```' → logprob: -13.018941879272461
    8. '        
' → logprob: -13.143941879272461
    9. ')' → logprob: -13.393941879272461
    10. '	def' → logprob: -13.643941879272461

Token 2123: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.06010458245873451
    2. ' build' → logprob: -3.5601046085357666
    3. ' _' → logprob: -4.1851043701171875
    4. 'build' → logprob: -4.5601043701171875
    5. 'def' → logprob: -6.3101043701171875
    6. '   ' → logprob: -7.4351043701171875
    7. ' def' → logprob: -7.9351043701171875
    8. '_generate' → logprob: -7.9351043701171875
    9. '_create' → logprob: -8.060104370117188
    10. '_connect' → logprob: -8.560104370117188

Token 2124: 'can' (ID: 6929)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.02688535861670971
    2. 'can' → logprob: -4.026885509490967
    3. 'connect' → logprob: -4.776885509490967
    4. '_build' → logprob: -9.401885032653809
    5. 'visible' → logprob: -9.901885032653809
    6. 'valid' → logprob: -10.776885032653809
    7. 'has' → logprob: -11.026885032653809
    8. 'create' → logprob: -11.026885032653809
    9. 'construct' → logprob: -11.151885032653809
    10. 'check' → logprob: -11.401885032653809

Token 2125: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -0.4298830032348633
    2. '_pass' → logprob: -1.4298830032348633
    3. '_tr' → logprob: -2.6798830032348633
    4. '_build' → logprob: -4.179883003234863
    5. '_jump' → logprob: -4.679883003234863
    6. '_move' → logprob: -4.929883003234863
    7. '_continue' → logprob: -6.554883003234863
    8. '_' → logprob: -6.554883003234863
    9. '_walk' → logprob: -7.054883003234863
    10. '_flow' → logprob: -7.179883003234863

Token 2126: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002833848411682993
    2. '(' → logprob: -8.250283241271973
    3. 'self' → logprob: -11.375283241271973
    4. '_(' → logprob: -12.375283241271973
    5. '(
' → logprob: -12.750283241271973
    6. '_points' → logprob: -13.375283241271973
    7. '_nodes' → logprob: -13.750283241271973
    8. '_' → logprob: -15.000283241271973
    9. '__(' → logprob: -15.750283241271973
    10. ' (' → logprob: -15.875283241271973

Token 2127: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002458430244587362
    2. '(' → logprob: -9.000246047973633
    3. 'self' → logprob: -9.625246047973633
    4. ' (' → logprob: -11.000246047973633
    5. '_(' → logprob: -11.750246047973633
    6. '   ' → logprob: -11.875246047973633
    7. '(
' → logprob: -12.375246047973633
    8. '_to' → logprob: -12.625246047973633
    9. ')' → logprob: -12.875246047973633
    10. ')(' → logprob: -13.125246047973633

Token 2128: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0003246183041483164
    2. 'a' → logprob: -8.625324249267578
    3. ' p' → logprob: -8.875324249267578
    4. '   ' → logprob: -12.375324249267578
    5. 'self' → logprob: -14.750324249267578
    6. '       ' → logprob: -15.500324249267578
    7. 'pt' → logprob: -16.375324249267578
    8. ')' → logprob: -16.625324249267578
    9. '	p' → logprob: -16.750324249267578
    10. 'A' → logprob: -17.000324249267578

Token 2129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031106919050216675
    2. ':' → logprob: -6.128110885620117
    3. ',' → logprob: -7.003110885620117
    4. ' :' → logprob: -11.878110885620117
    5. '_:' → logprob: -12.753110885620117
    6. ' ,' → logprob: -13.628110885620117
    7. 'oint' → logprob: -13.753110885620117
    8. '_,' → logprob: -14.128110885620117
    9. '   ' → logprob: -14.378110885620117
    10. '_' → logprob: -14.378110885620117

Token 2130: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009711332386359572
    2. ':' → logprob: -7.37597131729126
    3. ' ,' → logprob: -8.000970840454102
    4. ',p' → logprob: -12.000970840454102
    5. '   ' → logprob: -13.750970840454102
    6. ' p' → logprob: -14.000970840454102
    7. 'p' → logprob: -14.750970840454102
    8. ' ' → logprob: -14.875970840454102
    9. ' :' → logprob: -15.500970840454102
    10. '<|end|>' → logprob: -16.2509708404541

Token 2131: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.31392520666122437
    2. ' Point' → logprob: -1.3139252662658691
    3. ' p' → logprob: -7.438925266265869
    4. 'p' → logprob: -10.063924789428711
    5. '_Point' → logprob: -11.313924789428711
    6. '.Point' → logprob: -11.563924789428711
    7. '	Point' → logprob: -12.188924789428711
    8. '_point' → logprob: -13.188924789428711
    9. '(Point' → logprob: -13.688924789428711
    10. ' ' → logprob: -13.813924789428711

Token 2132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.029847231227905e-05
    2. ' ,' → logprob: -9.750080108642578
    3. ',p' → logprob: -10.750080108642578
    4. ',
' → logprob: -15.750080108642578
    5. '   ' → logprob: -16.000080108642578
    6. 'p' → logprob: -16.250080108642578
    7. ')' → logprob: -17.000080108642578
    8. ' p' → logprob: -17.375080108642578
    9. '_,' → logprob: -17.875080108642578
    10. '‌,' → logprob: -18.375080108642578

Token 2133: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5759444236755371
    2. 'p' → logprob: -0.8259444236755371
    3. '   ' → logprob: -12.950944900512695
    4. '    ' → logprob: -13.075944900512695
    5. ' ' → logprob: -15.325944900512695
    6. '	p' → logprob: -15.700944900512695
    7. ' ' → logprob: -16.325944900512695
    8. ',' → logprob: -17.200944900512695
    9. '       ' → logprob: -17.825944900512695
    10. '  ' → logprob: -17.825944900512695

Token 2134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014060820103622973
    2. ',' → logprob: -9.000140190124512
    3. '.' → logprob: -11.500140190124512
    4. ' ' → logprob: -13.375140190124512
    5. '.p' → logprob: -13.625140190124512
    6. 'p' → logprob: -13.750140190124512
    7. ')' → logprob: -14.375140190124512
    8. '   ' → logprob: -14.375140190124512
    9. ' p' → logprob: -14.750140190124512
    10. '```' → logprob: -15.000140190124512

Token 2135: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011300446465611458
    2. ')' → logprob: -4.511300563812256
    3. ',' → logprob: -8.511300086975098
    4. '):' → logprob: -10.386300086975098
    5. '   ' → logprob: -11.261300086975098
    6. ' :' → logprob: -12.261300086975098
    7. ' )' → logprob: -13.511300086975098
    8. '):
' → logprob: -14.511300086975098
    9. '       ' → logprob: -15.511300086975098
    10. '```' → logprob: -15.511300086975098

Token 2136: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.2014138251543045
    2. ' Point' → logprob: -1.701413869857788
    3. '	Point' → logprob: -15.076414108276367
    4. '_Point' → logprob: -16.201414108276367
    5. ' ' → logprob: -17.201414108276367
    6. 'p' → logprob: -17.826414108276367
    7. '_point' → logprob: -17.826414108276367
    8. ' p' → logprob: -18.201414108276367
    9. ' point' → logprob: -18.451414108276367
    10. '.Point' → logprob: -18.451414108276367

Token 2137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4060561776859686e-05
    2. '   ' → logprob: -10.500043869018555
    3. ' )' → logprob: -11.125043869018555
    4. ':' → logprob: -14.000043869018555
    5. '):
' → logprob: -15.250043869018555
    6. '):' → logprob: -15.375043869018555
    7. ' ' → logprob: -15.875043869018555
    8. '       ' → logprob: -16.500043869018555
    9. '  ' → logprob: -17.000043869018555
    10. '`)' → logprob: -17.000043869018555

Token 2138: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6086270213127136
    2. ' ->' → logprob: -0.8586270213127136
    3. '       ' → logprob: -3.7336270809173584
    4. ')' → logprob: -4.983626842498779
    5. ':' → logprob: -7.483626842498779
    6. '(self' → logprob: -7.608626842498779
    7. ')->' → logprob: -8.733627319335938
    8. '   ' → logprob: -9.233627319335938
    9. 'self' → logprob: -9.608627319335938
    10. ' self' → logprob: -12.233627319335938

Token 2139: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00864600669592619
    2. ' bool' → logprob: -4.758646011352539
    3. 'def' → logprob: -11.258646011352539
    4. '   ' → logprob: -11.633646011352539
    5. '```' → logprob: -13.383646011352539
    6. '
' → logprob: -13.508646011352539
    7. ')' → logprob: -14.133646011352539
    8. 'Bool' → logprob: -14.258646011352539
    9. '(bool' → logprob: -14.383646011352539
    10. '	bool' → logprob: -14.508646011352539

Token 2140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03962748125195503
    2. '       ' → logprob: -3.6646275520324707
    3. ':
' → logprob: -4.414627552032471
    4. '   ' → logprob: -7.789627552032471
    5. '<|end|>' → logprob: -8.164627075195312
    6. '):' → logprob: -8.914627075195312
    7. '):
' → logprob: -10.039627075195312
    8. '():' → logprob: -10.164627075195312
    9. '(self' → logprob: -10.414627075195312
    10. '():
' → logprob: -10.539627075195312

Token 2141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.0536883615423e-05
    2. ' return' → logprob: -10.500080108642578
    3. 'return' → logprob: -11.375080108642578
    4. ' 
' → logprob: -11.500080108642578
    5. '
' → logprob: -12.125080108642578
    6. '   ' → logprob: -12.375080108642578
    7. '        
' → logprob: -12.500080108642578
    8. ' #' → logprob: -13.000080108642578
    9. ':' → logprob: -13.125080108642578
    10. '#' → logprob: -13.375080108642578

Token 2142: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14930810034275055
    2. 'for' → logprob: -2.149308204650879
    3. 'return' → logprob: -4.899308204650879
    4. '
' → logprob: -5.149308204650879
    5. ' for' → logprob: -5.274308204650879
    6. 'if' → logprob: -5.649308204650879
    7. ' if' → logprob: -9.149308204650879
    8. '#' (adapté à ' #') → logprob: -9.774308204650879
    9. 'not' → logprob: -11.024308204650879
    10. ' return' → logprob: -11.149308204650879

Token 2143: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.185444176197052
    2. 'if' → logprob: -1.9354441165924072
    3. 'return' → logprob: -4.060444355010986
    4. '       ' → logprob: -5.435444355010986
    5. 'p' → logprob: -6.560444355010986
    6. '#' → logprob: -7.060444355010986
    7. ' for' → logprob: -7.560444355010986
    8. 'self' → logprob: -9.060443878173828
    9. '   ' → logprob: -9.185443878173828
    10. '
' → logprob: -9.310443878173828

Token 2144: ' segment' (ID: 14806)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.064291000366211
    2. 'self' → logprob: -1.689291000366211
    3. ' self' → logprob: -1.689291000366211
    4. '(' → logprob: -2.064291000366211
    5. 'not' → logprob: -2.689291000366211
    6. ' (' → logprob: -3.939291000366211
    7. ' if' → logprob: -4.314291000366211
    8. ' p' → logprob: -4.689291000366211
    9. '(
' → logprob: -4.689291000366211
    10. '       ' → logprob: -4.689291000366211

Token 2145: ' p' (ID: 275)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1360490769147873
    2. 'not' → logprob: -2.6360490322113037
    3. '(p' → logprob: -3.1360490322113037
    4. ' in' → logprob: -5.386049270629883
    5. ' return' → logprob: -6.136049270629883
    6. ' self' → logprob: -7.136049270629883
    7. 'self' → logprob: -7.386049270629883
    8. '       ' → logprob: -7.386049270629883
    9. 'return' → logprob: -7.386049270629883
    10. '(' → logprob: -7.636049270629883

Token 2146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.098748053773306e-05
    2. 'oint' → logprob: -11.12506103515625
    3. 'oints' → logprob: -11.25006103515625
    4. '
' → logprob: -11.50006103515625
    5. 'r' → logprob: -11.62506103515625
    6. '```' → logprob: -12.25006103515625
    7. '2' → logprob: -12.50006103515625
    8. 'ython' → logprob: -13.50006103515625
    9. '_' → logprob: -14.12506103515625
    10. ' ' → logprob: -15.00006103515625

Token 2147: 'p' (ID: 79)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03390628099441528
    2. ',p' → logprob: -3.5339062213897705
    3. 'p' → logprob: -6.15890645980835
    4. ' ,' → logprob: -6.53390645980835
    5. ',
' → logprob: -7.78390645980835
    6. ' p' → logprob: -9.658905982971191
    7. 'and' → logprob: -10.783905982971191
    8. '.p' → logprob: -11.158905982971191
    9. '==' → logprob: -11.658905982971191
    10. ')' → logprob: -11.658905982971191

Token 2148: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07769917696714401
    2. 'oint' → logprob: -2.7026991844177246
    3. ',' → logprob: -5.577699184417725
    4. 'oints' → logprob: -6.077699184417725
    5. '```' → logprob: -7.827699184417725
    6. '_' → logprob: -7.952699184417725
    7. 'oin' → logprob: -8.702698707580566
    8. '2' → logprob: -8.952698707580566
    9. '   ' → logprob: -9.077698707580566
    10. 'ython' → logprob: -9.327698707580566

Token 2149: ' does' (ID: 2226)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12814053893089294
    2. ' not' → logprob: -2.753140449523926
    3. ' in' → logprob: -3.878140449523926
    4. ',' → logprob: -4.128140449523926
    5. ' if' → logprob: -5.628140449523926
    6. ':' → logprob: -5.753140449523926
    7. ')' → logprob: -6.503140449523926
    8. ':
' → logprob: -6.503140449523926
    9. ' for' → logprob: -6.628140449523926
    10. '           ' → logprob: -6.628140449523926

Token 2150: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.47410550713539124
    2. 'not' → logprob: -0.9741054773330688
    3. 'n't' → logprob: -10.974105834960938
    4. ')' → logprob: -12.474105834960938
    5. '_not' → logprob: -12.474105834960938
    6. '	not' → logprob: -13.849105834960938
    7. '       ' → logprob: -13.974105834960938
    8. '...' → logprob: -14.224105834960938
    9. '```' → logprob: -15.599105834960938
    10. '   ' → logprob: -15.724105834960938

Token 2151: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.12738631665706635
    2. ' intersect' → logprob: -2.1273863315582275
    3. ' cross' → logprob: -9.127386093139648
    4. '_inter' → logprob: -9.502386093139648
    5. ' pass' → logprob: -10.377386093139648
    6. 'cross' → logprob: -10.502386093139648
    7. ' intersects' → logprob: -10.502386093139648
    8. '.inter' → logprob: -10.627386093139648
    9. '<|end|>' → logprob: -10.752386093139648
    10. ' collide' → logprob: -10.877386093139648

Token 2152: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.11442435532808304
    2. 'any' → logprob: -2.239424467086792
    3. 'self' → logprob: -6.864424228668213
    4. ' self' → logprob: -8.114424705505371
    5. '_any' → logprob: -8.989424705505371
    6. '
' → logprob: -10.114424705505371
    7. '       ' → logprob: -10.489424705505371
    8. '<|end|>' → logprob: -10.989424705505371
    9. ' polygons' → logprob: -11.739424705505371
    10. 'Any' → logprob: -11.739424705505371

Token 2153: ' pillar' (ID: 109066)
  Prédit: 'pillar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pillar' → logprob: -0.06375488638877869
    2. ' pillar' → logprob: -3.3137547969818115
    3. 'polygon' → logprob: -4.188755035400391
    4. 'self' → logprob: -5.688755035400391
    5. 'pill' → logprob: -6.063755035400391
    6. 'poly' → logprob: -6.813755035400391
    7. ' polygon' → logprob: -6.938755035400391
    8. 'p' → logprob: -6.938755035400391
    9. 'Polygon' → logprob: -7.188755035400391
    10. ' self' → logprob: -8.43875503540039

Token 2154: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2625225782394409
    2. '(p' → logprob: -2.2625226974487305
    3. '   ' → logprob: -3.0125226974487305
    4. '.' → logprob: -3.3875226974487305
    5. ' and' → logprob: -4.1375226974487305
    6. ',' → logprob: -5.0125226974487305
    7. ')' → logprob: -5.0125226974487305
    8. ':
' → logprob: -6.0125226974487305
    9. 'and' → logprob: -6.2625226974487305
    10. ':' → logprob: -6.3875226974487305

Token 2155: ' walls' (ID: 20562)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5893785357475281
    2. 'self' → logprob: -1.4643785953521729
    3. ' p' → logprob: -1.7143785953521729
    4. ' not' → logprob: -4.464378356933594
    5. 'not' → logprob: -4.464378356933594
    6. ' self' → logprob: -4.964378356933594
    7. ' any' → logprob: -6.589378356933594
    8. 'any' → logprob: -7.214378356933594
    9. 'poly' → logprob: -8.214378356933594
    10. 'point' → logprob: -8.589378356933594

Token 2156: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19262972474098206
    2. ' and' → logprob: -2.067629814147949
    3. ')' → logprob: -4.067629814147949
    4. '   ' → logprob: -4.317629814147949
    5. ':' → logprob: -5.317629814147949
    6. ',' → logprob: -5.692629814147949
    7. '.' → logprob: -5.817629814147949
    8. ' (' → logprob: -6.692629814147949
    9. 'and' → logprob: -7.067629814147949
    10. '[' → logprob: -7.317629814147949

Token 2157: 'except' (ID: 25035)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2842347025871277
    2. ' p' → logprob: -2.1592347621917725
    3. 'Point' → logprob: -2.5342347621917725
    4. ')' → logprob: -3.5342347621917725
    5. ' Point' → logprob: -4.784234523773193
    6. '(Point' → logprob: -5.159234523773193
    7. 'self' → logprob: -5.659234523773193
    8. '(p' → logprob: -6.784234523773193
    9. ' or' → logprob: -7.034234523773193
    10. '0' → logprob: -7.909234523773193

Token 2158: ' if' (ID: 538)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.8428340554237366
    2. ' p' → logprob: -1.7178339958190918
    3. 'p' → logprob: -1.9678339958190918
    4. ' if' → logprob: -2.467833995819092
    5. 'at' → logprob: -3.217833995819092
    6. ' endpoints' → logprob: -3.342833995819092
    7. 'if' → logprob: -3.717833995819092
    8. ' for' → logprob: -3.967833995819092
    9. 'for' → logprob: -4.092833995819092
    10. ' on' → logprob: -5.342833995819092

Token 2159: ' at' (ID: 540)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04688737541437149
    2. 'p' → logprob: -3.1718873977661133
    3. '(abs' → logprob: -5.796887397766113
    4. ' abs' → logprob: -7.421887397766113
    5. 'math' → logprob: -9.546887397766113
    6. 'min' → logprob: -9.671887397766113
    7. '(p' → logprob: -9.921887397766113
    8. '   ' → logprob: -10.296887397766113
    9. '(' → logprob: -12.171887397766113
    10. 'max' → logprob: -12.546887397766113

Token 2160: ' corridor' (ID: 92467)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.350725382566452
    2. '0' → logprob: -2.1007254123687744
    3. 'p' → logprob: -2.3507254123687744
    4. 'y' → logprob: -2.8507254123687744
    5. 'boundary' → logprob: -5.350725173950195
    6. ' p' → logprob: -5.725725173950195
    7. 'the' → logprob: -5.725725173950195
    8. 'bound' → logprob: -6.225725173950195
    9. 'exact' → logprob: -6.350725173950195
    10. ' y' → logprob: -6.350725173950195

Token 2161: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.36587923765182495
    2. ' boundaries' → logprob: -2.1158792972564697
    3. 'edges' → logprob: -2.4908792972564697
    4. ')' → logprob: -3.8658792972564697
    5. '   ' → logprob: -4.240879058837891
    6. ' borders' → logprob: -4.490879058837891
    7. 'boundary' → logprob: -5.115879058837891
    8. 'bounds' → logprob: -5.115879058837891
    9. 'bound' → logprob: -5.240879058837891
    10. ' boundary' → logprob: -5.240879058837891

Token 2162: ' at' (ID: 540)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0053356243297457695
    2. ' or' → logprob: -5.630335807800293
    3. ')
' → logprob: -7.255335807800293
    4. '):' → logprob: -7.755335807800293
    5. ' and' → logprob: -8.505335807800293
    6. ' )' → logprob: -9.005335807800293
    7. '):
' → logprob: -9.255335807800293
    8. '.' → logprob: -9.755335807800293
    9. ',' → logprob: -11.005335807800293
    10. ':' → logprob: -11.255335807800293

Token 2163: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.48344284296035767
    2. '0' → logprob: -0.9834428429603577
    3. 'y' → logprob: -4.858442783355713
    4. ' x' → logprob: -7.233442783355713
    5. 'p' → logprob: -7.858442783355713
    6. ' ' → logprob: -8.608443260192871
    7. ' y' → logprob: -9.233443260192871
    8. '   ' → logprob: -9.733443260192871
    9. ')' → logprob: -9.983443260192871
    10. '(' → logprob: -11.608443260192871

Token 2164: '=' (ID: 28)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48841434717178345
    2. '=' → logprob: -0.9884143471717834
    3. ')' → logprob: -4.613414287567139
    4. ' =' → logprob: -5.988414287567139
    5. ' ' → logprob: -7.238414287567139
    6. '==' → logprob: -7.363414287567139
    7. ',' → logprob: -8.738414764404297
    8. ' ==' → logprob: -9.863414764404297
    9. '[' → logprob: -10.113414764404297
    10. '   ' → logprob: -10.488414764404297

Token 2165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.250158309936523
    4. ')' → logprob: -16.625158309936523
    5. '`' → logprob: -17.125158309936523
    6. '    ' → logprob: -17.750158309936523
    7. '```' → logprob: -17.750158309936523
    8. '  ' → logprob: -18.000158309936523
    9. '1' → logprob: -18.250158309936523
    10. '=' → logprob: -19.125158309936523

Token 2166: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08704227954149246
    2. 'or' → logprob: -2.5870423316955566
    3. ')' → logprob: -4.837042331695557
    4. ',' → logprob: -8.962041854858398
    5. ' and' → logprob: -10.587041854858398
    6. '0' → logprob: -11.462041854858398
    7. ' )' → logprob: -11.587041854858398
    8. 'and' → logprob: -12.087041854858398
    9. ')
' → logprob: -12.962041854858398
    10. ' ' → logprob: -13.212041854858398

Token 2167: ' x' (ID: 1215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4671696424484253
    2. 'self' → logprob: -1.2171696424484253
    3. ' self' → logprob: -2.592169761657715
    4. ' ' → logprob: -6.092169761657715
    5. '1' → logprob: -10.592169761657715
    6. '   ' → logprob: -11.842169761657715
    7. '```' → logprob: -13.717169761657715
    8. '	self' → logprob: -13.842169761657715
    9. '<|end|>' → logprob: -13.842169761657715
    10. ' ' → logprob: -13.967169761657715

Token 2168: '=W' (ID: 177181)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005940770730376244
    2. '0' → logprob: -5.755940914154053
    3. ',' → logprob: -6.630940914154053
    4. ' =' → logprob: -7.505940914154053
    5. '==' → logprob: -7.880940914154053
    6. ' or' → logprob: -8.505940437316895
    7. ')' → logprob: -8.880940437316895
    8. '<|end|>' → logprob: -9.880940437316895
    9. ' ' → logprob: -10.380940437316895
    10. '.' → logprob: -10.505940437316895

Token 2169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006175740156322718
    2. '):' → logprob: -5.756175518035889
    3. '):
' → logprob: -6.506175518035889
    4. ' or' → logprob: -7.256175518035889
    5. ')
' → logprob: -7.881175518035889
    6. '       ' → logprob: -8.881175994873047
    7. ' and' → logprob: -8.881175994873047
    8. ' )' → logprob: -9.881175994873047
    9. '   ' → logprob: -10.256175994873047
    10. ').' → logprob: -11.506175994873047

Token 2170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.346322238445282
    2. ':' → logprob: -1.4713222980499268
    3. ':
' → logprob: -3.0963222980499268
    4. '   ' → logprob: -4.471322059631348
    5. '(' → logprob: -6.471322059631348
    6. '(
' → logprob: -6.846322059631348
    7. ',' → logprob: -7.471322059631348
    8. '```' → logprob: -7.596322059631348
    9. '.' → logprob: -7.846322059631348
    10. '{' → logprob: -8.346322059631348

Token 2171: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7118699550628662
    2. 'if' (adapté à ' if') → logprob: -1.0868699550628662
    3. 'for' → logprob: -1.9618699550628662
    4. ' if' → logprob: -3.836869955062866
    5. ' for' → logprob: -4.711870193481445
    6. '
' → logprob: -7.836870193481445
    7. '```' → logprob: -8.961870193481445
    8. '   ' → logprob: -9.336870193481445
    9. 'return' → logprob: -9.836870193481445
    10. 'p' → logprob: -10.086870193481445

Token 2172: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4815540611743927
    2. 'abs' → logprob: -0.9815540313720703
    3. '(abs' → logprob: -5.73155403137207
    4. 'min' → logprob: -6.85655403137207
    5. '(p' → logprob: -6.85655403137207
    6. 'any' → logprob: -7.23155403137207
    7. ' abs' → logprob: -7.35655403137207
    8. 'not' → logprob: -7.85655403137207
    9. ' p' → logprob: -8.73155403137207
    10. '(min' → logprob: -9.85655403137207

Token 2173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012999906903132796
    2. '2' → logprob: -9.875129699707031
    3. '.x' → logprob: -10.125129699707031
    4. 'p' → logprob: -11.250129699707031
    5. 'x' → logprob: -11.250129699707031
    6. 'abs' → logprob: -12.625129699707031
    7. 'oints' → logprob: -13.375129699707031
    8. '
' → logprob: -13.750129699707031
    9. 'oint' → logprob: -13.750129699707031
    10. ' p' → logprob: -14.437629699707031

Token 2174: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00027802068507298827
    2. '.' → logprob: -8.37527847290039
    3. ' .' → logprob: -11.12527847290039
    4. 'x' → logprob: -11.50027847290039
    5. ' ==' → logprob: -11.50027847290039
    6. '==' → logprob: -12.12527847290039
    7. '.y' → logprob: -12.50027847290039
    8. ' is' → logprob: -13.87527847290039
    9. '<|end|>' → logprob: -14.37527847290039
    10. '<|end|>' → logprob: -15.12527847290039

Token 2175: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8988247513771057
    2. ' ==' → logprob: -1.148824691772461
    3. ' <=' → logprob: -2.273824691772461
    4. '==' → logprob: -2.398824691772461
    5. '<' → logprob: -3.023824691772461
    6. '<=' → logprob: -3.773824691772461
    7. ' ' → logprob: -5.273824691772461
    8. '0' → logprob: -5.398824691772461
    9. ' in' → logprob: -7.898824691772461
    10. '<|end|>' → logprob: -9.398824691772461

Token 2176: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007223221473395824
    2. '0' → logprob: -7.375722408294678
    3. ' -' → logprob: -9.37572193145752
    4. '1' → logprob: -13.12572193145752
    5. '-\' → logprob: -13.12572193145752
    6. '-w' → logprob: -14.50072193145752
    7. '-_' → logprob: -14.50072193145752
    8. '-s' → logprob: -14.87572193145752
    9. '-t' → logprob: -14.87572193145752
    10. '-.' → logprob: -15.00072193145752

Token 2177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.375021934509277
    4. '-' → logprob: -15.625021934509277
    5. '  ' → logprob: -17.125022888183594
    6. '
' → logprob: -17.875022888183594
    7. '```' → logprob: -17.875022888183594
    8. '+' → logprob: -18.375022888183594
    9. '0' → logprob: -18.625022888183594
    10. '       ' → logprob: -19.250022888183594

Token 2178: 'e' (ID: 68)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -10.500029563903809
    3. '   ' → logprob: -14.500029563903809
    4. '-' → logprob: -14.500029563903809
    5. '+' → logprob: -15.250029563903809
    6. '
' → logprob: -15.750029563903809
    7. '  ' → logprob: -16.625028610229492
    8. 'e' → logprob: -17.000028610229492
    9. '=' → logprob: -17.125028610229492
    10. '```' → logprob: -17.250028610229492

Token 2179: '-' (ID: 12)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.26665863394737244
    2. '-' → logprob: -1.7666586637496948
    3. '14' → logprob: -2.7666585445404053
    4. '10' → logprob: -9.266658782958984
    5. '12' → logprob: -9.266658782958984
    6. '13' → logprob: -10.141658782958984
    7. ' ' → logprob: -11.391658782958984
    8. '8' → logprob: -11.391658782958984
    9. '   ' → logprob: -11.641658782958984
    10. '7' → logprob: -11.891658782958984

Token 2180: '10' (ID: 702)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.027032485231757164
    2. '14' → logprob: -4.652032375335693
    3. '12' → logprob: -4.777032375335693
    4. '10' → logprob: -5.527032375335693
    5. '9' → logprob: -5.902032375335693
    6. '8' → logprob: -6.402032375335693
    7. '13' → logprob: -8.777032852172852
    8. '7' → logprob: -8.902032852172852
    9. '11' → logprob: -10.527032852172852
    10. '6' → logprob: -11.527032852172852

Token 2181: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005303488578647375
    2. 'or' → logprob: -5.255303382873535
    3. ' ' → logprob: -10.255303382873535
    4. ' and' → logprob: -11.005303382873535
    5. '       ' → logprob: -12.505303382873535
    6. '    ' → logprob: -12.630303382873535
    7. 'and' → logprob: -12.755303382873535
    8. '        ' → logprob: -12.880303382873535
    9. '   ' → logprob: -13.505303382873535
    10. ':' → logprob: -13.755303382873535

Token 2182: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00465476093813777
    2. ' p' → logprob: -5.379654884338379
    3. '  ' → logprob: -11.504654884338379
    4. '   ' → logprob: -11.629654884338379
    5. ' ' → logprob: -12.254654884338379
    6. '      ' → logprob: -12.879654884338379
    7. '    ' → logprob: -13.254654884338379
    8. '       ' → logprob: -13.504654884338379
    9. '     ' → logprob: -13.754654884338379
    10. ' ' → logprob: -13.754654884338379

Token 2183: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04309225082397461
    2. '2' → logprob: -3.6680922508239746
    3. '1' → logprob: -4.793092250823975
    4. ' p' → logprob: -4.793092250823975
    5. ' ' → logprob: -10.793092727661133
    6. '0' → logprob: -11.543092727661133
    7. '>' → logprob: -11.793092727661133
    8. '   ' → logprob: -11.793092727661133
    9. '.p' → logprob: -11.918092727661133
    10. 'x' → logprob: -11.918092727661133

Token 2184: '.x' (ID: 3700)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7398647665977478
    2. ' >' → logprob: -1.2398648262023926
    3. 'x' → logprob: -1.7398648262023926
    4. '.x' → logprob: -3.4898648262023926
    5. ' <' → logprob: -4.614864826202393
    6. '<' → logprob: -4.614864826202393
    7. ' ' → logprob: -6.114864826202393
    8. ' x' → logprob: -6.364864826202393
    9. '>x' → logprob: -6.364864826202393
    10. '<x' → logprob: -8.114864349365234

Token 2185: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.478082537651062
    2. '>' → logprob: -0.978082537651062
    3. ' <' → logprob: -5.853082656860352
    4. '<' → logprob: -7.228082656860352
    5. ' ' → logprob: -7.978082656860352
    6. ')' → logprob: -11.728082656860352
    7. ' >
' → logprob: -11.978082656860352
    8. '-' → logprob: -12.228082656860352
    9. '   ' → logprob: -12.228082656860352
    10. '  ' → logprob: -12.478082656860352

Token 2186: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002787359117064625
    2. ' self' → logprob: -8.25027847290039
    3. '1' → logprob: -11.12527847290039
    4. '   ' → logprob: -13.87527847290039
    5. '
' → logprob: -14.00027847290039
    6. ' ' → logprob: -14.75027847290039
    7. '(self' → logprob: -15.50027847290039
    8. '0' → logprob: -15.87527847290039
    9. '  ' → logprob: -16.62527847290039
    10. '[self' → logprob: -17.00027847290039

Token 2187: '.width' (ID: 11038)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010807292710524052
    2. ' self' → logprob: -9.750107765197754
    3. 'width' → logprob: -10.125107765197754
    4. '1' → logprob: -12.625107765197754
    5. '0' → logprob: -13.375107765197754
    6. 'w' → logprob: -13.875107765197754
    7. '
' → logprob: -14.375107765197754
    8. '.self' → logprob: -14.500107765197754
    9. '.width' → logprob: -14.750107765197754
    10. '+' → logprob: -14.750107765197754

Token 2188: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868805766105652
    2. ' +' → logprob: -1.13688063621521
    3. '   ' → logprob: -11.886880874633789
    4. '       ' → logprob: -13.511880874633789
    5. ' ' → logprob: -14.011880874633789
    6. '    ' → logprob: -15.261880874633789
    7. '  ' → logprob: -16.88688087463379
    8. '1' → logprob: -17.01188087463379
    9. '           ' → logprob: -17.01188087463379
    10. '＋' → logprob: -17.13688087463379

Token 2189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -14.875011444091797
    4. '  ' → logprob: -17.125011444091797
    5. '
' → logprob: -18.375011444091797
    6. '           ' → logprob: -18.625011444091797
    7. '```' → logprob: -19.000011444091797
    8. '+' → logprob: -19.125011444091797
    9. '       ' → logprob: -19.375011444091797
    10. '-' → logprob: -19.500011444091797

Token 2190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.375006675720215
    4. '  ' → logprob: -17.7500057220459
    5. '+' → logprob: -18.3750057220459
    6. '-' → logprob: -19.0000057220459
    7. '```' → logprob: -19.2500057220459
    8. '0' → logprob: -19.6250057220459
    9. '           ' → logprob: -20.0000057220459
    10. '(' → logprob: -20.2500057220459

Token 2191: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0007090978906489909
    2. '-' → logprob: -7.750709056854248
    3. '.' → logprob: -8.750709533691406
    4. '1' → logprob: -9.875709533691406
    5. '.e' → logprob: -10.500709533691406
    6. '*' → logprob: -10.875709533691406
    7. '**' → logprob: -12.125709533691406
    8. '0' → logprob: -12.625709533691406
    9. '
' → logprob: -12.625709533691406
    10. '[' → logprob: -12.625709533691406

Token 2192: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -19.125
    3. 'e' → logprob: -19.5
    4. '{-' → logprob: -19.5
    5. '   ' → logprob: -19.75
    6. '**' → logprob: -19.875
    7. '(-' → logprob: -20.0
    8. '[-' → logprob: -20.125
    9. '```' → logprob: -20.375
    10. '
' → logprob: -20.5

Token 2193: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008625566959381104
    2. '-' → logprob: -4.758625507354736
    3. '15' → logprob: -12.883625984191895
    4. '
' → logprob: -13.258625984191895
    5. '```' → logprob: -13.258625984191895
    6. '   ' → logprob: -13.883625984191895
    7. '5' → logprob: -14.508625984191895
    8. '``' → logprob: -14.883625984191895
    9. '1' → logprob: -14.946125984191895
    10. '(-' → logprob: -15.071125984191895

Token 2194: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.009950745850801468
    2. 'or' → logprob: -4.634950637817383
    3. '           ' → logprob: -9.009950637817383
    4. '            ' → logprob: -10.134950637817383
    5. '        ' → logprob: -10.884950637817383
    6. ' ' → logprob: -12.259950637817383
    7. '    ' → logprob: -12.509950637817383
    8. '       ' → logprob: -13.259950637817383
    9. '          ' → logprob: -13.759950637817383
    10. '   ' → logprob: -14.134950637817383

Token 2195: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.27370473742485046
    2. '           ' → logprob: -1.5237047672271729
    3. '       ' → logprob: -3.898704767227173
    4. '        ' → logprob: -7.648704528808594
    5. '   ' → logprob: -8.398704528808594
    6. 'or' → logprob: -8.398704528808594
    7. '          ' → logprob: -9.523704528808594
    8. '    ' → logprob: -9.648704528808594
    9. ':
' → logprob: -10.273704528808594
    10. '            ' → logprob: -10.523704528808594

Token 2196: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6079591512680054
    2. 'return' (adapté à ' return') → logprob: -0.8579591512680054
    3. '           ' → logprob: -3.482959270477295
    4. '   ' → logprob: -8.232958793640137
    5. '       ' → logprob: -8.357958793640137
    6. '
' → logprob: -8.982958793640137
    7. ' 
' → logprob: -9.732958793640137
    8. '	return' → logprob: -10.107958793640137
    9. ' ' → logprob: -10.232958793640137
    10. '    ' → logprob: -11.982958793640137

Token 2197: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.128163257315464e-07
    2. ' False' → logprob: -15.25
    3. '(False' → logprob: -21.625
    4. 'True' → logprob: -23.125
    5. 'false' → logprob: -23.125
    6. '
' → logprob: -23.875
    7. '=False' → logprob: -24.0
    8. 'F' → logprob: -26.0
    9. '```' → logprob: -26.0
    10. 'FALSE' → logprob: -26.125

Token 2198: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7787061333656311
    2. '
' → logprob: -0.9037061333656311
    3. '<|end|>' → logprob: -3.2787060737609863
    4. ' or' → logprob: -3.5287060737609863
    5. ' 
' → logprob: -3.5287060737609863
    6. ' if' → logprob: -4.528706073760986
    7. 'if' → logprob: -4.653706073760986
    8. '  
' → logprob: -5.153706073760986
    9. '   ' → logprob: -5.528706073760986
    10. '    
' → logprob: -6.403706073760986

Token 2199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.51466965675354
    2. ' if' → logprob: -1.38966965675354
    3. 'if' → logprob: -1.88966965675354
    4. '
' → logprob: -6.764669418334961
    5. '   ' → logprob: -7.264669418334961
    6. ' 
' → logprob: -10.014669418334961
    7. ' or' → logprob: -10.514669418334961
    8. '        
' → logprob: -11.514669418334961
    9. '```' → logprob: -11.639669418334961
    10. ' ' → logprob: -11.764669418334961

Token 2200: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00038562860572710633
    2. '       ' → logprob: -8.250385284423828
    3. ' if' → logprob: -9.000385284423828
    4. 'for' → logprob: -14.125385284423828
    5. '   ' → logprob: -16.125385284423828
    6. '
' → logprob: -16.500385284423828
    7. 'p' → logprob: -17.750385284423828
    8. 'return' → logprob: -19.750385284423828
    9. 'If' → logprob: -20.000385284423828
    10. '```' → logprob: -20.500385284423828

Token 2201: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14287440478801727
    2. ' p' → logprob: -2.0178744792938232
    3. '   ' → logprob: -8.767874717712402
    4. '    ' → logprob: -10.517874717712402
    5. 'abs' → logprob: -11.642874717712402
    6. '  ' → logprob: -13.017874717712402
    7. ' ' → logprob: -13.142874717712402
    8. '     ' → logprob: -14.017874717712402
    9. ' abs' → logprob: -14.142874717712402
    10. '       ' → logprob: -14.267874717712402

Token 2202: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04568392410874367
    2. '2' → logprob: -3.1706838607788086
    3. '.' → logprob: -6.295683860778809
    4. '.x' → logprob: -7.920683860778809
    5. '.p' → logprob: -8.795683860778809
    6. 'p' → logprob: -9.045683860778809
    7. '._' → logprob: -9.295683860778809
    8. '   ' → logprob: -9.795683860778809
    9. ' ' → logprob: -11.295683860778809
    10. '.__' → logprob: -11.420683860778809

Token 2203: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.002338781487196684
    2. ' <' → logprob: -6.502338886260986
    3. '<' → logprob: -7.877338886260986
    4. '.' → logprob: -8.377338409423828
    5. 'x' → logprob: -9.127338409423828
    6. ' ' → logprob: -10.002338409423828
    7. '<x' → logprob: -10.127338409423828
    8. ' .' → logprob: -10.877338409423828
    9. ' x' → logprob: -11.627338409423828
    10. '   ' → logprob: -13.127338409423828

Token 2204: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09477877616882324
    2. '<' → logprob: -2.4697787761688232
    3. ' >' → logprob: -5.219779014587402
    4. '>' → logprob: -7.969779014587402
    5. ' ' → logprob: -9.719779014587402
    6. '<-' → logprob: -12.719779014587402
    7. '   ' → logprob: -13.219779014587402
    8. '<p' → logprob: -13.844779014587402
    9. '  ' → logprob: -14.094779014587402
    10. ' <-' → logprob: -15.469779014587402

Token 2205: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10020699352025986
    2. ' -' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.350207328796387
    4. '   ' → logprob: -16.10020637512207
    5. '-p' → logprob: -18.97520637512207
    6. '  ' → logprob: -18.97520637512207
    7. '       ' → logprob: -19.10020637512207
    8. '           ' → logprob: -19.85020637512207
    9. '−' → logprob: -20.35020637512207
    10. '     ' → logprob: -20.47520637512207

Token 2206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '0' → logprob: -16.875001907348633
    4. '```' → logprob: -17.250001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '-' → logprob: -17.750001907348633
    7. '  ' → logprob: -19.125001907348633
    8. '
' → logprob: -19.250001907348633
    9. '           ' → logprob: -19.750001907348633
    10. '(' → logprob: -20.562501907348633

Token 2207: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.005935670807957649
    2. '1' → logprob: -5.1309356689453125
    3. '.' → logprob: -12.505935668945312
    4. '.e' → logprob: -13.880935668945312
    5. '```' → logprob: -14.005935668945312
    6. '-' → logprob: -14.380935668945312
    7. '
' → logprob: -15.130935668945312
    8. '-e' → logprob: -15.380935668945312
    9. '0' → logprob: -15.630935668945312
    10. ' ' → logprob: -16.005935668945312

Token 2208: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.7697225252486533e-06
    2. '10' → logprob: -12.500003814697266
    3. '```' → logprob: -17.125003814697266
    4. '+' → logprob: -17.875003814697266
    5. ' -' → logprob: -18.000003814697266
    6. '1' → logprob: -18.375003814697266
    7. 'e' → logprob: -18.500003814697266
    8. '0' → logprob: -18.625003814697266
    9. '.' → logprob: -19.625003814697266
    10. '−' → logprob: -19.875003814697266

Token 2209: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.250000953674316
    3. '```' → logprob: -16.125
    4. ' ' → logprob: -17.75
    5. '
' → logprob: -18.125
    6. '0' → logprob: -18.125
    7. '{' → logprob: -18.375
    8. '-' → logprob: -18.6875
    9. '   ' → logprob: -18.75
    10. '110' → logprob: -18.8125

Token 2210: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005234713666141033
    2. 'or' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.130234718322754
    4. '	or' → logprob: -15.130234718322754
    5. '   ' → logprob: -18.755233764648438
    6. '    ' → logprob: -19.005233764648438
    7. '  ' → logprob: -19.130233764648438
    8. ' ' → logprob: -19.130233764648438
    9. '1' → logprob: -19.380233764648438
    10. ',' → logprob: -19.630233764648438

Token 2211: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16028372943401337
    2. ' p' → logprob: -1.9102836847305298
    3. 'self' → logprob: -9.910284042358398
    4. ' self' → logprob: -12.285284042358398
    5. '   ' → logprob: -13.035284042358398
    6. '       ' → logprob: -13.410284042358398
    7. '	p' → logprob: -14.910284042358398
    8. '1' → logprob: -15.160284042358398
    9. '$p' → logprob: -15.410284042358398
    10. ' ' → logprob: -15.660284042358398

Token 2212: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0053985766135156155
    2. 'p' → logprob: -5.255398750305176
    3. '1' → logprob: -8.755398750305176
    4. ' p' → logprob: -12.380398750305176
    5. '.p' → logprob: -14.130398750305176
    6. '<p' → logprob: -14.630398750305176
    7. '(p' → logprob: -14.880398750305176
    8. '```' → logprob: -15.255398750305176
    9. '$p' → logprob: -15.505398750305176
    10. ' ' → logprob: -15.755398750305176

Token 2213: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.03497659042477608
    2. '>' → logprob: -3.5349764823913574
    3. '.width' → logprob: -5.659976482391357
    4. ' >' → logprob: -6.534976482391357
    5. '>x' → logprob: -9.409976959228516
    6. '.' → logprob: -9.534976959228516
    7. '>.' → logprob: -10.284976959228516
    8. '.p' → logprob: -10.659976959228516
    9. ' ' → logprob: -10.909976959228516
    10. 'p' → logprob: -11.534976959228516

Token 2214: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16024211049079895
    2. ' >' → logprob: -1.9102420806884766
    3. ' ' → logprob: -11.035242080688477
    4. '>w' → logprob: -13.785242080688477
    5. '   ' → logprob: -14.910242080688477
    6. '>
' → logprob: -15.660242080688477
    7. '  ' → logprob: -16.535242080688477
    8. ' ' → logprob: -17.035242080688477
    9. ')>' → logprob: -17.410242080688477
    10. '>x' → logprob: -17.535242080688477

Token 2215: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326398253440857
    2. ' self' → logprob: -1.313264012336731
    3. '   ' → logprob: -13.813263893127441
    4. ' ' → logprob: -14.688263893127441
    5. '	self' → logprob: -14.938263893127441
    6. '(self' → logprob: -15.438263893127441
    7. '       ' → logprob: -16.688264846801758
    8. '1' → logprob: -16.813264846801758
    9. '  ' → logprob: -17.438264846801758
    10. '[self' → logprob: -17.438264846801758

Token 2216: '.width' (ID: 11038)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029754191637039185
    2. ' self' → logprob: -3.529754161834717
    3. ' ' → logprob: -13.654754638671875
    4. '   ' → logprob: -13.904754638671875
    5. '	self' → logprob: -14.404754638671875
    6. '1' → logprob: -14.904754638671875
    7. '       ' → logprob: -15.779754638671875
    8. '  ' → logprob: -16.154754638671875
    9. '     ' → logprob: -16.154754638671875
    10. 'width' → logprob: -16.404754638671875

Token 2217: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519306540489197
    2. '+' → logprob: -1.5019307136535645
    3. ' ' → logprob: -14.126930236816406
    4. '   ' → logprob: -14.626930236816406
    5. '[' → logprob: -16.251930236816406
    6. ' plus' → logprob: -16.876930236816406
    7. ' +
' → logprob: -17.126930236816406
    8. '1' → logprob: -17.126930236816406
    9. ' ' → logprob: -17.626930236816406
    10. '＋' → logprob: -17.876930236816406

Token 2218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.553032628493384e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.250075340270996
    4. '+' → logprob: -15.750075340270996
    5. '  ' → logprob: -16.750076293945312
    6. '
' → logprob: -16.875076293945312
    7. '       ' → logprob: -19.250076293945312
    8. '```' → logprob: -19.875076293945312
    9. '     ' → logprob: -20.000076293945312
    10. '
' → logprob: -20.125076293945312

Token 2219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.250005722045898
    3. '   ' → logprob: -15.500005722045898
    4. '+' → logprob: -16.2500057220459
    5. '0' → logprob: -16.6250057220459
    6. '
' → logprob: -16.6250057220459
    7. '  ' → logprob: -16.8750057220459
    8. '```' → logprob: -18.1250057220459
    9. '
' → logprob: -18.3750057220459
    10. '       ' → logprob: -18.6250057220459

Token 2220: 'e' (ID: 68)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4607221782207489
    2. '.' → logprob: -1.4607222080230713
    3. '1' → logprob: -2.4607222080230713
    4. '-' → logprob: -3.5857222080230713
    5. 'e' → logprob: -3.8357222080230713
    6. '+' → logprob: -7.210721969604492
    7. ' ' → logprob: -7.710721969604492
    8. '10' → logprob: -7.960721969604492
    9. '   ' → logprob: -8.335721969604492
    10. '
' → logprob: -8.835721969604492

Token 2221: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. '10' → logprob: -16.125
    3. '0' → logprob: -16.375
    4. '```' → logprob: -17.125
    5. ' -' → logprob: -17.5
    6. '+' → logprob: -18.625
    7. '
' → logprob: -18.75
    8. '   ' → logprob: -19.25
    9. 'e' → logprob: -19.625
    10. '``' → logprob: -19.75

Token 2222: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.3822154111694545e-05
    2. '1' → logprob: -10.750043869018555
    3. '0' → logprob: -11.125043869018555
    4. '```' → logprob: -13.375043869018555
    5. ' ' → logprob: -13.500043869018555
    6. '
' → logprob: -13.500043869018555
    7. '   ' → logprob: -14.125043869018555
    8. '-' → logprob: -14.625043869018555
    9. '{' → logprob: -15.750043869018555
    10. '' → logprob: -15.937543869018555

Token 2223: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5848506093025208
    2. ':' → logprob: -1.584850549697876
    3. ':
' → logprob: -1.834850549697876
    4. ' or' → logprob: -2.584850549697876
    5. '           ' → logprob: -6.709850788116455
    6. ' and' → logprob: -7.959850788116455
    7. '   ' → logprob: -7.959850788116455
    8. ':return' → logprob: -8.084850311279297
    9. 'or' → logprob: -8.209850311279297
    10. ')' → logprob: -9.334850311279297

Token 2224: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01606123149394989
    2. '   ' → logprob: -4.516061305999756
    3. '           ' → logprob: -5.391061305999756
    4. ' return' → logprob: -8.516060829162598
    5. '
' → logprob: -9.141060829162598
    6. 'return' → logprob: -10.016060829162598
    7. ' ' → logprob: -10.641060829162598
    8. '	' → logprob: -10.766060829162598
    9. '	   ' → logprob: -11.266060829162598
    10. '	return' → logprob: -11.641060829162598

Token 2225: ' return' (ID: 622)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.16146056354045868
    2. 'False' → logprob: -1.911460518836975
    3. ' return' → logprob: -7.2864603996276855
    4. ' True' → logprob: -7.5364603996276855
    5. 'True' → logprob: -11.411460876464844
    6. 'return' (adapté à ' return') → logprob: -12.286460876464844
    7. ' 
' → logprob: -14.036460876464844
    8. '   ' → logprob: -15.036460876464844
    9. '(False' → logprob: -15.161460876464844
    10. '=False' → logprob: -15.411460876464844

Token 2226: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.128163257315464e-07
    2. ' False' → logprob: -15.5
    3. 'True' → logprob: -17.375
    4. '(False' → logprob: -20.375
    5. '=False' → logprob: -21.5
    6. 'F' → logprob: -21.625
    7. 'false' → logprob: -23.0
    8. 'Fal' → logprob: -23.625
    9. 'Fa' → logprob: -24.625
    10. '_false' → logprob: -25.25

Token 2227: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14280486106872559
    2. '
' → logprob: -2.0178048610687256
    3. '        
' → logprob: -9.642805099487305
    4. ',' → logprob: -11.392805099487305
    5. '    
' → logprob: -11.392805099487305
    6. '   ' → logprob: -11.767805099487305
    7. '

' → logprob: -12.142805099487305
    8. ' 
' → logprob: -12.267805099487305
    9. '
' → logprob: -12.517805099487305
    10. ' if' → logprob: -12.642805099487305

Token 2228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11299364268779755
    2. '
' → logprob: -2.2379937171936035
    3. '        
' → logprob: -9.612993240356445
    4. '   ' → logprob: -10.237993240356445
    5. '    
' → logprob: -10.362993240356445
    6. ' 
' → logprob: -11.487993240356445
    7. ',' → logprob: -12.112993240356445
    8. '  
' → logprob: -12.362993240356445
    9. ' if' → logprob: -12.862993240356445
    10. ')
' → logprob: -13.112993240356445

Token 2229: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5024542808532715
    2. 'for' → logprob: -1.0024542808532715
    3. 'if' → logprob: -3.6274542808532715
    4. ' for' → logprob: -7.2524542808532715
    5. 'segment' (adapté à ' segment') → logprob: -8.37745475769043
    6. '   ' → logprob: -8.87745475769043
    7. 'return' → logprob: -9.12745475769043
    8. '
' → logprob: -9.75245475769043
    9. '#' → logprob: -10.00245475769043
    10. ' if' → logprob: -10.12745475769043

Token 2230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6975785493850708
    2. ' =' → logprob: -0.6975785493850708
    3. 's' → logprob: -6.447578430175781
    4. '_' → logprob: -7.697578430175781
    5. '=p' → logprob: -7.822578430175781
    6. '.' → logprob: -8.072578430175781
    7. ')' → logprob: -8.322578430175781
    8. '=[]' → logprob: -8.447578430175781
    9. ':' → logprob: -8.572578430175781
    10. '   ' → logprob: -8.697578430175781

Token 2231: ' (' (ID: 350)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.007805473171174526
    2. '(p' → logprob: -5.007805347442627
    3. '(' → logprob: -7.257805347442627
    4. 'Point' → logprob: -9.257805824279785
    5. '(Point' → logprob: -9.382805824279785
    6. ' Edge' → logprob: -9.382805824279785
    7. 'Segment' → logprob: -9.757805824279785
    8. 'p' → logprob: -9.882805824279785
    9. 'Line' → logprob: -13.382805824279785
    10. '[p' → logprob: -13.382805824279785

Token 2232: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4021237802808173e-05
    2. ' p' → logprob: -11.375014305114746
    3. '       ' → logprob: -13.250014305114746
    4. '   ' → logprob: -15.375014305114746
    5. 'Point' → logprob: -15.375014305114746
    6. '           ' → logprob: -15.875014305114746
    7. '(p' → logprob: -17.12501335144043
    8. '	p' → logprob: -17.37501335144043
    9. '    ' → logprob: -17.75001335144043
    10. ')' → logprob: -18.00001335144043

Token 2233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. 'oint' → logprob: -13.375003814697266
    3. 'oints' → logprob: -14.375003814697266
    4. '
' → logprob: -14.750003814697266
    5. ')' → logprob: -15.875003814697266
    6. '```' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.062503814697266
    8. '2' → logprob: -16.500003814697266
    9. 'r' → logprob: -16.500003814697266
    10. 'p' → logprob: -16.812503814697266

Token 2234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024509229697287083
    2. ',p' → logprob: -7.127450942993164
    3. ' ,' → logprob: -7.377450942993164
    4. ',
' → logprob: -7.627450942993164
    5. '[' → logprob: -7.877450942993164
    6. 'p' → logprob: -9.627450942993164
    7. ')' → logprob: -11.002450942993164
    8. '<|end|>' → logprob: -11.127450942993164
    9. ' p' → logprob: -11.627450942993164
    10. '0' → logprob: -11.877450942993164

Token 2235: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.018151111900806427
    2. ' p' → logprob: -4.01815128326416
    3. '(p' → logprob: -15.26815128326416
    4. '   ' → logprob: -15.26815128326416
    5. ')p' → logprob: -15.39315128326416
    6. '       ' → logprob: -15.76815128326416
    7. '    ' → logprob: -15.89315128326416
    8. ')' → logprob: -16.018150329589844
    9. '	p' → logprob: -16.643150329589844
    10. ' ' → logprob: -17.018150329589844

Token 2236: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. 'p' → logprob: -13.875000953674316
    3. '_' → logprob: -16.250001907348633
    4. '₂' → logprob: -16.625001907348633
    5. 's' → logprob: -16.875001907348633
    6. '```' → logprob: -17.750001907348633
    7. ')' → logprob: -17.875001907348633
    8. '_
' → logprob: -18.250001907348633
    9. '
' → logprob: -18.375001907348633
    10. ' ' → logprob: -18.750001907348633

Token 2237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0190605279058218
    2. ')
' → logprob: -4.0190606117248535
    3. '       ' → logprob: -7.0190606117248535
    4. '   ' → logprob: -11.894060134887695
    5. ')

' → logprob: -13.144060134887695
    6. ')
' → logprob: -13.269060134887695
    7. ' )' → logprob: -13.394060134887695
    8. ',' → logprob: -14.269060134887695
    9. ',)' → logprob: -14.269060134887695
    10. '[' → logprob: -14.769060134887695

Token 2238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049635276198387146
    2. '
' → logprob: -3.049635171890259
    3. ' for' → logprob: -7.799635410308838
    4. 'for' → logprob: -7.924635410308838
    5. '        
' → logprob: -9.54963493347168
    6. ',' → logprob: -9.92463493347168
    7. ')' → logprob: -10.29963493347168
    8. ')
' → logprob: -10.42463493347168
    9. '
' → logprob: -10.42463493347168
    10. 'return' → logprob: -11.29963493347168

Token 2239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16038721799850464
    2. '       ' → logprob: -1.9103872776031494
    3. ' for' → logprob: -8.91038703918457
    4. '
' → logprob: -10.53538703918457
    5. '   ' → logprob: -13.91038703918457
    6. '	for' → logprob: -15.53538703918457
    7. '           ' → logprob: -16.16038703918457
    8. 'if' → logprob: -16.41038703918457
    9. '```' → logprob: -16.78538703918457
    10. 'return' → logprob: -16.78538703918457

Token 2240: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.39006680250167847
    2. 'pillar' → logprob: -1.1400668621063232
    3. 'pill' → logprob: -6.015066623687744
    4. 'p' → logprob: -7.640066623687744
    5. 'polygon' → logprob: -8.265067100524902
    6. 'pol' → logprob: -12.265067100524902
    7. ' pillar' → logprob: -12.890067100524902
    8. 'pil' → logprob: -13.265067100524902
    9. ' poly' → logprob: -14.640067100524902
    10. 'pier' → logprob: -15.015067100524902

Token 2241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804849088191986
    2. 'in' → logprob: -3.288048505783081
    3. '       ' → logprob: -12.66304874420166
    4. '   ' → logprob: -13.78804874420166
    5. ' ' → logprob: -14.53804874420166
    6. '	in' → logprob: -14.53804874420166
    7. '
' → logprob: -15.03804874420166
    8. '           ' → logprob: -15.16304874420166
    9. '    ' → logprob: -15.53804874420166
    10. '  ' → logprob: -15.66304874420166

Token 2242: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00022320532298181206
    2. ' self' → logprob: -8.500223159790039
    3. '           ' → logprob: -11.375223159790039
    4. '       ' → logprob: -12.125223159790039
    5. '[self' → logprob: -14.000223159790039
    6. '(self' → logprob: -14.125223159790039
    7. '
' → logprob: -15.375223159790039
    8. ')' → logprob: -15.500223159790039
    9. '	self' → logprob: -15.500223159790039
    10. '[' → logprob: -16.37522315979004

Token 2243: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -7.896309739408025e-07
    2. ' .' → logprob: -15.000000953674316
    3. '.' → logprob: -16.0
    4. 'self' → logprob: -16.375
    5. '   ' → logprob: -16.5
    6. 'p' → logprob: -17.625
    7. '	p' → logprob: -17.625
    8. '
' → logprob: -18.0
    9. '```' → logprob: -18.125
    10. '.
' → logprob: -18.375

Token 2244: 'ill' (ID: 492)
  Prédit: 'ill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ill' → logprob: -0.011105125769972801
    2. 'pill' → logprob: -4.511105060577393
    3. 'illar' → logprob: -10.51110553741455
    4. '
' → logprob: -11.76110553741455
    5. 'illers' → logprob: -12.51110553741455
    6. 'p' → logprob: -13.01110553741455
    7. '   ' → logprob: -13.13610553741455
    8. '#' → logprob: -13.13610553741455
    9. '_p' → logprob: -13.26110553741455
    10. ' pillars' → logprob: -14.13610553741455

Token 2245: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -15.375000953674316
    3. 'ar' → logprob: -15.875000953674316
    4. '_' → logprob: -15.875000953674316
    5. 'ors' → logprob: -17.375
    6. '```' → logprob: -17.5
    7. '{' → logprob: -17.625
    8. '...' → logprob: -17.875
    9. '**' → logprob: -18.25
    10. '\' → logprob: -18.25

Token 2246: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2472354769706726
    2. ':' → logprob: -1.7472355365753174
    3. '           ' → logprob: -3.1222355365753174
    4. '       ' → logprob: -7.497235298156738
    5. ',' → logprob: -9.622235298156738
    6. '):
' → logprob: -9.747235298156738
    7. ':
' → logprob: -11.122235298156738
    8. '   ' → logprob: -12.122235298156738
    9. ':

' → logprob: -12.372235298156738
    10. '          ' → logprob: -12.622235298156738

Token 2247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015477105043828487
    2. '       ' → logprob: -6.626547813415527
    3. '
' → logprob: -8.501547813415527
    4. ' if' → logprob: -12.251547813415527
    5. '          ' → logprob: -12.751547813415527
    6. ',' → logprob: -13.251547813415527
    7. '		' → logprob: -13.251547813415527
    8. '
' → logprob: -13.501547813415527
    9. '	       ' → logprob: -13.876547813415527
    10. '   ' → logprob: -14.001547813415527

Token 2248: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11049477010965347
    2. 'if' (adapté à ' if') → logprob: -2.36049485206604
    3. ' if' → logprob: -4.985494613647461
    4. '       ' → logprob: -5.735494613647461
    5. 'for' → logprob: -9.610494613647461
    6. '   ' → logprob: -9.985494613647461
    7. '               ' → logprob: -10.860494613647461
    8. '
' → logprob: -11.235494613647461
    9. '          ' → logprob: -11.485494613647461
    10. '        ' → logprob: -13.110494613647461

Token 2249: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.0024769625160843134
    2. ' poly' → logprob: -6.002477169036865
    3. 'pol' → logprob: -14.127476692199707
    4. '(poly' → logprob: -15.127476692199707
    5. 'py' → logprob: -16.502477645874023
    6. '           ' → logprob: -16.502477645874023
    7. '   ' → logprob: -17.002477645874023
    8. 'p' → logprob: -17.502477645874023
    9. '       ' → logprob: -17.627477645874023
    10. 'polygon' → logprob: -17.877477645874023

Token 2250: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -1.8908587662735954e-05
    2. '.' → logprob: -11.750019073486328
    3. ' .' → logprob: -13.000019073486328
    4. 'inter' → logprob: -13.250019073486328
    5. '.Inter' → logprob: -13.375019073486328
    6. '.contains' → logprob: -13.500019073486328
    7. '       ' → logprob: -13.500019073486328
    8. '           ' → logprob: -14.500019073486328
    9. '   ' → logprob: -14.750019073486328
    10. ').' → logprob: -15.125019073486328

Token 2251: 'sects' (ID: 105681)
  Prédit: 'sects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sects' → logprob: -3.7697225252486533e-06
    2. 'sect' → logprob: -13.250003814697266
    3. 'se' → logprob: -14.000003814697266
    4. 'ects' → logprob: -14.875003814697266
    5. '```' → logprob: -15.250003814697266
    6. 's' → logprob: -15.750003814697266
    7. 'cepts' → logprob: -16.250003814697266
    8. 'sections' → logprob: -16.500003814697266
    9. 'section' → logprob: -17.125003814697266
    10. 'inter' → logprob: -17.500003814697266

Token 2252: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -1.8624639324116288e-06
    2. 'segment' → logprob: -14.750001907348633
    3. 's' → logprob: -15.000001907348633
    4. '```' → logprob: -15.000001907348633
    5. '_segments' → logprob: -15.000001907348633
    6. '
' → logprob: -15.500001907348633
    7. '`' → logprob: -17.250001907348633
    8. '_section' → logprob: -17.375001907348633
    9. '(segment' → logprob: -17.375001907348633
    10. '_seg' → logprob: -17.500001907348633

Token 2253: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.35837464465294e-05
    2. '(' → logprob: -11.000043869018555
    3. '(
' → logprob: -11.125043869018555
    4. 'p' → logprob: -11.500043869018555
    5. '(segment' → logprob: -13.750043869018555
    6. ' (' → logprob: -15.375043869018555
    7. '
' → logprob: -16.000043869018555
    8. ')' → logprob: -16.500043869018555
    9. 'segment' → logprob: -16.625043869018555
    10. '(P' → logprob: -16.625043869018555

Token 2254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. 'oint' → logprob: -10.125096321105957
    3. 'oints' → logprob: -10.125096321105957
    4. '```' → logprob: -12.250096321105957
    5. '[' → logprob: -12.750096321105957
    6. '
' → logprob: -13.375096321105957
    7. 'olygon' → logprob: -13.500096321105957
    8. 'oly' → logprob: -14.000096321105957
    9. 'ol' → logprob: -14.000096321105957
    10. '   ' → logprob: -14.750096321105957

Token 2255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000467730569653213
    2. ',p' → logprob: -7.750467777252197
    3. ',
' → logprob: -10.375467300415039
    4. ' ,' → logprob: -12.375467300415039
    5. 'p' → logprob: -13.750467300415039
    6. ',

' → logprob: -15.875467300415039
    7. ')' → logprob: -17.25046730041504
    8. '           ' → logprob: -17.25046730041504
    9. '
' → logprob: -17.25046730041504
    10. ',
' → logprob: -17.37546730041504

Token 2256: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.246537173457909e-06
    2. ' p' → logprob: -12.375003814697266
    3. '           ' → logprob: -19.125003814697266
    4. '       ' → logprob: -20.750003814697266
    5. '   ' → logprob: -21.625003814697266
    6. '	p' → logprob: -22.250003814697266
    7. '<p' → logprob: -22.375003814697266
    8. ')p' → logprob: -22.375003814697266
    9. '
' → logprob: -22.625003814697266
    10. '(p' → logprob: -22.750003814697266

Token 2257: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.666993507067673e-05
    2. ',' → logprob: -10.375036239624023
    3. ' ' → logprob: -13.500036239624023
    4. '```' → logprob: -13.500036239624023
    5. ')' → logprob: -13.625036239624023
    6. '   ' → logprob: -14.250036239624023
    7. 'p' → logprob: -15.625036239624023
    8. '1' → logprob: -16.125036239624023
    9. '[' → logprob: -16.375036239624023
    10. '
' → logprob: -16.375036239624023

Token 2258: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0020204742904752493
    2. '):' → logprob: -6.377020359039307
    3. '           ' → logprob: -8.502020835876465
    4. '               ' → logprob: -10.252020835876465
    5. '):
' → logprob: -10.377020835876465
    6. ')' → logprob: -10.752020835876465
    7. '       ' → logprob: -11.127020835876465
    8. ':
' → logprob: -11.627020835876465
    9. '():
' → logprob: -14.252020835876465
    10. ':' → logprob: -14.377020835876465

Token 2259: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028540899511426687
    2. '           ' → logprob: -5.877853870391846
    3. 'return' → logprob: -11.377854347229004
    4. ' return' → logprob: -11.627854347229004
    5. '                       ' → logprob: -11.752854347229004
    6. '                   ' → logprob: -12.002854347229004
    7. '              ' → logprob: -12.502854347229004
    8. '<|end|>' → logprob: -13.502854347229004
    9. '	       ' → logprob: -13.627854347229004
    10. ':return' → logprob: -13.752854347229004

Token 2260: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14563311636447906
    2. 'return' (adapté à ' return') → logprob: -2.1456332206726074
    3. '                   ' → logprob: -4.520633220672607
    4. ' return' → logprob: -4.895633220672607
    5. '           ' → logprob: -8.89563274383545
    6. '	return' → logprob: -11.39563274383545
    7. '                       ' → logprob: -12.39563274383545
    8. '	           ' → logprob: -12.39563274383545
    9. '
' → logprob: -12.64563274383545
    10. ':return' → logprob: -12.77063274383545

Token 2261: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00012451570364646614
    2. 'False' → logprob: -9.00012493133545
    3. ' True' → logprob: -13.75012493133545
    4. '(True' → logprob: -22.750123977661133
    5. '=True' → logprob: -23.500123977661133
    6. '   ' → logprob: -23.500123977661133
    7. ' False' → logprob: -23.750123977661133
    8. 'true' → logprob: -23.750123977661133
    9. '
' → logprob: -25.125123977661133
    10. '```' → logprob: -25.625123977661133

Token 2262: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010348338400945067
    2. '
' → logprob: -7.251034736633301
    3. '           ' → logprob: -8.6260347366333
    4. '               ' → logprob: -10.1260347366333
    5. '	' → logprob: -10.8760347366333
    6. '        
' → logprob: -10.8760347366333
    7. 'return' → logprob: -11.1260347366333
    8. '    
' → logprob: -11.6260347366333
    9. '<|end|>' → logprob: -11.7510347366333
    10. ')' → logprob: -12.2510347366333

Token 2263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003800296690315008
    2. '
' → logprob: -8.00037956237793
    3. 'return' → logprob: -10.75037956237793
    4. ' return' → logprob: -11.87537956237793
    5. '           ' → logprob: -12.00037956237793
    6. '               ' → logprob: -13.50037956237793
    7. '	' → logprob: -13.50037956237793
    8. ',' → logprob: -13.50037956237793
    9. 'continue' → logprob: -13.62537956237793
    10. '	return' → logprob: -13.87537956237793

Token 2264: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0382121279835701
    2. 'return' (adapté à ' return') → logprob: -3.2882120609283447
    3. '   ' → logprob: -9.288211822509766
    4. '
' → logprob: -9.663211822509766
    5. ' return' → logprob: -11.288211822509766
    6. '	return' → logprob: -13.788211822509766
    7. '	' → logprob: -14.788211822509766
    8. '           ' → logprob: -14.788211822509766
    9. '{return' → logprob: -16.413211822509766
    10. '\
' → logprob: -17.413211822509766

Token 2265: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0067161982879042625
    2. ' True' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.006715774536133
    4. '       ' → logprob: -19.256715774536133
    5. '    ' → logprob: -20.006715774536133
    6. '(True' → logprob: -20.506715774536133
    7. 'False' → logprob: -20.631715774536133
    8. '=True' → logprob: -22.506715774536133
    9. 'true' → logprob: -22.631715774536133
    10. '           ' → logprob: -22.756715774536133

Token 2266: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26699113845825195
    2. '<|end|>' → logprob: -1.891991138458252
    3. '    
' → logprob: -3.766991138458252
    4. '
' → logprob: -3.766991138458252
    5. '       ' → logprob: -5.141991138458252
    6. '  
' → logprob: -5.266991138458252
    7. '\n' → logprob: -5.391991138458252
    8. ')' → logprob: -5.391991138458252
    9. ' ' → logprob: -5.641991138458252
    10. ':' → logprob: -6.016991138458252

Token 2267: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39131486415863037
    2. '   ' → logprob: -1.1413148641586304
    3. ' def' → logprob: -6.14131498336792
    4. '    
' → logprob: -7.01631498336792
    5. '<|end|>' → logprob: -7.64131498336792
    6. '
' → logprob: -7.76631498336792
    7. '```' → logprob: -8.891314506530762
    8. '	def' → logprob: -9.516314506530762
    9. '<|end|>' → logprob: -10.516314506530762
    10. '       ' → logprob: -10.516314506530762

Token 2268: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007470945129171014
    2. '   ' → logprob: -7.250747203826904
    3. ' def' → logprob: -10.250746726989746
    4. '
' → logprob: -13.375746726989746
    5. '	def' → logprob: -15.875746726989746
    6. '    
' → logprob: -16.625747680664062
    7. '  ' → logprob: -19.125747680664062
    8. '```' → logprob: -19.750747680664062
    9. '  
' → logprob: -19.875747680664062
    10. '

' → logprob: -20.125747680664062

Token 2269: ' build' (ID: 3024)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.03682232275605202
    2. ' _' → logprob: -3.5368223190307617
    3. ' build' → logprob: -5.286822319030762
    4. 'build' → logprob: -6.911822319030762
    5. '_' → logprob: -7.786822319030762
    6. '   ' → logprob: -9.036822319030762
    7. '_compute' → logprob: -9.036822319030762
    8. '_b' → logprob: -9.536822319030762
    9. '_connect' → logprob: -9.536822319030762
    10. '_generate' → logprob: -9.911822319030762

Token 2270: '_flow' (ID: 63802)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.16977940499782562
    2. '_' → logprob: -2.4197793006896973
    3. '_visibility' → logprob: -3.7947793006896973
    4. '_network' → logprob: -3.9197793006896973
    5. '_flow' → logprob: -3.9197793006896973
    6. '   ' → logprob: -6.044779300689697
    7. '_edges' → logprob: -7.294779300689697
    8. '_nodes' → logprob: -7.919779300689697
    9. '_edge' → logprob: -8.544779777526855
    10. ')_' → logprob: -8.919779777526855

Token 2271: '_network' (ID: 47703)
  Prédit: '_network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_network' → logprob: -0.03720694035291672
    2. '_graph' → logprob: -3.6622068881988525
    3. 'Network' → logprob: -4.787207126617432
    4. '_' → logprob: -6.412207126617432
    5. '_net' → logprob: -8.287206649780273
    6. '   ' → logprob: -8.537206649780273
    7. 'Graph' → logprob: -8.912206649780273
    8. 'graph' → logprob: -9.162206649780273
    9. '(self' → logprob: -9.287206649780273
    10. '(
' → logprob: -11.037206649780273

Token 2272: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000433291686931625
    2. '(' → logprob: -7.750433444976807
    3. '(
' → logprob: -14.000432968139648
    4. '   ' → logprob: -14.125432968139648
    5. ' (' → logprob: -14.375432968139648
    6. 'self' → logprob: -14.875432968139648
    7. '       ' → logprob: -15.875432968139648
    8. '(s' → logprob: -18.00043296813965
    9. 'def' → logprob: -18.87543296813965
    10. ' ' → logprob: -19.00043296813965

Token 2273: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08242716640233994
    2. 'self' → logprob: -3.7074272632598877
    3. '(self' → logprob: -3.8324272632598877
    4. ')' → logprob: -4.332427024841309
    5. '   ' → logprob: -4.832427024841309
    6. '):
' → logprob: -5.207427024841309
    7. '):' → logprob: -5.332427024841309
    8. '       ' → logprob: -6.707427024841309
    9. '(' → logprob: -9.707427024841309
    10. ' self' → logprob: -10.207427024841309

Token 2274: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0028525441884994507
    2. '(' → logprob: -6.002852439880371
    3. '   ' → logprob: -8.377852439880371
    4. 'self' → logprob: -9.627852439880371
    5. '       ' → logprob: -10.127852439880371
    6. '(
' → logprob: -10.377852439880371
    7. ' (' → logprob: -13.127852439880371
    8. '_' → logprob: -13.502852439880371
    9. 'def' → logprob: -13.877852439880371
    10. '_(' → logprob: -14.002852439880371

Token 2275: ' Tuple' (ID: 50841)
  Prédit: 'Flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Flow' → logprob: -0.011948640458285809
    2. 'None' → logprob: -5.011948585510254
    3. ' Flow' → logprob: -6.011948585510254
    4. 'Tuple' → logprob: -7.011948585510254
    5. 'List' → logprob: -7.136948585510254
    6. 'int' → logprob: -7.386948585510254
    7. 'float' → logprob: -9.136948585510254
    8. '()' → logprob: -9.261948585510254
    9. 'self' → logprob: -9.511948585510254
    10. '(' → logprob: -10.011948585510254

Token 2276: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.015175623819231987
    2. '[List' → logprob: -4.265175819396973
    3. '(int' → logprob: -7.265175819396973
    4. '[
' → logprob: -8.265175819396973
    5. '(List' → logprob: -10.015175819396973
    6. 'int' → logprob: -12.265175819396973
    7. '[' → logprob: -12.390175819396973
    8. '[Int' → logprob: -14.515175819396973
    9. '(
' → logprob: -15.265175819396973
    10. '(' → logprob: -16.140174865722656

Token 2277: 'Flow' (ID: 18017)
  Prédit: 'Flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flow' → logprob: -0.008414932526648045
    2. 'int' → logprob: -5.0084147453308105
    3. 'List' → logprob: -6.3834147453308105
    4. ' Flow' → logprob: -12.383415222167969
    5. '[int' → logprob: -13.258415222167969
    6. 'Optional' → logprob: -14.508415222167969
    7. 'Dict' → logprob: -14.508415222167969
    8. 'Flux' → logprob: -14.633415222167969
    9. '
' → logprob: -15.133415222167969
    10. ' int' → logprob: -15.383415222167969

Token 2278: 'Network' (ID: 14022)
  Prédit: 'Network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Network' → logprob: -0.20152871310710907
    2. '[int' → logprob: -1.7015286684036255
    3. '[
' → logprob: -10.076528549194336
    4. '[' → logprob: -10.201528549194336
    5. 'int' → logprob: -10.451528549194336
    6. '[str' → logprob: -14.076528549194336
    7. '   ' → logprob: -14.076528549194336
    8. '[Int' → logprob: -14.201528549194336
    9. 'Networking' → logprob: -14.201528549194336
    10. 'network' → logprob: -14.451528549194336

Token 2279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006884334143251181
    2. '[int' → logprob: -5.1318840980529785
    3. ',int' → logprob: -7.1318840980529785
    4. ',List' → logprob: -9.506884574890137
    5. '[List' → logprob: -10.006884574890137
    6. ' ,' → logprob: -10.756884574890137
    7. ',
' → logprob: -12.256884574890137
    8. 'int' → logprob: -12.506884574890137
    9. '[' → logprob: -12.756884574890137
    10. '[
' → logprob: -13.381884574890137

Token 2280: ' int' (ID: 677)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.4156326651573181
    2. 'int' → logprob: -1.290632724761963
    3. 'Dict' → logprob: -2.790632724761963
    4. 'dict' → logprob: -6.040632724761963
    5. ' List' → logprob: -7.915632724761963
    6. ' int' → logprob: -8.290632247924805
    7. 'nodes' → logprob: -8.415632247924805
    8. 'Point' → logprob: -9.165632247924805
    9. 'points' → logprob: -9.915632247924805
    10. 'Set' → logprob: -9.915632247924805

Token 2281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015598179015796632
    2. ' ,' → logprob: -9.25015640258789
    3. ',int' → logprob: -10.25015640258789
    4. ',
' → logprob: -10.87515640258789
    5. ',List' → logprob: -13.12515640258789
    6. '   ' → logprob: -13.25015640258789
    7. '‌,' → logprob: -15.25015640258789
    8. '[int' → logprob: -15.37515640258789
    9. '[' → logprob: -15.50015640258789
    10. '
' → logprob: -15.75015640258789

Token 2282: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.933173426659778e-05
    2. ' int' → logprob: -9.625069618225098
    3. '   ' → logprob: -13.875069618225098
    4. '
' → logprob: -14.125069618225098
    5. 'Optional' → logprob: -14.750069618225098
    6. '[int' → logprob: -15.125069618225098
    7. 'i' → logprob: -15.500069618225098
    8. '...' → logprob: -15.500069618225098
    9. '	int' → logprob: -17.12506866455078
    10. 'in' → logprob: -17.12506866455078

Token 2283: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8908587662735954e-05
    2. ',
' → logprob: -11.750019073486328
    3. ',List' → logprob: -11.875019073486328
    4. ' ,' → logprob: -13.375019073486328
    5. ',int' → logprob: -14.375019073486328
    6. '   ' → logprob: -14.375019073486328
    7. ']:' → logprob: -15.500019073486328
    8. ']:
' → logprob: -15.625019073486328
    9. '):
' → logprob: -16.000019073486328
    10. '):' → logprob: -16.125019073486328

Token 2284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004646215122193098
    2. 'n' → logprob: -5.379646301269531
    3. ' n' → logprob: -11.254646301269531
    4. 'nodes' → logprob: -12.129646301269531
    5. '```' → logprob: -13.129646301269531
    6. 'line' → logprob: -13.879646301269531
    7. 'num' → logprob: -14.254646301269531
    8. 'lines' → logprob: -14.379646301269531
    9. ' lines' → logprob: -14.504646301269531
    10. '#' → logprob: -14.629646301269531

Token 2285: ' """
' (ID: 7037)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.0006913475226610899
    2. 'lines' → logprob: -8.125691413879395
    3. '       ' → logprob: -8.250691413879395
    4. 'y' → logprob: -9.750691413879395
    5. '#' → logprob: -10.500691413879395
    6. '   ' → logprob: -11.375691413879395
    7. 'nodes' → logprob: -11.500691413879395
    8. 'hl' → logprob: -12.000691413879395
    9. 'ys' → logprob: -12.250691413879395
    10. 'hs' → logprob: -12.500691413879395

Token 2286: '       ' (ID: 309)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.09212043881416321
    2. '       ' → logprob: -3.092120409011841
    3. 'lines' → logprob: -3.717120409011841
    4. 'nodes' → logprob: -4.84212064743042
    5. 'ys' → logprob: -5.46712064743042
    6. '#' → logprob: -6.21712064743042
    7. 'y' → logprob: -6.34212064743042
    8. 'hs' → logprob: -7.46712064743042
    9. 'hor' → logprob: -7.71712064743042
    10. 'h' → logprob: -7.71712064743042

Token 2287: ' Construct' (ID: 36230)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.03306045010685921
    2. 'lines' → logprob: -4.408060550689697
    3. 'nodes' → logprob: -4.783060550689697
    4. '       ' → logprob: -5.283060550689697
    5. '#' → logprob: -6.158060550689697
    6. ' horizontal' → logprob: -6.408060550689697
    7. 'y' → logprob: -7.158060550689697
    8. 'hor' → logprob: -7.283060550689697
    9. 'h' → logprob: -7.533060550689697
    10. '
' → logprob: -8.158060073852539

Token 2288: ' the' (ID: 290)
  Prédit: ' horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.4431890845298767
    2. 'horizontal' → logprob: -1.0681891441345215
    3. '       ' → logprob: -4.8181891441345215
    4. 'self' → logprob: -5.3181891441345215
    5. ' self' → logprob: -6.6931891441345215
    6. 'nodes' → logprob: -10.068188667297363
    7. '
' → logprob: -10.193188667297363
    8. ' nodes' → logprob: -11.443188667297363
    9. '   ' → logprob: -11.693188667297363
    10. '#' → logprob: -11.693188667297363

Token 2289: ' flow' (ID: 7845)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7411516904830933
    2. 'flow' → logprob: -1.4911516904830933
    3. 'nodes' → logprob: -1.6161516904830933
    4. 'network' → logprob: -2.991151809692383
    5. '#' → logprob: -3.741151809692383
    6. 'width' → logprob: -5.241151809692383
    7. 'n' → logprob: -5.741151809692383
    8. 'horizontal' → logprob: -5.866151809692383
    9. '   ' → logprob: -5.991151809692383
    10. ' graph' → logprob: -6.366151809692383

Token 2290: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.041006628423929214
    2. '_network' → logprob: -3.791006565093994
    3. ' network' → logprob: -4.041006565093994
    4. '
' → logprob: -11.291007041931152
    5. '       ' → logprob: -12.416007041931152
    6. 'net' → logprob: -12.791007041931152
    7. 'Network' → logprob: -13.666007041931152
    8. '   ' → logprob: -13.791007041931152
    9. '_net' → logprob: -14.541007041931152
    10. '_' → logprob: -14.541007041931152

Token 2291: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3175622820854187
    2. '(self' → logprob: -1.3175623416900635
    3. '(' → logprob: -6.442562103271484
    4. '
' → logprob: -7.817562103271484
    5. '(
' → logprob: -7.817562103271484
    6. ',' → logprob: -7.817562103271484
    7. 'self' → logprob: -7.942562103271484
    8. '   ' → logprob: -8.192562103271484
    9. 'with' → logprob: -8.567562103271484
    10. 'from' → logprob: -8.692562103271484

Token 2292: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3184677064418793
    2. '(self' → logprob: -1.3184677362442017
    3. ',' → logprob: -6.318467617034912
    4. '(' → logprob: -6.818467617034912
    5. '(
' → logprob: -7.193467617034912
    6. ' (' → logprob: -7.693467617034912
    7. '   ' → logprob: -8.06846809387207
    8. 'self' → logprob: -8.56846809387207
    9. ' with' → logprob: -8.69346809387207
    10. '
' → logprob: -8.81846809387207

Token 2293: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6534988284111023
    2. 'horizontal' → logprob: -1.153498888015747
    3. 'nodes' → logprob: -3.028498888015747
    4. ')' → logprob: -3.778498888015747
    5. '
' → logprob: -3.903498888015747
    6. '       ' → logprob: -3.903498888015747
    7. ' horizontal' → logprob: -4.028498649597168
    8. ')
' → logprob: -4.153498649597168
    9. '           ' → logprob: -5.528498649597168
    10. ' self' → logprob: -5.528498649597168

Token 2294: ' corridor' (ID: 92467)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.30185627937316895
    2. 'horizontal' → logprob: -1.801856279373169
    3. ' nodes' → logprob: -3.926856279373169
    4. ')' → logprob: -4.30185604095459
    5. '
' → logprob: -4.55185604095459
    6. 'width' → logprob: -4.67685604095459
    7. ' horizontal' → logprob: -4.67685604095459
    8. 'self' → logprob: -4.67685604095459
    9. 'points' → logprob: -5.17685604095459
    10. '):
' → logprob: -5.67685604095459

Token 2295: ' model' (ID: 2359)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.091484785079956
    2. 'nodes' → logprob: -1.341484785079956
    3. ' nodes' → logprob: -1.966484785079956
    4. ' lines' → logprob: -2.341484785079956
    5. 'lines' → logprob: -2.716484785079956
    6. ',' → logprob: -2.841484785079956
    7. ' and' → logprob: -4.341485023498535
    8. '   ' → logprob: -5.091485023498535
    9. 'points' → logprob: -5.341485023498535
    10. '_nodes' → logprob: -5.341485023498535

Token 2296: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028570562601089478
    2. ',' → logprob: -4.028570652008057
    3. '
' → logprob: -5.653570652008057
    4. ':
' → logprob: -6.028570652008057
    5. ':' → logprob: -6.528570652008057
    6. '(self' → logprob: -6.903570652008057
    7. '        
' → logprob: -7.778570652008057
    8. '```' → logprob: -8.528570175170898
    9. ',
' → logprob: -8.653570175170898
    10. '.' → logprob: -8.653570175170898

Token 2297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10237933695316315
    2. 'n' → logprob: -2.977379322052002
    3. ' n' → logprob: -3.102379322052002
    4. ' nodes' → logprob: -7.352379322052002
    5. 'nodes' → logprob: -8.60237979888916
    6. '```' → logprob: -8.72737979888916
    7. '
' → logprob: -8.97737979888916
    8. '        
' → logprob: -9.22737979888916
    9. ' lines' → logprob: -9.72737979888916
    10. ' node' → logprob: -10.47737979888916

Token 2298: ' Each' (ID: 11555)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48580583930015564
    2. 'horizontal' → logprob: -2.2358057498931885
    3. 'lines' → logprob: -2.3608057498931885
    4. 'nodes' → logprob: -2.6108057498931885
    5. ' lines' → logprob: -2.9858057498931885
    6. ' horizontal' → logprob: -3.6108057498931885
    7. 'n' → logprob: -4.485805988311768
    8. ' nodes' → logprob: -5.110805988311768
    9. 'y' → logprob: -5.610805988311768
    10. '#' → logprob: -5.735805988311768

Token 2299: ' node' (ID: 4596)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.172666072845459
    2. 'line' → logprob: -1.422666072845459
    3. ' horizontal' → logprob: -1.922666072845459
    4. ' y' → logprob: -2.547666072845459
    5. 'horizontal' → logprob: -2.547666072845459
    6. ' node' → logprob: -3.047666072845459
    7. 'node' → logprob: -3.172666072845459
    8. 'y' → logprob: -3.797666072845459
    9. 'layer' → logprob: -3.922666072845459
    10. ' layer' → logprob: -5.297666072845459

Token 2300: ' splits' (ID: 76848)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6428597569465637
    2. 'is' → logprob: -1.017859697341919
    3. ' corresponds' → logprob: -2.892859697341919
    4. ' represents' → logprob: -3.517859697341919
    5. 'rep' → logprob: -5.142859935760498
    6. ' will' → logprob: -5.392859935760498
    7. ' in' → logprob: -5.517859935760498
    8. 'cor' → logprob: -5.642859935760498
    9. 'in' → logprob: -5.892859935760498
    10. '
' → logprob: -6.142859935760498

Token 2301: ' in' (ID: 306)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.018523305654525757
    2. 'into' → logprob: -4.143523216247559
    3. '_' → logprob: -7.393523216247559
    4. ' in' → logprob: -7.643523216247559
    5. 'in' → logprob: -8.143523216247559
    6. '   ' → logprob: -8.643523216247559
    7. '_into' → logprob: -8.768523216247559
    8. 'int' → logprob: -8.768523216247559
    9. ''' → logprob: -9.268523216247559
    10. ' ' → logprob: -9.643523216247559

Token 2302: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.11692684143781662
    2. 'in' → logprob: -2.616926908493042
    3. '_in' → logprob: -3.741926908493042
    4. ' two' → logprob: -4.741926670074463
    5. '_two' → logprob: -5.741926670074463
    6. '2' → logprob: -6.991926670074463
    7. 'u' → logprob: -8.741927146911621
    8. 'an' → logprob: -8.991927146911621
    9. 'input' → logprob: -9.366927146911621
    10. ' in' → logprob: -9.616927146911621

Token 2303: ' vertices' (ID: 38360)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.144747257232666
    2. 'nodes' → logprob: -1.269747257232666
    3. 'tokens' → logprob: -1.394747257232666
    4. ' nodes' → logprob: -2.519747257232666
    5. '_tokens' → logprob: -3.394747257232666
    6. 'vertices' → logprob: -4.269747257232666
    7. '_vertices' → logprob: -4.769747257232666
    8. ' tokens' → logprob: -5.269747257232666
    9. '_' → logprob: -5.894747257232666
    10. ',' → logprob: -6.394747257232666

Token 2304: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6739054322242737
    2. ':' → logprob: -0.7989054322242737
    3. '_' → logprob: -4.298905372619629
    4. ' (' → logprob: -4.548905372619629
    5. '.' → logprob: -5.798905372619629
    6. '(' → logprob: -6.173905372619629
    7. ')' → logprob: -6.298905372619629
    8. ',
' → logprob: -6.798905372619629
    9. '('_' → logprob: -6.798905372619629
    10. '_,' → logprob: -6.923905372619629

Token 2305: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3217213749885559
    2. 'for' → logprob: -2.446721315383911
    3. ')' → logprob: -3.321721315383911
    4. '_in' → logprob: -3.571721315383911
    5. 'to' → logprob: -3.946721315383911
    6. ' for' → logprob: -4.07172155380249
    7. ':' → logprob: -4.07172155380249
    8. 'with' → logprob: -4.32172155380249
    9. 'v' → logprob: -4.82172155380249
    10. ' in' → logprob: -5.07172155380249

Token 2306: ',out' (ID: 116164)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0055752992630005
    2. 'put' → logprob: -1.1305752992630005
    3. '_node' → logprob: -1.5055752992630005
    4. 'ternal' → logprob: -3.505575180053711
    5. ')_' → logprob: -4.255575180053711
    6. '```' → logprob: -4.880575180053711
    7. '
' → logprob: -5.255575180053711
    8. '_nodes' → logprob: -5.255575180053711
    9. 'node' → logprob: -5.380575180053711
    10. '_put' → logprob: -5.505575180053711

Token 2307: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4360128343105316
    2. ')_' → logprob: -1.436012864112854
    3. '_' → logprob: -3.3110127449035645
    4. '_tokens' → logprob: -3.5610127449035645
    5. '_nodes' → logprob: -4.0610127449035645
    6. '_token' → logprob: -4.5610127449035645
    7. ',' → logprob: -5.0610127449035645
    8. '_vertices' → logprob: -5.4360127449035645
    9. '),' → logprob: -5.8110127449035645
    10. '_node' → logprob: -6.0610127449035645

Token 2308: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5285618901252747
    2. ',' → logprob: -1.5285618305206299
    3. '
' → logprob: -2.40356183052063
    4. ':' → logprob: -3.15356183052063
    5. ':
' → logprob: -4.028562068939209
    6. ',
' → logprob: -4.278562068939209
    7. ' and' → logprob: -5.028562068939209
    8. ')' → logprob: -5.153562068939209
    9. ' to' → logprob: -6.278562068939209
    10. '        
' → logprob: -6.278562068939209

Token 2309: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -1.0041002035140991
    2. ' capacity' → logprob: -1.7541002035140991
    3. ' an' → logprob: -2.3791003227233887
    4. 'an' → logprob: -2.3791003227233887
    5. '```' → logprob: -3.1291003227233887
    6. 'a' → logprob: -3.3791003227233887
    7. ' _' → logprob: -3.6291003227233887
    8. '_capacity' → logprob: -4.004100322723389
    9. '_' → logprob: -4.129100322723389
    10. ' edges' → logprob: -4.129100322723389

Token 2310: ' the' (ID: 290)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16067281365394592
    2. '1' → logprob: -2.035672903060913
    3. '2' → logprob: -5.160672664642334
    4. ' of' → logprob: -5.785672664642334
    5. ' ' → logprob: -6.035672664642334
    6. 'of' → logprob: -6.285672664642334
    7. ''' → logprob: -6.285672664642334
    8. ' =' → logprob: -6.535672664642334
    9. '
' → logprob: -8.285673141479492
    10. '```' → logprob: -8.410673141479492

Token 2311: ' length' (ID: 5517)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.09272875636816025
    2. 'self' → logprob: -2.842728853225708
    3. ' width' → logprob: -3.717728853225708
    4. ' corridor' → logprob: -5.967728614807129
    5. 'corr' → logprob: -6.592728614807129
    6. ' self' → logprob: -7.842728614807129
    7. 'cor' → logprob: -7.842728614807129
    8. ' next' → logprob: -8.217728614807129
    9. 'next' → logprob: -8.467728614807129
    10. '   ' → logprob: -9.092728614807129

Token 2312: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.03586745262146
    2. '       ' → logprob: -1.28586745262146
    3. '=' → logprob: -2.03586745262146
    4. '   ' → logprob: -2.53586745262146
    5. 'of' → logprob: -3.28586745262146
    6. ':' → logprob: -3.41086745262146
    7. ')' → logprob: -3.78586745262146
    8. ' =' → logprob: -4.660867691040039
    9. '(' → logprob: -4.660867691040039
    10. ''' → logprob: -4.910867691040039

Token 2313: ' free' (ID: 2240)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.04821733757853508
    2. 'segment' → logprob: -4.048217296600342
    3. 'self' → logprob: -4.798217296600342
    4. ' the' → logprob: -4.923217296600342
    5. 'p' → logprob: -5.923217296600342
    6. ' corridor' → logprob: -5.923217296600342
    7. 'segments' → logprob: -6.548217296600342
    8. '
' → logprob: -6.923217296600342
    9. '(self' → logprob: -7.173217296600342
    10. 'their' → logprob: -7.423217296600342

Token 2314: ' horizontal' (ID: 25511)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.9685907363891602
    2. 'segment' → logprob: -1.4685907363891602
    3. 'space' → logprob: -2.21859073638916
    4. 'segments' → logprob: -2.21859073638916
    5. '_segments' → logprob: -3.59359073638916
    6. ' segment' → logprob: -3.84359073638916
    7. ' segments' → logprob: -3.96859073638916
    8. ' space' → logprob: -4.09359073638916
    9. '_space' → logprob: -4.34359073638916
    10. '   ' → logprob: -4.71859073638916

Token 2315: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6716467142105103
    2. ' segment' → logprob: -1.0466467142105103
    3. 'segments' → logprob: -3.0466465950012207
    4. 'space' → logprob: -3.2966465950012207
    5. ' segments' → logprob: -3.6716465950012207
    6. ' space' → logprob: -5.046646595001221
    7. '   ' → logprob: -5.421646595001221
    8. '"' → logprob: -5.921646595001221
    9. '_segment' → logprob: -5.921646595001221
    10. ' line' → logprob: -6.546646595001221

Token 2316: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08533664792776108
    2. ',' → logprob: -3.335336685180664
    3. ':' → logprob: -3.585336685180664
    4. '.' → logprob: -5.335336685180664
    5. ',
' → logprob: -5.960336685180664
    6. ':
' → logprob: -6.210336685180664
    7. '(' → logprob: -6.460336685180664
    8. '   ' → logprob: -6.585336685180664
    9. ')' → logprob: -6.835336685180664
    10. '):' → logprob: -7.460336685180664

Token 2317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020967256277799606
    2. '        
' → logprob: -4.520967483520508
    3. '
' → logprob: -5.395967483520508
    4. '\n' → logprob: -6.020967483520508
    5. ' 
' → logprob: -6.895967483520508
    6. ')' → logprob: -7.895967483520508
    7. ',' → logprob: -8.270967483520508
    8. '```' → logprob: -8.270967483520508
    9. '    
' → logprob: -8.645967483520508
    10. '  
' → logprob: -8.770967483520508

Token 2318: ' Vertical' (ID: 58623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3130725622177124
    2. '
' → logprob: -1.4380725622177124
    3. 'nodes' → logprob: -4.688072681427002
    4. 'n' → logprob: -5.313072681427002
    5. '        
' → logprob: -5.563072681427002
    6. ' nodes' → logprob: -5.563072681427002
    7. '```' → logprob: -5.688072681427002
    8. ')
' → logprob: -6.313072681427002
    9. '"""
' → logprob: -7.438072681427002
    10. 'vertices' → logprob: -7.438072681427002

Token 2319: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.75284343957901
    2. 'connections' → logprob: -1.5028433799743652
    3. ' edges' → logprob: -2.0028433799743652
    4. '_edges' → logprob: -2.3778433799743652
    5. '_connections' → logprob: -3.6278433799743652
    6. '_' → logprob: -4.752843379974365
    7. ' connections' → logprob: -5.252843379974365
    8. '_spacing' → logprob: -5.252843379974365
    9. '   ' → logprob: -5.377843379974365
    10. 'segments' → logprob: -5.502843379974365

Token 2320: ' have' (ID: 679)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6603241562843323
    2. '=' → logprob: -1.4103240966796875
    3. ' between' → logprob: -2.6603240966796875
    4. '   ' → logprob: -3.0353240966796875
    5. ' are' → logprob: -4.0353240966796875
    6. 'from' → logprob: -4.2853240966796875
    7. '       ' → logprob: -4.2853240966796875
    8. ':' → logprob: -4.2853240966796875
    9. 'are' → logprob: -4.4103240966796875
    10. ',' → logprob: -4.7853240966796875

Token 2321: ' infinite' (ID: 48413)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.7281200885772705
    2. 'float' → logprob: -0.9781200885772705
    3. 'in' → logprob: -3.1031200885772705
    4. ' float' → logprob: -3.3531200885772705
    5. 'cap' → logprob: -3.6031200885772705
    6. ' capacity' → logprob: -4.103119850158691
    7. '1' → logprob: -4.728119850158691
    8. 'inf' → logprob: -6.228119850158691
    9. 'capac' → logprob: -6.478119850158691
    10. '   ' → logprob: -6.478119850158691

Token 2322: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.06459908932447433
    2. ' capacity' → logprob: -2.81459903717041
    3. '_capacity' → logprob: -6.06459903717041
    4. '_' → logprob: -9.43959903717041
    5. 'cap' → logprob: -9.56459903717041
    6. '
' → logprob: -9.68959903717041
    7. '_cap' → logprob: -10.68959903717041
    8. ' _' → logprob: -11.06459903717041
    9. '   ' → logprob: -11.18959903717041
    10. '```' → logprob: -11.18959903717041

Token 2323: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6780774593353271
    2. '.' → logprob: -2.053077459335327
    3. ',' → logprob: -2.303077459335327
    4. ':' → logprob: -2.428077459335327
    5. '
' → logprob: -2.428077459335327
    6. ',
' → logprob: -3.553077459335327
    7. '   ' → logprob: -4.178077697753906
    8. ')' → logprob: -4.803077697753906
    9. '```' → logprob: -5.053077697753906
    10. ':
' → logprob: -5.553077697753906

Token 2324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046245984733104706
    2. '
' → logprob: -3.17124605178833
    3. '        
' → logprob: -5.92124605178833
    4. '```' → logprob: -8.296245574951172
    5. 'n' → logprob: -8.921245574951172
    6. '\n' → logprob: -10.546245574951172
    7. ',' → logprob: -10.796245574951172
    8. ')' → logprob: -11.171245574951172
    9. 'tokens' → logprob: -11.171245574951172
    10. ' tokens' → logprob: -11.546245574951172

Token 2325: ' Source' (ID: 15024)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40832558274269104
    2. 'n' → logprob: -1.4083255529403687
    3. 'nodes' → logprob: -2.658325672149658
    4. 'lines' → logprob: -4.658325672149658
    5. 'num' → logprob: -5.658325672149658
    6. '#' → logprob: -6.283325672149658
    7. 'width' → logprob: -6.533325672149658
    8. '
' → logprob: -6.658325672149658
    9. 'node' → logprob: -6.783325672149658
    10. 'points' → logprob: -8.0333251953125

Token 2326: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07514887303113937
    2. ',' → logprob: -3.200148820877075
    3. '=' → logprob: -3.575148820877075
    4. '_idx' → logprob: -6.575149059295654
    5. '_index' → logprob: -6.950149059295654
    6. ':' → logprob: -7.575149059295654
    7. ')' → logprob: -8.450148582458496
    8. '_' → logprob: -9.075148582458496
    9. '_token' → logprob: -9.825148582458496
    10. ' and' → logprob: -9.825148582458496

Token 2327: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008803417906165123
    2. ' ' → logprob: -4.758803367614746
    3. 's' → logprob: -9.258803367614746
    4. 'source' → logprob: -11.133803367614746
    5. 'len' → logprob: -11.133803367614746
    6. ' s' → logprob: -11.633803367614746
    7. '   ' → logprob: -12.008803367614746
    8. '2' → logprob: -12.008803367614746
    9. 'self' → logprob: -12.008803367614746
    10. ' =' → logprob: -12.133803367614746

Token 2328: ' special' (ID: 3582)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005455489736050367
    2. 'len' → logprob: -5.630455493927002
    3. ' ' → logprob: -6.880455493927002
    4. 'int' → logprob: -8.755455017089844
    5. 'self' → logprob: -8.755455017089844
    6. 'Point' → logprob: -9.130455017089844
    7. 'special' → logprob: -9.380455017089844
    8. '1' → logprob: -10.005455017089844
    9. '(' → logprob: -10.130455017089844
    10. ' len' → logprob: -10.755455017089844

Token 2329: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.6188080906867981
    2. '0' → logprob: -0.8688080906867981
    3. 'node' → logprob: -4.493808269500732
    4. ' =' → logprob: -4.493808269500732
    5. ' ' → logprob: -5.118808269500732
    6. ' token' → logprob: -5.493808269500732
    7. '=' → logprob: -5.993808269500732
    8. ' source' → logprob: -6.368808269500732
    9. ',' → logprob: -7.118808269500732
    10. 'token' → logprob: -7.243808269500732

Token 2330: ' connected' (ID: 12079)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39880427718162537
    2. '=' → logprob: -1.3988043069839478
    3. ',' → logprob: -3.523804187774658
    4. '0' → logprob: -3.773804187774658
    5. ' at' → logprob: -4.523804187774658
    6. ' (' → logprob: -5.648804187774658
    7. '(' → logprob: -5.773804187774658
    8. ' and' → logprob: -5.898804187774658
    9. ':' → logprob: -6.148804187774658
    10. '_index' → logprob: -6.648804187774658

Token 2331: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.25213098526000977
    2. ' to' → logprob: -1.5021309852600098
    3. '   ' → logprob: -9.502130508422852
    4. 'from' → logprob: -10.502130508422852
    5. '_to' → logprob: -10.502130508422852
    6. '       ' → logprob: -10.752130508422852
    7. ' at' → logprob: -11.002130508422852
    8. '	to' → logprob: -12.002130508422852
    9. '0' → logprob: -12.252130508422852
    10. ',' → logprob: -12.377130508422852

Token 2332: ' all' (ID: 722)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.121364951133728
    2. 'all' → logprob: -1.621364951133728
    3. 'the' → logprob: -1.746364951133728
    4. 'in' → logprob: -2.3713650703430176
    5. 'nodes' → logprob: -2.9963650703430176
    6. 'bottom' → logprob: -3.6213650703430176
    7. 'vertices' → logprob: -3.7463650703430176
    8. '0' → logprob: -4.246365070343018
    9. 'top' → logprob: -4.371365070343018
    10. 'start' → logprob: -4.496365070343018

Token 2333: ' bottom' (ID: 8725)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -1.277414083480835
    2. 'bottom' → logprob: -1.527414083480835
    3. '0' → logprob: -1.777414083480835
    4. 'top' → logprob: -2.027414083480835
    5. 'points' → logprob: -2.277414083480835
    6. 'lines' → logprob: -3.777414083480835
    7. 'horizontal' → logprob: -4.152414321899414
    8. 'line' → logprob: -4.152414321899414
    9. ' nodes' → logprob: -4.277414321899414
    10. 'boundary' → logprob: -5.652414321899414

Token 2334: ' line' (ID: 2543)
  Prédit: 'boundary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boundary' → logprob: -0.7217962741851807
    2. ' boundary' → logprob: -2.0967962741851807
    3. 'nodes' → logprob: -2.2217962741851807
    4. ' nodes' → logprob: -2.7217962741851807
    5. '_' → logprob: -2.8467962741851807
    6. '_nodes' → logprob: -3.3467962741851807
    7. '   ' → logprob: -3.5967962741851807
    8. '_boundary' → logprob: -3.5967962741851807
    9. 'line' → logprob: -3.7217962741851807
    10. ',' → logprob: -4.846796035766602

Token 2335: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -1.0929681062698364
    2. 's' → logprob: -1.3429681062698364
    3. '_nodes' → logprob: -1.4679681062698364
    4. ' and' → logprob: -2.717967987060547
    5. '   ' → logprob: -3.342967987060547
    6. 'nodes' → logprob: -3.717967987060547
    7. ',' → logprob: -4.342967987060547
    8. '       ' → logprob: -4.967967987060547
    9. 'and' → logprob: -5.092967987060547
    10. '(s' → logprob: -5.342967987060547

Token 2336: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3436235785484314
    2. ',' → logprob: -1.8436236381530762
    3. ',
' → logprob: -3.218623638153076
    4. ':' → logprob: -3.718623638153076
    5. '.' → logprob: -4.468623638153076
    6. ':
' → logprob: -4.593623638153076
    7. '.
' → logprob: -4.593623638153076
    8. '   ' → logprob: -4.593623638153076
    9. '
' → logprob: -4.718623638153076
    10. ' and' → logprob: -5.968623638153076

Token 2337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07140251249074936
    2. '
' → logprob: -2.8214025497436523
    3. '```' → logprob: -5.446402549743652
    4. '        
' → logprob: -5.571402549743652
    5. 'n' → logprob: -7.071402549743652
    6. '``' → logprob: -9.571402549743652
    7. '`' → logprob: -10.196402549743652
    8. '(' → logprob: -10.321402549743652
    9. ',' → logprob: -10.446402549743652
    10. '#' → logprob: -10.696402549743652

Token 2338: ' Sink' (ID: 97114)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2111126333475113
    2. '
' → logprob: -1.71111261844635
    3. '```' → logprob: -5.2111124992370605
    4. '        
' → logprob: -6.9611124992370605
    5. ')
' → logprob: -7.3361124992370605
    6. '"""
' → logprob: -7.8361124992370605
    7. '``' → logprob: -7.9611124992370605
    8. ',' → logprob: -8.211112976074219
    9. ')' → logprob: -8.336112976074219
    10. 's' → logprob: -8.961112976074219

Token 2339: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5039534568786621
    2. '=' → logprob: -1.503953456878662
    3. ' =' → logprob: -1.753953456878662
    4. ')' → logprob: -8.50395393371582
    5. ',' → logprob: -9.12895393371582
    6. 'is' → logprob: -9.50395393371582
    7. ' ' → logprob: -10.37895393371582
    8. ':' → logprob: -10.50395393371582
    9. '_is' → logprob: -10.75395393371582
    10. ' are' → logprob: -11.87895393371582

Token 2340: ' connected' (ID: 12079)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4395958185195923
    2. ' len' → logprob: -1.0645958185195923
    3. ' the' → logprob: -5.314595699310303
    4. 'the' → logprob: -6.064595699310303
    5. 'self' → logprob: -7.189595699310303
    6. ' self' → logprob: -7.314595699310303
    7. '(len' → logprob: -7.689595699310303
    8. '=len' → logprob: -7.939595699310303
    9. ' all' → logprob: -8.064596176147461
    10. '   ' → logprob: -8.064596176147461

Token 2341: ' from' (ID: 591)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.31366783380508423
    2. 'to' → logprob: -1.3136677742004395
    3. '_to' → logprob: -8.188668251037598
    4. '   ' → logprob: -9.313668251037598
    5. '	to' → logprob: -11.188668251037598
    6. ' ' → logprob: -12.063668251037598
    7. '       ' → logprob: -12.188668251037598
    8. '
' → logprob: -13.188668251037598
    9. 't' → logprob: -13.188668251037598
    10. ')' → logprob: -13.313668251037598

Token 2342: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.477896124124527
    2. ' all' → logprob: -0.9778960943222046
    3. 'the' → logprob: -6.227896213531494
    4. ' the' → logprob: -7.352896213531494
    5. ' nodes' → logprob: -7.977896213531494
    6. 'top' → logprob: -8.477895736694336
    7. 'bottom' → logprob: -8.852895736694336
    8. 'special' → logprob: -8.852895736694336
    9. 'nodes' → logprob: -9.227895736694336
    10. ' bottom' → logprob: -9.352895736694336

Token 2343: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.16033470630645752
    2. ' top' → logprob: -1.9103347063064575
    3. 'nodes' → logprob: -9.785334587097168
    4. ' nodes' → logprob: -10.410334587097168
    5. 'bottom' → logprob: -11.785334587097168
    6. '[top' → logprob: -12.035334587097168
    7. '   ' → logprob: -13.160334587097168
    8. '_top' → logprob: -13.660334587097168
    9. '(top' → logprob: -13.785334587097168
    10. ' ' → logprob: -13.910334587097168

Token 2344: ' line' (ID: 2543)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.6368281245231628
    2. ' line' → logprob: -1.0118281841278076
    3. 'line' → logprob: -2.2618281841278076
    4. '_' → logprob: -6.6368279457092285
    5. ' _' → logprob: -7.3868279457092285
    6. '   ' → logprob: -7.6368279457092285
    7. '_nodes' → logprob: -8.261828422546387
    8. '
' → logprob: -8.761828422546387
    9. '_layer' → logprob: -9.386828422546387
    10. '```' → logprob: -9.511828422546387

Token 2345: ' nodes' (ID: 15749)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.9218875765800476
    2. 'nodes' → logprob: -1.2968876361846924
    3. ' nodes' → logprob: -2.1718876361846924
    4. 'line' → logprob: -2.2968876361846924
    5. ' line' → logprob: -2.7968876361846924
    6. '_line' → logprob: -3.7968876361846924
    7. '_' → logprob: -4.046887397766113
    8. '_n' → logprob: -5.921887397766113
    9. ' _' → logprob: -6.296887397766113
    10. '   ' → logprob: -6.921887397766113

Token 2346: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3695559501647949
    2. '.' → logprob: -1.619555950164795
    3. ':
' → logprob: -3.494555950164795
    4. '.
' → logprob: -3.494555950164795
    5. ',' → logprob: -3.744555950164795
    6. ':' → logprob: -4.619555950164795
    7. '):
' → logprob: -5.244555950164795
    8. '   ' → logprob: -5.744555950164795
    9. '```' → logprob: -5.994555950164795
    10. ')' → logprob: -6.369555950164795

Token 2347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10366395860910416
    2. '
' → logprob: -2.353663921356201
    3. '        
' → logprob: -6.103663921356201
    4. 'n' → logprob: -6.978663921356201
    5. '```' → logprob: -8.60366439819336
    6. '    
' → logprob: -11.35366439819336
    7. '`
' → logprob: -11.47866439819336
    8. '  
' → logprob: -11.60366439819336
    9. '
' → logprob: -11.72866439819336
    10. '#' → logprob: -11.72866439819336

Token 2348: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007547581568360329
    2. '
' → logprob: -5.132547378540039
    3. 'nodes' → logprob: -7.382547378540039
    4. 'n' → logprob: -8.007547378540039
    5. '```' → logprob: -8.382547378540039
    6. 'lines' → logprob: -8.632547378540039
    7. '#' → logprob: -9.507547378540039
    8. '        
' → logprob: -10.132547378540039
    9. 'num' → logprob: -10.882547378540039
    10. 'line' → logprob: -11.007547378540039

Token 2349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002538444008678198
    2. 'n' → logprob: -6.002538681030273
    3. 'nodes' → logprob: -10.377538681030273
    4. ' n' → logprob: -11.377538681030273
    5. '```' → logprob: -11.627538681030273
    6. 'lines' → logprob: -13.252538681030273
    7. '#' → logprob: -13.252538681030273
    8. ' lines' → logprob: -13.377538681030273
    9. 'line' → logprob: -13.502538681030273
    10. 'node' → logprob: -14.252538681030273

Token 2350: ' lines' (ID: 8698)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.6872934699058533
    2. 'horizontal' → logprob: -0.8122934699058533
    3. 'lines' (adapté à ' lines') → logprob: -3.562293529510498
    4. 'n' → logprob: -4.812293529510498
    5. 'y' → logprob: -5.562293529510498
    6. '#' → logprob: -5.562293529510498
    7. 'line' → logprob: -6.062293529510498
    8. 'node' → logprob: -6.187293529510498
    9. '   ' → logprob: -6.937293529510498
    10. 'num' → logprob: -7.062293529510498

Token 2351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028101833537220955
    2. '=' → logprob: -3.778101921081543
    3. ':' → logprob: -6.028101921081543
    4. '_' → logprob: -7.278101921081543
    5. '_idx' → logprob: -8.278101921081543
    6. '_count' → logprob: -8.278101921081543
    7. ')' → logprob: -8.403101921081543
    8. '   ' → logprob: -9.028101921081543
    9. '=[]' → logprob: -9.153101921081543
    10. '       ' → logprob: -9.278101921081543

Token 2352: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019376773852854967
    2. ' self' → logprob: -6.2519378662109375
    3. '       ' → logprob: -11.751937866210938
    4. '   ' → logprob: -14.626937866210938
    5. '[self' → logprob: -14.626937866210938
    6. '(self' → logprob: -15.626937866210938
    7. '           ' → logprob: -16.626937866210938
    8. '	self' → logprob: -17.501937866210938
    9. ' ' → logprob: -18.251937866210938
    10. 'list' → logprob: -18.376937866210938

Token 2353: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.009901638142764568
    2. '_build' → logprob: -4.634901523590088
    3. '.' → logprob: -9.509902000427246
    4. '   ' → logprob: -10.759902000427246
    5. ' _' → logprob: -11.009902000427246
    6. '.build' → logprob: -11.259902000427246
    7. '_width' → logprob: -11.759902000427246
    8. '_horizontal' → logprob: -13.009902000427246
    9. '_' → logprob: -13.634902000427246
    10. ' .' → logprob: -13.759902000427246

Token 2354: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -5.512236498361744e-07
    2. '_build' → logprob: -15.000000953674316
    3. '
' → logprob: -16.125
    4. 'b' → logprob: -16.875
    5. ' build' → logprob: -17.5
    6. '(build' → logprob: -18.75
    7. '.build' → logprob: -20.375
    8. '   ' → logprob: -20.5
    9. 'built' → logprob: -20.625
    10. '```' → logprob: -21.125

Token 2355: '_horizontal' (ID: 158907)
  Prédit: '_horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_horizontal' → logprob: -0.005243122112005949
    2. 'horizontal' → logprob: -5.255243301391602
    3. ' horizontal' → logprob: -12.255243301391602
    4. '(horizontal' → logprob: -13.005243301391602
    5. '_h' → logprob: -14.505243301391602
    6. '_lines' → logprob: -14.880243301391602
    7. '_HORIZONTAL' → logprob: -14.880243301391602
    8. '('_' → logprob: -15.005243301391602
    9. '\' → logprob: -15.630243301391602
    10. '```' → logprob: -15.630243301391602

Token 2356: '_cut' (ID: 81399)
  Prédit: '_cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.0005558936391025782
    2. '_lines' → logprob: -7.625555992126465
    3. 'cut' → logprob: -9.625555992126465
    4. '```' → logprob: -14.750555992126465
    5. '_c' → logprob: -14.875555992126465
    6. '_' → logprob: -15.750555992126465
    7. 'cuts' → logprob: -15.750555992126465
    8. 'lines' → logprob: -15.875555992126465
    9. '   ' → logprob: -16.12555503845215
    10. '
' → logprob: -16.50055503845215

Token 2357: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0018557000439614058
    2. 's' → logprob: -6.376855850219727
    3. '_' → logprob: -9.501855850219727
    4. '_points' → logprob: -10.126855850219727
    5. 'lines' → logprob: -11.001855850219727
    6. '_
' → logprob: -12.376855850219727
    7. '```' → logprob: -12.376855850219727
    8. '_s' → logprob: -12.626855850219727
    9. ')_' → logprob: -13.126855850219727
    10. '
' → logprob: -13.376855850219727

Token 2358: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09109034389257431
    2. '()
' → logprob: -2.591090440750122
    3. '       ' → logprob: -4.966090202331543
    4. '<|end|>' → logprob: -6.341090202331543
    5. ')' → logprob: -6.716090202331543
    6. '[' → logprob: -7.091090202331543
    7. '
' → logprob: -7.841090202331543
    8. '<|end|>' → logprob: -8.466090202331543
    9. '[]' → logprob: -8.966090202331543
    10. '        
' → logprob: -9.091090202331543

Token 2359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045453060418367386
    2. 'nodes' → logprob: -3.4204530715942383
    3. ' nodes' → logprob: -4.545453071594238
    4. 'points' → logprob: -7.295453071594238
    5. ' points' → logprob: -8.295453071594238
    6. ' lines' → logprob: -9.795453071594238
    7. 'n' → logprob: -10.295453071594238
    8. '        
' → logprob: -10.420453071594238
    9. '
' → logprob: -11.545453071594238
    10. 'node' → logprob: -11.545453071594238

Token 2360: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.000387535837944597
    2. 'lines' → logprob: -8.500387191772461
    3. 'node' → logprob: -9.000387191772461
    4. 'points' → logprob: -11.000387191772461
    5. '
' → logprob: -11.250387191772461
    6. 'layers' → logprob: -11.750387191772461
    7. 'all' → logprob: -12.000387191772461
    8. 'line' → logprob: -12.250387191772461
    9. '       ' → logprob: -13.250387191772461
    10. '   ' → logprob: -13.375387191772461

Token 2361: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.042564939707517624
    2. '=' → logprob: -3.792564868927002
    3. ' =' → logprob: -4.167564868927002
    4. 'per' → logprob: -6.167564868927002
    5. 's' → logprob: -7.292564868927002
    6. ':' → logprob: -8.16756534576416
    7. 'Per' → logprob: -9.41756534576416
    8. '_' → logprob: -9.66756534576416
    9. '_nodes' → logprob: -9.66756534576416
    10. '_indices' → logprob: -9.79256534576416

Token 2362: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1602848470211029
    2. '_line' → logprob: -1.9102848768234253
    3. '=' → logprob: -11.035284996032715
    4. '-line' → logprob: -11.160284996032715
    5. ' line' → logprob: -12.410284996032715
    6. '```' → logprob: -12.410284996032715
    7. ')' → logprob: -12.785284996032715
    8. '   ' → logprob: -13.035284996032715
    9. '[line' → logprob: -13.285284996032715
    10. '=line' → logprob: -13.410284996032715

Token 2363: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.16731369495391846
    2. '=' → logprob: -2.417313575744629
    3. ' =' → logprob: -2.917313575744629
    4. '.' → logprob: -5.292313575744629
    5. ':' → logprob: -5.417313575744629
    6. '[' → logprob: -7.542313575744629
    7. ')' → logprob: -8.292313575744629
    8. '<|end|>' → logprob: -8.667313575744629
    9. ',' → logprob: -9.417313575744629
    10. '.extend' → logprob: -9.542313575744629

Token 2364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015456913970410824
    2. ' self' → logprob: -6.5015459060668945
    3. '[self' → logprob: -10.126545906066895
    4. '[]' → logprob: -13.626545906066895
    5. '       ' → logprob: -13.876545906066895
    6. '[]
' → logprob: -15.001545906066895
    7. '(self' → logprob: -15.251545906066895
    8. '   ' → logprob: -15.376545906066895
    9. '[' → logprob: -15.751545906066895
    10. '	self' → logprob: -16.251544952392578

Token 2365: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00790270697325468
    2. '_build' → logprob: -4.8829026222229
    3. '.build' → logprob: -8.257903099060059
    4. ' _' → logprob: -10.882903099060059
    5. '.' → logprob: -11.882903099060059
    6. '   ' → logprob: -12.882903099060059
    7. '_b' → logprob: -13.007903099060059
    8. ' .' → logprob: -13.757903099060059
    9. '.append' → logprob: -14.132903099060059
    10. '_' → logprob: -14.132903099060059

Token 2366: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -7.226628895296017e-06
    2. 'free' → logprob: -12.750007629394531
    3. '_build' → logprob: -13.125007629394531
    4. '
' → logprob: -14.250007629394531
    5. 'built' → logprob: -14.875007629394531
    6. ' build' → logprob: -15.125007629394531
    7. '(build' → logprob: -15.625007629394531
    8. '.build' → logprob: -16.00000762939453
    9. 'append' → logprob: -16.75000762939453
    10. '   ' → logprob: -17.00000762939453

Token 2367: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.5225017070770264
    2. 'nodes' → logprob: -1.3975017070770264
    3. 'horizontal' → logprob: -2.2725017070770264
    4. '_horizontal' → logprob: -2.8975017070770264
    5. '(nodes' → logprob: -7.3975019454956055
    6. '_lines' → logprob: -7.8975019454956055
    7. 'lines' → logprob: -8.897501945495605
    8. '[n' → logprob: -9.272501945495605
    9. '[' → logprob: -9.647501945495605
    10. ' horizontal' → logprob: -9.897501945495605

Token 2368: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00016098834748845547
    2. ')' → logprob: -9.875161170959473
    3. '(horizontal' → logprob: -10.625161170959473
    4. '(' → logprob: -10.750161170959473
    5. '(nodes' → logprob: -11.250161170959473
    6. '(
' → logprob: -11.500161170959473
    7. '```' → logprob: -11.875161170959473
    8. '<|end|>' → logprob: -12.500161170959473
    9. ':' → logprob: -12.625161170959473
    10. 'lines' → logprob: -13.000161170959473

Token 2369: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052034325897693634
    2. ')
' → logprob: -3.052034378051758
    3. '       ' → logprob: -5.677034378051758
    4. '[' → logprob: -12.677034378051758
    5. '
' → logprob: -13.177034378051758
    6. ')
' → logprob: -13.177034378051758
    7. '[:-' → logprob: -13.802034378051758
    8. ')#' → logprob: -13.927034378051758
    9. ')[' → logprob: -14.052034378051758
    10. ')

' → logprob: -14.302034378051758

Token 2370: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02444186992943287
    2. '       ' → logprob: -4.274441719055176
    3. 'node' → logprob: -4.899441719055176
    4. 'num' → logprob: -6.524441719055176
    5. '#' → logprob: -7.899441719055176
    6. ' n' → logprob: -8.274441719055176
    7. 'nodes' → logprob: -8.399441719055176
    8. '```' → logprob: -8.899441719055176
    9. 'line' → logprob: -10.024441719055176
    10. 'v' → logprob: -10.024441719055176

Token 2371: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.6592366099357605
    2. 'n' → logprob: -0.7842366099357605
    3. 'num' → logprob: -4.784236431121826
    4. '#' → logprob: -5.534236431121826
    5. 'N' → logprob: -5.784236431121826
    6. 'index' → logprob: -5.909236431121826
    7. 'idx' → logprob: -6.159236431121826
    8. 'line' → logprob: -6.534236431121826
    9. 'total' → logprob: -6.659236431121826
    10. 'point' → logprob: -6.659236431121826

Token 2372: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.15747766196727753
    2. '_indices' → logprob: -2.657477617263794
    3. '_count' → logprob: -3.032477617263794
    4. '_counts' → logprob: -4.657477855682373
    5. '_index' → logprob: -4.907477855682373
    6. '_idx' → logprob: -5.157477855682373
    7. '_ids' → logprob: -5.532477855682373
    8. '_to' → logprob: -8.282477378845215
    9. '_map' → logprob: -8.657477378845215
    10. '_indexes' → logprob: -9.407477378845215

Token 2373: '_map' (ID: 11824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11181630194187164
    2. ' =' → logprob: -2.73681640625
    3. '=' → logprob: -3.36181640625
    4. '_map' → logprob: -5.36181640625
    5. '_s' → logprob: -7.61181640625
    6. '_counter' → logprob: -7.86181640625
    7. '_' → logprob: -7.86181640625
    8. '   ' → logprob: -9.61181640625
    9. '_start' → logprob: -9.73681640625
    10. ':' → logprob: -10.11181640625

Token 2374: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47509321570396423
    2. ' =' → logprob: -0.9750932455062866
    3. ':' → logprob: -7.100093364715576
    4. '[' → logprob: -9.225092887878418
    5. '{' → logprob: -10.100092887878418
    6. ' ' → logprob: -11.475092887878418
    7. '   ' → logprob: -11.600092887878418
    8. ',' → logprob: -12.600092887878418
    9. '={}
' → logprob: -12.725092887878418
    10. '={(' → logprob: -12.850092887878418

Token 2375: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.001577832386828959
    2. 'List' → logprob: -6.501577854156494
    3. '{}' → logprob: -10.376577377319336
    4. '[' → logprob: -10.751577377319336
    5. ' Dict' → logprob: -11.376577377319336
    6. '{}
' → logprob: -12.251577377319336
    7. 'dict' → logprob: -12.751577377319336
    8. '[List' → logprob: -13.001577377319336
    9. '{' → logprob: -13.751577377319336
    10. '[]' → logprob: -15.376577377319336

Token 2376: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011661769822239876
    2. '[int' → logprob: -4.511662006378174
    3. '[(' → logprob: -7.761662006378174
    4. '[
' → logprob: -9.636661529541016
    5. '[str' → logprob: -9.636661529541016
    6. '[List' → logprob: -10.886661529541016
    7. 'Tuple' → logprob: -11.386661529541016
    8. 'Point' → logprob: -11.761661529541016
    9. '```' → logprob: -12.136661529541016
    10. '{' → logprob: -12.386661529541016

Token 2377: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.014580762945115566
    2. 'Point' → logprob: -4.764580726623535
    3. 'int' → logprob: -5.264580726623535
    4. '(Point' → logprob: -7.764580726623535
    5. '(int' → logprob: -8.889580726623535
    6. 'tuple' → logprob: -9.389580726623535
    7. ' Tuple' → logprob: -9.389580726623535
    8. '(' → logprob: -10.764580726623535
    9. '[int' → logprob: -11.389580726623535
    10. '[' → logprob: -11.764580726623535

Token 2378: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0018880647839978337
    2. '[' → logprob: -6.501888275146484
    3. 'int' → logprob: -7.876888275146484
    4. 'float' → logprob: -13.126888275146484
    5. '[str' → logprob: -13.251888275146484
    6. '(int' → logprob: -13.376888275146484
    7. '[
' → logprob: -14.376888275146484
    8. 'Point' → logprob: -16.376888275146484
    9. ',int' → logprob: -16.751888275146484
    10. ']' → logprob: -16.751888275146484

Token 2379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16115762293338776
    2. ',int' → logprob: -1.9111576080322266
    3. '[int' → logprob: -7.161157608032227
    4. 'int' → logprob: -9.286157608032227
    5. ',float' → logprob: -10.786157608032227
    6. ' ,' → logprob: -11.161157608032227
    7. ',bool' → logprob: -11.661157608032227
    8. ',
' → logprob: -11.786157608032227
    9. ',List' → logprob: -11.786157608032227
    10. ']int' → logprob: -13.536157608032227

Token 2380: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014500057324767113
    2. 'float' → logprob: -4.264500141143799
    3. ' int' → logprob: -8.76449966430664
    4. 'Point' → logprob: -9.51449966430664
    5. '...' → logprob: -9.76449966430664
    6. '[int' → logprob: -11.38949966430664
    7. 'str' → logprob: -11.51449966430664
    8. ' float' → logprob: -12.13949966430664
    9. '   ' → logprob: -12.51449966430664
    10. '0' → logprob: -12.88949966430664

Token 2381: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023888548836112022
    2. '],' → logprob: -3.77388858795166
    3. ']' → logprob: -7.52388858795166
    4. ' ,' → logprob: -9.64888858795166
    5. '       ' → logprob: -11.64888858795166
    6. '   ' → logprob: -11.89888858795166
    7. ']]' → logprob: -12.52388858795166
    8. ',int' → logprob: -12.52388858795166
    9. '           ' → logprob: -12.77388858795166
    10. ',List' → logprob: -12.77388858795166

Token 2382: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007817775011062622
    2. 'Tuple' → logprob: -4.88281774520874
    3. ' int' → logprob: -9.507818222045898
    4. '[int' → logprob: -9.757818222045898
    5. 'Point' → logprob: -10.257818222045898
    6. '(int' → logprob: -10.382818222045898
    7. 'List' → logprob: -12.132818222045898
    8. '   ' → logprob: -12.757818222045898
    9. ' Tuple' → logprob: -13.007818222045898
    10. '
' → logprob: -13.757818222045898

Token 2383: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007813957636244595
    2. ']=' → logprob: -7.250781536102295
    3. ')' → logprob: -10.625781059265137
    4. ' ]' → logprob: -10.875781059265137
    5. ']=(' → logprob: -11.625781059265137
    6. '=' → logprob: -12.000781059265137
    7. '   ' → logprob: -12.625781059265137
    8. ']={' → logprob: -13.250781059265137
    9. '       ' → logprob: -13.375781059265137
    10. ',' → logprob: -13.750781059265137

Token 2384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06201518699526787
    2. ' =' → logprob: -2.8120152950286865
    3. '={}' → logprob: -11.437015533447266
    4. '=
' → logprob: -11.687015533447266
    5. ')' → logprob: -11.937015533447266
    6. '   ' → logprob: -12.312015533447266
    7. '={}
' → logprob: -12.687015533447266
    8. '       ' → logprob: -12.812015533447266
    9. '={
' → logprob: -12.812015533447266
    10. '={' → logprob: -13.187015533447266

Token 2385: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.4259644558478612e-05
    2. '{}
' → logprob: -11.750014305114746
    3. 'dict' → logprob: -12.000014305114746
    4. '{})' → logprob: -16.50001335144043
    5. '{}

' → logprob: -17.12501335144043
    6. '{' → logprob: -17.87501335144043
    7. '{},' → logprob: -18.62501335144043
    8. '{}_' → logprob: -19.37501335144043
    9. '{}\' → logprob: -19.50001335144043
    10. ' {}' → logprob: -20.25001335144043

Token 2386: '       ' (ID: 309)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.4401535987854004
    2. 'idx' → logprob: -1.5651535987854004
    3. 'next' → logprob: -1.8151535987854004
    4. 'nid' → logprob: -2.3151535987854004
    5. 'curr' → logprob: -2.3151535987854004
    6. '       ' → logprob: -3.0651535987854004
    7. 'id' → logprob: -3.6901535987854004
    8. 'counter' → logprob: -3.8151535987854004
    9. 'cnt' → logprob: -3.9401535987854004
    10. 'current' → logprob: -4.3151535987854

Token 2387: ' #' (ID: 1069)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6482147574424744
    2. 'nid' → logprob: -0.8982147574424744
    3. 'counter' → logprob: -3.898214817047119
    4. 'cnt' → logprob: -3.898214817047119
    5. 'idx' → logprob: -4.398214817047119
    6. 'curr' → logprob: -5.148214817047119
    7. 'id' → logprob: -5.648214817047119
    8. 'vid' → logprob: -5.898214817047119
    9. 'current' → logprob: -6.523214817047119
    10. 'uid' → logprob: -6.773214817047119

Token 2388: ' We'll' (ID: 46830)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.1563791185617447
    2. 'nid' → logprob: -2.406379222869873
    3. 'idx' → logprob: -4.156379222869873
    4. 'curr' → logprob: -4.531379222869873
    5. 'cnt' → logprob: -4.656379222869873
    6. 'id' → logprob: -4.781379222869873
    7. 'counter' → logprob: -5.656379222869873
    8. 'current' → logprob: -6.031379222869873
    9. 'cur' → logprob: -6.531379222869873
    10. 'vid' → logprob: -6.531379222869873

Token 2389: ' assign' (ID: 14975)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.40716561675071716
    2. 'nid' → logprob: -1.4071656465530396
    3. 'curr' → logprob: -3.28216552734375
    4. 'counter' → logprob: -4.28216552734375
    5. 'next' → logprob: -4.90716552734375
    6. 'idx' → logprob: -5.03216552734375
    7. 'cur' → logprob: -5.15716552734375
    8. 'id' → logprob: -5.28216552734375
    9. 'vid' → logprob: -5.53216552734375
    10. 'current' → logprob: -5.53216552734375

Token 2390: ' id' (ID: 1211)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.9429473876953125
    2. 'current' → logprob: -1.4429473876953125
    3. 'curr' → logprob: -1.6929473876953125
    4. 'counter' → logprob: -2.3179473876953125
    5. 'idx' → logprob: -3.1929473876953125
    6. 'cur' → logprob: -3.6929473876953125
    7. 'nid' → logprob: -4.5679473876953125
    8. ' node' → logprob: -5.4429473876953125
    9. 'count' → logprob: -6.1929473876953125
    10. 'id' → logprob: -6.3179473876953125

Token 2391: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0254298448562622
    2. '_counter' → logprob: -1.2754298448562622
    3. ' =' → logprob: -1.5254298448562622
    4. '=' → logprob: -2.9004297256469727
    5. 's' → logprob: -3.4004297256469727
    6. '0' → logprob: -3.5254297256469727
    7. 'counter' → logprob: -4.775429725646973
    8. ' ' → logprob: -5.525429725646973
    9. 'x' → logprob: -6.400429725646973
    10. '_
' → logprob: -6.400429725646973

Token 2392: ' each' (ID: 2454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33739322423934937
    2. '0' → logprob: -2.712393283843994
    3. '(i' → logprob: -2.712393283843994
    4. 'node' → logprob: -2.837393283843994
    5. 'i' → logprob: -3.587393283843994
    6. 'line' → logprob: -4.462393283843994
    7. 'nodes' → logprob: -4.587393283843994
    8. '(node' → logprob: -4.962393283843994
    9. 'each' → logprob: -5.087393283843994
    10. '(line' → logprob: -5.212393283843994

Token 2393: ' in' (ID: 306)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.34817591309547424
    2. '(i' → logprob: -1.8481758832931519
    3. '(' → logprob: -2.0981760025024414
    4. 'line' → logprob: -5.348176002502441
    5. ' (' → logprob: -5.598176002502441
    6. '(node' → logprob: -5.848176002502441
    7. 'node' → logprob: -7.223176002502441
    8. '(
' → logprob: -7.973176002502441
    9. '(None' → logprob: -8.223176002502441
    10. '(l' → logprob: -8.348176002502441

Token 2394: ' and' (ID: 326)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.3395613431930542
    2. '_' → logprob: -1.7145613431930542
    3. 'node' → logprob: -3.3395614624023438
    4. '_line' → logprob: -3.7145614624023438
    5. '_vertex' → logprob: -4.214561462402344
    6. 'ternal' → logprob: -4.839561462402344
    7. '_,' → logprob: -5.089561462402344
    8. '_t' → logprob: -5.964561462402344
    9. ',' → logprob: -5.964561462402344
    10. '
' → logprob: -6.214561462402344

Token 2395: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -7.584239938296378e-06
    2. ' out' → logprob: -12.125007629394531
    3. '   ' → logprob: -13.625007629394531
    4. '_out' → logprob: -14.625007629394531
    5. '(out' → logprob: -15.000007629394531
    6. '	out' → logprob: -16.87500762939453
    7. '       ' → logprob: -17.75000762939453
    8. '(' → logprob: -17.87500762939453
    9. 'node' → logprob: -17.87500762939453
    10. 'o' → logprob: -18.25000762939453

Token 2396: ' vertex' (ID: 25363)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.33225688338279724
    2. 'node' → logprob: -1.9572569131851196
    3. '_vertex' → logprob: -2.83225679397583
    4. '_' → logprob: -3.33225679397583
    5. 'vertex' → logprob: -3.83225679397583
    6. '
' → logprob: -5.33225679397583
    7. ' node' → logprob: -5.45725679397583
    8. '```' → logprob: -5.58225679397583
    9. '_nodes' → logprob: -5.95725679397583
    10. '   ' → logprob: -6.33225679397583

Token 2397: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4105104207992554
    2. 'id' → logprob: -1.9105104207992554
    3. 'node' → logprob: -2.285510540008545
    4. 'idx' → logprob: -2.285510540008545
    5. 'curr' → logprob: -2.285510540008545
    6. 'counter' → logprob: -2.535510540008545
    7. 'cnt' → logprob: -2.910510540008545
    8. 'count' → logprob: -3.410510540008545
    9. 'current' → logprob: -3.410510540008545
    10. 'cur' → logprob: -3.785510540008545

Token 2398: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.5443555116653442
    2. 'nodes' → logprob: -0.9193555116653442
    3. 'node' → logprob: -5.044355392456055
    4. ' each' → logprob: -5.544355392456055
    5. ' nodes' → logprob: -5.669355392456055
    6. '(nodes' → logprob: -6.294355392456055
    7. 'lines' → logprob: -6.419355392456055
    8. 'the' → logprob: -7.044355392456055
    9. 'a' → logprob: -7.419355392456055
    10. 'all' → logprob: -7.669355392456055

Token 2399: ' point' (ID: 2438)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4715639650821686
    2. 'node' → logprob: -1.2215639352798462
    3. ' line' → logprob: -3.2215640544891357
    4. ' node' → logprob: -3.7215640544891357
    5. '(line' → logprob: -4.721563816070557
    6. ' (' → logprob: -6.596563816070557
    7. 'lines' → logprob: -6.846563816070557
    8. '(node' → logprob: -6.971563816070557
    9. 'nodes' → logprob: -6.971563816070557
    10. 'layer' → logprob: -7.596563816070557

Token 2400: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7928619384765625
    2. '       ' → logprob: -0.9178619384765625
    3. 'for' → logprob: -3.2928619384765625
    4. 'idx' → logprob: -3.7928619384765625
    5. 'count' → logprob: -4.2928619384765625
    6. 'counter' → logprob: -4.4178619384765625
    7. '[node' → logprob: -5.1678619384765625
    8. ',' → logprob: -5.4178619384765625
    9. '```' → logprob: -5.4178619384765625
    10. 'node' → logprob: -5.5428619384765625

Token 2401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017801614478230476
    2. ' for' → logprob: -4.767801761627197
    3. 'i' → logprob: -6.017801761627197
    4. 'for' → logprob: -6.142801761627197
    5. ' i' → logprob: -6.517801761627197
    6. '   ' → logprob: -7.517801761627197
    7. ',' → logprob: -7.892801761627197
    8. '
' → logprob: -8.142801284790039
    9. 'token' → logprob: -8.267801284790039
    10. 'idx' → logprob: -8.392801284790039

Token 2402: ' #' (ID: 1069)
  Prédit: 'nid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nid' → logprob: -0.7221806645393372
    2. 'id' → logprob: -1.9721806049346924
    3. 'idx' → logprob: -2.4721806049346924
    4. 'cnt' → logprob: -2.5971806049346924
    5. 'node' → logprob: -2.7221806049346924
    6. 'vid' → logprob: -2.9721806049346924
    7. 'counter' → logprob: -3.3471806049346924
    8. 'curr' → logprob: -3.7221806049346924
    9. '       ' → logprob: -4.3471808433532715
    10. 'count' → logprob: -4.4721808433532715

Token 2403: ' in' (ID: 306)
  Prédit: 'nid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nid' → logprob: -0.45226025581359863
    2. 'id' → logprob: -2.4522602558135986
    3. 'node' → logprob: -2.4522602558135986
    4. 'idx' → logprob: -2.4522602558135986
    5. 'vid' → logprob: -2.9522602558135986
    6. 'curr' → logprob: -3.5772602558135986
    7. 'cnt' → logprob: -5.0772600173950195
    8. '       ' → logprob: -5.4522600173950195
    9. 'counter' → logprob: -5.8272600173950195
    10. 'next' → logprob: -5.9522600173950195

Token 2404: ' vertex' (ID: 25363)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15321356058120728
    2. '_idx' → logprob: -3.1532135009765625
    3. '_
' → logprob: -3.4032135009765625
    4. '_counter' → logprob: -3.6532135009765625
    5. '_id' → logprob: -4.0282135009765625
    6. '_count' → logprob: -4.7782135009765625
    7. '_index' → logprob: -5.2782135009765625
    8. '   ' → logprob: -6.4032135009765625
    9. 'dex' → logprob: -6.7782135009765625
    10. '_offset' → logprob: -6.9032135009765625

Token 2405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5657694339752197
    2. ',' → logprob: -2.3157694339752197
    3. '_id' → logprob: -2.6907694339752197
    4. '_' → logprob: -2.9407694339752197
    5. '=' → logprob: -2.9407694339752197
    6. '   ' → logprob: -3.5657694339752197
    7. ')' → logprob: -3.8157694339752197
    8. ':' → logprob: -3.9407694339752197
    9. '       ' → logprob: -3.9407694339752197
    10. '[' → logprob: -4.315769195556641

Token 2406: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.694014847278595
    2. 'len' → logprob: -0.819014847278595
    3. '(i' → logprob: -4.319015026092529
    4. '(len' → logprob: -4.319015026092529
    5. 'node' → logprob: -4.569015026092529
    6. '(' → logprob: -4.944015026092529
    7. 'i' → logprob: -5.694015026092529
    8. 'idx' → logprob: -5.694015026092529
    9. '(node' → logprob: -6.319015026092529
    10. 'index' → logprob: -6.819015026092529

Token 2407: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4918575882911682
    2. '2' → logprob: -0.9918575882911682
    3. '(len' → logprob: -5.116857528686523
    4. '0' → logprob: -5.866857528686523
    5. 'node' → logprob: -6.241857528686523
    6. '(' → logprob: -6.241857528686523
    7. '(i' → logprob: -6.491857528686523
    8. 'i' → logprob: -7.116857528686523
    9. 'idx' → logprob: -7.616857528686523
    10. ' len' → logprob: -7.991857528686523

Token 2408: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6985993385314941
    2. ' *' → logprob: -0.6985993385314941
    3. '*i' → logprob: -5.323599338531494
    4. '*(' → logprob: -7.698599338531494
    5. '*n' → logprob: -11.073598861694336
    6. '*object' → logprob: -11.198598861694336
    7. '*j' → logprob: -11.323598861694336
    8. '*t' → logprob: -11.323598861694336
    9. '*p' → logprob: -11.698598861694336
    10. '*out' → logprob: -11.823598861694336

Token 2409: ' id' (ID: 1211)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.31966763734817505
    2. 'node' → logprob: -2.0696675777435303
    3. '(i' → logprob: -3.3196675777435303
    4. '(idx' → logprob: -3.8196675777435303
    5. '(len' → logprob: -3.9446675777435303
    6. '(id' → logprob: -4.319667816162109
    7. 'idx' → logprob: -4.444667816162109
    8. 'id' → logprob: -4.444667816162109
    9. '(index' → logprob: -4.569667816162109
    10. '(' → logprob: -4.944667816162109

Token 2410: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1740518808364868
    2. '*' → logprob: -1.5490518808364868
    3. ' +' → logprob: -1.6740518808364868
    4. '+' → logprob: -2.1740517616271973
    5. ',' → logprob: -2.7990517616271973
    6. ' *' → logprob: -3.7990517616271973
    7. '*i' → logprob: -4.049051761627197
    8. '       ' → logprob: -4.174051761627197
    9. '*(' → logprob: -4.424051761627197
    10. ',
' → logprob: -4.924051761627197

Token 2411: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.5763593316078186
    2. ' out' → logprob: -0.8263593316078186
    3. '
' → logprob: -8.451359748840332
    4. '       ' → logprob: -9.951359748840332
    5. '2' → logprob: -10.326359748840332
    6. '   ' → logprob: -10.451359748840332
    7. ' ' → logprob: -10.701359748840332
    8. '(out' → logprob: -11.326359748840332
    9. '	out' → logprob: -11.701359748840332
    10. '`' → logprob: -11.826359748840332

Token 2412: ' vertex' (ID: 25363)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4181996285915375
    2. '=' → logprob: -1.5431996583938599
    3. '_id' → logprob: -2.5431995391845703
    4. '_' → logprob: -3.7931995391845703
    5. ' =' → logprob: -4.29319953918457
    6. ' *' → logprob: -5.16819953918457
    7. '+' → logprob: -5.79319953918457
    8. ' ' → logprob: -7.04319953918457
    9. 'id' → logprob: -7.04319953918457
    10. ')' → logprob: -7.66819953918457

Token 2413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07228906452655792
    2. '+' → logprob: -2.947288990020752
    3. ' =' → logprob: -4.197288990020752
    4. ' +' → logprob: -6.197288990020752
    5. ',' → logprob: -10.07228946685791
    6. '*' → logprob: -10.57228946685791
    7. '=
' → logprob: -11.07228946685791
    8. '   ' → logprob: -11.19728946685791
    9. ' ' → logprob: -11.44728946685791
    10. '-' → logprob: -11.44728946685791

Token 2414: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004330532974563539
    2. ' ' → logprob: -7.750432968139648
    3. '   ' → logprob: -13.375432968139648
    4. '(' → logprob: -14.625432968139648
    5. '`' → logprob: -15.750432968139648
    6. '1' → logprob: -16.25043296813965
    7. '```' → logprob: -17.25043296813965
    8. '    ' → logprob: -17.75043296813965
    9. ' (' → logprob: -17.87543296813965
    10. '           ' → logprob: -17.87543296813965

Token 2415: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4498052223643754e-05
    2. ' ' → logprob: -11.250014305114746
    3. '(' → logprob: -14.125014305114746
    4. '   ' → logprob: -14.500014305114746
    5. '
' → logprob: -16.375015258789062
    6. '`' → logprob: -18.125015258789062
    7. '```' → logprob: -18.250015258789062
    8. '1' → logprob: -18.500015258789062
    9. '  ' → logprob: -18.500015258789062
    10. '    ' → logprob: -19.375015258789062

Token 2416: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -3.273621405242011e-05
    2. ' *' → logprob: -10.375032424926758
    3. '*_' → logprob: -13.625032424926758
    4. '**' → logprob: -16.000032424926758
    5. '*
' → logprob: -17.000032424926758
    6. '*object' → logprob: -17.750032424926758
    7. ''*' → logprob: -18.375032424926758
    8. '*num' → logprob: -18.875032424926758
    9. '*i' → logprob: -19.250032424926758
    10. '*(' → logprob: -19.375032424926758

Token 2417: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0021848801989108324
    2. ' id' → logprob: -6.502184867858887
    3. '_id' → logprob: -7.502184867858887
    4. 'node' → logprob: -9.752184867858887
    5. '_' → logprob: -10.002184867858887
    6. '(id' → logprob: -11.877184867858887
    7. '(' → logprob: -12.377184867858887
    8. ''id' → logprob: -13.127184867858887
    9. '`' → logprob: -13.377184867858887
    10. '```' → logprob: -13.502184867858887

Token 2418: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20473580062389374
    2. '+' → logprob: -2.32973575592041
    3. ' +' → logprob: -2.95473575592041
    4. '       ' → logprob: -4.07973575592041
    5. '\n' → logprob: -5.20473575592041
    6. ',' → logprob: -5.82973575592041
    7. ',
' → logprob: -6.20473575592041
    8. '
' → logprob: -6.57973575592041
    9. '   ' → logprob: -7.07973575592041
    10. '```' → logprob: -7.20473575592041

Token 2419: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02985820733010769
    2. '0' → logprob: -3.529858112335205
    3. ' ' → logprob: -9.154858589172363
    4. '   ' → logprob: -13.154858589172363
    5. '`' → logprob: -17.279857635498047
    6. '  ' → logprob: -17.654857635498047
    7. ''' → logprob: -18.529857635498047
    8. '           ' → logprob: -19.029857635498047
    9. '```' → logprob: -19.029857635498047
    10. '       ' → logprob: -19.154857635498047

Token 2420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02326003834605217
    2. '0' → logprob: -3.7732601165771484
    3. ' ' → logprob: -11.148260116577148
    4. '   ' → logprob: -15.648260116577148
    5. '  ' → logprob: -18.89826011657715
    6. '    ' → logprob: -20.14826011657715
    7. '```' → logprob: -20.33576011657715
    8. '3' → logprob: -20.77326011657715
    9. '     ' → logprob: -20.83576011657715
    10. '`' → logprob: -21.02326011657715

Token 2421: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6567975282669067
    2. '       ' → logprob: -0.7817975282669067
    3. 'next' → logprob: -4.906797409057617
    4. 'token' → logprob: -5.281797409057617
    5. 'id' → logprob: -6.156797409057617
    6. 'n' → logprob: -6.906797409057617
    7. 'current' → logprob: -6.906797409057617
    8. 'count' → logprob: -7.406797409057617
    9. 'idx' → logprob: -7.406797409057617
    10. '<|end|>' → logprob: -7.406797409057617

Token 2422: '       ' (ID: 309)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.3085925579071045
    2. ' next' → logprob: -1.5585925579071045
    3. '       ' → logprob: -1.9335925579071045
    4. 'id' → logprob: -2.6835925579071045
    5. 'current' → logprob: -2.6835925579071045
    6. ' id' → logprob: -3.1835925579071045
    7. 'node' → logprob: -3.3085925579071045
    8. ' node' → logprob: -3.3085925579071045
    9. 'curr' → logprob: -3.3085925579071045
    10. 'idx' → logprob: -3.9335925579071045

Token 2423: ' id' (ID: 1211)
  Prédit: 'nid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nid' → logprob: -0.5462098121643066
    2. 'node' → logprob: -1.5462098121643066
    3. 'curr' → logprob: -3.0462098121643066
    4. 'id' (adapté à ' id') → logprob: -3.0462098121643066
    5. 'cnt' → logprob: -3.6712098121643066
    6. 'vid' → logprob: -3.6712098121643066
    7. 'counter' → logprob: -3.7962098121643066
    8. 'current' → logprob: -4.421209812164307
    9. 'idx' → logprob: -4.421209812164307
    10. 'cur' → logprob: -4.671209812164307

Token 2424: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.10178012400865555
    2. '_' → logprob: -3.2267801761627197
    3. ' =' → logprob: -3.2267801761627197
    4. '_count' → logprob: -4.476779937744141
    5. '=' → logprob: -5.476779937744141
    6. '_map' → logprob: -7.476779937744141
    7. '_cnt' → logprob: -7.726779937744141
    8. 'counter' → logprob: -8.22677993774414
    9. '_ctr' → logprob: -8.97677993774414
    10. '_=' → logprob: -9.47677993774414

Token 2425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693162202835083
    2. ' =' → logprob: -0.693162202835083
    3. ' ' → logprob: -12.318161964416504
    4. ',' → logprob: -12.943161964416504
    5. ' +=' → logprob: -13.068161964416504
    6. '<|end|>' → logprob: -13.193161964416504
    7. ')' → logprob: -13.318161964416504
    8. ' =
' → logprob: -14.318161964416504
    9. '+=' → logprob: -14.818161964416504
    10. '=
' → logprob: -14.943161964416504

Token 2426: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -21.000001907348633
    4. 'len' → logprob: -22.500001907348633
    5. '=' → logprob: -23.125001907348633
    6. '۰' → logprob: -23.125001907348633
    7. '[' → logprob: -23.250001907348633
    8. '       ' → logprob: -23.750001907348633
    9. '  ' → logprob: -24.125001907348633
    10. '1' → logprob: -24.500001907348633

Token 2427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. 'len' → logprob: -20.375
    4. '[' → logprob: -21.625
    5. '-' → logprob: -22.25
    6. '000' → logprob: -22.875
    7. '(' → logprob: -22.875
    8. '=' → logprob: -23.375
    9. '۰' → logprob: -23.375
    10. '1' → logprob: -23.875

Token 2428: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4985707998275757
    2. '       ' → logprob: -1.2485707998275757
    3. ' for' → logprob: -2.6235709190368652
    4. 'for' → logprob: -3.9985709190368652
    5. '<|end|>' → logprob: -4.498570919036865
    6. '        
' → logprob: -6.248570919036865
    7. '<|end|>' → logprob: -7.998570919036865
    8. ',' → logprob: -8.623570442199707
    9. '   ' → logprob: -8.998570442199707
    10. '  
' → logprob: -8.998570442199707

Token 2429: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8116118311882019
    2. '       ' → logprob: -0.9366118311882019
    3. ' for' → logprob: -1.8116118907928467
    4. '
' → logprob: -7.936611652374268
    5. '	for' → logprob: -10.311612129211426
    6. 'points' → logprob: -10.686612129211426
    7. 'n' → logprob: -10.936612129211426
    8. '```' → logprob: -11.311612129211426
    9. ' lines' → logprob: -11.561612129211426
    10. '   ' → logprob: -11.811612129211426

Token 2430: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.992775888647884e-05
    2. '       ' → logprob: -9.750069618225098
    3. ' for' → logprob: -11.625069618225098
    4. 'n' → logprob: -13.125069618225098
    5. 'line' → logprob: -15.875069618225098
    6. '
' → logprob: -16.625070571899414
    7. 'node' → logprob: -16.625070571899414
    8. 'num' → logprob: -16.750070571899414
    9. 'point' → logprob: -16.875070571899414
    10. 'height' → logprob: -17.000070571899414

Token 2431: ' i' (ID: 575)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5599845051765442
    2. 'y' → logprob: -1.0599844455718994
    3. 'i' → logprob: -2.5599844455718994
    4. 'ly' → logprob: -6.9349846839904785
    5. 'yi' → logprob: -6.9349846839904785
    6. 'layer' → logprob: -7.5599846839904785
    7. 'li' → logprob: -7.6849846839904785
    8. ' line' → logprob: -7.8099846839904785
    9. 'l' → logprob: -7.8099846839904785
    10. ' y' → logprob: -7.9349846839904785

Token 2432: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35645273327827454
    2. 'in' → logprob: -1.7314527034759521
    3. ',' → logprob: -2.106452703475952
    4. ' ,' → logprob: -6.856452941894531
    5. ',in' → logprob: -10.731452941894531
    6. ' ' → logprob: -10.981452941894531
    7. '	in' → logprob: -11.106452941894531
    8. ',n' → logprob: -11.981452941894531
    9. ',
' → logprob: -12.106452941894531
    10. '<|end|>' → logprob: -12.231452941894531

Token 2433: ' nodes' (ID: 15749)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.14560766518115997
    2. 'pts' → logprob: -2.8956077098846436
    3. 'layer' → logprob: -3.8956077098846436
    4. 'row' → logprob: -4.0206074714660645
    5. 'points' → logprob: -4.0206074714660645
    6. ' line' → logprob: -4.1456074714660645
    7. ' pts' → logprob: -5.5206074714660645
    8. 'nodes' → logprob: -6.0206074714660645
    9. 'level' → logprob: -7.5206074714660645
    10. ' points' → logprob: -7.6456074714660645

Token 2434: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6562735438346863
    2. ' in' → logprob: -1.031273603439331
    3. ',' → logprob: -2.156273603439331
    4. '[' → logprob: -6.156273365020752
    5. '[line' → logprob: -6.656273365020752
    6. ',line' → logprob: -7.031273365020752
    7. '_in' → logprob: -7.156273365020752
    8. '[in' → logprob: -7.281273365020752
    9. ' ,' → logprob: -7.781273365020752
    10. '[i' → logprob: -7.906273365020752

Token 2435: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.008618474006652832
    2. ' enumerate' → logprob: -4.758618354797363
    3. 'nodes' → logprob: -12.633618354797363
    4. 'range' → logprob: -14.883618354797363
    5. '
' → logprob: -16.25861930847168
    6. '```' → logprob: -16.88361930847168
    7. '   ' → logprob: -17.13361930847168
    8. 'en' → logprob: -17.13361930847168
    9. '.enumer' → logprob: -17.38361930847168
    10. ' ' → logprob: -17.63361930847168

Token 2436: '(nodes' (ID: 86139)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.0010141143575310707
    2. '(nodes' → logprob: -7.001014232635498
    3. ' nodes' → logprob: -9.25101375579834
    4. 'lines' → logprob: -12.50101375579834
    5. '   ' → logprob: -13.37601375579834
    6. '
' → logprob: -14.75101375579834
    7. '	nodes' → logprob: -15.50101375579834
    8. 'horizontal' → logprob: -15.62601375579834
    9. 'enumer' → logprob: -15.75101375579834
    10. '(lines' → logprob: -16.376014709472656

Token 2437: '_per' (ID: 10938)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.38229596614837646
    2. '):
' → logprob: -1.3822959661483765
    3. ':
' → logprob: -3.757296085357666
    4. ':' → logprob: -4.382296085357666
    5. '):' → logprob: -5.007296085357666
    6. '           ' → logprob: -5.257296085357666
    7. '       ' → logprob: -5.257296085357666
    8. '_per' → logprob: -5.757296085357666
    9. '(i' → logprob: -5.882296085357666
    10. 'i' → logprob: -6.257296085357666

Token 2438: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.08925275504589081
    2. '_line' → logprob: -2.4642527103424072
    3. 'lines' → logprob: -9.839252471923828
    4. '#line' → logprob: -10.339252471923828
    5. 'range' → logprob: -10.339252471923828
    6. '-line' → logprob: -10.339252471923828
    7. 'Line' → logprob: -10.589252471923828
    8. '[' → logprob: -11.089252471923828
    9. '_lines' → logprob: -11.089252471923828
    10. '[
' → logprob: -11.339252471923828

Token 2439: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2711547017097473
    2. ':' → logprob: -1.5211546421051025
    3. '):
' → logprob: -4.021154880523682
    4. '       ' → logprob: -6.896154880523682
    5. '():
' → logprob: -10.146154403686523
    6. '):' → logprob: -10.646154403686523
    7. '   ' → logprob: -11.021154403686523
    8. '           ' → logprob: -11.771154403686523
    9. ',' → logprob: -12.771154403686523
    10. ':
' → logprob: -13.396154403686523

Token 2440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025337696075439453
    2. '   ' → logprob: -3.7753376960754395
    3. ' for' → logprob: -6.7753376960754395
    4. '       ' → logprob: -7.0253376960754395
    5. 'for' → logprob: -10.525337219238281
    6. '	   ' → logprob: -11.025337219238281
    7. '	       ' → logprob: -11.900337219238281
    8. '```' → logprob: -12.775337219238281
    9. ' ' → logprob: -13.150337219238281
    10. '   ' → logprob: -14.400337219238281

Token 2441: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07907253503799438
    2. ' for' → logprob: -2.5790724754333496
    3. '           ' → logprob: -8.704072952270508
    4. '       ' → logprob: -11.454072952270508
    5. '   ' → logprob: -12.204072952270508
    6. '```' → logprob: -14.954072952270508
    7. '	for' → logprob: -15.329072952270508
    8. ' ' → logprob: -15.454072952270508
    9. 'j' → logprob: -15.829072952270508
    10. '
' → logprob: -16.079072952270508

Token 2442: ' j' (ID: 441)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.025030454620718956
    2. 'node' → logprob: -3.7750303745269775
    3. 'j' → logprob: -7.025030612945557
    4. 'pt' → logprob: -7.400030612945557
    5. 'point' → logprob: -8.650030136108398
    6. 'n' → logprob: -9.900030136108398
    7. ' p' → logprob: -10.275030136108398
    8. '   ' → logprob: -11.775030136108398
    9. ' node' → logprob: -12.025030136108398
    10. 'nd' → logprob: -12.275030136108398

Token 2443: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3438462018966675
    2. ',' → logprob: -1.7188462018966675
    3. 'in' → logprob: -2.218846321105957
    4. '           ' → logprob: -7.093846321105957
    5. ' ,' → logprob: -7.593846321105957
    6. '<|end|>' → logprob: -8.343846321105957
    7. '[' → logprob: -8.718846321105957
    8. ' ' → logprob: -9.218846321105957
    9. '               ' → logprob: -9.468846321105957
    10. ' +=' → logprob: -9.468846321105957

Token 2444: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2683762311935425
    2. 'node' → logprob: -1.5183762311935425
    3. 'point' → logprob: -4.768376350402832
    4. 'pt' → logprob: -5.018376350402832
    5. ' node' → logprob: -7.268376350402832
    6. ' p' → logprob: -7.643376350402832
    7. ' point' → logprob: -11.143376350402832
    8. ' pt' → logprob: -11.768376350402832
    9. 'n' → logprob: -12.518376350402832
    10. 'nod' → logprob: -15.018376350402832

Token 2445: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031936357263475657
    2. 'in' → logprob: -5.7531938552856445
    3. ' ' → logprob: -12.128193855285645
    4. '<|end|>' → logprob: -13.128193855285645
    5. '<|end|>' → logprob: -13.128193855285645
    6. '	in' → logprob: -14.003193855285645
    7. 'oints' → logprob: -14.378193855285645
    8. 'token' → logprob: -14.628193855285645
    9. 't' → logprob: -15.003193855285645
    10. '   ' → logprob: -15.128193855285645

Token 2446: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0019288709154352546
    2. ' enumerate' → logprob: -6.251928806304932
    3. ' ' → logprob: -16.251928329467773
    4. 'nodes' → logprob: -16.876928329467773
    5. '   ' → logprob: -16.876928329467773
    6. '
' → logprob: -18.251928329467773
    7. '  ' → logprob: -19.001928329467773
    8. '```' → logprob: -19.376928329467773
    9. '    ' → logprob: -19.501928329467773
    10. 'enum' → logprob: -19.626928329467773

Token 2447: '(nodes' (ID: 86139)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -6.504040356958285e-05
    2. ' nodes' → logprob: -10.125064849853516
    3. '(nodes' → logprob: -11.250064849853516
    4. '   ' → logprob: -11.500064849853516
    5. '	nodes' → logprob: -13.875064849853516
    6. '       ' → logprob: -15.375064849853516
    7. '               ' → logprob: -15.750064849853516
    8. '           ' → logprob: -15.750064849853516
    9. '
' → logprob: -16.000064849853516
    10. '.nodes' → logprob: -16.375064849853516

Token 2448: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05641826242208481
    2. '               ' → logprob: -3.9314181804656982
    3. '):' → logprob: -4.056418418884277
    4. ':
' → logprob: -4.806418418884277
    5. ':' → logprob: -4.931418418884277
    6. '           ' → logprob: -6.306418418884277
    7. ')' → logprob: -8.056418418884277
    8. '():
' → logprob: -9.681418418884277
    9. '                       ' → logprob: -9.931418418884277
    10. ',' → logprob: -10.056418418884277

Token 2449: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010628487507347018
    2. '           ' → logprob: -10.250105857849121
    3. '                   ' → logprob: -10.375105857849121
    4. '                
' → logprob: -11.250105857849121
    5. '<|end|>' → logprob: -12.125105857849121
    6. '                       ' → logprob: -12.375105857849121
    7. '
' → logprob: -13.125105857849121
    8. ' if' → logprob: -13.250105857849121
    9. '   ' → logprob: -13.375105857849121
    10. '	           ' → logprob: -13.500105857849121

Token 2450: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.1305336207151413
    2. '                   ' → logprob: -2.2555336952209473
    3. ' node' → logprob: -4.255533695220947
    4. '   ' → logprob: -5.880533695220947
    5. '               ' → logprob: -8.005533218383789
    6. 'if' → logprob: -9.630533218383789
    7. '	node' → logprob: -9.630533218383789
    8. 'id' → logprob: -10.255533218383789
    9. '           ' → logprob: -10.630533218383789
    10. '                       ' → logprob: -11.255533218383789

Token 2451: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.001306787133216858
    2. '_' → logprob: -7.126307010650635
    3. 'id' → logprob: -8.501306533813477
    4. ' _' → logprob: -10.126306533813477
    5. '[
' → logprob: -10.501306533813477
    6. '_
' → logprob: -10.626306533813477
    7. '_token' → logprob: -10.751306533813477
    8. '_counter' → logprob: -10.751306533813477
    9. '[' → logprob: -10.876306533813477
    10. 's' → logprob: -11.126306533813477

Token 2452: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00013095269969198853
    2. ' =' → logprob: -9.625130653381348
    3. '=' → logprob: -10.125130653381348
    4. '_counter' → logprob: -11.000130653381348
    5. 'map' → logprob: -13.250130653381348
    6. '
' → logprob: -13.875130653381348
    7. '_' → logprob: -14.250130653381348
    8. '=_' → logprob: -14.250130653381348
    9. 's' → logprob: -14.375130653381348
    10. '_maps' → logprob: -14.500130653381348

Token 2453: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00044401636114344
    2. '[i' → logprob: -7.750443935394287
    3. '[' → logprob: -12.125444412231445
    4. '(i' → logprob: -13.000444412231445
    5. '((' → logprob: -13.125444412231445
    6. '[
' → logprob: -13.750444412231445
    7. ' [(' → logprob: -14.125444412231445
    8. '[((' → logprob: -14.250444412231445
    9. '=' → logprob: -15.000444412231445
    10. '=(' → logprob: -15.500444412231445

Token 2454: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.988221684878226e-06
    2. ' i' → logprob: -12.000006675720215
    3. '(i' → logprob: -14.750006675720215
    4. '   ' → logprob: -15.500006675720215
    5. ')i' → logprob: -16.50000762939453
    6. '
' → logprob: -17.12500762939453
    7. '_i' → logprob: -17.25000762939453
    8. ')' → logprob: -17.75000762939453
    9. '{i' → logprob: -17.87500762939453
    10. ''i' → logprob: -18.00000762939453

Token 2455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007067112717777491
    2. ',j' → logprob: -5.0070672035217285
    3. ',
' → logprob: -8.63206672668457
    4. ' ,' → logprob: -9.13206672668457
    5. ',p' → logprob: -10.50706672668457
    6. ',n' → logprob: -11.75706672668457
    7. ',i' → logprob: -12.88206672668457
    8. '<|end|>' → logprob: -13.38206672668457
    9. ',y' → logprob: -13.50706672668457
    10. ',v' → logprob: -13.63206672668457

Token 2456: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.061054359131958e-06
    2. ' j' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.62500762939453
    4. '                   ' → logprob: -18.37500762939453
    5. '	j' → logprob: -18.75000762939453
    6. '           ' → logprob: -19.00000762939453
    7. '  ' → logprob: -19.25000762939453
    8. '$j' → logprob: -19.37500762939453
    9. '          ' → logprob: -19.62500762939453
    10. '    ' → logprob: -19.62500762939453

Token 2457: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009322979487478733
    2. ']' → logprob: -4.8843231201171875
    3. ')' → logprob: -6.3843231201171875
    4. ' )' → logprob: -10.884323120117188
    5. '           ' → logprob: -13.259323120117188
    6. ']=' → logprob: -13.384323120117188
    7. ' ]' → logprob: -13.509323120117188
    8. '])' → logprob: -13.509323120117188
    9. '   ' → logprob: -13.759323120117188
    10. '       ' → logprob: -14.509323120117188

Token 2458: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007100477814674377
    2. ' =' → logprob: -7.2507100105285645
    3. '=
' → logprob: -17.875709533691406
    4. ')=' → logprob: -18.250709533691406
    5. ')' → logprob: -19.250709533691406
    6. '=id' → logprob: -19.625709533691406
    7. '=}' → logprob: -20.000709533691406
    8. '=i' → logprob: -20.375709533691406
    9. ']=' → logprob: -20.375709533691406
    10. '=

' → logprob: -20.500709533691406

Token 2459: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.0206720617134124e-05
    2. ' id' → logprob: -11.50001049041748
    3. '0' → logprob: -22.375009536743164
    4. '                   ' → logprob: -22.750009536743164
    5. '	id' → logprob: -23.000009536743164
    6. 'idf' → logprob: -23.000009536743164
    7. '               ' → logprob: -23.625009536743164
    8. 'idd' → logprob: -23.750009536743164
    9. '   ' → logprob: -23.875009536743164
    10. '2' → logprob: -23.875009536743164

Token 2460: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -7.100059156073257e-05
    2. '_COUNTER' → logprob: -10.750070571899414
    3. 'Counter' → logprob: -11.125070571899414
    4. 'counter' → logprob: -11.750070571899414
    5. 'ounter' → logprob: -11.875070571899414
    6. '       ' → logprob: -12.250070571899414
    7. '+' → logprob: -13.000070571899414
    8. '_count' → logprob: -13.250070571899414
    9. 'n' → logprob: -13.625070571899414
    10. '           ' → logprob: -13.750070571899414

Token 2461: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00807843916118145
    2. '
' → logprob: -4.883078575134277
    3. '<|end|>' → logprob: -8.758078575134277
    4. ',' → logprob: -9.508078575134277
    5. '<|end|>' → logprob: -9.508078575134277
    6. '                
' → logprob: -10.383078575134277
    7. '                   ' → logprob: -10.508078575134277
    8. '           ' → logprob: -10.758078575134277
    9. '
' → logprob: -11.258078575134277
    10. '#' → logprob: -11.508078575134277

Token 2462: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.195421494543552e-05
    2. '                   ' → logprob: -10.25007152557373
    3. '           ' → logprob: -11.25007152557373
    4. '
' → logprob: -11.50007152557373
    5. '<|end|>' → logprob: -12.50007152557373
    6. '                       ' → logprob: -13.12507152557373
    7. '<|end|>' → logprob: -13.12507152557373
    8. '              ' → logprob: -13.25007152557373
    9. '```' → logprob: -14.37507152557373
    10. '                ' → logprob: -14.62507152557373

Token 2463: ' id' (ID: 1211)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.046055085957050323
    2. 'id' (adapté à ' id') → logprob: -3.1710550785064697
    3. '                   ' → logprob: -6.421055316925049
    4. ' id' → logprob: -7.421055316925049
    5. '           ' → logprob: -7.796055316925049
    6. '<|end|>' → logprob: -9.29605484008789
    7. '                ' → logprob: -9.79605484008789
    8. '              ' → logprob: -10.17105484008789
    9. '```' → logprob: -10.42105484008789
    10. '<|end|>' → logprob: -10.54605484008789

Token 2464: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -1.1472419600977446e-06
    2. 'counter' → logprob: -14.250000953674316
    3. 'Counter' → logprob: -14.875000953674316
    4. '_c' → logprob: -16.250001907348633
    5. '_COUNTER' → logprob: -16.750001907348633
    6. 'ounter' → logprob: -17.750001907348633
    7. '_count' → logprob: -17.875001907348633
    8. '_token' → logprob: -18.000001907348633
    9. '	counter' → logprob: -19.000001907348633
    10. '_' → logprob: -19.625001907348633

Token 2465: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.062000855803489685
    2. ' +=' → logprob: -2.8120007514953613
    3. '+' → logprob: -10.56200122833252
    4. '=' → logprob: -12.56200122833252
    5. ']+=' → logprob: -13.56200122833252
    6. '+='' → logprob: -14.06200122833252
    7. '<|end|>' → logprob: -14.43700122833252
    8. '+="' → logprob: -14.68700122833252
    9. '+=(' → logprob: -15.68700122833252
    10. '++' → logprob: -16.312000274658203

Token 2466: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -18.875
    4. '2' → logprob: -19.125
    5. '           ' → logprob: -21.5
    6. '```' → logprob: -22.25
    7. '１' → logprob: -22.375
    8. '
' → logprob: -22.5
    9. '  ' → logprob: -22.75
    10. '0' → logprob: -23.0

Token 2467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '2' → logprob: -16.875
    4. 'len' → logprob: -17.75
    5. '   ' → logprob: -19.25
    6. '
' → logprob: -20.25
    7. '```' → logprob: -21.25
    8. '１' → logprob: -21.5625
    9. '۱' → logprob: -22.0
    10. '  ' → logprob: -22.125

Token 2468: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15077754855155945
    2. 'n' → logprob: -2.775777578353882
    3. 'edges' → logprob: -3.525777578353882
    4. '```' → logprob: -4.150777339935303
    5. 'flow' → logprob: -5.150777339935303
    6. 'network' → logprob: -5.150777339935303
    7. '        
' → logprob: -5.525777339935303
    8. ' edges' → logprob: -5.900777339935303
    9. '
' → logprob: -6.025777339935303
    10. 'graph' → logprob: -6.150777339935303

Token 2470: ' #' (ID: 1069)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.7634697556495667
    2. 'graph' → logprob: -1.1384696960449219
    3. 'fn' → logprob: -2.763469696044922
    4. 'g' → logprob: -3.013469696044922
    5. 'n' → logprob: -3.388469696044922
    6. 'G' → logprob: -3.513469696044922
    7. 'network' → logprob: -4.388469696044922
    8. 'num' → logprob: -4.513469696044922
    9. 'capacity' → logprob: -5.263469696044922
    10. 'size' → logprob: -6.388469696044922

Token 2471: ' Create' (ID: 6585)
  Prédit: 'fn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fn' → logprob: -0.7686542868614197
    2. 'flow' → logprob: -1.0186543464660645
    3. 'graph' → logprob: -2.8936543464660645
    4. 'g' → logprob: -3.2686543464660645
    5. 'network' → logprob: -3.3936543464660645
    6. 'n' → logprob: -4.1436543464660645
    7. 'G' → logprob: -4.2686543464660645
    8. 'num' → logprob: -5.0186543464660645
    9. 'net' → logprob: -5.1436543464660645
    10. 'capacity' → logprob: -7.0186543464660645

Token 2472: ' flow' (ID: 7845)
  Prédit: 'fn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fn' → logprob: -0.30101433396339417
    2. 'flow' → logprob: -1.8010143041610718
    3. 'graph' → logprob: -3.4260144233703613
    4. 'n' → logprob: -3.6760144233703613
    5. 'network' → logprob: -3.6760144233703613
    6. 'num' → logprob: -5.676014423370361
    7. 'g' → logprob: -6.051014423370361
    8. 'net' → logprob: -6.551014423370361
    9. 'G' → logprob: -6.676014423370361
    10. 'size' → logprob: -6.801014423370361

Token 2473: ' network' (ID: 5402)
  Prédit: '_network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_network' → logprob: -0.32814982533454895
    2. 'network' → logprob: -1.3281497955322266
    3. '_net' → logprob: -4.703149795532227
    4. 'net' → logprob: -5.328149795532227
    5. '_n' → logprob: -8.453149795532227
    6. '
' → logprob: -8.828149795532227
    7. 'n' → logprob: -9.203149795532227
    8. 'graph' → logprob: -9.328149795532227
    9. '_' → logprob: -9.828149795532227
    10. ' network' → logprob: -9.953149795532227

Token 2474: ' with' (ID: 483)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05867178738117218
    2. '
' → logprob: -4.058671951293945
    3. '       ' → logprob: -4.183671951293945
    4. ' n' → logprob: -4.683671951293945
    5. 'network' → logprob: -4.933671951293945
    6. 'flow' → logprob: -5.683671951293945
    7. 'net' → logprob: -6.308671951293945
    8. 'fn' → logprob: -6.683671951293945
    9. 'graph' → logprob: -7.308671951293945
    10. '```' → logprob: -8.558671951293945

Token 2475: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005746760405600071
    2. 'id' → logprob: -5.380746841430664
    3. 'node' → logprob: -6.880746841430664
    4. 'num' → logprob: -10.505746841430664
    5. 'size' → logprob: -10.630746841430664
    6. 'graph' → logprob: -11.130746841430664
    7. 'len' → logprob: -11.130746841430664
    8. 'n' → logprob: -12.505746841430664
    9. 'capacity' → logprob: -12.755746841430664
    10. 'vertex' → logprob: -12.880746841430664

Token 2476: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012561332434415817
    2. 'id' → logprob: -4.387561321258545
    3. 'node' → logprob: -10.137561798095703
    4. 'len' → logprob: -12.137561798095703
    5. '(' → logprob: -12.887561798095703
    6. '0' → logprob: -13.512561798095703
    7. ' id' → logprob: -14.512561798095703
    8. ' ' → logprob: -14.637561798095703
    9. '(id' → logprob: -14.762561798095703
    10. 'size' → logprob: -15.512561798095703

Token 2477: ' vertices' (ID: 38360)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.048590775579214096
    2. ' *' → logprob: -3.048590660095215
    3. '*(' → logprob: -13.673590660095215
    4. '*object' → logprob: -13.673590660095215
    5. '*num' → logprob: -13.923590660095215
    6. '```' → logprob: -16.79859161376953
    7. '**' → logprob: -17.04859161376953
    8. '
' → logprob: -17.04859161376953
    9. ' ' → logprob: -17.54859161376953
    10. '*out' → logprob: -17.54859161376953

Token 2478: ' per' (ID: 777)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13773134350776672
    2. 'for' → logprob: -2.5127313137054443
    3. ' *' → logprob: -4.137731552124023
    4. ',' → logprob: -4.512731552124023
    5. '[id' → logprob: -4.512731552124023
    6. '(id' → logprob: -5.762731552124023
    7. 'id' → logprob: -6.012731552124023
    8. ' for' → logprob: -6.262731552124023
    9. '=' → logprob: -7.637731552124023
    10. ' id' → logprob: -8.137731552124023

Token 2479: ' node' (ID: 4596)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.003631550120189786
    2. 'node' → logprob: -5.628631591796875
    3. ' id' → logprob: -10.628631591796875
    4. '(id' → logprob: -12.628631591796875
    5. '
' → logprob: -12.753631591796875
    6. ' node' → logprob: -14.628631591796875
    7. '```' → logprob: -16.253631591796875
    8. '
' → logprob: -16.878631591796875
    9. '[id' → logprob: -17.003631591796875
    10. '=id' → logprob: -17.003631591796875

Token 2480: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1384807974100113
    2. '       ' → logprob: -3.2634809017181396
    3. 'graph' → logprob: -3.7634809017181396
    4. 'network' → logprob: -3.7634809017181396
    5. ',' → logprob: -4.6384806632995605
    6. 'net' → logprob: -4.8884806632995605
    7. 'g' → logprob: -5.2634806632995605
    8. 'flow' → logprob: -5.3884806632995605
    9. '
' → logprob: -5.6384806632995605
    10. '```' → logprob: -5.7634806632995605

Token 2481: ' splitting' (ID: 87130)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.01676822453737259
    2. 'node' → logprob: -4.516768455505371
    3. '2' → logprob: -5.766768455505371
    4. 'each' → logprob: -7.391768455505371
    5. 'capacity' → logprob: -7.766768455505371
    6. '(id' → logprob: -7.891768455505371
    7. '_id' → logprob: -8.141768455505371
    8. ' id' → logprob: -8.391768455505371
    9. '(' → logprob: -8.641768455505371
    10. '0' → logprob: -9.766768455505371

Token 2482: ' capacity' (ID: 12241)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3019060790538788
    2. '       ' → logprob: -2.051906108856201
    3. 'fn' → logprob: -2.301906108856201
    4. 'graph' → logprob: -4.676906108856201
    5. 'flow' → logprob: -4.801906108856201
    6. 'network' → logprob: -5.551906108856201
    7. 'num' → logprob: -6.051906108856201
    8. 'size' → logprob: -6.301906108856201
    9. 'net' → logprob: -6.426906108856201
    10. 'N' → logprob: -6.676906108856201

Token 2483: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05221175774931908
    2. '       ' → logprob: -4.052211761474609
    3. 'flow' → logprob: -4.552211761474609
    4. 'graph' → logprob: -4.927211761474609
    5. 'network' → logprob: -5.052211761474609
    6. 'N' → logprob: -6.177211761474609
    7. 'num' → logprob: -6.427211761474609
    8. 'fn' → logprob: -6.552211761474609
    9. 'size' → logprob: -6.677211761474609
    10. 'net' → logprob: -7.177211761474609

Token 2484: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023388151079416275
    2. '       ' → logprob: -4.023388385772705
    3. 'network' → logprob: -6.648388385772705
    4. 'graph' → logprob: -7.023388385772705
    5. 'num' → logprob: -7.398388385772705
    6. 'flow' → logprob: -7.398388385772705
    7. 'N' → logprob: -7.523388385772705
    8. 'size' → logprob: -7.773388385772705
    9. 'net' → logprob: -8.398387908935547
    10. 'g' → logprob: -8.523387908935547

Token 2485: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6750171184539795
    2. 'N' → logprob: -1.4250171184539795
    3. 'fn' → logprob: -1.6750171184539795
    4. 'G' → logprob: -3.9250171184539795
    5. 'flow' → logprob: -4.050017356872559
    6. 'graph' → logprob: -4.175017356872559
    7. 'g' → logprob: -5.925017356872559
    8. 'network' → logprob: -6.300017356872559
    9. 'num' → logprob: -6.550017356872559
    10. 'FN' → logprob: -6.550017356872559

Token 2486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4005904495716095
    2. '=' → logprob: -1.775590419769287
    3. '*' → logprob: -1.900590419769287
    4. ' *' → logprob: -4.650590419769287
    5. '
' → logprob: -8.150590896606445
    6. ' ' → logprob: -8.775590896606445
    7. ' =
' → logprob: -8.900590896606445
    8. '   ' → logprob: -9.025590896606445
    9. '=
' → logprob: -9.150590896606445
    10. '_tokens' → logprob: -9.275590896606445

Token 2487: ' id' (ID: 1211)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029810426756739616
    2. 'id' → logprob: -3.7798104286193848
    3. 'len' → logprob: -5.029810428619385
    4. ' ' → logprob: -13.529809951782227
    5. ' id' → logprob: -14.529809951782227
    6. ' len' → logprob: -14.654809951782227
    7. '   ' → logprob: -15.154809951782227
    8. '(' → logprob: -15.904809951782227
    9. '```' → logprob: -16.279809951782227
    10. '
' → logprob: -16.654809951782227

Token 2488: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -1.4974866644479334e-05
    2. 'counter' → logprob: -11.125015258789062
    3. '_c' → logprob: -15.875015258789062
    4. 'Counter' → logprob: -17.000015258789062
    5. '	counter' → logprob: -17.625015258789062
    6. '_count' → logprob: -17.875015258789062
    7. '_COUNTER' → logprob: -18.125015258789062
    8. ' counter' → logprob: -19.000015258789062
    9. '_' → logprob: -19.625015258789062
    10. 'ounter' → logprob: -19.750015258789062

Token 2489: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.023287402465939522
    2. ' *' → logprob: -3.773287296295166
    3. ')' → logprob: -11.023287773132324
    4. '
' → logprob: -11.273287773132324
    5. '<<' → logprob: -12.898287773132324
    6. '2' → logprob: -13.023287773132324
    7. '**' → logprob: -13.648287773132324
    8. '```' → logprob: -13.648287773132324
    9. ',' → logprob: -13.898287773132324
    10. '<|end|>' → logprob: -14.023287773132324

Token 2490: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8325677703833207e-05
    2. ' ' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.000028610229492
    4. '=' → logprob: -16.250028610229492
    5. '```' → logprob: -16.250028610229492
    6. '
' → logprob: -16.875028610229492
    7. '           ' → logprob: -17.625028610229492
    8. '  ' → logprob: -17.750028610229492
    9. '۲' → logprob: -18.125028610229492
    10. '                           ' → logprob: -18.750028610229492

Token 2491: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '
' → logprob: -17.000001907348633
    4. '```' → logprob: -17.625001907348633
    5. '=' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.750001907348633
    7. '۲' → logprob: -19.125001907348633
    8. '`' → logprob: -20.125001907348633
    9. '``' → logprob: -20.125001907348633
    10. '٢' → logprob: -20.687501907348633

Token 2492: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.111923947930336
    2. '       ' → logprob: -3.236923933029175
    3. '+' → logprob: -3.736923933029175
    4. 'network' → logprob: -3.986923933029175
    5. ')' → logprob: -4.611924171447754
    6. ')
' → logprob: -5.611924171447754
    7. ' +' → logprob: -5.611924171447754
    8. 'flow' → logprob: -6.236924171447754
    9. '        
' → logprob: -6.486924171447754
    10. 'n' → logprob: -6.736924171447754

Token 2493: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -18.0
    4. '   ' → logprob: -18.875
    5. '
' → logprob: -19.375
    6. '4' → logprob: -19.375
    7. '۲' → logprob: -20.0
    8. '２' → logprob: -20.75
    9. '=' → logprob: -20.875
    10. 's' → logprob: -21.25

Token 2494: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '4' → logprob: -18.375
    4. '   ' → logprob: -18.75
    5. '```' → logprob: -18.75
    6. '۲' → logprob: -20.375
    7. '=' → logprob: -20.625
    8. '２' → logprob: -20.75
    9. '``' → logprob: -21.4375
    10. '10' → logprob: -21.625

Token 2495: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009373882785439491
    2. ' 
' → logprob: -4.884373664855957
    3. '  
' → logprob: -7.384373664855957
    4. '
' → logprob: -7.634373664855957
    5. '<|end|>' → logprob: -8.634373664855957
    6. '	
' → logprob: -8.759373664855957
    7. '		
' → logprob: -8.759373664855957
    8. '        
' → logprob: -10.009373664855957
    9. ',
' → logprob: -10.634373664855957
    10. ',' → logprob: -10.634373664855957

Token 2496: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.037789564579725266
    2. ' 
' → logprob: -4.162789344787598
    3. '       ' → logprob: -4.537789344787598
    4. '        
' → logprob: -6.037789344787598
    5. '    
' → logprob: -6.412789344787598
    6. '\n' → logprob: -6.537789344787598
    7. ',
' → logprob: -6.537789344787598
    8. '  
' → logprob: -6.787789344787598
    9. ',' → logprob: -7.662789344787598
    10. 's' → logprob: -7.662789344787598

Token 2497: ' network' (ID: 5402)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.3995516300201416
    2. 'fn' → logprob: -1.8995516300201416
    3. 'graph' → logprob: -2.8995516300201416
    4. 'network' (adapté à ' network') → logprob: -2.8995516300201416
    5. 'source' → logprob: -3.2745516300201416
    6. 'self' → logprob: -4.8995513916015625
    7. 'G' → logprob: -5.0245513916015625
    8. 'net' → logprob: -5.1495513916015625
    9. 's' → logprob: -5.3995513916015625
    10. 'g' → logprob: -6.3995513916015625

Token 2498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029919644817709923
    2. '=' → logprob: -3.5299196243286133
    3. ' =
' → logprob: -8.779919624328613
    4. ')' → logprob: -12.279919624328613
    5. '.' → logprob: -12.779919624328613
    6. '=
' → logprob: -12.904919624328613
    7. ' ' → logprob: -13.904919624328613
    8. '_' → logprob: -14.279919624328613
    9. '   ' → logprob: -14.404919624328613
    10. '	' → logprob: -14.404919624328613

Token 2499: ' Flow' (ID: 33537)
  Prédit: 'Flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flow' → logprob: -0.029750484973192215
    2. ' Flow' → logprob: -3.5297505855560303
    3. '       ' → logprob: -17.90475082397461
    4. ' flow' → logprob: -19.27975082397461
    5. '   ' → logprob: -19.65475082397461
    6. '.Flow' → logprob: -19.65475082397461
    7. '        ' → logprob: -19.90475082397461
    8. '    ' → logprob: -20.02975082397461
    9. 'Flux' → logprob: -20.52975082397461
    10. '
' → logprob: -20.52975082397461

Token 2500: 'Network' (ID: 14022)
  Prédit: 'Network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Network' → logprob: 0.0
    2. 'network' → logprob: -17.0
    3. '(Network' → logprob: -17.0
    4. '
' → logprob: -18.75
    5. '[' → logprob: -19.0
    6. '_network' → logprob: -19.375
    7. 'NETWORK' → logprob: -19.375
    8. ' Network' → logprob: -19.625
    9. 'Networking' → logprob: -20.125
    10. '(' → logprob: -20.125

Token 2501: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0018439209088683128
    2. '(' → logprob: -7.1268439292907715
    3. 'n' → logprob: -7.1268439292907715
    4. '(
' → logprob: -8.376843452453613
    5. ' (' → logprob: -12.876843452453613
    6. '```' → logprob: -13.501843452453613
    7. ' n' → logprob: -14.001843452453613
    8. '((' → logprob: -15.376843452453613
    9. '\(' → logprob: -16.00184440612793
    10. '
' → logprob: -16.75184440612793

Token 2502: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0032711182720959187
    2. ')' → logprob: -5.753271102905273
    3. ')
' → logprob: -9.503271102905273
    4. '       ' → logprob: -11.003271102905273
    5. ')

' → logprob: -13.128271102905273
    6. ' )
' → logprob: -16.253271102905273
    7. '   ' → logprob: -16.753271102905273
    8. '
' → logprob: -17.503271102905273
    9. ')

' → logprob: -18.753271102905273
    10. '	' → logprob: -19.003271102905273

Token 2503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7277736663818359
    2. 'source' → logprob: -0.9777736663818359
    3. 's' → logprob: -2.102773666381836
    4. 'src' → logprob: -4.102773666381836
    5. ' source' → logprob: -6.852773666381836
    6. '_source' → logprob: -7.852773666381836
    7. 'start' → logprob: -8.227773666381836
    8. '
' → logprob: -9.227773666381836
    9. '        
' → logprob: -9.602773666381836
    10. ' s' → logprob: -9.602773666381836

Token 2504: ' SRC' (ID: 112818)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.04308917000889778
    2. 's' → logprob: -3.5430891513824463
    3. 'S' → logprob: -5.168089389801025
    4. '       ' → logprob: -5.543089389801025
    5. 'src' → logprob: -5.793089389801025
    6. 'SOURCE' → logprob: -8.043088912963867
    7. 'for' → logprob: -9.543088912963867
    8. '        
' → logprob: -9.668088912963867
    9. '#' → logprob: -9.793088912963867
    10. '   ' → logprob: -10.418088912963867

Token 2505: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028004001826047897
    2. '=' → logprob: -3.6530039310455322
    3. ',' → logprob: -6.528004169464111
    4. ' =
' → logprob: -8.903003692626953
    5. '_' → logprob: -9.653003692626953
    6. ')' → logprob: -11.778003692626953
    7. '	' → logprob: -11.778003692626953
    8. '   ' → logprob: -12.278003692626953
    9. ' ' → logprob: -12.528003692626953
    10. ' ,' → logprob: -13.028003692626953

Token 2506: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004605049267411232
    2. 'id' → logprob: -5.879604816436768
    3. '0' → logprob: -6.379604816436768
    4. '2' → logprob: -9.629605293273926
    5. ' n' → logprob: -10.629605293273926
    6. ' id' → logprob: -11.879605293273926
    7. '   ' → logprob: -13.754605293273926
    8. 'node' → logprob: -14.004605293273926
    9. '_n' → logprob: -14.504605293273926
    10. '(n' → logprob: -14.629605293273926

Token 2507: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015024791937321424
    2. ' -' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.876502990722656
    4. ' ' → logprob: -17.251502990722656
    5. '=' → logprob: -18.126502990722656
    6. '1' → logprob: -18.376502990722656
    7. '()-' → logprob: -18.501502990722656
    8. '–' → logprob: -18.501502990722656
    9. '−' → logprob: -18.751502990722656
    10. '_' → logprob: -19.001502990722656

Token 2508: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. '   ' → logprob: -18.0
    4. '
' → logprob: -19.0
    5. ' ' → logprob: -19.75
    6. '``' → logprob: -20.375
    7. '' → logprob: -21.375
    8. '=' → logprob: -21.75
    9. '۲' → logprob: -21.875
    10. '\
' → logprob: -22.375

Token 2509: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.625000953674316
    3. '
' → logprob: -16.375
    4. '``' → logprob: -18.0
    5. '   ' → logprob: -18.375
    6. '=' → logprob: -19.625
    7. '\' → logprob: -19.875
    8. '1' → logprob: -19.875
    9. '{' → logprob: -20.375
    10. '\
' → logprob: -20.5

Token 2510: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01803392358124256
    2. '<|end|>' → logprob: -4.268033981323242
    3. '  
' → logprob: -6.393033981323242
    4. ' 
' → logprob: -7.018033981323242
    5. '
' → logprob: -8.518033981323242
    6. '    
' → logprob: -8.768033981323242
    7. ')' → logprob: -8.768033981323242
    8. '       ' → logprob: -9.018033981323242
    9. '<|end|>' → logprob: -9.393033981323242
    10. '' → logprob: -9.643033981323242

Token 2511: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007086999248713255
    2. 'T' → logprob: -5.882087230682373
    3. ' 
' → logprob: -6.507087230682373
    4. 'TR' → logprob: -7.132087230682373
    5. '  
' → logprob: -7.382087230682373
    6. '       ' → logprob: -8.132086753845215
    7. '        
' → logprob: -8.382086753845215
    8. ')
' → logprob: -9.507086753845215
    9. 'S' → logprob: -9.632086753845215
    10. 'SRC' → logprob: -9.757086753845215

Token 2512: ' SN' (ID: 41504)
  Prédit: 'SN'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SN' (adapté à ' SN') → logprob: -0.01816176250576973
    2. 'S' → logprob: -4.018161773681641
    3. 'SK' → logprob: -11.51816177368164
    4. 'DST' → logprob: -13.26816177368164
    5. ' SN' → logprob: -16.01816177368164
    6. 'T' → logprob: -17.01816177368164
    7. 'ST' → logprob: -18.14316177368164
    8. 'SRC' → logprob: -18.14316177368164
    9. 'DEST' → logprob: -18.14316177368164
    10. 'Sink' → logprob: -18.26816177368164

Token 2513: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.320199877838604e-07
    2. 'INK' → logprob: -15.75
    3. ' K' → logprob: -17.0
    4. '
' → logprob: -17.0
    5. 'NK' → logprob: -17.0
    6. '"K' → logprob: -17.5
    7. 'k' → logprob: -18.25
    8. '	K' → logprob: -19.0
    9. '``' → logprob: -19.375
    10. '```' → logprob: -19.5

Token 2514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132849931716919
    2. ' =' → logprob: -1.313284993171692
    3. '_' → logprob: -11.313284873962402
    4. ' ' → logprob: -12.938284873962402
    5. '=
' → logprob: -12.938284873962402
    6. ' =
' → logprob: -13.188284873962402
    7. ',' → logprob: -13.688284873962402
    8. ')' → logprob: -13.688284873962402
    9. '	' → logprob: -14.438284873962402
    10. '_=' → logprob: -14.563284873962402

Token 2515: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.451116051815916e-05
    2. ' n' → logprob: -10.625024795532227
    3. '	n' → logprob: -16.875024795532227
    4. '   ' → logprob: -17.375024795532227
    5. '       ' → logprob: -18.125024795532227
    6. '_n' → logprob: -18.500024795532227
    7. '1' → logprob: -19.500024795532227
    8. '           ' → logprob: -19.625024795532227
    9. 'SRC' → logprob: -20.125024795532227
    10. '     ' → logprob: -20.500024795532227

Token 2516: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017029138980433345
    2. ' -' → logprob: -6.376702785491943
    3. '1' → logprob: -15.126703262329102
    4. '-
' → logprob: -16.1267032623291
    5. '   ' → logprob: -16.6267032623291
    6. ' ' → logprob: -17.1267032623291
    7. '<|end|>' → logprob: -17.1267032623291
    8. '
' → logprob: -17.5017032623291
    9. '       ' → logprob: -17.6267032623291
    10. '=' → logprob: -17.6267032623291

Token 2517: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. '   ' → logprob: -21.0
    4. '１' → logprob: -21.125
    5. '```' → logprob: -22.0
    6. '۱' → logprob: -22.125
    7. '
' → logprob: -24.25
    8. '१' → logprob: -24.25
    9. '১' → logprob: -24.375
    10. '       ' → logprob: -24.75

Token 2518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -21.0
    3. '۱' → logprob: -21.625
    4. '   ' → logprob: -22.75
    5. ' ' → logprob: -23.125
    6. '```' → logprob: -23.375
    7. '१' → logprob: -23.875
    8. '১' → logprob: -24.0
    9. '
' → logprob: -24.875
    10. '١' → logprob: -26.25

Token 2519: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4802304208278656
    2. '       ' → logprob: -0.980230450630188
    3. '        
' → logprob: -5.605230331420898
    4. 'for' → logprob: -7.355230331420898
    5. '<|end|>' → logprob: -7.605230331420898
    6. '#' → logprob: -7.730230331420898
    7. ' for' → logprob: -7.730230331420898
    8. '		
' → logprob: -9.605230331420898
    9. '   ' → logprob: -9.855230331420898
    10. '    
' → logprob: -9.855230331420898

Token 2520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014511867193505168
    2. '#' → logprob: -7.126451015472412
    3. 'for' → logprob: -7.501451015472412
    4. '
' → logprob: -9.37645149230957
    5. '```' → logprob: -12.12645149230957
    6. '        
' → logprob: -13.12645149230957
    7. ' for' → logprob: -13.75145149230957
    8. '   ' → logprob: -13.87645149230957
    9. ' #' → logprob: -17.25145149230957
    10. '           ' → logprob: -17.75145149230957

Token 2521: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023671792820096016
    2. '#' (adapté à ' #') → logprob: -3.773671865463257
    3. '       ' → logprob: -7.773671627044678
    4. 'prev' → logprob: -12.898672103881836
    5. 'def' → logprob: -14.023672103881836
    6. ' for' → logprob: -14.148672103881836
    7. '   ' → logprob: -14.648672103881836
    8. '```' → logprob: -15.523672103881836
    9. 'offset' → logprob: -15.898672103881836
    10. 'length' → logprob: -16.023672103881836

Token 2522: ' Add' (ID: 4063)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018848352134227753
    2. '#' → logprob: -4.018848419189453
    3. '       ' → logprob: -7.268848419189453
    4. 'prev' → logprob: -14.393848419189453
    5. ' for' → logprob: -15.018848419189453
    6. '   ' → logprob: -15.393848419189453
    7. '```' → logprob: -15.768848419189453
    8. '           ' → logprob: -17.268848419189453
    9. '``' → logprob: -17.768848419189453
    10. '
' → logprob: -18.268848419189453

Token 2523: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004937243182212114
    2. '       ' → logprob: -5.504937171936035
    3. '#' → logprob: -7.504937171936035
    4. ' for' → logprob: -8.129937171936035
    5. '   ' → logprob: -11.754937171936035
    6. '
' → logprob: -13.004937171936035
    7. 'edges' → logprob: -13.379937171936035
    8. '           ' → logprob: -13.879937171936035
    9. 'vertical' → logprob: -14.879937171936035
    10. ' #' → logprob: -16.12993812561035

Token 2524: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00670660100877285
    2. 'for' → logprob: -5.131706714630127
    3. ' for' → logprob: -7.506706714630127
    4. 'from' → logprob: -9.131706237792969
    5. '   ' → logprob: -9.881706237792969
    6. '#' → logprob: -10.631706237792969
    7. '
' → logprob: -10.756706237792969
    8. '           ' → logprob: -11.756706237792969
    9. 'import' → logprob: -12.256706237792969
    10. ' from' → logprob: -13.256706237792969

Token 2525: ' splitting' (ID: 87130)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0037289413157850504
    2. 'line' → logprob: -6.128728866577148
    3. '(i' → logprob: -6.878728866577148
    4. ' i' → logprob: -7.753728866577148
    5. '(' → logprob: -10.878728866577148
    6. '   ' → logprob: -11.378728866577148
    7. 'each' → logprob: -11.378728866577148
    8. ' (' → logprob: -11.628728866577148
    9. '
' → logprob: -11.753728866577148
    10. ' line' → logprob: -12.128728866577148

Token 2526: ' nodes' (ID: 15749)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10240419209003448
    2. ' for' → logprob: -2.4774041175842285
    3. '       ' → logprob: -4.6024041175842285
    4. '   ' → logprob: -6.8524041175842285
    5. 'node' → logprob: -6.9774041175842285
    6. '           ' → logprob: -8.602404594421387
    7. 'each' → logprob: -8.727404594421387
    8. 'nodes' → logprob: -8.727404594421387
    9. '
' → logprob: -9.102404594421387
    10. '(' → logprob: -9.102404594421387

Token 2527: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.341614693403244
    2. 'for' → logprob: -1.5916147232055664
    3. ' for' → logprob: -2.4666147232055664
    4. '
' → logprob: -7.966614723205566
    5. '   ' → logprob: -8.466614723205566
    6. '	for' → logprob: -8.966614723205566
    7. '        
' → logprob: -9.466614723205566
    8. '           ' → logprob: -10.091614723205566
    9. ',' → logprob: -10.966614723205566
    10. '	' → logprob: -11.341614723205566

Token 2528: 'in' (ID: 258)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5322369933128357
    2. 'for' → logprob: -1.1572370529174805
    3. ')' → logprob: -3.6572370529174805
    4. 'i' → logprob: -3.7822370529174805
    5. ' (' → logprob: -4.1572370529174805
    6. ' for' → logprob: -4.2822370529174805
    7. '       ' → logprob: -5.9072370529174805
    8. 'in' → logprob: -6.0322370529174805
    9. '(' → logprob: -6.1572370529174805
    10. 'node' → logprob: -6.4072370529174805

Token 2529: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09474016726016998
    2. '_,' → logprob: -2.719740152359009
    3. '_node' → logprob: -5.219740390777588
    4. ' ,' → logprob: -5.719740390777588
    5. 'node' → logprob: -5.844740390777588
    6. '_id' → logprob: -6.094740390777588
    7. '       ' → logprob: -6.219740390777588
    8. '_nodes' → logprob: -6.344740390777588
    9. '   ' → logprob: -6.719740390777588
    10. ',node' → logprob: -6.969740390777588

Token 2530: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0002501343551557511
    2. 'node' → logprob: -9.125249862670898
    3. 'o' → logprob: -9.750249862670898
    4. '_out' → logprob: -10.250249862670898
    5. ')' → logprob: -11.000249862670898
    6. ' out' → logprob: -11.750249862670898
    7. 't' → logprob: -12.375249862670898
    8. 'ou' → logprob: -12.875249862670898
    9. 'id' → logprob: -13.000249862670898
    10. '
' → logprob: -13.000249862670898

Token 2531: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.310336709022522
    2. ',' → logprob: -2.0603365898132324
    3. ')
' → logprob: -2.1853365898132324
    4. ' edges' → logprob: -4.060336589813232
    5. 'edges' → logprob: -5.435336589813232
    6. '   ' → logprob: -6.810336589813232
    7. 'edge' → logprob: -7.310336589813232
    8. ' edge' → logprob: -7.310336589813232
    9. '       ' → logprob: -7.435336589813232
    10. '           ' → logprob: -8.31033706665039

Token 2532: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016342736780643463
    2. 'for' → logprob: -4.266342639923096
    3. ' for' → logprob: -6.141342639923096
    4. ')' → logprob: -11.891343116760254
    5. '   ' → logprob: -12.016343116760254
    6. '<|end|>' → logprob: -12.266343116760254
    7. '```' → logprob: -13.141343116760254
    8. ',' → logprob: -13.516343116760254
    9. '           ' → logprob: -13.766343116760254
    10. '        
' → logprob: -14.641343116760254

Token 2533: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.0953061506152153
    2. 'cap' → logprob: -3.345306158065796
    3. 'p' → logprob: -4.220305919647217
    4. '0' → logprob: -4.720305919647217
    5. '(cap' → logprob: -5.220305919647217
    6. 'float' → logprob: -5.220305919647217
    7. 'capac' → logprob: -5.470305919647217
    8. '#' → logprob: -5.595305919647217
    9. 'weight' → logprob: -6.345305919647217
    10. '(p' → logprob: -6.845305919647217

Token 2534: ' equal' (ID: 12629)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3631075620651245
    2. ' for' → logprob: -1.6131075620651245
    3. '=' → logprob: -1.7381075620651245
    4. ' =' → logprob: -2.113107681274414
    5. '(p' → logprob: -2.863107681274414
    6. '       ' → logprob: -2.988107681274414
    7. 'p' → logprob: -3.613107681274414
    8. '           ' → logprob: -4.113107681274414
    9. ' between' → logprob: -4.363107681274414
    10. ' p' → logprob: -5.113107681274414

Token 2535: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6618409752845764
    2. ' to' → logprob: -0.7868409752845764
    3. '(p' → logprob: -3.9118409156799316
    4. ' p' → logprob: -5.661840915679932
    5. 'p' → logprob: -6.161840915679932
    6. '(' → logprob: -6.661840915679932
    7. ' (' → logprob: -7.411840915679932
    8. '=' → logprob: -7.786840915679932
    9. '0' → logprob: -8.16184139251709
    10. '1' → logprob: -9.03684139251709

Token 2536: ' segment' (ID: 14806)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7729437351226807
    2. '0' → logprob: -1.0229437351226807
    3. '1' → logprob: -3.3979437351226807
    4. 'p' → logprob: -3.5229437351226807
    5. '(nodes' → logprob: -4.022943496704102
    6. '(' → logprob: -4.147943496704102
    7. 'segments' → logprob: -4.147943496704102
    8. '(abs' → logprob: -4.147943496704102
    9. 'abs' → logprob: -4.272943496704102
    10. 'nodes' → logprob: -4.522943496704102

Token 2537: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10170948505401611
    2. ' length' → logprob: -2.4767093658447266
    3. '_length' → logprob: -4.476709365844727
    4. ' lengths' → logprob: -8.101709365844727
    5. 'width' → logprob: -8.476709365844727
    6. '   ' → logprob: -8.851709365844727
    7. 'segments' → logprob: -9.226709365844727
    8. ' ' → logprob: -9.351709365844727
    9. '_lengths' → logprob: -9.476709365844727
    10. '0' → logprob: -9.726709365844727

Token 2538: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06983104348182678
    2. 'for' → logprob: -3.319831132888794
    3. ' for' → logprob: -3.694831132888794
    4. '        
' → logprob: -6.194830894470215
    5. '
' → logprob: -6.694830894470215
    6. '           ' → logprob: -7.194830894470215
    7. '```' → logprob: -7.319830894470215
    8. ')' → logprob: -7.569830894470215
    9. '               ' → logprob: -8.194830894470215
    10. ',' → logprob: -8.444830894470215

Token 2539: ' neighbors' (ID: 31655)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.36787736415863037
    2. '(p' → logprob: -2.74287748336792
    3. 'points' → logprob: -2.99287748336792
    4. '(nodes' → logprob: -2.99287748336792
    5. 'neighbors' → logprob: -3.49287748336792
    6. 'p' → logprob: -3.74287748336792
    7. '(
' → logprob: -3.74287748336792
    8. 'adj' → logprob: -3.99287748336792
    9. '
' → logprob: -4.24287748336792
    10. 'next' → logprob: -5.49287748336792

Token 2540: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01973608508706093
    2. 'for' → logprob: -4.144736289978027
    3. ' for' → logprob: -5.644736289978027
    4. ',' → logprob: -9.644736289978027
    5. '           ' → logprob: -10.144736289978027
    6. '
' → logprob: -11.394736289978027
    7. ' in' → logprob: -12.019736289978027
    8. ')' → logprob: -12.144736289978027
    9. '```' → logprob: -12.144736289978027
    10. '   ' → logprob: -12.519736289978027

Token 2541: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.04757576063275337
    2. 'line' → logprob: -3.4225757122039795
    3. 'same' → logprob: -5.047575950622559
    4. ' the' → logprob: -5.422575950622559
    5. ' line' → logprob: -7.297575950622559
    6. 'that' → logprob: -7.422575950622559
    7. 'lines' → logprob: -7.547575950622559
    8. '   ' → logprob: -7.547575950622559
    9. 'this' → logprob: -8.797575950622559
    10. 'nodes' → logprob: -9.047575950622559

Token 2542: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.003280144650489092
    2. ' line' → logprob: -5.753280162811279
    3. 'horizontal' → logprob: -9.753279685974121
    4. '   ' → logprob: -10.753279685974121
    5. ' ' → logprob: -12.003279685974121
    6. '_line' → logprob: -12.503279685974121
    7. 'node' → logprob: -12.878279685974121
    8. '
' → logprob: -13.128279685974121
    9. ' horizontal' → logprob: -13.128279685974121
    10. 'lines' → logprob: -13.253279685974121

Token 2543: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5337897539138794
    2. 'for' → logprob: -1.4087897539138794
    3. ' for' → logprob: -2.15878963470459
    4. '        
' → logprob: -4.28378963470459
    5. ')' → logprob: -4.78378963470459
    6. ',' → logprob: -5.03378963470459
    7. '
' → logprob: -5.03378963470459
    8. '           ' → logprob: -5.15878963470459
    9. '               ' → logprob: -5.90878963470459
    10. '#' → logprob: -6.40878963470459

Token 2544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009956525173038244
    2. '
' → logprob: -8.250995635986328
    3. '        
' → logprob: -8.250995635986328
    4. ' for' → logprob: -8.375995635986328
    5. 'for' → logprob: -9.875995635986328
    6. '#' → logprob: -10.375995635986328
    7. '<|end|>' → logprob: -10.375995635986328
    8. '```' → logprob: -10.625995635986328
    9. '  
' → logprob: -11.125995635986328
    10. ' 
' → logprob: -11.125995635986328

Token 2545: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06306859105825424
    2. '       ' → logprob: -2.8130686283111572
    3. ' for' → logprob: -6.813068389892578
    4. '   ' → logprob: -14.688068389892578
    5. '```' → logprob: -14.938068389892578
    6. '           ' → logprob: -16.188068389892578
    7. '	for' → logprob: -16.438068389892578
    8. '#' → logprob: -17.063068389892578
    9. ' ' → logprob: -17.313068389892578
    10. '
' → logprob: -17.563068389892578

Token 2546: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002978048287332058
    2. 'line' → logprob: -8.125297546386719
    3. ' i' → logprob: -13.750297546386719
    4. '(i' → logprob: -15.250297546386719
    5. '   ' → logprob: -15.375297546386719
    6. 'idx' → logprob: -16.37529754638672
    7. '_i' → logprob: -16.37529754638672
    8. 'layer' → logprob: -16.87529754638672
    9. '	i' → logprob: -17.50029754638672
    10. 'level' → logprob: -18.00029754638672

Token 2547: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4071490168571472
    2. 'in' → logprob: -1.532149076461792
    3. ',' → logprob: -2.157149076461792
    4. ' ,' → logprob: -6.032148838043213
    5. ' ' → logprob: -9.657149314880371
    6. '	in' → logprob: -9.657149314880371
    7. ',in' → logprob: -10.032149314880371
    8. ',
' → logprob: -11.032149314880371
    9. ',line' → logprob: -11.032149314880371
    10. ',n' → logprob: -11.407149314880371

Token 2548: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -1.9385402993066236e-05
    2. ' nodes' → logprob: -11.500019073486328
    3. 'points' → logprob: -12.375019073486328
    4. 'line' → logprob: -12.500019073486328
    5. '(nodes' → logprob: -14.375019073486328
    6. '	nodes' → logprob: -15.000019073486328
    7. '   ' → logprob: -16.250019073486328
    8. 'lines' → logprob: -16.500019073486328
    9. 'node' → logprob: -16.750019073486328
    10. 'neighbors' → logprob: -16.750019073486328

Token 2549: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2844564616680145
    2. 'in' → logprob: -1.409456491470337
    3. ',' → logprob: -6.659456253051758
    4. '[line' → logprob: -7.284456253051758
    5. '_line' → logprob: -8.159456253051758
    6. ',line' → logprob: -8.284456253051758
    7. '_in' → logprob: -8.534456253051758
    8. '[' → logprob: -8.659456253051758
    9. '   ' → logprob: -9.909456253051758
    10. 'line' → logprob: -10.034456253051758

Token 2550: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.011733056046068668
    2. ' enumerate' → logprob: -4.636733055114746
    3. 'range' → logprob: -6.386733055114746
    4. 'nodes' → logprob: -8.261733055114746
    5. ' ' → logprob: -10.886733055114746
    6. '   ' → logprob: -12.011733055114746
    7. '
' → logprob: -13.511733055114746
    8. ' range' → logprob: -13.636733055114746
    9. ' nodes' → logprob: -13.886733055114746
    10. '  ' → logprob: -13.886733055114746

Token 2551: '(nodes' (ID: 86139)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -3.690834273584187e-05
    2. '(nodes' → logprob: -10.37503719329834
    3. 'range' → logprob: -12.50003719329834
    4. ' nodes' → logprob: -14.00003719329834
    5. 'enumer' → logprob: -14.62503719329834
    6. '
' → logprob: -15.25003719329834
    7. 'node' → logprob: -15.87503719329834
    8. '   ' → logprob: -16.375036239624023
    9. 'lines' → logprob: -16.625036239624023
    10. '	nodes' → logprob: -17.375036239624023

Token 2552: '_per' (ID: 10938)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05716801434755325
    2. '):
' → logprob: -3.6821680068969727
    3. '_per' → logprob: -4.307168006896973
    4. ':
' → logprob: -5.557168006896973
    5. ':' → logprob: -5.682168006896973
    6. '       ' → logprob: -5.807168006896973
    7. '):' → logprob: -6.182168006896973
    8. '           ' → logprob: -6.307168006896973
    9. '[' → logprob: -6.932168006896973
    10. '   ' → logprob: -7.057168006896973

Token 2553: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.2528940439224243
    2. 'line' → logprob: -1.5028940439224243
    3. ' line' → logprob: -8.127894401550293
    4. '   ' → logprob: -9.127894401550293
    5. ')' → logprob: -9.502894401550293
    6. ' ' → logprob: -9.627894401550293
    7. '[i' → logprob: -9.752894401550293
    8. '[
' → logprob: -9.877894401550293
    9. '```' → logprob: -9.877894401550293
    10. '[' → logprob: -10.127894401550293

Token 2554: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5064868927001953
    2. ':
' → logprob: -1.0064868927001953
    3. '       ' → logprob: -4.131486892700195
    4. '):
' → logprob: -4.256486892700195
    5. '   ' → logprob: -7.381486892700195
    6. '):' → logprob: -8.006486892700195
    7. '           ' → logprob: -8.381486892700195
    8. '[' → logprob: -8.756486892700195
    9. ',' → logprob: -9.756486892700195
    10. ' :' → logprob: -10.006486892700195

Token 2555: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007062619552016258
    2. '   ' → logprob: -5.6320624351501465
    3. ' for' → logprob: -6.2570624351501465
    4. '       ' → logprob: -6.6320624351501465
    5. 'for' → logprob: -8.632062911987305
    6. '```' → logprob: -11.257062911987305
    7. '	       ' → logprob: -11.757062911987305
    8. '               ' → logprob: -11.882062911987305
    9. '	   ' → logprob: -12.632062911987305
    10. ' ' → logprob: -13.007062911987305

Token 2556: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1559523642063141
    2. ' for' → logprob: -2.1559524536132812
    3. '           ' → logprob: -3.6559524536132812
    4. 'j' → logprob: -6.280952453613281
    5. '   ' → logprob: -7.530952453613281
    6. ' ' → logprob: -8.780952453613281
    7. '               ' → logprob: -8.905952453613281
    8. ' j' → logprob: -10.280952453613281
    9. 'prev' → logprob: -11.780952453613281
    10. 'length' → logprob: -12.280952453613281

Token 2557: ' nodes' (ID: 15749)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0049974978901445866
    2. 'j' → logprob: -5.754997730255127
    3. '           ' → logprob: -6.629997730255127
    4. 'prev' → logprob: -8.254997253417969
    5. ' for' → logprob: -8.754997253417969
    6. 'if' → logprob: -10.129997253417969
    7. 'last' → logprob: -10.879997253417969
    8. 'length' → logprob: -11.879997253417969
    9. '               ' → logprob: -13.129997253417969
    10. 'n' → logprob: -13.629997253417969

Token 2558: ' describe' (ID: 12886)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.808279275894165
    2. '_count' → logprob: -1.433279275894165
    3. 'len' → logprob: -2.058279275894165
    4. '_length' → logprob: -2.808279275894165
    5. 'count' → logprob: -3.183279275894165
    6. ' =' → logprob: -4.433279037475586
    7. '_j' → logprob: -4.558279037475586
    8. 'length' → logprob: -4.808279037475586
    9. '=' → logprob: -4.933279037475586
    10. 'for' → logprob: -5.058279037475586

Token 2559: ' points' (ID: 5571)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.3856205940246582
    2. 'segments' → logprob: -1.6356205940246582
    3. 'j' → logprob: -2.385620594024658
    4. 'points' → logprob: -2.635620594024658
    5. 'segment' → logprob: -2.760620594024658
    6. 'a' → logprob: -2.760620594024658
    7. 'the' → logprob: -2.885620594024658
    8. 'x' → logprob: -3.135620594024658
    9. 'line' → logprob: -3.635620594024658
    10. 'positions' → logprob: -4.010620594024658

Token 2560: ' where' (ID: 1919)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9836503267288208
    2. 'for' → logprob: -2.3586502075195312
    3. '=' → logprob: -2.7336502075195312
    4. 'in' → logprob: -2.7336502075195312
    5. '           ' → logprob: -2.8586502075195312
    6. '[j' → logprob: -3.1086502075195312
    7. 'on' → logprob: -3.3586502075195312
    8. 'len' → logprob: -3.3586502075195312
    9. '
' → logprob: -3.7336502075195312
    10. ' in' → logprob: -3.8586502075195312

Token 2561: ' free' (ID: 2240)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9690398573875427
    2. 'j' → logprob: -1.7190399169921875
    3. 'for' → logprob: -2.5940399169921875
    4. 'p' → logprob: -2.8440399169921875
    5. '0' → logprob: -2.8440399169921875
    6. 'segments' → logprob: -2.9690399169921875
    7. '
' → logprob: -3.3440399169921875
    8. 'nodes' → logprob: -3.7190399169921875
    9. 'len' → logprob: -3.8440399169921875
    10. 'if' → logprob: -4.3440399169921875

Token 2562: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.09583866596221924
    2. '_segments' → logprob: -3.0958385467529297
    3. ' segments' → logprob: -3.7208385467529297
    4. 'space' → logprob: -5.22083854675293
    5. 'x' → logprob: -5.34583854675293
    6. 'segment' → logprob: -5.97083854675293
    7. '           ' → logprob: -6.22083854675293
    8. '_segment' → logprob: -6.47083854675293
    9. '   ' → logprob: -6.59583854675293
    10. ' ' → logprob: -6.84583854675293

Token 2563: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.03621244430542
    2. '=' → logprob: -2.28621244430542
    3. 'length' → logprob: -2.28621244430542
    4. 'are' → logprob: -2.41121244430542
    5. 'end' → logprob: -2.41121244430542
    6. '           ' → logprob: -2.53621244430542
    7. 'on' → logprob: -2.66121244430542
    8. ' =' → logprob: -3.16121244430542
    9. '       ' → logprob: -3.28621244430542
    10. 'between' → logprob: -3.28621244430542

Token 2564: '/end' (ID: 175389)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.681537389755249
    2. 'or' → logprob: -1.931537389755249
    3. ' and' → logprob: -2.056537389755249
    4. ' or' → logprob: -2.181537389755249
    5. '           ' → logprob: -2.681537389755249
    6. ',' → logprob: -4.056537628173828
    7. '               ' → logprob: -4.806537628173828
    8. '...' → logprob: -5.806537628173828
    9. '=' → logprob: -6.306537628173828
    10. ')' → logprob: -6.306537628173828

Token 2565: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0533023402094841
    2. 'for' → logprob: -3.92830228805542
    3. ' for' → logprob: -4.05330228805542
    4. ',' → logprob: -4.92830228805542
    5. 'and' → logprob: -6.05330228805542
    6. ' and' → logprob: -6.17830228805542
    7. ' or' → logprob: -6.92830228805542
    8. '               ' → logprob: -7.17830228805542
    9. ' (' → logprob: -7.92830228805542
    10. ';' → logprob: -8.428302764892578

Token 2566: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007671024068258703
    2. ' for' → logprob: -7.500767230987549
    3. 'for' → logprob: -9.37576675415039
    4. '       ' → logprob: -9.75076675415039
    5. '               ' → logprob: -10.37576675415039
    6. '   ' → logprob: -11.12576675415039
    7. ',' → logprob: -11.25076675415039
    8. '                   ' → logprob: -13.12576675415039
    9. ' and' → logprob: -13.37576675415039
    10. ' ' → logprob: -13.75076675415039

Token 2567: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2896479666233063
    2. 'j' → logprob: -1.9146479368209839
    3. '           ' → logprob: -3.1646480560302734
    4. 'k' → logprob: -3.6646480560302734
    5. ' for' → logprob: -3.9146480560302734
    6. 'last' → logprob: -5.664648056030273
    7. 'idx' → logprob: -6.039648056030273
    8. 'prev' → logprob: -6.039648056030273
    9. 'm' → logprob: -6.164648056030273
    10. 'length' → logprob: -6.414648056030273

Token 2568: ' capacity' (ID: 12241)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05117899179458618
    2. '           ' → logprob: -3.1761789321899414
    3. 'k' → logprob: -6.301178932189941
    4. 'm' → logprob: -6.551178932189941
    5. ' for' → logprob: -6.551178932189941
    6. 'length' → logprob: -6.801178932189941
    7. 'j' → logprob: -6.926178932189941
    8. 'prev' → logprob: -7.676178932189941
    9. 'line' → logprob: -8.176178932189941
    10. 'last' → logprob: -8.926178932189941

Token 2569: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.061905860900879
    2. '=' → logprob: -1.311905860900879
    3. '_line' → logprob: -2.686905860900879
    4. ' line' → logprob: -3.186905860900879
    5. 'for' → logprob: -3.311905860900879
    6. ' between' → logprob: -3.436905860900879
    7. '_between' → logprob: -3.561905860900879
    8. 's' → logprob: -3.811905860900879
    9. 'line' → logprob: -3.811905860900879
    10. ' is' → logprob: -3.936905860900879

Token 2570: ' node' (ID: 4596)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.4190912246704102
    2. 'the' → logprob: -1.6690912246704102
    3. 'nodes' → logprob: -2.16909122467041
    4. 'segment' → logprob: -2.29409122467041
    5. 'each' → logprob: -2.79409122467041
    6. 'edge' → logprob: -3.16909122467041
    7. 'out' → logprob: -3.54409122467041
    8. 'node' → logprob: -3.54409122467041
    9. 'line' → logprob: -3.79409122467041
    10. 'i' → logprob: -3.79409122467041

Token 2571: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1239826679229736
    2. '=' → logprob: -2.2489826679229736
    3. ' is' → logprob: -2.6239826679229736
    4. ' between' → logprob: -2.7489826679229736
    5. '_' → logprob: -2.8739826679229736
    6. ' edges' → logprob: -2.8739826679229736
    7. 's' → logprob: -3.7489826679229736
    8. '_in' → logprob: -3.7489826679229736
    9. '   ' → logprob: -3.9989826679229736
    10. ' in' → logprob: -3.9989826679229736

Token 2572: ' segment' (ID: 14806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6084024310112
    2. ' for' → logprob: -0.8584024310112
    3. 'j' → logprob: -4.608402252197266
    4. '           ' → logprob: -4.983402252197266
    5. 'k' → logprob: -5.858402252197266
    6. 'if' → logprob: -6.358402252197266
    7. 'len' → logprob: -6.358402252197266
    8. ' if' → logprob: -6.608402252197266
    9. 'prev' → logprob: -6.608402252197266
    10. 'last' → logprob: -6.733402252197266

Token 2573: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.26776376366615295
    2. '_length' → logprob: -2.14276385307312
    3. ' length' → logprob: -2.51776385307312
    4. 's' → logprob: -4.642763614654541
    5. '_end' → logprob: -5.142763614654541
    6. '_' → logprob: -5.517763614654541
    7. ' between' → logprob: -6.017763614654541
    8. '_lengths' → logprob: -6.392763614654541
    9. '   ' → logprob: -6.517763614654541
    10. 'end' → logprob: -6.642763614654541

Token 2574: ' right' (ID: 1849)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -1.127429485321045
    2. '=' → logprob: -1.502429485321045
    3. ' =' → logprob: -1.627429485321045
    4. 'between' → logprob: -2.127429485321045
    5. '_between' → logprob: -3.127429485321045
    6. '           ' → logprob: -3.752429485321045
    7. '               ' → logprob: -4.377429485321045
    8. ' if' → logprob: -4.627429485321045
    9. '_' → logprob: -4.877429485321045
    10. 's' → logprob: -5.002429485321045

Token 2575: ' of' (ID: 328)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.594331681728363
    2. ' +' → logprob: -2.219331741333008
    3. '+' → logprob: -2.844331741333008
    4. '   ' → logprob: -3.344331741333008
    5. '_' → logprob: -3.469331741333008
    6. '=' → logprob: -3.469331741333008
    7. '-' → logprob: -3.594331741333008
    8. ' =' → logprob: -3.844331741333008
    9. 'neighbor' → logprob: -3.844331741333008
    10. '       ' → logprob: -4.219331741333008

Token 2576: ' the' (ID: 290)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.10791633278131485
    2. 'p' → logprob: -2.7329163551330566
    3. ' nodes' → logprob: -3.7329163551330566
    4. 'points' → logprob: -5.232916355133057
    5. 'node' → logprob: -5.607916355133057
    6. ' p' → logprob: -5.732916355133057
    7. 'point' → logprob: -8.232915878295898
    8. 'pts' → logprob: -8.482915878295898
    9. 'the' → logprob: -8.857915878295898
    10. ' node' → logprob: -8.982915878295898

Token 2577: ' point' (ID: 2438)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.4883978068828583
    2. 'p' → logprob: -1.2383978366851807
    3. 'node' → logprob: -2.8633978366851807
    4. ' nodes' → logprob: -3.9883978366851807
    5. 'points' → logprob: -5.113397598266602
    6. 'point' → logprob: -5.238397598266602
    7. ' p' → logprob: -5.238397598266602
    8. ' node' → logprob: -6.488397598266602
    9. 'current' → logprob: -7.113397598266602
    10. '
' → logprob: -8.113397598266602

Token 2578: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4226655960083008
    2. '
' → logprob: -1.5476655960083008
    3. ' +' → logprob: -1.5476655960083008
    4. '           ' → logprob: -1.7976655960083008
    5. '               ' → logprob: -2.922665596008301
    6. '+' → logprob: -3.922665596008301
    7. '[' → logprob: -4.297665596008301
    8. ',' → logprob: -4.922665596008301
    9. ' =' → logprob: -4.922665596008301
    10. ')' → logprob: -5.047665596008301

Token 2579: ' line' (ID: 2543)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4142725169658661
    2. 'line' → logprob: -1.5392725467681885
    3. ' the' → logprob: -3.5392725467681885
    4. ' line' → logprob: -3.5392725467681885
    5. 'i' → logprob: -3.9142725467681885
    6. 'this' → logprob: -4.164272308349609
    7. '   ' → logprob: -4.164272308349609
    8. 'that' → logprob: -5.664272308349609
    9. '           ' → logprob: -5.789272308349609
    10. ' i' → logprob: -6.539272308349609

Token 2580: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7784683704376221
    2. ' if' → logprob: -1.528468370437622
    3. ' =' → logprob: -2.778468370437622
    4. '               ' → logprob: -2.778468370437622
    5. ' j' → logprob: -2.778468370437622
    6. '
' → logprob: -3.653468370437622
    7. ',' → logprob: -3.903468370437622
    8. ' for' → logprob: -4.403468132019043
    9. ' +' → logprob: -4.528468132019043
    10. '[j' → logprob: -5.278468132019043

Token 2581: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8467311263084412
    2. ' if' → logprob: -1.096731185913086
    3. '           ' → logprob: -1.971731185913086
    4. ' +' → logprob: -3.721731185913086
    5. ' for' → logprob: -4.096731185913086
    6. ',' → logprob: -4.221731185913086
    7. ' =' → logprob: -5.096731185913086
    8. '       ' → logprob: -5.221731185913086
    9. '               ' → logprob: -5.471731185913086
    10. ' ' → logprob: -5.846731185913086

Token 2582: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005112105864100158
    2. ' for' → logprob: -8.000511169433594
    3. '```' → logprob: -9.750511169433594
    4. '               ' → logprob: -10.375511169433594
    5. ',' → logprob: -10.750511169433594
    6. '       ' → logprob: -11.000511169433594
    7. ' if' → logprob: -11.750511169433594
    8. 'for' → logprob: -11.750511169433594
    9. '   ' → logprob: -11.875511169433594
    10. '                   ' → logprob: -12.250511169433594

Token 2583: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6623770594596863
    2. 'for' → logprob: -0.9123770594596863
    3. ' for' → logprob: -2.662377119064331
    4. 'j' → logprob: -4.412376880645752
    5. ' j' → logprob: -7.287376880645752
    6. '   ' → logprob: -9.16237735748291
    7. ' ' → logprob: -9.91237735748291
    8. '               ' → logprob: -10.78737735748291
    9. '       ' → logprob: -12.03737735748291
    10. ' ' → logprob: -12.53737735748291

Token 2584: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06358353048563004
    2. '           ' → logprob: -3.4385836124420166
    3. 'j' → logprob: -4.1885833740234375
    4. ' for' → logprob: -4.3135833740234375
    5. '   ' → logprob: -7.9385833740234375
    6. '               ' → logprob: -8.563583374023438
    7. '```' → logprob: -8.813583374023438
    8. ' j' → logprob: -9.438583374023438
    9. '                   ' → logprob: -9.938583374023438
    10. 'if' → logprob: -10.438583374023438

Token 2585: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014987173490226269
    2. ' j' → logprob: -4.264986991882324
    3. 'i' → logprob: -7.514986991882324
    4. 'each' → logprob: -9.889986991882324
    5. '_j' → logprob: -10.264986991882324
    6. 'idx' → logprob: -10.389986991882324
    7. '   ' → logprob: -10.389986991882324
    8. ' ' → logprob: -10.639986991882324
    9. ' i' → logprob: -11.139986991882324
    10. '```' → logprob: -11.264986991882324

Token 2586: ' pair' (ID: 10610)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4428178369998932
    2. ' j' → logprob: -1.0678178071975708
    3. 'i' → logprob: -4.817817687988281
    4. ' i' → logprob: -5.692817687988281
    5. '   ' → logprob: -7.692817687988281
    6. ' p' → logprob: -7.817817687988281
    7. ' ' → logprob: -8.067817687988281
    8. 'p' → logprob: -8.817817687988281
    9. '       ' → logprob: -8.817817687988281
    10. 'b' → logprob: -9.067817687988281

Token 2587: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3641605377197266
    2. ' of' → logprob: -1.6141605377197266
    3. '           ' → logprob: -2.3641605377197266
    4. ',' → logprob: -2.7391605377197266
    5. ' j' → logprob: -2.7391605377197266
    6. '   ' → logprob: -3.1141605377197266
    7. ' if' → logprob: -3.2391605377197266
    8. ')' → logprob: -3.3641605377197266
    9. ' in' → logprob: -3.4891605377197266
    10. ' ' → logprob: -3.6141605377197266

Token 2588: ' consecutive' (ID: 40840)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.0956522226333618
    2. 'con' → logprob: -1.2206522226333618
    3. 'adj' → logprob: -1.2206522226333618
    4. 'nodes' → logprob: -3.2206521034240723
    5. 'j' → logprob: -3.9706521034240723
    6. 'neighbor' → logprob: -5.095652103424072
    7. 'neighbors' → logprob: -5.345652103424072
    8. 'i' → logprob: -6.595652103424072
    9. 'indices' → logprob: -6.720652103424072
    10. ' consecutive' → logprob: -7.345652103424072

Token 2589: ' points' (ID: 5571)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.14633361995220184
    2. 'points' → logprob: -2.021333694458008
    3. ' nodes' → logprob: -6.396333694458008
    4. 'pts' → logprob: -7.146333694458008
    5. 'node' → logprob: -7.646333694458008
    6. 'p' → logprob: -8.271333694458008
    7. ' points' → logprob: -8.771333694458008
    8. 'tokens' → logprob: -9.646333694458008
    9. '
' → logprob: -10.271333694458008
    10. 'point' → logprob: -10.396333694458008

Token 2590: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.144532561302185
    2. ' in' → logprob: -1.144532561302185
    3. ' j' → logprob: -2.5195326805114746
    4. ':
' → logprob: -2.5195326805114746
    5. 'j' → logprob: -3.0195326805114746
    6. 'in' → logprob: -3.2695326805114746
    7. ':' → logprob: -3.6445326805114746
    8. ' on' → logprob: -3.7695326805114746
    9. '(j' → logprob: -4.394532680511475
    10. ',j' → logprob: -5.019532680511475

Token 2591: 'nodes' (ID: 44664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2664622962474823
    2. 'j' → logprob: -2.0164623260498047
    3. 'nodes' → logprob: -2.5164623260498047
    4. ' i' → logprob: -5.516462326049805
    5. ' nodes' → logprob: -6.016462326049805
    6. ',' → logprob: -6.016462326049805
    7. '           ' → logprob: -6.516462326049805
    8. 'p' → logprob: -6.641462326049805
    9. ' j' → logprob: -6.766462326049805
    10. '   ' → logprob: -6.891462326049805

Token 2592: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2823125422000885
    2. '[j' → logprob: -1.7823125123977661
    3. ',' → logprob: -3.1573126316070557
    4. '),' → logprob: -4.657312393188477
    5. ')' → logprob: -4.907312393188477
    6. '[' → logprob: -5.032312393188477
    7. '):
' → logprob: -5.657312393188477
    8. '
' → logprob: -7.032312393188477
    9. '```' → logprob: -7.282312393188477
    10. '   ' → logprob: -7.407312393188477

Token 2593: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25008416175842285
    2. ' +' → logprob: -2.125084161758423
    3. '],' → logprob: -3.250084161758423
    4. ']),' → logprob: -3.625084161758423
    5. ']' → logprob: -4.000083923339844
    6. '   ' → logprob: -4.875083923339844
    7. '].' → logprob: -6.125083923339844
    8. ']+' → logprob: -6.375083923339844
    9. '])' → logprob: -6.625083923339844
    10. '[j' → logprob: -7.125083923339844

Token 2594: ' nodes' (ID: 15749)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.36004242300987244
    2. 'nodes' → logprob: -1.3600424528121948
    3. ' nodes' → logprob: -3.8600423336029053
    4. ' j' → logprob: -4.735042572021484
    5. '
' → logprob: -5.485042572021484
    6. '   ' → logprob: -5.985042572021484
    7. ')' → logprob: -5.985042572021484
    8. 'points' → logprob: -7.235042572021484
    9. '(nodes' → logprob: -7.735042572021484
    10. '	nodes' → logprob: -7.797542572021484

Token 2595: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1423051506280899
    2. 'j' → logprob: -2.1423051357269287
    3. '+' → logprob: -4.642305374145508
    4. '   ' → logprob: -5.767305374145508
    5. '[' → logprob: -7.267305374145508
    6. '
' → logprob: -7.517305374145508
    7. ' +' → logprob: -8.267305374145508
    8. ' ' → logprob: -8.642305374145508
    9. '[
' → logprob: -8.767305374145508
    10. '+j' → logprob: -9.142305374145508

Token 2596: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04461924731731415
    2. ' +' → logprob: -3.41961932182312
    3. '[j' → logprob: -6.044619083404541
    4. ']' → logprob: -6.294619083404541
    5. '])' → logprob: -6.294619083404541
    6. '   ' → logprob: -6.794619083404541
    7. ']+' → logprob: -6.919619083404541
    8. ']),' → logprob: -6.919619083404541
    9. 'j' → logprob: -8.2946195602417
    10. '],' → logprob: -8.2946195602417

Token 2597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. 'j' → logprob: -11.125020027160645
    3. '   ' → logprob: -13.125020027160645
    4. ' ' → logprob: -13.500020027160645
    5. '
' → logprob: -14.000020027160645
    6. '0' → logprob: -14.125020027160645
    7. '```' → logprob: -15.000020027160645
    8. '+' → logprob: -15.500020027160645
    9. ']' → logprob: -17.12502098083496
    10. ' j' → logprob: -17.75002098083496

Token 2598: '])' (ID: 4636)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7414446473121643
    2. '):
' → logprob: -1.7414445877075195
    3. ']):
' → logprob: -1.9914445877075195
    4. ']' → logprob: -3.1164445877075195
    5. ')' → logprob: -3.1164445877075195
    6. '])' → logprob: -3.2414445877075195
    7. ' +' → logprob: -3.9914445877075195
    8. ']):' → logprob: -4.1164445877075195
    9. ']+' → logprob: -4.7414445877075195
    10. ']),' → logprob: -4.9914445877075195

Token 2599: ' the' (ID: 290)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6022183299064636
    2. ',' → logprob: -1.9772183895111084
    3. '           ' → logprob: -1.9772183895111084
    4. ':' → logprob: -2.2272183895111084
    5. '               ' → logprob: -3.8522183895111084
    6. '):
' → logprob: -3.8522183895111084
    7. ' for' → logprob: -5.352218151092529
    8. ',
' → logprob: -5.602218151092529
    9. '       ' → logprob: -5.852218151092529
    10. '):' → logprob: -6.102218151092529

Token 2600: ' free' (ID: 2240)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -1.2541029453277588
    2. 'if' → logprob: -1.5041029453277588
    3. 'length' → logprob: -2.004102945327759
    4. 'for' → logprob: -2.129102945327759
    5. ' capacity' → logprob: -3.254102945327759
    6. 'j' → logprob: -3.379102945327759
    7. ' if' → logprob: -3.504102945327759
    8. 'segment' → logprob: -3.879102945327759
    9. 'next' → logprob: -4.25410270690918
    10. 'right' → logprob: -4.37910270690918

Token 2601: ' horizontal' (ID: 25511)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.2666471004486084
    2. '_segment' → logprob: -1.6416471004486084
    3. 'segments' → logprob: -1.8916471004486084
    4. 'segment' → logprob: -2.3916471004486084
    5. ' segment' → logprob: -2.7666471004486084
    6. '           ' → logprob: -2.7666471004486084
    7. ' segments' → logprob: -3.0166471004486084
    8. '   ' → logprob: -4.1416473388671875
    9. ' ' → logprob: -4.3916473388671875
    10. '       ' → logprob: -4.3916473388671875

Token 2602: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.25947049260139465
    2. 'segments' → logprob: -1.8844704627990723
    3. ' segment' → logprob: -3.3844704627990723
    4. '_segment' → logprob: -4.259470462799072
    5. 'space' → logprob: -5.134470462799072
    6. ' segments' → logprob: -5.134470462799072
    7. '_segments' → logprob: -5.634470462799072
    8. 'length' → logprob: -5.634470462799072
    9. 'distance' → logprob: -5.759470462799072
    10. 'points' → logprob: -7.009470462799072

Token 2603: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.631233811378479
    2. ' ends' → logprob: -2.6312336921691895
    3. ' is' → logprob: -2.7562336921691895
    4. ' length' → logprob: -2.7562336921691895
    5. 'ends' → logprob: -3.1312336921691895
    6. '           ' → logprob: -3.2562336921691895
    7. '   ' → logprob: -3.6312336921691895
    8. '       ' → logprob: -3.6312336921691895
    9. 'is' → logprob: -3.7562336921691895
    10. '
' → logprob: -3.8812336921691895

Token 2604: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3688761293888092
    2. 'is' → logprob: -2.2438762187957764
    3. ' between' → logprob: -2.3688762187957764
    4. 'between' → logprob: -3.4938762187957764
    5. ' =' → logprob: -4.368875980377197
    6. '           ' → logprob: -4.368875980377197
    7. 's' → logprob: -4.493875980377197
    8. '=' → logprob: -4.618875980377197
    9. ':
' → logprob: -5.368875980377197
    10. '               ' → logprob: -5.493875980377197

Token 2605: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.13287775218486786
    2. ' nodes' → logprob: -2.257877826690674
    3. '(nodes' → logprob: -4.007877826690674
    4. ' p' → logprob: -7.132877826690674
    5. 'points' → logprob: -8.257877349853516
    6. 'p' → logprob: -8.382877349853516
    7. ' (' → logprob: -9.132877349853516
    8. '(p' → logprob: -9.382877349853516
    9. '`' → logprob: -10.007877349853516
    10. '(points' → logprob: -10.632877349853516

Token 2606: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0015298592625185847
    2. '   ' → logprob: -8.001529693603516
    3. '[
' → logprob: -8.876529693603516
    4. '[i' → logprob: -9.001529693603516
    5. '[' → logprob: -9.001529693603516
    6. 's' → logprob: -9.751529693603516
    7. 'len' → logprob: -9.876529693603516
    8. '       ' → logprob: -9.876529693603516
    9. '=j' → logprob: -9.876529693603516
    10. 'j' → logprob: -10.001529693603516

Token 2607: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3578154742717743
    2. '[j' → logprob: -1.3578155040740967
    3. ' +' → logprob: -3.3578155040740967
    4. '].' → logprob: -5.982815265655518
    5. '+j' → logprob: -6.857815265655518
    6. '[i' → logprob: -6.982815265655518
    7. '[' → logprob: -7.232815265655518
    8. ']' → logprob: -7.482815265655518
    9. '   ' → logprob: -7.607815265655518
    10. '
' → logprob: -7.732815265655518

Token 2608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.837811088189483e-05
    2. ' ' → logprob: -9.750068664550781
    3. '```' → logprob: -13.000068664550781
    4. '   ' → logprob: -13.250068664550781
    5. '+' → logprob: -13.500068664550781
    6. 'j' → logprob: -13.750068664550781
    7. '
' → logprob: -14.812568664550781
    8. 'i' → logprob: -15.125068664550781
    9. 'x' → logprob: -15.187568664550781
    10. '0' → logprob: -15.250068664550781

Token 2609: '].' (ID: 1651)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.001402144436724484
    2. '].' → logprob: -7.251402378082275
    3. '.' → logprob: -7.751402378082275
    4. ' .' → logprob: -9.376401901245117
    5. '[' → logprob: -10.251401901245117
    6. '   ' → logprob: -10.501401901245117
    7. ']' → logprob: -10.876401901245117
    8. ').' → logprob: -11.126401901245117
    9. '```' → logprob: -11.251401901245117
    10. ' -' → logprob: -11.376401901245117

Token 2610: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009673224412836134
    2. '.x' → logprob: -7.000967502593994
    3. '```' → logprob: -10.750967025756836
    4. ' x' → logprob: -11.375967025756836
    5. '_x' → logprob: -11.625967025756836
    6. ''x' → logprob: -13.125967025756836
    7. '.' → logprob: -13.250967025756836
    8. '
' → logprob: -13.375967025756836
    9. ' ' → logprob: -14.125967025756836
    10. '"x' → logprob: -14.500967025756836

Token 2611: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.2286704778671265
    2. '+' → logprob: -1.3536704778671265
    3. ' -' → logprob: -1.6036704778671265
    4. '-' → logprob: -2.353670597076416
    5. '
' → logprob: -2.978670597076416
    6. '           ' → logprob: -3.228670597076416
    7. '```' → logprob: -4.103670597076416
    8. ',' → logprob: -4.853670597076416
    9. ' if' → logprob: -4.978670597076416
    10. '.' → logprob: -5.353670597076416

Token 2612: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.07018639892339706
    2. ' nodes' → logprob: -2.6951863765716553
    3. '(nodes' → logprob: -9.320186614990234
    4. '	nodes' → logprob: -9.445186614990234
    5. 'points' → logprob: -10.570186614990234
    6. '1' → logprob: -12.070186614990234
    7. 'p' → logprob: -12.195186614990234
    8. '0' → logprob: -12.195186614990234
    9. ' ' → logprob: -12.320186614990234
    10. 'node' → logprob: -12.320186614990234

Token 2613: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.043205056339502335
    2. 'j' → logprob: -3.1682050228118896
    3. '[i' → logprob: -9.168205261230469
    4. '[' → logprob: -9.918205261230469
    5. '```' → logprob: -11.293205261230469
    6. '[
' → logprob: -11.543205261230469
    7. '
' → logprob: -11.793205261230469
    8. ' j' → logprob: -12.293205261230469
    9. 'i' → logprob: -12.293205261230469
    10. '(j' → logprob: -12.918205261230469

Token 2614: '].' (ID: 1651)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.2706238329410553
    2. '[j' → logprob: -1.770623803138733
    3. '].' → logprob: -3.5206239223480225
    4. '.' → logprob: -3.6456239223480225
    5. '.j' → logprob: -4.895623683929443
    6. '[' → logprob: -6.520623683929443
    7. ').' → logprob: -7.270623683929443
    8. '```' → logprob: -7.770623683929443
    9. ' .' → logprob: -8.645624160766602
    10. '+.' → logprob: -8.770624160766602

Token 2615: 'x' (ID: 87)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3832378387451172
    2. '+' → logprob: -1.5082378387451172
    3. '[' → logprob: -2.258237838745117
    4. ' ' → logprob: -2.758237838745117
    5. ')' → logprob: -3.008237838745117
    6. '           ' → logprob: -3.008237838745117
    7. ',' → logprob: -3.258237838745117
    8. '+
' → logprob: -3.258237838745117
    9. '[
' → logprob: -3.758237838745117
    10. '0' → logprob: -3.758237838745117

Token 2616: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11941444873809814
    2. '       ' → logprob: -2.7444143295288086
    3. '
' → logprob: -4.369414329528809
    4. '               ' → logprob: -4.619414329528809
    5. ' for' → logprob: -4.619414329528809
    6. ',' → logprob: -4.994414329528809
    7. 'for' → logprob: -6.369414329528809
    8. '                   ' → logprob: -6.869414329528809
    9. '<|end|>' → logprob: -7.119414329528809
    10. ')' → logprob: -7.369414329528809

Token 2617: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001691846176981926
    2. ' for' → logprob: -6.751691818237305
    3. '       ' → logprob: -8.501691818237305
    4. 'for' → logprob: -8.501691818237305
    5. '               ' → logprob: -9.876691818237305
    6. ',' → logprob: -10.376691818237305
    7. '   ' → logprob: -11.626691818237305
    8. '                   ' → logprob: -12.501691818237305
    9. '
' → logprob: -12.751691818237305
    10. ')' → logprob: -12.876691818237305

Token 2618: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12972094118595123
    2. 'for' (adapté à ' for') → logprob: -2.25472092628479
    3. ' for' → logprob: -4.129721164703369
    4. '       ' → logprob: -8.004720687866211
    5. '               ' → logprob: -8.629720687866211
    6. '   ' → logprob: -9.254720687866211
    7. ' ' → logprob: -11.004720687866211
    8. '                   ' → logprob: -11.629720687866211
    9. '```' → logprob: -12.129720687866211
    10. '
' → logprob: -12.254720687866211

Token 2619: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011061380617320538
    2. ' j' → logprob: -4.511061191558838
    3. '	j' → logprob: -11.886061668395996
    4. ' ' → logprob: -13.136061668395996
    5. '   ' → logprob: -13.511061668395996
    6. '_j' → logprob: -13.761061668395996
    7. '0' → logprob: -14.011061668395996
    8. '  ' → logprob: -15.386061668395996
    9. '$j' → logprob: -15.636061668395996
    10. '(j' → logprob: -15.761061668395996

Token 2620: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13584502041339874
    2. 'in' → logprob: -2.2608449459075928
    3. '+' → logprob: -4.760845184326172
    4. ' ' → logprob: -4.760845184326172
    5. ',' → logprob: -6.135845184326172
    6. ' +' → logprob: -6.885845184326172
    7. ' ,' → logprob: -7.635845184326172
    8. '0' → logprob: -8.010845184326172
    9. ' +=' → logprob: -8.135845184326172
    10. '=' → logprob: -8.760845184326172

Token 2621: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.37175557017326355
    2. ' range' → logprob: -1.371755599975586
    3. '0' → logprob: -2.871755599975586
    4. ' ' → logprob: -8.746755599975586
    5. '(range' → logprob: -9.996755599975586
    6. 'len' → logprob: -12.121755599975586
    7. '	range' → logprob: -13.121755599975586
    8. '1' → logprob: -13.621755599975586
    9. ' xrange' → logprob: -13.871755599975586
    10. '[' → logprob: -14.371755599975586

Token 2622: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02612808533012867
    2. '0' → logprob: -4.15112829208374
    3. '(len' → logprob: -4.90112829208374
    4. ' len' → logprob: -6.15112829208374
    5. '1' → logprob: -8.401127815246582
    6. ' ' → logprob: -9.026127815246582
    7. '   ' → logprob: -9.526127815246582
    8. '2' → logprob: -11.151127815246582
    9. '           ' → logprob: -11.276127815246582
    10. '       ' → logprob: -11.901127815246582

Token 2623: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -6.468279752880335e-05
    2. 'nodes' → logprob: -10.000064849853516
    3. '(' → logprob: -11.250064849853516
    4. ' nodes' → logprob: -13.375064849853516
    5. '(
' → logprob: -13.500064849853516
    6. '	nodes' → logprob: -14.000064849853516
    7. '(points' → logprob: -14.375064849853516
    8. '   ' → logprob: -14.750064849853516
    9. '(j' → logprob: -14.875064849853516
    10. ' ' → logprob: -15.000064849853516

Token 2624: ')):
' (ID: 22530)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48282089829444885
    2. ' -' → logprob: -0.9828208684921265
    3. ')' → logprob: -5.232820987701416
    4. '+' → logprob: -6.357820987701416
    5. ' ' → logprob: -7.357820987701416
    6. '   ' → logprob: -7.607820987701416
    7. ')-' → logprob: -8.732820510864258
    8. '):
' → logprob: -9.607820510864258
    9. ' +' → logprob: -9.982820510864258
    10. '1' → logprob: -10.232820510864258

Token 2625: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3671237826347351
    2. '               ' → logprob: -1.2421238422393799
    3. ' if' → logprob: -4.492123603820801
    4. '```' → logprob: -5.617123603820801
    5. '                   ' → logprob: -6.742123603820801
    6. 'if' → logprob: -7.367123603820801
    7. ',' → logprob: -7.742123603820801
    8. '   ' → logprob: -8.2421236038208
    9. ' ' → logprob: -8.8671236038208
    10. '):
' → logprob: -8.9921236038208

Token 2626: ' node' (ID: 4596)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4096960723400116
    2. 'cap' → logprob: -1.409696102142334
    3. 'p' → logprob: -3.034696102142334
    4. 'x' → logprob: -4.534696102142334
    5. 'node' (adapté à ' node') → logprob: -4.534696102142334
    6. 'length' → logprob: -5.034696102142334
    7. 'capacity' → logprob: -5.909696102142334
    8. 'out' → logprob: -6.409696102142334
    9. 'curr' → logprob: -6.409696102142334
    10. 'pt' → logprob: -6.534696102142334

Token 2627: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0034741517156362534
    2. '_' → logprob: -7.003474235534668
    3. '_x' → logprob: -7.628474235534668
    4. '_idx' → logprob: -7.753474235534668
    5. '_j' → logprob: -8.128474235534668
    6. ')_' → logprob: -8.378474235534668
    7. '_index' → logprob: -8.503474235534668
    8. ' _' → logprob: -8.628474235534668
    9. '_i' → logprob: -9.003474235534668
    10. '_type' → logprob: -9.503474235534668

Token 2628: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8188612461090088
    2. '=' → logprob: -1.0688612461090088
    3. '_map' → logprob: -1.9438612461090088
    4. '=(' → logprob: -3.193861246109009
    5. ',' → logprob: -5.19386100769043
    6. '_' → logprob: -5.31886100769043
    7. '[(' → logprob: -5.44386100769043
    8. '((' → logprob: -6.06886100769043
    9. '=
' → logprob: -6.31886100769043
    10. ')' → logprob: -6.56886100769043

Token 2629: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0005535095697268844
    2. ' node' → logprob: -7.500553607940674
    3. '(node' → logprob: -14.625553131103516
    4. '2' → logprob: -17.250553131103516
    5. ' ' → logprob: -18.375553131103516
    6. '(' → logprob: -18.625553131103516
    7. '	node' → logprob: -18.750553131103516
    8. '           ' → logprob: -19.125553131103516
    9. '                   ' → logprob: -19.375553131103516
    10. '               ' → logprob: -19.500553131103516

Token 2630: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.03237780183553696
    2. '(i' → logprob: -4.28237771987915
    3. '_map' → logprob: -4.65737771987915
    4. '[(' → logprob: -5.90737771987915
    5. '(' → logprob: -6.90737771987915
    6. '[i' → logprob: -6.90737771987915
    7. ' (' → logprob: -7.40737771987915
    8. '((' → logprob: -7.53237771987915
    9. 'map' → logprob: -8.032378196716309
    10. '[
' → logprob: -8.532378196716309

Token 2631: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.015088744461536407
    2. '[(' → logprob: -5.1400885581970215
    3. ')' → logprob: -6.2650885581970215
    4. ' (' → logprob: -6.8900885581970215
    5. 'map' → logprob: -7.2650885581970215
    6. '[' → logprob: -7.2650885581970215
    7. 'Map' → logprob: -7.5150885581970215
    8. '[j' → logprob: -7.8900885581970215
    9. '(j' → logprob: -8.01508903503418
    10. '[
' → logprob: -8.01508903503418

Token 2632: '[(' (ID: 20542)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.010851851664483547
    2. '((' → logprob: -5.010851860046387
    3. '[(' → logprob: -5.635851860046387
    4. '(' → logprob: -7.635851860046387
    5. ' (' → logprob: -10.760851860046387
    6. '(
' → logprob: -10.885851860046387
    7. ',' → logprob: -11.510851860046387
    8. '[i' → logprob: -11.760851860046387
    9. '```' → logprob: -12.135851860046387
    10. '   ' → logprob: -12.510851860046387

Token 2633: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.246537173457909e-06
    2. ' i' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.750003814697266
    4. ')i' → logprob: -18.000003814697266
    5. '	i' → logprob: -18.375003814697266
    6. '_i' → logprob: -20.625003814697266
    7. ''i' → logprob: -21.375003814697266
    8. '(i' → logprob: -21.500003814697266
    9. '{i' → logprob: -21.625003814697266
    10. ',i' → logprob: -21.875003814697266

Token 2634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03367624431848526
    2. ',j' → logprob: -3.4086761474609375
    3. ' ,' → logprob: -10.783676147460938
    4. ',
' → logprob: -12.033676147460938
    5. ',n' → logprob: -14.658676147460938
    6. ' ' → logprob: -14.783676147460938
    7. 'j' → logprob: -15.158676147460938
    8. ',y' → logprob: -15.158676147460938
    9. '‌,' → logprob: -15.158676147460938
    10. '',' → logprob: -15.533676147460938

Token 2635: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8624639324116288e-06
    2. ' j' → logprob: -13.250001907348633
    3. '	j' → logprob: -16.875001907348633
    4. '$j' → logprob: -18.125001907348633
    5. ',j' → logprob: -19.000001907348633
    6. '_j' → logprob: -19.250001907348633
    7. '   ' → logprob: -20.625001907348633
    8. '[j' → logprob: -21.750001907348633
    9. ' ' → logprob: -22.125001907348633
    10. '```' → logprob: -22.375001907348633

Token 2636: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.8172628283500671
    2. ']' → logprob: -0.9422628283500671
    3. ')]' → logprob: -2.192262887954712
    4. ')' → logprob: -3.817262887954712
    5. ')]
' → logprob: -3.942262887954712
    6. '               ' → logprob: -4.567262649536133
    7. ')
' → logprob: -5.692262649536133
    8. '           ' → logprob: -7.192262649536133
    9. '                   ' → logprob: -7.817262649536133
    10. '   ' → logprob: -9.317262649536133

Token 2637: '               ' (ID: 506)
  Prédit: ' network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' network' → logprob: -0.6020593643188477
    2. ' if' → logprob: -1.6020593643188477
    3. '       ' → logprob: -2.6020593643188477
    4. 'network' → logprob: -2.6020593643188477
    5. '                   ' → logprob: -3.2270593643188477
    6. '           ' → logprob: -3.2270593643188477
    7. '               ' → logprob: -4.852059364318848
    8. 'if' → logprob: -5.227059364318848
    9. ',' → logprob: -6.352059364318848
    10. '```' → logprob: -7.102059364318848

Token 2638: ' #' (ID: 1069)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.12341147661209106
    2. 'if' → logprob: -2.7484114170074463
    3. 'capacity' → logprob: -3.3734114170074463
    4. 'network' → logprob: -4.998411655426025
    5. 'next' → logprob: -6.123411655426025
    6. 'length' → logprob: -6.123411655426025
    7. 'out' → logprob: -6.248411655426025
    8. 'right' → logprob: -6.498411655426025
    9. 'seg' → logprob: -6.998411655426025
    10. 'segment' → logprob: -7.373411655426025

Token 2639: ' Find' (ID: 9764)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.5433116555213928
    2. 'if' → logprob: -1.043311595916748
    3. 'capacity' → logprob: -3.543311595916748
    4. 'length' → logprob: -3.793311595916748
    5. 'right' → logprob: -4.918311595916748
    6. 'seg' → logprob: -5.793311595916748
    7. 'segment' → logprob: -6.168311595916748
    8. 'for' → logprob: -7.168311595916748
    9. 'x' → logprob: -7.418311595916748
    10. 'left' → logprob: -7.543311595916748

Token 2640: ' capacity' (ID: 12241)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.14475172758102417
    2. 'capacity' → logprob: -2.519751787185669
    3. 'right' → logprob: -4.64475154876709
    4. 'length' → logprob: -4.76975154876709
    5. 'node' → logprob: -5.14475154876709
    6. 'next' → logprob: -5.14475154876709
    7. 'seg' → logprob: -5.51975154876709
    8. 'out' → logprob: -6.14475154876709
    9. '(cap' → logprob: -6.26975154876709
    10. 'segment' → logprob: -6.39475154876709

Token 2641: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16004018485546112
    2. ' =' → logprob: -2.0350401401519775
    3. ' if' → logprob: -4.910040378570557
    4. 'if' → logprob: -5.410040378570557
    5. '=
' → logprob: -6.910040378570557
    6. ':' → logprob: -7.285040378570557
    7. '_' → logprob: -7.535040378570557
    8. '               ' → logprob: -7.535040378570557
    9. ' ' → logprob: -7.535040378570557
    10. 'for' → logprob: -7.660040378570557

Token 2642: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.390006959438324
    2. 'cap' → logprob: -1.6400070190429688
    3. ' if' → logprob: -2.1400070190429688
    4. ' cap' → logprob: -4.640007019042969
    5. '               ' → logprob: -7.015007019042969
    6. 'capacity' → logprob: -8.015007019042969
    7. 'c' → logprob: -8.765007019042969
    8. 'next' → logprob: -9.265007019042969
    9. ' capacity' → logprob: -10.015007019042969
    10. '```' → logprob: -10.265007019042969

Token 2643: ' point' (ID: 2438)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004404482431709766
    2. ' j' → logprob: -6.004404544830322
    3. 'i' → logprob: -7.629404544830322
    4. 'the' → logprob: -8.004404067993164
    5. 'node' → logprob: -8.504404067993164
    6. 'capacity' → logprob: -8.879404067993164
    7. '
' → logprob: -9.504404067993164
    8. '   ' → logprob: -9.629404067993164
    9. '(j' → logprob: -9.754404067993164
    10. 'nodes' → logprob: -9.879404067993164

Token 2644: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9971984624862671
    2. 'j' → logprob: -1.747198462486267
    3. '(j' → logprob: -2.1221985816955566
    4. ' if' → logprob: -2.6221985816955566
    5. '_j' → logprob: -2.8721985816955566
    6. '[j' → logprob: -3.2471985816955566
    7. 'if' → logprob: -3.3721985816955566
    8. ' (' → logprob: -3.9971985816955566
    9. 's' → logprob: -4.247198581695557
    10. ',' → logprob: -4.497198581695557

Token 2645: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4500657916069031
    2. ' +' → logprob: -2.075065851211548
    3. '+' → logprob: -2.200065851211548
    4. 'if' → logprob: -2.325065851211548
    5. ',' → logprob: -4.700065612792969
    6. '
' → logprob: -6.075065612792969
    7. ' in' → logprob: -6.075065612792969
    8. ' ' → logprob: -6.575065612792969
    9. ':
' → logprob: -6.575065612792969
    10. ':' → logprob: -6.700065612792969

Token 2646: ' out' (ID: 842)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.8542569279670715
    2. 'if' → logprob: -1.2292568683624268
    3. 'next' → logprob: -1.7292568683624268
    4. 'cap' → logprob: -3.3542568683624268
    5. ' next' → logprob: -3.6042568683624268
    6. ' capacity' → logprob: -3.9792568683624268
    7. ' if' → logprob: -4.479257106781006
    8. 'right' → logprob: -5.229257106781006
    9. 'length' → logprob: -6.229257106781006
    10. 'x' → logprob: -6.979257106781006

Token 2647: ' capacity' (ID: 12241)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.5919770002365112
    2. '_edge' → logprob: -1.4669770002365112
    3. '_' → logprob: -2.091977119445801
    4. '_id' → logprob: -4.341977119445801
    5. '_node' → logprob: -4.341977119445801
    6. '```' → logprob: -4.466977119445801
    7. '_capacity' → logprob: -5.341977119445801
    8. '_put' → logprob: -5.591977119445801
    9. '_token' → logprob: -5.591977119445801
    10. '_edges' → logprob: -5.716977119445801

Token 2648: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40467020869255066
    2. ' is' → logprob: -1.279670238494873
    3. '=' → logprob: -3.279670238494873
    4. ':' → logprob: -5.279670238494873
    5. ' if' → logprob: -5.904670238494873
    6. ' between' → logprob: -6.154670238494873
    7. ' ' → logprob: -6.154670238494873
    8. 's' → logprob: -6.654670238494873
    9. ' for' → logprob: -7.279670238494873
    10. ' depends' → logprob: -7.279670238494873

Token 2649: ' horizontal' (ID: 25511)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -1.3773611783981323
    2. ' nodes' → logprob: -1.5023611783981323
    3. '0' → logprob: -1.7523611783981323
    4. '(nodes' → logprob: -2.002361297607422
    5. ' (' → logprob: -2.377361297607422
    6. '(network' → logprob: -3.252361297607422
    7. 'network' → logprob: -3.502361297607422
    8. '(' → logprob: -3.502361297607422
    9. ' network' → logprob: -4.502361297607422
    10. '((' → logprob: -5.502361297607422

Token 2650: ' free' (ID: 2240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8003286719322205
    2. '_segment' → logprob: -1.9253287315368652
    3. 'segment' → logprob: -2.4253287315368652
    4. ''' → logprob: -2.6753287315368652
    5. ' segment' → logprob: -2.9253287315368652
    6. ' _' → logprob: -3.0503287315368652
    7. '_j' → logprob: -3.5503287315368652
    8. '[j' → logprob: -4.425328731536865
    9. '`' → logprob: -4.425328731536865
    10. '_space' → logprob: -4.925328731536865

Token 2651: ' length' (ID: 5517)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.5151804685592651
    2. ' segment' → logprob: -1.7651804685592651
    3. '_' → logprob: -2.0151805877685547
    4. 'segment' → logprob: -3.7651805877685547
    5. ' _' → logprob: -3.8901805877685547
    6. ' space' → logprob: -4.015180587768555
    7. '_segments' → logprob: -4.640180587768555
    8. ' ' → logprob: -4.765180587768555
    9. '_space' → logprob: -5.140180587768555
    10. 'space' → logprob: -5.765180587768555

Token 2652: ' from' (ID: 591)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2626645863056183
    2. '               ' → logprob: -1.762664556503296
    3. ' =' → logprob: -3.887664556503296
    4. '                   ' → logprob: -4.762664794921875
    5. '                ' → logprob: -5.512664794921875
    6. ' +' → logprob: -5.637664794921875
    7. ' between' → logprob: -5.637664794921875
    8. 'if' → logprob: -5.637664794921875
    9. '=' → logprob: -6.012664794921875
    10. '[' → logprob: -6.262664794921875

Token 2653: ' this' (ID: 495)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.12923644483089447
    2. ' nodes' → logprob: -2.1292364597320557
    3. '(nodes' → logprob: -6.504236221313477
    4. 'the' → logprob: -7.879236221313477
    5. ' the' → logprob: -9.379236221313477
    6. 'node' → logprob: -9.504236221313477
    7. '	nodes' → logprob: -10.004236221313477
    8. '`' → logprob: -10.004236221313477
    9. 'points' → logprob: -10.254236221313477
    10. '```' → logprob: -10.254236221313477

Token 2654: ' point' (ID: 2438)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7407137155532837
    2. 'node' → logprob: -1.3657137155532837
    3. 'point' → logprob: -1.7407137155532837
    4. ' node' → logprob: -3.740713596343994
    5. ' point' → logprob: -3.990713596343994
    6. ' j' → logprob: -4.365713596343994
    7. '
' → logprob: -4.615713596343994
    8. '[j' → logprob: -4.740713596343994
    9. 'nodes' → logprob: -5.740713596343994
    10. '(j' → logprob: -5.865713596343994

Token 2655: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9241728186607361
    2. ' if' → logprob: -1.4241728782653809
    3. 'to' → logprob: -1.7991728782653809
    4. '               ' → logprob: -2.299172878265381
    5. 'if' → logprob: -3.549172878265381
    6. '+' → logprob: -3.674172878265381
    7. ' +' → logprob: -4.549172878265381
    8. ' (' → logprob: -4.549172878265381
    9. '                   ' → logprob: -5.424172878265381
    10. ',' → logprob: -6.299172878265381

Token 2656: ' next' (ID: 2613)
  Prédit: '(nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.7493550181388855
    2. 'nodes' → logprob: -1.1243550777435303
    3. '(j' → logprob: -2.7493550777435303
    4. ' (' → logprob: -2.8743550777435303
    5. ' nodes' → logprob: -3.2493550777435303
    6. '(' → logprob: -4.374354839324951
    7. '(
' → logprob: -4.749354839324951
    8. '((' → logprob: -4.874354839324951
    9. '(node' → logprob: -5.624354839324951
    10. '(next' → logprob: -6.124354839324951

Token 2657: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5413628220558167
    2. '+' → logprob: -2.541362762451172
    3. ' +' → logprob: -2.541362762451172
    4. 'if' → logprob: -2.791362762451172
    5. ' ' → logprob: -2.791362762451172
    6. ' )' → logprob: -4.041362762451172
    7. '[j' → logprob: -4.166362762451172
    8. '   ' → logprob: -4.166362762451172
    9. '               ' → logprob: -4.416362762451172
    10. '[' → logprob: -4.541362762451172

Token 2658: ' same' (ID: 2684)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.583175778388977
    2. 'nodes' → logprob: -1.708175778388977
    3. 'the' → logprob: -1.833175778388977
    4. 'i' → logprob: -3.3331756591796875
    5. ' nodes' → logprob: -4.3331756591796875
    6. ' j' → logprob: -4.5831756591796875
    7. ' the' → logprob: -4.8331756591796875
    8. '[i' → logprob: -5.0831756591796875
    9. '   ' → logprob: -5.3331756591796875
    10. '(i' → logprob: -5.3331756591796875

Token 2659: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.20222993195056915
    2. ' line' → logprob: -1.7022299766540527
    3. '   ' → logprob: -8.077229499816895
    4. ' ' → logprob: -8.827229499816895
    5. 'j' → logprob: -9.577229499816895
    6. '           ' → logprob: -9.577229499816895
    7. '_line' → logprob: -9.827229499816895
    8. '               ' → logprob: -10.952229499816895
    9. '  ' → logprob: -10.952229499816895
    10. ' j' → logprob: -11.077229499816895

Token 2660: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6181684732437134
    2. ' if' → logprob: -0.8681684732437134
    3. 'if' → logprob: -3.743168354034424
    4. '           ' → logprob: -5.493168354034424
    5. '                   ' → logprob: -5.868168354034424
    6. ',' → logprob: -6.243168354034424
    7. ' ' → logprob: -6.743168354034424
    8. ''' → logprob: -6.993168354034424
    9. '                ' → logprob: -7.118168354034424
    10. ' (' → logprob: -7.493168354034424

Token 2661: ' any' (ID: 1062)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.47447144985198975
    2. ' j' → logprob: -0.9744714498519897
    3. '(j' → logprob: -8.099471092224121
    4. ' (' → logprob: -10.474471092224121
    5. '```' → logprob: -11.599471092224121
    6. '(' → logprob: -11.724471092224121
    7. '    ' → logprob: -11.849471092224121
    8. '   ' → logprob: -11.849471092224121
    9. 'not' → logprob: -11.974471092224121
    10. ' ' → logprob: -12.099471092224121

Token 2662: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02435869164764881
    2. ' if' → logprob: -4.149358749389648
    3. '           ' → logprob: -6.024358749389648
    4. ',' → logprob: -6.774358749389648
    5. '                   ' → logprob: -6.899358749389648
    6. '
' → logprob: -7.274358749389648
    7. ' ' → logprob: -8.149358749389648
    8. 'if' → logprob: -8.149358749389648
    9. ' 
' → logprob: -8.149358749389648
    10. '                ' → logprob: -8.399358749389648

Token 2663: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008120538666844368
    2. '                   ' → logprob: -5.383120536804199
    3. '                ' → logprob: -6.883120536804199
    4. '           ' → logprob: -7.508120536804199
    5. ' if' → logprob: -7.508120536804199
    6. ' 
' → logprob: -8.2581205368042
    7. '                
' → logprob: -8.7581205368042
    8. '                               ' → logprob: -9.1331205368042
    9. ''' → logprob: -9.1331205368042
    10. '                       ' → logprob: -9.2581205368042

Token 2664: ' cap' (ID: 2328)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8473334908485413
    2. 'if' → logprob: -1.7223334312438965
    3. '               ' → logprob: -2.0973334312438965
    4. ' cap' → logprob: -2.3473334312438965
    5. 'cap' (adapté à ' cap') → logprob: -2.7223334312438965
    6. 'capacity' → logprob: -3.9723334312438965
    7. ' capacity' → logprob: -4.3473334312438965
    8. '                ' → logprob: -4.3473334312438965
    9. ' ' → logprob: -4.4723334312438965
    10. ' ' → logprob: -4.4723334312438965

Token 2665: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761802792549133
    2. ' =' → logprob: -0.8261802792549133
    3. 's' → logprob: -9.826180458068848
    4. '=
' → logprob: -10.576180458068848
    5. '_' → logprob: -10.701180458068848
    6. 'if' → logprob: -10.826180458068848
    7. ':' → logprob: -10.951180458068848
    8. ' =
' → logprob: -10.951180458068848
    9. '               ' → logprob: -11.076180458068848
    10. ' ' → logprob: -11.326180458068848

Token 2666: ' ' (ID: 220)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.9716073274612427
    2. '0' → logprob: -1.0966073274612427
    3. '(nodes' → logprob: -1.8466073274612427
    4. ' nodes' → logprob: -2.096607208251953
    5. ' (' → logprob: -5.721607208251953
    6. ' ' → logprob: -6.346607208251953
    7. '(' → logprob: -6.596607208251953
    8. '((' → logprob: -8.846607208251953
    9. '1' → logprob: -10.221607208251953
    10. '(
' → logprob: -10.721607208251953

Token 2667: '0' (ID: 15)
  Prédit: '(nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.7092670798301697
    2. 'nodes' → logprob: -1.2092671394348145
    3. '0' → logprob: -1.5842671394348145
    4. '(' → logprob: -5.9592671394348145
    5. '((' → logprob: -7.4592671394348145
    6. ' nodes' → logprob: -7.7092671394348145
    7. '(
' → logprob: -8.084266662597656
    8. 'float' → logprob: -9.209266662597656
    9. ' (' → logprob: -9.334266662597656
    10. '(network' → logprob: -9.459266662597656

Token 2668: '.' (ID: 13)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.043935343623161316
    2. 'if' → logprob: -4.168935298919678
    3. '               ' → logprob: -4.293935298919678
    4. '
' → logprob: -4.543935298919678
    5. '           ' → logprob: -7.293935298919678
    6. ' ' → logprob: -7.668935298919678
    7. '                ' → logprob: -7.668935298919678
    8. '.' → logprob: -7.918935298919678
    9. '                
' → logprob: -8.293935775756836
    10. ' 
' → logprob: -8.543935775756836

Token 2669: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003250319976359606
    2. 'if' → logprob: -6.0032501220703125
    3. '5' → logprob: -7.8782501220703125
    4. ' if' → logprob: -9.128250122070312
    5. 'j' → logprob: -9.753250122070312
    6. '000' → logprob: -9.878250122070312
    7. '1' → logprob: -10.003250122070312
    8. '       ' → logprob: -10.378250122070312
    9. '   ' → logprob: -10.503250122070312
    10. '```' → logprob: -11.003250122070312

Token 2670: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6042530536651611
    2. ' if' → logprob: -0.8542530536651611
    3. 'if' → logprob: -3.729253053665161
    4. '               ' → logprob: -6.479252815246582
    5. ' 
' → logprob: -7.104252815246582
    6. '           ' → logprob: -7.854252815246582
    7. ' ' → logprob: -8.229252815246582
    8. '                   ' → logprob: -8.729252815246582
    9. '       ' → logprob: -9.104252815246582
    10. '  
' → logprob: -9.104252815246582

Token 2671: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5693377256393433
    2. ' if' → logprob: -1.3193377256393433
    3. '
' → logprob: -2.819337844848633
    4. ' 
' → logprob: -3.444337844848633
    5. ' ' → logprob: -3.569337844848633
    6. '                ' → logprob: -4.194337844848633
    7. '                   ' → logprob: -4.444337844848633
    8. '           ' → logprob: -5.194337844848633
    9. '       ' → logprob: -5.444337844848633
    10. 'if' → logprob: -6.319337844848633

Token 2672: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3871365785598755
    2. ' if' → logprob: -1.1371365785598755
    3. '               ' → logprob: -8.262136459350586
    4. 'for' → logprob: -12.512136459350586
    5. ' ' → logprob: -14.387136459350586
    6. '	if' → logprob: -14.512136459350586
    7. 'j' → logprob: -14.887136459350586
    8. '                   ' → logprob: -14.887136459350586
    9. ' for' → logprob: -15.012136459350586
    10. '                ' → logprob: -15.137136459350586

Token 2673: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008640216663479805
    2. ' j' → logprob: -4.758640289306641
    3. '   ' → logprob: -11.25864028930664
    4. '(j' → logprob: -12.38364028930664
    5. 'i' → logprob: -12.50864028930664
    6. ' ' → logprob: -13.38364028930664
    7. '    ' → logprob: -14.00864028930664
    8. '	j' → logprob: -14.25864028930664
    9. '  ' → logprob: -14.63364028930664
    10. '$j' → logprob: -15.25864028930664

Token 2674: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16177809238433838
    2. ' +' → logprob: -2.036777973175049
    3. ' <' → logprob: -4.161777973175049
    4. '<' → logprob: -5.786777973175049
    5. '<len' → logprob: -8.786778450012207
    6. ' ' → logprob: -10.411778450012207
    7. '+j' → logprob: -11.036778450012207
    8. '+
' → logprob: -11.286778450012207
    9. '[' → logprob: -11.536778450012207
    10. '<n' → logprob: -12.036778450012207

Token 2675: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.750096321105957
    4. '```' → logprob: -16.750097274780273
    5. '  ' → logprob: -17.625097274780273
    6. '=' → logprob: -18.125097274780273
    7. '0' → logprob: -18.250097274780273
    8. '2' → logprob: -18.375097274780273
    9. '+' → logprob: -18.625097274780273
    10. '
' → logprob: -19.000097274780273

Token 2676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '0' → logprob: -16.62500762939453
    4. '```' → logprob: -16.62500762939453
    5. '   ' → logprob: -17.50000762939453
    6. '
' → logprob: -18.12500762939453
    7. '<|end|>' → logprob: -18.25000762939453
    8. '+' → logprob: -18.75000762939453
    9. '2' → logprob: -19.00000762939453
    10. '  ' → logprob: -19.12500762939453

Token 2677: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4802387058734894
    2. ' <' → logprob: -0.980238676071167
    3. '<len' → logprob: -5.230238914489746
    4. '<|end|>' → logprob: -8.105238914489746
    5. '<n' → logprob: -9.105238914489746
    6. '<size' → logprob: -9.480238914489746
    7. ')<' → logprob: -9.730238914489746
    8. ')' → logprob: -9.980238914489746
    9. '<num' → logprob: -10.730238914489746
    10. 'in' → logprob: -10.855238914489746

Token 2678: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.8087270038668066e-05
    2. ' len' → logprob: -10.500027656555176
    3. '(len' → logprob: -14.500027656555176
    4. '[len' → logprob: -17.875028610229492
    5. ' ' → logprob: -18.250028610229492
    6. '   ' → logprob: -18.250028610229492
    7. '<len' → logprob: -18.375028610229492
    8. '=len' → logprob: -18.500028610229492
    9. '	len' → logprob: -19.375028610229492
    10. '
' → logprob: -20.250028610229492

Token 2679: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -9.877503907773644e-05
    2. 'nodes' → logprob: -9.250099182128906
    3. '(' → logprob: -13.750099182128906
    4. '(lines' → logprob: -14.625099182128906
    5. ' nodes' → logprob: -14.750099182128906
    6. '(i' → logprob: -15.250099182128906
    7. '	nodes' → logprob: -15.625099182128906
    8. ' (' → logprob: -15.750099182128906
    9. '(tokens' → logprob: -16.375099182128906
    10. '(
' → logprob: -16.875099182128906

Token 2680: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.37968379259109497
    2. ')' → logprob: -2.00468373298645
    3. ':
' → logprob: -2.62968373298645
    4. ']:
' → logprob: -2.87968373298645
    5. ']' → logprob: -3.62968373298645
    6. '][' → logprob: -5.129683971405029
    7. '+' → logprob: -5.754683971405029
    8. '):' → logprob: -5.754683971405029
    9. ':' → logprob: -5.879683971405029
    10. ',' → logprob: -6.004683971405029

Token 2681: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0143611431121826
    2. ' cap' → logprob: -1.0143611431121826
    3. 'cap' → logprob: -1.3893611431121826
    4. '(cap' → logprob: -4.389361381530762
    5. ' =' → logprob: -5.764361381530762
    6. '               ' → logprob: -6.139361381530762
    7. '                               ' → logprob: -6.264361381530762
    8. '=' → logprob: -6.389361381530762
    9. '                       ' → logprob: -7.264361381530762
    10. '                           ' → logprob: -7.514361381530762

Token 2682: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' (adapté à ' cap') → logprob: -3.128163257315464e-07
    2. '                   ' → logprob: -16.0
    3. ' cap' → logprob: -16.875
    4. '               ' → logprob: -18.125
    5. '   ' → logprob: -18.875
    6. 'seg' → logprob: -19.0
    7. 'if' → logprob: -19.0
    8. '                       ' → logprob: -20.125
    9. 'caps' → logprob: -20.125
    10. '           ' → logprob: -20.25

Token 2683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22542499005794525
    2. ' =' → logprob: -1.6004250049591064
    3. '+=' → logprob: -13.100424766540527
    4. '                   ' → logprob: -13.225424766540527
    5. ' +=' → logprob: -13.350424766540527
    6. '=node' → logprob: -13.350424766540527
    7. '               ' → logprob: -14.350424766540527
    8. '                       ' → logprob: -14.475424766540527
    9. '_nodes' → logprob: -14.600424766540527
    10. '.=' → logprob: -14.725424766540527

Token 2684: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.0032019545324146748
    2. ' nodes' → logprob: -5.753201961517334
    3. '(nodes' → logprob: -11.253201484680176
    4. '   ' → logprob: -11.628201484680176
    5. '	nodes' → logprob: -13.628201484680176
    6. 'points' → logprob: -15.128201484680176
    7. 'max' → logprob: -15.378201484680176
    8. '       ' → logprob: -15.753201484680176
    9. ' ' → logprob: -16.253202438354492
    10. '           ' → logprob: -16.628202438354492

Token 2685: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.026631638407707214
    2. '[i' → logprob: -3.6516315937042236
    3. '[' → logprob: -8.776631355285645
    4. '[
' → logprob: -9.401631355285645
    5. '[(' → logprob: -11.151631355285645
    6. '```' → logprob: -11.276631355285645
    7. '
' → logprob: -11.401631355285645
    8. '(j' → logprob: -11.651631355285645
    9. '[p' → logprob: -11.651631355285645
    10. '   ' → logprob: -12.151631355285645

Token 2686: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03873727098107338
    2. '[j' → logprob: -3.4137372970581055
    3. ' +' → logprob: -5.6637372970581055
    4. '+j' → logprob: -7.6637372970581055
    5. '[i' → logprob: -7.7887372970581055
    6. '1' → logprob: -8.538737297058105
    7. '(j' → logprob: -8.788737297058105
    8. '[' → logprob: -9.163737297058105
    9. '   ' → logprob: -9.538737297058105
    10. '[next' → logprob: -9.913737297058105

Token 2687: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027301779482513666
    2. ' ' → logprob: -8.250272750854492
    3. '   ' → logprob: -11.750272750854492
    4. '```' → logprob: -14.437772750854492
    5. '0' → logprob: -14.812772750854492
    6. '  ' → logprob: -14.812772750854492
    7. '
' → logprob: -14.875272750854492
    8. '     ' → logprob: -15.000272750854492
    9. '       ' → logprob: -15.062772750854492
    10. '    ' → logprob: -15.625272750854492

Token 2688: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.097437315271236e-05
    2. ' ' → logprob: -10.12505054473877
    3. '0' → logprob: -12.18755054473877
    4. '   ' → logprob: -13.18755054473877
    5. '
' → logprob: -14.81255054473877
    6. '  ' → logprob: -15.06255054473877
    7. '```' → logprob: -15.12505054473877
    8. '100' → logprob: -15.68755054473877
    9. ' ' → logprob: -15.87505054473877
    10. '       ' → logprob: -15.87505054473877

Token 2689: '].' (ID: 1651)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.016714533790946007
    2. '].' → logprob: -4.516714572906494
    3. ').' → logprob: -5.391714572906494
    4. '.' → logprob: -7.266714572906494
    5. ' .' → logprob: -9.016714096069336
    6. '}.' → logprob: -9.141714096069336
    7. '
' → logprob: -9.641714096069336
    8. '[' → logprob: -10.891714096069336
    9. '   ' → logprob: -11.391714096069336
    10. ' ' → logprob: -11.641714096069336

Token 2690: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.546478935983032e-05
    2. '.x' → logprob: -10.875025749206543
    3. 'cap' → logprob: -13.125025749206543
    4. '```' → logprob: -13.125025749206543
    5. ' x' → logprob: -14.875025749206543
    6. '   ' → logprob: -14.875025749206543
    7. '0' → logprob: -15.125025749206543
    8. '_x' → logprob: -16.000024795532227
    9. '[' → logprob: -16.000024795532227
    10. '.' → logprob: -16.250024795532227

Token 2691: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.693200409412384
    2. ' -' → logprob: -0.693200409412384
    3. '<|end|>' → logprob: -10.94320011138916
    4. ' ' → logprob: -11.69320011138916
    5. '[' → logprob: -12.31820011138916
    6. '-cap' → logprob: -12.69320011138916
    7. '-p' → logprob: -12.94320011138916
    8. ')' → logprob: -12.94320011138916
    9. '-j' → logprob: -13.06820011138916
    10. ' ' → logprob: -13.31820011138916

Token 2692: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.00016313401283696294
    2. ' nodes' → logprob: -8.750163078308105
    3. 'p' → logprob: -12.500163078308105
    4. '	nodes' → logprob: -15.125163078308105
    5. 'points' → logprob: -15.250163078308105
    6. '(nodes' → logprob: -15.750163078308105
    7. '   ' → logprob: -16.375164031982422
    8. 'node' → logprob: -16.500164031982422
    9. '               ' → logprob: -18.000164031982422
    10. '                   ' → logprob: -18.750164031982422

Token 2693: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005291749723255634
    2. 'j' → logprob: -5.255291938781738
    3. 'nodes' → logprob: -10.005291938781738
    4. '[i' → logprob: -12.255291938781738
    5. '[' → logprob: -12.880291938781738
    6. '(j' → logprob: -13.255291938781738
    7. '[(' → logprob: -13.880291938781738
    8. '[
' → logprob: -14.630291938781738
    9. '
' → logprob: -14.880291938781738
    10. '[n' → logprob: -14.880291938781738

Token 2694: '].' (ID: 1651)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.4382864832878113
    2. '[j' → logprob: -1.438286542892456
    3. '.j' → logprob: -2.188286542892456
    4. '.' → logprob: -5.688286304473877
    5. '[' → logprob: -7.188286304473877
    6. ' .' → logprob: -7.938286304473877
    7. '```' → logprob: -8.313286781311035
    8. 'j' → logprob: -8.688286781311035
    9. '].' → logprob: -9.063286781311035
    10. '(j' → logprob: -9.563286781311035

Token 2695: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.625866030342877e-05
    2. '0' → logprob: -9.750085830688477
    3. 'j' → logprob: -11.125085830688477
    4. '.x' → logprob: -11.625085830688477
    5. 'p' → logprob: -13.125085830688477
    6. ' x' → logprob: -14.375085830688477
    7. '1' → logprob: -15.250085830688477
    8. 'cap' → logprob: -15.250085830688477
    9. '```' → logprob: -15.375085830688477
    10. '_x' → logprob: -16.250085830688477

Token 2696: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04624779894948006
    2. '<|end|>' → logprob: -3.171247720718384
    3. ')' → logprob: -6.421247959136963
    4. '.' → logprob: -7.421247959136963
    5. '                   ' → logprob: -8.046247482299805
    6. '<|end|>' → logprob: -8.296247482299805
    7. '           ' → logprob: -8.546247482299805
    8. '
' → logprob: -10.296247482299805
    9. '              ' → logprob: -10.546247482299805
    10. '                
' → logprob: -10.546247482299805

Token 2697: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013196938671171665
    2. '                   ' → logprob: -5.01319694519043
    3. '
' → logprob: -5.26319694519043
    4. '                
' → logprob: -7.51319694519043
    5. '           ' → logprob: -8.51319694519043
    6. '                    
' → logprob: -8.76319694519043
    7. '                       ' → logprob: -9.26319694519043
    8. ')
' → logprob: -10.51319694519043
    9. '       ' → logprob: -10.51319694519043
    10. ')' → logprob: -10.63819694519043

Token 2698: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10919146984815598
    2. 'network' → logprob: -3.234191417694092
    3. '               ' → logprob: -3.359191417694092
    4. '                   ' → logprob: -3.734191417694092
    5. ' if' → logprob: -5.359191417694092
    6. 'cap' → logprob: -8.48419189453125
    7. 'net' → logprob: -8.85919189453125
    8. 'node' → logprob: -9.23419189453125
    9. '           ' → logprob: -9.48419189453125
    10. ' network' → logprob: -9.98419189453125

Token 2699: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.0003032881941180676
    2. ' cap' → logprob: -8.250303268432617
    3. 'abs' → logprob: -10.375303268432617
    4. '   ' → logprob: -11.875303268432617
    5. 'j' → logprob: -13.250303268432617
    6. '           ' → logprob: -14.375303268432617
    7. '                   ' → logprob: -15.000303268432617
    8. ' ' → logprob: -15.750303268432617
    9. '       ' → logprob: -15.875303268432617
    10. '(cap' → logprob: -15.875303268432617

Token 2700: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2825455069541931
    2. ' >' → logprob: -2.532545566558838
    3. '<' → logprob: -2.657545566558838
    4. '<=' → logprob: -2.782545566558838
    5. ' <=' → logprob: -4.032545566558838
    6. ' <' → logprob: -4.282545566558838
    7. '>=' → logprob: -5.907545566558838
    8. ' >=' → logprob: -7.907545566558838
    9. '           ' → logprob: -11.65754508972168
    10. '   ' → logprob: -11.90754508972168

Token 2701: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018432965502142906
    2. '-' → logprob: -4.393433094024658
    3. '0' → logprob: -5.143433094024658
    4. ' ' → logprob: -10.2684326171875
    5. ' -' → logprob: -10.8934326171875
    6. '   ' → logprob: -11.1434326171875
    7. '       ' → logprob: -15.8934326171875
    8. '  ' → logprob: -16.1434326171875
    9. '           ' → logprob: -16.5184326171875
    10. '(' → logprob: -16.8934326171875

Token 2702: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47738075256347656
    2. '-' → logprob: -0.9773807525634766
    3. '0' → logprob: -5.727380752563477
    4. ' -' → logprob: -10.227380752563477
    5. ' ' → logprob: -12.477380752563477
    6. '   ' → logprob: -13.352380752563477
    7. '−' → logprob: -15.227380752563477
    8. '
' → logprob: -16.102380752563477
    9. '-(' → logprob: -16.477380752563477
    10. '-e' → logprob: -16.602380752563477

Token 2703: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5084047317504883
    2. '1' → logprob: -2.1334047317504883
    3. ':' → logprob: -2.1334047317504883
    4. '0' → logprob: -3.3834047317504883
    5. '               ' → logprob: -3.5084047317504883
    6. '                   ' → logprob: -3.5084047317504883
    7. '.' → logprob: -3.8834047317504883
    8. ':
' → logprob: -3.8834047317504883
    9. '+' → logprob: -4.883404731750488
    10. '=' → logprob: -5.508404731750488

Token 2704: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8009414672851562
    2. '                       ' → logprob: -1.0509414672851562
    3. '0' → logprob: -1.6759414672851562
    4. '               ' → logprob: -5.425941467285156
    5. '                           ' → logprob: -5.675941467285156
    6. '                               ' → logprob: -6.675941467285156
    7. '                    ' → logprob: -6.800941467285156
    8. '1' → logprob: -7.550941467285156
    9. '                        
' → logprob: -7.550941467285156
    10. ':
' → logprob: -7.675941467285156

Token 2705: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' (adapté à ' cap') → logprob: -0.04622367024421692
    2. '0' → logprob: -3.5462236404418945
    3. 'continue' → logprob: -4.7962236404418945
    4. ' cap' → logprob: -4.9212236404418945
    5. '                   ' → logprob: -7.7962236404418945
    6. '                       ' → logprob: -9.171223640441895
    7. ' continue' → logprob: -9.296223640441895
    8. '                           ' → logprob: -10.046223640441895
    9. 'break' → logprob: -10.421223640441895
    10. '```' → logprob: -10.421223640441895

Token 2706: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008055794751271605
    2. ' =' → logprob: -7.125805377960205
    3. '*=' → logprob: -15.125805854797363
    4. '=
' → logprob: -15.375805854797363
    5. '+=' → logprob: -15.500805854797363
    6. '                       ' → logprob: -16.000804901123047
    7. '.=' → logprob: -16.250804901123047
    8. '                   ' → logprob: -16.250804901123047
    9. '           ' → logprob: -16.625804901123047
    10. '                           ' → logprob: -16.625804901123047

Token 2707: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.375006675720215
    4. '1' → logprob: -15.125006675720215
    5. ' ' → logprob: -17.8125057220459
    6. '                   ' → logprob: -18.0000057220459
    7. '```' → logprob: -18.2500057220459
    8. '       ' → logprob: -18.4375057220459
    9. '=' → logprob: -18.6875057220459
    10. '           ' → logprob: -18.7500057220459

Token 2708: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '1' → logprob: -15.375001907348633
    4. '   ' → logprob: -17.000001907348633
    5. '=' → logprob: -18.375001907348633
    6. '000' → logprob: -19.125001907348633
    7. '       ' → logprob: -19.250001907348633
    8. '```' → logprob: -19.250001907348633
    9. '-' → logprob: -19.500001907348633
    10. '           ' → logprob: -19.625001907348633

Token 2709: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.93710636976175e-05
    2. '               ' → logprob: -9.750099182128906
    3. '                   ' → logprob: -11.125099182128906
    4. '.
' → logprob: -11.875099182128906
    5. '
' → logprob: -12.000099182128906
    6. '                       ' → logprob: -12.625099182128906
    7. '<|end|>' → logprob: -12.750099182128906
    8. ')' → logprob: -13.250099182128906
    9. '                        
' → logprob: -13.875099182128906
    10. '```' → logprob: -14.000099182128906

Token 2710: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0055455975234508514
    2. '
' → logprob: -5.630545616149902
    3. '                   ' → logprob: -7.130545616149902
    4. '                
' → logprob: -7.255545616149902
    5. '           ' → logprob: -8.380545616149902
    6. '                ' → logprob: -10.380545616149902
    7. '```' → logprob: -10.630545616149902
    8. '                        
' → logprob: -10.755545616149902
    9. '    
' → logprob: -11.005545616149902
    10. '                    
' → logprob: -11.005545616149902

Token 2711: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0357399508357048
    2. 'network' → logprob: -3.4107398986816406
    3. ' network' → logprob: -7.410739898681641
    4. '
' → logprob: -7.535739898681641
    5. 'node' → logprob: -7.535739898681641
    6. '           ' → logprob: -8.91073989868164
    7. '                   ' → logprob: -9.28573989868164
    8. 'net' → logprob: -9.66073989868164
    9. '       ' → logprob: -10.03573989868164
    10. 'edge' → logprob: -10.41073989868164

Token 2712: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.05686117708683014
    2. ' cap' → logprob: -3.806861162185669
    3. 'i' → logprob: -4.056861400604248
    4. 'j' → logprob: -4.556861400604248
    5. 'abs' → logprob: -6.431861400604248
    6. 'True' → logprob: -6.931861400604248
    7. 'p' → logprob: -7.306861400604248
    8. ' j' → logprob: -7.556861400604248
    9. ' i' → logprob: -8.43186092376709
    10. '   ' → logprob: -8.68186092376709

Token 2713: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2519412040710449
    2. ' >' → logprob: -1.501941204071045
    3. ':' → logprob: -12.876941680908203
    4. '>
' → logprob: -13.001941680908203
    5. '   ' → logprob: -13.251941680908203
    6. ' >
' → logprob: -13.876941680908203
    7. '>=' → logprob: -14.251941680908203
    8. ' >=' → logprob: -14.251941680908203
    9. '=' → logprob: -14.501941680908203
    10. ' ' → logprob: -15.001941680908203

Token 2714: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0066606695763766766
    2. '0' → logprob: -5.131660461425781
    3. ' ' → logprob: -7.256660461425781
    4. '   ' → logprob: -10.631660461425781
    5. '  ' → logprob: -13.631660461425781
    6. '
' → logprob: -14.881660461425781
    7. '```' → logprob: -16.00666046142578
    8. '    ' → logprob: -16.75666046142578
    9. '       ' → logprob: -16.88166046142578
    10. '           ' → logprob: -17.13166046142578

Token 2715: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008065330912359059
    2. '0' → logprob: -7.1258063316345215
    3. ' ' → logprob: -13.75080680847168
    4. '
' → logprob: -14.62580680847168
    5. '   ' → logprob: -14.87580680847168
    6. '```' → logprob: -16.62580680847168
    7. '`' → logprob: -18.37580680847168
    8. '    
' → logprob: -18.62580680847168
    9. ' ' → logprob: -18.75080680847168
    10. '  ' → logprob: -18.75080680847168

Token 2716: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04324352741241455
    2. '-' → logprob: -3.168243408203125
    3. ' -' → logprob: -8.668243408203125
    4. '-e' → logprob: -9.793243408203125
    5. '.' → logprob: -12.168243408203125
    6. '   ' → logprob: -12.418243408203125
    7. '           ' → logprob: -12.793243408203125
    8. '       ' → logprob: -13.918243408203125
    9. '
' → logprob: -14.168243408203125
    10. '               ' → logprob: -14.793243408203125

Token 2717: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. ' -' → logprob: -15.875
    3. '```' → logprob: -17.375
    4. '15' → logprob: -18.125
    5. '-
' → logprob: -18.625
    6. '14' → logprob: -18.75
    7. 'e' → logprob: -19.0
    8. '
' → logprob: -19.0
    9. '**' → logprob: -19.75
    10. '``' → logprob: -19.875

Token 2718: '15' (ID: 1055)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.30723100900650024
    2. '15' → logprob: -1.4322309494018555
    3. '12' → logprob: -3.9322309494018555
    4. '10' → logprob: -5.3072309494018555
    5. '13' → logprob: -7.5572309494018555
    6. '9' → logprob: -8.057230949401855
    7. '8' → logprob: -8.557230949401855
    8. '-' → logprob: -9.682230949401855
    9. '11' → logprob: -9.682230949401855
    10. '7' → logprob: -10.932230949401855

Token 2719: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22616013884544373
    2. ':' → logprob: -1.6011601686477661
    3. '                   ' → logprob: -7.726160049438477
    4. '           ' → logprob: -8.851160049438477
    5. '               ' → logprob: -10.226160049438477
    6. '):
' → logprob: -10.226160049438477
    7. ':
' → logprob: -10.476160049438477
    8. '                       ' → logprob: -11.101160049438477
    9. ',' → logprob: -11.226160049438477
    10. '                           ' → logprob: -11.476160049438477

Token 2720: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05379895865917206
    2. '           ' → logprob: -3.3037989139556885
    3. 'network' → logprob: -4.303799152374268
    4. ' network' → logprob: -6.553799152374268
    5. '               ' → logprob: -7.553799152374268
    6. '
' → logprob: -9.92879867553711
    7. 'net' → logprob: -10.30379867553711
    8. '                       ' → logprob: -10.92879867553711
    9. '```' → logprob: -11.30379867553711
    10. '   ' → logprob: -11.42879867553711

Token 2721: ' #' (ID: 1069)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.02299853228032589
    2. ' network' → logprob: -4.147998332977295
    3. '                   ' → logprob: -5.022998332977295
    4. '   ' → logprob: -9.022998809814453
    5. 'node' → logprob: -9.272998809814453
    6. '               ' → logprob: -9.647998809814453
    7. '           ' → logprob: -9.897998809814453
    8. 'net' → logprob: -11.397998809814453
    9. ' ' → logprob: -12.397998809814453
    10. '                       ' → logprob: -13.272998809814453

Token 2722: ' Add' (ID: 4063)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.0028785800095647573
    2. '                   ' → logprob: -6.627878665924072
    3. '               ' → logprob: -7.502878665924072
    4. ' network' → logprob: -8.002878189086914
    5. 'node' → logprob: -8.127878189086914
    6. 'in' → logprob: -8.877878189086914
    7. '           ' → logprob: -8.877878189086914
    8. 'u' → logprob: -10.627878189086914
    9. 'out' → logprob: -10.627878189086914
    10. '   ' → logprob: -11.252878189086914

Token 2723: ' edge' (ID: 11165)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.0005624461336992681
    2. ' network' → logprob: -7.62556266784668
    3. '(network' → logprob: -10.12556266784668
    4. 'node' → logprob: -10.87556266784668
    5. '           ' → logprob: -12.00056266784668
    6. '               ' → logprob: -12.87556266784668
    7. '                   ' → logprob: -13.12556266784668
    8. '   ' → logprob: -13.50056266784668
    9. ' (' → logprob: -13.87556266784668
    10. 'edge' → logprob: -14.00056266784668

Token 2724: ' in' (ID: 306)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.01279368530958891
    2. '(network' → logprob: -4.63779354095459
    3. '                   ' → logprob: -6.38779354095459
    4. '               ' → logprob: -7.38779354095459
    5. ' network' → logprob: -8.13779354095459
    6. '           ' → logprob: -8.51279354095459
    7. 'node' → logprob: -9.63779354095459
    8. 'from' → logprob: -9.63779354095459
    9. '   ' → logprob: -10.26279354095459
    10. '                       ' → logprob: -10.63779354095459

Token 2725: '->' (ID: 609)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.26132363080978394
    2. 'node' → logprob: -2.6363236904144287
    3. '               ' → logprob: -3.0113236904144287
    4. 'network' → logprob: -3.6363236904144287
    5. '           ' → logprob: -4.13632345199585
    6. '(network' → logprob: -4.26132345199585
    7. '       ' → logprob: -4.76132345199585
    8. ' =' → logprob: -5.01132345199585
    9. 't' → logprob: -5.13632345199585
    10. '[node' → logprob: -5.26132345199585

Token 2726: 'out' (ID: 468)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.017298530787229538
    2. '(node' → logprob: -5.017298698425293
    3. '2' → logprob: -5.392298698425293
    4. ' node' → logprob: -5.392298698425293
    5. '   ' → logprob: -8.392298698425293
    6. '(' → logprob: -8.392298698425293
    7. 'out' → logprob: -8.642298698425293
    8. 'network' → logprob: -8.642298698425293
    9. '               ' → logprob: -8.892298698425293
    10. '           ' → logprob: -9.017298698425293

Token 2727: ' with' (ID: 483)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.15876509249210358
    2. ' network' → logprob: -2.5337650775909424
    3. '(network' → logprob: -3.0337650775909424
    4. 'node' → logprob: -4.9087653160095215
    5. '               ' → logprob: -5.4087653160095215
    6. '                   ' → logprob: -6.0337653160095215
    7. '(node' → logprob: -6.2837653160095215
    8. ' (' → logprob: -7.4087653160095215
    9. ',' → logprob: -7.6587653160095215
    10. ' node' → logprob: -7.7837653160095215

Token 2728: ' capacity' (ID: 12241)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.00016468366084154695
    2. ' cap' → logprob: -8.875164985656738
    3. '   ' → logprob: -11.750164985656738
    4. 'float' → logprob: -12.000164985656738
    5. 'capacity' → logprob: -12.250164985656738
    6. '                   ' → logprob: -13.875164985656738
    7. '(cap' → logprob: -14.250164985656738
    8. '               ' → logprob: -14.250164985656738
    9. '           ' → logprob: -14.375164985656738
    10. '       ' → logprob: -15.125164985656738

Token 2729: ' =' (ID: 314)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6871801614761353
    2. '(node' → logprob: -1.1871801614761353
    3. '(' → logprob: -2.0621800422668457
    4. 'node' → logprob: -2.9371800422668457
    5. ' node' → logprob: -4.937180042266846
    6. '               ' → logprob: -6.562180042266846
    7. '                   ' → logprob: -6.937180042266846
    8. '2' → logprob: -7.437180042266846
    9. 'network' → logprob: -7.812180042266846
    10. '   ' → logprob: -8.562180519104004

Token 2730: ' segment' (ID: 14806)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cap' → logprob: -1.1472419600977446e-06
    2. ' cap' → logprob: -13.750000953674316
    3. '```' → logprob: -17.125001907348633
    4. 'float' → logprob: -18.375001907348633
    5. '(cap' → logprob: -19.625001907348633
    6. 'cat' → logprob: -21.625001907348633
    7. '`' → logprob: -22.125001907348633
    8. '
' → logprob: -22.250001907348633
    9. 'caps' → logprob: -22.250001907348633
    10. 'c' → logprob: -22.375001907348633

Token 2731: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.2112302780151367
    2. '_cap' → logprob: -1.2112302780151367
    3. 'cap' → logprob: -1.3362302780151367
    4. ' cap' → logprob: -3.2112302780151367
    5. 'length' → logprob: -3.4612302780151367
    6. '[j' → logprob: -3.8362302780151367
    7. '_capacity' → logprob: -4.336230278015137
    8. ' length' → logprob: -4.586230278015137
    9. '(cap' → logprob: -4.586230278015137
    10. 'capacity' → logprob: -5.211230278015137

Token 2732: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8717385530471802
    2. '       ' → logprob: -1.6217385530471802
    3. '                   ' → logprob: -1.8717385530471802
    4. 'network' → logprob: -2.6217384338378906
    5. '(network' → logprob: -2.7467384338378906
    6. '           ' → logprob: -3.1217384338378906
    7. ',' → logprob: -3.8717384338378906
    8. '
' → logprob: -4.371738433837891
    9. ':
' → logprob: -5.621738433837891
    10. ' network' → logprob: -5.746738433837891

Token 2733: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46726611256599426
    2. '                   ' → logprob: -1.3422660827636719
    3. 'network' → logprob: -2.842266082763672
    4. '               ' → logprob: -3.217266082763672
    5. ' network' → logprob: -4.717266082763672
    6. '
' → logprob: -5.967266082763672
    7. '(network' → logprob: -6.967266082763672
    8. '       ' → logprob: -7.967266082763672
    9. '                       ' → logprob: -7.967266082763672
    10. ',' → logprob: -8.217266082763672

Token 2734: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' (adapté à ' network') → logprob: -0.005680738016963005
    2. ' network' → logprob: -5.255680561065674
    3. '           ' → logprob: -8.880681037902832
    4. '               ' → logprob: -9.005681037902832
    5. 'node' → logprob: -9.755681037902832
    6. '       ' → logprob: -10.005681037902832
    7. '```' → logprob: -10.380681037902832
    8. 'net' → logprob: -11.005681037902832
    9. '   ' → logprob: -11.130681037902832
    10. '                   ' → logprob: -12.130681037902832

Token 2735: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.727905979962088e-05
    2. '.' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.87504768371582
    4. 'add' → logprob: -14.62504768371582
    5. ' .' → logprob: -15.87504768371582
    6. ').' → logprob: -16.00004768371582
    7. '].' → logprob: -16.87504768371582
    8. '.
' → logprob: -17.00004768371582
    9. '.Add' → logprob: -17.75004768371582
    10. ':add' → logprob: -17.75004768371582

Token 2736: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -7.183501293184236e-05
    2. 'edge' → logprob: -9.62507152557373
    3. '_node' → logprob: -13.25007152557373
    4. '(edge' → logprob: -13.37507152557373
    5. 'Edge' → logprob: -14.87507152557373
    6. '   ' → logprob: -14.87507152557373
    7. '((' → logprob: -15.50007152557373
    8. '_edges' → logprob: -15.62507152557373
    9. '(' → logprob: -15.75007152557373
    10. '(node' → logprob: -16.000072479248047

Token 2737: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.06637783348560333
    2. '(' → logprob: -2.816377878189087
    3. 'node' → logprob: -5.566377639770508
    4. '2' → logprob: -7.691377639770508
    5. ' node' → logprob: -9.566377639770508
    6. '(
' → logprob: -10.566377639770508
    7. '(id' → logprob: -11.066377639770508
    8. '((' → logprob: -12.191377639770508
    9. ' (' → logprob: -13.191377639770508
    10. '               ' → logprob: -14.691377639770508

Token 2738: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -7.465036105713807e-06
    2. 'id' → logprob: -12.500007629394531
    3. '((' → logprob: -14.125007629394531
    4. '(' → logprob: -14.500007629394531
    5. '_' → logprob: -14.875007629394531
    6. '```' → logprob: -14.875007629394531
    7. '[(' → logprob: -15.250007629394531
    8. '   ' → logprob: -15.375007629394531
    9. '(
' → logprob: -15.500007629394531
    10. '[' → logprob: -15.875007629394531

Token 2739: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3113732933998108
    2. '(node' → logprob: -2.186373233795166
    3. ' *' → logprob: -2.311373233795166
    4. ',' → logprob: -3.061373233795166
    5. '(' → logprob: -5.186373233795166
    6. ' (' → logprob: -7.061373233795166
    7. '((' → logprob: -7.561373233795166
    8. '*(' → logprob: -7.936373233795166
    9. ' ,' → logprob: -8.561373710632324
    10. '   ' → logprob: -8.561373710632324

Token 2740: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '1' → logprob: -16.25009536743164
    4. '```' → logprob: -17.50009536743164
    5. '   ' → logprob: -18.50009536743164
    6. '3' → logprob: -19.87509536743164
    7. '  ' → logprob: -20.00009536743164
    8. '=' → logprob: -20.00009536743164
    9. '``' → logprob: -20.12509536743164
    10. '(' → logprob: -20.37509536743164

Token 2741: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.125006675720215
    3. '1' → logprob: -13.625006675720215
    4. '   ' → logprob: -16.50000762939453
    5. '           ' → logprob: -19.25000762939453
    6. '```' → logprob: -19.25000762939453
    7. '       ' → logprob: -19.62500762939453
    8. '  ' → logprob: -20.00000762939453
    9. '               ' → logprob: -20.25000762939453
    10. '     ' → logprob: -20.37500762939453

Token 2742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004688034241553396
    2. ' ,' → logprob: -8.250469207763672
    3. ',
' → logprob: -9.375469207763672
    4. '+' → logprob: -9.750469207763672
    5. '   ' → logprob: -10.375469207763672
    6. '                   ' → logprob: -11.875469207763672
    7. '               ' → logprob: -12.375469207763672
    8. '<|end|>' → logprob: -12.375469207763672
    9. '```' → logprob: -13.000469207763672
    10. '           ' → logprob: -13.125469207763672

Token 2743: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -5.514650183613412e-05
    2. ' node' → logprob: -9.875055313110352
    3. '(node' → logprob: -12.750055313110352
    4. '	node' → logprob: -15.000055313110352
    5. '   ' → logprob: -15.750055313110352
    6. '[node' → logprob: -16.37505531311035
    7. '                   ' → logprob: -16.62505531311035
    8. '```' → logprob: -18.37505531311035
    9. '
' → logprob: -18.75005531311035
    10. ' ' → logprob: -18.87505531311035

Token 2744: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.4617256056226324e-05
    2. 'id' → logprob: -11.750014305114746
    3. '```' → logprob: -12.625014305114746
    4. '_token' → logprob: -13.250014305114746
    5. 'token' → logprob: -14.750014305114746
    6. '   ' → logprob: -15.250014305114746
    7. '`' → logprob: -15.875014305114746
    8. 'Id' → logprob: -16.000015258789062
    9. '``' → logprob: -16.750015258789062
    10. '#' → logprob: -16.750015258789062

Token 2745: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6932776570320129
    2. ' *' → logprob: -0.6932776570320129
    3. '[' → logprob: -9.443277359008789
    4. '2' → logprob: -10.818277359008789
    5. ' ' → logprob: -11.443277359008789
    6. '1' → logprob: -12.568277359008789
    7. '**' → logprob: -12.693277359008789
    8. '```' → logprob: -12.693277359008789
    9. '`' → logprob: -12.943277359008789
    10. ',' → logprob: -13.568277359008789

Token 2746: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1801566630601883
    2. '1' → logprob: -1.8051567077636719
    3. ' ' → logprob: -7.805156707763672
    4. '   ' → logprob: -13.430156707763672
    5. '0' → logprob: -14.430156707763672
    6. '           ' → logprob: -15.055156707763672
    7. '```' → logprob: -15.055156707763672
    8. '                   ' → logprob: -15.305156707763672
    9. '5' → logprob: -15.430156707763672
    10. '3' → logprob: -15.680156707763672

Token 2747: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009766003116965294
    2. '2' → logprob: -4.634766101837158
    3. ' ' → logprob: -11.759765625
    4. '0' → logprob: -13.509765625
    5. '   ' → logprob: -15.134765625
    6. '5' → logprob: -15.509765625
    7. '3' → logprob: -16.134765625
    8. '           ' → logprob: -16.634765625
    9. '4' → logprob: -17.134765625
    10. '       ' → logprob: -17.259765625

Token 2748: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023270871490240097
    2. ' +' → logprob: -3.773270845413208
    3. ',' → logprob: -11.148270606994629
    4. '+,' → logprob: -12.523270606994629
    5. '+
' → logprob: -12.523270606994629
    6. '   ' → logprob: -13.148270606994629
    7. '1' → logprob: -14.273270606994629
    8. '           ' → logprob: -15.773270606994629
    9. '                   ' → logprob: -15.773270606994629
    10. '```' → logprob: -15.898270606994629

Token 2749: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -16.375
    4. '0' → logprob: -17.75
    5. '  ' → logprob: -20.125
    6. '                   ' → logprob: -20.25
    7. '           ' → logprob: -21.375
    8. '```' → logprob: -21.375
    9. '     ' → logprob: -21.875
    10. '    ' → logprob: -21.875

Token 2750: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.875
    4. '0' → logprob: -19.125
    5. '  ' → logprob: -21.875
    6. '```' → logprob: -22.375
    7. '=' → logprob: -22.5
    8. '3' → logprob: -22.875
    9. '`' → logprob: -23.0
    10. '' → logprob: -23.0625

Token 2751: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9160102712921798e-05
    2. '                   ' → logprob: -11.375029563903809
    3. ',
' → logprob: -11.375029563903809
    4. '               ' → logprob: -13.500029563903809
    5. '(cap' → logprob: -13.500029563903809
    6. ')' → logprob: -13.625029563903809
    7. '           ' → logprob: -14.875029563903809
    8. '                       ' → logprob: -15.125029563903809
    9. ' ,' → logprob: -15.125029563903809
    10. '                           ' → logprob: -15.250029563903809

Token 2752: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -3.547789674485102e-05
    2. ' cap' → logprob: -10.250035285949707
    3. '                   ' → logprob: -19.375036239624023
    4. '(cap' → logprob: -19.750036239624023
    5. 'caps' → logprob: -20.250036239624023
    6. 'Cap' → logprob: -21.250036239624023
    7. '               ' → logprob: -21.750036239624023
    8. 'float' → logprob: -21.750036239624023
    9. 'capac' → logprob: -22.125036239624023
    10. 'capacity' → logprob: -22.250036239624023

Token 2753: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035488870344124734
    2. ')
' → logprob: -8.375354766845703
    3. '               ' → logprob: -9.875354766845703
    4. '                   ' → logprob: -10.000354766845703
    5. '       ' → logprob: -11.250354766845703
    6. '           ' → logprob: -11.750354766845703
    7. '<|end|>' → logprob: -13.375354766845703
    8. ' )' → logprob: -13.500354766845703
    9. '   ' → logprob: -13.875354766845703
    10. '                       ' → logprob: -14.000354766845703

Token 2754: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2755: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.033096663653850555
    2. '           ' → logprob: -4.533096790313721
    3. '       ' → logprob: -4.783096790313721
    4. '<|end|>' → logprob: -5.533096790313721
    5. '
' → logprob: -5.783096790313721
    6. 'else' (adapté à ' else') → logprob: -6.533096790313721
    7. ' else' → logprob: -6.783096790313721
    8. '                ' → logprob: -7.158096790313721
    9. '        
' → logprob: -8.033096313476562
    10. '            ' → logprob: -8.033096313476562

Token 2756: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.26997318863868713
    2. '                   ' → logprob: -2.0199732780456543
    3. ':' → logprob: -2.2699732780456543
    4. '               ' → logprob: -7.769973278045654
    5. '           ' → logprob: -9.769972801208496
    6. '   ' → logprob: -9.769972801208496
    7. '                       ' → logprob: -10.019972801208496
    8. 'continue' → logprob: -12.269972801208496
    9. '                    ' → logprob: -12.394972801208496
    10. ' :
' → logprob: -12.394972801208496

Token 2757: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03136307746171951
    2. 'network' → logprob: -3.656363010406494
    3. '               ' → logprob: -5.531363010406494
    4. 'pass' → logprob: -7.906363010406494
    5. '           ' → logprob: -8.031363487243652
    6. '#' → logprob: -8.531363487243652
    7. 'continue' → logprob: -9.281363487243652
    8. '   ' → logprob: -10.406363487243652
    9. ' network' → logprob: -10.531363487243652
    10. '                       ' → logprob: -11.031363487243652

Token 2758: ' #' (ID: 1069)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.00012558852904476225
    2. '#' (adapté à ' #') → logprob: -9.750125885009766
    3. '                   ' → logprob: -10.250125885009766
    4. 'continue' → logprob: -10.625125885009766
    5. 'pass' → logprob: -12.375125885009766
    6. ' network' → logprob: -13.500125885009766
    7. '               ' → logprob: -13.625125885009766
    8. '                       ' → logprob: -15.750125885009766
    9. '
' → logprob: -15.875125885009766
    10. '   ' → logprob: -16.000125885009766

Token 2759: ' If' (ID: 1843)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.04302579537034035
    2. '#' → logprob: -3.1680257320404053
    3. 'continue' → logprob: -11.793025970458984
    4. ' network' → logprob: -12.293025970458984
    5. '               ' → logprob: -12.543025970458984
    6. '                   ' → logprob: -12.793025970458984
    7. '           ' → logprob: -13.168025970458984
    8. 'net' → logprob: -13.293025970458984
    9. ' #' → logprob: -13.793025970458984
    10. 'pass' → logprob: -13.793025970458984

Token 2760: ' no' (ID: 860)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.18918007612228394
    2. ' network' → logprob: -1.8141801357269287
    3. ' True' → logprob: -5.43917989730835
    4. '
' → logprob: -6.18917989730835
    5. '#' → logprob: -6.43917989730835
    6. 'True' → logprob: -6.93917989730835
    7. ' #' → logprob: -9.314180374145508
    8. 'cap' → logprob: -9.314180374145508
    9. ' not' → logprob: -9.939180374145508
    10. 'not' → logprob: -10.314180374145508

Token 2761: ' capacity' (ID: 12241)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -1.2167062759399414
    2. 'network' → logprob: -1.8417062759399414
    3. '
' → logprob: -2.2167062759399414
    4. 'capacity' → logprob: -2.3417062759399414
    5. ' network' → logprob: -2.5917062759399414
    6. '_edge' → logprob: -2.7167062759399414
    7. 'edge' → logprob: -2.8417062759399414
    8. ' cap' → logprob: -3.2167062759399414
    9. ' edge' → logprob: -3.5917062759399414
    10. ' capacity' → logprob: -3.7167062759399414

Token 2762: ' segment' (ID: 14806)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07732608914375305
    2. ':' → logprob: -3.2023260593414307
    3. ',' → logprob: -3.9523260593414307
    4. '                   ' → logprob: -4.82732629776001
    5. 'network' → logprob: -5.20232629776001
    6. ' network' → logprob: -7.82732629776001
    7. '(network' → logprob: -8.327325820922852
    8. '               ' → logprob: -9.327325820922852
    9. ',
' → logprob: -9.452325820922852
    10. '   ' → logprob: -9.952325820922852

Token 2763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8104438185691833
    2. ':
' → logprob: -1.5604438781738281
    3. '                   ' → logprob: -1.9354438781738281
    4. ':' → logprob: -1.9354438781738281
    5. 'network' → logprob: -3.435443878173828
    6. '(network' → logprob: -4.435443878173828
    7. ' network' → logprob: -5.060443878173828
    8. ' (' → logprob: -7.060443878173828
    9. '                       ' → logprob: -7.060443878173828
    10. '               ' → logprob: -7.060443878173828

Token 2764: ' still' (ID: 2928)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.0407961867749691
    2. '#' → logprob: -3.9157962799072266
    3. ' network' → logprob: -4.040796279907227
    4. '                   ' → logprob: -6.415796279907227
    5. ' #' → logprob: -7.290796279907227
    6. 'continue' → logprob: -9.665796279907227
    7. '               ' → logprob: -10.290796279907227
    8. '   ' → logprob: -11.165796279907227
    9. ' continue' → logprob: -11.915796279907227
    10. '                       ' → logprob: -12.040796279907227

Token 2765: ' add' (ID: 1147)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.007742555346339941
    2. ' network' → logprob: -4.882742404937744
    3. '                   ' → logprob: -9.882742881774902
    4. 'add' → logprob: -10.382742881774902
    5. ':
' → logprob: -11.007742881774902
    6. '
' → logprob: -11.632742881774902
    7. 'continue' → logprob: -12.007742881774902
    8. '_network' → logprob: -12.132742881774902
    9. '(network' → logprob: -12.382742881774902
    10. '#' → logprob: -12.632742881774902

Token 2766: ' infinite' (ID: 48413)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.04901866614818573
    2. '_edge' → logprob: -3.424018621444702
    3. ' network' → logprob: -4.299018859863281
    4. '_network' → logprob: -6.924018859863281
    5. 'edge' → logprob: -8.049018859863281
    6. '(network' → logprob: -8.174018859863281
    7. 'node' → logprob: -10.174018859863281
    8. 'space' → logprob: -10.924018859863281
    9. 'Edge' → logprob: -12.174018859863281
    10. ' edge' → logprob: -12.424018859863281

Token 2767: ' capacity' (ID: 12241)
  Prédit: '_capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -1.2618597745895386
    2. '_cap' → logprob: -1.5118597745895386
    3. 'capacity' → logprob: -1.6368597745895386
    4. ' capacity' → logprob: -1.7618597745895386
    5. '_edge' → logprob: -2.886859893798828
    6. '
' → logprob: -3.511859893798828
    7. 'cap' → logprob: -3.886859893798828
    8. ' _' → logprob: -4.761859893798828
    9. ' network' → logprob: -5.886859893798828
    10. '_network' → logprob: -6.261859893798828

Token 2768: ' edge' (ID: 11165)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.8178831338882446
    2. '(network' → logprob: -0.8178831338882446
    3. '                   ' → logprob: -2.567883014678955
    4. ',' → logprob: -4.067883014678955
    5. ' network' → logprob: -4.192883014678955
    6. '(
' → logprob: -6.442883014678955
    7. ':
' → logprob: -6.817883014678955
    8. '(' → logprob: -6.942883014678955
    9. '):
' → logprob: -7.067883014678955
    10. ' (' → logprob: -7.192883014678955

Token 2769: ' to' (ID: 316)
  Prédit: '(network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(network' → logprob: -0.6170063614845276
    2. '                   ' → logprob: -1.2420063018798828
    3. 'network' → logprob: -1.9920063018798828
    4. ',' → logprob: -3.867006301879883
    5. ' network' → logprob: -5.117006301879883
    6. '               ' → logprob: -5.742006301879883
    7. '(' → logprob: -6.492006301879883
    8. ' (' → logprob: -6.867006301879883
    9. '(
' → logprob: -7.492006301879883
    10. ':
' → logprob: -7.992006301879883

Token 2770: ' allow' (ID: 3763)
  Prédit: 'allow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allow' → logprob: -0.6128234267234802
    2. 'network' → logprob: -1.237823486328125
    3. 'node' → logprob: -2.362823486328125
    4. 'prevent' → logprob: -3.987823486328125
    5. 'avoid' → logprob: -4.237823486328125
    6. 'keep' → logprob: -4.487823486328125
    7. 'handle' → logprob: -4.987823486328125
    8. 'out' → logprob: -5.237823486328125
    9. 'maint' → logprob: -5.612823486328125
    10. 'ensure' → logprob: -5.737823486328125

Token 2771: ' vertical' (ID: 17679)
  Prédit: ' network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' network' → logprob: -0.6005358099937439
    2. 'network' → logprob: -1.8505358695983887
    3. ' flow' → logprob: -2.4755358695983887
    4. ' node' → logprob: -2.6005358695983887
    5. 'node' → logprob: -3.4755358695983887
    6. ' pass' → logprob: -3.7255358695983887
    7. 'pass' → logprob: -4.350535869598389
    8. ' connection' → logprob: -4.475535869598389
    9. ' the' → logprob: -4.475535869598389
    10. 'connect' → logprob: -4.975535869598389

Token 2772: ' edge' (ID: 11165)
  Prédit: ' flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flow' → logprob: -1.2445331811904907
    2. ' connection' → logprob: -1.4945331811904907
    3. 'connection' → logprob: -1.8695331811904907
    4. 'flow' → logprob: -2.369533061981201
    5. 'connections' → logprob: -2.494533061981201
    6. ' connections' → logprob: -2.619533061981201
    7. ' movement' → logprob: -3.619533061981201
    8. ' edges' → logprob: -4.744533061981201
    9. 'edges' → logprob: -4.744533061981201
    10. '_flow' → logprob: -5.119533061981201

Token 2773: '?
' (ID: 3901)
  Prédit: '(network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(network' → logprob: -0.8987690806388855
    2. '                   ' → logprob: -1.2737691402435303
    3. 'network' → logprob: -1.6487691402435303
    4. ',' → logprob: -2.3987691402435303
    5. ' network' → logprob: -4.398768901824951
    6. '               ' → logprob: -5.398768901824951
    7. '):
' → logprob: -5.773768901824951
    8. ':
' → logprob: -5.898768901824951
    9. ',
' → logprob: -6.398768901824951
    10. '(
' → logprob: -6.523768901824951

Token 2774: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012726159766316414
    2. ' network' → logprob: -7.376272678375244
    3. 'network' → logprob: -8.376272201538086
    4. '                       ' → logprob: -8.876272201538086
    5. '               ' → logprob: -9.251272201538086
    6. '           ' → logprob: -9.876272201538086
    7. '(network' → logprob: -10.376272201538086
    8. '
' → logprob: -10.876272201538086
    9. '```' → logprob: -10.876272201538086
    10. '                    
' → logprob: -11.126272201538086

Token 2775: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' (adapté à ' network') → logprob: -0.01465701125562191
    2. ' network' → logprob: -4.264657020568848
    3. '                   ' → logprob: -7.639657020568848
    4. '(network' → logprob: -12.764657020568848
    5. '                       ' → logprob: -12.889657020568848
    6. '
' → logprob: -13.514657020568848
    7. '               ' → logprob: -14.014657020568848
    8. '_network' → logprob: -14.014657020568848
    9. 'net' → logprob: -14.139657020568848
    10. '           ' → logprob: -14.514657020568848

Token 2776: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.001171652227640152
    2. '.' → logprob: -6.751171588897705
    3. '.
' → logprob: -14.126172065734863
    4. ' .' → logprob: -14.876172065734863
    5. '   ' → logprob: -16.126171112060547
    6. ').' → logprob: -16.501171112060547
    7. '
' → logprob: -17.126171112060547
    8. 'add' → logprob: -17.626171112060547
    9. '._' → logprob: -17.876171112060547
    10. ':add' → logprob: -17.876171112060547

Token 2777: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.9743012671824545e-05
    2. 'edge' → logprob: -11.125020027160645
    3. 'Edge' → logprob: -12.250020027160645
    4. 'dge' → logprob: -16.875019073486328
    5. '(edge' → logprob: -17.000019073486328
    6. '_EDGE' → logprob: -18.000019073486328
    7. ' edge' → logprob: -18.375019073486328
    8. '_edges' → logprob: -18.375019073486328
    9. 'ed' → logprob: -18.500019073486328
    10. '(' → logprob: -18.625019073486328

Token 2778: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0017841795925050974
    2. 'node' → logprob: -6.876784324645996
    3. '(' → logprob: -7.376784324645996
    4. ' node' → logprob: -9.126784324645996
    5. ' (' → logprob: -11.126784324645996
    6. '(n' → logprob: -14.376784324645996
    7. '(
' → logprob: -14.626784324645996
    8. '	node' → logprob: -14.626784324645996
    9. '[node' → logprob: -15.126784324645996
    10. '((' → logprob: -16.12678337097168

Token 2779: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.5776860184123507e-06
    2. 'id' → logprob: -13.12500286102295
    3. '```' → logprob: -15.75000286102295
    4. '   ' → logprob: -15.87500286102295
    5. '
' → logprob: -16.000001907348633
    6. ' _' → logprob: -18.375001907348633
    7. '0' → logprob: -18.500001907348633
    8. '...' → logprob: -18.500001907348633
    9. '_token' → logprob: -18.625001907348633
    10. '                   ' → logprob: -18.750001907348633

Token 2780: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14298363029956818
    2. ' *' → logprob: -2.0179836750030518
    3. ' ' → logprob: -9.392983436584473
    4. '   ' → logprob: -9.517983436584473
    5. '(node' → logprob: -9.642983436584473
    6. '(' → logprob: -10.517983436584473
    7. '()*' → logprob: -11.392983436584473
    8. '`' → logprob: -11.642983436584473
    9. '(*' → logprob: -11.642983436584473
    10. '    ' → logprob: -12.267983436584473

Token 2781: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.684157026233152e-05
    2. ' ' → logprob: -9.500077247619629
    3. '   ' → logprob: -14.250077247619629
    4. ''' → logprob: -14.625077247619629
    5. '
' → logprob: -15.000077247619629
    6. '"' → logprob: -16.500076293945312
    7. '1' → logprob: -16.500076293945312
    8. '  ' → logprob: -16.875076293945312
    9. '`' → logprob: -17.000076293945312
    10. '           ' → logprob: -17.250076293945312

Token 2782: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011236425780225545
    2. ' ' → logprob: -9.125112533569336
    3. '   ' → logprob: -13.500112533569336
    4. '1' → logprob: -13.750112533569336
    5. '
' → logprob: -15.375112533569336
    6. '  ' → logprob: -16.125112533569336
    7. '       ' → logprob: -16.250112533569336
    8. ''' → logprob: -16.500112533569336
    9. '           ' → logprob: -16.812612533569336
    10. '0' → logprob: -16.812612533569336

Token 2783: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003258757758885622
    2. ' ,' → logprob: -5.75325870513916
    3. '+' → logprob: -10.75325870513916
    4. ',
' → logprob: -10.87825870513916
    5. '                   ' → logprob: -11.87825870513916
    6. '   ' → logprob: -12.62825870513916
    7. ' +' → logprob: -12.75325870513916
    8. '<|end|>' → logprob: -12.75325870513916
    9. ')' → logprob: -12.87825870513916
    10. '```' → logprob: -13.12825870513916

Token 2784: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0040799472481012344
    2. ' node' → logprob: -5.504079818725586
    3. '(node' → logprob: -13.754079818725586
    4. '	node' → logprob: -15.379079818725586
    5. '[node' → logprob: -16.129079818725586
    6. '
' → logprob: -17.504079818725586
    7. '=node' → logprob: -17.504079818725586
    8. '```' → logprob: -18.129079818725586
    9. 'user' → logprob: -18.254079818725586
    10. '0' → logprob: -18.629079818725586

Token 2785: '_id' (ID: 1537)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6934580206871033
    2. '*' → logprob: -0.8184580206871033
    3. '_id' → logprob: -3.943458080291748
    4. ' ' → logprob: -4.943458080291748
    5. '   ' → logprob: -4.943458080291748
    6. ' _' → logprob: -5.318458080291748
    7. '2' → logprob: -5.318458080291748
    8. '    ' → logprob: -5.693458080291748
    9. ' node' → logprob: -5.943458080291748
    10. '_node' → logprob: -5.943458080291748

Token 2786: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.043799228966236115
    2. '*' → logprob: -3.1687991619110107
    3. ' ' → logprob: -7.79379940032959
    4. '2' → logprob: -9.04379940032959
    5. '[' → logprob: -9.66879940032959
    6. ' _' → logprob: -10.04379940032959
    7. ' ' → logprob: -10.04379940032959
    8. '   ' → logprob: -10.16879940032959
    9. '0' → logprob: -10.79379940032959
    10. '1' → logprob: -11.41879940032959

Token 2787: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009219424682669342
    2. ' ' → logprob: -7.625921726226807
    3. '1' → logprob: -7.750921726226807
    4. '
' → logprob: -13.500922203063965
    5. '   ' → logprob: -14.375922203063965
    6. '0' → logprob: -15.000922203063965
    7. '+' → logprob: -15.625922203063965
    8. '(' → logprob: -16.00092124938965
    9. ' ' → logprob: -16.00092124938965
    10. '	' → logprob: -16.37592124938965

Token 2788: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021956947166472673
    2. '1' → logprob: -6.127195835113525
    3. ' ' → logprob: -11.502195358276367
    4. '0' → logprob: -15.502195358276367
    5. '
' → logprob: -16.002195358276367
    6. '   ' → logprob: -16.377195358276367
    7. '  ' → logprob: -17.689695358276367
    8. '۲' → logprob: -18.814695358276367
    9. '3' → logprob: -19.189695358276367
    10. '
' → logprob: -19.252195358276367

Token 2789: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31332218647003174
    2. '+' → logprob: -1.3133221864700317
    3. ',' → logprob: -10.438322067260742
    4. '*' → logprob: -11.688322067260742
    5. ' ' → logprob: -11.938322067260742
    6. '[' → logprob: -12.438322067260742
    7. ' *' → logprob: -12.688322067260742
    8. '1' → logprob: -13.063322067260742
    9. ')' → logprob: -13.688322067260742
    10. ' ' → logprob: -13.813322067260742

Token 2790: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '0' → logprob: -16.750011444091797
    4. '
' → logprob: -16.875011444091797
    5. '   ' → logprob: -17.875011444091797
    6. '-' → logprob: -19.312511444091797
    7. '```' → logprob: -19.625011444091797
    8. '[' → logprob: -19.750011444091797
    9. '  ' → logprob: -19.812511444091797
    10. '１' → logprob: -20.125011444091797

Token 2791: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.375014305114746
    3. '0' → logprob: -13.000014305114746
    4. '   ' → logprob: -15.687514305114746
    5. '
' → logprob: -16.81251335144043
    6. '' → logprob: -17.68751335144043
    7. '  ' → logprob: -17.75001335144043
    8. '```' → logprob: -18.00001335144043
    9. '-' → logprob: -18.56251335144043
    10. '`' → logprob: -18.62501335144043

Token 2792: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4987974029500037e-05
    2. ' ,' → logprob: -11.250024795532227
    3. ',
' → logprob: -11.625024795532227
    4. '                   ' → logprob: -13.750024795532227
    5. '<|end|>' → logprob: -14.375024795532227
    6. ')' → logprob: -15.500024795532227
    7. '               ' → logprob: -15.625024795532227
    8. '(),' → logprob: -16.000024795532227
    9. '           ' → logprob: -16.000024795532227
    10. '                       ' → logprob: -16.250024795532227

Token 2793: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.012851946987211704
    2. '1' → logprob: -4.512851715087891
    3. 'math' → logprob: -6.387851715087891
    4. ' float' → logprob: -9.51285171508789
    5. '10' → logprob: -10.88785171508789
    6. '   ' → logprob: -11.76285171508789
    7. 'INF' → logprob: -11.88785171508789
    8. 'inf' → logprob: -12.63785171508789
    9. '100' → logprob: -12.88785171508789
    10. '=float' → logprob: -13.26285171508789

Token 2794: '0' (ID: 15)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.021837621927261353
    2. '1' → logprob: -3.8968377113342285
    3. 'math' → logprob: -6.7718377113342285
    4. ' float' → logprob: -9.77183723449707
    5. '10' → logprob: -9.89683723449707
    6. '0' → logprob: -11.52183723449707
    7. 'INF' → logprob: -12.14683723449707
    8. '   ' → logprob: -12.27183723449707
    9. 'inf' → logprob: -12.27183723449707
    10. '100' → logprob: -12.27183723449707

Token 2795: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024792237672954798
    2. ')' → logprob: -6.002479076385498
    3. ')
' → logprob: -13.002479553222656
    4. '.)' → logprob: -14.502479553222656
    5. ' )' → logprob: -14.752479553222656
    6. '0' → logprob: -15.502479553222656
    7. '))' → logprob: -17.502479553222656
    8. '.
' → logprob: -17.627479553222656
    9. 'e' → logprob: -17.627479553222656
    10. '
' → logprob: -17.752479553222656

Token 2796: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007002840866334736
    2. '000' → logprob: -7.3757004737854
    3. '1' → logprob: -10.500699996948242
    4. '001' → logprob: -10.750699996948242
    5. '015' → logprob: -11.125699996948242
    6. '01' → logprob: -12.500699996948242
    7. '15' → logprob: -13.375699996948242
    8. '```' → logprob: -13.875699996948242
    9. '5' → logprob: -14.000699996948242
    10. 'zero' → logprob: -14.500699996948242

Token 2797: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020548582542687654
    2. ')
' → logprob: -6.752054691314697
    3. '       ' → logprob: -7.127054691314697
    4. '               ' → logprob: -10.002055168151855
    5. '           ' → logprob: -10.502055168151855
    6. '
' → logprob: -12.752055168151855
    7. '                   ' → logprob: -12.752055168151855
    8. '   ' → logprob: -13.377055168151855
    9. ' )' → logprob: -14.502055168151855
    10. ')\
' → logprob: -16.00205421447754

Token 2798: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010838981252163649
    2. '
' → logprob: -7.001083850860596
    3. '           ' → logprob: -9.501084327697754
    4. '               ' → logprob: -9.876084327697754
    5. 'for' → logprob: -11.376084327697754
    6. '```' → logprob: -11.501084327697754
    7. '<|end|>' → logprob: -11.876084327697754
    8. '        
' → logprob: -12.001084327697754
    9. '   ' → logprob: -12.876084327697754
    10. '#' → logprob: -13.126084327697754

Token 2799: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019842209294438362
    2. '#' (adapté à ' #') → logprob: -4.269842147827148
    3. '```' → logprob: -5.519842147827148
    4. 'for' → logprob: -6.519842147827148
    5. '
' → logprob: -8.894842147827148
    6. ' for' → logprob: -10.644842147827148
    7. '   ' → logprob: -11.269842147827148
    8. '        
' → logprob: -12.769842147827148
    9. '           ' → logprob: -13.019842147827148
    10. ' #' → logprob: -14.519842147827148

Token 2800: ' Add' (ID: 4063)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17186717689037323
    2. '       ' → logprob: -2.4218671321868896
    3. 'for' → logprob: -2.6718671321868896
    4. '```' → logprob: -11.046867370605469
    5. '   ' → logprob: -11.671867370605469
    6. '
' → logprob: -12.796867370605469
    7. ' for' → logprob: -14.171867370605469
    8. ' #' → logprob: -14.296867370605469
    9. '           ' → logprob: -14.296867370605469
    10. 'For' → logprob: -14.796867370605469

Token 2801: ' vertical' (ID: 17679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3348872661590576
    2. 'vertical' → logprob: -1.9598872661590576
    3. 'edges' → logprob: -2.7098872661590576
    4. '       ' → logprob: -3.2098872661590576
    5. '#' → logprob: -3.4598872661590576
    6. ' for' → logprob: -6.084887504577637
    7. '   ' → logprob: -6.459887504577637
    8. 'i' → logprob: -7.334887504577637
    9. '
' → logprob: -7.834887504577637
    10. ' edges' → logprob: -8.709887504577637

Token 2802: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.013392088003456593
    2. ' edges' → logprob: -4.763391971588135
    3. '       ' → logprob: -6.138391971588135
    4. 'for' → logprob: -6.263391971588135
    5. '   ' → logprob: -8.138392448425293
    6. '
' → logprob: -8.888392448425293
    7. '_edges' → logprob: -9.263392448425293
    8. 'connections' → logprob: -9.638392448425293
    9. '#' → logprob: -9.888392448425293
    10. '           ' → logprob: -10.638392448425293

Token 2803: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015234333695843816
    2. 'for' → logprob: -6.501523494720459
    3. ' for' → logprob: -11.1265230178833
    4. '
' → logprob: -12.5015230178833
    5. 'from' → logprob: -13.6265230178833
    6. '           ' → logprob: -14.1265230178833
    7. '```' → logprob: -14.3765230178833
    8. '   ' → logprob: -16.501523971557617
    9. '#' → logprob: -16.751523971557617
    10. '        
' → logprob: -17.001523971557617

Token 2804: 'out' (ID: 468)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05150570347905159
    2. 'i' → logprob: -3.3015058040618896
    3. '#' → logprob: -5.1765055656433105
    4. '
' → logprob: -5.9265055656433105
    5. '       ' → logprob: -5.9265055656433105
    6. ')' → logprob: -6.9265055656433105
    7. ' for' → logprob: -7.4265055656433105
    8. '           ' → logprob: -8.676506042480469
    9. 'from' → logprob: -8.801506042480469
    10. '(i' → logprob: -9.426506042480469

Token 2805: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16921238601207733
    2. '       ' → logprob: -2.7942123413085938
    3. '->' → logprob: -3.6692123413085938
    4. '           ' → logprob: -4.544212341308594
    5. '_to' → logprob: -4.544212341308594
    6. '*' → logprob: -4.794212341308594
    7. 'to' → logprob: -4.919212341308594
    8. ')' → logprob: -5.294212341308594
    9. '   ' → logprob: -5.419212341308594
    10. '_,' → logprob: -5.544212341308594

Token 2806: ' a' (ID: 261)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07524020969867706
    2. 'each' → logprob: -3.450240135192871
    3. 'nodes' → logprob: -3.575240135192871
    4. 'line' → logprob: -5.575240135192871
    5. 'current' → logprob: -6.450240135192871
    6. 'a' → logprob: -6.450240135192871
    7. 'the' → logprob: -6.575240135192871
    8. 'point' → logprob: -6.575240135192871
    9. 'previous' → logprob: -7.075240135192871
    10. 'all' → logprob: -7.325240135192871

Token 2807: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.004242704715579748
    2. ' node' → logprob: -5.504242897033691
    3. 'vertex' → logprob: -9.254242897033691
    4. 'point' → logprob: -10.629242897033691
    5. 'll' → logprob: -11.379242897033691
    6. 'token' → logprob: -11.879242897033691
    7. 'nodes' → logprob: -12.254242897033691
    8. 'nd' → logprob: -12.504242897033691
    9. '_node' → logprob: -12.504242897033691
    10. '(node' → logprob: -12.879242897033691

Token 2808: ' line' (ID: 2543)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041536252945661545
    2. '->' → logprob: -4.041536331176758
    3. 'to' → logprob: -4.666536331176758
    4. ' to' → logprob: -5.166536331176758
    5. ' ->' → logprob: -5.666536331176758
    6. ' ,' → logprob: -6.291536331176758
    7. '       ' → logprob: -7.416536331176758
    8. ')' → logprob: -7.541536331176758
    9. '```' → logprob: -7.916536331176758
    10. '           ' → logprob: -8.166536331176758

Token 2809: ' i' (ID: 575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6995843648910522
    2. 'to' → logprob: -1.3245843648910522
    3. ' to' → logprob: -1.9495843648910522
    4. '[i' → logprob: -3.699584484100342
    5. '       ' → logprob: -4.074584484100342
    6. '           ' → logprob: -4.199584484100342
    7. ' ->' → logprob: -4.824584484100342
    8. ')' → logprob: -4.824584484100342
    9. ' ,' → logprob: -5.074584484100342
    10. '->' → logprob: -5.699584484100342

Token 2810: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17199134826660156
    2. ' to' → logprob: -2.5469913482666016
    3. 'to' → logprob: -3.4219913482666016
    4. ')' → logprob: -3.7969913482666016
    5. ' ->' → logprob: -4.921991348266602
    6. '           ' → logprob: -5.671991348266602
    7. '->' → logprob: -5.671991348266602
    8. '+' → logprob: -5.796991348266602
    9. '       ' → logprob: -6.046991348266602
    10. '[i' → logprob: -6.796991348266602

Token 2811: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4024727940559387
    2. '(i' → logprob: -1.652472734451294
    3. '((' → logprob: -2.902472734451294
    4. 'node' → logprob: -3.027472734451294
    5. '(node' → logprob: -4.777472972869873
    6. '(' → logprob: -5.027472972869873
    7. ' (' → logprob: -5.277472972869873
    8. 'i' → logprob: -5.527472972869873
    9. '   ' → logprob: -5.902472972869873
    10. '       ' → logprob: -6.652472972869873

Token 2812: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.0706475973129272
    2. ',' → logprob: -1.4456475973129272
    3. 'node' → logprob: -1.5706475973129272
    4. ' of' → logprob: -2.195647716522217
    5. '+' → logprob: -3.445647716522217
    6. ')' → logprob: -4.070647716522217
    7. '       ' → logprob: -4.570647716522217
    8. '           ' → logprob: -4.945647716522217
    9. '   ' → logprob: -5.070647716522217
    10. ' node' → logprob: -5.195647716522217

Token 2813: ' node' (ID: 4596)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3818770945072174
    2. 'i' → logprob: -1.256877064704895
    3. 'node' → logprob: -4.3818769454956055
    4. ' (' → logprob: -5.1318769454956055
    5. 'nodes' → logprob: -5.1318769454956055
    6. 'the' → logprob: -5.7568769454956055
    7. 'next' → logprob: -6.2568769454956055
    8. ' i' → logprob: -6.7568769454956055
    9. 'line' → logprob: -7.6318769454956055
    10. '((' → logprob: -8.006876945495605

Token 2814: ' line' (ID: 2543)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04100685566663742
    2. '(i' → logprob: -3.7910068035125732
    3. 'line' → logprob: -5.041007041931152
    4. ' (' → logprob: -5.666007041931152
    5. '[i' → logprob: -6.916007041931152
    6. '
' → logprob: -7.041007041931152
    7. '           ' → logprob: -7.041007041931152
    8. ' i' → logprob: -7.291007041931152
    9. '   ' → logprob: -7.416007041931152
    10. '       ' → logprob: -7.666007041931152

Token 2815: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000546718598343432
    2. ' i' → logprob: -8.1255464553833
    3. '   ' → logprob: -8.7505464553833
    4. '
' → logprob: -9.8755464553833
    5. '(i' → logprob: -10.2505464553833
    6. '```' → logprob: -13.1255464553833
    7. '       ' → logprob: -14.2505464553833
    8. '`' → logprob: -14.3755464553833
    9. ' (' → logprob: -14.3755464553833
    10. '    ' → logprob: -15.0005464553833

Token 2816: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001716827624477446
    2. ' +' → logprob: -6.376716613769531
    3. '+
' → logprob: -11.626716613769531
    4. '```' → logprob: -13.251716613769531
    5. '[' → logprob: -14.376716613769531
    6. '   ' → logprob: -14.376716613769531
    7. '1' → logprob: -14.501716613769531
    8. '           ' → logprob: -14.626716613769531
    9. '       ' → logprob: -14.876716613769531
    10. '+i' → logprob: -15.501716613769531

Token 2817: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. '+' → logprob: -11.625012397766113
    3. ' ' → logprob: -13.125012397766113
    4. '
' → logprob: -15.125012397766113
    5. '   ' → logprob: -15.500012397766113
    6. 'i' → logprob: -15.750012397766113
    7. '```' → logprob: -15.750012397766113
    8. ' +' → logprob: -17.000011444091797
    9. '`' → logprob: -17.000011444091797
    10. '``' → logprob: -17.125011444091797

Token 2818: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002917214762419462
    2. ')' → logprob: -6.877917289733887
    3. '[' → logprob: -7.252917289733887
    4. '           ' → logprob: -7.752917289733887
    5. '```' → logprob: -8.502917289733887
    6. '               ' → logprob: -8.877917289733887
    7. ' ,' → logprob: -9.377917289733887
    8. '       ' → logprob: -9.627917289733887
    9. 'for' → logprob: -9.877917289733887
    10. '[j' → logprob: -10.002917289733887

Token 2819: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018594805151224136
    2. 'for' → logprob: -4.018594741821289
    3. ' for' → logprob: -7.768594741821289
    4. '
' → logprob: -11.268594741821289
    5. '           ' → logprob: -11.893594741821289
    6. '   ' → logprob: -14.018594741821289
    7. '```' → logprob: -14.143594741821289
    8. '        
' → logprob: -15.143594741821289
    9. '               ' → logprob: -15.268594741821289
    10. ',' → logprob: -15.518594741821289

Token 2820: ' visible' (ID: 15263)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03269742801785469
    2. 'j' → logprob: -3.6576974391937256
    3. ' self' → logprob: -5.2826972007751465
    4. 'len' → logprob: -7.6576972007751465
    5. '(self' → logprob: -7.9076972007751465
    6. 'i' → logprob: -9.157697677612305
    7. ' j' → logprob: -9.532697677612305
    8. 'abs' → logprob: -9.657697677612305
    9. '
' → logprob: -9.782697677612305
    10. '   ' → logprob: -10.157697677612305

Token 2821: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5895126461982727
    2. '       ' → logprob: -1.464512586593628
    3. '           ' → logprob: -2.089512586593628
    4. ' for' → logprob: -2.714512586593628
    5. '               ' → logprob: -4.964512825012207
    6. '
' → logprob: -4.964512825012207
    7. ',' → logprob: -5.589512825012207
    8. ':
' → logprob: -6.589512825012207
    9. '(' → logprob: -6.714512825012207
    10. '                   ' → logprob: -6.964512825012207

Token 2822: 'no' (ID: 1750)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.27170103788375854
    2. ' nodes' → logprob: -3.0217010974884033
    3. 'j' → logprob: -3.2717010974884033
    4. '(j' → logprob: -3.3967010974884033
    5. '(nodes' → logprob: -3.3967010974884033
    6. 'p' → logprob: -4.396700859069824
    7. 'node' → logprob: -4.771700859069824
    8. 'the' → logprob: -4.896700859069824
    9. 'True' → logprob: -4.896700859069824
    10. '(node' → logprob: -5.021700859069824

Token 2823: ' pillar' (ID: 109066)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.6314418911933899
    2. ' pillar' → logprob: -2.006441831588745
    3. 'pillar' → logprob: -2.381441831588745
    4. 'inter' → logprob: -2.506441831588745
    5. 'intersection' → logprob: -2.506441831588745
    6. ' intersection' → logprob: -4.006442070007324
    7. ' obstacles' → logprob: -4.131442070007324
    8. ' obstacle' → logprob: -4.381442070007324
    9. ' obstruction' → logprob: -5.006442070007324
    10. ' ob' → logprob: -5.006442070007324

Token 2824: ')
' (ID: 446)
  Prédit: ' obstruction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' obstruction' → logprob: -1.7992275953292847
    2. 'inter' → logprob: -1.9242275953292847
    3. '           ' → logprob: -2.049227714538574
    4. 'intersection' → logprob: -2.424227714538574
    5. '               ' → logprob: -2.799227714538574
    6. 'ob' → logprob: -2.924227714538574
    7. ')' → logprob: -3.174227714538574
    8. ' between' → logprob: -3.174227714538574
    9. 'segment' → logprob: -3.424227714538574
    10. '       ' → logprob: -3.549227714538574

Token 2825: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011173497885465622
    2. '           ' → logprob: -4.511173725128174
    3. 'for' → logprob: -9.386173248291016
    4. '               ' → logprob: -10.261173248291016
    5. ' for' → logprob: -12.011173248291016
    6. '                   ' → logprob: -14.761173248291016
    7. '   ' → logprob: -15.386173248291016
    8. '                       ' → logprob: -17.261173248291016
    9. ',' → logprob: -17.386173248291016
    10. '
' → logprob: -18.386173248291016

Token 2826: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4766694903373718
    2. '       ' → logprob: -0.9766694903373718
    3. ' for' → logprob: -5.9766693115234375
    4. '           ' → logprob: -10.476669311523438
    5. '
' → logprob: -11.476669311523438
    6. '```' → logprob: -11.851669311523438
    7. '               ' → logprob: -12.726669311523438
    8. '   ' → logprob: -13.101669311523438
    9. '	for' → logprob: -14.851669311523438
    10. '        
' → logprob: -15.476669311523438

Token 2827: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00038825106457807124
    2. ' i' → logprob: -7.875388145446777
    3. '   ' → logprob: -12.125388145446777
    4. 'line' → logprob: -13.625388145446777
    5. '0' → logprob: -15.000388145446777
    6. '       ' → logprob: -15.000388145446777
    7. '(i' → logprob: -15.500388145446777
    8. ' ' → logprob: -15.625388145446777
    9. '_i' → logprob: -16.000389099121094
    10. '```' → logprob: -16.250389099121094

Token 2828: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0365108996629715
    2. 'in' → logprob: -4.161510944366455
    3. '+' → logprob: -4.286510944366455
    4. ' +' → logprob: -5.411510944366455
    5. ' ' → logprob: -6.911510944366455
    6. ',' → logprob: -7.286510944366455
    7. ' i' → logprob: -8.911510467529297
    8. ' ,' → logprob: -9.286510467529297
    9. '   ' → logprob: -10.786510467529297
    10. ' +=' → logprob: -10.786510467529297

Token 2829: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019359003053978086
    2. ' range' → logprob: -6.251935958862305
    3. '0' → logprob: -11.876935958862305
    4. '(range' → logprob: -15.376935958862305
    5. ' ' → logprob: -16.501935958862305
    6. '	range' → logprob: -18.376935958862305
    7. 'in' → logprob: -19.501935958862305
    8. ' in' → logprob: -19.876935958862305
    9. '
' → logprob: -20.001935958862305
    10. 'rang' → logprob: -20.126935958862305

Token 2830: '(len' (ID: 14990)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43202754855155945
    2. 'len' → logprob: -1.1820275783538818
    3. '(len' → logprob: -3.807027578353882
    4. '(i' → logprob: -4.682027339935303
    5. ' i' → logprob: -4.807027339935303
    6. ' len' → logprob: -5.557027339935303
    7. '   ' → logprob: -7.557027339935303
    8. '       ' → logprob: -10.307027816772461
    9. '1' → logprob: -10.307027816772461
    10. '0' → logprob: -11.307027816772461

Token 2831: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.18412719666957855
    2. '(lines' → logprob: -2.18412709236145
    3. 'nodes' → logprob: -2.93412709236145
    4. 'lines' → logprob: -6.059127330780029
    5. '(horizontal' → logprob: -9.934126853942871
    6. 'horizontal' → logprob: -10.559126853942871
    7. '	nodes' → logprob: -13.309126853942871
    8. ' nodes' → logprob: -13.434126853942871
    9. '(node' → logprob: -13.809126853942871
    10. '(line' → logprob: -15.059126853942871

Token 2832: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.001573663903400302
    2. '[i' → logprob: -7.37657356262207
    3. 'per' → logprob: -7.87657356262207
    4. '+' → logprob: -8.00157356262207
    5. '(i' → logprob: -9.12657356262207
    6. 'i' → logprob: -10.62657356262207
    7. 'Per' → logprob: -10.87657356262207
    8. '   ' → logprob: -11.12657356262207
    9. '(nodes' → logprob: -11.25157356262207
    10. '_i' → logprob: -11.62657356262207

Token 2833: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.536675214767456
    2. '_per' → logprob: -1.661675214767456
    3. 'line' → logprob: -1.786675214767456
    4. 'i' → logprob: -1.911675214767456
    5. 'per' → logprob: -1.911675214767456
    6. 'nodes' → logprob: -2.661675214767456
    7. 'lines' → logprob: -3.786675214767456
    8. '1' → logprob: -4.786675453186035
    9. '_lines' → logprob: -5.161675453186035
    10. '[i' → logprob: -5.161675453186035

Token 2834: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20166251063346863
    2. '-' → logprob: -1.701662540435791
    3. '   ' → logprob: -9.201662063598633
    4. ' ' → logprob: -9.701662063598633
    5. '       ' → logprob: -10.326662063598633
    6. '+' → logprob: -10.576662063598633
    7. ' +' → logprob: -11.076662063598633
    8. '):
' → logprob: -12.451662063598633
    9. ')' → logprob: -12.951662063598633
    10. '           ' → logprob: -13.451662063598633

Token 2835: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2520110011100769
    2. '-' → logprob: -1.5020110607147217
    3. '+' → logprob: -10.7520112991333
    4. '):
' → logprob: -10.8770112991333
    5. ' ' → logprob: -11.3770112991333
    6. '       ' → logprob: -11.3770112991333
    7. '   ' → logprob: -11.7520112991333
    8. ' +' → logprob: -12.3770112991333
    9. '
' → logprob: -13.3770112991333
    10. ')' → logprob: -13.6270112991333

Token 2836: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '
' → logprob: -16.125001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '```' → logprob: -18.375001907348633
    6. ')' → logprob: -19.625001907348633
    7. '2' → logprob: -19.750001907348633
    8. '       ' → logprob: -20.375001907348633
    9. '0' → logprob: -21.000001907348633
    10. '  ' → logprob: -21.125001907348633

Token 2837: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '
' → logprob: -19.0
    4. '2' → logprob: -19.75
    5. '   ' → logprob: -20.0
    6. '```' → logprob: -21.125
    7. '0' → logprob: -21.5
    8. '{
' → logprob: -22.875
    9. '       ' → logprob: -23.0
    10. '  ' → logprob: -23.25

Token 2838: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.001441184664145112
    2. '):' → logprob: -6.75144100189209
    3. '       ' → logprob: -8.75144100189209
    4. '   ' → logprob: -9.62644100189209
    5. '-' → logprob: -11.00144100189209
    6. '):
' → logprob: -11.75144100189209
    7. '           ' → logprob: -12.12644100189209
    8. ':
' → logprob: -12.12644100189209
    9. ' -' → logprob: -12.37644100189209
    10. ' ):
' → logprob: -12.87644100189209

Token 2839: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013542831875383854
    2. ' for' → logprob: -6.751354217529297
    3. '   ' → logprob: -9.126354217529297
    4. 'for' → logprob: -9.751354217529297
    5. '       ' → logprob: -11.626354217529297
    6. '               ' → logprob: -12.126354217529297
    7. '		' → logprob: -14.376354217529297
    8. '```' → logprob: -14.501354217529297
    9. '         ' → logprob: -15.001354217529297
    10. ' ' → logprob: -15.376354217529297

Token 2840: ' line' (ID: 2543)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15474113821983337
    2. ' for' → logprob: -3.029741048812866
    3. 'nodes' → logprob: -3.279741048812866
    4. 'j' → logprob: -3.404741048812866
    5. '           ' → logprob: -5.029741287231445
    6. 'line' (adapté à ' line') → logprob: -5.154741287231445
    7. 'lines' → logprob: -5.404741287231445
    8. '   ' → logprob: -5.779741287231445
    9. '       ' → logprob: -6.654741287231445
    10. ' line' → logprob: -7.654741287231445

Token 2841: '_a' (ID: 10852)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.04883534833788872
    2. ' =' → logprob: -3.298835277557373
    3. 'nodes' → logprob: -5.423835277557373
    4. '_points' → logprob: -6.173835277557373
    5. '       ' → logprob: -6.548835277557373
    6. '   ' → logprob: -6.798835277557373
    7. '_pts' → logprob: -7.173835277557373
    8. '=' → logprob: -7.798835277557373
    9. '           ' → logprob: -9.173835754394531
    10. '_i' → logprob: -9.673835754394531

Token 2842: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3553565442562103
    2. '_nodes' → logprob: -1.7303565740585327
    3. '=' → logprob: -2.230356454849243
    4. '   ' → logprob: -5.355356693267822
    5. ',' → logprob: -5.855356693267822
    6. '           ' → logprob: -5.855356693267822
    7. 'nodes' → logprob: -6.855356693267822
    8. '_points' → logprob: -7.480356693267822
    9. '       ' → logprob: -7.480356693267822
    10. '    ' → logprob: -8.605356216430664

Token 2843: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -8.900034299585968e-05
    2. ' nodes' → logprob: -10.000088691711426
    3. 'lines' → logprob: -10.250088691711426
    4. 'i' → logprob: -13.000088691711426
    5. 'self' → logprob: -13.500088691711426
    6. 'node' → logprob: -13.875088691711426
    7. '(nodes' → logprob: -14.000088691711426
    8. '   ' → logprob: -14.000088691711426
    9. '	nodes' → logprob: -14.875088691711426
    10. '0' → logprob: -15.000088691711426

Token 2844: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.5996440649032593
    2. '[i' → logprob: -1.0996440649032593
    3. 'i' → logprob: -2.474644184112549
    4. 'per' → logprob: -3.974644184112549
    5. '           ' → logprob: -5.224644184112549
    6. ' =' → logprob: -5.724644184112549
    7. '   ' → logprob: -6.224644184112549
    8. '_i' → logprob: -6.599644184112549
    9. '=' → logprob: -7.099644184112549
    10. '=i' → logprob: -7.849644184112549

Token 2845: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.022884588688611984
    2. '_line' → logprob: -4.022884368896484
    3. 'i' → logprob: -5.522884368896484
    4. 'ine' → logprob: -7.397884368896484
    5. 'Line' → logprob: -9.522884368896484
    6. '1' → logprob: -11.147884368896484
    7. '-line' → logprob: -11.397884368896484
    8. ' line' → logprob: -12.397884368896484
    9. '_i' → logprob: -13.147884368896484
    10. '[i' → logprob: -13.272884368896484

Token 2846: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.6776029699249193e-05
    2. 'i' → logprob: -11.00002670288086
    3. '           ' → logprob: -12.37502670288086
    4. ' =' → logprob: -13.62502670288086
    5. '[a' → logprob: -13.75002670288086
    6. '       ' → logprob: -13.87502670288086
    7. ' [' → logprob: -14.25002670288086
    8. 'a' → logprob: -15.12502670288086
    9. '   ' → logprob: -15.25002670288086
    10. '=i' → logprob: -15.37502670288086

Token 2847: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035199880599975586
    2. ')
' → logprob: -3.9101998805999756
    3. ']
' → logprob: -5.410200119018555
    4. ')' → logprob: -5.785200119018555
    5. '       ' → logprob: -5.785200119018555
    6. ']' → logprob: -6.910200119018555
    7. ',' → logprob: -7.535200119018555
    8. '
' → logprob: -7.910200119018555
    9. '):
' → logprob: -7.910200119018555
    10. '               ' → logprob: -8.160200119018555

Token 2848: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005977023858577013
    2. 'for' → logprob: -5.505977153778076
    3. '       ' → logprob: -6.630977153778076
    4. ' for' → logprob: -8.130976676940918
    5. '   ' → logprob: -8.630976676940918
    6. '               ' → logprob: -10.130976676940918
    7. '		' → logprob: -10.255976676940918
    8. 'line' → logprob: -11.005976676940918
    9. '	   ' → logprob: -12.380976676940918
    10. '	for' → logprob: -13.130976676940918

Token 2849: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.006430310197174549
    2. 'for' → logprob: -5.131430149078369
    3. '           ' → logprob: -7.631430149078369
    4. ' line' → logprob: -11.881430625915527
    5. '   ' → logprob: -12.881430625915527
    6. '               ' → logprob: -13.006430625915527
    7. 'j' → logprob: -13.006430625915527
    8. '       ' → logprob: -13.881430625915527
    9. ' for' → logprob: -14.131430625915527
    10. 'range' → logprob: -15.256430625915527

Token 2850: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.1396167129278183
    2. '+' → logprob: -2.5146167278289795
    3. 'a' → logprob: -3.2646167278289795
    4. '_b' → logprob: -5.0146164894104
    5. '_plus' → logprob: -6.3896164894104
    6. '_i' → logprob: -6.8896164894104
    7. 'b' → logprob: -7.2646164894104
    8. 'i' → logprob: -7.8896164894104
    9. '+
' → logprob: -8.139616966247559
    10. 'plus' → logprob: -8.764616966247559

Token 2851: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3175942301750183
    2. ' =' → logprob: -1.317594289779663
    3. '           ' → logprob: -5.567594051361084
    4. '=
' → logprob: -9.442594528198242
    5. 'for' → logprob: -9.567594528198242
    6. ':' → logprob: -9.692594528198242
    7. '=line' → logprob: -9.942594528198242
    8. ')' → logprob: -9.942594528198242
    9. ',' → logprob: -10.442594528198242
    10. '[' → logprob: -10.567594528198242

Token 2852: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -8.923874702304602e-05
    2. ' nodes' → logprob: -9.375089645385742
    3. '   ' → logprob: -13.750089645385742
    4. 'lines' → logprob: -14.125089645385742
    5. '(nodes' → logprob: -14.250089645385742
    6. '	nodes' → logprob: -14.375089645385742
    7. '[
' → logprob: -14.875089645385742
    8. '       ' → logprob: -15.875089645385742
    9. 'node' → logprob: -15.875089645385742
    10. '[' → logprob: -15.875089645385742

Token 2853: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.048997554928064346
    2. 'i' → logprob: -3.298997640609741
    3. 'per' → logprob: -4.923997402191162
    4. '[i' → logprob: -6.173997402191162
    5. '_i' → logprob: -7.048997402191162
    6. 'b' → logprob: -8.17399787902832
    7. '+' → logprob: -8.42399787902832
    8. '   ' → logprob: -9.79899787902832
    9. '_b' → logprob: -10.29899787902832
    10. 'Per' → logprob: -10.67399787902832

Token 2854: '_line' (ID: 14418)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6456791162490845
    2. 'line' → logprob: -1.5206791162490845
    3. '_line' → logprob: -1.6456791162490845
    4. 'i' → logprob: -3.020678997039795
    5. 'Line' → logprob: -4.645678997039795
    6. '_list' → logprob: -6.145678997039795
    7. '[i' → logprob: -7.145678997039795
    8. '(i' → logprob: -8.145679473876953
    9. '_i' → logprob: -8.145679473876953
    10. '_one' → logprob: -8.520679473876953

Token 2855: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2437874972820282
    2. 'i' → logprob: -1.9937875270843506
    3. '+' → logprob: -3.1187875270843506
    4. '[next' → logprob: -3.7437875270843506
    5. '           ' → logprob: -5.2437872886657715
    6. '
' → logprob: -6.2437872886657715
    7. 'next' → logprob: -6.8687872886657715
    8. '[' → logprob: -7.3687872886657715
    9. '=' → logprob: -7.7437872886657715
    10. '[
' → logprob: -7.8687872886657715

Token 2856: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010437668533995748
    2. ' +' → logprob: -6.876043796539307
    3. '1' → logprob: -12.501043319702148
    4. '+
' → logprob: -12.626043319702148
    5. '   ' → logprob: -12.751043319702148
    6. '+i' → logprob: -15.626043319702148
    7. ']' → logprob: -16.00104331970215
    8. '[' → logprob: -16.12604331970215
    9. '           ' → logprob: -16.37604331970215
    10. '       ' → logprob: -16.37604331970215

Token 2857: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.000001907348633
    4. '
' → logprob: -16.375001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '2' → logprob: -20.375001907348633
    7. '```' → logprob: -20.375001907348633
    8. '           ' → logprob: -21.375001907348633
    9. '  ' → logprob: -21.875001907348633
    10. '3' → logprob: -22.312501907348633

Token 2858: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -16.875003814697266
    4. '
' → logprob: -18.125003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '2' → logprob: -19.750003814697266
    7. '  ' → logprob: -20.250003814697266
    8. '-' → logprob: -21.625003814697266
    9. '3' → logprob: -21.750003814697266
    10. '```' → logprob: -21.750003814697266

Token 2859: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23048947751522064
    2. ']
' → logprob: -2.230489492416382
    3. ':
' → logprob: -2.730489492416382
    4. ']' → logprob: -3.980489492416382
    5. '
' → logprob: -5.105489253997803
    6. ')
' → logprob: -5.730489253997803
    7. ')' → logprob: -6.855489253997803
    8. '       ' → logprob: -7.105489253997803
    9. '):
' → logprob: -7.480489253997803
    10. '][' → logprob: -7.480489253997803

Token 2860: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030637500807642937
    2. '       ' → logprob: -3.530637502670288
    3. 'for' → logprob: -7.655637264251709
    4. ' for' → logprob: -8.155637741088867
    5. '               ' → logprob: -9.530637741088867
    6. '   ' → logprob: -9.905637741088867
    7. '
' → logprob: -13.405637741088867
    8. '                   ' → logprob: -13.905637741088867
    9. '		' → logprob: -15.030637741088867
    10. '         ' → logprob: -15.655637741088867

Token 2861: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07618311047554016
    2. 'idx' (adapté à ' idx') → logprob: -3.5761830806732178
    3. 'j' → logprob: -4.201183319091797
    4. 'x' → logprob: -4.451183319091797
    5. 'pos' → logprob: -5.701183319091797
    6. 'ai' → logprob: -5.701183319091797
    7. ' for' → logprob: -5.826183319091797
    8. 'index' → logprob: -6.076183319091797
    9. 'k' → logprob: -6.326183319091797
    10. '       ' → logprob: -6.576183319091797

Token 2862: '_map' (ID: 11824)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.11424966156482697
    2. 'a' → logprob: -2.2392497062683105
    3. '_b' → logprob: -7.2392497062683105
    4. ' =' → logprob: -8.489249229431152
    5. '=' → logprob: -8.489249229431152
    6. '_j' → logprob: -9.614249229431152
    7. 'j' → logprob: -9.864249229431152
    8. 's' → logprob: -9.989249229431152
    9. 'b' → logprob: -9.989249229431152
    10. '   ' → logprob: -10.989249229431152

Token 2863: '_b' (ID: 1535)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36521512269973755
    2. '_a' → logprob: -1.4902150630950928
    3. '=' → logprob: -2.9902150630950928
    4. 'a' → logprob: -3.7402150630950928
    5. 'A' → logprob: -5.615215301513672
    6. ':' → logprob: -6.615215301513672
    7. '           ' → logprob: -8.240215301513672
    8. ',' → logprob: -8.615215301513672
    9. '_line' → logprob: -8.865215301513672
    10. '1' → logprob: -9.115215301513672

Token 2864: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18065303564071655
    2. '=' → logprob: -1.8056530952453613
    3. ':' → logprob: -7.430653095245361
    4. ',' → logprob: -9.305652618408203
    5. '={}
' → logprob: -9.680652618408203
    6. '={}' → logprob: -10.305652618408203
    7. '={' → logprob: -10.680652618408203
    8. '           ' → logprob: -11.305652618408203
    9. 's' → logprob: -11.430652618408203
    10. '=
' → logprob: -11.555652618408203

Token 2865: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.003488762304186821
    2. '{}
' → logprob: -6.003488540649414
    3. '{}' → logprob: -7.253488540649414
    4. '{i' → logprob: -8.253488540649414
    5. '{k' → logprob: -11.128488540649414
    6. '{id' → logprob: -11.503488540649414
    7. '{x' → logprob: -11.628488540649414
    8. '{}

' → logprob: -12.628488540649414
    9. '{name' → logprob: -12.753488540649414
    10. '{
' → logprob: -13.378488540649414

Token 2866: 'round' (ID: 1964)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6534399390220642
    2. 'p' → logprob: -0.7784399390220642
    3. 'x' → logprob: -5.153439998626709
    4. 'round' → logprob: -5.778439998626709
    5. 'node' → logprob: -5.903439998626709
    6. '(x' → logprob: -6.153439998626709
    7. '(node' → logprob: -6.403439998626709
    8. ' (' → logprob: -6.778439998626709
    9. '(' → logprob: -6.778439998626709
    10. '(round' → logprob: -6.903439998626709

Token 2867: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7098937034606934
    2. '(line' → logprob: -1.5848937034606934
    3. '(node' → logprob: -2.3348937034606934
    4. 'p' → logprob: -2.4598937034606934
    5. '(b' → logprob: -2.4598937034606934
    6. 'node' → logprob: -4.584893703460693
    7. '((' → logprob: -5.084893703460693
    8. 'b' → logprob: -5.084893703460693
    9. 'line' → logprob: -5.459893703460693
    10. '(pt' → logprob: -6.209893703460693

Token 2868: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0002875569916795939
    2. '(' → logprob: -9.250288009643555
    3. '.' → logprob: -9.500288009643555
    4. 'x' → logprob: -10.125288009643555
    5. '.y' → logprob: -10.375288009643555
    6. '[' → logprob: -11.000288009643555
    7. ' .' → logprob: -11.875288009643555
    8. '.p' → logprob: -12.125288009643555
    9. '(x' → logprob: -12.875288009643555
    10. '1' → logprob: -13.125288009643555

Token 2869: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37044423818588257
    2. '[' → logprob: -1.4954442977905273
    3. '.x' → logprob: -2.7454442977905273
    4. ':' → logprob: -4.620444297790527
    5. 'x' → logprob: -5.245444297790527
    6. ' ,' → logprob: -5.745444297790527
    7. '):' → logprob: -6.495444297790527
    8. '.' → logprob: -8.745444297790527
    9. ')' → logprob: -8.745444297790527
    10. '*' → logprob: -8.995444297790527

Token 2870: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -1.0608243942260742
    2. '15' → logprob: -1.3108243942260742
    3. '10' → logprob: -1.9358243942260742
    4. '12' → logprob: -2.185824394226074
    5. '14' → logprob: -2.935824394226074
    6. '9' → logprob: -3.185824394226074
    7. '7' → logprob: -3.560824394226074
    8. '13' → logprob: -5.810824394226074
    9. '6' → logprob: -6.685824394226074
    10. '11' → logprob: -8.060824394226074

Token 2871: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.7855707406997681
    2. '10' → logprob: -1.660570740699768
    3. '12' → logprob: -2.0355706214904785
    4. '15' → logprob: -2.0355706214904785
    5. '9' → logprob: -2.7855706214904785
    6. '14' → logprob: -3.9105706214904785
    7. '7' → logprob: -4.6605706214904785
    8. '13' → logprob: -6.7855706214904785
    9. '6' → logprob: -7.7855706214904785
    10. '11' → logprob: -8.785571098327637

Token 2872: '):' (ID: 3127)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07105448842048645
    2. ':j' → logprob: -3.196054458618164
    3. ':p' → logprob: -4.196054458618164
    4. ':i' → logprob: -4.571054458618164
    5. ' :' → logprob: -6.571054458618164
    6. ':index' → logprob: -8.196054458618164
    7. ':k' → logprob: -8.571054458618164
    8. ':x' → logprob: -9.196054458618164
    9. ':int' → logprob: -9.321054458618164
    10. '):' → logprob: -9.696054458618164

Token 2873: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01655086874961853
    2. 'k' → logprob: -5.5165510177612305
    3. 'p' → logprob: -6.0165510177612305
    4. 'idx' → logprob: -6.0165510177612305
    5. '[]' → logprob: -6.2665510177612305
    6. 'b' → logprob: -6.2665510177612305
    7. '(j' → logprob: -7.2665510177612305
    8. '[j' → logprob: -7.5165510177612305
    9. '0' → logprob: -7.6415510177612305
    10. ' j' → logprob: -8.39155101776123

Token 2874: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050783056765794754
    2. ':p' → logprob: -3.050783157348633
    3. ' for' → logprob: -7.425783157348633
    4. ' :' → logprob: -7.425783157348633
    5. ':j' → logprob: -7.675783157348633
    6. 'for' → logprob: -8.050783157348633
    7. ':i' → logprob: -9.425783157348633
    8. '           ' → logprob: -9.925783157348633
    9. '               ' → logprob: -11.175783157348633
    10. ':b' → logprob: -11.300783157348633

Token 2875: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.870950215263292e-05
    2. ' j' → logprob: -10.000048637390137
    3. 'p' → logprob: -13.375048637390137
    4. '   ' → logprob: -14.625048637390137
    5. '(j' → logprob: -15.500048637390137
    6. '  ' → logprob: -15.625048637390137
    7. ' ' → logprob: -16.000049591064453
    8. '$j' → logprob: -16.125049591064453
    9. '	j' → logprob: -16.250049591064453
    10. '```' → logprob: -16.375049591064453

Token 2876: ',' (ID: 11)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004916127305477858
    2. ' j' → logprob: -5.629916191101074
    3. 'p' → logprob: -6.754916191101074
    4. ',' → logprob: -9.629916191101074
    5. ',j' → logprob: -10.254916191101074
    6. '(j' → logprob: -11.004916191101074
    7. ' p' → logprob: -11.504916191101074
    8. '_j' → logprob: -12.004916191101074
    9. '(p' → logprob: -12.754916191101074
    10. 'x' → logprob: -13.004916191101074

Token 2877: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.306760805164231e-05
    2. ' p' → logprob: -11.25001335144043
    3. 'j' → logprob: -16.75001335144043
    4. '<|end|>' → logprob: -18.00001335144043
    5. '(p' → logprob: -18.87501335144043
    6. '	p' → logprob: -18.87501335144043
    7. '<|end|>' → logprob: -19.25001335144043
    8. '<p' → logprob: -19.25001335144043
    9. ')p' → logprob: -19.75001335144043
    10. '
' → logprob: -19.87501335144043

Token 2878: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759841799736023
    2. ' in' → logprob: -0.8259841799736023
    3. ',' → logprob: -10.575984001159668
    4. 'n' → logprob: -11.825984001159668
    5. ' ' → logprob: -11.950984001159668
    6. '<|end|>' → logprob: -13.825984001159668
    7. ')' → logprob: -14.450984001159668
    8. 'b' → logprob: -14.450984001159668
    9. ',p' → logprob: -14.450984001159668
    10. '
' → logprob: -14.700984001159668

Token 2879: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.007359329145401716
    2. ' enumerate' → logprob: -5.007359504699707
    3. 'p' → logprob: -7.757359504699707
    4. 'b' → logprob: -9.132359504699707
    5. '
' → logprob: -10.132359504699707
    6. '(p' → logprob: -11.132359504699707
    7. '```' → logprob: -11.507359504699707
    8. 'in' → logprob: -11.632359504699707
    9. '[(' → logprob: -12.257359504699707
    10. '(' → logprob: -12.257359504699707

Token 2880: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.9040898880339228e-05
    2. ' line' → logprob: -10.500028610229492
    3. '(line' → logprob: -14.125028610229492
    4. '[line' → logprob: -14.500028610229492
    5. '#line' → logprob: -15.375028610229492
    6. '	line' → logprob: -18.375028610229492
    7. '   ' → logprob: -18.500028610229492
    8. 'enumer' → logprob: -19.000028610229492
    9. ' ' → logprob: -19.250028610229492
    10. '
' → logprob: -19.500028610229492

Token 2881: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.012537204660475254
    2. 'b' → logprob: -4.387537002563477
    3. '   ' → logprob: -11.887537002563477
    4. 'B' → logprob: -12.262537002563477
    5. ')' → logprob: -12.762537002563477
    6. '[' → logprob: -13.512537002563477
    7. 'a' → logprob: -13.512537002563477
    8. '_a' → logprob: -13.512537002563477
    9. '       ' → logprob: -14.137537002563477
    10. '           ' → logprob: -14.262537002563477

Token 2882: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.11376133561134338
    2. ')}
' → logprob: -2.2387614250183105
    3. ')' → logprob: -7.4887614250183105
    4. '           ' → logprob: -8.988760948181152
    5. ')}
' → logprob: -9.113760948181152
    6. '}' → logprob: -10.238760948181152
    7. ')}

' → logprob: -10.863760948181152
    8. ' )}
' → logprob: -10.863760948181152
    9. '       ' → logprob: -11.238760948181152
    10. '               ' → logprob: -12.113760948181152

Token 2883: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1069403886795044
    2. 'for' → logprob: -1.3569403886795044
    3. ' for' → logprob: -1.4819403886795044
    4. '       ' → logprob: -1.7319403886795044
    5. '	for' → logprob: -6.231940269470215
    6. '
' → logprob: -6.606940269470215
    7. '[' → logprob: -7.231940269470215
    8. '	       ' → logprob: -7.231940269470215
    9. '		' → logprob: -7.481940269470215
    10. '	' → logprob: -7.481940269470215

Token 2884: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04994763433933258
    2. '
' → logprob: -3.924947738647461
    3. ' for' → logprob: -4.549947738647461
    4. '       ' → logprob: -4.799947738647461
    5. 'for' → logprob: -4.924947738647461
    6. '            
' → logprob: -7.674947738647461
    7. ',' → logprob: -7.799947738647461
    8. ',
' → logprob: -8.049947738647461
    9. '               ' → logprob: -8.174947738647461
    10. ' 
' → logprob: -8.799947738647461

Token 2885: ' to' (ID: 316)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.16653981804847717
    2. '{}
' → logprob: -2.4165399074554443
    3. '{' → logprob: -3.0415399074554443
    4. 'for' → logprob: -5.041539669036865
    5. ' {}' → logprob: -6.291539669036865
    6. '           ' → logprob: -6.291539669036865
    7. 'None' → logprob: -6.791539669036865
    8. '0' → logprob: -7.291539669036865
    9. ' {}
' → logprob: -7.416539669036865
    10. ' for' → logprob: -7.416539669036865

Token 2886: ' quickly' (ID: 8065)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.900303840637207
    2. 'connect' → logprob: -1.900303840637207
    3. 'allow' → logprob: -3.025303840637207
    4. ' find' → logprob: -3.525303840637207
    5. 'avoid' → logprob: -3.525303840637207
    6. 'detect' → logprob: -3.775303840637207
    7. 'continue' → logprob: -3.775303840637207
    8. '{' → logprob: -3.900303840637207
    9. ' ' → logprob: -3.900303840637207
    10. '   ' → logprob: -4.150303840637207

Token 2887: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.00496144313365221
    2. 'match' → logprob: -6.2549614906311035
    3. 'loc' → logprob: -6.6299614906311035
    4. 'lookup' → logprob: -7.2549614906311035
    5. ' find' → logprob: -7.7549614906311035
    6. 'check' → logprob: -8.379961013793945
    7. 'identify' → logprob: -9.129961013793945
    8. 'map' → logprob: -9.379961013793945
    9. 'get' → logprob: -10.129961013793945
    10. 'look' → logprob: -10.379961013793945

Token 2888: ' nodes' (ID: 15749)
  Prédit: 'matching'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matching' → logprob: -0.7267898321151733
    2. 'matches' → logprob: -0.9767898321151733
    3. 'closest' → logprob: -3.101789951324463
    4. 'possible' → logprob: -3.851789951324463
    5. 'potential' → logprob: -4.476789951324463
    6. 'points' → logprob: -4.601789951324463
    7. 'cor' → logprob: -4.851789951324463
    8. 'approx' → logprob: -5.101789951324463
    9. 'p' → logprob: -5.101789951324463
    10. 'j' → logprob: -5.226789951324463

Token 2889: ' by' (ID: 656)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.6498315334320068
    2. 'for' → logprob: -2.024831533432007
    3. 'in' → logprob: -2.149831533432007
    4. ' on' → logprob: -2.649831533432007
    5. ' in' → logprob: -2.774831533432007
    6. 'on' → logprob: -3.024831533432007
    7. ' with' → logprob: -3.024831533432007
    8. ' at' → logprob: -3.149831533432007
    9. ',' → logprob: -3.274831533432007
    10. 'x' → logprob: -3.524831533432007

Token 2890: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0012067806674167514
    2. 'p' → logprob: -7.251206874847412
    3. 'their' → logprob: -8.876206398010254
    4. 'round' → logprob: -9.001206398010254
    5. ' x' → logprob: -9.376206398010254
    6. 'position' → logprob: -10.251206398010254
    7. '{x' → logprob: -10.376206398010254
    8. 'coordinates' → logprob: -11.126206398010254
    9. 'rounded' → logprob: -11.501206398010254
    10. 'key' → logprob: -11.626206398010254

Token 2891: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7944936156272888
    2. '       ' → logprob: -1.7944936752319336
    3. '           ' → logprob: -1.7944936752319336
    4. ')' → logprob: -3.0444936752319336
    5. 'for' → logprob: -3.5444936752319336
    6. ')
' → logprob: -3.5444936752319336
    7. ' for' → logprob: -4.169493675231934
    8. ' ' → logprob: -5.044493675231934
    9. '        
' → logprob: -5.044493675231934
    10. '.' → logprob: -5.169493675231934

Token 2892: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03615821152925491
    2. '           ' → logprob: -4.286158084869385
    3. ' for' → logprob: -4.536158084869385
    4. 'for' → logprob: -4.536158084869385
    5. '   ' → logprob: -9.036158561706543
    6. '	for' → logprob: -9.661158561706543
    7. '	' → logprob: -10.161158561706543
    8. '```' → logprob: -10.286158561706543
    9. '	   ' → logprob: -10.536158561706543
    10. '	       ' → logprob: -11.036158561706543

Token 2893: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08196675032377243
    2. '           ' → logprob: -2.8319666385650635
    3. '       ' → logprob: -4.206966876983643
    4. ' for' → logprob: -5.331966876983643
    5. '```' → logprob: -10.081966400146484
    6. '   ' → logprob: -11.081966400146484
    7. '               ' → logprob: -11.706966400146484
    8. '	for' → logprob: -12.456966400146484
    9. ' ' → logprob: -13.706966400146484
    10. '
' → logprob: -13.831966400146484

Token 2894: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0046169147826731205
    2. 'i' → logprob: -6.504616737365723
    3. ' j' → logprob: -6.504616737365723
    4. 'x' → logprob: -6.629616737365723
    5. '   ' → logprob: -9.754616737365723
    6. '(j' → logprob: -9.879616737365723
    7. 'p' → logprob: -10.004616737365723
    8. 'a' → logprob: -10.254616737365723
    9. 'u' → logprob: -11.254616737365723
    10. 'idx' → logprob: -11.504616737365723

Token 2895: '_a' (ID: 10852)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2592635750770569
    2. ',' → logprob: -2.009263515472412
    3. 'in' → logprob: -2.384263515472412
    4. ' ,' → logprob: -6.259263515472412
    5. ',p' → logprob: -9.88426399230957
    6. '0' → logprob: -10.25926399230957
    7. '_in' → logprob: -10.75926399230957
    8. ',j' → logprob: -10.88426399230957
    9. ',in' → logprob: -10.88426399230957
    10. '1' → logprob: -11.63426399230957

Token 2896: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8437140583992004
    2. 'in' → logprob: -1.2187139987945557
    3. ',' → logprob: -1.4687139987945557
    4. ' ,' → logprob: -3.4687139987945557
    5. ' ' → logprob: -5.718714237213135
    6. '[' → logprob: -5.968714237213135
    7. '   ' → logprob: -6.968714237213135
    8. '=' → logprob: -7.218714237213135
    9. ' (' → logprob: -7.593714237213135
    10. '<|end|>' → logprob: -7.843714237213135

Token 2897: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015135504072532058
    2. 'pa' → logprob: -6.501513481140137
    3. 'point' → logprob: -11.876513481140137
    4. ' p' → logprob: -13.001513481140137
    5. 'pt' → logprob: -14.251513481140137
    6. 'x' → logprob: -14.626513481140137
    7. 'node' → logprob: -14.876513481140137
    8. 'a' → logprob: -15.751513481140137
    9. '```' → logprob: -16.501514434814453
    10. 'u' → logprob: -16.876514434814453

Token 2898: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.14762650430202484
    2. 'a' → logprob: -2.1476263999938965
    3. ' in' → logprob: -3.8976263999938965
    4. 'in' → logprob: -8.647626876831055
    5. ' a' → logprob: -12.022626876831055
    6. 'A' → logprob: -12.022626876831055
    7. '```' → logprob: -13.772626876831055
    8. 'b' → logprob: -14.147626876831055
    9. '_A' → logprob: -14.272626876831055
    10. '(a' → logprob: -14.522626876831055

Token 2899: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02657928504049778
    2. 'in' → logprob: -3.6515793800354004
    3. ',' → logprob: -8.901578903198242
    4. 'a' → logprob: -9.526578903198242
    5. ' ' → logprob: -10.401578903198242
    6. '_in' → logprob: -11.401578903198242
    7. ' ,' → logprob: -12.276578903198242
    8. '_a' → logprob: -12.651578903198242
    9. ')' → logprob: -12.776578903198242
    10. '	in' → logprob: -13.026578903198242

Token 2900: ' enumerate' (ID: 29671)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04522863030433655
    2. 'enumer' → logprob: -3.1702287197113037
    3. 'range' → logprob: -7.170228481292725
    4. ' line' → logprob: -7.295228481292725
    5. ' enumerate' → logprob: -7.670228481292725
    6. '(line' → logprob: -8.295228958129883
    7. '[line' → logprob: -11.420228958129883
    8. 'in' → logprob: -11.420228958129883
    9. '   ' → logprob: -11.670228958129883
    10. ' ' → logprob: -11.920228958129883

Token 2901: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00023607931507285684
    2. ' line' → logprob: -8.875236511230469
    3. 'nodes' → logprob: -9.625236511230469
    4. '(line' → logprob: -10.875236511230469
    5. 'node' → logprob: -11.875236511230469
    6. 'lines' → logprob: -13.125236511230469
    7. '[line' → logprob: -13.625236511230469
    8. '#line' → logprob: -14.875236511230469
    9. '   ' → logprob: -15.375236511230469
    10. 'layer' → logprob: -16.50023651123047

Token 2902: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.005861955229192972
    2. '_b' → logprob: -5.505861759185791
    3. 's' → logprob: -6.755861759185791
    4. 'a' → logprob: -8.25586223602295
    5. '_per' → logprob: -8.88086223602295
    6. 'per' → logprob: -9.50586223602295
    7. ')' → logprob: -10.13086223602295
    8. '[line' → logprob: -11.13086223602295
    9. '   ' → logprob: -11.25586223602295
    10. '[' → logprob: -11.38086223602295

Token 2903: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0031344667077064514
    2. '):' → logprob: -6.753134250640869
    3. '       ' → logprob: -6.878134250640869
    4. '           ' → logprob: -7.503134250640869
    5. ':
' → logprob: -9.003134727478027
    6. '               ' → logprob: -9.378134727478027
    7. '):
' → logprob: -9.878134727478027
    8. ')' → logprob: -10.378134727478027
    9. '   ' → logprob: -10.378134727478027
    10. ' ):
' → logprob: -10.878134727478027

Token 2904: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001953018014319241
    2. ' for' → logprob: -6.626953125
    3. '	           ' → logprob: -8.626953125
    4. '           ' → logprob: -8.751953125
    5. '			' → logprob: -10.126953125
    6. 'for' → logprob: -10.251953125
    7. '		       ' → logprob: -10.251953125
    8. '	       ' → logprob: -10.501953125
    9. '   ' → logprob: -10.501953125
    10. '			   ' → logprob: -10.876953125

Token 2905: ' out' (ID: 842)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2031826674938202
    2. ' for' → logprob: -1.9531826972961426
    3. 'x' → logprob: -3.5781826972961426
    4. '                   ' → logprob: -4.578182697296143
    5. ' x' → logprob: -6.328182697296143
    6. '   ' → logprob: -7.578182697296143
    7. '               ' → logprob: -7.828182697296143
    8. ' ' → logprob: -8.078182220458984
    9. '#' → logprob: -8.453182220458984
    10. 'if' → logprob: -9.078182220458984

Token 2906: '_a' (ID: 10852)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.012762026861310005
    2. '_' → logprob: -4.762762069702148
    3. '_node' → logprob: -6.637762069702148
    4. '_idx' → logprob: -7.137762069702148
    5. ' =' → logprob: -8.262762069702148
    6. '_index' → logprob: -8.387762069702148
    7. '_vertex' → logprob: -8.512762069702148
    8. '```' → logprob: -8.512762069702148
    9. ')_' → logprob: -8.762762069702148
    10. '_ids' → logprob: -8.887762069702148

Token 2907: ' =' (ID: 314)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.968244194984436
    2. ' =' → logprob: -1.343244194984436
    3. '_' → logprob: -1.968244194984436
    4. '=' → logprob: -2.9682440757751465
    5. '_idx' → logprob: -3.4682440757751465
    6. ')' → logprob: -3.8432440757751465
    7. '[' → logprob: -4.0932440757751465
    8. '.' → logprob: -4.2182440757751465
    9. '._' → logprob: -4.4682440757751465
    10. ' _' → logprob: -4.7182440757751465

Token 2908: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -8.351697033504024e-05
    2. ' node' → logprob: -9.500083923339844
    3. '2' → logprob: -12.000083923339844
    4. '(node' → logprob: -13.250083923339844
    5. 'network' → logprob: -15.125083923339844
    6. '   ' → logprob: -15.750083923339844
    7. ' ' → logprob: -17.000083923339844
    8. '           ' → logprob: -17.375083923339844
    9. '	node' → logprob: -17.625083923339844
    10. '               ' → logprob: -17.875083923339844

Token 2909: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00015717383939772844
    2. '_map' → logprob: -9.500157356262207
    3. 'a' → logprob: -10.875157356262207
    4. 'id' → logprob: -11.250157356262207
    5. '```' → logprob: -11.375157356262207
    6. ')_' → logprob: -12.000157356262207
    7. 's' → logprob: -12.375157356262207
    8. ''_' → logprob: -12.875157356262207
    9. ' _' → logprob: -13.000157356262207
    10. '}_' → logprob: -13.125157356262207

Token 2910: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -6.289473822107539e-05
    2. '[(' → logprob: -11.375062942504883
    3. '   ' → logprob: -12.125062942504883
    4. ' _' → logprob: -12.375062942504883
    5. '_maps' → logprob: -12.375062942504883
    6. ')' → logprob: -12.625062942504883
    7. '[' → logprob: -12.625062942504883
    8. '_a' → logprob: -12.750062942504883
    9. 'map' → logprob: -13.000062942504883
    10. '
' → logprob: -13.000062942504883

Token 2911: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0052694459445774555
    2. '(i' → logprob: -5.380269527435303
    3. '((' → logprob: -7.755269527435303
    4. '(' → logprob: -8.505269050598145
    5. '[i' → logprob: -12.255269050598145
    6. '[' → logprob: -12.505269050598145
    7. ',' → logprob: -12.630269050598145
    8. '[
' → logprob: -12.630269050598145
    9. '   ' → logprob: -14.005269050598145
    10. ' (' → logprob: -14.380269050598145

Token 2912: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6240566083070007e-06
    2. ' i' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '(i' → logprob: -17.375001907348633
    5. ')i' → logprob: -17.875001907348633
    6. '	i' → logprob: -18.125001907348633
    7. '{i' → logprob: -19.125001907348633
    8. '_i' → logprob: -19.125001907348633
    9. ''i' → logprob: -20.375001907348633
    10. ')' → logprob: -20.625001907348633

Token 2913: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036287005059421062
    2. ',j' → logprob: -5.628628730773926
    3. ' ,' → logprob: -11.003628730773926
    4. ',
' → logprob: -12.378628730773926
    5. '',' → logprob: -13.753628730773926
    6. '	' → logprob: -14.128628730773926
    7. ' ' → logprob: -14.503628730773926
    8. '		' → logprob: -14.503628730773926
    9. ',p' → logprob: -14.503628730773926
    10. '			' → logprob: -14.503628730773926

Token 2914: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012451570364646614
    2. ' j' → logprob: -9.00012493133545
    3. '   ' → logprob: -14.87512493133545
    4. '	j' → logprob: -15.50012493133545
    5. ',j' → logprob: -16.250123977661133
    6. '(j' → logprob: -16.375123977661133
    7. '$j' → logprob: -16.375123977661133
    8. '    ' → logprob: -16.875123977661133
    9. ' ' → logprob: -16.875123977661133
    10. '_j' → logprob: -17.125123977661133

Token 2915: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.002812601625919342
    2. 'a' → logprob: -5.877812385559082
    3. '   ' → logprob: -13.252812385559082
    4. ')' → logprob: -13.877812385559082
    5. '(a' → logprob: -14.377812385559082
    6. '```' → logprob: -14.377812385559082
    7. ')][' → logprob: -14.502812385559082
    8. '[' → logprob: -14.627812385559082
    9. ')]' → logprob: -14.752812385559082
    10. ',' → logprob: -14.877812385559082

Token 2916: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000650125031825155
    2. ']' → logprob: -8.375650405883789
    3. ')]
' → logprob: -8.500650405883789
    4. '               ' → logprob: -8.875650405883789
    5. ')' → logprob: -10.500650405883789
    6. ')][' → logprob: -11.500650405883789
    7. ']]' → logprob: -11.875650405883789
    8. '           ' → logprob: -12.000650405883789
    9. '                   ' → logprob: -12.625650405883789
    10. '                ' → logprob: -12.625650405883789

Token 2917: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5518675446510315
    2. '*' → logprob: -1.8018674850463867
    3. ']' → logprob: -1.8018674850463867
    4. ')' → logprob: -3.3018674850463867
    5. '               ' → logprob: -3.3018674850463867
    6. '                   ' → logprob: -5.051867485046387
    7. ',' → logprob: -5.426867485046387
    8. ']*' → logprob: -5.426867485046387
    9. ')*' → logprob: -6.426867485046387
    10. '
' → logprob: -7.051867485046387

Token 2918: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003809833142440766
    2. ' ' → logprob: -7.875380992889404
    3. '   ' → logprob: -14.250380516052246
    4. '
' → logprob: -16.625381469726562
    5. '  ' → logprob: -17.125381469726562
    6. '```' → logprob: -17.250381469726562
    7. '1' → logprob: -17.750381469726562
    8. '    ' → logprob: -18.500381469726562
    9. '`' → logprob: -18.500381469726562
    10. '     ' → logprob: -18.875381469726562

Token 2919: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.750035285949707
    4. '
' → logprob: -17.125036239624023
    5. '1' → logprob: -17.375036239624023
    6. '  ' → logprob: -18.500036239624023
    7. '     ' → logprob: -19.062536239624023
    8. '       ' → logprob: -19.250036239624023
    9. '`' → logprob: -19.312536239624023
    10. '    ' → logprob: -19.500036239624023

Token 2920: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0788986012339592
    2. ' +' → logprob: -2.5788986682891846
    3. '               ' → logprob: -12.703898429870605
    4. '+
' → logprob: -13.328898429870605
    5. '                   ' → logprob: -13.453898429870605
    6. ')+' → logprob: -13.953898429870605
    7. '                       ' → logprob: -14.703898429870605
    8. '                ' → logprob: -15.078898429870605
    9. ')' → logprob: -15.578898429870605
    10. '
' → logprob: -15.828898429870605

Token 2921: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -21.25
    4. '`' → logprob: -22.625
    5. '```' → logprob: -22.625
    6. '
' → logprob: -24.125
    7. '  ' → logprob: -24.875
    8. '           ' → logprob: -25.25
    9. '１' → logprob: -25.375
    10. '       ' → logprob: -25.375

Token 2922: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -19.75
    4. '`' → logprob: -21.375
    5. '   ' → logprob: -21.5
    6. '
' → logprob: -22.5
    7. '0' → logprob: -22.875
    8. '' → logprob: -23.125
    9. '``' → logprob: -23.375
    10. '  ' → logprob: -23.875

Token 2923: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015152961947023869
    2. '
' → logprob: -4.515152931213379
    3. 'for' → logprob: -6.015152931213379
    4. '                
' → logprob: -7.890152931213379
    5. ' for' → logprob: -8.015152931213379
    6. '                   ' → logprob: -8.515152931213379
    7. '           ' → logprob: -8.890152931213379
    8. '<|end|>' → logprob: -9.140152931213379
    9. ')' → logprob: -9.390152931213379
    10. ',' → logprob: -9.515152931213379

Token 2924: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02365828864276409
    2. ' for' → logprob: -4.148658275604248
    3. 'for' → logprob: -5.023658275604248
    4. '			' → logprob: -7.648658275604248
    5. '		       ' → logprob: -8.398658752441406
    6. '                   ' → logprob: -9.648658752441406
    7. '	           ' → logprob: -10.023658752441406
    8. '       ' → logprob: -10.273658752441406
    9. '                ' → logprob: -10.398658752441406
    10. '			   ' → logprob: -11.273658752441406

Token 2925: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00047416388406418264
    2. ' for' → logprob: -8.500473976135254
    3. '               ' → logprob: -9.000473976135254
    4. 'line' → logprob: -9.500473976135254
    5. '                   ' → logprob: -9.750473976135254
    6. '   ' → logprob: -12.250473976135254
    7. '           ' → logprob: -13.500473976135254
    8. 'lines' → logprob: -13.625473976135254
    9. ' ' → logprob: -13.750473976135254
    10. '#' (adapté à ' #') → logprob: -13.875473976135254

Token 2926: ' Vertical' (ID: 58623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005922515876591206
    2. '               ' → logprob: -5.755922317504883
    3. 'x' → logprob: -7.005922317504883
    4. 'k' → logprob: -7.380922317504883
    5. '#' → logprob: -8.255922317504883
    6. ' for' → logprob: -8.505922317504883
    7. 'idx' → logprob: -8.630922317504883
    8. 'line' → logprob: -9.380922317504883
    9. 'l' → logprob: -9.380922317504883
    10. 'left' → logprob: -9.505922317504883

Token 2927: ' connections' (ID: 21069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05414491519331932
    2. 'b' → logprob: -4.179144859313965
    3. 'j' → logprob: -4.554144859313965
    4. 'offset' → logprob: -4.929144859313965
    5. 'line' → logprob: -5.554144859313965
    6. ' for' → logprob: -5.929144859313965
    7. 'positions' → logprob: -6.304144859313965
    8. 'edges' → logprob: -6.304144859313965
    9. 'spacing' → logprob: -6.429144859313965
    10. '   ' → logprob: -6.804144859313965

Token 2928: ' only' (ID: 1606)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22696751356124878
    2. 'for' → logprob: -2.2269675731658936
    3. ' for' → logprob: -2.3519675731658936
    4. ',' → logprob: -12.351967811584473
    5. 'to' → logprob: -12.726967811584473
    6. '                   ' → logprob: -13.476967811584473
    7. '           ' → logprob: -13.601967811584473
    8. ' to' → logprob: -13.726967811584473
    9. ':' → logprob: -14.351967811584473
    10. '                ' → logprob: -14.351967811584473

Token 2929: ' between' (ID: 2870)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18916606903076172
    2. ' for' → logprob: -1.9391660690307617
    3. '               ' → logprob: -3.5641660690307617
    4. '
' → logprob: -9.564166069030762
    5. '                
' → logprob: -10.439166069030762
    6. '```' → logprob: -10.689166069030762
    7. 'if' → logprob: -10.814166069030762
    8. ',' → logprob: -11.064166069030762
    9. '                   ' → logprob: -11.314166069030762
    10. ':' → logprob: -12.189166069030762

Token 2930: ' nodes' (ID: 15749)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9140853881835938
    2. 'nodes' → logprob: -1.2890853881835938
    3. 'k' → logprob: -2.5390853881835938
    4. 'for' → logprob: -2.7890853881835938
    5. 'p' → logprob: -2.9140853881835938
    6. 'points' → logprob: -3.1640853881835938
    7. '#' → logprob: -3.7890853881835938
    8. 'all' → logprob: -4.664085388183594
    9. 'the' → logprob: -4.789085388183594
    10. 'x' → logprob: -5.414085388183594

Token 2931: ' with' (ID: 483)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8303979635238647
    2. 'on' → logprob: -1.0803979635238647
    3. ' in' → logprob: -2.4553980827331543
    4. ' on' → logprob: -2.8303980827331543
    5. 'b' → logprob: -3.8303980827331543
    6. 'j' → logprob: -4.455398082733154
    7. 'with' → logprob: -4.705398082733154
    8. '               ' → logprob: -4.830398082733154
    9. 'at' → logprob: -5.330398082733154
    10. ' j' → logprob: -5.455398082733154

Token 2932: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.7045633792877197
    2. 'the' → logprob: -0.9545633792877197
    3. 'matching' → logprob: -2.9545633792877197
    4. 'exact' → logprob: -3.3295633792877197
    5. 'equal' → logprob: -4.454563140869141
    6. 'close' → logprob: -4.954563140869141
    7. 'p' → logprob: -5.329563140869141
    8. 'approximately' → logprob: -6.079563140869141
    9. 'similar' → logprob: -6.579563140869141
    10. ' same' → logprob: -6.704563140869141

Token 2933: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00017803447553887963
    2. 'round' → logprob: -9.625178337097168
    3. ' x' → logprob: -10.000178337097168
    4. 'rounded' → logprob: -10.750178337097168
    5. 'coordinates' → logprob: -11.750178337097168
    6. '(round' → logprob: -12.125178337097168
    7. '.x' → logprob: -12.250178337097168
    8. '
' → logprob: -12.625178337097168
    9. '0' → logprob: -12.625178337097168
    10. 'or' → logprob: -13.125178337097168

Token 2934: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3284483850002289
    2. ' and' → logprob: -2.2034482955932617
    3. 'and' → logprob: -2.9534482955932617
    4. ',' → logprob: -3.8284482955932617
    5. ' or' → logprob: -4.203448295593262
    6. '           ' → logprob: -4.328448295593262
    7. ':' → logprob: -4.578448295593262
    8. '                   ' → logprob: -4.703448295593262
    9. '
' → logprob: -4.828448295593262
    10. ':
' → logprob: -4.828448295593262

Token 2935: 'to' (ID: 935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8014122843742371
    2. '0' → logprob: -1.5514123439788818
    3. '):
' → logprob: -2.051412343978882
    4. 'rounded' → logprob: -3.051412343978882
    5. '#' → logprob: -3.676412343978882
    6. '):' → logprob: -4.051412105560303
    7. ':' → logprob: -4.051412105560303
    8. 'round' → logprob: -4.676412105560303
    9. ' or' → logprob: -4.801412105560303
    10. 'p' → logprob: -4.801412105560303

Token 2936: ' keep' (ID: 3357)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.594864010810852
    2. 'ler' → logprob: -1.844864010810852
    3. 'lar' → logprob: -3.0948638916015625
    4. 'le' → logprob: -3.0948638916015625
    5. 'continue' → logprob: -3.0948638916015625
    6. '       ' → logprob: -3.2198638916015625
    7. ' j' → logprob: -3.2198638916015625
    8. 'r' → logprob: -3.2198638916015625
    9. 'p' → logprob: -3.7198638916015625
    10. '0' → logprob: -3.8448638916015625

Token 2937: ' graph' (ID: 7465)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.628079891204834
    2. 'vertical' → logprob: -1.878079891204834
    3. 'line' → logprob: -2.003079891204834
    4. 'horizontal' → logprob: -2.128079891204834
    5. 'continu' → logprob: -2.628079891204834
    6. 'it' → logprob: -3.128079891204834
    7. 'j' → logprob: -3.753079891204834
    8. 'strict' → logprob: -3.878079891204834
    9. 'corr' → logprob: -4.128079891204834
    10. 'lines' → logprob: -4.253079891204834

Token 2938: ' sane' (ID: 86601)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3204493522644043
    2. 'connected' → logprob: -2.3204493522644043
    3. 'consistent' → logprob: -2.4454493522644043
    4. '               ' → logprob: -3.1954493522644043
    5. 'connections' → logprob: -3.1954493522644043
    6. 'connect' → logprob: -3.1954493522644043
    7. ')
' → logprob: -3.3204493522644043
    8. 'aligned' → logprob: -3.3204493522644043
    9. '           ' → logprob: -3.5704493522644043
    10. 'structure' → logprob: -3.6954493522644043

Token 2939: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5076035261154175
    2. '               ' → logprob: -1.1326035261154175
    3. ')' → logprob: -3.132603645324707
    4. '):
' → logprob: -3.882603645324707
    5. ' and' → logprob: -5.257603645324707
    6. '                   ' → logprob: -6.132603645324707
    7. ',' → logprob: -6.632603645324707
    8. ' or' → logprob: -7.007603645324707
    9. 'and' → logprob: -7.507603645324707
    10. '),' → logprob: -8.007603645324707

Token 2940: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004046106245368719
    2. '			' → logprob: -6.6290459632873535
    3. '	' → logprob: -7.5040459632873535
    4. '                   ' → logprob: -7.5040459632873535
    5. '                ' → logprob: -8.379046440124512
    6. '```' → logprob: -8.379046440124512
    7. ' for' → logprob: -8.504046440124512
    8. '       ' → logprob: -8.879046440124512
    9. '           ' → logprob: -9.004046440124512
    10. '                
' → logprob: -9.504046440124512

Token 2941: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1928003877401352
    2. ' for' → logprob: -2.942800283432007
    3. 'if' → logprob: -3.067800283432007
    4. '               ' → logprob: -3.067800283432007
    5. 'x' → logprob: -3.817800283432007
    6. 'j' → logprob: -5.817800521850586
    7. ' if' → logprob: -5.942800521850586
    8. ' x' → logprob: -6.442800521850586
    9. ' j' → logprob: -8.442800521850586
    10. '                   ' → logprob: -9.442800521850586

Token 2942: ' Because' (ID: 13602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4671787917613983
    2. 'if' → logprob: -1.4671788215637207
    3. '               ' → logprob: -2.0921788215637207
    4. ' for' → logprob: -4.717178821563721
    5. ' if' → logprob: -5.217178821563721
    6. 'x' → logprob: -5.717178821563721
    7. '                   ' → logprob: -7.217178821563721
    8. '           ' → logprob: -8.717178344726562
    9. 'j' → logprob: -8.842178344726562
    10. '                ' → logprob: -8.967178344726562

Token 2943: ' free' (ID: 2240)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.19959673285484314
    2. 'p' → logprob: -2.199596643447876
    3. ' abs' → logprob: -3.199596643447876
    4. 'round' → logprob: -4.324596881866455
    5. 'True' → logprob: -4.949596881866455
    6. ' p' → logprob: -5.824596881866455
    7. 'the' → logprob: -6.699596881866455
    8. 'line' → logprob: -7.449596881866455
    9. 'len' → logprob: -7.449596881866455
    10. ' True' → logprob: -7.699596881866455

Token 2944: ' segments' (ID: 33749)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.6610578894615173
    2. 'segments' → logprob: -0.7860578894615173
    3. 'x' → logprob: -4.536057949066162
    4. 'segment' → logprob: -5.536057949066162
    5. ' segments' → logprob: -5.786057949066162
    6. '           ' → logprob: -5.786057949066162
    7. '_segment' → logprob: -6.036057949066162
    8. 'Segments' → logprob: -6.661057949066162
    9. '       ' → logprob: -7.286057949066162
    10. 'space' → logprob: -7.536057949066162

Token 2945: ' may' (ID: 1340)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.8749053478240967
    2. 'only' → logprob: -2.1249053478240967
    3. 'on' → logprob: -2.4999053478240967
    4. ' on' → logprob: -2.6249053478240967
    5. ' end' → logprob: -2.6249053478240967
    6. ' at' → logprob: -2.7499053478240967
    7. '#' → logprob: -2.8749053478240967
    8. 'are' → logprob: -2.8749053478240967
    9. 'can' → logprob: -3.2499053478240967
    10. 'at' → logprob: -3.3749053478240967

Token 2946: ' differ' (ID: 2171)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3849416971206665
    2. ' not' → logprob: -2.009941577911377
    3. 'have' → logprob: -2.759941577911377
    4. 'be' → logprob: -2.884941577911377
    5. 'only' → logprob: -4.009941577911377
    6. 'end' → logprob: -4.134941577911377
    7. 'span' → logprob: -5.134941577911377
    8. ' be' → logprob: -5.259941577911377
    9. 'extend' → logprob: -5.634941577911377
    10. ' end' → logprob: -5.634941577911377

Token 2947: ' between' (ID: 2870)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.37548717856407166
    2. '               ' → logprob: -2.0004870891571045
    3. ',' → logprob: -2.6254870891571045
    4. ' in' → logprob: -2.8754870891571045
    5. 'by' → logprob: -4.375487327575684
    6. ':' → logprob: -5.125487327575684
    7. ':
' → logprob: -5.250487327575684
    8. 'for' → logprob: -5.625487327575684
    9. 'at' → logprob: -5.750487327575684
    10. '```' → logprob: -6.000487327575684

Token 2948: ' horizontal' (ID: 25511)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0079043535515666
    2. 'line' → logprob: -5.757904529571533
    3. ' lines' → logprob: -6.257904529571533
    4. 'adj' → logprob: -6.632904529571533
    5. 'i' → logprob: -7.507904529571533
    6. 'j' → logprob: -8.882904052734375
    7. 'nodes' → logprob: -8.882904052734375
    8. 'two' → logprob: -9.132904052734375
    9. 'the' → logprob: -9.257904052734375
    10. 'horizontal' → logprob: -9.507904052734375

Token 2949: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.09980639070272446
    2. ' lines' → logprob: -2.974806308746338
    3. 'line' → logprob: -3.474806308746338
    4. 'positions' → logprob: -5.224806308746338
    5. ' line' → logprob: -6.099806308746338
    6. 'edges' → logprob: -6.849806308746338
    7. 'coordinates' → logprob: -6.974806308746338
    8. '_line' → logprob: -7.224806308746338
    9. '_lines' → logprob: -7.724806308746338
    10. 'nodes' → logprob: -8.099806785583496

Token 2950: ',
' (ID: 412)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2288912981748581
    2. ',' → logprob: -2.353891372680664
    3. ' and' → logprob: -3.478891372680664
    4. ':' → logprob: -3.978891372680664
    5. '                   ' → logprob: -3.978891372680664
    6. ':
' → logprob: -4.478891372680664
    7. ' for' → logprob: -5.228891372680664
    8. '```' → logprob: -5.853891372680664
    9. ',
' → logprob: -5.978891372680664
    10. ' (' → logprob: -6.228891372680664

Token 2951: '               ' (ID: 506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38509035110473633
    2. 'for' → logprob: -2.0100903511047363
    3. ' continue' → logprob: -2.5100903511047363
    4. '                   ' → logprob: -3.2600903511047363
    5. '               ' → logprob: -3.5100903511047363
    6. 'continue' → logprob: -4.510090351104736
    7. '#' → logprob: -5.385090351104736
    8. '```' → logprob: -5.635090351104736
    9. ' ' → logprob: -5.760090351104736
    10. '                ' → logprob: -5.885090351104736

Token 2952: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.838386595249176
    2. 'continue' → logprob: -1.3383865356445312
    3. 'for' → logprob: -1.4633865356445312
    4. '                   ' → logprob: -3.9633865356445312
    5. 'the' → logprob: -4.338386535644531
    6. ' continue' → logprob: -4.338386535644531
    7. 'we' → logprob: -4.463386535644531
    8. '               ' → logprob: -4.963386535644531
    9. ' for' → logprob: -5.588386535644531
    10. 'here' → logprob: -6.713386535644531

Token 2953: ' connect' (ID: 4837)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7254114151000977
    2. '#' → logprob: -0.9754114151000977
    3. 'we' → logprob: -2.7254114151000977
    4. 'continue' → logprob: -2.8504114151000977
    5. 'only' → logprob: -5.475411415100098
    6. 'the' → logprob: -6.225411415100098
    7. ' for' → logprob: -6.225411415100098
    8. 'continu' → logprob: -6.225411415100098
    9. '                   ' → logprob: -6.850411415100098
    10. '```' → logprob: -7.225411415100098

Token 2954: ' nodes' (ID: 15749)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.9432404041290283
    2. 'only' → logprob: -1.4432404041290283
    3. ' nodes' → logprob: -2.3182404041290283
    4. 'nodes' → logprob: -2.4432404041290283
    5. 'j' → logprob: -2.5682404041290283
    6. ' j' → logprob: -3.8182404041290283
    7. 'to' → logprob: -4.068240165710449
    8. ' to' → logprob: -4.193240165710449
    9. 'points' → logprob: -4.193240165710449
    10. ' points' → logprob: -4.943240165710449

Token 2955: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.212047278881073
    2. ' with' → logprob: -2.0870473384857178
    3. ' at' → logprob: -4.087047100067139
    4. 'at' → logprob: -4.087047100067139
    5. 'only' → logprob: -4.212047100067139
    6. ' only' → logprob: -5.337047100067139
    7. 'that' → logprob: -6.087047100067139
    8. 'j' → logprob: -6.337047100067139
    9. '```' → logprob: -6.712047100067139
    10. ' j' → logprob: -7.087047100067139

Token 2956: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7046502232551575
    2. 'same' → logprob: -0.8296502232551575
    3. 'p' → logprob: -3.2046501636505127
    4. 'exact' → logprob: -4.204650402069092
    5. 'matching' → logprob: -5.079650402069092
    6. 'equal' → logprob: -5.579650402069092
    7. ' p' → logprob: -6.704650402069092
    8. ' the' → logprob: -7.079650402069092
    9. ' same' → logprob: -7.704650402069092
    10. 'approximately' → logprob: -7.829650402069092

Token 2957: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004982201382517815
    2. 'round' → logprob: -5.379981994628906
    3. ' x' → logprob: -9.004981994628906
    4. 'p' → logprob: -9.379981994628906
    5. '#' → logprob: -10.004981994628906
    6. 'rounded' → logprob: -10.004981994628906
    7. '(round' → logprob: -10.379981994628906
    8. 'coordinates' → logprob: -11.629981994628906
    9. '               ' → logprob: -12.129981994628906
    10. '{x' → logprob: -13.004981994628906

Token 2958: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014194185845553875
    2. '                   ' → logprob: -5.889194011688232
    3. ',' → logprob: -6.389194011688232
    4. ' or' → logprob: -6.389194011688232
    5. ' (' → logprob: -6.764194011688232
    6. ' in' → logprob: -7.139194011688232
    7. ' only' → logprob: -7.264194011688232
    8. '
' → logprob: -7.389194011688232
    9. ' if' → logprob: -7.389194011688232
    10. '                ' → logprob: -7.514194011688232

Token 2959: ' segment' (ID: 14806)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2867223918437958
    2. 'abs' → logprob: -1.4117224216461182
    3. 'round' → logprob: -6.286722183227539
    4. ' abs' → logprob: -6.411722183227539
    5. '(abs' → logprob: -6.911722183227539
    6. 'math' → logprob: -8.286722183227539
    7. ' p' → logprob: -8.286722183227539
    8. 'x' → logprob: -8.411722183227539
    9. '(round' → logprob: -10.036722183227539
    10. '0' → logprob: -10.036722183227539

Token 2960: ' is' (ID: 382)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.28267723321914673
    2. 's' → logprob: -2.532677173614502
    3. 'ends' → logprob: -3.032677173614502
    4. 'exists' → logprob: -3.782677173614502
    5. '               ' → logprob: -4.282677173614502
    6. '           ' → logprob: -4.532677173614502
    7. 'end' → logprob: -4.532677173614502
    8. ' length' → logprob: -4.657677173614502
    9. ' ends' → logprob: -4.907677173614502
    10. ' lengths' → logprob: -5.032677173614502

Token 2961: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.6876469254493713
    2. 'valid' → logprob: -2.0626468658447266
    3. 'present' → logprob: -2.1876468658447266
    4. 'not' → logprob: -3.1876468658447266
    5. 'inside' → logprob: -3.1876468658447266
    6. 'available' → logprob: -3.3126468658447266
    7. 'contained' → logprob: -3.5626468658447266
    8. 'possible' → logprob: -4.062646865844727
    9. 'covered' → logprob: -4.312646865844727
    10. 'also' → logprob: -4.562646865844727

Token 2962: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3906904458999634
    2. ' and' → logprob: -1.2656904458999634
    3. 'and' → logprob: -4.265690326690674
    4. ' at' → logprob: -4.765690326690674
    5. '                   ' → logprob: -5.015690326690674
    6. ' for' → logprob: -5.515690326690674
    7. ',' → logprob: -6.765690326690674
    8. '           ' → logprob: -7.015690326690674
    9. ' (' → logprob: -7.140690326690674
    10. ':
' → logprob: -7.140690326690674

Token 2963: ' vertical' (ID: 17679)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006692988332360983
    2. ' self' → logprob: -5.256692886352539
    3. 'not' → logprob: -7.756692886352539
    4. 'abs' → logprob: -8.006692886352539
    5. 'p' → logprob: -9.006692886352539
    6. 'can' → logprob: -9.131692886352539
    7. '(self' → logprob: -9.381692886352539
    8. '   ' → logprob: -9.631692886352539
    9. '
' → logprob: -9.756692886352539
    10. 'y' → logprob: -9.756692886352539

Token 2964: ' segment' (ID: 14806)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6246277093887329
    2. '                   ' → logprob: -2.3746275901794434
    3. '_' → logprob: -3.1246275901794434
    4. ' and' → logprob: -3.1246275901794434
    5. ':
' → logprob: -3.3746275901794434
    6. '
' → logprob: -3.6246275901794434
    7. '   ' → logprob: -3.7496275901794434
    8. '_
' → logprob: -3.9996275901794434
    9. ',' → logprob: -4.124627590179443
    10. '.
' → logprob: -4.374627590179443

Token 2965: ' p' (ID: 275)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8077096343040466
    2. '                   ' → logprob: -2.3077096939086914
    3. 'connect' → logprob: -2.4327096939086914
    4. 's' → logprob: -2.6827096939086914
    5. 'can' → logprob: -2.8077096939086914
    6. ' connects' → logprob: -3.3077096939086914
    7. ' can' → logprob: -3.3077096939086914
    8. '```' → logprob: -3.6827096939086914
    9. ' is' → logprob: -4.057709693908691
    10. ' passes' → logprob: -4.307709693908691

Token 2966: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.01254897378385067
    2. '1' → logprob: -5.137548923492432
    3. 'a' → logprob: -5.637548923492432
    4. 'oints' → logprob: -6.512548923492432
    5. 'oint' → logprob: -7.137548923492432
    6. '```' → logprob: -7.637548923492432
    7. '_A' → logprob: -10.63754940032959
    8. '_' → logprob: -10.76254940032959
    9. '_b' → logprob: -10.88754940032959
    10. '``' → logprob: -10.88754940032959

Token 2967: '->' (ID: 609)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.22198590636253357
    2. ' and' → logprob: -2.9719858169555664
    3. '```' → logprob: -3.3469858169555664
    4. 'and' → logprob: -3.7219858169555664
    5. ' to' → logprob: -3.9719858169555664
    6. 'to' → logprob: -4.221985816955566
    7. ',' → logprob: -4.346985816955566
    8. ' connects' → logprob: -4.846985816955566
    9. '.y' → logprob: -4.971985816955566
    10. '.p' → logprob: -5.721985816955566

Token 2968: 'p' (ID: 79)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.061454951763153076
    2. 'p' → logprob: -2.936455011367798
    3. 'Point' → logprob: -5.436454772949219
    4. 'point' → logprob: -7.061454772949219
    5. ' line' → logprob: -7.561454772949219
    6. 'b' → logprob: -8.811454772949219
    7. '(line' → logprob: -8.936454772949219
    8. ' p' → logprob: -9.311454772949219
    9. '
' → logprob: -9.686454772949219
    10. 'Line' → logprob: -9.936454772949219

Token 2969: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.10563572496175766
    2. '_a' → logprob: -2.355635643005371
    3. 'b' → logprob: -5.480635643005371
    4. 'oints' → logprob: -7.605635643005371
    5. 'a' → logprob: -8.105635643005371
    6. '2' → logprob: -8.730635643005371
    7. 'oint' → logprob: -9.480635643005371
    8. '```' → logprob: -9.980635643005371
    9. '
' → logprob: -10.230635643005371
    10. 'p' → logprob: -10.355635643005371

Token 2970: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1973874866962433
    2. ':
' → logprob: -2.572387456893921
    3. ' and' → logprob: -3.572387456893921
    4. '                   ' → logprob: -3.947387456893921
    5. ' continues' → logprob: -4.4473876953125
    6. ' is' → logprob: -5.1973876953125
    7. ':' → logprob: -5.3223876953125
    8. 'and' → logprob: -5.6973876953125
    9. '```' → logprob: -5.6973876953125
    10. ' can' → logprob: -6.0723876953125

Token 2971: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.35111290216445923
    2. 'clear' → logprob: -1.7261128425598145
    3. 'not' → logprob: -2.2261128425598145
    4. 'visible' → logprob: -5.8511128425598145
    5. ' free' → logprob: -6.2261128425598145
    6. ' not' → logprob: -7.1011128425598145
    7. ' clear' → logprob: -7.2261128425598145
    8. 'possible' → logprob: -7.3511128425598145
    9. '```' → logprob: -7.6011128425598145
    10. 'pass' → logprob: -8.226113319396973

Token 2972: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006218978203833103
    2. '                   ' → logprob: -6.506218910217285
    3. '
' → logprob: -7.006218910217285
    4. ' for' → logprob: -7.006218910217285
    5. '```' → logprob: -7.131218910217285
    6. '           ' → logprob: -7.881218910217285
    7. ' and' → logprob: -8.131218910217285
    8. ',' → logprob: -8.256218910217285
    9. '                
' → logprob: -8.381218910217285
    10. ':' → logprob: -8.756218910217285

Token 2973: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016123391687870026
    2. '                   ' → logprob: -7.126612186431885
    3. '                
' → logprob: -8.501612663269043
    4. ' for' → logprob: -9.126612663269043
    5. '                ' → logprob: -9.376612663269043
    6. '			' → logprob: -9.751612663269043
    7. '                       ' → logprob: -9.751612663269043
    8. '           ' → logprob: -10.001612663269043
    9. '       ' → logprob: -10.126612663269043
    10. '```' → logprob: -10.376612663269043

Token 2974: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9090471267700195
    2. ' for' → logprob: -1.1590471267700195
    3. 'for' → logprob: -1.2840471267700195
    4. '                   ' → logprob: -5.5340471267700195
    5. '                ' → logprob: -7.1590471267700195
    6. ' ' → logprob: -7.7840471267700195
    7. '	for' → logprob: -8.78404712677002
    8. '           ' → logprob: -8.90904712677002
    9. '                       ' → logprob: -9.40904712677002
    10. '			' → logprob: -9.53404712677002

Token 2975: ' Actually' (ID: 50557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6346626281738281
    2. '               ' → logprob: -0.8846626281738281
    3. 'x' → logprob: -3.259662628173828
    4. 'if' → logprob: -4.634662628173828
    5. ' for' → logprob: -5.259662628173828
    6. 'p' → logprob: -5.884662628173828
    7. ' x' → logprob: -8.884662628173828
    8. ' if' → logprob: -8.884662628173828
    9. '                   ' → logprob: -9.259662628173828
    10. '           ' → logprob: -9.509662628173828

Token 2976: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5883561968803406
    2. ' for' → logprob: -0.8383561968803406
    3. '               ' → logprob: -5.088356018066406
    4. '                   ' → logprob: -6.088356018066406
    5. 'continue' → logprob: -6.213356018066406
    6. ' continue' → logprob: -6.838356018066406
    7. '```' → logprob: -8.713356018066406
    8. '#' → logprob: -8.838356018066406
    9. ' ' → logprob: -8.963356018066406
    10. ' ' → logprob: -9.713356018066406

Token 2977: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13493183255195618
    2. ' for' → logprob: -2.134931802749634
    3. '#' → logprob: -6.009932041168213
    4. 'continue' → logprob: -6.259932041168213
    5. '                   ' → logprob: -6.884932041168213
    6. '               ' → logprob: -7.759932041168213
    7. ' continue' → logprob: -7.884932041168213
    8. ' line' → logprob: -8.259931564331055
    9. 'p' → logprob: -8.509931564331055
    10. 'x' → logprob: -8.634931564331055

Token 2978: ' connect' (ID: 4837)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6702496409416199
    2. ' continue' → logprob: -1.6702497005462646
    3. '               ' → logprob: -2.1702497005462646
    4. ' try' → logprob: -3.2952497005462646
    5. 'try' → logprob: -3.6702497005462646
    6. 'connect' → logprob: -3.9202497005462646
    7. 'can' → logprob: -3.9202497005462646
    8. 'should' → logprob: -4.0452494621276855
    9. ' can' → logprob: -4.4202494621276855
    10. '                   ' → logprob: -4.6702494621276855

Token 2979: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5153284072875977
    2. ' for' → logprob: -1.6403284072875977
    3. 'p' → logprob: -2.1403284072875977
    4. 'j' → logprob: -3.1403284072875977
    5. 'b' → logprob: -4.640328407287598
    6. '#' → logprob: -5.015328407287598
    7. ' p' → logprob: -5.140328407287598
    8. '                   ' → logprob: -5.765328407287598
    9. 'with' → logprob: -6.015328407287598
    10. ' j' → logprob: -6.140328407287598

Token 2980: ' pairs' (ID: 24702)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6128619909286499
    2. 'k' → logprob: -1.73786199092865
    3. 'p' → logprob: -2.6128621101379395
    4. ' j' → logprob: -2.7378621101379395
    5. 'points' → logprob: -3.2378621101379395
    6. ' points' → logprob: -3.9878621101379395
    7. 'b' → logprob: -4.4878621101379395
    8. ' p' → logprob: -4.6128621101379395
    9. ' k' → logprob: -4.8628621101379395
    10. 'possible' → logprob: -4.8628621101379395

Token 2981: ' where' (ID: 1919)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.3345082104206085
    2. '               ' → logprob: -2.334508180618286
    3. 'with' → logprob: -2.709508180618286
    4. ' (' → logprob: -3.209508180618286
    5. ' for' → logprob: -3.834508180618286
    6. ' in' → logprob: -4.209508419036865
    7. ' of' → logprob: -4.334508419036865
    8. ' that' → logprob: -4.959508419036865
    9. ' between' → logprob: -5.084508419036865
    10. 'for' → logprob: -5.959508419036865

Token 2982: ' segment' (ID: 14806)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.12273572385311127
    2. 'p' → logprob: -2.3727357387542725
    3. ' abs' → logprob: -4.247735500335693
    4. 'round' → logprob: -5.747735500335693
    5. 'line' → logprob: -5.872735500335693
    6. ' p' → logprob: -7.122735500335693
    7. 'True' → logprob: -7.997735500335693
    8. ' line' → logprob: -8.622735977172852
    9. '(abs' → logprob: -8.622735977172852
    10. 'b' → logprob: -8.747735977172852

Token 2983: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1182311400771141
    2. 'between' → logprob: -4.243231296539307
    3. '_p' → logprob: -4.493231296539307
    4. ' between' → logprob: -4.493231296539307
    5. 's' → logprob: -4.618231296539307
    6. 'b' → logprob: -4.743231296539307
    7. ' p' → logprob: -4.743231296539307
    8. 'from' → logprob: -4.993231296539307
    9. '_b' → logprob: -5.493231296539307
    10. '               ' → logprob: -5.493231296539307

Token 2984: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.35347434878349304
    2. '_b' → logprob: -1.2284743785858154
    3. 'a' → logprob: -5.978474140167236
    4. '1' → logprob: -6.603474140167236
    5. 'b' → logprob: -7.728474140167236
    6. '```' → logprob: -8.228474617004395
    7. ' _' → logprob: -9.353474617004395
    8. '2' → logprob: -10.103474617004395
    9. '
' → logprob: -10.603474617004395
    10. '_' → logprob: -11.040974617004395

Token 2985: '->' (ID: 609)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0018642607610672712
    2. '```' → logprob: -7.751864433288574
    3. 'and' → logprob: -8.126864433288574
    4. ',' → logprob: -8.501864433288574
    5. ' and' → logprob: -8.626864433288574
    6. '[' → logprob: -9.001864433288574
    7. '.p' → logprob: -9.376864433288574
    8. '
' → logprob: -9.501864433288574
    9. '==' → logprob: -9.626864433288574
    10. 'x' → logprob: -9.626864433288574

Token 2986: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0014935573562979698
    2. 'line' → logprob: -7.001493453979492
    3. 'b' → logprob: -8.001493453979492
    4. ' p' → logprob: -8.876493453979492
    5. '
' → logprob: -10.501493453979492
    6. '   ' → logprob: -11.376493453979492
    7. '(p' → logprob: -11.376493453979492
    8. 'round' → logprob: -11.751493453979492
    9. '(line' → logprob: -11.751493453979492
    10. ' line' → logprob: -12.126493453979492

Token 2987: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.08832002431154251
    2. 'b' → logprob: -2.588320016860962
    3. '_a' → logprob: -4.838320255279541
    4. 'a' → logprob: -6.588320255279541
    5. 'p' → logprob: -10.088319778442383
    6. '```' → logprob: -10.838319778442383
    7. '2' → logprob: -11.338319778442383
    8. '1' → logprob: -12.588319778442383
    9. '`' → logprob: -13.463319778442383
    10. '_' → logprob: -13.588319778442383

Token 2988: ' is' (ID: 382)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.7993975877761841
    2. '               ' → logprob: -1.799397587776184
    3. 'with' → logprob: -1.924397587776184
    4. ' is' → logprob: -2.7993974685668945
    5. ' at' → logprob: -3.4243974685668945
    6. ' has' → logprob: -4.0493974685668945
    7. ' connects' → logprob: -4.1743974685668945
    8. ' and' → logprob: -4.4243974685668945
    9. ' can' → logprob: -4.5493974685668945
    10. ' in' → logprob: -5.1743974685668945

Token 2989: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.012025206349790096
    2. ' free' → logprob: -5.387025356292725
    3. 'clear' → logprob: -5.512025356292725
    4. 'True' → logprob: -7.012025356292725
    5. 'visible' → logprob: -7.387025356292725
    6. 'possible' → logprob: -7.387025356292725
    7. 'safe' → logprob: -8.262024879455566
    8. '
' → logprob: -9.012024879455566
    9. 'allowed' → logprob: -9.137024879455566
    10. 'not' → logprob: -9.262024879455566

Token 2990: ' provided' (ID: 5181)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018649568781256676
    2. ' for' → logprob: -4.518649578094482
    3. '                   ' → logprob: -6.393649578094482
    4. 'for' → logprob: -6.393649578094482
    5. '           ' → logprob: -6.518649578094482
    6. ',' → logprob: -7.393649578094482
    7. ':
' → logprob: -7.518649578094482
    8. '
' → logprob: -8.393649101257324
    9. ' (' → logprob: -8.393649101257324
    10. ':' → logprob: -8.893649101257324

Token 2991: ' p' (ID: 275)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.45084163546562195
    2. 'p' → logprob: -1.0758416652679443
    3. ' abs' → logprob: -4.575841426849365
    4. 'round' → logprob: -5.075841426849365
    5. ' p' → logprob: -5.950841426849365
    6. 'True' → logprob: -6.575841426849365
    7. 'len' → logprob: -8.075841903686523
    8. '(abs' → logprob: -8.075841903686523
    9. ' round' → logprob: -9.075841903686523
    10. 'that' → logprob: -9.950841903686523

Token 2992: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.6330498456954956
    2. '_b' → logprob: -0.7580498456954956
    3. 'b' → logprob: -8.633049964904785
    4. 'a' → logprob: -8.758049964904785
    5. '1' → logprob: -11.258049964904785
    6. '```' → logprob: -11.258049964904785
    7. 'p' → logprob: -11.508049964904785
    8. '_' → logprob: -11.633049964904785
    9. ' _' → logprob: -11.883049964904785
    10. 'A' → logprob: -12.195549964904785

Token 2993: ' in' (ID: 306)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.006084152963012457
    2. 'x' → logprob: -6.131083965301514
    3. ' in' → logprob: -6.756083965301514
    4. ' has' → logprob: -7.631083965301514
    5. '```' → logprob: -7.881083965301514
    6. ' is' → logprob: -8.256084442138672
    7. 's' → logprob: -8.381084442138672
    8. '.' → logprob: -8.381084442138672
    9. ' .' → logprob: -9.006084442138672
    10. '_x' → logprob: -9.256084442138672

Token 2994: ' next' (ID: 2613)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.22721286118030548
    2. 'line' → logprob: -1.602212905883789
    3. ' idx' → logprob: -6.977212905883789
    4. 'node' → logprob: -8.727212905883789
    5. 'p' → logprob: -8.852212905883789
    6. ' line' → logprob: -9.477212905883789
    7. 'segment' → logprob: -9.852212905883789
    8. 'nodes' → logprob: -9.977212905883789
    9. 'range' → logprob: -10.102212905883789
    10. 'indices' → logprob: -10.102212905883789

Token 2995: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.022564122453331947
    2. '_line' → logprob: -4.397563934326172
    3. ' line' → logprob: -4.647563934326172
    4. 'lines' → logprob: -8.772563934326172
    5. '_lines' → logprob: -9.647563934326172
    6. '[line' → logprob: -9.897563934326172
    7. '               ' → logprob: -10.522563934326172
    8. '                   ' → logprob: -10.522563934326172
    9. '           ' → logprob: -11.272563934326172
    10. ')' → logprob: -11.772563934326172

Token 2996: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21323835849761963
    2. ' and' → logprob: -2.71323823928833
    3. '                   ' → logprob: -2.96323823928833
    4. ',' → logprob: -3.46323823928833
    5. ' for' → logprob: -5.08823823928833
    6. ':
' → logprob: -5.46323823928833
    7. '```' → logprob: -5.46323823928833
    8. ':' → logprob: -5.58823823928833
    9. 'and' → logprob: -5.58823823928833
    10. ' (' → logprob: -5.96323823928833

Token 2997: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011408114805817604
    2. '           ' → logprob: -7.751140594482422
    3. ' for' → logprob: -8.251140594482422
    4. '                   ' → logprob: -8.376140594482422
    5. ',' → logprob: -9.876140594482422
    6. '```' → logprob: -9.876140594482422
    7. 'for' → logprob: -10.001140594482422
    8. ' and' → logprob: -11.251140594482422
    9. '<|end|>' → logprob: -11.501140594482422
    10. '       ' → logprob: -12.001140594482422

Token 2998: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014121070504188538
    2. ' for' → logprob: -4.389121055603027
    3. '                   ' → logprob: -6.764121055603027
    4. '               ' → logprob: -7.889121055603027
    5. '                       ' → logprob: -11.014121055603027
    6. '	for' → logprob: -11.639121055603027
    7. ' ' → logprob: -11.639121055603027
    8. '           ' → logprob: -11.889121055603027
    9. '#' (adapté à ' #') → logprob: -12.139121055603027
    10. '                ' → logprob: -12.139121055603027

Token 2999: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5381226539611816
    2. '               ' → logprob: -1.0381226539611816
    3. ' for' → logprob: -2.9131226539611816
    4. '           ' → logprob: -5.038122653961182
    5. '                   ' → logprob: -6.913122653961182
    6. '```' → logprob: -10.163122177124023
    7. ' ' → logprob: -10.413122177124023
    8. '       ' → logprob: -10.538122177124023
    9. ' ' → logprob: -10.913122177124023
    10. '                       ' → logprob: -10.913122177124023

Token 3000: ' trying' (ID: 6700)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25553765892982483
    2. ' for' → logprob: -1.5055376291275024
    3. '                   ' → logprob: -6.755537509918213
    4. '               ' → logprob: -7.255537509918213
    5. '#' → logprob: -7.505537509918213
    6. '```' → logprob: -8.005537986755371
    7. 'continue' → logprob: -8.380537986755371
    8. ' ' → logprob: -9.255537986755371
    9. '           ' → logprob: -9.505537986755371
    10. 'x' → logprob: -9.505537986755371

Token 3001: ' only' (ID: 1606)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.351021945476532
    2. ' to' → logprob: -1.8510220050811768
    3. '                   ' → logprob: -2.9760220050811768
    4. 'for' → logprob: -3.8510220050811768
    5. ' for' → logprob: -4.101021766662598
    6. '                       ' → logprob: -4.351021766662598
    7. '               ' → logprob: -4.476021766662598
    8. '                    ' → logprob: -5.226021766662598
    9. ':' → logprob: -5.726021766662598
    10. '                ' → logprob: -6.101021766662598

Token 3002: ' same' (ID: 2684)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6471178531646729
    2. 'p' → logprob: -1.3971178531646729
    3. ' p' → logprob: -3.272117853164673
    4. ' for' → logprob: -3.272117853164673
    5. 'to' → logprob: -3.772117853164673
    6. 'matching' → logprob: -3.772117853164673
    7. 'same' → logprob: -3.897117853164673
    8. 'b' → logprob: -4.022117614746094
    9. 'points' → logprob: -4.522117614746094
    10. 'j' → logprob: -4.647117614746094

Token 3003: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02545333467423916
    2. ' x' → logprob: -3.7754533290863037
    3. '_x' → logprob: -7.275453567504883
    4. '.x' → logprob: -8.275453567504883
    5. '               ' → logprob: -8.525453567504883
    6. ')' → logprob: -8.650453567504883
    7. '.' → logprob: -8.900453567504883
    8. ' ' → logprob: -9.150453567504883
    9. '
' → logprob: -9.275453567504883
    10. '           ' → logprob: -9.400453567504883

Token 3004: ' points' (ID: 5571)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3635448217391968
    2. '_' → logprob: -1.6135448217391968
    3. ')' → logprob: -1.9885448217391968
    4. ',' → logprob: -2.3635449409484863
    5. ':' → logprob: -2.4885449409484863
    6. '.' → logprob: -2.6135449409484863
    7. '                   ' → logprob: -2.9885449409484863
    8. '[' → logprob: -3.9885449409484863
    9. '                               ' → logprob: -4.238544940948486
    10. '                       ' → logprob: -4.863544940948486

Token 3005: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014417463913559914
    2. '
' → logprob: -6.13941764831543
    3. '                   ' → logprob: -6.13941764831543
    4. '                
' → logprob: -6.38941764831543
    5. ',' → logprob: -6.51441764831543
    6. ':
' → logprob: -6.88941764831543
    7. ')' → logprob: -7.01441764831543
    8. ' for' → logprob: -7.51441764831543
    9. '                ' → logprob: -7.51441764831543
    10. '           ' → logprob: -8.01441764831543

Token 3006: 'precision' (ID: 56937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8999097943305969
    2. '):
' → logprob: -1.5249097347259521
    3. 'p' → logprob: -2.524909734725952
    4. ' p' → logprob: -3.024909734725952
    5. ':' → logprob: -3.524909734725952
    6. ' and' → logprob: -3.899909734725952
    7. '):' → logprob: -3.899909734725952
    8. '               ' → logprob: -4.024909973144531
    9. ' for' → logprob: -4.149909973144531
    10. 'for' → logprob: -4.274909973144531

Token 3007: ' required' (ID: 3759)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7522512078285217
    2. ')' → logprob: -1.627251148223877
    3. ':' → logprob: -3.252251148223877
    4. ' is' → logprob: -3.502251148223877
    5. '0' → logprob: -3.627251148223877
    6. 'round' → logprob: -3.752251148223877
    7. 'limit' → logprob: -3.877251148223877
    8. ' =' → logprob: -4.127251148223877
    9. 'may' → logprob: -4.127251148223877
    10. 'limited' → logprob: -4.502251148223877

Token 3008: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07979802787303925
    2. '):' → logprob: -3.2047979831695557
    3. '):
' → logprob: -4.454798221588135
    4. ' )' → logprob: -5.204798221588135
    5. '               ' → logprob: -5.204798221588135
    6. ').' → logprob: -5.954798221588135
    7. '                   ' → logprob: -5.954798221588135
    8. ')
' → logprob: -6.954798221588135
    9. ':' → logprob: -6.954798221588135
    10. ',' → logprob: -7.079798221588135

Token 3009: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18462376296520233
    2. '                   ' → logprob: -2.5596237182617188
    3. '                ' → logprob: -2.9346237182617188
    4. '```' → logprob: -4.559623718261719
    5. ' for' → logprob: -5.184623718261719
    6. '                       ' → logprob: -6.059623718261719
    7. '           ' → logprob: -6.309623718261719
    8. '                               ' → logprob: -6.559623718261719
    9. ' ' → logprob: -6.684623718261719
    10. ' p' → logprob: -6.684623718261719

Token 3010: ' x' (ID: 1215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7035428881645203
    2. '               ' → logprob: -1.078542947769165
    3. 'x' (adapté à ' x') → logprob: -2.453542947769165
    4. ' for' → logprob: -2.828542947769165
    5. 'p' → logprob: -5.078542709350586
    6. ' x' → logprob: -5.328542709350586
    7. 'if' → logprob: -5.578542709350586
    8. '           ' → logprob: -6.703542709350586
    9. '                   ' → logprob: -6.953542709350586
    10. ' if' → logprob: -7.453542709350586

Token 3011: '_key' (ID: 6724)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5284825563430786
    2. '_' → logprob: -1.9034825563430786
    3. '_key' → logprob: -2.278482437133789
    4. '_val' → logprob: -2.528482437133789
    5. '=' → logprob: -2.903482437133789
    6. '_x' → logprob: -4.403482437133789
    7. '_in' → logprob: -5.528482437133789
    8. '_value' → logprob: -6.528482437133789
    9. '_=' → logprob: -7.028482437133789
    10. '_round' → logprob: -7.028482437133789

Token 3012: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287917912006378
    2. '=' → logprob: -1.0537917613983154
    3. '               ' → logprob: -10.553791999816895
    4. '=p' → logprob: -11.178791999816895
    5. '                   ' → logprob: -11.553791999816895
    6. ')' → logprob: -11.678791999816895
    7. ':' → logprob: -11.928791999816895
    8. '           ' → logprob: -12.053791999816895
    9. '=float' → logprob: -12.803791999816895
    10. '                ' → logprob: -13.053791999816895

Token 3013: ' round' (ID: 7353)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -9.925185440806672e-05
    2. ' round' → logprob: -9.250099182128906
    3. '(round' → logprob: -12.875099182128906
    4. 'p' → logprob: -14.625099182128906
    5. '   ' → logprob: -16.125099182128906
    6. 'float' → logprob: -18.000099182128906
    7. 'r' → logprob: -18.375099182128906
    8. 'Round' → logprob: -18.500099182128906
    9. 'rounded' → logprob: -18.625099182128906
    10. '           ' → logprob: -18.875099182128906

Token 3014: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.004080897197127342
    2. 'p' → logprob: -5.504080772399902
    3. '(' → logprob: -13.129080772399902
    4. ' p' → logprob: -15.004080772399902
    5. '(
' → logprob: -16.62908172607422
    6. '(x' → logprob: -17.50408172607422
    7. ' (' → logprob: -17.50408172607422
    8. '   ' → logprob: -17.87908172607422
    9. '	p' → logprob: -17.87908172607422
    10. '               ' → logprob: -18.00408172607422

Token 3015: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.011673313565552235
    2. 'a' → logprob: -4.636673450469971
    3. '.x' → logprob: -6.886673450469971
    4. '.a' → logprob: -7.636673450469971
    5. '(p' → logprob: -8.886672973632812
    6. 'x' → logprob: -9.136672973632812
    7. 'p' → logprob: -9.636672973632812
    8. '.p' → logprob: -10.511672973632812
    9. '(x' → logprob: -11.261672973632812
    10. '   ' → logprob: -11.511672973632812

Token 3016: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0012090419186279178
    2. '.' → logprob: -6.751209259033203
    3. ' .' → logprob: -11.126209259033203
    4. 'x' → logprob: -11.126209259033203
    5. '[' → logprob: -13.001209259033203
    6. ').' → logprob: -13.501209259033203
    7. '.xtext' → logprob: -13.626209259033203
    8. '.gridx' → logprob: -14.251209259033203
    9. ' ' → logprob: -14.376209259033203
    10. '   ' → logprob: -14.626209259033203

Token 3017: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007672052830457687
    2. ')' → logprob: -5.13267183303833
    3. ')
' → logprob: -6.75767183303833
    4. '               ' → logprob: -8.257672309875488
    5. ' ,' → logprob: -8.757672309875488
    6. '                   ' → logprob: -10.632672309875488
    7. '           ' → logprob: -10.632672309875488
    8. '0' → logprob: -11.257672309875488
    9. '       ' → logprob: -11.257672309875488
    10. ',p' → logprob: -11.382672309875488

Token 3018: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '           ' → logprob: -16.3750057220459
    4. '               ' → logprob: -17.5000057220459
    5. '```' → logprob: -17.8750057220459
    6. '   ' → logprob: -18.0000057220459
    7. '                   ' → logprob: -18.5000057220459
    8. '6' → logprob: -19.0000057220459
    9. '       ' → logprob: -19.0000057220459
    10. '9' → logprob: -19.0000057220459

Token 3019: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -19.25
    5. '           ' → logprob: -19.75
    6. '08' → logprob: -20.125
    7. '7' → logprob: -20.875
    8. '       ' → logprob: -21.0
    9. '-' → logprob: -21.125
    10. '۸' → logprob: -21.5

Token 3020: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05725334957242012
    2. ')' → logprob: -2.932253360748291
    3. '               ' → logprob: -6.057253360748291
    4. ')
' → logprob: -11.057252883911133
    5. '           ' → logprob: -12.432252883911133
    6. '                   ' → logprob: -13.307252883911133
    7. '):
' → logprob: -13.432252883911133
    8. ')

' → logprob: -13.807252883911133
    9. '       ' → logprob: -14.307252883911133
    10. ']
' → logprob: -14.807252883911133

Token 3021: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03425654023885727
    2. 'if' → logprob: -4.034256458282471
    3. 'for' → logprob: -4.159256458282471
    4. ' if' → logprob: -8.534256935119629
    5. ' for' → logprob: -9.034256935119629
    6. '           ' → logprob: -10.784256935119629
    7. '		       ' → logprob: -12.034256935119629
    8. '       ' → logprob: -12.784256935119629
    9. '	           ' → logprob: -13.034256935119629
    10. '<|end|>' → logprob: -13.284256935119629

Token 3022: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0010212593479081988
    2. '               ' → logprob: -7.376021385192871
    3. ' if' → logprob: -7.876021385192871
    4. 'for' → logprob: -11.251021385192871
    5. '	if' → logprob: -14.376021385192871
    6. 'j' → logprob: -14.626021385192871
    7. 'If' → logprob: -15.876021385192871
    8. '                   ' → logprob: -15.876021385192871
    9. '```' → logprob: -15.876021385192871
    10. '		       ' → logprob: -16.376020431518555

Token 3023: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00043460296001285315
    2. ' x' → logprob: -7.750434398651123
    3. '   ' → logprob: -13.625434875488281
    4. '               ' → logprob: -13.750434875488281
    5. '           ' → logprob: -14.375434875488281
    6. '                   ' → logprob: -14.875434875488281
    7. '       ' → logprob: -15.500434875488281
    8. ' ' → logprob: -16.50043487548828
    9. '     ' → logprob: -16.50043487548828
    10. '    ' → logprob: -16.87543487548828

Token 3024: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.24305808544158936
    2. 'in' → logprob: -2.118058204650879
    3. ' in' → logprob: -2.368058204650879
    4. '_in' → logprob: -7.618058204650879
    5. ']' → logprob: -9.118058204650879
    6. 'x' → logprob: -9.243058204650879
    7. '_KEY' → logprob: -9.243058204650879
    8. '_keys' → logprob: -9.368058204650879
    9. ' _' → logprob: -9.493058204650879
    10. '_' → logprob: -9.493058204650879

Token 3025: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2811656594276428
    2. 'in' → logprob: -1.406165599822998
    3. ' not' → logprob: -11.906166076660156
    4. 'not' → logprob: -13.281166076660156
    5. '	in' → logprob: -13.406166076660156
    6. ')' → logprob: -13.531166076660156
    7. '==' → logprob: -13.906166076660156
    8. ' ==' → logprob: -14.031166076660156
    9. ']' → logprob: -14.906166076660156
    10. '<|end|>' → logprob: -15.156166076660156

Token 3026: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -2.696889623621246e-06
    2. ' idx' → logprob: -13.00000286102295
    3. '           ' → logprob: -15.75000286102295
    4. '   ' → logprob: -16.375001907348633
    5. '       ' → logprob: -17.125001907348633
    6. 'index' → logprob: -17.250001907348633
    7. '	idx' → logprob: -17.625001907348633
    8. '
' → logprob: -17.750001907348633
    9. '[idx' → logprob: -18.000001907348633
    10. '               ' → logprob: -18.625001907348633

Token 3027: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -3.8219583075260743e-05
    2. 'map' → logprob: -10.250038146972656
    3. '   ' → logprob: -14.250038146972656
    4. 'b' → logprob: -14.625038146972656
    5. '_b' → logprob: -14.625038146972656
    6. 'Map' → logprob: -15.125038146972656
    7. 's' → logprob: -15.625038146972656
    8. '
' → logprob: -15.875038146972656
    9. 'idx' → logprob: -16.125038146972656
    10. '       ' → logprob: -16.500038146972656

Token 3028: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0017257531872019172
    2. 'b' → logprob: -6.376725673675537
    3. 'B' → logprob: -10.751726150512695
    4. '```' → logprob: -14.251726150512695
    5. '
' → logprob: -14.626726150512695
    6. '[' → logprob: -15.376726150512695
    7. 'a' → logprob: -15.626726150512695
    8. '   ' → logprob: -15.751726150512695
    9. '_B' → logprob: -16.001726150512695
    10. '{' → logprob: -16.251726150512695

Token 3029: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37773412466049194
    2. ' and' → logprob: -1.5027341842651367
    3. ':' → logprob: -2.8777341842651367
    4. '                   ' → logprob: -3.5027341842651367
    5. 'and' → logprob: -6.252734184265137
    6. '):
' → logprob: -6.377734184265137
    7. '                       ' → logprob: -7.252734184265137
    8. '               ' → logprob: -7.627734184265137
    9. ',' → logprob: -8.627734184265137
    10. '=' → logprob: -9.127734184265137

Token 3030: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18775980174541473
    2. ' j' → logprob: -2.4377598762512207
    3. ' p' → logprob: -2.8127598762512207
    4. ' b' → logprob: -4.312759876251221
    5. 'b' → logprob: -5.937759876251221
    6. ' ' → logprob: -6.312759876251221
    7. '                       ' → logprob: -6.687759876251221
    8. 'j' → logprob: -7.062759876251221
    9. ' continue' → logprob: -7.062759876251221
    10. 'p' → logprob: -7.062759876251221

Token 3031: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.006674997974187136
    2. ' j' → logprob: -5.256674766540527
    3. '                   ' → logprob: -6.631674766540527
    4. '                       ' → logprob: -9.506674766540527
    5. '   ' → logprob: -11.131674766540527
    6. 'p' → logprob: -11.506674766540527
    7. '                    ' → logprob: -12.256674766540527
    8. '                     ' → logprob: -12.631674766540527
    9. '               ' → logprob: -12.756674766540527
    10. '	j' → logprob: -12.881674766540527

Token 3032: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.2784287929534912
    2. '_b' → logprob: -1.6534287929534912
    3. 'b' → logprob: -3.778428792953491
    4. '                   ' → logprob: -4.15342903137207
    5. 'a' → logprob: -5.27842903137207
    6. ' =' → logprob: -5.65342903137207
    7. '=' → logprob: -6.40342903137207
    8. '+' → logprob: -7.90342903137207
    9. ',' → logprob: -8.27842903137207
    10. '                    ' → logprob: -8.77842903137207

Token 3033: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6344010829925537
    2. ' =' → logprob: -0.7594010829925537
    3. ')' → logprob: -6.759401321411133
    4. ',' → logprob: -8.384401321411133
    5. ':' → logprob: -8.759401321411133
    6. '                   ' → logprob: -9.509401321411133
    7. ' ' → logprob: -9.759401321411133
    8. '<|end|>' → logprob: -10.384401321411133
    9. '                    ' → logprob: -10.884401321411133
    10. ')=' → logprob: -12.134401321411133

Token 3034: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.4855663721391466e-05
    2. ' idx' → logprob: -11.125015258789062
    3. '[idx' → logprob: -16.750015258789062
    4. '	idx' → logprob: -18.125015258789062
    5. '(idx' → logprob: -18.500015258789062
    6. '0' → logprob: -18.875015258789062
    7. 'int' → logprob: -19.250015258789062
    8. 'index' → logprob: -19.375015258789062
    9. 'id' → logprob: -20.625015258789062
    10. '           ' → logprob: -20.750015258789062

Token 3035: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -7.517272024415433e-05
    2. '_idx' → logprob: -10.000075340270996
    3. 'Map' → logprob: -11.250075340270996
    4. 'map' → logprob: -11.500075340270996
    5. 'x' → logprob: -13.625075340270996
    6. 'idx' → logprob: -13.625075340270996
    7. 'a' → logprob: -13.875075340270996
    8. 'b' → logprob: -14.250075340270996
    9. '_MAP' → logprob: -15.000075340270996
    10. 'user' → logprob: -15.125075340270996

Token 3036: '_b' (ID: 1535)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0007492328295484185
    2. 'b' → logprob: -7.375749111175537
    3. '{' → logprob: -10.625749588012695
    4. 'j' → logprob: -10.875749588012695
    5. '_b' → logprob: -11.000749588012695
    6. '[' → logprob: -11.125749588012695
    7. 'Map' → logprob: -11.375749588012695
    8. 'map' → logprob: -11.625749588012695
    9. '_MAP' → logprob: -12.250749588012695
    10. '[p' → logprob: -12.375749588012695

Token 3037: '[x' (ID: 17295)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.12023293226957321
    2. '[x' → logprob: -2.3702328205108643
    3. 'j' → logprob: -5.245233058929443
    4. 'x' → logprob: -5.245233058929443
    5. '{x' → logprob: -5.995233058929443
    6. '                   ' → logprob: -6.495233058929443
    7. ' j' → logprob: -6.620233058929443
    8. '[' → logprob: -6.870233058929443
    9. '[
' → logprob: -7.745233058929443
    10. '{' → logprob: -8.120232582092285

Token 3038: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.0027286713011562824
    2. 'Key' → logprob: -6.252728462219238
    3. 'b' → logprob: -8.252728462219238
    4. '_keys' → logprob: -9.377728462219238
    5. '_KEY' → logprob: -9.502728462219238
    6. 'a' → logprob: -9.502728462219238
    7. 'key' → logprob: -9.627728462219238
    8. '_a' → logprob: -10.127728462219238
    9. '```' → logprob: -10.252728462219238
    10. '[' → logprob: -10.627728462219238

Token 3039: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6535531878471375
    2. '<|end|>' → logprob: -1.6535532474517822
    3. '                   ' → logprob: -2.4035532474517822
    4. '):
' → logprob: -2.6535532474517822
    5. ':' → logprob: -2.9035532474517822
    6. '):' → logprob: -3.5285532474517822
    7. ':
' → logprob: -4.153553009033203
    8. '                       ' → logprob: -4.278553009033203
    9. ']' → logprob: -5.528553009033203
    10. '<|end|>' → logprob: -5.653553009033203

Token 3040: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06955598294734955
    2. '                       ' → logprob: -3.8195559978485107
    3. ' out' → logprob: -4.194555759429932
    4. ' p' → logprob: -4.319555759429932
    5. 'p' → logprob: -5.069555759429932
    6. '
' → logprob: -5.444555759429932
    7. 'out' → logprob: -5.819555759429932
    8. '               ' → logprob: -7.194555759429932
    9. ',' → logprob: -7.444555759429932
    10. 'b' → logprob: -7.694555759429932

Token 3041: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.3947853147983551
    2. 'in' → logprob: -1.1447852849960327
    3. '                   ' → logprob: -5.269785404205322
    4. 'if' → logprob: -6.644785404205322
    5. '                       ' → logprob: -7.144785404205322
    6. ' p' → logprob: -8.269784927368164
    7. 'out' → logprob: -8.394784927368164
    8. '               ' → logprob: -9.769784927368164
    9. ' in' → logprob: -10.269784927368164
    10. '                           ' → logprob: -11.019784927368164

Token 3042: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.003612662898376584
    2. '_a' → logprob: -5.878612518310547
    3. 'b' → logprob: -7.253612518310547
    4. ' =' → logprob: -9.753612518310547
    5. 'a' → logprob: -10.628612518310547
    6. '=' → logprob: -12.128612518310547
    7. '                   ' → logprob: -12.378612518310547
    8. '_' → logprob: -13.128612518310547
    9. '=_' → logprob: -13.753612518310547
    10. ' _' → logprob: -14.378612518310547

Token 3043: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6949403882026672
    2. ' =' → logprob: -0.6949403882026672
    3. ')' → logprob: -6.819940567016602
    4. '<|end|>' → logprob: -7.819940567016602
    5. ' ' → logprob: -9.444940567016602
    6. ',' → logprob: -9.694940567016602
    7. ')=' → logprob: -10.194940567016602
    8. '),' → logprob: -10.819940567016602
    9. '=
' → logprob: -10.819940567016602
    10. ' )' → logprob: -11.319940567016602

Token 3044: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.013345512561500072
    2. 'nodes' → logprob: -4.388345718383789
    3. ' line' → logprob: -7.763345718383789
    4. 'node' → logprob: -7.888345718383789
    5. ' nodes' → logprob: -11.263345718383789
    6. 'points' → logprob: -12.138345718383789
    7. 'lines' → logprob: -12.263345718383789
    8. '(line' → logprob: -13.263345718383789
    9. '#line' → logprob: -13.388345718383789
    10. '[line' → logprob: -13.513345718383789

Token 3045: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0016877970192581415
    2. 'b' → logprob: -6.501688003540039
    3. '[i' → logprob: -9.001688003540039
    4. 'i' → logprob: -10.251688003540039
    5. 'B' → logprob: -11.501688003540039
    6. '_i' → logprob: -12.376688003540039
    7. 's' → logprob: -13.126688003540039
    8. '(i' → logprob: -13.251688003540039
    9. '[' → logprob: -13.501688003540039
    10. 'a' → logprob: -14.001688003540039

Token 3046: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.249780638725497e-05
    2. 'j' → logprob: -10.500032424926758
    3. '                   ' → logprob: -13.125032424926758
    4. '
' → logprob: -14.000032424926758
    5. '[' → logprob: -14.625032424926758
    6. '[p' → logprob: -15.125032424926758
    7. ',j' → logprob: -15.375032424926758
    8. '[
' → logprob: -15.625032424926758
    9. ' j' → logprob: -15.625032424926758
    10. '(j' → logprob: -16.000032424926758

Token 3047: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0002978048287332058
    2. 'b' → logprob: -8.125297546386719
    3. '_a' → logprob: -15.125297546386719
    4. '   ' → logprob: -15.250297546386719
    5. '       ' → logprob: -15.625297546386719
    6. 'B' → logprob: -15.750297546386719
    7. '[' → logprob: -16.00029754638672
    8. '                   ' → logprob: -16.00029754638672
    9. '```' → logprob: -16.12529754638672
    10. '_j' → logprob: -16.12529754638672

Token 3048: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09484297037124634
    2. ')' → logprob: -2.7198429107666016
    3. '                   ' → logprob: -3.7198429107666016
    4. '
' → logprob: -9.469842910766602
    5. '):
' → logprob: -9.969842910766602
    6. '               ' → logprob: -9.969842910766602
    7. ' )
' → logprob: -10.219842910766602
    8. '                       ' → logprob: -10.344842910766602
    9. '       ' → logprob: -10.719842910766602
    10. '           ' → logprob: -11.219842910766602

Token 3049: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004110577050596476
    2. '                       ' → logprob: -6.254110813140869
    3. '
' → logprob: -6.379110813140869
    4. 'network' → logprob: -9.129110336303711
    5. ' if' → logprob: -9.379110336303711
    6. ')' → logprob: -9.879110336303711
    7. ',' → logprob: -10.129110336303711
    8. '               ' → logprob: -10.379110336303711
    9. 'if' → logprob: -10.754110336303711
    10. ')
' → logprob: -10.754110336303711

Token 3050: ' in' (ID: 306)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020743682980537415
    2. ' if' → logprob: -4.2707438468933105
    3. '                   ' → logprob: -5.3957438468933105
    4. '                       ' → logprob: -6.7707438468933105
    5. '
' → logprob: -7.1457438468933105
    6. '                           ' → logprob: -10.770743370056152
    7. '   ' → logprob: -11.395743370056152
    8. '	if' → logprob: -11.395743370056152
    9. '```' → logprob: -12.270743370056152
    10. 'network' → logprob: -12.395743370056152

Token 3051: '_b' (ID: 1535)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.10176030546426773
    2. '_node' → logprob: -3.1017603874206543
    3. ' =' → logprob: -3.3517603874206543
    4. '_' → logprob: -5.226760387420654
    5. '_p' → logprob: -5.976760387420654
    6. '_a' → logprob: -6.101760387420654
    7. '_b' → logprob: -6.851760387420654
    8. 'node' → logprob: -6.976760387420654
    9. '_point' → logprob: -7.101760387420654
    10. '_network' → logprob: -7.226760387420654

Token 3052: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520890235900879
    2. '=' → logprob: -1.502089023590088
    3. '                   ' → logprob: -9.50208854675293
    4. '=node' → logprob: -10.25208854675293
    5. '_' → logprob: -11.50208854675293
    6. ')' → logprob: -11.62708854675293
    7. '                    ' → logprob: -11.75208854675293
    8. ' ' → logprob: -12.25208854675293
    9. '<|end|>' → logprob: -13.00208854675293
    10. ' _' → logprob: -13.25208854675293

Token 3053: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.008616226725280285
    2. ' node' → logprob: -4.7586164474487305
    3. '(node' → logprob: -14.25861644744873
    4. '                   ' → logprob: -14.38361644744873
    5. '[node' → logprob: -16.008615493774414
    6. '           ' → logprob: -16.633615493774414
    7. '               ' → logprob: -16.758615493774414
    8. '   ' → logprob: -16.758615493774414
    9. '	node' → logprob: -16.758615493774414
    10. '2' → logprob: -18.633615493774414

Token 3054: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.2723104848410003e-05
    2. '_key' → logprob: -11.875022888183594
    3. 'id' → logprob: -12.125022888183594
    4. '```' → logprob: -13.500022888183594
    5. '{' → logprob: -13.750022888183594
    6. '_map' → logprob: -13.875022888183594
    7. '[' → logprob: -14.125022888183594
    8. 'b' → logprob: -14.250022888183594
    9. 'a' → logprob: -14.500022888183594
    10. '_token' → logprob: -14.625022888183594

Token 3055: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -3.047134305234067e-05
    2. '_id' → logprob: -10.750030517578125
    3. 'Map' → logprob: -12.250030517578125
    4. 'map' → logprob: -12.625030517578125
    5. '```' → logprob: -15.875030517578125
    6. '[' → logprob: -16.000030517578125
    7. '[(' → logprob: -16.750030517578125
    8. '_' → logprob: -16.750030517578125
    9. '   ' → logprob: -16.875030517578125
    10. 'id' → logprob: -16.875030517578125

Token 3056: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.049673616886138916
    2. '(i' → logprob: -3.049673557281494
    3. '((' → logprob: -6.924673557281494
    4. '[i' → logprob: -9.674674034118652
    5. '(' → logprob: -10.549674034118652
    6. '[
' → logprob: -11.799674034118652
    7. '   ' → logprob: -13.549674034118652
    8. '```' → logprob: -13.799674034118652
    9. ' (' → logprob: -14.174674034118652
    10. '[' → logprob: -14.299674034118652

Token 3057: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.0219828002154827e-05
    2. '(i' → logprob: -10.875020027160645
    3. ' i' → logprob: -14.250020027160645
    4. '   ' → logprob: -15.125020027160645
    5. '{i' → logprob: -16.00002098083496
    6. '                   ' → logprob: -17.12502098083496
    7. '           ' → logprob: -17.25002098083496
    8. '	i' → logprob: -17.62502098083496
    9. '       ' → logprob: -17.62502098083496
    10. ')i' → logprob: -17.87502098083496

Token 3058: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05636495351791382
    2. ' +' → logprob: -3.4313650131225586
    3. ',' → logprob: -3.8063650131225586
    4. '+,' → logprob: -8.556365013122559
    5. ' ,' → logprob: -10.431365013122559
    6. '   ' → logprob: -13.056365013122559
    7. '+
' → logprob: -13.306365013122559
    8. ' ' → logprob: -13.681365013122559
    9. ',+' → logprob: -13.681365013122559
    10. '1' → logprob: -14.056365013122559

Token 3059: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. ',' → logprob: -16.250009536743164
    4. '   ' → logprob: -17.625009536743164
    5. '
' → logprob: -18.625009536743164
    6. '  ' → logprob: -19.812509536743164
    7. '0' → logprob: -20.000009536743164
    8. '```' → logprob: -20.000009536743164
    9. '１' → logprob: -20.062509536743164
    10. '2' → logprob: -20.375009536743164

Token 3060: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.250001907348633
    4. '+' → logprob: -17.375001907348633
    5. '0' → logprob: -18.000001907348633
    6. '
' → logprob: -18.375001907348633
    7. '2' → logprob: -18.875001907348633
    8. '```' → logprob: -18.875001907348633
    9. '``' → logprob: -19.000001907348633
    10. '`' → logprob: -19.250001907348633

Token 3061: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007015953888185322
    2. ',j' → logprob: -7.500701427459717
    3. ' ,' → logprob: -9.250701904296875
    4. '                   ' → logprob: -10.375701904296875
    5. '   ' → logprob: -12.000701904296875
    6. ',x' → logprob: -12.750701904296875
    7. ',b' → logprob: -13.125701904296875
    8. ',
' → logprob: -13.375701904296875
    9. '                           ' → logprob: -14.000701904296875
    10. '                    ' → logprob: -14.375701904296875

Token 3062: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.416665640543215e-05
    2. ' j' → logprob: -10.37503433227539
    3. '   ' → logprob: -13.50003433227539
    4. '                   ' → logprob: -14.12503433227539
    5. '	j' → logprob: -15.37503433227539
    6. '    ' → logprob: -16.12503433227539
    7. '       ' → logprob: -16.62503433227539
    8. '           ' → logprob: -17.00003433227539
    9. '     ' → logprob: -17.12503433227539
    10. '               ' → logprob: -17.12503433227539

Token 3063: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0004960790392942727
    2. 'b' → logprob: -7.625495910644531
    3. '```' → logprob: -12.875495910644531
    4. 'a' → logprob: -13.375495910644531
    5. '+' → logprob: -14.250495910644531
    6. '   ' → logprob: -14.500495910644531
    7. '_a' → logprob: -14.500495910644531
    8. 'B' → logprob: -15.000495910644531
    9. '       ' → logprob: -15.625495910644531
    10. 'i' → logprob: -15.625495910644531

Token 3064: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006011510267853737
    2. ']' → logprob: -5.256011486053467
    3. ')' → logprob: -7.756011486053467
    4. '                   ' → logprob: -8.506011962890625
    5. '               ' → logprob: -9.881011962890625
    6. '                ' → logprob: -11.256011962890625
    7. '                    ' → logprob: -11.381011962890625
    8. '           ' → logprob: -11.756011962890625
    9. '])' → logprob: -11.881011962890625
    10. '   ' → logprob: -12.006011962890625

Token 3065: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20181860029697418
    2. ' *' → logprob: -1.701818585395813
    3. '                   ' → logprob: -8.076818466186523
    4. '
' → logprob: -10.826818466186523
    5. '                       ' → logprob: -11.451818466186523
    6. ' ' → logprob: -11.576818466186523
    7. '                    ' → logprob: -11.701818466186523
    8. ')' → logprob: -12.076818466186523
    9. ' ' → logprob: -12.076818466186523
    10. '				' → logprob: -12.326818466186523

Token 3066: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.875017166137695
    4. '  ' → logprob: -18.375017166137695
    5. '           ' → logprob: -18.625017166137695
    6. '               ' → logprob: -19.000017166137695
    7. '     ' → logprob: -19.125017166137695
    8. '۲' → logprob: -19.250017166137695
    9. '                   ' → logprob: -19.375017166137695
    10. '
' → logprob: -19.500017166137695

Token 3067: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.034592388459714e-06
    2. '0' → logprob: -12.500005722045898
    3. ' ' → logprob: -13.125005722045898
    4. '1' → logprob: -15.500005722045898
    5. '   ' → logprob: -17.2500057220459
    6. '  ' → logprob: -19.0000057220459
    7. '
' → logprob: -19.2500057220459
    8. '20' → logprob: -19.3750057220459
    9. '۲' → logprob: -19.6250057220459
    10. '           ' → logprob: -19.8750057220459

Token 3068: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3069: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002191064180806279
    2. '                    
' → logprob: -6.877191066741943
    3. '                       ' → logprob: -8.502190589904785
    4. 'network' → logprob: -8.877190589904785
    5. '
' → logprob: -9.002190589904785
    6. '               ' → logprob: -9.127190589904785
    7. '                    ' → logprob: -9.252190589904785
    8. '           ' → logprob: -9.627190589904785
    9. '<|end|>' → logprob: -9.752190589904785
    10. '                        
' → logprob: -10.002190589904785

Token 3070: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7179427742958069
    2. '                   ' → logprob: -0.7179427742958069
    3. 'network' → logprob: -3.717942714691162
    4. ' if' → logprob: -9.34294319152832
    5. '                       ' → logprob: -10.34294319152832
    6. '   ' → logprob: -10.46794319152832
    7. 'net' → logprob: -11.46794319152832
    8. ' network' → logprob: -11.71794319152832
    9. '               ' → logprob: -11.71794319152832
    10. '#' → logprob: -12.21794319152832

Token 3071: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006770791951566935
    2. ' self' → logprob: -5.006770610809326
    3. '                   ' → logprob: -10.006771087646484
    4. '                       ' → logprob: -12.131771087646484
    5. '   ' → logprob: -13.381771087646484
    6. '               ' → logprob: -13.881771087646484
    7. '           ' → logprob: -13.881771087646484
    8. '(self' → logprob: -14.006771087646484
    9. ' ' → logprob: -15.881771087646484
    10. '	self' → logprob: -16.006771087646484

Token 3072: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.20193755626678467
    2. '_can' → logprob: -1.7019375562667847
    3. '.can' → logprob: -7.576937675476074
    4. '   ' → logprob: -12.576937675476074
    5. '.' → logprob: -12.826937675476074
    6. '_free' → logprob: -13.326937675476074
    7. ' _' → logprob: -13.326937675476074
    8. '
' → logprob: -14.826937675476074
    9. ' .' → logprob: -14.826937675476074
    10. '_CAN' → logprob: -14.826937675476074

Token 3073: 'can' (ID: 6929)
  Prédit: 'can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -4.961759259458631e-06
    2. '_can' → logprob: -12.250004768371582
    3. ' can' → logprob: -16.5000057220459
    4. '.can' → logprob: -18.7500057220459
    5. '	can' → logprob: -18.7500057220459
    6. '(can' → logprob: -19.5000057220459
    7. '
' → logprob: -19.8750057220459
    8. '-can' → logprob: -19.8750057220459
    9. '   ' → logprob: -20.3750057220459
    10. 'Can' → logprob: -20.7500057220459

Token 3074: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -0.16022534668445587
    2. 'connect' → logprob: -1.9102253913879395
    3. 'Connect' → logprob: -13.910224914550781
    4. '_CONNECT' → logprob: -16.03522491455078
    5. '
' → logprob: -16.28522491455078
    6. 'CONNECT' → logprob: -16.53522491455078
    7. ' connect' → logprob: -17.53522491455078
    8. '	connect' → logprob: -17.91022491455078
    9. '.connect' → logprob: -18.16022491455078
    10. '-connect' → logprob: -18.28522491455078

Token 3075: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.002992440015077591
    2. '(' → logprob: -5.877992630004883
    3. ' (' → logprob: -8.877992630004883
    4. '(
' → logprob: -10.502992630004883
    5. 'p' → logprob: -11.002992630004883
    6. ' p' → logprob: -13.377992630004883
    7. ')' → logprob: -13.752992630004883
    8. '   ' → logprob: -14.877992630004883
    9. '((' → logprob: -15.502992630004883
    10. '
' → logprob: -15.752992630004883

Token 3076: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00019185843120794743
    2. '1' → logprob: -8.875191688537598
    3. 'a' → logprob: -9.875191688537598
    4. '   ' → logprob: -15.875191688537598
    5. 'A' → logprob: -16.250192642211914
    6. '```' → logprob: -16.625192642211914
    7. ')' → logprob: -16.875192642211914
    8. '(a' → logprob: -18.000192642211914
    9. '_b' → logprob: -18.250192642211914
    10. '0' → logprob: -18.375192642211914

Token 3077: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020498628728091717
    2. ',p' → logprob: -6.627049922943115
    3. ' ,' → logprob: -7.252049922943115
    4. ',
' → logprob: -11.377049446105957
    5. 'p' → logprob: -12.877049446105957
    6. ' p' → logprob: -16.002050399780273
    7. '   ' → logprob: -16.502050399780273
    8. '‌,' → logprob: -16.502050399780273
    9. ' ,
' → logprob: -17.002050399780273
    10. 's' → logprob: -17.002050399780273

Token 3078: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0013267839094623923
    2. ' p' → logprob: -6.626326560974121
    3. '                   ' → logprob: -14.501326560974121
    4. '   ' → logprob: -16.501327514648438
    5. '                       ' → logprob: -16.751327514648438
    6. '	p' → logprob: -16.876327514648438
    7. '                    ' → logprob: -17.751327514648438
    8. '           ' → logprob: -17.876327514648438
    9. '_p' → logprob: -18.126327514648438
    10. '               ' → logprob: -18.126327514648438

Token 3079: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00026205103495158255
    2. 'b' → logprob: -8.250262260437012
    3. '_a' → logprob: -14.875262260437012
    4. 'a' → logprob: -15.625262260437012
    5. '_' → logprob: -16.750261306762695
    6. '```' → logprob: -16.750261306762695
    7. ')' → logprob: -17.875261306762695
    8. '	b' → logprob: -18.250261306762695
    9. '_
' → logprob: -18.625261306762695
    10. '   ' → logprob: -18.750261306762695

Token 3080: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1267915964126587
    2. '):' → logprob: -2.251791477203369
    3. '                   ' → logprob: -4.876791477203369
    4. '                       ' → logprob: -5.126791477203369
    5. ')' → logprob: -8.751791954040527
    6. '):
' → logprob: -9.751791954040527
    7. '               ' → logprob: -11.001791954040527
    8. '):

' → logprob: -11.001791954040527
    9. ':' → logprob: -11.126791954040527
    10. '                      ' → logprob: -11.501791954040527

Token 3081: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00022427814838010818
    2. 'network' → logprob: -8.875224113464355
    3. ' network' → logprob: -10.250224113464355
    4. ':
' → logprob: -11.125224113464355
    5. '                           ' → logprob: -11.875224113464355
    6. '):
' → logprob: -12.000224113464355
    7. ':' → logprob: -12.125224113464355
    8. '                   ' → logprob: -12.250224113464355
    9. '                      ' → logprob: -12.750224113464355
    10. '                        
' → logprob: -13.500224113464355

Token 3082: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' (adapté à ' network') → logprob: -0.0015085549093782902
    2. ' network' → logprob: -6.751508712768555
    3. '                           ' → logprob: -8.001508712768555
    4. '                       ' → logprob: -13.376508712768555
    5. '                               ' → logprob: -13.751508712768555
    6. '   ' → logprob: -14.251508712768555
    7. '           ' → logprob: -16.751508712768555
    8. 'net' → logprob: -17.376508712768555
    9. '                            ' → logprob: -17.626508712768555
    10. '_network' → logprob: -17.876508712768555

Token 3083: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0004908377304673195
    2. '.' → logprob: -7.625490665435791
    3. ').' → logprob: -14.00049114227295
    4. ' .' → logprob: -14.00049114227295
    5. '.append' → logprob: -16.000490188598633
    6. '.enqueue' → logprob: -16.375490188598633
    7. '.build' → logprob: -16.625490188598633
    8. '                       ' → logprob: -16.625490188598633
    9. '.create' → logprob: -16.875490188598633
    10. '.Add' → logprob: -17.000490188598633

Token 3084: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.4021237802808173e-05
    2. '```' → logprob: -12.250014305114746
    3. '_edges' → logprob: -13.250014305114746
    4. '_node' → logprob: -13.375014305114746
    5. 'edge' → logprob: -13.375014305114746
    6. '(_' → logprob: -13.875014305114746
    7. '_line' → logprob: -14.500014305114746
    8. '_' → logprob: -14.750014305114746
    9. '   ' → logprob: -15.000014305114746
    10. ''_' → logprob: -15.250014305114746

Token 3085: '(out' (ID: 20090)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.010532942600548267
    2. '(out' → logprob: -4.760532855987549
    3. ' out' → logprob: -6.260532855987549
    4. '[out' → logprob: -13.010533332824707
    5. '	out' → logprob: -13.135533332824707
    6. '$out' → logprob: -14.135533332824707
    7. '               ' → logprob: -14.260533332824707
    8. '           ' → logprob: -15.510533332824707
    9. '   ' → logprob: -15.885533332824707
    10. '       ' → logprob: -16.38553237915039

Token 3086: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0010401944164186716
    2. 'a' → logprob: -6.876039981842041
    3. '               ' → logprob: -13.0010404586792
    4. 'node' → logprob: -13.6260404586792
    5. '                   ' → logprob: -13.7510404586792
    6. 'out' → logprob: -13.7510404586792
    7. '```' → logprob: -15.5010404586792
    8. ')' → logprob: -15.6260404586792
    9. '(a' → logprob: -15.7510404586792
    10. '           ' → logprob: -15.8760404586792

Token 3087: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002077217446640134
    2. ',in' → logprob: -6.252077102661133
    3. ',
' → logprob: -9.377077102661133
    4. ' ,' → logprob: -10.252077102661133
    5. 'in' → logprob: -10.752077102661133
    6. '(in' → logprob: -12.877077102661133
    7. '   ' → logprob: -14.127077102661133
    8. '           ' → logprob: -14.377077102661133
    9. '                   ' → logprob: -14.377077102661133
    10. '               ' → logprob: -14.877077102661133

Token 3088: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.011047935113310814
    2. ' in' → logprob: -4.511047840118408
    3. '	in' → logprob: -16.76104736328125
    4. '
' → logprob: -17.01104736328125
    5. '                   ' → logprob: -18.01104736328125
    6. '                       ' → logprob: -18.13604736328125
    7. '[in' → logprob: -18.13604736328125
    8. '                               ' → logprob: -18.51104736328125
    9. '                        ' → logprob: -18.76104736328125
    10. '                           ' → logprob: -18.76104736328125

Token 3089: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.35287168622016907
    2. 'b' → logprob: -1.2278716564178467
    3. '(node' → logprob: -5.977871894836426
    4. 'node' → logprob: -7.102871894836426
    5. '```' → logprob: -8.477871894836426
    6. '   ' → logprob: -8.852871894836426
    7. '_(' → logprob: -9.102871894836426
    8. '(' → logprob: -9.352871894836426
    9. '(b' → logprob: -9.602871894836426
    10. '                   ' → logprob: -9.602871894836426

Token 3090: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8921695047756657e-05
    2. ',
' → logprob: -11.625028610229492
    3. '                           ' → logprob: -11.625028610229492
    4. ' ,' → logprob: -12.000028610229492
    5. '                       ' → logprob: -12.750028610229492
    6. ',float' → logprob: -14.625028610229492
    7. '                               ' → logprob: -14.750028610229492
    8. '(),' → logprob: -15.125028610229492
    9. '```' → logprob: -15.875028610229492
    10. '                            ' → logprob: -16.625028610229492

Token 3091: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0055749984458088875
    2. 'math' → logprob: -5.255575180053711
    3. '1' → logprob: -8.755575180053711
    4. ' float' → logprob: -8.755575180053711
    5. '=float' → logprob: -11.630575180053711
    6. ' math' → logprob: -12.255575180053711
    7. '   ' → logprob: -13.130575180053711
    8. '	float' → logprob: -13.255575180053711
    9. 'flo' → logprob: -13.380575180053711
    10. '(float' → logprob: -13.755575180053711

Token 3092: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005900867399759591
    2. ''in' → logprob: -7.5005903244018555
    3. ''' → logprob: -10.375590324401855
    4. ''i' → logprob: -13.375590324401855
    5. '("' → logprob: -13.625590324401855
    6. ''s' → logprob: -14.125590324401855
    7. ''n' → logprob: -15.000590324401855
    8. ''int' → logprob: -15.000590324401855
    9. ''im' → logprob: -15.625590324401855
    10. ''inc' → logprob: -15.875590324401855

Token 3093: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.2289036363363266
    2. '('' → logprob: -2.4789035320281982
    3. 'inf' → logprob: -2.6039035320281982
    4. ''' → logprob: -3.1039035320281982
    5. '1' → logprob: -8.353903770446777
    6. ''i' → logprob: -8.478903770446777
    7. 'INF' → logprob: -8.978903770446777
    8. ''im' → logprob: -9.103903770446777
    9. ''ex' → logprob: -9.228903770446777
    10. ''op' → logprob: -9.228903770446777

Token 3094: ''))

' (ID: 58153)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05551322549581528
    2. ')' → logprob: -2.9305131435394287
    3. '))
' → logprob: -7.555513381958008
    4. ''))' → logprob: -9.555513381958008
    5. ')
' → logprob: -11.305513381958008
    6. '       ' → logprob: -11.680513381958008
    7. '           ' → logprob: -12.555513381958008
    8. '),' → logprob: -13.305513381958008
    9. ')))' → logprob: -13.430513381958008
    10. '               ' → logprob: -13.430513381958008

Token 3095: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022825265768915415
    2. '
' → logprob: -6.377282619476318
    3. '        
' → logprob: -7.752282619476318
    4. '```' → logprob: -9.12728214263916
    5. '               ' → logprob: -11.50228214263916
    6. 'return' → logprob: -11.62728214263916
    7. '<|end|>' → logprob: -12.12728214263916
    8. '           ' → logprob: -12.37728214263916
    9. '#' → logprob: -12.75228214263916
    10. '        ' → logprob: -13.75228214263916

Token 3096: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002327959518879652
    2. '
' → logprob: -6.252327919006348
    3. '        
' → logprob: -9.002327919006348
    4. '```' → logprob: -9.002327919006348
    5. 'return' → logprob: -9.252327919006348
    6. 'for' → logprob: -10.377327919006348
    7. '#' (adapté à ' #') → logprob: -11.377327919006348
    8. '<|end|>' → logprob: -12.252327919006348
    9. ')' → logprob: -13.377327919006348
    10. '   ' → logprob: -13.877327919006348

Token 3097: ' Connect' (ID: 16834)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5767013430595398
    2. 'for' → logprob: -0.8267013430595398
    3. '       ' → logprob: -7.2017011642456055
    4. 'source' → logprob: -11.951701164245605
    5. 'bottom' → logprob: -12.826701164245605
    6. '   ' → logprob: -13.326701164245605
    7. 'top' → logprob: -13.576701164245605
    8. 'src' → logprob: -13.701701164245605
    9. ' for' → logprob: -14.201701164245605
    10. '
' → logprob: -14.326701164245605

Token 3098: ' source' (ID: 4256)
  Prédit: 'SRC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SRC' → logprob: -0.3140352666378021
    2. ' SRC' → logprob: -1.8140352964401245
    3. '       ' → logprob: -3.189035177230835
    4. 'network' → logprob: -4.064035415649414
    5. '(S' → logprob: -4.064035415649414
    6. 'for' → logprob: -4.439035415649414
    7. ' network' → logprob: -4.814035415649414
    8. '#' → logprob: -5.439035415649414
    9. 'src' → logprob: -6.189035415649414
    10. '   ' → logprob: -7.189035415649414

Token 3099: ' to' (ID: 316)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.22678984701633453
    2. '(' → logprob: -2.101789951324463
    3. ',' → logprob: -2.726789951324463
    4. '       ' → logprob: -4.851789951324463
    5. '(
' → logprob: -5.101789951324463
    6. ',S' → logprob: -7.351789951324463
    7. 'SRC' → logprob: -8.726789474487305
    8. ')' → logprob: -8.726789474487305
    9. ',
' → logprob: -9.101789474487305
    10. '        
' → logprob: -10.226789474487305

Token 3100: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2189771980047226
    2. 'out' → logprob: -2.093977212905884
    3. 'nodes' → logprob: -4.093976974487305
    4. 'line' → logprob: -4.468976974487305
    5. 'network' → logprob: -4.843976974487305
    6. 'node' → logprob: -4.968976974487305
    7. ' for' → logprob: -4.968976974487305
    8. '       ' → logprob: -5.593976974487305
    9. '0' → logprob: -5.968976974487305
    10. '#' → logprob: -6.093976974487305

Token 3101: ' bottom' (ID: 8725)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34107401967048645
    2. 'nodes' → logprob: -2.341073989868164
    3. '0' → logprob: -2.841073989868164
    4. 'out' → logprob: -2.966073989868164
    5. 'line' → logprob: -3.216073989868164
    6. 'bottom' → logprob: -4.466073989868164
    7. '(i' → logprob: -4.966073989868164
    8. 'in' → logprob: -5.591073989868164
    9. 'for' → logprob: -6.091073989868164
    10. ' (' → logprob: -6.091073989868164

Token 3102: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.003263153601437807
    2. '_line' → logprob: -6.753262996673584
    3. '(' → logprob: -7.253262996673584
    4. 'per' → logprob: -7.878262996673584
    5. 'nodes' → logprob: -7.878262996673584
    6. ' line' → logprob: -8.128263473510742
    7. '(line' → logprob: -9.378263473510742
    8. '
' → logprob: -10.003263473510742
    9. '_per' → logprob: -10.003263473510742
    10. '   ' → logprob: -10.378263473510742

Token 3103: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.06219802424311638
    2. '(' → logprob: -3.6871979236602783
    3. 'line' → logprob: -4.812198162078857
    4. 'for' → logprob: -5.062198162078857
    5. '_nodes' → logprob: -5.062198162078857
    6. ' nodes' → logprob: -5.312198162078857
    7. 'points' → logprob: -6.562198162078857
    8. ',' → logprob: -6.687198162078857
    9. '       ' → logprob: -6.812198162078857
    10. 'node' → logprob: -6.937198162078857

Token 3104: ''' (ID: 6)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6691768765449524
    2. 'for' → logprob: -0.9191768765449524
    3. ' for' → logprob: -2.4191768169403076
    4. ',' → logprob: -11.919177055358887
    5. '```' → logprob: -12.169177055358887
    6. '	for' → logprob: -12.919177055358887
    7. '   ' → logprob: -13.044177055358887
    8. ' lines' → logprob: -13.419177055358887
    9. ' line' → logprob: -13.669177055358887
    10. ':' → logprob: -13.794177055358887

Token 3105: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07689061015844345
    2. '(' → logprob: -3.076890707015991
    3. 'out' → logprob: -4.701890468597412
    4. '(in' → logprob: -4.951890468597412
    5. '#' → logprob: -5.951890468597412
    6. ' in' → logprob: -6.201890468597412
    7. '_in' → logprob: -6.451890468597412
    8. '
' → logprob: -6.576890468597412
    9. ' (' → logprob: -6.576890468597412
    10. 'for' → logprob: -7.701890468597412

Token 3106: ' vertex' (ID: 25363)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17929165065288544
    2. '_nodes' → logprob: -3.3042917251586914
    3. '(i' → logprob: -3.5542917251586914
    4. '_' → logprob: -3.6792917251586914
    5. '_vertices' → logprob: -3.6792917251586914
    6. ' (' → logprob: -4.304291725158691
    7. 'vertices' → logprob: -5.054291725158691
    8. 'nodes' → logprob: -5.179291725158691
    9. '   ' → logprob: -5.429291725158691
    10. '```' → logprob: -5.929291725158691

Token 3107: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5184969902038574
    2. ' for' → logprob: -1.0184969902038574
    3. '       ' → logprob: -3.1434969902038574
    4. '```' → logprob: -9.268497467041016
    5. ',' → logprob: -9.643497467041016
    6. '	for' → logprob: -10.143497467041016
    7. ' and' → logprob: -11.143497467041016
    8. ' (' → logprob: -11.143497467041016
    9. '
' → logprob: -11.143497467041016
    10. '(' → logprob: -11.518497467041016

Token 3108: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4410169720649719
    2. '       ' → logprob: -1.5660169124603271
    3. 'for' → logprob: -1.9410169124603271
    4. '(' → logprob: -6.441017150878906
    5. ',' → logprob: -6.816017150878906
    6. '```' → logprob: -7.816017150878906
    7. ' (' → logprob: -8.316017150878906
    8. '[' → logprob: -8.566017150878906
    9. ' at' → logprob: -9.566017150878906
    10. '   ' → logprob: -9.566017150878906

Token 3109: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019646743312478065
    2. ' for' → logprob: -6.251964569091797
    3. '       ' → logprob: -10.251964569091797
    4. 'bottom' → logprob: -14.876964569091797
    5. '```' → logprob: -15.876964569091797
    6. 'lines' → logprob: -16.626964569091797
    7. '	for' → logprob: -16.876964569091797
    8. 'line' → logprob: -16.876964569091797
    9. 'i' → logprob: -17.001964569091797
    10. '
' → logprob: -17.376964569091797

Token 3110: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00021927160560153425
    2. ' j' → logprob: -9.000219345092773
    3. '(j' → logprob: -9.750219345092773
    4. '(' → logprob: -10.625219345092773
    5. 'i' → logprob: -11.750219345092773
    6. '   ' → logprob: -13.125219345092773
    7. '0' → logprob: -14.000219345092773
    8. '_j' → logprob: -14.125219345092773
    9. ' (' → logprob: -14.625219345092773
    10. '(i' → logprob: -14.750219345092773

Token 3111: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20199376344680786
    2. 'in' → logprob: -1.701993703842163
    3. '(' → logprob: -8.701993942260742
    4. '0' → logprob: -8.701993942260742
    5. ',' → logprob: -9.076993942260742
    6. ' (' → logprob: -9.701993942260742
    7. '_in' → logprob: -10.951993942260742
    8. ' ' → logprob: -11.076993942260742
    9. '(i' → logprob: -12.076993942260742
    10. ' ,' → logprob: -12.451993942260742

Token 3112: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017390783177688718
    2. 'points' → logprob: -7.751739025115967
    3. 'nodes' → logprob: -7.876739025115967
    4. 'pts' → logprob: -8.626739501953125
    5. ' p' → logprob: -8.751739501953125
    6. '(' → logprob: -9.001739501953125
    7. 'pt' → logprob: -9.126739501953125
    8. 'y' → logprob: -9.251739501953125
    9. '(p' → logprob: -9.376739501953125
    10. '_p' → logprob: -10.501739501953125

Token 3113: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5760709643363953
    2. ' in' → logprob: -0.8260709643363953
    3. '_in' → logprob: -9.576070785522461
    4. '```' → logprob: -10.451070785522461
    5. '
' → logprob: -12.076070785522461
    6. '0' → logprob: -12.201070785522461
    7. '(' → logprob: -12.451070785522461
    8. 's' → logprob: -13.201070785522461
    9. ' ' → logprob: -13.326070785522461
    10. ')' → logprob: -13.951070785522461

Token 3114: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.08263088762760162
    2. ' enumerate' → logprob: -3.7076308727264404
    3. 'nodes' → logprob: -3.8326308727264404
    4. 'in' → logprob: -3.9576308727264404
    5. ' in' → logprob: -5.0826311111450195
    6. '(' → logprob: -6.4576311111450195
    7. 'line' → logprob: -7.0826311111450195
    8. 'lines' → logprob: -7.2076311111450195
    9. 'points' → logprob: -7.3326311111450195
    10. 'p' → logprob: -7.4576311111450195

Token 3115: '(nodes' (ID: 86139)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.09013645350933075
    2. '(nodes' → logprob: -2.4651365280151367
    3. ' nodes' → logprob: -6.840136528015137
    4. 'lines' → logprob: -9.840136528015137
    5. '(lines' → logprob: -10.340136528015137
    6. 'node' → logprob: -11.465136528015137
    7. '	nodes' → logprob: -11.840136528015137
    8. ' (' → logprob: -11.840136528015137
    9. '(node' → logprob: -12.340136528015137
    10. '.nodes' → logprob: -13.215136528015137

Token 3116: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.011260372586548328
    2. 'per' → logprob: -5.011260509490967
    3. '[' → logprob: -5.636260509490967
    4. '=' → logprob: -7.886260509490967
    5. 's' → logprob: -9.261260032653809
    6. '_in' → logprob: -9.511260032653809
    7. '_nodes' → logprob: -9.636260032653809
    8. ')' → logprob: -10.011260032653809
    9. ' =' → logprob: -10.261260032653809
    10. '_id' → logprob: -10.386260032653809

Token 3117: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5350333452224731
    2. '_line' → logprob: -0.9100333452224731
    3. '[' → logprob: -4.785033226013184
    4. 'per' → logprob: -6.160033226013184
    5. '0' → logprob: -7.535033226013184
    6. '_per' → logprob: -7.910033226013184
    7. '(' → logprob: -9.160033226013184
    8. 'lines' → logprob: -9.785033226013184
    9. '[line' → logprob: -10.160033226013184
    10. 'pline' → logprob: -10.785033226013184

Token 3118: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002246357616968453
    2. '0' → logprob: -8.750225067138672
    3. '(' → logprob: -9.750225067138672
    4. '[(' → logprob: -12.750225067138672
    5. '[-' → logprob: -12.875225067138672
    6. '[
' → logprob: -13.125225067138672
    7. '   ' → logprob: -16.000225067138672
    8. '```' → logprob: -16.000225067138672
    9. ')' → logprob: -16.375225067138672
    10. '[len' → logprob: -16.625225067138672

Token 3119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9266199160483666e-05
    2. '[' → logprob: -11.375019073486328
    3. '(' → logprob: -12.000019073486328
    4. ' ' → logprob: -13.500019073486328
    5. '   ' → logprob: -16.250019073486328
    6. '
' → logprob: -17.125019073486328
    7. '```' → logprob: -17.375019073486328
    8. '-' → logprob: -17.687519073486328
    9. '۰' → logprob: -18.562519073486328
    10. '{' → logprob: -18.625019073486328

Token 3120: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0015477105043828487
    2. '):' → logprob: -6.626547813415527
    3. '):
' → logprob: -9.376547813415527
    4. '       ' → logprob: -9.751547813415527
    5. ']:
' → logprob: -10.501547813415527
    6. ']):
' → logprob: -11.001547813415527
    7. '   ' → logprob: -11.501547813415527
    8. '           ' → logprob: -11.876547813415527
    9. ')' → logprob: -12.251547813415527
    10. ' ):
' → logprob: -12.251547813415527

Token 3121: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00857024546712637
    2. 'in' → logprob: -5.133570194244385
    3. ' in' → logprob: -7.008570194244385
    4. '```' → logprob: -7.633570194244385
    5. ':
' → logprob: -7.758570194244385
    6. 'node' → logprob: -8.758570671081543
    7. '):
' → logprob: -9.133570671081543
    8. '{
' → logprob: -9.633570671081543
    9. 'src' → logprob: -9.633570671081543
    10. 'network' → logprob: -9.883570671081543

Token 3122: ' node' (ID: 4596)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3478192687034607
    2. 'network' → logprob: -1.5978193283081055
    3. 'node' (adapté à ' node') → logprob: -2.4728193283081055
    4. 'src' → logprob: -5.3478193283081055
    5. 'net' → logprob: -7.9728193283081055
    6. 'nid' → logprob: -8.097819328308105
    7. '       ' → logprob: -8.222819328308105
    8. ' network' → logprob: -8.597819328308105
    9. '   ' → logprob: -8.597819328308105
    10. 'v' → logprob: -8.722819328308105

Token 3123: 'id' (ID: 315)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -6.015305552864447e-05
    2. 'id' → logprob: -10.250060081481934
    3. '_in' → logprob: -11.750060081481934
    4. '_idx' → logprob: -12.125060081481934
    5. ' =' → logprob: -13.500060081481934
    6. '_' → logprob: -13.750060081481934
    7. '   ' → logprob: -13.875060081481934
    8. 's' → logprob: -13.875060081481934
    9. '_index' → logprob: -14.000060081481934
    10. '
' → logprob: -14.000060081481934

Token 3124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054919298738241196
    2. '_map' → logprob: -3.5549192428588867
    3. '=' → logprob: -4.054919242858887
    4. '_id' → logprob: -5.054919242858887
    5. '=_' → logprob: -7.929919242858887
    6. '=(' → logprob: -8.554919242858887
    7. '_key' → logprob: -8.554919242858887
    8. 'map' → logprob: -9.429919242858887
    9. '   ' → logprob: -10.054919242858887
    10. '_' → logprob: -10.179919242858887

Token 3125: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -5.264322317088954e-05
    2. ' node' → logprob: -9.875052452087402
    3. '0' → logprob: -13.750052452087402
    4. '(node' → logprob: -17.00005340576172
    5. '           ' → logprob: -18.12505340576172
    6. '	node' → logprob: -19.00005340576172
    7. '[node' → logprob: -19.37505340576172
    8. '`' → logprob: -19.50005340576172
    9. 'user' → logprob: -19.87505340576172
    10. '   ' → logprob: -19.87505340576172

Token 3126: '_id' (ID: 1537)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0166370440274477
    2. '_id' → logprob: -4.141636848449707
    3. 'map' → logprob: -7.641636848449707
    4. 'id' → logprob: -9.891636848449707
    5. 'node' → logprob: -10.016636848449707
    6. 'Map' → logprob: -12.266636848449707
    7. '[node' → logprob: -12.266636848449707
    8. '_node' → logprob: -12.391636848449707
    9. '=' → logprob: -13.266636848449707
    10. 'user' → logprob: -13.266636848449707

Token 3127: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0006903939065523446
    2. '[(' → logprob: -8.000690460205078
    3. '(j' → logprob: -9.125690460205078
    4. 'map' → logprob: -9.125690460205078
    5. 'Map' → logprob: -9.750690460205078
    6. '[j' → logprob: -11.000690460205078
    7. '(' → logprob: -11.125690460205078
    8. '   ' → logprob: -12.125690460205078
    9. '[
' → logprob: -12.250690460205078
    10. 'j' → logprob: -12.250690460205078

Token 3128: '[(' (ID: 20542)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012167827226221561
    2. '[(' → logprob: -6.751216888427734
    3. '((' → logprob: -10.251216888427734
    4. ' (' → logprob: -11.501216888427734
    5. '[' → logprob: -14.626216888427734
    6. '
' → logprob: -15.626216888427734
    7. '   ' → logprob: -16.001216888427734
    8. '           ' → logprob: -16.376216888427734
    9. '0' → logprob: -16.876216888427734
    10. '       ' → logprob: -17.376216888427734

Token 3129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.931863051955588e-05
    2. '(' → logprob: -9.750059127807617
    3. ' ' → logprob: -13.875059127807617
    4. '   ' → logprob: -18.750059127807617
    5. ' (' → logprob: -19.000059127807617
    6. '۰' → logprob: -19.500059127807617
    7. '(
' → logprob: -20.375059127807617
    8. '`' → logprob: -20.500059127807617
    9. '```' → logprob: -20.875059127807617
    10. '０' → logprob: -21.000059127807617

Token 3130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006334475474432111
    2. ',j' → logprob: -7.375633239746094
    3. ' ,' → logprob: -12.000633239746094
    4. ',
' → logprob: -14.875633239746094
    5. '‌,' → logprob: -16.750633239746094
    6. ',m' → logprob: -17.125633239746094
    7. ',n' → logprob: -17.125633239746094
    8. 'j' → logprob: -17.375633239746094
    9. '',' → logprob: -17.625633239746094
    10. '   ' → logprob: -17.625633239746094

Token 3131: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.5491004129871726e-05
    2. ' j' → logprob: -10.000045776367188
    3. '$j' → logprob: -16.750045776367188
    4. '	j' → logprob: -17.750045776367188
    5. '   ' → logprob: -18.125045776367188
    6. '0' → logprob: -18.250045776367188
    7. ' ' → logprob: -19.125045776367188
    8. '_j' → logprob: -19.625045776367188
    9. ',j' → logprob: -19.750045776367188
    10. '  ' → logprob: -19.875045776367188

Token 3132: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43635866045951843
    2. ')]' → logprob: -1.1863586902618408
    3. ']
' → logprob: -3.686358690261841
    4. ')' → logprob: -4.311358451843262
    5. ')]
' → logprob: -5.186358451843262
    6. ']*' → logprob: -5.686358451843262
    7. ')*' → logprob: -7.686358451843262
    8. ')
' → logprob: -8.686358451843262
    9. '           ' → logprob: -9.811358451843262
    10. '       ' → logprob: -10.311358451843262

Token 3133: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006801225710660219
    2. '*' → logprob: -5.631801128387451
    3. '
' → logprob: -7.006801128387451
    4. '           ' → logprob: -7.506801128387451
    5. 'import' → logprob: -7.881801128387451
    6. ')
' → logprob: -8.25680160522461
    7. ' =' → logprob: -8.63180160522461
    8. '       ' → logprob: -8.88180160522461
    9. '=' → logprob: -9.50680160522461
    10. ')' → logprob: -9.75680160522461

Token 3134: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '```' → logprob: -16.125431060791016
    4. '   ' → logprob: -17.125431060791016
    5. '`' → logprob: -17.250431060791016
    6. '  ' → logprob: -19.125431060791016
    7. '``' → logprob: -19.750431060791016
    8. '۲' → logprob: -19.750431060791016
    9. '1' → logprob: -20.125431060791016
    10. '[' → logprob: -20.125431060791016

Token 3135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -16.250003814697266
    4. '   ' → logprob: -16.875003814697266
    5. '
' → logprob: -17.125003814697266
    6. '1' → logprob: -17.562503814697266
    7. '۲' → logprob: -17.625003814697266
    8. '```' → logprob: -17.687503814697266
    9. '20' → logprob: -17.812503814697266
    10. '２' → logprob: -18.250003814697266

Token 3136: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5736032724380493
    2. '
' → logprob: -1.5736032724380493
    3. '<|end|>' → logprob: -1.8236032724380493
    4. 'network' → logprob: -4.07360315322876
    5. ')' → logprob: -4.69860315322876
    6. ',
' → logprob: -4.82360315322876
    7. '_network' → logprob: -5.07360315322876
    8. ' network' → logprob: -5.57360315322876
    9. '           ' → logprob: -5.57360315322876
    10. '+' → logprob: -5.69860315322876

Token 3137: '           ' (ID: 352)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.8877513408660889
    2. '           ' → logprob: -1.1377513408660889
    3. ',' → logprob: -1.5127513408660889
    4. ' network' → logprob: -3.887751340866089
    5. ')' → logprob: -5.512751579284668
    6. '(network' → logprob: -5.512751579284668
    7. '```' → logprob: -5.762751579284668
    8. '=' → logprob: -5.762751579284668
    9. '
' → logprob: -5.887751579284668
    10. ' =' → logprob: -6.512751579284668

Token 3138: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' (adapté à ' network') → logprob: -0.0009898189455270767
    2. ' network' → logprob: -7.00098991394043
    3. '           ' → logprob: -9.50098991394043
    4. '       ' → logprob: -12.75098991394043
    5. '(network' → logprob: -15.37598991394043
    6. '```' → logprob: -15.37598991394043
    7. 'net' → logprob: -16.37598991394043
    8. '   ' → logprob: -16.87598991394043
    9. '_network' → logprob: -17.50098991394043
    10. '.network' → logprob: -17.87598991394043

Token 3139: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0013746378244832158
    2. '.' → logprob: -6.8763747215271
    3. '.network' → logprob: -8.126374244689941
    4. 'network' → logprob: -10.626374244689941
    5. 'add' → logprob: -12.126374244689941
    6. ' .' → logprob: -12.501374244689941
    7. '   ' → logprob: -12.501374244689941
    8. '
' → logprob: -12.751374244689941
    9. ').' → logprob: -13.376374244689941
    10. '.
' → logprob: -14.251374244689941

Token 3140: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00232581770978868
    2. 'edge' → logprob: -6.877326011657715
    3. 'add' → logprob: -7.502326011657715
    4. 'network' → logprob: -7.752326011657715
    5. 'Edge' → logprob: -9.127326011657715
    6. '_network' → logprob: -9.502326011657715
    7. '.add' → logprob: -10.377326011657715
    8. '.edge' → logprob: -11.127326011657715
    9. '_node' → logprob: -11.377326011657715
    10. '```' → logprob: -11.627326011657715

Token 3141: '(S' (ID: 6181)
  Prédit: 'SRC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SRC' → logprob: -0.032738156616687775
    2. 'node' → logprob: -4.782738208770752
    3. '(S' → logprob: -5.032738208770752
    4. 'n' → logprob: -5.032738208770752
    5. 'network' → logprob: -5.657738208770752
    6. 'SR' → logprob: -6.032738208770752
    7. 'SN' → logprob: -6.157738208770752
    8. '   ' → logprob: -7.532738208770752
    9. '(n' → logprob: -8.032737731933594
    10. '_SRC' → logprob: -8.282737731933594

Token 3142: 'RC' (ID: 12515)
  Prédit: 'RC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RC' → logprob: -3.190178904333152e-05
    2. 'R' → logprob: -10.500031471252441
    3. 'RCT' → logprob: -13.125031471252441
    4. 'SRC' → logprob: -13.500031471252441
    5. '```' → logprob: -14.875031471252441
    6. '
' → logprob: -16.375032424926758
    7. '**' → logprob: -16.750032424926758
    8. '   ' → logprob: -16.875032424926758
    9. 'rc' → logprob: -17.000032424926758
    10. 'Rc' → logprob: -17.000032424926758

Token 3143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013035668234806508
    2. ',node' → logprob: -9.125130653381348
    3. ',
' → logprob: -11.000130653381348
    4. ' ,' → logprob: -12.625130653381348
    5. '```' → logprob: -15.625130653381348
    6. '   ' → logprob: -15.625130653381348
    7. '‌,' → logprob: -15.750130653381348
    8. '(node' → logprob: -16.12512969970703
    9. '`,' → logprob: -16.25012969970703
    10. ',",' → logprob: -16.50012969970703

Token 3144: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0005530327325686812
    2. ' node' → logprob: -7.500553131103516
    3. '(node' → logprob: -18.750553131103516
    4. '[node' → logprob: -18.875553131103516
    5. '	node' → logprob: -19.375553131103516
    6. '=node' → logprob: -20.375553131103516
    7. '
' → logprob: -20.750553131103516
    8. '_node' → logprob: -21.875553131103516
    9. ',node' → logprob: -21.875553131103516
    10. 'Node' → logprob: -22.000553131103516

Token 3145: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -4.842555426876061e-06
    2. '_id' → logprob: -12.250004768371582
    3. '```' → logprob: -18.0000057220459
    4. ' id' → logprob: -18.2500057220459
    5. '
' → logprob: -18.8750057220459
    6. 'd' → logprob: -19.2500057220459
    7. '=' → logprob: -19.3750057220459
    8. '   ' → logprob: -19.3750057220459
    9. 'Id' → logprob: -19.6250057220459
    10. '	id' → logprob: -19.8750057220459

Token 3146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ',
' → logprob: -13.125003814697266
    3. ' ,' → logprob: -13.750003814697266
    4. '           ' → logprob: -16.000003814697266
    5. ')' → logprob: -16.375003814697266
    6. '‌,' → logprob: -17.000003814697266
    7. '```' → logprob: -17.000003814697266
    8. '<|end|>' → logprob: -17.000003814697266
    9. '`,' → logprob: -17.125003814697266
    10. '               ' → logprob: -17.875003814697266

Token 3147: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -6.704273118884885e-07
    2. ' float' → logprob: -15.000000953674316
    3. '1' → logprob: -15.625000953674316
    4. '=float' → logprob: -16.75
    5. 'p' → logprob: -17.625
    6. 'flo' → logprob: -18.25
    7. '100' → logprob: -18.75
    8. '   ' → logprob: -19.125
    9. 'math' → logprob: -19.375
    10. '	float' → logprob: -19.375

Token 3148: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.259079363080673e-05
    2. ''' → logprob: -11.750012397766113
    3. ''in' → logprob: -13.125012397766113
    4. 'inf' → logprob: -14.125012397766113
    5. ''s' → logprob: -14.375012397766113
    6. '(' → logprob: -14.625012397766113
    7. '("' → logprob: -14.750012397766113
    8. '('-' → logprob: -15.750012397766113
    9. '(in' → logprob: -15.750012397766113
    10. '['' → logprob: -16.75001335144043

Token 3149: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00021879478299524635
    2. ''' → logprob: -9.000218391418457
    3. '('' → logprob: -10.375218391418457
    4. ''s' → logprob: -11.625218391418457
    5. '9' → logprob: -11.625218391418457
    6. '16' → logprob: -11.875218391418457
    7. ' inf' → logprob: -12.125218391418457
    8. '"' → logprob: -12.250218391418457
    9. '.inf' → logprob: -12.250218391418457
    10. ''in' → logprob: -12.500218391418457

Token 3150: ''))

' (ID: 58153)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006730407476425171
    2. '))' → logprob: -5.006730556488037
    3. ')
' → logprob: -12.006730079650879
    4. ')")' → logprob: -12.881730079650879
    5. '       ' → logprob: -13.256730079650879
    6. ' )' → logprob: -13.881730079650879
    7. '())' → logprob: -13.881730079650879
    8. '})' → logprob: -14.256730079650879
    9. ')))' → logprob: -14.881730079650879
    10. '])' → logprob: -15.006730079650879

Token 3151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10077816992998123
    2. '#' → logprob: -2.350778102874756
    3. '```' → logprob: -7.725778102874756
    4. '
' → logprob: -9.225778579711914
    5. 'for' → logprob: -11.225778579711914
    6. '   ' → logprob: -11.225778579711914
    7. '           ' → logprob: -12.475778579711914
    8. '        
' → logprob: -15.100778579711914
    9. '``' → logprob: -15.225778579711914
    10. '`' → logprob: -16.225778579711914

Token 3152: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0868573859333992
    2. '#' (adapté à ' #') → logprob: -2.586857318878174
    3. '       ' → logprob: -4.836857318878174
    4. ' for' → logprob: -13.461857795715332
    5. '```' → logprob: -13.461857795715332
    6. '
' → logprob: -14.461857795715332
    7. '   ' → logprob: -14.586857795715332
    8. '           ' → logprob: -16.336856842041016
    9. ' #' → logprob: -17.336856842041016
    10. '``' → logprob: -17.461856842041016

Token 3153: ' Connect' (ID: 16834)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014231913723051548
    2. '#' → logprob: -4.2642316818237305
    3. '       ' → logprob: -9.63923168182373
    4. '
' → logprob: -13.38923168182373
    5. 'Connect' → logprob: -13.88923168182373
    6. ' for' → logprob: -14.26423168182373
    7. '   ' → logprob: -16.764232635498047
    8. 'def' → logprob: -17.264232635498047
    9. '```' → logprob: -17.889232635498047
    10. 'For' → logprob: -17.889232635498047

Token 3154: ' all' (ID: 722)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.38463541865348816
    2. 'SN' → logprob: -1.2596354484558105
    3. 'for' → logprob: -3.6346354484558105
    4. 'node' → logprob: -6.0096354484558105
    5. '#' → logprob: -6.2596354484558105
    6. 'nodes' → logprob: -6.3846354484558105
    7. ' network' → logprob: -7.3846354484558105
    8. '(S' → logprob: -7.5096354484558105
    9. '(network' → logprob: -7.8846354484558105
    10. '   ' → logprob: -8.134634971618652

Token 3155: ' top' (ID: 2344)
  Prédit: 'SN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SN' → logprob: -0.039365753531455994
    2. 'node' → logprob: -3.539365768432617
    3. 'nodes' → logprob: -5.039365768432617
    4. '(S' → logprob: -6.914365768432617
    5. 'p' → logprob: -7.789365768432617
    6. ' SN' → logprob: -7.914365768432617
    7. '(node' → logprob: -8.414365768432617
    8. '   ' → logprob: -8.789365768432617
    9. '_SN' → logprob: -9.039365768432617
    10. 'line' → logprob: -9.039365768432617

Token 3156: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03122062236070633
    2. '_line' → logprob: -3.5312206745147705
    3. ' line' → logprob: -6.531220436096191
    4. '   ' → logprob: -13.406220436096191
    5. 'lines' → logprob: -13.406220436096191
    6. '-line' → logprob: -13.406220436096191
    7. '	line' → logprob: -13.781220436096191
    8. 'Line' → logprob: -13.906220436096191
    9. '#line' → logprob: -14.031220436096191
    10. '[line' → logprob: -14.156220436096191

Token 3157: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.011409015394747257
    2. '_nodes' → logprob: -4.761408805847168
    3. 'node' → logprob: -6.511408805847168
    4. ' nodes' → logprob: -6.761408805847168
    5. '   ' → logprob: -10.136408805847168
    6. '(nodes' → logprob: -10.761408805847168
    7. '
' → logprob: -11.136408805847168
    8. '_node' → logprob: -11.261408805847168
    9. 'id' → logprob: -11.636408805847168
    10. 'ids' → logprob: -11.886408805847168

Token 3158: ''' (ID: 6)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.025289228186011314
    2. '_to' → logprob: -3.775289297103882
    3. ' to' → logprob: -6.775289058685303
    4. '
' → logprob: -8.525289535522461
    5. '   ' → logprob: -8.525289535522461
    6. 'out' → logprob: -8.900289535522461
    7. '(' → logprob: -9.650289535522461
    8. 'def' → logprob: -9.900289535522461
    9. ',' → logprob: -10.150289535522461
    10. '       ' → logprob: -10.275289535522461

Token 3159: ' out' (ID: 842)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.015146746300160885
    2. 'out' → logprob: -5.140146732330322
    3. '_in' → logprob: -5.140146732330322
    4. '_out' → logprob: -6.890146732330322
    5. 'id' → logprob: -7.015146732330322
    6. 'node' → logprob: -7.890146732330322
    7. ' in' → logprob: -8.26514720916748
    8. '
' → logprob: -8.89014720916748
    9. '(' → logprob: -9.14014720916748
    10. '*' → logprob: -9.39014720916748

Token 3160: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.1227412074804306
    2. '_vertex' → logprob: -2.247741222381592
    3. '_vertices' → logprob: -5.747741222381592
    4. 'put' → logprob: -6.622741222381592
    5. ' vertex' → logprob: -6.622741222381592
    6. 'vertices' → logprob: -6.747741222381592
    7. '   ' → logprob: -6.747741222381592
    8. '```' → logprob: -7.247741222381592
    9. '       ' → logprob: -8.747740745544434
    10. '	vertex' → logprob: -9.122740745544434

Token 3161: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.30655303597450256
    2. ',' → logprob: -1.4315530061721802
    3. '(S' → logprob: -4.306552886962891
    4. ' to' → logprob: -5.056552886962891
    5. '(network' → logprob: -6.431552886962891
    6. '(' → logprob: -6.681552886962891
    7. '       ' → logprob: -7.806552886962891
    8. '_to' → logprob: -7.931552886962891
    9. '```' → logprob: -8.05655288696289
    10. '
' → logprob: -8.18155288696289

Token 3162: ' sink' (ID: 22834)
  Prédit: 'SN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SN' → logprob: -2.7968066206085496e-05
    2. ' SN' → logprob: -10.500027656555176
    3. 'S' → logprob: -15.875027656555176
    4. '_SN' → logprob: -16.500028610229492
    5. '
' → logprob: -17.000028610229492
    6. 'SRC' → logprob: -18.250028610229492
    7. '(S' → logprob: -18.375028610229492
    8. 'network' → logprob: -18.375028610229492
    9. 'SR' → logprob: -18.750028610229492
    10. '   ' → logprob: -18.875028610229492

Token 3163: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5477157831192017
    2. '(' → logprob: -1.2977157831192017
    3. 'for' → logprob: -2.797715663909912
    4. ',
' → logprob: -3.797715663909912
    5. '       ' → logprob: -3.922715663909912
    6. '(S' → logprob: -4.172715663909912
    7. '(
' → logprob: -4.297715663909912
    8. ' for' → logprob: -5.547715663909912
    9. '(network' → logprob: -5.672715663909912
    10. '
' → logprob: -5.797715663909912

Token 3164: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4047139883041382
    2. '       ' → logprob: -1.2797139883041382
    3. 'for' → logprob: -3.1547141075134277
    4. ',' → logprob: -5.529714107513428
    5. ' network' → logprob: -6.154714107513428
    6. '<|end|>' → logprob: -6.279714107513428
    7. 'network' → logprob: -7.029714107513428
    8. '(network' → logprob: -7.029714107513428
    9. '```' → logprob: -7.654714107513428
    10. '           ' → logprob: -7.779714107513428

Token 3165: ' top' (ID: 2344)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011734402505680919
    2. ' for' → logprob: -6.751173496246338
    3. '       ' → logprob: -13.25117301940918
    4. '```' → logprob: -13.62617301940918
    5. '	for' → logprob: -16.00117301940918
    6. '
' → logprob: -16.62617301940918
    7. '``' → logprob: -17.12617301940918
    8. 'For' → logprob: -17.87617301940918
    9. '           ' → logprob: -18.25117301940918
    10. '_for' → logprob: -18.87617301940918

Token 3166: '_index' (ID: 7748)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.5139860510826111
    2. 'line' → logprob: -1.0139861106872559
    3. '_nodes' → logprob: -4.263986110687256
    4. 'for' → logprob: -4.388986110687256
    5. '_j' → logprob: -5.763986110687256
    6. '_' → logprob: -6.388986110687256
    7. '_lines' → logprob: -6.763986110687256
    8. 'j' → logprob: -6.763986110687256
    9. '_ids' → logprob: -7.138986110687256
    10. 'nodes' → logprob: -7.638986110687256

Token 3167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04866117238998413
    2. ' =' → logprob: -3.048661231994629
    3. 'for' → logprob: -9.673661231994629
    4. '=line' → logprob: -12.798661231994629
    5. '=len' → logprob: -13.423661231994629
    6. '_nodes' → logprob: -13.673661231994629
    7. ',' → logprob: -14.048661231994629
    8. '=
' → logprob: -14.173661231994629
    9. 's' → logprob: -14.548661231994629
    10. 'line' → logprob: -14.673661231994629

Token 3168: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.17420256882906e-05
    2. ' len' → logprob: -9.375091552734375
    3. 'node' → logprob: -12.625091552734375
    4. '(len' → logprob: -13.375091552734375
    5. 'n' → logprob: -14.125091552734375
    6. '   ' → logprob: -14.250091552734375
    7. '2' → logprob: -15.750091552734375
    8. '	len' → logprob: -16.000091552734375
    9. '[len' → logprob: -16.250091552734375
    10. 'id' → logprob: -16.750091552734375

Token 3169: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.0005975929088890553
    2. 'nodes' → logprob: -8.000597953796387
    3. '(lines' → logprob: -8.250597953796387
    4. 'lines' → logprob: -14.625597953796387
    5. '(node' → logprob: -15.500597953796387
    6. '	nodes' → logprob: -16.12559700012207
    7. '_nodes' → logprob: -16.75059700012207
    8. '(' → logprob: -17.25059700012207
    9. '```' → logprob: -17.62559700012207
    10. ' nodes' → logprob: -17.62559700012207

Token 3170: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.00045807508286088705
    2. '(nodes' → logprob: -8.000457763671875
    3. 'Per' → logprob: -9.750457763671875
    4. 'per' → logprob: -9.750457763671875
    5. '(lines' → logprob: -13.125457763671875
    6. '_nodes' → logprob: -13.250457763671875
    7. 'nodes' → logprob: -14.750457763671875
    8. '-' → logprob: -15.000457763671875
    9. '-per' → logprob: -15.125457763671875
    10. '(n' → logprob: -15.250457763671875

Token 3171: '_line' (ID: 14418)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3769870102405548
    2. 'nodes' → logprob: -1.6269869804382324
    3. 'line' → logprob: -3.2519869804382324
    4. 'per' → logprob: -3.6269869804382324
    5. '_lines' → logprob: -3.6269869804382324
    6. 'node' → logprob: -4.376986980438232
    7. '_line' → logprob: -5.251986980438232
    8. '_per' → logprob: -5.376986980438232
    9. '(lines' → logprob: -6.751986980438232
    10. '(nodes' → logprob: -7.126986980438232

Token 3172: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002319033956155181
    2. ' -' → logprob: -6.127318859100342
    3. '[-' → logprob: -9.0023193359375
    4. ')' → logprob: -12.5023193359375
    5. '[' → logprob: -12.8773193359375
    6. ')-' → logprob: -13.1273193359375
    7. '()-' → logprob: -14.0023193359375
    8. '
' → logprob: -15.3773193359375
    9. 'per' → logprob: -15.6273193359375
    10. '−' → logprob: -15.6273193359375

Token 3173: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00030114251421764493
    2. ' -' → logprob: -8.125301361083984
    3. '[' → logprob: -13.250301361083984
    4. 'top' → logprob: -13.375301361083984
    5. ' top' → logprob: -14.750301361083984
    6. '
' → logprob: -15.000301361083984
    7. '-
' → logprob: -15.625301361083984
    8. '[top' → logprob: -15.625301361083984
    9. '[-' → logprob: -16.125301361083984
    10. '1' → logprob: -16.250301361083984

Token 3174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -19.875
    5. '
' → logprob: -21.125
    6. '2' → logprob: -22.25
    7. '  ' → logprob: -22.375
    8. '۱' → logprob: -22.75
    9. '(' → logprob: -23.25
    10. '１' → logprob: -23.375

Token 3175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -19.625
    4. '```' → logprob: -20.375
    5. '2' → logprob: -20.625
    6. '
' → logprob: -21.0
    7. '       ' → logprob: -21.875
    8. '           ' → logprob: -22.125
    9. '۱' → logprob: -22.125
    10. '１' → logprob: -22.5

Token 3176: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03645537793636322
    2. ' for' → logprob: -4.286455154418945
    3. '
' → logprob: -4.411455154418945
    4. '       ' → logprob: -4.661455154418945
    5. ',' → logprob: -7.911455154418945
    6. ',
' → logprob: -11.036455154418945
    7. ';' → logprob: -11.161455154418945
    8. '        
' → logprob: -11.911455154418945
    9. 'For' → logprob: -12.036455154418945
    10. '   ' → logprob: -12.161455154418945

Token 3177: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004676592070609331
    2. ' for' → logprob: -5.754676818847656
    3. '       ' → logprob: -6.504676818847656
    4. '
' → logprob: -14.754676818847656
    5. '	for' → logprob: -15.004676818847656
    6. '           ' → logprob: -15.129676818847656
    7. '```' → logprob: -15.879676818847656
    8. '   ' → logprob: -16.504676818847656
    9. 'For' → logprob: -17.129676818847656
    10. '_for' → logprob: -18.379676818847656

Token 3178: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0280383548888494e-06
    2. ' for' → logprob: -14.250000953674316
    3. '       ' → logprob: -15.250000953674316
    4. '
' → logprob: -17.875001907348633
    5. '```' → logprob: -18.125001907348633
    6. '   ' → logprob: -20.500001907348633
    7. '           ' → logprob: -20.625001907348633
    8. '	for' → logprob: -21.750001907348633
    9. '``' → logprob: -22.125001907348633
    10. 'For' → logprob: -22.375001907348633

Token 3179: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.65707261255011e-06
    2. ' j' → logprob: -12.250008583068848
    3. '(j' → logprob: -12.500008583068848
    4. 'p' → logprob: -17.875009536743164
    5. '	j' → logprob: -18.625009536743164
    6. '_j' → logprob: -18.625009536743164
    7. 'node' → logprob: -19.000009536743164
    8. '   ' → logprob: -19.000009536743164
    9. 'i' → logprob: -19.125009536743164
    10. 'top' → logprob: -19.125009536743164

Token 3180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14548657834529877
    2. 'in' → logprob: -2.02048659324646
    3. ' in' → logprob: -5.895486354827881
    4. ' ,' → logprob: -11.270486831665039
    5. ',node' → logprob: -11.520486831665039
    6. 'top' → logprob: -11.645486831665039
    7. ',n' → logprob: -11.770486831665039
    8. ',j' → logprob: -12.520486831665039
    9. ',p' → logprob: -12.895486831665039
    10. ',i' → logprob: -13.395486831665039

Token 3181: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00010902655776590109
    2. ' p' → logprob: -9.12510871887207
    3. '_p' → logprob: -19.00010871887207
    4. '	p' → logprob: -20.75010871887207
    5. '(p' → logprob: -21.37510871887207
    6. '   ' → logprob: -21.75010871887207
    7. '```' → logprob: -22.37510871887207
    8. ' ' → logprob: -22.62510871887207
    9. ''p' → logprob: -22.87510871887207
    10. ')p' → logprob: -23.00010871887207

Token 3182: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.018159428611397743
    2. ' in' → logprob: -4.01815938949585
    3. ',' → logprob: -12.143159866333008
    4. 'top' → logprob: -13.143159866333008
    5. '```' → logprob: -14.518159866333008
    6. 'i' → logprob: -15.018159866333008
    7. ' ' → logprob: -15.268159866333008
    8. '
' → logprob: -15.268159866333008
    9. '_in' → logprob: -15.893159866333008
    10. ')' → logprob: -16.518159866333008

Token 3183: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0040312642231583595
    2. ' enumerate' → logprob: -5.629031181335449
    3. 'nodes' → logprob: -8.87903118133545
    4. '(nodes' → logprob: -9.37903118133545
    5. '(en' → logprob: -9.50403118133545
    6. 'range' → logprob: -10.25403118133545
    7. 'top' → logprob: -10.62903118133545
    8. '[(' → logprob: -10.87903118133545
    9. 'in' → logprob: -11.62903118133545
    10. '((' → logprob: -11.87903118133545

Token 3184: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.011050998233258724
    2. 'nodes' → logprob: -4.511051177978516
    3. '	nodes' → logprob: -13.761051177978516
    4. 'top' → logprob: -14.011051177978516
    5. ' nodes' → logprob: -14.386051177978516
    6. '.nodes' → logprob: -15.261051177978516
    7. '(top' → logprob: -15.386051177978516
    8. '(tokens' → logprob: -16.761051177978516
    9. '(lines' → logprob: -16.886051177978516
    10. 'node' → logprob: -17.011051177978516

Token 3185: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.00033760786755010486
    2. '[top' → logprob: -8.625337600708008
    3. 'per' → logprob: -8.875337600708008
    4. '_top' → logprob: -11.625337600708008
    5. '(top' → logprob: -12.625337600708008
    6. 'top' → logprob: -12.625337600708008
    7. 'Per' → logprob: -13.250337600708008
    8. ')' → logprob: -15.250337600708008
    9. '	per' → logprob: -15.375337600708008
    10. '[' → logprob: -16.125337600708008

Token 3186: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.20395506918430328
    2. 'line' → logprob: -1.703955054283142
    3. 'ne' → logprob: -7.203955173492432
    4. 'ine' → logprob: -7.578955173492432
    5. 'nodes' → logprob: -8.328954696655273
    6. 'per' → logprob: -8.453954696655273
    7. 'n' → logprob: -9.078954696655273
    8. '_lines' → logprob: -9.328954696655273
    9. '_nodes' → logprob: -9.453954696655273
    10. 'the' → logprob: -9.703954696655273

Token 3187: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -7.896309739408025e-07
    2. '[-' → logprob: -15.000000953674316
    3. '(top' → logprob: -15.375000953674316
    4. 'top' → logprob: -16.0
    5. '[
' → logprob: -17.75
    6. '[' → logprob: -17.75
    7. '   ' → logprob: -17.875
    8. '[last' → logprob: -18.0
    9. '
' → logprob: -18.125
    10. ')' → logprob: -18.25

Token 3188: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0028177164494991302
    2. '_line' → logprob: -6.002817630767822
    3. 'index' → logprob: -9.25281810760498
    4. 'line' → logprob: -9.37781810760498
    5. '[' → logprob: -10.12781810760498
    6. '[line' → logprob: -10.12781810760498
    7. '[-' → logprob: -10.75281810760498
    8. '[j' → logprob: -11.12781810760498
    9. '[top' → logprob: -11.87781810760498
    10. '_id' → logprob: -12.12781810760498

Token 3189: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0006017650011926889
    2. '):' → logprob: -7.625601768493652
    3. ']:
' → logprob: -10.625601768493652
    4. '   ' → logprob: -10.625601768493652
    5. '[top' → logprob: -11.125601768493652
    6. '):
' → logprob: -11.250601768493652
    7. '       ' → logprob: -11.375601768493652
    8. ']):
' → logprob: -11.750601768493652
    9. '           ' → logprob: -12.625601768493652
    10. '[(' → logprob: -12.750601768493652

Token 3190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0054415008053183556
    2. 'node' → logprob: -5.380441665649414
    3. 'out' → logprob: -8.255441665649414
    4. ' node' → logprob: -8.630441665649414
    5. ' out' → logprob: -9.130441665649414
    6. 'top' → logprob: -9.130441665649414
    7. '   ' → logprob: -9.755441665649414
    8. '```' → logprob: -10.255441665649414
    9. '               ' → logprob: -11.005441665649414
    10. ' top' → logprob: -11.755441665649414

Token 3191: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.01065974123775959
    2. 'network' → logprob: -5.010659694671631
    3. 'out' → logprob: -5.635659694671631
    4. ' node' → logprob: -8.760660171508789
    5. '           ' → logprob: -9.135660171508789
    6. '       ' → logprob: -10.260660171508789
    7. '   ' → logprob: -10.510660171508789
    8. '               ' → logprob: -11.010660171508789
    9. 'net' → logprob: -11.635660171508789
    10. 'top' → logprob: -12.260660171508789

Token 3192: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00783634651452303
    2. '_id' → logprob: -4.88283634185791
    3. 'out' → logprob: -8.63283634185791
    4. '_out' → logprob: -9.88283634185791
    5. 'Id' → logprob: -15.13283634185791
    6. ' id' → logprob: -15.63283634185791
    7. '
' → logprob: -16.007837295532227
    8. '```' → logprob: -16.382837295532227
    9. '   ' → logprob: -17.132837295532227
    10. '=' → logprob: -17.257837295532227

Token 3193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932201385498047
    2. ' =' → logprob: -0.6932201385498047
    3. '=node' → logprob: -9.818220138549805
    4. 'node' → logprob: -12.443220138549805
    5. '_node' → logprob: -12.443220138549805
    6. '(node' → logprob: -12.693220138549805
    7. '=
' → logprob: -13.568220138549805
    8. '_id' → logprob: -13.943220138549805
    9. '   ' → logprob: -14.318220138549805
    10. ' node' → logprob: -14.943220138549805

Token 3194: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00044127836008556187
    2. ' node' → logprob: -7.750441074371338
    3. '(node' → logprob: -11.500441551208496
    4. '[node' → logprob: -15.625441551208496
    5. '   ' → logprob: -16.25044059753418
    6. '           ' → logprob: -16.37544059753418
    7. '	node' → logprob: -17.25044059753418
    8. '
' → logprob: -17.50044059753418
    9. '       ' → logprob: -18.62544059753418
    10. '`' → logprob: -19.12544059753418

Token 3195: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0001600347168277949
    2. '_map' → logprob: -9.125160217285156
    3. 'id' → logprob: -10.375160217285156
    4. '{' → logprob: -12.250160217285156
    5. '[(' → logprob: -12.375160217285156
    6. 'user' → logprob: -13.000160217285156
    7. '_node' → logprob: -13.375160217285156
    8. '[' → logprob: -13.500160217285156
    9. '[node' → logprob: -13.625160217285156
    10. '```' → logprob: -14.125160217285156

Token 3196: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.008674968965351582
    2. '_id' → logprob: -4.7586750984191895
    3. 'map' → logprob: -9.883674621582031
    4. 'Map' → logprob: -12.133674621582031
    5. '_node' → logprob: -13.508674621582031
    6. 'user' → logprob: -15.008674621582031
    7. '_user' → logprob: -15.258674621582031
    8. '   ' → logprob: -15.383674621582031
    9. ' =' → logprob: -15.383674621582031
    10. '[' → logprob: -15.508674621582031

Token 3197: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0372152142226696
    2. '(top' → logprob: -3.412215232849121
    3. '[top' → logprob: -5.662215232849121
    4. '(' → logprob: -9.662215232849121
    5. '((' → logprob: -10.912215232849121
    6. '[
' → logprob: -13.287215232849121
    7. '[' → logprob: -13.412215232849121
    8. '   ' → logprob: -13.537215232849121
    9. 'top' → logprob: -14.662215232849121
    10. '{' → logprob: -15.162215232849121

Token 3198: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.07891898602247238
    2. '(top' → logprob: -2.578918933868408
    3. ' top' → logprob: -10.578919410705566
    4. '(' → logprob: -13.203919410705566
    5. '[top' → logprob: -13.328919410705566
    6. '	top' → logprob: -15.953919410705566
    7. ' (' → logprob: -16.07891845703125
    8. '(
' → logprob: -16.82891845703125
    9. '_top' → logprob: -17.45391845703125
    10. '
' → logprob: -17.57891845703125

Token 3199: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.004421693738549948
    2. 'top' → logprob: -6.004421710968018
    3. 'index' → logprob: -6.504421710968018
    4. '(top' → logprob: -7.754421710968018
    5. ' top' → logprob: -12.00442123413086
    6. '[top' → logprob: -12.37942123413086
    7. 'Index' → logprob: -12.75442123413086
    8. '(' → logprob: -13.87942123413086
    9. '   ' → logprob: -14.37942123413086
    10. 'line' → logprob: -14.37942123413086

Token 3200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000967083964496851
    2. ',j' → logprob: -7.000967025756836
    3. ' ,' → logprob: -9.875967025756836
    4. 'j' → logprob: -13.000967025756836
    5. ',
' → logprob: -14.875967025756836
    6. ' ' → logprob: -15.125967025756836
    7. '[j' → logprob: -15.500967025756836
    8. ',p' → logprob: -15.500967025756836
    9. '           ' → logprob: -15.875967025756836
    10. '   ' → logprob: -16.250967025756836

Token 3201: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.65101717156358e-05
    2. ' j' → logprob: -9.250096321105957
    3. '(j' → logprob: -15.750096321105957
    4. '   ' → logprob: -16.000097274780273
    5. '	j' → logprob: -16.750097274780273
    6. '(' → logprob: -17.875097274780273
    7. '$j' → logprob: -17.875097274780273
    8. ' ' → logprob: -18.250097274780273
    9. '_j' → logprob: -18.750097274780273
    10. '[j' → logprob: -18.875097274780273

Token 3202: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021797618828713894
    2. ')*' → logprob: -6.5021796226501465
    3. ']' → logprob: -7.3771796226501465
    4. ')]' → logprob: -10.752180099487305
    5. '*' → logprob: -11.127180099487305
    6. ']*' → logprob: -12.127180099487305
    7. '   ' → logprob: -12.752180099487305
    8. ' )' → logprob: -13.377180099487305
    9. '           ' → logprob: -13.752180099487305
    10. '               ' → logprob: -14.127180099487305

Token 3203: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3868922293186188
    2. ' *' → logprob: -1.1368921995162964
    3. '=' → logprob: -12.261892318725586
    4. '
' → logprob: -12.636892318725586
    5. ' ' → logprob: -12.636892318725586
    6. ')' → logprob: -13.261892318725586
    7. '	' → logprob: -13.261892318725586
    8. '[' → logprob: -13.511892318725586
    9. ' =' → logprob: -13.761892318725586
    10. '   ' → logprob: -13.761892318725586

Token 3204: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02330813929438591
    2. '1' → logprob: -3.773308038711548
    3. '0' → logprob: -10.398307800292969
    4. ' ' → logprob: -10.398307800292969
    5. '(' → logprob: -14.523307800292969
    6. '*' → logprob: -14.648307800292969
    7. '   ' → logprob: -14.648307800292969
    8. '  ' → logprob: -15.773307800292969
    9. '```' → logprob: -17.83580780029297
    10. '	' → logprob: -17.89830780029297

Token 3205: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.700132997939363e-05
    2. '1' → logprob: -11.625017166137695
    3. ' ' → logprob: -11.875017166137695
    4. '0' → logprob: -14.125017166137695
    5. '(' → logprob: -16.875017166137695
    6. '   ' → logprob: -17.312517166137695
    7. '  ' → logprob: -17.687517166137695
    8. '4' → logprob: -17.875017166137695
    9. '27' → logprob: -18.250017166137695
    10. '	' → logprob: -18.250017166137695

Token 3206: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029752805829048157
    2. ' +' → logprob: -3.529752731323242
    3. '+
' → logprob: -13.529752731323242
    4. '1' → logprob: -14.779752731323242
    5. '
' → logprob: -15.279752731323242
    6. '   ' → logprob: -16.154752731323242
    7. '           ' → logprob: -17.154752731323242
    8. ' ' → logprob: -17.404752731323242
    9. ' +
' → logprob: -17.654752731323242
    10. '       ' → logprob: -18.279752731323242

Token 3207: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '0' → logprob: -19.25
    4. '
' → logprob: -19.375
    5. '   ' → logprob: -20.5
    6. '```' → logprob: -20.5
    7. '+' → logprob: -22.0
    8. '=' → logprob: -22.0
    9. '`' → logprob: -22.25
    10. '``' → logprob: -22.5

Token 3208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '0' → logprob: -18.5
    4. '   ' → logprob: -20.0
    5. '  ' → logprob: -21.875
    6. '```' → logprob: -22.375
    7. '`' → logprob: -23.0625
    8. '<|end|>' → logprob: -23.125
    9. '
' → logprob: -23.3125
    10. '۱' → logprob: -23.5

Token 3209: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001562715508043766
    2. ',
' → logprob: -7.251562595367432
    3. '           ' → logprob: -7.376562595367432
    4. ')' → logprob: -9.37656307220459
    5. '),' → logprob: -10.00156307220459
    6. ' ,' → logprob: -10.62656307220459
    7. ')
' → logprob: -11.00156307220459
    8. '
' → logprob: -11.25156307220459
    9. '<|end|>' → logprob: -11.87656307220459
    10. '```' → logprob: -12.00156307220459

Token 3210: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5012337565422058
    2. '           ' → logprob: -1.1262338161468506
    3. 'network' → logprob: -2.7512338161468506
    4. ' network' → logprob: -5.7512335777282715
    5. '(network' → logprob: -6.8762335777282715
    6. ',
' → logprob: -7.0012335777282715
    7. ' ,' → logprob: -8.37623405456543
    8. ')' → logprob: -8.62623405456543
    9. '```' → logprob: -8.75123405456543
    10. '               ' → logprob: -9.25123405456543

Token 3211: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' (adapté à ' network') → logprob: -0.0004019521293230355
    2. ' network' → logprob: -8.000401496887207
    3. '           ' → logprob: -9.625401496887207
    4. '```' → logprob: -15.750401496887207
    5. '(network' → logprob: -16.250402450561523
    6. '       ' → logprob: -16.500402450561523
    7. '               ' → logprob: -17.250402450561523
    8. '   ' → logprob: -17.500402450561523
    9. 'net' → logprob: -17.625402450561523
    10. '_network' → logprob: -18.000402450561523

Token 3212: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.611323624383658e-05
    2. '.' → logprob: -9.750065803527832
    3. '.network' → logprob: -13.250065803527832
    4. ').' → logprob: -13.500065803527832
    5. 'add' → logprob: -14.000065803527832
    6. '`.' → logprob: -14.125065803527832
    7. '>.' → logprob: -14.250065803527832
    8. '   ' → logprob: -14.625065803527832
    9. '```' → logprob: -14.875065803527832
    10. ' .' → logprob: -15.500065803527832

Token 3213: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.003267552936449647
    2. 'edge' → logprob: -5.753267765045166
    3. 'Edge' → logprob: -9.378267288208008
    4. '(S' → logprob: -12.753267288208008
    5. 'EDGE' → logprob: -13.878267288208008
    6. '(edge' → logprob: -14.128267288208008
    7. '_EDGE' → logprob: -15.378267288208008
    8. '-edge' → logprob: -15.628267288208008
    9. ' edge' → logprob: -16.753267288208008
    10. 'dge' → logprob: -17.003267288208008

Token 3214: '(node' (ID: 13356)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.09323211759328842
    2. '(node' → logprob: -2.5932321548461914
    3. 'SN' → logprob: -4.343232154846191
    4. 'node' → logprob: -6.843232154846191
    5. 'S' → logprob: -9.468232154846191
    6. '(' → logprob: -10.093232154846191
    7. '(top' → logprob: -10.468232154846191
    8. 'top' → logprob: -11.093232154846191
    9. '(
' → logprob: -12.593232154846191
    10. '(network' → logprob: -12.843232154846191

Token 3215: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.981667537620524e-06
    2. '_id' → logprob: -13.250001907348633
    3. 'ID' → logprob: -17.875001907348633
    4. '
' → logprob: -17.875001907348633
    5. 'd' → logprob: -18.250001907348633
    6. 'out' → logprob: -18.250001907348633
    7. '```' → logprob: -18.375001907348633
    8. 'node' → logprob: -18.625001907348633
    9. 'i' → logprob: -18.875001907348633
    10. 'eid' → logprob: -19.375001907348633

Token 3216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. ',S' → logprob: -11.375029563903809
    3. ',
' → logprob: -11.625029563903809
    4. ' ,' → logprob: -11.750029563903809
    5. '           ' → logprob: -13.625029563903809
    6. '
' → logprob: -16.250030517578125
    7. ',
' → logprob: -17.250030517578125
    8. '=' → logprob: -17.375030517578125
    9. '(S' → logprob: -17.500030517578125
    10. '(),' → logprob: -17.875030517578125

Token 3217: ' SN' (ID: 41504)
  Prédit: 'SN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SN' → logprob: -0.0005530327325686812
    2. ' SN' → logprob: -7.500553131103516
    3. '_SN' → logprob: -17.375553131103516
    4. 'S' → logprob: -19.500553131103516
    5. 'Sn' → logprob: -20.250553131103516
    6. '(S' → logprob: -22.375553131103516
    7. '   ' → logprob: -22.500553131103516
    8. '
' → logprob: -22.500553131103516
    9. 'sn' → logprob: -23.125553131103516
    10. 'SK' → logprob: -24.250553131103516

Token 3218: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.320199877838604e-07
    2. ' K' → logprob: -15.25
    3. '
' → logprob: -15.75
    4. '```' → logprob: -18.875
    5. '   ' → logprob: -19.5
    6. '\' → logprob: -19.625
    7. '\
' → logprob: -19.75
    8. 'К' → logprob: -20.0
    9. 'Ｋ' → logprob: -20.0
    10. '	K' → logprob: -20.375

Token 3219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ',
' → logprob: -13.750001907348633
    3. '           ' → logprob: -14.125001907348633
    4. ' ,' → logprob: -15.500001907348633
    5. ',float' → logprob: -16.250001907348633
    6. '       ' → logprob: -17.625001907348633
    7. '               ' → logprob: -18.250001907348633
    8. ')' → logprob: -18.250001907348633
    9. '<|end|>' → logprob: -18.875001907348633
    10. '(),' → logprob: -18.875001907348633

Token 3220: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005234121344983578
    2. ' float' → logprob: -5.255234241485596
    3. '   ' → logprob: -16.630233764648438
    4. '(float' → logprob: -16.630233764648438
    5. '	float' → logprob: -16.755233764648438
    6. '=float' → logprob: -17.255233764648438
    7. 'inf' → logprob: -17.880233764648438
    8. 'f' → logprob: -18.005233764648438
    9. '       ' → logprob: -18.255233764648438
    10. 'flo' → logprob: -18.380233764648438

Token 3221: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.747814349073451e-05
    2. '('-' → logprob: -11.125017166137695
    3. '(' → logprob: -14.500017166137695
    4. ' ('' → logprob: -15.000017166137695
    5. ''' → logprob: -15.125017166137695
    6. ''in' → logprob: -15.250017166137695
    7. ''s' → logprob: -15.250017166137695
    8. '('+' → logprob: -15.500017166137695
    9. '('.' → logprob: -15.625017166137695
    10. '.inf' → logprob: -16.000017166137695

Token 3222: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00014537633978761733
    2. ''' → logprob: -9.000144958496094
    3. ''s' → logprob: -11.625144958496094
    4. '-inf' → logprob: -11.625144958496094
    5. ''in' → logprob: -13.625144958496094
    6. '-' → logprob: -13.750144958496094
    7. ' inf' → logprob: -14.625144958496094
    8. ''t' → logprob: -15.125144958496094
    9. '0' → logprob: -15.250144958496094
    10. '+' → logprob: -15.750144958496094

Token 3223: ''))

' (ID: 58153)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -12.750003814697266
    3. '))' → logprob: -14.875003814697266
    4. ' )' → logprob: -16.375003814697266
    5. ')
' → logprob: -17.000003814697266
    6. ')`' → logprob: -17.000003814697266
    7. '()' → logprob: -17.375003814697266
    8. '       ' → logprob: -17.375003814697266
    9. '())' → logprob: -18.125003814697266
    10. '   ' → logprob: -18.125003814697266

Token 3224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001710401731543243
    2. '<|end|>' → logprob: -6.626710414886475
    3. ')' → logprob: -9.001709938049316
    4. 'return' → logprob: -9.251709938049316
    5. '   ' → logprob: -9.876709938049316
    6. '
' → logprob: -10.126709938049316
    7. '	' → logprob: -11.126709938049316
    8. '```' → logprob: -11.376709938049316
    9. ' return' → logprob: -11.626709938049316
    10. '<|end|>' → logprob: -11.751709938049316

Token 3225: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3869631886482239
    2. '       ' → logprob: -1.136963129043579
    3. ' return' → logprob: -9.761962890625
    4. '	return' → logprob: -10.636962890625
    5. '	' → logprob: -12.511962890625
    6. '{return' → logprob: -12.511962890625
    7. '```' → logprob: -13.511962890625
    8. '   ' → logprob: -14.386962890625
    9. '@return' → logprob: -14.636962890625
    10. ':return' → logprob: -15.136962890625

Token 3226: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.023666204884648323
    2. ' network' → logprob: -3.7736661434173584
    3. '(network' → logprob: -7.7736663818359375
    4. 'net' → logprob: -17.898666381835938
    5. '(' → logprob: -18.023666381835938
    6. '       ' → logprob: -19.148666381835938
    7. '   ' → logprob: -19.273666381835938
    8. 'n' → logprob: -19.398666381835938
    9. '(n' → logprob: -19.523666381835938
    10. ' (' → logprob: -19.648666381835938

Token 3227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6938211917877197
    2. 'SRC' → logprob: -0.6938211917877197
    3. ' SRC' → logprob: -7.943820953369141
    4. ',S' → logprob: -8.44382095336914
    5. '(S' → logprob: -9.81882095336914
    6. ',
' → logprob: -10.94382095336914
    7. '       ' → logprob: -11.31882095336914
    8. 'SR' → logprob: -12.06882095336914
    9. 'src' → logprob: -12.94382095336914
    10. '_SRC' → logprob: -13.06882095336914

Token 3228: ' SRC' (ID: 112818)
  Prédit: 'SRC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SRC' → logprob: -7.703443770878948e-06
    2. 'node' → logprob: -12.500007629394531
    3. 'n' → logprob: -13.250007629394531
    4. ' SRC' → logprob: -13.375007629394531
    5. '   ' → logprob: -15.250007629394531
    6. 'len' → logprob: -16.00000762939453
    7. 'SCR' → logprob: -16.87500762939453
    8. 'nodes' → logprob: -16.87500762939453
    9. 'SR' → logprob: -17.12500762939453
    10. 'S' → logprob: -18.00000762939453

Token 3229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3954463510308415e-05
    2. ',S' → logprob: -9.875054359436035
    3. ' ,' → logprob: -13.500054359436035
    4. 'SN' → logprob: -14.500054359436035
    5. ',
' → logprob: -14.625054359436035
    6. '       ' → logprob: -16.50005340576172
    7. ',s' → logprob: -18.25005340576172
    8. '   ' → logprob: -18.62505340576172
    9. '```' → logprob: -18.62505340576172
    10. '_SN' → logprob: -18.87505340576172

Token 3230: ' SN' (ID: 41504)
  Prédit: 'SN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SN' → logprob: -5.836499985889532e-05
    2. ' SN' → logprob: -9.7500581741333
    3. '_SN' → logprob: -17.750059127807617
    4. '
' → logprob: -18.500059127807617
    5. '   ' → logprob: -19.000059127807617
    6. 'S' → logprob: -19.875059127807617
    7. '       ' → logprob: -20.375059127807617
    8. ' ' → logprob: -21.750059127807617
    9. 'Sn' → logprob: -21.750059127807617
    10. '     ' → logprob: -22.000059127807617

Token 3231: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.9361264946837764e-07
    2. 'Ｋ' → logprob: -16.0
    3. '
' → logprob: -18.125
    4. ' K' → logprob: -18.125
    5. 'Κ' → logprob: -18.25
    6. 'К' → logprob: -18.5
    7. 'NK' → logprob: -19.0
    8. 'k' → logprob: -20.375
    9. '\' → logprob: -20.75
    10. '	K' → logprob: -21.0

Token 3232: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3233: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3234: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03736118972301483
    2. ' solve' → logprob: -4.037361145019531
    3. ' compute' → logprob: -4.787361145019531
    4. ' max' → logprob: -5.412361145019531
    5. ' calculate' → logprob: -6.162361145019531
    6. ' corridor' → logprob: -6.162361145019531
    7. ' find' → logprob: -6.912361145019531
    8. 'main' → logprob: -8.287361145019531
    9. ' test' → logprob: -8.287361145019531
    10. ' run' → logprob: -8.787361145019531

Token 3235: '_d' (ID: 1565)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7009758353233337
    2. '_line' → logprob: -0.9509758353233337
    3. 'line' → logprob: -3.4509758949279785
    4. '_input' → logprob: -3.8259758949279785
    5. '():' → logprob: -4.0759758949279785
    6. '<|end|>' → logprob: -4.5759758949279785
    7. '_' → logprob: -4.7009758949279785
    8. '()>' → logprob: -5.3259758949279785
    9. '(' → logprob: -5.7009758949279785
    10. '_lines' → logprob: -5.9509758949279785

Token 3236: 'atasets' (ID: 105003)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.06436024606227875
    2. 'ata' → logprob: -2.8143601417541504
    3. 'e' → logprob: -6.81436014175415
    4. 'efs' → logprob: -7.31436014175415
    5. 'eft' → logprob: -8.564360618591309
    6. 'efa' → logprob: -9.064360618591309
    7. 'ouble' → logprob: -9.439360618591309
    8. 'ec' → logprob: -9.939360618591309
    9. 'el' → logprob: -10.439360618591309
    10. 'eep' → logprob: -10.689360618591309

Token 3237: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0017174237873405218
    2. '():
' → logprob: -6.501717567443848
    3. '()' → logprob: -8.751717567443848
    4. '(' → logprob: -10.376717567443848
    5. '():

' → logprob: -12.126717567443848
    6. ' ():' → logprob: -12.376717567443848
    7. '(file' → logprob: -13.001717567443848
    8. '();' → logprob: -13.501717567443848
    9. ':' → logprob: -13.751717567443848
    10. '()>' → logprob: -13.751717567443848

Token 3238: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00231607211753726
    2. '():
' → logprob: -6.127315998077393
    3. ':' → logprob: -9.25231647491455
    4. '(' → logprob: -11.12731647491455
    5. '()' → logprob: -11.62731647491455
    6. ' ():' → logprob: -13.00231647491455
    7. '(":' → logprob: -14.00231647491455
    8. '(size' → logprob: -14.12731647491455
    9. '(file' → logprob: -14.12731647491455
    10. '():
' → logprob: -14.37731647491455

Token 3239: ' Iterator' (ID: 41994)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.4749644994735718
    2. 'Iterator' → logprob: -0.9749644994735718
    3. 'None' → logprob: -7.224964618682861
    4. ' Iterator' → logprob: -8.974964141845703
    5. 'int' → logprob: -11.224964141845703
    6. ' List' → logprob: -12.099964141845703
    7. 'Iterable' → logprob: -12.349964141845703
    8. 'Tuple' → logprob: -12.474964141845703
    9. 'iterator' → logprob: -12.974964141845703
    10. 'list' → logprob: -14.349964141845703

Token 3240: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21598953008651733
    2. '():' → logprob: -2.090989589691162
    3. '[List' → logprob: -3.715989589691162
    4. '[str' → logprob: -3.965989589691162
    5. '[int' → logprob: -4.090989589691162
    6. '[]' → logprob: -5.590989589691162
    7. '[
' → logprob: -6.340989589691162
    8. '[list' → logprob: -6.340989589691162
    9. '():
' → logprob: -6.590989589691162
    10. ':' → logprob: -6.965989589691162

Token 3241: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.11130832880735397
    2. 'str' → logprob: -2.6113083362579346
    3. 'List' → logprob: -3.4863083362579346
    4. 'None' → logprob: -7.6113080978393555
    5. 'tuple' → logprob: -7.7363080978393555
    6. 'int' → logprob: -8.736308097839355
    7. 'sys' → logprob: -9.111308097839355
    8. ' Tuple' → logprob: -10.236308097839355
    9. 'list' → logprob: -10.611308097839355
    10. 'Dict' → logprob: -11.361308097839355

Token 3242: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.5785165429115295
    2. 'int' → logprob: -0.8285165429115295
    3. '[List' → logprob: -6.453516483306885
    4. 'List' → logprob: -7.078516483306885
    5. '[
' → logprob: -9.078516960144043
    6. '(int' → logprob: -10.828516960144043
    7. '[' → logprob: -11.828516960144043
    8. '[]' → logprob: -12.828516960144043
    9. ' int' → logprob: -12.828516960144043
    10. 'Tuple' → logprob: -13.328516960144043

Token 3243: 'float' (ID: 7829)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009775093756616116
    2. 'List' → logprob: -4.759775161743164
    3. 'float' → logprob: -7.134775161743164
    4. '[int' → logprob: -8.134775161743164
    5. ']' → logprob: -11.134775161743164
    6. '])' → logprob: -11.134775161743164
    7. ']int' → logprob: -11.134775161743164
    8. ']]' → logprob: -12.759775161743164
    9. '...]' → logprob: -13.009775161743164
    10. 'Tuple' → logprob: -13.134775161743164

Token 3244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009278989746235311
    2. ',int' → logprob: -7.625927925109863
    3. ',float' → logprob: -8.250927925109863
    4. ',List' → logprob: -8.750927925109863
    5. '[' → logprob: -12.250927925109863
    6. '[int' → logprob: -12.375927925109863
    7. ',
' → logprob: -13.000927925109863
    8. ',[' → logprob: -13.000927925109863
    9. ',bool' → logprob: -13.750927925109863
    10. 'int' → logprob: -13.750927925109863

Token 3245: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.4218004643917084
    2. 'int' → logprob: -1.2968004941940308
    3. 'float' → logprob: -2.671800374984741
    4. '[int' → logprob: -7.29680061340332
    5. '[List' → logprob: -7.54680061340332
    6. '
' → logprob: -9.17180061340332
    7. ' List' → logprob: -9.42180061340332
    8. '...' → logprob: -9.92180061340332
    9. 'str' → logprob: -10.67180061340332
    10. ' int' → logprob: -10.92180061340332

Token 3246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.126930832862854
    2. '[List' → logprob: -2.1269307136535645
    3. '[int' → logprob: -14.001931190490723
    4. 'Polygon' → logprob: -14.001931190490723
    5. '[
' → logprob: -14.126931190490723
    6. '[str' → logprob: -16.001930236816406
    7. '[np' → logprob: -16.251930236816406
    8. '[(' → logprob: -16.376930236816406
    9. 'List' → logprob: -17.126930236816406
    10. ']' → logprob: -17.876930236816406

Token 3247: 'Polygon' (ID: 48860)
  Prédit: 'Polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Polygon' → logprob: -0.001930301426909864
    2. 'Tuple' → logprob: -6.876930236816406
    3. 'List' → logprob: -7.126930236816406
    4. 'Point' → logprob: -9.876930236816406
    5. '[' → logprob: -11.001930236816406
    6. '[List' → logprob: -11.751930236816406
    7. 'Polynomial' → logprob: -12.126930236816406
    8. ' Polygon' → logprob: -12.501930236816406
    9. 'Polyline' → logprob: -12.876930236816406
    10. 'float' → logprob: -13.501930236816406

Token 3248: ']]' (ID: 8928)
  Prédit: ']]:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.18124264478683472
    2. ',' → logprob: -1.9312427043914795
    3. ']]' → logprob: -4.0562424659729
    4. ',float' → logprob: -6.3062424659729
    5. '[' → logprob: -6.6812424659729
    6. ']' → logprob: -9.056242942810059
    7. ',List' → logprob: -9.556242942810059
    8. ']],' → logprob: -10.056242942810059
    9. '[List' → logprob: -10.306242942810059
    10. '[int' → logprob: -10.431242942810059

Token 3249: ']:
' (ID: 22152)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5237285494804382
    2. '():' → logprob: -0.8987285494804382
    3. '()' → logprob: -7.773728370666504
    4. ':' → logprob: -9.523728370666504
    5. '():
' → logprob: -9.898728370666504
    6. '(' → logprob: -11.023728370666504
    7. '()):
' → logprob: -11.648728370666504
    8. '()>' → logprob: -12.148728370666504
    9. ':
' → logprob: -12.273728370666504
    10. '():

' → logprob: -12.273728370666504

Token 3250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017972571775317192
    2. 'while' → logprob: -4.267972469329834
    3. ' while' → logprob: -5.892972469329834
    4. '```' → logprob: -7.767972469329834
    5. '	while' → logprob: -8.767972946166992
    6. '    
' → logprob: -8.892972946166992
    7. '
' → logprob: -9.392972946166992
    8. ' line' → logprob: -9.392972946166992
    9. 'line' → logprob: -9.642972946166992
    10. '	line' → logprob: -10.392972946166992

Token 3251: ' input' (ID: 3422)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00041982904076576233
    2. '   ' → logprob: -8.250419616699219
    3. 'import' → logprob: -9.625419616699219
    4. 'line' → logprob: -9.750419616699219
    5. ' while' → logprob: -10.500419616699219
    6. 'try' → logprob: -12.500419616699219
    7. '```' → logprob: -13.500419616699219
    8. 'for' → logprob: -14.000419616699219
    9. '
' → logprob: -14.500419616699219
    10. '    
' → logprob: -16.12541961669922

Token 3252: '_iter' (ID: 27043)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36678779125213623
    2. '_line' → logprob: -1.4917877912521362
    3. '_lines' → logprob: -2.741787910461426
    4. '_data' → logprob: -4.366787910461426
    5. '_' → logprob: -6.491787910461426
    6. '()
' → logprob: -6.741787910461426
    7. '().' → logprob: -7.491787910461426
    8. '_text' → logprob: -7.741787910461426
    9. ' =' → logprob: -8.491787910461426
    10. '_l' → logprob: -8.616787910461426

Token 3253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22551879286766052
    2. ' =' → logprob: -1.600518822669983
    3. '=sys' → logprob: -10.350519180297852
    4. '()' → logprob: -10.600519180297852
    5. '(' → logprob: -10.725519180297852
    6. '_=' → logprob: -11.475519180297852
    7. '=line' → logprob: -12.600519180297852
    8. '＝' → logprob: -13.350519180297852
    9. '=input' → logprob: -13.350519180297852
    10. '_' → logprob: -13.475519180297852

Token 3254: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.4790979027748108
    2. '(iter' → logprob: -0.9790979027748108
    3. ' iter' → logprob: -6.229097843170166
    4. 'map' → logprob: -6.729097843170166
    5. '(sys' → logprob: -6.979097843170166
    6. 'sys' → logprob: -7.729097843170166
    7. '(map' → logprob: -7.729097843170166
    8. '(' → logprob: -10.479098320007324
    9. '_iter' → logprob: -14.354098320007324
    10. '((' → logprob: -15.104098320007324

Token 3255: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0002845768758561462
    2. '(input' → logprob: -8.250284194946289
    3. 'sys' → logprob: -11.875284194946289
    4. '(stdin' → logprob: -12.375284194946289
    5. '(lines' → logprob: -12.500284194946289
    6. '(line' → logprob: -12.750284194946289
    7. '=sys' → logprob: -13.000284194946289
    8. '(lambda' → logprob: -14.000284194946289
    9. '(iter' → logprob: -14.375284194946289
    10. ' sys' → logprob: -14.750284194946289

Token 3256: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.849109119386412e-06
    2. 'stdin' → logprob: -12.250009536743164
    3. '(stdin' → logprob: -13.250009536743164
    4. '().' → logprob: -13.250009536743164
    5. '.readline' → logprob: -13.875009536743164
    6. '.argv' → logprob: -15.750009536743164
    7. '.' → logprob: -16.125009536743164
    8. '.stdout' → logprob: -16.500009536743164
    9. '.readlines' → logprob: -17.000009536743164
    10. ' stdin' → logprob: -17.000009536743164

Token 3257: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5332960486412048
    2. ')' → logprob: -0.9082960486412048
    3. ')
' → logprob: -5.78329610824585
    4. '()' → logprob: -5.90829610824585
    5. '())' → logprob: -6.15829610824585
    6. '(' → logprob: -7.15829610824585
    7. '.readlines' → logprob: -7.53329610824585
    8. '(line' → logprob: -8.658295631408691
    9. '()
' → logprob: -8.908295631408691
    10. '())
' → logprob: -9.408295631408691

Token 3258: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005256305448710918
    2. '()' → logprob: -7.62552547454834
    3. '())' → logprob: -10.62552547454834
    4. '(' → logprob: -12.37552547454834
    5. '()
' → logprob: -13.00052547454834
    6. '('\' → logprob: -13.12552547454834
    7. '()\' → logprob: -13.12552547454834
    8. 'lines' → logprob: -13.75052547454834
    9. 'line' → logprob: -14.12552547454834
    10. '())
' → logprob: -14.87552547454834

Token 3259: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.41297411918640137
    2. 'split' → logprob: -1.1629741191864014
    3. 'lines' → logprob: -3.6629741191864014
    4. 'read' → logprob: -9.41297435760498
    5. '().' → logprob: -11.66297435760498
    6. 'rstrip' → logprob: -12.28797435760498
    7. ')' → logprob: -12.53797435760498
    8. '_lines' → logprob: -12.66297435760498
    9. 'line' → logprob: -13.16297435760498
    10. ' lines' → logprob: -13.78797435760498

Token 3260: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0012688051210716367
    2. '()' → logprob: -6.7512688636779785
    3. '())' → logprob: -9.87626838684082
    4. '('\' → logprob: -10.37626838684082
    5. '()
' → logprob: -11.37626838684082
    6. '()\' → logprob: -13.62626838684082
    7. '(' → logprob: -13.75126838684082
    8. '())
' → logprob: -14.62626838684082
    9. '()[' → logprob: -14.75126838684082
    10. '('' → logprob: -14.87626838684082

Token 3261: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003362966235727072
    2. 'lines' → logprob: -8.000336647033691
    3. '().' → logprob: -14.375336647033691
    4. ' split' → logprob: -16.125335693359375
    5. '(split' → logprob: -16.250335693359375
    6. '()' → logprob: -17.500335693359375
    7. '.split' → logprob: -17.875335693359375
    8. 'strip' → logprob: -17.875335693359375
    9. 'spl' → logprob: -18.625335693359375
    10. 'line' → logprob: -19.000335693359375

Token 3262: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7801159024238586
    2. '())' → logprob: -0.7801159024238586
    3. '('\' → logprob: -2.530115842819214
    4. 'lines' → logprob: -6.405116081237793
    5. '()\' → logprob: -7.030116081237793
    6. '()
' → logprob: -8.030116081237793
    7. '(' → logprob: -8.655116081237793
    8. '("\' → logprob: -8.655116081237793
    9. '()]' → logprob: -8.780116081237793
    10. '()[' → logprob: -9.155116081237793

Token 3263: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01636829413473606
    2. '\n' → logprob: -4.141368389129639
    3. '```' → logprob: -8.89136791229248
    4. 'newline' → logprob: -9.01636791229248
    5. '
' → logprob: -10.51636791229248
    6. ''\' → logprob: -11.14136791229248
    7. ' 
' → logprob: -12.01636791229248
    8. '_n' → logprob: -12.14136791229248
    9. '``' → logprob: -12.51636791229248
    10. ''n' → logprob: -13.39136791229248

Token 3264: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.6942712664604187
    2. ''))
' → logprob: -0.6942712664604187
    3. '))' → logprob: -7.569271087646484
    4. ''))
' → logprob: -8.569271087646484
    5. '))
' → logprob: -8.694271087646484
    6. ')' → logprob: -9.319271087646484
    7. '')' → logprob: -9.444271087646484
    8. ''))

' → logprob: -10.569271087646484
    9. '')):
' → logprob: -10.694271087646484
    10. '   ' → logprob: -11.569271087646484

Token 3265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7252596616744995
    2. 'while' → logprob: -0.7252596616744995
    3. 'for' → logprob: -3.475259780883789
    4. ' while' → logprob: -7.850259780883789
    5. '```' → logprob: -9.225259780883789
    6. 'try' → logprob: -9.475259780883789
    7. ' for' → logprob: -10.350259780883789
    8. 'line' → logprob: -10.850259780883789
    9. '	while' → logprob: -11.600259780883789
    10. '
' → logprob: -11.725259780883789

Token 3266: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.002690628869459033
    2. 'for' → logprob: -6.25269079208374
    3. '   ' → logprob: -7.25269079208374
    4. 'line' → logprob: -10.127690315246582
    5. 'try' → logprob: -11.877690315246582
    6. ' while' → logprob: -12.627690315246582
    7. '```' → logprob: -12.877690315246582
    8. '    
' → logprob: -15.127690315246582
    9. '
' → logprob: -15.877690315246582
    10. 'def' → logprob: -16.3776912689209

Token 3267: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001529501867480576
    2. ' True' → logprob: -6.501529693603516
    3. '(True' → logprob: -10.626529693603516
    4. '
' → logprob: -13.626529693603516
    5. '   ' → logprob: -14.126529693603516
    6. 'true' → logprob: -15.126529693603516
    7. '1' → logprob: -15.251529693603516
    8. ' ' → logprob: -15.626529693603516
    9. '=True' → logprob: -16.626529693603516
    10. '  ' → logprob: -17.001529693603516

Token 3268: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3683894872665405
    2. ':' → logprob: -1.3683894872665405
    3. ':
' → logprob: -2.99338960647583
    4. '   ' → logprob: -6.36838960647583
    5. ',' → logprob: -6.86838960647583
    6. '	' → logprob: -8.868389129638672
    7. '):
' → logprob: -9.368389129638672
    8. '():
' → logprob: -9.493389129638672
    9. '           ' → logprob: -9.868389129638672
    10. '=' → logprob: -9.993389129638672

Token 3269: '       ' (ID: 309)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.4764648973941803
    2. '   ' → logprob: -1.226464867591858
    3. '       ' → logprob: -2.4764649868011475
    4. 'line' → logprob: -6.976464748382568
    5. ' try' → logprob: -7.726464748382568
    6. '	try' → logprob: -8.351465225219727
    7. ' line' → logprob: -10.976465225219727
    8. '	line' → logprob: -11.226465225219727
    9. '           ' → logprob: -12.601465225219727
    10. '	' → logprob: -13.101465225219727

Token 3270: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.3869251310825348
    2. 'line' → logprob: -1.1369251012802124
    3. '   ' → logprob: -10.136924743652344
    4. ' try' → logprob: -12.136924743652344
    5. ' line' → logprob: -12.136924743652344
    6. '       ' → logprob: -12.886924743652344
    7. 'length' → logprob: -15.011924743652344
    8. '	line' → logprob: -15.136924743652344
    9. '           ' → logprob: -15.511924743652344
    10. '	try' → logprob: -16.011924743652344

Token 3271: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04262857511639595
    2. ' line' → logprob: -4.167628765106201
    3. ':' → logprob: -4.792628765106201
    4. 'line' → logprob: -4.917628765106201
    5. '(line' → logprob: -5.667628765106201
    6. ':
' → logprob: -5.917628765106201
    7. '_line' → logprob: -6.542628765106201
    8. '       ' → logprob: -7.292628765106201
    9. '():' → logprob: -7.667628765106201
    10. '#line' → logprob: -8.042628288269043

Token 3272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3208811581134796
    2. 'line' → logprob: -1.3208811283111572
    3. '       ' → logprob: -5.570881366729736
    4. ' line' → logprob: -5.695881366729736
    5. '   ' → logprob: -7.945881366729736
    6. '	line' → logprob: -10.195880889892578
    7. '#line' → logprob: -11.695880889892578
    8. '(line' → logprob: -11.945880889892578
    9. '```' → logprob: -12.320880889892578
    10. '_line' → logprob: -12.695880889892578

Token 3273: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.006857100408524275
    2. 'W' → logprob: -5.256856918334961
    3. 'w' → logprob: -7.006856918334961
    4. '           ' → logprob: -8.131856918334961
    5. 'width' → logprob: -8.506856918334961
    6. 'n' → logprob: -8.881856918334961
    7. 'L' → logprob: -10.881856918334961
    8. 'header' → logprob: -11.006856918334961
    9. ' line' → logprob: -11.381856918334961
    10. '   ' → logprob: -11.381856918334961

Token 3274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0709381252527237
    2. '=' → logprob: -2.6959381103515625
    3. '_tokens' → logprob: -8.195938110351562
    4. '   ' → logprob: -8.570938110351562
    5. 'tokens' → logprob: -9.070938110351562
    6. ':' → logprob: -9.445938110351562
    7. '=line' → logprob: -9.695938110351562
    8. '           ' → logprob: -9.945938110351562
    9. '_token' → logprob: -9.945938110351562
    10. '       ' → logprob: -10.070938110351562

Token 3275: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.038100700825452805
    2. ' next' → logprob: -3.2881007194519043
    3. 'input' → logprob: -9.788100242614746
    4. ' input' → logprob: -12.913100242614746
    5. '(next' → logprob: -14.288100242614746
    6. '	next' → logprob: -17.913101196289062
    7. 'line' → logprob: -17.913101196289062
    8. '.next' → logprob: -18.913101196289062
    9. '[next' → logprob: -19.288101196289062
    10. '
' → logprob: -20.038101196289062

Token 3276: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5760782361030579
    2. 'input' → logprob: -0.8260782361030579
    3. ' input' → logprob: -9.076078414916992
    4. '=input' → logprob: -10.701078414916992
    5. ',input' → logprob: -14.576078414916992
    6. '_input' → logprob: -14.576078414916992
    7. '<input' → logprob: -15.201078414916992
    8. '	input' → logprob: -15.576078414916992
    9. '[input' → logprob: -15.701078414916992
    10. 'line' → logprob: -15.701078414916992

Token 3277: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.04043733328580856
    2. '_line' → logprob: -3.7904372215270996
    3. ')' → logprob: -4.9154372215271
    4. '(input' → logprob: -5.9154372215271
    5. '(line' → logprob: -6.1654372215271
    6. 'line' → logprob: -6.9154372215271
    7. '_token' → logprob: -7.1654372215271
    8. '_iterator' → logprob: -7.4154372215271
    9. ')
' → logprob: -7.9154372215271
    10. '_lines' → logprob: -8.165437698364258

Token 3278: ')
' (ID: 446)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5243209004402161
    2. '().' → logprob: -1.6493208408355713
    3. ').' → logprob: -2.0243208408355713
    4. '()' → logprob: -3.5243208408355713
    5. ')
' → logprob: -3.5243208408355713
    6. ')' → logprob: -4.39932107925415
    7. '       ' → logprob: -5.02432107925415
    8. '           ' → logprob: -5.77432107925415
    9. '.strip' → logprob: -6.89932107925415
    10. '())
' → logprob: -7.64932107925415

Token 3279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08394183218479156
    2. '       ' → logprob: -2.58394193649292
    3. ' if' → logprob: -5.83394193649292
    4. 'if' → logprob: -6.33394193649292
    5. '               ' → logprob: -9.583941459655762
    6. '		' → logprob: -9.583941459655762
    7. ',' → logprob: -10.458941459655762
    8. '.strip' → logprob: -10.708941459655762
    9. '	       ' → logprob: -10.958941459655762
    10. '   ' → logprob: -11.083941459655762

Token 3280: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01798604056239128
    2. ' if' → logprob: -4.642985820770264
    3. '           ' → logprob: -5.517985820770264
    4. 'w' → logprob: -5.642985820770264
    5. 'width' → logprob: -7.642985820770264
    6. 'while' → logprob: -9.892986297607422
    7. 'n' → logprob: -10.142986297607422
    8. 'W' → logprob: -10.392986297607422
    9. '       ' → logprob: -10.767986297607422
    10. ' w' → logprob: -12.017986297607422

Token 3281: ' line' (ID: 2543)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0707588717341423
    2. 'line' → logprob: -3.070758819580078
    3. ' not' → logprob: -3.820758819580078
    4. ' line' → logprob: -11.320758819580078
    5. 'len' → logprob: -13.195758819580078
    6. '   ' → logprob: -13.695758819580078
    7. '           ' → logprob: -14.445758819580078
    8. '#line' → logprob: -14.945758819580078
    9. '(line' → logprob: -15.695758819580078
    10. '       ' → logprob: -15.820758819580078

Token 3282: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.37322285771369934
    2. ' ==' → logprob: -1.748222827911377
    3. '.strip' → logprob: -2.248222827911377
    4. '.' → logprob: -3.498222827911377
    5. '()==' → logprob: -7.498222827911377
    6. '().' → logprob: -7.873222827911377
    7. '       ' → logprob: -8.623223304748535
    8. '.startswith' → logprob: -8.998223304748535
    9. '           ' → logprob: -9.373223304748535
    10. '```' → logprob: -9.873223304748535

Token 3283: ' "' (ID: 392)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.1706721931695938
    2. ''' → logprob: -2.1706721782684326
    3. '""' → logprob: -3.9206721782684326
    4. '"":' → logprob: -4.170672416687012
    5. '"' → logprob: -4.920672416687012
    6. ' '':
' → logprob: -8.920672416687012
    7. '''
' → logprob: -10.170672416687012
    8. ' "":
' → logprob: -10.920672416687012
    9. ''S' → logprob: -11.920672416687012
    10. ''ex' → logprob: -12.170672416687012

Token 3284: '0' (ID: 15)
  Prédit: '":
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.16981612145900726
    2. '""' → logprob: -2.419816017150879
    3. '":' → logprob: -3.544816017150879
    4. '"' → logprob: -3.919816017150879
    5. '''' → logprob: -4.669816017150879
    6. '0' → logprob: -5.544816017150879
    7. '"":' → logprob: -6.169816017150879
    8. ''' → logprob: -6.919816017150879
    9. '\n' → logprob: -7.669816017150879
    10. '"):
' → logprob: -7.794816017150879

Token 3285: ' ' (ID: 220)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.2668941915035248
    2. '":
' → logprob: -2.1418941020965576
    3. '"' → logprob: -2.3918941020965576
    4. '\n' → logprob: -4.641894340515137
    5. ' "' → logprob: -5.391894340515137
    6. '"):
' → logprob: -5.766894340515137
    7. '":
' → logprob: -6.391894340515137
    8. '<|end|>' → logprob: -6.641894340515137
    9. '.' → logprob: -6.766894340515137
    10. ' ' → logprob: -7.141894340515137

Token 3286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013271050527691841
    2. '"' → logprob: -5.763270854949951
    3. '"):
' → logprob: -5.763270854949951
    4. ' ' → logprob: -6.013270854949951
    5. '":
' → logprob: -6.013270854949951
    6. '":' → logprob: -6.638270854949951
    7. '.' → logprob: -7.888270854949951
    8. '\n' → logprob: -9.63827133178711
    9. '":
' → logprob: -10.01327133178711
    10. '"):' → logprob: -10.01327133178711

Token 3287: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.2808923125267029
    2. '":' → logprob: -1.6558923721313477
    3. '0' → logprob: -4.030892372131348
    4. '":
' → logprob: -4.030892372131348
    5. '\n' → logprob: -4.655892372131348
    6. '"' → logprob: -4.905892372131348
    7. ' ' → logprob: -7.655892372131348
    8. '.' → logprob: -8.155892372131348
    9. '"):
' → logprob: -8.155892372131348
    10. ' "' → logprob: -9.155892372131348

Token 3288: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017540324479341507
    2. '\n' → logprob: -4.517540454864502
    3. '           ' → logprob: -5.267540454864502
    4. '
' → logprob: -7.517540454864502
    5. ':
' → logprob: -7.767540454864502
    6. ':' → logprob: -9.142539978027344
    7. '\t' → logprob: -10.267539978027344
    8. '\' → logprob: -10.517539978027344
    9. ' continue' → logprob: -10.517539978027344
    10. '                
' → logprob: -11.142539978027344

Token 3289: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.00867697037756443
    2. '               ' → logprob: -5.258677005767822
    3. 'return' → logprob: -6.008677005767822
    4. ' break' → logprob: -7.008677005767822
    5. '	break' → logprob: -9.758676528930664
    6. '           ' → logprob: -11.758676528930664
    7. '                   ' → logprob: -11.883676528930664
    8. '_break' → logprob: -13.633676528930664
    9. '
' → logprob: -14.133676528930664
    10. ' return' → logprob: -14.383676528930664

Token 3290: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18532712757587433
    2. '
' → logprob: -1.810327172279358
    3. '            
' → logprob: -5.310327053070068
    4. '<|end|>' → logprob: -8.935327529907227
    5. '  
' → logprob: -9.310327529907227
    6. '       ' → logprob: -9.435327529907227
    7. '        
' → logprob: -9.560327529907227
    8. ' 
' → logprob: -10.185327529907227
    9. '		' → logprob: -10.560327529907227
    10. '    
' → logprob: -10.560327529907227

Token 3291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019784762989729643
    2. '       ' → logprob: -6.376978397369385
    3. '               ' → logprob: -8.876978874206543
    4. ':
' → logprob: -10.501978874206543
    5. '		' → logprob: -10.876978874206543
    6. '            
' → logprob: -10.876978874206543
    7. '\n' → logprob: -11.876978874206543
    8. '
' → logprob: -12.001978874206543
    9. '```' → logprob: -12.001978874206543
    10. '{' → logprob: -12.251978874206543

Token 3292: ' W' (ID: 486)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.5852822065353394
    2. 'w' → logprob: -1.0852822065353394
    3. 'W' (adapté à ' W') → logprob: -2.335282325744629
    4. '           ' → logprob: -5.460282325744629
    5. ' width' → logprob: -5.960282325744629
    6. ' W' → logprob: -7.210282325744629
    7. 'n' → logprob: -8.085282325744629
    8. ' w' → logprob: -8.335282325744629
    9. 'parts' → logprob: -8.460282325744629
    10. ' parts' → logprob: -10.835282325744629

Token 3293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013440960901789367
    2. ' ,' → logprob: -9.500134468078613
    3. '_,' → logprob: -11.250134468078613
    4. ',w' → logprob: -11.250134468078613
    5. '=' → logprob: -11.875134468078613
    6. ',
' → logprob: -12.250134468078613
    7. ',W' → logprob: -12.375134468078613
    8. ',num' → logprob: -13.375134468078613
    9. ' =' → logprob: -13.375134468078613
    10. ',s' → logprob: -13.500134468078613

Token 3294: ' N' (ID: 478)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6334759593009949
    2. ' H' → logprob: -0.7584759593009949
    3. 'h' → logprob: -7.6334757804870605
    4. ' h' → logprob: -8.133476257324219
    5. ' y' → logprob: -10.258476257324219
    6. 'y' → logprob: -10.508476257324219
    7. ' ' → logprob: -11.633476257324219
    8. ' 
' → logprob: -12.008476257324219
    9. ' =' → logprob: -12.383476257324219
    10. 'L' → logprob: -13.383476257324219

Token 3295: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13368257880210876
    2. ' =' → logprob: -2.1336824893951416
    3. ',' → logprob: -5.008682727813721
    4. '=line' → logprob: -11.008682250976562
    5. ' ' → logprob: -11.758682250976562
    6. ' ,' → logprob: -12.383682250976562
    7. '   ' → logprob: -12.883682250976562
    8. '=
' → logprob: -12.883682250976562
    9. '	' → logprob: -13.133682250976562
    10. ')' → logprob: -13.133682250976562

Token 3296: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.051057904958724976
    2. ' map' → logprob: -3.051057815551758
    3. 'line' → logprob: -6.051057815551758
    4. ' line' → logprob: -9.426057815551758
    5. '[line' → logprob: -11.426057815551758
    6. '(map' → logprob: -11.551057815551758
    7. '[' → logprob: -11.801057815551758
    8. '(line' → logprob: -13.176057815551758
    9. 'list' → logprob: -13.801057815551758
    10. ' [' → logprob: -15.301057815551758

Token 3297: '(int' (ID: 2742)
  Prédit: '(float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.0001818489981815219
    2. '(int' → logprob: -8.750182151794434
    3. 'float' → logprob: -10.750182151794434
    4. '(str' → logprob: -13.375182151794434
    5. '(' → logprob: -15.625182151794434
    6. '(lambda' → logprob: -16.250181198120117
    7. '=float' → logprob: -16.375181198120117
    8. '(
' → logprob: -18.250181198120117
    9. ',float' → logprob: -18.250181198120117
    10. '	float' → logprob: -18.625181198120117

Token 3298: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0948960930109024
    2. 'line' → logprob: -2.969896078109741
    3. ',' → logprob: -3.344896078109741
    4. ',line' → logprob: -6.09489631652832
    5. ')' → logprob: -6.71989631652832
    6. '(' → logprob: -8.84489631652832
    7. '[line' → logprob: -8.96989631652832
    8. '=line' → logprob: -8.96989631652832
    9. ')(' → logprob: -10.71989631652832
    10. '#line' → logprob: -10.84489631652832

Token 3299: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -9.496052371105179e-05
    2. 'map' → logprob: -9.50009536743164
    3. '(line' → logprob: -11.00009536743164
    4. ' line' → logprob: -12.75009536743164
    5. '[line' → logprob: -14.87509536743164
    6. '=line' → logprob: -16.75009536743164
    7. '#line' → logprob: -18.25009536743164
    8. '	line' → logprob: -18.87509536743164
    9. '
' → logprob: -19.12509536743164
    10. ',line' → logprob: -20.00009536743164

Token 3300: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.580515444278717
    2. '.split' → logprob: -0.830515444278717
    3. '.' → logprob: -6.205515384674072
    4. '.strip' → logprob: -6.330515384674072
    5. ' .' → logprob: -7.455515384674072
    6. '.readline' → logprob: -8.83051586151123
    7. 'split' → logprob: -11.20551586151123
    8. '.rstrip' → logprob: -12.20551586151123
    9. '(split' → logprob: -13.33051586151123
    10. '.Split' → logprob: -13.33051586151123

Token 3301: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0029037778731435537
    2. '())
' → logprob: -6.002903938293457
    3. '('' → logprob: -8.377903938293457
    4. '()' → logprob: -8.877903938293457
    5. '(' → logprob: -10.002903938293457
    6. ')' → logprob: -11.627903938293457
    7. '()[' → logprob: -13.877903938293457
    8. '()
' → logprob: -14.752903938293457
    9. '())

' → logprob: -14.752903938293457
    10. '())
' → logprob: -14.752903938293457

Token 3302: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010291798040270805
    2. '       ' → logprob: -4.760291576385498
    3. '	       ' → logprob: -7.135291576385498
    4. '		' → logprob: -7.885291576385498
    5. '<|end|>' → logprob: -9.385292053222656
    6. '```' → logprob: -9.510292053222656
    7. ',' → logprob: -9.635292053222656
    8. '	   ' → logprob: -9.885292053222656
    9. '		   ' → logprob: -10.635292053222656
    10. '	' → logprob: -11.135292053222656

Token 3303: ' pillars' (ID: 105506)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pill' → logprob: -0.27091169357299805
    2. 'width' → logprob: -2.020911693572998
    3. 'pol' → logprob: -2.895911693572998
    4. '           ' → logprob: -3.395911693572998
    5. 'pillar' → logprob: -5.520911693572998
    6. 'yield' → logprob: -5.770911693572998
    7. 'points' → logprob: -6.020911693572998
    8. 'if' → logprob: -6.395911693572998
    9. 'p' → logprob: -6.895911693572998
    10. 'for' → logprob: -6.895911693572998

Token 3304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5780025124549866
    2. '=' → logprob: -0.8280025124549866
    3. '=[]' → logprob: -6.703002452850342
    4. ':' → logprob: -7.828002452850342
    5. '=[]
' → logprob: -8.5780029296875
    6. '           ' → logprob: -9.4530029296875
    7. '.append' → logprob: -9.9530029296875
    8. '   ' → logprob: -10.4530029296875
    9. ',' → logprob: -10.8280029296875
    10. '       ' → logprob: -11.8280029296875

Token 3305: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.0007114782347343862
    2. '[]' → logprob: -7.250711441040039
    3. ' []
' → logprob: -13.500711441040039
    4. '[]

' → logprob: -16.25071144104004
    5. '[' → logprob: -16.50071144104004
    6. '[
' → logprob: -17.50071144104004
    7. '[])
' → logprob: -19.37571144104004
    8. ' []' → logprob: -21.00071144104004
    9. '[],
' → logprob: -21.62571144104004
    10. '[];
' → logprob: -21.62571144104004

Token 3306: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001894841087050736
    2. 'for' → logprob: -6.501894950866699
    3. ' for' → logprob: -8.1268949508667
    4. '		' → logprob: -10.3768949508667
    5. '<|end|>' → logprob: -10.8768949508667
    6. '	       ' → logprob: -11.0018949508667
    7. '       ' → logprob: -11.7518949508667
    8. '	   ' → logprob: -12.6268949508667
    9. '   ' → logprob: -12.7518949508667
    10. '               ' → logprob: -13.2518949508667

Token 3307: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01123656053096056
    2. '           ' → logprob: -4.511236667633057
    3. ' for' → logprob: -9.011236190795898
    4. 'num' → logprob: -10.886236190795898
    5. 'while' → logprob: -11.011236190795898
    6. 'count' → logprob: -11.636236190795898
    7. 'if' → logprob: -11.886236190795898
    8. 'line' → logprob: -13.011236190795898
    9. 'length' → logprob: -13.011236190795898
    10. 'points' → logprob: -13.011236190795898

Token 3308: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2664456789934775e-06
    2. ' _' → logprob: -14.250000953674316
    3. '_i' → logprob: -15.250000953674316
    4. '_=' → logprob: -15.250000953674316
    5. '_in' → logprob: -17.375001907348633
    6. '_
' → logprob: -18.000001907348633
    7. '_N' → logprob: -18.125001907348633
    8. '_range' → logprob: -18.375001907348633
    9. '_line' → logprob: -19.000001907348633
    10. '_n' → logprob: -19.125001907348633

Token 3309: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005266957450658083
    2. 'in' → logprob: -5.255267143249512
    3. 'i' → logprob: -11.005267143249512
    4. '_' → logprob: -12.005267143249512
    5. '
' → logprob: -12.755267143249512
    6. ' ' → logprob: -13.380267143249512
    7. 'range' → logprob: -13.380267143249512
    8. '0' → logprob: -13.630267143249512
    9. ' _' → logprob: -14.130267143249512
    10. '  ' → logprob: -14.255267143249512

Token 3310: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '_range' → logprob: -19.500003814697266
    4. '
' → logprob: -19.625003814697266
    5. '_' → logprob: -20.125003814697266
    6. '	range' → logprob: -20.875003814697266
    7. '(range' → logprob: -21.250003814697266
    8. '[' → logprob: -21.375003814697266
    9. '   ' → logprob: -21.750003814697266
    10. 'input' → logprob: -21.750003814697266

Token 3311: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05348598584532738
    2. '(N' → logprob: -3.303485870361328
    3. 'int' → logprob: -5.053485870361328
    4. '(int' → logprob: -5.303485870361328
    5. ' N' → logprob: -6.678485870361328
    6. '(' → logprob: -7.303485870361328
    7. 'range' → logprob: -7.428485870361328
    8. '   ' → logprob: -7.928485870361328
    9. '           ' → logprob: -8.053485870361328
    10. ' (' → logprob: -8.553485870361328

Token 3312: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2377837747335434
    2. ':
' → logprob: -1.9877837896347046
    3. '               ' → logprob: -2.987783670425415
    4. '           ' → logprob: -4.487783908843994
    5. ':' → logprob: -4.862783908843994
    6. '):' → logprob: -5.737783908843994
    7. ',' → logprob: -6.862783908843994
    8. '():
' → logprob: -8.362783432006836
    9. '                   ' → logprob: -9.362783432006836
    10. '       ' → logprob: -9.487783432006836

Token 3313: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019769631326198578
    2. 'line' → logprob: -4.269769668579102
    3. '#line' → logprob: -5.644769668579102
    4. '	           ' → logprob: -7.144769668579102
    5. ' line' → logprob: -8.144769668579102
    6. '```' → logprob: -8.144769668579102
    7. '	line' → logprob: -8.644769668579102
    8. '           ' → logprob: -9.019769668579102
    9. '[line' → logprob: -9.894769668579102
    10. 'lines' → logprob: -10.394769668579102

Token 3314: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.5521019697189331
    2. 'line' → logprob: -1.677101969718933
    3. 'm' → logprob: -2.1771020889282227
    4. 'poly' → logprob: -3.5521020889282227
    5. 'count' → logprob: -3.8021020889282227
    6. 'k' → logprob: -4.177102088928223
    7. 'coords' → logprob: -4.927102088928223
    8. '           ' → logprob: -4.927102088928223
    9. 'num' → logprob: -5.177102088928223
    10. 'K' → logprob: -5.802102088928223

Token 3315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3152945637702942
    2. ' =' → logprob: -1.3152945041656494
    3. '=int' → logprob: -6.4402947425842285
    4. '=line' → logprob: -8.06529426574707
    5. '_line' → logprob: -9.94029426574707
    6. ',' → logprob: -10.06529426574707
    7. '           ' → logprob: -12.19029426574707
    8. 'line' → logprob: -12.44029426574707
    9. ' line' → logprob: -12.69029426574707
    10. ' ' → logprob: -13.44029426574707

Token 3316: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.941850526549388e-06
    2. ' int' → logprob: -11.750007629394531
    3. '[int' → logprob: -21.12500762939453
    4. '
' → logprob: -21.37500762939453
    5. '	int' → logprob: -21.50000762939453
    6. '(int' → logprob: -21.87500762939453
    7. '<int' → logprob: -22.00000762939453
    8. '=int' → logprob: -22.12500762939453
    9. '   ' → logprob: -23.50000762939453
    10. ':int' → logprob: -24.12500762939453

Token 3317: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0005592276575043797
    2. 'next' → logprob: -7.500559329986572
    3. '(line' → logprob: -12.000558853149414
    4. ' next' → logprob: -17.500558853149414
    5. '(input' → logprob: -17.500558853149414
    6. '[next' → logprob: -18.250558853149414
    7. 'line' → logprob: -18.625558853149414
    8. '(' → logprob: -19.250558853149414
    9. '	next' → logprob: -19.875558853149414
    10. '.next' → logprob: -20.375558853149414

Token 3318: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931893825531006
    2. '(input' → logprob: -0.6931893825531006
    3. '(
' → logprob: -11.56818962097168
    4. '=input' → logprob: -11.94318962097168
    5. ' input' → logprob: -12.06818962097168
    6. '
' → logprob: -12.31818962097168
    7. '(' → logprob: -13.31818962097168
    8. 'next' → logprob: -13.31818962097168
    9. ',input' → logprob: -13.31818962097168
    10. '_input' → logprob: -13.44318962097168

Token 3319: '_iter' (ID: 27043)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2522204518318176
    2. '(input' → logprob: -1.5022203922271729
    3. '_input' → logprob: -8.627220153808594
    4. '=input' → logprob: -10.002220153808594
    5. ' input' → logprob: -10.377220153808594
    6. '_iter' → logprob: -11.127220153808594
    7. '[input' → logprob: -11.877220153808594
    8. '<input' → logprob: -12.377220153808594
    9. '	input' → logprob: -12.752220153808594
    10. '(
' → logprob: -13.377220153808594

Token 3320: '))
' (ID: 2210)
  Prédit: '())
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.02370322495698929
    2. ')
' → logprob: -4.023703098297119
    3. '())' → logprob: -5.398703098297119
    4. ')' → logprob: -7.023703098297119
    5. '().' → logprob: -9.898703575134277
    6. '()' → logprob: -10.648703575134277
    7. '()
' → logprob: -10.773703575134277
    8. '())
' → logprob: -10.898703575134277
    9. '               ' → logprob: -11.898703575134277
    10. ' ())
' → logprob: -13.523703575134277

Token 3321: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010567734017968178
    2. '           ' → logprob: -4.635567665100098
    3. 'for' → logprob: -7.260567665100098
    4. '                   ' → logprob: -10.135567665100098
    5. '```' → logprob: -11.260567665100098
    6. '	           ' → logprob: -11.385567665100098
    7. ' for' → logprob: -11.510567665100098
    8. '       ' → logprob: -11.885567665100098
    9. '   ' → logprob: -12.260567665100098
    10. 'points' → logprob: -12.510567665100098

Token 3322: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' (adapté à ' vertices') → logprob: -0.04117480292916298
    2. 'points' → logprob: -3.54117488861084
    3. 'verts' → logprob: -4.54117488861084
    4. 'pts' → logprob: -7.91617488861084
    5. 'coords' → logprob: -8.79117488861084
    6. '               ' → logprob: -9.29117488861084
    7. ' vertices' → logprob: -10.41617488861084
    8. 'polygon' → logprob: -10.66617488861084
    9. '                   ' → logprob: -10.91617488861084
    10. 'poly' → logprob: -12.04117488861084

Token 3323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4760341942310333
    2. '=' → logprob: -0.9760341644287109
    3. '=[]' → logprob: -6.476034164428711
    4. '=[]
' → logprob: -7.851034164428711
    5. '           ' → logprob: -12.476034164428711
    6. '               ' → logprob: -12.726034164428711
    7. ':' → logprob: -12.851034164428711
    8. '=
' → logprob: -12.976034164428711
    9. '                   ' → logprob: -13.101034164428711
    10. '.append' → logprob: -13.101034164428711

Token 3324: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.20526030659675598
    2. '[' → logprob: -1.7052602767944336
    3. '[]' → logprob: -5.705260276794434
    4. '[
' → logprob: -7.705260276794434
    5. '[int' → logprob: -10.705260276794434
    6. '[class' → logprob: -11.455260276794434
    7. '[str' → logprob: -11.830260276794434
    8. '[p' → logprob: -12.830260276794434
    9. '[list' → logprob: -13.330260276794434
    10. '[self' → logprob: -13.455260276794434

Token 3325: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011542649008333683
    2. 'for' → logprob: -5.136542797088623
    3. ' for' → logprob: -5.386542797088623
    4. '                   ' → logprob: -7.011542797088623
    5. '	           ' → logprob: -10.386542320251465
    6. '           ' → logprob: -10.386542320251465
    7. '                       ' → logprob: -11.636542320251465
    8. '			' → logprob: -11.761542320251465
    9. '		           ' → logprob: -11.886542320251465
    10. 'next' → logprob: -12.261542320251465

Token 3326: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00026896485360339284
    2. ' for' → logprob: -8.500268936157227
    3. '                   ' → logprob: -10.000268936157227
    4. '               ' → logprob: -11.000268936157227
    5. 'x' → logprob: -13.125268936157227
    6. 'while' → logprob: -14.625268936157227
    7. '	for' → logprob: -14.625268936157227
    8. '           ' → logprob: -15.125268936157227
    9. 'line' → logprob: -15.875268936157227
    10. '   ' → logprob: -17.875268936157227

Token 3327: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00019853383128065616
    2. '__' → logprob: -9.250198364257812
    3. '_in' → logprob: -10.250198364257812
    4. '_i' → logprob: -10.500198364257812
    5. '_
' → logprob: -10.875198364257812
    6. ' _' → logprob: -12.125198364257812
    7. '_j' → logprob: -12.125198364257812
    8. '
' → logprob: -12.375198364257812
    9. '___' → logprob: -13.000198364257812
    10. '_m' → logprob: -14.250198364257812

Token 3328: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9829035997390747
    2. '_' → logprob: -1.1079035997390747
    3. ' in' → logprob: -1.2329035997390747
    4. '__' → logprob: -6.232903480529785
    5. '___' → logprob: -6.357903480529785
    6. '_in' → logprob: -9.107903480529785
    7. '   ' → logprob: -9.482903480529785
    8. ' _' → logprob: -9.732903480529785
    9. ' ' → logprob: -9.857903480529785
    10. 'i' → logprob: -10.232903480529785

Token 3329: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.727905979962088e-05
    2. ' range' → logprob: -10.12504768371582
    3. '_range' → logprob: -12.12504768371582
    4. '_' → logprob: -13.87504768371582
    5. '
' → logprob: -14.50004768371582
    6. '	range' → logprob: -15.75004768371582
    7. '(range' → logprob: -16.37504768371582
    8. 'rang' → logprob: -17.62504768371582
    9. '[' → logprob: -17.75004768371582
    10. 'ra' → logprob: -17.75004768371582

Token 3330: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0012127334484830499
    2. 'int' → logprob: -6.7512125968933105
    3. '(M' → logprob: -11.001213073730469
    4. ' M' → logprob: -11.251213073730469
    5. '(int' → logprob: -11.751213073730469
    6. '   ' → logprob: -13.251213073730469
    7. '               ' → logprob: -13.751213073730469
    8. '_M' → logprob: -14.126213073730469
    9. '
' → logprob: -14.876213073730469
    10. ' int' → logprob: -15.501213073730469

Token 3331: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4093945026397705
    2. '                   ' → logprob: -1.2843945026397705
    3. ':
' → logprob: -3.0343945026397705
    4. '():
' → logprob: -5.284394264221191
    5. '               ' → logprob: -5.534394264221191
    6. ':' → logprob: -7.034394264221191
    7. '):' → logprob: -7.659394264221191
    8. '                       ' → logprob: -8.409394264221191
    9. '           ' → logprob: -9.409394264221191
    10. ',' → logprob: -9.784394264221191

Token 3332: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014385029673576355
    2. 'line' → logprob: -4.389385223388672
    3. ' line' → logprob: -6.514385223388672
    4. '#line' → logprob: -9.389385223388672
    5. '(line' → logprob: -9.764385223388672
    6. 'token' → logprob: -10.139385223388672
    7. '   ' → logprob: -10.639385223388672
    8. '                       ' → logprob: -10.889385223388672
    9. '	line' → logprob: -11.014385223388672
    10. '		           ' → logprob: -11.264385223388672

Token 3333: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0036258429754525423
    2. 'xy' → logprob: -6.628625869750977
    3. 'coords' → logprob: -6.878625869750977
    4. 'xyz' → logprob: -7.503625869750977
    5. '                       ' → logprob: -8.128625869750977
    6. '                   ' → logprob: -8.503625869750977
    7. 'line' → logprob: -9.378625869750977
    8. 'coord' → logprob: -10.503625869750977
    9. 'parts' → logprob: -11.003625869750977
    10. ' x' → logprob: -11.003625869750977

Token 3334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028629880398511887
    2. ',y' → logprob: -3.653629779815674
    3. ' ,' → logprob: -6.528629779815674
    4. 'y' → logprob: -7.903629779815674
    5. '_str' → logprob: -8.028630256652832
    6. '_,' → logprob: -9.278630256652832
    7. ' y' → logprob: -10.403630256652832
    8. ',line' → logprob: -11.403630256652832
    9. 'str' → logprob: -12.028630256652832
    10. '=' → logprob: -12.528630256652832

Token 3335: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.836499985889532e-05
    2. ' y' → logprob: -9.7500581741333
    3. ',y' → logprob: -18.250059127807617
    4. '	y' → logprob: -18.625059127807617
    5. '                   ' → logprob: -19.625059127807617
    6. 'float' → logprob: -19.750059127807617
    7. '=' → logprob: -20.000059127807617
    8. ')y' → logprob: -20.000059127807617
    9. '_y' → logprob: -20.375059127807617
    10. '=y' → logprob: -20.625059127807617

Token 3336: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25200071930885315
    2. ' =' → logprob: -1.5020006895065308
    3. '=line' → logprob: -10.25200080871582
    4. ',' → logprob: -10.75200080871582
    5. '                   ' → logprob: -12.00200080871582
    6. '=
' → logprob: -12.37700080871582
    7. '=float' → logprob: -14.37700080871582
    8. ' ' → logprob: -15.12700080871582
    9. '=_' → logprob: -15.12700080871582
    10. '                       ' → logprob: -15.12700080871582

Token 3337: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.1472419600977446e-06
    2. ' map' → logprob: -13.750000953674316
    3. '	map' → logprob: -19.875001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '(map' → logprob: -20.250001907348633
    6. '
' → logprob: -21.125001907348633
    7. '.map' → logprob: -22.250001907348633
    8. 'next' → logprob: -22.375001907348633
    9. 'list' → logprob: -23.000001907348633
    10. '[' → logprob: -23.625001907348633

Token 3338: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.0031847211066633463
    2. 'float' → logprob: -5.753184795379639
    3. '=float' → logprob: -12.12818431854248
    4. '(int' → logprob: -14.62818431854248
    5. ',float' → logprob: -15.00318431854248
    6. '	float' → logprob: -15.25318431854248
    7. '```' → logprob: -15.87818431854248
    8. ' float' → logprob: -16.128185272216797
    9. '<float' → logprob: -16.503185272216797
    10. 'flo' → logprob: -16.503185272216797

Token 3339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001642334507778287
    2. '                   ' → logprob: -7.251642227172852
    3. ',next' → logprob: -7.626642227172852
    4. '(next' → logprob: -8.626642227172852
    5. ',x' → logprob: -9.251642227172852
    6. '(),' → logprob: -9.751642227172852
    7. ' ,' → logprob: -10.251642227172852
    8. ',line' → logprob: -11.001642227172852
    9. '(' → logprob: -11.501642227172852
    10. ',__' → logprob: -11.626642227172852

Token 3340: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -6.265633419388905e-05
    2. ' next' → logprob: -10.000062942504883
    3. '(next' → logprob: -11.000062942504883
    4. '[next' → logprob: -15.125062942504883
    5. 'line' → logprob: -16.375062942504883
    6. '	next' → logprob: -18.000062942504883
    7. '_next' → logprob: -18.000062942504883
    8. '                   ' → logprob: -18.125062942504883
    9. '
' → logprob: -18.750062942504883
    10. ',next' → logprob: -19.125062942504883

Token 3341: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.47409600019454956
    2. 'input' → logprob: -0.9740960001945496
    3. ' input' → logprob: -11.724096298217773
    4. '_input' → logprob: -12.099096298217773
    5. '=input' → logprob: -12.849096298217773
    6. '(
' → logprob: -14.349096298217773
    7. '[input' → logprob: -14.349096298217773
    8. '	input' → logprob: -14.474096298217773
    9. ',input' → logprob: -14.974096298217773
    10. '<input' → logprob: -15.099096298217773

Token 3342: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.07779094576835632
    2. '(input' → logprob: -3.0777909755706787
    3. 'input' → logprob: -3.5777909755706787
    4. '_input' → logprob: -7.9527907371521
    5. 'iter' → logprob: -7.9527907371521
    6. '(iter' → logprob: -9.577791213989258
    7. 'put' → logprob: -10.827791213989258
    8. '=input' → logprob: -10.827791213989258
    9. ' input' → logprob: -11.702791213989258
    10. '<input' → logprob: -12.202791213989258

Token 3343: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.707997428951785e-05
    2. ')' → logprob: -10.625077247619629
    3. '                   ' → logprob: -10.875077247619629
    4. ').' → logprob: -11.500077247619629
    5. '.split' → logprob: -11.875077247619629
    6. '.strip' → logprob: -12.125077247619629
    7. '               ' → logprob: -12.500077247619629
    8. '                       ' → logprob: -12.625077247619629
    9. '           ' → logprob: -14.000077247619629
    10. ')
' → logprob: -14.125077247619629

Token 3344: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2520080506801605
    2. 'strip' → logprob: -1.502008080482483
    3. '().' → logprob: -9.752008438110352
    4. ' strip' → logprob: -11.627008438110352
    5. ' split' → logprob: -11.877008438110352
    6. 'rstrip' → logprob: -13.127008438110352
    7. '.split' → logprob: -13.877008438110352
    8. '(split' → logprob: -13.877008438110352
    9. '.strip' → logprob: -14.377008438110352
    10. '(strip' → logprob: -14.877008438110352

Token 3345: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.023272735998034477
    2. '())' → logprob: -3.773272752761841
    3. ')
' → logprob: -11.273272514343262
    4. '()' → logprob: -11.648272514343262
    5. '())
' → logprob: -13.023272514343262
    6. ')' → logprob: -13.523272514343262
    7. '('' → logprob: -14.523272514343262
    8. '(' → logprob: -14.523272514343262
    9. '()
' → logprob: -14.773272514343262
    10. '()))
' → logprob: -15.023272514343262

Token 3346: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00012213163427077234
    2. '               ' → logprob: -9.7501220703125
    3. '                       ' → logprob: -9.8751220703125
    4. '                  ' → logprob: -12.5001220703125
    5. '```' → logprob: -13.1251220703125
    6. '           ' → logprob: -13.6251220703125
    7. '                           ' → logprob: -13.8751220703125
    8. '		           ' → logprob: -13.8751220703125
    9. '	               ' → logprob: -14.2501220703125
    10. '<|end|>' → logprob: -14.6251220703125

Token 3347: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' (adapté à ' vertices') → logprob: -0.021714918315410614
    2. '                   ' → logprob: -4.021714687347412
    3. ' vertices' → logprob: -5.646714687347412
    4. '(vertices' → logprob: -11.02171516418457
    5. 'points' → logprob: -12.14671516418457
    6. '               ' → logprob: -12.52171516418457
    7. '           ' → logprob: -13.77171516418457
    8. '                       ' → logprob: -14.27171516418457
    9. '.vertices' → logprob: -14.52171516418457
    10. '_vertices' → logprob: -14.64671516418457

Token 3348: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000929091009311378
    2. '.' → logprob: -7.00092887878418
    3. ' .' → logprob: -11.87592887878418
    4. 'append' → logprob: -12.25092887878418
    5. ').' → logprob: -13.25092887878418
    6. '                   ' → logprob: -13.25092887878418
    7. '.app' → logprob: -13.75092887878418
    8. '               ' → logprob: -15.87592887878418
    9. '].' → logprob: -16.00092887878418
    10. '                       ' → logprob: -16.25092887878418

Token 3349: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.5759447813034058
    2. 'Point' → logprob: -0.8259447813034058
    3. ' Point' → logprob: -12.325944900512695
    4. '	Point' → logprob: -14.075944900512695
    5. '.Point' → logprob: -16.825944900512695
    6. '                   ' → logprob: -17.575944900512695
    7. '_Point' → logprob: -18.325944900512695
    8. '               ' → logprob: -19.200944900512695
    9. '<Point' → logprob: -19.325944900512695
    10. '_point' → logprob: -19.325944900512695

Token 3350: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006211769068613648
    2. '(' → logprob: -7.500621318817139
    3. 'x' → logprob: -10.00062084197998
    4. '(
' → logprob: -10.75062084197998
    5. ')' → logprob: -14.25062084197998
    6. ' (' → logprob: -15.00062084197998
    7. ')(' → logprob: -15.75062084197998
    8. '((' → logprob: -16.125621795654297
    9. ')x' → logprob: -16.375621795654297
    10. '(float' → logprob: -16.750621795654297

Token 3351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008276138687506318
    2. ',y' → logprob: -7.125827789306641
    3. ',
' → logprob: -11.37582778930664
    4. ' ,' → logprob: -11.50082778930664
    5. '                   ' → logprob: -15.12582778930664
    6. ',x' → logprob: -15.25082778930664
    7. '                       ' → logprob: -16.25082778930664
    8. ',float' → logprob: -16.25082778930664
    9. ',user' → logprob: -16.50082778930664
    10. ',p' → logprob: -16.62582778930664

Token 3352: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.627176768844947e-05
    2. ' y' → logprob: -9.250096321105957
    3. '	y' → logprob: -17.25009536743164
    4. '                   ' → logprob: -18.37509536743164
    5. '
' → logprob: -19.87509536743164
    6. '                       ' → logprob: -20.12509536743164
    7. '   ' → logprob: -20.62509536743164
    8. ')y' → logprob: -21.12509536743164
    9. ' ' → logprob: -21.25009536743164
    10. '                  ' → logprob: -21.37509536743164

Token 3353: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.4172775447368622
    2. '))' → logprob: -1.2922775745391846
    3. '                   ' → logprob: -2.7922775745391846
    4. '               ' → logprob: -6.2922773361206055
    5. ')' → logprob: -6.4172773361206055
    6. '                       ' → logprob: -6.7922773361206055
    7. ',' → logprob: -8.417277336120605
    8. ')
' → logprob: -8.792277336120605
    9. '           ' → logprob: -9.167277336120605
    10. '))
' → logprob: -10.042277336120605

Token 3354: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009597408585250378
    2. '           ' → logprob: -4.759597301483154
    3. '       ' → logprob: -7.384597301483154
    4. '<|end|>' → logprob: -8.134597778320312
    5. 'return' → logprob: -11.134597778320312
    6. ')' → logprob: -11.134597778320312
    7. '```' → logprob: -11.759597778320312
    8. '<|end|>' → logprob: -12.384597778320312
    9. '              ' → logprob: -12.634597778320312
    10. '
' → logprob: -12.634597778320312

Token 3355: ' pillars' (ID: 105506)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pill' → logprob: -0.0232070405036211
    2. '           ' → logprob: -4.148207187652588
    3. 'pillar' → logprob: -5.648207187652588
    4. 'pol' → logprob: -6.648207187652588
    5. ' pillars' → logprob: -7.148207187652588
    6. '
' → logprob: -7.648207187652588
    7. 'p' → logprob: -8.02320671081543
    8. 'pil' → logprob: -8.27320671081543
    9. 'polygon' → logprob: -8.89820671081543
    10. '       ' → logprob: -9.39820671081543

Token 3356: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0020216628909111023
    2. '.' → logprob: -6.252021789550781
    3. '               ' → logprob: -10.627021789550781
    4. '           ' → logprob: -10.877021789550781
    5. '.
' → logprob: -11.002021789550781
    6. ').' → logprob: -12.377021789550781
    7. '.p' → logprob: -12.377021789550781
    8. '.pop' → logprob: -12.752021789550781
    9. ' .' → logprob: -12.877021789550781
    10. 'append' → logprob: -13.002021789550781

Token 3357: '(' (ID: 7)
  Prédit: 'Polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Polygon' → logprob: -0.0016679229447618127
    2. '(' → logprob: -6.5016679763793945
    3. ' Polygon' → logprob: -8.751667976379395
    4. 'Poly' → logprob: -12.376667976379395
    5. 'Polyline' → logprob: -13.501667976379395
    6. 'Polynomial' → logprob: -13.876667976379395
    7. '               ' → logprob: -15.251667976379395
    8. '(P' → logprob: -15.376667976379395
    9. 'Pol' → logprob: -15.501667976379395
    10. '_polygon' → logprob: -17.126667022705078

Token 3358: 'Polygon' (ID: 48860)
  Prédit: 'Polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Polygon' → logprob: -1.1472419600977446e-06
    2. ' Polygon' → logprob: -13.750000953674316
    3. 'Polynomial' → logprob: -18.125001907348633
    4. 'Polyline' → logprob: -18.625001907348633
    5. 'Poly' → logprob: -19.375001907348633
    6. '   ' → logprob: -21.500001907348633
    7. 'polygon' → logprob: -21.500001907348633
    8. '           ' → logprob: -21.750001907348633
    9. 'Pol' → logprob: -21.875001907348633
    10. '_polygon' → logprob: -23.125001907348633

Token 3359: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -7.493430894101039e-05
    2. 'vertices' → logprob: -9.500075340270996
    3. ' vertices' → logprob: -17.12507438659668
    4. '(' → logprob: -18.37507438659668
    5. 'Vertices' → logprob: -19.62507438659668
    6. '((' → logprob: -19.75007438659668
    7. ')' → logprob: -19.87507438659668
    8. '.vertices' → logprob: -19.87507438659668
    9. '(
' → logprob: -20.12507438659668
    10. '
' → logprob: -20.25007438659668

Token 3360: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05605831742286682
    2. '))' → logprob: -3.056058406829834
    3. ')
' → logprob: -5.056058406829834
    4. '))
' → logprob: -6.931058406829834
    5. '       ' → logprob: -10.181057929992676
    6. '           ' → logprob: -10.806057929992676
    7. '               ' → logprob: -11.306057929992676
    8. ')))' → logprob: -11.306057929992676
    9. ')
' → logprob: -11.681057929992676
    10. '))
' → logprob: -13.931057929992676

Token 3361: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3362: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.25182798504829407
    2. '           ' → logprob: -2.2518279552459717
    3. '       ' → logprob: -2.5018279552459717
    4. ' yield' → logprob: -3.3768279552459717
    5. '	yield' → logprob: -7.126828193664551
    6. '
' → logprob: -7.876828193664551
    7. '   ' → logprob: -9.87682819366455
    8. 'Yield' → logprob: -10.12682819366455
    9. '```' → logprob: -10.37682819366455
    10. '        
' → logprob: -12.25182819366455

Token 3363: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.03825194388628006
    2. '(W' → logprob: -3.2882518768310547
    3. ' (' → logprob: -9.163251876831055
    4. ' W' → logprob: -9.413251876831055
    5. '(' → logprob: -11.163251876831055
    6. '(float' → logprob: -11.788251876831055
    7. '	W' → logprob: -14.038251876831055
    8. 'float' → logprob: -14.288251876831055
    9. '((' → logprob: -15.413251876831055
    10. '   ' → logprob: -15.788251876831055

Token 3364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019018957391381264
    2. ',N' → logprob: -8.875189781188965
    3. ' ,' → logprob: -10.875189781188965
    4. ',W' → logprob: -11.250189781188965
    5. ',float' → logprob: -12.000189781188965
    6. '           ' → logprob: -12.125189781188965
    7. '[' → logprob: -13.375189781188965
    8. ',
' → logprob: -13.625189781188965
    9. ',None' → logprob: -14.750189781188965
    10. ',n' → logprob: -14.875189781188965

Token 3365: ' pillars' (ID: 105506)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pill' → logprob: -0.0003607296966947615
    2. ' pillars' → logprob: -8.250360488891602
    3. 'pillar' → logprob: -9.250360488891602
    4. 'pil' → logprob: -13.125360488891602
    5. 'N' → logprob: -14.000360488891602
    6. '   ' → logprob: -16.6253604888916
    7. '       ' → logprob: -16.8753604888916
    8. '[N' → logprob: -17.0003604888916
    9. 'pier' → logprob: -17.3753604888916
    10. '-pill' → logprob: -17.5003604888916

Token 3366: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3367: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3368: ' except' (ID: 6384)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3369: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -1.3306015716807451e-05
    2. ' Stop' → logprob: -11.62501335144043
    3. 'EOF' → logprob: -12.62501335144043
    4. '(' → logprob: -14.62501335144043
    5. '_Stop' → logprob: -15.25001335144043
    6. 'STOP' → logprob: -16.50001335144043
    7. 'Break' → logprob: -16.75001335144043
    8. '_stop' → logprob: -18.00001335144043
    9. '.Stop' → logprob: -18.87501335144043
    10. '   ' → logprob: -19.50001335144043

Token 3370: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -9.610702363715973e-06
    2. 'Iterator' → logprob: -11.750009536743164
    3. 'Async' → logprob: -14.250009536743164
    4. 'iteration' → logprob: -14.375009536743164
    5. 'Iter' → logprob: -15.750009536743164
    6. ' iteration' → logprob: -16.375009536743164
    7. 'Iterations' → logprob: -16.875009536743164
    8. '```' → logprob: -17.250009536743164
    9. '_iteration' → logprob: -17.375009536743164
    10. 'Error' → logprob: -18.000009536743164

Token 3371: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.141470804810524
    2. ':' → logprob: -2.3914709091186523
    3. ':
' → logprob: -3.8914709091186523
    4. '       ' → logprob: -4.016470909118652
    5. '               ' → logprob: -7.641470909118652
    6. '   ' → logprob: -7.766470909118652
    7. '<|end|>' → logprob: -8.016470909118652
    8. '		' → logprob: -8.516470909118652
    9. '<|end|>' → logprob: -8.891470909118652
    10. '                   ' → logprob: -9.766470909118652

Token 3372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13614770770072937
    2. '   ' → logprob: -2.2611477375030518
    3. '       ' → logprob: -4.136147499084473
    4. ':' → logprob: -5.136147499084473
    5. ':
' → logprob: -7.761147499084473
    6. '		' → logprob: -8.511147499084473
    7. ':return' → logprob: -9.011147499084473
    8. '	   ' → logprob: -9.136147499084473
    9. '               ' → logprob: -9.386147499084473
    10. '                   ' → logprob: -9.886147499084473

Token 3373: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.33463242650032043
    2. 'return' → logprob: -1.834632396697998
    3. '           ' → logprob: -2.084632396697998
    4. ' break' → logprob: -8.084632873535156
    5. ' return' → logprob: -9.709632873535156
    6. '	break' → logprob: -13.209632873535156
    7. '       ' → logprob: -13.209632873535156
    8. '               ' → logprob: -14.709632873535156
    9. '   ' → logprob: -14.959632873535156
    10. '		' → logprob: -15.959632873535156

Token 3374: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025074049830436707
    2. '
' → logprob: -4.400074005126953
    3. '(
' → logprob: -5.150074005126953
    4. '

' → logprob: -6.150074005126953
    5. '\' → logprob: -6.775074005126953
    6. '```' → logprob: -7.150074005126953
    7. '(' → logprob: -7.775074005126953
    8. '    
' → logprob: -8.025074005126953
    9. '<|end|>' → logprob: -8.275074005126953
    10. 'for' → logprob: -8.400074005126953

Token 3375: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019606323912739754
    2. 'if' → logprob: -6.251960754394531
    3. 'for' → logprob: -10.876960754394531
    4. '```' → logprob: -12.001960754394531
    5. '
' → logprob: -12.126960754394531
    6. 'class' → logprob: -13.751960754394531
    7. '    
' → logprob: -16.37696075439453
    8. '        
' → logprob: -16.50196075439453
    9. ' def' → logprob: -16.50196075439453
    10. '  
' → logprob: -16.87696075439453

Token 3376: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.31326422095298767
    2. ' main' → logprob: -1.31326425075531
    3. 'solve' → logprob: -13.438263893127441
    4. ' solve' → logprob: -14.813263893127441
    5. '_main' → logprob: -15.063263893127441
    6. '	main' → logprob: -15.438263893127441
    7. 'def' → logprob: -16.438264846801758
    8. '
' → logprob: -17.688264846801758
    9. 'run' → logprob: -17.813264846801758
    10. ' run' → logprob: -17.938264846801758

Token 3377: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006862897425889969
    2. '():
' → logprob: -5.006863117218018
    3. '()' → logprob: -9.38186264038086
    4. '()>' → logprob: -11.13186264038086
    5. '(' → logprob: -11.25686264038086
    6. '_' → logprob: -11.75686264038086
    7. ' ():' → logprob: -12.00686264038086
    8. '()">' → logprob: -12.38186264038086
    9. '():
' → logprob: -12.50686264038086
    10. 'def' → logprob: -13.00686264038086

Token 3378: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02059619501233101
    2. '():
' → logprob: -3.8955962657928467
    3. ':' → logprob: -10.645596504211426
    4. '()' → logprob: -10.770596504211426
    5. '(' → logprob: -12.895596504211426
    6. ' ():' → logprob: -13.145596504211426
    7. '():
' → logprob: -13.145596504211426
    8. '()->' → logprob: -14.020596504211426
    9. '(
' → logprob: -14.770596504211426
    10. '():

' → logprob: -15.145596504211426

Token 3379: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0015430726343765855
    2. 'int' → logprob: -6.501543045043945
    3. ' None' → logprob: -10.126543045043945
    4. '(None' → logprob: -15.001543045043945
    5. '_None' → logprob: -15.126543045043945
    6. '   ' → logprob: -16.126543045043945
    7. 'void' → logprob: -17.251543045043945
    8. 'none' → logprob: -18.126543045043945
    9. 'float' → logprob: -18.376543045043945
    10. '  ' → logprob: -18.501543045043945

Token 3380: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8438462615013123
    2. ':' → logprob: -0.9688462615013123
    3. '():
' → logprob: -1.843846321105957
    4. '   ' → logprob: -4.093846321105957
    5. '():' → logprob: -4.218846321105957
    6. '):
' → logprob: -8.468846321105957
    7. '```' → logprob: -8.468846321105957
    8. 'def' → logprob: -9.968846321105957
    9. ':def' → logprob: -10.218846321105957
    10. '()' → logprob: -10.218846321105957

Token 3381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.901345038088039e-05
    2. 'for' → logprob: -9.750099182128906
    3. 'line' → logprob: -11.125099182128906
    4. '```' → logprob: -11.625099182128906
    5. 'input' → logprob: -11.750099182128906
    6. 'while' → logprob: -13.000099182128906
    7. ' for' → logprob: -13.875099182128906
    8. 'data' → logprob: -13.875099182128906
    9. '       ' → logprob: -14.125099182128906
    10. 'import' → logprob: -14.250099182128906

Token 3382: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01019197516143322
    2. '   ' → logprob: -4.760191917419434
    3. 'while' → logprob: -6.760191917419434
    4. 'first' → logprob: -8.260191917419434
    5. ' for' → logprob: -9.010191917419434
    6. 'input' → logprob: -11.510191917419434
    7. 'line' → logprob: -11.635191917419434
    8. 'try' → logprob: -11.760191917419434
    9. 'import' → logprob: -12.260191917419434
    10. 'lines' → logprob: -12.385191917419434

Token 3383: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.3242250680923462
    2. ' line' → logprob: -2.3242249488830566
    3. ' W' → logprob: -2.4492249488830566
    4. 'line' → logprob: -2.4492249488830566
    5. 'width' → logprob: -5.949224948883057
    6. '_W' → logprob: -7.199224948883057
    7. 'w' → logprob: -7.324224948883057
    8. '_line' → logprob: -7.574224948883057
    9. '   ' → logprob: -7.949224948883057
    10. '_' → logprob: -8.074225425720215

Token 3384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041230423375964165
    2. ' in' → logprob: -6.129123210906982
    3. ' ,' → logprob: -6.754123210906982
    4. ',line' → logprob: -7.879123210906982
    5. 'in' → logprob: -8.504122734069824
    6. '   ' → logprob: -9.629122734069824
    7. ',n' → logprob: -9.879122734069824
    8. ',in' → logprob: -10.504122734069824
    9. '  ' → logprob: -11.879122734069824
    10. ',w' → logprob: -11.879122734069824

Token 3385: ' pillars' (ID: 105506)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pill' → logprob: -0.006891200784593821
    2. ' pillars' → logprob: -5.006891250610352
    3. 'pillar' → logprob: -8.756891250610352
    4. 'pil' → logprob: -11.506891250610352
    5. '   ' → logprob: -13.131891250610352
    6. 'P' → logprob: -13.131891250610352
    7. '```' → logprob: -14.756891250610352
    8. 'N' → logprob: -14.881891250610352
    9. 'p' → logprob: -15.006891250610352
    10. 'pol' → logprob: -15.131891250610352

Token 3386: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02097075991332531
    2. ':' → logprob: -4.395970821380615
    3. ':
' → logprob: -5.645970821380615
    4. '       ' → logprob: -6.145970821380615
    5. 'in' → logprob: -6.770970821380615
    6. '   ' → logprob: -7.020970821380615
    7. ',' → logprob: -7.395970821380615
    8. '<|end|>' → logprob: -10.645970344543457
    9. '):
' → logprob: -11.020970344543457
    10. '<|end|>' → logprob: -11.270970344543457

Token 3387: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.05420351400971413
    2. 'Corr' → logprob: -3.304203510284424
    3. ' Corridor' → logprob: -4.554203510284424
    4. ' read' → logprob: -5.429203510284424
    5. '   ' → logprob: -7.304203510284424
    6. '[' → logprob: -9.679203987121582
    7. 'corr' → logprob: -10.179203987121582
    8. '```' → logprob: -10.304203987121582
    9. '(read' → logprob: -10.554203987121582
    10. 'Coroutine' → logprob: -10.804203987121582

Token 3388: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.09256738424301147
    2. '()
' → logprob: -3.4675674438476562
    3. 'datasets' → logprob: -3.8425674438476562
    4. '()' → logprob: -4.217567443847656
    5. '_c' → logprob: -5.092567443847656
    6. '   ' → logprob: -6.092567443847656
    7. '_' → logprob: -6.092567443847656
    8. '():
' → logprob: -6.217567443847656
    9. 'Datas' → logprob: -6.342567443847656
    10. 'corr' → logprob: -6.842567443847656

Token 3389: 'atasets' (ID: 105003)
  Prédit: 'atasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atasets' → logprob: -0.0010925926035270095
    2. 'ataset' → logprob: -6.876092433929443
    3. 'ata' → logprob: -10.001092910766602
    4. '_' → logprob: -12.376092910766602
    5. 'datasets' → logprob: -12.751092910766602
    6. 'sets' → logprob: -13.751092910766602
    7. '(' → logprob: -13.876092910766602
    8. 'atas' → logprob: -14.001092910766602
    9. ' datasets' → logprob: -14.001092910766602
    10. 'ats' → logprob: -14.751092910766602

Token 3390: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23637911677360535
    2. '():
' → logprob: -2.4863791465759277
    3. ':
' → logprob: -2.8613791465759277
    4. '():' → logprob: -2.9863791465759277
    5. '       ' → logprob: -4.236379146575928
    6. '   ' → logprob: -5.361379146575928
    7. '):
' → logprob: -9.23637866973877
    8. ',' → logprob: -9.73637866973877
    9. '()' → logprob: -9.73637866973877
    10. '):' → logprob: -9.98637866973877

Token 3391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021569548698607832
    2. '   ' → logprob: -8.875215530395508
    3. '        
' → logprob: -10.000215530395508
    4. '
' → logprob: -11.375215530395508
    5. '```' → logprob: -11.750215530395508
    6. '    
' → logprob: -12.625215530395508
    7. '<|end|>' → logprob: -13.000215530395508
    8. '>' → logprob: -14.125215530395508
    9. '`' → logprob: -14.500215530395508
    10. '           ' → logprob: -14.625215530395508

Token 3392: ' model' (ID: 2359)
  Prédit: 'model'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'model' (adapté à ' model') → logprob: -0.20754985511302948
    2. '       ' → logprob: -1.957549810409546
    3. 'corr' → logprob: -3.207549810409546
    4. 'cm' → logprob: -5.457550048828125
    5. '   ' → logprob: -6.582550048828125
    6. 'c' → logprob: -9.707550048828125
    7. 'cor' → logprob: -10.582550048828125
    8. ' corridor' → logprob: -11.082550048828125
    9. ' model' → logprob: -11.707550048828125
    10. 'width' → logprob: -12.707550048828125

Token 3393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004004672635346651
    2. '=' → logprob: -5.87900447845459
    3. '       ' → logprob: -7.87900447845459
    4. '=model' → logprob: -7.87900447845459
    5. '   ' → logprob: -8.12900447845459
    6. '.' → logprob: -10.12900447845459
    7. '.build' → logprob: -10.75400447845459
    8. '        
' → logprob: -11.37900447845459
    9. '=models' → logprob: -11.50400447845459
    10. '.model' → logprob: -11.50400447845459

Token 3394: ' Corridor' (ID: 181371)
  Prédit: 'Corr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Corr' → logprob: -0.03807671740651131
    2. ' Corridor' → logprob: -3.288076639175415
    3. 'Coroutine' → logprob: -11.413076400756836
    4. 'Cor' → logprob: -11.788076400756836
    5. '   ' → logprob: -12.163076400756836
    6. '       ' → logprob: -12.538076400756836
    7. ' Corr' → logprob: -12.538076400756836
    8. '	C' → logprob: -13.538076400756836
    9. 'Correlation' → logprob: -14.538076400756836
    10. 'Curt' → logprob: -14.663076400756836

Token 3395: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -1.2664456789934775e-06
    2. '   ' → logprob: -14.125000953674316
    3. 'model' → logprob: -15.750000953674316
    4. '       ' → logprob: -15.875000953674316
    5. '(' → logprob: -17.500001907348633
    6. '	Model' → logprob: -17.500001907348633
    7. 'Models' → logprob: -17.875001907348633
    8. '(
' → logprob: -17.875001907348633
    9. '.' → logprob: -18.250001907348633
    10. '_model' → logprob: -18.375001907348633

Token 3396: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0004170873435214162
    2. '(' → logprob: -7.875417232513428
    3. '(
' → logprob: -10.37541675567627
    4. 'W' → logprob: -12.62541675567627
    5. ' (' → logprob: -13.87541675567627
    6. '(w' → logprob: -14.50041675567627
    7. '(width' → logprob: -14.75041675567627
    8. '       ' → logprob: -14.87541675567627
    9. '((' → logprob: -16.250417709350586
    10. '   ' → logprob: -16.500417709350586

Token 3397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011845153057947755
    2. ',p' → logprob: -6.751184463500977
    3. '       ' → logprob: -11.876184463500977
    4. ' ,' → logprob: -12.251184463500977
    5. ',
' → logprob: -13.501184463500977
    6. '   ' → logprob: -15.001184463500977
    7. '           ' → logprob: -15.126184463500977
    8. ',P' → logprob: -15.876184463500977
    9. ')' → logprob: -16.126184463500977
    10. ',w' → logprob: -17.001184463500977

Token 3398: ' pillars' (ID: 105506)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pill' → logprob: -0.0019895401783287525
    2. ' pillars' → logprob: -6.376989364624023
    3. 'pillar' → logprob: -8.626989364624023
    4. '       ' → logprob: -9.501989364624023
    5. 'pil' → logprob: -11.251989364624023
    6. '           ' → logprob: -11.251989364624023
    7. '   ' → logprob: -13.376989364624023
    8. '```' → logprob: -14.376989364624023
    9. '[' → logprob: -14.501989364624023
    10. 'pan' → logprob: -14.626989364624023

Token 3399: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24663354456424713
    2. ')' → logprob: -1.746633529663086
    3. ')
' → logprob: -3.121633529663086
    4. '<|end|>' → logprob: -9.496633529663086
    5. ').' → logprob: -11.371633529663086
    6. '        
' → logprob: -11.996633529663086
    7. '):
' → logprob: -12.121633529663086
    8. ')
' → logprob: -12.496633529663086
    9. '   ' → logprob: -12.621633529663086
    10. '
' → logprob: -12.621633529663086

Token 3400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031282827258110046
    2. 'network' → logprob: -6.2531280517578125
    3. 'flow' → logprob: -6.7531280517578125
    4. 'net' → logprob: -11.253128051757812
    5. ' flow' → logprob: -11.878128051757812
    6. ' network' → logprob: -12.503128051757812
    7. '
' → logprob: -12.628128051757812
    8. '   ' → logprob: -13.253128051757812
    9. '        
' → logprob: -13.628128051757812
    10. '```' → logprob: -14.378128051757812

Token 3401: ' flown' (ID: 113640)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.0020378450863063335
    2. 'flow' → logprob: -6.25203800201416
    3. 'net' → logprob: -9.25203800201416
    4. '       ' → logprob: -11.37703800201416
    5. '   ' → logprob: -14.37703800201416
    6. '           ' → logprob: -14.62703800201416
    7. 'nf' → logprob: -14.87703800201416
    8. ' network' → logprob: -15.12703800201416
    9. 'graph' → logprob: -16.502037048339844
    10. 'max' → logprob: -16.877037048339844

Token 3402: 'et' (ID: 292)
  Prédit: 'etwork'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etwork' → logprob: -0.12018641084432602
    2. 'et' → logprob: -2.2451863288879395
    3. 't' → logprob: -5.2451863288879395
    4. '_network' → logprob: -6.8701863288879395
    5. 'network' → logprob: -7.7451863288879395
    6. '   ' → logprob: -7.7451863288879395
    7. '
' → logprob: -9.745186805725098
    8. '       ' → logprob: -10.620186805725098
    9. 'work' → logprob: -10.995186805725098
    10. '```' → logprob: -11.745186805725098

Token 3403: ',' (ID: 11)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.010395857505500317
    2. '.build' → logprob: -4.8853960037231445
    3. '.work' → logprob: -6.3853960037231445
    4. '_work' → logprob: -7.6353960037231445
    5. 'ork' → logprob: -8.510396003723145
    6. '._' → logprob: -9.760396003723145
    7. '_build' → logprob: -10.010396003723145
    8. '```' → logprob: -10.135396003723145
    9. '   ' → logprob: -10.260396003723145
    10. '.' → logprob: -10.385396003723145

Token 3404: ' SRC' (ID: 112818)
  Prédit: 'SRC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SRC' → logprob: -0.009936581365764141
    2. 'src' → logprob: -4.759936809539795
    3. 's' → logprob: -6.759936809539795
    4. ' SRC' → logprob: -9.384936332702637
    5. 'S' → logprob: -10.384936332702637
    6. 'source' → logprob: -11.259936332702637
    7. 'SR' → logprob: -11.634936332702637
    8. '       ' → logprob: -12.134936332702637
    9. '0' → logprob: -12.259936332702637
    10. '   ' → logprob: -12.634936332702637

Token 3405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.690834273584187e-05
    2. ' ,' → logprob: -10.62503719329834
    3. '<|end|>' → logprob: -12.00003719329834
    4. '=' → logprob: -12.62503719329834
    5. '_,' → logprob: -14.00003719329834
    6. ',
' → logprob: -14.50003719329834
    7. ',S' → logprob: -14.50003719329834
    8. '‌,' → logprob: -15.62503719329834
    9. '<|end|>' → logprob: -15.62503719329834
    10. ',",' → logprob: -15.75003719329834

Token 3406: ' SN' (ID: 41504)
  Prédit: 'SN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SN' → logprob: -2.696889623621246e-06
    2. ' SN' → logprob: -13.00000286102295
    3. '
' → logprob: -15.62500286102295
    4. '_SN' → logprob: -16.375001907348633
    5. 'S' → logprob: -17.250001907348633
    6. '   ' → logprob: -19.625001907348633
    7. 'Sn' → logprob: -19.625001907348633
    8. 'SR' → logprob: -20.875001907348633
    9. '       ' → logprob: -20.875001907348633
    10. 'SNS' → logprob: -21.000001907348633

Token 3407: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.500000953674316
    3. ' K' → logprob: -16.375
    4. '```' → logprob: -17.0
    5. 'К' → logprob: -18.25
    6. 'k' → logprob: -18.25
    7. '\' → logprob: -18.5
    8. '	K' → logprob: -18.625
    9. '(' → logprob: -18.75
    10. '=' → logprob: -18.75

Token 3408: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761472582817078
    2. '=' → logprob: -0.8261472582817078
    3. '       ' → logprob: -8.576147079467773
    4. ',' → logprob: -12.076147079467773
    5. '        ' → logprob: -12.326147079467773
    6. '   ' → logprob: -12.326147079467773
    7. ')' → logprob: -13.951147079467773
    8. ' ' → logprob: -14.201147079467773
    9. '    ' → logprob: -14.576147079467773
    10. 'flow' → logprob: -14.701147079467773

Token 3409: ' model' (ID: 2359)
  Prédit: 'model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'model' → logprob: -0.001170225441455841
    2. ' model' → logprob: -6.7511701583862305
    3. '	model' → logprob: -18.876171112060547
    4. '=model' → logprob: -19.001171112060547
    5. '(model' → logprob: -19.876171112060547
    6. 'mode' → logprob: -19.876171112060547
    7. 'modell' → logprob: -20.501171112060547
    8. '$model' → logprob: -20.751171112060547
    9. '   ' → logprob: -21.626171112060547
    10. '
' → logprob: -22.126171112060547

Token 3410: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -0.049440715461969376
    2. 'build' → logprob: -3.049440622329712
    3. '_build' → logprob: -7.299440860748291
    4. '.' → logprob: -9.299440383911133
    5. '   ' → logprob: -10.424440383911133
    6. ' =' → logprob: -11.299440383911133
    7. ' .' → logprob: -11.674440383911133
    8. '	build' → logprob: -11.799440383911133
    9. ' build' → logprob: -12.174440383911133
    10. '       ' → logprob: -12.424440383911133

Token 3411: '_flow' (ID: 63802)
  Prédit: '_flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -1.1472419600977446e-06
    2. 'flow' → logprob: -13.875000953674316
    3. 'Flow' → logprob: -17.000001907348633
    4. '```' → logprob: -17.375001907348633
    5. '_flux' → logprob: -17.500001907348633
    6. '
' → logprob: -17.500001907348633
    7. '_FLOW' → logprob: -17.750001907348633
    8. '_network' → logprob: -18.000001907348633
    9. '\' → logprob: -18.250001907348633
    10. '(_' → logprob: -18.375001907348633

Token 3412: '_network' (ID: 47703)
  Prédit: '_network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_network' → logprob: -1.4855663721391466e-05
    2. 'network' → logprob: -11.750015258789062
    3. '_' → logprob: -13.000015258789062
    4. 'Network' → logprob: -13.000015258789062
    5. '_net' → logprob: -14.000015258789062
    6. '_NETWORK' → logprob: -15.125015258789062
    7. '```' → logprob: -15.250015258789062
    8. ' network' → logprob: -16.000015258789062
    9. '
' → logprob: -16.125015258789062
    10. '_
' → logprob: -16.250015258789062

Token 3413: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014048899174667895
    2. 'flow' → logprob: -9.500140190124512
    3. '<|end|>' → logprob: -10.875140190124512
    4. '        
' → logprob: -11.375140190124512
    5. ' flow' → logprob: -11.500140190124512
    6. '
' → logprob: -11.875140190124512
    7. '(flow' → logprob: -12.000140190124512
    8. '_flow' → logprob: -12.125140190124512
    9. ',' → logprob: -13.125140190124512
    10. '.flow' → logprob: -13.875140190124512

Token 3414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013679367839358747
    2. 'flow' → logprob: -9.000136375427246
    3. '```' → logprob: -12.250136375427246
    4. ' flow' → logprob: -12.625136375427246
    5. '   ' → logprob: -13.000136375427246
    6. '
' → logprob: -13.250136375427246
    7. '           ' → logprob: -14.875136375427246
    8. '        
' → logprob: -15.125136375427246
    9. '_flow' → logprob: -15.125136375427246
    10. 'result' → logprob: -15.750136375427246

Token 3415: ' res' (ID: 694)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5820069313049316
    2. 'flow' → logprob: -0.8320069313049316
    3. '       ' → logprob: -5.832006931304932
    4. 'res' (adapté à ' res') → logprob: -6.457006931304932
    5. 'result' → logprob: -7.207006931304932
    6. 'mf' → logprob: -8.457006454467773
    7. 'ans' → logprob: -8.582006454467773
    8. 'capacity' → logprob: -8.832006454467773
    9. 'answer' → logprob: -9.332006454467773
    10. 'area' → logprob: -9.957006454467773

Token 3416: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.014765319414436817
    2. ' =' → logprob: -4.26476526260376
    3. '   ' → logprob: -8.514765739440918
    4. 'u' → logprob: -9.139765739440918
    5. '       ' → logprob: -9.514765739440918
    6. '_flow' → logprob: -9.639765739440918
    7. '=' → logprob: -9.764765739440918
    8. 'ults' → logprob: -10.264765739440918
    9. 'ultat' → logprob: -10.514765739440918
    10. 'flow' → logprob: -11.639765739440918

Token 3417: ' flown' (ID: 113640)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.02069428563117981
    2. ' flown' → logprob: -3.8956942558288574
    3. 'flow' → logprob: -9.020694732666016
    4. ' fl' → logprob: -11.645694732666016
    5. 'flo' → logprob: -11.645694732666016
    6. 'model' → logprob: -12.395694732666016
    7. 'f' → logprob: -12.770694732666016
    8. 'float' → logprob: -13.145694732666016
    9. ' flow' → logprob: -13.520694732666016
    10. ' flowed' → logprob: -14.270694732666016

Token 3418: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -4.320199877838604e-07
    2. 'net' → logprob: -15.0
    3. '_et' → logprob: -17.5
    4. '   ' → logprob: -17.625
    5. '```' → logprob: -18.0
    6. 'ow' → logprob: -18.0
    7. 't' → logprob: -18.125
    8. '(et' → logprob: -18.125
    9. 'ет' → logprob: -18.25
    10. 'etwork' → logprob: -18.375

Token 3419: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.0001394161517964676
    2. 'max' → logprob: -9.125139236450195
    3. '.' → logprob: -10.500139236450195
    4. '_max' → logprob: -14.750139236450195
    5. ' .' → logprob: -14.875139236450195
    6. '   ' → logprob: -14.875139236450195
    7. ' max' → logprob: -14.875139236450195
    8. ',max' → logprob: -15.125139236450195
    9. '
' → logprob: -15.375139236450195
    10. '	max' → logprob: -15.500139236450195

Token 3420: '_flow' (ID: 63802)
  Prédit: '_flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -3.309382373117842e-05
    2. '_' → logprob: -11.125033378601074
    3. '_flux' → logprob: -11.250033378601074
    4. '_FLOW' → logprob: -13.375033378601074
    5. '()' → logprob: -14.375033378601074
    6. '```' → logprob: -14.500033378601074
    7. '_
' → logprob: -14.875033378601074
    8. '
' → logprob: -15.375033378601074
    9. '\' → logprob: -15.375033378601074
    10. '   ' → logprob: -15.500033378601074

Token 3421: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.01859399490058422
    2. '(' → logprob: -4.018593788146973
    3. '(
' → logprob: -7.768593788146973
    4. ' (' → logprob: -11.518593788146973
    5. '()' → logprob: -13.018593788146973
    6. '   ' → logprob: -13.643593788146973
    7. '(None' → logprob: -13.768593788146973
    8. '(_,' → logprob: -14.018593788146973
    9. '((' → logprob: -14.143593788146973
    10. '```' → logprob: -14.393593788146973

Token 3422: 'RC' (ID: 12515)
  Prédit: 'RC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RC' → logprob: -0.00012487331696320325
    2. 'R' → logprob: -9.12512493133545
    3. 'RK' → logprob: -11.12512493133545
    4. 'RCT' → logprob: -15.00012493133545
    5. ',' → logprob: -15.12512493133545
    6. ' RC' → logprob: -15.75012493133545
    7. 'C' → logprob: -16.500123977661133
    8. 'SRC' → logprob: -16.625123977661133
    9. 'RQ' → logprob: -16.750123977661133
    10. 'Rc' → logprob: -17.250123977661133

Token 3423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ',
' → logprob: -12.750004768371582
    3. ' ,' → logprob: -13.750004768371582
    4. ',S' → logprob: -13.750004768371582
    5. ',s' → logprob: -18.6250057220459
    6. '(),' → logprob: -18.8750057220459
    7. ',

' → logprob: -19.3750057220459
    8. '   ' → logprob: -19.5000057220459
    9. '‌,' → logprob: -19.7500057220459
    10. '<|end|>' → logprob: -19.8750057220459

Token 3424: ' SN' (ID: 41504)
  Prédit: 'SN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SN' → logprob: -0.00020354038861114532
    2. ' SN' → logprob: -8.500203132629395
    3. '_SN' → logprob: -19.50020408630371
    4. '   ' → logprob: -21.62520408630371
    5. 'S' → logprob: -23.12520408630371
    6. 'Sn' → logprob: -23.87520408630371
    7. '       ' → logprob: -24.12520408630371
    8. ' ' → logprob: -24.25020408630371
    9. '
' → logprob: -24.50020408630371
    10. 'SK' → logprob: -25.25020408630371

Token 3425: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.0280383548888494e-06
    2. ',' → logprob: -14.000000953674316
    3. ')' → logprob: -15.875000953674316
    4. ' K' → logprob: -17.125001907348633
    5. ')
' → logprob: -18.875001907348633
    6. '),' → logprob: -20.250001907348633
    7. ',K' → logprob: -21.250001907348633
    8. '```' → logprob: -21.375001907348633
    9. ',
' → logprob: -21.750001907348633
    10. 'К' → logprob: -22.125001907348633

Token 3426: ')
' (ID: 446)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2063673734664917
    2. '()
' → logprob: -1.2063673734664917
    3. ')' → logprob: -1.3313673734664917
    4. ')
' → logprob: -2.2063674926757812
    5. '       ' → logprob: -3.9563674926757812
    6. '())' → logprob: -5.456367492675781
    7. '())
' → logprob: -5.581367492675781
    8. '   ' → logprob: -10.581367492675781
    9. '
' → logprob: -12.331367492675781
    10. '()
' → logprob: -12.831367492675781

Token 3427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008758509648032486
    2. '
' → logprob: -7.375875949859619
    3. '   ' → logprob: -8.750875473022461
    4. 'print' → logprob: -10.000875473022461
    5. '<|end|>' → logprob: -10.625875473022461
    6. '```' → logprob: -11.500875473022461
    7. '        
' → logprob: -11.625875473022461
    8. ' print' → logprob: -14.375875473022461
    9. '    
' → logprob: -15.000875473022461
    10. '           ' → logprob: -15.125875473022461

Token 3428: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001940057729370892
    2. '       ' → logprob: -6.2519402503967285
    3. ' print' → logprob: -11.62693977355957
    4. 'if' → logprob: -13.50193977355957
    5. '```' → logprob: -14.75193977355957
    6. '
' → logprob: -15.37693977355957
    7. '#print' → logprob: -15.75193977355957
    8. 'pr' → logprob: -16.00193977355957
    9. 'import' → logprob: -16.62693977355957
    10. 'printf' → logprob: -16.87693977355957

Token 3429: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.06492077559232712
    2. '(res' → logprob: -2.814920663833618
    3. '(int' → logprob: -6.564920902252197
    4. '(round' → logprob: -6.689920902252197
    5. '(' → logprob: -9.064920425415039
    6. '("{' → logprob: -9.439920425415039
    7. 'f' → logprob: -10.064920425415039
    8. '{' → logprob: -11.064920425415039
    9. 'res' → logprob: -11.314920425415039
    10. '()' → logprob: -11.814920425415039

Token 3430: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.49886152148246765
    2. '(res' → logprob: -1.49886155128479
    3. '{' → logprob: -2.37386155128479
    4. 'res' → logprob: -3.12386155128479
    5. 'es' → logprob: -4.248861312866211
    6. '("{' → logprob: -4.873861312866211
    7. ''{' → logprob: -5.248861312866211
    8. '(f' → logprob: -6.623861312866211
    9. '({' → logprob: -6.748861312866211
    10. '"' → logprob: -7.248861312866211

Token 3431: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -8.602024900028482e-05
    2. 'W' → logprob: -9.375085830688477
    3. 'max' → logprob: -14.750085830688477
    4. ' res' → logprob: -15.625085830688477
    5. 'float' → logprob: -15.750085830688477
    6. '1' → logprob: -15.750085830688477
    7. '(res' → logprob: -16.125085830688477
    8. 'w' → logprob: -17.250085830688477
    9. 'min' → logprob: -17.250085830688477
    10. '0' → logprob: -17.625085830688477

Token 3432: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.000960296718403697
    2. ':' → logprob: -7.750960350036621
    3. ' :.' → logprob: -7.750960350036621
    4. '}")' → logprob: -10.375960350036621
    5. '(' → logprob: -10.500960350036621
    6. '}' → logprob: -11.500960350036621
    7. '():' → logprob: -11.750960350036621
    8. '(.' → logprob: -12.000960350036621
    9. '.' → logprob: -12.250960350036621
    10. ':f' → logprob: -12.500960350036621

Token 3433: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.13580848276615143
    2. '9' → logprob: -2.5108084678649902
    3. '15' → logprob: -3.8858084678649902
    4. '10' → logprob: -4.38580846786499
    5. '12' → logprob: -5.51080846786499
    6. '7' → logprob: -5.63580846786499
    7. '8' → logprob: -6.01080846786499
    8. '2' → logprob: -7.13580846786499
    9. '3' → logprob: -7.51080846786499
    10. '5' → logprob: -7.63580846786499

Token 3434: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. 'g' → logprob: -16.375
    3. 'lf' → logprob: -19.125
    4. 'e' → logprob: -19.75
    5. '
' → logprob: -19.75
    6. '6' → logprob: -21.125
    7. ' f' → logprob: -21.75
    8. '}' → logprob: -22.0
    9. '	f' → logprob: -22.625
    10. '```' → logprob: -22.875

Token 3435: '}"' (ID: 21503)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.02975570224225521
    2. '}")' → logprob: -3.5297555923461914
    3. ')")' → logprob: -13.279755592346191
    4. '}' → logprob: -13.404755592346191
    5. '")
' → logprob: -14.154755592346191
    6. '"}' → logprob: -14.779755592346191
    7. '")}' → logprob: -15.279755592346191
    8. ' ")' → logprob: -15.529755592346191
    9. '}")
' → logprob: -15.529755592346191
    10. ')' → logprob: -16.404756546020508

Token 3436: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014287306112237275
    2. '")' → logprob: -9.500143051147461
    3. ')
' → logprob: -10.500143051147461
    4. '       ' → logprob: -11.250143051147461
    5. '()' → logprob: -11.375143051147461
    6. '())' → logprob: -11.375143051147461
    7. '   ' → logprob: -12.625143051147461
    8. ' )' → logprob: -15.250143051147461
    9. '	' → logprob: -15.500143051147461
    10. '')' → logprob: -15.625143051147461

Token 3437: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.656383680412546e-05
    2. ' if' → logprob: -10.500046730041504
    3. '```' → logprob: -11.375046730041504
    4. '<|end|>' → logprob: -12.500046730041504
    5. '
' → logprob: -12.875046730041504
    6. 'main' → logprob: -14.750046730041504
    7. '#' → logprob: -14.875046730041504
    8. '    
' → logprob: -16.625045776367188
    9. '	if' → logprob: -16.875045776367188
    10. '  
' → logprob: -17.000045776367188

Token 3438: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.062133047729730606
    2. ' __' → logprob: -2.8121330738067627
    3. '_' → logprob: -9.062132835388184
    4. '___' → logprob: -10.562132835388184
    5. '_name' → logprob: -11.062132835388184
    6. 'name' → logprob: -11.937132835388184
    7. '  ' → logprob: -14.937132835388184
    8. '____' → logprob: -15.312132835388184
    9. 'Name' → logprob: -15.562132835388184
    10. ' ' → logprob: -16.3121337890625

Token 3439: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003908487968146801
    2. '==' → logprob: -5.878908634185791
    3. ' ==' → logprob: -7.753908634185791
    4. '__.__' → logprob: -8.253908157348633
    5. 'name' → logprob: -9.128908157348633
    6. 'if' → logprob: -9.628908157348633
    7. '.__' → logprob: -9.878908157348633
    8. '_' → logprob: -10.003908157348633
    9. ' __' → logprob: -10.128908157348633
    10. '=="' → logprob: -11.378908157348633

Token 3440: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.3458322731312364e-06
    2. '__.__' → logprob: -12.000007629394531
    3. '__
' → logprob: -14.500007629394531
    4. '__.' → logprob: -15.250007629394531
    5. '____' → logprob: -15.625007629394531
    6. '___' → logprob: -17.12500762939453
    7. '==' → logprob: -17.12500762939453
    8. '__["' → logprob: -18.00000762939453
    9. '```' → logprob: -18.12500762939453
    10. '__('' → logprob: -18.50000762939453

Token 3441: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006373812211677432
    2. '==' → logprob: -7.375637531280518
    3. '__.__' → logprob: -12.12563705444336
    4. '=="' → logprob: -13.00063705444336
    5. ' ==' → logprob: -13.50063705444336
    6. '__
' → logprob: -14.75063705444336
    7. '=='' → logprob: -15.25063705444336
    8. '_' → logprob: -15.50063705444336
    9. '___' → logprob: -15.75063705444336
    10. '__,' → logprob: -16.00063705444336

Token 3442: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5759613513946533
    2. ''' → logprob: -0.8259613513946533
    3. '__' → logprob: -10.825961112976074
    4. ' "__' → logprob: -13.700961112976074
    5. ' '__' → logprob: -15.075961112976074
    6. '"'' → logprob: -15.325961112976074
    7. ''"' → logprob: -15.325961112976074
    8. '   ' → logprob: -16.70096206665039
    9. '('__' → logprob: -17.07596206665039
    10. '("__' → logprob: -17.82596206665039

Token 3443: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.25391414761543274
    2. '__' → logprob: -1.5039141178131104
    3. 'name' → logprob: -6.2539143562316895
    4. '__.' → logprob: -11.253913879394531
    5. '_main' → logprob: -11.253913879394531
    6. '__
' → logprob: -11.378913879394531
    7. '__':
' → logprob: -11.878913879394531
    8. 'if' → logprob: -12.128913879394531
    9. '__.__' → logprob: -13.503913879394531
    10. '```' → logprob: -13.628913879394531

Token 3444: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7004294395446777
    2. '__':
' → logprob: -0.7004294395446777
    3. '__":
' → logprob: -4.950429439544678
    4. '__
' → logprob: -9.075429916381836
    5. '__:' → logprob: -10.325429916381836
    6. '__.' → logprob: -11.700429916381836
    7. '__.__' → logprob: -11.825429916381836
    8. '__
' → logprob: -12.325429916381836
    9. '_' → logprob: -12.825429916381836
    10. '__["' → logprob: -14.075429916381836

Token 3445: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07305005937814713
    2. '   ' → logprob: -2.698050022125244
    3. '	main' → logprob: -5.948050022125244
    4. ' main' → logprob: -8.073050498962402
    5. '__' → logprob: -8.823050498962402
    6. '(main' → logprob: -11.198050498962402
    7. '_main' → logprob: -11.323050498962402
    8. '```' → logprob: -12.448050498962402
    9. '    
' → logprob: -12.823050498962402
    10. '__":
' → logprob: -13.698050498962402

Token 3446: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.696889623621246e-06
    2. '   ' → logprob: -13.25000286102295
    3. ' main' → logprob: -14.87500286102295
    4. 'import' → logprob: -15.25000286102295
    5. '	main' → logprob: -15.37500286102295
    6. 'sys' → logprob: -16.250001907348633
    7. '_main' → logprob: -19.750001907348633
    8. '(main' → logprob: -20.625001907348633
    9. '.main' → logprob: -20.750001907348633
    10. '```' → logprob: -22.750001907348633

Token 3447: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3445
Tokens correctement prédits (1ère position, stricte): 1333
Tokens correctement prédits (1ère position, avec adaptation): 1483
Tokens correctement prédits (top 10): 2849
Précision stricte (1ère position): 38.69%
Précision adaptée (1ère position): 43.05%
Précision (top 10): 82.70%
================================================================================
