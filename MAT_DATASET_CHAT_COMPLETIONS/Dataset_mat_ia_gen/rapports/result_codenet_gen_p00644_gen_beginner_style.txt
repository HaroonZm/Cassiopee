================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def dijkstra(n, graph, start):
    dist = [float('inf')] * n
    dist[start] = 0
    visited = [False] * n
    for _ in range(n):
        u = -1
        min_dist = float('inf')
        for i in range(n):
            if not visited[i] and dist[i] < min_dist:
                min_dist = dist[i]
                u = i
        if u == -1:
            break
        visited[u] = True
        for v, w in graph[u]:
            if dist[u] + w < dist[v]:
                dist[v] = dist[u] + w
    return dist

while True:
    line = ''
    while line.strip() == '':
        line = sys.stdin.readline()
        if line == '':
            sys.exit(0)
    nmp = line.strip().split()
    if len(nmp) < 3:
        continue
    n, m, p = map(int, nmp)
    if n == 0 and m == 0 and p == 0:
        break
    graph = [[] for _ in range(n)]
    for _ in range(m):
        u, v, w = map(int, sys.stdin.readline().strip().split())
        graph[u].append((v, w))
        graph[v].append((u, w))
    children = []
    for _ in range(p):
        c = int(sys.stdin.readline())
        children.append(c)

    dist_start = dijkstra(n, graph, 0)
    dist_end = dijkstra(n, graph, n-1)

    dist_shortest = dist_start[n-1]

    # count number of shortest paths from start to each node
    ways_start = [0] * n
    ways_start[0] = 1
    nodes_by_dist = sorted(range(n), key=lambda x: dist_start[x])
    for u in nodes_by_dist:
        for v, w in graph[u]:
            if dist_start[u] + w == dist_start[v]:
                ways_start[v] += ways_start[u]

    # count number of shortest paths from each node to end
    ways_end = [0] * n
    ways_end[n-1] = 1
    nodes_by_dist_end = sorted(range(n), key=lambda x: dist_end[x])
    for u in nodes_by_dist_end:
        for v, w in graph[u]:
            if dist_end[u] + w == dist_end[v]:
                ways_end[v] += ways_end[u]

    total_paths = ways_start[n-1]

    for c in children:
        if dist_start[c] + dist_end[c] == dist_shortest:
            count = ways_start[c] * ways_end[c]
            prob = count / total_paths
            print(float(prob))
        else:
            print(0.0)
    print()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18349961936473846
    2. '\n' → logprob: -2.183499574661255
    3. 'import' → logprob: -3.558499574661255
    4. '<|end|>' → logprob: -4.808499813079834
    5. '' → logprob: -5.808499813079834
    6. 'newline' → logprob: -5.933499813079834
    7. '\' → logprob: -6.058499813079834
    8. 'print' → logprob: -6.433499813079834
    9. '[' → logprob: -6.558499813079834
    10. '<|end|>' → logprob: -6.808499813079834

Token 4: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: 'ijkstra' (ID: 124290)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.016594013199210167
    2. 'e' → logprob: -4.141593933105469
    3. 'efi' → logprob: -8.516593933105469
    4. 'efe' → logprob: -9.266593933105469
    5. 'ecode' → logprob: -9.516593933105469
    6. ' e' → logprob: -9.891593933105469
    7. 'def' → logprob: -10.766593933105469
    8. 'efa' → logprob: -10.891593933105469
    9. 'efs' → logprob: -10.891593933105469
    10. ' ef' → logprob: -11.266593933105469

Token 6: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003698973741848022
    2. ' (' → logprob: -8.375370025634766
    3. '_' → logprob: -9.500370025634766
    4. ''' → logprob: -11.625370025634766
    5. '(
' → logprob: -11.750370025634766
    6. ')' → logprob: -11.875370025634766
    7. ' ' → logprob: -12.000370025634766
    8. '<|end|>' → logprob: -12.000370025634766
    9. '```' → logprob: -12.500370025634766
    10. ''s' → logprob: -12.500370025634766

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014371353900060058
    2. ' ,' → logprob: -6.626437187194824
    3. '):' → logprob: -9.376437187194824
    4. ')' → logprob: -10.876437187194824
    5. '_,' → logprob: -13.126437187194824
    6. ',
' → logprob: -13.751437187194824
    7. ' ):' → logprob: -13.876437187194824
    8. '‌,' → logprob: -14.876437187194824
    9. ' )' → logprob: -15.126437187194824
    10. ',int' → logprob: -15.126437187194824

Token 8: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.23235274851322174
    2. 'graph' → logprob: -1.6073527336120605
    3. ' edges' → logprob: -5.3573527336120605
    4. ' start' → logprob: -7.1073527336120605
    5. 'edges' → logprob: -7.8573527336120605
    6. ' adj' → logprob: -8.232353210449219
    7. ' source' → logprob: -8.607353210449219
    8. ' adjacency' → logprob: -9.232353210449219
    9. 'start' → logprob: -9.357353210449219
    10. ' dist' → logprob: -9.982353210449219

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01432639081031084
    2. '):' → logprob: -4.264326572418213
    3. ')' → logprob: -9.389326095581055
    4. ' ,' → logprob: -9.764326095581055
    5. '[' → logprob: -12.139326095581055
    6. ',n' → logprob: -13.139326095581055
    7. ' ):' → logprob: -13.139326095581055
    8. ',
' → logprob: -13.764326095581055
    9. '[]):' → logprob: -14.139326095581055
    10. ':' → logprob: -14.139326095581055

Token 10: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2603739798069
    2. ' start' → logprob: -1.5103739500045776
    3. 'src' → logprob: -5.760374069213867
    4. 'source' → logprob: -6.260374069213867
    5. 's' → logprob: -6.385374069213867
    6. ' source' → logprob: -6.760374069213867
    7. ' src' → logprob: -8.135374069213867
    8. ' s' → logprob: -8.635374069213867
    9. 'dist' → logprob: -11.010374069213867
    10. '```' → logprob: -12.760374069213867

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25252091884613037
    2. ',' → logprob: -1.5025209188461304
    3. ')' → logprob: -7.75252103805542
    4. '):
' → logprob: -9.377520561218262
    5. ':' → logprob: -10.502520561218262
    6. ' ):' → logprob: -10.752520561218262
    7. ' ,' → logprob: -12.377520561218262
    8. ',:' → logprob: -12.502520561218262
    9. ''):' → logprob: -12.877520561218262
    10. '```' → logprob: -13.002520561218262

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04359222948551178
    2. '   ' → logprob: -3.9185922145843506
    3. ' :' → logprob: -4.16859245300293
    4. '```' → logprob: -6.16859245300293
    5. ':
' → logprob: -6.41859245300293
    6. ',' → logprob: -6.91859245300293
    7. ' ' → logprob: -7.29359245300293
    8. '    ' → logprob: -8.04359245300293
    9. '`:' → logprob: -8.04359245300293
    10. ' :
' → logprob: -8.16859245300293

Token 13: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5976443290710449
    2. 'dist' (adapté à ' dist') → logprob: -0.8476443290710449
    3. ' dist' → logprob: -4.097644329071045
    4. ' distances' → logprob: -5.847644329071045
    5. '```' → logprob: -7.472644329071045
    6. 'distance' → logprob: -7.847644329071045
    7. '	dist' → logprob: -8.472644805908203
    8. ' ' → logprob: -9.097644805908203
    9. 'visited' → logprob: -9.222644805908203
    10. 'import' → logprob: -9.222644805908203

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25544995069503784
    2. '=' → logprob: -1.8804500102996826
    3. '[' → logprob: -2.6304500102996826
    4. '[]' → logprob: -8.505450248718262
    5. ',' → logprob: -8.755450248718262
    6. ')' → logprob: -9.130450248718262
    7. '[:]' → logprob: -9.630450248718262
    8. ' ' → logprob: -9.755450248718262
    9. '  ' → logprob: -9.755450248718262
    10. ']' → logprob: -10.005450248718262

Token 15: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5790563225746155
    2. ' [' → logprob: -0.8290563225746155
    3. '{' → logprob: -6.579056262969971
    4. '[n' → logprob: -6.829056262969971
    5. '[node' → logprob: -8.329056739807129
    6. '[int' → logprob: -8.954056739807129
    7. ' {' → logprob: -9.079056739807129
    8. '[len' → logprob: -10.579056739807129
    9. '[in' → logprob: -10.829056739807129
    10. '[start' → logprob: -10.829056739807129

Token 16: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.008673549629747868
    2. ' float' → logprob: -4.758673667907715
    3. '   ' → logprob: -10.633673667907715
    4. 'sys' → logprob: -11.008673667907715
    5. ' sys' → logprob: -12.008673667907715
    6. '10' → logprob: -12.383673667907715
    7. 'int' → logprob: -12.883673667907715
    8. ' ' → logprob: -12.883673667907715
    9. '0' → logprob: -14.008673667907715
    10. '    ' → logprob: -14.758673667907715

Token 17: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.750011444091797
    3. '("' → logprob: -12.750011444091797
    4. ''' → logprob: -14.750011444091797
    5. ''in' → logprob: -14.875011444091797
    6. '(in' → logprob: -16.750011444091797
    7. 'inf' → logprob: -17.250011444091797
    8. ' ('' → logprob: -19.000011444091797
    9. '(\'' → logprob: -19.125011444091797
    10. '   ' → logprob: -19.500011444091797

Token 18: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -3.173704271830502e-06
    2. 'in' → logprob: -12.75000286102295
    3. 'info' → logprob: -15.62500286102295
    4. 'Inf' → logprob: -17.625003814697266
    5. '_inf' → logprob: -17.875003814697266
    6. ' inf' → logprob: -18.000003814697266
    7. '-inf' → logprob: -18.500003814697266
    8. ''in' → logprob: -18.500003814697266
    9. 'INF' → logprob: -19.000003814697266
    10. '.inf' → logprob: -20.250003814697266

Token 19: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.03296021744608879
    2. ')' → logprob: -4.157960414886475
    3. '')' → logprob: -4.282960414886475
    4. ')]' → logprob: -6.532960414886475
    5. ']' → logprob: -6.907960414886475
    6. '('' → logprob: -7.782960414886475
    7. ''),' → logprob: -9.657959938049316
    8. '()' → logprob: -11.407959938049316
    9. ''' → logprob: -11.407959938049316
    10. ''))' → logprob: -11.657959938049316

Token 20: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7158312201499939
    2. ' for' → logprob: -0.7158312201499939
    3. ']*' → logprob: -4.465831279754639
    4. 'for' → logprob: -4.840831279754639
    5. ' ]' → logprob: -7.090831279754639
    6. ',' → logprob: -7.215831279754639
    7. '(' → logprob: -8.21583080291748
    8. '()]' → logprob: -8.34083080291748
    9. '```' → logprob: -8.59083080291748
    10. ']*(' → logprob: -8.71583080291748

Token 21: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3902423679828644
    2. ' n' → logprob: -1.140242338180542
    3. '(n' → logprob: -5.765242576599121
    4. ' (' → logprob: -8.640242576599121
    5. '(' → logprob: -9.890242576599121
    6. '	n' → logprob: -13.390242576599121
    7. ' ' → logprob: -13.765242576599121
    8. ')n' → logprob: -14.265242576599121
    9. ' ' → logprob: -16.265241622924805
    10. '_n' → logprob: -16.515241622924805

Token 22: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5535629987716675
    2. '
' → logprob: -1.4285629987716675
    3. '\' → logprob: -2.553563117980957
    4. '   ' → logprob: -3.553563117980957
    5. '\n' → logprob: -3.553563117980957
    6. ')' → logprob: -4.428563117980957
    7. '    
' → logprob: -4.803563117980957
    8. '[' → logprob: -5.178563117980957
    9. '```' → logprob: -5.678563117980957
    10. ' dist' → logprob: -5.678563117980957

Token 23: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.025264468044042587
    2. ' dist' → logprob: -4.400264263153076
    3. '
' → logprob: -5.275264263153076
    4. ')' → logprob: -6.150264263153076
    5. '   ' → logprob: -6.650264263153076
    6. '	dist' → logprob: -7.275264263153076
    7. '[' → logprob: -7.525264263153076
    8. ' ' → logprob: -7.650264263153076
    9. '    
' → logprob: -7.900264263153076
    10. ']' → logprob: -8.150264739990234

Token 24: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.040356509387493134
    2. ' dist' → logprob: -4.040356636047363
    3. ' ' → logprob: -4.540356636047363
    4. 'start' → logprob: -4.790356636047363
    5. '   ' → logprob: -7.290356636047363
    6. ' start' → logprob: -7.665356636047363
    7. '    ' → logprob: -7.665356636047363
    8. ')' → logprob: -7.915356636047363
    9. '  ' → logprob: -8.790356636047363
    10. '```' → logprob: -8.915356636047363

Token 25: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.3869156539440155
    2. '[' → logprob: -1.136915683746338
    3. '```' → logprob: -11.26191520690918
    4. '\[' → logprob: -12.13691520690918
    5. '[end' → logprob: -12.51191520690918
    6. '[src' → logprob: -12.63691520690918
    7. '[current' → logprob: -13.26191520690918
    8. '[first' → logprob: -13.38691520690918
    9. '[int' → logprob: -13.38691520690918
    10. '[s' → logprob: -13.63691520690918

Token 26: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011845153057947755
    2. ' ]' → logprob: -6.751184463500977
    3. ']=' → logprob: -12.001184463500977
    4. '=' → logprob: -12.376184463500977
    5. ')]' → logprob: -13.376184463500977
    6. ')' → logprob: -13.876184463500977
    7. '`]' → logprob: -14.376184463500977
    8. '']' → logprob: -15.251184463500977
    9. ' =' → logprob: -16.001184463500977
    10. '[' → logprob: -16.126184463500977

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04861325025558472
    2. '=' → logprob: -3.0486133098602295
    3. ' =
' → logprob: -12.173613548278809
    4. ']' → logprob: -12.298613548278809
    5. '<|end|>' → logprob: -12.298613548278809
    6. ' ' → logprob: -12.923613548278809
    7. ' =)' → logprob: -12.923613548278809
    8. ')' → logprob: -13.673613548278809
    9. ' |=' → logprob: -13.923613548278809
    10. '[' → logprob: -13.923613548278809

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.00247573852539
    4. '۰' → logprob: -19.00247573852539
    5. ' ' → logprob: -19.00247573852539
    6. '```' → logprob: -19.12747573852539
    7. '  ' → logprob: -19.50247573852539
    8. '00' → logprob: -20.56497573852539
    9. '０' → logprob: -20.93997573852539
    10. '000' → logprob: -21.00247573852539

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '۰' → logprob: -19.625
    4. '０' → logprob: -21.5
    5. '```' → logprob: -22.25
    6. '   ' → logprob: -22.5
    7. '٠' → logprob: -22.625
    8. '00' → logprob: -23.25
    9. '०' → logprob: -23.75
    10. ' ' → logprob: -24.0

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04616903141140938
    2. '   ' → logprob: -3.7961690425872803
    3. '\n' → logprob: -4.796168804168701
    4. '    
' → logprob: -4.921168804168701
    5. '' → logprob: -5.671168804168701
    6. ' 
' → logprob: -6.921168804168701
    7. '  
' → logprob: -7.171168804168701
    8. '   
' → logprob: -7.921168804168701
    9. '\' → logprob: -8.04616928100586
    10. 'newline' → logprob: -8.29616928100586

Token 31: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2320125252008438
    2. '\n' → logprob: -2.3570125102996826
    3. '   ' → logprob: -3.3570125102996826
    4. '    
' → logprob: -3.8570125102996826
    5. '' → logprob: -4.107012748718262
    6. '\' → logprob: -4.232012748718262
    7. ' 
' → logprob: -5.107012748718262
    8. '  
' → logprob: -5.107012748718262
    9. 'newline' → logprob: -5.232012748718262
    10. ' ' → logprob: -6.357012748718262

Token 32: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3982612192630768
    2. '
' → logprob: -1.1482611894607544
    3. ' for' → logprob: -5.148261070251465
    4. '```' → logprob: -6.648261070251465
    5. 'for' → logprob: -6.773261070251465
    6. ' stack' → logprob: -7.148261070251465
    7. '    
' → logprob: -7.273261070251465
    8. 'import' → logprob: -7.523261070251465
    9. ' queue' → logprob: -8.773261070251465
    10. ' ' → logprob: -9.523261070251465

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019169762963429093
    2. '=' → logprob: -7.001916885375977
    3. '[' → logprob: -7.126916885375977
    4. ' ' → logprob: -9.001916885375977
    5. ')' → logprob: -10.876916885375977
    6. '<|end|>' → logprob: -11.376916885375977
    7. '[]' → logprob: -11.751916885375977
    8. ']' → logprob: -11.876916885375977
    9. '[:]' → logprob: -11.876916885375977
    10. '  ' → logprob: -12.251916885375977

Token 34: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12743963301181793
    2. '[' → logprob: -2.1274397373199463
    3. ' set' → logprob: -7.627439498901367
    4. 'set' → logprob: -11.127439498901367
    5. ' ' → logprob: -11.627439498901367
    6. '[n' → logprob: -14.502439498901367
    7. '   ' → logprob: -15.502439498901367
    8. '[int' → logprob: -17.127439498901367
    9. '[node' → logprob: -17.377439498901367
    10. '[s' → logprob: -17.502439498901367

Token 35: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005530327325686812
    2. ' False' → logprob: -7.500553131103516
    3. '(False' → logprob: -18.125553131103516
    4. '0' → logprob: -20.375553131103516
    5. '   ' → logprob: -21.000553131103516
    6. '.False' → logprob: -21.875553131103516
    7. '=False' → logprob: -22.750553131103516
    8. ']' → logprob: -23.500553131103516
    9. 'True' → logprob: -23.625553131103516
    10. '_false' → logprob: -23.625553131103516

Token 36: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001249925117008388
    2. ' ]' → logprob: -9.00012493133545
    3. '']' → logprob: -13.75012493133545
    4. '   ' → logprob: -15.62512493133545
    5. ']*' → logprob: -15.62512493133545
    6. '`]' → logprob: -16.375125885009766
    7. ' ' → logprob: -16.750125885009766
    8. ']
' → logprob: -17.375125885009766
    9. '```' → logprob: -17.375125885009766
    10. ')' → logprob: -17.875125885009766

Token 37: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9414747953414917
    2. ' ' → logprob: -1.3164747953414917
    3. '[' → logprob: -1.8164747953414917
    4. ')' → logprob: -2.4414749145507812
    5. ' ]' → logprob: -3.3164749145507812
    6. '  ' → logprob: -3.9414749145507812
    7. '<|end|>' → logprob: -4.691474914550781
    8. '[]' → logprob: -4.816474914550781
    9. '   ' → logprob: -4.941474914550781
    10. ' )' → logprob: -5.816474914550781

Token 38: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.575940728187561
    2. ' n' → logprob: -0.825940728187561
    3. '	n' → logprob: -13.70094108581543
    4. ' ' → logprob: -15.57594108581543
    5. ')n' → logprob: -18.57594108581543
    6. '_n' → logprob: -18.82594108581543
    7. '(n' → logprob: -18.82594108581543
    8. '   ' → logprob: -18.95094108581543
    9. ' н' → logprob: -19.57594108581543
    10. '  ' → logprob: -19.95094108581543

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00046796895912848413
    2. '    
' → logprob: -9.125468254089355
    3. '   ' → logprob: -9.625468254089355
    4. '' → logprob: -9.625468254089355
    5. '
' → logprob: -9.625468254089355
    6. ' 
' → logprob: -10.000468254089355
    7. '  
' → logprob: -10.000468254089355
    8. '\n' → logprob: -10.000468254089355
    9. '   
' → logprob: -11.875468254089355
    10. '```' → logprob: -12.250468254089355

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09886636584997177
    2. '   ' → logprob: -2.4738664627075195
    3. '    
' → logprob: -4.9738664627075195
    4. ' 
' → logprob: -6.9738664627075195
    5. '  
' → logprob: -7.3488664627075195
    6. '\n' → logprob: -7.5988664627075195
    7. ' for' → logprob: -8.59886646270752
    8. '   
' → logprob: -8.59886646270752
    9. '' → logprob: -8.84886646270752
    10. 'for' → logprob: -9.22386646270752

Token 41: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07624375820159912
    2. ' for' → logprob: -2.9512438774108887
    3. '   ' → logprob: -3.9512438774108887
    4. '
' → logprob: -7.451243877410889
    5. 'while' → logprob: -7.576243877410889
    6. '    
' → logprob: -8.45124340057373
    7. ' while' → logprob: -8.57624340057373
    8. 'r' → logprob: -9.82624340057373
    9. ' ' → logprob: -9.95124340057373
    10. 'q' → logprob: -10.07624340057373

Token 42: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06319247931241989
    2. ' i' → logprob: -2.813192367553711
    3. ' _' → logprob: -6.938192367553711
    4. ' ‌' → logprob: -9.813192367553711
    5. ' v' → logprob: -10.188192367553711
    6. ' space' → logprob: -10.438192367553711
    7. '_' → logprob: -10.563192367553711
    8. ' node' → logprob: -10.938192367553711
    9. ' ```' → logprob: -10.938192367553711
    10. ' ▁' → logprob: -11.063192367553711

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022462252527475357
    2. ' ' → logprob: -4.147462368011475
    3. ' i' → logprob: -5.397462368011475
    4. 'in' → logprob: -6.397462368011475
    5. '  ' → logprob: -9.147461891174316
    6. 'n' → logprob: -10.022461891174316
    7. 's' → logprob: -11.397461891174316
    8. 'i' → logprob: -11.522461891174316
    9. '	in' → logprob: -11.897461891174316
    10. ' ```' → logprob: -12.397461891174316

Token 44: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0380699522793293
    2. 'range' → logprob: -3.2880699634552
    3. ' ran' → logprob: -11.413069725036621
    4. 'rang' → logprob: -12.663069725036621
    5. ' rang' → logprob: -12.663069725036621
    6. ' r' → logprob: -13.163069725036621
    7. ' ra' → logprob: -13.163069725036621
    8. '	range' → logprob: -13.538069725036621
    9. '(range' → logprob: -13.663069725036621
    10. 'ran' → logprob: -13.788069725036621

Token 45: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009442024864256382
    2. '(' → logprob: -4.75944185256958
    3. ' (' → logprob: -7.38444185256958
    4. ' n' → logprob: -8.509442329406738
    5. 'n' → logprob: -12.634442329406738
    6. ' ' → logprob: -14.259442329406738
    7. '(s' → logprob: -15.634442329406738
    8. '(
' → logprob: -15.759442329406738
    9. ')' → logprob: -16.009441375732422
    10. '(len' → logprob: -16.509441375732422

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021653673611581326
    2. ')' → logprob: -6.7521653175354
    3. ' ):' → logprob: -7.0021653175354
    4. ':' → logprob: -10.127165794372559
    5. '):
' → logprob: -10.252165794372559
    6. ' )' → logprob: -12.627165794372559
    7. '-' → logprob: -13.377165794372559
    8. '   ' → logprob: -13.502165794372559
    9. ' ' → logprob: -13.627165794372559
    10. ',' → logprob: -14.752165794372559

Token 47: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7416186332702637
    2. '    ' → logprob: -0.8666186332702637
    3. '   ' → logprob: -2.8666186332702637
    4. ' 
' → logprob: -4.116618633270264
    5. '    
' → logprob: -4.241618633270264
    6. '     
' → logprob: -5.116618633270264
    7. '  ' → logprob: -5.491618633270264
    8. '<|end|>' → logprob: -6.366618633270264
    9. '       ' → logprob: -7.366618633270264
    10. ' i' → logprob: -8.116619110107422

Token 48: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.47434842586517334
    2. 'u' (adapté à ' u') → logprob: -0.9743484258651733
    3. '   ' → logprob: -9.599348068237305
    4. 'min' → logprob: -9.849348068237305
    5. ' min' → logprob: -9.849348068237305
    6. ' 
' → logprob: -10.224348068237305
    7. '    ' → logprob: -10.599348068237305
    8. '    
' → logprob: -10.849348068237305
    9. ' ' → logprob: -11.849348068237305
    10. '     
' → logprob: -12.724348068237305

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.182361900806427
    2. '=' → logprob: -2.5573618412017822
    3. ' ' → logprob: -2.6823618412017822
    4. ',' → logprob: -3.9323618412017822
    5. ')' → logprob: -8.182361602783203
    6. '_' → logprob: -8.182361602783203
    7. ' ,' → logprob: -8.307361602783203
    8. 'n' → logprob: -9.057361602783203
    9. '  ' → logprob: -9.432361602783203
    10. 'x' → logprob: -10.057361602783203

Token 50: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.035207245498895645
    2. 'dist' → logprob: -4.035207271575928
    3. 'min' → logprob: -4.160207271575928
    4. 'None' → logprob: -7.410207271575928
    5. ' -' → logprob: -7.535207271575928
    6. '-dist' → logprob: -9.41020679473877
    7. ' min' → logprob: -9.78520679473877
    8. ' dist' → logprob: -11.28520679473877
    9. '0' → logprob: -11.91020679473877
    10. '-min' → logprob: -12.53520679473877

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. 'dist' → logprob: -16.0
    4. 'float' → logprob: -17.5
    5. '-' → logprob: -17.875
    6. '

' → logprob: -18.375
    7. 'inf' → logprob: -18.75
    8. '2' → logprob: -18.875
    9. ' -' → logprob: -19.5
    10. '   ' → logprob: -19.625

Token 52: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003971186000853777
    2. '<|end|>' → logprob: -5.753971099853516
    3. ' 
' → logprob: -8.128971099853516
    4. ',' → logprob: -8.253971099853516
    5. '1' → logprob: -9.128971099853516
    6. ' for' → logprob: -10.003971099853516
    7. '  ' → logprob: -10.753971099853516
    8. ' ,' → logprob: -11.378971099853516
    9. '  
' → logprob: -11.628971099853516
    10. '
' → logprob: -11.878971099853516

Token 53: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13545800745487213
    2. '<|end|>' → logprob: -2.510457992553711
    3. ' 
' → logprob: -3.885457992553711
    4. ' for' → logprob: -4.135457992553711
    5. 'for' → logprob: -6.385457992553711
    6. ',' → logprob: -6.760457992553711
    7. '0' → logprob: -6.885457992553711
    8. '1' → logprob: -6.885457992553711
    9. '
' → logprob: -7.010457992553711
    10. '  
' → logprob: -7.135457992553711

Token 54: ' min' (ID: 1349)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12186715006828308
    2. '0' → logprob: -3.1218671798706055
    3. 'for' → logprob: -3.2468671798706055
    4. ' for' → logprob: -3.6218671798706055
    5. '1' → logprob: -5.9968671798706055
    6. '    ' → logprob: -6.7468671798706055
    7. '<|end|>' → logprob: -7.2468671798706055
    8. '  ' → logprob: -8.496867179870605
    9. ' 
' → logprob: -8.496867179870605
    10. '   ' → logprob: -10.621867179870605

Token 55: '_dist' (ID: 37968)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6961150169372559
    2. '_dist' → logprob: -0.6961150169372559
    3. '_distance' → logprob: -6.696115016937256
    4. '_d' → logprob: -6.821115016937256
    5. 'Dist' → logprob: -8.321115493774414
    6. '_i' → logprob: -8.946115493774414
    7. '_
' → logprob: -9.071115493774414
    8. '_

' → logprob: -9.946115493774414
    9. 'D' → logprob: -10.446115493774414
    10. 'dist' → logprob: -11.071115493774414

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3496008813381195
    2. '=' → logprob: -1.224600911140442
    3. ' ' → logprob: -7.599600791931152
    4. ',' → logprob: -8.099600791931152
    5. '_' → logprob: -8.724600791931152
    6. '<|end|>' → logprob: -9.224600791931152
    7. ')' → logprob: -10.474600791931152
    8. '  ' → logprob: -11.974600791931152
    9. ' ==' → logprob: -12.349600791931152
    10. ':' → logprob: -12.349600791931152

Token 57: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.038042064756155014
    2. ' float' → logprob: -3.2880420684814453
    3. 'flo' → logprob: -15.163042068481445
    4. 'inf' → logprob: -16.413042068481445
    5. '	float' → logprob: -16.663042068481445
    6. '(float' → logprob: -16.913042068481445
    7. 'f' → logprob: -16.913042068481445
    8. 'fl' → logprob: -17.288042068481445
    9. ',float' → logprob: -17.288042068481445
    10. '=float' → logprob: -17.538042068481445

Token 58: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.006726383697241545
    2. '(' → logprob: -5.006726264953613
    3. '("' → logprob: -12.756726264953613
    4. '('(' → logprob: -13.256726264953613
    5. ' ('' → logprob: -13.631726264953613
    6. '(\'' → logprob: -14.131726264953613
    7. ' (' → logprob: -14.256726264953613
    8. '('='' → logprob: -14.506726264953613
    9. '(',' → logprob: -14.756726264953613
    10. '("("' → logprob: -14.881726264953613

Token 59: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ''' → logprob: -18.25
    3. 'in' → logprob: -18.875
    4. '')' → logprob: -19.125
    5. '.inf' → logprob: -19.25
    6. ' inf' → logprob: -19.625
    7. '-inf' → logprob: -20.125
    8. ')' → logprob: -20.625
    9. '```' → logprob: -20.625
    10. '_inf' → logprob: -21.125

Token 60: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017862061504274607
    2. ')
' → logprob: -6.501786231994629
    3. ' )' → logprob: -8.251786231994629
    4. '')' → logprob: -11.126786231994629
    5. ' )
' → logprob: -12.751786231994629
    6. ')
' → logprob: -13.376786231994629
    7. ')

' → logprob: -14.251786231994629
    8. '):
' → logprob: -14.501786231994629
    9. '):' → logprob: -14.751786231994629
    10. '   ' → logprob: -14.751786231994629

Token 61: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03797239810228348
    2. ' 
' → logprob: -4.037972450256348
    3. '<|end|>' → logprob: -4.662972450256348
    4. '  
' → logprob: -5.412972450256348
    5. '        
' → logprob: -6.412972450256348
    6. '       ' → logprob: -6.787972450256348
    7. '
' → logprob: -7.537972450256348
    8. ' for' → logprob: -7.537972450256348
    9. 'for' → logprob: -7.662972450256348
    10. '' → logprob: -7.662972450256348

Token 62: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4169934093952179
    2. ' for' → logprob: -1.6669933795928955
    3. ' ' → logprob: -2.4169933795928955
    4. '<|end|>' → logprob: -3.2919933795928955
    5. ' 
' → logprob: -4.166993618011475
    6. '
' → logprob: -5.416993618011475
    7. '  
' → logprob: -6.041993618011475
    8. '    ' → logprob: -7.541993618011475
    9. '    
' → logprob: -7.541993618011475
    10. '\n' → logprob: -7.666993618011475

Token 63: ' i' (ID: 575)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.03949159011244774
    2. 'v' → logprob: -3.289491653442383
    3. ' i' → logprob: -6.664491653442383
    4. ' j' → logprob: -8.914491653442383
    5. 'i' → logprob: -10.789491653442383
    6. 'j' → logprob: -11.289491653442383
    7. '	v' → logprob: -13.164491653442383
    8. ' ' → logprob: -13.164491653442383
    9. ' u' → logprob: -13.414491653442383
    10. '```' → logprob: -14.914491653442383

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013879513368010521
    2. 'in' → logprob: -4.763879299163818
    3. ' ' → logprob: -5.263879299163818
    4. '<|end|>' → logprob: -10.138879776000977
    5. '  ' → logprob: -11.138879776000977
    6. '	in' → logprob: -12.013879776000977
    7. ' i' → logprob: -12.638879776000977
    8. 'n' → logprob: -12.638879776000977
    9. ',' → logprob: -13.638879776000977
    10. 'range' → logprob: -13.638879776000977

Token 65: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.062010254710912704
    2. 'range' → logprob: -2.8120102882385254
    3. ' ' → logprob: -10.312009811401367
    4. '(range' → logprob: -12.687009811401367
    5. '	range' → logprob: -12.812009811401367
    6. ' xrange' → logprob: -13.937009811401367
    7. ' n' → logprob: -14.062009811401367
    8. ')' → logprob: -14.062009811401367
    9. 'n' → logprob: -14.437009811401367
    10. '   ' → logprob: -16.187009811401367

Token 66: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012598758330568671
    2. '(' → logprob: -6.751259803771973
    3. 'n' → logprob: -10.126259803771973
    4. ' (' → logprob: -10.251259803771973
    5. ' n' → logprob: -11.626259803771973
    6. '(
' → logprob: -13.376259803771973
    7. ')' → logprob: -13.376259803771973
    8. ')n' → logprob: -14.251259803771973
    9. ' ' → logprob: -14.376259803771973
    10. '	n' → logprob: -14.501259803771973

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017988269682973623
    2. '):
' → logprob: -6.501798629760742
    3. ' ):' → logprob: -8.376798629760742
    4. ':' → logprob: -10.501798629760742
    5. ')' → logprob: -10.876798629760742
    6. '       ' → logprob: -11.501798629760742
    7. '):
' → logprob: -12.626798629760742
    8. '   ' → logprob: -13.001798629760742
    9. ' ):
' → logprob: -14.001798629760742
    10. '):

' → logprob: -14.126798629760742

Token 68: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8089819550514221
    2. ':' → logprob: -1.6839818954467773
    3. '           ' → logprob: -1.9339818954467773
    4. '<|end|>' → logprob: -2.5589818954467773
    5. ' if' → logprob: -2.8089818954467773
    6. '       ' → logprob: -3.4339818954467773
    7. '        ' → logprob: -4.183981895446777
    8. 'if' → logprob: -4.683981895446777
    9. ' :' → logprob: -5.058981895446777
    10. '            ' → logprob: -5.058981895446777

Token 69: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1569385677576065
    2. ' if' → logprob: -2.1569385528564453
    3. 'if' (adapté à ' if') → logprob: -4.281938552856445
    4. '<|end|>' → logprob: -4.406938552856445
    5. ' 
' → logprob: -6.656938552856445
    6. ' not' → logprob: -7.531938552856445
    7. '    ' → logprob: -8.031938552856445
    8. '        ' → logprob: -8.906938552856445
    9. '           ' → logprob: -9.031938552856445
    10. ' )' → logprob: -9.156938552856445

Token 70: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.008678389713168144
    2. 'not' → logprob: -4.758678436279297
    3. ' no' → logprob: -10.258678436279297
    4. ' n' → logprob: -11.508678436279297
    5. '	not' → logprob: -12.133678436279297
    6. 'n' → logprob: -12.258678436279297
    7. '(not' → logprob: -12.883678436279297
    8. ' visited' → logprob: -13.008678436279297
    9. ' (' → logprob: -13.258678436279297
    10. ' ' → logprob: -14.508678436279297

Token 71: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.0013261953135952353
    2. 'visited' → logprob: -6.626326084136963
    3. ' ' → logprob: -16.001325607299805
    4. ' visit' → logprob: -16.501325607299805
    5. 'Visited' → logprob: -17.126325607299805
    6. ' visite' → logprob: -17.251325607299805
    7. ' visits' → logprob: -17.501325607299805
    8. ' vis' → logprob: -17.876325607299805
    9. 'vis' → logprob: -19.001325607299805
    10. ' v' → logprob: -19.126325607299805

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.704065213445574e-05
    2. '[' → logprob: -10.000046730041504
    3. '[u' → logprob: -13.750046730041504
    4. ' [' → logprob: -15.125046730041504
    5. '[
' → logprob: -16.00004768371582
    6. '[I' → logprob: -16.87504768371582
    7. '```' → logprob: -17.37504768371582
    8. ']' → logprob: -17.75004768371582
    9. ' and' → logprob: -18.37504768371582
    10. '[a' → logprob: -19.00004768371582

Token 73: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003823349252343178
    2. 'and' → logprob: -5.878823280334473
    3. ')' → logprob: -7.128823280334473
    4. ' ' → logprob: -9.128823280334473
    5. ' )' → logprob: -9.503823280334473
    6. ' a' → logprob: -10.878823280334473
    7. ']' → logprob: -12.128823280334473
    8. 'a' → logprob: -12.253823280334473
    9. ' an' → logprob: -12.878823280334473
    10. ' ]' → logprob: -13.878823280334473

Token 74: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003227860201150179
    2. 'and' → logprob: -5.753227710723877
    3. ' ' → logprob: -10.003228187561035
    4. ' a' → logprob: -12.753228187561035
    5. ' an' → logprob: -14.128228187561035
    6. 'a' → logprob: -14.253228187561035
    7. '    ' → logprob: -15.253228187561035
    8. '	and' → logprob: -16.25322723388672
    9. ' ' → logprob: -16.50322723388672
    10. '        ' → logprob: -16.50322723388672

Token 75: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.34847280383110046
    2. 'dist' → logprob: -1.2234728336334229
    3. '(dist' → logprob: -10.973472595214844
    4. '	dist' → logprob: -11.848472595214844
    5. '   ' → logprob: -13.723472595214844
    6. ' ' → logprob: -14.098472595214844
    7. 'd' → logprob: -14.723472595214844
    8. '```' → logprob: -15.098472595214844
    9. '_dist' → logprob: -15.348472595214844
    10. '                           ' → logprob: -15.598472595214844

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011762974318116903
    2. '[' → logprob: -6.751176357269287
    3. '[
' → logprob: -12.626175880432129
    4. 'i' → logprob: -13.751175880432129
    5. '[I' → logprob: -14.501175880432129
    6. '```' → logprob: -14.751175880432129
    7. '[u' → logprob: -15.251175880432129
    8. ' i' → logprob: -15.251175880432129
    9. ' [' → logprob: -16.376176834106445
    10. ' ' → logprob: -17.751176834106445

Token 77: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.015042947605252266
    2. '<' → logprob: -4.265042781829834
    3. ' ' → logprob: -7.640042781829834
    4. ']' → logprob: -8.015043258666992
    5. '<|end|>' → logprob: -11.140043258666992
    6. ')' → logprob: -11.265043258666992
    7. ' ]' → logprob: -12.140043258666992
    8. '[' → logprob: -12.140043258666992
    9. ']<' → logprob: -12.140043258666992
    10. '<int' → logprob: -12.515043258666992

Token 78: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00976801197975874
    2. '<' → logprob: -4.634768009185791
    3. ' ' → logprob: -12.00976848602295
    4. '<|end|>' → logprob: -13.13476848602295
    5. ' <
' → logprob: -13.13476848602295
    6. ' <",' → logprob: -14.75976848602295
    7. '<int' → logprob: -14.75976848602295
    8. '<class' → logprob: -15.63476848602295
    9. ' \<' → logprob: -16.009767532348633
    10. '<n' → logprob: -16.384767532348633

Token 79: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20152053236961365
    2. ' min' → logprob: -1.701520562171936
    3. 'm' → logprob: -9.326520919799805
    4. ' m' → logprob: -11.201520919799805
    5. ' ' → logprob: -12.826520919799805
    6. '	min' → logprob: -14.201520919799805
    7. 'mi' → logprob: -14.826520919799805
    8. '_min' → logprob: -16.201520919799805
    9. '=min' → logprob: -16.201520919799805
    10. 'mini' → logprob: -16.326520919799805

Token 80: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.027569802477955818
    2. '_' → logprob: -3.6525697708129883
    3. 'ist' → logprob: -7.152569770812988
    4. '_
' → logprob: -8.402569770812988
    5. ' _' → logprob: -9.152569770812988
    6. '_

' → logprob: -10.277569770812988
    7. '_i' → logprob: -10.652569770812988
    8. '_dis' → logprob: -11.527569770812988
    9. '_st' → logprob: -11.652569770812988
    10. '[i' → logprob: -11.902569770812988

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0041166311129927635
    2. ':
' → logprob: -5.504116535186768
    3. '               ' → logprob: -10.879117012023926
    4. '           ' → logprob: -11.629117012023926
    5. '):' → logprob: -12.504117012023926
    6. 'u' → logprob: -13.254117012023926
    7. '):
' → logprob: -14.129117012023926
    8. '       ' → logprob: -14.129117012023926
    9. ':

' → logprob: -14.379117012023926
    10. ':u' → logprob: -14.504117012023926

Token 82: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13578996062278748
    2. ':
' → logprob: -2.3857898712158203
    3. '               ' → logprob: -3.5107898712158203
    4. '           ' → logprob: -5.63578987121582
    5. 'u' → logprob: -8.26078987121582
    6. ' :' → logprob: -8.88578987121582
    7. ' :
' → logprob: -8.88578987121582
    8. '                   ' → logprob: -9.13578987121582
    9. '):
' → logprob: -9.26078987121582
    10. '       ' → logprob: -9.26078987121582

Token 83: ' min' (ID: 1349)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6847238540649414
    2. 'u' → logprob: -1.1847238540649414
    3. ' 
' → logprob: -2.0597238540649414
    4. '               ' → logprob: -3.9347238540649414
    5. '                   ' → logprob: -4.059723854064941
    6. '                    
' → logprob: -4.184723854064941
    7. '                ' → logprob: -5.934723854064941
    8. ' ' → logprob: -6.184723854064941
    9. '                
' → logprob: -6.434723854064941
    10. '
' → logprob: -6.809723854064941

Token 84: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.014433437027037144
    2. '_' → logprob: -4.38943338394165
    3. ' _' → logprob: -7.51443338394165
    4. '_i' → logprob: -8.014433860778809
    5. '_
' → logprob: -8.764433860778809
    6. '[i' → logprob: -8.764433860778809
    7. '_d' → logprob: -8.889433860778809
    8. '               ' → logprob: -9.014433860778809
    9. '_distance' → logprob: -9.639433860778809
    10. '```' → logprob: -10.014433860778809

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07937616854906082
    2. '=' → logprob: -2.579376220703125
    3. '=i' → logprob: -7.954376220703125
    4. ' =
' → logprob: -10.079376220703125
    5. ' ' → logprob: -10.079376220703125
    6. '[i' → logprob: -10.954376220703125
    7. '=

' → logprob: -12.329376220703125
    8. ',' → logprob: -12.329376220703125
    9. '    ' → logprob: -12.704376220703125
    10. ' ==' → logprob: -13.079376220703125

Token 86: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.018153805285692215
    2. 'dist' → logprob: -4.018153667449951
    3. '	dist' → logprob: -13.51815414428711
    4. ' ' → logprob: -13.89315414428711
    5. ' ' → logprob: -14.14315414428711
    6. '(dist' → logprob: -14.26815414428711
    7. '_dist' → logprob: -15.89315414428711
    8. 'd' → logprob: -16.64315414428711
    9. 'Dist' → logprob: -17.14315414428711
    10. ' d' → logprob: -17.14315414428711

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10031525045633316
    2. '[' → logprob: -2.3503153324127197
    3. '[
' → logprob: -9.72531509399414
    4. ' [' → logprob: -11.22531509399414
    5. '[u' → logprob: -11.47531509399414
    6. ' ' → logprob: -11.72531509399414
    7. '```' → logprob: -11.97531509399414
    8. '[I' → logprob: -12.97531509399414
    9. 'i' → logprob: -14.10031509399414
    10. '[`' → logprob: -14.35031509399414

Token 88: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03445545956492424
    2. '           ' → logprob: -4.284455299377441
    3. ')' → logprob: -4.409455299377441
    4. ']' → logprob: -6.159455299377441
    5. ',' → logprob: -6.409455299377441
    6. '
' → logprob: -7.409455299377441
    7. '                   ' → logprob: -7.409455299377441
    8. ' and' → logprob: -7.534455299377441
    9. '<|end|>' → logprob: -7.909455299377441
    10. '              ' → logprob: -8.284455299377441

Token 89: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26769518852233887
    2. '                
' → logprob: -2.392695188522339
    3. 'u' → logprob: -2.517695188522339
    4. ' 
' → logprob: -3.517695188522339
    5. ' u' → logprob: -5.392695426940918
    6. '            
' → logprob: -5.517695426940918
    7. '<|end|>' → logprob: -5.642695426940918
    8. '  
' → logprob: -5.892695426940918
    9. '        
' → logprob: -5.892695426940918
    10. '                ' → logprob: -6.142695426940918

Token 90: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.011050531640648842
    2. ' u' → logprob: -4.511050701141357
    3. '	u' → logprob: -13.0110502243042
    4. '   ' → logprob: -15.3860502243042
    5. '               ' → logprob: -15.3860502243042
    6. '           ' → logprob: -17.386051177978516
    7. ' ' → logprob: -17.511051177978516
    8. '```' → logprob: -18.011051177978516
    9. '       ' → logprob: -18.261051177978516
    10. ' 
' → logprob: -18.511051177978516

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688910007476807
    2. '=' → logprob: -1.136889100074768
    3. ' ' → logprob: -11.636889457702637
    4. ' =
' → logprob: -12.136889457702637
    5. '=i' → logprob: -12.886889457702637
    6. '=u' → logprob: -14.261889457702637
    7. '=

' → logprob: -14.636889457702637
    8. '=
' → logprob: -16.26188850402832
    9. '＝' → logprob: -16.63688850402832
    10. ' =
' → logprob: -17.38688850402832

Token 92: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3868734836578369
    2. ' i' → logprob: -1.136873483657837
    3. ' ' → logprob: -13.261873245239258
    4. '	i' → logprob: -14.761873245239258
    5. ' 
' → logprob: -16.136873245239258
    6. ' ' → logprob: -16.386873245239258
    7. '```' → logprob: -17.511873245239258
    8. ' `' → logprob: -17.636873245239258
    9. '_i' → logprob: -18.136873245239258
    10. '
' → logprob: -18.386873245239258

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019119352102279663
    2. '        
' → logprob: -4.8941192626953125
    3. '       ' → logprob: -5.2691192626953125
    4. ' 
' → logprob: -6.0191192626953125
    5. '  
' → logprob: -6.3941192626953125
    6. '    
' → logprob: -6.8941192626953125
    7. '' → logprob: -7.5191192626953125
    8. '
' → logprob: -8.769119262695312
    9. '   
' → logprob: -8.769119262695312
    10. '\n' → logprob: -9.269119262695312

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9229347109794617
    2. '
' → logprob: -1.0479347705841064
    3. ' 
' → logprob: -2.0479347705841064
    4. '        
' → logprob: -2.5479347705841064
    5. '  
' → logprob: -3.9229347705841064
    6. '    
' → logprob: -4.422934532165527
    7. '   
' → logprob: -5.672934532165527
    8. '\n' → logprob: -6.047934532165527
    9. '<|end|>' → logprob: -6.672934532165527
    10. '   ' → logprob: -6.922934532165527

Token 95: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.24434617161750793
    2. '       ' → logprob: -1.9943461418151855
    3. '        
' → logprob: -2.9943461418151855
    4. '
' → logprob: -4.2443461418151855
    5. '    
' → logprob: -5.6193461418151855
    6. '  
' → logprob: -5.8693461418151855
    7. 'visited' → logprob: -5.9943461418151855
    8. '   
' → logprob: -6.2443461418151855
    9. ' visited' → logprob: -6.6193461418151855
    10. '       
' → logprob: -6.8693461418151855

Token 96: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.0032029079739004374
    2. 'u' → logprob: -5.75320291519165
    3. ' ' → logprob: -10.878202438354492
    4. ' ' → logprob: -12.753202438354492
    5. ' 
' → logprob: -13.753202438354492
    6. '	u' → logprob: -13.878202438354492
    7. '   ' → logprob: -14.628202438354492
    8. '  ' → logprob: -14.753202438354492
    9. ' visited' → logprob: -15.628202438354492
    10. '    ' → logprob: -16.253202438354492

Token 97: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.26272058486938477
    2. '==' → logprob: -1.5127205848693848
    3. '==-' → logprob: -5.012720584869385
    4. '=' → logprob: -5.637720584869385
    5. ')==' → logprob: -9.137720108032227
    6. ' ' → logprob: -9.137720108032227
    7. ')' → logprob: -9.637720108032227
    8. 'is' → logprob: -9.637720108032227
    9. ' =' → logprob: -10.137720108032227
    10. ' is' → logprob: -10.262720108032227

Token 98: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06197451800107956
    2. ' -' → logprob: -2.81197452545166
    3. ' ' → logprob: -12.18697452545166
    4. '-
' → logprob: -14.06197452545166
    5. '-u' → logprob: -14.56197452545166
    6. '-n' → logprob: -15.93697452545166
    7. '   ' → logprob: -16.811973571777344
    8. ' -
' → logprob: -16.936973571777344
    9. '```' → logprob: -17.061973571777344
    10. '-i' → logprob: -17.061973571777344

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -17.625
    4. '   ' → logprob: -18.3125
    5. '  ' → logprob: -19.0
    6. '

' → logprob: -20.0625
    7. '2' → logprob: -20.125
    8. '-' → logprob: -20.5
    9. '
' → logprob: -20.5
    10. '１' → logprob: -20.75

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02645263634622097
    2. '       ' → logprob: -4.026452541351318
    3. '           ' → logprob: -5.526452541351318
    4. ':
' → logprob: -5.526452541351318
    5. '   ' → logprob: -8.651453018188477
    6. ' :' → logprob: -10.276453018188477
    7. ' break' → logprob: -10.526453018188477
    8. ':return' → logprob: -11.026453018188477
    9. '               ' → logprob: -11.651453018188477
    10. '	break' → logprob: -11.901453018188477

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003191501135006547
    2. '       ' → logprob: -6.1281914710998535
    3. ' break' → logprob: -7.1281914710998535
    4. 'break' → logprob: -9.378191947937012
    5. '               ' → logprob: -10.253191947937012
    6. '   ' → logprob: -10.753191947937012
    7. '		' → logprob: -11.003191947937012
    8. '	break' → logprob: -11.378191947937012
    9. '          ' → logprob: -11.503191947937012
    10. '            
' → logprob: -12.378191947937012

Token 102: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36906135082244873
    2. ' break' → logprob: -1.8690613508224487
    3. 'break' (adapté à ' break') → logprob: -2.2440614700317383
    4. '       ' → logprob: -3.2440614700317383
    5. '               ' → logprob: -5.369061470031738
    6. '        
' → logprob: -6.244061470031738
    7. '
' → logprob: -7.369061470031738
    8. '   ' → logprob: -7.619061470031738
    9. '	break' → logprob: -7.869061470031738
    10. '            
' → logprob: -7.994061470031738

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007614674977958202
    2. '       ' → logprob: -5.382614612579346
    3. '        
' → logprob: -6.507614612579346
    4. ' 
' → logprob: -6.882614612579346
    5. '  
' → logprob: -9.007615089416504
    6. '<|end|>' → logprob: -9.257615089416504
    7. '    
' → logprob: -9.382615089416504
    8. '' → logprob: -9.882615089416504
    9. '
' → logprob: -10.007615089416504
    10. '\n' → logprob: -10.882615089416504

Token 104: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05342428758740425
    2. '       ' → logprob: -3.17842435836792
    3. '<|end|>' → logprob: -5.67842435836792
    4. '        
' → logprob: -6.05342435836792
    5. ' 
' → logprob: -6.80342435836792
    6. '    
' → logprob: -7.17842435836792
    7. '  
' → logprob: -7.30342435836792
    8. '   ' → logprob: -7.67842435836792
    9. '' → logprob: -7.80342435836792
    10. ' visited' → logprob: -7.92842435836792

Token 105: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.5706295371055603
    2. '       ' → logprob: -2.070629596710205
    3. ' visited' → logprob: -2.195629596710205
    4. '
' → logprob: -2.320629596710205
    5. '   ' → logprob: -3.195629596710205
    6. '        
' → logprob: -3.445629596710205
    7. ' 
' → logprob: -3.945629596710205
    8. '    
' → logprob: -5.320629596710205
    9. '  
' → logprob: -7.570629596710205
    10. '   
' → logprob: -7.945629596710205

Token 106: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.7610454708337784e-05
    2. '[' → logprob: -10.500027656555176
    3. '[user' → logprob: -18.50002670288086
    4. '[i' → logprob: -18.87502670288086
    5. 'u' → logprob: -19.00002670288086
    6. '	u' → logprob: -20.37502670288086
    7. '```' → logprob: -20.62502670288086
    8. '[s' → logprob: -20.87502670288086
    9. '[v' → logprob: -21.12502670288086
    10. '[I' → logprob: -21.62502670288086

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0445127372804563e-05
    2. ' ]' → logprob: -11.75001049041748
    3. ']=' → logprob: -13.12501049041748
    4. ' =' → logprob: -15.37501049041748
    5. '=' → logprob: -16.125009536743164
    6. ']
' → logprob: -16.375009536743164
    7. '   ' → logprob: -17.125009536743164
    8. '']' → logprob: -18.125009536743164
    9. '=True' → logprob: -18.125009536743164
    10. '`]' → logprob: -18.875009536743164

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008615635335445404
    2. '=' → logprob: -4.758615493774414
    3. '=True' → logprob: -14.258615493774414
    4. ' ' → logprob: -15.008615493774414
    5. ' =
' → logprob: -16.633615493774414
    6. ']' → logprob: -16.883615493774414
    7. ')' → logprob: -17.133615493774414
    8. '  ' → logprob: -17.508615493774414
    9. ' |=' → logprob: -17.758615493774414
    10. '   ' → logprob: -18.133615493774414

Token 109: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868713676929474
    2. ' True' → logprob: -1.136871337890625
    3. ' Tru' → logprob: -15.886871337890625
    4. ' ' → logprob: -16.261871337890625
    5. 'Tr' → logprob: -16.386871337890625
    6. 'T' → logprob: -17.136871337890625
    7. '(True' → logprob: -18.386871337890625
    8. '=True' → logprob: -18.511871337890625
    9. '1' → logprob: -20.386871337890625
    10. ' T' → logprob: -20.386871337890625

Token 110: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.776550829410553
    2. '<|end|>' → logprob: -1.1515507698059082
    3. '
' → logprob: -1.7765507698059082
    4. '   ' → logprob: -4.276550769805908
    5. ' for' → logprob: -4.401550769805908
    6. '        
' → logprob: -4.526550769805908
    7. '    
' → logprob: -4.901550769805908
    8. 'for' → logprob: -6.151550769805908
    9. '  
' → logprob: -6.526550769805908
    10. ' 
' → logprob: -6.776550769805908

Token 111: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41255587339401245
    2. ' for' → logprob: -1.5375559329986572
    3. 'for' → logprob: -2.9125559329986572
    4. '<|end|>' → logprob: -3.7875559329986572
    5. '
' → logprob: -4.037555694580078
    6. '	for' → logprob: -4.537555694580078
    7. '    
' → logprob: -4.662555694580078
    8. '       ' → logprob: -5.162555694580078
    9. ' 
' → logprob: -7.287555694580078
    10. '        
' → logprob: -8.162555694580078

Token 112: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10302874445915222
    2. ' for' → logprob: -2.3530287742614746
    3. '   ' → logprob: -6.103028774261475
    4. '       ' → logprob: -7.478028774261475
    5. ' ' → logprob: -11.478028297424316
    6. '	for' → logprob: -12.478028297424316
    7. '  ' → logprob: -13.728028297424316
    8. '
' → logprob: -14.978028297424316
    9. '    
' → logprob: -15.103028297424316
    10. '        
' → logprob: -15.103028297424316

Token 113: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.31328123807907104
    2. 'v' → logprob: -1.3132812976837158
    3. '	v' → logprob: -11.563281059265137
    4. '(v' → logprob: -12.188281059265137
    5. '```' → logprob: -12.688281059265137
    6. '``' → logprob: -15.438281059265137
    7. 'w' → logprob: -15.688281059265137
    8. ' ' → logprob: -15.688281059265137
    9. '[v' → logprob: -15.813281059265137
    10. '   ' → logprob: -15.813281059265137

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1879022717475891
    2. ' in' → logprob: -1.8129022121429443
    3. ' ,' → logprob: -5.062902450561523
    4. 'in' → logprob: -6.687902450561523
    5. '<|end|>' → logprob: -8.062902450561523
    6. ',v' → logprob: -9.062902450561523
    7. ',in' → logprob: -10.187902450561523
    8. ',n' → logprob: -11.312902450561523
    9. '```' → logprob: -11.437902450561523
    10. ' ' → logprob: -11.687902450561523

Token 115: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.6401060819625854
    2. 'w' → logprob: -1.1401060819625854
    3. ' weight' → logprob: -2.515106201171875
    4. 'weight' → logprob: -2.640106201171875
    5. ' cost' → logprob: -8.140106201171875
    6. '   ' → logprob: -8.390106201171875
    7. 'cost' → logprob: -8.765106201171875
    8. 'wt' → logprob: -10.890106201171875
    9. 'weig' → logprob: -10.890106201171875
    10. ' ' → logprob: -11.140106201171875

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0037564942613244057
    2. 'in' → logprob: -5.628756523132324
    3. ' ' → logprob: -9.253756523132324
    4. ',' → logprob: -10.128756523132324
    5. '<|end|>' → logprob: -11.378756523132324
    6. '	in' → logprob: -12.503756523132324
    7. '  ' → logprob: -13.253756523132324
    8. 's' → logprob: -14.128756523132324
    9. ')' → logprob: -14.628756523132324
    10. '   ' → logprob: -14.628756523132324

Token 117: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.07024172693490982
    2. 'graph' → logprob: -2.695241689682007
    3. '	graph' → logprob: -8.445241928100586
    4. ' ' → logprob: -9.820241928100586
    5. 'raph' → logprob: -10.945241928100586
    6. '(graph' → logprob: -11.445241928100586
    7. '```' → logprob: -12.820241928100586
    8. 's' → logprob: -14.445241928100586
    9. 'Graph' → logprob: -14.570241928100586
    10. '<|end|>' → logprob: -14.570241928100586

Token 118: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.676981345459353e-06
    2. 'u' → logprob: -12.250005722045898
    3. '[' → logprob: -14.000005722045898
    4. '[
' → logprob: -17.5000057220459
    5. '```' → logprob: -17.7500057220459
    6. '
' → logprob: -17.8750057220459
    7. '(u' → logprob: -18.1250057220459
    8. ' [' → logprob: -18.6250057220459
    9. '	u' → logprob: -18.8750057220459
    10. ' u' → logprob: -19.1250057220459

Token 119: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.142836794257164
    2. '):' → logprob: -2.017836809158325
    3. ']' → logprob: -9.767836570739746
    4. ']):' → logprob: -10.142836570739746
    5. ':' → logprob: -10.642836570739746
    6. '}:' → logprob: -11.017836570739746
    7. ' ):' → logprob: -12.142836570739746
    8. ')' → logprob: -12.517836570739746
    9. 'items' → logprob: -12.767836570739746
    10. '"]:' → logprob: -12.892836570739746

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19200338423252106
    2. ':' → logprob: -1.8170033693313599
    3. '<|end|>' → logprob: -5.31700325012207
    4. ' ' → logprob: -6.69200325012207
    5. '               ' → logprob: -7.06700325012207
    6. '       ' → logprob: -7.19200325012207
    7. ':
' → logprob: -7.19200325012207
    8. '
' → logprob: -7.44200325012207
    9. '            
' → logprob: -7.81700325012207
    10. '):' → logprob: -7.94200325012207

Token 121: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1996065080165863
    2. ' 
' → logprob: -2.449606418609619
    3. '           ' → logprob: -2.949606418609619
    4. ' if' → logprob: -3.949606418609619
    5. '
' → logprob: -4.199606418609619
    6. ' ' → logprob: -6.324606418609619
    7. '                
' → logprob: -6.699606418609619
    8. '            
' → logprob: -6.824606418609619
    9. '            ' → logprob: -6.949606418609619
    10. 'if' (adapté à ' if') → logprob: -6.949606418609619

Token 122: ' dist' (ID: 3601)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6152887344360352
    2. ' dist' → logprob: -0.8652887344360352
    3. 'dist' → logprob: -3.740288734436035
    4. 'not' → logprob: -4.240288734436035
    5. ' ' → logprob: -8.365288734436035
    6. ' ' → logprob: -9.740288734436035
    7. '	dist' → logprob: -10.115288734436035
    8. '   ' → logprob: -10.615288734436035
    9. ' visited' → logprob: -10.740288734436035
    10. '	not' → logprob: -11.365288734436035

Token 123: '[u' (ID: 48750)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.3134423494338989
    2. '[u' → logprob: -1.313442349433899
    3. '[' → logprob: -8.68844223022461
    4. 'v' → logprob: -12.18844223022461
    5. ' [' → logprob: -13.18844223022461
    6. ' v' → logprob: -13.31344223022461
    7. 'u' → logprob: -14.06344223022461
    8. '	v' → logprob: -14.31344223022461
    9. '[i' → logprob: -15.18844223022461
    10. '[j' → logprob: -15.18844223022461

Token 124: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3500915765762329
    2. '+' → logprob: -1.225091576576233
    3. ']' → logprob: -6.975091457366943
    4. ')' → logprob: -8.225091934204102
    5. ']+' → logprob: -8.350091934204102
    6. ' ' → logprob: -8.975091934204102
    7. ')+' → logprob: -11.225091934204102
    8. ' plus' → logprob: -11.975091934204102
    9. ' ]' → logprob: -12.225091934204102
    10. '}' → logprob: -12.225091934204102

Token 125: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22546295821666718
    2. '+' → logprob: -1.6004629135131836
    3. '+w' → logprob: -10.475462913513184
    4. ' ' → logprob: -11.600462913513184
    5. '>' → logprob: -12.475462913513184
    6. ' !=' → logprob: -13.475462913513184
    7. ' ' → logprob: -13.725462913513184
    8. '!=' → logprob: -13.850462913513184
    9. ' plus' → logprob: -14.100462913513184
    10. ' +
' → logprob: -14.225462913513184

Token 126: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.575939953327179
    2. ' w' → logprob: -0.825939953327179
    3. ' ' → logprob: -15.325940132141113
    4. '	w' → logprob: -15.825940132141113
    5. 'v' → logprob: -16.950939178466797
    6. ' ' → logprob: -17.575939178466797
    7. '```' → logprob: -17.575939178466797
    8. '    ' → logprob: -17.700939178466797
    9. '   ' → logprob: -17.825939178466797
    10. '
' → logprob: -18.200939178466797

Token 127: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.005241702310740948
    2. '<' → logprob: -5.255241870880127
    3. ' ' → logprob: -12.380241394042969
    4. '<|end|>' → logprob: -13.130241394042969
    5. '<int' → logprob: -14.380241394042969
    6. ' ' → logprob: -15.255241394042969
    7. ')' → logprob: -15.630241394042969
    8. '[' → logprob: -16.13024139404297
    9. ' <
' → logprob: -16.38024139404297
    10. ' <",' → logprob: -16.63024139404297

Token 128: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.02324768900871277
    2. 'dist' → logprob: -3.773247718811035
    3. '	dist' → logprob: -13.398247718811035
    4. ' ' → logprob: -14.898247718811035
    5. '(dist' → logprob: -16.02324676513672
    6. ' ' → logprob: -17.39824676513672
    7. '_dist' → logprob: -17.77324676513672
    8. ' 
' → logprob: -17.77324676513672
    9. 'd' → logprob: -18.27324676513672
    10. ' d' → logprob: -18.39824676513672

Token 129: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -17.125
    3. 'v' → logprob: -17.125
    4. '[u' → logprob: -19.0
    5. '][' → logprob: -20.125
    6. '[
' → logprob: -21.875
    7. '```' → logprob: -22.0
    8. '<v' → logprob: -22.125
    9. ' v' → logprob: -22.375
    10. '[w' → logprob: -22.5

Token 130: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.004769853316247463
    2. ':' → logprob: -5.754769802093506
    3. ']:
' → logprob: -7.004769802093506
    4. ']' → logprob: -7.754769802093506
    5. '):' → logprob: -8.379770278930664
    6. '}:' → logprob: -12.004770278930664
    7. ']:
' → logprob: -12.254770278930664
    8. '>:' → logprob: -12.629770278930664
    9. ':
' → logprob: -13.129770278930664
    10. '']:' → logprob: -13.254770278930664

Token 131: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04769180715084076
    2. ':' → logprob: -3.172691822052002
    3. '           ' → logprob: -6.672691822052002
    4. ':
' → logprob: -6.922691822052002
    5. '<|end|>' → logprob: -6.922691822052002
    6. ')' → logprob: -7.672691822052002
    7. '):' → logprob: -8.547691345214844
    8. '              ' → logprob: -8.672691345214844
    9. '):
' → logprob: -9.047691345214844
    10. '                ' → logprob: -9.422691345214844

Token 132: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.1749628484249115
    2. 'dist' (adapté à ' dist') → logprob: -2.1749627590179443
    3. ' ' → logprob: -3.1749627590179443
    4. '                ' → logprob: -6.299962997436523
    5. ' 
' → logprob: -6.674962997436523
    6. '               ' → logprob: -6.799962997436523
    7. '_dist' → logprob: -8.299962997436523
    8. '	dist' → logprob: -8.299962997436523
    9. 'Dist' → logprob: -9.924962997436523
    10. '    ' → logprob: -10.174962997436523

Token 133: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.01818365789949894
    2. '[' → logprob: -4.018183708190918
    3. 'v' → logprob: -10.643183708190918
    4. '[u' → logprob: -12.643183708190918
    5. '[
' → logprob: -13.393183708190918
    6. '[val' → logprob: -13.518183708190918
    7. '```' → logprob: -13.893183708190918
    8. '<|end|>' → logprob: -14.018183708190918
    9. '[var' → logprob: -14.893183708190918
    10. '\[' → logprob: -15.268183708190918

Token 134: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021676832693628967
    2. ' ]' → logprob: -8.500216484069824
    3. ']=' → logprob: -11.750216484069824
    4. '[' → logprob: -13.000216484069824
    5. '=' → logprob: -13.500216484069824
    6. ' =' → logprob: -13.500216484069824
    7. '<|end|>' → logprob: -15.500216484069824
    8. ')' → logprob: -17.12521743774414
    9. '']' → logprob: -17.12521743774414
    10. ' ' → logprob: -17.50021743774414

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01106881070882082
    2. '=' → logprob: -4.511068820953369
    3. ' =
' → logprob: -11.011068344116211
    4. ' ' → logprob: -12.511068344116211
    5. ')' → logprob: -15.511068344116211
    6. ' =)' → logprob: -15.511068344116211
    7. ']' → logprob: -15.886068344116211
    8. '[' → logprob: -16.38606834411621
    9. ' =
' → logprob: -16.51106834411621
    10. '<|end|>' → logprob: -17.01106834411621

Token 136: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.04858975484967232
    2. 'dist' → logprob: -3.0485897064208984
    3. '	dist' → logprob: -13.423589706420898
    4. '(dist' → logprob: -14.923589706420898
    5. ' ' → logprob: -15.548589706420898
    6. ' ' → logprob: -15.798589706420898
    7. 'd' → logprob: -16.0485897064209
    8. ' d' → logprob: -17.1735897064209
    9. '_dist' → logprob: -17.4235897064209
    10. ' dis' → logprob: -17.5485897064209

Token 137: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -8.2994620242971e-06
    2. '[' → logprob: -12.375008583068848
    3. 'u' → logprob: -12.875008583068848
    4. '[v' → logprob: -13.625008583068848
    5. '	u' → logprob: -16.12500762939453
    6. '[
' → logprob: -16.87500762939453
    7. ' [' → logprob: -18.00000762939453
    8. ' u' → logprob: -18.37500762939453
    9. '<u' → logprob: -18.75000762939453
    10. '(u' → logprob: -19.25000762939453

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009132515988312662
    2. ']+' → logprob: -7.250913143157959
    3. '+' → logprob: -9.000913619995117
    4. ' +' → logprob: -10.375913619995117
    5. '[' → logprob: -10.750913619995117
    6. ' ]' → logprob: -10.750913619995117
    7. ' ' → logprob: -13.500913619995117
    8. ')' → logprob: -14.125913619995117
    9. '+]' → logprob: -14.500913619995117
    10. '[v' → logprob: -15.000913619995117

Token 139: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4201851785182953
    2. '+' → logprob: -1.1701852083206177
    3. '+w' → logprob: -3.420185089111328
    4. ' ' → logprob: -11.295185089111328
    5. ' w' → logprob: -11.670185089111328
    6. '[w' → logprob: -11.670185089111328
    7. '[' → logprob: -11.670185089111328
    8. 'w' → logprob: -12.420185089111328
    9. '+t' → logprob: -12.545185089111328
    10. '+r' → logprob: -12.920185089111328

Token 140: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.25193825364112854
    2. ' w' → logprob: -1.5019382238388062
    3. ' ' → logprob: -12.001937866210938
    4. ' ' → logprob: -13.876937866210938
    5. ' 
' → logprob: -14.126937866210938
    6. '```' → logprob: -14.626937866210938
    7. 'v' → logprob: -15.126937866210938
    8. '	w' → logprob: -15.626937866210938
    9. '
' → logprob: -16.126937866210938
    10. '<|end|>' → logprob: -16.876937866210938

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6729264855384827
    2. '<|end|>' → logprob: -0.7979264855384827
    3. '\n' → logprob: -3.422926425933838
    4. ' 
' → logprob: -6.547926425933838
    5. '<|end|>' → logprob: -6.547926425933838
    6. 'return' → logprob: -7.172926425933838
    7. ' return' → logprob: -7.547926425933838
    8. '  
' → logprob: -7.672926425933838
    9. '```' → logprob: -8.047926902770996
    10. 'newline' → logprob: -8.297926902770996

Token 142: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.480489581823349
    2. '<|end|>' → logprob: -1.1054896116256714
    3. '
' → logprob: -3.730489492416382
    4. ' 
' → logprob: -4.730489730834961
    5. ' ' → logprob: -5.480489730834961
    6. 'return' → logprob: -5.605489730834961
    7. '<|end|>' → logprob: -6.230489730834961
    8. '```' → logprob: -6.605489730834961
    9. ' return' → logprob: -6.730489730834961
    10. '  
' → logprob: -7.230489730834961

Token 143: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023363111540675163
    2. ' return' → logprob: -3.8983631134033203
    3. '   ' → logprob: -6.77336311340332
    4. 'dist' → logprob: -7.77336311340332
    5. '               ' → logprob: -8.64836311340332
    6. ' ' → logprob: -8.77336311340332
    7. 'r' → logprob: -9.02336311340332
    8. ')' → logprob: -9.02336311340332
    9. '```' → logprob: -9.27336311340332
    10. '
' → logprob: -9.64836311340332

Token 144: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12693262100219727
    2. ' dist' → logprob: -2.1269326210021973
    3. '(dist' → logprob: -12.376932144165039
    4. '	dist' → logprob: -15.501932144165039
    5. '_dist' → logprob: -17.50193214416504
    6. 'Dist' → logprob: -18.87693214416504
    7. '[' → logprob: -19.00193214416504
    8. ' ' → logprob: -19.75193214416504
    9. '```' → logprob: -19.75193214416504
    10. '.dist' → logprob: -19.87693214416504

Token 145: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00012558852904476225
    2. 'True' → logprob: -9.000125885009766
    3. ' Tru' → logprob: -14.125125885009766
    4. ' ' → logprob: -14.375125885009766
    5. '(True' → logprob: -14.500125885009766
    6. ' T' → logprob: -15.625125885009766
    7. '  ' → logprob: -17.250125885009766
    8. '=True' → logprob: -17.375125885009766
    9. ' sys' → logprob: -18.000125885009766
    10. '1' → logprob: -18.250125885009766

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.383526149671525e-05
    2. ':
' → logprob: -10.375053405761719
    3. ' :' → logprob: -11.625053405761719
    4. '():' → logprob: -11.625053405761719
    5. ':**' → logprob: -13.375053405761719
    6. ',' → logprob: -13.500053405761719
    7. '):' → logprob: -14.125053405761719
    8. ':

' → logprob: -15.500053405761719
    9. '.' → logprob: -15.625053405761719
    10. '   ' → logprob: -16.50005340576172

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037121959030628204
    2. ' try' → logprob: -6.253712177276611
    3. ' line' → logprob: -6.378712177276611
    4. 'try' → logprob: -9.87871265411377
    5. '   ' → logprob: -10.87871265411377
    6. ' input' → logprob: -12.62871265411377
    7. 'line' → logprob: -12.62871265411377
    8. 'n' → logprob: -13.37871265411377
    9. '	line' → logprob: -13.50371265411377
    10. ' readline' → logprob: -14.00371265411377

Token 150: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.44574233889579773
    2. ' line' → logprob: -1.0707423686981201
    3. 'n' → logprob: -4.320742130279541
    4. ' n' → logprob: -6.945742130279541
    5. 'try' → logprob: -6.945742130279541
    6. 'l' → logprob: -7.070742130279541
    7. ' try' → logprob: -7.820742130279541
    8. '   ' → logprob: -8.4457426071167
    9. 'input' → logprob: -9.1957426071167
    10. ' l' → logprob: -10.5707426071167

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.69315105676651
    2. ' =' → logprob: -0.69315105676651
    3. '=line' → logprob: -13.318151473999023
    4. 's' → logprob: -13.693151473999023
    5. '_' → logprob: -15.443151473999023
    6. ' =
' → logprob: -16.068151473999023
    7. ' ' → logprob: -16.068151473999023
    8. ' ' → logprob: -16.693151473999023
    9. '.' → logprob: -16.693151473999023
    10. ':' → logprob: -16.818151473999023

Token 152: ' ''
' (ID: 25366)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5843925476074219
    2. ' sys' → logprob: -0.8343925476074219
    3. 'input' → logprob: -4.959392547607422
    4. ' input' → logprob: -6.584392547607422
    5. '=sys' → logprob: -11.084392547607422
    6. '(sys' → logprob: -13.459392547607422
    7. '	sys' → logprob: -13.959392547607422
    8. 's' → logprob: -14.584392547607422
    9. 'stdin' → logprob: -16.459392547607422
    10. '_sys' → logprob: -16.584392547607422

Token 153: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3377879858016968
    2. ' =' → logprob: -2.2127881050109863
    3. 'line' → logprob: -2.2127881050109863
    4. '=line' → logprob: -2.9627881050109863
    5. ' line' → logprob: -5.212788105010986
    6. '   ' → logprob: -5.837788105010986
    7. ' ' → logprob: -5.962788105010986
    8. 'input' → logprob: -6.837788105010986
    9. '.readline' → logprob: -7.087788105010986
    10. 'if' → logprob: -7.712788105010986

Token 154: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.013888328336179256
    2. 'try' → logprob: -4.763888359069824
    3. ' line' → logprob: -5.263888359069824
    4. ' try' → logprob: -10.138888359069824
    5. 'l' → logprob: -11.138888359069824
    6. '   ' → logprob: -11.138888359069824
    7. 'sys' → logprob: -12.138888359069824
    8. 'input' → logprob: -13.138888359069824
    9. 's' → logprob: -13.388888359069824
    10. ' ' → logprob: -13.763888359069824

Token 155: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7229418158531189
    2. 'line' → logprob: -0.9729418158531189
    3. ' not' → logprob: -2.0979418754577637
    4. ' True' → logprob: -4.847941875457764
    5. 'not' → logprob: -5.597941875457764
    6. '(line' → logprob: -6.722941875457764
    7. 'True' → logprob: -6.972941875457764
    8. 'len' → logprob: -9.222941398620605
    9. ' len' → logprob: -9.347941398620605
    10. ' ' → logprob: -10.597941398620605

Token 156: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16964609920978546
    2. '=' → logprob: -3.0446460247039795
    3. ' ==' → logprob: -3.0446460247039795
    4. '.strip' → logprob: -3.1696460247039795
    5. ':=' → logprob: -4.294646263122559
    6. ' =' → logprob: -5.794646263122559
    7. ' :=' → logprob: -6.544646263122559
    8. '!=' → logprob: -8.294646263122559
    9. '.' → logprob: -8.919646263122559
    10. ' !=' → logprob: -9.169646263122559

Token 157: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024146102368831635
    2. '()==' → logprob: -3.77414608001709
    3. '==' → logprob: -7.02414608001709
    4. '=' → logprob: -12.27414608001709
    5. ' ==' → logprob: -12.77414608001709
    6. '()<' → logprob: -14.39914608001709
    7. '()=="' → logprob: -14.39914608001709
    8. '()!=' → logprob: -14.77414608001709
    9. '(' → logprob: -15.27414608001709
    10. '()='' → logprob: -15.52414608001709

Token 158: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.001049242913722992
    2. ' ==' → logprob: -7.126049041748047
    3. '()==' → logprob: -8.376049041748047
    4. '=' → logprob: -12.001049041748047
    5. '()' → logprob: -12.001049041748047
    6. '=='' → logprob: -13.876049041748047
    7. '===' → logprob: -14.626049041748047
    8. '==
' → logprob: -15.001049041748047
    9. '=="' → logprob: -16.001049041748047
    10. ')==' → logprob: -16.376049041748047

Token 159: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.12694060802459717
    2. ''' → logprob: -2.1269407272338867
    3. '"":' → logprob: -12.126940727233887
    4. ''''' → logprob: -13.376940727233887
    5. '""' → logprob: -13.626940727233887
    6. ' '' → logprob: -13.751940727233887
    7. '':' → logprob: -14.001940727233887
    8. '''.' → logprob: -14.251940727233887
    9. ''',' → logprob: -14.751940727233887
    10. ' '':
' → logprob: -14.876940727233887

Token 160: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13148321211338043
    2. ' line' → logprob: -2.756483316421509
    3. 'line' → logprob: -3.256483316421509
    4. ':' → logprob: -4.63148307800293
    5. '       ' → logprob: -4.75648307800293
    6. '	line' → logprob: -7.13148307800293
    7. '=line' → logprob: -7.38148307800293
    8. '(line' → logprob: -8.25648307800293
    9. ':
' → logprob: -8.63148307800293
    10. ' and' → logprob: -8.63148307800293

Token 161: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.027937695384025574
    2. ' line' → logprob: -3.652937650680542
    3. 'try' → logprob: -6.527937889099121
    4. '   ' → logprob: -9.277937889099121
    5. ' try' → logprob: -9.777937889099121
    6. 'l' → logprob: -11.027937889099121
    7. '	line' → logprob: -12.777937889099121
    8. '```' → logprob: -14.152937889099121
    9. ' ' → logprob: -14.527937889099121
    10. 's' → logprob: -15.027937889099121

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328392028808594
    2. '=' → logprob: -1.313283920288086
    3. '=line' → logprob: -11.188283920288086
    4. '=sys' → logprob: -11.813283920288086
    5. 'line' → logprob: -15.188283920288086
    6. ' ' → logprob: -15.188283920288086
    7. '=
' → logprob: -16.563283920288086
    8. '＝' → logprob: -16.688283920288086
    9. '=input' → logprob: -16.813283920288086
    10. '+=' → logprob: -16.938283920288086

Token 163: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02340642735362053
    2. ' sys' → logprob: -3.773406505584717
    3. 'input' → logprob: -8.773406028747559
    4. ' input' → logprob: -13.148406028747559
    5. '=sys' → logprob: -13.273406028747559
    6. '   ' → logprob: -13.898406028747559
    7. '	sys' → logprob: -14.773406028747559
    8. '(sys' → logprob: -14.898406028747559
    9. 's' → logprob: -15.273406028747559
    10. 'stdin' → logprob: -15.398406028747559

Token 164: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002060436672763899
    2. '.' → logprob: -8.625205993652344
    3. '.readline' → logprob: -10.875205993652344
    4. '.stdout' → logprob: -12.250205993652344
    5. 'stdin' → logprob: -13.500205993652344
    6. '.std' → logprob: -13.875205993652344
    7. '.argv' → logprob: -16.125205993652344
    8. '.st' → logprob: -16.750205993652344
    9. '.input' → logprob: -16.875205993652344
    10. '(stdin' → logprob: -16.875205993652344

Token 165: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.5597102396423e-05
    2. '.' → logprob: -10.250035285949707
    3. '.read' → logprob: -16.125036239624023
    4. 'read' → logprob: -17.250036239624023
    5. '.readlines' → logprob: -17.375036239624023
    6. ' readline' → logprob: -18.000036239624023
    7. 'r' → logprob: -20.375036239624023
    8. '.write' → logprob: -21.000036239624023
    9. '```' → logprob: -21.125036239624023
    10. '.
' → logprob: -21.250036239624023

Token 166: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.12258882028982e-05
    2. '().' → logprob: -10.37506103515625
    3. '()
' → logprob: -11.00006103515625
    4. '(' → logprob: -11.75006103515625
    5. '()

' → logprob: -13.25006103515625
    6. '()`' → logprob: -13.37506103515625
    7. '())' → logprob: -14.12506103515625
    8. ' ()' → logprob: -15.62506103515625
    9. '(),' → logprob: -15.75006103515625
    10. '()>' → logprob: -15.87506103515625

Token 167: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16867366433143616
    2. '       ' → logprob: -1.9186736345291138
    3. ' if' → logprob: -5.543673515319824
    4. '    ' → logprob: -6.168673515319824
    5. '.strip' → logprob: -7.793673515319824
    6. 'rstrip' → logprob: -7.793673515319824
    7. ' ' → logprob: -8.043673515319824
    8. 'if' → logprob: -8.293673515319824
    9. '.rstrip' → logprob: -8.293673515319824
    10. '  ' → logprob: -8.793673515319824

Token 168: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20148350298404694
    2. 'if' (adapté à ' if') → logprob: -1.7014834880828857
    3. '
' → logprob: -9.951483726501465
    4. '       ' → logprob: -11.451483726501465
    5. ' not' → logprob: -12.826483726501465
    6. '   ' → logprob: -13.201483726501465
    7. 'If' → logprob: -13.326483726501465
    8. ';if' → logprob: -14.076483726501465
    9. '	if' → logprob: -14.201483726501465
    10. '    ' → logprob: -14.201483726501465

Token 169: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.23445218801498413
    2. ' line' → logprob: -2.234452247619629
    3. 'line' → logprob: -2.859452247619629
    4. 'not' → logprob: -3.109452247619629
    5. ' ' → logprob: -11.359452247619629
    6. '	line' → logprob: -13.484452247619629
    7. '#line' → logprob: -13.484452247619629
    8. ' no' → logprob: -14.359452247619629
    9. '```' → logprob: -14.359452247619629
    10. '  ' → logprob: -14.484452247619629

Token 170: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20144052803516388
    2. ' ==' → logprob: -1.7014405727386475
    3. '=' → logprob: -11.576440811157227
    4. '=='' → logprob: -11.951440811157227
    5. '==
' → logprob: -12.076440811157227
    6. '.strip' → logprob: -12.826440811157227
    7. '===' → logprob: -13.826440811157227
    8. '=="' → logprob: -14.326440811157227
    9. ' ' → logprob: -14.951440811157227
    10. ')==' → logprob: -15.326440811157227

Token 171: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0017295641591772437
    2. ''' → logprob: -6.376729488372803
    3. '""' → logprob: -11.626729965209961
    4. '"":' → logprob: -11.876729965209961
    5. ''\' → logprob: -12.501729965209961
    6. ' '':
' → logprob: -13.376729965209961
    7. ''''' → logprob: -13.501729965209961
    8. ' ''' → logprob: -13.626729965209961
    9. '''
' → logprob: -14.001729965209961
    10. ''',' → logprob: -14.501729965209961

Token 172: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47724631428718567
    2. '       ' → logprob: -0.9772462844848633
    3. '   ' → logprob: -6.352246284484863
    4. ' break' → logprob: -7.352246284484863
    5. ':' → logprob: -8.227246284484863
    6. 'break' → logprob: -8.727246284484863
    7. '	break' → logprob: -9.352246284484863
    8. ',' → logprob: -9.977246284484863
    9. '<|end|>' → logprob: -10.352246284484863
    10. ':
' → logprob: -10.727246284484863

Token 173: ' sys' (ID: 12228)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3070509433746338
    2. ' break' → logprob: -1.5570509433746338
    3. 'exit' → logprob: -3.307050943374634
    4. '       ' → logprob: -4.557050704956055
    5. '           ' → logprob: -5.307050704956055
    6. ' exit' → logprob: -7.682050704956055
    7. 'sys' (adapté à ' sys') → logprob: -8.182050704956055
    8. '   ' → logprob: -8.307050704956055
    9. 'return' → logprob: -8.432050704956055
    10. '	break' → logprob: -8.557050704956055

Token 174: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.17785166203975677
    2. '.stdin' → logprob: -2.302851676940918
    3. '.' → logprob: -3.302851676940918
    4. '.stdout' → logprob: -4.427851676940918
    5. '.e' → logprob: -4.802851676940918
    6. '.argv' → logprob: -5.802851676940918
    7. '.stderr' → logprob: -7.302851676940918
    8. '.quit' → logprob: -7.677851676940918
    9. '.ex' → logprob: -7.927851676940918
    10. '.end' → logprob: -8.552851676940918

Token 175: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31328916549682617
    2. '()' → logprob: -1.3132891654968262
    3. '()
' → logprob: -10.938289642333984
    4. '0' → logprob: -11.938289642333984
    5. '()`' → logprob: -13.688289642333984
    6. '()(' → logprob: -14.188289642333984
    7. '()

' → logprob: -15.188289642333984
    8. '()"' → logprob: -15.313289642333984
    9. '(
' → logprob: -15.688289642333984
    10. '()\' → logprob: -15.813289642333984

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ')' → logprob: -11.25001335144043
    3. ' ' → logprob: -16.00001335144043
    4. ')
' → logprob: -20.75001335144043
    5. ' )' → logprob: -21.62501335144043
    6. '   ' → logprob: -21.87501335144043
    7. '  ' → logprob: -21.87501335144043
    8. '۰' → logprob: -22.50001335144043
    9. '	' → logprob: -23.12501335144043
    10. '  
' → logprob: -23.87501335144043

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3319124011322856e-05
    2. ')
' → logprob: -10.875022888183594
    3. '       ' → logprob: -12.750022888183594
    4. ' )' → logprob: -14.625022888183594
    5. '))' → logprob: -15.125022888183594
    6. '   ' → logprob: -15.125022888183594
    7. ')`' → logprob: -16.000022888183594
    8. '`)' → logprob: -16.625022888183594
    9. '')' → logprob: -16.750022888183594
    10. '())' → logprob: -17.125022888183594

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009656535112299025
    2. 'n' → logprob: -7.750965595245361
    3. '    
' → logprob: -8.37596607208252
    4. ' n' → logprob: -9.12596607208252
    5. ' parts' → logprob: -10.37596607208252
    6. 's' → logprob: -10.75096607208252
    7. ',' → logprob: -11.37596607208252
    8. '       ' → logprob: -11.37596607208252
    9. 'p' → logprob: -11.75096607208252
    10. '  ' → logprob: -11.75096607208252

Token 179: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.22361457347869873
    2. '   ' → logprob: -1.8486145734786987
    3. ' n' → logprob: -3.9736146926879883
    4. 'parts' → logprob: -4.723614692687988
    5. 'N' → logprob: -4.848614692687988
    6. ' parts' → logprob: -5.598614692687988
    7. 'tokens' → logprob: -6.598614692687988
    8. 'm' → logprob: -6.848614692687988
    9. 'a' → logprob: -8.098614692687988
    10. ' tokens' → logprob: -8.598614692687988

Token 180: 'mp' (ID: 2211)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5862976908683777
    2. ',' → logprob: -1.3362977504730225
    3. ' =' → logprob: -1.7112977504730225
    4. ' ,' → logprob: -9.461297988891602
    5. '=int' → logprob: -9.586297988891602
    6. ')' → logprob: -12.336297988891602
    7. ' ' → logprob: -12.586297988891602
    8. ',int' → logprob: -12.836297988891602
    9. ',n' → logprob: -12.961297988891602
    10. '=

' → logprob: -13.211297988891602

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759443640708923
    2. '=' → logprob: -0.8259443640708923
    3. 's' → logprob: -12.700943946838379
    4. ' ' → logprob: -14.575943946838379
    5. '=line' → logprob: -14.575943946838379
    6. ',' → logprob: -15.075943946838379
    7. '_' → logprob: -15.450943946838379
    8. ')' → logprob: -15.575943946838379
    9. '=[]' → logprob: -16.200944900512695
    10. '  ' → logprob: -16.825944900512695

Token 182: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04074937850236893
    2. 'list' → logprob: -3.2907493114471436
    3. ' line' → logprob: -6.040749549865723
    4. ' list' → logprob: -8.040749549865723
    5. '[line' → logprob: -13.290749549865723
    6. 'lin' → logprob: -15.415749549865723
    7. '(line' → logprob: -16.040748596191406
    8. '	line' → logprob: -16.165748596191406
    9. '=line' → logprob: -16.165748596191406
    10. 'li' → logprob: -16.540748596191406

Token 183: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.007460738532245159
    2. '.' → logprob: -5.007460594177246
    3. '.split' → logprob: -7.257460594177246
    4. '.rstrip' → logprob: -10.257460594177246
    5. ' .' → logprob: -12.882460594177246
    6. 'strip' → logprob: -13.007460594177246
    7. '().' → logprob: -15.632460594177246
    8. 'rstrip' → logprob: -17.757461547851562
    9. '.trim' → logprob: -18.257461547851562
    10. 'split' → logprob: -18.257461547851562

Token 184: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.674858301877975e-05
    2. '()' → logprob: -9.250096321105957
    3. '(' → logprob: -15.125096321105957
    4. '().'' → logprob: -16.125097274780273
    5. ' ().' → logprob: -16.500097274780273
    6. '.split' → logprob: -17.125097274780273
    7. '('' → logprob: -17.375097274780273
    8. '()
' → logprob: -17.500097274780273
    9. '.' → logprob: -17.875097274780273
    10. '()

' → logprob: -19.625097274780273

Token 185: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'spl' → logprob: -16.0
    3. ' split' → logprob: -18.375
    4. '(split' → logprob: -19.125
    5. 'plit' → logprob: -19.375
    6. '.split' → logprob: -19.625
    7. 'sp' → logprob: -19.625
    8. 'rstrip' → logprob: -20.375
    9. 'strip' → logprob: -20.625
    10. '_split' → logprob: -22.125

Token 186: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1034965068101883
    2. '('' → logprob: -2.353496551513672
    3. '(' → logprob: -5.728496551513672
    4. '("("' → logprob: -10.978496551513672
    5. '(',' → logprob: -12.978496551513672
    6. '()
' → logprob: -12.978496551513672
    7. '()]' → logprob: -13.103496551513672
    8. '();' → logprob: -13.728496551513672
    9. '(),' → logprob: -13.978496551513672
    10. '("' → logprob: -14.103496551513672

Token 187: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3734529912471771
    2. ' ' → logprob: -1.8734530210494995
    3. '   ' → logprob: -2.87345290184021
    4. '<|end|>' → logprob: -3.12345290184021
    5. 'n' → logprob: -3.99845290184021
    6. '[n' → logprob: -4.373453140258789
    7. '    ' → logprob: -5.248453140258789
    8. '  ' → logprob: -5.498453140258789
    9. '(n' → logprob: -6.123453140258789
    10. ''' → logprob: -6.248453140258789

Token 188: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013308810070157051
    2. ' n' → logprob: -4.513309001922607
    3. ' if' → logprob: -6.763309001922607
    4. 'if' (adapté à ' if') → logprob: -7.388309001922607
    5. '   ' → logprob: -7.638309001922607
    6. '	n' → logprob: -13.51330852508545
    7. 'N' → logprob: -13.76330852508545
    8. '```' → logprob: -15.38830852508545
    9. '    
' → logprob: -15.51330852508545
    10. ' ' → logprob: -17.013309478759766

Token 189: ' len' (ID: 4631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8053141236305237
    2. ' n' → logprob: -1.305314064025879
    3. ' not' → logprob: -1.930314064025879
    4. 'len' → logprob: -2.555314064025879
    5. ' len' → logprob: -2.930314064025879
    6. 'not' → logprob: -5.180314064025879
    7. ' ' → logprob: -9.055314064025879
    8. 'n't' → logprob: -10.555314064025879
    9. '	n' → logprob: -11.430314064025879
    10. '(len' → logprob: -11.555314064025879

Token 190: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04949880763888359
    2. '(' → logprob: -3.0494987964630127
    3. '()' → logprob: -7.549499034881592
    4. 'n' → logprob: -7.924499034881592
    5. '()<' → logprob: -12.799498558044434
    6. '()==' → logprob: -12.799498558044434
    7. ')' → logprob: -12.799498558044434
    8. ' n' → logprob: -12.924498558044434
    9. ')n' → logprob: -12.924498558044434
    10. '<n' → logprob: -13.049498558044434

Token 191: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.023620450869202614
    2. 'm' → logprob: -4.64862060546875
    3. '(mp' → logprob: -5.27362060546875
    4. '_mp' → logprob: -5.77362060546875
    5. ')' → logprob: -6.02362060546875
    6. 'p' → logprob: -6.39862060546875
    7. '_' → logprob: -8.02362060546875
    8. 'MP' → logprob: -8.02362060546875
    9. '	mp' → logprob: -9.14862060546875
    10. ' mp' → logprob: -9.39862060546875

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5941597819328308
    2. ' !=' → logprob: -1.5941598415374756
    3. ' <' → logprob: -1.8441598415374756
    4. '<' → logprob: -2.9691598415374756
    5. '!=' → logprob: -4.2191596031188965
    6. ' ==' → logprob: -4.4691596031188965
    7. '==' → logprob: -5.3441596031188965
    8. ' )' → logprob: -5.7191596031188965
    9. ')<' → logprob: -7.7191596031188965
    10. ')!=' → logprob: -7.9691596031188965

Token 193: ' <' (ID: 464)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5236226916313171
    2. '!=' → logprob: -1.273622751235962
    3. '<' → logprob: -2.523622751235962
    4. ' <' → logprob: -3.148622751235962
    5. '==' → logprob: -5.773622512817383
    6. ' ==' → logprob: -6.523622512817383
    7. '<n' → logprob: -10.648622512817383
    8. '<len' → logprob: -10.648622512817383
    9. ')!=' → logprob: -11.148622512817383
    10. ' ' → logprob: -11.398622512817383

Token 194: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00029840084607712924
    2. ' ' → logprob: -8.250298500061035
    3. '1' → logprob: -10.250298500061035
    4. '4' → logprob: -13.375298500061035
    5. '2' → logprob: -16.00029754638672
    6. '=' → logprob: -17.37529754638672
    7. '```' → logprob: -17.50029754638672
    8. '
' → logprob: -17.87529754638672
    9. ')' → logprob: -18.25029754638672
    10. ' ' → logprob: -18.62529754638672

Token 195: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.4121114822482923e-06
    2. '1' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.875003814697266
    4. '4' → logprob: -15.500003814697266
    5. '
' → logprob: -15.875003814697266
    6. '2' → logprob: -16.375003814697266
    7. '

' → logprob: -17.875003814697266
    8. '```' → logprob: -17.875003814697266
    9. ')' → logprob: -18.812503814697266
    10. '   ' → logprob: -18.937503814697266

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018239378929138184
    2. ':
' → logprob: -4.018239498138428
    3. ' or' → logprob: -9.39323902130127
    4. '   ' → logprob: -12.51823902130127
    5. ':return' → logprob: -13.89323902130127
    6. ' :' → logprob: -14.76823902130127
    7. 'or' → logprob: -15.14323902130127
    8. ':
' → logprob: -15.39323902130127
    9. ':

' → logprob: -15.76823902130127
    10. '       ' → logprob: -16.143239974975586

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007852102862671018
    2. '   ' → logprob: -7.2507853507995605
    3. ' break' → logprob: -9.750784873962402
    4. 'break' → logprob: -11.625784873962402
    5. '           ' → logprob: -12.375784873962402
    6. '	break' → logprob: -13.000784873962402
    7. '```' → logprob: -14.125784873962402
    8. '	   ' → logprob: -15.125784873962402
    9. '     ' → logprob: -16.00078582763672
    10. ' ' → logprob: -16.37578582763672

Token 198: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6740248799324036
    2. 'continue' (adapté à ' continue') → logprob: -1.1740248203277588
    3. 'break' → logprob: -2.299024820327759
    4. '   ' → logprob: -3.424024820327759
    5. ' continue' → logprob: -3.674024820327759
    6. ' break' → logprob: -3.924024820327759
    7. 'sys' → logprob: -6.174025058746338
    8. ' sys' → logprob: -7.299025058746338
    9. '           ' → logprob: -9.04902458190918
    10. ' ' → logprob: -9.67402458190918

Token 199: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47871506214141846
    2. '   ' → logprob: -0.9787150621414185
    3. '    
' → logprob: -5.603714942932129
    4. ' n' → logprob: -7.103714942932129
    5. '
' → logprob: -9.978714942932129
    6. 'N' → logprob: -10.978714942932129
    7. '	n' → logprob: -11.478714942932129
    8. '   
' → logprob: -11.603714942932129
    9. '  
' → logprob: -11.603714942932129
    10. ',n' → logprob: -12.228714942932129

Token 200: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.032436542212963104
    2. ' n' → logprob: -4.032436370849609
    3. '   ' → logprob: -4.282436370849609
    4. '    
' → logprob: -8.53243637084961
    5. ' 
' → logprob: -9.78243637084961
    6. '  
' → logprob: -10.90743637084961
    7. '	n' → logprob: -11.03243637084961
    8. '   
' → logprob: -11.03243637084961
    9. '  ' → logprob: -11.40743637084961
    10. ',' → logprob: -11.65743637084961

Token 201: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.4974866644479334e-05
    2. ' n' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.750015258789062
    4. '```' → logprob: -17.125015258789062
    5. '    
' → logprob: -17.625015258789062
    6. '	n' → logprob: -18.875015258789062
    7. 'N' → logprob: -18.875015258789062
    8. ' 
' → logprob: -19.000015258789062
    9. '`' → logprob: -19.250015258789062
    10. '
' → logprob: -19.500015258789062

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007274442468769848
    2. '=' → logprob: -7.625727653503418
    3. ' =' → logprob: -8.500727653503418
    4. ' ,' → logprob: -11.125727653503418
    5. ',m' → logprob: -11.375727653503418
    6. ',n' → logprob: -12.375727653503418
    7. ',int' → logprob: -13.375727653503418
    8. '=int' → logprob: -13.500727653503418
    9. ',num' → logprob: -14.125727653503418
    10. 'm' → logprob: -15.000727653503418

Token 203: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2812741696834564
    2. ' m' → logprob: -1.4062741994857788
    3. 'M' → logprob: -9.40627384185791
    4. 'int' → logprob: -11.15627384185791
    5. ' M' → logprob: -11.28127384185791
    6. '   ' → logprob: -12.28127384185791
    7. 'mp' → logprob: -12.65627384185791
    8. '  ' → logprob: -13.53127384185791
    9. ' ' → logprob: -13.78127384185791
    10. '<|end|>' → logprob: -14.03127384185791

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019819256849586964
    2. '=' → logprob: -6.626981735229492
    3. ' =' → logprob: -7.376981735229492
    4. ' ,' → logprob: -11.001981735229492
    5. '<|end|>' → logprob: -11.626981735229492
    6. ')' → logprob: -13.001981735229492
    7. ',m' → logprob: -14.126981735229492
    8. '<|end|>' → logprob: -15.251981735229492
    9. '‌,' → logprob: -15.376981735229492
    10. ',n' → logprob: -16.001981735229492

Token 205: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05487110838294029
    2. ' p' → logprob: -3.554871082305908
    3. 'q' → logprob: -4.429871082305908
    4. 's' → logprob: -5.054871082305908
    5. 'k' → logprob: -5.429871082305908
    6. 't' → logprob: -7.554871082305908
    7. ' s' → logprob: -7.554871082305908
    8. 'start' → logprob: -7.929871082305908
    9. ' q' → logprob: -8.054871559143066
    10. ' k' → logprob: -8.804871559143066

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407791018486023
    2. '=' → logprob: -0.9740779399871826
    3. '=int' → logprob: -15.349078178405762
    4. ' ' → logprob: -15.349078178405762
    5. ',' → logprob: -15.599078178405762
    6. ')' → logprob: -15.724078178405762
    7. ' =
' → logprob: -16.599077224731445
    8. ')=' → logprob: -17.474077224731445
    9. '=
' → logprob: -17.474077224731445
    10. '=

' → logprob: -17.474077224731445

Token 207: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.693516731262207
    2. ' map' → logprob: -0.693516731262207
    3. 'int' → logprob: -8.068516731262207
    4. ' int' → logprob: -9.818516731262207
    5. ' list' → logprob: -14.568516731262207
    6. 'list' → logprob: -14.693516731262207
    7. '(map' → logprob: -14.818516731262207
    8. ' ' → logprob: -15.568516731262207
    9. '	map' → logprob: -16.19351577758789
    10. '[int' → logprob: -16.56851577758789

Token 208: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009149204124696553
    2. 'int' → logprob: -7.000915050506592
    3. '(' → logprob: -13.000914573669434
    4. '[int' → logprob: -14.250914573669434
    5. ' int' → logprob: -16.00091552734375
    6. '<int' → logprob: -16.12591552734375
    7. '=int' → logprob: -16.50091552734375
    8. '(str' → logprob: -16.62591552734375
    9. '```' → logprob: -16.75091552734375
    10. ',int' → logprob: -17.25091552734375

Token 209: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04280196875333786
    2. 'n' → logprob: -3.292801856994629
    3. ',' → logprob: -6.042801856994629
    4. ' n' → logprob: -6.917801856994629
    5. ',n' → logprob: -7.667801856994629
    6. ')' → logprob: -7.917801856994629
    7. '(' → logprob: -8.417801856994629
    8. ')n' → logprob: -8.667801856994629
    9. ' (' → logprob: -8.792801856994629
    10. '   ' → logprob: -13.667801856994629

Token 210: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01251376885920763
    2. ' n' → logprob: -4.387513637542725
    3. ')n' → logprob: -13.762514114379883
    4. ')' → logprob: -14.012514114379883
    5. '   ' → logprob: -14.137514114379883
    6. '(n' → logprob: -14.262514114379883
    7. '	n' → logprob: -15.012514114379883
    8. '[n' → logprob: -15.762514114379883
    9. ' ' → logprob: -15.887514114379883
    10. '
' → logprob: -16.387514114379883

Token 211: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.00013333676906768233
    2. 'm' → logprob: -9.125133514404297
    3. 'p' → logprob: -11.625133514404297
    4. '(mp' → logprob: -12.625133514404297
    5. ')' → logprob: -12.750133514404297
    6. '   ' → logprob: -13.000133514404297
    7. ' mp' → logprob: -13.375133514404297
    8. '_mp' → logprob: -13.625133514404297
    9. '  ' → logprob: -14.250133514404297
    10. ' ' → logprob: -14.625133514404297

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -13.87500286102295
    3. ')
' → logprob: -14.37500286102295
    4. ')`' → logprob: -14.75000286102295
    5. '[' → logprob: -15.87500286102295
    6. '),' → logprob: -16.500001907348633
    7. ');' → logprob: -16.625001907348633
    8. '))' → logprob: -16.875001907348633
    9. ')}' → logprob: -17.000001907348633
    10. ').' → logprob: -17.500001907348633

Token 213: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.04228227585554123
    2. ' graph' → logprob: -3.6672823429107666
    3. '   ' → logprob: -4.9172821044921875
    4. '	graph' → logprob: -4.9172821044921875
    5. '    
' → logprob: -6.9172821044921875
    6. '
' → logprob: -9.167282104492188
    7. '```' → logprob: -9.917282104492188
    8. '(graph' → logprob: -10.417282104492188
    9. 'raph' → logprob: -11.792282104492188
    10. '<|end|>' → logprob: -12.167282104492188

Token 214: ' if' (ID: 538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03809862956404686
    2. ' graph' → logprob: -3.2880985736846924
    3. '   ' → logprob: -10.288098335266113
    4. '	graph' → logprob: -11.413098335266113
    5. ' if' → logprob: -12.288098335266113
    6. 'if' (adapté à ' if') → logprob: -12.538098335266113
    7. '
' → logprob: -13.163098335266113
    8. '```' → logprob: -14.038098335266113
    9. '    
' → logprob: -15.288098335266113
    10. ' 
' → logprob: -15.413098335266113

Token 215: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1602623164653778
    2. 'n' → logprob: -1.9102623462677002
    3. ' not' → logprob: -10.785262107849121
    4. ' p' → logprob: -11.660262107849121
    5. 'p' → logprob: -12.410262107849121
    6. '(n' → logprob: -13.660262107849121
    7. 'not' → logprob: -13.910262107849121
    8. 'm' → logprob: -14.410262107849121
    9. ' m' → logprob: -14.660262107849121
    10. ' ' → logprob: -14.660262107849121

Token 216: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17996668815612793
    2. '==' → logprob: -1.804966688156128
    3. ' <=' → logprob: -9.179966926574707
    4. '=' → logprob: -9.929966926574707
    5. '<=' → logprob: -10.179966926574707
    6. ' <' → logprob: -11.179966926574707
    7. '<' → logprob: -11.304966926574707
    8. ' =' → logprob: -13.054966926574707
    9. ' ' → logprob: -13.929966926574707
    10. '0' → logprob: -14.304966926574707

Token 217: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.685467764735222e-05
    2. ' ' → logprob: -9.500086784362793
    3. 'm' → logprob: -11.625086784362793
    4. 'p' → logprob: -13.000086784362793
    5. ' m' → logprob: -15.125086784362793
    6. '```' → logprob: -15.875086784362793
    7. '
' → logprob: -16.12508773803711
    8. ' p' → logprob: -16.50008773803711
    9. '  ' → logprob: -16.50008773803711
    10. '   ' → logprob: -16.81258773803711

Token 218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.375016212463379
    3. 'p' → logprob: -12.625016212463379
    4. 'm' → logprob: -14.125016212463379
    5. '```' → logprob: -16.000017166137695
    6. 'n' → logprob: -16.375017166137695
    7. ' p' → logprob: -16.562517166137695
    8. '
' → logprob: -16.625017166137695
    9. '  ' → logprob: -16.687517166137695
    10. '۰' → logprob: -16.812517166137695

Token 219: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12693829834461212
    2. 'and' → logprob: -2.1269383430480957
    3. ':' → logprob: -12.126937866210938
    4. ' ' → logprob: -13.001937866210938
    5. ' a' → logprob: -13.751937866210938
    6. '	and' → logprob: -14.376937866210938
    7. 'a' → logprob: -14.751937866210938
    8. ' an' → logprob: -15.626937866210938
    9. '<|end|>' → logprob: -16.251937866210938
    10. '  ' → logprob: -16.251937866210938

Token 220: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015023599844425917
    2. ' m' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.501502990722656
    4. '	m' → logprob: -17.876502990722656
    5. '  ' → logprob: -18.001502990722656
    6. ' ' → logprob: -19.376502990722656
    7. 'p' → logprob: -21.376502990722656
    8. 'n' → logprob: -21.751502990722656
    9. ' ' → logprob: -21.876502990722656
    10. 'M' → logprob: -21.876502990722656

Token 221: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519485354423523
    2. '==' → logprob: -1.501948595046997
    3. '<|end|>' → logprob: -11.376948356628418
    4. ' ' → logprob: -12.751948356628418
    5. ' =' → logprob: -13.751948356628418
    6. '0' → logprob: -14.126948356628418
    7. '<|end|>' → logprob: -14.251948356628418
    8. '===' → logprob: -14.376948356628418
    9. '=' → logprob: -14.376948356628418
    10. '==
' → logprob: -15.001948356628418

Token 222: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. 'and' → logprob: -16.625709533691406
    4. ' and' → logprob: -16.875709533691406
    5. '   ' → logprob: -17.625709533691406
    6. '<|end|>' → logprob: -17.625709533691406
    7. '  ' → logprob: -18.125709533691406
    8. '=' → logprob: -18.375709533691406
    9. 'p' → logprob: -19.000709533691406
    10. ' p' → logprob: -19.250709533691406

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '<|end|>' → logprob: -19.00009536743164
    4. '   ' → logprob: -19.12509536743164
    5. '  ' → logprob: -19.25009536743164
    6. 'and' → logprob: -19.75009536743164
    7. '۰' → logprob: -20.00009536743164
    8. '=' → logprob: -20.25009536743164
    9. ' and' → logprob: -20.37509536743164
    10. 'p' → logprob: -20.37509536743164

Token 224: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00462510297074914
    2. 'and' → logprob: -5.37962532043457
    3. '<|end|>' → logprob: -12.75462532043457
    4. ' ' → logprob: -14.12962532043457
    5. '0' → logprob: -14.75462532043457
    6. '	and' → logprob: -15.12962532043457
    7. '   ' → logprob: -15.75462532043457
    8. '<|end|>' → logprob: -15.75462532043457
    9. 'a' → logprob: -16.00462532043457
    10. ' и' → logprob: -16.75462532043457

Token 225: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04858839511871338
    2. ' p' → logprob: -3.048588275909424
    3. '   ' → logprob: -14.423588752746582
    4. '0' → logprob: -15.423588752746582
    5. ' ' → logprob: -15.798588752746582
    6. '	p' → logprob: -16.548587799072266
    7. '  ' → logprob: -17.048587799072266
    8. '
' → logprob: -19.673587799072266
    9. ' ' → logprob: -20.298587799072266
    10. '(p' → logprob: -20.798587799072266

Token 226: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31948524713516235
    2. ' ==' → logprob: -1.3194851875305176
    3. '0' → logprob: -5.444485187530518
    4. '<|end|>' → logprob: -7.069485187530518
    5. '=' → logprob: -7.319485187530518
    6. ' ' → logprob: -9.569485664367676
    7. '  ' → logprob: -9.944485664367676
    8. ')' → logprob: -9.944485664367676
    9. ')==' → logprob: -10.069485664367676
    10. '<|end|>' → logprob: -10.319485664367676

Token 227: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '  ' → logprob: -18.75020408630371
    4. '۰' → logprob: -19.12520408630371
    5. '   ' → logprob: -19.62520408630371
    6. '<|end|>' → logprob: -19.75020408630371
    7. '```' → logprob: -20.50020408630371
    8. '1' → logprob: -21.00020408630371
    9. '-' → logprob: -21.18770408630371
    10. '০' → logprob: -21.25020408630371

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '<|end|>' → logprob: -18.125036239624023
    4. '  ' → logprob: -18.500036239624023
    5. '```' → logprob: -18.500036239624023
    6. '۰' → logprob: -18.750036239624023
    7. '-' → logprob: -19.125036239624023
    8. '   ' → logprob: -19.187536239624023
    9. '<|end|>' → logprob: -19.625036239624023
    10. '1' → logprob: -20.187536239624023

Token 229: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06198930740356445
    2. ':
' → logprob: -2.8119893074035645
    3. '   ' → logprob: -11.061988830566406
    4. '       ' → logprob: -12.436988830566406
    5. ' :' → logprob: -14.436988830566406
    6. ' :
' → logprob: -14.686988830566406
    7. ':
' → logprob: -14.936988830566406
    8. ':return' → logprob: -15.311988830566406
    9. '):
' → logprob: -16.186988830566406
    10. '	break' → logprob: -16.186988830566406

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028515905141830444
    2. '   ' → logprob: -5.877851486206055
    3. '      ' → logprob: -11.377851486206055
    4. ':' → logprob: -11.752851486206055
    5. ' break' → logprob: -11.752851486206055
    6. '     ' → logprob: -12.252851486206055
    7. '	break' → logprob: -12.752851486206055
    8. '           ' → logprob: -13.252851486206055
    9. '  ' → logprob: -13.377851486206055
    10. '	' → logprob: -13.502851486206055

Token 231: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.20142339169979095
    2. ' break' → logprob: -1.7014234066009521
    3. '	break' → logprob: -12.326423645019531
    4. 'sys' → logprob: -12.451423645019531
    5. '   ' → logprob: -13.576423645019531
    6. ' sys' → logprob: -14.951423645019531
    7. 'b' → logprob: -15.576423645019531
    8. 'exit' → logprob: -17.07642364501953
    9. '       ' → logprob: -17.45142364501953
    10. '```' → logprob: -17.70142364501953

Token 232: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4020216763019562
    2. 'graph' → logprob: -1.1520216464996338
    3. ' graph' → logprob: -4.652021884918213
    4. '	graph' → logprob: -5.652021884918213
    5. '    
' → logprob: -6.527021884918213
    6. '
' → logprob: -7.902021884918213
    7. '```' → logprob: -9.277021408081055
    8. '(graph' → logprob: -11.152021408081055
    9. '_graph' → logprob: -11.527021408081055
    10. 'raph' → logprob: -12.277021408081055

Token 233: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4419190287590027
    2. '   ' → logprob: -1.0669190883636475
    3. ' graph' → logprob: -4.441918849945068
    4. '	graph' → logprob: -7.441918849945068
    5. '    
' → logprob: -7.691918849945068
    6. '```' → logprob: -8.816919326782227
    7. '
' → logprob: -8.941919326782227
    8. '_graph' → logprob: -11.941919326782227
    9. '  ' → logprob: -12.316919326782227
    10. '(graph' → logprob: -12.566919326782227

Token 234: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.021417178213596344
    2. ' graph' → logprob: -3.8964171409606934
    3. '   ' → logprob: -7.146417140960693
    4. '
' → logprob: -9.771417617797852
    5. '	graph' → logprob: -10.896417617797852
    6. '    
' → logprob: -12.271417617797852
    7. '```' → logprob: -12.646417617797852
    8. ' 
' → logprob: -13.396417617797852
    9. '(graph' → logprob: -14.646417617797852
    10. '``' → logprob: -15.396417617797852

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150178715586662
    2. '=' → logprob: -4.018150329589844
    3. '[' → logprob: -16.018150329589844
    4. ' ' → logprob: -17.143150329589844
    5. ' =
' → logprob: -17.268150329589844
    6. ' =[' → logprob: -17.268150329589844
    7. ')' → logprob: -17.643150329589844
    8. ']' → logprob: -17.768150329589844
    9. '=[]' → logprob: -18.143150329589844
    10. ',' → logprob: -18.643150329589844

Token 236: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47408583760261536
    2. ' [[]' → logprob: -0.974085807800293
    3. ' [' → logprob: -11.724085807800293
    4. '[]' → logprob: -14.849085807800293
    5. '[[' → logprob: -15.474085807800293
    6. '[n' → logprob: -17.09908676147461
    7. '[['' → logprob: -17.34908676147461
    8. '   ' → logprob: -17.59908676147461
    9. '[node' → logprob: -18.47408676147461
    10. '[:]' → logprob: -18.72408676147461

Token 237: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3133723735809326
    2. ' for' → logprob: -1.3133723735809326
    3. ']' → logprob: -9.813372611999512
    4. ')' → logprob: -10.313372611999512
    5. '	for' → logprob: -11.563372611999512
    6. '
' → logprob: -12.063372611999512
    7. ',' → logprob: -13.063372611999512
    8. ' ' → logprob: -13.313372611999512
    9. 'n' → logprob: -13.938372611999512
    10. '   ' → logprob: -14.063372611999512

Token 238: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5171260833740234
    2. ' range' → logprob: -1.2671260833740234
    3. 'range' → logprob: -2.1421260833740234
    4. ' _' → logprob: -5.767126083374023
    5. '_range' → logprob: -7.392126083374023
    6. ' in' → logprob: -7.642126083374023
    7. '(range' → logprob: -7.767126083374023
    8. 'in' → logprob: -9.892126083374023
    9. ' ' → logprob: -11.392126083374023
    10. 'i' → logprob: -12.517126083374023

Token 239: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004604334011673927
    2. 'in' → logprob: -5.629604339599609
    3. ' range' → logprob: -7.004604339599609
    4. ' in' → logprob: -9.37960433959961
    5. 'n' → logprob: -12.62960433959961
    6. 'ange' → logprob: -13.12960433959961
    7. '(range' → logprob: -13.25460433959961
    8. ' ' → logprob: -13.50460433959961
    9. '   ' → logprob: -13.62960433959961
    10. '  ' → logprob: -14.12960433959961

Token 240: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858759790658951
    2. ' range' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.048587799072266
    4. '   ' → logprob: -17.048587799072266
    5. 'r' → logprob: -17.173587799072266
    6. '(range' → logprob: -17.173587799072266
    7. '	range' → logprob: -17.548587799072266
    8. 'rang' → logprob: -17.923587799072266
    9. '  ' → logprob: -18.423587799072266
    10. 'ran' → logprob: -19.173587799072266

Token 241: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.961759259458631e-06
    2. 'n' → logprob: -12.250004768371582
    3. '(' → logprob: -16.2500057220459
    4. ' n' → logprob: -18.0000057220459
    5. ' (' → logprob: -18.2500057220459
    6. ')n' → logprob: -18.8750057220459
    7. '	n' → logprob: -20.1250057220459
    8. '
' → logprob: -20.8750057220459
    9. '(N' → logprob: -21.7500057220459
    10. ',n' → logprob: -21.8750057220459

Token 242: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.6240566083070007e-06
    2. ')' → logprob: -14.375001907348633
    3. ')]
' → logprob: -14.375001907348633
    4. ']' → logprob: -15.375001907348633
    5. ' )' → logprob: -16.000001907348633
    6. ')]

' → logprob: -18.000001907348633
    7. '')]' → logprob: -18.125001907348633
    8. ')]
' → logprob: -18.625001907348633
    9. ')],' → logprob: -19.250001907348633
    10. ')].' → logprob: -19.500001907348633

Token 243: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2467227578163147
    2. '   ' → logprob: -1.74672269821167
    3. ' for' → logprob: -3.12172269821167
    4. '    
' → logprob: -8.871723175048828
    5. '	for' → logprob: -10.371723175048828
    6. '
' → logprob: -10.371723175048828
    7. '  
' → logprob: -12.746723175048828
    8. '  ' → logprob: -12.871723175048828
    9. ' 
' → logprob: -13.121723175048828
    10. ' ' → logprob: -13.121723175048828

Token 244: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008065330912359059
    2. ' for' → logprob: -7.1258063316345215
    3. '   ' → logprob: -13.12580680847168
    4. '	for' → logprob: -16.25080680847168
    5. 'i' → logprob: -17.87580680847168
    6. '    
' → logprob: -18.00080680847168
    7. '
' → logprob: -18.62580680847168
    8. '```' → logprob: -18.87580680847168
    9. ' ' → logprob: -20.12580680847168
    10. ' 
' → logprob: -20.37580680847168

Token 245: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.006716317031532526
    2. '_' → logprob: -5.006716251373291
    3. ' i' → logprob: -14.75671672821045
    4. '_i' → logprob: -15.00671672821045
    5. ' ' → logprob: -15.13171672821045
    6. ' ' → logprob: -18.631715774536133
    7. ' _
' → logprob: -18.756715774536133
    8. 'i' → logprob: -19.131715774536133
    9. ' __' → logprob: -19.881715774536133
    10. '_j' → logprob: -20.256715774536133

Token 246: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16065748035907745
    2. ' in' → logprob: -1.910657525062561
    3. 'range' → logprob: -8.03565788269043
    4. ' ' → logprob: -9.78565788269043
    5. '_' → logprob: -10.16065788269043
    6. 'n' → logprob: -12.16065788269043
    7. ' range' → logprob: -13.03565788269043
    8. 'i' → logprob: -13.03565788269043
    9. '  ' → logprob: -13.41065788269043
    10. 'm' → logprob: -14.16065788269043

Token 247: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '	range' → logprob: -19.000158309936523
    4. '(range' → logprob: -19.125158309936523
    5. 'r' → logprob: -19.875158309936523
    6. '```' → logprob: -19.875158309936523
    7. '
' → logprob: -20.125158309936523
    8. 'm' → logprob: -20.250158309936523
    9. ' ' → logprob: -20.500158309936523
    10. 'rang' → logprob: -21.125158309936523

Token 248: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2057027518749237
    2. 'm' → logprob: -1.705702781677246
    3. ' m' → logprob: -5.455702781677246
    4. ' (' → logprob: -11.955702781677246
    5. '(' → logprob: -13.705702781677246
    6. '	m' → logprob: -14.830702781677246
    7. '   ' → logprob: -15.830702781677246
    8. 'range' → logprob: -16.33070182800293
    9. ',m' → logprob: -16.45570182800293
    10. ' range' → logprob: -16.83070182800293

Token 249: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016605034470558167
    2. '):
' → logprob: -4.141604900360107
    3. ':' → logprob: -7.766604900360107
    4. ' ):' → logprob: -9.266605377197266
    5. '   ' → logprob: -10.766605377197266
    6. '):
' → logprob: -11.766605377197266
    7. ',' → logprob: -12.016605377197266
    8. ')' → logprob: -12.516605377197266
    9. ' ):
' → logprob: -13.016605377197266
    10. ']:' → logprob: -13.016605377197266

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1644592434167862
    2. '   ' → logprob: -1.914459228515625
    3. ' line' → logprob: -6.289459228515625
    4. ',' → logprob: -6.789459228515625
    5. '    ' → logprob: -8.414459228515625
    6. '<|end|>' → logprob: -8.914459228515625
    7. ' ' → logprob: -9.164459228515625
    8. '	   ' → logprob: -9.539459228515625
    9. '	line' → logprob: -9.539459228515625
    10. '  ' → logprob: -9.914459228515625

Token 251: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.29256612062454224
    2. 'u' (adapté à ' u') → logprob: -1.7925660610198975
    3. ' line' → logprob: -2.6675660610198975
    4. 'a' → logprob: -5.417566299438477
    5. 'line' → logprob: -5.542566299438477
    6. ' edge' → logprob: -5.792566299438477
    7. ' a' → logprob: -5.792566299438477
    8. '   ' → logprob: -6.542566299438477
    9. ' parts' → logprob: -8.167566299438477
    10. ' x' → logprob: -8.292566299438477

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028739420231431723
    2. ',v' → logprob: -5.87787389755249
    3. ' ,' → logprob: -9.627874374389648
    4. 'v' → logprob: -13.502874374389648
    5. ',u' → logprob: -14.627874374389648
    6. ' v' → logprob: -15.002874374389648
    7. '=' → logprob: -15.627874374389648
    8. ',w' → logprob: -15.627874374389648
    9. ',p' → logprob: -15.627874374389648
    10. ',
' → logprob: -16.37787437438965

Token 253: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10021518170833588
    2. ' v' → logprob: -2.350215196609497
    3. ' ' → logprob: -12.100214958190918
    4. ',v' → logprob: -13.975214958190918
    5. '	v' → logprob: -14.100214958190918
    6. 'w' → logprob: -14.850214958190918
    7. '_v' → logprob: -15.100214958190918
    8. 'vq' → logprob: -15.975214958190918
    9. 'vj' → logprob: -16.225215911865234
    10. 'vsp' → logprob: -16.350215911865234

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013735718093812466
    2. '=' → logprob: -4.388735771179199
    3. ' =' → logprob: -7.263735771179199
    4. ' ,' → logprob: -7.638735771179199
    5. ',w' → logprob: -11.3887357711792
    6. ',v' → logprob: -11.7637357711792
    7. '<|end|>' → logprob: -11.7637357711792
    8. ' ' → logprob: -12.1387357711792
    9. ',u' → logprob: -12.8887357711792
    10. 'w' → logprob: -13.0137357711792

Token 255: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0016518525080755353
    2. ' w' → logprob: -6.751651763916016
    3. 'l' → logprob: -8.376651763916016
    4. 'c' → logprob: -9.126651763916016
    5. 't' → logprob: -9.501651763916016
    6. 'cost' → logprob: -10.251651763916016
    7. 'd' → logprob: -11.251651763916016
    8. 'b' → logprob: -12.001651763916016
    9. 'z' → logprob: -12.876651763916016
    10. 's' → logprob: -13.376651763916016

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. ')' → logprob: -17.773244857788086
    4. '＝' → logprob: -18.398244857788086
    5. ',' → logprob: -19.023244857788086
    6. '=line' → logprob: -19.523244857788086
    7. ' ' → logprob: -19.648244857788086
    8. '_=' → logprob: -19.648244857788086
    9. ')=' → logprob: -19.773244857788086
    10. '=input' → logprob: -19.773244857788086

Token 257: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00861528143286705
    2. 'map' → logprob: -4.758615493774414
    3. '	map' → logprob: -14.258615493774414
    4. ' ' → logprob: -16.508615493774414
    5. '(map' → logprob: -17.258615493774414
    6. '.map' → logprob: -17.883615493774414
    7. 'm' → logprob: -18.008615493774414
    8. ' ' → logprob: -19.008615493774414
    9. '   ' → logprob: -19.133615493774414
    10. '  ' → logprob: -19.133615493774414

Token 258: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.759734732331708e-05
    2. 'int' → logprob: -11.000017166137695
    3. '(' → logprob: -15.125017166137695
    4. '[int' → logprob: -15.125017166137695
    5. '=int' → logprob: -17.000017166137695
    6. ' int' → logprob: -17.500017166137695
    7. '<int' → logprob: -17.625017166137695
    8. ',int' → logprob: -18.000017166137695
    9. '(str' → logprob: -18.625017166137695
    10. '	int' → logprob: -18.750017166137695

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6674098968505859
    2. '(sys' → logprob: -0.7924098968505859
    3. 'sys' → logprob: -3.417409896850586
    4. '=sys' → logprob: -7.667409896850586
    5. ' sys' → logprob: -8.167409896850586
    6. ')' → logprob: -8.292409896850586
    7. '(' → logprob: -8.292409896850586
    8. '	sys' → logprob: -9.417409896850586
    9. ',input' → logprob: -10.292409896850586
    10. ',System' → logprob: -10.792409896850586

Token 260: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.005233882926404476
    2. ' sys' → logprob: -5.2552337646484375
    3. 'input' → logprob: -16.630233764648438
    4. '=sys' → logprob: -16.880233764648438
    5. '	sys' → logprob: -17.005233764648438
    6. '(sys' → logprob: -17.380233764648438
    7. ')' → logprob: -17.630233764648438
    8. '   ' → logprob: -18.755233764648438
    9. '_sys' → logprob: -20.130233764648438
    10. ' ' → logprob: -20.380233764648438

Token 261: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0031793788075447083
    2. 'stdin' → logprob: -5.753179550170898
    3. ' stdin' → logprob: -14.128179550170898
    4. '(stdin' → logprob: -14.753179550170898
    5. '.' → logprob: -15.753179550170898
    6. '.argv' → logprob: -15.878179550170898
    7. '.stdout' → logprob: -16.1281795501709
    8. '.std' → logprob: -16.5031795501709
    9. '.readline' → logprob: -17.2531795501709
    10. 'std' → logprob: -18.0031795501709

Token 262: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.034592388459714e-06
    2. '.' → logprob: -12.375005722045898
    3. '.stdin' → logprob: -13.250005722045898
    4. '.readlines' → logprob: -18.8750057220459
    5. ' readline' → logprob: -19.3750057220459
    6. '().' → logprob: -19.8750057220459
    7. 'stdin' → logprob: -20.2500057220459
    8. ')' → logprob: -21.0000057220459
    9. '```' → logprob: -21.3750057220459
    10. '   ' → logprob: -21.5000057220459

Token 263: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003404687449801713
    2. '()' → logprob: -8.000340461730957
    3. '())' → logprob: -12.250340461730957
    4. '()
' → logprob: -16.375341415405273
    5. '.readline' → logprob: -17.125341415405273
    6. '(' → logprob: -17.125341415405273
    7. ' ().' → logprob: -17.250341415405273
    8. ')' → logprob: -17.500341415405273
    9. '()[' → logprob: -18.250341415405273
    10. '().__' → logprob: -18.875341415405273

Token 264: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.38687655329704285
    2. 'split' → logprob: -1.1368765830993652
    3. 'rstrip' → logprob: -12.261876106262207
    4. ' strip' → logprob: -14.761876106262207
    5. ' split' → logprob: -14.886876106262207
    6. '(split' → logprob: -17.261877059936523
    7. ')' → logprob: -18.136877059936523
    8. '.strip' → logprob: -18.136877059936523
    9. '(strip' → logprob: -19.136877059936523
    10. 'plit' → logprob: -19.261877059936523

Token 265: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.176947600673884e-05
    2. '()' → logprob: -10.750021934509277
    3. ' ().' → logprob: -15.625021934509277
    4. '(' → logprob: -17.62502098083496
    5. '()
' → logprob: -18.37502098083496
    6. '   ' → logprob: -18.87502098083496
    7. '())' → logprob: -19.25002098083496
    8. ')' → logprob: -19.25002098083496
    9. '.' → logprob: -19.87502098083496
    10. '().
' → logprob: -20.25002098083496

Token 266: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.500000953674316
    3. '(split' → logprob: -18.625
    4. '.split' → logprob: -19.125
    5. 'spl' → logprob: -20.5
    6. 'plit' → logprob: -20.625
    7. ')' → logprob: -20.75
    8. ' ' → logprob: -21.375
    9. 'rstrip' → logprob: -22.375
    10. '   ' → logprob: -22.375

Token 267: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02007977105677128
    2. '())' → logprob: -4.020079612731934
    3. ')
' → logprob: -6.520079612731934
    4. '()' → logprob: -8.145079612731934
    5. '())
' → logprob: -8.770079612731934
    6. '))' → logprob: -12.520079612731934
    7. ' )' → logprob: -13.395079612731934
    8. ')`' → logprob: -13.645079612731934
    9. '()
' → logprob: -14.520079612731934
    10. '   ' → logprob: -14.770079612731934

Token 268: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008016457431949675
    2. 'graph' → logprob: -8.000802040100098
    3. '	graph' → logprob: -8.250802040100098
    4. ' graph' → logprob: -9.375802040100098
    5. '
' → logprob: -10.000802040100098
    6. '    
' → logprob: -10.500802040100098
    7. '       ' → logprob: -10.875802040100098
    8. '(graph' → logprob: -12.125802040100098
    9. '<|end|>' → logprob: -12.375802040100098
    10. '  
' → logprob: -12.625802040100098

Token 269: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.07201212644577026
    2. '   ' → logprob: -3.197012186050415
    3. ' graph' → logprob: -3.572012186050415
    4. '       ' → logprob: -8.822011947631836
    5. '	graph' → logprob: -8.822011947631836
    6. 'if' → logprob: -9.322011947631836
    7. ' if' → logprob: -9.822011947631836
    8. 'u' → logprob: -10.822011947631836
    9. '
' → logprob: -11.697011947631836
    10. '(graph' → logprob: -12.072011947631836

Token 270: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. 'u' → logprob: -18.375
    4. '[v' → logprob: -18.5
    5. '[user' → logprob: -19.875
    6. ' [' → logprob: -20.25
    7. '[w' → logprob: -20.75
    8. '[int' → logprob: -21.5
    9. '[s' → logprob: -21.875
    10. '```' → logprob: -22.0

Token 271: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -9.877503907773644e-05
    2. ']' → logprob: -9.625099182128906
    3. ').' → logprob: -11.125099182128906
    4. ' ].' → logprob: -11.875099182128906
    5. '.' → logprob: -12.125099182128906
    6. '   ' → logprob: -12.500099182128906
    7. '.append' → logprob: -13.875099182128906
    8. '[' → logprob: -14.625099182128906
    9. '       ' → logprob: -15.875099182128906
    10. '[u' → logprob: -17.000099182128906

Token 272: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.7432603272027336e-06
    2. '.append' → logprob: -13.750001907348633
    3. 'appen' → logprob: -14.625001907348633
    4. ' append' → logprob: -15.875001907348633
    5. '	append' → logprob: -17.875001907348633
    6. 'add' → logprob: -18.125001907348633
    7. '_append' → logprob: -18.250001907348633
    8. 'app' → logprob: -18.500001907348633
    9. 'Append' → logprob: -19.125001907348633
    10. ' ' → logprob: -20.250001907348633

Token 273: '((' (ID: 2054)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.33037254214286804
    2. '((' → logprob: -1.3303725719451904
    3. '(' → logprob: -4.080372333526611
    4. ' (' → logprob: -9.70537281036377
    5. '(V' → logprob: -14.33037281036377
    6. '(
' → logprob: -14.58037281036377
    7. '(s' → logprob: -14.95537281036377
    8. '(u' → logprob: -14.95537281036377
    9. '([' → logprob: -15.45537281036377
    10. '   ' → logprob: -15.58037281036377

Token 274: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.2200749754119897e-06
    2. ' v' → logprob: -13.125001907348633
    3. ')v' → logprob: -16.375001907348633
    4. '	v' → logprob: -18.125001907348633
    5. '
' → logprob: -19.000001907348633
    6. '   ' → logprob: -19.125001907348633
    7. ',v' → logprob: -19.625001907348633
    8. '(v' → logprob: -19.750001907348633
    9. ')' → logprob: -20.375001907348633
    10. 'vi' → logprob: -20.375001907348633

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011880126112373546
    2. ',w' → logprob: -9.25011920928955
    3. ' ,' → logprob: -10.87511920928955
    4. ',
' → logprob: -13.00011920928955
    5. 'w' → logprob: -13.62511920928955
    6. '‌,' → logprob: -15.87511920928955
    7. '),' → logprob: -17.625118255615234
    8. ',

' → logprob: -17.875118255615234
    9. '```' → logprob: -17.875118255615234
    10. '<|end|>' → logprob: -18.000118255615234

Token 276: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.06995032727718353
    2. ' w' → logprob: -2.6949503421783447
    3. '    ' → logprob: -12.194950103759766
    4. ' ' → logprob: -12.569950103759766
    5. '   ' → logprob: -13.569950103759766
    6. ' 
' → logprob: -14.069950103759766
    7. '	w' → logprob: -14.319950103759766
    8. '
' → logprob: -14.819950103759766
    9. ')' → logprob: -14.944950103759766
    10. '       ' → logprob: -15.069950103759766

Token 277: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00765313021838665
    2. ')' → logprob: -5.00765323638916
    3. '))
' → logprob: -7.00765323638916
    4. ')
' → logprob: -11.13265323638916
    5. ' ))' → logprob: -11.25765323638916
    6. ')))' → logprob: -13.38265323638916
    7. '));' → logprob: -14.13265323638916
    8. ' )' → logprob: -14.50765323638916
    9. '),' → logprob: -14.50765323638916
    10. '))

' → logprob: -14.88265323638916

Token 278: '       ' (ID: 309)
  Prédit: '	graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	graph' → logprob: -0.8869074583053589
    2. 'graph' → logprob: -1.2619074583053589
    3. '   ' → logprob: -2.0119075775146484
    4. '<|end|>' → logprob: -2.5119075775146484
    5. ' graph' → logprob: -3.0119075775146484
    6. '       ' → logprob: -3.2619075775146484
    7. '(graph' → logprob: -7.761907577514648
    8. '    ' → logprob: -7.886907577514648
    9. '```' → logprob: -8.011907577514648
    10. '<|end|>' → logprob: -8.386907577514648

Token 279: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.03381282463669777
    2. ' graph' → logprob: -3.4088127613067627
    3. '<|end|>' → logprob: -9.408812522888184
    4. '	graph' → logprob: -9.658812522888184
    5. '
' → logprob: -11.908812522888184
    6. '(graph' → logprob: -12.033812522888184
    7. '   ' → logprob: -13.283812522888184
    8. ' ' → logprob: -13.908812522888184
    9. ')' → logprob: -14.033812522888184
    10. '_graph' → logprob: -14.283812522888184

Token 280: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00018697108316700906
    2. '[u' → logprob: -8.625186920166016
    3. '[' → logprob: -12.250186920166016
    4. 'v' → logprob: -13.000186920166016
    5. '[w' → logprob: -16.625186920166016
    6. '[p' → logprob: -17.125186920166016
    7. '	v' → logprob: -17.375186920166016
    8. '[V' → logprob: -17.750186920166016
    9. '[s' → logprob: -17.875186920166016
    10. '```' → logprob: -18.000186920166016

Token 281: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.1862485706806183
    2. '].' → logprob: -1.811248540878296
    3. ',' → logprob: -5.686248779296875
    4. ')' → logprob: -5.936248779296875
    5. '.' → logprob: -8.936248779296875
    6. ']' → logprob: -9.311248779296875
    7. ')].' → logprob: -9.436248779296875
    8. '.append' → logprob: -10.311248779296875
    9. '       ' → logprob: -10.811248779296875
    10. '   ' → logprob: -10.936248779296875

Token 282: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -14.625000953674316
    3. ' append' → logprob: -15.625000953674316
    4. 'appen' → logprob: -17.5
    5. 'app' → logprob: -18.0
    6. '	append' → logprob: -18.875
    7. 'Append' → logprob: -19.0
    8. '_append' → logprob: -20.875
    9. '```' → logprob: -21.25
    10. 'prepend' → logprob: -21.625

Token 283: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4330708980560303
    2. '(u' → logprob: -1.1830708980560303
    3. '(v' → logprob: -3.1830708980560303
    4. '(' → logprob: -6.183071136474609
    5. ' (' → logprob: -6.433071136474609
    6. '(
' → logprob: -11.55807113647461
    7. '<|end|>' → logprob: -12.30807113647461
    8. ' ((' → logprob: -13.30807113647461
    9. '(U' → logprob: -13.43307113647461
    10. ' ' → logprob: -15.05807113647461

Token 284: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0020489091984927654
    2. '(u' → logprob: -6.377048969268799
    3. ' u' → logprob: -8.00204849243164
    4. ' (' → logprob: -12.75204849243164
    5. '[u' → logprob: -12.87704849243164
    6. '	u' → logprob: -13.50204849243164
    7. ',u' → logprob: -14.00204849243164
    8. '   ' → logprob: -14.12704849243164
    9. 'v' → logprob: -14.25204849243164
    10. ' ' → logprob: -14.50204849243164

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.621933451038785e-05
    2. ' ,' → logprob: -10.500056266784668
    3. ',w' → logprob: -10.500056266784668
    4. 'w' → logprob: -14.500056266784668
    5. ',
' → logprob: -14.625056266784668
    6. ' w' → logprob: -16.75005531311035
    7. '),' → logprob: -17.00005531311035
    8. '   ' → logprob: -17.37505531311035
    9. ')' → logprob: -18.00005531311035
    10. ' ' → logprob: -18.25005531311035

Token 286: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.20142288506031036
    2. 'w' → logprob: -1.701422929763794
    3. ' ' → logprob: -12.326422691345215
    4. ' ' → logprob: -13.826422691345215
    5. '	w' → logprob: -14.076422691345215
    6. ' 
' → logprob: -14.326422691345215
    7. ')' → logprob: -14.451422691345215
    8. '    ' → logprob: -14.576422691345215
    9. '<|end|>' → logprob: -14.576422691345215
    10. '
' → logprob: -15.201422691345215

Token 287: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000527534110005945
    2. ')' → logprob: -7.625527381896973
    3. '))
' → logprob: -10.875527381896973
    4. ' ))' → logprob: -11.000527381896973
    5. ')))' → logprob: -13.250527381896973
    6. '   ' → logprob: -14.250527381896973
    7. '));' → logprob: -14.875527381896973
    8. '       ' → logprob: -15.000527381896973
    9. ',' → logprob: -15.750527381896973
    10. ' )' → logprob: -15.750527381896973

Token 288: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007961839437484741
    2. 'start' → logprob: -5.507961750030518
    3. 'd' → logprob: -6.882961750030518
    4. 'short' → logprob: -7.257961750030518
    5. 'dp' → logprob: -7.382961750030518
    6. 'distance' → logprob: -7.757961750030518
    7. ' dist' → logprob: -8.507962226867676
    8. '   ' → logprob: -8.757962226867676
    9. '```' → logprob: -8.882962226867676
    10. 's' → logprob: -9.132962226867676

Token 289: ' children' (ID: 3953)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.030306559056043625
    2. 'start' → logprob: -3.905306577682495
    3. 'src' → logprob: -5.905306339263916
    4. 'd' → logprob: -6.030306339263916
    5. 's' → logprob: -6.655306339263916
    6. 'source' → logprob: -7.280306339263916
    7. 'ds' → logprob: -7.530306339263916
    8. 'dp' → logprob: -7.655306339263916
    9. ' dist' → logprob: -8.405306816101074
    10. 'distance' → logprob: -9.155306816101074

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20993706583976746
    2. '_dist' → logprob: -2.08493709564209
    3. '=' → logprob: -2.95993709564209
    4. ',' → logprob: -5.58493709564209
    5. '_' → logprob: -5.95993709564209
    6. 's' → logprob: -6.70993709564209
    7. 'dist' → logprob: -6.70993709564209
    8. '_d' → logprob: -7.08493709564209
    9. 'Dist' → logprob: -7.20993709564209
    10. '_distance' → logprob: -7.33493709564209

Token 291: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5738446712493896
    2. 'list' → logprob: -1.5738446712493896
    3. '[list' → logprob: -2.4488446712493896
    4. '[' → logprob: -2.8238446712493896
    5. '[p' → logprob: -3.6988446712493896
    6. 'set' → logprob: -3.9488446712493896
    7. ' []' → logprob: -4.573844909667969
    8. ' list' → logprob: -4.698844909667969
    9. '[]
' → logprob: -4.823844909667969
    10. ' [' → logprob: -5.198844909667969

Token 292: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06847107410430908
    2. '   ' → logprob: -3.1934709548950195
    3. ' for' → logprob: -3.6934709548950195
    4. 'children' → logprob: -9.19347095489502
    5. '	for' → logprob: -9.69347095489502
    6. 'p' → logprob: -10.31847095489502
    7. '    
' → logprob: -11.06847095489502
    8. 'child' → logprob: -11.19347095489502
    9. 'while' → logprob: -11.69347095489502
    10. '
' → logprob: -12.06847095489502

Token 293: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0020064341370016336
    2. 'p' → logprob: -7.252006530761719
    3. 'while' → logprob: -7.502006530761719
    4. 'children' → logprob: -8.127006530761719
    5. 'if' → logprob: -8.627006530761719
    6. 'line' → logprob: -9.002006530761719
    7. ' for' → logprob: -9.502006530761719
    8. 'child' → logprob: -10.002006530761719
    9. 'parents' → logprob: -12.252006530761719
    10. 'count' → logprob: -12.752006530761719

Token 294: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009482608293183148
    2. '_i' → logprob: -7.125948429107666
    3. ' _' → logprob: -9.000947952270508
    4. '_p' → logprob: -11.000947952270508
    5. '_child' → logprob: -13.875947952270508
    6. '_j' → logprob: -14.250947952270508
    7. '_in' → logprob: -14.750947952270508
    8. '_c' → logprob: -14.875947952270508
    9. '_
' → logprob: -15.625947952270508
    10. 'i' → logprob: -15.625947952270508

Token 295: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6327102184295654
    2. ' in' → logprob: -0.7577102184295654
    3. ' ' → logprob: -9.757710456848145
    4. 'i' → logprob: -10.507710456848145
    5. 'n' → logprob: -11.632710456848145
    6. ' i' → logprob: -12.257710456848145
    7. '  ' → logprob: -13.007710456848145
    8. 'import' → logprob: -13.132710456848145
    9. '```' → logprob: -13.257710456848145
    10. ',' → logprob: -14.132710456848145

Token 296: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011883260449394584
    2. ' range' → logprob: -6.751188278198242
    3. 'children' → logprob: -11.626188278198242
    4. 'r' → logprob: -13.376188278198242
    5. 'ange' → logprob: -13.376188278198242
    6. 'ran' → logprob: -13.626188278198242
    7. ' ' → logprob: -13.876188278198242
    8. '(range' → logprob: -14.251188278198242
    9. 'rang' → logprob: -14.376188278198242
    10. '   ' → logprob: -14.751188278198242

Token 297: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0030660107731819153
    2. 'p' → logprob: -5.878066062927246
    3. ' p' → logprob: -8.878066062927246
    4. '(' → logprob: -9.503066062927246
    5. ' (' → logprob: -10.003066062927246
    6. ' ' → logprob: -14.628066062927246
    7. '   ' → logprob: -14.628066062927246
    8. '(children' → logprob: -15.503066062927246
    9. '(n' → logprob: -15.628066062927246
    10. '(
' → logprob: -15.878066062927246

Token 298: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4288012683391571
    2. '):' → logprob: -1.0538012981414795
    3. '):
' → logprob: -10.303801536560059
    4. '   ' → logprob: -10.678801536560059
    5. ')' → logprob: -11.178801536560059
    6. ',' → logprob: -11.428801536560059
    7. ':' → logprob: -11.803801536560059
    8. ':
' → logprob: -12.553801536560059
    9. ' ):
' → logprob: -12.678801536560059
    10. '():
' → logprob: -13.428801536560059

Token 299: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016218608943745494
    2. ' c' → logprob: -7.501621723175049
    3. '
' → logprob: -8.751622200012207
    4. ' children' → logprob: -8.751622200012207
    5. '    ' → logprob: -8.876622200012207
    6. '    
' → logprob: -9.001622200012207
    7. 'c' → logprob: -9.126622200012207
    8. '       ' → logprob: -9.501622200012207
    9. '   ' → logprob: -9.751622200012207
    10. ' 
' → logprob: -10.001622200012207

Token 300: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.28826621174812317
    2. 'children' → logprob: -1.9132661819458008
    3. 'child' → logprob: -3.288266181945801
    4. 'x' → logprob: -3.288266181945801
    5. 'a' → logprob: -4.413266181945801
    6. ' c' → logprob: -5.913266181945801
    7. ' children' → logprob: -6.038266181945801
    8. 'line' → logprob: -6.413266181945801
    9. 'ch' → logprob: -6.663266181945801
    10. '   ' → logprob: -6.663266181945801

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5388538837432861
    2. '=' → logprob: -0.9138538837432861
    3. ',' → logprob: -4.163853645324707
    4. '=int' → logprob: -10.663853645324707
    5. ' ,' → logprob: -10.788853645324707
    6. 'c' → logprob: -12.913853645324707
    7. '.append' → logprob: -12.913853645324707
    8. ' ' → logprob: -13.163853645324707
    9. '.' → logprob: -13.163853645324707
    10. 'u' → logprob: -13.788853645324707

Token 302: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01416350994259119
    2. ' int' → logprob: -4.264163494110107
    3. '<int' → logprob: -17.764163970947266
    4. 'in' → logprob: -17.889163970947266
    5. '[int' → logprob: -17.889163970947266
    6. '(int' → logprob: -18.389163970947266
    7. '	int' → logprob: -18.389163970947266
    8. '=int' → logprob: -18.639163970947266
    9. 'sys' → logprob: -18.764163970947266
    10. '   ' → logprob: -18.764163970947266

Token 303: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -2.8444881536415778e-05
    2. 'sys' → logprob: -10.500028610229492
    3. '(' → logprob: -14.375028610229492
    4. '=sys' → logprob: -15.875028610229492
    5. ' sys' → logprob: -16.250028610229492
    6. '	sys' → logprob: -16.875028610229492
    7. '(
' → logprob: -19.125028610229492
    8. '(system' → logprob: -19.625028610229492
    9. '_sys' → logprob: -19.875028610229492
    10. '/sys' → logprob: -20.500028610229492

Token 304: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.8193366486229934e-05
    2. 'stdin' → logprob: -11.125018119812012
    3. '.readline' → logprob: -12.750018119812012
    4. '(stdin' → logprob: -15.625018119812012
    5. '.argv' → logprob: -15.750018119812012
    6. '.' → logprob: -16.375019073486328
    7. '.stdout' → logprob: -16.625019073486328
    8. '.std' → logprob: -16.875019073486328
    9. ')' → logprob: -18.250019073486328
    10. 'in' → logprob: -18.625019073486328

Token 305: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1472419600977446e-06
    2. '.stdin' → logprob: -14.625000953674316
    3. 'stdin' → logprob: -14.875000953674316
    4. ' readline' → logprob: -15.750000953674316
    5. '.' → logprob: -16.625001907348633
    6. 'sys' → logprob: -18.125001907348633
    7. 'read' → logprob: -18.375001907348633
    8. 'line' → logprob: -19.000001907348633
    9. '(stdin' → logprob: -19.375001907348633
    10. '().' → logprob: -19.625001907348633

Token 306: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10121393948793411
    2. '())' → logprob: -2.3512139320373535
    3. '()' → logprob: -6.9762139320373535
    4. '()
' → logprob: -10.476214408874512
    5. '())
' → logprob: -10.851214408874512
    6. ')' → logprob: -10.976214408874512
    7. ' ())' → logprob: -11.976214408874512
    8. '(' → logprob: -14.476214408874512
    9. ' ().' → logprob: -14.726214408874512
    10. '();)' → logprob: -15.101214408874512

Token 307: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00231547630392015
    2. '	children' → logprob: -6.752315521240234
    3. '       ' → logprob: -7.127315521240234
    4. 'children' → logprob: -8.877315521240234
    5. '(children' → logprob: -9.502315521240234
    6. '<|end|>' → logprob: -9.877315521240234
    7. ' children' → logprob: -10.377315521240234
    8. '  ' → logprob: -11.627315521240234
    9. '
' → logprob: -12.002315521240234
    10. '.children' → logprob: -12.377315521240234

Token 308: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' (adapté à ' children') → logprob: -0.4796176850795746
    2. ' children' → logprob: -1.354617714881897
    3. '   ' → logprob: -2.1046175956726074
    4. '	children' → logprob: -7.229617595672607
    5. '(children' → logprob: -8.479618072509766
    6. '.children' → logprob: -9.729618072509766
    7. '_children' → logprob: -10.604618072509766
    8. '  ' → logprob: -11.854618072509766
    9. ' ' → logprob: -11.979618072509766
    10. 'child' → logprob: -12.354618072509766

Token 309: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00862213596701622
    2. '.' → logprob: -4.758622169494629
    3. '.ap' → logprob: -12.508622169494629
    4. '.app' → logprob: -13.133622169494629
    5. '.extend' → logprob: -13.883622169494629
    6. ' .' → logprob: -14.633622169494629
    7. '.push' → logprob: -15.383622169494629
    8. '.setdefault' → logprob: -15.633622169494629
    9. '.add' → logprob: -15.758622169494629
    10. ').' → logprob: -17.008621215820312

Token 310: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.868328920158092e-05
    2. '(' → logprob: -10.500028610229492
    3. 'c' → logprob: -13.875028610229492
    4. '(
' → logprob: -16.375028610229492
    5. '((' → logprob: -17.000028610229492
    6. ')c' → logprob: -17.375028610229492
    7. ' (' → logprob: -17.875028610229492
    8. ' c' → logprob: -20.500028610229492
    9. '(ci' → logprob: -20.750028610229492
    10. '(C' → logprob: -20.750028610229492

Token 311: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ' )' → logprob: -12.375006675720215
    3. ')
' → logprob: -13.375006675720215
    4. '<|end|>' → logprob: -15.500006675720215
    5. '
' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.3750057220459
    7. '())' → logprob: -17.3750057220459
    8. '))' → logprob: -17.8750057220459
    9. ')

' → logprob: -18.1250057220459
    10. '#' → logprob: -18.1250057220459

Token 312: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.061432864516973495
    2. 'start' → logprob: -3.1864328384399414
    3. 'parents' → logprob: -4.811432838439941
    4. 'dp' → logprob: -6.311432838439941
    5. 'source' → logprob: -6.686432838439941
    6. 'distance' → logprob: -6.811432838439941
    7. 'parent' → logprob: -7.061432838439941
    8. 'src' → logprob: -7.311432838439941
    9. 's' → logprob: -7.311432838439941
    10. 'd' → logprob: -7.311432838439941

Token 313: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0732240155339241
    2. 'start' → logprob: -2.9482240676879883
    3. 'd' → logprob: -5.573224067687988
    4. 'parents' → logprob: -5.948224067687988
    5. 'parent' → logprob: -6.323224067687988
    6. 'src' → logprob: -6.448224067687988
    7. 'dp' → logprob: -6.823224067687988
    8. 's' → logprob: -7.073224067687988
    9. 'dad' → logprob: -7.323224067687988
    10. 'father' → logprob: -7.698224067687988

Token 314: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.5678151845932007
    2. '_from' → logprob: -1.8178151845932007
    3. '1' → logprob: -2.5678153038024902
    4. ' =' → logprob: -2.6928153038024902
    5. '_s' → logprob: -2.8178153038024902
    6. 'from' → logprob: -4.06781530380249
    7. 'start' → logprob: -4.19281530380249
    8. 's' → logprob: -4.31781530380249
    9. '=' → logprob: -4.81781530380249
    10. '_source' → logprob: -6.06781530380249

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07015227526426315
    2. '=' → logprob: -2.6951522827148438
    3. ',' → logprob: -8.570152282714844
    4. ')' → logprob: -11.570152282714844
    5. '1' → logprob: -12.320152282714844
    6. 's' → logprob: -12.445152282714844
    7. ']' → logprob: -13.070152282714844
    8. '[' → logprob: -13.570152282714844
    9. '=start' → logprob: -13.695152282714844
    10. '0' → logprob: -13.820152282714844

Token 316: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1269298940896988
    2. ' d' → logprob: -2.126929998397827
    3. '   ' → logprob: -14.126930236816406
    4. '	d' → logprob: -15.001930236816406
    5. '(d' → logprob: -15.501930236816406
    6. ' ' → logprob: -15.626930236816406
    7. '[d' → logprob: -16.626930236816406
    8. 'dist' → logprob: -16.876930236816406
    9. ')d' → logprob: -17.001930236816406
    10. '  ' → logprob: -17.001930236816406

Token 317: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -4.000763510703109e-05
    2. 'ijk' → logprob: -10.750040054321289
    3. '(start' → logprob: -11.750040054321289
    4. 'ij' → logprob: -12.500040054321289
    5. '(n' → logprob: -13.000040054321289
    6. '(' → logprob: -13.750040054321289
    7. 'ijks' → logprob: -14.125040054321289
    8. '(i' → logprob: -14.250040054321289
    9. 'jik' → logprob: -14.250040054321289
    10. 'jk' → logprob: -15.250040054321289

Token 318: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000915039679966867
    2. '(' → logprob: -7.000915050506592
    3. '(
' → logprob: -13.750914573669434
    4. ' (' → logprob: -13.875914573669434
    5. '(len' → logprob: -14.375914573669434
    6. ')(' → logprob: -15.375914573669434
    7. ')' → logprob: -15.625914573669434
    8. '```' → logprob: -15.625914573669434
    9. ')n' → logprob: -16.12591552734375
    10. 'n' → logprob: -16.25091552734375

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011689399980241433
    2. '(graph' → logprob: -9.125117301940918
    3. ' ,' → logprob: -12.125117301940918
    4. '(' → logprob: -13.875117301940918
    5. ',
' → logprob: -14.250117301940918
    6. ',n' → logprob: -15.250117301940918
    7. 'graph' → logprob: -15.625117301940918
    8. '```' → logprob: -16.0001163482666
    9. ')' → logprob: -16.2501163482666
    10. ',g' → logprob: -17.1251163482666

Token 320: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00043376852408982813
    2. ' graph' → logprob: -7.750433921813965
    3. '	graph' → logprob: -13.250433921813965
    4. '(graph' → logprob: -13.625433921813965
    5. '.graph' → logprob: -18.12543296813965
    6. ')' → logprob: -18.12543296813965
    7. '<|end|>' → logprob: -18.62543296813965
    8. '_graph' → logprob: -18.87543296813965
    9. 'raph' → logprob: -19.12543296813965
    10. 'graphs' → logprob: -19.75043296813965

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ',start' → logprob: -13.87500286102295
    3. ' ,' → logprob: -14.00000286102295
    4. ',
' → logprob: -15.12500286102295
    5. '0' → logprob: -15.25000286102295
    6. ')' → logprob: -17.125001907348633
    7. '1' → logprob: -17.250001907348633
    8. ',n' → logprob: -17.250001907348633
    9. '(' → logprob: -18.250001907348633
    10. '```' → logprob: -18.375001907348633

Token 322: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7252845029579476e-05
    2. ' ' → logprob: -10.625027656555176
    3. 'children' → logprob: -13.375027656555176
    4. '1' → logprob: -14.625027656555176
    5. 's' → logprob: -14.875027656555176
    6. ')' → logprob: -15.250027656555176
    7. 'p' → logprob: -16.37502670288086
    8. '   ' → logprob: -17.00002670288086
    9. ' children' → logprob: -17.43752670288086
    10. 'start' → logprob: -17.43752670288086

Token 323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018863992590922862
    2. 'children' → logprob: -8.750188827514648
    3. ' ' → logprob: -11.500188827514648
    4. '1' → logprob: -11.750188827514648
    5. 'p' → logprob: -12.125188827514648
    6. ')' → logprob: -13.500188827514648
    7. 'start' → logprob: -13.875188827514648
    8. 's' → logprob: -13.875188827514648
    9. 'c' → logprob: -14.250188827514648
    10. 'n' → logprob: -14.375188827514648

Token 324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031791406217962503
    2. ')
' → logprob: -5.75317907333374
    3. ')
' → logprob: -14.378179550170898
    4. ' )' → logprob: -14.628179550170898
    5. ')

' → logprob: -15.003179550170898
    6. ' )
' → logprob: -17.8781795501709
    7. ')`' → logprob: -18.3781795501709
    8. '   ' → logprob: -18.5031795501709
    9. '),' → logprob: -18.6281795501709
    10. ')#' → logprob: -18.7531795501709

Token 325: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2925930917263031
    2. '   ' → logprob: -1.5425931215286255
    3. ' dist' → logprob: -3.917593002319336
    4. '
' → logprob: -4.042593002319336
    5. '    
' → logprob: -6.542593002319336
    6. '	dist' → logprob: -7.667593002319336
    7. '_dist' → logprob: -8.917593002319336
    8. '.dist' → logprob: -10.042593002319336
    9. '<|end|>' → logprob: -10.167593002319336
    10. 'd' → logprob: -10.167593002319336

Token 326: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.004063082858920097
    2. 'min' → logprob: -5.879063129425049
    3. 'best' → logprob: -8.37906265258789
    4. '   ' → logprob: -8.37906265258789
    5. 'for' → logprob: -9.00406265258789
    6. 'answers' → logprob: -9.12906265258789
    7. ' dist' → logprob: -9.50406265258789
    8. 'max' → logprob: -9.62906265258789
    9. 'results' → logprob: -9.87906265258789
    10. 'answer' → logprob: -10.12906265258789

Token 327: '_end' (ID: 13707)
  Prédit: '_children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_children' → logprob: -0.4731602966785431
    2. '_start' → logprob: -1.8481602668762207
    3. '_end' → logprob: -1.9731602668762207
    4. '_p' → logprob: -3.3481602668762207
    5. '_to' → logprob: -4.348160266876221
    6. '_finish' → logprob: -5.223160266876221
    7. '_child' → logprob: -5.348160266876221
    8. '_parent' → logprob: -5.723160266876221
    9. '_goal' → logprob: -5.973160266876221
    10. '_sum' → logprob: -6.098160266876221

Token 328: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759397745132446
    2. ' =' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.450940132141113
    4. '[' → logprob: -16.575939178466797
    5. ',' → logprob: -17.325939178466797
    6. ')' → logprob: -17.575939178466797
    7. 's' → logprob: -17.825939178466797
    8. '_' → logprob: -18.200939178466797
    9. '=end' → logprob: -18.325939178466797
    10. '＝' → logprob: -18.575939178466797

Token 329: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2519449293613434
    2. ' d' → logprob: -1.501944899559021
    3. '(d' → logprob: -11.501944541931152
    4. '(' → logprob: -13.126944541931152
    5. ')d' → logprob: -14.251944541931152
    6. '[' → logprob: -14.376944541931152
    7. '[d' → logprob: -14.501944541931152
    8. 's' → logprob: -14.876944541931152
    9. ' ' → logprob: -15.251944541931152
    10. '	d' → logprob: -15.376944541931152

Token 330: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.00025394887779839337
    2. 'ijk' → logprob: -8.375253677368164
    3. 'ij' → logprob: -11.125253677368164
    4. 'jk' → logprob: -12.375253677368164
    5. 'jik' → logprob: -13.000253677368164
    6. 'ijkl' → logprob: -14.375253677368164
    7. 'ijks' → logprob: -14.375253677368164
    8. 'ijkt' → logprob: -15.375253677368164
    9. '   ' → logprob: -16.000253677368164
    10. 'ik' → logprob: -16.250253677368164

Token 331: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -15.125005722045898
    4. 'n' → logprob: -15.625005722045898
    5. '(len' → logprob: -16.7500057220459
    6. '<|end|>' → logprob: -17.5000057220459
    7. ' n' → logprob: -18.5000057220459
    8. '(
' → logprob: -18.6250057220459
    9. ',n' → logprob: -19.3750057220459
    10. '<n' → logprob: -19.6250057220459

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47657954692840576
    2. '(n' → logprob: -0.9765795469284058
    3. ',n' → logprob: -6.101579666137695
    4. '(' → logprob: -9.226579666137695
    5. ' ,' → logprob: -9.726579666137695
    6. ')' → logprob: -9.851579666137695
    7. ' (' → logprob: -10.851579666137695
    8. 'n' → logprob: -10.976579666137695
    9. '<|end|>' → logprob: -12.726579666137695
    10. ' n' → logprob: -12.851579666137695

Token 333: ' graph' (ID: 7465)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06197306513786316
    2. ' n' → logprob: -2.8119730949401855
    3. '(n' → logprob: -12.561972618103027
    4. ')n' → logprob: -14.186972618103027
    5. '	n' → logprob: -14.686972618103027
    6. ')' → logprob: -15.186972618103027
    7. '<|end|>' → logprob: -15.561972618103027
    8. 'graph' → logprob: -16.061973571777344
    9. '   ' → logprob: -16.186973571777344
    10. ' ' → logprob: -16.686973571777344

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010139751975657418
    2. ',n' → logprob: -9.375101089477539
    3. '(n' → logprob: -11.625101089477539
    4. ' ,' → logprob: -12.000101089477539
    5. 'n' → logprob: -14.125101089477539
    6. ',
' → logprob: -14.375101089477539
    7. ' n' → logprob: -16.50010108947754
    8. '(' → logprob: -17.12510108947754
    9. '[n' → logprob: -17.37510108947754
    10. '(),' → logprob: -17.87510108947754

Token 335: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019342314917594194
    2. ' n' → logprob: -6.251934051513672
    3. '1' → logprob: -12.501934051513672
    4. '0' → logprob: -13.876934051513672
    5. '   ' → logprob: -15.126934051513672
    6. '(n' → logprob: -15.251934051513672
    7. ')n' → logprob: -15.751934051513672
    8. ' ' → logprob: -16.376934051513672
    9. ')' → logprob: -16.626934051513672
    10. '	n' → logprob: -17.001934051513672

Token 336: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00034833617974072695
    2. ' -' → logprob: -8.125348091125488
    3. '1' → logprob: -9.875348091125488
    4. ')' → logprob: -14.875348091125488
    5. '−' → logprob: -16.375349044799805
    6. '()-' → logprob: -16.375349044799805
    7. ' ' → logprob: -16.625349044799805
    8. '<|end|>' → logprob: -16.625349044799805
    9. '–' → logprob: -16.750349044799805
    10. '   ' → logprob: -17.250349044799805

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.875003814697266
    3. ')' → logprob: -14.875003814697266
    4. '   ' → logprob: -15.000003814697266
    5. '```' → logprob: -17.000003814697266
    6. '
' → logprob: -17.437503814697266
    7. '<|end|>' → logprob: -17.687503814697266
    8. '2' → logprob: -17.937503814697266
    9. '  ' → logprob: -18.125003814697266
    10. '-' → logprob: -18.500003814697266

Token 338: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.125001907348633
    4. ')

' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.125001907348633
    6. ')`' → logprob: -17.750001907348633
    7. '))' → logprob: -18.000001907348633
    8. ').' → logprob: -19.250001907348633
    9. ')#' → logprob: -19.625001907348633
    10. '),' → logprob: -19.625001907348633

Token 339: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3859633505344391
    2. 'best' → logprob: -1.6359633207321167
    3. 'answer' → logprob: -2.7609634399414062
    4. 'ans' → logprob: -3.3859634399414062
    5. 'result' → logprob: -4.510963439941406
    6. 'total' → logprob: -5.510963439941406
    7. 'dp' → logprob: -5.635963439941406
    8. 'res' → logprob: -5.885963439941406
    9. '   ' → logprob: -6.510963439941406
    10. 'dist' → logprob: -6.760963439941406

Token 340: ' dist' (ID: 3601)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3933674991130829
    2. 'best' → logprob: -1.7683675289154053
    3. 'ans' → logprob: -2.3933675289154053
    4. 'answer' → logprob: -3.7683675289154053
    5. 'total' → logprob: -4.268367290496826
    6. 'result' → logprob: -4.893367290496826
    7. 'dp' → logprob: -5.018367290496826
    8. 'res' → logprob: -5.018367290496826
    9. 'possible' → logprob: -6.143367290496826
    10. 'max' → logprob: -7.393367290496826

Token 341: '_short' (ID: 40379)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.7188510298728943
    2. '_sum' → logprob: -1.593851089477539
    3. '_best' → logprob: -2.593851089477539
    4. '_children' → logprob: -2.968851089477539
    5. '_start' → logprob: -3.218851089477539
    6. '_' → logprob: -3.343851089477539
    7. '_to' → logprob: -3.593851089477539
    8. 'min' → logprob: -4.343851089477539
    9. '_ans' → logprob: -4.718851089477539
    10. '_total' → logprob: -4.843851089477539

Token 342: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -9.782141569303349e-05
    2. '=' → logprob: -10.37509822845459
    3. '_path' → logprob: -10.37509822845459
    4. ' =' → logprob: -11.62509822845459
    5. '_est' → logprob: -12.00009822845459
    6. 'test' → logprob: -12.75009822845459
    7. 'path' → logprob: -12.87509822845459
    8. '   ' → logprob: -13.00009822845459
    9. 'st' → logprob: -13.12509822845459
    10. 'es' → logprob: -13.25009822845459

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01716964691877365
    2. '=' → logprob: -4.26716947555542
    3. 's' → logprob: -6.14216947555542
    4. '_to' → logprob: -8.392169952392578
    5. ',' → logprob: -9.017169952392578
    6. '[' → logprob: -9.267169952392578
    7. '_' → logprob: -9.517169952392578
    8. ' ' → logprob: -9.767169952392578
    9. '_path' → logprob: -9.892169952392578
    10. 'to' → logprob: -10.267169952392578

Token 344: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.011191646568477154
    2. '[' → logprob: -5.5111918449401855
    3. 'd' → logprob: -6.1361918449401855
    4. ' dist' → logprob: -6.5111918449401855
    5. 'float' → logprob: -6.5111918449401855
    6. 'min' → logprob: -7.1361918449401855
    7. '[min' → logprob: -7.1361918449401855
    8. ' [' → logprob: -8.761191368103027
    9. '[d' → logprob: -10.011191368103027
    10. 'sys' → logprob: -10.636191368103027

Token 345: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.005409611389040947
    2. '_end' → logprob: -5.2554097175598145
    3. '_short' → logprob: -9.255409240722656
    4. '[start' → logprob: -9.880409240722656
    5. 'start' → logprob: -10.755409240722656
    6. '[end' → logprob: -13.130409240722656
    7. '_' → logprob: -13.255409240722656
    8. '[_' → logprob: -13.505409240722656
    9. '[n' → logprob: -14.755409240722656
    10. '[' → logprob: -15.130409240722656

Token 346: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.40821459889411926
    2. '[' → logprob: -1.1582145690917969
    3. '[p' → logprob: -4.533214569091797
    4. '[:]' → logprob: -5.158214569091797
    5. '[-' → logprob: -5.533214569091797
    6. '[c' → logprob: -8.908214569091797
    7. '.copy' → logprob: -8.908214569091797
    8. '[:' → logprob: -8.908214569091797
    9. 'children' → logprob: -10.408214569091797
    10. '.children' → logprob: -10.533214569091797

Token 347: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00033951509976759553
    2. ' -' → logprob: -8.00033950805664
    3. '1' → logprob: -12.50033950805664
    4. '   ' → logprob: -15.37533950805664
    5. '−' → logprob: -16.62533950805664
    6. ' ' → logprob: -17.00033950805664
    7. '–' → logprob: -17.87533950805664
    8. '()-' → logprob: -18.00033950805664
    9. '-
' → logprob: -19.12533950805664
    10. '  ' → logprob: -19.50033950805664

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.375005722045898
    3. '   ' → logprob: -14.125005722045898
    4. ']' → logprob: -15.687505722045898
    5. '```' → logprob: -15.687505722045898
    6. '
' → logprob: -15.750005722045898
    7. '       ' → logprob: -16.2500057220459
    8. '           ' → logprob: -16.7500057220459
    9. '-' → logprob: -17.2500057220459
    10. '  ' → logprob: -17.8125057220459

Token 349: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018052779138088226
    2. '<|end|>' → logprob: -5.268052577972412
    3. ' ]' → logprob: -5.518052577972412
    4. '   ' → logprob: -5.643052577972412
    5. '
' → logprob: -5.643052577972412
    6. ')' → logprob: -6.893052577972412
    7. ']
' → logprob: -8.64305305480957
    8. '<|end|>' → logprob: -8.89305305480957
    9. ' ' → logprob: -9.64305305480957
    10. '  ' → logprob: -10.39305305480957

Token 350: '   ' (ID: 271)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -1.0451475381851196
    2. 'min' → logprob: -1.2951475381851196
    3. 'best' → logprob: -2.04514741897583
    4. 'ans' → logprob: -2.04514741897583
    5. 'result' → logprob: -2.42014741897583
    6. 'res' → logprob: -4.79514741897583
    7. 'dist' → logprob: -5.54514741897583
    8. 'valid' → logprob: -6.04514741897583
    9. 'dp' → logprob: -6.17014741897583
    10. 'possible' → logprob: -6.29514741897583

Token 351: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.3240528106689453
    2. 'answer' → logprob: -1.3240528106689453
    3. 'ans' → logprob: -1.4490528106689453
    4. 'result' → logprob: -2.3240528106689453
    5. 'best' → logprob: -2.6990528106689453
    6. 'res' → logprob: -3.5740528106689453
    7. 'possible' → logprob: -4.949052810668945
    8. 'count' → logprob: -5.074052810668945
    9. 'total' → logprob: -5.199052810668945
    10. 'dist' → logprob: -5.199052810668945

Token 352: ' count' (ID: 3605)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9251098036766052
    2. 'best' → logprob: -1.30010986328125
    3. 'answer' → logprob: -1.92510986328125
    4. 'ans' → logprob: -2.42510986328125
    5. 'result' → logprob: -3.30010986328125
    6. 'res' → logprob: -3.55010986328125
    7. 'possible' → logprob: -4.80010986328125
    8. 'dp' → logprob: -5.30010986328125
    9. 'max' → logprob: -5.55010986328125
    10. 'valid' → logprob: -6.55010986328125

Token 353: ' number' (ID: 2086)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06538194417953491
    2. 'valid' → logprob: -3.6903820037841797
    3. 'result' → logprob: -4.81538200378418
    4. ' =' → logprob: -5.06538200378418
    5. 'answer' → logprob: -5.56538200378418
    6. '_count' → logprob: -5.56538200378418
    7. 'ans' → logprob: -5.56538200378418
    8. '=' → logprob: -6.06538200378418
    9. 'children' → logprob: -6.31538200378418
    10. 'child' → logprob: -6.31538200378418

Token 354: ' of' (ID: 328)
  Prédit: '_children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_children' → logprob: -0.611757218837738
    2. '_of' → logprob: -1.4867572784423828
    3. '_' → logprob: -2.111757278442383
    4. '=' → logprob: -2.986757278442383
    5. ' =' → logprob: -3.236757278442383
    6. 'of' → logprob: -4.111757278442383
    7. 's' → logprob: -6.111757278442383
    8. '_count' → logprob: -7.861757278442383
    9. '   ' → logprob: -8.486757278442383
    10. ' of' → logprob: -8.611757278442383

Token 355: ' shortest' (ID: 70564)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.03911106660962105
    2. 'ways' → logprob: -3.7891111373901367
    3. 'paths' → logprob: -4.539111137390137
    4. 'valid' → logprob: -5.664111137390137
    5. 'pairs' → logprob: -8.164111137390137
    6. 'short' → logprob: -8.289111137390137
    7. ' children' → logprob: -8.539111137390137
    8. 'possible' → logprob: -9.039111137390137
    9. 'routes' → logprob: -9.414111137390137
    10. 'parents' → logprob: -9.539111137390137

Token 356: ' paths' (ID: 23373)
  Prédit: '_paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.05016307905316353
    2. 'paths' → logprob: -3.3001630306243896
    3. '_path' → logprob: -4.675163269042969
    4. ' paths' → logprob: -6.925163269042969
    5. '_children' → logprob: -6.925163269042969
    6. 'path' → logprob: -8.050163269042969
    7. '_' → logprob: -8.800163269042969
    8. '_edges' → logprob: -9.300163269042969
    9. '_routes' → logprob: -9.925163269042969
    10. '_nodes' → logprob: -10.050163269042969

Token 357: ' from' (ID: 591)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.29820728302001953
    2. 'count' → logprob: -1.5482072830200195
    3. 'path' → logprob: -4.1732072830200195
    4. 'ways' → logprob: -4.5482072830200195
    5. 'counts' → logprob: -4.9232072830200195
    6. 'dp' → logprob: -5.1732072830200195
    7. '   ' → logprob: -6.0482072830200195
    8. 'cnt' → logprob: -6.7982072830200195
    9. 'dist' → logprob: -7.1732072830200195
    10. 'num' → logprob: -7.5482072830200195

Token 358: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.032022275030612946
    2. 'collections' → logprob: -4.157022476196289
    3. 'start' → logprob: -5.032022476196289
    4. 'children' → logprob: -5.782022476196289
    5. 'both' → logprob: -6.157022476196289
    6. '[' → logprob: -6.907022476196289
    7. 'each' → logprob: -7.282022476196289
    8. 'all' → logprob: -7.407022476196289
    9. 'import' → logprob: -7.657022476196289
    10. 'sys' → logprob: -7.657022476196289

Token 359: ' to' (ID: 316)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.6351779699325562
    2. '   ' → logprob: -1.6351779699325562
    3. 'dist' → logprob: -2.3851780891418457
    4. 'ways' → logprob: -3.2601780891418457
    5. 'dp' → logprob: -3.3851780891418457
    6. 'count' → logprob: -3.3851780891418457
    7. 'counts' → logprob: -4.385178089141846
    8. ' ways' → logprob: -4.885178089141846
    9. ' and' → logprob: -4.885178089141846
    10. 'path' → logprob: -5.010178089141846

Token 360: ' each' (ID: 2454)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5342621207237244
    2. 'each' → logprob: -1.6592621803283691
    3. 'end' → logprob: -2.534262180328369
    4. 'n' → logprob: -2.659262180328369
    5. 'all' → logprob: -3.784262180328369
    6. 'children' → logprob: -3.909262180328369
    7. 'u' → logprob: -5.034262180328369
    8. ' ' → logprob: -5.034262180328369
    9. ' each' → logprob: -5.034262180328369
    10. 'node' → logprob: -5.284262180328369

Token 361: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.09010779857635498
    2. ' node' → logprob: -2.4651079177856445
    3. 'vertex' → logprob: -7.5901079177856445
    4. '[node' → logprob: -9.090107917785645
    5. '_node' → logprob: -9.340107917785645
    6. ')' → logprob: -9.590107917785645
    7. ']' → logprob: -9.590107917785645
    8. '=' → logprob: -9.965107917785645
    9. ' vertex' → logprob: -10.215107917785645
    10. '[]' → logprob: -10.215107917785645

Token 362: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.566293478012085
    2. 'paths' → logprob: -1.441293478012085
    3. ' paths' → logprob: -3.066293478012085
    4. ' count' → logprob: -3.316293478012085
    5. 'path' → logprob: -3.816293478012085
    6. 'counts' → logprob: -4.066293716430664
    7. 'ways' → logprob: -4.316293716430664
    8. ' ways' → logprob: -4.566293716430664
    9. '   ' → logprob: -4.566293716430664
    10. 'cnt' → logprob: -4.566293716430664

Token 363: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.23742885887622833
    2. '   ' → logprob: -2.612428903579712
    3. 'counts' → logprob: -2.987428903579712
    4. 'paths' → logprob: -3.612428903579712
    5. 'cnt' → logprob: -3.862428903579712
    6. 'num' → logprob: -3.987428903579712
    7. 'path' → logprob: -4.362428665161133
    8. 'dist' → logprob: -5.612428665161133
    9. ' count' → logprob: -6.237428665161133
    10. 'dp' → logprob: -6.862428665161133

Token 364: ' ways' (ID: 6984)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.052210621535778046
    2. 'paths' → logprob: -3.302210569381714
    3. 'path' → logprob: -4.677210807800293
    4. 'counts' → logprob: -5.802210807800293
    5. 'cnt' → logprob: -7.052210807800293
    6. 'num' → logprob: -8.052210807800293
    7. 'dist' → logprob: -8.677210807800293
    8. 'ways' (adapté à ' ways') → logprob: -9.052210807800293
    9. 'dp' → logprob: -9.052210807800293
    10. '   ' → logprob: -9.302210807800293

Token 365: '_start' (ID: 10949)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861729308962822
    2. '=' → logprob: -4.758617401123047
    3. '   ' → logprob: -13.383617401123047
    4. ' =[' → logprob: -14.758617401123047
    5. '=[' → logprob: -14.883617401123047
    6. '[' → logprob: -15.508617401123047
    7. ' ' → logprob: -15.633617401123047
    8. ',' → logprob: -17.008617401123047
    9. '```' → logprob: -17.008617401123047
    10. '  ' → logprob: -17.133617401123047

Token 366: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889088988304138
    2. '=' → logprob: -2.578890800476074
    3. '[' → logprob: -14.578890800476074
    4. '=[' → logprob: -15.203890800476074
    5. ' =[' → logprob: -15.328890800476074
    6. '   ' → logprob: -16.07889175415039
    7. ' ' → logprob: -16.70389175415039
    8. ',' → logprob: -17.07889175415039
    9. ')' → logprob: -18.57889175415039
    10. '  ' → logprob: -18.57889175415039

Token 367: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009387354948557913
    2. ' [' → logprob: -7.625938892364502
    3. '[n' → logprob: -8.375938415527344
    4. '[count' → logprob: -9.375938415527344
    5. '[node' → logprob: -9.875938415527344
    6. '   ' → logprob: -10.000938415527344
    7. '[int' → logprob: -11.750938415527344
    8. '[num' → logprob: -11.875938415527344
    9. '[len' → logprob: -12.000938415527344
    10. '[class' → logprob: -12.500938415527344

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. 'float' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.500001907348633
    4. 'int' → logprob: -18.125001907348633
    5. '1' → logprob: -18.500001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '[' → logprob: -20.375001907348633
    8. '```' → logprob: -20.500001907348633
    9. '۰' → logprob: -20.500001907348633
    10. '-' → logprob: -20.875001907348633

Token 369: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019366045016795397
    2. ' ]' → logprob: -6.751936435699463
    3. ']*' → logprob: -7.251936435699463
    4. ' for' → logprob: -10.001936912536621
    5. 'for' → logprob: -12.126936912536621
    6. ' *' → logprob: -13.501936912536621
    7. ']*(' → logprob: -13.626936912536621
    8. '*' → logprob: -13.751936912536621
    9. ')' → logprob: -14.251936912536621
    10. ',' → logprob: -14.751936912536621

Token 370: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. ' n' → logprob: -15.125
    3. '(n' → logprob: -18.875
    4. '	n' → logprob: -20.0
    5. '<|end|>' → logprob: -20.5
    6. '
' → logprob: -20.75
    7. '   ' → logprob: -22.0
    8. '_n' → logprob: -22.125
    9. ')n' → logprob: -22.5
    10. '```' → logprob: -22.625

Token 372: '
' (ID: 198)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.01779060810804367
    2. '
' → logprob: -4.267790794372559
    3. ' ways' → logprob: -6.392790794372559
    4. '   ' → logprob: -6.767790794372559
    5. '<|end|>' → logprob: -7.517790794372559
    6. '    
' → logprob: -9.392790794372559
    7. 'WAYS' → logprob: -9.892790794372559
    8. ' 
' → logprob: -10.142790794372559
    9. '  
' → logprob: -10.267790794372559
    10. '   
' → logprob: -11.517790794372559

Token 373: '   ' (ID: 271)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0009645807440392673
    2. ' ways' → logprob: -7.000964641571045
    3. '   ' → logprob: -9.875964164733887
    4. 'WAYS' → logprob: -14.000964164733887
    5. 'way' → logprob: -14.125964164733887
    6. '```' → logprob: -16.500965118408203
    7. ' ' → logprob: -18.250965118408203
    8. 'Ways' → logprob: -18.250965118408203
    9. '       ' → logprob: -18.875965118408203
    10. '0' → logprob: -19.250965118408203

Token 374: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -2.1008713702030946e-06
    2. ' ways' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.875001907348633
    4. 'way' → logprob: -17.875001907348633
    5. 'WAYS' → logprob: -19.375001907348633
    6. '```' → logprob: -20.750001907348633
    7. '`' → logprob: -23.375001907348633
    8. '
' → logprob: -23.500001907348633
    9. '0' → logprob: -23.500001907348633
    10. '       ' → logprob: -23.750001907348633

Token 375: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0007880675257183611
    2. '[' → logprob: -8.000787734985352
    3. '[start' → logprob: -8.375787734985352
    4. '_' → logprob: -8.625787734985352
    5. '_START' → logprob: -10.875787734985352
    6. 'start' → logprob: -12.250787734985352
    7. '[_' → logprob: -12.500787734985352
    8. '_star' → logprob: -12.500787734985352
    9. '_Start' → logprob: -13.000787734985352
    10. '_s' → logprob: -13.250787734985352

Token 376: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.968934758333489e-05
    2. '=' → logprob: -9.625069618225098
    3. ' =' → logprob: -13.250069618225098
    4. ' [' → logprob: -13.875069618225098
    5. '0' → logprob: -15.625069618225098
    6. ']' → logprob: -15.875069618225098
    7. '[start' → logprob: -16.000070571899414
    8. '   ' → logprob: -16.250070571899414
    9. '][' → logprob: -16.500070571899414
    10. '```' → logprob: -16.750070571899414

Token 377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '۰' → logprob: -19.125001907348633
    5. '[' → logprob: -19.375001907348633
    6. ']' → logprob: -19.375001907348633
    7. '
' → logprob: -19.500001907348633
    8. 'start' → logprob: -19.562501907348633
    9. 's' → logprob: -20.562501907348633
    10. '  ' → logprob: -20.625001907348633

Token 378: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00040242893737740815
    2. ' ]' → logprob: -8.375402450561523
    3. ']=' → logprob: -8.875402450561523
    4. '=' → logprob: -10.375402450561523
    5. ' =' → logprob: -14.375402450561523
    6. ')' → logprob: -16.125402450561523
    7. '   ' → logprob: -16.250402450561523
    8. '
' → logprob: -17.125402450561523
    9. ' ' → logprob: -17.125402450561523
    10. ']
' → logprob: -17.625402450561523

Token 379: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '=
' → logprob: -17.01104736328125
    4. ' ' → logprob: -19.76104736328125
    5. ' =
' → logprob: -19.76104736328125
    6. '=

' → logprob: -20.13604736328125
    7. ')=' → logprob: -20.38604736328125
    8. '[' → logprob: -20.76104736328125
    9. ')' → logprob: -20.88604736328125
    10. '.=' → logprob: -20.88604736328125

Token 380: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -19.500001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '
' → logprob: -20.500001907348633
    6. '<|end|>' → logprob: -21.250001907348633
    7. '  ' → logprob: -21.375001907348633
    8. '0' → logprob: -21.750001907348633
    9. '`' → logprob: -21.750001907348633
    10. '۱' → logprob: -21.875001907348633

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '
' → logprob: -20.625
    4. '0' → logprob: -21.375
    5. '```' → logprob: -21.5
    6. '   ' → logprob: -21.5
    7. '' → logprob: -22.875
    8. '`' → logprob: -23.1875
    9. '  ' → logprob: -23.25
    10. '۱' → logprob: -23.3125

Token 382: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4960467517375946
    2. '
' → logprob: -1.371046781539917
    3. ' for' → logprob: -2.496046781539917
    4. 'for' → logprob: -3.121046781539917
    5. '    
' → logprob: -5.121046543121338
    6. '	for' → logprob: -6.121046543121338
    7. '  
' → logprob: -6.996046543121338
    8. ' 
' → logprob: -7.121046543121338
    9. '   
' → logprob: -7.746046543121338
    10. '```' → logprob: -9.371047019958496

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21804708242416382
    2. 'for' → logprob: -1.9680471420288086
    3. '
' → logprob: -3.0930471420288086
    4. ' for' → logprob: -4.593047142028809
    5. '    
' → logprob: -7.468047142028809
    6. '	for' → logprob: -9.468047142028809
    7. ' 
' → logprob: -10.843047142028809
    8. '   
' → logprob: -11.468047142028809
    9. '  
' → logprob: -11.968047142028809
    10. '```' → logprob: -12.718047142028809

Token 384: ' nodes' (ID: 15749)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02509125880897045
    2. ' for' → logprob: -4.275091171264648
    3. '   ' → logprob: -4.525091171264648
    4. '	for' → logprob: -10.650091171264648
    5. '    
' → logprob: -12.525091171264648
    6. '
' → logprob: -12.650091171264648
    7. ' ' → logprob: -13.275091171264648
    8. '```' → logprob: -13.775091171264648
    9. '  ' → logprob: -14.900091171264648
    10. '       ' → logprob: -15.025091171264648

Token 385: '_by' (ID: 8214)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4324685037136078
    2. '=' → logprob: -1.0574685335159302
    3. 'for' → logprob: -6.182468414306641
    4. ' in' → logprob: -7.432468414306641
    5. ',' → logprob: -8.68246841430664
    6. '_sorted' → logprob: -8.68246841430664
    7. ' for' → logprob: -8.80746841430664
    8. '_queue' → logprob: -9.18246841430664
    9. 'in' → logprob: -9.80746841430664
    10. '   ' → logprob: -9.80746841430664

Token 386: '_dist' (ID: 37968)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.014638332650065422
    2. ' dist' → logprob: -4.514638423919678
    3. '_dist' → logprob: -6.139638423919678
    4. 'distance' → logprob: -7.014638423919678
    5. '=' → logprob: -9.13963794708252
    6. '_distance' → logprob: -9.26463794708252
    7. 'd' → logprob: -9.63963794708252
    8. '	dist' → logprob: -10.13963794708252
    9. ' =' → logprob: -10.26463794708252
    10. 'min' → logprob: -10.63963794708252

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22548435628414154
    2. '=' → logprob: -1.6004843711853027
    3. '_start' → logprob: -10.975483894348145
    4. '_sorted' → logprob: -11.350483894348145
    5. ',' → logprob: -11.975483894348145
    6. '_idx' → logprob: -12.225483894348145
    7. '   ' → logprob: -12.225483894348145
    8. '_' → logprob: -12.350483894348145
    9. 'orted' → logprob: -12.475483894348145
    10. '=[]' → logprob: -12.725483894348145

Token 388: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00272522890008986
    2. '[(' → logprob: -6.502725124359131
    3. '[' → logprob: -6.752725124359131
    4. ' sorted' → logprob: -10.002725601196289
    5. '(sorted' → logprob: -11.752725601196289
    6. '[s' → logprob: -14.127725601196289
    7. '[list' → logprob: -15.877725601196289
    8. '{' → logprob: -16.00272560119629
    9. 'list' → logprob: -16.62772560119629
    10. '[len' → logprob: -16.62772560119629

Token 389: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.01540936529636383
    2. '([(' → logprob: -4.265409469604492
    3. '((' → logprob: -7.515409469604492
    4. '(' → logprob: -7.515409469604492
    5. 'range' → logprob: -9.015409469604492
    6. '(en' → logprob: -11.140409469604492
    7. '(
' → logprob: -11.390409469604492
    8. '(((' → logprob: -11.890409469604492
    9. '[(' → logprob: -14.390409469604492
    10. '([' → logprob: -14.390409469604492

Token 390: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003380846756044775
    2. 'n' → logprob: -8.000338554382324
    3. '(' → logprob: -13.250338554382324
    4. '(
' → logprob: -15.000338554382324
    5. '(len' → logprob: -15.250338554382324
    6. 'len' → logprob: -16.375337600708008
    7. '   ' → logprob: -16.375337600708008
    8. '
' → logprob: -17.125337600708008
    9. ' n' → logprob: -17.500337600708008
    10. ',n' → logprob: -17.500337600708008

Token 391: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.77627644513268e-06
    2. ',key' → logprob: -12.125008583068848
    3. 'key' → logprob: -13.875008583068848
    4. '   ' → logprob: -13.875008583068848
    5. '),' → logprob: -14.000008583068848
    6. ' ,' → logprob: -14.500008583068848
    7. ' key' → logprob: -18.250009536743164
    8. '},' → logprob: -18.375009536743164
    9. ',
' → logprob: -18.375009536743164
    10. '       ' → logprob: -18.875009536743164

Token 392: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0002615742268972099
    2. ' key' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.250261306762695
    4. '       ' → logprob: -18.000261306762695
    5. '           ' → logprob: -19.500261306762695
    6. '  ' → logprob: -20.125261306762695
    7. '	key' → logprob: -20.125261306762695
    8. ',key' → logprob: -20.750261306762695
    9. '
' → logprob: -20.875261306762695
    10. 'lambda' → logprob: -21.000261306762695

Token 393: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -7.52919222577475e-05
    2. '=' → logprob: -9.500075340270996
    3. 'lambda' → logprob: -14.750075340270996
    4. '=l' → logprob: -19.62507438659668
    5. '=
' → logprob: -20.12507438659668
    6. '=d' → logprob: -20.62507438659668
    7. 'dist' → logprob: -21.00007438659668
    8. ' lambda' → logprob: -21.50007438659668
    9. ' =' → logprob: -21.62507438659668
    10. '(lambda' → logprob: -21.87507438659668

Token 394: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006766768172383308
    2. ' x' → logprob: -5.0067667961120605
    3. 'd' → logprob: -10.756766319274902
    4. 'i' → logprob: -10.881766319274902
    5. 'k' → logprob: -12.506766319274902
    6. ':' → logprob: -12.881766319274902
    7. 'dist' → logprob: -13.006766319274902
    8. ' i' → logprob: -13.506766319274902
    9. 'lambda' → logprob: -14.006766319274902
    10. ' d' → logprob: -15.381766319274902

Token 395: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.696889623621246e-06
    2. ' :' → logprob: -12.87500286102295
    3. ':
' → logprob: -17.125001907348633
    4. 'dist' → logprob: -17.500001907348633
    5. ':d' → logprob: -18.125001907348633
    6. '=' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.750001907348633
    8. ':return' → logprob: -20.000001907348633
    9. ' dist' → logprob: -20.375001907348633
    10. ':(' → logprob: -21.375001907348633

Token 396: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -2.3080716346157715e-05
    2. ' dist' → logprob: -10.750022888183594
    3. 'lambda' → logprob: -13.375022888183594
    4. '   ' → logprob: -17.750022888183594
    5. '(dist' → logprob: -18.125022888183594
    6. '	dist' → logprob: -19.250022888183594
    7. 'distance' → logprob: -20.375022888183594
    8. ' lambda' → logprob: -20.500022888183594
    9. '  ' → logprob: -20.625022888183594
    10. '_dist' → logprob: -20.750022888183594

Token 397: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.125
    3. 'start' → logprob: -17.25
    4. '[start' → logprob: -17.375
    5. '_START' → logprob: -19.125
    6. '_star' → logprob: -19.375
    7. ' _' → logprob: -19.625
    8. '_Start' → logprob: -20.625
    9. '_s' → logprob: -21.0
    10. '_sta' → logprob: -21.375

Token 398: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.75000286102295
    3. 'x' → logprob: -13.75000286102295
    4. '[
' → logprob: -15.50000286102295
    5. ' [' → logprob: -18.750001907348633
    6. ' x' → logprob: -19.375001907348633
    7. '{x' → logprob: -19.875001907348633
    8. '
' → logprob: -20.000001907348633
    9. ')x' → logprob: -20.125001907348633
    10. '<x' → logprob: -20.125001907348633

Token 399: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004320996522437781
    2. ' )' → logprob: -7.750432014465332
    3. ' if' → logprob: -14.875432014465332
    4. '))' → logprob: -14.875432014465332
    5. '})' → logprob: -15.250432014465332
    6. ')
' → logprob: -16.00043296813965
    7. ')#' → logprob: -16.75043296813965
    8. 'if' → logprob: -16.87543296813965
    9. ')`' → logprob: -17.00043296813965
    10. '])' → logprob: -17.37543296813965

Token 400: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38921070098876953
    2. '   ' → logprob: -1.3892107009887695
    3. ' for' → logprob: -2.6392107009887695
    4. '
' → logprob: -6.6392107009887695
    5. '    
' → logprob: -8.26421070098877
    6. '	for' → logprob: -9.13921070098877
    7. ' 
' → logprob: -10.88921070098877
    8. '   
' → logprob: -11.88921070098877
    9. '  
' → logprob: -12.13921070098877
    10. '```' → logprob: -12.26421070098877

Token 401: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004456852038856596
    2. '   ' → logprob: -8.000445365905762
    3. ' for' → logprob: -9.125445365905762
    4. '
' → logprob: -14.000445365905762
    5. '    
' → logprob: -14.875445365905762
    6. '	for' → logprob: -15.750445365905762
    7. '```' → logprob: -16.250446319580078
    8. ' 
' → logprob: -18.250446319580078
    9. '  
' → logprob: -18.625446319580078
    10. ' ' → logprob: -18.625446319580078

Token 402: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00044151677866466343
    2. ' u' → logprob: -7.750441551208496
    3. 'x' → logprob: -13.125441551208496
    4. '   ' → logprob: -13.250441551208496
    5. '
' → logprob: -13.375441551208496
    6. 'node' → logprob: -13.375441551208496
    7. 'v' → logprob: -13.625441551208496
    8. 'i' → logprob: -14.375441551208496
    9. '```' → logprob: -14.750441551208496
    10. 'w' → logprob: -15.000441551208496

Token 403: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033771444112062454
    2. 'in' → logprob: -3.408771514892578
    3. ' ' → logprob: -9.908771514892578
    4. '	in' → logprob: -10.283771514892578
    5. ' i' → logprob: -11.283771514892578
    6. 'n' → logprob: -11.408771514892578
    7. '  ' → logprob: -11.783771514892578
    8. '   ' → logprob: -12.158771514892578
    9. 'i' → logprob: -13.658771514892578
    10. 'u' → logprob: -14.533771514892578

Token 404: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.000712670327629894
    2. ' nodes' → logprob: -7.250712871551514
    3. 'range' → logprob: -14.125712394714355
    4. '	nodes' → logprob: -14.250712394714355
    5. '   ' → logprob: -14.750712394714355
    6. 'node' → logprob: -15.375712394714355
    7. ' ' → logprob: -15.500712394714355
    8. 'n' → logprob: -15.750712394714355
    9. 'nod' → logprob: -15.875712394714355
    10. '(nodes' → logprob: -16.125713348388672

Token 405: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.009963368996977806
    2. 'in' → logprob: -5.259963512420654
    3. 'by' → logprob: -5.634963512420654
    4. ' in' → logprob: -7.384963512420654
    5. '_in' → logprob: -8.134963035583496
    6. '   ' → logprob: -9.884963035583496
    7. '_' → logprob: -10.134963035583496
    8. 's' → logprob: -10.384963035583496
    9. ')' → logprob: -10.509963035583496
    10. ':' → logprob: -10.759963035583496

Token 406: '_dist' (ID: 37968)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0028350651264190674
    2. 'st' → logprob: -6.627835273742676
    3. 'sorted' → logprob: -7.752835273742676
    4. 'nodes' → logprob: -7.752835273742676
    5. 'range' → logprob: -8.002835273742676
    6. 'ist' → logprob: -8.377835273742676
    7. '_dist' → logprob: -10.377835273742676
    8. ' dist' → logprob: -10.752835273742676
    9. '   ' → logprob: -13.002835273742676
    10. 'dict' → logprob: -13.252835273742676

Token 407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054925501346588135
    2. ':
' → logprob: -2.9299254417419434
    3. '   ' → logprob: -10.179925918579102
    4. ':
' → logprob: -12.929925918579102
    5. ':

' → logprob: -14.054925918579102
    6. ' :' → logprob: -14.054925918579102
    7. ' :
' → logprob: -14.804925918579102
    8. '=' → logprob: -16.0549259185791
    9. '  ' → logprob: -16.1799259185791
    10. '       ' → logprob: -16.1799259185791

Token 408: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1692991554737091
    2. '       ' → logprob: -1.9192991256713867
    3. ' for' → logprob: -5.044299125671387
    4. '	   ' → logprob: -6.919299125671387
    5. '    
' → logprob: -7.294299125671387
    6. '        
' → logprob: -8.419299125671387
    7. '    ' → logprob: -8.669299125671387
    8. '   ' → logprob: -8.919299125671387
    9. '	for' → logprob: -9.294299125671387
    10. ' if' → logprob: -9.294299125671387

Token 409: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03163139894604683
    2. '   ' → logprob: -3.5316314697265625
    3. ' for' → logprob: -6.2816314697265625
    4. 'if' → logprob: -12.281631469726562
    5. '	for' → logprob: -13.031631469726562
    6. '       ' → logprob: -13.281631469726562
    7. '    
' → logprob: -16.281631469726562
    8. '
' → logprob: -17.406631469726562
    9. '   ' → logprob: -17.656631469726562
    10. ' ' → logprob: -18.156631469726562

Token 410: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.982165698194876e-05
    2. ' v' → logprob: -9.750080108642578
    3. '(v' → logprob: -10.750080108642578
    4. '   ' → logprob: -18.500080108642578
    5. '	v' → logprob: -18.875080108642578
    6. '(' → logprob: -19.250080108642578
    7. '[v' → logprob: -19.250080108642578
    8. ',v' → logprob: -19.375080108642578
    9. '```' → logprob: -20.625080108642578
    10. 'vv' → logprob: -20.875080108642578

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014218994183465838
    2. ',w' → logprob: -7.001421928405762
    3. ',v' → logprob: -7.626421928405762
    4. ' ,' → logprob: -10.876421928405762
    5. ',
' → logprob: -13.126421928405762
    6. ',u' → logprob: -14.501421928405762
    7. ' in' → logprob: -15.376421928405762
    8. ',_' → logprob: -15.501421928405762
    9. ',value' → logprob: -15.626421928405762
    10. ',d' → logprob: -15.751421928405762

Token 412: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.02975071594119072
    2. ' w' → logprob: -3.5297508239746094
    3. '   ' → logprob: -16.52975082397461
    4. 'v' → logprob: -17.02975082397461
    5. ' ' → logprob: -17.27975082397461
    6. '	w' → logprob: -17.27975082397461
    7. '    ' → logprob: -17.52975082397461
    8. '_w' → logprob: -17.77975082397461
    9. '  ' → logprob: -18.65475082397461
    10. '```' → logprob: -19.90475082397461

Token 413: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012517188675701618
    2. 'in' → logprob: -4.387516975402832
    3. ' ' → logprob: -12.262516975402832
    4. '	in' → logprob: -13.512516975402832
    5. ',' → logprob: -14.137516975402832
    6. '  ' → logprob: -15.512516975402832
    7. '    ' → logprob: -15.637516975402832
    8. '   ' → logprob: -15.762516975402832
    9. ' i' → logprob: -16.13751792907715
    10. ' 
' → logprob: -16.88751792907715

Token 414: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0024762547109276056
    2. ' graph' → logprob: -6.002476215362549
    3. '	graph' → logprob: -14.627476692199707
    4. '(graph' → logprob: -17.25247573852539
    5. ' ' → logprob: -17.75247573852539
    6. '   ' → logprob: -18.50247573852539
    7. 'graphql' → logprob: -19.12747573852539
    8. '_graph' → logprob: -19.87747573852539
    9. '
' → logprob: -19.87747573852539
    10. 'raph' → logprob: -20.25247573852539

Token 415: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.8889261304575484e-06
    2. 'u' → logprob: -12.500003814697266
    3. '[' → logprob: -16.500003814697266
    4. '[v' → logprob: -17.125003814697266
    5. '[
' → logprob: -19.750003814697266
    6. '```' → logprob: -19.875003814697266
    7. '
' → logprob: -20.000003814697266
    8. ' [' → logprob: -20.375003814697266
    9. '	u' → logprob: -20.500003814697266
    10. '   ' → logprob: -21.000003814697266

Token 416: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36210596561431885
    2. ']:' → logprob: -1.2371059656143188
    3. '):' → logprob: -4.362105846405029
    4. ']:
' → logprob: -7.987105846405029
    5. '}:' → logprob: -8.362106323242188
    6. ':
' → logprob: -9.362106323242188
    7. ']' → logprob: -9.612106323242188
    8. '):
' → logprob: -9.862106323242188
    9. '>:' → logprob: -10.737106323242188
    10. '():' → logprob: -12.737106323242188

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.423219696851447e-05
    2. ':' → logprob: -10.750083923339844
    3. '	       ' → logprob: -10.750083923339844
    4. ' if' → logprob: -11.625083923339844
    5. ':
' → logprob: -12.000083923339844
    6. '               ' → logprob: -12.125083923339844
    7. '       ' → logprob: -12.250083923339844
    8. '   ' → logprob: -12.500083923339844
    9. '		' → logprob: -13.125083923339844
    10. '          ' → logprob: -13.250083923339844

Token 418: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025082070380449295
    2. 'if' (adapté à ' if') → logprob: -4.400082111358643
    3. ' if' → logprob: -4.400082111358643
    4. '           ' → logprob: -8.900081634521484
    5. '   ' → logprob: -10.525081634521484
    6. '       ' → logprob: -11.025081634521484
    7. ' 
' → logprob: -12.025081634521484
    8. '            ' → logprob: -12.400081634521484
    9. '	           ' → logprob: -12.400081634521484
    10. ' ' → logprob: -12.525081634521484

Token 419: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.650518920039758e-06
    2. ' dist' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.375003814697266
    4. 'abs' → logprob: -16.625003814697266
    5. '           ' → logprob: -17.375003814697266
    6. '	dist' → logprob: -17.875003814697266
    7. '(dist' → logprob: -18.625003814697266
    8. '               ' → logprob: -18.625003814697266
    9. '_dist' → logprob: -20.250003814697266
    10. '            
' → logprob: -20.875003814697266

Token 420: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.6432856321334839
    2. '[u' → logprob: -0.7682856321334839
    3. '[v' → logprob: -4.643285751342773
    4. '[start' → logprob: -7.018285751342773
    5. 'start' → logprob: -9.643285751342773
    6. 'u' → logprob: -11.143285751342773
    7. 'Start' → logprob: -11.268285751342773
    8. '[' → logprob: -12.268285751342773
    9. '_START' → logprob: -13.143285751342773
    10. '_u' → logprob: -13.768285751342773

Token 421: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.25207963585853577
    2. '[v' → logprob: -1.5020796060562134
    3. 'u' → logprob: -9.002079963684082
    4. 'v' → logprob: -11.127079963684082
    5. '[' → logprob: -11.377079963684082
    6. '+' → logprob: -15.127079963684082
    7. '[
' → logprob: -15.752079963684082
    8. ' u' → logprob: -16.002079010009766
    9. '[x' → logprob: -16.377079010009766
    10. '	u' → logprob: -16.502079010009766

Token 422: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4291772246360779
    2. ' +' → logprob: -1.0541772842407227
    3. ']+' → logprob: -8.554177284240723
    4. ']' → logprob: -8.554177284240723
    5. '+w' → logprob: -9.929177284240723
    6. ')' → logprob: -11.804177284240723
    7. '   ' → logprob: -11.804177284240723
    8. '```' → logprob: -11.929177284240723
    9. ' ' → logprob: -12.179177284240723
    10. '>' → logprob: -12.179177284240723

Token 423: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018191147595643997
    2. ' +' → logprob: -4.018191337585449
    3. '+w' → logprob: -10.14319133758545
    4. '+
' → logprob: -13.39319133758545
    5. ' ' → logprob: -16.893190383911133
    6. '```' → logprob: -17.143190383911133
    7. ' ' → logprob: -17.268190383911133
    8. '   ' → logprob: -17.268190383911133
    9. '＋' → logprob: -17.393190383911133
    10. '==' → logprob: -17.643190383911133

Token 424: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.023246755823493004
    2. ' w' → logprob: -3.7732467651367188
    3. ' ' → logprob: -13.773246765136719
    4. '   ' → logprob: -15.898246765136719
    5. '    ' → logprob: -16.77324676513672
    6. '  ' → logprob: -17.02324676513672
    7. '	w' → logprob: -17.52324676513672
    8. ''w' → logprob: -17.64824676513672
    9. ' 
' → logprob: -18.27324676513672
    10. 'v' → logprob: -18.27324676513672

Token 425: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2016277313232422
    2. ' ==' → logprob: -1.7016277313232422
    3. '=' → logprob: -8.451627731323242
    4. ' =' → logprob: -15.076627731323242
    5. '==
' → logprob: -15.326627731323242
    6. '===' → logprob: -16.326627731323242
    7. ')==' → logprob: -16.326627731323242
    8. ']==' → logprob: -16.451627731323242
    9. ' ' → logprob: -17.076627731323242
    10. ')' → logprob: -17.951627731323242

Token 426: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004078401252627373
    2. ' dist' → logprob: -5.504078388214111
    3. '	dist' → logprob: -17.754077911376953
    4. '   ' → logprob: -18.879077911376953
    5. '(dist' → logprob: -20.254077911376953
    6. ' ' → logprob: -20.879077911376953
    7. 'd' → logprob: -21.004077911376953
    8. 'dis' → logprob: -21.504077911376953
    9. '
' → logprob: -21.879077911376953
    10. '  ' → logprob: -21.879077911376953

Token 427: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -9.968312951968983e-06
    2. 'start' → logprob: -12.125009536743164
    3. '_short' → logprob: -13.000009536743164
    4. '[v' → logprob: -13.125009536743164
    5. 'Start' → logprob: -16.375009536743164
    6. '[start' → logprob: -17.750009536743164
    7. '_star' → logprob: -17.875009536743164
    8. '_START' → logprob: -18.000009536743164
    9. '_' → logprob: -18.000009536743164
    10. 'v' → logprob: -18.250009536743164

Token 428: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0002613358374219388
    2. 'v' → logprob: -8.250261306762695
    3. '[' → logprob: -17.375261306762695
    4. '	v' → logprob: -18.125261306762695
    5. '<v' → logprob: -18.875261306762695
    6. '(v' → logprob: -19.000261306762695
    7. ' v' → logprob: -19.875261306762695
    8. '[u' → logprob: -20.125261306762695
    9. '   ' → logprob: -20.250261306762695
    10. '```' → logprob: -21.125261306762695

Token 429: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10099661350250244
    2. ':
' → logprob: -2.350996494293213
    3. ']:
' → logprob: -8.350996971130371
    4. ']:' → logprob: -8.600996971130371
    5. '               ' → logprob: -8.725996971130371
    6. '):
' → logprob: -9.350996971130371
    7. ' and' → logprob: -9.850996971130371
    8. '           ' → logprob: -10.600996971130371
    9. '):' → logprob: -10.850996971130371
    10. '       ' → logprob: -12.350996971130371

Token 430: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.927930654550437e-05
    2. '       ' → logprob: -12.000029563903809
    3. '           ' → logprob: -12.000029563903809
    4. ' ways' → logprob: -12.250029563903809
    5. '              ' → logprob: -12.750029563903809
    6. '	       ' → logprob: -13.375029563903809
    7. '	           ' → logprob: -13.625029563903809
    8. 'ways' → logprob: -13.625029563903809
    9. '                   ' → logprob: -13.875029563903809
    10. '		       ' → logprob: -14.375029563903809

Token 431: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.00039015832589939237
    2. ' ways' → logprob: -8.00039005279541
    3. '               ' → logprob: -10.00039005279541
    4. '           ' → logprob: -11.87539005279541
    5. '   ' → logprob: -13.50039005279541
    6. '                   ' → logprob: -14.50039005279541
    7. 'way' → logprob: -15.37539005279541
    8. '       ' → logprob: -15.50039005279541
    9. '                       ' → logprob: -17.250391006469727
    10. '                               ' → logprob: -17.500391006469727

Token 432: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.5048530030981055e-06
    2. '[start' → logprob: -13.625001907348633
    3. 'start' → logprob: -15.875001907348633
    4. '[v' → logprob: -16.500001907348633
    5. '_START' → logprob: -17.625001907348633
    6. '_' → logprob: -18.125001907348633
    7. '[_' → logprob: -18.250001907348633
    8. '[' → logprob: -18.500001907348633
    9. 'Start' → logprob: -19.750001907348633
    10. '_Start' → logprob: -20.000001907348633

Token 433: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. '[u' → logprob: -17.5
    4. 'v' → logprob: -18.0
    5. '[w' → logprob: -21.5
    6. '[val' → logprob: -22.0
    7. '[var' → logprob: -22.125
    8. '	v' → logprob: -22.125
    9. ' [' → logprob: -22.5
    10. '[V' → logprob: -22.5

Token 434: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6785223484039307
    2. ']+=' → logprob: -0.9285223484039307
    3. '+=' → logprob: -2.8035223484039307
    4. ' +=' → logprob: -3.4285223484039307
    5. ' ]' → logprob: -5.553522109985352
    6. '+' → logprob: -7.928522109985352
    7. ')' → logprob: -8.928522109985352
    8. ']+' → logprob: -10.303522109985352
    9. '+]' → logprob: -10.553522109985352
    10. '[' → logprob: -11.053522109985352

Token 435: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006763802841305733
    2. ' +=' → logprob: -5.006763935089111
    3. ']+=' → logprob: -10.381763458251953
    4. '=' → logprob: -11.256763458251953
    5. '+' → logprob: -12.381763458251953
    6. '   ' → logprob: -16.131763458251953
    7. '+=(' → logprob: -16.131763458251953
    8. '[' → logprob: -17.256763458251953
    9. '
' → logprob: -17.381763458251953
    10. '```' → logprob: -17.381763458251953

Token 436: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.001035787514410913
    2. ' ways' → logprob: -6.876035690307617
    3. 'way' → logprob: -12.751035690307617
    4. '   ' → logprob: -16.376035690307617
    5. 'WAYS' → logprob: -17.626035690307617
    6. ' ' → logprob: -18.251035690307617
    7. 'Ways' → logprob: -18.501035690307617
    8. ' way' → logprob: -19.501035690307617
    9. 'wares' → logprob: -19.501035690307617
    10. '
' → logprob: -20.126035690307617

Token 437: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0001427538663847372
    2. 'start' → logprob: -8.875143051147461
    3. '[start' → logprob: -13.625143051147461
    4. 's' → logprob: -14.125143051147461
    5. '```' → logprob: -15.750143051147461
    6. '_star' → logprob: -15.875143051147461
    7. 'Start' → logprob: -15.875143051147461
    8. '_START' → logprob: -16.00014305114746
    9. 'u' → logprob: -16.37514305114746
    10. '_' → logprob: -16.37514305114746

Token 438: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.547789674485102e-05
    2. 'u' → logprob: -10.250035285949707
    3. '[' → logprob: -17.750036239624023
    4. ' [' → logprob: -18.625036239624023
    5. '[
' → logprob: -19.500036239624023
    6. '
' → logprob: -19.500036239624023
    7. '[v' → logprob: -20.000036239624023
    8. ' u' → logprob: -20.375036239624023
    9. '```' → logprob: -21.375036239624023
    10. '	u' → logprob: -21.500036239624023

Token 439: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: '   ' (ID: 271)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.02295670658349991
    2. '#' → logprob: -3.897956609725952
    3. '   ' → logprob: -6.397956848144531
    4. '
' → logprob: -7.897956848144531
    5. ' ways' → logprob: -8.022956848144531
    6. '```' → logprob: -10.772956848144531
    7. '    
' → logprob: -11.647956848144531
    8. 'nodes' → logprob: -12.022956848144531
    9. ' #' → logprob: -12.522956848144531
    10. 'dist' → logprob: -13.147956848144531

Token 441: ' #' (ID: 1069)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.04906419292092323
    2. '#' (adapté à ' #') → logprob: -3.0490641593933105
    3. ' ways' → logprob: -7.9240641593933105
    4. '   ' → logprob: -9.674064636230469
    5. '```' → logprob: -10.424064636230469
    6. ' #' → logprob: -11.674064636230469
    7. '
' → logprob: -11.799064636230469
    8. 'way' → logprob: -13.174064636230469
    9. '    
' → logprob: -13.424064636230469
    10. 'WAYS' → logprob: -14.424064636230469

Token 442: ' count' (ID: 3605)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.04888983443379402
    2. '#' → logprob: -3.0488898754119873
    3. '   ' → logprob: -9.173890113830566
    4. ' ways' → logprob: -9.548890113830566
    5. 'way' → logprob: -10.048890113830566
    6. 'paths' → logprob: -11.298890113830566
    7. 'dist' → logprob: -11.298890113830566
    8. 'for' → logprob: -11.548890113830566
    9. ' #' → logprob: -11.673890113830566
    10. 'nodes' → logprob: -11.673890113830566

Token 443: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.4824194312095642
    2. ' number' → logprob: -0.9824194312095642
    3. ' ways' → logprob: -5.857419490814209
    4. 'ways' → logprob: -5.857419490814209
    5. '   ' → logprob: -6.607419490814209
    6. ' ' → logprob: -7.357419490814209
    7. '#' → logprob: -8.10741901397705
    8. '_number' → logprob: -8.85741901397705
    9. 'the' → logprob: -9.85741901397705
    10. ' the' → logprob: -10.23241901397705

Token 444: ' of' (ID: 328)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0007622223347425461
    2. '_' → logprob: -8.125761985778809
    3. '_of' → logprob: -8.750761985778809
    4. 'start' → logprob: -9.125761985778809
    5. 's' → logprob: -9.375761985778809
    6. 'of' → logprob: -9.500761985778809
    7. ' of' → logprob: -11.250761985778809
    8. '_end' → logprob: -11.875761985778809
    9. '#' → logprob: -12.125761985778809
    10. '   ' → logprob: -12.500761985778809

Token 445: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.08360624313354492
    2. ' shortest' → logprob: -2.583606243133545
    3. 'ways' → logprob: -5.458606243133545
    4. ' ways' → logprob: -7.958606243133545
    5. 'paths' → logprob: -10.083606719970703
    6. ' short' → logprob: -10.708606719970703
    7. '#' → logprob: -11.333606719970703
    8. 'Shortest' → logprob: -11.958606719970703
    9. '_short' → logprob: -12.208606719970703
    10. '(short' → logprob: -13.208606719970703

Token 446: ' paths' (ID: 23373)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.010106059722602367
    2. ' paths' → logprob: -4.885106086730957
    3. '_paths' → logprob: -6.010106086730957
    4. 'ways' → logprob: -10.510106086730957
    5. 'path' → logprob: -11.760106086730957
    6. '_path' → logprob: -13.260106086730957
    7. ' ways' → logprob: -14.010106086730957
    8. 'tokens' → logprob: -14.010106086730957
    9. ' pathways' → logprob: -14.010106086730957
    10. '(paths' → logprob: -14.010106086730957

Token 447: ' from' (ID: 591)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.3295661211013794
    2. 'from' → logprob: -2.20456600189209
    3. '_from' → logprob: -2.32956600189209
    4. '_start' → logprob: -2.82956600189209
    5. '_' → logprob: -5.45456600189209
    6. ' from' → logprob: -5.57956600189209
    7. '_to' → logprob: -5.57956600189209
    8. '_finish' → logprob: -6.70456600189209
    9. '   ' → logprob: -7.95456600189209
    10. ' =' → logprob: -8.95456600189209

Token 448: ' each' (ID: 2454)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03053206019103527
    2. 'v' → logprob: -4.530531883239746
    3. 'n' → logprob: -5.155531883239746
    4. 'start' → logprob: -5.280531883239746
    5. 'dist' → logprob: -5.530531883239746
    6. 'nodes' → logprob: -6.155531883239746
    7. ' end' → logprob: -7.530531883239746
    8. 'children' → logprob: -7.780531883239746
    9. 'the' → logprob: -7.905531883239746
    10. '[v' → logprob: -8.280531883239746

Token 449: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.018259748816490173
    2. 'v' → logprob: -4.518259525299072
    3. ' node' → logprob: -5.518259525299072
    4. 'end' → logprob: -7.268259525299072
    5. '[node' → logprob: -7.268259525299072
    6. '(node' → logprob: -7.518259525299072
    7. 'u' → logprob: -8.01826000213623
    8. 'nodes' → logprob: -8.14326000213623
    9. '[v' → logprob: -9.39326000213623
    10. ' v' → logprob: -9.64326000213623

Token 450: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.011416548863053322
    2. ' to' → logprob: -4.511416435241699
    3. '   ' → logprob: -8.3864164352417
    4. '_to' → logprob: -9.5114164352417
    5. 'by' → logprob: -10.5114164352417
    6. 'start' → logprob: -11.0114164352417
    7. 'from' → logprob: -11.7614164352417
    8. ' ' → logprob: -12.5114164352417
    9. '=' → logprob: -12.7614164352417
    10. 'for' → logprob: -13.1364164352417

Token 451: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4818727672100067
    2. 'n' → logprob: -1.356872797012329
    3. 'ways' → logprob: -3.356872797012329
    4. '0' → logprob: -3.606872797012329
    5. '[n' → logprob: -4.35687255859375
    6. 'the' → logprob: -4.73187255859375
    7. ' n' → logprob: -4.73187255859375
    8. ' end' → logprob: -4.85687255859375
    9. 'start' → logprob: -5.10687255859375
    10. ' ways' → logprob: -5.10687255859375

Token 452: '
' (ID: 198)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.31369203329086304
    2. 'ways' → logprob: -1.3136920928955078
    3. '   ' → logprob: -7.813692092895508
    4. ' =' → logprob: -11.063692092895508
    5. 'Ways' → logprob: -12.813692092895508
    6. '=' → logprob: -13.313692092895508
    7. ':' → logprob: -13.313692092895508
    8. 'way' → logprob: -13.688692092895508
    9. '
' → logprob: -14.063692092895508
    10. ' ' → logprob: -14.438692092895508

Token 453: '   ' (ID: 271)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0031796174589544535
    2. ' ways' → logprob: -5.753179550170898
    3. '   ' → logprob: -13.503179550170898
    4. ' =' → logprob: -15.628179550170898
    5. '=' → logprob: -16.0031795501709
    6. 'way' → logprob: -16.2531795501709
    7. ' ' → logprob: -17.3781795501709
    8. 'WAYS' → logprob: -17.7531795501709
    9. ':' → logprob: -17.8781795501709
    10. '```' → logprob: -18.0031795501709

Token 454: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -8.061054359131958e-06
    2. ' ways' → logprob: -11.750007629394531
    3. 'way' → logprob: -16.25000762939453
    4. '   ' → logprob: -20.25000762939453
    5. '
' → logprob: -20.50000762939453
    6. '```' → logprob: -20.75000762939453
    7. 'WAYS' → logprob: -20.87500762939453
    8. 'aways' → logprob: -22.00000762939453
    9. '#' → logprob: -22.00000762939453
    10. ' ' → logprob: -22.37500762939453

Token 455: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -3.173704271830502e-06
    2. 'end' → logprob: -12.87500286102295
    3. '[end' → logprob: -15.12500286102295
    4. '=end' → logprob: -16.000003814697266
    5. ' =' → logprob: -16.625003814697266
    6. '_' → logprob: -17.125003814697266
    7. 'End' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.125003814697266
    9. '=' → logprob: -18.125003814697266
    10. '_start' → logprob: -18.250003814697266

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023294627666473
    2. '=' → logprob: -1.9102329015731812
    3. '=[' → logprob: -12.285232543945312
    4. ' =[' → logprob: -12.910232543945312
    5. '[' → logprob: -13.785232543945312
    6. ' ' → logprob: -14.785232543945312
    7. '   ' → logprob: -15.535232543945312
    8. ' [' → logprob: -17.160232543945312
    9. ']' → logprob: -18.160232543945312
    10. '```' → logprob: -18.160232543945312

Token 457: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0031838975846767426
    2. ' [' → logprob: -5.753183841705322
    3. '[n' → logprob: -12.12818431854248
    4. '   ' → logprob: -14.50318431854248
    5. ' ' → logprob: -16.628183364868164
    6. '[node' → logprob: -17.378183364868164
    7. '0' → logprob: -17.628183364868164
    8. '[len' → logprob: -17.878183364868164
    9. '[count' → logprob: -18.503183364868164
    10. '[p' → logprob: -18.753183364868164

Token 458: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '[' → logprob: -18.625001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '۰' → logprob: -20.625001907348633
    6. ' [' → logprob: -21.312501907348633
    7. '```' → logprob: -21.625001907348633
    8. '  ' → logprob: -21.687501907348633
    9. '    ' → logprob: -22.812501907348633
    10. ')' → logprob: -23.187501907348633

Token 459: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000713266315869987
    2. ' *' → logprob: -7.875713348388672
    3. ' ]' → logprob: -8.625713348388672
    4. ']*' → logprob: -9.250713348388672
    5. '*' → logprob: -9.875713348388672
    6. ' ' → logprob: -12.750713348388672
    7. '[' → logprob: -13.375713348388672
    8. '   ' → logprob: -14.625713348388672
    9. ')' → logprob: -14.875713348388672
    10. '
' → logprob: -15.375713348388672

Token 460: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12714438140392303
    2. '*' → logprob: -2.1271443367004395
    3. '[' → logprob: -9.127144813537598
    4. ']' → logprob: -9.627144813537598
    5. '*n' → logprob: -11.502144813537598
    6. ' ' → logprob: -11.752144813537598
    7. '
' → logprob: -11.877144813537598
    8. ')' → logprob: -12.377144813537598
    9. '*[' → logprob: -12.627144813537598
    10. ' [' → logprob: -12.877144813537598

Token 461: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.4391956685576588e-05
    2. ' n' → logprob: -10.625024795532227
    3. '   ' → logprob: -19.000024795532227
    4. '	n' → logprob: -19.625024795532227
    5. '
' → logprob: -20.125024795532227
    6. '(n' → logprob: -21.250024795532227
    7. 'm' → logprob: -21.750024795532227
    8. ')n' → logprob: -22.000024795532227
    9. '```' → logprob: -22.750024795532227
    10. '    ' → logprob: -23.000024795532227

Token 462: '
' (ID: 198)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.00033510822686366737
    2. ' ways' → logprob: -8.625334739685059
    3. '
' → logprob: -8.875334739685059
    4. '   ' → logprob: -11.750334739685059
    5. '[' → logprob: -12.500334739685059
    6. 'WAYS' → logprob: -14.000334739685059
    7. '\
' → logprob: -14.125334739685059
    8. '    
' → logprob: -14.250334739685059
    9. ' 
' → logprob: -14.500334739685059
    10. '0' → logprob: -15.375334739685059

Token 463: '   ' (ID: 271)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -4.024604277219623e-05
    2. ' ways' → logprob: -10.125040054321289
    3. 'WAYS' → logprob: -16.87504005432129
    4. '   ' → logprob: -17.62504005432129
    5. 'way' → logprob: -17.75004005432129
    6. 'Ways' → logprob: -19.37504005432129
    7. '
' → logprob: -20.00004005432129
    8. '[' → logprob: -20.00004005432129
    9. '```' → logprob: -20.12504005432129
    10. '0' → logprob: -21.25004005432129

Token 464: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -1.2664456789934775e-06
    2. ' ways' → logprob: -13.625000953674316
    3. 'way' → logprob: -18.000001907348633
    4. 'WAYS' → logprob: -18.500001907348633
    5. '   ' → logprob: -19.125001907348633
    6. 'w' → logprob: -20.375001907348633
    7. '0' → logprob: -20.500001907348633
    8. '```' → logprob: -20.500001907348633
    9. '
' → logprob: -20.875001907348633
    10. '       ' → logprob: -21.750001907348633

Token 465: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00011749001714633778
    2. 'end' → logprob: -9.250117301940918
    3. '[end' → logprob: -10.875117301940918
    4. '   ' → logprob: -13.875117301940918
    5. '[-' → logprob: -15.125117301940918
    6. '[' → logprob: -15.375117301940918
    7. '[n' → logprob: -15.750117301940918
    8. '_END' → logprob: -16.000118255615234
    9. '-end' → logprob: -16.250118255615234
    10. '[_' → logprob: -16.375118255615234

Token 466: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.000763510703109e-05
    2. '[-' → logprob: -10.375040054321289
    3. '[' → logprob: -11.750040054321289
    4. 'n' → logprob: -14.375040054321289
    5. '
' → logprob: -16.12504005432129
    6. '[
' → logprob: -16.25004005432129
    7. ' [' → logprob: -17.00004005432129
    8. ']' → logprob: -17.62504005432129
    9. '[]' → logprob: -18.37504005432129
    10. '[N' → logprob: -18.37504005432129

Token 467: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.9728669738397e-05
    2. ' -' → logprob: -9.250100135803223
    3. ']' → logprob: -12.875100135803223
    4. '[' → logprob: -15.125100135803223
    5. '   ' → logprob: -15.125100135803223
    6. '[-' → logprob: -15.375100135803223
    7. '1' → logprob: -15.875100135803223
    8. '-
' → logprob: -16.500099182128906
    9. '
' → logprob: -17.625099182128906
    10. ' ' → logprob: -18.125099182128906

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -16.500001907348633
    4. '   ' → logprob: -16.750001907348633
    5. ']' → logprob: -17.500001907348633
    6. '-' → logprob: -17.750001907348633
    7. '2' → logprob: -18.750001907348633
    8. '0' → logprob: -18.750001907348633
    9. '
' → logprob: -19.062501907348633
    10. ')' → logprob: -19.125001907348633

Token 469: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1279553291387856e-05
    2. ' ]' → logprob: -11.750011444091797
    3. ']=' → logprob: -12.625011444091797
    4. '=' → logprob: -16.750011444091797
    5. '']' → logprob: -17.625011444091797
    6. '`]' → logprob: -19.000011444091797
    7. '   ' → logprob: -19.375011444091797
    8. ')' → logprob: -19.375011444091797
    9. ']
' → logprob: -19.500011444091797
    10. '"]' → logprob: -19.875011444091797

Token 470: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.078889846801758
    4. '[' → logprob: -18.828889846801758
    5. ']' → logprob: -19.578889846801758
    6. ']=' → logprob: -19.828889846801758
    7. '   ' → logprob: -20.703889846801758
    8. ')=' → logprob: -20.828889846801758
    9. ')' → logprob: -20.953889846801758
    10. '=}' → logprob: -20.953889846801758

Token 471: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.375003814697266
    4. '  ' → logprob: -21.875003814697266
    5. '```' → logprob: -22.375003814697266
    6. '۱' → logprob: -24.000003814697266
    7. '[' → logprob: -24.125003814697266
    8. '`' → logprob: -24.250003814697266
    9. '<|end|>' → logprob: -24.250003814697266
    10. '    ' → logprob: -24.375003814697266

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.375001907348633
    4. '```' → logprob: -21.500001907348633
    5. '  ' → logprob: -22.000001907348633
    6. '<|end|>' → logprob: -22.375001907348633
    7. '0' → logprob: -22.625001907348633
    8. '
' → logprob: -23.125001907348633
    9. '=' → logprob: -23.125001907348633
    10. '۱' → logprob: -23.125001907348633

Token 473: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7256698608398438
    2. 'nodes' → logprob: -0.7256698608398438
    3. 'for' → logprob: -3.4756698608398438
    4. '   ' → logprob: -6.975669860839844
    5. ' nodes' → logprob: -10.100669860839844
    6. '	nodes' → logprob: -10.100669860839844
    7. ' for' → logprob: -11.350669860839844
    8. '    
' → logprob: -11.725669860839844
    9. '(nodes' → logprob: -11.850669860839844
    10. '_nodes' → logprob: -12.350669860839844

Token 474: '   ' (ID: 271)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.016938544809818268
    2. 'for' → logprob: -4.51693868637085
    3. '
' → logprob: -5.14193868637085
    4. ' nodes' → logprob: -11.141938209533691
    5. '   ' → logprob: -12.391938209533691
    6. '	nodes' → logprob: -13.141938209533691
    7. '```' → logprob: -13.266938209533691
    8. '(nodes' → logprob: -13.516938209533691
    9. '_nodes' → logprob: -13.891938209533691
    10. ' for' → logprob: -14.141938209533691

Token 475: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.0003967071825172752
    2. 'for' → logprob: -7.875396728515625
    3. 'reverse' → logprob: -11.500396728515625
    4. ' nodes' → logprob: -13.500396728515625
    5. 'node' → logprob: -13.625396728515625
    6. 'dist' → logprob: -13.625396728515625
    7. '
' → logprob: -14.750396728515625
    8. 'order' → logprob: -14.875396728515625
    9. '	nodes' → logprob: -15.000396728515625
    10. 'rev' → logprob: -15.125396728515625

Token 476: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.012536847032606602
    2. 'by' → logprob: -4.387537002563477
    3. '=' → logprob: -11.137537002563477
    4. '_' → logprob: -12.762537002563477
    5. 'bys' → logprob: -12.887537002563477
    6. ' by' → logprob: -13.637537002563477
    7. 'By' → logprob: -13.887537002563477
    8. 'b' → logprob: -13.887537002563477
    9. '-by' → logprob: -14.262537002563477
    10. '_BY' → logprob: -14.262537002563477

Token 477: '_dist' (ID: 37968)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00010962257510982454
    2. 'lambda' → logprob: -9.375109672546387
    3. '_dist' → logprob: -11.000109672546387
    4. ' dist' → logprob: -12.875109672546387
    5. '-dist' → logprob: -13.750109672546387
    6. 'range' → logprob: -14.250109672546387
    7. '	dist' → logprob: -14.250109672546387
    8. 'reverse' → logprob: -14.375109672546387
    9. '=lambda' → logprob: -14.750109672546387
    10. 'Dist' → logprob: -14.750109672546387

Token 478: '_end' (ID: 13707)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -9.77022064034827e-05
    2. ' =' → logprob: -9.250097274780273
    3. 'reverse' → logprob: -14.625097274780273
    4. '=end' → logprob: -15.000097274780273
    5. '[::-' → logprob: -16.125097274780273
    6. '.reverse' → logprob: -16.375097274780273
    7. 'rev' → logprob: -16.500097274780273
    8. '_reverse' → logprob: -16.625097274780273
    9. 'sorted' → logprob: -16.875097274780273
    10. '=re' → logprob: -16.875097274780273

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485873706638813
    2. ' =' → logprob: -3.0485873222351074
    3. ')' → logprob: -17.423587799072266
    4. ',' → logprob: -17.548587799072266
    5. ' ' → logprob: -17.798587799072266
    6. 'sorted' → logprob: -18.798587799072266
    7. '   ' → logprob: -19.423587799072266
    8. '=

' → logprob: -19.423587799072266
    9. '=
' → logprob: -19.548587799072266
    10. '.=' → logprob: -19.923587799072266

Token 480: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -4.008129963040119e-06
    2. ' sorted' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.375003814697266
    4. 're' → logprob: -18.125003814697266
    5. '(sorted' → logprob: -18.125003814697266
    6. '.sorted' → logprob: -19.250003814697266
    7. '[' → logprob: -19.875003814697266
    8. 'list' → logprob: -20.750003814697266
    9. '[::-' → logprob: -21.875003814697266
    10. 'reverse' → logprob: -22.125003814697266

Token 481: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.3306015716807451e-05
    2. 'range' → logprob: -11.25001335144043
    3. '(lambda' → logprob: -15.50001335144043
    4. '(
' → logprob: -18.12501335144043
    5. '(reverse' → logprob: -18.25001335144043
    6. '(' → logprob: -18.37501335144043
    7. '	range' → logprob: -20.50001335144043
    8. ' range' → logprob: -20.62501335144043
    9. 'lambda' → logprob: -21.50001335144043
    10. '(list' → logprob: -21.50001335144043

Token 482: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000158842682139948
    2. 'n' → logprob: -8.75015926361084
    3. '(' → logprob: -15.75015926361084
    4. '(
' → logprob: -16.375158309936523
    5. '(len' → logprob: -17.250158309936523
    6. ' (' → logprob: -18.625158309936523
    7. ')' → logprob: -18.750158309936523
    8. ' n' → logprob: -19.625158309936523
    9. '[n' → logprob: -19.750158309936523
    10. '
' → logprob: -20.000158309936523

Token 483: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04341190308332443
    2. 'n' → logprob: -3.91841197013855
    3. '(n' → logprob: -4.043411731719971
    4. ',n' → logprob: -5.293411731719971
    5. ',
' → logprob: -10.418412208557129
    6. '[n' → logprob: -12.418412208557129
    7. ' ,' → logprob: -12.543412208557129
    8. '),' → logprob: -12.918412208557129
    9. ' n' → logprob: -13.043412208557129
    10. '   ' → logprob: -13.293412208557129

Token 484: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0004311460361350328
    2. ' key' → logprob: -7.750431060791016
    3. 'lambda' → logprob: -15.250431060791016
    4. '(key' → logprob: -16.250431060791016
    5. 'reverse' → logprob: -16.875431060791016
    6. 'n' → logprob: -18.375431060791016
    7. '	key' → logprob: -18.875431060791016
    8. '[key' → logprob: -19.750431060791016
    9. ',key' → logprob: -20.125431060791016
    10. '   ' → logprob: -20.375431060791016

Token 485: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0009171743295155466
    2. '=' → logprob: -7.000916957855225
    3. 'lambda' → logprob: -12.125917434692383
    4. ' =' → logprob: -16.500917434692383
    5. '=
' → logprob: -16.500917434692383
    6. '(lambda' → logprob: -17.500917434692383
    7. '=len' → logprob: -18.500917434692383
    8. '=l' → logprob: -18.750917434692383
    9. '=None' → logprob: -19.375917434692383
    10. '=

' → logprob: -19.750917434692383

Token 486: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05920347571372986
    2. ' x' → logprob: -3.4342033863067627
    3. 'lambda' → logprob: -4.559203624725342
    4. 'dist' → logprob: -4.809203624725342
    5. '=lambda' → logprob: -5.684203624725342
    6. ' dist' → logprob: -6.184203624725342
    7. ' lambda' → logprob: -6.809203624725342
    8. 's' → logprob: -11.559203147888184
    9. 'y' → logprob: -12.059203147888184
    10. 'd' → logprob: -12.059203147888184

Token 487: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06632942706346512
    2. '=lambda' → logprob: -2.8163294792175293
    3. '=' → logprob: -5.816329479217529
    4. ' :' → logprob: -7.191329479217529
    5. 'lambda' → logprob: -7.941329479217529
    6. 'dist' → logprob: -8.566329002380371
    7. ' dist' → logprob: -11.066329002380371
    8. ':
' → logprob: -11.441329002380371
    9. 'd' → logprob: -11.691329002380371
    10. 'x' → logprob: -11.816329002380371

Token 488: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09006290882825851
    2. 'lambda' → logprob: -2.4650628566741943
    3. ' dist' → logprob: -7.215063095092773
    4. ' lambda' → logprob: -8.340063095092773
    5. '-dist' → logprob: -8.965063095092773
    6. '-' → logprob: -12.090063095092773
    7. '(lambda' → logprob: -12.715063095092773
    8. '=lambda' → logprob: -12.715063095092773
    9. 'distance' → logprob: -13.215063095092773
    10. '   ' → logprob: -13.965063095092773

Token 489: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.5246515274047852
    2. '_start' → logprob: -0.8996515274047852
    3. 'dist' → logprob: -7.149651527404785
    4. 'start' → logprob: -8.024651527404785
    5. '_dist' → logprob: -8.774651527404785
    6. 'end' → logprob: -8.774651527404785
    7. '[x' → logprob: -10.524651527404785
    8. 'lambda' → logprob: -11.524651527404785
    9. '[n' → logprob: -11.774651527404785
    10. '[end' → logprob: -11.774651527404785

Token 490: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0020150020718574524
    2. 'x' → logprob: -7.002015113830566
    3. ')' → logprob: -7.502015113830566
    4. '[' → logprob: -7.877015113830566
    5. '(x' → logprob: -10.377015113830566
    6. ']' → logprob: -10.502015113830566
    7. '):' → logprob: -10.877015113830566
    8. ',' → logprob: -11.127015113830566
    9. '])' → logprob: -11.127015113830566
    10. '```' → logprob: -11.127015113830566

Token 491: '])
' (ID: 5169)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3313082158565521
    2. ')' → logprob: -1.5813082456588745
    3. '):' → logprob: -2.706308126449585
    4. '):
' → logprob: -4.831308364868164
    5. ')
' → logprob: -6.581308364868164
    6. ' ,' → logprob: -9.581308364868164
    7. '[::-' → logprob: -10.706308364868164
    8. '):

' → logprob: -10.956308364868164
    9. ':' → logprob: -11.081308364868164
    10. ',
' → logprob: -11.831308364868164

Token 492: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0030660107731819153
    2. '   ' → logprob: -6.003066062927246
    3. ' for' → logprob: -7.878066062927246
    4. '[::-' → logprob: -8.503066062927246
    5. '	for' → logprob: -12.378066062927246
    6. '```' → logprob: -13.628066062927246
    7. '    
' → logprob: -14.503066062927246
    8. '.for' → logprob: -14.628066062927246
    9. ')' → logprob: -14.753066062927246
    10. 'reverse' → logprob: -15.253066062927246

Token 493: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.186122770188376e-05
    2. 'nodes' → logprob: -9.500091552734375
    3. ' for' → logprob: -11.625091552734375
    4. '   ' → logprob: -11.875091552734375
    5. ')' → logprob: -15.125091552734375
    6. '[::-' → logprob: -15.250091552734375
    7. 'reverse' → logprob: -15.500091552734375
    8. '```' → logprob: -15.875091552734375
    9. '	for' → logprob: -16.750091552734375
    10. '
' → logprob: -16.875091552734375

Token 494: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.010012470185756683
    2. ' u' → logprob: -5.135012626647949
    3. 'v' → logprob: -5.510012626647949
    4. ' v' → logprob: -10.63501262664795
    5. 'x' → logprob: -13.63501262664795
    6. 'i' → logprob: -14.26001262664795
    7. '	u' → logprob: -14.51001262664795
    8. '   ' → logprob: -14.63501262664795
    9. 'w' → logprob: -14.94751262664795
    10. 'd' → logprob: -15.07251262664795

Token 495: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6932219862937927
    2. ' in' → logprob: -0.6932219862937927
    3. 'i' → logprob: -10.818222045898438
    4. 'n' → logprob: -11.318222045898438
    5. ' ' → logprob: -11.443222045898438
    6. '	in' → logprob: -11.693222045898438
    7. 's' → logprob: -12.318222045898438
    8. '   ' → logprob: -12.318222045898438
    9. '  ' → logprob: -12.693222045898438
    10. ' i' → logprob: -12.943222045898438

Token 496: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.003167979419231415
    2. 're' → logprob: -6.128168106079102
    3. ' nodes' → logprob: -7.003168106079102
    4. 'range' → logprob: -10.003168106079102
    5. ' reversed' → logprob: -11.128168106079102
    6. 'reverse' → logprob: -12.628168106079102
    7. '(nodes' → logprob: -12.628168106079102
    8. 'node' → logprob: -13.378168106079102
    9. '	nodes' → logprob: -13.378168106079102
    10. 'n' → logprob: -13.628168106079102

Token 497: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.0024745857808738947
    2. 'by' → logprob: -6.127474784851074
    3. ':' → logprob: -8.877474784851074
    4. '_end' → logprob: -10.127474784851074
    5. '_in' → logprob: -10.627474784851074
    6. 'in' → logprob: -10.877474784851074
    7. 'end' → logprob: -11.002474784851074
    8. 'n' → logprob: -11.377474784851074
    9. '_:' → logprob: -12.127474784851074
    10. 'By' → logprob: -12.127474784851074

Token 498: '_dist' (ID: 37968)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.47415891289711
    2. 'range' → logprob: -0.9741588830947876
    3. 'dist' → logprob: -10.224159240722656
    4. 're' → logprob: -10.599159240722656
    5. 'ranges' → logprob: -12.224159240722656
    6. '(nodes' → logprob: -12.724159240722656
    7. ' nodes' → logprob: -12.974159240722656
    8. 'n' → logprob: -13.099159240722656
    9. 'rang' → logprob: -13.349159240722656
    10. 'node' → logprob: -13.474159240722656

Token 499: '_end' (ID: 13707)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6214599609375
    2. '[::-' → logprob: -1.4964599609375
    3. '_end' → logprob: -1.9964599609375
    4. ':' → logprob: -2.4964599609375
    5. 'end' → logprob: -4.2464599609375
    6. '[end' → logprob: -5.6214599609375
    7. ':end' → logprob: -6.9964599609375
    8. '   ' → logprob: -7.6214599609375
    9. 'in' → logprob: -8.4964599609375
    10. '```' → logprob: -8.6214599609375

Token 500: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46540367603302
    2. '[::-' → logprob: -1.21540367603302
    3. ':' → logprob: -2.5904035568237305
    4. '   ' → logprob: -7.9654035568237305
    5. '[' → logprob: -9.21540355682373
    6. '.reverse' → logprob: -10.09040355682373
    7. 'reverse' → logprob: -10.96540355682373
    8. '):
' → logprob: -12.34040355682373
    9. ' reversed' → logprob: -12.59040355682373
    10. ':

' → logprob: -12.84040355682373

Token 501: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8065668344497681
    2. '   ' → logprob: -1.181566834449768
    3. '[::-' → logprob: -1.556566834449768
    4. ':' → logprob: -3.4315667152404785
    5. '       ' → logprob: -6.4315667152404785
    6. 're' → logprob: -6.6815667152404785
    7. 'for' → logprob: -8.431567192077637
    8. 'reverse' → logprob: -8.431567192077637
    9. 'in' → logprob: -9.306567192077637
    10. '[' → logprob: -9.431567192077637

Token 502: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05384538322687149
    2. 'for' (adapté à ' for') → logprob: -3.5538454055786133
    3. ' for' → logprob: -4.053845405578613
    4. '       ' → logprob: -5.053845405578613
    5. '	for' → logprob: -9.678845405578613
    6. ' ' → logprob: -13.428845405578613
    7. '   ' → logprob: -13.803845405578613
    8. '           ' → logprob: -14.553845405578613
    9. '  ' → logprob: -15.428845405578613
    10. 'if' → logprob: -15.553845405578613

Token 503: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029756275936961174
    2. ' v' → logprob: -3.5297563076019287
    3. '   ' → logprob: -12.404756546020508
    4. '	v' → logprob: -14.154756546020508
    5. ',v' → logprob: -15.029756546020508
    6. '(v' → logprob: -15.904756546020508
    7. '```' → logprob: -15.904756546020508
    8. ',' → logprob: -16.279756546020508
    9. 'u' → logprob: -16.404756546020508
    10. '       ' → logprob: -16.654756546020508

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010795372509164736
    2. ' ,' → logprob: -9.625107765197754
    3. 'in' → logprob: -11.250107765197754
    4. ',v' → logprob: -11.250107765197754
    5. ' in' → logprob: -11.500107765197754
    6. ',w' → logprob: -12.750107765197754
    7. '_,' → logprob: -14.125107765197754
    8. ',
' → logprob: -14.125107765197754
    9. ',u' → logprob: -15.250107765197754
    10. ',_' → logprob: -15.375107765197754

Token 505: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2014138251543045
    2. ' w' → logprob: -1.701413869857788
    3. '	w' → logprob: -15.826414108276367
    4. '_w' → logprob: -16.076414108276367
    5. ' ' → logprob: -16.201414108276367
    6. ',w' → logprob: -16.826414108276367
    7. 'v' → logprob: -18.076414108276367
    8. '[w' → logprob: -18.201414108276367
    9. '   ' → logprob: -18.576414108276367
    10. 'graph' → logprob: -18.576414108276367

Token 506: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08895429968833923
    2. 'in' → logprob: -2.463954210281372
    3. ',' → logprob: -12.088953971862793
    4. '	in' → logprob: -12.588953971862793
    5. '   ' → logprob: -12.963953971862793
    6. ' ' → logprob: -13.463953971862793
    7. '  ' → logprob: -14.588953971862793
    8. 'n' → logprob: -15.713953971862793
    9. 's' → logprob: -15.713953971862793
    10. '    ' → logprob: -15.963953971862793

Token 507: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.018162231892347336
    2. ' graph' → logprob: -4.018162250518799
    3. '	graph' → logprob: -11.89316177368164
    4. '(graph' → logprob: -12.14316177368164
    5. 'graphql' → logprob: -17.01816177368164
    6. '   ' → logprob: -17.14316177368164
    7. '```' → logprob: -17.26816177368164
    8. ' ' → logprob: -17.51816177368164
    9. 'Graph' → logprob: -17.64316177368164
    10. '_graph' → logprob: -17.89316177368164

Token 508: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.874882430769503e-05
    2. '[v' → logprob: -9.500079154968262
    3. 'u' → logprob: -12.500079154968262
    4. '[' → logprob: -16.625078201293945
    5. '[n' → logprob: -18.500078201293945
    6. '[
' → logprob: -18.500078201293945
    7. '(u' → logprob: -18.625078201293945
    8. '	u' → logprob: -18.750078201293945
    9. 'v' → logprob: -19.250078201293945
    10. '[x' → logprob: -19.500078201293945

Token 509: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2276853770017624
    2. ']:' → logprob: -1.7276853322982788
    3. ']:
' → logprob: -3.9776854515075684
    4. ':
' → logprob: -5.227685451507568
    5. ']' → logprob: -7.102685451507568
    6. '):' → logprob: -7.852685451507568
    7. '       ' → logprob: -9.22768497467041
    8. '):
' → logprob: -9.22768497467041
    9. '```' → logprob: -9.22768497467041
    10. '[u' → logprob: -9.35268497467041

Token 510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002413703827187419
    2. '	       ' → logprob: -6.877413749694824
    3. '       ' → logprob: -7.502413749694824
    4. '	   ' → logprob: -8.002413749694824
    5. '   ' → logprob: -8.502413749694824
    6. '		' → logprob: -9.502413749694824
    7. ' if' → logprob: -9.627413749694824
    8. '		   ' → logprob: -10.002413749694824
    9. '<|end|>' → logprob: -10.377413749694824
    10. '    	   ' → logprob: -11.002413749694824

Token 511: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07836031168699265
    2. '               ' → logprob: -3.4533603191375732
    3. 'if' (adapté à ' if') → logprob: -3.5783603191375732
    4. '       ' → logprob: -4.578360080718994
    5. ' if' → logprob: -5.578360080718994
    6. '   ' → logprob: -6.453360080718994
    7. '	       ' → logprob: -9.328360557556152
    8. '	if' → logprob: -10.328360557556152
    9. '```' → logprob: -11.078360557556152
    10. '                   ' → logprob: -11.703360557556152

Token 512: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0040952586568892
    2. ' dist' → logprob: -5.504095077514648
    3. '   ' → logprob: -11.254095077514648
    4. '	dist' → logprob: -13.504095077514648
    5. 'd' → logprob: -14.004095077514648
    6. '(dist' → logprob: -14.879095077514648
    7. ' ' → logprob: -15.004095077514648
    8. '  ' → logprob: -15.879095077514648
    9. '           ' → logprob: -16.00409507751465
    10. '.dist' → logprob: -16.12909507751465

Token 513: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0003874166286550462
    2. '_start' → logprob: -8.125387191772461
    3. 'end' → logprob: -9.625387191772461
    4. '[u' → logprob: -11.125387191772461
    5. '[v' → logprob: -12.000387191772461
    6. '[end' → logprob: -13.750387191772461
    7. '_dist' → logprob: -14.000387191772461
    8. '_' → logprob: -14.875387191772461
    9. '_u' → logprob: -14.875387191772461
    10. 'v' → logprob: -15.000387191772461

Token 514: '[u' (ID: 48750)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.6932500600814819
    2. '[u' → logprob: -0.6932500600814819
    3. 'u' → logprob: -9.568249702453613
    4. 'v' → logprob: -10.568249702453613
    5. '[' → logprob: -12.318249702453613
    6. '[x' → logprob: -14.818249702453613
    7. '[w' → logprob: -15.505749702453613
    8. ' [' → logprob: -15.568249702453613
    9. '```' → logprob: -15.943249702453613
    10. '[q' → logprob: -16.06825065612793

Token 515: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7235774397850037
    2. '[v' → logprob: -0.7235774397850037
    3. '[u' → logprob: -4.598577499389648
    4. '+' → logprob: -4.598577499389648
    5. ']+' → logprob: -5.098577499389648
    6. '[' → logprob: -6.348577499389648
    7. 'v' → logprob: -6.723577499389648
    8. ' +' → logprob: -8.098577499389648
    9. 'u' → logprob: -8.973577499389648
    10. ')' → logprob: -9.223577499389648

Token 516: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28118348121643066
    2. ' +' → logprob: -1.4061834812164307
    3. '[' → logprob: -11.656183242797852
    4. '[u' → logprob: -12.031183242797852
    5. '[v' → logprob: -12.281183242797852
    6. ' ' → logprob: -12.906183242797852
    7. '+
' → logprob: -13.406183242797852
    8. '==' → logprob: -13.531183242797852
    9. '>' → logprob: -13.531183242797852
    10. '+w' → logprob: -13.531183242797852

Token 517: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0001584850688232109
    2. ' w' → logprob: -8.750158309936523
    3. 'v' → logprob: -17.750158309936523
    4. '   ' → logprob: -20.125158309936523
    5. ' ' → logprob: -20.750158309936523
    6. '  ' → logprob: -20.750158309936523
    7. '    ' → logprob: -21.000158309936523
    8. '           ' → logprob: -21.250158309936523
    9. '	w' → logprob: -21.500158309936523
    10. '               ' → logprob: -21.500158309936523

Token 518: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011130349710583687
    2. ' ==' → logprob: -4.511130332946777
    3. '=' → logprob: -9.511130332946777
    4. '==
' → logprob: -12.011130332946777
    5. ']==' → logprob: -14.136130332946777
    6. '===' → logprob: -15.136130332946777
    7. ')==' → logprob: -15.636130332946777
    8. ' ' → logprob: -15.636130332946777
    9. '           ' → logprob: -15.761130332946777
    10. '   ' → logprob: -16.011131286621094

Token 519: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.003178071230649948
    2. ' dist' → logprob: -5.753178119659424
    3. '	dist' → logprob: -15.628177642822266
    4. '   ' → logprob: -16.003177642822266
    5. ' ' → logprob: -17.253177642822266
    6. '(dist' → logprob: -17.878177642822266
    7. 'd' → logprob: -18.128177642822266
    8. '  ' → logprob: -18.878177642822266
    9. '.dist' → logprob: -19.878177642822266
    10. '
' → logprob: -20.003177642822266

Token 520: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0020834049209952354
    2. 'end' → logprob: -6.3770833015441895
    3. '[v' → logprob: -8.002083778381348
    4. '_start' → logprob: -10.627083778381348
    5. 'dist' → logprob: -11.252083778381348
    6. '_dist' → logprob: -12.377083778381348
    7. 'End' → logprob: -13.252083778381348
    8. '[end' → logprob: -14.252083778381348
    9. '(v' → logprob: -14.752083778381348
    10. 'v' → logprob: -14.877083778381348

Token 521: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.372294698550832e-06
    2. 'v' → logprob: -11.750009536743164
    3. '[' → logprob: -14.250009536743164
    4. '(v' → logprob: -14.750009536743164
    5. '[u' → logprob: -15.625009536743164
    6. '<v' → logprob: -16.250009536743164
    7. '
' → logprob: -16.625009536743164
    8. '   ' → logprob: -17.125009536743164
    9. '```' → logprob: -17.250009536743164
    10. ' [' → logprob: -18.000009536743164

Token 522: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11739770323038101
    2. '               ' → logprob: -3.1173977851867676
    3. ':
' → logprob: -3.3673977851867676
    4. ']:' → logprob: -3.6173977851867676
    5. ']:
' → logprob: -5.742397785186768
    6. '           ' → logprob: -7.367397785186768
    7. '):' → logprob: -8.11739730834961
    8. ' and' → logprob: -8.36739730834961
    9. '):
' → logprob: -8.99239730834961
    10. '       ' → logprob: -9.24239730834961

Token 523: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006856504827737808
    2. 'ways' → logprob: -5.506856441497803
    3. '           ' → logprob: -7.006856441497803
    4. ' ways' → logprob: -7.131856441497803
    5. '       ' → logprob: -7.381856441497803
    6. '                   ' → logprob: -9.131856918334961
    7. '   ' → logprob: -9.256856918334961
    8. '			' → logprob: -9.631856918334961
    9. '              ' → logprob: -10.381856918334961
    10. '                       ' → logprob: -10.756856918334961

Token 524: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.0013178583467379212
    2. ' ways' → logprob: -6.876317977905273
    3. '               ' → logprob: -8.876317977905273
    4. '           ' → logprob: -9.251317977905273
    5. '   ' → logprob: -10.501317977905273
    6. '       ' → logprob: -12.126317977905273
    7. '                   ' → logprob: -12.126317977905273
    8. 'continue' → logprob: -12.876317977905273
    9. '```' → logprob: -13.126317977905273
    10. '                       ' → logprob: -13.501317977905273

Token 525: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0017463387921452522
    2. '_start' → logprob: -6.75174617767334
    3. 'end' → logprob: -7.50174617767334
    4. '_en' → logprob: -12.25174617767334
    5. 'start' → logprob: -12.37674617767334
    6. '_' → logprob: -12.50174617767334
    7. '   ' → logprob: -12.62674617767334
    8. '[end' → logprob: -13.50174617767334
    9. '_u' → logprob: -13.62674617767334
    10. '[_' → logprob: -14.62674617767334

Token 526: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.01260418351739645
    2. '[u' → logprob: -4.387604236602783
    3. 'v' → logprob: -9.637603759765625
    4. '[' → logprob: -10.637603759765625
    5. 'u' → logprob: -13.262603759765625
    6. '   ' → logprob: -13.887603759765625
    7. ' [' → logprob: -14.387603759765625
    8. '	v' → logprob: -14.887603759765625
    9. '
' → logprob: -15.512603759765625
    10. '[
' → logprob: -15.887603759765625

Token 527: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.4765686094760895
    2. ']' → logprob: -0.9765685796737671
    3. '+=' → logprob: -6.601568698883057
    4. ' +=' → logprob: -7.351568698883057
    5. ' ]' → logprob: -8.226568222045898
    6. '[' → logprob: -8.976568222045898
    7. ']+' → logprob: -9.976568222045898
    8. ')' → logprob: -10.851568222045898
    9. '
' → logprob: -12.101568222045898
    10. '           ' → logprob: -12.601568222045898

Token 528: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38722535967826843
    2. ' +=' → logprob: -1.1372253894805908
    3. ']+=' → logprob: -8.262225151062012
    4. '+' → logprob: -10.012225151062012
    5. '    ' → logprob: -10.762225151062012
    6. '=' → logprob: -11.887225151062012
    7. '[' → logprob: -12.012225151062012
    8. '   ' → logprob: -12.387225151062012
    9. '        ' → logprob: -12.637225151062012
    10. '	' → logprob: -13.512225151062012

Token 529: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0019342314917594194
    2. ' ways' → logprob: -6.251934051513672
    3. 'way' → logprob: -12.251934051513672
    4. '   ' → logprob: -14.626934051513672
    5. 'WAYS' → logprob: -15.751934051513672
    6. '       ' → logprob: -16.376934051513672
    7. 'Ways' → logprob: -16.376934051513672
    8. ' ' → logprob: -17.001934051513672
    9. '           ' → logprob: -17.376934051513672
    10. '
' → logprob: -17.751934051513672

Token 530: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.07027440518140793
    2. 'end' → logprob: -2.8202743530273438
    3. '[u' → logprob: -4.820274353027344
    4. 'nd' → logprob: -9.570274353027344
    5. '[end' → logprob: -9.945274353027344
    6. '[' → logprob: -11.320274353027344
    7. 'u' → logprob: -11.320274353027344
    8. 'e' → logprob: -11.445274353027344
    9. '_[' → logprob: -11.945274353027344
    10. '_start' → logprob: -12.070274353027344

Token 531: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.4617256056226324e-05
    2. 'u' → logprob: -11.250014305114746
    3. '[' → logprob: -13.375014305114746
    4. '[
' → logprob: -17.875015258789062
    5. '[v' → logprob: -18.375015258789062
    6. '```' → logprob: -18.375015258789062
    7. ' [' → logprob: -19.250015258789062
    8. '
' → logprob: -19.500015258789062
    9. '\[' → logprob: -20.000015258789062
    10. '<u' → logprob: -20.125015258789062

Token 532: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.437923401594162
    2. '<|end|>' → logprob: -1.0629234313964844
    3. ']' → logprob: -5.562923431396484
    4. '#' → logprob: -6.687923431396484
    5. '}' → logprob: -7.437923431396484
    6. '[' → logprob: -7.687923431396484
    7. '```' → logprob: -7.687923431396484
    8. '<|end|>' → logprob: -7.687923431396484
    9. '   ' → logprob: -7.812923431396484
    10. ',' → logprob: -8.187923431396484

Token 533: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 534: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9339146614074707
    2. '<|end|>' → logprob: -1.0589146614074707
    3. '   ' → logprob: -1.6839146614074707
    4. ' for' → logprob: -3.0589146614074707
    5. ' ' → logprob: -4.808914661407471
    6. ')' → logprob: -5.183914661407471
    7. 'v' → logprob: -5.558914661407471
    8. '[' → logprob: -5.933914661407471
    9. '#' → logprob: -6.558914661407471
    10. 'n' → logprob: -6.808914661407471

Token 535: '_paths' (ID: 56992)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39025506377220154
    2. '_paths' → logprob: -1.140255093574524
    3. '_short' → logprob: -5.890254974365234
    4. '_path' → logprob: -7.890254974365234
    5. ' =' → logprob: -9.515254974365234
    6. '=' → logprob: -9.515254974365234
    7. '_count' → logprob: -10.265254974365234
    8. '_way' → logprob: -11.515254974365234
    9. '```' → logprob: -11.890254974365234
    10. '_possible' → logprob: -12.265254974365234

Token 536: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890014350414276
    2. '=' → logprob: -2.578900098800659
    3. '_' → logprob: -12.078900337219238
    4. '[' → logprob: -12.828900337219238
    5. ',' → logprob: -14.328900337219238
    6. ' ' → logprob: -14.453900337219238
    7. ' =
' → logprob: -14.953900337219238
    8. ' =[' → logprob: -15.453900337219238
    9. 's' → logprob: -16.203899383544922
    10. ')' → logprob: -16.703899383544922

Token 537: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.002188449027016759
    2. ' ways' → logprob: -6.127188682556152
    3. '   ' → logprob: -13.377188682556152
    4. 'way' → logprob: -13.377188682556152
    5. 'WAYS' → logprob: -15.627188682556152
    6. ' ' → logprob: -17.127187728881836
    7. '    ' → logprob: -18.252187728881836
    8. '  ' → logprob: -18.502187728881836
    9. 'Ways' → logprob: -19.002187728881836
    10. '```' → logprob: -19.252187728881836

Token 538: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00017398154886905104
    2. 'start' → logprob: -8.750173568725586
    3. '[start' → logprob: -11.625173568725586
    4. '_end' → logprob: -12.375173568725586
    5. '_' → logprob: -14.000173568725586
    6. 'Start' → logprob: -14.500173568725586
    7. '[' → logprob: -15.250173568725586
    8. 's' → logprob: -15.625173568725586
    9. '_START' → logprob: -16.000173568725586
    10. '```' → logprob: -16.375173568725586

Token 539: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.625001907348633
    3. 'n' → logprob: -14.875001907348633
    4. '[-' → logprob: -15.375001907348633
    5. '[N' → logprob: -19.500001907348633
    6. '(n' → logprob: -20.125001907348633
    7. '[end' → logprob: -20.375001907348633
    8. '[m' → logprob: -20.625001907348633
    9. '	n' → logprob: -20.875001907348633
    10. '
' → logprob: -21.000001907348633

Token 540: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.029847231227905e-05
    2. '[' → logprob: -9.625080108642578
    3. '1' → logprob: -12.375080108642578
    4. '[n' → logprob: -12.375080108642578
    5. ' -' → logprob: -12.875080108642578
    6. '[-' → logprob: -13.375080108642578
    7. '   ' → logprob: -14.375080108642578
    8. '−' → logprob: -14.750080108642578
    9. ']' → logprob: -15.875080108642578
    10. '```' → logprob: -16.250080108642578

Token 541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '   ' → logprob: -13.375003814697266
    3. ' ' → logprob: -13.625003814697266
    4. '-' → logprob: -14.812503814697266
    5. '```' → logprob: -15.062503814697266
    6. '       ' → logprob: -16.687503814697266
    7. '[' → logprob: -16.812503814697266
    8. '           ' → logprob: -17.062503814697266
    9. '
' → logprob: -17.250003814697266
    10. ']' → logprob: -17.562503814697266

Token 542: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 543: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 544: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.38146868348121643
    2. 'result' → logprob: -2.0064687728881836
    3. 'answer' → logprob: -2.7564687728881836
    4. 'ans' → logprob: -3.6314687728881836
    5. 'safe' → logprob: -4.006468772888184
    6. 'count' → logprob: -4.381468772888184
    7. 'answers' → logprob: -4.881468772888184
    8. 'res' → logprob: -5.006468772888184
    9. 'valid' → logprob: -5.131468772888184
    10. 'good' → logprob: -5.506468772888184

Token 545: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03490935638546944
    2. 'c' → logprob: -3.409909248352051
    3. ' child' → logprob: -7.034909248352051
    4. 'child' → logprob: -8.28490924835205
    5. ' i' → logprob: -10.03490924835205
    6. '_' → logprob: -10.65990924835205
    7. '_c' → logprob: -10.90990924835205
    8. '	c' → logprob: -11.53490924835205
    9. ' _' → logprob: -11.78490924835205
    10. 'i' → logprob: -11.78490924835205

Token 546: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03007603995501995
    2. 'in' → logprob: -3.530076026916504
    3. ' ' → logprob: -8.405076026916504
    4. ' i' → logprob: -9.655076026916504
    5. '  ' → logprob: -11.405076026916504
    6. ',' → logprob: -11.655076026916504
    7. '	in' → logprob: -12.030076026916504
    8. ' ,' → logprob: -12.530076026916504
    9. 'i' → logprob: -13.155076026916504
    10. 'n' → logprob: -13.655076026916504

Token 547: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.12693975865840912
    2. ' children' → logprob: -2.1269397735595703
    3. 'child' → logprob: -12.12693977355957
    4. '	children' → logprob: -12.87693977355957
    5. '(children' → logprob: -12.87693977355957
    6. 'range' → logprob: -14.87693977355957
    7. 'c' → logprob: -15.25193977355957
    8. '.children' → logprob: -15.50193977355957
    9. ' child' → logprob: -16.12693977355957
    10. ' ' → logprob: -16.62693977355957

Token 548: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007613017223775387
    2. ':
' → logprob: -4.882613182067871
    3. ',' → logprob: -12.757613182067871
    4. '   ' → logprob: -13.882613182067871
    5. ':

' → logprob: -14.257613182067871
    6. '):' → logprob: -14.382613182067871
    7. '):
' → logprob: -14.632613182067871
    8. ' :' → logprob: -14.632613182067871
    9. '=' → logprob: -15.007613182067871
    10. ':
' → logprob: -15.507613182067871

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0356135293841362
    2. '   ' → logprob: -3.535613536834717
    3. ':' → logprob: -6.285613536834717
    4. '        
' → logprob: -7.285613536834717
    5. ' if' → logprob: -7.285613536834717
    6. '  
' → logprob: -7.410613536834717
    7. '    
' → logprob: -7.535613536834717
    8. ':
' → logprob: -7.910613536834717
    9. '
' → logprob: -7.910613536834717
    10. '     ' → logprob: -9.285613059997559

Token 550: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3353867530822754
    2. '       ' → logprob: -1.3353867530822754
    3. 'if' (adapté à ' if') → logprob: -4.085386753082275
    4. '        
' → logprob: -6.835386753082275
    5. '   ' → logprob: -6.960386753082275
    6. '
' → logprob: -7.210386753082275
    7. ' i' → logprob: -7.960386753082275
    8. ' 
' → logprob: -7.960386753082275
    9. ' print' → logprob: -8.335386276245117
    10. 'print' → logprob: -8.460386276245117

Token 551: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16086404025554657
    2. ' dist' → logprob: -1.910863995552063
    3. '(dist' → logprob: -7.785863876342773
    4. 'c' → logprob: -9.285863876342773
    5. ' (' → logprob: -10.160863876342773
    6. ' ' → logprob: -10.910863876342773
    7. '0' → logprob: -10.910863876342773
    8. ' c' → logprob: -11.160863876342773
    9. '(' → logprob: -11.410863876342773
    10. 'd' → logprob: -12.160863876342773

Token 552: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -4.127333340875339e-06
    2. '[start' → logprob: -12.750003814697266
    3. 'start' → logprob: -14.000003814697266
    4. '_short' → logprob: -15.500003814697266
    5. '[c' → logprob: -16.500003814697266
    6. '_START' → logprob: -17.250003814697266
    7. 'Start' → logprob: -18.250003814697266
    8. '_end' → logprob: -18.500003814697266
    9. '_c' → logprob: -19.000003814697266
    10. 'c' → logprob: -19.250003814697266

Token 553: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -4.842555426876061e-06
    2. 'c' → logprob: -12.625004768371582
    3. '[' → logprob: -13.625004768371582
    4. '[u' → logprob: -15.875004768371582
    5. '[
' → logprob: -17.0000057220459
    6. ' [' → logprob: -17.1250057220459
    7. '
' → logprob: -18.6250057220459
    8. '	c' → logprob: -18.7500057220459
    9. ')' → logprob: -19.0000057220459
    10. '+c' → logprob: -19.1250057220459

Token 554: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010856099426746368
    2. '+' → logprob: -5.1358561515808105
    3. ']+' → logprob: -6.1358561515808105
    4. ')' → logprob: -6.2608561515808105
    5. ' +' → logprob: -7.6358561515808105
    6. '>' → logprob: -9.135855674743652
    7. ']!=' → logprob: -9.385855674743652
    8. '}' → logprob: -9.635855674743652
    9. ' ]' → logprob: -10.385855674743652
    10. ']==' → logprob: -10.885855674743652

Token 555: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06202604994177818
    2. ' +' → logprob: -2.812026023864746
    3. '!=' → logprob: -10.437026023864746
    4. '>' → logprob: -10.937026023864746
    5. ' !=' → logprob: -12.937026023864746
    6. '+c' → logprob: -13.187026023864746
    7. '==' → logprob: -13.312026023864746
    8. '+
' → logprob: -13.437026023864746
    9. '<' → logprob: -13.937026023864746
    10. '!' → logprob: -14.437026023864746

Token 556: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004883344518020749
    2. ' dist' → logprob: -7.62548828125
    3. '(dist' → logprob: -16.25048828125
    4. '   ' → logprob: -16.87548828125
    5. '	dist' → logprob: -17.12548828125
    6. '.dist' → logprob: -17.37548828125
    7. '_dist' → logprob: -18.50048828125
    8. 'd' → logprob: -18.87548828125
    9. 'diff' → logprob: -19.37548828125
    10. '       ' → logprob: -19.62548828125

Token 557: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -2.3438327843905427e-05
    2. 'end' → logprob: -10.75002384185791
    3. '[end' → logprob: -13.25002384185791
    4. '[c' → logprob: -16.375022888183594
    5. '_' → logprob: -17.500022888183594
    6. 'End' → logprob: -17.875022888183594
    7. '```' → logprob: -18.125022888183594
    8. '_END' → logprob: -18.125022888183594
    9. '[_' → logprob: -18.500022888183594
    10. 'c' → logprob: -19.000022888183594

Token 558: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.250000953674316
    3. 'c' → logprob: -15.250000953674316
    4. '```' → logprob: -16.125001907348633
    5. ' [' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '==' → logprob: -17.625001907348633
    8. '[
' → logprob: -18.500001907348633
    9. '(c' → logprob: -18.875001907348633
    10. '[n' → logprob: -19.000001907348633

Token 559: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7523435354232788
    2. ' ==' → logprob: -1.0023435354232788
    3. '>' → logprob: -2.0023436546325684
    4. ' >' → logprob: -3.7523436546325684
    5. ' !=' → logprob: -7.002343654632568
    6. '=' → logprob: -7.252343654632568
    7. ')' → logprob: -7.377343654632568
    8. ']' → logprob: -7.752343654632568
    9. '!=' → logprob: -8.37734317779541
    10. ']==' → logprob: -9.00234317779541

Token 560: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.49672070145606995
    2. ' ==' → logprob: -1.1217206716537476
    3. '>' → logprob: -2.996720790863037
    4. ' >' → logprob: -4.246720790863037
    5. ' !=' → logprob: -7.621720790863037
    6. '!=' → logprob: -7.996720790863037
    7. '<=' → logprob: -8.246720314025879
    8. '=' → logprob: -8.371720314025879
    9. ' <=' → logprob: -8.996720314025879
    10. '==
' → logprob: -10.871720314025879

Token 561: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.061968132853507996
    2. ' dist' → logprob: -2.8119680881500244
    3. '(dist' → logprob: -15.561967849731445
    4. '	dist' → logprob: -15.686967849731445
    5. '   ' → logprob: -16.436967849731445
    6. ' ' → logprob: -17.311967849731445
    7. '_dist' → logprob: -18.061967849731445
    8. 'd' → logprob: -18.436967849731445
    9. '  ' → logprob: -18.811967849731445
    10. '.dist' → logprob: -18.811967849731445

Token 562: '_short' (ID: 40379)
  Prédit: '_short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -0.00020580526324920356
    2. '_start' → logprob: -8.500205993652344
    3. 'short' → logprob: -13.125205993652344
    4. '   ' → logprob: -16.250205993652344
    5. 'start' → logprob: -17.125205993652344
    6. '_' → logprob: -17.125205993652344
    7. '```' → logprob: -17.625205993652344
    8. '  ' → logprob: -18.875205993652344
    9. 'Short' → logprob: -19.000205993652344
    10. '	short' → logprob: -19.125205993652344

Token 563: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -8.2994620242971e-06
    2. '```' → logprob: -12.625008583068848
    3. 'test' → logprob: -13.625008583068848
    4. '_path' → logprob: -13.875008583068848
    5. '   ' → logprob: -15.250008583068848
    6. '_test' → logprob: -15.375008583068848
    7. 'ест' → logprob: -15.500008583068848
    8. '
' → logprob: -15.500008583068848
    9. '`' → logprob: -15.750008583068848
    10. '``' → logprob: -16.00000762939453

Token 564: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0009035997791215777
    2. 'and' → logprob: -7.125903606414795
    3. ' ' → logprob: -9.750903129577637
    4. ':' → logprob: -10.625903129577637
    5. '   ' → logprob: -12.250903129577637
    6. '    ' → logprob: -12.875903129577637
    7. '       ' → logprob: -13.125903129577637
    8. ':
' → logprob: -13.500903129577637
    9. ' a' → logprob: -13.625903129577637
    10. '        ' → logprob: -13.625903129577637

Token 565: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1030992791056633
    2. '           ' → logprob: -2.7280993461608887
    3. '       ' → logprob: -3.4780993461608887
    4. ':' → logprob: -7.603099346160889
    5. ':
' → logprob: -8.10309886932373
    6. 'and' → logprob: -8.22809886932373
    7. '   ' → logprob: -8.85309886932373
    8. ' if' → logprob: -9.10309886932373
    9. '        ' → logprob: -9.22809886932373
    10. '            
' → logprob: -9.97809886932373

Token 566: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8503286242485046
    2. 'count' (adapté à ' count') → logprob: -1.6003286838531494
    3. 'if' → logprob: -1.9753286838531494
    4. 'print' → logprob: -2.1003286838531494
    5. '           ' → logprob: -2.7253286838531494
    6. ' if' → logprob: -4.10032844543457
    7. 'ways' → logprob: -4.60032844543457
    8. 'paths' → logprob: -4.85032844543457
    9. ' count' → logprob: -5.97532844543457
    10. ' print' → logprob: -6.60032844543457

Token 567: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014268811792135239
    2. '=' → logprob: -4.26426887512207
    3. ' +=' → logprob: -9.63926887512207
    4. '   ' → logprob: -10.88926887512207
    5. '+=' → logprob: -12.38926887512207
    6. ' ' → logprob: -12.51426887512207
    7. '_' → logprob: -12.51426887512207
    8. '    ' → logprob: -13.63926887512207
    9. 's' → logprob: -13.63926887512207
    10. '=c' → logprob: -13.76426887512207

Token 568: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0069300392642617226
    2. ' ways' → logprob: -5.006929874420166
    3. '   ' → logprob: -8.631930351257324
    4. 'way' → logprob: -11.256930351257324
    5. '(' → logprob: -11.881930351257324
    6. ' ' → logprob: -12.256930351257324
    7. '       ' → logprob: -12.506930351257324
    8. '           ' → logprob: -13.506930351257324
    9. 'WAYS' → logprob: -13.506930351257324
    10. '    ' → logprob: -14.381930351257324

Token 569: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.2113979209971149e-05
    2. 'start' → logprob: -11.375012397766113
    3. '[start' → logprob: -14.375012397766113
    4. '```' → logprob: -18.000011444091797
    5. '_START' → logprob: -18.125011444091797
    6. 'Start' → logprob: -18.125011444091797
    7. '_' → logprob: -18.125011444091797
    8. '_end' → logprob: -19.125011444091797
    9. 'c' → logprob: -19.875011444091797
    10. '[_' → logprob: -20.000011444091797

Token 570: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.250001907348633
    3. 'c' → logprob: -14.375001907348633
    4. ' [' → logprob: -15.500001907348633
    5. ')c' → logprob: -17.750001907348633
    6. ' c' → logprob: -17.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. '	c' → logprob: -18.000001907348633
    9. '[count' → logprob: -18.125001907348633
    10. ')[' → logprob: -18.125001907348633

Token 571: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05497425049543381
    2. '*' → logprob: -2.929974317550659
    3. ')' → logprob: -9.804974555969238
    4. ' ' → logprob: -10.804974555969238
    5. ']' → logprob: -11.804974555969238
    6. '   ' → logprob: -13.179974555969238
    7. ' ' → logprob: -13.304974555969238
    8. '           ' → logprob: -14.054974555969238
    9. '        ' → logprob: -14.554974555969238
    10. '    ' → logprob: -14.554974555969238

Token 572: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08895484358072281
    2. '*' → logprob: -2.4639549255371094
    3. ' ' → logprob: -12.46395492553711
    4. '           ' → logprob: -12.83895492553711
    5. '   ' → logprob: -13.08895492553711
    6. ' ' → logprob: -13.46395492553711
    7. '```' → logprob: -13.71395492553711
    8. '**' → logprob: -13.83895492553711
    9. '          ' → logprob: -14.21395492553711
    10. ' *
' → logprob: -14.83895492553711

Token 573: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.12693314254283905
    2. ' ways' → logprob: -2.1269330978393555
    3. 'way' → logprob: -12.376933097839355
    4. ' way' → logprob: -15.001933097839355
    5. 'Ways' → logprob: -15.626933097839355
    6. 'WAYS' → logprob: -15.876933097839355
    7. '```' → logprob: -16.626934051513672
    8. 'w' → logprob: -17.001934051513672
    9. ' ' → logprob: -17.126934051513672
    10. '   ' → logprob: -17.376934051513672

Token 574: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -9.13388703338569e-06
    2. 'end' → logprob: -11.625009536743164
    3. '[end' → logprob: -16.250009536743164
    4. '_start' → logprob: -18.000009536743164
    5. 'End' → logprob: -18.000009536743164
    6. '_END' → logprob: -18.875009536743164
    7. '-end' → logprob: -19.250009536743164
    8. '_en' → logprob: -19.750009536743164
    9. '   ' → logprob: -20.625009536743164
    10. 's' → logprob: -20.625009536743164

Token 575: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00033760786755010486
    2. 'c' → logprob: -8.000337600708008
    3. '[' → logprob: -13.250337600708008
    4. '[u' → logprob: -16.000337600708008
    5. '	c' → logprob: -16.625337600708008
    6. '[
' → logprob: -16.625337600708008
    7. '```' → logprob: -16.625337600708008
    8. '\[' → logprob: -18.625337600708008
    9. '[v' → logprob: -18.750337600708008
    10. ')c' → logprob: -18.750337600708008

Token 576: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04089689999818802
    2. '           ' → logprob: -3.5408968925476074
    3. ' if' → logprob: -4.790896892547607
    4. '
' → logprob: -7.040896892547607
    5. ' /' → logprob: -7.665896892547607
    6. '	       ' → logprob: -7.915896892547607
    7. 'if' → logprob: -8.415897369384766
    8. '<|end|>' → logprob: -8.540897369384766
    9. '	' → logprob: -8.665897369384766
    10. '	if' → logprob: -9.165897369384766

Token 578: ' prob' (ID: 4921)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08436758071184158
    2. 'if' → logprob: -2.709367513656616
    3. '           ' → logprob: -4.959367752075195
    4. '    ' → logprob: -6.334367752075195
    5. '	if' → logprob: -6.584367752075195
    6. '   ' → logprob: -6.834367752075195
    7. '       ' → logprob: -7.084367752075195
    8. 'print' → logprob: -7.584367752075195
    9. ' print' → logprob: -7.834367752075195
    10. '     ' → logprob: -8.334367752075195

Token 579: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07016406208276749
    2. '=' → logprob: -2.6951639652252197
    3. '_' → logprob: -8.57016372680664
    4. '/' → logprob: -11.94516372680664
    5. ')' → logprob: -12.19516372680664
    6. ',' → logprob: -12.57016372680664
    7. ' /' → logprob: -12.57016372680664
    8. ' =
' → logprob: -13.32016372680664
    9. ' ' → logprob: -13.69516372680664
    10. '.' → logprob: -13.69516372680664

Token 580: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4298563301563263
    2. ' count' → logprob: -1.054856300354004
    3. '(count' → logprob: -7.554856300354004
    4. '1' → logprob: -8.054856300354004
    5. ' ' → logprob: -9.054856300354004
    6. ' (' → logprob: -9.429856300354004
    7. ' total' → logprob: -10.429856300354004
    8. '(' → logprob: -10.804856300354004
    9. 'total' → logprob: -11.554856300354004
    10. '100' → logprob: -11.554856300354004

Token 581: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3869779407978058
    2. ' /' → logprob: -1.1369779109954834
    3. '   ' → logprob: -10.011978149414062
    4. '           ' → logprob: -10.511978149414062
    5. '/
' → logprob: -11.011978149414062
    6. ' /
' → logprob: -12.636978149414062
    7. '    ' → logprob: -12.886978149414062
    8. '          ' → logprob: -13.011978149414062
    9. '       ' → logprob: -13.136978149414062
    10. '
' → logprob: -13.511978149414062

Token 582: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0009114635176956654
    2. ' total' → logprob: -7.000911235809326
    3. '(total' → logprob: -18.375911712646484
    4. '   ' → logprob: -19.625911712646484
    5. 'otal' → logprob: -19.875911712646484
    6. ' ' → logprob: -20.000911712646484
    7. '	total' → logprob: -20.500911712646484
    8. '_total' → logprob: -20.750911712646484
    9. '           ' → logprob: -21.500911712646484
    10. '
' → logprob: -21.625911712646484

Token 583: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -1.5690089639974758e-05
    2. '_' → logprob: -11.625015258789062
    3. '_path' → logprob: -12.250015258789062
    4. '```' → logprob: -14.375015258789062
    5. 'paths' → logprob: -14.750015258789062
    6. ' _' → logprob: -15.000015258789062
    7. '\' → logprob: -15.875015258789062
    8. '_p' → logprob: -16.250015258789062
    9. '_routes' → logprob: -16.375015258789062
    10. '_
' → logprob: -17.125015258789062

Token 584: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16864575445652008
    2. '
' → logprob: -2.2936458587646484
    3. '       ' → logprob: -2.9186458587646484
    4. '            
' → logprob: -9.043645858764648
    5. '   ' → logprob: -10.043645858764648
    6. '
' → logprob: -10.543645858764648
    7. '    
' → logprob: -10.668645858764648
    8. '        
' → logprob: -10.918645858764648
    9. ',' → logprob: -11.168645858764648
    10. ',
' → logprob: -11.668645858764648

Token 585: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017472846433520317
    2. '
' → logprob: -4.392472743988037
    3. 'print' → logprob: -5.642472743988037
    4. '<|end|>' → logprob: -7.142472743988037
    5. '   ' → logprob: -8.017473220825195
    6. ' print' → logprob: -9.267473220825195
    7. '           ' → logprob: -9.642473220825195
    8. ')' → logprob: -10.142473220825195
    9. '
' → logprob: -11.142473220825195
    10. ',' → logprob: -11.392473220825195

Token 586: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01898789033293724
    2. ' print' → logprob: -4.018987655639648
    3. '           ' → logprob: -7.518987655639648
    4. '       ' → logprob: -8.768987655639648
    5. '   ' → logprob: -8.893987655639648
    6. '```' → logprob: -14.268987655639648
    7. '               ' → logprob: -14.643987655639648
    8. '
' → logprob: -14.643987655639648
    9. '	print' → logprob: -15.268987655639648
    10. 'pr' → logprob: -15.643987655639648

Token 587: '(float' (ID: 17830)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0030051618814468384
    2. '(prob' → logprob: -6.503005027770996
    3. '(round' → logprob: -6.878005027770996
    4. '("{' → logprob: -8.628005027770996
    5. '(int' → logprob: -9.003005027770996
    6. '(' → logprob: -9.628005027770996
    7. 'f' → logprob: -10.253005027770996
    8. '('{' → logprob: -10.253005027770996
    9. '("%.' → logprob: -11.503005027770996
    10. '('' → logprob: -11.503005027770996

Token 588: '(prob' (ID: 180876)
  Prédit: '(prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prob' → logprob: -0.0009786247974261642
    2. '(f' → logprob: -7.625978469848633
    3. '('{' → logprob: -8.250978469848633
    4. '("{' → logprob: -9.375978469848633
    5. '(' → logprob: -9.625978469848633
    6. ')' → logprob: -10.875978469848633
    7. '('' → logprob: -11.250978469848633
    8. '(round' → logprob: -11.375978469848633
    9. ''{' → logprob: -11.750978469848633
    10. 'prob' → logprob: -11.875978469848633

Token 589: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015383612480945885
    2. '))' → logprob: -9.000153541564941
    3. ' )' → logprob: -11.625153541564941
    4. '())' → logprob: -11.750153541564941
    5. ')
' → logprob: -11.875153541564941
    6. ')`' → logprob: -12.875153541564941
    7. ')")' → logprob: -14.000153541564941
    8. '*)' → logprob: -14.625153541564941
    9. ')}' → logprob: -14.875153541564941
    10. '*' → logprob: -14.875153541564941

Token 590: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 591: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10705513507127762
    2. '       ' → logprob: -2.482055187225342
    3. '   ' → logprob: -4.232055187225342
    4. ' else' → logprob: -5.732055187225342
    5. '<|end|>' → logprob: -9.232054710388184
    6. '	else' → logprob: -9.857054710388184
    7. ' ' → logprob: -11.732054710388184
    8. 'elif' → logprob: -11.857054710388184
    9. '```' → logprob: -11.982054710388184
    10. '    ' → logprob: -12.607054710388184

Token 592: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20211774110794067
    2. ':
' → logprob: -1.702117681503296
    3. '           ' → logprob: -7.577117919921875
    4. '       ' → logprob: -8.952117919921875
    5. '   ' → logprob: -9.827117919921875
    6. ' :
' → logprob: -12.577117919921875
    7. ' :' → logprob: -12.952117919921875
    8. ':
' → logprob: -13.827117919921875
    9. '          ' → logprob: -14.952117919921875
    10. '	   ' → logprob: -15.327117919921875

Token 593: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04521029442548752
    2. '           ' → logprob: -3.545210361480713
    3. ' print' → logprob: -4.920210361480713
    4. '   ' → logprob: -4.920210361480713
    5. '       ' → logprob: -7.420210361480713
    6. '	print' → logprob: -9.420209884643555
    7. '```' → logprob: -9.795209884643555
    8. ' ' → logprob: -12.545209884643555
    9. '	   ' → logprob: -13.295209884643555
    10. '
' → logprob: -13.795209884643555

Token 594: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.93710636976175e-05
    2. ' print' → logprob: -9.250099182128906
    3. '   ' → logprob: -12.875099182128906
    4. '           ' → logprob: -15.125099182128906
    5. '       ' → logprob: -16.125099182128906
    6. '```' → logprob: -16.125099182128906
    7. '	print' → logprob: -16.750099182128906
    8. 'pr' → logprob: -17.125099182128906
    9. '
' → logprob: -17.250099182128906
    10. '0' → logprob: -18.000099182128906

Token 595: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16024017333984375
    2. '(' → logprob: -1.9102401733398438
    3. '(float' → logprob: -12.535240173339844
    4. '1' → logprob: -12.660240173339844
    5. '('' → logprob: -12.910240173339844
    6. ' ' → logprob: -13.285240173339844
    7. '(
' → logprob: -13.410240173339844
    8. 'float' → logprob: -14.035240173339844
    9. ' (' → logprob: -14.535240173339844
    10. '()' → logprob: -14.660240173339844

Token 596: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.0339031834737398e-05
    2. '1' → logprob: -11.000020027160645
    3. 'float' → logprob: -13.125020027160645
    4. ' ' → logprob: -14.375020027160645
    5. '"' → logprob: -15.375020027160645
    6. '(' → logprob: -15.625020027160645
    7. '`' → logprob: -15.875020027160645
    8. '.' → logprob: -15.875020027160645
    9. '00' → logprob: -16.75002098083496
    10. 'f' → logprob: -16.75002098083496

Token 597: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47408756613731384
    2. '.' → logprob: -0.9740875959396362
    3. '0' → logprob: -11.974087715148926
    4. ' )' → logprob: -13.599087715148926
    5. '<|end|>' → logprob: -13.599087715148926
    6. ')
' → logprob: -14.099087715148926
    7. '.)' → logprob: -15.099087715148926
    8. '(' → logprob: -15.849087715148926
    9. ').' → logprob: -16.09908676147461
    10. '')' → logprob: -16.22408676147461

Token 598: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. 'float' → logprob: -20.5
    3. '00' → logprob: -20.625
    4. ')' → logprob: -21.25
    5. 'print' → logprob: -21.375
    6. '000' → logprob: -21.625
    7. '```' → logprob: -22.75
    8. '6' → logprob: -23.0
    9. '1' → logprob: -23.875
    10. '2' → logprob: -24.25

Token 599: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -12.875003814697266
    3. '<|end|>' → logprob: -14.500003814697266
    4. ' )' → logprob: -14.875003814697266
    5. '```' → logprob: -16.375003814697266
    6. '`)' → logprob: -16.625003814697266
    7. '
' → logprob: -17.125003814697266
    8. '())' → logprob: -17.250003814697266
    9. '))' → logprob: -17.250003814697266
    10. '")' → logprob: -17.875003814697266

Token 600: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2504183053970337
    2. '<|end|>' → logprob: -1.6254183053970337
    3. '```' → logprob: -4.000418186187744
    4. '#' → logprob: -6.125418186187744
    5. '
' → logprob: -6.500418186187744
    6. ':' → logprob: -7.000418186187744
    7. '<|end|>' → logprob: -7.625418186187744
    8. ']' → logprob: -8.125418663024902
    9. '[' → logprob: -8.375418663024902
    10. ' ' → logprob: -9.375418663024902

Token 601: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45044687390327454
    2. '<|end|>' → logprob: -1.0754468441009521
    3. '```' → logprob: -4.075447082519531
    4. '   ' → logprob: -6.825447082519531
    5. '<|end|>' → logprob: -7.325447082519531
    6. ']' → logprob: -7.325447082519531
    7. ':' → logprob: -7.700447082519531
    8. '}' → logprob: -8.075447082519531
    9. '[' → logprob: -8.450447082519531
    10. '#' → logprob: -8.575447082519531

Token 602: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00041005798266269267
    2. '("")' → logprob: -7.875410079956055
    3. '(' → logprob: -11.000410079956055
    4. '()
' → logprob: -12.250410079956055
    5. '('' → logprob: -12.375410079956055
    6. ' ()' → logprob: -13.625410079956055
    7. '<|end|>' → logprob: -14.000410079956055
    8. '()<' → logprob: -14.500410079956055
    9. '())' → logprob: -14.625410079956055
    10. '```' → logprob: -15.000410079956055


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 600
Tokens correctement prédits (1ère position, stricte): 261
Tokens correctement prédits (1ère position, avec adaptation): 295
Tokens correctement prédits (top 10): 541
Précision stricte (1ère position): 43.50%
Précision adaptée (1ère position): 49.17%
Précision (top 10): 90.17%
================================================================================
