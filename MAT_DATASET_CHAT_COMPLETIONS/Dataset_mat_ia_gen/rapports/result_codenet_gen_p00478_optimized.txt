================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:08:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input().strip()
N = int(input())
count = 0
for _ in range(N):
    ring = input().strip()
    doubled = ring + ring
    if s in doubled:
        count += 1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003697820007801056
    2. ''' → logprob: -6.003697872161865
    3. '()' → logprob: -8.128697395324707
    4. '('' → logprob: -8.128697395324707
    5. '"' → logprob: -8.503697395324707
    6. '`' → logprob: -8.878697395324707
    7. '(
' → logprob: -9.128697395324707
    8. '```' → logprob: -9.753697395324707
    9. ' (' → logprob: -10.628697395324707
    10. '("("' → logprob: -11.128697395324707

Token 4: 'strip' (ID: 23905)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.40290775895118713
    2. '.strip' → logprob: -1.9029077291488647
    3. '+' → logprob: -2.0279078483581543
    4. 'if' → logprob: -4.902907848358154
    5. '\n' → logprob: -4.902907848358154
    6. '.split' → logprob: -5.277907848358154
    7. '[' → logprob: -5.527907848358154
    8. '=' → logprob: -5.527907848358154
    9. '```' → logprob: -5.527907848358154
    10. '#' → logprob: -6.027907848358154

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18031395971775055
    2. '()' → logprob: -1.8053139448165894
    3. '(
' → logprob: -8.305314064025879
    4. '"' → logprob: -9.430314064025879
    5. ')' → logprob: -9.930314064025879
    6. '(

' → logprob: -9.930314064025879
    7. '```' → logprob: -11.055314064025879
    8. '`()' → logprob: -11.055314064025879
    9. '`' → logprob: -11.180314064025879
    10. '('' → logprob: -11.430314064025879

Token 6: 'N' (ID: 45)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004918262362480164
    2. 'i' → logprob: -6.754918098449707
    3. ' if' → logprob: -7.004918098449707
    4. 'print' → logprob: -7.004918098449707
    5. '+' → logprob: -7.504918098449707
    6. 'for' → logprob: -7.504918098449707
    7. '```' → logprob: -8.879918098449707
    8. '`' → logprob: -9.254918098449707
    9. '[' → logprob: -9.379918098449707
    10. '.' → logprob: -9.754918098449707

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3199654519557953
    2. ' =' → logprob: -2.069965362548828
    3. '_' → logprob: -3.069965362548828
    4. '.' → logprob: -3.569965362548828
    5. '-' → logprob: -4.444965362548828
    6. ')' → logprob: -4.569965362548828
    7. '[' → logprob: -4.694965362548828
    8. 'u' → logprob: -5.194965362548828
    9. ' ' → logprob: -5.319965362548828
    10. '>' → logprob: -5.444965362548828

Token 8: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38927119970321655
    2. ' int' → logprob: -1.1392712593078613
    3. 'len' → logprob: -6.764271259307861
    4. ' len' → logprob: -7.014271259307861
    5. ' ' → logprob: -8.514270782470703
    6. '0' → logprob: -10.139270782470703
    7. '10' → logprob: -10.264270782470703
    8. ' s' → logprob: -10.389270782470703
    9. 's' → logprob: -11.139270782470703
    10. '  ' → logprob: -12.264270782470703

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4751529395580292
    2. '(s' → logprob: -0.9751529693603516
    3. '(input' → logprob: -7.350152969360352
    4. '('' → logprob: -8.225152969360352
    5. '(`' → logprob: -9.725152969360352
    6. 's' → logprob: -9.850152969360352
    7. '()' → logprob: -10.975152969360352
    8. '("' → logprob: -11.475152969360352
    9. '(len' → logprob: -12.475152969360352
    10. ' (' → logprob: -12.600152969360352

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4126545786857605
    2. ')' → logprob: -1.2876546382904053
    3. '()' → logprob: -2.7876546382904053
    4. '(' → logprob: -8.412654876708984
    5. '`)' → logprob: -8.787654876708984
    6. ' ())' → logprob: -9.787654876708984
    7. '')' → logprob: -10.037654876708984
    8. '('' → logprob: -10.537654876708984
    9. ' )' → logprob: -10.787654876708984
    10. '().' → logprob: -10.787654876708984

Token 11: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013604721985757351
    2. 'result' → logprob: -4.888604640960693
    3. 'f' → logprob: -5.888604640960693
    4. 'r' → logprob: -7.013604640960693
    5. 'a' → logprob: -7.138604640960693
    6. 'p' → logprob: -8.138605117797852
    7. 's' → logprob: -8.138605117797852
    8. 'd' → logprob: -8.388605117797852
    9. 'i' → logprob: -9.263605117797852
    10. 'c' → logprob: -9.388605117797852

Token 12: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28757864236831665
    2. 's' → logprob: -1.9125785827636719
    3. '_' → logprob: -2.287578582763672
    4. '(s' → logprob: -7.787578582763672
    5. '_s' → logprob: -9.537578582763672
    6. '[' → logprob: -9.662578582763672
    7. ')' → logprob: -9.912578582763672
    8. '=' → logprob: -10.162578582763672
    9. '()' → logprob: -11.912578582763672
    10. '('' → logprob: -11.912578582763672

Token 13: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04895034432411194
    2. ' ' → logprob: -3.048950433731079
    3. '{}' → logprob: -8.2989501953125
    4. ' {}' → logprob: -10.0489501953125
    5. 's' → logprob: -10.1739501953125
    6. ' s' → logprob: -10.7989501953125
    7. '{' → logprob: -11.6739501953125
    8. ' {' → logprob: -14.1739501953125
    9. '[' → logprob: -14.2989501953125
    10. '  ' → logprob: -14.7989501953125

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10172832757234573
    2. '{}' → logprob: -2.3517284393310547
    3. '{' → logprob: -6.851728439331055
    4. 's' → logprob: -7.976728439331055
    5. '{})' → logprob: -10.351728439331055
    6. ' {}' → logprob: -10.476728439331055
    7. '{s' → logprob: -10.726728439331055
    8. ' ' → logprob: -10.851728439331055
    9. 'dict' → logprob: -12.976728439331055
    10. '{}
' → logprob: -13.226728439331055

Token 15: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21040765941143036
    2. ' for' → logprob: -2.2104077339172363
    3. '<|end|>' → logprob: -3.2104077339172363
    4. '
' → logprob: -4.210407733917236
    5. '\n' → logprob: -4.585407733917236
    6. '' → logprob: -5.710407733917236
    7. '\' → logprob: -5.960407733917236
    8. '```' → logprob: -6.085407733917236
    9. ' ' → logprob: -6.585407733917236
    10. 'i' → logprob: -6.835407733917236

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002851729223039001
    2. ' for' → logprob: -9.125285148620605
    3. '
' → logprob: -9.625285148620605
    4. '```' → logprob: -9.750285148620605
    5. 'f' → logprob: -10.750285148620605
    6. '\n' → logprob: -11.500285148620605
    7. 'i' → logprob: -11.750285148620605
    8. '' → logprob: -12.125285148620605
    9. '\' → logprob: -13.500285148620605
    10. '`' → logprob: -13.750285148620605

Token 17: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005104968324303627
    2. '  ' → logprob: -6.005105018615723
    3. ' s' → logprob: -6.505105018615723
    4. ' i' → logprob: -7.005105018615723
    5. 's' → logprob: -8.880105018615723
    6. 'i' → logprob: -10.005105018615723
    7. '_' → logprob: -11.255105018615723
    8. ' ‌' → logprob: -12.505105018615723
    9. 'token' → logprob: -12.880105018615723
    10. ' token' → logprob: -12.880105018615723

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01828947477042675
    2. 'in' → logprob: -4.143289566040039
    3. ' ' → logprob: -6.143289566040039
    4. 's' → logprob: -10.768289566040039
    5. 'range' → logprob: -11.393289566040039
    6. ',' → logprob: -11.518289566040039
    7. '  ' → logprob: -11.518289566040039
    8. 'n' → logprob: -11.768289566040039
    9. ' s' → logprob: -11.768289566040039
    10. ' i' → logprob: -11.768289566040039

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22720299661159515
    2. 'range' → logprob: -1.6022030115127563
    3. ' s' → logprob: -6.852202892303467
    4. 's' → logprob: -7.227202892303467
    5. '(range' → logprob: -13.102203369140625
    6. '	range' → logprob: -14.102203369140625
    7. ' ' → logprob: -14.727203369140625
    8. ' xrange' → logprob: -14.852203369140625
    9. '_range' → logprob: -15.102203369140625
    10. '```' → logprob: -15.477203369140625

Token 20: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04023616388440132
    2. ' (' → logprob: -3.915236234664917
    3. '(N' → logprob: -4.040235996246338
    4. '(range' → logprob: -7.040235996246338
    5. '(n' → logprob: -7.790235996246338
    6. '(s' → logprob: -8.040236473083496
    7. '(count' → logprob: -9.415236473083496
    8. ' range' → logprob: -9.540236473083496
    9. '(len' → logprob: -9.790236473083496
    10. ' N' → logprob: -10.165236473083496

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14352139830589294
    2. ')' → logprob: -2.018521308898926
    3. ':' → logprob: -7.768521308898926
    4. '):
' → logprob: -8.643521308898926
    5. ' ):' → logprob: -8.768521308898926
    6. ' )' → logprob: -9.768521308898926
    7. ' ' → logprob: -11.893521308898926
    8. '+' → logprob: -12.643521308898926
    9. ',' → logprob: -13.018521308898926
    10. '   ' → logprob: -13.143521308898926

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07670237869024277
    2. ' s' → logprob: -2.826702356338501
    3. '    
' → logprob: -4.82670259475708
    4. 's' → logprob: -6.45170259475708
    5. '    ' → logprob: -6.70170259475708
    6. ' 
' → logprob: -6.82670259475708
    7. '```' → logprob: -7.32670259475708
    8. '     
' → logprob: -7.95170259475708
    9. ' input' → logprob: -7.95170259475708
    10. ' ' → logprob: -8.326702117919922

Token 23: ' ring' (ID: 12796)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.3434554934501648
    2. 'word' → logprob: -1.7184555530548096
    3. 's' → logprob: -3.7184555530548096
    4. ' t' → logprob: -3.9684555530548096
    5. 't' → logprob: -4.3434553146362305
    6. ' s' → logprob: -4.5934553146362305
    7. '   ' → logprob: -4.7184553146362305
    8. ' w' → logprob: -5.2184553146362305
    9. 'substring' → logprob: -5.2184553146362305
    10. 'w' → logprob: -5.3434553146362305

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010579182766377926
    2. '_color' → logprob: -4.8855791091918945
    3. '=' → logprob: -6.3855791091918945
    4. 's' → logprob: -7.1355791091918945
    5. '_size' → logprob: -9.010579109191895
    6. '_str' → logprob: -9.385579109191895
    7. '_s' → logprob: -9.510579109191895
    8. '_name' → logprob: -9.635579109191895
    9. 'color' → logprob: -10.385579109191895
    10. ' ' → logprob: -10.510579109191895

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.225907564163208
    2. 'input' → logprob: -1.600907564163208
    3. ' int' → logprob: -8.600907325744629
    4. 'int' → logprob: -8.725907325744629
    5. ' s' → logprob: -9.600907325744629
    6. 's' → logprob: -9.975907325744629
    7. ' ' → logprob: -11.350907325744629
    8. '=input' → logprob: -11.725907325744629
    9. '   ' → logprob: -12.850907325744629
    10. '(input' → logprob: -13.100907325744629

Token 26: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023503318428993225
    2. '().' → logprob: -3.773503303527832
    3. '(' → logprob: -9.523503303527832
    4. '`()' → logprob: -9.773503303527832
    5. '()`' → logprob: -10.273503303527832
    6. '```' → logprob: -11.023503303527832
    7. '()>' → logprob: -11.273503303527832
    8. '())' → logprob: -11.398503303527832
    9. ' ()' → logprob: -11.648503303527832
    10. '()?>' → logprob: -11.648503303527832

Token 27: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.1318875446449965e-05
    2. 'rstrip' → logprob: -10.250041007995605
    3. 'split' → logprob: -12.250041007995605
    4. 'startswith' → logprob: -14.125041007995605
    5. 'lower' → logprob: -15.500041007995605
    6. 'replace' → logprob: -16.750041961669922
    7. ' strip' → logprob: -17.250041961669922
    8. 'str' → logprob: -17.625041961669922
    9. 'isdigit' → logprob: -18.125041961669922
    10. '_strip' → logprob: -18.625041961669922

Token 28: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002280980348587036
    2. '(' → logprob: -6.127281188964844
    3. '()`' → logprob: -10.377281188964844
    4. '().' → logprob: -11.502281188964844
    5. '())' → logprob: -11.752281188964844
    6. ')' → logprob: -12.002281188964844
    7. '`()' → logprob: -12.127281188964844
    8. ' ()' → logprob: -12.627281188964844
    9. '()>' → logprob: -12.627281188964844
    10. '()+' → logprob: -12.752281188964844

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017343513667583466
    2. ' if' → logprob: -5.017343521118164
    3. ' ' → logprob: -5.392343521118164
    4. '    ' → logprob: -6.267343521118164
    5. '<|end|>' → logprob: -6.392343521118164
    6. 'if' → logprob: -7.267343521118164
    7. '  ' → logprob: -8.017343521118164
    8. '    
' → logprob: -8.392343521118164
    9. ' 
' → logprob: -8.892343521118164
    10. '[' → logprob: -8.892343521118164

Token 30: ' doubled' (ID: 69040)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0987204760313034
    2. 'if' → logprob: -2.4737205505371094
    3. '   ' → logprob: -4.848720550537109
    4. ' for' → logprob: -7.723720550537109
    5. 'count' → logprob: -7.973720550537109
    6. 'for' → logprob: -8.72372055053711
    7. ' count' → logprob: -8.84872055053711
    8. ' ' → logprob: -8.84872055053711
    9. '    ' → logprob: -8.97372055053711
    10. '```' → logprob: -9.47372055053711

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5625554323196411
    2. '=' → logprob: -1.6875554323196411
    3. '_ring' → logprob: -1.6875554323196411
    4. 's' → logprob: -3.0625553131103516
    5. '_s' → logprob: -4.937555313110352
    6. 'ring' → logprob: -5.812555313110352
    7. '_string' → logprob: -6.687555313110352
    8. '_str' → logprob: -7.562555313110352
    9. '_r' → logprob: -7.812555313110352
    10. 'rings' → logprob: -7.937555313110352

Token 32: ' ring' (ID: 12796)
  Prédit: 'ring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ring' → logprob: -0.3880055248737335
    2. ' ring' → logprob: -1.1380054950714111
    3. 's' → logprob: -7.26300573348999
    4. ' s' → logprob: -9.138005256652832
    5. 'rings' → logprob: -9.388005256652832
    6. 'r' → logprob: -9.513005256652832
    7. ' rings' → logprob: -10.450505256652832
    8. ' r' → logprob: -10.763005256652832
    9. '-ring' → logprob: -10.763005256652832
    10. '   ' → logprob: -10.825505256652832

Token 33: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007343469187617302
    2. ' +' → logprob: -5.007343292236328
    3. '*' → logprob: -8.257343292236328
    4. '+r' → logprob: -8.382343292236328
    5. '+d' → logprob: -9.507343292236328
    6. '+s' → logprob: -10.257343292236328
    7. '+=' → logprob: -11.257343292236328
    8. ' *' → logprob: -12.132343292236328
    9. 'd' → logprob: -12.382343292236328
    10. '+D' → logprob: -14.132343292236328

Token 34: ' ring' (ID: 12796)
  Prédit: 'ring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ring' → logprob: -0.5759605169296265
    2. ' ring' → logprob: -0.8259605169296265
    3. 'r' → logprob: -12.200960159301758
    4. ':ring' → logprob: -12.325960159301758
    5. 'ringen' → logprob: -12.700960159301758
    6. 'rings' → logprob: -13.075960159301758
    7. 'ringer' → logprob: -13.325960159301758
    8. ' rings' → logprob: -13.825960159301758
    9. '_ring' → logprob: -14.075960159301758
    10. ' r' → logprob: -14.200960159301758

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03758566826581955
    2. ' if' → logprob: -4.162585735321045
    3. '    
' → logprob: -5.287585735321045
    4. 'if' → logprob: -5.412585735321045
    5. '<|end|>' → logprob: -5.787585735321045
    6. ' ' → logprob: -6.037585735321045
    7. '    ' → logprob: -6.162585735321045
    8. '[' → logprob: -6.412585735321045
    9. '.' → logprob: -7.662585735321045
    10. '  ' → logprob: -8.162585258483887

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030440238770097494
    2. ' if' → logprob: -7.128044128417969
    3. '
' → logprob: -7.378044128417969
    4. '    
' → logprob: -7.878044128417969
    5. ' for' → logprob: -8.128044128417969
    6. '<|end|>' → logprob: -8.253044128417969
    7. 'if' → logprob: -8.378044128417969
    8. '```' → logprob: -8.753044128417969
    9. 'for' → logprob: -9.253044128417969
    10. '    ' → logprob: -10.003044128417969

Token 37: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.507110595703125
    2. 'if' (adapté à ' if') → logprob: -1.382110595703125
    3. ' for' → logprob: -2.632110595703125
    4. '   ' → logprob: -3.007110595703125
    5. 'for' → logprob: -3.757110595703125
    6. 'index' → logprob: -7.632110595703125
    7. '    
' → logprob: -8.507110595703125
    8. ' index' → logprob: -8.632110595703125
    9. ' s' → logprob: -8.757110595703125
    10. 'idx' → logprob: -8.882110595703125

Token 38: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1488119512796402
    2. ' ring' → logprob: -2.0238120555877686
    3. 's' → logprob: -5.2738118171691895
    4. 'ring' → logprob: -7.3988118171691895
    5. ' ' → logprob: -8.523812294006348
    6. ' '' → logprob: -9.148812294006348
    7. ' r' → logprob: -11.211312294006348
    8. ' "' → logprob: -11.836312294006348
    9. ' rings' → logprob: -12.086312294006348
    10. ' space' → logprob: -12.461312294006348

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002824016148224473
    2. 'in' → logprob: -5.877823829650879
    3. ' not' → logprob: -11.752823829650879
    4. ')' → logprob: -12.252823829650879
    5. ' ' → logprob: -12.752823829650879
    6. '	in' → logprob: -14.252823829650879
    7. 'n' → logprob: -14.502823829650879
    8. '  ' → logprob: -14.627823829650879
    9. 's' → logprob: -15.252823829650879
    10. ' i' → logprob: -15.377823829650879

Token 40: ' doubled' (ID: 69040)
  Prédit: ' doubled'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doubled' → logprob: -0.007642713375389576
    2. 'd' → logprob: -4.88264274597168
    3. ' d' → logprob: -11.13264274597168
    4. ' doubles' → logprob: -11.75764274597168
    5. ' doubl' → logprob: -12.38264274597168
    6. ' ' → logprob: -12.88264274597168
    7. ' double' → logprob: -13.13264274597168
    8. ' doub' → logprob: -13.25764274597168
    9. ' ' → logprob: -14.38264274597168
    10. '_d' → logprob: -14.75764274597168

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022034443099983037
    2. '):' → logprob: -8.75022029876709
    3. ':
' → logprob: -10.37522029876709
    4. '       ' → logprob: -11.50022029876709
    5. '   ' → logprob: -11.87522029876709
    6. ' :' → logprob: -12.25022029876709
    7. ' and' → logprob: -13.37522029876709
    8. ':**' → logprob: -13.37522029876709
    9. '():' → logprob: -13.62522029876709
    10. '[:' → logprob: -13.87522029876709

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013250234769657254
    2. ':' → logprob: -9.37513256072998
    3. '   ' → logprob: -10.37513256072998
    4. ':
' → logprob: -12.12513256072998
    5. 'count' → logprob: -13.25013256072998
    6. '     ' → logprob: -13.37513256072998
    7. '           ' → logprob: -13.62513256072998
    8. ' :' → logprob: -13.87513256072998
    9. '```' → logprob: -14.12513256072998
    10. '      ' → logprob: -14.37513256072998

Token 43: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09894854575395584
    2. 'count' (adapté à ' count') → logprob: -2.9739484786987305
    3. '   ' → logprob: -3.2239484786987305
    4. ' count' → logprob: -5.7239484786987305
    5. '     ' → logprob: -10.97394847869873
    6. '```' → logprob: -12.09894847869873
    7. '	count' → logprob: -12.09894847869873
    8. '           ' → logprob: -12.22394847869873
    9. '    ' → logprob: -12.72394847869873
    10. '      ' → logprob: -12.84894847869873

Token 44: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20479659736156464
    2. '+=' → logprob: -1.704796552658081
    3. '+' → logprob: -5.70479679107666
    4. '=' → logprob: -10.45479679107666
    5. ' +' → logprob: -12.32979679107666
    6. ' ' → logprob: -12.45479679107666
    7. '++' → logprob: -13.07979679107666
    8. ']+=' → logprob: -13.32979679107666
    9. ' =' → logprob: -13.70479679107666
    10. ')' → logprob: -13.70479679107666

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007104054093360901
    2. ' ' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.500710487365723
    4. '```' → logprob: -18.750709533691406
    5. '+' → logprob: -18.938209533691406
    6. '       ' → logprob: -19.063209533691406
    7. '  ' → logprob: -19.188209533691406
    8. '    ' → logprob: -19.500709533691406
    9. '１' → logprob: -19.500709533691406
    10. '۱' → logprob: -19.625709533691406

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.0000057220459
    4. 's' → logprob: -18.0000057220459
    5. '```' → logprob: -18.5625057220459
    6. '2' → logprob: -18.6250057220459
    7. '0' → logprob: -18.7500057220459
    8. '+' → logprob: -18.8750057220459
    9. '１' → logprob: -19.4375057220459
    10. '`' → logprob: -19.5000057220459

Token 47: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07021595537662506
    2. '
' → logprob: -2.695215940475464
    3. '<|end|>' → logprob: -8.945216178894043
    4. ' print' → logprob: -9.445216178894043
    5. '
' → logprob: -10.945216178894043
    6. '  
' → logprob: -11.445216178894043
    7. '```' → logprob: -11.570216178894043
    8. ' 
' → logprob: -11.820216178894043
    9. '\n' → logprob: -11.945216178894043
    10. '    
' → logprob: -12.320216178894043

Token 48: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001882823125924915
    2. '
' → logprob: -8.625187873840332
    3. ' print' → logprob: -11.750187873840332
    4. '```' → logprob: -15.000187873840332
    5. ')' → logprob: -16.12518882751465
    6. '  
' → logprob: -16.25018882751465
    7. ')
' → logprob: -16.37518882751465
    8. ' 
' → logprob: -17.12518882751465
    9. '
' → logprob: -17.25018882751465
    10. '    
' → logprob: -17.50018882751465

Token 49: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07899951189756393
    2. '(count' → logprob: -2.5789995193481445
    3. '('' → logprob: -9.703999519348145
    4. '("("' → logprob: -10.703999519348145
    5. '(s' → logprob: -11.453999519348145
    6. '(f' → logprob: -12.078999519348145
    7. '(len' → logprob: -13.078999519348145
    8. '(`' → logprob: -13.078999519348145
    9. '((' → logprob: -13.328999519348145
    10. '()' → logprob: -14.203999519348145

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.750000953674316
    3. '))' → logprob: -15.875000953674316
    4. ')`' → logprob: -15.875000953674316
    5. '`)' → logprob: -17.125
    6. ')
' → logprob: -18.0
    7. ')**' → logprob: -18.5
    8. '#' → logprob: -18.625
    9. '）' → logprob: -18.75
    10. '')' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 48
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 41.67%
Précision adaptée (1ère position): 41.67%
Précision (top 10): 75.00%
================================================================================
