================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from collections import deque

def count_islands(grid):
    visited = [[False]*12 for _ in range(12)]
    directions = [(1,0),(-1,0),(0,1),(0,-1)]
    islands = 0
    for i in range(12):
        for j in range(12):
            if grid[i][j] == '1' and not visited[i][j]:
                islands += 1
                queue = deque([(i,j)])
                visited[i][j] = True
                while queue:
                    x,y = queue.popleft()
                    for dx,dy in directions:
                        nx,ny = x+dx,y+dy
                        if 0 <= nx < 12 and 0 <= ny < 12 and not visited[nx][ny] and grid[nx][ny] == '1':
                            visited[nx][ny] = True
                            queue.append((nx,ny))
    return islands

data = []
for line in stdin:
    l=line.strip()
    if l=='': 
        if data:
            print(count_islands(data))
            data=[]
    else:
        data.append(l)
if data:
    print(count_islands(data))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.14457781612873077
    2. ' argv' → logprob: -2.269577741622925
    3. 'exit' → logprob: -4.019577980041504
    4. ' exit' → logprob: -4.644577980041504
    5. 'stdout' → logprob: -6.269577980041504
    6. 'stdin' → logprob: -7.519577980041504
    7. 'import' → logprob: -7.894577980041504
    8. 'path' → logprob: -7.894577980041504
    9. 'stderr' → logprob: -9.019577980041504
    10. ' path' → logprob: -9.394577980041504

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10843159258365631
    2. '.readline' → logprob: -2.608431577682495
    3. '\n' → logprob: -3.983431577682495
    4. '.read' → logprob: -5.983431816101074
    5. 'import' → logprob: -6.233431816101074
    6. 'newline' → logprob: -6.233431816101074
    7. '```' → logprob: -6.858431816101074
    8. '\' → logprob: -7.233431816101074
    9. '
' → logprob: -7.483431816101074
    10. '' → logprob: -7.858431816101074

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08356041461229324
    2. '\n' → logprob: -3.4585604667663574
    3. '.readline' → logprob: -3.4585604667663574
    4. 'import' → logprob: -5.333560466766357
    5. '
' → logprob: -5.583560466766357
    6. 'newline' → logprob: -5.958560466766357
    7. 'for' → logprob: -6.458560466766357
    8. 'print' → logprob: -6.833560466766357
    9. '.read' → logprob: -7.708560466766357
    10. '```' → logprob: -7.708560466766357

Token 6: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.016691209748387337
    2. ' sys' → logprob: -4.641691207885742
    3. ' io' → logprob: -5.141691207885742
    4. 'os' → logprob: -7.891691207885742
    5. ' math' → logprob: -8.516691207885742
    6. ' typing' → logprob: -8.641691207885742
    7. ' stdout' → logprob: -9.766691207885742
    8. ' space' → logprob: -9.891691207885742
    9. ' itertools' → logprob: -9.891691207885742
    10. ' subprocess' → logprob: -10.266691207885742

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.48367738723754883
    2. 'import' → logprob: -0.9836773872375488
    3. '.' → logprob: -5.108677387237549
    4. ' ' → logprob: -6.358677387237549
    5. '```' → logprob: -7.233677387237549
    6. '<|end|>' → logprob: -7.233677387237549
    7. '.import' → logprob: -9.73367691040039
    8. '_import' → logprob: -10.48367691040039
    9. '	import' → logprob: -10.60867691040039
    10. ' defaultdict' → logprob: -10.60867691040039

Token 8: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.40674591064453125
    2. ' defaultdict' → logprob: -1.2817459106445312
    3. 'deque' → logprob: -3.1567459106445312
    4. ' abc' → logprob: -4.281745910644531
    5. 'abc' → logprob: -8.781745910644531
    6. ' named' → logprob: -10.406745910644531
    7. 'default' → logprob: -10.531745910644531
    8. ' collections' → logprob: -11.906745910644531
    9. ' import' → logprob: -12.156745910644531
    10. ' Counter' → logprob: -12.156745910644531

Token 9: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6245312094688416
    2. '\n' → logprob: -1.3745312690734863
    3. '```' → logprob: -2.4995312690734863
    4. '\' → logprob: -2.8745312690734863
    5. 'newline' → logprob: -3.8745312690734863
    6. '

' → logprob: -3.8745312690734863
    7. 'import' → logprob: -4.999531269073486
    8. 'for' → logprob: -5.374531269073486
    9. '
' → logprob: -5.499531269073486
    10. 'd' → logprob: -5.499531269073486

Token 10: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24254600703716278
    2. 'd' → logprob: -2.3675460815429688
    3. '```' → logprob: -3.7425460815429688
    4. 'for' → logprob: -3.8675460815429688
    5. 'queue' → logprob: -3.8675460815429688
    6. 'input' → logprob: -4.492546081542969
    7. 'deque' → logprob: -4.867546081542969
    8. 'q' → logprob: -4.992546081542969
    9. '`' → logprob: -5.117546081542969
    10. 'data' → logprob: -5.117546081542969

Token 11: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014846124686300755
    2. ' bfs' → logprob: -4.764846324920654
    3. ' process' → logprob: -5.764846324920654
    4. ' main' → logprob: -7.139846324920654
    5. ' read' → logprob: -7.514846324920654
    6. ' deque' → logprob: -8.264845848083496
    7. ' BFS' → logprob: -8.264845848083496
    8. '_' → logprob: -8.389845848083496
    9. ' solve' → logprob: -8.514845848083496
    10. ' ' → logprob: -9.014845848083496

Token 12: '_is' (ID: 15224)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39570605754852295
    2. '_words' → logprob: -1.520706057548523
    3. '_occ' → logprob: -3.7707061767578125
    4. '_tokens' → logprob: -3.8957061767578125
    5. '(' → logprob: -3.8957061767578125
    6. '_lines' → logprob: -5.5207061767578125
    7. '_neighbors' → logprob: -5.5207061767578125
    8. '_nodes' → logprob: -5.6457061767578125
    9. '_items' → logprob: -6.0207061767578125
    10. '_spaces' → logprob: -6.0207061767578125

Token 13: 'lands' (ID: 10186)
  Prédit: 'lands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lands' → logprob: -0.02092744968831539
    2. 'land' → logprob: -3.8959274291992188
    3. 's' → logprob: -9.145927429199219
    4. 'l' → logprob: -9.520927429199219
    5. '1' → logprob: -10.645927429199219
    6. 'al' → logprob: -10.895927429199219
    7. '_' → logprob: -11.145927429199219
    8. '```' → logprob: -11.270927429199219
    9. 'landers' → logprob: -11.270927429199219
    10. '[' → logprob: -11.395927429199219

Token 14: '(grid' (ID: 51818)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000580792548134923
    2. '():' → logprob: -9.000580787658691
    3. '```' → logprob: -9.125580787658691
    4. '(user' → logprob: -9.750580787658691
    5. '_' → logprob: -9.750580787658691
    6. ' (' → logprob: -10.250580787658691
    7. '()' → logprob: -10.750580787658691
    8. '("("' → logprob: -11.000580787658691
    9. '(data' → logprob: -11.250580787658691
    10. '('' → logprob: -11.625580787658691

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036453302018344402
    2. ',' → logprob: -6.253645420074463
    3. ')' → logprob: -7.003645420074463
    4. '[' → logprob: -7.878645420074463
    5. '[]):' → logprob: -8.378644943237305
    6. '):
' → logprob: -9.378644943237305
    7. ':' → logprob: -10.378644943237305
    8. ' ):' → logprob: -11.128644943237305
    9. ']:' → logprob: -11.628644943237305
    10. '   ' → logprob: -11.628644943237305

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11824458837509155
    2. '   ' → logprob: -2.3682446479797363
    3. ':
' → logprob: -5.243244647979736
    4. '```' → logprob: -5.868244647979736
    5. '():' → logprob: -6.118244647979736
    6. '    
' → logprob: -6.743244647979736
    7. '[' → logprob: -6.993244647979736
    8. '(' → logprob: -7.118244647979736
    9. '[]' → logprob: -7.118244647979736
    10. '[
' → logprob: -7.743244647979736

Token 17: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1637100875377655
    2. '    ' → logprob: -3.038710117340088
    3. ' 
' → logprob: -3.788710117340088
    4. '\' → logprob: -4.163710117340088
    5. '\n' → logprob: -4.288710117340088
    6. '    
' → logprob: -4.663710117340088
    7. ' ' → logprob: -4.913710117340088
    8. ' n' → logprob: -5.038710117340088
    9. 'n' → logprob: -5.163710117340088
    10. ' rows' → logprob: -5.413710117340088

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046557108871638775
    2. '=' → logprob: -5.379655838012695
    3. '[' → logprob: -11.129655838012695
    4. '.add' → logprob: -11.629655838012695
    5. '=set' → logprob: -12.254655838012695
    6. ' ' → logprob: -12.379655838012695
    7. '  ' → logprob: -14.754655838012695
    8. 'add' → logprob: -15.129655838012695
    9. ')' → logprob: -15.254655838012695
    10. ' =
' → logprob: -15.379655838012695

Token 19: ' [[' (ID: 9237)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.3169107437133789
    2. 'set' → logprob: -1.316910743713379
    3. ' [[' → logprob: -5.816910743713379
    4. '[[' → logprob: -7.566910743713379
    5. ' ' → logprob: -9.191910743713379
    6. ' [' → logprob: -10.941910743713379
    7. '[' → logprob: -11.566910743713379
    8. '	set' → logprob: -11.941910743713379
    9. '=set' → logprob: -12.816910743713379
    10. '   ' → logprob: -12.816910743713379

Token 20: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.014163747429847717
    2. ' False' → logprob: -4.264163970947266
    3. '0' → logprob: -15.264163970947266
    4. '   ' → logprob: -17.264163970947266
    5. '(False' → logprob: -18.264163970947266
    6. '=False' → logprob: -20.764163970947266
    7. '    ' → logprob: -20.889163970947266
    8. '.False' → logprob: -21.764163970947266
    9. ' ' → logprob: -22.764163970947266
    10. '       ' → logprob: -22.889163970947266

Token 21: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7074397802352905
    2. ' for' → logprob: -0.7074397802352905
    3. ' ]' → logprob: -4.58243989944458
    4. 'for' → logprob: -6.45743989944458
    5. '[' → logprob: -6.70743989944458
    6. ']*' → logprob: -7.45743989944458
    7. '   ' → logprob: -9.082439422607422
    8. '[]' → logprob: -9.332439422607422
    9. '][' → logprob: -9.582439422607422
    10. ' ' → logprob: -9.707439422607422

Token 22: '12' (ID: 899)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.060365608893335e-05
    2. ' len' → logprob: -10.500041007995605
    3. '(len' → logprob: -11.250041007995605
    4. '   ' → logprob: -16.75004005432129
    5. 'm' → logprob: -19.62504005432129
    6. '[len' → logprob: -19.75004005432129
    7. '	len' → logprob: -19.75004005432129
    8. '(' → logprob: -20.50004005432129
    9. '=len' → logprob: -20.75004005432129
    10. ' ' → logprob: -20.75004005432129

Token 23: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011612414382398129
    2. 'for' → logprob: -4.511612415313721
    3. ')' → logprob: -7.886612415313721
    4. ' ' → logprob: -9.636611938476562
    5. ']' → logprob: -9.761611938476562
    6. ' ]' → logprob: -10.511611938476562
    7. ' )' → logprob: -11.386611938476562
    8. '	for' → logprob: -12.261611938476562
    9. '12' → logprob: -12.511611938476562
    10. '   ' → logprob: -12.636611938476562

Token 24: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.002092803595587611
    2. '_' → logprob: -6.2520928382873535
    3. ' ' → logprob: -9.252092361450195
    4. ' range' → logprob: -10.252092361450195
    5. ' row' → logprob: -11.002092361450195
    6. ' i' → logprob: -11.877092361450195
    7. ' in' → logprob: -12.502092361450195
    8. '<|end|>' → logprob: -13.752092361450195
    9. '<|end|>' → logprob: -13.877092361450195
    10. '_range' → logprob: -14.377092361450195

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4199746549129486
    2. 'range' → logprob: -1.669974684715271
    3. ' range' → logprob: -1.919974684715271
    4. 'in' → logprob: -4.9199748039245605
    5. 'row' → logprob: -7.7949748039245605
    6. ' ' → logprob: -8.794974327087402
    7. ' row' → logprob: -9.294974327087402
    8. ' xrange' → logprob: -9.669974327087402
    9. 'grid' → logprob: -10.919974327087402
    10. ' _' → logprob: -11.294974327087402

Token 26: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007113590254448354
    2. ' range' → logprob: -7.250711441040039
    3. 'grid' → logprob: -13.500711441040039
    4. 'row' → logprob: -16.87571144104004
    5. '[' → logprob: -18.00071144104004
    6. '(range' → logprob: -18.75071144104004
    7. '	range' → logprob: -19.75071144104004
    8. '   ' → logprob: -20.00071144104004
    9. '```' → logprob: -20.00071144104004
    10. ' ' → logprob: -20.25071144104004

Token 27: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16025276482105255
    2. '(len' → logprob: -1.9102528095245361
    3. '12' → logprob: -10.910252571105957
    4. 'len' → logprob: -12.285252571105957
    5. ' (' → logprob: -13.035252571105957
    6. '(rows' → logprob: -14.285252571105957
    7. '((' → logprob: -14.410252571105957
    8. '(n' → logprob: -14.785252571105957
    9. ' ' → logprob: -15.285252571105957
    10. '(row' → logprob: -15.410252571105957

Token 28: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.004329472314566374
    2. '10' → logprob: -5.879329681396484
    3. '6' → logprob: -7.254329681396484
    4. '8' → logprob: -7.754329681396484
    5. ' ' → logprob: -9.254329681396484
    6. '9' → logprob: -9.754329681396484
    7. 'len' → logprob: -9.754329681396484
    8. '5' → logprob: -9.879329681396484
    9. '4' → logprob: -10.754329681396484
    10. '20' → logprob: -11.004329681396484

Token 29: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00020091790065634996
    2. ']' → logprob: -8.875201225280762
    3. ')' → logprob: -10.375201225280762
    4. '])]' → logprob: -11.875201225280762
    5. ')])' → logprob: -12.000201225280762
    6. ')]
' → logprob: -12.125201225280762
    7. ' )' → logprob: -12.500201225280762
    8. '   ' → logprob: -13.500201225280762
    9. '])' → logprob: -13.750201225280762
    10. '')]' → logprob: -14.125201225280762

Token 30: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47588807344436646
    2. '   ' → logprob: -1.1008880138397217
    3. '    
' → logprob: -4.350888252258301
    4. '' → logprob: -4.475888252258301
    5. '\n' → logprob: -5.475888252258301
    6. ' 
' → logprob: -5.975888252258301
    7. '\' → logprob: -6.100888252258301
    8. '  
' → logprob: -6.225888252258301
    9. 'def' → logprob: -6.475888252258301
    10. 'newline' → logprob: -6.475888252258301

Token 31: ' directions' (ID: 24921)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4385318160057068
    2. '   ' → logprob: -2.1885318756103516
    3. '\n' → logprob: -2.9385318756103516
    4. '<|end|>' → logprob: -3.0635318756103516
    5. ' 
' → logprob: -3.1885318756103516
    6. ' ' → logprob: -3.8135318756103516
    7. 'newline' → logprob: -3.8135318756103516
    8. '    
' → logprob: -4.688531875610352
    9. 'def' → logprob: -4.813531875610352
    10. '  
' → logprob: -4.813531875610352

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -4.668304245569743e-05
    2. '=' → logprob: -10.000046730041504
    3. ' =[' → logprob: -13.875046730041504
    4. ' ' → logprob: -15.625046730041504
    5. ' =
' → logprob: -17.250045776367188
    6. '   ' → logprob: -17.625045776367188
    7. '[' → logprob: -17.625045776367188
    8. ')' → logprob: -18.125045776367188
    9. '=[' → logprob: -18.375045776367188
    10. '=['' → logprob: -18.375045776367188

Token 33: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.11062253266572952
    2. '[(' → logprob: -2.3606226444244385
    3. ' [' → logprob: -4.735622406005859
    4. '[' → logprob: -6.485622406005859
    5. ' ' → logprob: -10.36062240600586
    6. '[((' → logprob: -11.36062240600586
    7. ' [
' → logprob: -11.73562240600586
    8. '[
' → logprob: -12.48562240600586
    9. ' [[' → logprob: -13.61062240600586
    10. '   ' → logprob: -14.23562240600586

Token 34: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.021171405911445618
    2. '0' → logprob: -4.021171569824219
    3. '1' → logprob: -5.896171569824219
    4. '(-' → logprob: -8.521171569824219
    5. '(' → logprob: -9.771171569824219
    6. ' -' → logprob: -11.896171569824219
    7. ' ' → logprob: -12.646171569824219
    8. '−' → logprob: -15.521171569824219
    9. '[-' → logprob: -16.14617156982422
    10. ')' → logprob: -16.14617156982422

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007843759376555681
    2. ' ,' → logprob: -7.625784397125244
    3. '0' → logprob: -8.125783920288086
    4. ' ' → logprob: -15.125783920288086
    5. '```' → logprob: -16.500783920288086
    6. ')' → logprob: -17.000783920288086
    7. ',)' → logprob: -17.000783920288086
    8. '<|end|>' → logprob: -17.750783920288086
    9. '),' → logprob: -18.125783920288086
    10. ',),' → logprob: -18.375783920288086

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -16.126325607299805
    4. '  ' → logprob: -17.876325607299805
    5. '-' → logprob: -19.251325607299805
    6. '1' → logprob: -19.501325607299805
    7. '    ' → logprob: -19.626325607299805
    8. ' ' → logprob: -20.001325607299805
    9. '	' → logprob: -20.251325607299805
    10. '۰' → logprob: -20.376325607299805

Token 37: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0012499965960159898
    2. '),(' → logprob: -7.00124979019165
    3. ' ),' → logprob: -8.001250267028809
    4. ')' → logprob: -12.876250267028809
    5. '),
' → logprob: -14.626250267028809
    6. ',),' → logprob: -15.251250267028809
    7. ',' → logprob: -17.126249313354492
    8. ' ' → logprob: -17.251249313354492
    9. '],' → logprob: -17.251249313354492
    10. ''),' → logprob: -17.501249313354492

Token 38: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.17414121329784393
    2. ' (-' → logprob: -2.1741411685943604
    3. '(' → logprob: -3.1741411685943604
    4. '-' → logprob: -6.0491414070129395
    5. '0' → logprob: -6.9241414070129395
    6. ' (' → logprob: -7.1741414070129395
    7. ' -' → logprob: -9.049140930175781
    8. ' ' → logprob: -10.049140930175781
    9. '   ' → logprob: -11.424140930175781
    10. '  ' → logprob: -13.549140930175781

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -16.0625
    3. '0' → logprob: -16.4375
    4. '```' → logprob: -16.75
    5. '2' → logprob: -17.5625
    6. '۱' → logprob: -17.9375
    7. '১' → logprob: -18.0625
    8. '１' → logprob: -18.0625
    9. '

' → logprob: -18.125
    10. '१' → logprob: -18.125

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006055947858840227
    2. '0' → logprob: -5.13105583190918
    3. ' ,' → logprob: -9.00605583190918
    4. ' ' → logprob: -12.88105583190918
    5. '<|end|>' → logprob: -14.13105583190918
    6. '1' → logprob: -14.50605583190918
    7. '```' → logprob: -14.88105583190918
    8. '   ' → logprob: -15.50605583190918
    9. ')' → logprob: -16.63105583190918
    10. '  ' → logprob: -17.38105583190918

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -19.000015258789062
    4. '   ' → logprob: -20.000015258789062
    5. '1' → logprob: -20.125015258789062
    6. '```' → logprob: -20.625015258789062
    7. '０' → logprob: -21.187515258789062
    8. '    ' → logprob: -21.187515258789062
    9. '  ' → logprob: -21.312515258789062
    10. ')' → logprob: -22.187515258789062

Token 42: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.014222390949726105
    2. '),' → logprob: -4.264222621917725
    3. ' ),' → logprob: -10.639222145080566
    4. ')' → logprob: -10.889222145080566
    5. ',(' → logprob: -12.139222145080566
    6. ',' → logprob: -12.389222145080566
    7. '(' → logprob: -12.889222145080566
    8. ')]' → logprob: -13.264222145080566
    9. ' ' → logprob: -14.514222145080566
    10. '),
' → logprob: -14.514222145080566

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020568605395965278
    2. '1' → logprob: -8.625205993652344
    3. ' ' → logprob: -10.625205993652344
    4. '   ' → logprob: -14.000205993652344
    5. '```' → logprob: -15.000205993652344
    6. '

' → logprob: -16.125205993652344
    7. '
' → logprob: -16.250205993652344
    8. '``' → logprob: -16.312705993652344
    9. ')' → logprob: -16.500205993652344
    10. '    ' → logprob: -16.500205993652344

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006384541047737002
    2. '1' → logprob: -7.375638484954834
    3. ' ,' → logprob: -11.625638008117676
    4. ',-' → logprob: -13.125638008117676
    5. ' ' → logprob: -14.750638008117676
    6. '-' → logprob: -15.500638008117676
    7. ')' → logprob: -16.625638961791992
    8. '```' → logprob: -16.625638961791992
    9. '   ' → logprob: -16.875638961791992
    10. '),' → logprob: -17.063138961791992

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6060808522743173e-05
    2. '-' → logprob: -10.875025749206543
    3. ' ' → logprob: -11.875025749206543
    4. '```' → logprob: -17.00002670288086
    5. '   ' → logprob: -17.25002670288086
    6. ' -' → logprob: -18.31252670288086
    7. ')' → logprob: -18.43752670288086
    8. '+' → logprob: -18.56252670288086
    9. '  ' → logprob: -19.06252670288086
    10. '2' → logprob: -19.62502670288086

Token 46: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.038112182170152664
    2. '),' → logprob: -3.288112163543701
    3. ')]' → logprob: -9.66311264038086
    4. ')' → logprob: -12.53811264038086
    5. ' ),' → logprob: -12.78811264038086
    6. '(' → logprob: -15.41311264038086
    7. '),
' → logprob: -16.28811264038086
    8. ',' → logprob: -16.28811264038086
    9. ',(' → logprob: -16.28811264038086
    10. ' ' → logprob: -17.03811264038086

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861528143286705
    2. '-' → logprob: -4.758615493774414
    3. ' ' → logprob: -15.133615493774414
    4. ' -' → logprob: -15.633615493774414
    5. '```' → logprob: -16.258615493774414
    6. ',' → logprob: -16.758615493774414
    7. '−' → logprob: -17.383615493774414
    8. '   ' → logprob: -17.633615493774414
    9. '
' → logprob: -18.071115493774414
    10. '۰' → logprob: -18.133615493774414

Token 48: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.10020947456359863
    2. ',' → logprob: -2.3502094745635986
    3. ' ,-' → logprob: -13.72520923614502
    4. ',(' → logprob: -14.22520923614502
    5. ',)' → logprob: -15.22520923614502
    6. ',-

' → logprob: -15.72520923614502
    7. ' ,' → logprob: -15.72520923614502
    8. ',+' → logprob: -16.100210189819336
    9. ',--' → logprob: -16.100210189819336
    10. ',None' → logprob: -16.225210189819336

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. '0' → logprob: -12.625005722045898
    3. ')' → logprob: -13.875005722045898
    4. '```' → logprob: -14.250005722045898
    5. ')]' → logprob: -14.375005722045898
    6. ' ' → logprob: -15.000005722045898
    7. '   ' → logprob: -16.8750057220459
    8. ']' → logprob: -18.8750057220459
    9. '-' → logprob: -18.8750057220459
    10. ')])' → logprob: -19.1875057220459

Token 50: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007339857402257621
    2. ')' → logprob: -7.750733852386475
    3. '),' → logprob: -8.625734329223633
    4. ')])' → logprob: -9.250734329223633
    5. ']' → logprob: -12.000734329223633
    6. '),(' → logprob: -12.250734329223633
    7. '])]' → logprob: -12.250734329223633
    8. ' )' → logprob: -12.250734329223633
    9. '))' → logprob: -13.500734329223633
    10. '')]' → logprob: -13.500734329223633

Token 51: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1961902230978012
    2. '   ' → logprob: -2.321190118789673
    3. '<|end|>' → logprob: -2.821190118789673
    4. '    
' → logprob: -4.571190357208252
    5. ' 
' → logprob: -5.821190357208252
    6. '  
' → logprob: -6.821190357208252
    7. '' → logprob: -6.946190357208252
    8. '\n' → logprob: -7.071190357208252
    9. ' ' → logprob: -7.321190357208252
    10. 'n' → logprob: -7.321190357208252

Token 52: ' islands' (ID: 45758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2690006494522095
    2. '
' → logprob: -1.6440006494522095
    3. 'n' → logprob: -2.01900053024292
    4. 'for' → logprob: -2.26900053024292
    5. ' for' → logprob: -2.26900053024292
    6. ' ' → logprob: -3.01900053024292
    7. '\' → logprob: -3.01900053024292
    8. ' 
' → logprob: -3.39400053024292
    9. '\n' → logprob: -3.89400053024292
    10. '    
' → logprob: -4.51900053024292

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07340636849403381
    2. '=' → logprob: -2.698406457901001
    3. '_' → logprob: -6.323406219482422
    4. '_count' → logprob: -6.823406219482422
    5. ' ' → logprob: -8.073406219482422
    6. ' +=' → logprob: -8.698406219482422
    7. 's' → logprob: -10.073406219482422
    8. ' =
' → logprob: -11.323406219482422
    9. '_space' → logprob: -11.573406219482422
    10. 'count' → logprob: -12.323406219482422

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20141470432281494
    2. '0' → logprob: -1.701414704322815
    3. ' []' → logprob: -14.076415061950684
    4. ' ' → logprob: -14.701415061950684
    5. '[]' → logprob: -16.076414108276367
    6. ' set' → logprob: -17.201414108276367
    7. '1' → logprob: -17.451414108276367
    8. '<|end|>' → logprob: -17.701414108276367
    9. 'set' → logprob: -17.951414108276367
    10. '۰' → logprob: -18.076414108276367

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.228561349213123e-05
    2. ' ' → logprob: -10.125052452087402
    3. 'deque' → logprob: -12.000052452087402
    4. '[]' → logprob: -12.125052452087402
    5. 'set' → logprob: -14.750052452087402
    6. ' []' → logprob: -17.125051498413086
    7. '[]
' → logprob: -17.375051498413086
    8. '   ' → logprob: -17.750051498413086
    9. '{}' → logprob: -17.750051498413086
    10. ' deque' → logprob: -18.062551498413086

Token 56: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7340160012245178
    2. '
' → logprob: -0.8590160012245178
    3. 'for' → logprob: -3.359015941619873
    4. ' for' → logprob: -3.859015941619873
    5. '\n' → logprob: -4.234015941619873
    6. '<|end|>' → logprob: -4.484015941619873
    7. '    
' → logprob: -5.109015941619873
    8. '  
' → logprob: -5.984015941619873
    9. 'newline' → logprob: -6.984015941619873
    10. '\' → logprob: -7.109015941619873

Token 57: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7338041663169861
    2. '   ' → logprob: -1.7338042259216309
    3. '\n' → logprob: -2.608804225921631
    4. ' for' → logprob: -2.983804225921631
    5. ' 
' → logprob: -3.233804225921631
    6. '  
' → logprob: -3.358804225921631
    7. 'for' → logprob: -3.608804225921631
    8. '' → logprob: -3.733804225921631
    9. '\' → logprob: -3.733804225921631
    10. '<|end|>' → logprob: -3.983804225921631

Token 58: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3430956304073334
    2. 'for' (adapté à ' for') → logprob: -2.093095541000366
    3. '\n' → logprob: -2.718095541000366
    4. ' for' → logprob: -2.718095541000366
    5. '   ' → logprob: -4.343095779418945
    6. '\' → logprob: -4.468095779418945
    7. 'n' → logprob: -5.968095779418945
    8. '```' → logprob: -5.968095779418945
    9. '<|end|>' → logprob: -6.593095779418945
    10. '' → logprob: -6.843095779418945

Token 59: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01077295932918787
    2. 'i' → logprob: -4.885773181915283
    3. ' r' → logprob: -6.510773181915283
    4. ' row' → logprob: -7.135773181915283
    5. ' x' → logprob: -7.635773181915283
    6. ' y' → logprob: -8.260772705078125
    7. ' ' → logprob: -9.760772705078125
    8. 'r' → logprob: -10.635772705078125
    9. ' _' → logprob: -11.135772705078125
    10. 'row' → logprob: -11.135772705078125

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01257569994777441
    2. 'in' → logprob: -4.387575626373291
    3. ' ' → logprob: -9.76257610321045
    4. ',' → logprob: -12.88757610321045
    5. 'n' → logprob: -13.63757610321045
    6. ' ,' → logprob: -13.88757610321045
    7. '<|end|>' → logprob: -13.88757610321045
    8. '	in' → logprob: -14.38757610321045
    9. '0' → logprob: -14.63757610321045
    10. 'range' → logprob: -15.01257610321045

Token 61: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038042064756155014
    2. 'range' → logprob: -3.2880420684814453
    3. '	range' → logprob: -15.038042068481445
    4. '(range' → logprob: -15.538042068481445
    5. ' xrange' → logprob: -16.413042068481445
    6. '_range' → logprob: -17.538042068481445
    7. '.range' → logprob: -18.913042068481445
    8. ' ' → logprob: -19.413042068481445
    9. 'Range' → logprob: -19.538042068481445
    10. '```' → logprob: -19.538042068481445

Token 62: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00047988566802814603
    2. '(len' → logprob: -8.125479698181152
    3. ' (' → logprob: -8.625479698181152
    4. '(
' → logprob: -13.375479698181152
    5. '12' → logprob: -13.625479698181152
    6. ' ' → logprob: -13.625479698181152
    7. '(length' → logprob: -16.00048065185547
    8. '   ' → logprob: -16.50048065185547
    9. '(n' → logprob: -16.75048065185547
    10. '(size' → logprob: -16.87548065185547

Token 63: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.00010592726175673306
    2. ' ' → logprob: -9.250105857849121
    3. '   ' → logprob: -11.875105857849121
    4. '1' → logprob: -13.500105857849121
    5. 'len' → logprob: -14.625105857849121
    6. '0' → logprob: -14.875105857849121
    7. '```' → logprob: -15.375105857849121
    8. ')' → logprob: -16.000106811523438
    9. '2' → logprob: -17.062606811523438
    10. '  ' → logprob: -17.312606811523438

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003212805895600468
    2. ':' → logprob: -8.375321388244629
    3. ')' → logprob: -10.125321388244629
    4. '):
' → logprob: -10.375321388244629
    5. ' ):' → logprob: -11.250321388244629
    6. '   ' → logprob: -12.375321388244629
    7. ' ' → logprob: -14.125321388244629
    8. '}:' → logprob: -15.250321388244629
    9. '():' → logprob: -15.750321388244629
    10. '**' → logprob: -15.875321388244629

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2611423134803772
    2. '<|end|>' → logprob: -2.2611422538757324
    3. '   ' → logprob: -2.7611422538757324
    4. ':' → logprob: -3.3861422538757324
    5. '    ' → logprob: -3.7611422538757324
    6. ' ' → logprob: -6.636142253875732
    7. '<|end|>' → logprob: -6.636142253875732
    8. '    
' → logprob: -7.761142253875732
    9. '     ' → logprob: -7.761142253875732
    10. '```' → logprob: -8.26114273071289

Token 66: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10261088609695435
    2. 'for' (adapté à ' for') → logprob: -2.3526108264923096
    3. '       ' → logprob: -6.352611064910889
    4. '   ' → logprob: -7.852611064910889
    5. ' ' → logprob: -8.72761058807373
    6. '    ' → logprob: -9.60261058807373
    7. '	for' → logprob: -10.85261058807373
    8. '<|end|>' → logprob: -11.60261058807373
    9. '```' → logprob: -12.60261058807373
    10. '        ' → logprob: -13.60261058807373

Token 67: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.011106422170996666
    2. 'j' → logprob: -4.511106491088867
    3. ' range' → logprob: -10.386106491088867
    4. ' ' → logprob: -11.011106491088867
    5. 'range' → logprob: -11.636106491088867
    6. ' ' → logprob: -14.261106491088867
    7. '<|end|>' → logprob: -15.011106491088867
    8. '	j' → logprob: -15.136106491088867
    9. '```' → logprob: -15.386106491088867
    10. '  ' → logprob: -16.136106491088867

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04316166788339615
    2. 'in' → logprob: -3.168161630630493
    3. ' ' → logprob: -9.418161392211914
    4. '<|end|>' → logprob: -9.543161392211914
    5. '```' → logprob: -12.918161392211914
    6. '	in' → logprob: -13.418161392211914
    7. '    ' → logprob: -13.918161392211914
    8. 'In' → logprob: -14.293161392211914
    9. '  ' → logprob: -14.418161392211914
    10. '<|end|>' → logprob: -14.543161392211914

Token 69: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012751545757055283
    2. ' range' → logprob: -4.512751579284668
    3. '(' → logprob: -6.512751579284668
    4. '12' → logprob: -8.512751579284668
    5. '(range' → logprob: -11.012751579284668
    6. '   ' → logprob: -16.13775062561035
    7. '	range' → logprob: -16.13775062561035
    8. ' ' → logprob: -16.26275062561035
    9. ' (' → logprob: -16.63775062561035
    10. '[' → logprob: -16.88775062561035

Token 70: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013266648165881634
    2. ' (' → logprob: -6.626326560974121
    3. '(range' → logprob: -14.376326560974121
    4. ' range' → logprob: -16.126327514648438
    5. '(
' → logprob: -17.751327514648438
    6. 'range' → logprob: -17.876327514648438
    7. ' in' → logprob: -18.001327514648438
    8. ' ' → logprob: -18.626327514648438
    9. '<|end|>' → logprob: -18.626327514648438
    10. '((' → logprob: -18.626327514648438

Token 71: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -5.0259150157216936e-05
    2. ' ' → logprob: -10.37505054473877
    3. '   ' → logprob: -11.37505054473877
    4. '           ' → logprob: -13.25005054473877
    5. '0' → logprob: -13.37505054473877
    6. ')' → logprob: -13.75005054473877
    7. '1' → logprob: -14.62505054473877
    8. '```' → logprob: -14.62505054473877
    9. '012' → logprob: -14.93755054473877
    10. '       ' → logprob: -15.31255054473877

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00339551386423409
    2. ')' → logprob: -6.5033955574035645
    3. ':' → logprob: -6.6283955574035645
    4. '):
' → logprob: -7.6283955574035645
    5. 'if' → logprob: -10.128395080566406
    6. ']:' → logprob: -11.003395080566406
    7. ' ):' → logprob: -11.878395080566406
    8. '   ' → logprob: -11.878395080566406
    9. ')]' → logprob: -12.753395080566406
    10. ']):' → logprob: -13.253395080566406

Token 73: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5753905177116394
    2. '           ' → logprob: -1.2003905773162842
    3. '       ' → logprob: -2.325390577316284
    4. '<|end|>' → logprob: -3.950390577316284
    5. '        ' → logprob: -5.450390338897705
    6. ':
' → logprob: -5.950390338897705
    7. ' :' → logprob: -6.075390338897705
    8. ' ' → logprob: -6.075390338897705
    9. ',' → logprob: -6.200390338897705
    10. ' if' → logprob: -6.825390338897705

Token 74: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6088078022003174
    2. ' if' → logprob: -1.3588078022003174
    3. '               ' → logprob: -2.1088078022003174
    4. '<|end|>' → logprob: -3.4838078022003174
    5. 'if' (adapté à ' if') → logprob: -4.233807563781738
    6. '           ' → logprob: -4.483807563781738
    7. ' 
' → logprob: -5.108807563781738
    8. ':' → logprob: -5.858807563781738
    9. '            ' → logprob: -5.858807563781738
    10. '       ' → logprob: -5.983807563781738

Token 75: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.001379402237944305
    2. 'grid' → logprob: -6.626379489898682
    3. ' not' → logprob: -10.001379013061523
    4. '	grid' → logprob: -12.626379013061523
    5. '(grid' → logprob: -13.126379013061523
    6. ' ' → logprob: -13.626379013061523
    7. ' ' → logprob: -14.501379013061523
    8. '.grid' → logprob: -14.876379013061523
    9. 'not' → logprob: -15.376379013061523
    10. ':grid' → logprob: -15.876379013061523

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.8921695047756657e-05
    2. '[j' → logprob: -10.750028610229492
    3. '[I' → logprob: -12.250028610229492
    4. '[' → logprob: -14.000028610229492
    5. '][' → logprob: -14.500028610229492
    6. '```' → logprob: -14.625028610229492
    7. ' [' → logprob: -14.875028610229492
    8. '\[' → logprob: -16.375028610229492
    9. '[
' → logprob: -16.750028610229492
    10. '[int' → logprob: -16.875028610229492

Token 77: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010694891680032015
    2. '[j' → logprob: -7.37606954574585
    3. '[i' → logprob: -8.126069068908691
    4. ']' → logprob: -9.126069068908691
    5. ' ][' → logprob: -10.626069068908691
    6. ']==' → logprob: -12.376069068908691
    7. '[' → logprob: -12.876069068908691
    8. ']][' → logprob: -13.626069068908691
    9. ''][' → logprob: -13.751069068908691
    10. '"][' → logprob: -14.126069068908691

Token 78: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8624639324116288e-06
    2. ']' → logprob: -13.625001907348633
    3. '][' → logprob: -16.125001907348633
    4. ' ' → logprob: -16.375001907348633
    5. '0' → logprob: -16.375001907348633
    6. '```' → logprob: -16.500001907348633
    7. ' j' → logprob: -16.625001907348633
    8. '   ' → logprob: -17.000001907348633
    9. '	j' → logprob: -17.625001907348633
    10. ']==' → logprob: -17.750001907348633

Token 79: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.050609685480594635
    2. '==' → logprob: -3.050609588623047
    3. '=='' → logprob: -6.800609588623047
    4. ' and' → logprob: -7.925609588623047
    5. ' =='' → logprob: -8.300609588623047
    6. ']' → logprob: -9.550609588623047
    7. ')' → logprob: -9.675609588623047
    8. ']==' → logprob: -10.175609588623047
    9. ' '' → logprob: -10.550609588623047
    10. ' ' → logprob: -10.675609588623047

Token 80: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5970140695571899
    2. '==' → logprob: -0.8470140695571899
    3. ' and' → logprob: -4.0970139503479
    4. 'and' → logprob: -5.9720139503479
    5. '=='' → logprob: -6.5970139503479
    6. '=' → logprob: -9.097014427185059
    7. ' =='' → logprob: -9.722014427185059
    8. ' ' → logprob: -10.847014427185059
    9. '=="' → logprob: -10.972014427185059
    10. ' '' → logprob: -10.972014427185059

Token 81: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5213022232055664
    2. ' '' → logprob: -1.0213022232055664
    3. '1' → logprob: -4.021302223205566
    4. ' ' → logprob: -4.271302223205566
    5. '"' → logprob: -5.396302223205566
    6. ''*' → logprob: -5.771302223205566
    7. ' '*'' → logprob: -5.896302223205566
    8. ' '#'' → logprob: -6.396302223205566
    9. ''#' → logprob: -7.396302223205566
    10. ''x' → logprob: -7.896302223205566

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005836487747728825
    2. '#' → logprob: -5.880836486816406
    3. 'o' → logprob: -7.255836486816406
    4. '@' → logprob: -7.505836486816406
    5. 'W' → logprob: -7.630836486816406
    6. 'x' → logprob: -7.755836486816406
    7. '*' → logprob: -8.130836486816406
    8. 'X' → logprob: -8.130836486816406
    9. '.' → logprob: -9.505836486816406
    10. '0' → logprob: -9.755836486816406

Token 83: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21139675378799438
    2. ' and' → logprob: -1.7113966941833496
    3. ' '' → logprob: -5.08639669418335
    4. 'and' → logprob: -5.58639669418335
    5. ''s' → logprob: -13.336397171020508
    6. '')' → logprob: -13.461397171020508
    7. '`' → logprob: -15.336397171020508
    8. '           ' → logprob: -15.461397171020508
    9. ' ' → logprob: -15.461397171020508
    10. '"' → logprob: -15.711397171020508

Token 84: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005266484338790178
    2. 'and' → logprob: -5.2552666664123535
    3. ' ' → logprob: -10.380266189575195
    4. '            ' → logprob: -13.505266189575195
    5. ' ' → logprob: -16.005266189575195
    6. '<|end|>' → logprob: -16.630266189575195
    7. '        ' → logprob: -17.005266189575195
    8. '                ' → logprob: -17.005266189575195
    9. '    ' → logprob: -17.755266189575195
    10. '	and' → logprob: -17.880266189575195

Token 85: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0009119403548538685
    2. 'not' → logprob: -7.000911712646484
    3. ' ' → logprob: -15.000911712646484
    4. ' and' → logprob: -17.125911712646484
    5. ' ' → logprob: -17.750911712646484
    6. ' visited' → logprob: -18.000911712646484
    7. '(not' → logprob: -19.000911712646484
    8. '	not' → logprob: -19.000911712646484
    9. 'visited' → logprob: -19.250911712646484
    10. 'and' → logprob: -19.750911712646484

Token 86: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.018151817843317986
    2. 'visited' → logprob: -4.018151760101318
    3. ' ' → logprob: -13.518152236938477
    4. ' ' → logprob: -14.768152236938477
    5. 'Visited' → logprob: -16.268152236938477
    6. ' visit' → logprob: -17.768152236938477
    7. '<|end|>' → logprob: -18.018152236938477
    8. ' visits' → logprob: -18.393152236938477
    9. ' visitation' → logprob: -18.893152236938477
    10. 'visit' → logprob: -19.143152236938477

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1279553291387856e-05
    2. '[' → logprob: -12.125011444091797
    3. '[I' → logprob: -12.375011444091797
    4. '[j' → logprob: -14.000011444091797
    5. '[ii' → logprob: -15.125011444091797
    6. ' [' → logprob: -15.375011444091797
    7. '```' → logprob: -15.500011444091797
    8. '][' → logprob: -18.125011444091797
    9. '[[' → logprob: -18.250011444091797
    10. ')[' → logprob: -18.375011444091797

Token 88: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003837213444057852
    2. ']' → logprob: -8.125383377075195
    3. '[i' → logprob: -9.875383377075195
    4. ' ][' → logprob: -11.000383377075195
    5. ']][' → logprob: -11.375383377075195
    6. '[j' → logprob: -12.125383377075195
    7. '[' → logprob: -13.625383377075195
    8. '"][' → logprob: -15.250383377075195
    9. '```' → logprob: -15.500383377075195
    10. ''][' → logprob: -15.625383377075195

Token 89: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.8889261304575484e-06
    2. '][' → logprob: -13.500003814697266
    3. ' j' → logprob: -14.000003814697266
    4. ' ' → logprob: -14.250003814697266
    5. '   ' → logprob: -14.750003814697266
    6. '[j' → logprob: -15.500003814697266
    7. ']' → logprob: -15.875003814697266
    8. '```' → logprob: -16.000003814697266
    9. '	j' → logprob: -17.250003814697266
    10. '<|end|>' → logprob: -17.500003814697266

Token 90: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.010975898243486881
    2. ']' → logprob: -4.6359758377075195
    3. '):' → logprob: -7.5109758377075195
    4. ' ]' → logprob: -8.01097583770752
    5. ':' → logprob: -8.38597583770752
    6. ']):' → logprob: -10.01097583770752
    7. ']:
' → logprob: -10.13597583770752
    8. ')]' → logprob: -11.13597583770752
    9. '']:' → logprob: -12.63597583770752
    10. ']:
' → logprob: -12.88597583770752

Token 91: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0068369717337191105
    2. ':
' → logprob: -5.131836891174316
    3. ' :' → logprob: -8.131836891174316
    4. '       ' → logprob: -8.131836891174316
    5. '):' → logprob: -9.256836891174316
    6. '               ' → logprob: -9.881836891174316
    7. ')' → logprob: -10.256836891174316
    8. '<|end|>' → logprob: -10.506836891174316
    9. ' :
' → logprob: -10.631836891174316
    10. '   ' → logprob: -10.881836891174316

Token 92: ' islands' (ID: 45758)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.9370138645172119
    2. ' visited' → logprob: -1.312013864517212
    3. ' queue' → logprob: -2.312013864517212
    4. '               ' → logprob: -2.687013864517212
    5. ' 
' → logprob: -3.562013864517212
    6. '                   ' → logprob: -3.812013864517212
    7. ' deque' → logprob: -3.937013864517212
    8. '
' → logprob: -4.062013626098633
    9. '                
' → logprob: -4.062013626098633
    10. '                    
' → logprob: -4.437013626098633

Token 93: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0023628019262105227
    2. '+=' → logprob: -6.3773627281188965
    3. ' =' → logprob: -7.3773627281188965
    4. '=' → logprob: -10.627363204956055
    5. '+' → logprob: -12.127363204956055
    6. ' ' → logprob: -12.752363204956055
    7. ' +' → logprob: -13.627363204956055
    8. ')' → logprob: -14.502363204956055
    9. ' -=' → logprob: -15.252363204956055
    10. ' |=' → logprob: -16.377363204956055

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31326186656951904
    2. ' ' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.313261032104492
    4. '<|end|>' → logprob: -16.938261032104492
    5. '```' → logprob: -17.563261032104492
    6. ' one' → logprob: -18.063261032104492
    7. 's' → logprob: -19.063261032104492
    8. '   ' → logprob: -19.563261032104492
    9. ' `' → logprob: -19.625761032104492
    10. ' space' → logprob: -19.688261032104492

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -20.0000057220459
    4. '```' → logprob: -20.5000057220459
    5. '   ' → logprob: -22.7500057220459
    6. '`' → logprob: -23.3750057220459
    7. '+' → logprob: -23.5000057220459
    8. ' ' → logprob: -23.6250057220459
    9. '  ' → logprob: -23.6250057220459
    10. '۱' → logprob: -24.1250057220459

Token 96: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7516480088233948
    2. '               ' → logprob: -0.8766480088233948
    3. '<|end|>' → logprob: -2.87664794921875
    4. ':' → logprob: -4.37664794921875
    5. '                
' → logprob: -5.12664794921875
    6. '  
' → logprob: -5.12664794921875
    7. '```' → logprob: -5.25164794921875
    8. '                   ' → logprob: -5.50164794921875
    9. ':
' → logprob: -5.50164794921875
    10. '\n' → logprob: -5.62664794921875

Token 97: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6206287145614624
    2. ' 
' → logprob: -1.9956287145614624
    3. '  
' → logprob: -2.620628833770752
    4. '<|end|>' → logprob: -2.745628833770752
    5. '               ' → logprob: -2.995628833770752
    6. '    
' → logprob: -3.495628833770752
    7. '                
' → logprob: -3.745628833770752
    8. '```' → logprob: -4.370628833770752
    9. '   ' → logprob: -4.620628833770752
    10. '       ' → logprob: -4.995628833770752

Token 98: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.01244266051799059
    2. '
' → logprob: -5.262442588806152
    3. 'queue' (adapté à ' queue') → logprob: -5.762442588806152
    4. ' stack' → logprob: -6.387442588806152
    5. ' q' → logprob: -6.512442588806152
    6. '```' → logprob: -8.012442588806152
    7. ' deque' → logprob: -9.387442588806152
    8. ' 
' → logprob: -9.512442588806152
    9. '   ' → logprob: -9.512442588806152
    10. '               ' → logprob: -9.887442588806152

Token 99: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.709555447101593
    2. '.append' → logprob: -0.834555447101593
    3. ' =' → logprob: -2.8345553874969482
    4. '.extend' → logprob: -5.334555625915527
    5. '.enqueue' → logprob: -5.709555625915527
    6. '<|end|>' → logprob: -5.959555625915527
    7. '=' → logprob: -6.459555625915527
    8. ' .' → logprob: -7.084555625915527
    9. '.put' → logprob: -7.459555625915527
    10. '.add' → logprob: -7.709555625915527

Token 100: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.1269284337759018
    2. ' deque' → logprob: -2.1269283294677734
    3. 'de' → logprob: -15.251928329467773
    4. 'Deque' → logprob: -16.501928329467773
    5. '	de' → logprob: -17.626928329467773
    6. ' dequeue' → logprob: -19.376928329467773
    7. '(de' → logprob: -20.501928329467773
    8. '```' → logprob: -20.501928329467773
    9. 'queue' → logprob: -21.876928329467773
    10. '   ' → logprob: -21.876928329467773

Token 101: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.006865856237709522
    2. '()' → logprob: -5.006865978240967
    3. '((' → logprob: -9.506865501403809
    4. '([' → logprob: -10.381865501403809
    5. '(' → logprob: -10.506865501403809
    6. '[(' → logprob: -11.631865501403809
    7. '()
' → logprob: -12.381865501403809
    8. '(((' → logprob: -13.256865501403809
    9. '([
' → logprob: -13.881865501403809
    10. '([[' → logprob: -14.506865501403809

Token 102: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.723352049040841e-06
    2. ' i' → logprob: -12.375004768371582
    3. ')i' → logprob: -15.250004768371582
    4. '(i' → logprob: -15.625004768371582
    5. ')' → logprob: -17.250003814697266
    6. '   ' → logprob: -17.625003814697266
    7. '	i' → logprob: -18.875003814697266
    8. '{i' → logprob: -19.375003814697266
    9. '_i' → logprob: -20.000003814697266
    10. '```' → logprob: -20.125003814697266

Token 103: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3133297562599182
    2. ',j' → logprob: -1.3133296966552734
    3. ' ,' → logprob: -9.688329696655273
    4. ',
' → logprob: -13.438329696655273
    5. '<|end|>' → logprob: -13.938329696655273
    6. ',J' → logprob: -14.438329696655273
    7. '```' → logprob: -14.813329696655273
    8. '‌,' → logprob: -14.813329696655273
    9. ' ' → logprob: -15.313329696655273
    10. '
' → logprob: -15.438329696655273

Token 104: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0002558561391197145
    2. ')' → logprob: -9.000255584716797
    3. '])' → logprob: -9.625255584716797
    4. ')]' → logprob: -9.875255584716797
    5. ')])
' → logprob: -11.500255584716797
    6. '])]' → logprob: -13.250255584716797
    7. ']))' → logprob: -13.875255584716797
    8. ']])' → logprob: -14.125255584716797
    9. ')])

' → logprob: -14.625255584716797
    10. ' )' → logprob: -14.625255584716797

Token 105: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3320513665676117
    2. ' 
' → logprob: -2.2070512771606445
    3. '<|end|>' → logprob: -3.0820512771606445
    4. ' ' → logprob: -3.3320512771606445
    5. '
' → logprob: -3.4570512771606445
    6. '                
' → logprob: -4.0820512771606445
    7. '  
' → logprob: -4.5820512771606445
    8. '                   ' → logprob: -4.7070512771606445
    9. '                ' → logprob: -5.2070512771606445
    10. '                    
' → logprob: -5.9570512771606445

Token 106: ' visited' (ID: 18416)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.673731803894043
    2. '   ' → logprob: -1.923731803894043
    3. '
' → logprob: -2.298731803894043
    4. 'visited' (adapté à ' visited') → logprob: -2.548731803894043
    5. '           ' → logprob: -3.048731803894043
    6. ' while' → logprob: -3.298731803894043
    7. ' visited' → logprob: -3.423731803894043
    8. '                   ' → logprob: -3.673731803894043
    9. 'while' → logprob: -5.048731803894043
    10. '       ' → logprob: -5.298731803894043

Token 107: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005410005105659366
    2. '[' → logprob: -8.125540733337402
    3. '[I' → logprob: -8.375540733337402
    4. '```' → logprob: -13.125540733337402
    5. '][' → logprob: -13.375540733337402
    6. '[ii' → logprob: -13.625540733337402
    7. '[j' → logprob: -13.750540733337402
    8. '[s' → logprob: -13.875540733337402
    9. '[next' → logprob: -14.125540733337402
    10. '[int' → logprob: -14.125540733337402

Token 108: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20255233347415924
    2. '[i' → logprob: -1.702552318572998
    3. '[' → logprob: -7.827552318572998
    4. '[j' → logprob: -8.452552795410156
    5. ']' → logprob: -8.702552795410156
    6. ')][' → logprob: -8.952552795410156
    7. ' ][' → logprob: -9.577552795410156
    8. ']][' → logprob: -9.952552795410156
    9. '[I' → logprob: -9.952552795410156
    10. ')[' → logprob: -10.952552795410156

Token 109: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.676292231422849e-05
    2. '][' → logprob: -11.125017166137695
    3. ' ' → logprob: -14.750017166137695
    4. ' j' → logprob: -14.875017166137695
    5. ']' → logprob: -15.000017166137695
    6. '0' → logprob: -15.250017166137695
    7. '```' → logprob: -15.625017166137695
    8. '1' → logprob: -15.875017166137695
    9. '[j' → logprob: -16.250017166137695
    10. '	j' → logprob: -16.250017166137695

Token 110: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.215330409351736e-05
    2. ' ]' → logprob: -10.500041961669922
    3. ']=' → logprob: -11.375041961669922
    4. '][' → logprob: -13.250041961669922
    5. '[' → logprob: -14.875041961669922
    6. '])' → logprob: -14.875041961669922
    7. ')' → logprob: -15.375041961669922
    8. ')]' → logprob: -15.875041961669922
    9. ']
' → logprob: -16.125041961669922
    10. ' ' → logprob: -16.750041961669922

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602802723646164
    2. '=' → logprob: -1.9102802276611328
    3. ']' → logprob: -10.035280227661133
    4. ' ' → logprob: -12.035280227661133
    5. '=True' → logprob: -13.285280227661133
    6. ']=' → logprob: -13.410280227661133
    7. '[' → logprob: -13.910280227661133
    8. ' =
' → logprob: -13.910280227661133
    9. ')' → logprob: -14.035280227661133
    10. ' ]' → logprob: -14.910280227661133

Token 112: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16022422909736633
    2. 'True' → logprob: -1.910224199295044
    3. '(True' → logprob: -18.78522491455078
    4. '=True' → logprob: -20.53522491455078
    5. ' Tru' → logprob: -21.16022491455078
    6. ' ' → logprob: -21.53522491455078
    7. ' ' → logprob: -22.66022491455078
    8. '1' → logprob: -22.66022491455078
    9. 'False' → logprob: -23.53522491455078
    10. '.True' → logprob: -23.53522491455078

Token 113: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.21681524813175201
    2. '
' → logprob: -2.216815233230591
    3. '\n' → logprob: -3.716815233230591
    4. '  
' → logprob: -3.966815233230591
    5. '    
' → logprob: -4.46681547164917
    6. '<|end|>' → logprob: -4.59181547164917
    7. ' ' → logprob: -5.34181547164917
    8. '   
' → logprob: -5.71681547164917
    9. '   ' → logprob: -5.96681547164917
    10. '               ' → logprob: -6.34181547164917

Token 114: '               ' (ID: 506)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.4515498876571655
    2. ' ' → logprob: -1.4515498876571655
    3. '   ' → logprob: -3.826550006866455
    4. '<|end|>' → logprob: -4.076550006866455
    5. '               ' → logprob: -4.201550006866455
    6. '    
' → logprob: -4.326550006866455
    7. '  
' → logprob: -4.326550006866455
    8. '
' → logprob: -4.451550006866455
    9. '   
' → logprob: -5.201550006866455
    10. '\n' → logprob: -5.201550006866455

Token 115: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.22414489090442657
    2. 'while' (adapté à ' while') → logprob: -2.22414493560791
    3. '	while' → logprob: -2.47414493560791
    4. '   ' → logprob: -4.97414493560791
    5. '
' → logprob: -7.09914493560791
    6. '       ' → logprob: -8.22414493560791
    7. ' 
' → logprob: -9.22414493560791
    8. '    
' → logprob: -9.47414493560791
    9. '```' → logprob: -10.09914493560791
    10. '               ' → logprob: -10.22414493560791

Token 116: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.2519407570362091
    2. ' queue' → logprob: -1.5019407272338867
    3. '(queue' → logprob: -11.626940727233887
    4. '	queue' → logprob: -13.126940727233887
    5. 'len' → logprob: -14.876940727233887
    6. 'que' → logprob: -15.376940727233887
    7. ' ' → logprob: -16.376941680908203
    8. ' len' → logprob: -16.876941680908203
    9. '.queue' → logprob: -17.251941680908203
    10. ' ' → logprob: -17.376941680908203

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006330899195745587
    2. '):' → logprob: -7.500633239746094
    3. '>:' → logprob: -9.750633239746094
    4. ' :' → logprob: -12.125633239746094
    5. ':**' → logprob: -12.375633239746094
    6. ':
' → logprob: -13.375633239746094
    7. '<|end|>' → logprob: -13.375633239746094
    8. '():' → logprob: -13.500633239746094
    9. ':not' → logprob: -13.625633239746094
    10. '}:' → logprob: -14.375633239746094

Token 118: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.051868412643671036
    2. ' ' → logprob: -4.676868438720703
    3. '
' → logprob: -4.801868438720703
    4. '               ' → logprob: -4.926868438720703
    5. 'n' → logprob: -5.301868438720703
    6. ' 
' → logprob: -5.301868438720703
    7. '                       ' → logprob: -6.301868438720703
    8. '           ' → logprob: -6.301868438720703
    9. ' (' → logprob: -6.426868438720703
    10. '                    
' → logprob: -6.426868438720703

Token 119: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0040801819413900375
    2. ' x' → logprob: -5.504080295562744
    3. '	x' → logprob: -14.129079818725586
    4. 'ci' → logprob: -14.379079818725586
    5. 'i' → logprob: -15.879079818725586
    6. '   ' → logprob: -16.754079818725586
    7. '(x' → logprob: -16.879079818725586
    8. '                   ' → logprob: -16.879079818725586
    9. '```' → logprob: -17.004079818725586
    10. 'xi' → logprob: -17.504079818725586

Token 120: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6931722164154053
    2. ',y' → logprob: -0.6931722164154053
    3. ' ,' → logprob: -11.318172454833984
    4. ',x' → logprob: -11.693172454833984
    5. ',
' → logprob: -13.818172454833984
    6. ',j' → logprob: -14.318172454833984
    7. ',q' → logprob: -14.693172454833984
    8. ',n' → logprob: -14.818172454833984
    9. ',next' → logprob: -14.818172454833984
    10. ',Y' → logprob: -15.318172454833984

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20145437121391296
    2. '=' → logprob: -1.7014544010162354
    3. ')' → logprob: -10.201454162597656
    4. ')=' → logprob: -12.951454162597656
    5. ' ' → logprob: -14.076454162597656
    6. '<|end|>' → logprob: -15.826454162597656
    7. ',' → logprob: -15.951454162597656
    8. '=query' → logprob: -16.076454162597656
    9. ']' → logprob: -16.201454162597656
    10. ' =
' → logprob: -16.576454162597656

Token 122: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.10020828247070312
    2. 'queue' → logprob: -2.350208282470703
    3. '	queue' → logprob: -14.100208282470703
    4. 'deque' → logprob: -14.475208282470703
    5. ' deque' → logprob: -15.475208282470703
    6. '(queue' → logprob: -15.850208282470703
    7. '.queue' → logprob: -17.600208282470703
    8. 'que' → logprob: -17.725208282470703
    9. ' ' → logprob: -18.100208282470703
    10. ' dequeue' → logprob: -18.475208282470703

Token 123: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.837811088189483e-05
    2. '.' → logprob: -10.125068664550781
    3. '.pop' → logprob: -10.500068664550781
    4. ' .' → logprob: -14.625068664550781
    5. 'p' → logprob: -15.750068664550781
    6. '.dequeue' → logprob: -15.750068664550781
    7. 'opleft' → logprob: -17.50006866455078
    8. ').' → logprob: -18.12506866455078
    9. '```' → logprob: -19.12506866455078
    10. '   ' → logprob: -19.12506866455078

Token 124: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.014368340373039246
    2. 'op' → logprob: -4.264368534088135
    3. 'ople' → logprob: -8.514368057250977
    4. 'opl' → logprob: -12.764368057250977
    5. 'p' → logprob: -14.514368057250977
    6. 'ple' → logprob: -15.764368057250977
    7. 'oplevel' → logprob: -16.014368057250977
    8. 'opt' → logprob: -16.014368057250977
    9. 'pop' → logprob: -16.389368057250977
    10. 'left' → logprob: -16.514368057250977

Token 125: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003448792558629066
    2. '()
' → logprob: -8.000345230102539
    3. '(' → logprob: -11.875345230102539
    4. ')' → logprob: -14.000345230102539
    5. '()

' → logprob: -14.625345230102539
    6. '()`' → logprob: -14.625345230102539
    7. '())' → logprob: -15.000345230102539
    8. '()]' → logprob: -15.625345230102539
    9. ' ()' → logprob: -15.750345230102539
    10. '()
' → logprob: -16.62534523010254

Token 126: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17216980457305908
    2. '<|end|>' → logprob: -2.9221696853637695
    3. '               ' → logprob: -3.4221696853637695
    4. ' for' → logprob: -3.4221696853637695
    5. '
' → logprob: -4.4221696853637695
    6. '   ' → logprob: -4.5471696853637695
    7. '                    
' → logprob: -5.4221696853637695
    8. 'for' → logprob: -5.6721696853637695
    9. '<|end|>' → logprob: -6.5471696853637695
    10. '           ' → logprob: -6.6721696853637695

Token 127: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2583872377872467
    2. 'for' (adapté à ' for') → logprob: -1.6333872079849243
    3. ' 
' → logprob: -4.508387088775635
    4. '                   ' → logprob: -4.758387088775635
    5. '<|end|>' → logprob: -5.258387088775635
    6. '
' → logprob: -5.883387088775635
    7. ' ' → logprob: -6.508387088775635
    8. '                    
' → logprob: -7.133387088775635
    9. '	for' → logprob: -7.758387088775635
    10. '    ' → logprob: -8.258387565612793

Token 128: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0011703446507453918
    2. ' dx' → logprob: -6.7511701583862305
    3. '(dx' → logprob: -16.251171112060547
    4. '```' → logprob: -17.126171112060547
    5. '_dx' → logprob: -17.126171112060547
    6. '	d' → logprob: -18.376171112060547
    7. 'd' → logprob: -18.501171112060547
    8. 'nx' → logprob: -19.751171112060547
    9. '   ' → logprob: -20.376171112060547
    10. '.dx' → logprob: -20.501171112060547

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00719956262037158
    2. ',y' → logprob: -5.257199764251709
    3. ',d' → logprob: -6.257199764251709
    4. ' ,' → logprob: -10.63219928741455
    5. ',j' → logprob: -12.38219928741455
    6. ',int' → logprob: -12.50719928741455
    7. ',user' → logprob: -12.75719928741455
    8. ',n' → logprob: -13.00719928741455
    9. ',w' → logprob: -13.38219928741455
    10. ',my' → logprob: -13.38219928741455

Token 130: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.011047814972698689
    2. ' dy' → logprob: -4.511047840118408
    3. '.dy' → logprob: -17.88604736328125
    4. 'd' → logprob: -18.63604736328125
    5. 'Dy' → logprob: -18.88604736328125
    6. '<|end|>' → logprob: -19.51104736328125
    7. 'dym' → logprob: -20.13604736328125
    8. 'ddy' → logprob: -21.76104736328125
    9. '	d' → logprob: -21.88604736328125
    10. ' ' → logprob: -21.88604736328125

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0038526933640241623
    2. '<|end|>' → logprob: -5.628852844238281
    3. 'in' → logprob: -8.628852844238281
    4. ')' → logprob: -10.503852844238281
    5. '<|end|>' → logprob: -10.878852844238281
    6. ' ' → logprob: -11.253852844238281
    7. ',' → logprob: -11.628852844238281
    8. 's' → logprob: -13.128852844238281
    9. ':' → logprob: -14.003852844238281
    10. '.' → logprob: -14.566352844238281

Token 132: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.038043782114982605
    2. ' directions' → logprob: -3.288043737411499
    3. 'direction' → logprob: -13.663043975830078
    4. 'd' → logprob: -14.538043975830078
    5. ' ' → logprob: -15.163043975830078
    6. 'direct' → logprob: -16.163043975830078
    7. 'directories' → logprob: -16.288043975830078
    8. '```' → logprob: -16.663043975830078
    9. 'Directions' → logprob: -17.413043975830078
    10. '   ' → logprob: -17.538043975830078

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007007609237916768
    2. '<|end|>' → logprob: -8.250700950622559
    3. ':
' → logprob: -8.875700950622559
    4. ',' → logprob: -9.375700950622559
    5. '):' → logprob: -9.375700950622559
    6. '                   ' → logprob: -10.375700950622559
    7. '                       ' → logprob: -10.375700950622559
    8. ' :' → logprob: -10.375700950622559
    9. ')' → logprob: -11.750700950622559
    10. '<|end|>' → logprob: -12.000700950622559

Token 134: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.5050488114356995
    2. ' ' → logprob: -1.0050487518310547
    3. ' new' → logprob: -5.130048751831055
    4. 'nx' (adapté à ' nx') → logprob: -5.380048751831055
    5. ' 
' → logprob: -5.505048751831055
    6. '(nx' → logprob: -5.505048751831055
    7. ' x' → logprob: -5.755048751831055
    8. 'x' → logprob: -6.130048751831055
    9. ' if' → logprob: -6.880048751831055
    10. ' ' → logprob: -7.005048751831055

Token 136: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06398963183164597
    2. ' =' → logprob: -2.8139896392822266
    3. ',' → logprob: -6.438989639282227
    4. '=n' → logprob: -8.188989639282227
    5. '=x' → logprob: -8.938989639282227
    6. ',n' → logprob: -11.938989639282227
    7. '=int' → logprob: -13.313989639282227
    8. ' ,' → logprob: -13.688989639282227
    9. ',x' → logprob: -13.938989639282227
    10. '=y' → logprob: -14.188989639282227

Token 137: 'ny' (ID: 3008)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017083751736208797
    2. ' x' → logprob: -6.376708507537842
    3. '=' → logprob: -12.376708030700684
    4. ' =' → logprob: -14.001708030700684
    5. '=x' → logprob: -14.501708030700684
    6. ' ' → logprob: -15.001708030700684
    7. '<|end|>' → logprob: -15.126708030700684
    8. '0' → logprob: -16.376708984375
    9. ',' → logprob: -18.001708984375
    10. ',x' → logprob: -18.376708984375

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931546330451965
    2. ' =' → logprob: -0.6931546330451965
    3. '=x' → logprob: -12.318154335021973
    4. '=n' → logprob: -13.318154335021973
    5. ')' → logprob: -14.818154335021973
    6. ' ' → logprob: -15.693154335021973
    7. '=s' → logprob: -16.31815528869629
    8. ',' → logprob: -16.94315528869629
    9. '=i' → logprob: -17.06815528869629
    10. '<|end|>' → logprob: -17.06815528869629

Token 139: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20141421258449554
    2. 'x' → logprob: -1.7014142274856567
    3. ' ' → logprob: -14.451414108276367
    4. '	x' → logprob: -15.201414108276367
    5. ' ' → logprob: -16.451414108276367
    6. ')x' → logprob: -17.576414108276367
    7. ' 
' → logprob: -17.826414108276367
    8. '<|end|>' → logprob: -17.826414108276367
    9. '"x' → logprob: -17.951414108276367
    10. '
' → logprob: -18.326414108276367

Token 140: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011073758825659752
    2. ' +' → logprob: -4.511073589324951
    3. '<|end|>' → logprob: -11.26107406616211
    4. '+x' → logprob: -11.51107406616211
    5. '+
' → logprob: -14.26107406616211
    6. '+d' → logprob: -14.63607406616211
    7. '+,' → logprob: -14.88607406616211
    8. '+xml' → logprob: -15.01107406616211
    9. '+s' → logprob: -16.01107406616211
    10. ' +
' → logprob: -16.01107406616211

Token 141: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.5690089639974758e-05
    2. ' dx' → logprob: -11.125015258789062
    3. '
' → logprob: -14.750015258789062
    4. '_dx' → logprob: -16.000015258789062
    5. '1' → logprob: -16.125015258789062
    6. ' ' → logprob: -16.625015258789062
    7. '(dx' → logprob: -16.625015258789062
    8. '<|end|>' → logprob: -17.250015258789062
    9. 'd' → logprob: -17.625015258789062
    10. '   ' → logprob: -17.625015258789062

Token 142: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.20447717607021332
    2. ',' → logprob: -1.7044771909713745
    3. ' ,' → logprob: -5.829477310180664
    4. ',n' → logprob: -9.079477310180664
    5. ',x' → logprob: -12.329477310180664
    6. ',j' → logprob: -14.704477310180664
    7. ',
' → logprob: -15.704477310180664
    8. ',next' → logprob: -16.204477310180664
    9. ' ,
' → logprob: -16.329477310180664
    10. ',w' → logprob: -16.954477310180664

Token 143: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.6656825866666622e-05
    2. '+y' → logprob: -11.62502670288086
    3. ' +' → logprob: -12.12502670288086
    4. '+x' → logprob: -12.25002670288086
    5. '<|end|>' → logprob: -12.50002670288086
    6. '+n' → logprob: -13.62502670288086
    7. '+d' → logprob: -13.75002670288086
    8. '+j' → logprob: -13.75002670288086
    9. '+
' → logprob: -16.12502670288086
    10. '+h' → logprob: -16.50002670288086

Token 144: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00012535012501757592
    2. ' dy' → logprob: -9.37512493133545
    3. 'dx' → logprob: -10.12512493133545
    4. '0' → logprob: -15.62512493133545
    5. '1' → logprob: -16.000125885009766
    6. 'd' → logprob: -16.500125885009766
    7. '.dy' → logprob: -17.250125885009766
    8. ' ' → logprob: -17.625125885009766
    9. 'dj' → logprob: -18.000125885009766
    10. 'y' → logprob: -18.375125885009766

Token 145: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.17430193722248077
    2. '                        
' → logprob: -2.799301862716675
    3. ' if' → logprob: -3.424301862716675
    4. '<|end|>' → logprob: -3.674301862716675
    5. ' 
' → logprob: -3.924301862716675
    6. '                        ' → logprob: -5.424302101135254
    7. '               ' → logprob: -6.049302101135254
    8. '                   ' → logprob: -6.299302101135254
    9. '  
' → logprob: -6.424302101135254
    10. 'if' → logprob: -6.424302101135254

Token 147: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7169951796531677
    2. ' ' → logprob: -1.8419952392578125
    3. ' 
' → logprob: -2.5919952392578125
    4. '                       ' → logprob: -2.7169952392578125
    5. 'if' (adapté à ' if') → logprob: -2.9669952392578125
    6. '                        
' → logprob: -3.2169952392578125
    7. '
' → logprob: -3.2169952392578125
    8. '<|end|>' → logprob: -3.2169952392578125
    9. '                        ' → logprob: -3.7169952392578125
    10. '  
' → logprob: -5.4669952392578125

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5760278105735779
    2. ' ' → logprob: -0.8260278105735779
    3. ' nx' → logprob: -9.701027870178223
    4. 'nx' → logprob: -11.451027870178223
    5. ' ' → logprob: -11.576027870178223
    6. '(nx' → logprob: -12.326027870178223
    7. ' (' → logprob: -13.826027870178223
    8. '(' → logprob: -14.701027870178223
    9. '
' → logprob: -15.201027870178223
    10. '  ' → logprob: -15.701027870178223

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000181372175575234
    2. ' ' → logprob: -8.625181198120117
    3. 'nx' → logprob: -14.000181198120117
    4. '(nx' → logprob: -14.875181198120117
    5. '(' → logprob: -15.500181198120117
    6. ' nx' → logprob: -15.500181198120117
    7. '
' → logprob: -16.000181198120117
    8. '   ' → logprob: -17.125181198120117
    9. ' ' → logprob: -17.750181198120117
    10. ' (' → logprob: -17.875181198120117

Token 150: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6931546926498413
    2. '<=' → logprob: -0.6931546926498413
    3. '>=' → logprob: -12.068154335021973
    4. ' >=' → logprob: -13.943154335021973
    5. '<' → logprob: -15.318154335021973
    6. '0' → logprob: -16.06815528869629
    7. ' ' → logprob: -16.31815528869629
    8. '>' → logprob: -16.94315528869629
    9. ' ' → logprob: -16.94315528869629
    10. 'and' → logprob: -17.06815528869629

Token 151: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.018153922632336617
    2. ' nx' → logprob: -4.018154144287109
    3. '(nx' → logprob: -12.51815414428711
    4. '
' → logprob: -15.51815414428711
    5. 'n' → logprob: -16.01815414428711
    6. 'ny' → logprob: -17.26815414428711
    7. ' ' → logprob: -18.89315414428711
    8. 'Nx' → logprob: -19.01815414428711
    9. 'xn' → logprob: -19.01815414428711
    10. '	n' → logprob: -19.39315414428711

Token 152: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16028577089309692
    2. ' <' → logprob: -1.9102857112884521
    3. '<n' → logprob: -10.160285949707031
    4. ' and' → logprob: -12.285285949707031
    5. '<|end|>' → logprob: -12.285285949707031
    6. '12' → logprob: -12.660285949707031
    7. '<len' → logprob: -12.785285949707031
    8. '<size' → logprob: -13.160285949707031
    9. 'and' → logprob: -13.535285949707031
    10. '<int' → logprob: -13.785285949707031

Token 153: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -20.500158309936523
    4. '```' → logprob: -20.625158309936523
    5. '
' → logprob: -20.750158309936523
    6. '۱۲' → logprob: -21.500158309936523
    7. '１２' → logprob: -21.875158309936523
    8. '012' → logprob: -22.125158309936523
    9. '१२' → logprob: -22.500158309936523
    10. ' ' → logprob: -22.750158309936523

Token 154: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -20.375
    4. '１２' → logprob: -20.75
    5. '012' → logprob: -21.0
    6. '۱۲' → logprob: -21.125
    7. '   ' → logprob: -21.375
    8. '१२' → logprob: -21.5
    9. '১২' → logprob: -22.25
    10. '1' → logprob: -22.875

Token 155: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1269282102584839
    2. 'and' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.876928329467773
    4. 'if' → logprob: -18.751928329467773
    5. '```' → logprob: -19.001928329467773
    6. '0' → logprob: -19.501928329467773
    7. '12' → logprob: -19.501928329467773
    8. ' if' → logprob: -19.626928329467773
    9. '	and' → logprob: -19.751928329467773
    10. ',' → logprob: -19.751928329467773

Token 156: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22557684779167175
    2. '0' → logprob: -1.6005768775939941
    3. '12' → logprob: -8.725576400756836
    4. ' ' → logprob: -13.475576400756836
    5. '  ' → logprob: -15.725576400756836
    6. ' 
' → logprob: -16.850576400756836
    7. '    ' → logprob: -16.975576400756836
    8. '   ' → logprob: -17.225576400756836
    9. '```' → logprob: -17.225576400756836
    10. '<|end|>' → logprob: -17.225576400756836

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011402154341340065
    2. ' ' → logprob: -7.251140117645264
    3. '12' → logprob: -7.751140117645264
    4. 'ny' → logprob: -19.501140594482422
    5. ' ny' → logprob: -20.501140594482422
    6. '   ' → logprob: -20.876140594482422
    7. '```' → logprob: -21.126140594482422
    8. '012' → logprob: -21.376140594482422
    9. '6' → logprob: -21.751140594482422
    10. '
' → logprob: -21.751140594482422

Token 158: ' <=' (ID: 5017)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.9337480664253235
    2. 'ny' → logprob: -1.4337480068206787
    3. ' ' → logprob: -2.1837480068206787
    4. ' <' → logprob: -2.1837480068206787
    5. ' ny' → logprob: -2.3087480068206787
    6. '<' → logprob: -3.1837480068206787
    7. 'y' → logprob: -7.558748245239258
    8. '<n' → logprob: -7.558748245239258
    9. ' <=' → logprob: -7.683748245239258
    10. '   ' → logprob: -9.183748245239258

Token 159: ' ny' (ID: 4423)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.003539013210684061
    2. ' ' → logprob: -5.753539085388184
    3. 'ny' → logprob: -8.128539085388184
    4. ' ny' → logprob: -9.628539085388184
    5. '
' → logprob: -15.378539085388184
    6. 'nx' → logprob: -15.878539085388184
    7. '   ' → logprob: -17.253538131713867
    8. ' nx' → logprob: -17.628538131713867
    9. '```' → logprob: -18.253538131713867
    10. ' ' → logprob: -18.503538131713867

Token 160: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14272910356521606
    2. '<' → logprob: -2.0177290439605713
    3. '12' → logprob: -10.017728805541992
    4. ' ' → logprob: -11.767728805541992
    5. '<|end|>' → logprob: -15.142728805541992
    6. '<int' → logprob: -15.267728805541992
    7. '<len' → logprob: -15.517728805541992
    8. '<n' → logprob: -15.642728805541992
    9. '<size' → logprob: -15.767728805541992
    10. '<class' → logprob: -15.892728805541992

Token 161: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.009756204672157764
    2. ' ' → logprob: -4.634756088256836
    3. '   ' → logprob: -16.884756088256836
    4. '012' → logprob: -17.009756088256836
    5. '```' → logprob: -17.384756088256836
    6. '1' → logprob: -17.509756088256836
    7. '  ' → logprob: -17.759756088256836
    8. '۱۲' → logprob: -19.009756088256836
    9. '`' → logprob: -19.259756088256836
    10. '１２' → logprob: -19.322256088256836

Token 162: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -18.75002098083496
    4. '012' → logprob: -18.87502098083496
    5. '   ' → logprob: -19.37502098083496
    6. '' → logprob: -20.75002098083496
    7. '۱۲' → logprob: -20.93752098083496
    8. '
' → logprob: -21.06252098083496
    9. '१२' → logprob: -21.18752098083496
    10. '1' → logprob: -21.25002098083496

Token 163: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029752103611826897
    2. 'and' → logprob: -3.529752016067505
    3. ' ' → logprob: -14.029751777648926
    4. ':' → logprob: -15.404751777648926
    5. '	and' → logprob: -15.529751777648926
    6. '                       ' → logprob: -15.654751777648926
    7. '                           ' → logprob: -16.404752731323242
    8. ':
' → logprob: -17.279752731323242
    9. '                   ' → logprob: -17.279752731323242
    10. '                        ' → logprob: -17.779752731323242

Token 164: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0947811603546143
    2. ' grid' → logprob: -1.2197811603546143
    3. 'grid' → logprob: -1.2197811603546143
    4. 'not' → logprob: -2.5947811603546143
    5. '(grid' → logprob: -9.344780921936035
    6. ' ' → logprob: -12.094780921936035
    7. '	grid' → logprob: -12.094780921936035
    8. '(not' → logprob: -12.469780921936035
    9. ' ' → logprob: -12.594780921936035
    10. 'visited' → logprob: -12.782280921936035

Token 165: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.023245712742209435
    2. ' visited' → logprob: -3.7732458114624023
    3. '<|end|>' → logprob: -16.148244857788086
    4. 'Visited' → logprob: -16.523244857788086
    5. '
' → logprob: -18.398244857788086
    6. 'visit' → logprob: -18.523244857788086
    7. ' ' → logprob: -18.648244857788086
    8. '   ' → logprob: -19.648244857788086
    9. ' ' → logprob: -20.023244857788086
    10. 'vis' → logprob: -20.023244857788086

Token 166: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0921942703134846e-05
    2. '[' → logprob: -11.62501049041748
    3. '```' → logprob: -14.25001049041748
    4. '(nx' → logprob: -14.87501049041748
    5. ' [' → logprob: -15.37501049041748
    6. 'nx' → logprob: -15.62501049041748
    7. '

' → logprob: -15.75001049041748
    8. '[
' → logprob: -16.125011444091797
    9. '][' → logprob: -16.625011444091797
    10. '[x' → logprob: -16.875011444091797

Token 167: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.080963092041202e-06
    2. '[n' → logprob: -12.875004768371582
    3. '[' → logprob: -13.500004768371582
    4. '][' → logprob: -14.125004768371582
    5. 'w' → logprob: -16.2500057220459
    6. '```' → logprob: -16.3750057220459
    7. 'y' → logprob: -17.7500057220459
    8. '[x' → logprob: -18.0000057220459
    9. 'z' → logprob: -19.2500057220459
    10. ']' → logprob: -19.6250057220459

Token 168: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10071241855621338
    2. '[n' → logprob: -2.350712299346924
    3. '[' → logprob: -7.725712299346924
    4. ' ][' → logprob: -10.600712776184082
    5. ']' → logprob: -10.850712776184082
    6. '"][' → logprob: -11.725712776184082
    7. ''][' → logprob: -12.350712776184082
    8. '(n' → logprob: -13.100712776184082
    9. '(nx' → logprob: -14.225712776184082
    10. ']][' → logprob: -14.475712776184082

Token 169: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -5.9153885558771435e-06
    2. ' ny' → logprob: -12.250005722045898
    3. 'n' → logprob: -14.750005722045898
    4. 'y' → logprob: -14.875005722045898
    5. '][' → logprob: -15.500005722045898
    6. '[' → logprob: -16.5000057220459
    7. 'nx' → logprob: -17.8750057220459
    8. ']' → logprob: -18.0000057220459
    9. '```' → logprob: -18.0000057220459
    10. 'yn' → logprob: -18.6250057220459

Token 170: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06197037547826767
    2. 'and' → logprob: -2.8119704723358154
    3. ' ' → logprob: -13.811970710754395
    4. ']' → logprob: -13.811970710754395
    5. '	and' → logprob: -15.936970710754395
    6. '           ' → logprob: -16.186969757080078
    7. '<|end|>' → logprob: -16.561969757080078
    8. '       ' → logprob: -16.811969757080078
    9. '        ' → logprob: -17.186969757080078
    10. '```' → logprob: -17.561969757080078

Token 171: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759444236755371
    2. 'and' → logprob: -0.8259444236755371
    3. ' ' → logprob: -13.075944900512695
    4. '           ' → logprob: -14.575944900512695
    5. '	and' → logprob: -14.575944900512695
    6. '            ' → logprob: -14.950944900512695
    7. '          ' → logprob: -15.075944900512695
    8. '               ' → logprob: -15.325944900512695
    9. '        ' → logprob: -15.325944900512695
    10. '   ' → logprob: -15.950944900512695

Token 172: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.575949490070343
    2. 'grid' → logprob: -0.825949490070343
    3. '(grid' → logprob: -12.200949668884277
    4. '	grid' → logprob: -12.450949668884277
    5. ' ' → logprob: -14.950949668884277
    6. ':grid' → logprob: -14.950949668884277
    7. '.grid' → logprob: -15.950949668884277
    8. '   ' → logprob: -15.950949668884277
    9. '/grid' → logprob: -16.45094871520996
    10. ' ' → logprob: -16.95094871520996

Token 173: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.253090865968261e-06
    2. '][' → logprob: -12.875009536743164
    3. '[' → logprob: -13.000009536743164
    4. '[
' → logprob: -13.375009536743164
    5. ' [' → logprob: -14.250009536743164
    6. '```' → logprob: -14.250009536743164
    7. '[x' → logprob: -15.125009536743164
    8. 'nx' → logprob: -15.500009536743164
    9. '
' → logprob: -15.625009536743164
    10. '	n' → logprob: -15.750009536743164

Token 174: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010238782269880176
    2. '[n' → logprob: -7.501023769378662
    3. '][' → logprob: -8.25102424621582
    4. '[x' → logprob: -8.50102424621582
    5. '[' → logprob: -12.25102424621582
    6. '```' → logprob: -14.62602424621582
    7. ']' → logprob: -14.75102424621582
    8. '[i' → logprob: -15.87602424621582
    9. '[
' → logprob: -15.87602424621582
    10. 'n' → logprob: -16.00102424621582

Token 175: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002466774603817612
    2. '[n' → logprob: -8.50024700164795
    3. ']' → logprob: -10.37524700164795
    4. ' ][' → logprob: -12.00024700164795
    5. '"][' → logprob: -13.50024700164795
    6. '[' → logprob: -13.50024700164795
    7. ''][' → logprob: -13.62524700164795
    8. '```' → logprob: -14.50024700164795
    9. ']
' → logprob: -15.12524700164795
    10. ']][' → logprob: -15.37524700164795

Token 176: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00030078491545282304
    2. 'nx' → logprob: -8.500300407409668
    3. 'y' → logprob: -10.875300407409668
    4. ' ny' → logprob: -11.000300407409668
    5. 'nj' → logprob: -11.000300407409668
    6. '][' → logprob: -11.125300407409668
    7. 'n' → logprob: -11.625300407409668
    8. '```' → logprob: -12.000300407409668
    9. '[n' → logprob: -12.625300407409668
    10. ''ny' → logprob: -12.750300407409668

Token 177: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0331035852432251
    2. ']==' → logprob: -3.6581034660339355
    3. '']' → logprob: -5.6581034660339355
    4. '==' → logprob: -6.1581034660339355
    5. ']=='' → logprob: -7.2831034660339355
    6. ' ==' → logprob: -8.283103942871094
    7. ' ]' → logprob: -9.408103942871094
    8. '']==' → logprob: -9.658103942871094
    9. '']=='' → logprob: -10.033103942871094
    10. '[' → logprob: -10.908103942871094

Token 178: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25667691230773926
    2. '==' → logprob: -1.5066769123077393
    3. '=='' → logprob: -5.38167667388916
    4. ' =='' → logprob: -10.00667667388916
    5. ''' → logprob: -10.63167667388916
    6. '[' → logprob: -10.75667667388916
    7. ']==' → logprob: -11.13167667388916
    8. '=' → logprob: -11.38167667388916
    9. ']' → logprob: -11.63167667388916
    10. '==
' → logprob: -12.88167667388916

Token 179: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029770279303193092
    2. ' '' → logprob: -3.5297703742980957
    3. '"' → logprob: -11.529769897460938
    4. '1' → logprob: -11.904769897460938
    5. ' ' → logprob: -13.654769897460938
    6. ' ' → logprob: -13.779769897460938
    7. '`' → logprob: -14.529769897460938
    8. '('' → logprob: -16.279769897460938
    9. ' 
' → logprob: -16.779769897460938
    10. ''s' → logprob: -16.779769897460938

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ''' → logprob: -11.875006675720215
    3. ' ' → logprob: -17.37500762939453
    4. ''s' → logprob: -18.37500762939453
    5. '```' → logprob: -19.37500762939453
    6. '0' → logprob: -19.87500762939453
    7. '`' → logprob: -19.87500762939453
    8. '' → logprob: -20.50000762939453
    9. '')' → logprob: -20.50000762939453
    10. '"' → logprob: -21.00000762939453

Token 181: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10064569115638733
    2. ':
' → logprob: -2.3506457805633545
    3. '):' → logprob: -8.225646018981934
    4. '):
' → logprob: -9.475646018981934
    5. '':' → logprob: -10.350646018981934
    6. '                       ' → logprob: -10.975646018981934
    7. ':
' → logprob: -11.350646018981934
    8. '                   ' → logprob: -11.475646018981934
    9. '                           ' → logprob: -12.225646018981934
    10. ':

' → logprob: -12.475646018981934

Token 182: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.12221533805131912
    2. '                       ' → logprob: -2.4972152709960938
    3. ':
' → logprob: -4.497215270996094
    4. '                   ' → logprob: -4.622215270996094
    5. ':' → logprob: -5.122215270996094
    6. '                               ' → logprob: -6.122215270996094
    7. '```' → logprob: -7.747215270996094
    8. '                            ' → logprob: -7.997215270996094
    9. ' :
' → logprob: -7.997215270996094
    10. '               ' → logprob: -7.997215270996094

Token 183: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.40555524826049805
    2. 'visited' (adapté à ' visited') → logprob: -1.655555248260498
    3. '                               ' → logprob: -2.530555248260498
    4. ' queue' → logprob: -3.030555248260498
    5. 'queue' → logprob: -5.655555248260498
    6. '                                   ' → logprob: -5.780555248260498
    7. '                           ' → logprob: -5.905555248260498
    8. '
' → logprob: -5.905555248260498
    9. '                                       ' → logprob: -7.655555248260498
    10. '                   ' → logprob: -8.030555725097656

Token 184: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.125006675720215
    3. ' [' → logprob: -14.375006675720215
    4. '```' → logprob: -15.375006675720215
    5. '[
' → logprob: -16.1250057220459
    6. '][' → logprob: -17.0000057220459
    7. '[x' → logprob: -17.3750057220459
    8. '[N' → logprob: -18.0000057220459
    9. '[next' → logprob: -18.5000057220459
    10. '\[' → logprob: -18.5000057220459

Token 185: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006474606227129698
    2. '[n' → logprob: -5.131474494934082
    3. '[x' → logprob: -7.756474494934082
    4. '][' → logprob: -9.631474494934082
    5. '[' → logprob: -10.131474494934082
    6. ' [' → logprob: -12.006474494934082
    7. ']' → logprob: -13.006474494934082
    8. '```' → logprob: -13.506474494934082
    9. '
' → logprob: -14.506474494934082
    10. ' x' → logprob: -14.756474494934082

Token 186: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.007040839642286301
    2. '][' → logprob: -5.007040977478027
    3. '[' → logprob: -8.257040977478027
    4. ' [' → logprob: -10.757040977478027
    5. '
' → logprob: -11.757040977478027
    6. '```' → logprob: -12.007040977478027
    7. ' ][' → logprob: -12.507040977478027
    8. ''][' → logprob: -12.632040977478027
    9. '   ' → logprob: -12.882040977478027
    10. '"][' → logprob: -13.007040977478027

Token 187: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.1129540279507637
    2. 'nx' → logprob: -2.2379541397094727
    3. 'n' → logprob: -10.112954139709473
    4. '[' → logprob: -10.862954139709473
    5. ' ny' → logprob: -10.862954139709473
    6. 'y' → logprob: -11.362954139709473
    7. 'nz' → logprob: -11.487954139709473
    8. '[n' → logprob: -11.737954139709473
    9. '(nx' → logprob: -11.737954139709473
    10. 'x' → logprob: -11.987954139709473

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010033934377133846
    2. ']=' → logprob: -7.001003265380859
    3. '=' → logprob: -9.50100326538086
    4. ' =' → logprob: -11.62600326538086
    5. 'True' → logprob: -12.62600326538086
    6. ' ]' → logprob: -13.00100326538086
    7. '[' → logprob: -13.62600326538086
    8. '=True' → logprob: -14.50100326538086
    9. ')' → logprob: -15.00100326538086
    10. '']' → logprob: -16.25100326538086

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933467388153076
    2. ' =' → logprob: -0.6933467388153076
    3. ']' → logprob: -8.693346977233887
    4. '=True' → logprob: -10.943346977233887
    5. '[' → logprob: -11.818346977233887
    6. ']=' → logprob: -12.068346977233887
    7. 'True' → logprob: -14.693346977233887
    8. ')' → logprob: -15.568346977233887
    9. ' ' → logprob: -15.568346977233887
    10. ',' → logprob: -17.44334602355957

Token 190: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03804149478673935
    2. ' True' → logprob: -3.288041591644287
    3. '(True' → logprob: -18.163042068481445
    4. '=True' → logprob: -20.038042068481445
    5. '.True' → logprob: -21.663042068481445
    6. ' Tru' → logprob: -22.913042068481445
    7. '1' → logprob: -23.038042068481445
    8. 'Tr' → logprob: -23.163042068481445
    9. ' ' → logprob: -23.538042068481445
    10. 'T' → logprob: -23.663042068481445

Token 191: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.01857784017920494
    2. '
' → logprob: -4.518578052520752
    3. '                            
' → logprob: -5.518578052520752
    4. '						' → logprob: -7.143578052520752
    5. '                            ' → logprob: -7.393578052520752
    6. ' queue' → logprob: -7.643578052520752
    7. ' 
' → logprob: -7.643578052520752
    8. ',' → logprob: -8.018577575683594
    9. '							
' → logprob: -9.143577575683594
    10. '  
' → logprob: -9.393577575683594

Token 192: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0011558164842426777
    2. '
' → logprob: -8.001155853271484
    3. ' queue' → logprob: -8.126155853271484
    4. '						' → logprob: -8.626155853271484
    5. '                            
' → logprob: -9.501155853271484
    6. '                            ' → logprob: -9.751155853271484
    7. '           ' → logprob: -10.251155853271484
    8. '                   ' → logprob: -10.251155853271484
    9. '                       ' → logprob: -10.626155853271484
    10. ' 
' → logprob: -10.876155853271484

Token 193: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -9.615255839889869e-05
    2. ' queue' → logprob: -9.250096321105957
    3. '	queue' → logprob: -21.12509536743164
    4. 'deque' → logprob: -21.12509536743164
    5. 'que' → logprob: -21.50009536743164
    6. '.queue' → logprob: -21.50009536743164
    7. 'enqueue' → logprob: -22.37509536743164
    8. '
' → logprob: -22.62509536743164
    9. '(queue' → logprob: -22.62509536743164
    10. '```' → logprob: -23.25009536743164

Token 194: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.037835580878891e-05
    2. '.extend' → logprob: -10.12505054473877
    3. '.' → logprob: -11.87505054473877
    4. '.enqueue' → logprob: -13.25005054473877
    5. '.p' → logprob: -14.25005054473877
    6. 'append' → logprob: -15.12505054473877
    7. '.app' → logprob: -15.87505054473877
    8. '.push' → logprob: -16.000049591064453
    9. '.put' → logprob: -16.375049591064453
    10. '.Append' → logprob: -16.625049591064453

Token 195: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.625009536743164
    3. '(((' → logprob: -16.875009536743164
    4. ' ((' → logprob: -17.500009536743164
    5. '(nx' → logprob: -19.250009536743164
    6. '(
' → logprob: -20.250009536743164
    7. '([(' → logprob: -20.875009536743164
    8. '(([' → logprob: -21.375009536743164
    9. '```' → logprob: -21.375009536743164
    10. '[(' → logprob: -21.500009536743164

Token 196: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0001745775662129745
    2. ' nx' → logprob: -8.750174522399902
    3. '(nx' → logprob: -11.500174522399902
    4. 'n' → logprob: -12.125174522399902
    5. '
' → logprob: -15.625174522399902
    6. '	n' → logprob: -16.12517547607422
    7. '```' → logprob: -16.12517547607422
    8. '   ' → logprob: -16.25017547607422
    9. '[n' → logprob: -18.00017547607422
    10. ' ' → logprob: -18.00017547607422

Token 197: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.3572543263435364
    2. ',' → logprob: -1.2322542667388916
    3. '(nx' → logprob: -5.857254505157471
    4. '[n' → logprob: -6.107254505157471
    5. 'n' → logprob: -6.732254505157471
    6. 'nx' → logprob: -6.857254505157471
    7. 'x' → logprob: -7.232254505157471
    8. '[' → logprob: -8.357254028320312
    9. ' ,' → logprob: -8.607254028320312
    10. '(n' → logprob: -9.107254028320312

Token 198: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0002988776541315019
    2. ' ny' → logprob: -8.125298500061035
    3. 'nyi' → logprob: -13.500298500061035
    4. 'y' → logprob: -15.750298500061035
    5. 'Ny' → logprob: -15.875298500061035
    6. ' ' → logprob: -15.875298500061035
    7. '```' → logprob: -16.00029945373535
    8. 'nym' → logprob: -16.12529945373535
    9. '   ' → logprob: -16.12529945373535
    10. ''ny' → logprob: -16.50029945373535

Token 199: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00040540905320085585
    2. '))
' → logprob: -8.000405311584473
    3. ')' → logprob: -9.625405311584473
    4. ')))' → logprob: -12.625405311584473
    5. ' ))' → logprob: -15.125405311584473
    6. '))

' → logprob: -16.25040626525879
    7. '))
' → logprob: -16.62540626525879
    8. ')
' → logprob: -16.75040626525879
    9. '));' → logprob: -16.87540626525879
    10. '                       ' → logprob: -16.87540626525879

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010329431854188442
    2. '
' → logprob: -5.260329246520996
    3. '<|end|>' → logprob: -6.260329246520996
    4. 'return' → logprob: -6.760329246520996
    5. '    
' → logprob: -8.010329246520996
    6. '               ' → logprob: -8.010329246520996
    7. '```' → logprob: -8.010329246520996
    8. ')' → logprob: -8.260329246520996
    9. ' return' → logprob: -8.760329246520996
    10. '	return' → logprob: -9.135329246520996

Token 201: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.048136115074157715
    2. '   ' → logprob: -3.5481362342834473
    3. ' return' → logprob: -4.048136234283447
    4. '	return' → logprob: -7.673136234283447
    5. ':return' → logprob: -9.548135757446289
    6. '       ' → logprob: -9.673135757446289
    7. '
' → logprob: -10.048135757446289
    8. ' ' → logprob: -10.298135757446289
    9. '    
' → logprob: -10.423135757446289
    10. '```' → logprob: -10.923135757446289

Token 202: ' islands' (ID: 45758)
  Prédit: ' islands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' islands' → logprob: -0.5759400725364685
    2. 'is' → logprob: -0.8259400725364685
    3. ' is' → logprob: -14.700940132141113
    4. '```' → logprob: -16.450939178466797
    5. 'int' → logprob: -17.200939178466797
    6. '   ' → logprob: -17.825939178466797
    7. ' ' → logprob: -17.825939178466797
    8. ' island' → logprob: -17.950939178466797
    9. ' ' → logprob: -17.950939178466797
    10. '_is' → logprob: -18.575939178466797

Token 203: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002564122434705496
    2. '\n' → logprob: -6.377563953399658
    3. '

' → logprob: -8.127564430236816
    4. '<|end|>' → logprob: -9.127564430236816
    5. '  
' → logprob: -9.377564430236816
    6. 'n' → logprob: -9.627564430236816
    7. '```' → logprob: -9.877564430236816
    8. ' 
' → logprob: -10.002564430236816
    9. '    
' → logprob: -10.252564430236816
    10. '' → logprob: -10.252564430236816

Token 204: 'data' (ID: 1074)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8470719456672668
    2. 'grid' → logprob: -1.222071886062622
    3. '
' → logprob: -1.972071886062622
    4. '\n' → logprob: -2.472071886062622
    5. 'for' → logprob: -3.722071886062622
    6. '#' → logprob: -4.597072124481201
    7. 'def' → logprob: -5.347072124481201
    8. '  
' → logprob: -5.847072124481201
    9. ' 
' → logprob: -6.097072124481201
    10. '\' → logprob: -6.222072124481201

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1617502123117447
    2. '=' → logprob: -1.9117501974105835
    3. ' ' → logprob: -7.661750316619873
    4. '[' → logprob: -7.661750316619873
    5. '[:]' → logprob: -8.536749839782715
    6. '_' → logprob: -9.411749839782715
    7. '=[]' → logprob: -9.661749839782715
    8. '.' → logprob: -9.786749839782715
    9. '_lines' → logprob: -10.411749839782715
    10. ',' → logprob: -10.536749839782715

Token 206: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6997990012168884
    2. '[' → logprob: -0.8247990012168884
    3. 'stdin' → logprob: -3.324799060821533
    4. ' [' → logprob: -4.074799060821533
    5. ' []' → logprob: -5.074799060821533
    6. '[list' → logprob: -6.449799060821533
    7. 'sys' → logprob: -7.074799060821533
    8. '[]
' → logprob: -7.949799060821533
    9. 'list' → logprob: -7.949799060821533
    10. '[start' → logprob: -8.074798583984375

Token 207: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002500748261809349
    2. ' for' → logprob: -6.252500534057617
    3. 'while' → logprob: -7.627500534057617
    4. 'line' → logprob: -9.752500534057617
    5. 'try' → logprob: -10.627500534057617
    6. ' while' → logprob: -13.377500534057617
    7. ' line' → logprob: -14.127500534057617
    8. '
' → logprob: -15.502500534057617
    9. 'n' → logprob: -16.627500534057617
    10. 'row' → logprob: -16.752500534057617

Token 208: ' line' (ID: 2543)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5389949083328247
    2. ' line' → logprob: -1.0389949083328247
    3. '_' → logprob: -2.788994789123535
    4. 'line' → logprob: -6.663994789123535
    5. '_line' → logprob: -9.413994789123535
    6. ' ' → logprob: -11.663994789123535
    7. '	line' → logprob: -13.163994789123535
    8. ' l' → logprob: -13.413994789123535
    9. ' i' → logprob: -13.788994789123535
    10. 'l' → logprob: -14.413994789123535

Token 209: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028117671608924866
    2. 'in' → logprob: -5.877811908721924
    3. ' ' → logprob: -12.127811431884766
    4. '	in' → logprob: -15.127811431884766
    5. ' ' → logprob: -15.127811431884766
    6. 'line' → logprob: -15.252811431884766
    7. '_' → logprob: -16.127811431884766
    8. 'import' → logprob: -16.252811431884766
    9. ' =' → logprob: -16.502811431884766
    10. '=' → logprob: -16.502811431884766

Token 210: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.01266056764870882
    2. ' stdin' → logprob: -4.387660503387451
    3. '(stdin' → logprob: -8.88766098022461
    4. '.stdin' → logprob: -11.38766098022461
    5. 'range' → logprob: -14.63766098022461
    6. ' range' → logprob: -15.26266098022461
    7. '```' → logprob: -15.26266098022461
    8. 'sys' → logprob: -16.01266098022461
    9. 'st' → logprob: -16.13766098022461
    10. 'iter' → logprob: -16.51266098022461

Token 211: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.23510892689228058
    2. ':' → logprob: -1.6101089715957642
    3. '.strip' → logprob: -5.610108852386475
    4. '.rstrip' → logprob: -6.110108852386475
    5. '.readlines' → logprob: -6.360108852386475
    6. 'rstrip' → logprob: -7.235108852386475
    7. ' in' → logprob: -7.735108852386475
    8. ' readline' → logprob: -7.860108852386475
    9. 'strip' → logprob: -8.860109329223633
    10. '.' → logprob: -9.110109329223633

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05972891300916672
    2. ' line' → logprob: -3.1847288608551025
    3. ' data' → logprob: -4.434729099273682
    4. ' if' → logprob: -5.434729099273682
    5. ' lines' → logprob: -8.434728622436523
    6. 'data' → logprob: -10.184728622436523
    7. '    
' → logprob: -10.309728622436523
    8. '.strip' → logprob: -11.059728622436523
    9. ' readline' → logprob: -11.184728622436523
    10. '.rstrip' → logprob: -11.684728622436523

Token 213: ' l' (ID: 305)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06818772107362747
    2. 'line' → logprob: -3.318187713623047
    3. ' if' → logprob: -3.693187713623047
    4. '   ' → logprob: -5.818187713623047
    5. 'if' → logprob: -7.443187713623047
    6. ' stripped' → logprob: -7.443187713623047
    7. ' data' → logprob: -7.818187713623047
    8. 'data' → logprob: -8.818187713623047
    9. 'strip' → logprob: -10.318187713623047
    10. ' lines' → logprob: -10.693187713623047

Token 214: '=line' (ID: 192488)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.4509638547897339
    2. '=line' → logprob: -1.0759638547897339
    3. '=' → logprob: -4.700963973999023
    4. ' =' → logprob: -4.950963973999023
    5. 'line' → logprob: -5.200963973999023
    6. '   ' → logprob: -9.075963973999023
    7. ' line' → logprob: -9.700963973999023
    8. '(line' → logprob: -9.700963973999023
    9. 'i' → logprob: -10.950963973999023
    10. 'l' → logprob: -11.200963973999023

Token 215: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.6601786613464355
    2. 'strip' → logprob: -0.9101786613464355
    3. 'trip' → logprob: -3.5351786613464355
    4. '.rstrip' → logprob: -3.6601786613464355
    5. 'ip' → logprob: -4.1601786613464355
    6. 'rip' → logprob: -5.1601786613464355
    7. 'rstrip' → logprob: -6.2851786613464355
    8. 'ine' → logprob: -6.6601786613464355
    9. '_strip' → logprob: -7.1601786613464355
    10. '=' → logprob: -8.410179138183594

Token 216: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -5.3596853831550106e-05
    2. '(' → logprob: -11.000053405761719
    3. '().' → logprob: -11.500053405761719
    4. '())' → logprob: -12.000053405761719
    5. '()`' → logprob: -12.375053405761719
    6. '()==' → logprob: -12.625053405761719
    7. '()>' → logprob: -13.000053405761719
    8. '()]' → logprob: -13.375053405761719
    9. '();' → logprob: -13.625053405761719
    10. '()<' → logprob: -13.750053405761719

Token 217: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5650811791419983
    2. 'if' → logprob: -1.1900811195373535
    3. '   ' → logprob: -2.0650811195373535
    4. '<|end|>' → logprob: -7.5650811195373535
    5. ',' → logprob: -10.565081596374512
    6. ' ' → logprob: -11.065081596374512
    7. '	if' → logprob: -11.065081596374512
    8. ':
' → logprob: -11.315081596374512
    9. ';if' → logprob: -11.440081596374512
    10. '
' → logprob: -11.565081596374512

Token 218: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002398938377154991
    2. ' if' → logprob: -8.375240325927734
    3. '   ' → logprob: -11.625240325927734
    4. 'data' → logprob: -15.125240325927734
    5. 'If' → logprob: -16.750240325927734
    6. '```' → logprob: -17.250240325927734
    7. '	if' → logprob: -18.125240325927734
    8. '
' → logprob: -18.875240325927734
    9. ';if' → logprob: -19.000240325927734
    10. '    
' → logprob: -19.000240325927734

Token 219: ' l' (ID: 305)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.334993451833725
    2. 'l' → logprob: -1.5849934816360474
    3. ' l' → logprob: -2.959993362426758
    4. 'not' → logprob: -3.584993362426758
    5. 'len' → logprob: -9.084993362426758
    6. ' len' → logprob: -10.334993362426758
    7. ' ' → logprob: -13.209993362426758
    8. '!' → logprob: -14.209993362426758
    9. ' ' → logprob: -14.209993362426758
    10. 'n't' → logprob: -14.584993362426758

Token 220: '=='' (ID: 20651)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18093518912792206
    2. ' ==' → logprob: -1.8059351444244385
    3. ':' → logprob: -6.930935382843018
    4. '=='' → logprob: -8.80593490600586
    5. '=="' → logprob: -10.55593490600586
    6. '=' → logprob: -11.80593490600586
    7. ' !=' → logprob: -12.05593490600586
    8. '!=' → logprob: -12.30593490600586
    9. '==
' → logprob: -12.30593490600586
    10. '()==' → logprob: -12.55593490600586

Token 221: '':' (ID: 2337)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015185370109975338
    2. 'end' → logprob: -5.015185356140137
    3. '#' → logprob: -5.515185356140137
    4. ''' → logprob: -5.640185356140137
    5. 'END' → logprob: -8.890185356140137
    6. '':' → logprob: -8.890185356140137
    7. '```' → logprob: -8.890185356140137
    8. '"' → logprob: -9.390185356140137
    9. '000' → logprob: -9.890185356140137
    10. '-' → logprob: -10.015185356140137

Token 222: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09423407912254333
    2. 'break' → logprob: -2.594233989715576
    3. ' break' → logprob: -4.719233989715576
    4. '   ' → logprob: -5.594233989715576
    5. '	break' → logprob: -5.969233989715576
    6. '```' → logprob: -11.469234466552734
    7. '
' → logprob: -12.344234466552734
    8. '           ' → logprob: -12.469234466552734
    9. '	' → logprob: -12.969234466552734
    10. ' ' → logprob: -13.094234466552734

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019712358713150024
    2. 'break' → logprob: -4.019712448120117
    3. ' break' → logprob: -7.144712448120117
    4. '   ' → logprob: -7.519712448120117
    5. '	break' → logprob: -8.394712448120117
    6. '           ' → logprob: -13.144712448120117
    7. '	' → logprob: -13.769712448120117
    8. ' ' → logprob: -15.269712448120117
    9. '_break' → logprob: -15.644712448120117
    10. '	   ' → logprob: -16.144712448120117

Token 224: ' if' (ID: 538)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0010899738408625126
    2. ' break' → logprob: -7.001090049743652
    3. '       ' → logprob: -8.751090049743652
    4. '   ' → logprob: -11.251090049743652
    5. '	break' → logprob: -12.001090049743652
    6. 'continue' → logprob: -14.126090049743652
    7. '```' → logprob: -16.626089096069336
    8. '           ' → logprob: -17.001089096069336
    9. 'b' → logprob: -17.501089096069336
    10. '_break' → logprob: -17.751089096069336

Token 225: ' data' (ID: 1238)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.39323559403419495
    2. 'not' → logprob: -1.8932355642318726
    3. 'data' → logprob: -2.143235683441162
    4. ' data' → logprob: -3.268235683441162
    5. 'len' → logprob: -4.268235683441162
    6. ' len' → logprob: -5.268235683441162
    7. 'count' → logprob: -10.893235206604004
    8. ' ' → logprob: -12.393235206604004
    9. 'break' → logprob: -13.205735206604004
    10. '(not' → logprob: -13.455735206604004

Token 226: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5822360515594482
    2. '==' → logprob: -0.8322360515594482
    3. ' ==' → logprob: -5.707236289978027
    4. ':
' → logprob: -6.082236289978027
    5. '=' → logprob: -8.457236289978027
    6. '):' → logprob: -8.832236289978027
    7. '<|end|>' → logprob: -9.457236289978027
    8. '!=' → logprob: -10.332236289978027
    9. ']==' → logprob: -10.457236289978027
    10. ')==' → logprob: -10.457236289978027

Token 227: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022101769223809242
    2. '           ' → logprob: -4.272101879119873
    3. '
' → logprob: -5.647101879119873
    4. '   ' → logprob: -6.397101879119873
    5. 'break' → logprob: -7.147101879119873
    6. '```' → logprob: -7.522101879119873
    7. ':
' → logprob: -7.897101879119873
    8. 'print' → logprob: -8.022101402282715
    9. '        
' → logprob: -8.522101402282715
    10. ' break' → logprob: -8.897101402282715

Token 228: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03810356929898262
    2. ' print' → logprob: -3.2881035804748535
    3. '
' → logprob: -10.288103103637695
    4. '   ' → logprob: -10.663103103637695
    5. '	print' → logprob: -13.788103103637695
    6. ' break' → logprob: -14.163103103637695
    7. 'break' → logprob: -14.288103103637695
    8. 'result' → logprob: -14.663103103637695
    9. 'count' → logprob: -14.663103103637695
    10. '```' → logprob: -14.788103103637695

Token 229: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -2.3438327843905427e-05
    2. '(' → logprob: -11.25002384185791
    3. 'count' → logprob: -11.50002384185791
    4. '(len' → logprob: -15.37502384185791
    5. ' count' → logprob: -17.625022888183594
    6. '=count' → logprob: -19.250022888183594
    7. ',count' → logprob: -19.375022888183594
    8. '(c' → logprob: -19.625022888183594
    9. '(
' → logprob: -20.125022888183594
    10. ' (' → logprob: -20.125022888183594

Token 230: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -2.45848218582978e-06
    2. 'is' → logprob: -13.62500286102295
    3. '(data' → logprob: -14.12500286102295
    4. 'Is' → logprob: -15.12500286102295
    5. '_' → logprob: -15.50000286102295
    6. '(is' → logprob: -17.875001907348633
    7. '_data' → logprob: -18.000001907348633
    8. '```' → logprob: -18.000001907348633
    9. 'data' → logprob: -18.250001907348633
    10. ')' → logprob: -18.375001907348633

Token 231: 'lands' (ID: 10186)
  Prédit: 'lands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lands' → logprob: -0.00026419671485200524
    2. 'ands' → logprob: -8.625264167785645
    3. 'land' → logprob: -10.000264167785645
    4. '(data' → logprob: -11.750264167785645
    5. '[' → logprob: -12.625264167785645
    6. '(' → logprob: -12.875264167785645
    7. 'l' → logprob: -12.875264167785645
    8. '```' → logprob: -12.875264167785645
    9. 'data' → logprob: -13.125264167785645
    10. '1' → logprob: -13.500264167785645

Token 232: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.375015258789062
    3. ' (' → logprob: -12.625015258789062
    4. ',data' → logprob: -16.500015258789062
    5. ')data' → logprob: -17.125015258789062
    6. '(grid' → logprob: -17.250015258789062
    7. ')' → logprob: -17.625015258789062
    8. '[data' → logprob: -18.000015258789062
    9. '
' → logprob: -18.000015258789062
    10. 'data' → logprob: -18.375015258789062

Token 233: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2921997606754303
    2. '))
' → logprob: -2.0421998500823975
    3. ')' → logprob: -2.2921998500823975
    4. '))' → logprob: -3.7921998500823975
    5. ')
' → logprob: -10.917200088500977
    6. ' )
' → logprob: -11.917200088500977
    7. '())
' → logprob: -12.292200088500977
    8. ')`
' → logprob: -12.292200088500977
    9. '))
' → logprob: -12.792200088500977
    10. ')')
' → logprob: -13.167200088500977

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3663109540939331
    2. '       ' → logprob: -1.366310954093933
    3. 'data' → logprob: -3.8663110733032227
    4. ' data' → logprob: -3.8663110733032227
    5. '   ' → logprob: -5.116311073303223
    6. '        
' → logprob: -6.366311073303223
    7. '
' → logprob: -7.241311073303223
    8. '            
' → logprob: -7.491311073303223
    9. '	data' → logprob: -7.991311073303223
    10. '	       ' → logprob: -9.366311073303223

Token 235: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.018164340406656265
    2. ' data' → logprob: -4.018164157867432
    3. '   ' → logprob: -11.26816463470459
    4. '           ' → logprob: -13.89316463470459
    5. '	data' → logprob: -14.64316463470459
    6. '       ' → logprob: -16.518163681030273
    7. ' ' → logprob: -16.768163681030273
    8. '            
' → logprob: -17.643163681030273
    9. '_data' → logprob: -17.768163681030273
    10. '    ' → logprob: -17.768163681030273

Token 236: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002844576956704259
    2. '.clear' → logprob: -8.500284194946289
    3. '=[]' → logprob: -9.625284194946289
    4. ' =' → logprob: -11.250284194946289
    5. '.=' → logprob: -13.500284194946289
    6. '[:]' → logprob: -15.500284194946289
    7. '＝' → logprob: -15.875284194946289
    8. '=}' → logprob: -16.37528419494629
    9. '.Clear' → logprob: -18.00028419494629
    10. 'clear' → logprob: -18.50028419494629

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003641049610450864
    2. '       ' → logprob: -6.503641128540039
    3. ' else' → logprob: -6.628641128540039
    4. 'else' → logprob: -7.128641128540039
    5. ' continue' → logprob: -12.128641128540039
    6. 'continue' → logprob: -12.378641128540039
    7. '           ' → logprob: -13.378641128540039
    8. 'elif' → logprob: -14.253641128540039
    9. '	else' → logprob: -15.128641128540039
    10. ' elif' → logprob: -15.503641128540039

Token 238: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04583899304270744
    2. ' else' → logprob: -3.2958390712738037
    3. '   ' → logprob: -4.920838832855225
    4. 'elif' → logprob: -7.670838832855225
    5. ' elif' → logprob: -12.795839309692383
    6. ' ' → logprob: -13.295839309692383
    7. 'continue' → logprob: -13.295839309692383
    8. '	else' → logprob: -13.670839309692383
    9. '  ' → logprob: -15.420839309692383
    10. ' continue' → logprob: -16.170839309692383

Token 239: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08475130796432495
    2. ':
' → logprob: -3.0847513675689697
    3. ':' → logprob: -3.7097513675689697
    4. ' data' → logprob: -4.959751129150391
    5. '   ' → logprob: -6.459751129150391
    6. ':data' → logprob: -7.209751129150391
    7. 'data' → logprob: -7.584751129150391
    8. '(data' → logprob: -7.834751129150391
    9. ',data' → logprob: -8.20975112915039
    10. '[data' → logprob: -8.45975112915039

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3291783332824707
    2. 'data' → logprob: -1.3291783332824707
    3. ' data' → logprob: -4.204178333282471
    4. '   ' → logprob: -7.079178333282471
    5. '	data' → logprob: -11.954177856445312
    6. '           ' → logprob: -12.454177856445312
    7. '      ' → logprob: -13.204177856445312
    8. '    ' → logprob: -14.579177856445312
    9. ' ' → logprob: -14.829177856445312
    10. '     ' → logprob: -14.829177856445312

Token 241: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.0032679035793989897
    2. ' data' → logprob: -5.753267765045166
    3. '   ' → logprob: -9.628268241882324
    4. '       ' → logprob: -10.753268241882324
    5. ' ' → logprob: -13.753268241882324
    6. '	data' → logprob: -14.378268241882324
    7. '           ' → logprob: -14.753268241882324
    8. '  ' → logprob: -15.003268241882324
    9. '[data' → logprob: -15.878268241882324
    10. '    ' → logprob: -16.128267288208008

Token 242: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.236549335066229e-05
    2. '.' → logprob: -10.750021934509277
    3. 'append' → logprob: -14.125021934509277
    4. '.extend' → logprob: -15.750021934509277
    5. '+=' → logprob: -18.375022888183594
    6. '.app' → logprob: -18.750022888183594
    7. '.Append' → logprob: -19.125022888183594
    8. '.ap' → logprob: -19.750022888183594
    9. '_append' → logprob: -20.000022888183594
    10. ' .' → logprob: -20.500022888183594

Token 243: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.06706533581018448
    2. '(list' → logprob: -2.8170652389526367
    3. '(line' → logprob: -5.317065238952637
    4. 'list' → logprob: -8.692065238952637
    5. 'l' → logprob: -11.942065238952637
    6. '(' → logprob: -13.317065238952637
    7. 'line' → logprob: -13.942065238952637
    8. '[l' → logprob: -14.942065238952637
    9. ' l' → logprob: -15.942065238952637
    10. ' list' → logprob: -17.067066192626953

Token 244: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4617256056226324e-05
    2. ')
' → logprob: -11.500014305114746
    3. '<|end|>' → logprob: -12.625014305114746
    4. ' )' → logprob: -15.000014305114746
    5. '')' → logprob: -15.250014305114746
    6. ')}' → logprob: -16.375015258789062
    7. '))' → logprob: -16.375015258789062
    8. ')return' → logprob: -16.500015258789062
    9. ')}}' → logprob: -16.500015258789062
    10. '())' → logprob: -16.875015258789062

Token 245: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00046928023220971227
    2. '
' → logprob: -8.750469207763672
    3. 'print' → logprob: -8.750469207763672
    4. '```' → logprob: -9.625469207763672
    5. '#' → logprob: -10.000469207763672
    6. 'for' → logprob: -10.375469207763672
    7. ' if' → logprob: -12.250469207763672
    8. '12' → logprob: -13.125469207763672
    9. '``' → logprob: -14.500469207763672
    10. 'If' → logprob: -14.750469207763672

Token 246: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.016036011278629303
    2. 'data' → logprob: -4.141036033630371
    3. ' ' → logprob: -14.016036033630371
    4. '	data' → logprob: -15.266036033630371
    5. ' dat' → logprob: -15.516036033630371
    6. ' ' → logprob: -15.891036033630371
    7. ' not' → logprob: -16.141035079956055
    8. ' len' → logprob: -16.766035079956055
    9. '(data' → logprob: -17.016035079956055
    10. '  ' → logprob: -17.516035079956055

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021869030315428972
    2. ':
' → logprob: -6.1271867752075195
    3. '):' → logprob: -14.37718677520752
    4. '=' → logprob: -15.00218677520752
    5. '!=' → logprob: -15.37718677520752
    6. '>' → logprob: -15.75218677520752
    7. ' :' → logprob: -15.87718677520752
    8. '==' → logprob: -16.002187728881836
    9. ':
' → logprob: -16.752187728881836
    10. ':

' → logprob: -16.752187728881836

Token 248: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4804253876209259
    2. '   ' → logprob: -0.9804253578186035
    3. ' print' → logprob: -5.1054253578186035
    4. '       ' → logprob: -9.105425834655762
    5. '	print' → logprob: -9.355425834655762
    6. '<|end|>' → logprob: -11.105425834655762
    7. ' ' → logprob: -11.480425834655762
    8. '.print' → logprob: -11.730425834655762
    9. '  ' → logprob: -11.980425834655762
    10. '```' → logprob: -12.105425834655762

Token 249: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.000001907348633
    3. '   ' → logprob: -21.750001907348633
    4. '	print' → logprob: -24.625001907348633
    5. '```' → logprob: -25.625001907348633
    6. '
' → logprob: -26.375001907348633
    7. '.print' → logprob: -26.625001907348633
    8. 'printf' → logprob: -27.125001907348633
    9. '(print' → logprob: -27.500001907348633
    10. ' ' → logprob: -27.500001907348633

Token 250: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.375001907348633
    3. 'count' → logprob: -15.625001907348633
    4. '<count' → logprob: -18.125001907348633
    5. '=count' → logprob: -18.625001907348633
    6. ' count' → logprob: -19.625001907348633
    7. '[count' → logprob: -20.000001907348633
    8. ',count' → logprob: -20.125001907348633
    9. '(c' → logprob: -20.250001907348633
    10. '$count' → logprob: -20.500001907348633

Token 251: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.0004521222144830972
    2. 'count' → logprob: -8.250452041625977
    3. 'is' → logprob: -8.875452041625977
    4. 'Is' → logprob: -10.125452041625977
    5. '_count' → logprob: -12.125452041625977
    6. '(count' → logprob: -12.750452041625977
    7. '```' → logprob: -14.375452041625977
    8. '(data' → logprob: -14.625452041625977
    9. 'data' → logprob: -15.000452041625977
    10. ')' → logprob: -15.250452041625977

Token 252: 'lands' (ID: 10186)
  Prédit: 'lands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lands' → logprob: -0.0005834150360897183
    2. 'ands' → logprob: -7.625583648681641
    3. 'land' → logprob: -10.25058364868164
    4. '_' → logprob: -10.62558364868164
    5. 's' → logprob: -10.87558364868164
    6. '[' → logprob: -12.75058364868164
    7. '(' → logprob: -12.87558364868164
    8. '_is' → logprob: -12.87558364868164
    9. 'al' → logprob: -13.62558364868164
    10. '(data' → logprob: -13.62558364868164

Token 253: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. ')data' → logprob: -17.125
    4. '[data' → logprob: -17.875
    5. '=data' → logprob: -18.875
    6. ')' → logprob: -18.875
    7. '(dat' → logprob: -19.875
    8. ',data' → logprob: -19.875
    9. ' (' → logprob: -20.125
    10. '<data' → logprob: -20.625

Token 254: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048588961362838745
    2. '))' → logprob: -3.048588991165161
    3. ')
' → logprob: -14.298588752746582
    4. '())' → logprob: -14.923588752746582
    5. ')))' → logprob: -15.173588752746582
    6. ' )' → logprob: -16.2985897064209
    7. '})' → logprob: -16.4235897064209
    8. ')`' → logprob: -16.5485897064209
    9. ')}' → logprob: -16.6735897064209
    10. '))
' → logprob: -16.9235897064209


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 252
Tokens correctement prédits (1ère position, stricte): 144
Tokens correctement prédits (1ère position, avec adaptation): 153
Tokens correctement prédits (top 10): 227
Précision stricte (1ère position): 57.14%
Précision adaptée (1ère position): 60.71%
Précision (top 10): 90.08%
================================================================================
