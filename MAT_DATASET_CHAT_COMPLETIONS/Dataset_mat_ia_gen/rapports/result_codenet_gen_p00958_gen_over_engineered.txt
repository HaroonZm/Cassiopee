================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import gcd
from collections import defaultdict
from typing import List, Tuple

class Point:
    __slots__ = ('x', 'y')
    def __init__(self, x: int, y: int):
        self.x = x
        self.y = y

    def vector_to(self, other: 'Point') -> Tuple[int,int]:
        dx = other.x - self.x
        dy = other.y - self.y
        return dx, dy

class Direction:
    __slots__ = ('dx', 'dy')
    def __init__(self, dx: int, dy: int):
        if dx == 0 and dy == 0:
            raise ValueError("Zero vector is invalid for a direction")
        g = gcd(dx, dy)
        dx //= g
        dy //= g
        # Normalize direction so that dx >= 0, or if dx==0 then dy>0
        if dx < 0:
            dx = -dx
            dy = -dy
        elif dx == 0 and dy < 0:
            dy = -dy
        self.dx = dx
        self.dy = dy

    def __hash__(self):
        return hash((self.dx, self.dy))

    def __eq__(self, other):
        return self.dx == other.dx and self.dy == other.dy

class PairingState:
    """
    Maintains the state of paired points during recursion.
    Uses an integer bitmask to represent taken points for memory and speed efficiency.
    """
    __slots__ = ('taken_mask',)
    def __init__(self, taken_mask: int = 0):
        self.taken_mask = taken_mask

    def is_taken(self, idx: int) -> bool:
        return (self.taken_mask & (1 << idx)) != 0

    def add_pair(self, i: int, j: int) -> 'PairingState':
        return PairingState(self.taken_mask | (1 << i) | (1 << j))

    def all_taken(self, total_points: int) -> bool:
        return self.taken_mask == (1 << total_points) - 1

class ParallelLinesSolver:
    def __init__(self, points: List[Point]):
        self.points = points
        self.n = len(points)
        self.memo = {}
    
    def max_parallel_pairs(self) -> int:
        initial_state = PairingState()
        return self._recurse(initial_state)

    def _count_parallel_pairs(self, directions: List[Direction]) -> int:
        """
        Given a list of directions (lines), count how many distinct pairs of lines are parallel.
        Parallel lines share the same normalized direction vector.
        Number of pairs in group of k lines = k*(k-1)/2
        """
        freq = defaultdict(int)
        for d in directions:
            freq[d] += 1
        total_pairs = 0
        for count in freq.values():
            if count > 1:
                total_pairs += count*(count-1)//2
        return total_pairs

    def _recurse(self, state: PairingState) -> int:
        if state.all_taken(self.n):
            # Base case: all points paired, no lines yet, so 0 parallel pairs
            # But this case never recurses here alone since we build lines as we go
            return 0
        if state.taken_mask in self.memo:
            return self.memo[state.taken_mask]

        # Find first untaken point for pairing to reduce complexity
        first = None
        for i in range(self.n):
            if not state.is_taken(i):
                first = i
                break

        max_parallel = 0
        # Try pairing first with each other untaken point j > first
        # For each possible pairing, recurse with updated state
        for j in range(first + 1, self.n):
            if not state.is_taken(j):
                new_state = state.add_pair(first, j)
                # We'll accumulate directions of all pairs formed in this path
                # To avoid passing complex structure, we gather directions by building bottom up
                sub_parallel = self._recurse_with_lines(new_state, [(first,j)])
                if sub_parallel > max_parallel:
                    max_parallel = sub_parallel

        self.memo[state.taken_mask] = max_parallel
        return max_parallel

    def _recurse_with_lines(self, state: PairingState, new_lines: List[Tuple[int,int]]) -> int:
        """
        Similar to _recurse, but we accumulate lines formed so far,
        and at full pairing, compute total parallel pairs from all lines.
        To do so efficiently, store all pairs formed in recursion as a list.
        Use memoization based on state + frozenset(lines) impossible (huge).
        Instead, we accumulate line directions incrementally:
        => We exploit that no three points are colinear, so line directions from previously formed lines are fixed.

        We solve by memoizing only state.taken_mask but passing lines as parameter.
        To avoid recomputing directions every time, we accumulate directions in call stack.
        """
        # Base case: all taken means all pairs formed: accumulate directions and compute parallel pairs
        if state.all_taken(self.n):
            directions = []
            for (i,j) in new_lines:
                dx, dy = self.points[i].vector_to(self.points[j])
                directions.append(Direction(dx,dy))
            return self._count_parallel_pairs(directions)

        # Memo key: since lines will differ, we store memo only on taken_mask, but pass lines down.
        # It means sub-optimal memo reuse, but problem constraints allow it.
        if state.taken_mask in self.memo:
            return self.memo[state.taken_mask]

        first = None
        for i in range(self.n):
            if not state.is_taken(i):
                first = i
                break

        max_parallel = 0
        # Try pairs with first point and another untaken j
        for j in range(first + 1, self.n):
            if not state.is_taken(j):
                next_state = state.add_pair(first, j)
                # Append this new pair and recurse deeper
                result = self._recurse_with_lines(next_state, new_lines + [(first, j)])
                if result > max_parallel:
                    max_parallel = result

        self.memo[state.taken_mask] = max_parallel
        return max_parallel

def read_input() -> List[Point]:
    m = int(input())
    pts = []
    for _ in range(m):
        x,y = map(int, input().strip().split())
        pts.append(Point(x,y))
    return pts

def main():
    points = read_input()
    solver = ParallelLinesSolver(points)
    print(solver.max_parallel_pairs())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' gcd' (ID: 106918)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.18853618204593658
    2. ' sqrt' → logprob: -1.9385361671447754
    3. 'pow' → logprob: -4.563536167144775
    4. 'sin' → logprob: -4.938536167144775
    5. 'pi' → logprob: -5.438536167144775
    6. ' pi' → logprob: -5.563536167144775
    7. ' sin' → logprob: -7.438536167144775
    8. 'ceil' → logprob: -7.563536167144775
    9. 'cos' → logprob: -8.563536643981934
    10. ' ceil' → logprob: -8.563536643981934

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032034965697675943
    2. '\(' → logprob: -6.003203392028809
    3. ' (' → logprob: -8.378203392028809
    4. '(
' → logprob: -8.878203392028809
    5. '\n' → logprob: -9.253203392028809
    6. '\' → logprob: -9.253203392028809
    7. ',' → logprob: -9.503203392028809
    8. '```' → logprob: -10.878203392028809
    9. 'a' → logprob: -11.003203392028809
    10. ' ' → logprob: -11.753203392028809

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036658354103565216
    2. '(
' → logprob: -3.41165828704834
    3. '\(' → logprob: -6.53665828704834
    4. '\n' → logprob: -7.66165828704834
    5. '\' → logprob: -8.28665828704834
    6. 'def' → logprob: -8.41165828704834
    7. '
' → logprob: -8.66165828704834
    8. '(

' → logprob: -8.91165828704834
    9. 'a' → logprob: -9.78665828704834
    10. ',' → logprob: -9.91165828704834

Token 6: ' collections' (ID: 22690)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.4957225024700165
    2. ' fractions' → logprob: -0.9957225322723389
    3. ' functools' → logprob: -3.995722532272339
    4. 'collections' → logprob: -6.87072229385376
    5. 'fun' → logprob: -7.74572229385376
    6. ' itertools' → logprob: -7.87072229385376
    7. ' collections' → logprob: -7.99572229385376
    8. 'math' → logprob: -8.120722770690918
    9. ' typing' → logprob: -8.995722770690918
    10. ' math' → logprob: -9.370722770690918

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6420282125473022
    2. 'import' → logprob: -0.7670282125473022
    3. '.' → logprob: -5.267028331756592
    4. '.Counter' → logprob: -6.142028331756592
    5. '```' → logprob: -7.267028331756592
    6. '<|end|>' → logprob: -7.517028331756592
    7. ' ' → logprob: -8.267027854919434
    8. ' defaultdict' → logprob: -8.642027854919434
    9. ' Counter' → logprob: -9.642027854919434
    10. '.import' → logprob: -9.767027854919434

Token 8: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.43580362200737
    2. ' defaultdict' → logprob: -1.8108036518096924
    3. ' deque' → logprob: -1.9358036518096924
    4. 'abc' → logprob: -3.6858036518096924
    5. ' abc' → logprob: -4.310803413391113
    6. ' Counter' → logprob: -5.935803413391113
    7. 'Counter' → logprob: -6.435803413391113
    8. 'default' → logprob: -6.685803413391113
    9. 'named' → logprob: -7.435803413391113
    10. 'de' → logprob: -8.310803413391113

Token 9: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6770565509796143
    2. '
' → logprob: -1.9270565509796143
    3. '\n' → logprob: -1.9270565509796143
    4. '\' → logprob: -2.5520565509796143
    5. 'd' → logprob: -2.8020565509796143
    6. '```' → logprob: -3.6770565509796143
    7. '

' → logprob: -4.802056312561035
    8. '
' → logprob: -4.802056312561035
    9. '' → logprob: -5.552056312561035
    10. '`' → logprob: -6.177056312561035

Token 10: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23662321269512177
    2. '

' → logprob: -2.3616232872009277
    3. 'def' → logprob: -2.4866232872009277
    4. '
' → logprob: -3.7366232872009277
    5. '```' → logprob: -5.236623287200928
    6. '\n' → logprob: -6.736623287200928
    7. 'd' → logprob: -7.236623287200928
    8. '\' → logprob: -7.736623287200928
    9. ' 

' → logprob: -8.11162281036377
    10. '' → logprob: -8.23662281036377

Token 11: ' typing' (ID: 34152)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.421688973903656
    2. ' typing' → logprob: -1.4216890335083008
    3. ' heap' → logprob: -2.546689033508301
    4. ' queue' → logprob: -4.671689033508301
    5. ' math' → logprob: -5.296689033508301
    6. ' functools' → logprob: -5.546689033508301
    7. 'heap' → logprob: -6.046689033508301
    8. 'typing' → logprob: -6.421689033508301
    9. ' sys' → logprob: -7.546689033508301
    10. ' ' → logprob: -7.671689033508301

Token 12: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4635327160358429
    2. ' import' → logprob: -1.0885326862335205
    3. '<|end|>' → logprob: -3.8385326862335205
    4. '.' → logprob: -5.4635329246521
    5. '```' → logprob: -5.7135329246521
    6. '_' → logprob: -6.4635329246521
    7. '_import' → logprob: -7.0885329246521
    8. '<|end|>' → logprob: -7.4635329246521
    9. ')' → logprob: -7.8385329246521
    10. ' as' → logprob: -7.8385329246521

Token 13: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.2876322269439697
    2. 'List' → logprob: -1.4126322269439697
    3. 'Default' → logprob: -6.162631988525391
    4. ' defaultdict' → logprob: -6.787631988525391
    5. 'Dict' → logprob: -6.912631988525391
    6. ' Default' → logprob: -7.037631988525391
    7. 'Counter' → logprob: -8.16263198852539
    8. ' Dict' → logprob: -8.28763198852539
    9. '```' → logprob: -8.91263198852539
    10. 'Any' → logprob: -9.41263198852539

Token 14: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6163969039916992
    2. '
' → logprob: -1.4913969039916992
    3. 'class' → logprob: -1.7413969039916992
    4. '

' → logprob: -3.116396903991699
    5. '```' → logprob: -4.491396903991699
    6. '
' → logprob: -6.616396903991699
    7. '\' → logprob: -6.991396903991699
    8. '\n' → logprob: -7.241396903991699
    9. '``' → logprob: -7.741396903991699
    10. '


' → logprob: -8.6163969039917

Token 15: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.14474885165691376
    2. 'Dict' → logprob: -2.7697489261627197
    3. 'deque' → logprob: -3.5197489261627197
    4. 'Optional' → logprob: -4.269748687744141
    5. 'Deque' → logprob: -4.394748687744141
    6. ' Tuple' → logprob: -4.644748687744141
    7. 'Set' → logprob: -6.269748687744141
    8. 'Counter' → logprob: -6.394748687744141
    9. 'int' → logprob: -7.644748687744141
    10. ' deque' → logprob: -7.769748687744141

Token 16: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1427796334028244
    2. 'd' → logprob: -2.892779588699341
    3. '```' → logprob: -3.392779588699341
    4. '\' → logprob: -3.517779588699341
    5. '\n' → logprob: -5.01777982711792
    6. '
' → logprob: -6.39277982711792
    7. 'class' → logprob: -6.89277982711792
    8. '``' → logprob: -7.01777982711792
    9. '' → logprob: -7.26777982711792
    10. '`' → logprob: -7.51777982711792

Token 17: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07306856662034988
    2. 'd' → logprob: -3.573068618774414
    3. 'class' → logprob: -3.573068618774414
    4. '```' → logprob: -4.448068618774414
    5. 'de' → logprob: -6.323068618774414
    6. '\' → logprob: -7.948068618774414
    7. '
' → logprob: -8.448068618774414
    8. '`' → logprob: -9.198068618774414
    9. '``' → logprob: -9.323068618774414
    10. '\n' → logprob: -10.323068618774414

Token 18: ' Point' (ID: 9971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07323875278234482
    2. ' My' → logprob: -3.6982388496398926
    3. ' G' → logprob: -3.9482388496398926
    4. ' Factor' → logprob: -4.823238849639893
    5. ' Eu' → logprob: -6.073238849639893
    6. ' Space' → logprob: -6.073238849639893
    7. ' Graph' → logprob: -6.448238849639893
    8. ' gcd' → logprob: -6.573238849639893
    9. ' ‌' → logprob: -7.323238849639893
    10. ' Vector' → logprob: -7.323238849639893

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04914431646466255
    2. '(' → logprob: -3.0491442680358887
    3. ' :' → logprob: -7.799144268035889
    4. '<|end|>' → logprob: -10.549144744873047
    5. '(:' → logprob: -10.799144744873047
    6. '.' → logprob: -10.924144744873047
    7. '():' → logprob: -11.049144744873047
    8. '[' → logprob: -11.299144744873047
    9. ':**' → logprob: -11.549144744873047
    10. 's' → logprob: -11.674144744873047

Token 20: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5828621983528137
    2. '(' → logprob: -1.082862138748169
    3. '   ' → logprob: -2.832862138748169
    4. ' ' → logprob: -3.582862138748169
    5. ' :' → logprob: -4.832862377166748
    6. ' (' → logprob: -5.332862377166748
    7. '<|end|>' → logprob: -6.832862377166748
    8. '    ' → logprob: -7.207862377166748
    9. '  ' → logprob: -7.457862377166748
    10. ')' → logprob: -8.33286190032959

Token 21: ' __' (ID: 2516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5447004437446594
    2. '   ' → logprob: -1.4197003841400146
    3. ' ' → logprob: -2.1697003841400146
    4. '    ' → logprob: -3.5447003841400146
    5. ' (' → logprob: -3.7947003841400146
    6. ':' → logprob: -6.669700622558594
    7. '  ' → logprob: -6.669700622558594
    8. 'a' → logprob: -6.794700622558594
    9. '_' → logprob: -6.919700622558594
    10. ''' → logprob: -6.919700622558594

Token 22: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0010772300884127617
    2. ' init' → logprob: -7.501077175140381
    3. 'slots' → logprob: -7.876077175140381
    4. '_init' → logprob: -9.376077651977539
    5. 'eq' → logprob: -10.751077651977539
    6. '_' → logprob: -11.001077651977539
    7. 'i' → logprob: -12.251077651977539
    8. ' slots' → logprob: -13.001077651977539
    9. '_slots' → logprob: -13.126077651977539
    10. ' ' → logprob: -13.251077651977539

Token 23: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00177942612208426
    2. '=' → logprob: -6.751779556274414
    3. '__[' → logprob: -8.001779556274414
    4. '=['' → logprob: -8.751779556274414
    5. '__["' → logprob: -10.751779556274414
    6. ' =' → logprob: -11.001779556274414
    7. '__('' → logprob: -11.251779556274414
    8. '___' → logprob: -11.376779556274414
    9. '[' → logprob: -11.376779556274414
    10. '__.__' → logprob: -11.751779556274414

Token 24: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3884107768535614
    2. '=['' → logprob: -2.013410806655884
    3. '=' → logprob: -2.263410806655884
    4. ' =' → logprob: -2.638410806655884
    5. '=[' → logprob: -5.513410568237305
    6. '[' → logprob: -5.763410568237305
    7. '__[' → logprob: -5.888410568237305
    8. '_' → logprob: -7.763410568237305
    9. '['' → logprob: -7.763410568237305
    10. '=["' → logprob: -7.888410568237305

Token 25: ' ('' (ID: 9906)
  Prédit: '('_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('_' → logprob: -0.928044319152832
    2. '('' → logprob: -1.428044319152832
    3. ''x' → logprob: -1.678044319152832
    4. ' ('' → logprob: -2.678044319152832
    5. ''' → logprob: -3.428044319152832
    6. '('__' → logprob: -3.928044319152832
    7. '['' → logprob: -4.178044319152832
    8. '['_' → logprob: -4.553044319152832
    9. ''s' → logprob: -4.553044319152832
    10. '(' → logprob: -5.178044319152832

Token 26: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010692507494241
    2. '_x' → logprob: -6.876069068908691
    3. '__' → logprob: -10.376069068908691
    4. 'a' → logprob: -14.001069068908691
    5. ' x' → logprob: -14.501069068908691
    6. '_' → logprob: -14.751069068908691
    7. '```' → logprob: -14.751069068908691
    8. 'dx' → logprob: -15.251069068908691
    9. ''x' → logprob: -15.376069068908691
    10. 'y' → logprob: -15.626069068908691

Token 27: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0006494098342955112
    2. ',' → logprob: -7.375649452209473
    3. '','' → logprob: -10.875649452209473
    4. ' ',' → logprob: -12.750649452209473
    5. ''' → logprob: -14.375649452209473
    6. '",' → logprob: -16.000648498535156
    7. ','' → logprob: -16.375648498535156
    8. '',
' → logprob: -16.625648498535156
    9. '')' → logprob: -16.625648498535156
    10. ',y' → logprob: -17.125648498535156

Token 28: ' '' (ID: 461)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4140177071094513
    2. ' y' → logprob: -1.414017677307129
    3. ''y' → logprob: -2.414017677307129
    4. ' '' → logprob: -5.789017677307129
    5. '‘y' → logprob: -6.289017677307129
    6. ''' → logprob: -6.789017677307129
    7. ' ' → logprob: -8.539017677307129
    8. '<|end|>' → logprob: -9.914017677307129
    9. '	y' → logprob: -10.539017677307129
    10. '<|end|>' → logprob: -10.914017677307129

Token 29: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.4849443838757e-06
    2. ' y' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.000003814697266
    4. ''y' → logprob: -16.875003814697266
    5. ' ' → logprob: -17.250003814697266
    6. '	y' → logprob: -17.625003814697266
    7. '‘y' → logprob: -18.375003814697266
    8. '  ' → logprob: -18.500003814697266
    9. '_y' → logprob: -18.625003814697266
    10. '<|end|>' → logprob: -19.250003814697266

Token 30: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0184848103672266
    2. ')' → logprob: -4.143484592437744
    3. '',' → logprob: -6.018484592437744
    4. ',' → logprob: -11.768485069274902
    5. ''' → logprob: -12.393485069274902
    6. '')
' → logprob: -13.893485069274902
    7. ')',' → logprob: -15.268485069274902
    8. '','' → logprob: -15.643485069274902
    9. '']' → logprob: -15.768485069274902
    10. '")' → logprob: -15.893485069274902

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5546252131462097
    2. '
' → logprob: -1.4296252727508545
    3. '    
' → logprob: -2.6796252727508545
    4. ':' → logprob: -2.9296252727508545
    5. ',' → logprob: -3.6796252727508545
    6. 'def' → logprob: -5.179625034332275
    7. '' → logprob: -5.554625034332275
    8. '\n' → logprob: -5.679625034332275
    9. ' ' → logprob: -6.054625034332275
    10. '<|end|>' → logprob: -6.054625034332275

Token 32: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48097100853919983
    2. '   ' → logprob: -1.8559709787368774
    3. 'def' (adapté à ' def') → logprob: -2.105971097946167
    4. '    
' → logprob: -2.980971097946167
    5. ' def' → logprob: -3.480971097946167
    6. ':' → logprob: -4.105970859527588
    7. '  
' → logprob: -6.980970859527588
    8. '   
' → logprob: -7.105970859527588
    9. '\n' → logprob: -7.230970859527588
    10. ' 
' → logprob: -7.230970859527588

Token 33: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0012698742793872952
    2. ' ' → logprob: -6.876269817352295
    3. '__' → logprob: -8.876270294189453
    4. ' def' → logprob: -9.751270294189453
    5. '  ' → logprob: -11.501270294189453
    6. ' init' → logprob: -11.626270294189453
    7. ' ' → logprob: -12.376270294189453
    8. '_init' → logprob: -12.376270294189453
    9. ' _' → logprob: -13.001270294189453
    10. '_' → logprob: -13.251270294189453

Token 34: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. ' init' → logprob: -14.750000953674316
    3. 'inite' → logprob: -17.0
    4. 'ini' → logprob: -17.125
    5. '_init' → logprob: -18.125
    6. 'int' → logprob: -18.125
    7. 'in' → logprob: -18.25
    8. 'i' → logprob: -19.0
    9. 'eq' → logprob: -19.5
    10. '	init' → logprob: -20.625

Token 35: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.482139527797699
    2. '<|end|>' → logprob: -1.3571395874023438
    3. '(self' → logprob: -2.8571395874023438
    4. ' (' → logprob: -2.9821395874023438
    5. '<|end|>' → logprob: -4.857139587402344
    6. '__(' → logprob: -5.232139587402344
    7. 'self' → logprob: -6.107139587402344
    8. '__' → logprob: -8.482139587402344
    9. '(token' → logprob: -8.982139587402344
    10. '(space' → logprob: -9.232139587402344

Token 36: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00407923199236393
    2. ' self' → logprob: -5.504079341888428
    3. '(self' → logprob: -14.50407886505127
    4. ',self' → logprob: -16.254079818725586
    5. '	self' → logprob: -16.629079818725586
    6. ' ' → logprob: -16.629079818725586
    7. ',' → logprob: -17.629079818725586
    8. ')' → logprob: -17.754079818725586
    9. 'x' → logprob: -18.004079818725586
    10. '   ' → logprob: -18.004079818725586

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019796164706349373
    2. ' ,' → logprob: -4.019796371459961
    3. 'self' → logprob: -6.769796371459961
    4. ',self' → logprob: -8.144796371459961
    5. ',x' → logprob: -9.769796371459961
    6. ')' → logprob: -9.769796371459961
    7. ' ' → logprob: -10.894796371459961
    8. '(self' → logprob: -11.144796371459961
    9. ' self' → logprob: -11.394796371459961
    10. '<|end|>' → logprob: -11.519796371459961

Token 38: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.043957922607660294
    2. ' x' → logprob: -3.4189579486846924
    3. 'self' → logprob: -4.668957710266113
    4. ' self' → logprob: -7.043957710266113
    5. ')' → logprob: -13.668957710266113
    6. ')x' → logprob: -13.668957710266113
    7. '   ' → logprob: -14.293957710266113
    8. ' ' → logprob: -15.043957710266113
    9. '0' → logprob: -15.168957710266113
    10. ',x' → logprob: -15.543957710266113

Token 39: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000317231344524771
    2. ':' → logprob: -8.750317573547363
    3. ' ,' → logprob: -9.000317573547363
    4. ')' → logprob: -11.125317573547363
    5. '):' → logprob: -12.000317573547363
    6. ':int' → logprob: -12.000317573547363
    7. ',int' → logprob: -12.750317573547363
    8. '<|end|>' → logprob: -13.125317573547363
    9. ',)' → logprob: -14.125317573547363
    10. '<|end|>' → logprob: -14.375317573547363

Token 40: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931551098823547
    2. ' int' → logprob: -0.6931551098823547
    3. ':int' → logprob: -12.068155288696289
    4. '=int' → logprob: -14.818155288696289
    5. ' )' → logprob: -15.068155288696289
    6. '	int' → logprob: -15.318155288696289
    7. '(int' → logprob: -15.443155288696289
    8. '[int' → logprob: -15.443155288696289
    9. ')' → logprob: -15.818155288696289
    10. ',int' → logprob: -15.818155288696289

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5120287066092715e-05
    2. ' ,' → logprob: -10.375035285949707
    3. ',int' → logprob: -13.125035285949707
    4. ')' → logprob: -14.375035285949707
    5. ',y' → logprob: -14.875035285949707
    6. '<|end|>' → logprob: -15.250035285949707
    7. '‌,' → logprob: -15.375035285949707
    8. ' ' → logprob: -15.625035285949707
    9. ',
' → logprob: -15.750035285949707
    10. ',x' → logprob: -16.87503433227539

Token 42: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10026220977306366
    2. 'y' → logprob: -2.35026216506958
    3. ' ' → logprob: -9.975262641906738
    4. '<|end|>' → logprob: -12.225262641906738
    5. '	y' → logprob: -13.350262641906738
    6. ' ' → logprob: -13.850262641906738
    7. ')' → logprob: -14.475262641906738
    8. ' )' → logprob: -15.475262641906738
    9. '<|end|>' → logprob: -15.850262641906738
    10. ')y' → logprob: -16.225261688232422

Token 43: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5241307020187378
    2. '):' → logprob: -1.0241307020187378
    3. ':' → logprob: -3.0241308212280273
    4. ' ):' → logprob: -9.274130821228027
    5. ':int' → logprob: -10.024130821228027
    6. ' )' → logprob: -10.524130821228027
    7. '):
' → logprob: -11.149130821228027
    8. ',' → logprob: -11.399130821228027
    9. '=' → logprob: -12.399130821228027
    10. '<|end|>' → logprob: -12.524130821228027

Token 44: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6934034824371338
    2. ' int' → logprob: -0.6934034824371338
    3. ')' → logprob: -8.568403244018555
    4. ' )' → logprob: -10.068403244018555
    5. ':int' → logprob: -11.693403244018555
    6. '=int' → logprob: -12.193403244018555
    7. ' ' → logprob: -12.693403244018555
    8. '[int' → logprob: -13.193403244018555
    9. '<int' → logprob: -13.318403244018555
    10. '	int' → logprob: -14.068403244018555

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002210681326687336
    2. ')' → logprob: -6.12721061706543
    3. ':' → logprob: -10.87721061706543
    4. '):
' → logprob: -12.37721061706543
    5. ' ):' → logprob: -13.75221061706543
    6. ''):' → logprob: -14.12721061706543
    7. '),' → logprob: -15.75221061706543
    8. '   ' → logprob: -15.87721061706543
    9. ',' → logprob: -16.37721061706543
    10. ')->' → logprob: -16.62721061706543

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005142203997820616
    2. ')' → logprob: -5.8801422119140625
    3. '    ' → logprob: -7.3801422119140625
    4. '):' → logprob: -8.130142211914062
    5. '   ' → logprob: -8.255142211914062
    6. ' ' → logprob: -8.255142211914062
    7. 'x' → logprob: -8.380142211914062
    8. ' )' → logprob: -8.505142211914062
    9. ',' → logprob: -9.505142211914062
    10. 'self' → logprob: -9.630142211914062

Token 47: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11665074527263641
    2. ' self' → logprob: -2.3666508197784424
    3. '       ' → logprob: -4.116650581359863
    4. '   ' → logprob: -12.741650581359863
    5. '        ' → logprob: -13.241650581359863
    6. '	self' → logprob: -13.241650581359863
    7. ' ' → logprob: -13.616650581359863
    8. ' ' → logprob: -13.741650581359863
    9. '```' → logprob: -14.741650581359863
    10. 's' → logprob: -14.991650581359863

Token 48: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07060303539037704
    2. '.x' → logprob: -2.695603132247925
    3. ' .' → logprob: -7.570602893829346
    4. ' ' → logprob: -10.070603370666504
    5. '<|end|>' → logprob: -10.695603370666504
    6. ')' → logprob: -10.820603370666504
    7. ').' → logprob: -11.320603370666504
    8. '.y' → logprob: -11.695603370666504
    9. '.i' → logprob: -11.695603370666504
    10. '.e' → logprob: -12.320603370666504

Token 49: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4797671437263489
    2. ' =' → logprob: -0.9797671437263489
    3. ',' → logprob: -5.354767322540283
    4. ')' → logprob: -7.854767322540283
    5. '<|end|>' → logprob: -8.104766845703125
    6. ' ,' → logprob: -9.104766845703125
    7. ' ' → logprob: -9.479766845703125
    8. ' =
' → logprob: -11.479766845703125
    9. '.' → logprob: -11.604766845703125
    10. ' =)' → logprob: -11.729766845703125

Token 50: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0380416102707386
    2. ' x' → logprob: -3.288041591644287
    3. '	x' → logprob: -16.663042068481445
    4. ' ' → logprob: -18.163042068481445
    5. ')x' → logprob: -18.788042068481445
    6. ' ' → logprob: -20.663042068481445
    7. '    ' → logprob: -20.788042068481445
    8. '(x' → logprob: -20.913042068481445
    9. '"x' → logprob: -21.038042068481445
    10. '$x' → logprob: -21.038042068481445

Token 51: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3826913833618164
    2. ' y' → logprob: -1.6326913833618164
    3. '       ' → logprob: -1.7576913833618164
    4. ' ' → logprob: -2.2576913833618164
    5. ' 
' → logprob: -2.5076913833618164
    6. '<|end|>' → logprob: -2.5076913833618164
    7. '
' → logprob: -3.5076913833618164
    8. '        ' → logprob: -4.257691383361816
    9. '        
' → logprob: -4.382691383361816
    10. 'y' → logprob: -4.382691383361816

Token 52: '       ' (ID: 309)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3572995364665985
    2. 'y' → logprob: -2.107299566268921
    3. ' 
' → logprob: -2.357299566268921
    4. ' ' → logprob: -3.357299566268921
    5. '  
' → logprob: -3.982299566268921
    6. '       ' → logprob: -4.982299327850342
    7. '    
' → logprob: -5.107299327850342
    8. '<|end|>' → logprob: -5.232299327850342
    9. '        
' → logprob: -5.857299327850342
    10. '   
' → logprob: -6.482299327850342

Token 53: ' self' (ID: 1051)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889033854007721
    2. ' y' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.203890800476074
    4. ',' → logprob: -16.578889846801758
    5. ',y' → logprob: -16.578889846801758
    6. '	y' → logprob: -16.703889846801758
    7. '    ' → logprob: -17.328889846801758
    8. ' ' → logprob: -17.703889846801758
    9. ''y' → logprob: -17.953889846801758
    10. '   ' → logprob: -18.953889846801758

Token 54: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009120761416852474
    2. '.x' → logprob: -5.134120941162109
    3. '.y' → logprob: -7.134120941162109
    4. ' ' → logprob: -7.134120941162109
    5. ' .' → logprob: -7.134120941162109
    6. ',' → logprob: -8.13412094116211
    7. 'x' → logprob: -8.63412094116211
    8. '<|end|>' → logprob: -8.88412094116211
    9. '<|end|>' → logprob: -10.13412094116211
    10. 'y' → logprob: -10.13412094116211

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.321260005235672
    2. '=' → logprob: -1.3212599754333496
    3. '<|end|>' → logprob: -5.19625997543335
    4. ' ' → logprob: -6.32125997543335
    5. ')' → logprob: -8.071260452270508
    6. '<|end|>' → logprob: -8.321260452270508
    7. ' )' → logprob: -11.071260452270508
    8. ' +=' → logprob: -11.446260452270508
    9. ',' → logprob: -11.446260452270508
    10. ' =
' → logprob: -11.571260452270508

Token 56: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.474087119102478
    2. 'y' → logprob: -0.974087119102478
    3. '0' → logprob: -11.84908676147461
    4. ' ' → logprob: -12.97408676147461
    5. 'x' → logprob: -15.09908676147461
    6. '	y' → logprob: -16.09908676147461
    7. '<|end|>' → logprob: -16.22408676147461
    8. ' ' → logprob: -16.72408676147461
    9. ')y' → logprob: -16.72408676147461
    10. '<|end|>' → logprob: -17.59908676147461

Token 57: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02603493072092533
    2. '   ' → logprob: -3.9010348320007324
    3. '    
' → logprob: -5.401034832000732
    4. '\n' → logprob: -7.901034832000732
    5. ' 
' → logprob: -8.52603530883789
    6. 'def' → logprob: -9.02603530883789
    7. '  
' → logprob: -9.52603530883789
    8. '```' → logprob: -10.27603530883789
    9. '        
' → logprob: -10.52603530883789
    10. '' → logprob: -10.77603530883789

Token 58: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008272352628409863
    2. '   ' → logprob: -5.008272171020508
    3. 'def' → logprob: -6.758272171020508
    4. '    
' → logprob: -8.258272171020508
    5. 'class' → logprob: -9.883272171020508
    6. '

' → logprob: -10.133272171020508
    7. ' 
' → logprob: -11.383272171020508
    8. ' def' → logprob: -11.633272171020508
    9. '```' → logprob: -12.008272171020508
    10. '        
' → logprob: -12.508272171020508

Token 59: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.026020776480436325
    2. ' def' → logprob: -3.7760207653045654
    3. '   ' → logprob: -5.9010210037231445
    4. '    
' → logprob: -10.651021003723145
    5. ' ' → logprob: -12.151021003723145
    6. ' 
' → logprob: -13.651021003723145
    7. '    ' → logprob: -13.901021003723145
    8. '
' → logprob: -14.276021003723145
    9. '	def' → logprob: -14.526021003723145
    10. 'de' → logprob: -14.776021003723145

Token 60: ' vector' (ID: 9727)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017625361680984497
    2. ' __' → logprob: -5.142625331878662
    3. ' _' → logprob: -6.392625331878662
    4. '  ' → logprob: -6.517625331878662
    5. ' def' → logprob: -6.642625331878662
    6. '_' → logprob: -6.642625331878662
    7. ' space' → logprob: -6.642625331878662
    8. ' ```' → logprob: -6.892625331878662
    9. 'space' → logprob: -7.392625331878662
    10. ' ==' → logprob: -7.892625331878662

Token 61: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.023575976490974426
    2. '_' → logprob: -4.773575782775879
    3. '(' → logprob: -5.023575782775879
    4. '_from' → logprob: -5.023575782775879
    5. 'To' → logprob: -7.273575782775879
    6. '_between' → logprob: -8.273575782775879
    7. 'to' → logprob: -8.523575782775879
    8. ' (' → logprob: -8.898575782775879
    9. 's' → logprob: -9.398575782775879
    10. '(self' → logprob: -9.398575782775879

Token 62: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5249351859092712
    2. '(self' → logprob: -0.8999351859092712
    3. '<|end|>' → logprob: -7.149935245513916
    4. ' (' → logprob: -7.274935245513916
    5. '(
' → logprob: -8.399934768676758
    6. '(this' → logprob: -11.024934768676758
    7. '<|end|>' → logprob: -11.399934768676758
    8. '(

' → logprob: -11.524934768676758
    9. '(Point' → logprob: -11.774934768676758
    10. 'self' → logprob: -11.774934768676758

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. 'self' → logprob: -12.875005722045898
    3. ' ,' → logprob: -13.000005722045898
    4. ',
' → logprob: -15.000005722045898
    5. ')' → logprob: -16.1250057220459
    6. ',self' → logprob: -16.2500057220459
    7. ',

' → logprob: -16.7500057220459
    8. ',user' → logprob: -16.8750057220459
    9. ',x' → logprob: -17.1250057220459
    10. ',p' → logprob: -17.2500057220459

Token 64: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.6862247586250305
    2. 'other' → logprob: -1.3112246990203857
    3. 'self' → logprob: -2.0612246990203857
    4. ' self' → logprob: -2.3112246990203857
    5. ' point' → logprob: -7.811224937438965
    6. ')' → logprob: -9.811224937438965
    7. ' ' → logprob: -10.186224937438965
    8. 'point' → logprob: -10.311224937438965
    9. ',' → logprob: -11.186224937438965
    10. ' space' → logprob: -12.186224937438965

Token 65: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15514004230499268
    2. ')' → logprob: -2.280139923095703
    3. ':' → logprob: -3.280139923095703
    4. ' ):' → logprob: -5.780139923095703
    5. ' )' → logprob: -7.905139923095703
    6. '):
' → logprob: -8.530139923095703
    7. ',' → logprob: -9.530139923095703
    8. ' ' → logprob: -10.155139923095703
    9. '_point' → logprob: -11.155139923095703
    10. '   ' → logprob: -12.405139923095703

Token 66: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38945329189300537
    2. ')' → logprob: -2.139453411102295
    3. ' '' → logprob: -2.264453411102295
    4. ' Point' → logprob: -2.764453411102295
    5. 'Point' → logprob: -3.764453411102295
    6. ' )' → logprob: -4.514453411102295
    7. ' ' → logprob: -6.889453411102295
    8. '')' → logprob: -7.014453411102295
    9. ' ' → logprob: -7.639453411102295
    10. '	Point' → logprob: -8.014452934265137

Token 67: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.10023729503154755
    2. ' Point' → logprob: -2.3502373695373535
    3. ' ' → logprob: -11.850236892700195
    4. '	Point' → logprob: -11.975236892700195
    5. '_Point' → logprob: -12.100236892700195
    6. 'P' → logprob: -12.350236892700195
    7. '<Point' → logprob: -13.100236892700195
    8. '.Point' → logprob: -13.725236892700195
    9. '_point' → logprob: -13.975236892700195
    10. ' point' → logprob: -14.100236892700195

Token 68: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.01755051128566265
    2. ')' → logprob: -4.142550468444824
    3. ''):' → logprob: -6.517550468444824
    4. '):' → logprob: -11.142550468444824
    5. ':' → logprob: -12.142550468444824
    6. ''):
' → logprob: -12.517550468444824
    7. '`)' → logprob: -12.517550468444824
    8. '')->' → logprob: -13.267550468444824
    9. ' ')' → logprob: -13.267550468444824
    10. ''' → logprob: -13.392550468444824

Token 69: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.525634765625
    2. ')' → logprob: -1.400634765625
    3. ' ->' → logprob: -2.400634765625
    4. ')->' → logprob: -3.525634765625
    5. '):' → logprob: -3.650634765625
    6. '->' → logprob: -4.150634765625
    7. ' :' → logprob: -8.775634765625
    8. ',' → logprob: -9.150634765625
    9. '():' → logprob: -9.275634765625
    10. '       ' → logprob: -10.150634765625

Token 70: ' Tuple' (ID: 50841)
  Prédit: ' Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tuple' → logprob: -0.13036057353019714
    2. 'Tuple' → logprob: -2.3803606033325195
    3. ' '' → logprob: -3.8803606033325195
    4. ''' → logprob: -4.8803606033325195
    5. ' tuple' → logprob: -7.7553606033325195
    6. ' Point' → logprob: -8.13036060333252
    7. ' ' → logprob: -8.13036060333252
    8. 'tuple' → logprob: -8.88036060333252
    9. ''T' → logprob: -9.00536060333252
    10. 'Point' → logprob: -9.75536060333252

Token 71: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0009226576657965779
    2. '[' → logprob: -7.000922679901123
    3. '(int' → logprob: -12.625922203063965
    4. '[Int' → logprob: -13.000922203063965
    5. '[
' → logprob: -13.125922203063965
    6. ' [' → logprob: -13.125922203063965
    7. '<int' → logprob: -14.875922203063965
    8. ' (' → logprob: -14.875922203063965
    9. 'int' → logprob: -15.250922203063965
    10. '(' → logprob: -15.500922203063965

Token 72: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015187880489975214
    2. ',int' → logprob: -7.126518726348877
    3. ' ,' → logprob: -7.251518726348877
    4. '[int' → logprob: -13.626519203186035
    5. ',Integer' → logprob: -14.501519203186035
    6. ' ' → logprob: -14.751519203186035
    7. ':int' → logprob: -15.001519203186035
    8. 'int' → logprob: -15.251519203186035
    9. '‌,' → logprob: -15.251519203186035
    10. ']int' → logprob: -15.251519203186035

Token 73: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.46395811438560486
    2. '):' → logprob: -1.5889581441879272
    3. ',' → logprob: -1.8389581441879272
    4. ']' → logprob: -5.088958263397217
    5. '']:' → logprob: -7.588958263397217
    6. ')' → logprob: -7.838958263397217
    7. '],' → logprob: -7.963958263397217
    8. ':' → logprob: -8.588957786560059
    9. ''):' → logprob: -8.713957786560059
    10. '>:' → logprob: -9.963957786560059

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012141210027039051
    2. '        ' → logprob: -4.887141227722168
    3. '    ' → logprob: -6.637141227722168
    4. ' return' → logprob: -6.762141227722168
    5. '(' → logprob: -7.137141227722168
    6. ' (' → logprob: -8.012141227722168
    7. '      ' → logprob: -8.512141227722168
    8. ' ' → logprob: -8.637141227722168
    9. '        
' → logprob: -8.887141227722168
    10. 'return' → logprob: -9.012141227722168

Token 75: ' dx' (ID: 29472)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08472075313329697
    2. '(' → logprob: -3.3347208499908447
    3. ' return' → logprob: -3.7097208499908447
    4. 'return' → logprob: -4.584720611572266
    5. '        ' → logprob: -5.209720611572266
    6. '(other' → logprob: -5.459720611572266
    7. '(
' → logprob: -7.959720611572266
    8. '(return' → logprob: -8.084720611572266
    9. '       ' → logprob: -8.709720611572266
    10. ' (
' → logprob: -9.334720611572266

Token 76: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12443862110376358
    2. '=' → logprob: -2.374438524246216
    3. ' =' → logprob: -4.124438762664795
    4. ' ,' → logprob: -4.874438762664795
    5. '<|end|>' → logprob: -10.374438285827637
    6. ')' → logprob: -10.874438285827637
    7. ' ' → logprob: -11.249438285827637
    8. ',
' → logprob: -11.249438285827637
    9. '<|end|>' → logprob: -11.749438285827637
    10. ',d' → logprob: -12.249438285827637

Token 77: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.07007159292697906
    2. 'other' → logprob: -2.6950716972351074
    3. ' self' → logprob: -9.82007122039795
    4. 'self' → logprob: -9.94507122039795
    5. '(other' → logprob: -10.57007122039795
    6. ' ' → logprob: -12.82007122039795
    7. '.other' → logprob: -14.07007122039795
    8. 'Other' → logprob: -14.19507122039795
    9. 'o' → logprob: -14.69507122039795
    10. '_other' → logprob: -14.94507122039795

Token 78: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.01417174469679594
    2. '.' → logprob: -4.264171600341797
    3. ' .' → logprob: -12.264171600341797
    4. 'x' → logprob: -13.764171600341797
    5. '.gridx' → logprob: -14.639171600341797
    6. ' ' → logprob: -14.764171600341797
    7. '<|end|>' → logprob: -14.889171600341797
    8. '`.' → logprob: -15.139171600341797
    9. '.xaml' → logprob: -15.514171600341797
    10. ').' → logprob: -15.639171600341797

Token 79: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0013545217225328088
    2. '-' → logprob: -6.626354694366455
    3. ' ' → logprob: -10.501354217529297
    4. ' ' → logprob: -14.251354217529297
    5. ' –' → logprob: -15.876354217529297
    6. ' -
' → logprob: -16.126354217529297
    7. '-self' → logprob: -16.876354217529297
    8. '-d' → logprob: -17.626354217529297
    9. ' -,' → logprob: -17.751354217529297
    10. ' —' → logprob: -17.876354217529297

Token 80: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4741361439228058
    2. ' self' → logprob: -0.9741361141204834
    3. '<|end|>' → logprob: -10.099136352539062
    4. ' ' → logprob: -11.974136352539062
    5. '	self' → logprob: -12.224136352539062
    6. 's' → logprob: -13.724136352539062
    7. '[self' → logprob: -14.349136352539062
    8. '```' → logprob: -14.349136352539062
    9. 'x' → logprob: -14.474136352539062
    10. '(self' → logprob: -14.724136352539062

Token 81: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.1002325564622879
    2. '.' → logprob: -2.3502326011657715
    3. ' .' → logprob: -10.975232124328613
    4. 'x' → logprob: -11.725232124328613
    5. ' ' → logprob: -15.725232124328613
    6. ').' → logprob: -15.725232124328613
    7. '<|end|>' → logprob: -16.60023307800293
    8. ' x' → logprob: -17.10023307800293
    9. '	x' → logprob: -17.22523307800293
    10. '.

' → logprob: -17.47523307800293

Token 82: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4086913764476776
    2. '       ' → logprob: -1.53369140625
    3. ',
' → logprob: -3.40869140625
    4. ' ' → logprob: -4.28369140625
    5. '<|end|>' → logprob: -4.28369140625
    6. ' ,' → logprob: -4.78369140625
    7. '        ' → logprob: -4.78369140625
    8. '        
' → logprob: -4.78369140625
    9. '
' → logprob: -5.03369140625
    10. ' 
' → logprob: -5.40869140625

Token 84: ' dy' (ID: 11996)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.6091667413711548
    2. ' dy' → logprob: -1.1091667413711548
    3. 'dy' (adapté à ' dy') → logprob: -2.7341666221618652
    4. 'other' → logprob: -2.8591666221618652
    5. 'y' → logprob: -6.484166622161865
    6. '1' → logprob: -7.234166622161865
    7. ' ' → logprob: -7.359166622161865
    8. ' y' → logprob: -7.734166622161865
    9. '(other' → logprob: -8.859167098999023
    10. '0' → logprob: -9.359167098999023

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014562904834747314
    2. '=' → logprob: -4.264563083648682
    3. '<|end|>' → logprob: -8.264562606811523
    4. '<|end|>' → logprob: -9.014562606811523
    5. ' ' → logprob: -11.389562606811523
    6. ' -' → logprob: -13.014562606811523
    7. ':' → logprob: -13.264562606811523
    8. ',' → logprob: -13.889562606811523
    9. ')' → logprob: -14.639562606811523
    10. '=user' → logprob: -14.639562606811523

Token 86: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.47425004839897156
    2. 'other' → logprob: -0.974250078201294
    3. 'self' → logprob: -9.099249839782715
    4. ' self' → logprob: -10.349249839782715
    5. 'Other' → logprob: -11.099249839782715
    6. '_other' → logprob: -11.849249839782715
    7. '(other' → logprob: -12.849249839782715
    8. '.other' → logprob: -13.349249839782715
    9. '<|end|>' → logprob: -13.474249839782715
    10. ' ' → logprob: -14.724249839782715

Token 87: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.014526501297950745
    2. '.' → logprob: -4.2645263671875
    3. '-' → logprob: -8.2645263671875
    4. ' -' → logprob: -9.8895263671875
    5. 'y' → logprob: -10.3895263671875
    6. '.x' → logprob: -11.2645263671875
    7. '.py' → logprob: -12.2645263671875
    8. ' .' → logprob: -13.1395263671875
    9. '[' → logprob: -13.8895263671875
    10. ' ' → logprob: -14.2645263671875

Token 88: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03366633132100105
    2. '-' → logprob: -3.4086663722991943
    3. '<|end|>' → logprob: -11.158666610717773
    4. ' ' → logprob: -12.408666610717773
    5. ' -
' → logprob: -13.783666610717773
    6. ' –' → logprob: -14.533666610717773
    7. '<|end|>' → logprob: -15.658666610717773
    8. '-
' → logprob: -16.158666610717773
    9. ' ' → logprob: -16.408666610717773
    10. '−' → logprob: -16.658666610717773

Token 89: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061984602361917496
    2. ' self' → logprob: -2.8119845390319824
    3. '<|end|>' → logprob: -12.43698501586914
    4. '(self' → logprob: -12.68698501586914
    5. '[self' → logprob: -12.81198501586914
    6. ' ' → logprob: -13.43698501586914
    7. 'other' → logprob: -13.43698501586914
    8. '_self' → logprob: -13.81198501586914
    9. '	self' → logprob: -14.18698501586914
    10. '=self' → logprob: -14.43698501586914

Token 90: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.06583531945943832
    2. 'y' → logprob: -2.8158352375030518
    3. '.' → logprob: -5.940835475921631
    4. '<|end|>' → logprob: -7.565835475921631
    5. ' y' → logprob: -8.440834999084473
    6. ')' → logprob: -8.440834999084473
    7. '.py' → logprob: -9.815834999084473
    8. '<|end|>' → logprob: -9.940834999084473
    9. '	y' → logprob: -10.065834999084473
    10. '-' → logprob: -10.565834999084473

Token 91: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7343205809593201
    2. '
' → logprob: -0.8593205809593201
    3. '       ' → logprob: -3.359320640563965
    4. '<|end|>' → logprob: -3.984320640563965
    5. ' return' → logprob: -4.859320640563965
    6. '        
' → logprob: -4.859320640563965
    7. '  
' → logprob: -5.359320640563965
    8. ' ' → logprob: -5.609320640563965
    9. 'return' → logprob: -5.609320640563965
    10. '\' → logprob: -5.859320640563965

Token 92: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.1102960929274559
    2. '
' → logprob: -3.3602960109710693
    3. '       ' → logprob: -3.6102960109710693
    4. '  
' → logprob: -4.610296249389648
    5. ' ' → logprob: -4.735296249389648
    6. '        
' → logprob: -4.860296249389648
    7. '<|end|>' → logprob: -5.235296249389648
    8. ' return' → logprob: -5.860296249389648
    9. '    
' → logprob: -6.860296249389648
    10. 'return' → logprob: -6.985296249389648

Token 93: ' return' (ID: 622)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.5861783623695374
    2. 'g' → logprob: -0.8361783623695374
    3. ' gcd' → logprob: -5.586178302764893
    4. ' d' → logprob: -5.836178302764893
    5. 'd' → logprob: -6.086178302764893
    6. ' if' → logprob: -7.836178302764893
    7. '       ' → logprob: -7.961178302764893
    8. ' return' → logprob: -8.83617877960205
    9. 'if' → logprob: -9.21117877960205
    10. 'return' (adapté à ' return') → logprob: -10.08617877960205

Token 94: ' dx' (ID: 29472)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.6154578924179077
    2. ' dx' → logprob: -1.4904578924179077
    3. ' (' → logprob: -1.6154578924179077
    4. 'dx' → logprob: -3.3654580116271973
    5. '(' → logprob: -6.990458011627197
    6. '(d' → logprob: -10.740457534790039
    7. '_dx' → logprob: -11.115457534790039
    8. '(
' → logprob: -11.740457534790039
    9. '0' → logprob: -12.240457534790039
    10. ' ' → logprob: -12.490457534790039

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009404043667018414
    2. ' ,' → logprob: -7.375940322875977
    3. ',d' → logprob: -8.500940322875977
    4. ',y' → logprob: -9.375940322875977
    5. ',
' → logprob: -11.000940322875977
    6. ' ' → logprob: -12.875940322875977
    7. ',n' → logprob: -14.000940322875977
    8. '`,' → logprob: -14.375940322875977
    9. ',

' → logprob: -14.625940322875977
    10. ' dy' → logprob: -14.625940322875977

Token 96: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.47407805919647217
    2. ' dy' → logprob: -0.9740780591964722
    3. ' ' → logprob: -14.224078178405762
    4. 'd' → logprob: -16.099077224731445
    5. 'y' → logprob: -16.724077224731445
    6. ' ' → logprob: -16.974077224731445
    7. '.dy' → logprob: -16.974077224731445
    8. 'gy' → logprob: -17.599077224731445
    9. '	d' → logprob: -18.099077224731445
    10. '0' → logprob: -18.349077224731445

Token 97: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39954230189323425
    2. '\' → logprob: -2.1495423316955566
    3. '<|end|>' → logprob: -2.2745423316955566
    4. '\n' → logprob: -3.5245423316955566
    5. '   ' → logprob: -4.274542331695557
    6. ' 
' → logprob: -4.399542331695557
    7. '    
' → logprob: -4.774542331695557
    8. ' ' → logprob: -5.149542331695557
    9. '\
' → logprob: -5.274542331695557
    10. '```' → logprob: -5.274542331695557

Token 98: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7720769643783569
    2. '
' → logprob: -1.397076964378357
    3. '\' → logprob: -2.8970770835876465
    4. ',' → logprob: -3.0220770835876465
    5. '    
' → logprob: -3.7720770835876465
    6. ' 
' → logprob: -3.7720770835876465
    7. '/' → logprob: -4.0220770835876465
    8. '(' → logprob: -4.0220770835876465
    9. '  
' → logprob: -4.0220770835876465
    10. ')' → logprob: -4.1470770835876465

Token 99: ' Direction' (ID: 39049)
  Prédit: ' Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Line' → logprob: -0.6666097640991211
    2. ' Solution' → logprob: -0.9166097640991211
    3. 'Solution' → logprob: -3.041609764099121
    4. 'Line' → logprob: -3.416609764099121
    5. ' ' → logprob: -6.291609764099121
    6. ' Geometry' → logprob: -6.916609764099121
    7. ' Lines' → logprob: -7.166609764099121
    8. ' Vector' → logprob: -7.416609764099121
    9. ' Col' → logprob: -7.541609764099121
    10. 'Slope' → logprob: -8.291609764099121

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000965891988016665
    2. '):' → logprob: -8.12596607208252
    3. ':
' → logprob: -8.25096607208252
    4. '(' → logprob: -8.87596607208252
    5. ' :' → logprob: -9.12596607208252
    6. '<|end|>' → logprob: -10.37596607208252
    7. 'Vector' → logprob: -10.62596607208252
    8. ',' → logprob: -10.62596607208252
    9. '():' → logprob: -10.87596607208252
    10. '>:' → logprob: -12.00096607208252

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010237629525363445
    2. ':' → logprob: -4.885237693786621
    3. ' ' → logprob: -7.135237693786621
    4. '  ' → logprob: -7.760237693786621
    5. ':
' → logprob: -7.760237693786621
    6. '<|end|>' → logprob: -9.010237693786621
    7. '    
' → logprob: -9.135237693786621
    8. '    ' → logprob: -9.135237693786621
    9. '__' → logprob: -9.385237693786621
    10. 'def' → logprob: -9.635237693786621

Token 102: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.1812375783920288
    2. 'def' → logprob: -1.1812375783920288
    3. '   ' → logprob: -1.4312375783920288
    4. ' __' → logprob: -2.1812376976013184
    5. '__' (adapté à ' __') → logprob: -3.5562376976013184
    6. 'from' → logprob: -6.556237697601318
    7. ' ' → logprob: -6.806237697601318
    8. 'staticmethod' → logprob: -7.306237697601318
    9. 'int' → logprob: -7.681237697601318
    10. '    
' → logprob: -7.806237697601318

Token 103: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.0001239196863025427
    2. '_slots' → logprob: -9.000123977661133
    3. ' slots' → logprob: -15.250123977661133
    4. 'init' → logprob: -16.250123977661133
    5. 'slot' → logprob: -16.375123977661133
    6. 'sl' → logprob: -17.625123977661133
    7. '
' → logprob: -18.125123977661133
    8. '_slot' → logprob: -18.250123977661133
    9. 'Slots' → logprob: -18.250123977661133
    10. 'class' → logprob: -18.625123977661133

Token 104: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006411947309970856
    2. ' =' → logprob: -5.256412029266357
    3. '=' → logprob: -7.131412029266357
    4. '__:' → logprob: -9.1314115524292
    5. '=('' → logprob: -9.5064115524292
    6. '__('' → logprob: -9.7564115524292
    7. '_' → logprob: -10.1314115524292
    8. '___' → logprob: -11.0064115524292
    9. '__,' → logprob: -11.6314115524292
    10. '__((' → logprob: -11.6314115524292

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003972016274929047
    2. '=' → logprob: -5.628972053527832
    3. '=('' → logprob: -8.128972053527832
    4. ' ' → logprob: -10.378972053527832
    5. '=['' → logprob: -10.628972053527832
    6. '<|end|>' → logprob: -11.503972053527832
    7. ',' → logprob: -12.878972053527832
    8. ':' → logprob: -13.378972053527832
    9. ')' → logprob: -13.878972053527832
    10. '=("' → logprob: -14.003972053527832

Token 106: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5394052267074585
    2. ' ('' → logprob: -0.9144052267074585
    3. '('_' → logprob: -4.164405345916748
    4. '('__' → logprob: -7.539405345916748
    5. '(' → logprob: -10.91440486907959
    6. ''s' → logprob: -11.03940486907959
    7. ' ' → logprob: -11.03940486907959
    8. ' (' → logprob: -11.53940486907959
    9. ' '' → logprob: -11.78940486907959
    10. ''' → logprob: -12.66440486907959

Token 107: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.030517831444740295
    2. 'x' → logprob: -3.530517816543579
    3. 'vx' → logprob: -8.405517578125
    4. '_dx' → logprob: -9.155517578125
    5. 'nx' → logprob: -9.280517578125
    6. 'a' → logprob: -9.655517578125
    7. 'num' → logprob: -10.155517578125
    8. ' dx' → logprob: -10.155517578125
    9. 'gx' → logprob: -10.530517578125
    10. 'g' → logprob: -10.780517578125

Token 108: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0019637243822216988
    2. ',' → logprob: -6.2519636154174805
    3. '','' → logprob: -10.50196361541748
    4. ''' → logprob: -12.62696361541748
    5. ' ',' → logprob: -12.62696361541748
    6. ','' → logprob: -15.00196361541748
    7. '",' → logprob: -15.25196361541748
    8. ' ,' → logprob: -15.75196361541748
    9. '=',' → logprob: -16.001964569091797
    10. '',
' → logprob: -16.626964569091797

Token 109: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8550716042518616
    2. ' dy' → logprob: -1.3550715446472168
    3. 'dy' → logprob: -1.9800715446472168
    4. ' '' → logprob: -2.105071544647217
    5. ''d' → logprob: -2.980071544647217
    6. ''y' → logprob: -5.105071544647217
    7. 'Dy' → logprob: -11.105072021484375
    8. ''ny' → logprob: -11.105072021484375
    9. ''s' → logprob: -11.730072021484375
    10. ' Dy' → logprob: -12.730072021484375

Token 110: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.0206720617134124e-05
    2. ' dy' → logprob: -11.50001049041748
    3. '.dy' → logprob: -18.875009536743164
    4. '   ' → logprob: -19.500009536743164
    5. ' ' → logprob: -19.875009536743164
    6. 'd' → logprob: -19.875009536743164
    7. '
' → logprob: -20.000009536743164
    8. ''' → logprob: -20.750009536743164
    9. 'dym' → logprob: -21.125009536743164
    10. '```' → logprob: -21.125009536743164

Token 111: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3242034316062927
    2. '')
' → logprob: -1.3242034912109375
    3. '',' → logprob: -4.5742034912109375
    4. ')' → logprob: -7.8242034912109375
    5. '')

' → logprob: -9.949203491210938
    6. ',' → logprob: -10.074203491210938
    7. ''' → logprob: -10.574203491210938
    8. '')
' → logprob: -10.824203491210938
    9. ' ')
' → logprob: -11.449203491210938
    10. ')
' → logprob: -11.699203491210938

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09154416620731354
    2. '
' → logprob: -2.7165441513061523
    3. '    
' → logprob: -4.091544151306152
    4. 'def' → logprob: -6.716544151306152
    5. '  
' → logprob: -6.966544151306152
    6. ' ' → logprob: -7.091544151306152
    7. ' def' → logprob: -7.466544151306152
    8. ' 
' → logprob: -7.591544151306152
    9. '    ' → logprob: -8.591544151306152
    10. '   
' → logprob: -9.091544151306152

Token 113: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.8355770111083984
    2. '
' → logprob: -0.9605770111083984
    3. ' def' → logprob: -2.3355770111083984
    4. '   ' → logprob: -2.4605770111083984
    5. '    
' → logprob: -6.710577011108398
    6. '	def' → logprob: -9.085577011108398
    7. ' 
' → logprob: -9.585577011108398
    8. ',' → logprob: -10.460577011108398
    9. '  
' → logprob: -10.585577011108398
    10. '
' → logprob: -10.585577011108398

Token 114: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -5.3954463510308415e-05
    2. '__' → logprob: -9.875054359436035
    3. ' ' → logprob: -13.875054359436035
    4. ' def' → logprob: -14.250054359436035
    5. '_' → logprob: -14.500054359436035
    6. ' _' → logprob: -15.250054359436035
    7. '_init' → logprob: -17.25005340576172
    8. ' init' → logprob: -17.62505340576172
    9. ' ' → logprob: -17.87505340576172
    10. ' ___' → logprob: -18.00005340576172

Token 115: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0014570204075425863
    2. 'slots' → logprob: -7.251457214355469
    3. 'def' → logprob: -7.876457214355469
    4. '_init' → logprob: -8.876457214355469
    5. '```' → logprob: -9.126457214355469
    6. '__' → logprob: -10.126457214355469
    7. ' init' → logprob: -10.876457214355469
    8. '(init' → logprob: -11.126457214355469
    9. '_slots' → logprob: -12.126457214355469
    10. 'i' → logprob: -12.376457214355469

Token 116: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.2427729070186615
    2. '(self' → logprob: -1.8677729368209839
    3. '<|end|>' → logprob: -3.3677728176116943
    4. '__' → logprob: -4.242773056030273
    5. ' (' → logprob: -5.367773056030273
    6. '(' → logprob: -5.992773056030273
    7. '__(
' → logprob: -5.992773056030273
    8. '<|end|>' → logprob: -6.742773056030273
    9. '__((' → logprob: -7.742773056030273
    10. ' ' → logprob: -8.117773056030273

Token 117: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00046296243090182543
    2. ' self' → logprob: -7.750463008880615
    3. '0' → logprob: -10.750462532043457
    4. '(self' → logprob: -12.125462532043457
    5. ',' → logprob: -13.000462532043457
    6. '   ' → logprob: -13.500462532043457
    7. 'dx' → logprob: -14.750462532043457
    8. ',self' → logprob: -14.875462532043457
    9. '
' → logprob: -15.250462532043457
    10. '       ' → logprob: -15.500462532043457

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10055741667747498
    2. ' ,' → logprob: -2.350557327270508
    3. 'self' → logprob: -8.725557327270508
    4. '<|end|>' → logprob: -9.225557327270508
    5. ' ' → logprob: -10.225557327270508
    6. ' (' → logprob: -10.975557327270508
    7. '(self' → logprob: -11.975557327270508
    8. ')' → logprob: -12.100557327270508
    9. '(' → logprob: -12.100557327270508
    10. '<|end|>' → logprob: -12.475557327270508

Token 119: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.38764244318008423
    2. ' dx' → logprob: -1.1376423835754395
    3. 'self' → logprob: -7.5126423835754395
    4. ' self' → logprob: -8.887642860412598
    5. '_dx' → logprob: -10.762642860412598
    6. ' ' → logprob: -11.137642860412598
    7. 'x' → logprob: -11.637642860412598
    8. '   ' → logprob: -11.637642860412598
    9. ')' → logprob: -11.887642860412598
    10. '0' → logprob: -11.887642860412598

Token 120: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015711607411503792
    2. ' ,' → logprob: -6.501571178436279
    3. ':' → logprob: -9.876570701599121
    4. ':int' → logprob: -11.751570701599121
    5. ',int' → logprob: -12.376570701599121
    6. '‌,' → logprob: -13.626570701599121
    7. '<|end|>' → logprob: -13.751570701599121
    8. ',
' → logprob: -14.251570701599121
    9. '=' → logprob: -14.376570701599121
    10. '<|end|>' → logprob: -14.626570701599121

Token 121: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6934564113616943
    2. ' int' → logprob: -0.6934564113616943
    3. '0' → logprob: -9.443456649780273
    4. ':int' → logprob: -9.443456649780273
    5. ',int' → logprob: -9.693456649780273
    6. ' ' → logprob: -10.443456649780273
    7. '[int' → logprob: -11.193456649780273
    8. ',' → logprob: -11.318456649780273
    9. '(int' → logprob: -11.318456649780273
    10. '<int' → logprob: -12.068456649780273

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029112942866049707
    2. ' ,' → logprob: -8.250290870666504
    3. '<|end|>' → logprob: -11.375290870666504
    4. ',int' → logprob: -11.750290870666504
    5. ',d' → logprob: -13.000290870666504
    6. ' ' → logprob: -13.000290870666504
    7. '‌,' → logprob: -13.125290870666504
    8. ',
' → logprob: -13.375290870666504
    9. '<|end|>' → logprob: -13.750290870666504
    10. ')' → logprob: -15.500290870666504

Token 123: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.2014162540435791
    2. 'dy' → logprob: -1.701416254043579
    3. ' ' → logprob: -13.201416015625
    4. '.dy' → logprob: -14.701416015625
    5. '<|end|>' → logprob: -15.826416015625
    6. 'Dy' → logprob: -15.826416015625
    7. ',' → logprob: -16.201416015625
    8. ' 
' → logprob: -16.701416015625
    9. 'd' → logprob: -16.701416015625
    10. ')' → logprob: -16.951416015625

Token 124: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038340043276548386
    2. ':' → logprob: -3.4133400917053223
    3. ')' → logprob: -5.663340091705322
    4. ' ):' → logprob: -7.288340091705322
    5. '):
' → logprob: -7.913340091705322
    6. ',' → logprob: -9.788339614868164
    7. ':int' → logprob: -10.413339614868164
    8. '<|end|>' → logprob: -10.913339614868164
    9. ''):' → logprob: -10.913339614868164
    10. '   ' → logprob: -11.663339614868164

Token 125: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10046060383319855
    2. ' int' → logprob: -2.3504605293273926
    3. ')' → logprob: -8.47546100616455
    4. ':int' → logprob: -11.10046100616455
    5. '0' → logprob: -12.10046100616455
    6. '1' → logprob: -12.10046100616455
    7. ' )' → logprob: -12.22546100616455
    8. '(int' → logprob: -12.97546100616455
    9. '=int' → logprob: -13.10046100616455
    10. '[int' → logprob: -13.22546100616455

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004179190844297409
    2. '):
' → logprob: -5.629179000854492
    3. ')' → logprob: -7.754179000854492
    4. ':' → logprob: -8.879179000854492
    5. ' ):' → logprob: -11.879179000854492
    6. '):
' → logprob: -13.879179000854492
    7. ''):' → logprob: -14.004179000854492
    8. '):

' → logprob: -14.504179000854492
    9. '   ' → logprob: -14.504179000854492
    10. ',' → logprob: -15.379179000854492

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06316237896680832
    2. '        ' → logprob: -3.063162326812744
    3. ')' → logprob: -5.688162326812744
    4. ' ' → logprob: -5.938162326812744
    5. ',' → logprob: -6.438162326812744
    6. ' ' → logprob: -6.563162326812744
    7. 'd' → logprob: -7.313162326812744
    8. ' dx' → logprob: -7.313162326812744
    9. '      ' → logprob: -7.563162326812744
    10. ' 
' → logprob: -7.938162326812744

Token 128: ' if' (ID: 538)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.11509054154157639
    2. ' g' → logprob: -2.8650906085968018
    3. '       ' → logprob: -3.7400906085968018
    4. ' if' → logprob: -4.365090370178223
    5. 'if' (adapté à ' if') → logprob: -4.490090370178223
    6. 'self' → logprob: -6.115090370178223
    7. ' self' → logprob: -7.365090370178223
    8. 'd' → logprob: -7.365090370178223
    9. ' gcd' → logprob: -8.115090370178223
    10. ' d' → logprob: -10.240090370178223

Token 129: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.0034553834702819586
    2. 'dx' → logprob: -5.87845516204834
    3. ' dy' → logprob: -7.50345516204834
    4. '(dx' → logprob: -9.62845516204834
    5. ' ' → logprob: -11.50345516204834
    6. ' not' → logprob: -11.75345516204834
    7. ' (' → logprob: -12.00345516204834
    8. '_dx' → logprob: -12.12845516204834
    9. ' ' → logprob: -14.12845516204834
    10. '	d' → logprob: -14.25345516204834

Token 130: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11287257075309753
    2. '==' → logprob: -2.23787260055542
    3. ' ' → logprob: -10.362872123718262
    4. '=' → logprob: -11.612872123718262
    5. ' =' → logprob: -13.237872123718262
    6. ' <' → logprob: -13.487872123718262
    7. '==
' → logprob: -13.612872123718262
    8. ' !=' → logprob: -14.237872123718262
    9. 'is' → logprob: -14.237872123718262
    10. ',' → logprob: -14.612872123718262

Token 131: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026301342993974686
    2. ' ' → logprob: -3.651301383972168
    3. '<|end|>' → logprob: -14.776301383972168
    4. 'dy' → logprob: -15.276301383972168
    5. ' dy' → logprob: -16.27630043029785
    6. '۰' → logprob: -16.40130043029785
    7. '```' → logprob: -17.02630043029785
    8. ' 
' → logprob: -17.15130043029785
    9. ' ' → logprob: -17.40130043029785
    10. '   ' → logprob: -17.40130043029785

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.000018119812012
    3. 'dy' → logprob: -14.000018119812012
    4. '```' → logprob: -16.750017166137695
    5. '

' → logprob: -17.125017166137695
    6. '۰' → logprob: -17.375017166137695
    7. '   ' → logprob: -17.875017166137695
    8. '<|end|>' → logprob: -18.187517166137695
    9. '  ' → logprob: -18.250017166137695
    10. '
' → logprob: -18.687517166137695

Token 133: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25399312376976013
    2. ':' → logprob: -1.5039931535720825
    3. 'and' → logprob: -6.878993034362793
    4. ':
' → logprob: -7.503993034362793
    5. ' or' → logprob: -8.753993034362793
    6. ',' → logprob: -8.878993034362793
    7. '<|end|>' → logprob: -9.128993034362793
    8. ' ' → logprob: -10.003993034362793
    9. '       ' → logprob: -11.878993034362793
    10. '	and' → logprob: -12.378993034362793

Token 134: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.07890333980321884
    2. 'dy' → logprob: -2.5789034366607666
    3. '.dy' → logprob: -11.828903198242188
    4. ' ' → logprob: -12.703903198242188
    5. '<|end|>' → logprob: -13.828903198242188
    6. '	d' → logprob: -13.953903198242188
    7. '0' → logprob: -14.953903198242188
    8. ' dyd' → logprob: -15.578903198242188
    9. '```' → logprob: -16.203903198242188
    10. 'd' → logprob: -16.391403198242188

Token 135: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.24549949169158936
    2. '==' → logprob: -1.6204994916915894
    3. '<|end|>' → logprob: -4.120499610900879
    4. ' ' → logprob: -5.745499610900879
    5. '<|end|>' → logprob: -8.245499610900879
    6. '=' → logprob: -10.120499610900879
    7. ' !=' → logprob: -10.245499610900879
    8. ')' → logprob: -10.495499610900879
    9. ')==' → logprob: -10.745499610900879
    10. '0' → logprob: -10.995499610900879

Token 136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269291490316391
    2. ' ' → logprob: -2.1269290447235107
    3. '<|end|>' → logprob: -14.62692928314209
    4. '  ' → logprob: -16.189428329467773
    5. '۰' → logprob: -16.251928329467773
    6. '1' → logprob: -16.689428329467773
    7. '```' → logprob: -16.751928329467773
    8. ' ' → logprob: -16.876928329467773
    9. '   ' → logprob: -16.939428329467773
    10. 's' → logprob: -17.689428329467773

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017025562701746821
    2. ' ' → logprob: -6.376702785491943
    3. '<|end|>' → logprob: -16.1892032623291
    4. '1' → logprob: -16.2517032623291
    5. '۰' → logprob: -16.7517032623291
    6. '```' → logprob: -17.2517032623291
    7. '  ' → logprob: -18.0017032623291
    8. ' ' → logprob: -18.5642032623291
    9. '০' → logprob: -18.9392032623291
    10. '-' → logprob: -18.9392032623291

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07908982783555984
    2. ':
' → logprob: -2.579089879989624
    3. ':return' → logprob: -8.704090118408203
    4. '):
' → logprob: -11.954090118408203
    5. '       ' → logprob: -12.079090118408203
    6. '):' → logprob: -12.204090118408203
    7. ',' → logprob: -12.329090118408203
    8. ':

' → logprob: -12.454090118408203
    9. '<|end|>' → logprob: -12.829090118408203
    10. ':
' → logprob: -12.954090118408203

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03608795255422592
    2. ':' → logprob: -3.661087989807129
    3. '
' → logprob: -5.161087989807129
    4. ':
' → logprob: -6.411087989807129
    5. ',' → logprob: -7.161087989807129
    6. '       ' → logprob: -7.661087989807129
    7. '):' → logprob: -8.286087989807129
    8. '            
' → logprob: -8.661087989807129
    9. ' raise' → logprob: -9.161087989807129
    10. ' return' → logprob: -9.411087989807129

Token 140: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.17321352660655975
    2. ' raise' → logprob: -1.9232134819030762
    3. '           ' → logprob: -4.548213481903076
    4. 'return' → logprob: -6.673213481903076
    5. 'self' → logprob: -7.548213481903076
    6. '
' → logprob: -7.923213481903076
    7. '	raise' → logprob: -9.798213958740234
    8. 'Raise' → logprob: -10.173213958740234
    9. '_raise' → logprob: -10.923213958740234
    10. 'raises' → logprob: -11.673213958740234

Token 141: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.000206401280593127
    2. 'Value' → logprob: -8.500205993652344
    3. '	Value' → logprob: -13.250205993652344
    4. ' ' → logprob: -14.375205993652344
    5. ' Val' → logprob: -15.875205993652344
    6. '<Value' → logprob: -16.500205993652344
    7. '_value' → logprob: -16.625205993652344
    8. '(Value' → logprob: -16.625205993652344
    9. '_Value' → logprob: -17.000205993652344
    10. ' value' → logprob: -17.375205993652344

Token 142: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00020473242329899222
    2. 'rror' → logprob: -8.500205039978027
    3. 'Value' → logprob: -13.625205039978027
    4. 'ror' → logprob: -17.50020408630371
    5. 'n' → logprob: -18.12520408630371
    6. 'r' → logprob: -18.75020408630371
    7. '
' → logprob: -19.12520408630371
    8. 'Er' → logprob: -19.12520408630371
    9. 'SError' → logprob: -19.37520408630371
    10. '```' → logprob: -19.87520408630371

Token 143: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06869637221097946
    2. '('' → logprob: -3.0686962604522705
    3. '(' → logprob: -5.06869649887085
    4. '       ' → logprob: -5.06869649887085
    5. ':' → logprob: -5.19369649887085
    6. ',' → logprob: -6.94369649887085
    7. '(
' → logprob: -7.56869649887085
    8. '()' → logprob: -9.568696022033691
    9. '           ' → logprob: -9.818696022033691
    10. '        
' → logprob: -10.568696022033691

Token 144: 'Zero' (ID: 20870)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.04428470879793167
    2. 'Zero' → logprob: -4.044284820556641
    3. 'Cannot' → logprob: -4.794284820556641
    4. 'Invalid' → logprob: -5.419284820556641
    5. ' direction' → logprob: -5.669284820556641
    6. 'direction' → logprob: -5.794284820556641
    7. ' Direction' → logprob: -6.169284820556641
    8. 'Directions' → logprob: -6.794284820556641
    9. 'Both' → logprob: -7.044284820556641
    10. 'zero' → logprob: -7.669284820556641

Token 145: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.17026324570178986
    2. '-length' → logprob: -2.9202632904052734
    3. ' direction' → logprob: -3.2952632904052734
    4. 'Vector' → logprob: -3.6702632904052734
    5. 'Direction' → logprob: -4.545263290405273
    6. '-vector' → logprob: -5.045263290405273
    7. '-direction' → logprob: -5.045263290405273
    8. 'vector' → logprob: -5.670263290405273
    9. ' Vector' → logprob: -5.795263290405273
    10. '_vector' → logprob: -5.920263290405273

Token 146: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3384725749492645
    2. ' not' → logprob: -1.338472604751587
    3. ' direction' → logprob: -3.963472604751587
    4. '")' → logprob: -6.338472366333008
    5. 'is' → logprob: -6.838472366333008
    6. 'not' → logprob: -6.963472366333008
    7. 'direction' → logprob: -7.588472366333008
    8. ' ' → logprob: -7.713472366333008
    9. ' cannot' → logprob: -8.088472366333008
    10. ' for' → logprob: -8.963472366333008

Token 147: ' invalid' (ID: 15796)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.052462462335824966
    2. 'not' → logprob: -3.052462577819824
    3. ' invalid' → logprob: -5.927462577819824
    4. 'invalid' → logprob: -6.927462577819824
    5. 'undefined' → logprob: -10.052462577819824
    6. ' ' → logprob: -10.177462577819824
    7. ' ' → logprob: -10.427462577819824
    8. 'n't' → logprob: -10.427462577819824
    9. '   ' → logprob: -10.927462577819824
    10. 'n' → logprob: -11.552462577819824

Token 148: ' for' (ID: 395)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5470154285430908
    2. '")
' → logprob: -0.9220154285430908
    3. ' for' → logprob: -3.797015428543091
    4. ' direction' → logprob: -7.422015190124512
    5. '")
' → logprob: -7.922015190124512
    6. ' as' → logprob: -10.172015190124512
    7. '"' → logprob: -10.422015190124512
    8. '.")' → logprob: -10.672015190124512
    9. '.")
' → logprob: -10.797015190124512
    10. '')' → logprob: -11.297015190124512

Token 149: ' a' (ID: 261)
  Prédit: ' direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.2990787923336029
    2. ' a' → logprob: -2.0490787029266357
    3. ' Direction' → logprob: -2.1740787029266357
    4. 'Direction' → logprob: -4.299078941345215
    5. 'direction' → logprob: -6.674078941345215
    6. ' ' → logprob: -7.549078941345215
    7. 'a' → logprob: -7.799078941345215
    8. '_direction' → logprob: -10.424078941345215
    9. ' directions' → logprob: -10.924078941345215
    10. ' an' → logprob: -11.424078941345215

Token 150: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.10471824556589127
    2. 'direction' → logprob: -3.1047182083129883
    3. 'Direction' → logprob: -3.2297182083129883
    4. ' Direction' → logprob: -4.229718208312988
    5. '_direction' → logprob: -8.604718208312988
    6. ' ' → logprob: -9.354718208312988
    7. 'n' → logprob: -10.104718208312988
    8. '   ' → logprob: -10.729718208312988
    9. ' directional' → logprob: -11.167218208312988
    10. 'irection' → logprob: -11.167218208312988

Token 151: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.22628049552440643
    2. '")' → logprob: -1.6012804508209229
    3. '")
' → logprob: -7.351280689239502
    4. '.")
' → logprob: -9.101280212402344
    5. '")

' → logprob: -10.226280212402344
    6. '.")' → logprob: -11.101280212402344
    7. ')")
' → logprob: -11.601280212402344
    8. '       ' → logprob: -11.726280212402344
    9. ''")
' → logprob: -11.726280212402344
    10. ')' → logprob: -11.976280212402344

Token 152: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6370357275009155
    2. '       ' → logprob: -0.7620357275009155
    3. '        
' → logprob: -6.262035846710205
    4. '<|end|>' → logprob: -7.387035846710205
    5. ',
' → logprob: -7.637035846710205
    6. '  
' → logprob: -7.762035846710205
    7. ',' → logprob: -8.637035369873047
    8. '    
' → logprob: -8.762035369873047
    9. '\
' → logprob: -8.762035369873047
    10. '\n' → logprob: -9.387035369873047

Token 153: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.44071900844573975
    2. '       ' → logprob: -1.4407190084457397
    3. ' g' → logprob: -2.1907191276550293
    4. ' gcd' → logprob: -5.315719127655029
    5. 'd' → logprob: -6.565719127655029
    6. '        
' → logprob: -7.190719127655029
    7. 'div' → logprob: -8.315718650817871
    8. '
' → logprob: -9.065718650817871
    9. ' d' → logprob: -9.565718650817871
    10. 'm' → logprob: -9.565718650817871

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5255312323570251
    2. '=' → logprob: -0.9005312323570251
    3. '_' → logprob: -6.52553129196167
    4. 'cd' → logprob: -8.150530815124512
    5. ' ' → logprob: -8.150530815124512
    6. '_val' → logprob: -9.650530815124512
    7. '_=' → logprob: -9.775530815124512
    8. '   ' → logprob: -10.275530815124512
    9. '=g' → logprob: -10.400530815124512
    10. '	' → logprob: -10.525530815124512

Token 155: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.08910708129405975
    2. ' gcd' → logprob: -2.464107036590576
    3. ' abs' → logprob: -9.339107513427734
    4. 'abs' → logprob: -9.464107513427734
    5. ' g' → logprob: -14.339107513427734
    6. ' ' → logprob: -14.464107513427734
    7. '	g' → logprob: -14.964107513427734
    8. '_g' → logprob: -15.339107513427734
    9. '(g' → logprob: -16.089107513427734
    10. '   ' → logprob: -16.464107513427734

Token 156: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.08227082341909409
    2. '(abs' → logprob: -2.582270860671997
    3. '(' → logprob: -5.707270622253418
    4. 'abs' → logprob: -10.582270622253418
    5. '<|end|>' → logprob: -10.957270622253418
    6. '(
' → logprob: -12.207270622253418
    7. '(d' → logprob: -13.832270622253418
    8. '(x' → logprob: -14.207270622253418
    9. ' (' → logprob: -14.457270622253418
    10. '(dialog' → logprob: -14.832270622253418

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017040544480551034
    2. ' ,' → logprob: -9.125170707702637
    3. ',d' → logprob: -10.000170707702637
    4. ',
' → logprob: -12.000170707702637
    5. '<|end|>' → logprob: -12.500170707702637
    6. 'abs' → logprob: -12.750170707702637
    7. '(dx' → logprob: -14.000170707702637
    8. ',

' → logprob: -14.625170707702637
    9. ' ' → logprob: -14.875170707702637
    10. ')' → logprob: -15.375170707702637

Token 158: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.632635772228241
    2. 'dy' → logprob: -0.757635772228241
    3. ' abs' → logprob: -11.257636070251465
    4. 'abs' → logprob: -11.382636070251465
    5. ' ' → logprob: -12.257636070251465
    6. '.dy' → logprob: -13.507636070251465
    7. '   ' → logprob: -13.757636070251465
    8. ')' → logprob: -14.007636070251465
    9. 'd' → logprob: -14.257636070251465
    10. '	d' → logprob: -14.382636070251465

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006771972868591547
    2. ')
' → logprob: -5.006772041320801
    3. ' )' → logprob: -10.1317720413208
    4. ')

' → logprob: -12.0067720413208
    5. ')
' → logprob: -12.3817720413208
    6. ' )
' → logprob: -13.1317720413208
    7. ' ' → logprob: -14.5067720413208
    8. 'if' → logprob: -14.6317720413208
    9. ')return' → logprob: -14.6317720413208
    10. ' if' → logprob: -14.7567720413208

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14399097859859467
    2. '
' → logprob: -2.143990993499756
    3. 'dx' → logprob: -4.768990993499756
    4. ' dx' → logprob: -5.893990993499756
    5. ')' → logprob: -6.768990993499756
    6. '        
' → logprob: -7.268990993499756
    7. ',' → logprob: -7.268990993499756
    8. ' if' → logprob: -7.518990993499756
    9. '<|end|>' → logprob: -7.518990993499756
    10. '   ' → logprob: -7.768990993499756

Token 161: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -1.0896075963974
    2. ' self' → logprob: -1.2146075963974
    3. 'self' → logprob: -1.7146075963974
    4. 'dx' (adapté à ' dx') → logprob: -1.8396075963974
    5. '       ' → logprob: -3.5896077156066895
    6. '
' → logprob: -9.714607238769531
    7. ' if' → logprob: -9.964607238769531
    8. '_dx' → logprob: -10.089607238769531
    9. ' ' → logprob: -10.589607238769531
    10. '   ' → logprob: -10.714607238769531

Token 162: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5410327315330505
    2. ' =' → logprob: -1.5410327911376953
    3. '=' → logprob: -1.7910327911376953
    4. '//=' → logprob: -3.7910327911376953
    5. ',' → logprob: -4.541032791137695
    6. '//' → logprob: -5.916032791137695
    7. ' /=' → logprob: -8.166032791137695
    8. ' ' → logprob: -8.291032791137695
    9. 'div' → logprob: -9.041032791137695
    10. ' ,' → logprob: -9.041032791137695

Token 163: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016420133411884308
    2. '=g' → logprob: -4.141420364379883
    3. 'g' → logprob: -7.891420364379883
    4. ' g' → logprob: -12.391420364379883
    5. '=
' → logprob: -12.641420364379883
    6. '=

' → logprob: -13.141420364379883
    7. ' =' → logprob: -14.266420364379883
    8. '=_' → logprob: -14.766420364379883
    9. ' ' → logprob: -15.141420364379883
    10. '=}' → logprob: -15.141420364379883

Token 164: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0007100477814674377
    2. ' g' → logprob: -7.2507100105285645
    3. 'abs' → logprob: -16.000709533691406
    4. ' abs' → logprob: -18.375709533691406
    5. '	g' → logprob: -18.750709533691406
    6. '=g' → logprob: -19.875709533691406
    7. '_g' → logprob: -19.875709533691406
    8. ' ' → logprob: -20.875709533691406
    9. '*g' → logprob: -21.125709533691406
    10. ''g' → logprob: -21.375709533691406

Token 165: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12994183599948883
    2. '<|end|>' → logprob: -2.879941940307617
    3. ' dy' → logprob: -3.254941940307617
    4. ',' → logprob: -3.879941940307617
    5. ' 
' → logprob: -6.004941940307617
    6. 'dy' → logprob: -6.254941940307617
    7. '       ' → logprob: -7.254941940307617
    8. '
' → logprob: -7.754941940307617
    9. '  
' → logprob: -8.504941940307617
    10. '        
' → logprob: -9.379941940307617

Token 166: '       ' (ID: 309)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.0592840239405632
    2. ',' → logprob: -3.059283971786499
    3. 'dy' → logprob: -4.684284210205078
    4. ' ,' → logprob: -7.559284210205078
    5. '       ' → logprob: -8.434284210205078
    6. '
' → logprob: -8.684284210205078
    7. ' 
' → logprob: -9.059284210205078
    8. ' ' → logprob: -9.184284210205078
    9. ',
' → logprob: -9.184284210205078
    10. '<|end|>' → logprob: -10.934284210205078

Token 167: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.3868713080883026
    2. 'dy' (adapté à ' dy') → logprob: -1.136871337890625
    3. ' ' → logprob: -16.386871337890625
    4. '.dy' → logprob: -16.761871337890625
    5. 'y' → logprob: -17.386871337890625
    6. ',' → logprob: -17.761871337890625
    7. '0' → logprob: -17.886871337890625
    8. '   ' → logprob: -18.386871337890625
    9. '  ' → logprob: -18.511871337890625
    10. '       ' → logprob: -18.636871337890625

Token 168: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.6346369385719299
    2. ' //' → logprob: -0.7596369385719299
    3. '//' → logprob: -6.259636878967285
    4. '=' → logprob: -9.509636878967285
    5. ' /=' → logprob: -10.259636878967285
    6. '<|end|>' → logprob: -11.634636878967285
    7. ' =' → logprob: -13.759636878967285
    8. '/=' → logprob: -13.884636878967285
    9. '```' → logprob: -14.009636878967285
    10. ' ' → logprob: -14.384636878967285

Token 169: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008021225803531706
    2. '=g' → logprob: -7.250802040100098
    3. '/=' → logprob: -9.875802040100098
    4. '/g' → logprob: -11.500802040100098
    5. 'g' → logprob: -11.625802040100098
    6. '/' → logprob: -11.625802040100098
    7. '=_' → logprob: -12.375802040100098
    8. '=/' → logprob: -13.125802040100098
    9. '=int' → logprob: -14.000802040100098
    10. '_g' → logprob: -14.000802040100098

Token 170: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.016036128625273705
    2. ' g' → logprob: -4.141036033630371
    3. 'abs' → logprob: -13.641036033630371
    4. ' ' → logprob: -15.516036033630371
    5. '	g' → logprob: -16.141036987304688
    6. '_g' → logprob: -16.516036987304688
    7. ' abs' → logprob: -16.641036987304688
    8. 's' → logprob: -16.891036987304688
    9. '[g' → logprob: -17.266036987304688
    10. '=g' → logprob: -17.891036987304688

Token 171: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44985231757164
    2. '       ' → logprob: -1.0748523473739624
    3. 'self' → logprob: -4.824852466583252
    4. '<|end|>' → logprob: -5.199852466583252
    5. '        
' → logprob: -5.699852466583252
    6. ' self' → logprob: -6.949852466583252
    7. ',' → logprob: -7.449852466583252
    8. ' if' → logprob: -7.449852466583252
    9. ' 
' → logprob: -7.949852466583252
    10. '        ' → logprob: -8.074851989746094

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09906622767448425
    2. ' self' → logprob: -2.9740662574768066
    3. 'self' → logprob: -3.8490662574768066
    4. ' if' → logprob: -4.349066257476807
    5. '        ' → logprob: -5.474066257476807
    6. 'if' → logprob: -6.224066257476807
    7. '
' → logprob: -6.599066257476807
    8. '        
' → logprob: -7.224066257476807
    9. ',' → logprob: -9.099065780639648
    10. ' 
' → logprob: -9.099065780639648

Token 173: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.46802759170532227
    2. 'if' → logprob: -1.0930275917053223
    3. ' if' → logprob: -3.9680275917053223
    4. ' self' → logprob: -4.468027591705322
    5. '       ' → logprob: -4.843027591705322
    6. 'dx' → logprob: -8.968027114868164
    7. '
' → logprob: -10.093027114868164
    8. '        
' → logprob: -10.343027114868164
    9. '   ' → logprob: -10.343027114868164
    10. '#' (adapté à ' #') → logprob: -11.093027114868164

Token 174: ' Normalize' (ID: 155762)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3888128101825714
    2. 'if' → logprob: -1.763812780380249
    3. ' self' → logprob: -2.638812780380249
    4. 'self' → logprob: -3.138812780380249
    5. '       ' → logprob: -4.138813018798828
    6. ' #' → logprob: -5.013813018798828
    7. '#' → logprob: -5.138813018798828
    8. 'dx' → logprob: -5.888813018798828
    9. ' dx' → logprob: -6.388813018798828
    10. 'If' → logprob: -6.638813018798828

Token 175: ' direction' (ID: 9262)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14799556136131287
    2. 'if' → logprob: -2.2729954719543457
    3. '        ' → logprob: -3.7729954719543457
    4. '       ' → logprob: -4.897995471954346
    5. ':' → logprob: -6.647995471954346
    6. ' =' → logprob: -7.147995471954346
    7. 'dx' → logprob: -7.272995471954346
    8. ' dx' → logprob: -7.522995471954346
    9. '    ' → logprob: -9.022995948791504
    10. 'self' → logprob: -9.147995948791504

Token 176: ' so' (ID: 813)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3292773962020874
    2. '       ' → logprob: -1.5792773962020874
    3. '        ' → logprob: -3.454277515411377
    4. 'if' → logprob: -3.954277515411377
    5. ',' → logprob: -4.829277515411377
    6. ' to' → logprob: -5.454277515411377
    7. ':' → logprob: -6.329277515411377
    8. '<|end|>' → logprob: -6.579277515411377
    9. 'dx' → logprob: -6.704277515411377
    10. ' (' → logprob: -6.829277515411377

Token 177: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.0017721657641232014
    2. 'that' → logprob: -6.626772403717041
    3. ' if' → logprob: -8.376771926879883
    4. ' dx' → logprob: -9.251771926879883
    5. '       ' → logprob: -9.876771926879883
    6. '        ' → logprob: -11.126771926879883
    7. 'dx' → logprob: -11.251771926879883
    8. ' the' → logprob: -11.376771926879883
    9. 'if' → logprob: -11.626771926879883
    10. ' ' → logprob: -11.876771926879883

Token 178: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.6661283373832703
    2. 'dx' → logprob: -1.541128396987915
    3. ' if' → logprob: -2.291128396987915
    4. 'if' → logprob: -2.541128396987915
    5. ' dy' → logprob: -3.666128396987915
    6. '(dx' → logprob: -3.666128396987915
    7. ' (' → logprob: -3.791128396987915
    8. 'dy' → logprob: -4.666128158569336
    9. ' either' → logprob: -5.166128158569336
    10. ' the' → logprob: -6.166128158569336

Token 179: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3595890402793884
    2. '>=' → logprob: -1.8595890998840332
    3. ',' → logprob: -3.234589099884033
    4. ' >' → logprob: -3.234589099884033
    5. '<|end|>' → logprob: -3.609589099884033
    6. ' is' → logprob: -3.734589099884033
    7. '>' → logprob: -4.234589099884033
    8. ' ' → logprob: -7.609589099884033
    9. '=' → logprob: -8.484588623046875
    10. ' always' → logprob: -8.484588623046875

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02054235339164734
    2. ' ' → logprob: -3.8955423831939697
    3. '```' → logprob: -15.64554214477539
    4. '   ' → logprob: -16.02054214477539
    5. '1' → logprob: -16.52054214477539
    6. ' ' → logprob: -17.45804214477539
    7. '  ' → logprob: -17.52054214477539
    8. '<|end|>' → logprob: -17.64554214477539
    9. '۰' → logprob: -17.83304214477539
    10. '`' → logprob: -18.27054214477539

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '```' → logprob: -16.12520408630371
    4. '1' → logprob: -16.50020408630371
    5. '۰' → logprob: -17.68770408630371
    6. '<|end|>' → logprob: -17.75020408630371
    7. '
' → logprob: -17.93770408630371
    8. '   ' → logprob: -18.00020408630371
    9. '

' → logprob: -18.37520408630371
    10. 'zero' → logprob: -18.43770408630371

Token 182: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9068392515182495
    2. ',' → logprob: -1.6568392515182495
    3. ' if' → logprob: -1.7818392515182495
    4. ' or' → logprob: -1.9068392515182495
    5. '
' → logprob: -3.531839370727539
    6. '<|end|>' → logprob: -3.656839370727539
    7. ' and' → logprob: -4.406839370727539
    8. 'if' → logprob: -4.531839370727539
    9. 'or' → logprob: -6.031839370727539
    10. ';if' → logprob: -6.531839370727539

Token 183: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.05490868538618088
    2. 'or' → logprob: -3.5549087524414062
    3. ' dy' → logprob: -4.554908752441406
    4. 'dy' → logprob: -5.429908752441406
    5. ' and' → logprob: -5.554908752441406
    6. '       ' → logprob: -5.679908752441406
    7. 'and' → logprob: -6.804908752441406
    8. ' if' → logprob: -7.929908752441406
    9. ' dx' → logprob: -8.304908752441406
    10. 'dx' → logprob: -8.554908752441406

Token 184: ' if' (ID: 538)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.2980024516582489
    2. 'dx' → logprob: -2.0480024814605713
    3. ' (' → logprob: -2.6730024814605713
    4. 'if' → logprob: -4.048002243041992
    5. ' dx' → logprob: -4.048002243041992
    6. ' if' → logprob: -4.298002243041992
    7. 'dy' → logprob: -4.923002243041992
    8. ' dy' → logprob: -6.548002243041992
    9. '(d' → logprob: -7.048002243041992
    10. '(if' → logprob: -7.923002243041992

Token 185: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.026365790516138077
    2. ' dx' → logprob: -3.6513657569885254
    3. '(dx' → logprob: -9.776366233825684
    4. '_dx' → logprob: -11.901366233825684
    5. '.dx' → logprob: -14.526366233825684
    6. '   ' → logprob: -14.901366233825684
    7. '0' → logprob: -15.526366233825684
    8. 'Dx' → logprob: -15.651366233825684
    9. '```' → logprob: -15.651366233825684
    10. 'DX' → logprob: -16.026365280151367

Token 186: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11440139263868332
    2. ' ==' → logprob: -2.239401340484619
    3. '0' → logprob: -6.989401340484619
    4. '=' → logprob: -7.739401340484619
    5. ' ' → logprob: -9.489401817321777
    6. ' is' → logprob: -9.864401817321777
    7. 'is' → logprob: -10.989401817321777
    8. '<' → logprob: -11.239401817321777
    9. '<|end|>' → logprob: -11.239401817321777
    10. '==-' → logprob: -11.489401817321777

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '<|end|>' → logprob: -17.750709533691406
    4. '  ' → logprob: -17.875709533691406
    5. '```' → logprob: -17.875709533691406
    6. '

' → logprob: -18.938209533691406
    7. '   ' → logprob: -18.938209533691406
    8. '۰' → logprob: -19.063209533691406
    9. '=' → logprob: -19.250709533691406
    10. '
' → logprob: -19.750709533691406

Token 188: ' then' (ID: 1815)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04549543187022209
    2. ' dy' → logprob: -4.170495510101318
    3. ' ,' → logprob: -4.295495510101318
    4. 'dy' → logprob: -4.795495510101318
    5. ' then' → logprob: -5.420495510101318
    6. ':' → logprob: -6.420495510101318
    7. ' and' → logprob: -7.795495510101318
    8. 'and' → logprob: -7.920495510101318
    9. 'then' → logprob: -9.54549503326416
    10. ' ' → logprob: -9.79549503326416

Token 189: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.38690972328186035
    2. 'dy' → logprob: -1.1369097232818604
    3. ' ' → logprob: -11.136909484863281
    4. '   ' → logprob: -11.136909484863281
    5. '  ' → logprob: -12.386909484863281
    6. '    ' → logprob: -12.761909484863281
    7. '     ' → logprob: -14.136909484863281
    8. '.dy' → logprob: -14.511909484863281
    9. '       ' → logprob: -14.886909484863281
    10. '
' → logprob: -14.886909484863281

Token 190: '>' (ID: 29)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.23430469632148743
    2. ' >=' → logprob: -2.234304666519165
    3. '>' → logprob: -2.359304666519165
    4. ' >' → logprob: -4.984304904937744
    5. '=' → logprob: -8.234304428100586
    6. ' ' → logprob: -9.984304428100586
    7. '<|end|>' → logprob: -10.109304428100586
    8. '<' → logprob: -10.484304428100586
    9. '≥' → logprob: -10.734304428100586
    10. '<=' → logprob: -11.234304428100586

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05501667037606239
    2. ' ' → logprob: -2.9300167560577393
    3. '>' → logprob: -9.30501651763916
    4. '=' → logprob: -10.43001651763916
    5. '<|end|>' → logprob: -11.93001651763916
    6. ' >' → logprob: -12.43001651763916
    7. '  ' → logprob: -14.68001651763916
    8. ')' → logprob: -14.99251651763916
    9. '<|end|>' → logprob: -15.24251651763916
    10. '1' → logprob: -15.36751651763916

Token 192: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007602481171488762
    2. ' if' → logprob: -6.007602691650391
    3. '<|end|>' → logprob: -6.382602691650391
    4. '
' → logprob: -6.632602691650391
    5. 'if' → logprob: -7.007602691650391
    6. ',' → logprob: -7.007602691650391
    7. '```' → logprob: -9.88260269165039
    8. '        
' → logprob: -9.88260269165039
    9. '   ' → logprob: -10.38260269165039
    10. ':' → logprob: -10.50760269165039

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008852534228935838
    2. ' if' → logprob: -7.125885486602783
    3. 'if' → logprob: -10.375885009765625
    4. '        
' → logprob: -10.875885009765625
    5. '        ' → logprob: -11.250885009765625
    6. ' self' → logprob: -11.875885009765625
    7. '   ' → logprob: -12.625885009765625
    8. 'self' → logprob: -13.000885009765625
    9. '<|end|>' → logprob: -13.625885009765625
    10. '```' → logprob: -13.750885009765625

Token 194: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14905261993408203
    2. 'if' (adapté à ' if') → logprob: -2.024052619934082
    3. '       ' → logprob: -5.274052619934082
    4. '        ' → logprob: -6.899052619934082
    5. ' self' → logprob: -9.024052619934082
    6. 'self' → logprob: -10.399052619934082
    7. ' ' → logprob: -10.524052619934082
    8. '    ' → logprob: -10.899052619934082
    9. '   ' → logprob: -11.399052619934082
    10. '        
' → logprob: -12.524052619934082

Token 195: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.010433614253997803
    2. 'dx' → logprob: -4.635433673858643
    3. '(dx' → logprob: -7.635433673858643
    4. ' (' → logprob: -8.635433197021484
    5. ' ' → logprob: -11.760433197021484
    6. '(' → logprob: -12.135433197021484
    7. '_dx' → logprob: -13.260433197021484
    8. '   ' → logprob: -14.510433197021484
    9. '  ' → logprob: -15.135433197021484
    10. ' dy' → logprob: -15.635433197021484

Token 196: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3133317828178406
    2. '<' → logprob: -1.3133318424224854
    3. ' ' → logprob: -10.188331604003906
    4. '<|end|>' → logprob: -11.313331604003906
    5. '0' → logprob: -12.063331604003906
    6. ')' → logprob: -13.188331604003906
    7. '[' → logprob: -13.375831604003906
    8. ',' → logprob: -13.563331604003906
    9. ')<' → logprob: -13.625831604003906
    10. '
' → logprob: -14.438331604003906

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14267617464065552
    2. ' ' → logprob: -2.0176761150360107
    3. '<|end|>' → logprob: -15.20517635345459
    4. '=' → logprob: -15.64267635345459
    5. '۰' → logprob: -15.95517635345459
    6. '```' → logprob: -16.455175399780273
    7. '1' → logprob: -16.455175399780273
    8. '  ' → logprob: -16.705175399780273
    9. '   ' → logprob: -16.955175399780273
    10. '
' → logprob: -17.142675399780273

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '۰' → logprob: -17.187530517578125
    4. '```' → logprob: -17.500030517578125
    5. '=' → logprob: -17.937530517578125
    6. '1' → logprob: -18.062530517578125
    7. '
' → logprob: -18.125030517578125
    8. '

' → logprob: -18.187530517578125
    9. '   ' → logprob: -18.500030517578125
    10. ')' → logprob: -18.937530517578125

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.115701824426651
    2. ' or' → logprob: -2.615701913833618
    3. ',' → logprob: -4.115701675415039
    4. '<|end|>' → logprob: -4.740701675415039
    5. '       ' → logprob: -5.365701675415039
    6. ':
' → logprob: -5.490701675415039
    7. ' and' → logprob: -6.865701675415039
    8. '<|end|>' → logprob: -7.490701675415039
    9. ' :' → logprob: -8.990701675415039
    10. '           ' → logprob: -9.115701675415039

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03925561159849167
    2. ' dx' → logprob: -4.039255619049072
    3. '        ' → logprob: -4.914255619049072
    4. ',' → logprob: -5.289255619049072
    5. '            ' → logprob: -5.664255619049072
    6. 'dx' → logprob: -6.164255619049072
    7. ' ' → logprob: -6.539255619049072
    8. '       ' → logprob: -7.414255619049072
    9. '<|end|>' → logprob: -8.914255142211914
    10. '          ' → logprob: -9.414255142211914

Token 201: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.16207951307296753
    2. 'dx' (adapté à ' dx') → logprob: -1.9120795726776123
    3. '           ' → logprob: -6.412079334259033
    4. '            ' → logprob: -9.037079811096191
    5. '        ' → logprob: -11.037079811096191
    6. '_dx' → logprob: -11.287079811096191
    7. ' ' → logprob: -11.662079811096191
    8. 'x' → logprob: -11.787079811096191
    9. '-d' → logprob: -12.037079811096191
    10. '-' → logprob: -12.037079811096191

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029656756669282913
    2. '=' → logprob: -3.6546566486358643
    3. ',' → logprob: -5.779656887054443
    4. ' *=' → logprob: -8.529656410217285
    5. '*=' → logprob: -10.779656410217285
    6. '=-' → logprob: -11.029656410217285
    7. ' ,' → logprob: -11.154656410217285
    8. ' ' → logprob: -12.279656410217285
    9. '<|end|>' → logprob: -12.279656410217285
    10. ')' → logprob: -14.154656410217285

Token 203: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39450982213020325
    2. ' -' → logprob: -1.1445097923278809
    3. '-x' → logprob: -6.644509792327881
    4. '-code' → logprob: -6.769509792327881
    5. '-d' → logprob: -7.269509792327881
    6. '-ip' → logprob: -7.769509792327881
    7. '-output' → logprob: -8.144510269165039
    8. '-user' → logprob: -8.394510269165039
    9. '-run' → logprob: -8.644510269165039
    10. '-token' → logprob: -8.769510269165039

Token 204: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.6240566083070007e-06
    2. ' dx' → logprob: -13.750001907348633
    3. 'x' → logprob: -15.625001907348633
    4. '<|end|>' → logprob: -15.875001907348633
    5. '_dx' → logprob: -15.875001907348633
    6. '(dx' → logprob: -16.250001907348633
    7. '.dx' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. '1' → logprob: -18.375001907348633
    10. ' ' → logprob: -18.875001907348633

Token 205: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5776746273040771
    2. '       ' → logprob: -0.9526746273040771
    3. ',' → logprob: -3.827674627304077
    4. '
' → logprob: -4.327674865722656
    5. ' dy' → logprob: -4.452674865722656
    6. '<|end|>' → logprob: -5.952674865722656
    7. 'dy' → logprob: -6.202674865722656
    8. ' and' → logprob: -7.577674865722656
    9. ',
' → logprob: -7.827674865722656
    10. 'and' → logprob: -8.202674865722656

Token 206: '           ' (ID: 352)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.11776558309793472
    2. 'dy' → logprob: -2.3677656650543213
    3. '           ' → logprob: -4.117765426635742
    4. '       ' → logprob: -7.242765426635742
    5. ',' → logprob: -7.992765426635742
    6. ' and' → logprob: -10.617765426635742
    7. '   ' → logprob: -10.742765426635742
    8. '.dy' → logprob: -11.992765426635742
    9. '    ' → logprob: -13.117765426635742
    10. '        ' → logprob: -13.367765426635742

Token 207: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.005260083824396133
    2. ' dy' → logprob: -5.380259990692139
    3. '-d' → logprob: -7.505259990692139
    4. '-' → logprob: -9.380260467529297
    5. ' -' → logprob: -12.880260467529297
    6. '   ' → logprob: -13.380260467529297
    7. 'y' → logprob: -14.380260467529297
    8. '    ' → logprob: -16.130260467529297
    9. '.dy' → logprob: -16.255260467529297
    10. '  ' → logprob: -16.755260467529297

Token 208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005356620531529188
    2. ' =' → logprob: -5.255356788635254
    3. '=-' → logprob: -9.005356788635254
    4. ' ' → logprob: -18.505355834960938
    5. '<|end|>' → logprob: -18.880355834960938
    6. '=
' → logprob: -19.005355834960938
    7. '-=' → logprob: -19.380355834960938
    8. '=(-' → logprob: -19.755355834960938
    9. '=

' → logprob: -19.880355834960938
    10. '   ' → logprob: -20.130355834960938

Token 209: ' -' (ID: 533)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.266147643327713
    2. ' -' → logprob: -1.5161476135253906
    3. '-' → logprob: -4.266147613525391
    4. '-D' → logprob: -11.14114761352539
    5. '-ħ' → logprob: -11.39114761352539
    6. '-dd' → logprob: -12.64114761352539
    7. '-dia' → logprob: -12.64114761352539
    8. '-ui' → logprob: -12.76614761352539
    9. '-y' → logprob: -12.89114761352539
    10. '-da' → logprob: -12.89114761352539

Token 210: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.688212614681106e-05
    2. ' dy' → logprob: -11.125017166137695
    3. '<|end|>' → logprob: -13.250017166137695
    4. 'd' → logprob: -16.000017166137695
    5. 'dx' → logprob: -17.125017166137695
    6. ' ' → logprob: -17.250017166137695
    7. '.dy' → logprob: -17.500017166137695
    8. 'dym' → logprob: -17.750017166137695
    9. 'di' → logprob: -18.125017166137695
    10. 'ddy' → logprob: -18.500017166137695

Token 211: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025917079765349627
    2. 'self' → logprob: -6.627591609954834
    3. '<|end|>' → logprob: -7.627591609954834
    4. ' self' → logprob: -8.252592086791992
    5. ')' → logprob: -8.377592086791992
    6. ',' → logprob: -8.627592086791992
    7. '
' → logprob: -10.127592086791992
    8. '	' → logprob: -11.627592086791992
    9. '        
' → logprob: -11.752592086791992
    10. '   ' → logprob: -11.877592086791992

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026373455300927162
    2. 'self' → logprob: -3.7763733863830566
    3. ' self' → logprob: -6.151373386383057
    4. '<|end|>' → logprob: -7.901373386383057
    5. ')' → logprob: -8.776373863220215
    6. ',' → logprob: -9.026373863220215
    7. '	' → logprob: -9.401373863220215
    8. '	self' → logprob: -9.526373863220215
    9. '   ' → logprob: -10.401373863220215
    10. 'else' → logprob: -10.526373863220215

Token 213: ' elif' (ID: 9497)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.29166099429130554
    2. '       ' → logprob: -1.416661024093628
    3. ' self' → logprob: -5.291660785675049
    4. '   ' → logprob: -6.416660785675049
    5. 'if' → logprob: -6.541660785675049
    6. 'else' → logprob: -6.916660785675049
    7. 'elif' (adapté à ' elif') → logprob: -6.916660785675049
    8. '	self' → logprob: -9.041661262512207
    9. ' if' → logprob: -9.791661262512207
    10. ')' → logprob: -10.166661262512207

Token 214: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.47408369183540344
    2. 'dx' → logprob: -0.974083662033081
    3. '(dx' → logprob: -12.97408390045166
    4. '_dx' → logprob: -13.47408390045166
    5. '.dx' → logprob: -13.84908390045166
    6. '
' → logprob: -14.59908390045166
    7. '   ' → logprob: -14.59908390045166
    8. ' ' → logprob: -15.09908390045166
    9. 'd' → logprob: -15.47408390045166
    10. 'x' → logprob: -15.84908390045166

Token 215: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5247224569320679
    2. ' ==' → logprob: -0.8997224569320679
    3. '=' → logprob: -6.899722576141357
    4. '0' → logprob: -7.649722576141357
    5. ' ' → logprob: -10.0247220993042
    6. '>' → logprob: -11.1497220993042
    7. ']==' → logprob: -11.3997220993042
    8. '[' → logprob: -11.8997220993042
    9. ' =' → logprob: -11.8997220993042
    10. ')==' → logprob: -12.0247220993042

Token 216: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008614926598966122
    2. ' ' → logprob: -4.758615016937256
    3. '<|end|>' → logprob: -15.383614540100098
    4. '  ' → logprob: -16.633615493774414
    5. '   ' → logprob: -17.571115493774414
    6. '
' → logprob: -17.821115493774414
    7. '۰' → logprob: -17.883615493774414
    8. '```' → logprob: -18.196115493774414
    9. '=' → logprob: -18.946115493774414
    10. ' 
' → logprob: -19.071115493774414

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.625066757202148
    3. '<|end|>' → logprob: -14.500066757202148
    4. '۰' → logprob: -16.81256675720215
    5. '  ' → logprob: -18.06256675720215
    6. '０' → logprob: -18.37506675720215
    7. '   ' → logprob: -18.50006675720215
    8. '```' → logprob: -18.56256675720215
    9. '
' → logprob: -19.06256675720215
    10. '

' → logprob: -19.18756675720215

Token 218: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08942095935344696
    2. 'and' → logprob: -2.464421033859253
    3. ':' → logprob: -7.839420795440674
    4. ':
' → logprob: -9.839421272277832
    5. '       ' → logprob: -11.339421272277832
    6. '           ' → logprob: -11.714421272277832
    7. ' ' → logprob: -11.839421272277832
    8. ',' → logprob: -13.339421272277832
    9. '   ' → logprob: -13.464421272277832
    10. ' :' → logprob: -13.839421272277832

Token 219: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.126929372549057
    2. ' dy' → logprob: -2.12692928314209
    3. '.dy' → logprob: -14.12692928314209
    4. 'd' → logprob: -15.50192928314209
    5. '	d' → logprob: -16.376930236816406
    6. '
' → logprob: -16.751930236816406
    7. 'Dy' → logprob: -16.876930236816406
    8. '   ' → logprob: -17.126930236816406
    9. ' ' → logprob: -17.876930236816406
    10. '

' → logprob: -18.376930236816406

Token 220: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47414201498031616
    2. ' <' → logprob: -0.9741420149803162
    3. '<|end|>' → logprob: -9.849142074584961
    4. ' ' → logprob: -11.849142074584961
    5. '[' → logprob: -14.224142074584961
    6. '<=' → logprob: -14.474142074584961
    7. '()<' → logprob: -14.849142074584961
    8. ')<' → logprob: -14.974142074584961
    9. ' <=' → logprob: -14.974142074584961
    10. '<class' → logprob: -15.599142074584961

Token 221: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017049367306753993
    2. ' ' → logprob: -6.376705169677734
    3. '<|end|>' → logprob: -12.876705169677734
    4. '=' → logprob: -16.501705169677734
    5. '۰' → logprob: -17.876705169677734
    6. '1' → logprob: -18.001705169677734
    7. '>' → logprob: -18.251705169677734
    8. '  ' → logprob: -18.876705169677734
    9. '<|end|>' → logprob: -18.876705169677734
    10. '   ' → logprob: -19.501705169677734

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -15.125027656555176
    4. '1' → logprob: -18.375028610229492
    5. '=' → logprob: -18.500028610229492
    6. '۰' → logprob: -18.750028610229492
    7. '   ' → logprob: -19.375028610229492
    8. '>' → logprob: -19.625028610229492
    9. '```' → logprob: -19.625028610229492
    10. ',' → logprob: -20.250028610229492

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017627935856580734
    2. ':
' → logprob: -4.392627716064453
    3. '           ' → logprob: -5.892627716064453
    4. '=' → logprob: -7.517627716064453
    5. ' =' → logprob: -8.017627716064453
    6. '):' → logprob: -8.017627716064453
    7. '<|end|>' → logprob: -8.142627716064453
    8. '):
' → logprob: -8.517627716064453
    9. ',' → logprob: -8.517627716064453
    10. ')' → logprob: -8.767627716064453

Token 224: '           ' (ID: 352)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.06723221391439438
    2. '           ' → logprob: -2.942232131958008
    3. 'dy' → logprob: -4.442232131958008
    4. '       ' → logprob: -8.067232131958008
    5. '   ' → logprob: -10.317232131958008
    6. ' dyd' → logprob: -10.317232131958008
    7. '.dy' → logprob: -10.442232131958008
    8. '               ' → logprob: -11.067232131958008
    9. '            ' → logprob: -11.192232131958008
    10. ' ' → logprob: -11.317232131958008

Token 225: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.0297732874751091
    2. ' dy' → logprob: -3.529773235321045
    3. '-d' → logprob: -11.154773712158203
    4. '           ' → logprob: -12.404773712158203
    5. '-' → logprob: -12.904773712158203
    6. 'y' → logprob: -14.529773712158203
    7. '.dy' → logprob: -14.654773712158203
    8. '               ' → logprob: -15.529773712158203
    9. '   ' → logprob: -16.029773712158203
    10. 'Dy' → logprob: -16.154773712158203

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614926598966122
    2. ' =' → logprob: -4.758615016937256
    3. '*=' → logprob: -15.133614540100098
    4. '=-' → logprob: -16.133615493774414
    5. ' *=' → logprob: -18.008615493774414
    6. '<|end|>' → logprob: -18.383615493774414
    7. ' ' → logprob: -18.758615493774414
    8. '.=' → logprob: -19.258615493774414
    9. ',' → logprob: -19.383615493774414
    10. '>' → logprob: -19.883615493774414

Token 227: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3557073473930359
    2. '-d' → logprob: -1.7307074069976807
    3. '-' → logprob: -2.1057074069976807
    4. '-y' → logprob: -9.355707168579102
    5. '-D' → logprob: -9.355707168579102
    6. '-user' → logprob: -11.480707168579102
    7. '-di' → logprob: -11.605707168579102
    8. '-data' → logprob: -11.730707168579102
    9. '-int' → logprob: -11.980707168579102
    10. '-dia' → logprob: -12.105707168579102

Token 228: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -2.1008713702030946e-06
    2. ' dy' → logprob: -13.125001907348633
    3. 'di' → logprob: -17.625001907348633
    4. '.dy' → logprob: -18.125001907348633
    5. 'y' → logprob: -18.250001907348633
    6. 'd' → logprob: -18.250001907348633
    7. 'dym' → logprob: -18.500001907348633
    8. '<|end|>' → logprob: -18.750001907348633
    9. 'dyr' → logprob: -18.875001907348633
    10. 'ddy' → logprob: -19.375001907348633

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008914520149119198
    2. 'self' → logprob: -7.25089168548584
    3. '
' → logprob: -9.00089168548584
    4. ' self' → logprob: -10.37589168548584
    5. '        
' → logprob: -11.00089168548584
    6. ',' → logprob: -13.00089168548584
    7. '   ' → logprob: -13.12589168548584
    8. '<|end|>' → logprob: -13.50089168548584
    9. '  
' → logprob: -14.25089168548584
    10. '            
' → logprob: -14.62589168548584

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00502027478069067
    2. 'self' → logprob: -5.3800201416015625
    3. ' self' → logprob: -8.380020141601562
    4. '
' → logprob: -9.005020141601562
    5. '   ' → logprob: -10.380020141601562
    6. '        
' → logprob: -11.380020141601562
    7. '	self' → logprob: -14.130020141601562
    8. ',' → logprob: -14.630020141601562
    9. 'def' → logprob: -14.630020141601562
    10. '            
' → logprob: -14.755020141601562

Token 231: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.013923252932727337
    2. '       ' → logprob: -4.388923168182373
    3. ' self' → logprob: -6.638923168182373
    4. '   ' → logprob: -9.638923645019531
    5. '
' → logprob: -10.388923645019531
    6. '	self' → logprob: -12.763923645019531
    7. '(self' → logprob: -13.263923645019531
    8. '        
' → logprob: -13.388923645019531
    9. ' ' → logprob: -13.763923645019531
    10. '  ' → logprob: -15.638923645019531

Token 232: '.dx' (ID: 111318)
  Prédit: '.dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dx' → logprob: -0.0266644936054945
    2. '.' → logprob: -3.6516644954681396
    3. ' .' → logprob: -8.651664733886719
    4. '.d' → logprob: -9.026664733886719
    5. '.dy' → logprob: -10.651664733886719
    6. '.df' → logprob: -12.151664733886719
    7. '.dp' → logprob: -12.151664733886719
    8. '.dt' → logprob: -12.401664733886719
    9. '.dc' → logprob: -12.651664733886719
    10. '.dex' → logprob: -12.776664733886719

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34861958026885986
    2. '=' → logprob: -1.2236195802688599
    3. ' ' → logprob: -9.72361946105957
    4. '<|end|>' → logprob: -9.72361946105957
    5. ',' → logprob: -9.97361946105957
    6. ' =
' → logprob: -12.09861946105957
    7. ' ,' → logprob: -13.34861946105957
    8. '=int' → logprob: -15.22361946105957
    9. '=
' → logprob: -15.34861946105957
    10. ')' → logprob: -15.47361946105957

Token 234: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0004307884373702109
    2. ' dx' → logprob: -7.750430583953857
    3. '_dx' → logprob: -16.250431060791016
    4. '(dx' → logprob: -16.375431060791016
    5. 'Dx' → logprob: -18.375431060791016
    6. '.dx' → logprob: -19.000431060791016
    7. 'd' → logprob: -19.750431060791016
    8. 'x' → logprob: -19.750431060791016
    9. 'dy' → logprob: -19.750431060791016
    10. 'DX' → logprob: -20.125431060791016

Token 235: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3075401484966278
    2. 'self' → logprob: -1.4325401782989502
    3. ' self' → logprob: -4.307539939880371
    4. '
' → logprob: -4.932539939880371
    5. ',' → logprob: -6.557539939880371
    6. '        
' → logprob: -6.932539939880371
    7. '<|end|>' → logprob: -6.932539939880371
    8. '   ' → logprob: -7.432539939880371
    9. ' ' → logprob: -8.182539939880371
    10. ' 
' → logprob: -8.432539939880371

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1924372762441635
    2. 'self' → logprob: -1.8174372911453247
    3. ' self' → logprob: -4.817437171936035
    4. ',' → logprob: -5.567437171936035
    5. '
' → logprob: -8.067437171936035
    6. '	self' → logprob: -9.442437171936035
    7. '   ' → logprob: -9.567437171936035
    8. ',
' → logprob: -9.567437171936035
    9. ',self' → logprob: -9.942437171936035
    10. '	' → logprob: -10.192437171936035

Token 237: ' self' (ID: 1051)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.009066895581781864
    2. 'self' (adapté à ' self') → logprob: -4.759067058563232
    3. ' dy' → logprob: -7.759067058563232
    4. ' self' → logprob: -10.634066581726074
    5. '   ' → logprob: -14.509066581726074
    6. '       ' → logprob: -14.509066581726074
    7. '.dy' → logprob: -15.884066581726074
    8. 'd' → logprob: -16.63406753540039
    9. ' ' → logprob: -17.25906753540039
    10. 'dym' → logprob: -17.88406753540039

Token 238: '.dy' (ID: 147561)
  Prédit: '.dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dy' → logprob: -0.5762364268302917
    2. 'dy' → logprob: -0.8262364268302917
    3. '.' → logprob: -8.576236724853516
    4. ' dy' → logprob: -9.326236724853516
    5. 'y' → logprob: -11.451236724853516
    6. '.y' → logprob: -12.326236724853516
    7. '.d' → logprob: -13.576236724853516
    8. ' .' → logprob: -13.826236724853516
    9. 'd' → logprob: -14.201236724853516
    10. 'ddy' → logprob: -15.326236724853516

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132789433002472
    2. ' =' → logprob: -1.3132789134979248
    3. '<|end|>' → logprob: -11.188279151916504
    4. ' ' → logprob: -12.813279151916504
    5. ' dy' → logprob: -15.563279151916504
    6. '=
' → logprob: -15.813279151916504
    7. ' =
' → logprob: -15.938279151916504
    8. ')' → logprob: -16.188278198242188
    9. 'dy' → logprob: -16.688278198242188
    10. ' ' → logprob: -17.688278198242188

Token 240: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00317783304490149
    2. ' dy' → logprob: -5.753177642822266
    3. 'd' → logprob: -16.378177642822266
    4. '.dy' → logprob: -17.253177642822266
    5. 'y' → logprob: -17.628177642822266
    6. ' ' → logprob: -18.253177642822266
    7. '   ' → logprob: -18.878177642822266
    8. 'Dy' → logprob: -19.378177642822266
    9. 'dym' → logprob: -19.378177642822266
    10. '0' → logprob: -19.753177642822266

Token 241: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7762576937675476
    2. 'def' → logprob: -1.0262577533721924
    3. '<|end|>' → logprob: -1.7762577533721924
    4. '
' → logprob: -5.401257514953613
    5. ' def' → logprob: -6.526257514953613
    6. '    
' → logprob: -6.526257514953613
    7. ')' → logprob: -6.526257514953613
    8. 'class' → logprob: -6.651257514953613
    9. '<|end|>' → logprob: -6.901257514953613
    10. '```' → logprob: -8.151257514953613

Token 243: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.9981420336989686e-05
    2. '   ' → logprob: -11.500020027160645
    3. ' def' → logprob: -11.625020027160645
    4. '__' → logprob: -14.375020027160645
    5. '    
' → logprob: -15.875020027160645
    6. '@' → logprob: -17.250019073486328
    7. ' ' → logprob: -17.875019073486328
    8. '
' → logprob: -18.000019073486328
    9. '	def' → logprob: -18.000019073486328
    10. '@property' → logprob: -18.750019073486328

Token 244: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1398327499628067
    2. ' ==' → logprob: -2.1398327350616455
    3. ' ' → logprob: -4.514832973480225
    4. ' def' → logprob: -6.889832973480225
    5. '__' → logprob: -7.264832973480225
    6. '==' → logprob: -10.014832496643066
    7. 'def' → logprob: -10.764832496643066
    8. ' ==
' → logprob: -10.889832496643066
    9. ' eq' → logprob: -11.139832496643066
    10. ' =' → logprob: -11.264832496643066

Token 245: 'hash' (ID: 16909)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.00015979631280060858
    2. 'hash' → logprob: -8.750160217285156
    3. 'lt' → logprob: -13.750160217285156
    4. 'init' → logprob: -15.625160217285156
    5. 'repr' → logprob: -16.375160217285156
    6. ' eq' → logprob: -19.375160217285156
    7. '_eq' → logprob: -21.000160217285156
    8. 'Eq' → logprob: -21.500160217285156
    9. 'equ' → logprob: -21.625160217285156
    10. 'iter' → logprob: -21.625160217285156

Token 246: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005292338784784079
    2. '__' → logprob: -5.5052924156188965
    3. '(' → logprob: -7.6302924156188965
    4. '__(
' → logprob: -8.005291938781738
    5. '(self' → logprob: -8.380291938781738
    6. '__((' → logprob: -9.005291938781738
    7. '__('' → logprob: -10.380291938781738
    8. '_(' → logprob: -12.255291938781738
    9. '__(*' → logprob: -13.005291938781738
    10. '__("' → logprob: -13.505291938781738

Token 247: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.988221684878226e-06
    2. ')' → logprob: -12.875006675720215
    3. '(self' → logprob: -13.000006675720215
    4. ' self' → logprob: -13.125006675720215
    5. 's' → logprob: -17.87500762939453
    6. '
' → logprob: -18.75000762939453
    7. 'sel' → logprob: -19.25000762939453
    8. '	self' → logprob: -19.62500762939453
    9. '(' → logprob: -20.25000762939453
    10. '<|end|>' → logprob: -20.50000762939453

Token 248: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.22962325811386108
    2. '__)' → logprob: -2.104623317718506
    3. ')' → logprob: -3.229623317718506
    4. '):' → logprob: -3.604623317718506
    5. '__:' → logprob: -5.229623317718506
    6. 'self' → logprob: -5.854623317718506
    7. '__,' → logprob: -6.104623317718506
    8. '__(' → logprob: -6.229623317718506
    9. ')__' → logprob: -6.604623317718506
    10. '__(*' → logprob: -7.854623317718506

Token 249: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31499621272087097
    2. '(self' → logprob: -1.8149962425231934
    3. '       ' → logprob: -2.4399962425231934
    4. 'self' → logprob: -4.939996242523193
    5. '(' → logprob: -5.064996242523193
    6. '   ' → logprob: -5.439996242523193
    7. ' return' → logprob: -6.314996242523193
    8. '(
' → logprob: -7.564996242523193
    9. 'def' → logprob: -11.189995765686035
    10. '        
' → logprob: -11.689995765686035

Token 250: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005786505062133074
    2. ' return' → logprob: -7.500578880310059
    3. '       ' → logprob: -10.625578880310059
    4. 'hash' → logprob: -14.125578880310059
    5. '   ' → logprob: -14.625578880310059
    6. 'def' → logprob: -16.250577926635742
    7. '	return' → logprob: -17.125577926635742
    8. '{return' → logprob: -17.375577926635742
    9. '(return' → logprob: -17.500577926635742
    10. 'self' → logprob: -17.875577926635742

Token 251: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.001980260480195284
    2. ' hash' → logprob: -6.251980304718018
    3. '(hash' → logprob: -10.00197982788086
    4. 'self' → logprob: -12.00197982788086
    5. '   ' → logprob: -16.00197982788086
    6. ' self' → logprob: -16.50197982788086
    7. '	hash' → logprob: -17.75197982788086
    8. ' ' → logprob: -17.87697982788086
    9. '(self' → logprob: -18.25197982788086
    10. ' (' → logprob: -18.25197982788086

Token 252: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0002764710516203195
    2. '(' → logprob: -8.375276565551758
    3. '(self' → logprob: -10.000276565551758
    4. ' ((' → logprob: -14.875276565551758
    5. ' (' → logprob: -16.750276565551758
    6. '(
' → logprob: -17.125276565551758
    7. '(((' → logprob: -17.500276565551758
    8. '(('' → logprob: -18.125276565551758
    9. '__((' → logprob: -18.375276565551758
    10. '```' → logprob: -18.750276565551758

Token 253: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1041145626222715e-05
    2. ' self' → logprob: -11.500011444091797
    3. '(self' → logprob: -14.000011444091797
    4. '
' → logprob: -17.000011444091797
    5. '   ' → logprob: -18.500011444091797
    6. '       ' → logprob: -19.000011444091797
    7. '	self' → logprob: -19.250011444091797
    8. '[self' → logprob: -19.500011444091797
    9. ',self' → logprob: -20.500011444091797
    10. '```' → logprob: -20.500011444091797

Token 254: '.dx' (ID: 111318)
  Prédit: '.dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dx' → logprob: -2.0219828002154827e-05
    2. '.' → logprob: -11.625020027160645
    3. 'dx' → logprob: -11.875020027160645
    4. ' .' → logprob: -14.000020027160645
    5. '(dx' → logprob: -14.000020027160645
    6. 'self' → logprob: -14.125020027160645
    7. '.dy' → logprob: -14.375020027160645
    8. ').' → logprob: -14.500020027160645
    9. '.x' → logprob: -15.625020027160645
    10. '_dx' → logprob: -15.750020027160645

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1689596148207784e-05
    2. ',
' → logprob: -10.000051498413086
    3. ' ,' → logprob: -12.375051498413086
    4. ',self' → logprob: -13.375051498413086
    5. ',

' → logprob: -15.000051498413086
    6. 'self' → logprob: -16.750051498413086
    7. '<|end|>' → logprob: -17.500051498413086
    8. ',\
' → logprob: -17.875051498413086
    9. '),' → logprob: -18.375051498413086
    10. '‌,' → logprob: -18.625051498413086

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008635961450636387
    2. ' self' → logprob: -4.758635997772217
    3. 'dy' → logprob: -11.508635520935059
    4. '<|end|>' → logprob: -12.258635520935059
    5. '(self' → logprob: -13.383635520935059
    6. ' ' → logprob: -13.758635520935059
    7. '	self' → logprob: -14.008635520935059
    8. '   ' → logprob: -14.008635520935059
    9. '       ' → logprob: -14.633635520935059
    10. '[self' → logprob: -14.758635520935059

Token 257: '.dy' (ID: 147561)
  Prédit: '.dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dy' → logprob: -0.0002810007717926055
    2. 'dy' → logprob: -8.37528133392334
    3. '.' → logprob: -10.00028133392334
    4. '.d' → logprob: -12.50028133392334
    5. ' .' → logprob: -14.87528133392334
    6. ' dy' → logprob: -15.00028133392334
    7. '.y' → logprob: -15.25028133392334
    8. 'Dy' → logprob: -16.250280380249023
    9. '.dx' → logprob: -16.375280380249023
    10. ').' → logprob: -16.625280380249023

Token 258: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006717147771269083
    2. '))' → logprob: -5.006717205047607
    3. ')
' → logprob: -14.00671672821045
    4. ')}' → logprob: -15.38171672821045
    5. '})' → logprob: -15.38171672821045
    6. ')))' → logprob: -15.50671672821045
    7. ' )' → logprob: -15.63171672821045
    8. '))
' → logprob: -17.131717681884766
    9. '),' → logprob: -17.381717681884766
    10. '}' → logprob: -17.381717681884766

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023800434544682503
    2. '
' → logprob: -4.023800373077393
    3. '    
' → logprob: -5.773800373077393
    4. 'def' → logprob: -7.523800373077393
    5. '<|end|>' → logprob: -7.523800373077393
    6. ' 
' → logprob: -7.773800373077393
    7. ' def' → logprob: -7.898800373077393
    8. '  
' → logprob: -8.39880084991455
    9. ' ' → logprob: -9.14880084991455
    10. '   
' → logprob: -9.27380084991455

Token 260: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002702760975807905
    2. '   ' → logprob: -8.500269889831543
    3. ' def' → logprob: -9.625269889831543
    4. '    
' → logprob: -14.375269889831543
    5. '
' → logprob: -16.37527084350586
    6. '	def' → logprob: -16.87527084350586
    7. ' ' → logprob: -17.87527084350586
    8. '       ' → logprob: -18.00027084350586
    9. '        
' → logprob: -18.12527084350586
    10. '  ' → logprob: -19.00027084350586

Token 261: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5250679850578308
    2. ' ==' → logprob: -1.7750680446624756
    3. 'eq' → logprob: -1.7750680446624756
    4. '__' → logprob: -3.0250680446624756
    5. '==' → logprob: -4.5250678062438965
    6. ' def' → logprob: -5.6500678062438965
    7. ' eq' → logprob: -5.7750678062438965
    8. 'def' → logprob: -5.7750678062438965
    9. '_eq' → logprob: -8.275068283081055
    10. '==
' → logprob: -10.400068283081055

Token 262: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: 0.0
    2. 'lt' → logprob: -18.625
    3. 'init' → logprob: -19.0
    4. ' eq' → logprob: -19.125
    5. '_eq' → logprob: -19.875
    6. 'e' → logprob: -20.0
    7. '==' → logprob: -20.625
    8. 'repr' → logprob: -20.625
    9. 'equ' → logprob: -21.625
    10. 'Eq' → logprob: -21.875

Token 263: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4775654375553131
    2. '__(' → logprob: -0.9775654077529907
    3. '__((' → logprob: -5.727565288543701
    4. '__('' → logprob: -8.97756576538086
    5. '__(
' → logprob: -10.10256576538086
    6. '__(*' → logprob: -10.60256576538086
    7. '__.__' → logprob: -11.35256576538086
    8. '__("' → logprob: -11.60256576538086
    9. '==(' → logprob: -12.85256576538086
    10. '==' → logprob: -13.10256576538086

Token 264: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.4849443838757e-06
    2. ' self' → logprob: -12.500004768371582
    3. ')' → logprob: -15.125004768371582
    4. 'other' → logprob: -15.875004768371582
    5. '(self' → logprob: -15.875004768371582
    6. ',' → logprob: -16.750003814697266
    7. ' ' → logprob: -17.125003814697266
    8. '   ' → logprob: -17.125003814697266
    9. '
' → logprob: -18.125003814697266
    10. ',self' → logprob: -18.750003814697266

Token 265: ',' (ID: 11)
  Prédit: '__,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__,' → logprob: -0.45272600650787354
    2. '__' → logprob: -1.7027260065078735
    3. '__(' → logprob: -1.9527260065078735
    4. ',' → logprob: -3.702725887298584
    5. '__((' → logprob: -4.452725887298584
    6. '__(*' → logprob: -6.577725887298584
    7. '(' → logprob: -7.827725887298584
    8. 'self' → logprob: -8.202726364135742
    9. '<|end|>' → logprob: -8.327726364135742
    10. '(self' → logprob: -8.577726364135742

Token 266: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0015023599844425917
    2. ' other' → logprob: -6.501502513885498
    3. 'Other' → logprob: -17.126502990722656
    4. '(other' → logprob: -17.376502990722656
    5. 'self' → logprob: -19.001502990722656
    6. 'oth' → logprob: -19.626502990722656
    7. 'o' → logprob: -20.751502990722656
    8. '.other' → logprob: -20.876502990722656
    9. '_other' → logprob: -21.376502990722656
    10. ' oth' → logprob: -21.751502990722656

Token 267: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03412739187479019
    2. ')' → logprob: -3.6591274738311768
    3. '):
' → logprob: -4.909127235412598
    4. ' ):' → logprob: -8.409127235412598
    5. '):

' → logprob: -9.284127235412598
    6. ':' → logprob: -10.284127235412598
    7. ' )' → logprob: -11.034127235412598
    8. ',' → logprob: -11.159127235412598
    9. 'self' → logprob: -11.659127235412598
    10. ').__' → logprob: -12.284127235412598

Token 268: '       ' (ID: 309)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.057641882449388504
    2. '       ' → logprob: -2.9326419830322266
    3. 'self' → logprob: -7.432641983032227
    4. '(self' → logprob: -7.432641983032227
    5. ' self' → logprob: -7.557641983032227
    6. 'is' → logprob: -7.682641983032227
    7. ' (' → logprob: -8.057641983032227
    8. '(' → logprob: -9.807641983032227
    9. ' other' → logprob: -10.057641983032227
    10. ' is' → logprob: -10.057641983032227

Token 269: ' return' (ID: 622)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.2593547999858856
    2. 'is' → logprob: -1.509354829788208
    3. '       ' → logprob: -5.259354591369629
    4. 'return' (adapté à ' return') → logprob: -6.884354591369629
    5. '(is' → logprob: -7.384354591369629
    6. 'self' → logprob: -7.884354591369629
    7. 'not' → logprob: -10.134354591369629
    8. ' is' → logprob: -10.259354591369629
    9. '(self' → logprob: -10.384354591369629
    10. ' return' → logprob: -10.509354591369629

Token 270: ' self' (ID: 1051)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.43653741478919983
    2. ' isinstance' → logprob: -1.1865373849868774
    3. 'is' → logprob: -3.436537504196167
    4. '(self' → logprob: -4.186537265777588
    5. ' (' → logprob: -7.561537265777588
    6. '(
' → logprob: -8.311537742614746
    7. 'self' → logprob: -8.686537742614746
    8. '(' → logprob: -8.936537742614746
    9. '(type' → logprob: -12.186537742614746
    10. ' self' → logprob: -12.311537742614746

Token 271: '.dx' (ID: 111318)
  Prédit: '.dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dx' → logprob: -5.991464786347933e-05
    2. '.' → logprob: -10.375060081481934
    3. '.__' → logprob: -11.000060081481934
    4. ' .' → logprob: -12.625060081481934
    5. ' is' → logprob: -12.625060081481934
    6. '.dy' → logprob: -13.125060081481934
    7. ' and' → logprob: -13.750060081481934
    8. '.d' → logprob: -15.125060081481934
    9. '.dtype' → logprob: -15.375060081481934
    10. 'dx' → logprob: -15.375060081481934

Token 272: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759485363960266
    2. '==' → logprob: -0.8259485363960266
    3. '=' → logprob: -12.200948715209961
    4. '==
' → logprob: -13.325948715209961
    5. ',' → logprob: -13.575948715209961
    6. ')==' → logprob: -14.825948715209961
    7. ' ' → logprob: -15.450948715209961
    8. '()==' → logprob: -15.950948715209961
    9. '   ' → logprob: -16.07594871520996
    10. ')' → logprob: -16.57594871520996

Token 273: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.029750484973192215
    2. ' other' → logprob: -3.5297505855560303
    3. '(other' → logprob: -18.02975082397461
    4. 'Other' → logprob: -19.15475082397461
    5. '.other' → logprob: -20.27975082397461
    6. '_other' → logprob: -20.40475082397461
    7. ' ' → logprob: -21.77975082397461
    8. '0' → logprob: -23.27975082397461
    9. '
' → logprob: -23.27975082397461
    10. 'self' → logprob: -23.65475082397461

Token 274: '.dx' (ID: 111318)
  Prédit: '.dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dx' → logprob: -0.006770553067326546
    2. '.' → logprob: -5.006770610809326
    3. '.dy' → logprob: -10.256770133972168
    4. ' .' → logprob: -11.006770133972168
    5. '.d' → logprob: -14.256770133972168
    6. '.df' → logprob: -14.506770133972168
    7. '.other' → logprob: -14.506770133972168
    8. '.
' → logprob: -14.881770133972168
    9. '.dp' → logprob: -15.631770133972168
    10. ' ' → logprob: -15.881770133972168

Token 275: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0052350712940096855
    2. 'and' → logprob: -5.255235195159912
    3. '       ' → logprob: -14.255234718322754
    4. ' ' → logprob: -15.755234718322754
    5. '        ' → logprob: -16.00523567199707
    6. '<|end|>' → logprob: -16.25523567199707
    7. '	and' → logprob: -16.38023567199707
    8. '   ' → logprob: -17.00523567199707
    9. ' &&' → logprob: -17.50523567199707
    10. ',' → logprob: -17.88023567199707

Token 276: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.743222177028656
    2. 'self' → logprob: -0.743222177028656
    3. ' other' → logprob: -3.368222236633301
    4. 'other' → logprob: -4.243222236633301
    5. '       ' → logprob: -10.6182222366333
    6. 'Other' → logprob: -13.9932222366333
    7. '	self' → logprob: -14.2432222366333
    8. '(self' → logprob: -14.2432222366333
    9. ' ' → logprob: -14.3682222366333
    10. '   ' → logprob: -14.7432222366333

Token 277: '.dy' (ID: 147561)
  Prédit: '.dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dy' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.62500286102295
    3. 'dy' → logprob: -14.00000286102295
    4. ' .' → logprob: -15.50000286102295
    5. '.dx' → logprob: -16.375001907348633
    6. ' dy' → logprob: -18.000001907348633
    7. '.y' → logprob: -18.375001907348633
    8. '.d' → logprob: -19.125001907348633
    9. 'Dy' → logprob: -19.625001907348633
    10. ' ' → logprob: -20.125001907348633

Token 278: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07889044284820557
    2. '==' → logprob: -2.578890323638916
    3. '==
' → logprob: -15.578890800476074
    4. '=' → logprob: -15.828890800476074
    5. ' ' → logprob: -16.078889846801758
    6. ')==' → logprob: -17.328889846801758
    7. ' ==
' → logprob: -17.328889846801758
    8. ']==' → logprob: -17.578889846801758
    9. '==(' → logprob: -17.703889846801758
    10. ' =' → logprob: -18.078889846801758

Token 279: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.023245595395565033
    2. ' other' → logprob: -3.7732455730438232
    3. '(other' → logprob: -16.773244857788086
    4. ' ' → logprob: -18.398244857788086
    5. '.other' → logprob: -18.398244857788086
    6. '   ' → logprob: -18.773244857788086
    7. 'Other' → logprob: -19.273244857788086
    8. '
' → logprob: -19.898244857788086
    9. 'self' → logprob: -20.148244857788086
    10. '0' → logprob: -20.148244857788086

Token 280: '.dy' (ID: 147561)
  Prédit: '.dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dy' → logprob: -1.688212614681106e-05
    2. '.' → logprob: -11.500017166137695
    3. 'dy' → logprob: -12.000017166137695
    4. ' .' → logprob: -14.875017166137695
    5. '.dx' → logprob: -16.250017166137695
    6. '.y' → logprob: -16.750017166137695
    7. 'Dy' → logprob: -17.750017166137695
    8. ' dy' → logprob: -18.250017166137695
    9. '.sy' → logprob: -18.375017166137695
    10. '.d' → logprob: -19.125017166137695

Token 281: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24833090603351593
    2. '<|end|>' → logprob: -1.7483309507369995
    3. '   ' → logprob: -3.12333083152771
    4. '<|end|>' → logprob: -7.123331069946289
    5. '

' → logprob: -7.748331069946289
    6. '    
' → logprob: -7.873331069946289
    7. 'newline' → logprob: -9.748331069946289
    8. '\n' → logprob: -10.998331069946289
    9. ' ' → logprob: -10.998331069946289
    10. '  
' → logprob: -11.248331069946289

Token 282: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006289822049438953
    2. '
' → logprob: -5.881289958953857
    3. 'def' → logprob: -6.381289958953857
    4. '<|end|>' → logprob: -7.006289958953857
    5. '    
' → logprob: -8.6312894821167
    6. ' ' → logprob: -8.7562894821167
    7. 'class' → logprob: -9.1312894821167
    8. '    ' → logprob: -9.2562894821167
    9. '```' → logprob: -9.3812894821167
    10. '<|end|>' → logprob: -9.5062894821167

Token 283: ' Pair' (ID: 41250)
  Prédit: ' Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Line' → logprob: -0.46725133061408997
    2. ' Solution' → logprob: -1.5922513008117676
    3. 'Solution' → logprob: -3.2172513008117676
    4. 'Line' → logprob: -3.3422513008117676
    5. ' Col' → logprob: -3.8422513008117676
    6. ' Point' → logprob: -4.092251300811768
    7. ' Geometry' → logprob: -4.217251300811768
    8. ' Polygon' → logprob: -4.467251300811768
    9. ' Lines' → logprob: -5.092251300811768
    10. 'Col' → logprob: -5.342251300811768

Token 284: 'ing' (ID: 289)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02243940532207489
    2. ':
' → logprob: -4.522439479827881
    3. '(' → logprob: -5.522439479827881
    4. '(Point' → logprob: -6.022439479827881
    5. 's' → logprob: -6.397439479827881
    6. '   ' → logprob: -7.647439479827881
    7. '[' → logprob: -7.647439479827881
    8. 'Points' → logprob: -7.897439479827881
    9. '<|end|>' → logprob: -8.147439002990723
    10. '<Point' → logprob: -8.397439002990723

Token 285: 'State' (ID: 1881)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004465489182621241
    2. ':
' → logprob: -5.504465579986572
    3. '(' → logprob: -8.379465103149414
    4. 's' → logprob: -10.004465103149414
    5. 'List' → logprob: -11.504465103149414
    6. 'Pair' → logprob: -11.504465103149414
    7. '(List' → logprob: -11.754465103149414
    8. '{' → logprob: -11.754465103149414
    9. ':

' → logprob: -12.004465103149414
    10. 'Manager' → logprob: -12.254465103149414

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012141639599576592
    2. ':
' → logprob: -6.751214027404785
    3. '(' → logprob: -10.876214027404785
    4. ' :' → logprob: -11.001214027404785
    5. '   ' → logprob: -12.751214027404785
    6. '(object' → logprob: -14.126214027404785
    7. '():' → logprob: -14.126214027404785
    8. '<|end|>' → logprob: -14.126214027404785
    9. ':def' → logprob: -14.251214027404785
    10. '):' → logprob: -14.376214027404785

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17834588885307312
    2. ':' → logprob: -2.0533459186553955
    3. ':
' → logprob: -3.4283459186553955
    4. '(' → logprob: -7.303345680236816
    5. '<|end|>' → logprob: -7.553345680236816
    6. '):
' → logprob: -8.053345680236816
    7. '```' → logprob: -8.303345680236816
    8. '    
' → logprob: -9.178345680236816
    9. '
' → logprob: -9.303345680236816
    10. 'def' → logprob: -9.428345680236816

Token 288: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9650489091873169
    2. 'def' → logprob: -1.340048909187317
    3. ' __' → logprob: -1.715048909187317
    4. '   ' → logprob: -2.2150487899780273
    5. '__' → logprob: -2.7150487899780273
    6. 'class' → logprob: -6.340048789978027
    7. 'from' → logprob: -10.465048789978027
    8. '    ' → logprob: -10.715048789978027
    9. '```' → logprob: -11.215048789978027
    10. ' ' → logprob: -11.340048789978027

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7039843797683716
    2. '__' → logprob: -0.9539843797683716
    3. 'def' → logprob: -2.578984260559082
    4. 'slots' → logprob: -3.453984260559082
    5. '_slots' → logprob: -5.328984260559082
    6. '____' → logprob: -5.703984260559082
    7. ' __' → logprob: -6.578984260559082
    8. 'class' → logprob: -6.953984260559082
    9. '```' → logprob: -7.953984260559082
    10. '
' → logprob: -8.328984260559082

Token 290: ' Maint' (ID: 31046)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9456812739372253
    2. ' def' → logprob: -1.1956813335418701
    3. 'class' → logprob: -1.8206813335418701
    4. '"""' → logprob: -2.32068133354187
    5. '   ' → logprob: -4.320681095123291
    6. 'from' → logprob: -5.070681095123291
    7. ' """' → logprob: -5.320681095123291
    8. ' Keeps' → logprob: -5.945681095123291
    9. ' """
' → logprob: -6.070681095123291
    10. '__' → logprob: -6.195681095123291

Token 291: 'ains' (ID: 2352)
  Prédit: 'ains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ains' → logprob: -0.00028386167832650244
    2. 'ained' → logprob: -9.000284194946289
    3. 'class' → logprob: -10.000284194946289
    4. 'aining' → logprob: -10.125284194946289
    5. 'ates' → logprob: -11.000284194946289
    6. 'a' → logprob: -11.250284194946289
    7. 'ain' → logprob: -12.250284194946289
    8. 'es' → logprob: -12.250284194946289
    9. 'e' → logprob: -12.500284194946289
    10. '"""
' → logprob: -12.625284194946289

Token 292: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6337072849273682
    2. 'the' → logprob: -1.7587072849273682
    3. '   ' → logprob: -2.883707284927368
    4. ' a' → logprob: -2.883707284927368
    5. ' current' → logprob: -3.633707284927368
    6. 'state' → logprob: -3.883707284927368
    7. 'a' → logprob: -4.133707046508789
    8. 'current' → logprob: -4.258707046508789
    9. ' possible' → logprob: -4.633707046508789
    10. 'possible' → logprob: -4.758707046508789

Token 293: ' state' (ID: 2608)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.2319265604019165
    2. 'dire' → logprob: -1.9819265604019165
    3. 'count' → logprob: -2.106926441192627
    4. 'direction' → logprob: -2.731926441192627
    5. 'current' → logprob: -2.856926441192627
    6. 'def' → logprob: -3.106926441192627
    7. 'pairs' → logprob: -3.356926441192627
    8. 'mapping' → logprob: -3.481926441192627
    9. 'state' → logprob: -3.731926441192627
    10. ' count' → logprob: -4.106926441192627

Token 294: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.01967647857964039
    2. ' for' → logprob: -4.519676685333252
    3. '<|end|>' → logprob: -5.269676685333252
    4. ':' → logprob: -6.644676685333252
    5. ' ' → logprob: -7.144676685333252
    6. ',' → logprob: -8.144676208496094
    7. '<|end|>' → logprob: -8.519676208496094
    8. '   ' → logprob: -8.769676208496094
    9. ' with' → logprob: -9.019676208496094
    10. ' that' → logprob: -9.019676208496094

Token 295: ' paired' (ID: 51892)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.7863720655441284
    2. ' the' → logprob: -1.9113720655441284
    3. 'pair' → logprob: -1.9113720655441284
    4. ' pair' → logprob: -2.036372184753418
    5. 'point' → logprob: -2.911372184753418
    6. 'points' → logprob: -3.161372184753418
    7. ' a' → logprob: -3.411372184753418
    8. 'a' → logprob: -3.536372184753418
    9. ' points' → logprob: -3.536372184753418
    10. ' pairing' → logprob: -3.536372184753418

Token 296: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.33956649899482727
    2. ' points' → logprob: -1.9645664691925049
    3. '_points' → logprob: -2.964566469192505
    4. 'vectors' → logprob: -3.339566469192505
    5. 'dire' → logprob: -4.089566707611084
    6. ' directions' → logprob: -4.589566707611084
    7. ' vectors' → logprob: -5.089566707611084
    8. ' lines' → logprob: -5.464566707611084
    9. 'lines' → logprob: -5.464566707611084
    10. 'pairs' → logprob: -6.089566707611084

Token 297: ' during' (ID: 3354)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8955844640731812
    2. ':' → logprob: -1.3955844640731812
    3. ' and' → logprob: -1.8955844640731812
    4. ',' → logprob: -2.7705845832824707
    5. '   ' → logprob: -2.7705845832824707
    6. ' with' → logprob: -3.3955845832824707
    7. ' for' → logprob: -4.895584583282471
    8. ' in' → logprob: -5.020584583282471
    9. '<|end|>' → logprob: -5.645584583282471
    10. ' between' → logprob: -5.770584583282471

Token 298: ' recursion' (ID: 122185)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15139445662498474
    2. 'the' → logprob: -2.6513943672180176
    3. ' a' → logprob: -3.7763943672180176
    4. ' matching' → logprob: -4.901394367218018
    5. ' pairing' → logprob: -4.901394367218018
    6. ' pair' → logprob: -5.026394367218018
    7. 'a' → logprob: -5.026394367218018
    8. ' traversal' → logprob: -5.401394367218018
    9. ' an' → logprob: -5.901394367218018
    10. ' processing' → logprob: -6.151394367218018

Token 299: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11771883815526962
    2. '   ' → logprob: -3.1177189350128174
    3. ':' → logprob: -3.6177189350128174
    4. ',' → logprob: -3.6177189350128174
    5. ' and' → logprob: -4.742718696594238
    6. ' for' → logprob: -6.617718696594238
    7. ' .' → logprob: -7.367718696594238
    8. '.
' → logprob: -7.492718696594238
    9. ' ,' → logprob: -7.617718696594238
    10. ' :' → logprob: -8.367718696594238

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05862659215927124
    2. ' """' → logprob: -4.058626651763916
    3. '"""' → logprob: -4.433626651763916
    4. '
' → logprob: -4.808626651763916
    5. '    ' → logprob: -4.933626651763916
    6. '    
' → logprob: -5.558626651763916
    7. ' 
' → logprob: -5.558626651763916
    8. ' """
' → logprob: -6.183626651763916
    9. ')' → logprob: -7.433626651763916
    10. '     
' → logprob: -7.808626651763916

Token 301: ' Uses' (ID: 69986)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009249278344213963
    2. '"""' → logprob: -5.634249210357666
    3. '"""
' → logprob: -5.884249210357666
    4. ' """
' → logprob: -6.634249210357666
    5. '
' → logprob: -7.259249210357666
    6. ' def' → logprob: -8.134249687194824
    7. ' """' → logprob: -8.634249687194824
    8. 'def' → logprob: -8.759249687194824
    9. '```' → logprob: -9.759249687194824
    10. '    ' → logprob: -10.384249687194824

Token 302: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8743247985839844
    2. 'default' → logprob: -1.3743247985839844
    3. 'a' → logprob: -1.4993247985839844
    4. ' defaultdict' → logprob: -2.9993247985839844
    5. 'bit' → logprob: -3.3743247985839844
    6. '__' → logprob: -4.499324798583984
    7. ' bit' → logprob: -5.374324798583984
    8. ' default' → logprob: -6.624324798583984
    9. ' __' → logprob: -6.874324798583984
    10. ' two' → logprob: -6.874324798583984

Token 303: ' integer' (ID: 16336)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4370651841163635
    2. 'int' → logprob: -2.0620651245117188
    3. 'array' → logprob: -2.4370651245117188
    4. 'index' → logprob: -3.6870651245117188
    5. ' array' → logprob: -4.062065124511719
    6. 'internal' → logprob: -4.062065124511719
    7. 'offset' → logprob: -4.187065124511719
    8. 'integer' → logprob: -4.312065124511719
    9. ' __' → logprob: -4.437065124511719
    10. '   ' → logprob: -5.437065124511719

Token 304: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.5021011829376221
    2. 'bit' → logprob: -1.377101182937622
    3. ' to' → logprob: -3.377101182937622
    4. 'mask' → logprob: -3.627101182937622
    5. ' mask' → logprob: -3.627101182937622
    6. ' bitmap' → logprob: -4.002100944519043
    7. '_bit' → logprob: -4.877100944519043
    8. ' ' → logprob: -5.377100944519043
    9. 'bitmap' → logprob: -5.377100944519043
    10. '_mask' → logprob: -5.502100944519043

Token 305: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.00027134892297908664
    2. 'field' → logprob: -9.500271797180176
    3. 'set' → logprob: -9.625271797180176
    4. ' mask' → logprob: -9.875271797180176
    5. 'vector' → logprob: -10.000271797180176
    6. '   ' → logprob: -10.625271797180176
    7. 'm' → logprob: -12.375271797180176
    8. '_mask' → logprob: -13.000271797180176
    9. ' ' → logprob: -13.750271797180176
    10. 'array' → logprob: -15.250271797180176

Token 306: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0035698963329195976
    2. '<|end|>' → logprob: -6.753570079803467
    3. ' for' → logprob: -7.378570079803467
    4. ' where' → logprob: -7.378570079803467
    5. 'to' → logprob: -7.753570079803467
    6. '   ' → logprob: -8.628569602966309
    7. ' ' → logprob: -8.753569602966309
    8. ' representing' → logprob: -9.128569602966309
    9. ',' → logprob: -9.628569602966309
    10. '.' → logprob: -9.753569602966309

Token 307: ' represent' (ID: 5188)
  Prédit: ' represent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' represent' → logprob: -0.2900141775608063
    2. ' track' → logprob: -1.4150141477584839
    3. ' mark' → logprob: -5.540014266967773
    4. ' store' → logprob: -5.540014266967773
    5. 'track' → logprob: -8.290014266967773
    6. 'represent' → logprob: -8.290014266967773
    7. ' ' → logprob: -8.665014266967773
    8. ' keep' → logprob: -9.290014266967773
    9. ' encode' → logprob: -9.665014266967773
    10. ' indicate' → logprob: -9.915014266967773

Token 308: ' taken' (ID: 6697)
  Prédit: ' which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.19131170213222504
    2. 'which' → logprob: -2.4413115978240967
    3. 'paired' → logprob: -2.6913115978240967
    4. ' paired' → logprob: -4.191311836242676
    5. 'used' → logprob: -6.191311836242676
    6. ' used' → logprob: -6.691311836242676
    7. ' the' → logprob: -7.566311836242676
    8. 'the' → logprob: -8.816311836242676
    9. 'points' → logprob: -9.191311836242676
    10. 'matched' → logprob: -10.941311836242676

Token 309: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.5489122271537781
    2. ' points' → logprob: -1.5489122867584229
    3. 'points' → logprob: -2.548912286758423
    4. ')' → logprob: -2.673912286758423
    5. '<|end|>' → logprob: -3.548912286758423
    6. ' )' → logprob: -4.298912048339844
    7. '_' → logprob: -4.923912048339844
    8. ' ' → logprob: -5.423912048339844
    9. 's' → logprob: -6.048912048339844
    10. '_positions' → logprob: -6.423912048339844

Token 310: ' for' (ID: 395)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12163062393665314
    2. '   ' → logprob: -2.9966306686401367
    3. ':' → logprob: -3.2466306686401367
    4. ',' → logprob: -3.9966306686401367
    5. 's' → logprob: -6.621630668640137
    6. ')' → logprob: -6.871630668640137
    7. ' bits' → logprob: -6.996630668640137
    8. ' and' → logprob: -7.871630668640137
    9. '.
' → logprob: -7.996630668640137
    10. '):' → logprob: -8.121630668640137

Token 311: ' memory' (ID: 8197)
  Prédit: ' pairing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairing' → logprob: -1.4770240783691406
    2. ' the' → logprob: -1.6020240783691406
    3. ' fast' → logprob: -2.3520240783691406
    4. ')' → logprob: -2.7270240783691406
    5. 'pair' → logprob: -2.7270240783691406
    6. ' each' → logprob: -2.9770240783691406
    7. ' pair' → logprob: -3.3520240783691406
    8. ' efficiency' → logprob: -3.4770240783691406
    9. 'efficient' → logprob: -3.8520240783691406
    10. ' efficient' → logprob: -3.9770240783691406

Token 312: ' and' (ID: 326)
  Prédit: ' efficiency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' efficiency' → logprob: -0.05753891542553902
    2. ' optimization' → logprob: -3.3075389862060547
    3. '_' → logprob: -5.057538986206055
    4. 'efficient' → logprob: -5.057538986206055
    5. ' efficient' → logprob: -6.557538986206055
    6. ')' → logprob: -6.682538986206055
    7. 'eff' → logprob: -6.932538986206055
    8. ',' → logprob: -7.057538986206055
    9. 'optimization' → logprob: -7.682538986206055
    10. ' usage' → logprob: -7.807538986206055

Token 313: ' speed' (ID: 7733)
  Prédit: ' speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' speed' → logprob: -0.5138201117515564
    2. ' performance' → logprob: -1.2638201713562012
    3. 'speed' → logprob: -3.013820171356201
    4. 'performance' → logprob: -3.013820171356201
    5. ' efficiency' → logprob: -4.013820171356201
    6. 'eff' → logprob: -6.013820171356201
    7. ' computational' → logprob: -8.513819694519043
    8. ' time' → logprob: -9.388819694519043
    9. 'fast' → logprob: -10.388819694519043
    10. ' computation' → logprob: -10.388819694519043

Token 314: ' efficiency' (ID: 17456)
  Prédit: ' efficiency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficiency' → logprob: -0.16684970259666443
    2. ')' → logprob: -2.7918496131896973
    3. ' optimization' → logprob: -3.1668496131896973
    4. '.' → logprob: -3.1668496131896973
    5. ' )' → logprob: -6.666849613189697
    6. '_' → logprob: -7.166849613189697
    7. ':' → logprob: -7.416849613189697
    8. '-efficient' → logprob: -7.666849613189697
    9. 'efficient' → logprob: -7.916849613189697
    10. ' representation' → logprob: -8.041850090026855

Token 315: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06613951921463013
    2. '.' → logprob: -2.9411394596099854
    3. '   ' → logprob: -5.3161396980285645
    4. ':' → logprob: -6.8161396980285645
    5. ')
' → logprob: -6.9411396980285645
    6. '<|end|>' → logprob: -6.9411396980285645
    7. '):' → logprob: -7.0661396980285645
    8. ' )' → logprob: -7.3161396980285645
    9. ',' → logprob: -7.5661396980285645
    10. '.
' → logprob: -7.8161396980285645

Token 316: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.615038275718689
    2. '   ' → logprob: -0.865038275718689
    3. ' 
' → logprob: -4.2400383949279785
    4. ' )' → logprob: -4.6150383949279785
    5. ' ' → logprob: -5.1150383949279785
    6. '    ' → logprob: -5.8650383949279785
    7. '
' → logprob: -6.6150383949279785
    8. '<|end|>' → logprob: -6.6150383949279785
    9. '    
' → logprob: -6.8650383949279785
    10. '  
' → logprob: -8.36503791809082

Token 317: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034998342394828796
    2. ')' → logprob: -4.159998416900635
    3. '
' → logprob: -4.784998416900635
    4. '"""' → logprob: -5.159998416900635
    5. ' """
' → logprob: -6.159998416900635
    6. '"""
' (adapté à ' """
') → logprob: -6.534998416900635
    7. '```' → logprob: -8.659997940063477
    8. '    ' → logprob: -8.909997940063477
    9. ' """' → logprob: -9.034997940063477
    10. ')
' → logprob: -9.034997940063477

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011027427390217781
    2. ' def' → logprob: -5.0110273361206055
    3. '    ' → logprob: -5.5110273361206055
    4. 'def' → logprob: -8.636027336120605
    5. '    
' → logprob: -10.511027336120605
    6. '
' → logprob: -10.886027336120605
    7. ' 
' → logprob: -11.511027336120605
    8. ' __' → logprob: -12.636027336120605
    9. ' ' → logprob: -12.761027336120605
    10. '  ' → logprob: -12.761027336120605

Token 319: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.34603360295295715
    2. 'def' → logprob: -1.8460335731506348
    3. ' __' → logprob: -2.0960335731506348
    4. '__' (adapté à ' __') → logprob: -4.471033573150635
    5. '   ' → logprob: -8.596034049987793
    6. ' taken' → logprob: -9.846034049987793
    7. ' _' → logprob: -11.721034049987793
    8. '_taken' → logprob: -12.096034049987793
    9. ' ' → logprob: -12.846034049987793
    10. ' ' → logprob: -12.971034049987793

Token 320: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -1.7432603272027336e-06
    2. 'slot' → logprob: -13.500001907348633
    3. 'init' → logprob: -15.500001907348633
    4. ' slots' → logprob: -17.125001907348633
    5. '_slots' → logprob: -17.125001907348633
    6. '
' → logprob: -19.500001907348633
    7. 'code' → logprob: -19.625001907348633
    8. 'bits' → logprob: -19.625001907348633
    9. '

' → logprob: -20.375001907348633
    10. 'Slots' → logprob: -20.500001907348633

Token 321: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015953186666592956
    2. ' =' → logprob: -6.876595497131348
    3. '=' → logprob: -7.501595497131348
    4. '__('' → logprob: -12.501595497131348
    5. '___' → logprob: -13.126595497131348
    6. '=('' → logprob: -13.501595497131348
    7. '_' → logprob: -13.876595497131348
    8. '____' → logprob: -14.376595497131348
    9. '__,' → logprob: -14.376595497131348
    10. '_=' → logprob: -15.251595497131348

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521694302558899
    2. ' =' → logprob: -1.5021693706512451
    3. '__' → logprob: -8.877169609069824
    4. '=('' → logprob: -9.252169609069824
    5. '=['' → logprob: -12.752169609069824
    6. '_=' → logprob: -14.002169609069824
    7. '   ' → logprob: -15.252169609069824
    8. '_' → logprob: -15.252169609069824
    9. ' ' → logprob: -15.502169609069824
    10. '=("' → logprob: -15.752169609069824

Token 323: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.013076935894787312
    2. ' ('' → logprob: -4.3880767822265625
    3. '('_' → logprob: -8.263076782226562
    4. ''t' → logprob: -8.263076782226562
    5. '['' → logprob: -10.513076782226562
    6. ''' → logprob: -12.138076782226562
    7. '(' → logprob: -12.138076782226562
    8. ''s' → logprob: -12.638076782226562
    9. '('__' → logprob: -13.138076782226562
    10. ' '' → logprob: -13.263076782226562

Token 324: 'taken' (ID: 171218)
  Prédit: 'taken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.01961265131831169
    2. 'mask' → logprob: -4.769612789154053
    3. 'n' → logprob: -5.269612789154053
    4. 'bit' → logprob: -6.019612789154053
    5. 'num' → logprob: -7.269612789154053
    6. 'used' → logprob: -7.769612789154053
    7. '_taken' → logprob: -7.769612789154053
    8. 'N' → logprob: -8.144612312316895
    9. 'points' → logprob: -8.519612312316895
    10. 'state' → logprob: -8.519612312316895

Token 325: '_mask' (ID: 21732)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.18263502418994904
    2. '')' → logprob: -2.0576350688934326
    3. '_mask' → logprob: -3.3076350688934326
    4. '_bits' → logprob: -7.1826348304748535
    5. ''' → logprob: -7.9326348304748535
    6. '_bit' → logprob: -8.307635307312012
    7. '','' → logprob: -8.307635307312012
    8. '_bitmap' → logprob: -8.557635307312012
    9. '')
' → logprob: -8.682635307312012
    10. 'mask' → logprob: -8.807635307312012

Token 326: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.004748149309307337
    2. '')' → logprob: -5.379748344421387
    3. ',' → logprob: -9.754748344421387
    4. ''' → logprob: -10.629748344421387
    5. '',
' → logprob: -11.004748344421387
    6. '','' → logprob: -11.129748344421387
    7. ' ',' → logprob: -11.754748344421387
    8. ')' → logprob: -12.879748344421387
    9. '')
' → logprob: -13.379748344421387
    10. ':' → logprob: -14.129748344421387

Token 327: ')
' (ID: 446)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6263676881790161
    2. ''n' → logprob: -2.1263675689697266
    3. ' n' → logprob: -2.2513675689697266
    4. ''' → logprob: -2.6263675689697266
    5. ')' → logprob: -3.1263675689697266
    6. ' total' → logprob: -4.001367568969727
    7. 'n' → logprob: -4.501367568969727
    8. ' size' → logprob: -4.751367568969727
    9. ' count' → logprob: -4.876367568969727
    10. ' taken' → logprob: -4.876367568969727

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0173712857067585
    2. '    
' → logprob: -4.64237117767334
    3. '
' → logprob: -4.89237117767334
    4. ' 
' → logprob: -10.26737117767334
    5. ',' → logprob: -11.26737117767334
    6. '        
' → logprob: -12.01737117767334
    7. 'def' → logprob: -12.14237117767334
    8. '    ' → logprob: -12.51737117767334
    9. '\n' → logprob: -12.76737117767334
    10. '     
' → logprob: -13.01737117767334

Token 329: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04240339994430542
    2. 'def' (adapté à ' def') → logprob: -4.167403221130371
    3. ' def' → logprob: -4.292403221130371
    4. '
' → logprob: -4.542403221130371
    5. '    
' → logprob: -6.542403221130371
    6. ' 
' → logprob: -8.667403221130371
    7. '    ' → logprob: -10.042403221130371
    8. '	def' → logprob: -11.542403221130371
    9. ' ' → logprob: -12.167403221130371
    10. '' → logprob: -12.542403221130371

Token 330: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008614926598966122
    2. '__' → logprob: -4.758615016937256
    3. '_init' → logprob: -15.508614540100098
    4. '_' → logprob: -16.383615493774414
    5. '.__' → logprob: -16.383615493774414
    6. ' ' → logprob: -17.633615493774414
    7. ' ' → logprob: -17.883615493774414
    8. ' _' → logprob: -18.258615493774414
    9. '___' → logprob: -18.758615493774414
    10. '/__' → logprob: -19.633615493774414

Token 331: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'slots' → logprob: -15.0
    3. '_init' → logprob: -17.0
    4. ' init' → logprob: -17.5
    5. '.init' → logprob: -20.25
    6. 'int' → logprob: -20.625
    7. ':init' → logprob: -21.375
    8. '(init' → logprob: -21.375
    9. '	init' → logprob: -21.5
    10. '```' → logprob: -21.75

Token 332: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006725549232214689
    2. '__' → logprob: -5.006725311279297
    3. '__(
' → logprob: -12.006725311279297
    4. '__((' → logprob: -12.631725311279297
    5. '__[' → logprob: -14.881725311279297
    6. '__('' → logprob: -15.131725311279297
    7. '___' → logprob: -16.756725311279297
    8. '__("' → logprob: -17.006725311279297
    9. '__.__' → logprob: -17.506725311279297
    10. '_' → logprob: -17.756725311279297

Token 333: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.424530435353518e-05
    2. ' self' → logprob: -9.375094413757324
    3. '0' → logprob: -12.250094413757324
    4. '__(' → logprob: -13.250094413757324
    5. '(self' → logprob: -13.625094413757324
    6. ',' → logprob: -14.125094413757324
    7. '   ' → logprob: -15.250094413757324
    8. '__' → logprob: -15.875094413757324
    9. ')' → logprob: -16.750093460083008
    10. ' ' → logprob: -16.750093460083008

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010312614031136036
    2. 'self' → logprob: -7.001031398773193
    3. ' ,' → logprob: -9.251030921936035
    4. '(self' → logprob: -11.001030921936035
    5. ' (' → logprob: -13.376030921936035
    6. ',self' → logprob: -13.626030921936035
    7. '0' → logprob: -14.251030921936035
    8. ' self' → logprob: -14.376030921936035
    9. '(' → logprob: -14.376030921936035
    10. ',
' → logprob: -14.501030921936035

Token 335: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.007630534935742617
    2. ' taken' → logprob: -4.882630348205566
    3. '   ' → logprob: -11.132630348205566
    4. 'tak' → logprob: -12.257630348205566
    5. 'self' → logprob: -13.132630348205566
    6. ' ' → logprob: -14.632630348205566
    7. 't' → logprob: -14.632630348205566
    8. 'take' → logprob: -14.757630348205566
    9. 'taking' → logprob: -15.257630348205566
    10. '_taken' → logprob: -15.257630348205566

Token 336: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -12.625004768371582
    3. '_bit' → logprob: -14.875004768371582
    4. '_masks' → logprob: -15.000004768371582
    5. ' _' → logprob: -15.250004768371582
    6. '_MASK' → logprob: -15.625004768371582
    7. '_m' → logprob: -15.750004768371582
    8. 'mask' → logprob: -16.0000057220459
    9. '_bits' → logprob: -16.1250057220459
    10. '=_' → logprob: -16.3750057220459

Token 337: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6955465078353882
    2. '=' → logprob: -0.6955465078353882
    3. '):' → logprob: -6.195546627044678
    4. ':int' → logprob: -8.57054615020752
    5. ' =' → logprob: -9.19554615020752
    6. ')' → logprob: -10.44554615020752
    7. ' :' → logprob: -10.94554615020752
    8. '):
' → logprob: -11.69554615020752
    9. ' ):' → logprob: -11.82054615020752
    10. '=None' → logprob: -13.44554615020752

Token 338: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0026392722502350807
    2. '0' → logprob: -6.252639293670654
    3. ' int' → logprob: -7.252639293670654
    4. ' ' → logprob: -14.252638816833496
    5. '   ' → logprob: -14.377638816833496
    6. ')' → logprob: -14.627638816833496
    7. '
' → logprob: -15.627638816833496
    8. '[int' → logprob: -15.752638816833496
    9. '(int' → logprob: -16.877639770507812
    10. ':int' → logprob: -17.127639770507812

Token 339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15530835092067719
    2. '):' → logprob: -2.155308246612549
    3. '):
' → logprob: -3.655308246612549
    4. ' =' → logprob: -6.280308246612549
    5. '=None' → logprob: -9.280308723449707
    6. ')' → logprob: -9.655308723449707
    7. ':' → logprob: -9.905308723449707
    8. '   ' → logprob: -10.780308723449707
    9. '):
' → logprob: -11.280308723449707
    10. ' ):' → logprob: -12.780308723449707

Token 340: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007102862582542002
    2. ' ' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.500710487365723
    4. ')' → logprob: -16.125709533691406
    5. '  ' → logprob: -18.250709533691406
    6. '       ' → logprob: -18.500709533691406
    7. '
' → logprob: -18.500709533691406
    8. '=' → logprob: -18.875709533691406
    9. '):
' → logprob: -19.125709533691406
    10. '    ' → logprob: -19.375709533691406

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. ')' → logprob: -16.000015258789062
    4. '   ' → logprob: -16.500015258789062
    5. '(' → logprob: -18.062515258789062
    6. '  ' → logprob: -18.312515258789062
    7. '
' → logprob: -18.687515258789062
    8. '    ' → logprob: -18.750015258789062
    9. '       ' → logprob: -19.187515258789062
    10. '۰' → logprob: -19.375015258789062

Token 342: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20151975750923157
    2. '):
' → logprob: -1.7015197277069092
    3. ')' → logprob: -9.576519966125488
    4. '):
' → logprob: -10.951519966125488
    5. '   ' → logprob: -11.576519966125488
    6. ' ):' → logprob: -12.201519966125488
    7. '       ' → logprob: -13.201519966125488
    8. ' ):
' → logprob: -13.576519966125488
    9. ':' → logprob: -13.826519966125488
    10. '):

' → logprob: -14.326519966125488

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011880126112373546
    2. 'self' → logprob: -9.12511920928955
    3. ' self' → logprob: -11.75011920928955
    4. '   ' → logprob: -13.25011920928955
    5. '           ' → logprob: -17.000118255615234
    6. '	' → logprob: -17.125118255615234
    7. '      ' → logprob: -17.375118255615234
    8. '	self' → logprob: -17.375118255615234
    9. ',' → logprob: -18.375118255615234
    10. '     ' → logprob: -18.500118255615234

Token 344: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00043162284418940544
    2. '       ' → logprob: -8.000432014465332
    3. ' self' → logprob: -9.250432014465332
    4. '   ' → logprob: -15.875432014465332
    5. '	self' → logprob: -18.125431060791016
    6. ' ' → logprob: -19.875431060791016
    7. '(self' → logprob: -19.875431060791016
    8. '           ' → logprob: -21.250431060791016
    9. '
' → logprob: -21.500431060791016
    10. '     ' → logprob: -22.125431060791016

Token 345: '.t' (ID: 1370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5762166976928711
    2. '.t' → logprob: -0.8262166976928711
    3. ' .' → logprob: -8.326216697692871
    4. ' ' → logprob: -11.326216697692871
    5. '.take' → logprob: -11.451216697692871
    6. 'taken' → logprob: -12.826216697692871
    7. '_taken' → logprob: -12.951216697692871
    8. ').' → logprob: -13.951216697692871
    9. '   ' → logprob: -13.951216697692871
    10. ' =' → logprob: -14.201216697692871

Token 346: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.00011868205183418468
    2. 'a' → logprob: -9.500118255615234
    3. 'taken' → logprob: -10.750118255615234
    4. 'ake' → logprob: -11.875118255615234
    5. 'ak' → logprob: -12.375118255615234
    6. '_taken' → logprob: -12.750118255615234
    7. 'aking' → logprob: -13.125118255615234
    8. '```' → logprob: -13.750118255615234
    9. 'akken' → logprob: -14.500118255615234
    10. '   ' → logprob: -14.625118255615234

Token 347: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.500000953674316
    3. '_m' → logprob: -15.750000953674316
    4. '_MASK' → logprob: -17.25
    5. ' _' → logprob: -17.875
    6. '_masks' → logprob: -17.875
    7. 'mask' → logprob: -18.125
    8. '_bit' → logprob: -19.25
    9. '_ma' → logprob: -19.875
    10. '_map' → logprob: -20.25

Token 348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023248042911291122
    2. ' =' → logprob: -3.7732479572296143
    3. ' ' → logprob: -13.398247718811035
    4. ')' → logprob: -14.273247718811035
    5. ' |=' → logprob: -14.898247718811035
    6. '=}' → logprob: -17.39824867248535
    7. ')=' → logprob: -17.52324867248535
    8. '   ' → logprob: -17.52324867248535
    9. '=

' → logprob: -17.52324867248535
    10. '=int' → logprob: -17.89824867248535

Token 349: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.08275358378887177
    2. ' taken' → logprob: -2.5827536582946777
    3. '0' → logprob: -5.582753658294678
    4. ' ' → logprob: -9.45775318145752
    5. 'tak' → logprob: -11.95775318145752
    6. '   ' → logprob: -13.08275318145752
    7. '_taken' → logprob: -13.33275318145752
    8. 't' → logprob: -13.33275318145752
    9. 'Taken' → logprob: -13.95775318145752
    10. '1' → logprob: -14.52025318145752

Token 350: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -2.3199920178740285e-05
    2. 'mask' → logprob: -10.750022888183594
    3. 'Mask' → logprob: -14.250022888183594
    4. '_MASK' → logprob: -14.375022888183594
    5. '_' → logprob: -14.875022888183594
    6. ' mask' → logprob: -18.375022888183594
    7. '_
' → logprob: -18.500022888183594
    8. '_state' → logprob: -18.875022888183594
    9. ' _' → logprob: -19.000022888183594
    10. ')' → logprob: -19.125022888183594

Token 351: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23941949009895325
    2. '<|end|>' → logprob: -1.7394194602966309
    3. '   ' → logprob: -3.489419460296631
    4. '    
' → logprob: -5.739419460296631
    5. '<|end|>' → logprob: -6.239419460296631
    6. '

' → logprob: -6.739419460296631
    7. ')' → logprob: -8.989419937133789
    8. '
    
' → logprob: -9.739419937133789
    9. '       ' → logprob: -10.239419937133789
    10. 'def' → logprob: -10.364419937133789

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06502120196819305
    2. '<|end|>' → logprob: -3.440021276473999
    3. '
' → logprob: -4.06502103805542
    4. 'def' → logprob: -4.69002103805542
    5. ' def' → logprob: -6.31502103805542
    6. '    
' → logprob: -6.44002103805542
    7. '<|end|>' → logprob: -7.06502103805542
    8. ')' → logprob: -9.690021514892578
    9. '       ' → logprob: -10.190021514892578
    10. '        
' → logprob: -10.315021514892578

Token 353: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00028052396373823285
    2. ' def' → logprob: -8.250280380249023
    3. '   ' → logprob: -10.875280380249023
    4. ')' → logprob: -15.750280380249023
    5. '@property' → logprob: -16.000280380249023
    6. '	def' → logprob: -17.375280380249023
    7. '    
' → logprob: -17.500280380249023
    8. ' ' → logprob: -17.625280380249023
    9. 'de' → logprob: -18.375280380249023
    10. '@' → logprob: -18.375280380249023

Token 354: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2003864347934723
    2. ' copy' → logprob: -2.7003865242004395
    3. ' taken' → logprob: -2.9503865242004395
    4. ' has' → logprob: -3.7003865242004395
    5. ' take' → logprob: -3.8253865242004395
    6. 'is' → logprob: -5.2003865242004395
    7. ' clone' → logprob: -5.7003865242004395
    8. 'taken' → logprob: -6.5753865242004395
    9. ' add' → logprob: -6.7003865242004395
    10. ' ' → logprob: -6.7003865242004395

Token 355: '_taken' (ID: 179958)
  Prédit: '_taken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_taken' → logprob: -5.2762428822461516e-05
    2. '_set' → logprob: -10.375052452087402
    3. '_point' → logprob: -12.000052452087402
    4. '_available' → logprob: -12.125052452087402
    5. 'taken' → logprob: -13.000052452087402
    6. '_free' → logprob: -13.125052452087402
    7. '_bit' → logprob: -13.250052452087402
    8. ' taken' → logprob: -13.625052452087402
    9. '_pair' → logprob: -14.000052452087402
    10. '_' → logprob: -14.500052452087402

Token 356: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04868479445576668
    2. '(' → logprob: -3.04868483543396
    3. ' (' → logprob: -9.423685073852539
    4. '(
' → logprob: -12.048685073852539
    5. 'self' → logprob: -12.423685073852539
    6. ' ' → logprob: -13.048685073852539
    7. '((' → logprob: -14.298685073852539
    8. ')' → logprob: -14.548685073852539
    9. '()' → logprob: -14.798685073852539
    10. ',' → logprob: -14.798685073852539

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02652774006128311
    2. '(self' → logprob: -4.4015278816223145
    3. ' ,' → logprob: -5.4015278816223145
    4. '(' → logprob: -5.5265278816223145
    5. ')' → logprob: -5.5265278816223145
    6. ' (' → logprob: -7.7765278816223145
    7. ' ' → logprob: -8.151527404785156
    8. ',
' → logprob: -8.776527404785156
    9. ')(' → logprob: -9.151527404785156
    10. '):' → logprob: -9.276527404785156

Token 358: ' idx' (ID: 14016)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.020911334082484245
    2. 'idx' → logprob: -4.52091121673584
    3. ' index' → logprob: -4.77091121673584
    4. ' idx' → logprob: -7.27091121673584
    5. 'pos' → logprob: -7.52091121673584
    6. 'i' → logprob: -9.39591121673584
    7. 'point' → logprob: -11.14591121673584
    8. ' pos' → logprob: -12.02091121673584
    9. ' i' → logprob: -14.02091121673584
    10. 'self' → logprob: -14.52091121673584

Token 359: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7525962591171265
    2. '):' → logprob: -1.0025962591171265
    3. ')' → logprob: -2.002596378326416
    4. ':' → logprob: -4.252596378326416
    5. '):
' → logprob: -4.502596378326416
    6. ' ,' → logprob: -7.627596378326416
    7. '   ' → logprob: -8.127595901489258
    8. '(idx' → logprob: -8.877595901489258
    9. ' )' → logprob: -9.002595901489258
    10. ' ' → logprob: -9.127595901489258

Token 360: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.492120155598968e-05
    2. ')' → logprob: -10.250064849853516
    3. ' int' → logprob: -10.500064849853516
    4. '[int' → logprob: -13.375064849853516
    5. '   ' → logprob: -15.750064849853516
    6. '):
' → logprob: -16.250064849853516
    7. ':int' → logprob: -16.625064849853516
    8. '):' → logprob: -16.750064849853516
    9. '(int' → logprob: -17.875064849853516
    10. ' ' → logprob: -18.375064849853516

Token 361: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04831570014357567
    2. '):' → logprob: -3.4233157634735107
    3. '):
' → logprob: -4.298315525054932
    4. ' )' → logprob: -7.048315525054932
    5. ' ):' → logprob: -10.29831600189209
    6. ')->' → logprob: -10.67331600189209
    7. ' ):
' → logprob: -10.79831600189209
    8. '):
' → logprob: -11.67331600189209
    9. ':' → logprob: -12.04831600189209
    10. '   ' → logprob: -12.04831600189209

Token 362: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48246026039123535
    2. ':' → logprob: -1.1074602603912354
    3. '->' → logprob: -3.2324602603912354
    4. ')->' → logprob: -4.857460021972656
    5. ' ->' → logprob: -5.732460021972656
    6. '   ' → logprob: -7.357460021972656
    7. '):' → logprob: -7.482460021972656
    8. '       ' → logprob: -8.107460021972656
    9. ':
' → logprob: -9.232460021972656
    10. '):
' → logprob: -9.607460021972656

Token 363: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.011623249389231205
    2. '(bool' → logprob: -4.511623382568359
    3. ' bool' → logprob: -7.636623382568359
    4. ' (' → logprob: -10.38662338256836
    5. '   ' → logprob: -10.51162338256836
    6. 'return' → logprob: -11.88662338256836
    7. 'int' → logprob: -12.01162338256836
    8. '(int' → logprob: -12.13662338256836
    9. ')' → logprob: -12.51162338256836
    10. '<bool' → logprob: -12.88662338256836

Token 364: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03441745415329933
    2. ':
' → logprob: -3.9094173908233643
    3. '       ' → logprob: -4.534417629241943
    4. '):' → logprob: -7.159417629241943
    5. '):
' → logprob: -7.159417629241943
    6. ':return' → logprob: -7.784417629241943
    7. ',' → logprob: -8.159417152404785
    8. '   ' → logprob: -8.284417152404785
    9. ')' → logprob: -8.284417152404785
    10. '():
' → logprob: -9.034417152404785

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038390252739191055
    2. ' return' → logprob: -5.753839015960693
    3. 'return' → logprob: -7.503839015960693
    4. '   ' → logprob: -9.253839492797852
    5. '	' → logprob: -12.503839492797852
    6. ' 
' → logprob: -13.003839492797852
    7. '	return' → logprob: -13.503839492797852
    8. ' ' → logprob: -13.878839492797852
    9. '    ' → logprob: -14.003839492797852
    10. '        
' → logprob: -14.003839492797852

Token 366: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0029228029306977987
    2. ' return' → logprob: -6.002923011779785
    3. '       ' → logprob: -7.752923011779785
    4. '
' → logprob: -11.252923011779785
    5. '   ' → logprob: -12.627923011779785
    6. '(return' → logprob: -14.252923011779785
    7. '{return' → logprob: -15.627923011779785
    8. '```' → logprob: -15.877923011779785
    9. '	return' → logprob: -16.12792205810547
    10. '           ' → logprob: -16.37792205810547

Token 367: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.31332382559776306
    2. ' (' → logprob: -1.3133238554000854
    3. '((' → logprob: -10.188323974609375
    4. '(bool' → logprob: -11.438323974609375
    5. 'bool' → logprob: -12.938323974609375
    6. ' ((' → logprob: -12.938323974609375
    7. ' self' → logprob: -13.063323974609375
    8. 'self' → logprob: -13.063323974609375
    9. '   ' → logprob: -13.188323974609375
    10. ' ' → logprob: -13.813323974609375

Token 368: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010457895696163177
    2. ' self' → logprob: -7.2510457038879395
    3. '(self' → logprob: -8.001046180725098
    4. '1' → logprob: -15.251046180725098
    5. ' (' → logprob: -15.251046180725098
    6. '[self' → logprob: -16.25104522705078
    7. '   ' → logprob: -16.50104522705078
    8. '       ' → logprob: -17.75104522705078
    9. '           ' → logprob: -17.87604522705078
    10. '	self' → logprob: -18.50104522705078

Token 369: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -5.097437315271236e-05
    2. 'taken' → logprob: -10.25005054473877
    3. '.' → logprob: -11.25005054473877
    4. ' .' → logprob: -13.37505054473877
    5. '_taken' → logprob: -15.12505054473877
    6. 'Taken' → logprob: -15.87505054473877
    7. ' taken' → logprob: -15.87505054473877
    8. ').' → logprob: -16.250051498413086
    9. '```' → logprob: -16.375051498413086
    10. '	t' → logprob: -16.500051498413086

Token 370: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.004116273485124111
    2. 'taken' → logprob: -6.504116058349609
    3. 'ak' → logprob: -7.379116058349609
    4. 'self' → logprob: -7.504116058349609
    5. 'a' → logprob: -7.629116058349609
    6. '```' → logprob: -8.37911605834961
    7. 'aking' → logprob: -8.50411605834961
    8. 'ake' → logprob: -9.25411605834961
    9. '_taken' → logprob: -9.25411605834961
    10. '.a' → logprob: -9.50411605834961

Token 371: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -2.1008713702030946e-06
    2. 'mask' → logprob: -13.250001907348633
    3. '_' → logprob: -16.500001907348633
    4. 'Mask' → logprob: -16.875001907348633
    5. '_MASK' → logprob: -16.875001907348633
    6. '_m' → logprob: -18.250001907348633
    7. '
' → logprob: -18.500001907348633
    8. '_state' → logprob: -18.500001907348633
    9. '_
' → logprob: -19.250001907348633
    10. '```' → logprob: -19.250001907348633

Token 372: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.01941893808543682
    2. '&' → logprob: -4.019418716430664
    3. '>>' → logprob: -6.769418716430664
    4. ' >>' → logprob: -9.144418716430664
    5. ' ' → logprob: -12.269418716430664
    6. ')' → logprob: -12.394418716430664
    7. ' ' → logprob: -13.394418716430664
    8. '&gt' → logprob: -13.644418716430664
    9. '&nbsp' → logprob: -14.644418716430664
    10. '&amp' → logprob: -15.144418716430664

Token 373: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015031944494694471
    2. ' (' → logprob: -6.501502990722656
    3. ')' → logprob: -14.251502990722656
    4. '
' → logprob: -15.626502990722656
    5. '1' → logprob: -16.501502990722656
    6. '   ' → logprob: -16.751502990722656
    7. '(
' → logprob: -18.001502990722656
    8. ' ' → logprob: -18.126502990722656
    9. '{' → logprob: -18.376502990722656
    10. ')(' → logprob: -18.876502990722656

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011708177626132965
    2. '(' → logprob: -6.751170635223389
    3. ' ' → logprob: -14.626171112060547
    4. ' (' → logprob: -16.876171112060547
    5. '   ' → logprob: -17.501171112060547
    6. '
' → logprob: -19.126171112060547
    7. ')' → logprob: -20.376171112060547
    8. '{' → logprob: -20.876171112060547
    9. '           ' → logprob: -21.501171112060547
    10. '[' → logprob: -21.626171112060547

Token 375: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.1269284337759018
    2. ' <<' → logprob: -2.1269283294677734
    3. '<' → logprob: -15.251928329467773
    4. '1' → logprob: -16.751928329467773
    5. '<<(' → logprob: -17.751928329467773
    6. ' ' → logprob: -17.751928329467773
    7. '<<<' → logprob: -18.001928329467773
    8. ' ' → logprob: -19.001928329467773
    9. '&lt' → logprob: -19.001928329467773
    10. '   ' → logprob: -19.251928329467773

Token 376: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.000158842682139948
    2. ' idx' → logprob: -8.75015926361084
    3. '(idx' → logprob: -16.125158309936523
    4. '   ' → logprob: -16.625158309936523
    5. '	idx' → logprob: -16.875158309936523
    6. '[idx' → logprob: -17.875158309936523
    7. 'id' → logprob: -19.625158309936523
    8. '_idx' → logprob: -20.125158309936523
    9. ' ' → logprob: -20.125158309936523
    10. '
' → logprob: -20.375158309936523

Token 377: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.6789137084269896e-05
    2. ')' → logprob: -10.25003719329834
    3. ' ))' → logprob: -13.87503719329834
    4. ''))' → logprob: -15.75003719329834
    5. ')))' → logprob: -16.250036239624023
    6. '))
' → logprob: -16.375036239624023
    7. '"))' → logprob: -17.250036239624023
    8. '0' → logprob: -17.250036239624023
    9. ')!=' → logprob: -18.000036239624023
    10. '__))' → logprob: -18.125036239624023

Token 378: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3401312828063965
    2. ')' → logprob: -1.9651312828063965
    3. ')!=' → logprob: -2.0901312828063965
    4. ' !=' → logprob: -3.7151312828063965
    5. '()!=' → logprob: -9.715131759643555
    6. ']!=' → logprob: -10.465131759643555
    7. '>' → logprob: -10.590131759643555
    8. '==' → logprob: -11.215131759643555
    9. ' )' → logprob: -11.465131759643555
    10. '!==' → logprob: -11.590131759643555

Token 379: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۰' → logprob: -21.37501335144043
    4. '０' → logprob: -22.50001335144043
    5. '   ' → logprob: -24.25001335144043
    6. '٠' → logprob: -24.25001335144043
    7. ' ' → logprob: -24.62501335144043
    8. '০' → logprob: -24.75001335144043
    9. ' ' → logprob: -25.12501335144043
    10. '00' → logprob: -25.62501335144043

Token 380: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '۰' → logprob: -22.875
    4. '０' → logprob: -23.0
    5. '٠' → logprob: -26.375
    6. '০' → logprob: -26.625
    7. '00' → logprob: -26.875
    8. ' ' → logprob: -27.375
    9. '०' → logprob: -27.375
    10. '```' → logprob: -27.625

Token 381: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05865436792373657
    2. '<|end|>' → logprob: -3.433654308319092
    3. '   ' → logprob: -4.308654308319092
    4. '

' → logprob: -4.933654308319092
    5. '    
' → logprob: -5.808654308319092
    6. '  
' → logprob: -8.05865478515625
    7. 'newline' → logprob: -8.18365478515625
    8. '<|end|>' → logprob: -9.05865478515625
    9. '```' → logprob: -9.55865478515625
    10. ' 
' → logprob: -9.68365478515625

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13254432380199432
    2. '
' → logprob: -2.8825442790985107
    3. '    
' → logprob: -3.7575442790985107
    4. '<|end|>' → logprob: -4.13254451751709
    5. ' 
' → logprob: -4.25754451751709
    6. 'def' → logprob: -5.63254451751709
    7. ' def' → logprob: -5.63254451751709
    8. ' ' → logprob: -6.00754451751709
    9. '  
' → logprob: -6.38254451751709
    10. '  ' → logprob: -7.13254451751709

Token 383: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00013131031300872564
    2. ' def' → logprob: -9.375131607055664
    3. '   ' → logprob: -10.000131607055664
    4. '    
' → logprob: -14.375131607055664
    5. '
' → logprob: -15.125131607055664
    6. '	def' → logprob: -16.125131607055664
    7. ' ' → logprob: -16.625131607055664
    8. '        
' → logprob: -17.625131607055664
    9. ')' → logprob: -18.375131607055664
    10. '  ' → logprob: -18.625131607055664

Token 384: ' add' (ID: 1147)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.5137143731117249
    2. ' take' → logprob: -1.13871431350708
    3. 'set' → logprob: -3.51371431350708
    4. ' mark' → logprob: -3.76371431350708
    5. 'mark' → logprob: -4.26371431350708
    6. ' set' → logprob: -4.76371431350708
    7. 'taken' → logprob: -6.51371431350708
    8. 'add' → logprob: -7.01371431350708
    9. ' taken' → logprob: -7.13871431350708
    10. 'with' → logprob: -7.38871431350708

Token 385: '_pair' (ID: 34819)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4155029356479645
    2. '_taken' → logprob: -1.540502905845642
    3. '(self' → logprob: -3.0405030250549316
    4. '_mask' → logprob: -3.4155030250549316
    5. '_' → logprob: -3.9155030250549316
    6. '_pair' → logprob: -4.790503025054932
    7. ' (' → logprob: -5.040503025054932
    8. '(_' → logprob: -5.415503025054932
    9. ' ' → logprob: -6.790503025054932
    10. 'ed' → logprob: -6.915503025054932

Token 386: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010946154361590743
    2. '(' → logprob: -6.876094818115234
    3. ' (' → logprob: -9.751094818115234
    4. 'self' → logprob: -13.626094818115234
    5. '(s' → logprob: -13.626094818115234
    6. '(
' → logprob: -13.751094818115234
    7. ' ' → logprob: -16.626094818115234
    8. '   ' → logprob: -17.126094818115234
    9. ' self' → logprob: -17.376094818115234
    10. ',' → logprob: -17.876094818115234

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4519391655921936
    2. '(self' → logprob: -1.0769391059875488
    3. ' ,' → logprob: -4.576939105987549
    4. '(' → logprob: -5.076939105987549
    5. ' (' → logprob: -5.451939105987549
    6. ')' → logprob: -6.951939105987549
    7. 'self' → logprob: -7.076939105987549
    8. ',self' → logprob: -8.701939582824707
    9. ' ' → logprob: -9.451939582824707
    10. ')(' → logprob: -10.576939582824707

Token 388: ' i' (ID: 575)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1051843911409378
    2. 'idx' → logprob: -2.855184316635132
    3. ' self' → logprob: -3.480184316635132
    4. 'i' → logprob: -5.105184555053711
    5. ' idx' → logprob: -5.855184555053711
    6. '   ' → logprob: -6.980184555053711
    7. 'a' → logprob: -7.355184555053711
    8. 'index' → logprob: -7.480184555053711
    9. ' i' → logprob: -8.730184555053711
    10. ')' → logprob: -9.855184555053711

Token 389: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12857742607593536
    2. ' ,' → logprob: -2.378577470779419
    3. ')' → logprob: -4.50357723236084
    4. 'dx' → logprob: -4.87857723236084
    5. 'nd' → logprob: -6.00357723236084
    6. 'n' → logprob: -6.12857723236084
    7. 's' → logprob: -6.75357723236084
    8. '):' → logprob: -6.87857723236084
    9. ' ' → logprob: -7.87857723236084
    10. 'x' → logprob: -7.87857723236084

Token 390: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0018219047924503684
    2. ' int' → logprob: -6.376821994781494
    3. ' ' → logprob: -10.251821517944336
    4. '[int' → logprob: -10.876821517944336
    5. '(int' → logprob: -11.376821517944336
    6. ',int' → logprob: -11.501821517944336
    7. 'nt' → logprob: -11.501821517944336
    8. 'i' → logprob: -11.501821517944336
    9. '   ' → logprob: -12.501821517944336
    10. ',' → logprob: -12.501821517944336

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000740538293030113
    2. ' ,' → logprob: -7.2507405281066895
    3. ',i' → logprob: -10.750741004943848
    4. ',j' → logprob: -13.000741004943848
    5. '):' → logprob: -13.375741004943848
    6. ',int' → logprob: -13.750741004943848
    7. ',
' → logprob: -14.000741004943848
    8. ')' → logprob: -14.375741004943848
    9. '‌,' → logprob: -14.375741004943848
    10. ',b' → logprob: -14.500741004943848

Token 392: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03804895281791687
    2. ' j' → logprob: -3.2880489826202393
    3. '   ' → logprob: -12.03804874420166
    4. ' ' → logprob: -14.53804874420166
    5. '	j' → logprob: -15.03804874420166
    6. ' ' → logprob: -15.28804874420166
    7. '  ' → logprob: -15.53804874420166
    8. '    ' → logprob: -16.163049697875977
    9. ')' → logprob: -16.413049697875977
    10. '```' → logprob: -16.663049697875977

Token 393: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1201736256480217
    2. ')' → logprob: -2.745173692703247
    3. '):
' → logprob: -3.370173692703247
    4. ':' → logprob: -4.370173454284668
    5. ' ):' → logprob: -6.995173454284668
    6. '   ' → logprob: -7.745173454284668
    7. ' )' → logprob: -8.620173454284668
    8. '):
' → logprob: -8.870173454284668
    9. ',' → logprob: -9.370173454284668
    10. ' ' → logprob: -9.995173454284668

Token 394: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0016482800710946321
    2. ' int' → logprob: -6.501648426055908
    3. ')' → logprob: -8.87664794921875
    4. '):
' → logprob: -12.62664794921875
    5. '[int' → logprob: -14.00164794921875
    6. '<|end|>' → logprob: -14.62664794921875
    7. '<int' → logprob: -14.87664794921875
    8. ':int' → logprob: -15.00164794921875
    9. '):' → logprob: -15.12664794921875
    10. '	int' → logprob: -15.75164794921875

Token 395: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06759995222091675
    2. '):' → logprob: -2.8176000118255615
    3. '):
' → logprob: -5.192599773406982
    4. ' )' → logprob: -10.31760025024414
    5. '):
' → logprob: -11.44260025024414
    6. ')->' → logprob: -12.31760025024414
    7. '):

' → logprob: -12.56760025024414
    8. '   ' → logprob: -12.69260025024414
    9. ' ):' → logprob: -12.94260025024414
    10. ':' → logprob: -14.06760025024414

Token 396: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4674072861671448
    2. '       ' → logprob: -2.0924072265625
    3. ':
' → logprob: -2.2174072265625
    4. '->' → logprob: -2.7174072265625
    5. ' ->' → logprob: -3.0924072265625
    6. ')' → logprob: -3.9674072265625
    7. '):
' → logprob: -5.3424072265625
    8. '   ' → logprob: -5.8424072265625
    9. '):' → logprob: -6.8424072265625
    10. ',' → logprob: -7.3424072265625

Token 397: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3205258846282959
    2. 'None' → logprob: -2.320525884628296
    3. ' '' → logprob: -2.445525884628296
    4. ''int' → logprob: -3.070525884628296
    5. 'int' → logprob: -3.320525884628296
    6. ''s' → logprob: -5.820526123046875
    7. ' None' → logprob: -6.695526123046875
    8. 'Pair' → logprob: -7.695526123046875
    9. ' int' → logprob: -8.195526123046875
    10. ''in' → logprob: -8.445526123046875

Token 398: 'Pair' (ID: 15573)
  Prédit: 'Pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pair' → logprob: -0.0005543439765460789
    2. ' Pair' → logprob: -7.50055456161499
    3. 'Point' → logprob: -14.625554084777832
    4. '<Pair' → logprob: -15.250554084777832
    5. 'Pa' → logprob: -16.00055503845215
    6. 'self' → logprob: -16.37555503845215
    7. '_pair' → logprob: -16.37555503845215
    8. 'pair' → logprob: -16.62555503845215
    9. ' ' → logprob: -16.75055503845215
    10. ''' → logprob: -17.00055503845215

Token 399: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -6.170270353322849e-05
    2. 'air' → logprob: -11.000061988830566
    3. 'ring' → logprob: -11.500061988830566
    4. 'ering' → logprob: -11.625061988830566
    5. 'Pair' → logprob: -11.625061988830566
    6. 'inging' → logprob: -12.625061988830566
    7. 'ng' → logprob: -13.125061988830566
    8. 'a' → logprob: -13.375061988830566
    9. 'er' → logprob: -13.375061988830566
    10. 'aring' → logprob: -13.750061988830566

Token 400: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -1.0280383548888494e-06
    2. 'Stat' → logprob: -15.250000953674316
    3. 'St' → logprob: -15.375000953674316
    4. 'state' → logprob: -15.625000953674316
    5. 'S' → logprob: -16.250001907348633
    6. 'Sta' → logprob: -16.500001907348633
    7. '_state' → logprob: -17.125001907348633
    8. 'States' → logprob: -17.375001907348633
    9. '_State' → logprob: -17.500001907348633
    10. ' State' → logprob: -17.625001907348633

Token 401: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.060489755123853683
    2. ':' → logprob: -3.0604896545410156
    3. '):
' → logprob: -4.560489654541016
    4. ',' → logprob: -7.685489654541016
    5. '   ' → logprob: -8.185489654541016
    6. '):' → logprob: -8.185489654541016
    7. '       ' → logprob: -8.810489654541016
    8. ''):
' → logprob: -9.810489654541016
    9. ')' → logprob: -10.310489654541016
    10. '():
' → logprob: -10.560489654541016

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002307146554812789
    2. '
' → logprob: -7.002306938171387
    3. ' return' → logprob: -7.627306938171387
    4. 'return' → logprob: -7.877306938171387
    5. '   ' → logprob: -8.627306938171387
    6. ' 
' → logprob: -9.252306938171387
    7. '        
' → logprob: -9.377306938171387
    8. ',' → logprob: -10.252306938171387
    9. '    
' → logprob: -10.502306938171387
    10. '  
' → logprob: -11.002306938171387

Token 403: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.37197789549827576
    2. ' return' → logprob: -1.3719779253005981
    3. '       ' → logprob: -2.8719778060913086
    4. '
' → logprob: -7.996977806091309
    5. 'new' → logprob: -10.246977806091309
    6. ' new' → logprob: -10.371977806091309
    7. '
' → logprob: -11.246977806091309
    8. '   ' → logprob: -11.746977806091309
    9. 'Return' → logprob: -12.121977806091309
    10. '        
' → logprob: -12.621977806091309

Token 404: ' Pair' (ID: 41250)
  Prédit: 'Pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pair' → logprob: -0.12693104147911072
    2. ' Pair' → logprob: -2.1269309520721436
    3. '   ' → logprob: -13.251931190490723
    4. ' ' → logprob: -14.501931190490723
    5. '  ' → logprob: -15.251931190490723
    6. 'Type' → logprob: -15.501931190490723
    7. 'type' → logprob: -16.126930236816406
    8. 'self' → logprob: -16.751930236816406
    9. '       ' → logprob: -17.001930236816406
    10. '    ' → logprob: -17.251930236816406

Token 405: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -5.157039049663581e-05
    2. 'ng' → logprob: -9.875051498413086
    3. 'ring' → logprob: -17.125051498413086
    4. 'ning' → logprob: -18.250051498413086
    5. ' ing' → logprob: -18.750051498413086
    6. 'g' → logprob: -18.875051498413086
    7. 'State' → logprob: -19.125051498413086
    8. 'ING' → logprob: -19.125051498413086
    9. 'in' → logprob: -19.625051498413086
    10. '   ' → logprob: -19.750051498413086

Token 406: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -2.696889623621246e-06
    2. 'state' → logprob: -13.00000286102295
    3. 't' → logprob: -16.375001907348633
    4. 's' → logprob: -16.625001907348633
    5. '_state' → logprob: -17.500001907348633
    6. 'States' → logprob: -18.000001907348633
    7. 'ing' → logprob: -18.250001907348633
    8. 'ate' → logprob: -18.375001907348633
    9. 'S' → logprob: -18.375001907348633
    10. '(' → logprob: -18.750001907348633

Token 407: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -12.12501049041748
    3. '(t' → logprob: -12.25001049041748
    4. 'self' → logprob: -16.000009536743164
    5. '((' → logprob: -16.625009536743164
    6. ' (' → logprob: -18.000009536743164
    7. '(
' → logprob: -18.375009536743164
    8. ' self' → logprob: -19.875009536743164
    9. '(s' → logprob: -20.250009536743164
    10. '	self' → logprob: -20.500009536743164

Token 408: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.00016516048344783485
    2. '.' → logprob: -8.875164985656738
    3. 'taken' → logprob: -10.875164985656738
    4. ' .' → logprob: -12.375164985656738
    5. '_taken' → logprob: -14.750164985656738
    6. 't' → logprob: -15.000164985656738
    7. ').' → logprob: -15.125164985656738
    8. '.take' → logprob: -15.500164985656738
    9. '   ' → logprob: -15.500164985656738
    10. '	t' → logprob: -15.875164985656738

Token 409: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.0010311421938240528
    2. 'taken' → logprob: -7.501030921936035
    3. '.' → logprob: -8.626030921936035
    4. 'a' → logprob: -9.376030921936035
    5. '_taken' → logprob: -10.126030921936035
    6. 'ak' → logprob: -10.751030921936035
    7. 'ken' → logprob: -11.001030921936035
    8. '>' → logprob: -11.126030921936035
    9. '{' → logprob: -11.126030921936035
    10. '+' → logprob: -11.501030921936035

Token 410: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.5213274309644476e-05
    2. 'mask' → logprob: -11.125015258789062
    3. '_' → logprob: -15.875015258789062
    4. '_m' → logprob: -16.000015258789062
    5. '_MASK' → logprob: -16.625015258789062
    6. 'Mask' → logprob: -18.250015258789062
    7. ' mask' → logprob: -18.750015258789062
    8. '
' → logprob: -19.000015258789062
    9. '_ma' → logprob: -19.125015258789062
    10. '   ' → logprob: -19.250015258789062

Token 411: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.0380435548722744
    2. '|' → logprob: -3.28804349899292
    3. ' ' → logprob: -13.788043975830078
    4. ')' → logprob: -15.038043975830078
    5. ' ' → logprob: -15.288043975830078
    6. '|(' → logprob: -15.288043975830078
    7. '│' → logprob: -15.788043975830078
    8. ' |
' → logprob: -17.413043975830078
    9. '   ' → logprob: -17.538043975830078
    10. '```' → logprob: -17.538043975830078

Token 412: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3869459927082062
    2. ' (' → logprob: -1.1369459629058838
    3. '((' → logprob: -9.761945724487305
    4. ' ((' → logprob: -11.136945724487305
    5. ' ' → logprob: -13.261945724487305
    6. '  ' → logprob: -14.636945724487305
    7. '   ' → logprob: -15.136945724487305
    8. '    ' → logprob: -15.511945724487305
    9. '1' → logprob: -16.261945724487305
    10. '        ' → logprob: -17.011945724487305

Token 413: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010628487507347018
    2. '1' → logprob: -9.625105857849121
    3. ' (' → logprob: -10.125105857849121
    4. '   ' → logprob: -16.500106811523438
    5. ' ' → logprob: -17.125106811523438
    6. '((' → logprob: -17.375106811523438
    7. '
' → logprob: -18.125106811523438
    8. '  ' → logprob: -18.250106811523438
    9. '[' → logprob: -19.250106811523438
    10. '           ' → logprob: -19.500106811523438

Token 414: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.016113195568323135
    2. ' <<' → logprob: -4.14111328125
    3. '<' → logprob: -10.14111328125
    4. ' ' → logprob: -11.76611328125
    5. '1' → logprob: -12.01611328125
    6. ')' → logprob: -12.39111328125
    7. '<<(' → logprob: -12.64111328125
    8. '   ' → logprob: -12.89111328125
    9. '```' → logprob: -12.89111328125
    10. '    ' → logprob: -13.01611328125

Token 415: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.547789674485102e-05
    2. ' i' → logprob: -10.250035285949707
    3. ')i' → logprob: -17.500036239624023
    4. '	i' → logprob: -18.000036239624023
    5. '
' → logprob: -19.500036239624023
    6. ')' → logprob: -19.625036239624023
    7. '(i' → logprob: -19.625036239624023
    8. 'j' → logprob: -20.000036239624023
    9. '```' → logprob: -20.000036239624023
    10. '   ' → logprob: -20.000036239624023

Token 416: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00876501016318798
    2. ' |' → logprob: -5.25876522064209
    3. '|' → logprob: -5.75876522064209
    4. ' )' → logprob: -8.00876522064209
    5. ')|' → logprob: -11.25876522064209
    6. ')|(' → logprob: -11.63376522064209
    7. '        ' → logprob: -12.38376522064209
    8. ' ' → logprob: -12.88376522064209
    9. ')
' → logprob: -13.25876522064209
    10. ' ' → logprob: -13.63376522064209

Token 417: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.6932744383811951
    2. ' |' → logprob: -0.6932744383811951
    3. ')' → logprob: -9.06827449798584
    4. ' ' → logprob: -12.94327449798584
    5. '           ' → logprob: -13.81827449798584
    6. ')|' → logprob: -13.94327449798584
    7. '            ' → logprob: -13.94327449798584
    8. ' ' → logprob: -14.06827449798584
    9. '          ' → logprob: -14.06827449798584
    10. '        ' → logprob: -14.06827449798584

Token 418: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2254190742969513
    2. ' (' → logprob: -1.600419044494629
    3. '1' → logprob: -12.225419044494629
    4. ')' → logprob: -14.725419044494629
    5. ' ' → logprob: -15.100419044494629
    6. '<|end|>' → logprob: -15.225419044494629
    7. 'j' → logprob: -16.475419998168945
    8. '...' → logprob: -16.725419998168945
    9. ' ' → logprob: -16.850419998168945
    10. '```' → logprob: -16.850419998168945

Token 419: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005194501485675573
    2. '1' → logprob: -5.755194664001465
    3. ' j' → logprob: -6.255194664001465
    4. '(' → logprob: -9.880194664001465
    5. ')' → logprob: -11.130194664001465
    6. ' ' → logprob: -11.505194664001465
    7. ' (' → logprob: -12.005194664001465
    8. '   ' → logprob: -13.005194664001465
    9. '```' → logprob: -13.005194664001465
    10. '`' → logprob: -13.505194664001465

Token 420: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.48290637135505676
    2. ' <<' → logprob: -0.9829063415527344
    3. '1' → logprob: -5.982906341552734
    4. '|' → logprob: -5.982906341552734
    5. '<' → logprob: -6.732906341552734
    6. ' |' → logprob: -7.232906341552734
    7. ')' → logprob: -7.732906341552734
    8. ' j' → logprob: -7.982906341552734
    9. ' ' → logprob: -8.732906341552734
    10. ' <' → logprob: -8.857906341552734

Token 421: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00026181264547631145
    2. ' j' → logprob: -8.250262260437012
    3. '   ' → logprob: -15.500262260437012
    4. '	j' → logprob: -16.375261306762695
    5. '[j' → logprob: -16.500261306762695
    6. ')' → logprob: -17.000261306762695
    7. ' ' → logprob: -17.625261306762695
    8. '$j' → logprob: -18.000261306762695
    9. '```' → logprob: -18.125261306762695
    10. '<|end|>' → logprob: -18.500261306762695

Token 422: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0031943509820848703
    2. ')' → logprob: -5.753194332122803
    3. ' ))' → logprob: -11.753194808959961
    4. ''))' → logprob: -12.878194808959961
    5. ')))' → logprob: -13.003194808959961
    6. '))
' → logprob: -13.128194808959961
    7. '()))' → logprob: -14.628194808959961
    8. '),' → logprob: -14.878194808959961
    9. '   ' → logprob: -14.878194808959961
    10. ' ' → logprob: -15.753194808959961

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20578601956367493
    2. '
' → logprob: -1.7057859897613525
    3. '    
' → logprob: -6.330786228179932
    4. 'def' → logprob: -6.580786228179932
    5. '<|end|>' → logprob: -7.830786228179932
    6. '

' → logprob: -8.580785751342773
    7. ' ' → logprob: -8.705785751342773
    8. ' 
' → logprob: -9.080785751342773
    9. '```' → logprob: -9.580785751342773
    10. '    ' → logprob: -10.080785751342773

Token 424: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22708968818187714
    2. 'def' (adapté à ' def') → logprob: -1.6020896434783936
    3. '
' → logprob: -7.352089881896973
    4. '<|end|>' → logprob: -7.602089881896973
    5. 'class' → logprob: -8.602089881896973
    6. ' def' → logprob: -8.852089881896973
    7. ')' → logprob: -9.727089881896973
    8. '    
' → logprob: -9.977089881896973
    9. '    ' → logprob: -10.477089881896973
    10. '       ' → logprob: -11.227089881896973

Token 425: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.1448347568511963
    2. ' all' → logprob: -3.3948347568511963
    3. ' __' → logprob: -3.8948347568511963
    4. '__' → logprob: -4.144834518432617
    5. 'get' → logprob: -4.144834518432617
    6. 'first' → logprob: -4.394834518432617
    7. 'count' → logprob: -4.769834518432617
    8. 'find' → logprob: -4.769834518432617
    9. 'next' → logprob: -5.144834518432617
    10. 'is' → logprob: -5.144834518432617

Token 426: '_taken' (ID: 179958)
  Prédit: '_taken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_taken' → logprob: -0.002276223385706544
    2. '_pairs' → logprob: -6.627276420593262
    3. '_p' → logprob: -7.627276420593262
    4. 'taken' → logprob: -8.752276420593262
    5. '_done' → logprob: -9.252276420593262
    6. '_points' → logprob: -10.252276420593262
    7. '_completed' → logprob: -10.377276420593262
    8. '```' → logprob: -10.377276420593262
    9. '_complete' → logprob: -11.252276420593262
    10. '_mat' → logprob: -11.627276420593262

Token 427: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -13.250003814697266
    3. ' (' → logprob: -13.625003814697266
    4. 'self' → logprob: -14.375003814697266
    5. ' ' → logprob: -17.250003814697266
    6. '()' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.875003814697266
    8. ' self' → logprob: -18.125003814697266
    9. ')' → logprob: -18.750003814697266
    10. 's' → logprob: -18.875003814697266

Token 428: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18121051788330078
    2. 'self' → logprob: -2.306210517883301
    3. ')' → logprob: -3.181210517883301
    4. '):' → logprob: -4.056210517883301
    5. ',' → logprob: -5.431210517883301
    6. '):
' → logprob: -6.181210517883301
    7. ' self' → logprob: -8.3062105178833
    8. ' ' → logprob: -8.9312105178833
    9. ' )' → logprob: -9.0562105178833
    10. ' (' → logprob: -9.3062105178833

Token 429: ' total' (ID: 3609)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0226210355758667
    2. 'self' → logprob: -1.1476210355758667
    3. 'num' → logprob: -2.1476211547851562
    4. ' n' → logprob: -2.6476211547851562
    5. ' self' → logprob: -2.7726211547851562
    6. 'count' → logprob: -3.3976211547851562
    7. ')' → logprob: -3.8976211547851562
    8. ' num' → logprob: -4.897621154785156
    9. ' count' → logprob: -5.522621154785156
    10. 'size' → logprob: -5.897621154785156

Token 430: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.2936170697212219
    2. '):' → logprob: -2.043617010116577
    3. ')' → logprob: -2.918617010116577
    4. ':' → logprob: -3.293617010116577
    5. '):
' → logprob: -3.793617010116577
    6. 'points' → logprob: -5.918617248535156
    7. '   ' → logprob: -6.043617248535156
    8. ':int' → logprob: -6.043617248535156
    9. '_pts' → logprob: -6.793617248535156
    10. '_tokens' → logprob: -7.793617248535156

Token 431: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006870240438729525
    2. '):' → logprob: -5.756870269775391
    3. ':int' → logprob: -6.631870269775391
    4. ')' → logprob: -6.631870269775391
    5. '):
' → logprob: -7.381870269775391
    6. ' :' → logprob: -8.50687026977539
    7. '   ' → logprob: -9.00687026977539
    8. ' ):' → logprob: -10.13187026977539
    9. ',' → logprob: -11.00687026977539
    10. ' )' → logprob: -11.25687026977539

Token 432: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004263589158654213
    2. ' int' → logprob: -5.504263401031494
    3. ')' → logprob: -8.629263877868652
    4. '[int' → logprob: -12.129263877868652
    5. ':int' → logprob: -15.129263877868652
    6. '):
' → logprob: -15.629263877868652
    7. ' ' → logprob: -16.129262924194336
    8. '(int' → logprob: -16.129262924194336
    9. ']int' → logprob: -16.504262924194336
    10. ' )' → logprob: -16.629262924194336

Token 433: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002509687910787761
    2. ' )' → logprob: -8.750250816345215
    3. '):
' → logprob: -9.875250816345215
    4. '):' → logprob: -10.125250816345215
    5. ':' → logprob: -15.375250816345215
    6. '   ' → logprob: -15.500250816345215
    7. ')->' → logprob: -15.750250816345215
    8. '')' → logprob: -16.62525177001953
    9. '):

' → logprob: -16.75025177001953
    10. '`)' → logprob: -16.87525177001953

Token 434: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6316929459571838
    2. '->' → logprob: -1.131692886352539
    3. ' ->' → logprob: -2.756692886352539
    4. '       ' → logprob: -2.756692886352539
    5. '   ' → logprob: -4.631692886352539
    6. ':' → logprob: -5.131692886352539
    7. ')->' → logprob: -6.881692886352539
    8. '=' → logprob: -7.381692886352539
    9. 'self' → logprob: -7.506692886352539
    10. '(self' → logprob: -7.756692886352539

Token 435: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.017004523426294327
    2. 'int' → logprob: -4.267004489898682
    3. 'return' → logprob: -6.517004489898682
    4. ' bool' → logprob: -6.642004489898682
    5. '
' → logprob: -10.76700496673584
    6. '   ' → logprob: -11.26700496673584
    7. ' return' → logprob: -11.39200496673584
    8. ' int' → logprob: -11.76700496673584
    9. '  ' → logprob: -14.89200496673584
    10. '(bool' → logprob: -15.14200496673584

Token 436: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1806619018316269
    2. '       ' → logprob: -2.055661916732788
    3. 'self' → logprob: -3.430661916732788
    4. ' self' → logprob: -6.180661678314209
    5. ':
' → logprob: -6.930661678314209
    6. ':' → logprob: -7.055661678314209
    7. '   ' → logprob: -7.555661678314209
    8. '(' → logprob: -9.180662155151367
    9. ':self' → logprob: -9.680662155151367
    10. '=self' → logprob: -9.930662155151367

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013051874935626984
    2. 'return' → logprob: -4.513051986694336
    3. ' return' → logprob: -6.263051986694336
    4. '	' → logprob: -9.763051986694336
    5. '   ' → logprob: -10.763051986694336
    6. '	return' → logprob: -11.388051986694336
    7. '	   ' → logprob: -13.513051986694336
    8. '{return' → logprob: -13.888051986694336
    9. '```' → logprob: -14.638051986694336
    10. '        
' → logprob: -14.638051986694336

Token 438: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00724524911493063
    2. '       ' → logprob: -5.507245063781738
    3. ' return' → logprob: -5.757245063781738
    4. '   ' → logprob: -13.507245063781738
    5. '
' → logprob: -15.007245063781738
    6. '	return' → logprob: -15.507245063781738
    7. ' ' → logprob: -17.257246017456055
    8. '{return' → logprob: -17.757246017456055
    9. ':return' → logprob: -18.382246017456055
    10. '           ' → logprob: -18.507246017456055

Token 439: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024862384889274836
    2. ' self' → logprob: -6.252486228942871
    3. '(self' → logprob: -7.502486228942871
    4. ' (' → logprob: -12.252486228942871
    5. '(' → logprob: -14.127486228942871
    6. '   ' → logprob: -15.502486228942871
    7. '((' → logprob: -17.377487182617188
    8. '[self' → logprob: -18.377487182617188
    9. '	self' → logprob: -18.877487182617188
    10. '       ' → logprob: -19.127487182617188

Token 440: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -1.3782830137643032e-05
    2. '.' → logprob: -11.62501335144043
    3. 'taken' → logprob: -13.12501335144043
    4. '_taken' → logprob: -13.87501335144043
    5. ' .' → logprob: -14.00001335144043
    6. '   ' → logprob: -15.50001335144043
    7. '.take' → logprob: -16.00001335144043
    8. '
' → logprob: -16.50001335144043
    9. 'Taken' → logprob: -16.50001335144043
    10. ').' → logprob: -16.62501335144043

Token 441: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.00010556964843999594
    2. 'ak' → logprob: -9.625105857849121
    3. 'taken' → logprob: -11.375105857849121
    4. 'a' → logprob: -11.625105857849121
    5. '_taken' → logprob: -11.625105857849121
    6. 'ake' → logprob: -12.500105857849121
    7. 'akn' → logprob: -13.500105857849121
    8. 'akken' → logprob: -13.875105857849121
    9. 'aking' → logprob: -13.875105857849121
    10. 'akin' → logprob: -15.000105857849121

Token 442: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.1637164789135568e-05
    2. 'mask' → logprob: -11.375011444091797
    3. '_MASK' → logprob: -16.875011444091797
    4. 'Mask' → logprob: -17.750011444091797
    5. '_' → logprob: -19.500011444091797
    6. '(mask' → logprob: -19.750011444091797
    7. ' mask' → logprob: -19.875011444091797
    8. '_masks' → logprob: -20.250011444091797
    9. '	mask' → logprob: -20.500011444091797
    10. '
' → logprob: -20.750011444091797

Token 443: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003667294979095459
    2. ' ==' → logprob: -5.62866735458374
    3. '==(' → logprob: -9.628666877746582
    4. '=' → logprob: -14.628666877746582
    5. '()==' → logprob: -15.003666877746582
    6. '==
' → logprob: -15.378666877746582
    7. ')==' → logprob: -16.1286678314209
    8. '>>' → logprob: -16.1286678314209
    9. '(' → logprob: -17.0036678314209
    10. '===' → logprob: -17.5036678314209

Token 444: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014165391214191914
    2. ' (' → logprob: -4.26416540145874
    3. '   ' → logprob: -13.389164924621582
    4. '((' → logprob: -15.514164924621582
    5. '       ' → logprob: -16.7641658782959
    6. ' ' → logprob: -17.2641658782959
    7. '    ' → logprob: -18.5141658782959
    8. '     ' → logprob: -18.6391658782959
    9. '  ' → logprob: -18.7641658782959
    10. ',' → logprob: -19.0141658782959

Token 445: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.961759259458631e-06
    2. ' (' → logprob: -12.625004768371582
    3. '1' → logprob: -14.000004768371582
    4. '   ' → logprob: -14.125004768371582
    5. ' ' → logprob: -17.7500057220459
    6. '
' → logprob: -19.1250057220459
    7. '       ' → logprob: -19.8750057220459
    8. '((' → logprob: -20.1250057220459
    9. '    ' → logprob: -20.2500057220459
    10. '  ' → logprob: -20.5000057220459

Token 446: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.126974418759346
    2. '<<' → logprob: -2.12697434425354
    3. '<<(' → logprob: -10.376974105834961
    4. '1' → logprob: -11.626974105834961
    5. '(' → logprob: -12.126974105834961
    6. 'u' → logprob: -15.126974105834961
    7. '   ' → logprob: -15.251974105834961
    8. ' (' → logprob: -15.876974105834961
    9. ' ' → logprob: -16.62697410583496
    10. '```' → logprob: -16.87697410583496

Token 447: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -3.607391408877447e-05
    2. ' total' → logprob: -10.250036239624023
    3. '(total' → logprob: -14.250036239624023
    4. '(' → logprob: -18.250036239624023
    5. '	total' → logprob: -21.875036239624023
    6. ' (' → logprob: -22.125036239624023
    7. '   ' → logprob: -23.000036239624023
    8. '
' → logprob: -23.250036239624023
    9. 'tot' → logprob: -23.375036239624023
    10. '0' → logprob: -23.625036239624023

Token 448: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.0087516784551553e-05
    2. 'points' → logprob: -12.12501049041748
    3. '
' → logprob: -13.00001049041748
    4. '_' → logprob: -15.00001049041748
    5. '```' → logprob: -15.25001049041748
    6. 'Points' → logprob: -15.50001049041748
    7. '_POINTS' → logprob: -15.62501049041748
    8. ')' → logprob: -15.87501049041748
    9. '_pts' → logprob: -16.125009536743164
    10. '_pairs' → logprob: -16.125009536743164

Token 449: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. ')-' → logprob: -12.000009536743164
    3. ' )' → logprob: -12.500009536743164
    4. '   ' → logprob: -17.625009536743164
    5. ' ' → logprob: -17.875009536743164
    6. '())' → logprob: -18.000009536743164
    7. '')' → logprob: -19.000009536743164
    8. '）' → logprob: -19.125009536743164
    9. '")' → logprob: -20.125009536743164
    10. '    ' → logprob: -20.125009536743164

Token 450: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.187639057636261
    2. ')-' → logprob: -2.187638998031616
    3. '-' → logprob: -3.437638998031616
    4. ')' → logprob: -3.687638998031616
    5. '_points' → logprob: -7.687639236450195
    6. ' ' → logprob: -8.062639236450195
    7. '   ' → logprob: -8.312639236450195
    8. ']-' → logprob: -8.562639236450195
    9. '}-' → logprob: -8.812639236450195
    10. '()-' → logprob: -10.062639236450195

Token 451: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -20.625003814697266
    4. '   ' → logprob: -21.250003814697266
    5. '۱' → logprob: -22.000003814697266
    6. '<|end|>' → logprob: -22.250003814697266
    7. '
' → logprob: -22.562503814697266
    8. 'from' → logprob: -22.687503814697266
    9. '১' → logprob: -22.687503814697266
    10. '{' → logprob: -23.000003814697266

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -19.5
    5. '
' → logprob: -19.5
    6. '<|end|>' → logprob: -19.625
    7. '۱' → logprob: -20.8125
    8. '১' → logprob: -21.4375
    9. '2' → logprob: -21.5
    10. 'from' → logprob: -22.0625

Token 453: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4534529447555542
    2. '
' → logprob: -1.0784529447555542
    3. '<|end|>' → logprob: -4.453453063964844
    4. '    
' → logprob: -4.953453063964844
    5. 'def' → logprob: -5.578453063964844
    6. '<|end|>' → logprob: -7.078453063964844
    7. 'class' → logprob: -7.953453063964844
    8. '

' → logprob: -8.078453063964844
    9. ')' → logprob: -8.578453063964844
    10. '  
' → logprob: -9.578453063964844

Token 454: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38749489188194275
    2. 'def' → logprob: -1.1374949216842651
    3. ' def' → logprob: -8.012495040893555
    4. '
' → logprob: -9.137495040893555
    5. 'class' → logprob: -9.512495040893555
    6. '    
' → logprob: -10.012495040893555
    7. '@' → logprob: -11.012495040893555
    8. ')' → logprob: -11.137495040893555
    9. 'from' → logprob: -12.387495040893555
    10. '    ' → logprob: -12.637495040893555

Token 455: ' Parallel' (ID: 89035)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.38729697465896606
    2. 'Pair' → logprob: -1.7622969150543213
    3. 'Point' → logprob: -3.0122969150543213
    4. 'Solver' → logprob: -3.2622969150543213
    5. 'Line' → logprob: -4.3872971534729
    6. 'Direction' → logprob: -4.6372971534729
    7. 'Matcher' → logprob: -4.6372971534729
    8. ' Solution' → logprob: -4.8872971534729
    9. 'Recursive' → logprob: -5.1372971534729
    10. 'Matching' → logprob: -5.5122971534729

Token 456: 'Lines' (ID: 22204)
  Prédit: 'Lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lines' → logprob: -0.1971072107553482
    2. 'Line' → logprob: -2.5721073150634766
    3. 'Pair' → logprob: -2.5721073150634766
    4. 'Pairs' → logprob: -4.322107315063477
    5. 'Direction' → logprob: -5.822107315063477
    6. 'Vectors' → logprob: -5.822107315063477
    7. 'Vector' → logprob: -5.947107315063477
    8. 'Directions' → logprob: -6.322107315063477
    9. 'ism' → logprob: -7.947107315063477
    10. 'Solver' → logprob: -8.572107315063477

Token 457: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003405732335522771
    2. ':
' → logprob: -5.753405570983887
    3. 'Solver' → logprob: -8.878405570983887
    4. 'Problem' → logprob: -11.253405570983887
    5. '(' → logprob: -11.753405570983887
    6. 'Searcher' → logprob: -11.753405570983887
    7. 'Finder' → logprob: -12.253405570983887
    8. '{' → logprob: -12.503405570983887
    9. 'Solution' → logprob: -12.628405570983887
    10. 'Enumerator' → logprob: -12.753405570983887

Token 458: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002197717549279332
    2. ':
' → logprob: -6.127197742462158
    3. ':def' → logprob: -12.502197265625
    4. '(' → logprob: -13.002197265625
    5. '):' → logprob: -13.002197265625
    6. '():' → logprob: -13.752197265625
    7. ' :' → logprob: -14.127197265625
    8. '   ' → logprob: -14.127197265625
    9. '(object' → logprob: -14.502197265625
    10. ':

' → logprob: -14.877197265625

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003340260125696659
    2. ' def' → logprob: -5.753340244293213
    3. 'def' → logprob: -9.003340721130371
    4. '	def' → logprob: -11.003340721130371
    5. '   ' → logprob: -11.878340721130371
    6. '    
' → logprob: -12.378340721130371
    7. ' indentation' → logprob: -13.378340721130371
    8. ',' → logprob: -13.503340721130371
    9. '   ' → logprob: -13.628340721130371
    10. '    ' → logprob: -13.628340721130371

Token 460: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28703781962394714
    2. 'def' (adapté à ' def') → logprob: -1.9120378494262695
    3. ' def' → logprob: -2.2870378494262695
    4. 'class' → logprob: -9.16203784942627
    5. ' __' → logprob: -10.53703784942627
    6. '__' → logprob: -11.03703784942627
    7. '```' → logprob: -11.91203784942627
    8. '
' → logprob: -12.16203784942627
    9. '	def' → logprob: -13.03703784942627
    10. '    ' → logprob: -13.03703784942627

Token 461: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2596808075904846
    2. '__' → logprob: -1.5096807479858398
    3. 'init' → logprob: -5.13468074798584
    4. '_init' → logprob: -6.63468074798584
    5. ' init' → logprob: -8.25968074798584
    6. ' def' → logprob: -8.75968074798584
    7. 'def' → logprob: -10.13468074798584
    8. '_' → logprob: -10.88468074798584
    9. '___' → logprob: -11.88468074798584
    10. '__(' → logprob: -11.88468074798584

Token 462: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00012856863031629473
    2. 'slots' → logprob: -9.000128746032715
    3. 'slot' → logprob: -13.000128746032715
    4. 'int' → logprob: -13.750128746032715
    5. 'it' → logprob: -14.125128746032715
    6. 'class' → logprob: -15.625128746032715
    7. 'nit' → logprob: -15.625128746032715
    8. 'in' → logprob: -16.0001277923584
    9. 'name' → logprob: -16.1251277923584
    10. '_init' → logprob: -16.3751277923584

Token 463: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6948023438453674
    2. '__(' → logprob: -0.6948023438453674
    3. '(' → logprob: -7.069802284240723
    4. ' (' → logprob: -7.819802284240723
    5. '__(
' → logprob: -8.319802284240723
    6. '__' → logprob: -9.819802284240723
    7. 'self' → logprob: -10.194802284240723
    8. ')(' → logprob: -10.694802284240723
    9. '_(' → logprob: -10.944802284240723
    10. '(
' → logprob: -11.569802284240723

Token 464: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8550976164988242e-05
    2. ' self' → logprob: -11.000018119812012
    3. ')' → logprob: -13.750018119812012
    4. '   ' → logprob: -15.500018119812012
    5. '
' → logprob: -15.500018119812012
    6. '(self' → logprob: -16.375019073486328
    7. ')(' → logprob: -16.625019073486328
    8. '       ' → logprob: -16.750019073486328
    9. ',' → logprob: -16.875019073486328
    10. '):
' → logprob: -17.375019073486328

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000181372175575234
    2. ' ,' → logprob: -8.875181198120117
    3. 'self' → logprob: -10.125181198120117
    4. ',self' → logprob: -14.625181198120117
    5. '):' → logprob: -14.750181198120117
    6. ',
' → logprob: -15.625181198120117
    7. '   ' → logprob: -16.375181198120117
    8. '(self' → logprob: -16.500181198120117
    9. ' self' → logprob: -16.500181198120117
    10. '       ' → logprob: -16.625181198120117

Token 466: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.029221542179584503
    2. ' points' → logprob: -3.904221534729004
    3. 'self' → logprob: -4.779221534729004
    4. ')' → logprob: -9.154221534729004
    5. ' self' → logprob: -9.279221534729004
    6. '   ' → logprob: -11.529221534729004
    7. '       ' → logprob: -11.529221534729004
    8. 'Points' → logprob: -12.779221534729004
    9. '	points' → logprob: -12.779221534729004
    10. '_points' → logprob: -13.029221534729004

Token 467: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.676981345459353e-06
    2. '):' → logprob: -12.250005722045898
    3. ' :' → logprob: -15.125005722045898
    4. ')' → logprob: -15.250005722045898
    5. '=' → logprob: -15.625005722045898
    6. '_:' → logprob: -16.0000057220459
    7. '):
' → logprob: -16.2500057220459
    8. ',' → logprob: -16.7500057220459
    9. '```' → logprob: -17.0000057220459
    10. ' ):' → logprob: -18.3750057220459

Token 468: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0015381926205009222
    2. ' List' → logprob: -6.501538276672363
    3. ')' → logprob: -10.626538276672363
    4. '[List' → logprob: -12.376538276672363
    5. '       ' → logprob: -12.626538276672363
    6. '   ' → logprob: -13.376538276672363
    7. 'self' → logprob: -13.876538276672363
    8. 'list' → logprob: -14.501538276672363
    9. '           ' → logprob: -14.626538276672363
    10. '):' → logprob: -16.251537322998047

Token 469: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. 'Point' → logprob: -12.500003814697266
    3. '<Point' → logprob: -15.500003814697266
    4. '	Point' → logprob: -16.750003814697266
    5. '[
' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.250003814697266
    7. '(Point' → logprob: -17.500003814697266
    8. ']' → logprob: -18.000003814697266
    9. ')' → logprob: -18.000003814697266
    10. '```' → logprob: -18.125003814697266

Token 470: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -6.704273118884885e-07
    2. ' Point' → logprob: -14.750000953674316
    3. ')' → logprob: -16.625
    4. '	Point' → logprob: -16.875
    5. '<Point' → logprob: -17.375
    6. '_Point' → logprob: -19.375
    7. '.Point' → logprob: -19.5
    8. '_point' → logprob: -20.125
    9. '[' → logprob: -20.25
    10. '(Point' → logprob: -20.5

Token 471: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13297554850578308
    2. '):
' → logprob: -2.3829755783081055
    3. ']):' → logprob: -4.2579755783081055
    4. ')' → logprob: -4.7579755783081055
    5. ']):
' → logprob: -4.8829755783081055
    6. '       ' → logprob: -6.6329755783081055
    7. '   ' → logprob: -7.8829755783081055
    8. '):
' → logprob: -10.132975578308105
    9. '>):' → logprob: -10.132975578308105
    10. ')):' → logprob: -10.632975578308105

Token 472: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010616567305987701
    2. '   ' → logprob: -10.125105857849121
    3. 'self' → logprob: -10.375105857849121
    4. ' self' → logprob: -10.750105857849121
    5. ',' → logprob: -12.000105857849121
    6. ':' → logprob: -12.625105857849121
    7. '<|end|>' → logprob: -14.000105857849121
    8. '```' → logprob: -14.750105857849121
    9. '	' → logprob: -15.000105857849121
    10. '	   ' → logprob: -15.000105857849121

Token 473: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08485754579305649
    2. ' self' → logprob: -3.08485746383667
    3. '       ' → logprob: -3.33485746383667
    4. '   ' → logprob: -14.959857940673828
    5. '	self' → logprob: -15.959857940673828
    6. ' ' → logprob: -16.584857940673828
    7. 'super' → logprob: -18.084857940673828
    8. '(self' → logprob: -18.209857940673828
    9. '      ' → logprob: -18.459857940673828
    10. 'def' → logprob: -18.584857940673828

Token 474: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.0005819845828227699
    2. '.' → logprob: -7.625582218170166
    3. ' .' → logprob: -9.500581741333008
    4. '.p' → logprob: -11.625581741333008
    5. 'points' → logprob: -12.250581741333008
    6. '	points' → logprob: -13.875581741333008
    7. '.Point' → logprob: -14.125581741333008
    8. '.point' → logprob: -14.375581741333008
    9. '._' → logprob: -14.875581741333008
    10. ' points' → logprob: -14.875581741333008

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1271880567073822
    2. '=' → logprob: -2.127187967300415
    3. ':' → logprob: -9.127187728881836
    4. ')' → logprob: -9.252187728881836
    5. '   ' → logprob: -10.377187728881836
    6. ',' → logprob: -12.377187728881836
    7. '       ' → logprob: -12.627187728881836
    8. '.' → logprob: -12.752187728881836
    9. ' =
' → logprob: -13.252187728881836
    10. '=[]' → logprob: -13.377187728881836

Token 476: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00760698551312089
    2. ' points' → logprob: -4.8826069831848145
    3. '	points' → logprob: -15.132607460021973
    4. '(points' → logprob: -15.507607460021973
    5. '   ' → logprob: -15.632607460021973
    6. '       ' → logprob: -16.757606506347656
    7. '[' → logprob: -17.507606506347656
    8. 'list' → logprob: -17.507606506347656
    9. 'point' → logprob: -17.882606506347656
    10. '.points' → logprob: -18.132606506347656

Token 477: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2960696816444397
    2. '<|end|>' → logprob: -1.671069622039795
    3. '
' → logprob: -2.796069622039795
    4. '   ' → logprob: -5.546069622039795
    5. '<|end|>' → logprob: -6.671069622039795
    6. ',' → logprob: -6.796069622039795
    7. 'self' → logprob: -8.921070098876953
    8. 'def' → logprob: -9.046070098876953
    9. ')' → logprob: -9.296070098876953
    10. '        
' → logprob: -9.421070098876953

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026412950828671455
    2. '
' → logprob: -6.127641201019287
    3. '   ' → logprob: -8.627641677856445
    4. '<|end|>' → logprob: -9.127641677856445
    5. ',' → logprob: -9.377641677856445
    6. 'self' → logprob: -10.502641677856445
    7. '        
' → logprob: -10.877641677856445
    8. '           ' → logprob: -12.002641677856445
    9. ' self' → logprob: -12.127641677856445
    10. '        ' → logprob: -12.377641677856445

Token 479: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011121158488094807
    2. '       ' → logprob: -4.5111212730407715
    3. 'n' → logprob: -10.011120796203613
    4. ' self' → logprob: -10.886120796203613
    5. '   ' → logprob: -11.886120796203613
    6. 'def' → logprob: -13.136120796203613
    7. 'from' → logprob: -14.886120796203613
    8. '	self' → logprob: -15.261120796203613
    9. '#' → logprob: -17.38612174987793
    10. ' ' → logprob: -17.63612174987793

Token 480: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.12327069789171219
    2. '.' → logprob: -3.1232707500457764
    3. '.total' → logprob: -3.7482707500457764
    4. 'n' → logprob: -4.373270511627197
    5. ' .' → logprob: -4.748270511627197
    6. '.num' → logprob: -5.123270511627197
    7. ' n' → logprob: -5.373270511627197
    8. '.count' → logprob: -5.623270511627197
    9. '.points' → logprob: -5.748270511627197
    10. ' =' → logprob: -5.873270511627197

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47420093417167664
    2. ' =' → logprob: -0.974200963973999
    3. '   ' → logprob: -10.099201202392578
    4. '=len' → logprob: -10.474201202392578
    5. '       ' → logprob: -11.224201202392578
    6. '=int' → logprob: -11.349201202392578
    7. '    ' → logprob: -12.224201202392578
    8. ')' → logprob: -12.349201202392578
    9. '_' → logprob: -12.849201202392578
    10. ',' → logprob: -12.849201202392578

Token 482: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.061967797577381134
    2. ' len' → logprob: -2.8119678497314453
    3. '(len' → logprob: -15.561967849731445
    4. '   ' → logprob: -19.311967849731445
    5. '[len' → logprob: -19.311967849731445
    6. '=len' → logprob: -19.561967849731445
    7. '	len' → logprob: -19.936967849731445
    8. '       ' → logprob: -20.686967849731445
    9. '0' → logprob: -21.061967849731445
    10. ' ' → logprob: -21.311967849731445

Token 483: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -8.2994620242971e-06
    2. '(self' → logprob: -11.750008583068848
    3. '(' → logprob: -15.000008583068848
    4. 'points' → logprob: -16.50000762939453
    5. ' points' → logprob: -19.12500762939453
    6. '(point' → logprob: -20.25000762939453
    7. '(
' → logprob: -20.25000762939453
    8. '	points' → logprob: -20.37500762939453
    9. '(parts' → logprob: -22.37500762939453
    10. 'self' → logprob: -22.37500762939453

Token 484: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6312321753939614e-05
    2. ')
' → logprob: -10.750036239624023
    3. ' )' → logprob: -11.750036239624023
    4. '       ' → logprob: -12.000036239624023
    5. '<|end|>' → logprob: -15.000036239624023
    6. '),' → logprob: -16.250036239624023
    7. '   ' → logprob: -16.375036239624023
    8. '))' → logprob: -16.625036239624023
    9. ')return' → logprob: -17.250036239624023
    10. ')

' → logprob: -17.500036239624023

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07619240134954453
    2. '   ' → logprob: -2.7011923789978027
    3. '
' → logprob: -5.326192378997803
    4. '<|end|>' → logprob: -7.326192378997803
    5. 'def' → logprob: -8.076192855834961
    6. ',' → logprob: -9.326192855834961
    7. '    
' → logprob: -9.576192855834961
    8. '        
' → logprob: -9.701192855834961
    9. 'self' → logprob: -9.826192855834961
    10. '```' → logprob: -10.451192855834961

Token 486: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011108300648629665
    2. '       ' → logprob: -4.6361083984375
    3. 'def' → logprob: -7.1361083984375
    4. 'from' → logprob: -7.8861083984375
    5. '   ' → logprob: -8.8861083984375
    6. ' self' → logprob: -10.5111083984375
    7. '#' → logprob: -12.1361083984375
    8. '
' → logprob: -12.5111083984375
    9. 'import' → logprob: -14.0111083984375
    10. '        
' → logprob: -14.0111083984375

Token 487: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.6859695315361023
    2. '.dp' → logprob: -1.685969591140747
    3. '.best' → logprob: -3.310969591140747
    4. '.count' → logprob: -3.310969591140747
    5. '.result' → logprob: -3.435969591140747
    6. '.parallel' → logprob: -3.810969591140747
    7. '.cache' → logprob: -3.810969591140747
    8. '.p' → logprob: -3.935969591140747
    9. '.direction' → logprob: -3.935969591140747
    10. '.lines' → logprob: -4.060969352722168

Token 488: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523175835609436
    2. '=' → logprob: -0.898175835609436
    3. ':' → logprob: -10.148176193237305
    4. '={}' → logprob: -12.148176193237305
    5. '   ' → logprob: -13.273176193237305
    6. '_' → logprob: -13.523176193237305
    7. ' ' → logprob: -14.023176193237305
    8. ',' → logprob: -14.273176193237305
    9. 'ation' → logprob: -14.523176193237305
    10. 's' → logprob: -15.273176193237305

Token 489: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0013768990756943822
    2. 'default' → logprob: -6.751377105712891
    3. 'dict' → logprob: -8.50137710571289
    4. '{' → logprob: -12.75137710571289
    5. '{}
' → logprob: -14.87637710571289
    6. '{}

' → logprob: -16.12637710571289
    7. '{})' → logprob: -17.37637710571289
    8. ' {}' → logprob: -17.62637710571289
    9. '{},' → logprob: -18.12637710571289
    10. ' dict' → logprob: -18.50137710571289

Token 490: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00190293591003865
    2. 'def' → logprob: -7.376903057098389
    3. '    
' → logprob: -7.501903057098389
    4. '
' → logprob: -7.751903057098389
    5. '<|end|>' → logprob: -8.87690258026123
    6. ' def' → logprob: -10.00190258026123
    7. ',' → logprob: -10.12690258026123
    8. '<|end|>' → logprob: -11.12690258026123
    9. ')' → logprob: -11.75190258026123
    10. '```' → logprob: -11.87690258026123

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.576938271522522
    2. 'def' → logprob: -0.826938271522522
    3. ' def' → logprob: -7.076938152313232
    4. '
' → logprob: -8.82693862915039
    5. '    
' → logprob: -12.45193862915039
    6. ' ' → logprob: -13.70193862915039
    7. '	def' → logprob: -13.70193862915039
    8. '  ' → logprob: -14.45193862915039
    9. '       ' → logprob: -15.95193862915039
    10. '        
' → logprob: -16.32693862915039

Token 492: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.9292415749514475e-05
    2. ' def' → logprob: -10.625039100646973
    3. '   ' → logprob: -11.125039100646973
    4. '
' → logprob: -16.25004005432129
    5. 'from' → logprob: -16.87504005432129
    6. '	def' → logprob: -17.75004005432129
    7. ' ' → logprob: -19.25004005432129
    8. '    
' → logprob: -19.25004005432129
    9. 'Def' → logprob: -19.50004005432129
    10. '  ' → logprob: -20.25004005432129

Token 493: ' max' (ID: 2999)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8035704493522644
    2. ' count' → logprob: -1.3035705089569092
    3. 'solve' → logprob: -2.053570508956909
    4. ' solve' → logprob: -2.928570508956909
    5. 'def' → logprob: -3.303570508956909
    6. 'max' → logprob: -3.553570508956909
    7. ' max' → logprob: -4.42857027053833
    8. 'dfs' → logprob: -5.30357027053833
    9. ' find' → logprob: -5.42857027053833
    10. ' def' → logprob: -5.55357027053833

Token 494: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.19000989198684692
    2. '_pairs' → logprob: -1.8150098323822021
    3. '_par' → logprob: -5.690010070800781
    4. 'parallel' → logprob: -6.315010070800781
    5. '_count' → logprob: -7.065010070800781
    6. '(self' → logprob: -7.190010070800781
    7. 'pairs' → logprob: -7.190010070800781
    8. '_pair' → logprob: -7.315010070800781
    9. '_matching' → logprob: -7.565010070800781
    10. '_mat' → logprob: -8.440010070800781

Token 495: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.10788670182228088
    2. '_lines' → logprob: -2.357886791229248
    3. 'pairs' → logprob: -5.482886791229248
    4. '_line' → logprob: -6.482886791229248
    5. '_pair' → logprob: -7.482886791229248
    6. '_count' → logprob: -7.857886791229248
    7. '(self' → logprob: -8.10788631439209
    8. '_segments' → logprob: -8.23288631439209
    9. 'lines' → logprob: -8.73288631439209
    10. '_vectors' → logprob: -9.60788631439209

Token 496: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00027611342375166714
    2. '(' → logprob: -8.250276565551758
    3. ' (' → logprob: -11.250276565551758
    4. '   ' → logprob: -13.500276565551758
    5. 'self' → logprob: -15.875276565551758
    6. '(s' → logprob: -16.125276565551758
    7. '(
' → logprob: -16.375276565551758
    8. ' ' → logprob: -16.625276565551758
    9. '       ' → logprob: -17.000276565551758
    10. ' self' → logprob: -18.125276565551758

Token 497: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1981680542230606
    2. 'self' → logprob: -2.1981680393218994
    3. '):' → logprob: -2.9481680393218994
    4. '(self' → logprob: -4.9481682777404785
    5. '   ' → logprob: -5.6981682777404785
    6. '):
' → logprob: -5.9481682777404785
    7. ')' → logprob: -6.6981682777404785
    8. ')(' → logprob: -7.1981682777404785
    9. '       ' → logprob: -7.8231682777404785
    10. ' ,' → logprob: -8.19816780090332

Token 498: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006317823426797986
    2. '(' → logprob: -8.250631332397461
    3. ' (' → logprob: -8.250631332397461
    4. ':' → logprob: -9.500631332397461
    5. 'self' → logprob: -11.000631332397461
    6. '   ' → logprob: -12.375631332397461
    7. '():' → logprob: -12.625631332397461
    8. ' ->' → logprob: -12.750631332397461
    9. '       ' → logprob: -13.000631332397461
    10. '(s' → logprob: -13.250631332397461

Token 499: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004647995810955763
    2. ' int' → logprob: -5.379648208618164
    3. '(int' → logprob: -10.879648208618164
    4. '   ' → logprob: -12.879648208618164
    5. 'List' → logprob: -13.254648208618164
    6. 'None' → logprob: -13.629648208618164
    7. '[int' → logprob: -13.629648208618164
    8. 'Tuple' → logprob: -14.254648208618164
    9. ' ' → logprob: -15.254648208618164
    10. 'Optional' → logprob: -15.629648208618164

Token 500: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25367164611816406
    2. ':' → logprob: -2.003671646118164
    3. '       ' → logprob: -2.628671646118164
    4. ':
' → logprob: -4.753671646118164
    5. '(' → logprob: -5.253671646118164
    6. '   ' → logprob: -6.003671646118164
    7. '(
' → logprob: -7.503671646118164
    8. '():' → logprob: -10.378671646118164
    9. '):' → logprob: -10.753671646118164
    10. '):
' → logprob: -10.878671646118164

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0921942703134846e-05
    2. '   ' → logprob: -12.00001049041748
    3. '```' → logprob: -12.75001049041748
    4. '        
' → logprob: -13.87501049041748
    5. 'def' → logprob: -15.37501049041748
    6. '           ' → logprob: -16.000011444091797
    7. '      ' → logprob: -16.500011444091797
    8. '    
' → logprob: -16.875011444091797
    9. '...' → logprob: -16.875011444091797
    10. '    ' → logprob: -17.000011444091797

Token 502: ' initial' (ID: 4871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013129406608641148
    2. 'def' → logprob: -5.138129234313965
    3. 'return' → logprob: -5.263129234313965
    4. ' return' → logprob: -6.388129234313965
    5. ' def' → logprob: -8.138129234313965
    6. '   ' → logprob: -11.013129234313965
    7. '
' → logprob: -13.388129234313965
    8. '      ' → logprob: -14.013129234313965
    9. 'from' → logprob: -14.638129234313965
    10. '           ' → logprob: -14.638129234313965

Token 503: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.08112862706184387
    2. 'State' → logprob: -3.0811285972595215
    3. 'state' → logprob: -4.4561285972595215
    4. '(P' → logprob: -5.5811285972595215
    5. '_pair' → logprob: -5.7061285972595215
    6. 'Pair' → logprob: -5.8311285972595215
    7. '(' → logprob: -5.9561285972595215
    8. '()' → logprob: -6.3311285972595215
    9. ' =' → logprob: -6.4561285972595215
    10. '_' → logprob: -6.8311285972595215

Token 504: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048408225178719
    2. '=' → logprob: -4.511048316955566
    3. ':' → logprob: -15.886048316955566
    4. ' ' → logprob: -16.011049270629883
    5. ' =
' → logprob: -16.136049270629883
    6. '   ' → logprob: -16.511049270629883
    7. ')' → logprob: -17.386049270629883
    8. '       ' → logprob: -17.386049270629883
    9. '=
' → logprob: -17.636049270629883
    10. ',' → logprob: -17.636049270629883

Token 505: ' Pair' (ID: 41250)
  Prédit: 'Pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pair' → logprob: -0.001502598519437015
    2. ' Pair' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.001502990722656
    4. '       ' → logprob: -16.001502990722656
    5. '<Pair' → logprob: -17.376502990722656
    6. '           ' → logprob: -17.751502990722656
    7. ' ' → logprob: -18.751502990722656
    8. '0' → logprob: -18.876502990722656
    9. '_pair' → logprob: -19.001502990722656
    10. 'Pairs' → logprob: -19.376502990722656

Token 506: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.0280383548888494e-06
    2. 'ring' → logprob: -14.375000953674316
    3. 'ning' → logprob: -15.875000953674316
    4. 'ng' → logprob: -16.000001907348633
    5. 'inging' → logprob: -16.750001907348633
    6. 'Pair' → logprob: -17.000001907348633
    7. '-ing' → logprob: -19.125001907348633
    8. '[' → logprob: -19.250001907348633
    9. 'ining' → logprob: -19.375001907348633
    10. '{' → logprob: -19.750001907348633

Token 507: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -1.5048530030981055e-06
    2. 'state' → logprob: -13.625001907348633
    3. '_state' → logprob: -15.500001907348633
    4. 'States' → logprob: -18.000001907348633
    5. '_STATE' → logprob: -18.625001907348633
    6. '[' → logprob: -19.625001907348633
    7. '	State' → logprob: -19.750001907348633
    8. '_State' → logprob: -19.750001907348633
    9. '...' → logprob: -20.625001907348633
    10. ' state' → logprob: -20.750001907348633

Token 508: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06256884336471558
    2. '(' → logprob: -2.8125689029693604
    3. '()
' → logprob: -7.437568664550781
    4. '0' → logprob: -11.562568664550781
    5. '()
' → logprob: -14.187568664550781
    6. '()

' → logprob: -14.437568664550781
    7. '()`' → logprob: -14.562568664550781
    8. ' ()' → logprob: -15.187568664550781
    9. '())' → logprob: -15.187568664550781
    10. '().' → logprob: -15.937568664550781

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028861870523542166
    2. 'return' → logprob: -5.8778862953186035
    3. ' return' → logprob: -9.502885818481445
    4. '   ' → logprob: -12.252885818481445
    5. '	' → logprob: -14.627885818481445
    6. '        
' → logprob: -14.627885818481445
    7. '	return' → logprob: -15.127885818481445
    8. '```' → logprob: -15.377885818481445
    9. '      ' → logprob: -16.127885818481445
    10. '
' → logprob: -16.252885818481445

Token 510: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011059019714593887
    2. '       ' → logprob: -4.511058807373047
    3. 'def' → logprob: -11.761058807373047
    4. ' return' → logprob: -13.261058807373047
    5. 'result' → logprob: -13.636058807373047
    6. '   ' → logprob: -14.761058807373047
    7. 'self' → logprob: -17.386058807373047
    8. '	return' → logprob: -17.511058807373047
    9. 'import' → logprob: -17.636058807373047
    10. 'max' → logprob: -17.761058807373047

Token 511: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006726737599819899
    2. ' self' → logprob: -5.0067267417907715
    3. '       ' → logprob: -11.756726264953613
    4. '
' → logprob: -13.131726264953613
    5. '(self' → logprob: -14.256726264953613
    6. '0' → logprob: -14.381726264953613
    7. '=self' → logprob: -16.38172721862793
    8. '_self' → logprob: -16.63172721862793
    9. '1' → logprob: -16.88172721862793
    10. '	self' → logprob: -17.25672721862793

Token 512: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.006724960170686245
    2. '.d' → logprob: -5.881724834442139
    3. '.solve' → logprob: -6.006724834442139
    4. '.search' → logprob: -7.256724834442139
    5. '.max' → logprob: -8.506725311279297
    6. '.re' → logprob: -8.881725311279297
    7. '.dp' → logprob: -9.006725311279297
    8. '.rec' → logprob: -9.006725311279297
    9. '.back' → logprob: -9.506725311279297
    10. '.helper' → logprob: -10.506725311279297

Token 513: 're' (ID: 264)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8792107701301575
    2. 'search' → logprob: -1.3792107105255127
    3. 'dfs' → logprob: -1.3792107105255127
    4. 'solve' → logprob: -2.8792107105255127
    5. 'dp' → logprob: -4.879210948944092
    6. 're' → logprob: -5.129210948944092
    7. 'rec' → logprob: -5.254210948944092
    8. 'back' → logprob: -5.754210948944092
    9. 'count' → logprob: -6.379210948944092
    10. 'maximize' → logprob: -7.504210948944092

Token 514: 'curse' (ID: 134738)
  Prédit: 'curse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curse' → logprob: -0.10342492163181305
    2. 'c' → logprob: -2.3534250259399414
    3. 'cur' → logprob: -5.853425025939941
    4. 'solve' → logprob: -8.103425025939941
    5. '_c' → logprob: -11.228425025939941
    6. 'curr' → logprob: -11.603425025939941
    7. 'cursor' → logprob: -11.728425025939941
    8. 'max' → logprob: -12.978425025939941
    9. '_' → logprob: -13.228425025939941
    10. 'curve' → logprob: -13.978425025939941

Token 515: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -0.0037230034358799458
    2. '(' → logprob: -5.62872314453125
    3. 'initial' → logprob: -10.12872314453125
    4. '(max' → logprob: -10.50372314453125
    5. '(self' → logprob: -11.75372314453125
    6. ' (' → logprob: -11.87872314453125
    7. 'max' → logprob: -12.00372314453125
    8. '(in' → logprob: -12.37872314453125
    9. '(None' → logprob: -12.37872314453125
    10. '()' → logprob: -12.75372314453125

Token 516: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0036035135854035616
    2. 'state' → logprob: -5.628603458404541
    3. 'State' → logprob: -13.2536039352417
    4. '_' → logprob: -14.7536039352417
    5. 'initial' → logprob: -15.0036039352417
    6. ' state' → logprob: -15.3786039352417
    7. 'itial' → logprob: -15.7536039352417
    8. 't' → logprob: -16.128602981567383
    9. ')' → logprob: -16.128602981567383
    10. 's' → logprob: -16.503602981567383

Token 517: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4743029475212097
    2. ',' → logprob: -0.9743029475212097
    3. ' )' → logprob: -8.849303245544434
    4. '   ' → logprob: -10.099303245544434
    5. '       ' → logprob: -10.849303245544434
    6. ' ,' → logprob: -11.349303245544434
    7. ',)' → logprob: -12.724303245544434
    8. ' ' → logprob: -13.474303245544434
    9. ')
' → logprob: -13.724303245544434
    10. '    ' → logprob: -13.849303245544434

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000675500778015703
    2. '```' → logprob: -8.000675201416016
    3. '    
' → logprob: -8.625675201416016
    4. 'def' → logprob: -9.500675201416016
    5. '
' → logprob: -10.625675201416016
    6. '(' → logprob: -11.000675201416016
    7. ')' → logprob: -11.375675201416016
    8. '       ' → logprob: -12.000675201416016
    9. ':' → logprob: -12.125675201416016
    10. ' def' → logprob: -13.250675201416016

Token 519: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009044329635798931
    2. '   ' → logprob: -4.759044170379639
    3. ' def' → logprob: -7.759044170379639
    4. '
' → logprob: -13.509044647216797
    5. '	def' → logprob: -14.009044647216797
    6. '    
' → logprob: -14.634044647216797
    7. '_def' → logprob: -16.759044647216797
    8. ' ' → logprob: -17.384044647216797
    9. '```' → logprob: -18.009044647216797
    10. '  ' → logprob: -18.509044647216797

Token 520: ' _' (ID: 1175)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.00011188744247192517
    2. '_r' → logprob: -9.87511157989502
    3. '_recursive' → logprob: -11.00011157989502
    4. ' _' → logprob: -11.25011157989502
    5. 'def' → logprob: -11.25011157989502
    6. '_rec' → logprob: -12.75011157989502
    7. '_find' → logprob: -12.87511157989502
    8. '_def' → logprob: -13.75011157989502
    9. '_pair' → logprob: -13.87511157989502
    10. '_helper' → logprob: -14.00011157989502

Token 521: 'count' (ID: 5420)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.2664456789934775e-06
    2. 'rec' → logprob: -13.875000953674316
    3. 'def' → logprob: -16.000001907348633
    4. '_re' → logprob: -16.625001907348633
    5. 'recursive' → logprob: -17.500001907348633
    6. 'get' → logprob: -18.125001907348633
    7. '
' → logprob: -18.500001907348633
    8. 'r' → logprob: -18.875001907348633
    9. '```' → logprob: -18.875001907348633
    10. 'repr' → logprob: -19.375001907348633

Token 522: '_parallel' (ID: 152364)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.5791829228401184
    2. '_parallel' → logprob: -0.9541829228401184
    3. '_taken' → logprob: -3.0791828632354736
    4. 'parallel' → logprob: -6.579183101654053
    5. '_' → logprob: -6.704183101654053
    6. 'pairs' → logprob: -6.704183101654053
    7. '_max' → logprob: -6.829183101654053
    8. '_remaining' → logprob: -7.079183101654053
    9. 'max' → logprob: -7.579183101654053
    10. 'taken' → logprob: -7.954183101654053

Token 523: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.013594144023954868
    2. '_lines' → logprob: -4.638594150543213
    3. '(self' → logprob: -6.138594150543213
    4. '(' → logprob: -7.138594150543213
    5. '_vectors' → logprob: -8.388593673706055
    6. 'pairs' → logprob: -8.638593673706055
    7. '_' → logprob: -9.388593673706055
    8. 's' → logprob: -9.763593673706055
    9. 'self' → logprob: -10.013593673706055
    10. '_direction' → logprob: -10.263593673706055

Token 524: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005246918182820082
    2. '(' → logprob: -5.255247116088867
    3. 'self' → logprob: -11.880247116088867
    4. ' (' → logprob: -12.630247116088867
    5. '(
' → logprob: -13.505247116088867
    6. '   ' → logprob: -14.380247116088867
    7. '       ' → logprob: -14.880247116088867
    8. '()' → logprob: -15.380247116088867
    9. '(state' → logprob: -15.630247116088867
    10. '(s' → logprob: -16.130247116088867

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1059456467628479
    2. 'self' → logprob: -2.355945587158203
    3. '(self' → logprob: -5.480945587158203
    4. '   ' → logprob: -7.980945587158203
    5. ' ,' → logprob: -8.230945587158203
    6. ')' → logprob: -8.230945587158203
    7. '       ' → logprob: -8.605945587158203
    8. ',self' → logprob: -9.105945587158203
    9. ' self' → logprob: -9.355945587158203
    10. ')(' → logprob: -9.855945587158203

Token 526: ' directions' (ID: 24921)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.035283543169498444
    2. ' state' → logprob: -4.03528356552124
    3. 'taken' → logprob: -5.16028356552124
    4. 'direction' → logprob: -5.91028356552124
    5. 'self' → logprob: -6.03528356552124
    6. 'current' → logprob: -6.53528356552124
    7. 'pair' → logprob: -6.78528356552124
    8. 'pairs' → logprob: -6.91028356552124
    9. 'used' → logprob: -7.41028356552124
    10. 'paired' → logprob: -8.035283088684082

Token 527: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9524333477020264
    2. ',' → logprob: -1.0774333477020264
    3. ':' → logprob: -1.7024333477020264
    4. 'self' → logprob: -3.5774333477020264
    5. ')' → logprob: -3.9524333477020264
    6. '):
' → logprob: -4.0774335861206055
    7. '   ' → logprob: -4.3274335861206055
    8. '       ' → logprob: -4.5774335861206055
    9. ' ):' → logprob: -6.9524335861206055
    10. ' ,' → logprob: -7.0774335861206055

Token 528: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.053548023104667664
    2. 'default' → logprob: -3.0535480976104736
    3. 'dict' → logprob: -5.8035478591918945
    4. ')' → logprob: -6.6785478591918945
    5. 'list' → logprob: -7.9285478591918945
    6. 'Default' → logprob: -9.178547859191895
    7. 'Tuple' → logprob: -9.928547859191895
    8. 'Dict' → logprob: -10.553547859191895
    9. 'set' → logprob: -10.803547859191895
    10. ' List' → logprob: -11.053547859191895

Token 529: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13021720945835114
    2. '[int' → logprob: -2.1302173137664795
    3. '])' → logprob: -7.0052170753479
    4. '):
' → logprob: -7.1302170753479
    5. ')' → logprob: -7.5052170753479
    6. '[List' → logprob: -8.505217552185059
    7. ']):
' → logprob: -8.755217552185059
    8. '):' → logprob: -8.880217552185059
    9. '   ' → logprob: -9.255217552185059
    10. 'int' → logprob: -9.380217552185059

Token 530: 'Direction' (ID: 14084)
  Prédit: 'Direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.00010533124441280961
    2. 'int' → logprob: -9.875104904174805
    3. 'Tuple' → logprob: -10.375104904174805
    4. 'bool' → logprob: -11.750104904174805
    5. 'Point' → logprob: -11.750104904174805
    6. 'Directional' → logprob: -13.250104904174805
    7. 'List' → logprob: -13.375104904174805
    8. ' Direction' → logprob: -13.750104904174805
    9. '[' → logprob: -14.125104904174805
    10. 'direction' → logprob: -14.875104904174805

Token 531: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06489887088537216
    2. '])' → logprob: -2.81489896774292
    3. '):' → logprob: -6.18989896774292
    4. '):
' → logprob: -8.314898490905762
    5. ',' → logprob: -8.439898490905762
    6. '   ' → logprob: -8.689898490905762
    7. ' )' → logprob: -9.689898490905762
    8. ']):' → logprob: -9.814898490905762
    9. ''])' → logprob: -10.814898490905762
    10. '))' → logprob: -10.814898490905762

Token 532: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008964705280959606
    2. '       ' → logprob: -6.133964538574219
    3. ' ->' → logprob: -6.383964538574219
    4. ':
' → logprob: -6.508964538574219
    5. '->' → logprob: -6.758964538574219
    6. ')' → logprob: -7.133964538574219
    7. ',' → logprob: -7.758964538574219
    8. ')->' → logprob: -7.883964538574219
    9. '):' → logprob: -8.008964538574219
    10. '   ' → logprob: -8.258964538574219

Token 533: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2253924459218979
    2. 'default' → logprob: -2.3503923416137695
    3. 'len' → logprob: -2.6003923416137695
    4. 'max' → logprob: -4.6003923416137695
    5. 'sum' → logprob: -5.3503923416137695
    6. ' int' → logprob: -5.3503923416137695
    7. '0' → logprob: -5.8503923416137695
    8. 'dire' → logprob: -6.2253923416137695
    9. '(len' → logprob: -6.4753923416137695
    10. ' len' → logprob: -6.4753923416137695

Token 534: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0074846455827355385
    2. ':
' → logprob: -5.507484436035156
    3. '       ' → logprob: -5.757484436035156
    4. '   ' → logprob: -9.632484436035156
    5. ',' → logprob: -10.132484436035156
    6. '):' → logprob: -10.132484436035156
    7. '[' → logprob: -10.632484436035156
    8. '():' → logprob: -10.632484436035156
    9. ':return' → logprob: -10.757484436035156
    10. ':def' → logprob: -12.257484436035156

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.350386295001954e-05
    2. 'count' → logprob: -10.500073432922363
    3. '   ' → logprob: -11.250073432922363
    4. 'd' → logprob: -11.625073432922363
    5. 'counter' → logprob: -12.250073432922363
    6. 'counts' → logprob: -12.625073432922363
    7. 'freq' → logprob: -12.875073432922363
    8. 'dp' → logprob: -13.625073432922363
    9. 'return' → logprob: -13.625073432922363
    10. '```' → logprob: -13.750073432922363

Token 536: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46730169653892517
    2. 'count' → logprob: -1.2173017263412476
    3. 'counts' → logprob: -3.092301607131958
    4. 'counter' → logprob: -3.592301607131958
    5. 'direction' → logprob: -6.842301845550537
    6. 'lines' → logprob: -7.217301845550537
    7. 'return' → logprob: -7.467301845550537
    8. '   ' → logprob: -7.842301845550537
    9. 'freq' → logprob: -7.967301845550537
    10. 'from' → logprob: -8.092301368713379

Token 537: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1566414088010788
    2. '       ' → logprob: -2.2816414833068848
    3. 'counter' → logprob: -4.031641483306885
    4. 'counts' → logprob: -4.031641483306885
    5. 'cnt' → logprob: -6.281641483306885
    6. 'return' → logprob: -6.531641483306885
    7. 'from' → logprob: -6.781641483306885
    8. 'default' → logprob: -7.281641483306885
    9. 'freq' → logprob: -7.281641483306885
    10. 'lines' → logprob: -8.031641006469727

Token 538: ' Given' (ID: 29844)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8700960278511047
    2. '#' → logprob: -0.9950960278511047
    3. 'c' → logprob: -2.74509596824646
    4. 'count' → logprob: -2.99509596824646
    5. 'n' → logprob: -3.49509596824646
    6. 'd' → logprob: -3.99509596824646
    7. 'counts' → logprob: -4.495096206665039
    8. ')' → logprob: -4.620096206665039
    9. 'counter' → logprob: -5.120096206665039
    10. 'max' → logprob: -5.620096206665039

Token 539: ' a' (ID: 261)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.028766563162207603
    2. 'a' → logprob: -4.528766632080078
    3. 'the' → logprob: -4.903766632080078
    4. ' directions' → logprob: -4.903766632080078
    5. '       ' → logprob: -7.028766632080078
    6. 'self' → logprob: -7.653766632080078
    7. 'len' → logprob: -7.778766632080078
    8. ' the' → logprob: -8.278766632080078
    9. 'direction' → logprob: -8.903766632080078
    10. ' a' → logprob: -9.028766632080078

Token 540: ' list' (ID: 1562)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.06839995086193085
    2. 'default' → logprob: -3.6933999061584473
    3. 'list' → logprob: -3.8183999061584473
    4. 'direction' → logprob: -4.068399906158447
    5. 'List' → logprob: -7.318399906158447
    6. 'dict' → logprob: -7.943399906158447
    7. 'dictionary' → logprob: -8.068400382995605
    8. 'def' → logprob: -8.568400382995605
    9. 'mapping' → logprob: -8.943400382995605
    10. 'Counter' → logprob: -8.943400382995605

Token 541: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.18282030522823334
    2. ':' → logprob: -2.9328203201293945
    3. '   ' → logprob: -3.5578203201293945
    4. '[' → logprob: -3.8078203201293945
    5. ',' → logprob: -4.0578203201293945
    6. '       ' → logprob: -4.1828203201293945
    7. 'of' → logprob: -4.3078203201293945
    8. '=' → logprob: -4.9328203201293945
    9. '.' → logprob: -6.0578203201293945
    10. ' =' → logprob: -6.3078203201293945

Token 542: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.005004732869565487
    2. 'Direction' → logprob: -5.3800048828125
    3. 'Directions' → logprob: -8.7550048828125
    4. ' directions' → logprob: -9.1300048828125
    5. 'direction' → logprob: -9.2550048828125
    6. 'pairs' → logprob: -12.2550048828125
    7. 'dirs' → logprob: -12.5050048828125
    8. '```' → logprob: -13.1300048828125
    9. 'vectors' → logprob: -13.1300048828125
    10. 'Directional' → logprob: -13.7550048828125

Token 543: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011554784141480923
    2. ':' → logprob: -5.136554718017578
    3. '   ' → logprob: -5.886554718017578
    4. '       ' → logprob: -6.886554718017578
    5. ',
' → logprob: -7.261554718017578
    6. ' ,' → logprob: -8.261554718017578
    7. ':
' → logprob: -8.386554718017578
    8. ' that' → logprob: -8.761554718017578
    9. 'from' → logprob: -9.511554718017578
    10. ' for' → logprob: -10.136554718017578

Token 544: 'lines' (ID: 10105)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.8029018044471741
    2. 'dire' → logprob: -1.6779017448425293
    3. ' directions' → logprob: -1.9279017448425293
    4. '),' → logprob: -2.1779017448425293
    5. ')' → logprob: -2.8029017448425293
    6. 'List' → logprob: -4.677901744842529
    7. '):
' → logprob: -4.927901744842529
    8. 'self' → logprob: -5.302901744842529
    9. 'Directions' → logprob: -5.302901744842529
    10. 'def' → logprob: -5.552901744842529

Token 545: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.016686635091900826
    2. ',' → logprob: -5.14168643951416
    3. '   ' → logprob: -5.76668643951416
    4. ')' → logprob: -6.14168643951416
    5. ' that' → logprob: -6.51668643951416
    6. ' forming' → logprob: -7.39168643951416
    7. 'that' → logprob: -7.39168643951416
    8. 's' → logprob: -7.51668643951416
    9. ' ),' → logprob: -7.76668643951416
    10. '):
' → logprob: -8.14168643951416

Token 546: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5526349544525146
    2. 'count' → logprob: -1.6776349544525146
    3. 'counter' → logprob: -1.8026349544525146
    4. 'counts' → logprob: -2.8026349544525146
    5. 'from' → logprob: -5.177635192871094
    6. 'freq' → logprob: -5.302635192871094
    7. ' counter' → logprob: -7.927635192871094
    8. 'cnt' → logprob: -8.177635192871094
    9. 'def' → logprob: -8.427635192871094
    10. 'lines' → logprob: -8.427635192871094

Token 547: ' how' (ID: 1495)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4571339190006256
    2. 'max' → logprob: -2.2071340084075928
    3. 'the' → logprob: -2.3321340084075928
    4. '   ' → logprob: -3.2071340084075928
    5. 'parallel' → logprob: -3.2071340084075928
    6. ' the' → logprob: -3.8321340084075928
    7. 'pairs' → logprob: -4.082133769989014
    8. '(' → logprob: -5.332133769989014
    9. ' parallel' → logprob: -5.332133769989014
    10. '0' → logprob: -5.832133769989014

Token 548: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.10060398280620575
    2. ' many' → logprob: -2.3506040573120117
    3. '       ' → logprob: -8.600604057312012
    4. '   ' → logprob: -8.725604057312012
    5. 'Many' → logprob: -10.975604057312012
    6. '        
' → logprob: -11.600604057312012
    7. 'return' → logprob: -12.100604057312012
    8. 'often' → logprob: -12.850604057312012
    9. '_many' → logprob: -13.100604057312012
    10. 's' → logprob: -13.225604057312012

Token 549: ' distinct' (ID: 16913)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -1.401965618133545
    2. 'dire' → logprob: -1.651965618133545
    3. ' pairs' → logprob: -2.276965618133545
    4. 'are' → logprob: -2.401965618133545
    5. ' are' → logprob: -2.526965618133545
    6. 'lines' → logprob: -2.651965618133545
    7. ' lines' → logprob: -2.901965618133545
    8. 'parallel' → logprob: -3.651965618133545
    9. '   ' → logprob: -3.776965618133545
    10. ' directions' → logprob: -3.776965618133545

Token 550: ' pairs' (ID: 24702)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -1.595760703086853
    2. 'lines' → logprob: -1.720760703086853
    3. 'pairs' → logprob: -1.845760703086853
    4. 'dire' → logprob: -1.970760703086853
    5. ' lines' → logprob: -2.2207608222961426
    6. ' directions' → logprob: -2.5957608222961426
    7. ' pairs' → logprob: -2.8457608222961426
    8. ' parallel' → logprob: -3.0957608222961426
    9. '        
' → logprob: -4.970760822296143
    10. '
' → logprob: -5.220760822296143

Token 551: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.0653997659683228
    2. ' are' → logprob: -1.1903997659683228
    3. '<|end|>' → logprob: -2.315399646759033
    4. ' can' → logprob: -2.690399646759033
    5. ' parallel' → logprob: -3.690399646759033
    6. '(' → logprob: -3.690399646759033
    7. '(lines' → logprob: -3.940399646759033
    8. ' lines' → logprob: -4.190399646759033
    9. ' that' → logprob: -4.315399646759033
    10. '(
' → logprob: -4.440399646759033

Token 552: ' lines' (ID: 8698)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.28977322578430176
    2. ' directions' → logprob: -1.9147732257843018
    3. 'lines' → logprob: -3.1647732257843018
    4. 'parallel' → logprob: -3.5397732257843018
    5. ' lines' → logprob: -4.039772987365723
    6. ' parallel' → logprob: -4.789772987365723
    7. 'points' → logprob: -5.914772987365723
    8. 'direction' → logprob: -6.414772987365723
    9. 'd' → logprob: -7.539772987365723
    10. 'Directions' → logprob: -7.789772987365723

Token 553: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.30480220913887024
    2. '   ' → logprob: -2.679802179336548
    3. 'are' → logprob: -2.804802179336548
    4. ' have' → logprob: -3.304802179336548
    5. ' that' → logprob: -3.804802179336548
    6. ' share' → logprob: -3.929802179336548
    7. ' lie' → logprob: -4.179802417755127
    8. ' exist' → logprob: -5.054802417755127
    9. '       ' → logprob: -5.304802417755127
    10. ' form' → logprob: -5.429802417755127

Token 554: ' parallel' (ID: 26697)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.2038203328847885
    2. ' parallel' → logprob: -1.9538203477859497
    3. '   ' → logprob: -3.32882022857666
    4. '       ' → logprob: -5.20382022857666
    5. '```' → logprob: -7.82882022857666
    6. '           ' → logprob: -7.95382022857666
    7. '_parallel' → logprob: -9.20382022857666
    8. '0' → logprob: -9.45382022857666
    9. '.parallel' → logprob: -10.20382022857666
    10. '#' → logprob: -10.20382022857666

Token 555: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7210245728492737
    2. ':' → logprob: -1.096024513244629
    3. '.' → logprob: -2.096024513244629
    4. ',' → logprob: -3.471024513244629
    5. '   ' → logprob: -4.471024513244629
    6. '(' → logprob: -5.971024513244629
    7. '{' → logprob: -6.221024513244629
    8. ':
' → logprob: -6.346024513244629
    9. 's' → logprob: -6.721024513244629
    10. '=' → logprob: -6.846024513244629

Token 556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022110044956207275
    2. '        
' → logprob: -4.8971099853515625
    3. '#' → logprob: -5.6471099853515625
    4. '        ' → logprob: -6.5221099853515625
    5. ' 
' → logprob: -6.6471099853515625
    6. ')' → logprob: -6.6471099853515625
    7. ' ' → logprob: -6.7721099853515625
    8. '<|end|>' → logprob: -7.1471099853515625
    9. '```' → logprob: -7.2721099853515625
    10. '   ' → logprob: -7.3971099853515625

Token 557: ' Parallel' (ID: 89035)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027739794924855232
    2. '
' → logprob: -4.902740001678467
    3. '        
' → logprob: -4.902740001678467
    4. '   ' → logprob: -6.152740001678467
    5. '#' → logprob: -6.277740001678467
    6. '\n' → logprob: -6.402740001678467
    7. ' 
' → logprob: -6.652740001678467
    8. ')' → logprob: -6.777740001678467
    9. 'n' → logprob: -7.152740001678467
    10. '"""' → logprob: -7.152740001678467

Token 558: ' lines' (ID: 8698)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.36378711462020874
    2. 's' → logprob: -2.3637871742248535
    3. '_pairs' → logprob: -2.3637871742248535
    4. '_lines' → logprob: -2.7387871742248535
    5. ' =' → logprob: -3.9887871742248535
    6. '_counts' → logprob: -4.4887871742248535
    7. '=' → logprob: -5.8637871742248535
    8. 'ness' → logprob: -5.8637871742248535
    9. '_' → logprob: -5.9887871742248535
    10. 'count' → logprob: -6.2387871742248535

Token 559: ' share' (ID: 5143)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.233091339468956
    2. '=' → logprob: -2.733091354370117
    3. ' =' → logprob: -2.858091354370117
    4. ':' → logprob: -4.233091354370117
    5. 'are' → logprob: -4.233091354370117
    6. ' can' → logprob: -4.858091354370117
    7. '<|end|>' → logprob: -4.858091354370117
    8. ' is' → logprob: -4.983091354370117
    9. ',' → logprob: -5.608091354370117
    10. 's' → logprob: -5.733091354370117

Token 560: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.23925752937793732
    2. ' at' → logprob: -2.114257574081421
    3. 'the' → logprob: -2.489257574081421
    4. ' a' → logprob: -5.114257335662842
    5. 'at' → logprob: -7.239257335662842
    6. ' an' → logprob: -7.614257335662842
    7. ' same' → logprob: -8.1142578125
    8. 'a' → logprob: -8.2392578125
    9. 'same' → logprob: -8.6142578125
    10. ' exactly' → logprob: -8.7392578125

Token 561: ' same' (ID: 2684)
  Prédit: ' same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.2520591616630554
    2. 'same' → logprob: -1.5020592212677002
    3. ' direction' → logprob: -10.127058982849121
    4. ' exact' → logprob: -10.252058982849121
    5. 'exact' → logprob: -10.627058982849121
    6. 'direction' → logprob: -11.502058982849121
    7. 'Same' → logprob: -12.752058982849121
    8. 's' → logprob: -12.877058982849121
    9. 'Direction' → logprob: -13.002058982849121
    10. ' next' → logprob: -13.127058982849121

Token 562: ' normalized' (ID: 59625)
  Prédit: ' direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.12440861761569977
    2. 'direction' → logprob: -2.374408721923828
    3. 'Direction' → logprob: -4.249408721923828
    4. ' Direction' → logprob: -4.999408721923828
    5. '_direction' → logprob: -6.749408721923828
    6. ' directional' → logprob: -7.499408721923828
    7. 'space' → logprob: -8.249408721923828
    8. ' directions' → logprob: -8.499408721923828
    9. ' vector' → logprob: -8.999408721923828
    10. ' space' → logprob: -9.124408721923828

Token 563: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.14934392273426056
    2. 'direction' → logprob: -2.024343967437744
    3. 'Direction' → logprob: -5.774343967437744
    4. '_direction' → logprob: -6.024343967437744
    5. ' Direction' → logprob: -7.024343967437744
    6. ' vector' → logprob: -9.399343490600586
    7. ' directions' → logprob: -9.774343490600586
    8. 'vector' → logprob: -11.399343490600586
    9. '-direction' → logprob: -11.399343490600586
    10. '(direction' → logprob: -11.399343490600586

Token 564: ' vector' (ID: 9727)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04028185456991196
    2. '.' → logprob: -4.540281772613525
    3. ':' → logprob: -4.665281772613525
    4. ',' → logprob: -4.790281772613525
    5. ':
' → logprob: -5.790281772613525
    6. '   ' → logprob: -6.290281772613525
    7. 'from' → logprob: -6.915281772613525
    8. ')' → logprob: -7.165281772613525
    9. '=' → logprob: -7.165281772613525
    10. 's' → logprob: -7.540281772613525

Token 565: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7039262056350708
    2. '.' → logprob: -0.9539262056350708
    3. ',' → logprob: -2.7039260864257812
    4. ':' → logprob: -3.3289260864257812
    5. ')' → logprob: -5.578926086425781
    6. '.
' → logprob: -5.953926086425781
    7. '   ' → logprob: -6.453926086425781
    8. ':
' → logprob: -6.453926086425781
    9. '
' → logprob: -7.203926086425781
    10. '=' → logprob: -7.203926086425781

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002153378736693412
    2. 'from' → logprob: -9.000215530395508
    3. '```' → logprob: -10.125215530395508
    4. ')' → logprob: -11.000215530395508
    5. '        
' → logprob: -11.250215530395508
    6. 'count' → logprob: -11.875215530395508
    7. ' from' → logprob: -12.875215530395508
    8. '   ' → logprob: -13.250215530395508
    9. 'counts' → logprob: -13.250215530395508
    10. '
' → logprob: -13.750215530395508

Token 567: ' Number' (ID: 9184)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021425461396574974
    2. ')' → logprob: -4.021425247192383
    3. '   ' → logprob: -6.396425247192383
    4. 'n' → logprob: -8.021425247192383
    5. '"""' → logprob: -8.021425247192383
    6. 'from' → logprob: -8.646425247192383
    7. '#' → logprob: -9.146425247192383
    8. 'def' → logprob: -9.271425247192383
    9. '```' → logprob: -9.271425247192383
    10. ',' → logprob: -9.521425247192383

Token 568: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5816145539283752
    2. ' =' → logprob: -1.7066144943237305
    3. '=' → logprob: -2.3316144943237305
    4. '_of' → logprob: -3.5816144943237305
    5. '       ' → logprob: -3.7066144943237305
    6. '_' → logprob: -3.7066144943237305
    7. 'of' → logprob: -4.0816144943237305
    8. 'ed' → logprob: -4.4566144943237305
    9. '   ' → logprob: -4.4566144943237305
    10. '_lines' → logprob: -4.4566144943237305

Token 569: ' pairs' (ID: 24702)
  Prédit: ' pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.8960122466087341
    2. ' lines' → logprob: -1.021012306213379
    3. 'pairs' → logprob: -2.271012306213379
    4. ' parallel' → logprob: -2.896012306213379
    5. 'lines' → logprob: -3.396012306213379
    6. 'parallel' → logprob: -3.521012306213379
    7. 'from' → logprob: -6.271012306213379
    8. ' directions' → logprob: -6.271012306213379
    9. '_pairs' → logprob: -6.396012306213379
    10. '   ' → logprob: -6.521012306213379

Token 570: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1802312284708023
    2. '=' → logprob: -1.8052312135696411
    3. ':' → logprob: -8.180231094360352
    4. ' is' → logprob: -9.555231094360352
    5. ' ' → logprob: -10.680231094360352
    6. 'def' → logprob: -10.930231094360352
    7. 'of' → logprob: -11.055231094360352
    8. '   ' → logprob: -11.305231094360352
    9. '```' → logprob: -11.555231094360352
    10. ' of' → logprob: -11.930231094360352

Token 571: ' group' (ID: 3566)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -1.719289779663086
    2. 'dire' → logprob: -1.719289779663086
    3. 'total' → logprob: -2.594289779663086
    4. 'sum' → logprob: -2.594289779663086
    5. ' lines' → logprob: -2.844289779663086
    6. 'a' → logprob: -3.094289779663086
    7. ' total' → logprob: -3.094289779663086
    8. 'direction' → logprob: -3.219289779663086
    9. 'each' → logprob: -3.719289779663086
    10. 'com' → logprob: -3.719289779663086

Token 572: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3198658227920532
    2. 's' → logprob: -2.3198657035827637
    3. '=' → logprob: -2.4448657035827637
    4. '*(' → logprob: -3.5698657035827637
    5. ' *' → logprob: -4.069865703582764
    6. '=len' → logprob: -4.319865703582764
    7. '**' → logprob: -4.944865703582764
    8. ':' → logprob: -5.569865703582764
    9. ' ' → logprob: -5.944865703582764
    10. '*' → logprob: -6.444865703582764

Token 573: ' k' (ID: 372)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.9934607744216919
    2. 'lines' → logprob: -1.493460774421692
    3. 'k' → logprob: -1.618460774421692
    4. ' size' → logprob: -3.3684606552124023
    5. ' k' → logprob: -3.4934606552124023
    6. 'n' → logprob: -3.6184606552124023
    7. 'parallel' → logprob: -3.8684606552124023
    8. ' lines' → logprob: -3.9934606552124023
    9. 'dire' → logprob: -4.243460655212402
    10. ' directions' → logprob: -4.618460655212402

Token 574: ' lines' (ID: 8698)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.24411720037460327
    2. '*(' → logprob: -1.744117259979248
    3. ' is' → logprob: -3.869117259979248
    4. ' lines' → logprob: -5.619117259979248
    5. '(k' → logprob: -5.619117259979248
    6. '*' → logprob: -5.744117259979248
    7. ' =' → logprob: -5.869117259979248
    8. ':' → logprob: -6.869117259979248
    9. '=' → logprob: -6.869117259979248
    10. '   ' → logprob: -7.119117259979248

Token 575: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.607296347618103
    2. ' is' → logprob: -1.732296347618103
    3. '=' → logprob: -1.857296347618103
    4. ':' → logprob: -2.3572964668273926
    5. 'is' → logprob: -4.857296466827393
    6. '       ' → logprob: -4.982296466827393
    7. '   ' → logprob: -5.982296466827393
    8. ',' → logprob: -6.482296466827393
    9. ' ' → logprob: -6.482296466827393
    10. '
' → logprob: -6.607296466827393

Token 576: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.13060183823108673
    2. 'k' → logprob: -2.1306018829345703
    3. ' (' → logprob: -5.75560188293457
    4. '(k' → logprob: -7.63060188293457
    5. '(' → logprob: -11.88060188293457
    6. '```' → logprob: -12.38060188293457
    7. ' ' → logprob: -13.50560188293457
    8. '`' → logprob: -13.63060188293457
    9. '   ' → logprob: -13.88060188293457
    10. '    ' → logprob: -14.25560188293457

Token 577: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.3343255817890167
    2. ' *' → logprob: -1.8343255519866943
    3. '*' → logprob: -2.0843255519866943
    4. ' ' → logprob: -11.334325790405273
    5. '-' → logprob: -11.834325790405273
    6. '>' → logprob: -12.084325790405273
    7. 'def' → logprob: -12.209325790405273
    8. '1' → logprob: -12.459325790405273
    9. '   ' → logprob: -12.584325790405273
    10. '  ' → logprob: -12.584325790405273

Token 578: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00935734435915947
    2. '(k' → logprob: -5.634357452392578
    3. '-' → logprob: -5.759357452392578
    4. '1' → logprob: -6.009357452392578
    5. ' -' → logprob: -10.009357452392578
    6. ' k' → logprob: -10.134357452392578
    7. ' (' → logprob: -11.009357452392578
    8. '(' → logprob: -11.384357452392578
    9. '```' → logprob: -11.634357452392578
    10. ' ' → logprob: -12.384357452392578

Token 579: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008051026379689574
    2. ' -' → logprob: -7.125804901123047
    3. '```' → logprob: -15.500804901123047
    4. ')' → logprob: -15.750804901123047
    5. '1' → logprob: -16.000804901123047
    6. '
' → logprob: -16.250804901123047
    7. '−' → logprob: -16.875804901123047
    8. '–' → logprob: -18.375804901123047
    9. ' ' → logprob: -18.625804901123047
    10. '-)' → logprob: -18.750804901123047

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '(' → logprob: -17.25
    4. '```' → logprob: -17.625
    5. ')' → logprob: -17.75
    6. '   ' → logprob: -18.0
    7. '2' → logprob: -18.25
    8. '-' → logprob: -18.75
    9. '
' → logprob: -19.5
    10. '(k' → logprob: -20.1875

Token 581: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25572267174720764
    2. ')//' → logprob: -1.7557226419448853
    3. '//' → logprob: -3.005722761154175
    4. ' //' → logprob: -6.005722522735596
    5. ' )' → logprob: -7.130722522735596
    6. ')/' → logprob: -9.755722999572754
    7. '```' → logprob: -10.880722999572754
    8. '   ' → logprob: -12.255722999572754
    9. '
' → logprob: -12.755722999572754
    10. ' ' → logprob: -13.505722999572754

Token 582: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -18.5000057220459
    4. '
' → logprob: -19.6250057220459
    5. '1' → logprob: -20.1250057220459
    6. '   ' → logprob: -20.6250057220459
    7. '۲' → logprob: -21.2500057220459
    8. '0' → logprob: -21.7500057220459
    9. '  ' → logprob: -22.2500057220459
    10. '4' → logprob: -22.2500057220459

Token 583: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09312297403812408
    2. '
' → logprob: -2.468122959136963
    3. '\n' → logprob: -6.468122959136963
    4. ')' → logprob: -6.968122959136963
    5. ')
' → logprob: -7.718122959136963
    6. 'def' → logprob: -8.593123435974121
    7. '
' → logprob: -8.718123435974121
    8. ',' → logprob: -8.843123435974121
    9. 'return' → logprob: -9.218123435974121
    10. '```' → logprob: -9.468123435974121

Token 584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9027791495318525e-05
    2. '```' → logprob: -11.750019073486328
    3. ')' → logprob: -13.000019073486328
    4. 's' → logprob: -13.125019073486328
    5. 'n' → logprob: -13.250019073486328
    6. ',' → logprob: -13.875019073486328
    7. '"""' → logprob: -14.125019073486328
    8. '   ' → logprob: -14.125019073486328
    9. '`' → logprob: -14.750019073486328
    10. 'def' → logprob: -15.125019073486328

Token 585: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.232493564719334e-05
    2. '```' → logprob: -10.125082015991211
    3. '   ' → logprob: -11.250082015991211
    4. 'n' → logprob: -11.625082015991211
    5. '"""' → logprob: -12.375082015991211
    6. ')' → logprob: -12.375082015991211
    7. 'from' → logprob: -13.500082015991211
    8. '      ' → logprob: -13.500082015991211
    9. 'result' → logprob: -13.625082015991211
    10. 'def' → logprob: -13.625082015991211

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015955790877342224
    2. 'count' → logprob: -9.00015926361084
    3. 'result' → logprob: -11.25015926361084
    4. '   ' → logprob: -11.75015926361084
    5. 'counts' → logprob: -12.75015926361084
    6. 'lines' → logprob: -12.87515926361084
    7. 'total' → logprob: -13.25015926361084
    8. 'counter' → logprob: -13.50015926361084
    9. '```' → logprob: -13.62515926361084
    10. 'sum' → logprob: -14.00015926361084

Token 587: ' freq' (ID: 42078)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.43598952889442444
    2. 'counts' → logprob: -1.685989499092102
    3. 'counter' → logprob: -2.1859896183013916
    4. 'direction' → logprob: -3.5609896183013916
    5. 'dir' → logprob: -4.3109893798828125
    6. '       ' → logprob: -4.8109893798828125
    7. '   ' → logprob: -5.6859893798828125
    8. 'freq' (adapté à ' freq') → logprob: -6.1859893798828125
    9. 'parallel' → logprob: -9.185989379882812
    10. 'cnt' → logprob: -9.435989379882812

Token 588: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693282961845398
    2. ' =' → logprob: -2.1269328594207764
    3. ':' → logprob: -12.876933097839355
    4. ' ' → logprob: -14.126933097839355
    5. '   ' → logprob: -14.501933097839355
    6. 's' → logprob: -15.251933097839355
    7. '_' → logprob: -16.25193214416504
    8. '  ' → logprob: -16.75193214416504
    9. ' ' → logprob: -16.75193214416504
    10. ' defaultdict' → logprob: -17.00193214416504

Token 589: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -6.2729995988775045e-06
    2. ' defaultdict' → logprob: -12.000006675720215
    3. '(default' → logprob: -17.6250057220459
    4. '"default' → logprob: -18.2500057220459
    5. '.default' → logprob: -18.7500057220459
    6. '   ' → logprob: -19.0000057220459
    7. ''default' → logprob: -19.6250057220459
    8. ' default' → logprob: -19.7500057220459
    9. 'DEFAULT' → logprob: -20.8750057220459
    10. 'Default' → logprob: -21.1250057220459

Token 590: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16214215755462646
    2. 'int' → logprob: -1.9121421575546265
    3. '(lambda' → logprob: -6.537142276763916
    4. '[int' → logprob: -8.162141799926758
    5. '<int' → logprob: -9.162141799926758
    6. 'lambda' → logprob: -10.037141799926758
    7. ':int' → logprob: -10.912141799926758
    8. ',int' → logprob: -12.162141799926758
    9. '=int' → logprob: -12.662141799926758
    10. '```' → logprob: -12.787141799926758

Token 591: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12723928689956665
    2. ')' → logprob: -2.127239227294922
    3. ')
' → logprob: -8.627239227294922
    4. '       ' → logprob: -9.502239227294922
    5. ')

' → logprob: -10.127239227294922
    6. ' )
' → logprob: -11.627239227294922
    7. '   ' → logprob: -12.877239227294922
    8. ')`
' → logprob: -13.252239227294922
    9. ',' → logprob: -14.002239227294922
    10. ' )' → logprob: -14.002239227294922

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24806807935237885
    2. ' for' → logprob: -1.62306809425354
    3. 'for' → logprob: -3.87306809425354
    4. '   ' → logprob: -7.373067855834961
    5. ' ' → logprob: -7.998067855834961
    6. '	for' → logprob: -8.748067855834961
    7. '        
' → logprob: -9.373067855834961
    8. '<|end|>' → logprob: -9.623067855834961
    9. '	' → logprob: -9.998067855834961
    10. '    ' → logprob: -10.123067855834961

Token 593: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01819196529686451
    2. '       ' → logprob: -4.268191814422607
    3. ' for' → logprob: -5.518191814422607
    4. '   ' → logprob: -12.018192291259766
    5. '	for' → logprob: -13.893192291259766
    6. ' ' → logprob: -16.018192291259766
    7. '```' → logprob: -16.768192291259766
    8. '	' → logprob: -17.143192291259766
    9. '        
' → logprob: -17.268192291259766
    10. '           ' → logprob: -17.393192291259766

Token 594: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08373891562223434
    2. 'dir' → logprob: -2.5837388038635254
    3. 'direction' → logprob: -5.333738803863525
    4. ' d' → logprob: -11.958739280700684
    5. 'dire' → logprob: -12.708739280700684
    6. ' dir' → logprob: -13.833739280700684
    7. 'vec' → logprob: -14.708739280700684
    8. ' direction' → logprob: -14.833739280700684
    9. 'direct' → logprob: -16.583738327026367
    10. '```' → logprob: -16.958738327026367

Token 595: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017801376525312662
    2. 'in' → logprob: -6.376780033111572
    3. 'd' → logprob: -9.87678050994873
    4. 'irection' → logprob: -11.37678050994873
    5. 'irected' → logprob: -12.25178050994873
    6. ',' → logprob: -13.00178050994873
    7. ',d' → logprob: -13.50178050994873
    8. 'irect' → logprob: -13.87678050994873
    9. 's' → logprob: -13.87678050994873
    10. 'n' → logprob: -14.00178050994873

Token 596: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.008618119172751904
    2. ' directions' → logprob: -4.758618354797363
    3. 'direction' → logprob: -13.508618354797363
    4. 'd' → logprob: -13.508618354797363
    5. 'irections' → logprob: -14.633618354797363
    6. 'direct' → logprob: -15.008618354797363
    7. 'Directions' → logprob: -17.758617401123047
    8. 'directories' → logprob: -19.383617401123047
    9. ' ' → logprob: -19.508617401123047
    10. '   ' → logprob: -19.508617401123047

Token 597: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010994764976203442
    2. ':
' → logprob: -4.635994911193848
    3. '           ' → logprob: -7.010994911193848
    4. '[' → logprob: -8.635994911193848
    5. '[d' → logprob: -10.135994911193848
    6. ' :' → logprob: -10.385994911193848
    7. '       ' → logprob: -10.510994911193848
    8. 'd' → logprob: -11.510994911193848
    9. ',' → logprob: -11.635994911193848
    10. '        ' → logprob: -11.760994911193848

Token 598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008596492931246758
    2. ' freq' → logprob: -4.883596420288086
    3. 'freq' → logprob: -7.133596420288086
    4. '(freq' → logprob: -10.133596420288086
    5. '            
' → logprob: -10.633596420288086
    6. '```' → logprob: -10.883596420288086
    7. ' 
' → logprob: -11.008596420288086
    8. '       ' → logprob: -11.508596420288086
    9. '[' → logprob: -11.633596420288086
    10. '            ' → logprob: -11.883596420288086

Token 599: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.0005943780997768044
    2. '           ' → logprob: -8.125594139099121
    3. ' freq' → logprob: -8.125594139099121
    4. '               ' → logprob: -13.750594139099121
    5. '(freq' → logprob: -14.625594139099121
    6. 'frequency' → logprob: -15.250594139099121
    7. '       ' → logprob: -15.375594139099121
    8. '
' → logprob: -15.750594139099121
    9. '   ' → logprob: -16.000595092773438
    10. 'fre' → logprob: -16.125595092773438

Token 600: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -8.292095299111679e-05
    2. '[f' → logprob: -10.125082969665527
    3. '[' → logprob: -10.750082969665527
    4. 'd' → logprob: -11.125082969665527
    5. '[
' → logprob: -13.000082969665527
    6. 'freq' → logprob: -13.625082969665527
    7. '(d' → logprob: -14.000082969665527
    8. ' [' → logprob: -14.250082969665527
    9. '[(' → logprob: -14.500082969665527
    10. '[df' → logprob: -15.250082969665527

Token 601: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2014353722333908
    2. ']+=' → logprob: -1.7014353275299072
    3. '+=' → logprob: -11.326435089111328
    4. ' ]' → logprob: -11.576435089111328
    5. ' +=' → logprob: -15.451435089111328
    6. ']+' → logprob: -15.951435089111328
    7. '+]' → logprob: -16.826435089111328
    8. '`]' → logprob: -16.826435089111328
    9. '```' → logprob: -17.326435089111328
    10. '[' → logprob: -17.451435089111328

Token 602: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018156031146645546
    2. ' +=' → logprob: -4.018156051635742
    3. ']+=' → logprob: -12.018156051635742
    4. '=' → logprob: -16.643156051635742
    5. '[' → logprob: -18.518156051635742
    6. '   ' → logprob: -18.643156051635742
    7. '        ' → logprob: -19.143156051635742
    8. '    ' → logprob: -19.268156051635742
    9. '```' → logprob: -20.018156051635742
    10. '       ' → logprob: -20.018156051635742

Token 603: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -21.75
    4. '   ' → logprob: -22.0
    5. '１' → logprob: -22.125
    6. '۱' → logprob: -22.5
    7. 'd' → logprob: -22.625
    8. '
' → logprob: -23.125
    9. '

' → logprob: -23.25
    10. '2' → logprob: -23.75

Token 604: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '
' → logprob: -22.625
    4. '

' → logprob: -22.75
    5. '１' → logprob: -22.875
    6. '   ' → logprob: -23.625
    7. '۱' → logprob: -23.875
    8. '2' → logprob: -24.25
    9. '```' → logprob: -24.25
    10. '(' → logprob: -25.125

Token 605: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.226573646068573
    2. '       ' → logprob: -1.6015737056732178
    3. '        
' → logprob: -7.101573467254639
    4. '
' → logprob: -8.351573944091797
    5. '  
' → logprob: -9.726573944091797
    6. '    
' → logprob: -11.101573944091797
    7. '<|end|>' → logprob: -12.226573944091797
    8. '

' → logprob: -12.351573944091797
    9. ' 
' → logprob: -12.601573944091797
    10. '```' → logprob: -12.851573944091797

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03248155117034912
    2. 'result' → logprob: -3.7824816703796387
    3. '
' → logprob: -5.407481670379639
    4. 'count' → logprob: -5.657481670379639
    5. 'res' → logprob: -7.657481670379639
    6. 'total' → logprob: -7.782481670379639
    7. '        
' → logprob: -9.15748119354248
    8. 'sum' → logprob: -10.28248119354248
    9. ' result' → logprob: -10.40748119354248
    10. 'return' → logprob: -10.40748119354248

Token 607: ' total' (ID: 3609)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.818708598613739
    2. 'result' → logprob: -1.0687086582183838
    3. 'total' (adapté à ' total') → logprob: -2.818708658218384
    4. '       ' → logprob: -3.068708658218384
    5. 'res' → logprob: -3.068708658218384
    6. 'return' → logprob: -3.443708658218384
    7. 'pairs' → logprob: -3.568708658218384
    8. 'ans' → logprob: -6.693708419799805
    9. 'answer' → logprob: -7.443708419799805
    10. 'cnt' → logprob: -7.568708419799805

Token 608: '_pairs' (ID: 90005)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.799164354801178
    2. ' =' → logprob: -0.799164354801178
    3. '_pairs' → logprob: -2.299164295196533
    4. 'pairs' → logprob: -8.549164772033691
    5. '_parallel' → logprob: -10.424164772033691
    6. '_count' → logprob: -11.549164772033691
    7. ' +=' → logprob: -12.674164772033691
    8. '+=' → logprob: -13.049164772033691
    9. '_lines' → logprob: -13.674164772033691
    10. 'parallel' → logprob: -13.674164772033691

Token 609: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575991153717041
    2. '=' → logprob: -0.825991153717041
    3. ' +=' → logprob: -10.075990676879883
    4. '+=' → logprob: -11.575990676879883
    5. ' ' → logprob: -15.075990676879883
    6. '=sum' → logprob: -17.700990676879883
    7. ' ' → logprob: -18.325990676879883
    8. '  ' → logprob: -19.075990676879883
    9. ')' → logprob: -19.075990676879883
    10. '   ' → logprob: -19.825990676879883

Token 610: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002728985855355859
    2. ' ' → logprob: -8.750272750854492
    3. 'sum' → logprob: -9.125272750854492
    4. ' sum' → logprob: -12.250272750854492
    5. '   ' → logprob: -14.250272750854492
    6. '  ' → logprob: -17.625272750854492
    7. '```' → logprob: -18.250272750854492
    8. '=' → logprob: -18.687772750854492
    9. '       ' → logprob: -19.187772750854492
    10. '2' → logprob: -19.250272750854492

Token 611: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06997445225715637
    2. 'sum' → logprob: -2.694974422454834
    3. ' sum' → logprob: -10.819974899291992
    4. ' ' → logprob: -11.194974899291992
    5. '   ' → logprob: -12.694974899291992
    6. '(sum' → logprob: -15.319974899291992
    7. '```' → logprob: -15.819974899291992
    8. '
' → logprob: -16.069974899291992
    9. '  ' → logprob: -16.194974899291992
    10. '=sum' → logprob: -16.319974899291992

Token 612: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009177819825708866
    2. '
' → logprob: -4.7591776847839355
    3. '<|end|>' → logprob: -8.759178161621094
    4. ' for' → logprob: -9.259178161621094
    5. ',' → logprob: -9.384178161621094
    6. '	' → logprob: -10.134178161621094
    7. 'for' → logprob: -10.259178161621094
    8. '   ' → logprob: -10.509178161621094
    9. '  
' → logprob: -10.884178161621094
    10. ')' → logprob: -10.884178161621094

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009021693258546293
    2. '
' → logprob: -7.50090217590332
    3. ' for' → logprob: -8.12590217590332
    4. 'for' → logprob: -11.00090217590332
    5. '	' → logprob: -11.37590217590332
    6. '<|end|>' → logprob: -12.37590217590332
    7. '        
' → logprob: -12.50090217590332
    8. '   ' → logprob: -12.50090217590332
    9. ' ' → logprob: -12.75090217590332
    10. ',' → logprob: -12.87590217590332

Token 614: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.27515915036201477
    2. '       ' → logprob: -1.5251591205596924
    3. ' for' → logprob: -3.7751591205596924
    4. '	for' → logprob: -11.400158882141113
    5. '	' → logprob: -11.525158882141113
    6. '   ' → logprob: -12.400158882141113
    7. ' ' → logprob: -13.400158882141113
    8. '
' → logprob: -13.775158882141113
    9. ' ' → logprob: -14.900158882141113
    10. '           ' → logprob: -15.275158882141113

Token 615: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04259407892823219
    2. ' count' → logprob: -3.4175941944122314
    3. 'k' → logprob: -5.167593955993652
    4. 'v' → logprob: -6.667593955993652
    5. 'cnt' → logprob: -6.917593955993652
    6. 'freq' → logprob: -7.292593955993652
    7. ' k' → logprob: -9.417593955993652
    8. ' cnt' → logprob: -10.167593955993652
    9. ' v' → logprob: -10.542593955993652
    10. ' freq' → logprob: -10.667593955993652

Token 616: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6328728199005127
    2. ' in' → logprob: -0.7578728199005127
    3. '_in' → logprob: -9.257872581481934
    4. 'In' → logprob: -10.132872581481934
    5. ',' → logprob: -10.507872581481934
    6. '	in' → logprob: -10.632872581481934
    7. 's' → logprob: -11.132872581481934
    8. 'count' → logprob: -11.382872581481934
    9. ')' → logprob: -11.757872581481934
    10. '>' → logprob: -11.882872581481934

Token 617: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.005237668287009001
    2. ' freq' → logprob: -5.255237579345703
    3. '(freq' → logprob: -12.880237579345703
    4. 'range' → logprob: -14.130237579345703
    5. 'fre' → logprob: -15.380237579345703
    6. '   ' → logprob: -16.380237579345703
    7. '.freq' → logprob: -16.630237579345703
    8. '
' → logprob: -16.630237579345703
    9. 'frequency' → logprob: -16.880237579345703
    10. 'fq' → logprob: -17.005237579345703

Token 618: '.values' (ID: 20422)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4307905435562134
    2. '.values' → logprob: -1.3057905435562134
    3. '[d' → logprob: -2.680790424346924
    4. '):' → logprob: -5.805790424346924
    5. 'values' → logprob: -5.930790424346924
    6. ':
' → logprob: -6.805790424346924
    7. 'd' → logprob: -7.555790424346924
    8. ':d' → logprob: -7.555790424346924
    9. ')' → logprob: -7.805790424346924
    10. 'count' → logprob: -7.930790424346924

Token 619: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.39649277925491333
    2. ':' → logprob: -1.1464927196502686
    3. '():
' → logprob: -4.771492958068848
    4. '):' → logprob: -7.146492958068848
    5. ':
' → logprob: -8.271492958068848
    6. '()' → logprob: -10.646492958068848
    7. '       ' → logprob: -11.646492958068848
    8. '):
' → logprob: -11.771492958068848
    9. '():
' → logprob: -11.896492958068848
    10. '           ' → logprob: -12.771492958068848

Token 620: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.44312788406387e-05
    2. '               ' → logprob: -10.250054359436035
    3. '
' → logprob: -12.000054359436035
    4. ',' → logprob: -12.625054359436035
    5. '          ' → logprob: -13.500054359436035
    6. '		' → logprob: -13.875054359436035
    7. '       ' → logprob: -13.875054359436035
    8. '(total' → logprob: -14.000054359436035
    9. '	       ' → logprob: -14.000054359436035
    10. '                   ' → logprob: -14.250054359436035

Token 621: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008990583010017872
    2. 'total' → logprob: -4.75899076461792
    3. ' total' → logprob: -8.383990287780762
    4. '               ' → logprob: -9.383990287780762
    5. '(total' → logprob: -9.883990287780762
    6. ',total' → logprob: -12.633990287780762
    7. 'if' (adapté à ' if') → logprob: -13.258990287780762
    8. '
' → logprob: -13.383990287780762
    9. '       ' → logprob: -13.883990287780762
    10. ' if' → logprob: -14.008990287780762

Token 622: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2014147937297821
    2. ' count' → logprob: -1.7014148235321045
    3. '(count' → logprob: -14.576415061950684
    4. '           ' → logprob: -14.951415061950684
    5. '	count' → logprob: -15.201415061950684
    6. '               ' → logprob: -15.201415061950684
    7. '[count' → logprob: -16.826414108276367
    8. '<count' → logprob: -17.076414108276367
    9. ' ' → logprob: -17.201414108276367
    10. '$count' → logprob: -17.451414108276367

Token 623: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.012262038886547089
    2. ' >' → logprob: -4.762261867523193
    3. '>=' → logprob: -5.637261867523193
    4. ' >=' → logprob: -9.512262344360352
    5. '   ' → logprob: -14.137262344360352
    6. '()>' → logprob: -14.387262344360352
    7. '[' → logprob: -14.637262344360352
    8. '≥' → logprob: -14.762262344360352
    9. ' ' → logprob: -14.887262344360352
    10. '>
' → logprob: -15.137262344360352

Token 624: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '
' → logprob: -16.250019073486328
    4. '   ' → logprob: -16.375019073486328
    5. '           ' → logprob: -17.000019073486328
    6. '=' → logprob: -17.125019073486328
    7. '>' → logprob: -18.000019073486328
    8. '```' → logprob: -18.125019073486328
    9. '۱' → logprob: -19.375019073486328
    10. '１' → logprob: -19.375019073486328

Token 625: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '
' → logprob: -17.25
    4. '0' → logprob: -18.5
    5. '

' → logprob: -19.0
    6. '=' → logprob: -19.0
    7. '>' → logprob: -19.875
    8. '   ' → logprob: -20.125
    9. '۱' → logprob: -21.0
    10. '１' → logprob: -21.0

Token 626: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7747142314910889
    2. ':' → logprob: -1.1497142314910889
    3. '               ' → logprob: -1.5247142314910889
    4. '           ' → logprob: -5.524714469909668
    5. ',' → logprob: -7.649714469909668
    6. '):
' → logprob: -8.524714469909668
    7. ',
' → logprob: -11.399714469909668
    8. ' and' → logprob: -11.899714469909668
    9. '              ' → logprob: -11.899714469909668
    10. ':
' → logprob: -11.899714469909668

Token 627: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0125388503074646
    2. '           ' → logprob: -4.387538909912109
    3. '                   ' → logprob: -10.76253890991211
    4. '              ' → logprob: -13.51253890991211
    5. '                           ' → logprob: -13.88753890991211
    6. ',' → logprob: -14.01253890991211
    7. '                       ' → logprob: -14.13753890991211
    8. '             ' → logprob: -14.13753890991211
    9. '       ' → logprob: -14.51253890991211
    10. '	           ' → logprob: -14.76253890991211

Token 628: ' total' (ID: 3609)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9743186235427856
    2. ' total' → logprob: -1.0993186235427856
    3. 'total' (adapté à ' total') → logprob: -1.4743186235427856
    4. '                   ' → logprob: -2.849318504333496
    5. '           ' → logprob: -5.974318504333496
    6. '(total' → logprob: -10.349318504333496
    7. ',total' → logprob: -10.724318504333496
    8. '
' → logprob: -11.599318504333496
    9. '   ' → logprob: -12.224318504333496
    10. '	total' → logprob: -12.474318504333496

Token 629: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.00011164903844473884
    2. 'pairs' → logprob: -9.12511157989502
    3. '           ' → logprob: -13.87511157989502
    4. 'total' → logprob: -14.25011157989502
    5. 'Pairs' → logprob: -14.75011157989502
    6. '+=' → logprob: -14.87511157989502
    7. '_lines' → logprob: -16.750112533569336
    8. ' +=' → logprob: -16.750112533569336
    9. '               ' → logprob: -17.000112533569336
    10. '       ' → logprob: -17.125112533569336

Token 630: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03013458289206028
    2. ' +=' → logprob: -3.530134677886963
    3. '               ' → logprob: -8.405134201049805
    4. '           ' → logprob: -9.155134201049805
    5. '                   ' → logprob: -10.405134201049805
    6. ']+=' → logprob: -11.655134201049805
    7. '                ' → logprob: -12.155134201049805
    8. '+=(' → logprob: -12.530134201049805
    9. '            ' → logprob: -12.780134201049805
    10. '```' → logprob: -13.655134201049805

Token 631: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.023789258673787117
    2. ' count' → logprob: -3.773789167404175
    3. '(count' → logprob: -7.523789405822754
    4. ' (' → logprob: -13.148789405822754
    5. '               ' → logprob: -14.398789405822754
    6. '                   ' → logprob: -15.273789405822754
    7. '   ' → logprob: -15.398789405822754
    8. '           ' → logprob: -15.523789405822754
    9. '[count' → logprob: -15.898789405822754
    10. '(' → logprob: -15.898789405822754

Token 632: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.33427584171295166
    2. '*(' → logprob: -1.8342758417129517
    3. ' *' → logprob: -2.084275722503662
    4. '           ' → logprob: -12.45927619934082
    5. '```' → logprob: -12.83427619934082
    6. '   ' → logprob: -13.08427619934082
    7. ' ' → logprob: -13.08427619934082
    8. '**' → logprob: -13.20927619934082
    9. '          ' → logprob: -13.95927619934082
    10. ' ' → logprob: -14.33427619934082

Token 633: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00010711929644457996
    2. '(count' → logprob: -9.250106811523438
    3. ' count' → logprob: -11.625106811523438
    4. '[count' → logprob: -13.375106811523438
    5. '<count' → logprob: -15.250106811523438
    6. '$count' → logprob: -16.375106811523438
    7. '=count' → logprob: -16.625106811523438
    8. '.count' → logprob: -17.125106811523438
    9. '	count' → logprob: -17.375106811523438
    10. ',count' → logprob: -18.375106811523438

Token 634: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006716317031532526
    2. ' -' → logprob: -5.006716251373291
    3. '1' → logprob: -15.25671672821045
    4. ' ' → logprob: -16.131715774536133
    5. '–' → logprob: -16.131715774536133
    6. '<|end|>' → logprob: -16.131715774536133
    7. '```' → logprob: -16.131715774536133
    8. '()-' → logprob: -16.506715774536133
    9. '   ' → logprob: -17.131715774536133
    10. '−' → logprob: -17.756715774536133

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '<|end|>' → logprob: -13.750001907348633
    3. ' ' → logprob: -15.375001907348633
    4. '```' → logprob: -15.500001907348633
    5. '<|end|>' → logprob: -16.750001907348633
    6. ')' → logprob: -17.375001907348633
    7. 'to' → logprob: -18.000001907348633
    8. 'def' → logprob: -18.062501907348633
    9. '...' → logprob: -18.125001907348633
    10. '2' → logprob: -18.312501907348633

Token 636: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4793444871902466
    2. ')' → logprob: -1.4793444871902466
    3. ')//' → logprob: -2.104344367980957
    4. ' //' → logprob: -3.479344367980957
    5. '```' → logprob: -9.229344367980957
    6. '   ' → logprob: -10.104344367980957
    7. '       ' → logprob: -10.354344367980957
    8. '
' → logprob: -10.729344367980957
    9. ']' → logprob: -10.729344367980957
    10. ' )' → logprob: -11.354344367980957

Token 637: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -18.625
    4. '1' → logprob: -18.75
    5. '
' → logprob: -19.0
    6. '<|end|>' → logprob: -20.0
    7. '   ' → logprob: -20.375
    8. '۲' → logprob: -20.625
    9. '२' → logprob: -22.0625
    10. '২' → logprob: -22.0625

Token 638: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009576048702001572
    2. '
' → logprob: -4.759575843811035
    3. 'return' → logprob: -7.884575843811035
    4. ' return' → logprob: -8.634575843811035
    5. '        
' → logprob: -8.634575843811035
    6. '<|end|>' → logprob: -9.509575843811035
    7. '    
' → logprob: -9.884575843811035
    8. '  
' → logprob: -10.509575843811035
    9. '	return' → logprob: -11.259575843811035
    10. ' 
' → logprob: -11.634575843811035

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018911674851551652
    2. '
' → logprob: -9.000188827514648
    3. 'return' → logprob: -10.000188827514648
    4. ' return' → logprob: -11.375188827514648
    5. '	' → logprob: -12.500188827514648
    6. '	return' → logprob: -13.750188827514648
    7. '           ' → logprob: -13.875188827514648
    8. '        
' → logprob: -14.125188827514648
    9. '   ' → logprob: -14.375188827514648
    10. '      ' → logprob: -14.875188827514648

Token 640: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04709437116980553
    2. 'return' (adapté à ' return') → logprob: -3.1720943450927734
    3. ' return' → logprob: -6.172094345092773
    4. '	return' → logprob: -7.172094345092773
    5. '   ' → logprob: -7.297094345092773
    6. '
' → logprob: -8.047094345092773
    7. '	' → logprob: -8.422094345092773
    8. ' ' → logprob: -12.672094345092773
    9. '	   ' → logprob: -13.297094345092773
    10. ':return' → logprob: -13.297094345092773

Token 641: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.02975071594119072
    2. ' total' → logprob: -3.5297508239746094
    3. '       ' → logprob: -15.77975082397461
    4. '(total' → logprob: -17.02975082397461
    5. '   ' → logprob: -17.15475082397461
    6. '
' → logprob: -17.77975082397461
    7. '	total' → logprob: -18.27975082397461
    8. '0' → logprob: -19.02975082397461
    9. ' ' → logprob: -19.90475082397461
    10. 'tot' → logprob: -19.90475082397461

Token 642: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -1.8550976164988242e-05
    2. '_total' → logprob: -12.125018119812012
    3. '_' → logprob: -12.500018119812012
    4. 's' → logprob: -12.875018119812012
    5. 'pairs' → logprob: -13.125018119812012
    6. '_lines' → logprob: -13.500018119812012
    7. ' _' → logprob: -13.750018119812012
    8. 'total' → logprob: -14.500018119812012
    9. '\' → logprob: -14.750018119812012
    10. '```' → logprob: -15.750018119812012

Token 643: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41861143708229065
    2. '   ' → logprob: -1.1686114072799683
    3. '    
' → logprob: -3.543611526489258
    4. '<|end|>' → logprob: -6.793611526489258
    5. '  
' → logprob: -7.668611526489258
    6. ' 
' → logprob: -8.418611526489258
    7. '   
' → logprob: -8.668611526489258
    8. '        
' → logprob: -9.293611526489258
    9. 'def' → logprob: -9.418611526489258
    10. '  ' → logprob: -10.168611526489258

Token 644: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3175174295902252
    2. '   ' → logprob: -1.3175173997879028
    3. ' def' → logprob: -5.817517280578613
    4. '
' → logprob: -6.692517280578613
    5. '    
' → logprob: -10.817517280578613
    6. '@' → logprob: -11.942517280578613
    7. '	def' → logprob: -13.942517280578613
    8. '```' → logprob: -13.942517280578613
    9. '        
' → logprob: -14.692517280578613
    10. ')' → logprob: -14.942517280578613

Token 645: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016718693950679153
    2. ' def' → logprob: -8.750166893005371
    3. '   ' → logprob: -11.750166893005371
    4. '
' → logprob: -14.500166893005371
    5. '	def' → logprob: -16.500167846679688
    6. '    
' → logprob: -16.625167846679688
    7. '_def' → logprob: -17.125167846679688
    8. '@' → logprob: -17.375167846679688
    9. ':def' → logprob: -18.750167846679688
    10. '  
' → logprob: -19.625167846679688

Token 646: ' _' (ID: 1175)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0003687053394969553
    2. ' _' → logprob: -8.12536907196045
    3. '_recursive' → logprob: -10.12536907196045
    4. '_rec' → logprob: -12.00036907196045
    5. '_find' → logprob: -12.00036907196045
    6. '_r' → logprob: -12.62536907196045
    7. '_pair' → logprob: -12.75036907196045
    8. '_count' → logprob: -13.12536907196045
    9. '_continue' → logprob: -13.50036907196045
    10. '_' → logprob: -13.62536907196045

Token 647: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0005096645909361541
    2. '_re' → logprob: -7.625509738922119
    3. 'def' → logprob: -11.625509262084961
    4. 'r' → logprob: -12.125509262084961
    5. 'rec' → logprob: -12.625509262084961
    6. 'find' → logprob: -13.250509262084961
    7. 'recursive' → logprob: -14.500509262084961
    8. '_' → logprob: -15.000509262084961
    9. 'repr' → logprob: -16.00050926208496
    10. 'get' → logprob: -16.00050926208496

Token 648: 'curse' (ID: 134738)
  Prédit: 'curse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curse' → logprob: -0.0005713827558793128
    2. 'c' → logprob: -7.500571250915527
    3. '_c' → logprob: -11.125571250915527
    4. 'cur' → logprob: -12.625571250915527
    5. 'curve' → logprob: -15.875571250915527
    6. '_' → logprob: -16.125572204589844
    7. 'cursor' → logprob: -17.125572204589844
    8. '_cursor' → logprob: -17.750572204589844
    9. '__' → logprob: -18.250572204589844
    10. '_cur' → logprob: -18.625572204589844

Token 649: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003433296224102378
    2. '(' → logprob: -8.000343322753906
    3. '(
' → logprob: -12.750343322753906
    4. 'self' → logprob: -12.750343322753906
    5. ' (' → logprob: -13.750343322753906
    6. '(s' → logprob: -14.500343322753906
    7. '(state' → logprob: -15.250343322753906
    8. '   ' → logprob: -15.625343322753906
    9. 'def' → logprob: -17.250343322753906
    10. '       ' → logprob: -17.625343322753906

Token 650: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4036226272583008
    2. ',' → logprob: -1.1536226272583008
    3. ')(' → logprob: -4.903622627258301
    4. 'self' → logprob: -6.403622627258301
    5. '(state' → logprob: -6.403622627258301
    6. ')' → logprob: -6.653622627258301
    7. '(' → logprob: -6.778622627258301
    8. 'state' → logprob: -7.028622627258301
    9. ' (' → logprob: -7.403622627258301
    10. ',state' → logprob: -7.403622627258301

Token 651: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0014915307983756065
    2. ' state' → logprob: -6.626491546630859
    3. 'self' → logprob: -8.75149154663086
    4. 'pair' → logprob: -12.62649154663086
    5. 'current' → logprob: -13.00149154663086
    6. '   ' → logprob: -14.25149154663086
    7. '	state' → logprob: -15.62649154663086
    8. ' self' → logprob: -15.62649154663086
    9. 'taken' → logprob: -15.62649154663086
    10. ')' → logprob: -16.00149154663086

Token 652: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6435080170631409
    2. ',' → logprob: -1.893507957458496
    3. 'self' → logprob: -1.893507957458496
    4. '):' → logprob: -2.143507957458496
    5. '       ' → logprob: -3.518507957458496
    6. '):
' → logprob: -4.893507957458496
    7. ')' → logprob: -4.893507957458496
    8. ' self' → logprob: -5.018507957458496
    9. '   ' → logprob: -5.643507957458496
    10. ')(' → logprob: -7.768507957458496

Token 653: ' Pair' (ID: 41250)
  Prédit: 'Pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pair' → logprob: -0.00186307227704674
    2. ' Pair' → logprob: -6.8768630027771
    3. 'self' → logprob: -7.8768630027771
    4. ''' → logprob: -8.501863479614258
    5. ')' → logprob: -8.751863479614258
    6. '   ' → logprob: -10.626863479614258
    7. '
' → logprob: -11.126863479614258
    8. ''s' → logprob: -11.626863479614258
    9. 'Point' → logprob: -12.126863479614258
    10. ' ' → logprob: -12.126863479614258

Token 654: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -2.629921436891891e-05
    2. 'State' → logprob: -10.75002670288086
    3. '_state' → logprob: -13.37502670288086
    4. 'state' → logprob: -13.87502670288086
    5. '_' → logprob: -14.00002670288086
    6. '   ' → logprob: -14.62502670288086
    7. ')' → logprob: -15.25002670288086
    8. 'ning' → logprob: -16.25002670288086
    9. '       ' → logprob: -16.62502670288086
    10. 'a' → logprob: -16.62502670288086

Token 655: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -7.707997428951785e-05
    2. 'state' → logprob: -10.250077247619629
    3. '):' → logprob: -10.750077247619629
    4. '_state' → logprob: -11.250077247619629
    5. ')' → logprob: -13.125077247619629
    6. 'States' → logprob: -13.875077247619629
    7. '   ' → logprob: -14.000077247619629
    8. '_' → logprob: -14.250077247619629
    9. ',' → logprob: -14.375077247619629
    10. '):
' → logprob: -14.500077247619629

Token 656: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31356537342071533
    2. '):' → logprob: -1.3135653734207153
    3. '):
' → logprob: -8.688565254211426
    4. '   ' → logprob: -9.813565254211426
    5. '       ' → logprob: -10.813565254211426
    6. ')->' → logprob: -11.063565254211426
    7. ',' → logprob: -11.063565254211426
    8. ':' → logprob: -11.438565254211426
    9. '):
' → logprob: -11.938565254211426
    10. ' )' → logprob: -11.938565254211426

Token 657: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017640821635723114
    2. ':
' → logprob: -4.517640590667725
    3. '       ' → logprob: -5.142640590667725
    4. '):' → logprob: -8.017641067504883
    5. '   ' → logprob: -8.767641067504883
    6. ',' → logprob: -9.767641067504883
    7. '():' → logprob: -9.767641067504883
    8. '):
' → logprob: -10.267641067504883
    9. ')' → logprob: -10.392641067504883
    10. '->' → logprob: -11.017641067504883

Token 658: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.5332478142227046e-05
    2. ' int' → logprob: -11.375015258789062
    3. '(int' → logprob: -13.625015258789062
    4. '   ' → logprob: -13.750015258789062
    5. '[int' → logprob: -13.875015258789062
    6. '
' → logprob: -15.125015258789062
    7. '0' → logprob: -15.500015258789062
    8. '	int' → logprob: -17.875015258789062
    9. '<int' → logprob: -18.000015258789062
    10. '1' → logprob: -18.000015258789062

Token 659: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002509070560336113
    2. '       ' → logprob: -6.377509117126465
    3. ':
' → logprob: -7.877509117126465
    4. ',' → logprob: -9.127509117126465
    5. '):' → logprob: -9.127509117126465
    6. '():' → logprob: -9.377509117126465
    7. '   ' → logprob: -9.502509117126465
    8. '<|end|>' → logprob: -11.377509117126465
    9. ':def' → logprob: -11.377509117126465
    10. '.' → logprob: -12.502509117126465

Token 660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.591415437171236e-05
    2. ' if' → logprob: -10.125096321105957
    3. 'if' → logprob: -10.375096321105957
    4. '```' → logprob: -11.125096321105957
    5. '#' → logprob: -12.750096321105957
    6. ',' → logprob: -12.875096321105957
    7. '   ' → logprob: -13.500096321105957
    8. '        
' → logprob: -14.500096321105957
    9. 'n' → logprob: -14.750096321105957
    10. '<|end|>' → logprob: -15.500096321105957

Token 661: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07970050722360611
    2. 'if' (adapté à ' if') → logprob: -2.579700469970703
    3. ' if' → logprob: -7.454700469970703
    4. 'idx' → logprob: -9.204700469970703
    5. 'next' → logprob: -9.579700469970703
    6. 'n' → logprob: -10.829700469970703
    7. 'pos' → logprob: -11.204700469970703
    8. 'index' → logprob: -12.079700469970703
    9. 'points' → logprob: -12.454700469970703
    10. 'indent' → logprob: -12.579700469970703

Token 662: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.003013119101524353
    2. ' state' → logprob: -5.8780131340026855
    3. 'self' → logprob: -8.628012657165527
    4. '   ' → logprob: -11.003012657165527
    5. '
' → logprob: -12.003012657165527
    6. ' ' → logprob: -13.128012657165527
    7. 'len' → logprob: -13.878012657165527
    8. '    ' → logprob: -14.253012657165527
    9. ' self' → logprob: -14.378012657165527
    10. '  ' → logprob: -14.628012657165527

Token 663: '.all' (ID: 14045)
  Prédit: '.all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.all' → logprob: -0.03510826826095581
    2. '.' → logprob: -3.4101083278656006
    3. '.is' → logprob: -6.6601080894470215
    4. '.t' → logprob: -8.91010856628418
    5. ' .' → logprob: -11.03510856628418
    6. '   ' → logprob: -12.03510856628418
    7. 'all' → logprob: -12.16010856628418
    8. 'taken' → logprob: -12.78510856628418
    9. '.take' → logprob: -13.03510856628418
    10. '.
' → logprob: -13.41010856628418

Token 664: '_taken' (ID: 179958)
  Prédit: '_taken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_taken' → logprob: -0.0012822567950934172
    2. 'taken' → logprob: -7.251282215118408
    3. '(self' → logprob: -7.626282215118408
    4. '(' → logprob: -9.626282691955566
    5. 'self' → logprob: -12.501282691955566
    6. '```' → logprob: -12.626282691955566
    7. '   ' → logprob: -12.751282691955566
    8. 'Taken' → logprob: -13.251282691955566
    9. '_points' → logprob: -13.751282691955566
    10. '(_' → logprob: -14.126282691955566

Token 665: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.129266067640856e-05
    2. '(' → logprob: -10.875020980834961
    3. ' (' → logprob: -13.375020980834961
    4. 'self' → logprob: -15.375020980834961
    5. '(len' → logprob: -15.375020980834961
    6. '(
' → logprob: -15.750020980834961
    7. '       ' → logprob: -16.25002098083496
    8. '[self' → logprob: -17.62502098083496
    9. '(this' → logprob: -17.62502098083496
    10. ' self' → logprob: -17.87502098083496

Token 666: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.004343717824667692
    2. 'self' → logprob: -6.254343509674072
    3. 'n' → logprob: -6.379343509674072
    4. 'points' → logprob: -7.754343509674072
    5. ')' → logprob: -9.00434398651123
    6. '       ' → logprob: -9.25434398651123
    7. '.points' → logprob: -10.37934398651123
    8. '   ' → logprob: -11.25434398651123
    9. ').' → logprob: -12.12934398651123
    10. ')n' → logprob: -12.37934398651123

Token 667: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09231480211019516
    2. '):
' → logprob: -2.4673147201538086
    3. ')' → logprob: -5.717314720153809
    4. '       ' → logprob: -9.967314720153809
    5. '):
' → logprob: -10.967314720153809
    6. ' ):' → logprob: -12.217314720153809
    7. '):

' → logprob: -12.592314720153809
    8. '   ' → logprob: -12.967314720153809
    9. '()):
' → logprob: -13.342314720153809
    10. ')==' → logprob: -13.717314720153809

Token 668: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22000481188297272
    2. ':' → logprob: -1.7200047969818115
    3. ':
' → logprob: -4.470005035400391
    4. '           ' → logprob: -5.345005035400391
    5. ':return' → logprob: -7.345005035400391
    6. ' return' → logprob: -7.470005035400391
    7. 'return' → logprob: -7.720005035400391
    8. ',' → logprob: -8.84500503540039
    9. '<|end|>' → logprob: -9.72000503540039
    10. '):
' → logprob: -9.84500503540039

Token 669: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002136697992682457
    2. '           ' → logprob: -6.252136707305908
    3. ' return' → logprob: -8.50213623046875
    4. '       ' → logprob: -12.37713623046875
    5. '0' → logprob: -15.37713623046875
    6. '   ' → logprob: -15.62713623046875
    7. '
' → logprob: -15.87713623046875
    8. '{return' → logprob: -16.00213623046875
    9. '	return' → logprob: -16.12713623046875
    10. ':return' → logprob: -16.75213623046875

Token 670: ' Base' (ID: 8729)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -2.5776860184123507e-06
    2. ' return' → logprob: -13.50000286102295
    3. '       ' → logprob: -14.62500286102295
    4. '           ' → logprob: -14.75000286102295
    5. '0' → logprob: -15.25000286102295
    6. '
' → logprob: -18.875001907348633
    7. '#' → logprob: -19.500001907348633
    8. 'Return' → logprob: -19.625001907348633
    9. '```' → logprob: -20.000001907348633
    10. '1' → logprob: -20.750001907348633

Token 671: ' case' (ID: 1890)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06560100615024567
    2. 'return' → logprob: -3.315601110458374
    3. ' ' → logprob: -4.440600872039795
    4. 'case' → logprob: -4.940600872039795
    5. ' return' → logprob: -5.815600872039795
    6. ' case' → logprob: -5.940600872039795
    7. '       ' → logprob: -6.190600872039795
    8. '
' → logprob: -8.315601348876953
    9. '1' → logprob: -9.440601348876953
    10. '   ' → logprob: -9.565601348876953

Token 672: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26589757204055786
    2. 'return' → logprob: -1.890897512435913
    3. '           ' → logprob: -2.515897512435913
    4. ' return' → logprob: -6.515897750854492
    5. '0' → logprob: -9.015897750854492
    6. ':' → logprob: -9.640897750854492
    7. ':return' → logprob: -10.515897750854492
    8. '
' → logprob: -10.640897750854492
    9. '        
' → logprob: -11.640897750854492
    10. ',' → logprob: -12.140897750854492

Token 673: ' all' (ID: 722)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0035315363202244043
    2. '           ' → logprob: -6.253531455993652
    3. '0' → logprob: -6.753531455993652
    4. ' return' → logprob: -7.753531455993652
    5. '       ' → logprob: -12.253531455993652
    6. '   ' → logprob: -15.503531455993652
    7. '
' → logprob: -15.753531455993652
    8. '```' → logprob: -15.753531455993652
    9. ':return' → logprob: -16.25353240966797
    10. '{return' → logprob: -16.37853240966797

Token 674: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.021110134199261665
    2. ' points' → logprob: -3.8961100578308105
    3. 'taken' → logprob: -8.021110534667969
    4. ' taken' → logprob: -8.896110534667969
    5. 'paired' → logprob: -9.771110534667969
    6. '       ' → logprob: -11.021110534667969
    7. '```' → logprob: -11.521110534667969
    8. 'pairs' → logprob: -12.146110534667969
    9. '(points' → logprob: -12.646110534667969
    10. ')' → logprob: -12.771110534667969

Token 675: ' paired' (ID: 51892)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.2817124128341675
    2. ' taken' → logprob: -1.2817124128341675
    3. 'taken' → logprob: -1.2817124128341675
    4. 'are' → logprob: -2.406712532043457
    5. 'paired' → logprob: -3.031712532043457
    6. ':' → logprob: -4.031712532043457
    7. ' paired' → logprob: -5.531712532043457
    8. '       ' → logprob: -6.156712532043457
    9. '_taken' → logprob: -6.531712532043457
    10. ' have' → logprob: -7.156712532043457

Token 676: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008292826823890209
    2. 'return' → logprob: -7.750829219818115
    3. '
' → logprob: -9.125829696655273
    4. '           ' → logprob: -9.125829696655273
    5. ' return' → logprob: -9.625829696655273
    6. '        
' → logprob: -10.375829696655273
    7. ':' → logprob: -10.500829696655273
    8. ',' → logprob: -10.500829696655273
    9. ':
' → logprob: -12.000829696655273
    10. ':return' → logprob: -12.625829696655273

Token 677: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0014695111894980073
    2. ' return' → logprob: -6.751469612121582
    3. '           ' → logprob: -8.501469612121582
    4. '       ' → logprob: -9.251469612121582
    5. '   ' → logprob: -16.251468658447266
    6. '               ' → logprob: -17.376468658447266
    7. '	return' → logprob: -17.501468658447266
    8. ' ' → logprob: -17.626468658447266
    9. ':return' → logprob: -18.626468658447266
    10. '
' → logprob: -18.751468658447266

Token 678: ' lines' (ID: 8698)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.46093785762786865
    2. 'lines' → logprob: -1.9609378576278687
    3. 'dire' → logprob: -2.335937976837158
    4. 'additional' → logprob: -3.085937976837158
    5. ' lines' → logprob: -3.835937976837158
    6. 'parallel' → logprob: -4.085937976837158
    7. ' more' → logprob: -4.210937976837158
    8. 'return' → logprob: -5.085937976837158
    9. 'f' → logprob: -5.585937976837158
    10. 'pairs' → logprob: -5.585937976837158

Token 679: ' yet' (ID: 5073)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08165611326694489
    2. '       ' → logprob: -2.5816562175750732
    3. 'return' → logprob: -6.581655979156494
    4. ' return' → logprob: -7.206655979156494
    5. ',' → logprob: -7.956655979156494
    6. ' to' → logprob: -9.331656455993652
    7. ' lines' → logprob: -10.081656455993652
    8. '   ' → logprob: -10.706656455993652
    9. ' and' → logprob: -11.081656455993652
    10. '               ' → logprob: -11.081656455993652

Token 680: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.362289696931839
    2. 'return' → logprob: -1.7372896671295166
    3. '           ' → logprob: -2.1122896671295166
    4. ' return' → logprob: -5.362289905548096
    5. '
' → logprob: -6.737289905548096
    6. ',' → logprob: -7.737289905548096
    7. ':' → logprob: -9.112289428710938
    8. '        
' → logprob: -9.112289428710938
    9. ':
' → logprob: -9.487289428710938
    10. ':return' → logprob: -9.487289428710938

Token 681: ' so' (ID: 813)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001808341359719634
    2. ' return' → logprob: -6.501808166503906
    3. '           ' → logprob: -8.126808166503906
    4. '       ' → logprob: -11.751808166503906
    5. '0' → logprob: -13.751808166503906
    6. '               ' → logprob: -13.876808166503906
    7. ' ' → logprob: -15.626808166503906
    8. '
' → logprob: -16.001808166503906
    9. '   ' → logprob: -16.876808166503906
    10. ':return' → logprob: -16.876808166503906

Token 682: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0014507099986076355
    2. ' return' → logprob: -7.001450538635254
    3. '           ' → logprob: -8.001450538635254
    4. '0' → logprob: -8.501450538635254
    5. '       ' → logprob: -14.251450538635254
    6. ' ' → logprob: -16.37645149230957
    7. '   ' → logprob: -16.75145149230957
    8. '               ' → logprob: -16.87645149230957
    9. '
' → logprob: -17.50145149230957
    10. '         ' → logprob: -18.12645149230957

Token 683: '0' (ID: 15)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005502910353243351
    2. '0' → logprob: -8.250550270080566
    3. ' return' → logprob: -8.250550270080566
    4. '           ' → logprob: -10.500550270080566
    5. '
' → logprob: -15.625550270080566
    6. '       ' → logprob: -16.000551223754883
    7. ' ' → logprob: -18.500551223754883
    8. '   ' → logprob: -18.625551223754883
    9. '{return' → logprob: -19.250551223754883
    10. '1' → logprob: -19.375551223754883

Token 684: ' parallel' (ID: 26697)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06869136542081833
    2. '
' → logprob: -2.8186912536621094
    3. 'return' → logprob: -5.818691253662109
    4. '        
' → logprob: -6.568691253662109
    5. '           ' → logprob: -7.693691253662109
    6. '.' → logprob: -7.818691253662109
    7. '<|end|>' → logprob: -8.44369125366211
    8. ' return' → logprob: -8.81869125366211
    9. ')' → logprob: -8.81869125366211
    10. '   ' → logprob: -8.94369125366211

Token 685: ' pairs' (ID: 24702)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.5171146988868713
    2. 'pairs' → logprob: -1.1421146392822266
    3. 'lines' → logprob: -3.1421146392822266
    4. ' lines' → logprob: -4.392114639282227
    5. '_lines' → logprob: -4.517114639282227
    6. ' pairs' → logprob: -4.642114639282227
    7. '       ' → logprob: -5.017114639282227
    8. '   ' → logprob: -6.642114639282227
    9. ')' → logprob: -8.892114639282227
    10. '           ' → logprob: -9.017114639282227

Token 686: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00258766976185143
    2. '.' → logprob: -7.377587795257568
    3. '           ' → logprob: -7.627587795257568
    4. '
' → logprob: -7.627587795257568
    5. 'return' → logprob: -8.00258731842041
    6. ',' → logprob: -8.37758731842041
    7. '        
' → logprob: -8.75258731842041
    8. '<|end|>' → logprob: -9.37758731842041
    9. '<|end|>' → logprob: -10.12758731842041
    10. ' return' → logprob: -10.62758731842041

Token 687: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004165537189692259
    2. '
' → logprob: -6.7541656494140625
    3. '           ' → logprob: -6.8791656494140625
    4. ':' → logprob: -7.0041656494140625
    5. ':
' → logprob: -8.379165649414062
    6. '\n' → logprob: -8.379165649414062
    7. ',' → logprob: -8.504165649414062
    8. '.' → logprob: -9.129165649414062
    9. 'return' → logprob: -9.629165649414062
    10. '        
' → logprob: -9.879165649414062

Token 688: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -9.253090865968261e-06
    2. '           ' → logprob: -12.250009536743164
    3. ' return' → logprob: -12.500009536743164
    4. '0' → logprob: -14.375009536743164
    5. '       ' → logprob: -15.875009536743164
    6. '{return' → logprob: -19.000009536743164
    7. '```' → logprob: -19.125009536743164
    8. '
' → logprob: -19.250009536743164
    9. ':return' → logprob: -19.625009536743164
    10. ')return' → logprob: -20.375009536743164

Token 689: ' But' (ID: 3072)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00015157493180595338
    2. '           ' → logprob: -8.875151634216309
    3. ' return' → logprob: -11.625151634216309
    4. '       ' → logprob: -13.000151634216309
    5. '{return' → logprob: -16.250150680541992
    6. '#' → logprob: -16.500150680541992
    7. ':return' → logprob: -16.500150680541992
    8. '```' → logprob: -16.750150680541992
    9. 'if' → logprob: -17.125150680541992
    10. ')return' → logprob: -17.500150680541992

Token 690: ' this' (ID: 495)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21312116086483002
    2. ' return' → logprob: -1.8381211757659912
    3. '           ' → logprob: -3.963121175765991
    4. '       ' → logprob: -4.338120937347412
    5. '#' → logprob: -8.46312141418457
    6. ' we' → logprob: -9.08812141418457
    7. 'we' → logprob: -9.33812141418457
    8. ':return' → logprob: -9.71312141418457
    9. ':' → logprob: -9.96312141418457
    10. ',' → logprob: -10.58812141418457

Token 691: ' case' (ID: 1890)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5839521288871765
    2. ' can' → logprob: -2.7089521884918213
    3. ' will' → logprob: -2.9589521884918213
    4. 'return' → logprob: -3.0839521884918213
    5. 'is' → logprob: -3.2089521884918213
    6. 'def' → logprob: -3.4589521884918213
    7. 'means' → logprob: -3.7089521884918213
    8. ' means' → logprob: -4.083951950073242
    9. ' should' → logprob: -4.083951950073242
    10. ' returns' → logprob: -4.208951950073242

Token 692: ' never' (ID: 3779)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34218651056289673
    2. ':' → logprob: -1.717186450958252
    3. ':return' → logprob: -3.717186450958252
    4. 'return' → logprob: -3.842186450958252
    5. ' return' → logprob: -3.967186450958252
    6. ' is' → logprob: -3.967186450958252
    7. ',' → logprob: -4.842186450958252
    8. '           ' → logprob: -5.342186450958252
    9. ':
' → logprob: -6.217186450958252
    10. '
' → logprob: -6.342186450958252

Token 693: ' rec' (ID: 1369)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.2452632635831833
    2. 'returns' → logprob: -2.6202633380889893
    3. ' occurs' → logprob: -2.6202633380889893
    4. 'h' → logprob: -3.4952633380889893
    5. ' returns' → logprob: -4.62026309967041
    6. ' happens' → logprob: -4.99526309967041
    7. 're' → logprob: -5.37026309967041
    8. 'occur' → logprob: -5.37026309967041
    9. 'needs' → logprob: -5.62026309967041
    10. 'return' → logprob: -5.62026309967041

Token 694: 'urses' (ID: 34635)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.4963805377483368
    2. 'urs' → logprob: -1.4963805675506592
    3. 'urses' → logprob: -1.9963805675506592
    4. 'ursed' → logprob: -4.24638032913208
    5. 'urred' → logprob: -4.62138032913208
    6. 'ursion' → logprob: -6.24638032913208
    7. 'def' → logprob: -7.37138032913208
    8. 'urse' → logprob: -7.49638032913208
    9. '```' → logprob: -7.49638032913208
    10. 'u' → logprob: -7.49638032913208

Token 695: ' here' (ID: 2105)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7877712845802307
    2. '
' → logprob: -1.537771224975586
    3. '\n' → logprob: -1.662771224975586
    4. '        
' → logprob: -3.162771224975586
    5. '.' → logprob: -3.662771224975586
    6. ':' → logprob: -3.912771224975586
    7. '<|end|>' → logprob: -4.287771224975586
    8. ',' → logprob: -4.662771224975586
    9. '        ' → logprob: -5.162771224975586
    10. '    
' → logprob: -5.537771224975586

Token 696: ' alone' (ID: 11238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15321969985961914
    2. '        
' → logprob: -2.778219699859619
    3. '
' → logprob: -3.278219699859619
    4. '        ' → logprob: -4.153219699859619
    5. '.' → logprob: -5.278219699859619
    6. '\n' → logprob: -5.403219699859619
    7. ':' → logprob: -5.903219699859619
    8. ',' → logprob: -6.028219699859619
    9. '    
' → logprob: -6.028219699859619
    10. '<|end|>' → logprob: -6.278219699859619

Token 697: ' since' (ID: 3630)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3318004012107849
    2. '       ' → logprob: -1.5818004608154297
    3. '        
' → logprob: -3.7068004608154297
    4. '\n' → logprob: -4.08180046081543
    5. '.' → logprob: -4.83180046081543
    6. ':' → logprob: -5.08180046081543
    7. ',' → logprob: -5.33180046081543
    8. '<|end|>' → logprob: -5.45680046081543
    9. '\' → logprob: -5.70680046081543
    10. '    
' → logprob: -6.08180046081543

Token 698: ' we' (ID: 581)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2259399890899658
    2. 'the' → logprob: -1.3509399890899658
    3. 'we' → logprob: -1.8509399890899658
    4. 'len' → logprob: -2.725939989089966
    5. 'self' → logprob: -2.850939989089966
    6. 'there' → logprob: -3.100939989089966
    7. 'all' → logprob: -3.350939989089966
    8. 'it' → logprob: -3.975939989089966
    9. 'points' → logprob: -4.350939750671387
    10. '#' → logprob: -4.600939750671387

Token 699: ' build' (ID: 3024)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9391655325889587
    2. 'have' → logprob: -1.4391655921936035
    3. 'need' → logprob: -1.5641655921936035
    4. 'are' → logprob: -3.5641655921936035
    5. ' return' → logprob: -3.9391655921936035
    6. 'will' → logprob: -3.9391655921936035
    7. ' need' → logprob: -4.1891655921936035
    8. ' have' → logprob: -4.5641655921936035
    9. 'must' → logprob: -4.9391655921936035
    10. ' are' → logprob: -4.9391655921936035

Token 700: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6979212760925293
    2. 'on' → logprob: -1.5729212760925293
    3. 'up' → logprob: -2.4479212760925293
    4. ' lines' → logprob: -2.8229212760925293
    5. '       ' → logprob: -3.1979212760925293
    6. 'pairs' → logprob: -3.1979212760925293
    7. 'upon' → logprob: -3.3229212760925293
    8. 'from' → logprob: -4.197921276092529
    9. ' on' → logprob: -5.697921276092529
    10. '   ' → logprob: -6.072921276092529

Token 701: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7779014110565186
    2. '       ' → logprob: -0.7779014110565186
    3. '        
' → logprob: -2.7779014110565186
    4. ',' → logprob: -5.652901649475098
    5. '\n' → logprob: -5.652901649475098
    6. '        ' → logprob: -6.027901649475098
    7. '.' → logprob: -6.277901649475098
    8. '    
' → logprob: -6.652901649475098
    9. ':' → logprob: -6.777901649475098
    10. '0' → logprob: -6.777901649475098

Token 702: ' we' (ID: 581)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.18026329576969147
    2. 'pairs' → logprob: -2.0552632808685303
    3. ' we' → logprob: -4.305263519287109
    4. 'points' → logprob: -4.680263519287109
    5. 'lines' → logprob: -5.305263519287109
    6. 'part' → logprob: -6.180263519287109
    7. 'return' → logprob: -6.680263519287109
    8. ' pairs' → logprob: -6.805263519287109
    9. '```' → logprob: -7.430263519287109
    10. 'new' → logprob: -7.430263519287109

Token 703: ' go' (ID: 810)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.17526322603225708
    2. 'build' → logprob: -2.8002631664276123
    3. 'return' → logprob: -3.1752631664276123
    4. 'pair' → logprob: -3.1752631664276123
    5. 'add' → logprob: -5.175263404846191
    6. 'continue' → logprob: -5.800263404846191
    7. ' go' → logprob: -6.800263404846191
    8. 'form' → logprob: -6.925263404846191
    9. 'create' → logprob: -7.050263404846191
    10. 'pro' → logprob: -7.175263404846191

Token 704: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07783505320549011
    2. '        
' → logprob: -3.7028350830078125
    3. '
' → logprob: -3.9528350830078125
    4. ',' → logprob: -4.4528350830078125
    5. '.' → logprob: -4.9528350830078125
    6. '        ' → logprob: -5.3278350830078125
    7. ')' → logprob: -6.0778350830078125
    8. '<|end|>' → logprob: -6.5778350830078125
    9. ':' → logprob: -7.7028350830078125
    10. '    ' → logprob: -7.8278350830078125

Token 705: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008260892704129219
    2. '        
' → logprob: -6.133260726928711
    3. ',' → logprob: -6.258260726928711
    4. '<|end|>' → logprob: -6.883260726928711
    5. '.' → logprob: -7.383260726928711
    6. ':' → logprob: -7.633260726928711
    7. '        ' → logprob: -7.633260726928711
    8. '
' → logprob: -7.883260726928711
    9. ')' → logprob: -8.008260726928711
    10. '```' → logprob: -9.008260726928711

Token 706: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.031742844730615616
    2. '           ' → logprob: -3.781742811203003
    3. ' return' → logprob: -5.281743049621582
    4. '       ' → logprob: -5.906743049621582
    5. '0' → logprob: -7.406743049621582
    6. '   ' → logprob: -11.031743049621582
    7. '```' → logprob: -11.781743049621582
    8. '
' → logprob: -12.031743049621582
    9. '#' → logprob: -12.656743049621582
    10. ':return' → logprob: -12.906743049621582

Token 707: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.750009536743164
    4. '۰' → logprob: -19.875009536743164
    5. ' ' → logprob: -20.000009536743164
    6. '           ' → logprob: -20.250009536743164
    7. '000' → logprob: -20.375009536743164
    8. '       ' → logprob: -20.750009536743164
    9. '```' → logprob: -20.875009536743164
    10. '     ' → logprob: -21.250009536743164

Token 708: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '```' → logprob: -18.375
    3. ' ' → logprob: -18.875
    4. '1' → logprob: -19.875
    5. '``' → logprob: -20.375
    6. 'self' → logprob: -20.375
    7. '۰' → logprob: -20.5
    8. '[' → logprob: -20.75
    9. '(' → logprob: -20.75
    10. '-' → logprob: -21.125

Token 709: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07834542542695999
    2. '        
' → logprob: -3.078345537185669
    3. '<|end|>' → logprob: -3.828345537185669
    4. '
' → logprob: -5.57834529876709
    5. '<|end|>' → logprob: -7.07834529876709
    6. '  
' → logprob: -7.32834529876709
    7. '    
' → logprob: -7.70334529876709
    8. '		
' → logprob: -8.32834529876709
    9. ' ' → logprob: -8.57834529876709
    10. '        ' → logprob: -8.57834529876709

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051018938422203064
    2. 'next' → logprob: -3.5510189533233643
    3. '        
' → logprob: -4.176018714904785
    4. 'i' → logprob: -6.926018714904785
    5. 'idx' → logprob: -7.051018714904785
    6. ' next' → logprob: -7.551018714904785
    7. 'points' → logprob: -7.676018714904785
    8. 'point' → logprob: -8.051018714904785
    9. '    
' → logprob: -8.301018714904785
    10. '   ' → logprob: -8.551018714904785

Token 711: ' if' (ID: 538)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.4778134822845459
    2. '#' → logprob: -1.727813482284546
    3. '       ' → logprob: -2.227813482284546
    4. 'next' → logprob: -2.727813482284546
    5. 'i' → logprob: -4.102813720703125
    6. 'idx' → logprob: -4.727813720703125
    7. 'min' → logprob: -6.727813720703125
    8. 'start' → logprob: -7.102813720703125
    9. 'taken' → logprob: -8.102813720703125
    10. 'index' → logprob: -8.227813720703125

Token 712: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.004104165825992823
    2. '(state' → logprob: -6.254104137420654
    3. 'len' → logprob: -6.754104137420654
    4. 'next' → logprob: -8.254104614257812
    5. ' state' → logprob: -8.379104614257812
    6. 'list' → logprob: -9.129104614257812
    7. 'any' → logprob: -9.379104614257812
    8. 'tuple' → logprob: -9.629104614257812
    9. '(' → logprob: -9.879104614257812
    10. 'all' → logprob: -10.504104614257812

Token 713: '.t' (ID: 1370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.46560266613960266
    2. '.is' → logprob: -2.0906026363372803
    3. 'taken' → logprob: -2.3406026363372803
    4. '.all' → logprob: -3.0906026363372803
    5. '_taken' → logprob: -3.4656026363372803
    6. ' in' → logprob: -4.090602874755859
    7. 't' → logprob: -4.965602874755859
    8. 'Taken' → logprob: -5.215602874755859
    9. ':' → logprob: -5.340602874755859
    10. '.t' → logprob: -5.340602874755859

Token 714: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.00045783669338561594
    2. '_taken' → logprob: -8.625457763671875
    3. 'taken' → logprob: -9.125457763671875
    4. 'a' → logprob: -9.500457763671875
    5. 'ake' → logprob: -10.250457763671875
    6. 'ak' → logprob: -11.125457763671875
    7. '_' → logprob: -11.625457763671875
    8. '```' → logprob: -12.125457763671875
    9. '#' → logprob: -12.250457763671875
    10. '__' → logprob: -12.625457763671875

Token 715: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -2.15310683415737e-05
    2. 'mask' → logprob: -11.625021934509277
    3. '==' → logprob: -12.000021934509277
    4. '_' → logprob: -12.250021934509277
    5. '_MASK' → logprob: -14.500021934509277
    6. '_masks' → logprob: -15.250021934509277
    7. '&' → logprob: -15.750021934509277
    8. '```' → logprob: -15.875021934509277
    9. '_m' → logprob: -16.00002098083496
    10. ' ==' → logprob: -16.12502098083496

Token 716: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04317046329379082
    2. ' ==' → logprob: -3.16817045211792
    3. '==
' → logprob: -9.918170928955078
    4. '!=' → logprob: -10.293170928955078
    5. '>=' → logprob: -10.418170928955078
    6. '>' → logprob: -11.543170928955078
    7. '==(' → logprob: -11.543170928955078
    8. '=' → logprob: -11.918170928955078
    9. ')' → logprob: -12.043170928955078
    10. '&' → logprob: -12.293170928955078

Token 717: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004080062732100487
    2. ' self' → logprob: -5.504080295562744
    3. '       ' → logprob: -13.504079818725586
    4. '(self' → logprob: -15.879079818725586
    5. '[self' → logprob: -16.379079818725586
    6. '
' → logprob: -17.754079818725586
    7. '=self' → logprob: -17.879079818725586
    8. '	self' → logprob: -17.879079818725586
    9. ')' → logprob: -18.379079818725586
    10. '           ' → logprob: -18.504079818725586

Token 718: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.07557959109544754
    2. 'memo' → logprob: -2.8255796432495117
    3. 'self' → logprob: -4.325579643249512
    4. ' memo' → logprob: -9.075579643249512
    5. '.' → logprob: -9.450579643249512
    6. '.self' → logprob: -10.700579643249512
    7. '.mem' → logprob: -10.950579643249512
    8. ' self' → logprob: -11.075579643249512
    9. '       ' → logprob: -11.200579643249512
    10. '.memory' → logprob: -11.575579643249512

Token 719: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004933562595397234
    2. ':
' → logprob: -5.6299333572387695
    3. ':return' → logprob: -7.5049333572387695
    4. '):' → logprob: -8.12993335723877
    5. '==' → logprob: -9.37993335723877
    6. ' ==' → logprob: -9.50493335723877
    7. ')' → logprob: -9.62993335723877
    8. '<|end|>' → logprob: -9.62993335723877
    9. '       ' → logprob: -10.00493335723877
    10. '):
' → logprob: -10.25493335723877

Token 720: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6757879853248596
    2. '           ' → logprob: -0.8007879853248596
    3. ':' → logprob: -3.300787925720215
    4. 'return' → logprob: -6.050787925720215
    5. ':
' → logprob: -6.800787925720215
    6. ' return' → logprob: -6.925787925720215
    7. ':return' → logprob: -7.550787925720215
    8. ',' → logprob: -8.800787925720215
    9. '   ' → logprob: -9.925787925720215
    10. '<|end|>' → logprob: -10.800787925720215

Token 721: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000318065780447796
    2. '           ' → logprob: -8.75031852722168
    3. ' return' → logprob: -8.75031852722168
    4. '       ' → logprob: -13.87531852722168
    5. '   ' → logprob: -16.75031852722168
    6. '	return' → logprob: -16.87531852722168
    7. '{return' → logprob: -17.12531852722168
    8. ':return' → logprob: -17.12531852722168
    9. '```' → logprob: -17.37531852722168
    10. '
' → logprob: -17.62531852722168

Token 722: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001584850688232109
    2. ' self' → logprob: -8.750158309936523
    3. '[self' → logprob: -17.625158309936523
    4. '(self' → logprob: -18.375158309936523
    5. '
' → logprob: -18.500158309936523
    6. '=self' → logprob: -19.000158309936523
    7. '	self' → logprob: -19.125158309936523
    8. '_self' → logprob: -20.125158309936523
    9. '0' → logprob: -21.125158309936523
    10. 'Self' → logprob: -21.250158309936523

Token 723: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -9.078839502763003e-05
    2. '.' → logprob: -9.500090599060059
    3. '.mem' → logprob: -11.750090599060059
    4. ' .' → logprob: -12.875090599060059
    5. 'memo' → logprob: -13.000090599060059
    6. '.memory' → logprob: -13.875090599060059
    7. '.m' → logprob: -14.125090599060059
    8. '.t' → logprob: -15.250090599060059
    9. '.mime' → logprob: -15.375090599060059
    10. '.mu' → logprob: -15.625090599060059

Token 724: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. '(state' → logprob: -16.25
    4. 'state' → logprob: -16.375
    5. '[
' → logprob: -19.875
    6. '```' → logprob: -20.0
    7. '[self' → logprob: -20.125
    8. '[node' → logprob: -20.625
    9. ',state' → logprob: -20.875
    10. '[next' → logprob: -21.375

Token 725: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.00016325322212651372
    2. '_mask' → logprob: -9.250163078308105
    3. '.state' → logprob: -10.625163078308105
    4. ']' → logprob: -11.500163078308105
    5. '   ' → logprob: -12.000163078308105
    6. '.' → logprob: -12.125163078308105
    7. '.mask' → logprob: -12.375163078308105
    8. ')' → logprob: -12.500163078308105
    9. 'state' → logprob: -13.000163078308105
    10. '       ' → logprob: -13.250163078308105

Token 726: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.03294233977794647
    2. 'taken' → logprob: -3.532942295074463
    3. '_taken' → logprob: -7.032942295074463
    4. 'ken' → logprob: -7.407942295074463
    5. '.t' → logprob: -7.657942295074463
    6. 't' → logprob: -7.782942295074463
    7. '```' → logprob: -9.032942771911621
    8. 'ak' → logprob: -9.907942771911621
    9. 'Taken' → logprob: -10.157942771911621
    10. '[' → logprob: -10.157942771911621

Token 727: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0033147193025797606
    2. 'mask' → logprob: -5.75331449508667
    3. ')' → logprob: -9.878314971923828
    4. '_state' → logprob: -10.378314971923828
    5. '_MASK' → logprob: -10.503314971923828
    6. ']' → logprob: -12.003314971923828
    7. '_masks' → logprob: -12.378314971923828
    8. 'state' → logprob: -12.628314971923828
    9. '   ' → logprob: -12.628314971923828
    10. '_' → logprob: -12.878314971923828

Token 728: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0387142188847065
    2. ']' → logprob: -3.2887141704559326
    3. ')
' → logprob: -7.913714408874512
    4. '       ' → logprob: -8.663714408874512
    5. ' )' → logprob: -10.288714408874512
    6. ')]' → logprob: -10.288714408874512
    7. '])' → logprob: -10.413714408874512
    8. ']
' → logprob: -11.663714408874512
    9. '   ' → logprob: -11.788714408874512
    10. '}' → logprob: -11.913714408874512

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001642334507778287
    2. 'next' → logprob: -7.251642227172852
    3. '        
' → logprob: -7.501642227172852
    4. '```' → logprob: -9.376642227172852
    5. 'first' → logprob: -9.501642227172852
    6. 'points' → logprob: -9.626642227172852
    7. 'idx' → logprob: -10.126642227172852
    8. ' next' → logprob: -10.626642227172852
    9. 'point' → logprob: -11.376642227172852
    10. 'index' → logprob: -11.501642227172852

Token 730: ' #' (ID: 1069)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.18326056003570557
    2. '#' (adapté à ' #') → logprob: -2.183260440826416
    3. 'min' → logprob: -3.558260440826416
    4. 'idx' → logprob: -4.808260440826416
    5. '       ' → logprob: -4.933260440826416
    6. 'next' → logprob: -5.058260440826416
    7. 'best' → logprob: -6.308260440826416
    8. 'start' → logprob: -7.308260440826416
    9. 'i' → logprob: -7.558260440826416
    10. 'points' → logprob: -7.808260440826416

Token 731: ' Find' (ID: 9764)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.24602505564689636
    2. '#' → logprob: -1.9960250854492188
    3. 'min' → logprob: -2.6210250854492188
    4. 'idx' → logprob: -5.871025085449219
    5. 'i' → logprob: -6.371025085449219
    6. 'next' → logprob: -6.746025085449219
    7. 'result' → logprob: -7.121025085449219
    8. 'un' → logprob: -7.121025085449219
    9. 'ans' → logprob: -7.621025085449219
    10. 'best' → logprob: -7.621025085449219

Token 732: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.033897291868925095
    2. 'next' → logprob: -4.158897399902344
    3. ' first' → logprob: -4.533897399902344
    4. 'the' → logprob: -5.908897399902344
    5. 'i' → logprob: -6.408897399902344
    6. 'for' → logprob: -6.908897399902344
    7. 'idx' → logprob: -7.283897399902344
    8. ' next' → logprob: -7.533897399902344
    9. 'lowest' → logprob: -9.158897399902344
    10. ' the' → logprob: -9.533897399902344

Token 733: ' unt' (ID: 8222)
  Prédit: 'unt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unt' → logprob: -0.12527824938297272
    2. '_free' → logprob: -2.6252782344818115
    3. 'i' → logprob: -4.250278472900391
    4. 'idx' → logprob: -4.375278472900391
    5. '_taken' → logprob: -5.250278472900391
    6. 'free' → logprob: -5.750278472900391
    7. '_idx' → logprob: -6.125278472900391
    8. '_' → logprob: -6.500278472900391
    9. '_unused' → logprob: -6.500278472900391
    10. 'unused' → logprob: -6.875278472900391

Token 734: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.00636089313775301
    2. 'a' → logprob: -5.13136100769043
    3. 'ak' → logprob: -8.75636100769043
    4. 'ake' → logprob: -9.38136100769043
    5. '```' → logprob: -10.13136100769043
    6. '_' → logprob: -10.25636100769043
    7. '       ' → logprob: -10.88136100769043
    8. '_a' → logprob: -11.00636100769043
    9. '_taken' → logprob: -11.13136100769043
    10. '   ' → logprob: -11.38136100769043

Token 735: ' point' (ID: 2438)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.021276555955410004
    2. '_index' → logprob: -4.271276473999023
    3. '_' → logprob: -5.396276473999023
    4. '_point' → logprob: -6.521276473999023
    5. 'idx' → logprob: -7.521276473999023
    6. ' idx' → logprob: -8.521276473999023
    7. '_i' → logprob: -8.521276473999023
    8. ' =' → logprob: -9.896276473999023
    9. '	idx' → logprob: -11.521276473999023
    10. '```' → logprob: -11.521276473999023

Token 736: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7362525463104248
    2. ' i' → logprob: -1.2362525463104248
    3. 'i' → logprob: -2.236252546310425
    4. ' for' → logprob: -2.486252546310425
    5. 'idx' → logprob: -4.111252784729004
    6. ' idx' → logprob: -4.736252784729004
    7. '        
' → logprob: -5.486252784729004
    8. 'for' → logprob: -6.236252784729004
    9. '```' → logprob: -6.736252784729004
    10. ',' → logprob: -6.986252784729004

Token 737: ' pairing' (ID: 79656)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018195712938904762
    2. 'idx' → logprob: -4.768195629119873
    3. 'pair' → logprob: -5.768195629119873
    4. ' i' → logprob: -6.143195629119873
    5. ' pairing' → logprob: -6.518195629119873
    6. 'p' → logprob: -7.143195629119873
    7. 'next' → logprob: -7.393195629119873
    8. 'x' → logprob: -8.018196105957031
    9. 'index' → logprob: -8.268196105957031
    10. ' idx' → logprob: -8.518196105957031

Token 738: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5810353755950928
    2. '
' → logprob: -1.2060353755950928
    3. 'i' → logprob: -2.7060353755950928
    4. ' for' → logprob: -3.3310353755950928
    5. ' i' → logprob: -4.206035614013672
    6. 'for' → logprob: -4.831035614013672
    7. 'idx' → logprob: -4.956035614013672
    8. '        
' → logprob: -5.331035614013672
    9. ' idx' → logprob: -6.081035614013672
    10. ' first' → logprob: -8.081035614013672

Token 739: ' reduce' (ID: 10389)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.716046154499054
    2. 'pair' → logprob: -1.3410460948944092
    3. 'opt' → logprob: -1.9660460948944092
    4. ' pair' → logprob: -3.591046094894409
    5. 'reduce' → logprob: -3.716046094894409
    6. 'speed' → logprob: -4.591046333312988
    7. 'save' → logprob: -4.591046333312988
    8. ' start' → logprob: -5.216046333312988
    9. 'avoid' → logprob: -5.216046333312988
    10. 'consider' → logprob: -5.466046333312988

Token 740: ' complexity' (ID: 37588)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.0248470306396484
    2. ' complexity' → logprob: -1.1498470306396484
    3. 'index' → logprob: -3.0248470306396484
    4. ' the' → logprob: -3.1498470306396484
    5. 'search' → logprob: -3.1498470306396484
    6. 'i' → logprob: -3.2748470306396484
    7. ' idx' → logprob: -3.5248470306396484
    8. 'the' → logprob: -3.6498470306396484
    9. ' overhead' → logprob: -3.6498470306396484
    10. 'complex' → logprob: -4.524847030639648

Token 741: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7381414771080017
    2. ' i' → logprob: -1.6131415367126465
    3. ' for' → logprob: -1.8631415367126465
    4. 'i' → logprob: -2.4881415367126465
    5. ' idx' → logprob: -3.2381415367126465
    6. '        
' → logprob: -3.8631415367126465
    7. 'idx' → logprob: -4.6131415367126465
    8. '
' → logprob: -5.1131415367126465
    9. 'for' → logprob: -5.6131415367126465
    10. ' first' → logprob: -6.8631415367126465

Token 742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11656567454338074
    2. ' i' → logprob: -3.116565704345703
    3. 'i' → logprob: -3.741565704345703
    4. ' for' → logprob: -3.741565704345703
    5. '
' → logprob: -4.866565704345703
    6. '        
' → logprob: -5.616565704345703
    7. 'idx' → logprob: -6.366565704345703
    8. ' idx' → logprob: -6.366565704345703
    9. 'for' → logprob: -7.366565704345703
    10. '```' → logprob: -7.366565704345703

Token 743: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.3845820128917694
    2. 'for' → logprob: -1.6345820426940918
    3. 'i' → logprob: -2.884582042694092
    4. ' first' → logprob: -3.134582042694092
    5. 'idx' → logprob: -4.509582042694092
    6. ' for' → logprob: -5.134582042694092
    7. '       ' → logprob: -5.759582042694092
    8. ' idx' → logprob: -6.009582042694092
    9. ' i' → logprob: -6.259582042694092
    10. 'p' → logprob: -9.009581565856934

Token 744: ' =' (ID: 314)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.1447799950838089
    2. '_point' → logprob: -2.644779920578003
    3. '_' → logprob: -3.769779920578003
    4. '_un' → logprob: -3.894779920578003
    5. '_unused' → logprob: -5.144780158996582
    6. '_pt' → logprob: -5.519780158996582
    7. '_free' → logprob: -5.769780158996582
    8. '_index' → logprob: -6.519780158996582
    9. '_i' → logprob: -6.519780158996582
    10. '_taken' → logprob: -6.519780158996582

Token 745: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18113790452480316
    2. 'next' → logprob: -1.8061379194259644
    3. 'None' → logprob: -7.056138038635254
    4. 'min' → logprob: -8.806138038635254
    5. ' next' → logprob: -8.931138038635254
    6. '(next' → logprob: -9.306138038635254
    7. '[next' → logprob: -9.806138038635254
    8. '-' → logprob: -9.806138038635254
    9. '[' → logprob: -10.556138038635254
    10. '
' → logprob: -11.556138038635254

Token 746: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013755358755588531
    2. 'for' → logprob: -4.5137553215026855
    3. ' for' → logprob: -6.0137553215026855
    4. '
' → logprob: -8.388755798339844
    5. '        
' → logprob: -12.388755798339844
    6. '0' → logprob: -12.513755798339844
    7. '=' → logprob: -12.638755798339844
    8. '	for' → logprob: -13.013755798339844
    9. '<|end|>' → logprob: -13.013755798339844
    10. 'None' → logprob: -13.138755798339844

Token 747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3282053768634796
    2. ' for' → logprob: -2.2032053470611572
    3. 'for' → logprob: -2.8282053470611572
    4. '
' → logprob: -2.9532053470611572
    5. ' =' → logprob: -3.0782053470611572
    6. '=' → logprob: -4.703205585479736
    7. '
' → logprob: -6.328205585479736
    8. ':' → logprob: -8.328205108642578
    9. ' 
' → logprob: -8.328205108642578
    10. '0' → logprob: -8.703205108642578

Token 748: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014259763062000275
    2. ' for' → logprob: -4.2642598152160645
    3. '       ' → logprob: -9.264259338378906
    4. 'n' → logprob: -14.264259338378906
    5. '
' → logprob: -14.889259338378906
    6. '0' → logprob: -15.764259338378906
    7. 'next' → logprob: -16.139259338378906
    8. '	for' → logprob: -16.639259338378906
    9. '```' → logprob: -17.264259338378906
    10. '        
' → logprob: -18.889259338378906

Token 749: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1269560307264328
    2. 'idx' → logprob: -2.126955986022949
    3. ' idx' → logprob: -10.87695598602295
    4. ' i' → logprob: -11.62695598602295
    5. 'index' → logprob: -16.501956939697266
    6. '`' → logprob: -17.626956939697266
    7. '```' → logprob: -17.751956939697266
    8. '   ' → logprob: -17.876956939697266
    9. '	idx' → logprob: -18.376956939697266
    10. '_idx' → logprob: -18.501956939697266

Token 750: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062024373561143875
    2. 'in' → logprob: -2.8120243549346924
    3. ' ' → logprob: -10.312024116516113
    4. ',' → logprob: -10.812024116516113
    5. ' i' → logprob: -13.562024116516113
    6. 'i' → logprob: -14.562024116516113
    7. ' ,' → logprob: -14.812024116516113
    8. '	in' → logprob: -15.187024116516113
    9. ' ' → logprob: -16.31202507019043
    10. '=' → logprob: -16.31202507019043

Token 751: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -18.000261306762695
    4. '	range' → logprob: -18.500261306762695
    5. '
' → logprob: -18.625261306762695
    6. '   ' → logprob: -19.375261306762695
    7. ' ' → logprob: -20.500261306762695
    8. ')' → logprob: -20.500261306762695
    9. 'rang' → logprob: -20.500261306762695
    10. '

' → logprob: -20.625261306762695

Token 752: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.47567933797836304
    2. 'self' → logprob: -0.975679337978363
    3. '0' → logprob: -6.975679397583008
    4. ' self' → logprob: -7.600679397583008
    5. '(' → logprob: -9.725679397583008
    6. '       ' → logprob: -10.225679397583008
    7. 's' → logprob: -10.350679397583008
    8. '1' → logprob: -11.225679397583008
    9. '
' → logprob: -12.100679397583008
    10. '   ' → logprob: -12.850679397583008

Token 753: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -2.939851037808694e-05
    2. 'n' → logprob: -10.625029563903809
    3. 'self' → logprob: -12.875029563903809
    4. '.' → logprob: -13.500029563903809
    5. ' .' → logprob: -15.000029563903809
    6. ').' → logprob: -15.625029563903809
    7. 'points' → logprob: -15.875029563903809
    8. '_n' → logprob: -15.875029563903809
    9. '       ' → logprob: -16.125028610229492
    10. ')' → logprob: -17.125028610229492

Token 754: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03366011008620262
    2. '):' → logprob: -3.4086601734161377
    3. '):
' → logprob: -12.408659934997559
    4. '):

' → logprob: -13.033659934997559
    5. ' ):
' → logprob: -13.033659934997559
    6. ':
' → logprob: -13.408659934997559
    7. '       ' → logprob: -13.533659934997559
    8. ':' → logprob: -13.658659934997559
    9. '():
' → logprob: -14.408659934997559
    10. 'if' → logprob: -15.033659934997559

Token 755: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00029232146334834397
    2. ' if' → logprob: -8.750292778015137
    3. ':' → logprob: -10.000292778015137
    4. ':
' → logprob: -10.875292778015137
    5. 'if' → logprob: -11.500292778015137
    6. ',' → logprob: -11.500292778015137
    7. '	       ' → logprob: -11.625292778015137
    8. '<|end|>' → logprob: -11.875292778015137
    9. '       ' → logprob: -12.500292778015137
    10. '		' → logprob: -12.500292778015137

Token 756: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46982890367507935
    2. 'if' (adapté à ' if') → logprob: -1.0948288440704346
    3. ' if' → logprob: -3.2198288440704346
    4. '	       ' → logprob: -8.719828605651855
    5. '               ' → logprob: -9.219828605651855
    6. '   ' → logprob: -11.594828605651855
    7. 'If' → logprob: -11.969828605651855
    8. '		' → logprob: -11.969828605651855
    9. '            ' → logprob: -12.094828605651855
    10. '          ' → logprob: -12.219828605651855

Token 757: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.08895223587751389
    2. ' not' → logprob: -2.4639523029327393
    3. '(not' → logprob: -12.21395206451416
    4. '
' → logprob: -12.83895206451416
    5. 'state' → logprob: -13.46395206451416
    6. '!' → logprob: -13.46395206451416
    7. 'n' → logprob: -14.21395206451416
    8. '   ' → logprob: -14.33895206451416
    9. '	not' → logprob: -14.58895206451416
    10. '           ' → logprob: -15.08895206451416

Token 758: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0009131324477493763
    2. ' state' → logprob: -7.000913143157959
    3. '(state' → logprob: -13.3759126663208
    4. ',state' → logprob: -18.250913619995117
    5. ')' → logprob: -18.375913619995117
    6. '[state' → logprob: -18.375913619995117
    7. '	state' → logprob: -18.625913619995117
    8. '.state' → logprob: -18.750913619995117
    9. '
' → logprob: -19.375913619995117
    10. ' ' → logprob: -19.750913619995117

Token 759: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0003987336531281471
    2. '.' → logprob: -8.250398635864258
    3. '.t' → logprob: -10.250398635864258
    4. ').' → logprob: -10.625398635864258
    5. 'is' → logprob: -10.750398635864258
    6. ' .' → logprob: -11.125398635864258
    7. '_taken' → logprob: -11.125398635864258
    8. '.take' → logprob: -11.625398635864258
    9. 'taken' → logprob: -12.375398635864258
    10. '].' → logprob: -13.000398635864258

Token 760: '_taken' (ID: 179958)
  Prédit: '_taken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_taken' → logprob: -0.00038038729690015316
    2. 'taken' → logprob: -7.875380516052246
    3. ' taken' → logprob: -15.750380516052246
    4. 'Taken' → logprob: -16.12537956237793
    5. '```' → logprob: -17.00037956237793
    6. '_first' → logprob: -17.75037956237793
    7. 'i' → logprob: -18.25037956237793
    8. '_take' → logprob: -18.37537956237793
    9. '_given' → logprob: -18.62537956237793
    10. '
' → logprob: -18.62537956237793

Token 761: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -14.62500286102295
    4. '(
' → logprob: -18.000001907348633
    5. '```' → logprob: -18.625001907348633
    6. ')' → logprob: -19.125001907348633
    7. '(ii' → logprob: -19.625001907348633
    8. 'i' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.125001907348633
    10. '[i' → logprob: -20.250001907348633

Token 762: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10026512295007706
    2. '):' → logprob: -2.3502650260925293
    3. ':' → logprob: -10.850265502929688
    4. '):
' → logprob: -10.975265502929688
    5. ')' → logprob: -11.850265502929688
    6. '):

' → logprob: -12.100265502929688
    7. ' ):
' → logprob: -12.725265502929688
    8. ':
' → logprob: -12.850265502929688
    9. '           ' → logprob: -13.350265502929688
    10. ' ):' → logprob: -14.100265502929688

Token 763: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06535045057535172
    2. ':' → logprob: -3.3153505325317383
    3. ':
' → logprob: -3.8153505325317383
    4. '           ' → logprob: -6.315350532531738
    5. ':first' → logprob: -6.315350532531738
    6. ' first' → logprob: -7.690350532531738
    7. 'first' → logprob: -7.690350532531738
    8. '[first' → logprob: -8.315350532531738
    9. '(first' → logprob: -9.815350532531738
    10. '):
' → logprob: -10.440350532531738

Token 764: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.09042975306510925
    2. '               ' → logprob: -2.8404297828674316
    3. ' first' → logprob: -3.5904297828674316
    4. '           ' → logprob: -7.840429782867432
    5. '	first' → logprob: -9.840429306030273
    6. '[first' → logprob: -11.215429306030273
    7. '                   ' → logprob: -12.215429306030273
    8. ':first' → logprob: -12.965429306030273
    9. '
' → logprob: -13.090429306030273
    10. '(first' → logprob: -13.340429306030273

Token 765: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759469270706177
    2. ' =' → logprob: -0.8259469270706177
    3. '=
' → logprob: -12.450946807861328
    4. ' =
' → logprob: -13.825946807861328
    5. '=i' → logprob: -14.200946807861328
    6. '=None' → logprob: -14.450946807861328
    7. ' ' → logprob: -15.075946807861328
    8. ':' → logprob: -15.450946807861328
    9. '=

' → logprob: -15.950946807861328
    10. '<|end|>' → logprob: -16.075946807861328

Token 766: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.836499985889532e-05
    2. ' i' → logprob: -9.7500581741333
    3. '	i' → logprob: -19.500059127807617
    4. '_i' → logprob: -21.625059127807617
    5. '[i' → logprob: -21.750059127807617
    6. ')i' → logprob: -21.750059127807617
    7. '
' → logprob: -22.250059127807617
    8. '           ' → logprob: -22.500059127807617
    9. '(i' → logprob: -22.625059127807617
    10. '=i' → logprob: -22.750059127807617

Token 767: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.05499910004437e-05
    2. '           ' → logprob: -10.125090599060059
    3. '                
' → logprob: -10.750090599060059
    4. '<|end|>' → logprob: -11.000090599060059
    5. '                   ' → logprob: -13.375090599060059
    6. ',' → logprob: -13.625090599060059
    7. '<|end|>' → logprob: -13.750090599060059
    8. '            
' → logprob: -13.750090599060059
    9. '                ' → logprob: -13.875090599060059
    10. '
' → logprob: -14.000090599060059

Token 768: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001475220051361248
    2. '           ' → logprob: -8.875147819519043
    3. '       ' → logprob: -12.875147819519043
    4. '                
' → logprob: -12.875147819519043
    5. '                   ' → logprob: -14.500147819519043
    6. '            
' → logprob: -15.375147819519043
    7. '                ' → logprob: -15.625147819519043
    8. '              ' → logprob: -15.625147819519043
    9. '        
' → logprob: -15.625147819519043
    10. '			' → logprob: -15.625147819519043

Token 769: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011451075784862041
    2. 'break' (adapté à ' break') → logprob: -4.761451244354248
    3. ' break' → logprob: -5.886451244354248
    4. '           ' → logprob: -10.01145076751709
    5. '                   ' → logprob: -12.76145076751709
    6. '                
' → logprob: -13.13645076751709
    7. '	break' → logprob: -13.26145076751709
    8. ' ' → logprob: -13.88645076751709
    9. '       ' → logprob: -14.26145076751709
    10. '			' → logprob: -14.38645076751709

Token 770: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0063188509084284306
    2. '<|end|>' → logprob: -5.756319046020508
    3. '        
' → logprob: -6.006319046020508
    4. '<|end|>' → logprob: -8.631319046020508
    5. '
' → logprob: -8.881319046020508
    6. '        ' → logprob: -9.256319046020508
    7. ',' → logprob: -9.756319046020508
    8. '  
' → logprob: -9.881319046020508
    9. ' 
' → logprob: -10.881319046020508
    10. '	' → logprob: -11.006319046020508

Token 771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035119298845529556
    2. ' for' → logprob: -7.503511905670166
    3. 'next' → logprob: -7.753511905670166
    4. 'result' → logprob: -8.128512382507324
    5. ' lines' → logprob: -8.253512382507324
    6. '        
' → logprob: -8.253512382507324
    7. ' if' → logprob: -8.253512382507324
    8. 'for' → logprob: -8.253512382507324
    9. ' next' → logprob: -8.253512382507324
    10. '
' → logprob: -8.878512382507324

Token 772: ' max' (ID: 2999)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -1.0368884801864624
    2. 'max' (adapté à ' max') → logprob: -1.5368884801864624
    3. 'result' → logprob: -1.7868884801864624
    4. 'best' → logprob: -2.411888599395752
    5. 'pairs' → logprob: -2.786888599395752
    6. 'res' → logprob: -3.036888599395752
    7. 'lines' → logprob: -3.661888599395752
    8. '       ' → logprob: -4.036888599395752
    9. 'ans' → logprob: -5.411888599395752
    10. 'points' → logprob: -5.911888599395752

Token 773: '_parallel' (ID: 152364)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.3402085602283478
    2. '_parallel' → logprob: -2.0902085304260254
    3. '_count' → logprob: -2.5902085304260254
    4. '_result' → logprob: -2.5902085304260254
    5. '_score' → logprob: -4.590208530426025
    6. '_value' → logprob: -5.840208530426025
    7. '_' → logprob: -7.340208530426025
    8. '_total' → logprob: -7.715208530426025
    9. '_val' → logprob: -7.965208530426025
    10. '_res' → logprob: -9.715209007263184

Token 774: ' =' (ID: 314)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.003861831733956933
    2. '_count' → logprob: -5.878861904144287
    3. '_' → logprob: -7.753861904144287
    4. ' =' → logprob: -8.253861427307129
    5. '=' → logprob: -9.003861427307129
    6. '_lines' → logprob: -9.253861427307129
    7. '_parallel' → logprob: -9.253861427307129
    8. 's' → logprob: -10.628861427307129
    9. 'pairs' → logprob: -11.878861427307129
    10. '_pair' → logprob: -12.628861427307129

Token 775: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020154789090156555
    2. ' ' → logprob: -6.627015590667725
    3. '-' → logprob: -7.377015590667725
    4. ' -' → logprob: -10.002015113830566
    5. '       ' → logprob: -11.502015113830566
    6. '           ' → logprob: -12.752015113830566
    7. 'float' → logprob: -13.127015113830566
    8. '   ' → logprob: -13.502015113830566
    9. 'self' → logprob: -14.002015113830566
    10. ' self' → logprob: -14.502015113830566

Token 776: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009961363859474659
    2. '-' → logprob: -4.634961128234863
    3. 'float' → logprob: -8.509961128234863
    4. '-f' → logprob: -14.134961128234863
    5. '-s' → logprob: -14.259961128234863
    6. '-p' → logprob: -14.759961128234863
    7. '-(' → logprob: -15.384961128234863
    8. ' -' → logprob: -15.384961128234863
    9. '-m' → logprob: -15.509961128234863
    10. 'self' → logprob: -15.759961128234863

Token 777: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01616070605814457
    2. '        
' → logprob: -4.766160488128662
    3. '
' → logprob: -5.391160488128662
    4. ',' → logprob: -7.016160488128662
    5. '<|end|>' → logprob: -7.141160488128662
    6. '	' → logprob: -8.26616096496582
    7. '    
' → logprob: -8.51616096496582
    8. '   ' → logprob: -9.01616096496582
    9. '		
' → logprob: -9.39116096496582
    10. ' ' → logprob: -9.76616096496582

Token 778: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014480947284027934
    2. '
' → logprob: -6.876448154449463
    3. '        
' → logprob: -8.751447677612305
    4. 'for' → logprob: -8.876447677612305
    5. '   ' → logprob: -10.001447677612305
    6. ' for' → logprob: -10.251447677612305
    7. '	' → logprob: -11.376447677612305
    8. '    
' → logprob: -11.751447677612305
    9. '           ' → logprob: -12.876447677612305
    10. '	   ' → logprob: -13.501447677612305

Token 779: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.484393447637558
    2. 'dire' → logprob: -1.3593934774398804
    3. '       ' → logprob: -2.234393358230591
    4. ' for' → logprob: -4.85939359664917
    5. 'unt' → logprob: -5.35939359664917
    6. 'points' → logprob: -5.60939359664917
    7. ' directions' → logprob: -6.60939359664917
    8. 'pairs' → logprob: -7.35939359664917
    9. 'lines' → logprob: -7.73439359664917
    10. 'un' → logprob: -8.109393119812012

Token 780: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18876294791698456
    2. 'unt' → logprob: -2.563762903213501
    3. 'dire' → logprob: -2.688762903213501
    4. '       ' → logprob: -4.06376314163208
    5. 'un' → logprob: -6.43876314163208
    6. ' for' → logprob: -6.68876314163208
    7. 'taken' → logprob: -6.81376314163208
    8. 'points' → logprob: -7.06376314163208
    9. 'remaining' → logprob: -7.18876314163208
    10. 'rest' → logprob: -7.18876314163208

Token 781: ' pairing' (ID: 79656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6989244222640991
    2. ' for' → logprob: -0.8239244222640991
    3. ':' → logprob: -3.4489245414733887
    4. 'for' → logprob: -4.323924541473389
    5. ' to' → logprob: -4.823924541473389
    6. ' all' → logprob: -5.573924541473389
    7. '   ' → logprob: -6.073924541473389
    8. ':
' → logprob: -6.948924541473389
    9. '            ' → logprob: -7.198924541473389
    10. 'to' → logprob: -7.323924541473389

Token 782: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.46029284596443176
    2. 'first' → logprob: -1.0852928161621094
    3. ' for' → logprob: -4.210292816162109
    4. 'for' → logprob: -4.710292816162109
    5. '(first' → logprob: -5.210292816162109
    6. ' i' → logprob: -7.335292816162109
    7. 'i' → logprob: -7.960292816162109
    8. '[first' → logprob: -7.960292816162109
    9. '       ' → logprob: -9.08529281616211
    10. ' (' → logprob: -9.71029281616211

Token 783: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5558949112892151
    2. '+' → logprob: -1.4308948516845703
    3. ' with' → logprob: -2.1808948516845703
    4. 'with' → logprob: -2.8058948516845703
    5. ' +' → logprob: -4.93089485168457
    6. '<|end|>' → logprob: -6.05589485168457
    7. ' ' → logprob: -6.80589485168457
    8. ')' → logprob: -6.80589485168457
    9. '```' → logprob: -7.80589485168457
    10. ' ,' → logprob: -7.93089485168457

Token 784: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.21585217118263245
    2. 'all' → logprob: -2.4658522605895996
    3. 'j' → logprob: -3.3408522605895996
    4. 'every' → logprob: -3.3408522605895996
    5. 'any' → logprob: -4.3408522605896
    6. 'other' → logprob: -4.5908522605896
    7. ' each' → logprob: -5.3408522605896
    8. 'another' → logprob: -6.3408522605896
    9. 'points' → logprob: -6.5908522605896
    10. ' every' → logprob: -6.5908522605896

Token 785: ' other' (ID: 1273)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0738988146185875
    2. 'other' → logprob: -3.3238987922668457
    3. 'unt' → logprob: -3.8238987922668457
    4. ' j' → logprob: -4.698898792266846
    5. 'i' → logprob: -6.323898792266846
    6. 'remaining' → logprob: -7.698898792266846
    7. ' other' → logprob: -7.823898792266846
    8. 'not' → logprob: -8.198899269104004
    9. 'next' → logprob: -8.198899269104004
    10. 'idx' → logprob: -8.448899269104004

Token 786: ' unt' (ID: 8222)
  Prédit: 'unt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unt' → logprob: -0.1178758442401886
    2. 'point' → logprob: -3.617875814437866
    3. ' j' → logprob: -3.742875814437866
    4. ' point' → logprob: -3.742875814437866
    5. 'j' → logprob: -4.242876052856445
    6. ' unt' → logprob: -4.867876052856445
    7. 'not' → logprob: -5.492876052856445
    8. ' not' → logprob: -5.617876052856445
    9. 'un' → logprob: -6.367876052856445
    10. 'idx' → logprob: -6.742876052856445

Token 787: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.02441219985485077
    2. 'taken' → logprob: -4.149412155151367
    3. '```' → logprob: -5.524412155151367
    4. '_taken' → logprob: -7.024412155151367
    5. '   ' → logprob: -7.274412155151367
    6. '               ' → logprob: -7.899412155151367
    7. '           ' → logprob: -8.149412155151367
    8. '       ' → logprob: -8.524412155151367
    9. '``' → logprob: -8.774412155151367
    10. '    ' → logprob: -8.899412155151367

Token 788: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.13646288216114044
    2. 'j' → logprob: -2.261462926864624
    3. ' point' → logprob: -4.511462688446045
    4. 'for' → logprob: -5.761462688446045
    5. 'i' → logprob: -6.011462688446045
    6. ' j' → logprob: -6.261462688446045
    7. 'idx' → logprob: -6.511462688446045
    8. ' for' → logprob: -6.886462688446045
    9. 'unt' → logprob: -7.761462688446045
    10. 'points' → logprob: -7.886462688446045

Token 789: ' j' (ID: 441)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1366271823644638
    2. '       ' → logprob: -2.136627197265625
    3. 'for' → logprob: -5.011627197265625
    4. ',' → logprob: -6.886627197265625
    5. '	for' → logprob: -7.386627197265625
    6. ' in' → logprob: -8.136627197265625
    7. '<|end|>' → logprob: -8.386627197265625
    8. '        
' → logprob: -8.636627197265625
    9. '   ' → logprob: -9.136627197265625
    10. ':' → logprob: -9.386627197265625

Token 790: ' >' (ID: 1424)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.005656361579895
    2. ' for' → logprob: -1.005656361579895
    3. ' in' → logprob: -2.0056562423706055
    4. ',' → logprob: -2.6306562423706055
    5. '       ' → logprob: -3.7556562423706055
    6. 'for' → logprob: -4.2556562423706055
    7. '.' → logprob: -4.7556562423706055
    8. '<|end|>' → logprob: -5.8806562423706055
    9. '<|end|>' → logprob: -5.8806562423706055
    10. ' ' → logprob: -6.8806562423706055

Token 791: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0015046248445287347
    2. ' first' → logprob: -6.501504421234131
    3. '=' → logprob: -13.876504898071289
    4. 'i' → logprob: -14.126504898071289
    5. '	first' → logprob: -15.376504898071289
    6. '[first' → logprob: -16.50150489807129
    7. '
' → logprob: -16.62650489807129
    8. '   ' → logprob: -16.75150489807129
    9. '(first' → logprob: -17.50150489807129
    10. '           ' → logprob: -17.50150489807129

Token 792: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1129627600312233
    2. ' for' → logprob: -2.3629627227783203
    3. ':' → logprob: -5.48796272277832
    4. 'for' → logprob: -5.73796272277832
    5. ',' → logprob: -6.23796272277832
    6. '        
' → logprob: -7.11296272277832
    7. '.' → logprob: -7.61296272277832
    8. '	' → logprob: -7.73796272277832
    9. ':
' → logprob: -8.23796272277832
    10. ' in' → logprob: -8.73796272277832

Token 793: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022024104371666908
    2. ' for' → logprob: -3.897024154663086
    3. '<|end|>' → logprob: -7.522024154663086
    4. 'for' → logprob: -7.772024154663086
    5. '        
' → logprob: -9.022024154663086
    6. '	' → logprob: -9.522024154663086
    7. ',' → logprob: -9.522024154663086
    8. ' ' → logprob: -9.647024154663086
    9. '	for' → logprob: -10.647024154663086
    10. '<|end|>' → logprob: -10.647024154663086

Token 794: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37892740964889526
    2. 'for' → logprob: -1.62892746925354
    3. '       ' → logprob: -2.12892746925354
    4. '
' → logprob: -8.378927230834961
    5. '   ' → logprob: -11.378927230834961
    6. ' ' → logprob: -11.378927230834961
    7. '	for' → logprob: -11.378927230834961
    8. '	' → logprob: -12.128927230834961
    9. '        
' → logprob: -12.378927230834961
    10. '               ' → logprob: -12.503927230834961

Token 795: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7744406461715698
    2. ' for' → logprob: -0.8994406461715698
    3. 'for' → logprob: -2.0244407653808594
    4. '   ' → logprob: -10.39944076538086
    5. '```' → logprob: -10.64944076538086
    6. 'j' → logprob: -10.77444076538086
    7. '	for' → logprob: -10.89944076538086
    8. '
' → logprob: -11.02444076538086
    9. '        
' → logprob: -11.14944076538086
    10. '           ' → logprob: -11.39944076538086

Token 796: ' each' (ID: 2454)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011189884506165981
    2. ' j' → logprob: -4.511189937591553
    3. '```' → logprob: -9.886189460754395
    4. '
' → logprob: -10.636189460754395
    5. 'i' → logprob: -11.261189460754395
    6. '_j' → logprob: -11.636189460754395
    7. '   ' → logprob: -11.761189460754395
    8. ')' → logprob: -12.136189460754395
    9. 'each' → logprob: -12.261189460754395
    10. 'first' → logprob: -12.636189460754395

Token 797: ' possible' (ID: 4149)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3136960566043854
    2. ' j' → logprob: -1.313696026802063
    3. '           ' → logprob: -9.438695907592773
    4. ')' → logprob: -9.938695907592773
    5. ',' → logprob: -9.938695907592773
    6. '   ' → logprob: -10.438695907592773
    7. '_j' → logprob: -10.938695907592773
    8. '	j' → logprob: -11.063695907592773
    9. '```' → logprob: -11.063695907592773
    10. 'for' → logprob: -11.313695907592773

Token 798: ' pairing' (ID: 79656)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.14402854442596436
    2. ' j' → logprob: -2.019028663635254
    3. 'pair' → logprob: -7.894028663635254
    4. '
' → logprob: -8.269028663635254
    5. '```' → logprob: -8.269028663635254
    6. '   ' → logprob: -8.769028663635254
    7. ' pair' → logprob: -9.769028663635254
    8. '`' → logprob: -10.269028663635254
    9. ',' → logprob: -10.519028663635254
    10. 'partner' → logprob: -10.769028663635254

Token 799: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5185680389404297
    2. ':' → logprob: -1.5185680389404297
    3. ' j' → logprob: -2.1435680389404297
    4. ' for' → logprob: -3.7685680389404297
    5. 'for' → logprob: -4.14356803894043
    6. ':
' → logprob: -4.39356803894043
    7. 'j' → logprob: -4.51856803894043
    8. ',j' → logprob: -6.64356803894043
    9. ' ,' → logprob: -7.14356803894043
    10. '   ' → logprob: -7.14356803894043

Token 800: ' recurse' (ID: 178947)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.113585352897644
    2. ' directions' → logprob: -1.863585352897644
    3. 'for' → logprob: -2.1135854721069336
    4. 'j' → logprob: -2.2385854721069336
    5. '           ' → logprob: -2.9885854721069336
    6. 'dire' → logprob: -3.1135854721069336
    7. ' taken' → logprob: -3.2385854721069336
    8. ' new' → logprob: -3.3635854721069336
    9. ' j' → logprob: -3.3635854721069336
    10. 'taken' → logprob: -4.238585472106934

Token 801: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33284199237823486
    2. ' for' → logprob: -1.7078419923782349
    3. ',' → logprob: -3.8328418731689453
    4. ' with' → logprob: -3.9578418731689453
    5. '   ' → logprob: -4.332841873168945
    6. ' ' → logprob: -4.832841873168945
    7. '        
' → logprob: -5.082841873168945
    8. 'for' → logprob: -5.207841873168945
    9. '	' → logprob: -5.332841873168945
    10. '<|end|>' → logprob: -5.457841873168945

Token 802: ' updated' (ID: 8489)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.25533637404441833
    2. 'the' → logprob: -2.380336284637451
    3. 'self' → logprob: -3.255336284637451
    4. 'Pair' → logprob: -3.255336284637451
    5. ' state' → logprob: -4.005336284637451
    6. ' the' → logprob: -4.505336284637451
    7. 'next' → logprob: -5.005336284637451
    8. 'new' → logprob: -5.755336284637451
    9. ' Pair' → logprob: -6.005336284637451
    10. 'a' → logprob: -6.380336284637451

Token 803: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.002213180996477604
    2. ' state' → logprob: -6.502213001251221
    3. '_state' → logprob: -7.377213001251221
    4. 'pair' → logprob: -10.752213478088379
    5. 'taken' → logprob: -10.877213478088379
    6. ')' → logprob: -11.752213478088379
    7. 'mask' → logprob: -11.752213478088379
    8. '_pair' → logprob: -12.252213478088379
    9. '`' → logprob: -12.377213478088379
    10. '```' → logprob: -13.002213478088379

Token 804: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06352972239255905
    2. '
' → logprob: -3.3135297298431396
    3. ' for' → logprob: -4.6885294914245605
    4. '        
' → logprob: -4.6885294914245605
    5. '  
' → logprob: -6.8135294914245605
    6. ' 
' → logprob: -6.9385294914245605
    7. ',' → logprob: -7.1885294914245605
    8. '    
' → logprob: -7.1885294914245605
    9. '	' → logprob: -7.5635294914245605
    10. ' ' → logprob: -7.6885294914245605

Token 805: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034079935867339373
    2. '        
' → logprob: -6.628407955169678
    3. '
' → logprob: -6.878407955169678
    4. ' for' → logprob: -7.378407955169678
    5. 'for' → logprob: -9.253408432006836
    6. '	' → logprob: -9.753408432006836
    7. ' 
' → logprob: -10.128408432006836
    8. '<|end|>' → logprob: -10.128408432006836
    9. '   ' → logprob: -10.503408432006836
    10. ',' → logprob: -10.628408432006836

Token 806: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5927978754043579
    2. ' for' → logprob: -0.9677978754043579
    3. 'for' (adapté à ' for') → logprob: -2.7177977561950684
    4. '        
' → logprob: -7.467797756195068
    5. ' ' → logprob: -8.342798233032227
    6. '
' → logprob: -9.217798233032227
    7. ' 
' → logprob: -9.717798233032227
    8. '   ' → logprob: -9.842798233032227
    9. '           ' → logprob: -9.967798233032227
    10. ',' → logprob: -10.217798233032227

Token 807: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00026169343618676066
    2. ' j' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.750261306762695
    4. '	j' → logprob: -16.625261306762695
    5. '_j' → logprob: -17.250261306762695
    6. '```' → logprob: -17.375261306762695
    7. '$j' → logprob: -17.500261306762695
    8. '[j' → logprob: -17.625261306762695
    9. 'second' → logprob: -18.250261306762695
    10. '`' → logprob: -19.500261306762695

Token 808: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12694206833839417
    2. 'in' → logprob: -2.1269421577453613
    3. ')' → logprob: -12.501941680908203
    4. ' ' → logprob: -12.501941680908203
    5. '	in' → logprob: -13.501941680908203
    6. 'In' → logprob: -13.876941680908203
    7. ',' → logprob: -14.001941680908203
    8. '```' → logprob: -14.751941680908203
    9. ' ' → logprob: -15.001941680908203
    10. '_in' → logprob: -15.001941680908203

Token 809: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -16.751928329467773
    4. '   ' → logprob: -18.751928329467773
    5. ' ' → logprob: -19.626928329467773
    6. '	range' → logprob: -19.876928329467773
    7. 'rang' → logprob: -21.376928329467773
    8. 'r' → logprob: -21.501928329467773
    9. 'filter' → logprob: -21.626928329467773
    10. 'i' → logprob: -21.626928329467773

Token 810: '(first' (ID: 31998)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.12714311480522156
    2. '(first' → logprob: -2.127143144607544
    3. ' first' → logprob: -8.502142906188965
    4. '[first' → logprob: -11.752142906188965
    5. '(' → logprob: -13.752142906188965
    6. '	first' → logprob: -14.002142906188965
    7. '
' → logprob: -14.252142906188965
    8. ':first' → logprob: -15.127142906188965
    9. '   ' → logprob: -15.377142906188965
    10. ' (' → logprob: -15.377142906188965

Token 811: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326526403427124
    2. ' +' → logprob: -1.313265323638916
    3. '1' → logprob: -13.563264846801758
    4. ',' → logprob: -14.188264846801758
    5. '+j' → logprob: -14.688264846801758
    6. '   ' → logprob: -14.813264846801758
    7. ')+' → logprob: -15.688264846801758
    8. ')' → logprob: -15.688264846801758
    9. '()+' → logprob: -16.438264846801758
    10. '+,' → logprob: -16.813264846801758

Token 812: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.875001907348633
    4. '0' → logprob: -19.375001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '
' → logprob: -20.500001907348633
    7. '2' → logprob: -21.937501907348633
    8. '۱' → logprob: -22.187501907348633
    9. '`' → logprob: -22.500001907348633
    10. ',' → logprob: -22.500001907348633

Token 813: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -18.500001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '
' → logprob: -19.250001907348633
    6. '```' → logprob: -19.625001907348633
    7. '2' → logprob: -21.437501907348633
    8. '１' → logprob: -21.875001907348633
    9. ',' → logprob: -22.250001907348633
    10. '`' → logprob: -22.250001907348633

Token 814: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.583550642360933e-05
    2. ',self' → logprob: -10.500036239624023
    3. ' ,' → logprob: -11.875036239624023
    4. ',
' → logprob: -14.250036239624023
    5. 'self' → logprob: -14.250036239624023
    6. ',n' → logprob: -17.125036239624023
    7. ',j' → logprob: -18.375036239624023
    8. ',len' → logprob: -18.750036239624023
    9. '
' → logprob: -18.875036239624023
    10. '```' → logprob: -19.375036239624023

Token 815: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.547789674485102e-05
    2. ' self' → logprob: -10.250035285949707
    3. '       ' → logprob: -17.125036239624023
    4. '           ' → logprob: -18.625036239624023
    5. 'n' → logprob: -18.875036239624023
    6. '   ' → logprob: -19.625036239624023
    7. '[self' → logprob: -20.000036239624023
    8. '(self' → logprob: -20.250036239624023
    9. '	self' → logprob: -20.750036239624023
    10. '```' → logprob: -21.000036239624023

Token 816: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.009775806218385696
    2. 'n' → logprob: -4.634775638580322
    3. 'self' → logprob: -11.00977611541748
    4. '```' → logprob: -14.38477611541748
    5. '_n' → logprob: -14.50977611541748
    6. '.' → logprob: -14.75977611541748
    7. ' n' → logprob: -14.88477611541748
    8. '<n' → logprob: -15.13477611541748
    9. ',n' → logprob: -15.38477611541748
    10. '	n' → logprob: -15.63477611541748

Token 817: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03368096798658371
    2. '):' → logprob: -3.4086809158325195
    3. '):
' → logprob: -10.78368091583252
    4. ':
' → logprob: -12.78368091583252
    5. ':' → logprob: -12.90868091583252
    6. ' ):
' → logprob: -13.15868091583252
    7. '   ' → logprob: -13.28368091583252
    8. '       ' → logprob: -13.65868091583252
    9. ',' → logprob: -13.65868091583252
    10. '():
' → logprob: -13.90868091583252

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02135545015335083
    2. '<|end|>' → logprob: -4.396355628967285
    3. ' ' → logprob: -5.146355628967285
    4. '       ' → logprob: -6.771355628967285
    5. ' if' → logprob: -7.521355628967285
    6. '<|end|>' → logprob: -7.646355628967285
    7. '               ' → logprob: -8.271355628967285
    8. '	       ' → logprob: -8.896355628967285
    9. '   ' → logprob: -9.646355628967285
    10. '          ' → logprob: -9.896355628967285

Token 819: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5377310514450073
    2. ' if' → logprob: -0.9127310514450073
    3. 'if' (adapté à ' if') → logprob: -4.662731170654297
    4. ' ' → logprob: -6.162731170654297
    5. '<|end|>' → logprob: -6.412731170654297
    6. '            ' → logprob: -7.162731170654297
    7. '               ' → logprob: -8.912731170654297
    8. '          ' → logprob: -9.287731170654297
    9. '		' → logprob: -9.662731170654297
    10. ' ' → logprob: -9.912731170654297

Token 820: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4740838408470154
    2. ' not' → logprob: -0.9740838408470154
    3. 'state' → logprob: -12.72408390045166
    4. '(not' → logprob: -13.47408390045166
    5. '!' → logprob: -14.09908390045166
    6. '   ' → logprob: -14.22408390045166
    7. 'n' → logprob: -14.97408390045166
    8. ' state' → logprob: -15.72408390045166
    9. '	not' → logprob: -15.72408390045166
    10. ' ' → logprob: -16.724082946777344

Token 821: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.018151111900806427
    2. ' state' → logprob: -4.01815128326416
    3. '(state' → logprob: -14.14315128326416
    4. '	state' → logprob: -16.143150329589844
    5. '   ' → logprob: -16.393150329589844
    6. ' ' → logprob: -16.893150329589844
    7. '[state' → logprob: -17.018150329589844
    8. '
' → logprob: -17.268150329589844
    9. ')' → logprob: -17.268150329589844
    10. ',state' → logprob: -17.643150329589844

Token 822: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -4.191489642835222e-05
    2. 'is' → logprob: -10.250041961669922
    3. '.' → logprob: -12.250041961669922
    4. ' .' → logprob: -13.625041961669922
    5. '       ' → logprob: -16.250041961669922
    6. '           ' → logprob: -16.250041961669922
    7. '   ' → logprob: -16.375041961669922
    8. '(is' → logprob: -16.500041961669922
    9. ').' → logprob: -16.625041961669922
    10. ' is' → logprob: -16.875041961669922

Token 823: '_taken' (ID: 179958)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.2014366239309311
    2. '_taken' → logprob: -1.7014366388320923
    3. 'Taken' → logprob: -11.076436996459961
    4. ' taken' → logprob: -12.076436996459961
    5. 'tak' → logprob: -14.326436996459961
    6. '```' → logprob: -14.576436996459961
    7. 't' → logprob: -15.076436996459961
    8. '
' → logprob: -16.07643699645996
    9. '   ' → logprob: -16.32643699645996
    10. 'aken' → logprob: -16.70143699645996

Token 824: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -3.666993507067673e-05
    2. 'j' → logprob: -10.250036239624023
    3. '(' → logprob: -14.875036239624023
    4. '[j' → logprob: -15.125036239624023
    5. ' (' → logprob: -15.750036239624023
    6. '```' → logprob: -15.750036239624023
    7. '(i' → logprob: -16.875036239624023
    8. ',j' → logprob: -17.000036239624023
    9. '	j' → logprob: -17.000036239624023
    10. ')' → logprob: -17.000036239624023

Token 825: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1606818437576294
    2. '):' → logprob: -1.9106818437576294
    3. ')' → logprob: -8.03568172454834
    4. '):

' → logprob: -10.03568172454834
    5. '):
' → logprob: -10.03568172454834
    6. '           ' → logprob: -10.53568172454834
    7. ' ):
' → logprob: -11.78568172454834
    8. ' ):' → logprob: -12.91068172454834
    9. ':' → logprob: -13.03568172454834
    10. '       ' → logprob: -13.41068172454834

Token 826: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018520120065659285
    2. '           ' → logprob: -6.876852035522461
    3. ':' → logprob: -8.251852035522461
    4. '                
' → logprob: -8.876852035522461
    5. ':
' → logprob: -9.126852035522461
    6. '       ' → logprob: -9.751852035522461
    7. ',' → logprob: -9.751852035522461
    8. '<|end|>' → logprob: -10.501852035522461
    9. '              ' → logprob: -10.751852035522461
    10. '                   ' → logprob: -11.001852035522461

Token 827: ' new' (ID: 620)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.9269784688949585
    2. 'new' (adapté à ' new') → logprob: -1.4269784688949585
    3. 'direction' → logprob: -2.051978588104248
    4. '               ' → logprob: -2.926978588104248
    5. 'vector' → logprob: -3.426978588104248
    6. '                   ' → logprob: -3.676978588104248
    7. 'pair' → logprob: -3.801978588104248
    8. 'vec' → logprob: -3.926978588104248
    9. 'dir' → logprob: -4.176978588104248
    10. ' new' → logprob: -4.176978588104248

Token 828: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.1798536777496338
    2. 'state' → logprob: -1.8048536777496338
    3. '_pair' → logprob: -10.429853439331055
    4. 'State' → logprob: -10.929853439331055
    5. ' state' → logprob: -10.929853439331055
    6. '_' → logprob: -11.429853439331055
    7. '               ' → logprob: -11.679853439331055
    8. 'pair' → logprob: -12.179853439331055
    9. '           ' → logprob: -12.304853439331055
    10. '```' → logprob: -12.554853439331055

Token 829: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868713676929474
    2. '=' → logprob: -1.136871337890625
    3. ')' → logprob: -15.511871337890625
    4. '=
' → logprob: -16.636871337890625
    5. ' ' → logprob: -17.511871337890625
    6. ' =
' → logprob: -18.011871337890625
    7. ',' → logprob: -18.136871337890625
    8. '.' → logprob: -18.886871337890625
    9. '```' → logprob: -19.011871337890625
    10. ')=' → logprob: -19.136871337890625

Token 830: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.14282935857772827
    2. ' state' → logprob: -2.017829418182373
    3. 'Pair' → logprob: -9.392828941345215
    4. '               ' → logprob: -10.642828941345215
    5. ' Pair' → logprob: -11.142828941345215
    6. 'self' → logprob: -11.392828941345215
    7. '                   ' → logprob: -11.767828941345215
    8. '           ' → logprob: -12.142828941345215
    9. '(state' → logprob: -13.267828941345215
    10. 'State' → logprob: -13.642828941345215

Token 831: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0008152276859618723
    2. '.' → logprob: -7.125815391540527
    3. ' .' → logprob: -12.000815391540527
    4. 'add' → logprob: -13.125815391540527
    5. '=' → logprob: -13.500815391540527
    6. ' =' → logprob: -14.750815391540527
    7. '           ' → logprob: -15.000815391540527
    8. '   ' → logprob: -16.12581443786621
    9. ').' → logprob: -16.12581443786621
    10. '       ' → logprob: -16.37581443786621

Token 832: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -2.451116051815916e-05
    2. 'pair' → logprob: -10.750024795532227
    3. '```' → logprob: -13.750024795532227
    4. 'Pair' → logprob: -14.500024795532227
    5. '_PAIR' → logprob: -15.000024795532227
    6. '_pairs' → logprob: -15.250024795532227
    7. '`' → logprob: -15.375024795532227
    8. ' pair' → logprob: -16.125024795532227
    9. '(pair' → logprob: -16.125024795532227
    10. '\' → logprob: -16.750024795532227

Token 833: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -5.9153885558771435e-06
    2. 'first' → logprob: -12.500005722045898
    3. '(' → logprob: -13.125005722045898
    4. '[first' → logprob: -17.3750057220459
    5. ' first' → logprob: -18.2500057220459
    6. '(
' → logprob: -18.2500057220459
    7. '(i' → logprob: -19.1250057220459
    8. '	first' → logprob: -19.3750057220459
    9. ' (' → logprob: -19.7500057220459
    10. '   ' → logprob: -19.7500057220459

Token 834: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02632248029112816
    2. ',j' → logprob: -3.651322364807129
    3. ' ,' → logprob: -11.026322364807129
    4. 'j' → logprob: -12.526322364807129
    5. ',
' → logprob: -14.276322364807129
    6. ')' → logprob: -15.151322364807129
    7. '```' → logprob: -15.151322364807129
    8. ' j' → logprob: -15.276322364807129
    9. '                   ' → logprob: -15.526322364807129
    10. '[j' → logprob: -16.276323318481445

Token 835: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00014036978245712817
    2. ' j' → logprob: -8.875140190124512
    3. '[j' → logprob: -15.500140190124512
    4. '	j' → logprob: -16.500141143798828
    5. '$j' → logprob: -16.875141143798828
    6. ')' → logprob: -17.375141143798828
    7. '```' → logprob: -17.750141143798828
    8. '_j' → logprob: -17.750141143798828
    9. '*j' → logprob: -18.375141143798828
    10. '   ' → logprob: -18.625141143798828

Token 836: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32152053713798523
    2. ')
' → logprob: -1.3215205669403076
    3. '               ' → logprob: -4.8215203285217285
    4. ')
' → logprob: -8.821520805358887
    5. ')

' → logprob: -11.696520805358887
    6. '           ' → logprob: -11.696520805358887
    7. ')`
' → logprob: -13.321520805358887
    8. ')`' → logprob: -13.696520805358887
    9. '                   ' → logprob: -14.571520805358887
    10. '              ' → logprob: -14.696520805358887

Token 837: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018153596902266145
    2. '                
' → logprob: -6.751815319061279
    3. ' directions' → logprob: -9.001815795898438
    4. 'direction' → logprob: -9.626815795898438
    5. '```' → logprob: -9.626815795898438
    6. 'dire' → logprob: -9.751815795898438
    7. 'token' → logprob: -9.876815795898438
    8. 'tokens' → logprob: -10.626815795898438
    9. '<|end|>' → logprob: -10.751815795898438
    10. '                   ' → logprob: -10.876815795898438

Token 838: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6811213493347168
    2. 'lines' → logprob: -1.9311213493347168
    3. 'dire' → logprob: -2.056121349334717
    4. '#' (adapté à ' #') → logprob: -2.806121349334717
    5. 'direction' → logprob: -2.931121349334717
    6. 'result' → logprob: -3.681121349334717
    7. 'pair' → logprob: -3.806121349334717
    8. 'line' → logprob: -4.181121349334717
    9. ' lines' → logprob: -4.806121349334717
    10. 'max' → logprob: -5.181121349334717

Token 839: ' We'll' (ID: 46830)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.6531336903572083
    2. 'lines' → logprob: -1.5281336307525635
    3. '               ' → logprob: -1.6531336307525635
    4. 'direction' → logprob: -4.028133869171143
    5. 'pair' → logprob: -4.153133869171143
    6. 'new' → logprob: -4.903133869171143
    7. '#' → logprob: -5.153133869171143
    8. ' lines' → logprob: -5.528133869171143
    9. 'pairs' → logprob: -5.653133869171143
    10. 'result' → logprob: -5.778133869171143

Token 840: ' accumulate' (ID: 74226)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9604551196098328
    2. 'calculate' → logprob: -1.7104551792144775
    3. 'compute' → logprob: -1.7104551792144775
    4. 'continue' → logprob: -2.5854551792144775
    5. '                   ' → logprob: -3.3354551792144775
    6. 'store' → logprob: -3.7104551792144775
    7. 'generate' → logprob: -3.8354551792144775
    8. ' compute' → logprob: -4.710454940795898
    9. 'add' → logprob: -4.835454940795898
    10. ' continue' → logprob: -4.960454940795898

Token 841: ' directions' (ID: 24921)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.0390595197677612
    2. ' lines' → logprob: -1.2890595197677612
    3. 'parallel' → logprob: -2.164059638977051
    4. 'result' → logprob: -2.789059638977051
    5. 'dire' → logprob: -3.664059638977051
    6. 'pairs' → logprob: -3.664059638977051
    7. 'res' → logprob: -3.789059638977051
    8. 'next' → logprob: -3.914059638977051
    9. 'sub' → logprob: -4.039059638977051
    10. ' parallel' → logprob: -4.664059638977051

Token 842: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27901598811149597
    2. '               ' → logprob: -1.9040160179138184
    3. ',' → logprob: -3.1540160179138184
    4. '                ' → logprob: -4.029016017913818
    5. '                   ' → logprob: -4.154016017913818
    6. ' and' → logprob: -5.654016017913818
    7. '.append' → logprob: -5.654016017913818
    8. ' with' → logprob: -5.904016017913818
    9. ' for' → logprob: -6.779016017913818
    10. '=' → logprob: -7.154016017913818

Token 843: ' all' (ID: 722)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.4912225902080536
    2. 'all' → logprob: -2.241222620010376
    3. ' lines' → logprob: -2.866222620010376
    4. 'self' → logprob: -2.866222620010376
    5. 'new' → logprob: -3.741222620010376
    6. 'the' → logprob: -3.866222620010376
    7. 'pairs' → logprob: -3.991222620010376
    8. '[new' → logprob: -4.116222381591797
    9. '[self' → logprob: -4.241222381591797
    10. '[(' → logprob: -4.241222381591797

Token 844: ' pairs' (ID: 24702)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.9768151044845581
    2. 'pairs' → logprob: -1.351815104484558
    3. 'paired' → logprob: -1.476815104484558
    4. ' lines' → logprob: -2.3518152236938477
    5. 'previous' → logprob: -4.351815223693848
    6. ' pairs' → logprob: -5.476815223693848
    7. 'current' → logprob: -5.976815223693848
    8. 'new' → logprob: -5.976815223693848
    9. 'pair' → logprob: -6.101815223693848
    10. ' paired' → logprob: -6.351815223693848

Token 845: ' formed' (ID: 20680)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03229343891143799
    2. ',' → logprob: -4.532293319702148
    3. ' +' → logprob: -4.907293319702148
    4. ' and' → logprob: -5.282293319702148
    5. '                ' → logprob: -6.282293319702148
    6. ' with' → logprob: -6.532293319702148
    7. '<|end|>' → logprob: -7.157293319702148
    8. ' in' → logprob: -7.532293319702148
    9. ' as' → logprob: -7.532293319702148
    10. '                
' → logprob: -7.657293319702148

Token 846: ' in' (ID: 306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04348688945174217
    2. ',' → logprob: -3.9184868335723877
    3. '                ' → logprob: -4.793487071990967
    4. '                
' → logprob: -5.293487071990967
    5. '<|end|>' → logprob: -6.043487071990967
    6. ' and' → logprob: -6.418487071990967
    7. '<|end|>' → logprob: -6.668487071990967
    8. ' with' → logprob: -7.043487071990967
    9. '                
                
' → logprob: -7.168487071990967
    10. ' in' → logprob: -7.793487071990967

Token 847: ' this' (ID: 495)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0336124897003174
    2. 'new' → logprob: -1.5336124897003174
    3. 'self' → logprob: -1.6586124897003174
    4. 'this' → logprob: -2.0336124897003174
    5. 'all' → logprob: -3.2836124897003174
    6. 'sub' → logprob: -4.658612251281738
    7. 'paths' → logprob: -4.908612251281738
    8. 'previous' → logprob: -5.158612251281738
    9. 'current' → logprob: -5.158612251281738
    10. 'rec' → logprob: -5.283612251281738

Token 848: ' path' (ID: 3104)
  Prédit: 'call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'call' → logprob: -1.2606333494186401
    2. 'path' → logprob: -1.5106333494186401
    3. 'new' → logprob: -1.8856333494186401
    4. 'rec' → logprob: -2.0106334686279297
    5. ' recursion' → logprob: -3.2606334686279297
    6. ' call' → logprob: -3.5106334686279297
    7. '               ' → logprob: -3.6356334686279297
    8. '_path' → logprob: -3.6356334686279297
    9. 'recursive' → logprob: -3.8856334686279297
    10. ' path' → logprob: -4.51063346862793

Token 849: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008054904639720917
    2. '                
' → logprob: -6.008054733276367
    3. ',' → logprob: -6.133054733276367
    4. '<|end|>' → logprob: -6.258054733276367
    5. '<|end|>' → logprob: -6.883054733276367
    6. '                ' → logprob: -8.883054733276367
    7. ' and' → logprob: -9.633054733276367
    8. '
' → logprob: -10.383054733276367
    9. 'tokens' → logprob: -10.633054733276367
    10. ')' → logprob: -11.008054733276367

Token 850: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018314191838726401
    2. '                
' → logprob: -6.626831531524658
    3. ',' → logprob: -8.0018310546875
    4. '<|end|>' → logprob: -9.7518310546875
    5. '                ' → logprob: -10.5018310546875
    6. '<|end|>' → logprob: -11.1268310546875
    7. '              ' → logprob: -11.7518310546875
    8. ' and' → logprob: -12.0018310546875
    9. '                
                
' → logprob: -12.2518310546875
    10. ')' → logprob: -12.2518310546875

Token 851: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02491057850420475
    2. 'dire' → logprob: -4.0249104499816895
    3. 'result' → logprob: -5.8999104499816895
    4. ' directions' → logprob: -6.1499104499816895
    5. ' lines' → logprob: -8.274910926818848
    6. ' result' → logprob: -8.274910926818848
    7. 'pair' → logprob: -8.774910926818848
    8. 'lines' → logprob: -8.774910926818848
    9. '                
' → logprob: -8.899910926818848
    10. 'current' → logprob: -8.899910926818848

Token 852: ' To' (ID: 2514)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.2747719883918762
    2. '               ' → logprob: -1.5247719287872314
    3. ' directions' → logprob: -4.6497721672058105
    4. 'result' → logprob: -5.3997721672058105
    5. 'direction' → logprob: -6.6497721672058105
    6. '#' → logprob: -6.7747721672058105
    7. 'lines' → logprob: -6.8997721672058105
    8. 'current' → logprob: -7.2747721672058105
    9. 'dirs' → logprob: -7.5247721672058105
    10. 'new' → logprob: -7.5247721672058105

Token 853: ' avoid' (ID: 8397)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.9703810214996338
    2. 'get' → logprob: -2.470381021499634
    3. 'calculate' → logprob: -2.595381021499634
    4. 'maximize' → logprob: -2.720381021499634
    5. 'count' → logprob: -3.345381021499634
    6. 'continue' → logprob: -3.345381021499634
    7. '                   ' → logprob: -3.345381021499634
    8. '               ' → logprob: -3.345381021499634
    9. 'solve' → logprob: -3.470381021499634
    10. 'avoid' → logprob: -3.595381021499634

Token 854: ' passing' (ID: 21178)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.2064592838287354
    2. ' recom' → logprob: -1.9564592838287354
    3. 'ex' → logprob: -2.2064592838287354
    4. 'redu' → logprob: -2.7064592838287354
    5. 'stack' → logprob: -2.7064592838287354
    6. 'double' → logprob: -2.9564592838287354
    7. ' stack' → logprob: -3.3314592838287354
    8. ' double' → logprob: -3.4564592838287354
    9. ' recal' → logprob: -3.4564592838287354
    10. ' redundant' → logprob: -3.5814592838287354

Token 855: ' complex' (ID: 8012)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.25657665729522705
    2. ' directions' → logprob: -1.756576657295227
    3. '               ' → logprob: -4.0065765380859375
    4. '#' → logprob: -5.0065765380859375
    5. 'the' → logprob: -5.2565765380859375
    6. 'all' → logprob: -6.0065765380859375
    7. ' the' → logprob: -6.0065765380859375
    8. 'a' → logprob: -6.2565765380859375
    9. 'them' → logprob: -6.5065765380859375
    10. ' a' → logprob: -6.6315765380859375

Token 856: ' structure' (ID: 8866)
  Prédit: ' structures'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' structures' → logprob: -0.9264669418334961
    2. ' state' → logprob: -1.801466941833496
    3. ' objects' → logprob: -1.801466941833496
    4. 'objects' → logprob: -2.676466941833496
    5. 'state' → logprob: -2.801466941833496
    6. ' data' → logprob: -2.926466941833496
    7. 'structures' → logprob: -3.301466941833496
    8. 'data' → logprob: -4.301466941833496
    9. ' states' → logprob: -5.301466941833496
    10. ' arguments' → logprob: -5.426466941833496

Token 857: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015379437245428562
    2. ',
' → logprob: -4.765379428863525
    3. '               ' → logprob: -5.265379428863525
    4. ' ,' → logprob: -6.765379428863525
    5. ' to' → logprob: -9.515379905700684
    6. ' we' → logprob: -9.890379905700684
    7. ' as' → logprob: -10.390379905700684
    8. '                
' → logprob: -10.640379905700684
    9. '_,' → logprob: -10.890379905700684
    10. ' and' → logprob: -10.890379905700684

Token 858: ' we' (ID: 581)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6300804615020752
    2. 'dire' → logprob: -1.3800804615020752
    3. '#' → logprob: -1.8800804615020752
    4. ' directions' → logprob: -3.005080461502075
    5. '...' → logprob: -6.380080223083496
    6. ' lines' → logprob: -6.380080223083496
    7. 'continue' → logprob: -6.880080223083496
    8. ' #' → logprob: -7.005080223083496
    9. 'tokens' → logprob: -7.130080223083496
    10. 'result' → logprob: -7.255080223083496

Token 859: ' gather' (ID: 13660)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -1.3036365509033203
    2. 'pass' → logprob: -1.4286365509033203
    3. ' pass' → logprob: -2.4286365509033203
    4. 'continue' → logprob: -2.5536365509033203
    5. ' continue' → logprob: -2.8036365509033203
    6. ' store' → logprob: -3.4286365509033203
    7. ' can' → logprob: -3.5536365509033203
    8. ' use' → logprob: -3.8036365509033203
    9. ' will' → logprob: -3.9286365509033203
    10. 'compute' → logprob: -4.05363655090332

Token 860: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.265756756067276
    2. ' directions' → logprob: -2.140756845474243
    3. ' lines' → logprob: -3.765756845474243
    4. '               ' → logprob: -3.890756845474243
    5. 'the' → logprob: -4.390756607055664
    6. ' the' → logprob: -4.515756607055664
    7. 'new' → logprob: -5.015756607055664
    8. 'all' → logprob: -5.015756607055664
    9. 'lines' → logprob: -5.515756607055664
    10. ' them' → logprob: -5.640756607055664

Token 861: ' by' (ID: 656)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.133759006857872
    2. ',' → logprob: -3.008759021759033
    3. ' in' → logprob: -4.133759021759033
    4. ' and' → logprob: -4.133759021759033
    5. '                   ' → logprob: -4.633759021759033
    6. ' as' → logprob: -5.133759021759033
    7. ' at' → logprob: -5.258759021759033
    8. ' =' → logprob: -5.633759021759033
    9. '=[]' → logprob: -5.883759021759033
    10. 'from' → logprob: -6.133759021759033

Token 862: ' building' (ID: 6282)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.9853044152259827
    2. 'rec' → logprob: -1.360304355621338
    3. 'adding' → logprob: -2.485304355621338
    4. '               ' → logprob: -2.735304355621338
    5. 'collect' → logprob: -3.235304355621338
    6. 'acc' → logprob: -3.610304355621338
    7. 'calcul' → logprob: -3.860304355621338
    8. 'aggreg' → logprob: -4.110304355621338
    9. 'def' → logprob: -4.110304355621338
    10. 'conc' → logprob: -4.360304355621338

Token 863: ' bottom' (ID: 8725)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.3307008743286133
    2. ' a' → logprob: -2.3307008743286133
    3. ' lines' → logprob: -3.0807008743286133
    4. 'a' → logprob: -3.4557008743286133
    5. ' directions' → logprob: -4.205700874328613
    6. '               ' → logprob: -4.205700874328613
    7. 'lines' → logprob: -4.330700874328613
    8. 'the' → logprob: -4.455700874328613
    9. ' the' → logprob: -4.705700874328613
    10. ' on' → logprob: -4.955700874328613

Token 864: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.13483849167823792
    2. 'lines' → logprob: -3.134838581085205
    3. '-up' → logprob: -3.509838581085205
    4. '       ' → logprob: -4.134838581085205
    5. '_up' → logprob: -4.634838581085205
    6. ' up' → logprob: -5.384838581085205
    7. 'line' → logprob: -5.384838581085205
    8. '```' → logprob: -5.759838581085205
    9. '   ' → logprob: -6.009838581085205
    10. '           ' → logprob: -6.134838581085205

Token 865: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02170383743941784
    2. ' and' → logprob: -4.271703720092773
    3. ',' → logprob: -5.271703720092773
    4. ' from' → logprob: -7.521703720092773
    5. '                
' → logprob: -8.021703720092773
    6. '<|end|>' → logprob: -8.271703720092773
    7. '.' → logprob: -8.396703720092773
    8. '       ' → logprob: -8.771703720092773
    9. ' with' → logprob: -8.896703720092773
    10. ' in' → logprob: -8.896703720092773

Token 866: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010391215328127146
    2. '                
' → logprob: -7.126039028167725
    3. ',' → logprob: -9.876039505004883
    4. ' and' → logprob: -10.251039505004883
    5. '<|end|>' → logprob: -10.501039505004883
    6. '```' → logprob: -10.876039505004883
    7. '                ' → logprob: -10.876039505004883
    8. '              ' → logprob: -11.376039505004883
    9. '       ' → logprob: -11.501039505004883
    10. '           ' → logprob: -11.876039505004883

Token 867: ' sub' (ID: 1543)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04049961641430855
    2. 'dire' → logprob: -3.290499687194824
    3. ' directions' → logprob: -7.165499687194824
    4. 'result' → logprob: -7.415499687194824
    5. 'pair' → logprob: -8.790499687194824
    6. 'direction' → logprob: -8.915499687194824
    7. '                
' → logprob: -9.040499687194824
    8. 'next' → logprob: -9.165499687194824
    9. 'current' → logprob: -9.415499687194824
    10. 'new' → logprob: -9.790499687194824

Token 868: '_parallel' (ID: 152364)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.8652961850166321
    2. '_result' → logprob: -1.3652961254119873
    3. '_parallel' → logprob: -1.9902961254119873
    4. 'result' → logprob: -3.2402961254119873
    5. '       ' → logprob: -3.2402961254119873
    6. '_dirs' → logprob: -3.3652961254119873
    7. 'dire' → logprob: -4.490296363830566
    8. ' =' → logprob: -4.490296363830566
    9. 'score' → logprob: -4.615296363830566
    10. '           ' → logprob: -4.865296363830566

Token 869: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07113043963909149
    2. '=' → logprob: -3.5711305141448975
    3. '_pairs' → logprob: -3.5711305141448975
    4. 's' → logprob: -4.821130275726318
    5. '_lines' → logprob: -6.321130275726318
    6. '_count' → logprob: -6.821130275726318
    7. '_counts' → logprob: -7.696130275726318
    8. ',' → logprob: -7.821130275726318
    9. 'pairs' → logprob: -8.696130752563477
    10. '   ' → logprob: -9.571130752563477

Token 870: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0094912676140666
    2. ' self' → logprob: -5.009491443634033
    3. '0' → logprob: -6.009491443634033
    4. '               ' → logprob: -8.759490966796875
    5. '                   ' → logprob: -9.384490966796875
    6. '
' → logprob: -11.009490966796875
    7. ' ' → logprob: -11.259490966796875
    8. '(self' → logprob: -11.259490966796875
    9. 'max' → logprob: -11.759490966796875
    10. '[self' → logprob: -12.634490966796875

Token 871: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0042414008639752865
    2. '_re' → logprob: -5.629241466522217
    3. '_max' → logprob: -8.379240989685059
    4. 'max' → logprob: -8.879240989685059
    5. '.max' → logprob: -9.004240989685059
    6. '.re' → logprob: -10.004240989685059
    7. '_recursive' → logprob: -10.379240989685059
    8. '.' → logprob: -11.379240989685059
    9. '           ' → logprob: -11.504240989685059
    10. '_parallel' → logprob: -11.504240989685059

Token 872: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0021634676959365606
    2. 'collect' → logprob: -7.502163410186768
    3. '_re' → logprob: -7.877163410186768
    4. 'dfs' → logprob: -8.627163887023926
    5. 'helper' → logprob: -8.627163887023926
    6. 'combine' → logprob: -8.877163887023926
    7. 'acc' → logprob: -9.377163887023926
    8. 'sub' → logprob: -9.502163887023926
    9. 'count' → logprob: -9.752163887023926
    10. '_helper' → logprob: -9.752163887023926

Token 873: 'curse' (ID: 134738)
  Prédit: 'curse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curse' → logprob: -0.0002666999935172498
    2. 'c' → logprob: -8.250267028808594
    3. 'cur' → logprob: -12.625267028808594
    4. 'urse' → logprob: -13.375267028808594
    5. 'curve' → logprob: -15.875267028808594
    6. '_c' → logprob: -15.875267028808594
    7. 'r' → logprob: -16.375267028808594
    8. 'n' → logprob: -17.250267028808594
    9. '**' → logprob: -17.500267028808594
    10. '```' → logprob: -18.000267028808594

Token 874: '_with' (ID: 14161)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0011774895247071981
    2. 'new' → logprob: -6.7511773109436035
    3. ' new' → logprob: -12.501177787780762
    4. '[new' → logprob: -14.001177787780762
    5. '               ' → logprob: -14.376177787780762
    6. '(
' → logprob: -14.626177787780762
    7. ')new' → logprob: -14.626177787780762
    8. '(' → logprob: -14.876177787780762
    9. ' (' → logprob: -15.001177787780762
    10. '```' → logprob: -15.251177787780762

Token 875: '_lines' (ID: 42980)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.06158934906125069
    2. 'lines' → logprob: -3.936589241027832
    3. 'dirs' → logprob: -3.936589241027832
    4. '_d' → logprob: -4.436589241027832
    5. '_lines' → logprob: -5.936589241027832
    6. 'd' → logprob: -6.061589241027832
    7. 'acc' → logprob: -6.561589241027832
    8. '_dirs' → logprob: -6.936589241027832
    9. 'paths' → logprob: -7.936589241027832
    10. 'direction' → logprob: -8.436589241027832

Token 876: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.00023405285901390016
    2. 'new' → logprob: -8.62523365020752
    3. '(state' → logprob: -10.62523365020752
    4. 'er' → logprob: -11.87523365020752
    5. '[new' → logprob: -12.00023365020752
    6. ' (' → logprob: -12.50023365020752
    7. '(' → logprob: -12.50023365020752
    8. '```' → logprob: -13.25023365020752
    9. ')new' → logprob: -13.87523365020752
    10. ',new' → logprob: -14.00023365020752

Token 877: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.002014167606830597
    2. 'state' → logprob: -6.25201416015625
    3. '_' → logprob: -10.50201416015625
    4. 'State' → logprob: -11.12701416015625
    5. 'new' → logprob: -11.25201416015625
    6. ')' → logprob: -12.37701416015625
    7. ' state' → logprob: -13.00201416015625
    8. '_s' → logprob: -13.00201416015625
    9. '_stat' → logprob: -13.12701416015625
    10. '```' → logprob: -13.12701416015625

Token 878: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012576993554830551
    2. ',[' → logprob: -5.137577056884766
    3. '([],' → logprob: -5.887577056884766
    4. '([' → logprob: -6.262577056884766
    5. '               ' → logprob: -7.887577056884766
    6. '([]' → logprob: -7.887577056884766
    7. '                   ' → logprob: -7.887577056884766
    8. '[],' → logprob: -8.762577056884766
    9. '[' → logprob: -8.887577056884766
    10. ')' → logprob: -9.387577056884766

Token 879: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.4352828860282898
    2. '[' → logprob: -1.1852829456329346
    3. '[])' → logprob: -4.1852827072143555
    4. '[((' → logprob: -4.1852827072143555
    5. '[]' → logprob: -5.6852827072143555
    6. '[self' → logprob: -5.8102827072143555
    7. '[state' → logprob: -5.8102827072143555
    8. '[new' → logprob: -6.6852827072143555
    9. '[current' → logprob: -6.8102827072143555
    10. '[])
' → logprob: -6.9352827072143555

Token 880: 'first' (ID: 7743)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.40345636010169983
    2. 'self' → logprob: -1.1534563302993774
    3. 'first' → logprob: -4.778456211090088
    4. '(self' → logprob: -5.778456211090088
    5. 'Point' → logprob: -6.278456211090088
    6. 'points' → logprob: -6.403456211090088
    7. '(first' → logprob: -8.403456687927246
    8. '(Direction' → logprob: -8.778456687927246
    9. ' Direction' → logprob: -8.903456687927246
    10. '(points' → logprob: -9.278456687927246

Token 881: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2524837851524353
    2. ',j' → logprob: -1.50248384475708
    3. ',new' → logprob: -8.502483367919922
    4. ',
' → logprob: -9.002483367919922
    5. ' ,' → logprob: -9.502483367919922
    6. '),' → logprob: -9.877483367919922
    7. '<|end|>' → logprob: -11.002483367919922
    8. ',),' → logprob: -11.252483367919922
    9. 'j' → logprob: -11.377483367919922
    10. '),(' → logprob: -11.627483367919922

Token 882: ')])
' (ID: 66560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7231109738349915
    2. ')])' → logprob: -1.2231109142303467
    3. ')]' → logprob: -1.9731109142303467
    4. ')],' → logprob: -2.8481109142303467
    5. ',' → logprob: -4.473111152648926
    6. '),(' → logprob: -5.223111152648926
    7. ')' → logprob: -5.598111152648926
    8. ')])
' → logprob: -7.223111152648926
    9. '),
' → logprob: -7.723111152648926
    10. ')])

' → logprob: -7.848111152648926

Token 883: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06906335800886154
    2. ')' → logprob: -2.819063425064087
    3. '<|end|>' → logprob: -5.819063186645508
    4. '                ' → logprob: -6.819063186645508
    5. ' +' → logprob: -7.069063186645508
    6. '           ' → logprob: -7.069063186645508
    7. ',' → logprob: -7.819063186645508
    8. '              ' → logprob: -8.819063186645508
    9. '+' → logprob: -9.069063186645508
    10. '
' → logprob: -9.319063186645508

Token 884: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16319966316223145
    2. '           ' → logprob: -2.1631996631622314
    3. 'if' (adapté à ' if') → logprob: -3.6631996631622314
    4. 'max' → logprob: -5.788199424743652
    5. ' if' → logprob: -6.163199424743652
    6. 'return' → logprob: -6.288199424743652
    7. '       ' → logprob: -6.288199424743652
    8. ')' → logprob: -7.788199424743652
    9. '   ' → logprob: -8.913199424743652
    10. '                
' → logprob: -9.038199424743652

Token 885: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.003676440566778183
    2. ' sub' → logprob: -5.628676414489746
    3. '   ' → logprob: -10.128676414489746
    4. '           ' → logprob: -11.003676414489746
    5. '       ' → logprob: -11.878676414489746
    6. '               ' → logprob: -12.628676414489746
    7. '
' → logprob: -12.628676414489746
    8. '	sub' → logprob: -13.128676414489746
    9. '                   ' → logprob: -14.128676414489746
    10. '     ' → logprob: -14.378676414489746

Token 886: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -4.127333340875339e-06
    2. '               ' → logprob: -13.375003814697266
    3. 'parallel' → logprob: -13.625003814697266
    4. 'Parallel' → logprob: -15.250003814697266
    5. '
' → logprob: -15.750003814697266
    6. '                   ' → logprob: -16.000003814697266
    7. '           ' → logprob: -16.000003814697266
    8. '```' → logprob: -16.000003814697266
    9. '_linear' → logprob: -16.500003814697266
    10. '.parallel' → logprob: -16.625003814697266

Token 887: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0890992283821106
    2. '>' → logprob: -2.464099168777466
    3. '+' → logprob: -9.089098930358887
    4. ' +' → logprob: -10.589098930358887
    5. ' ' → logprob: -11.839098930358887
    6. ')' → logprob: -12.714098930358887
    7. '   ' → logprob: -12.964098930358887
    8. '[' → logprob: -13.339098930358887
    9. ')>' → logprob: -13.464098930358887
    10. '           ' → logprob: -14.089098930358887

Token 888: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0003806257154792547
    2. ' max' → logprob: -7.875380516052246
    3. '               ' → logprob: -15.750380516052246
    4. '           ' → logprob: -16.000381469726562
    5. '                   ' → logprob: -16.125381469726562
    6. '	max' → logprob: -16.750381469726562
    7. '
' → logprob: -17.000381469726562
    8. '   ' → logprob: -17.750381469726562
    9. '```' → logprob: -18.875381469726562
    10. 'maximum' → logprob: -19.250381469726562

Token 889: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.875000953674316
    3. 'parallel' → logprob: -15.375000953674316
    4. '_par' → logprob: -16.75
    5. ' parallel' → logprob: -17.375
    6. 'Parallel' → logprob: -17.875
    7. '```' → logprob: -18.25
    8. '
' → logprob: -18.875
    9. '_
' → logprob: -19.25
    10. '\' → logprob: -19.875

Token 890: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2519741356372833
    2. ':
' → logprob: -2.126974105834961
    3. '                   ' → logprob: -2.626974105834961
    4. '               ' → logprob: -4.001974105834961
    5. '                       ' → logprob: -4.626974105834961
    6. '           ' → logprob: -6.751974105834961
    7. '                           ' → logprob: -7.501974105834961
    8. '):
' → logprob: -7.751974105834961
    9. 'max' → logprob: -8.126974105834961
    10. '=' → logprob: -8.251974105834961

Token 891: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015314511023461819
    2. '                       ' → logprob: -5.01531457901001
    3. '               ' → logprob: -5.01531457901001
    4. 'max' → logprob: -6.64031457901001
    5. ' max' → logprob: -8.515314102172852
    6. '                           ' → logprob: -8.640314102172852
    7. '           ' → logprob: -8.765314102172852
    8. '                               ' → logprob: -10.390314102172852
    9. '(max' → logprob: -10.890314102172852
    10. '```' → logprob: -11.515314102172852

Token 892: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.005255337804555893
    2. ' max' → logprob: -5.255255222320557
    3. '                   ' → logprob: -10.880255699157715
    4. '                       ' → logprob: -13.130255699157715
    5. '               ' → logprob: -15.380255699157715
    6. '	max' → logprob: -16.0052547454834
    7. '(max' → logprob: -16.1302547454834
    8. '           ' → logprob: -16.3802547454834
    9. '_max' → logprob: -16.6302547454834
    10. '                           ' → logprob: -17.1302547454834

Token 893: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.625
    3. 'parallel' → logprob: -17.75
    4. '_par' → logprob: -18.875
    5. 'Parallel' → logprob: -19.625
    6. ' parallel' → logprob: -20.25
    7. '.parallel' → logprob: -20.625
    8. '_possible' → logprob: -20.75
    9. '_python' → logprob: -21.0
    10. '
' → logprob: -21.0

Token 894: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0789058730006218
    2. ' =' → logprob: -2.5789058208465576
    3. '=max' → logprob: -11.078906059265137
    4. '=
' → logprob: -15.328906059265137
    5. '
' → logprob: -16.07890510559082
    6. 'max' → logprob: -16.20390510559082
    7. '=sub' → logprob: -16.82890510559082
    8. '_parallel' → logprob: -17.07890510559082
    9. '=_' → logprob: -17.20390510559082
    10. 'parallel' → logprob: -17.70390510559082

Token 895: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.00317783304490149
    2. ' sub' → logprob: -5.753177642822266
    3. '	sub' → logprob: -16.628177642822266
    4. '   ' → logprob: -17.628177642822266
    5. '_sub' → logprob: -18.003177642822266
    6. '(sub' → logprob: -18.628177642822266
    7. '
' → logprob: -18.628177642822266
    8. '[sub' → logprob: -19.503177642822266
    9. '=sub' → logprob: -19.628177642822266
    10. '```' → logprob: -20.253177642822266

Token 896: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -3.070975071750581e-05
    2. 'allel' → logprob: -11.125030517578125
    3. 'ar' → logprob: -11.625030517578125
    4. 'parallel' → logprob: -12.375030517578125
    5. '```' → logprob: -13.375030517578125
    6. '_' → logprob: -16.000030517578125
    7. 'Parallel' → logprob: -16.000030517578125
    8. '               ' → logprob: -16.125030517578125
    9. '           ' → logprob: -16.250030517578125
    10. '.parallel' → logprob: -16.250030517578125

Token 897: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03752056881785393
    2. '
' → logprob: -4.037520408630371
    3. '        
' → logprob: -4.287520408630371
    4. 'return' → logprob: -6.287520408630371
    5. '    
' → logprob: -7.287520408630371
    6. '<|end|>' → logprob: -7.412520408630371
    7. '  
' → logprob: -7.537520408630371
    8. ' return' → logprob: -8.162520408630371
    9. '```' → logprob: -8.412520408630371
    10. '               ' → logprob: -8.662520408630371

Token 898: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005583931924775243
    2. 'return' → logprob: -8.000558853149414
    3. '
' → logprob: -9.000558853149414
    4. ' return' → logprob: -9.625558853149414
    5. '        
' → logprob: -11.750558853149414
    6. 'self' → logprob: -12.375558853149414
    7. '```' → logprob: -12.375558853149414
    8. '           ' → logprob: -12.500558853149414
    9. ')' → logprob: -12.625558853149414
    10. '<|end|>' → logprob: -12.875558853149414

Token 899: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027367589063942432
    2. 'self' (adapté à ' self') → logprob: -6.002736568450928
    3. 'return' → logprob: -9.002737045288086
    4. ' self' → logprob: -9.377737045288086
    5. '```' → logprob: -10.377737045288086
    6. '   ' → logprob: -11.877737045288086
    7. '           ' → logprob: -12.502737045288086
    8. '
' → logprob: -12.877737045288086
    9. ')' → logprob: -13.127737045288086
    10. ' return' → logprob: -13.252737045288086

Token 900: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.003995292354375124
    2. '.' → logprob: -6.003995418548584
    3. '.memory' → logprob: -7.128995418548584
    4. '.mem' → logprob: -7.253995418548584
    5. ' .' → logprob: -12.378994941711426
    6. '.mime' → logprob: -14.378994941711426
    7. '.cache' → logprob: -14.503994941711426
    8. 'memo' → logprob: -14.503994941711426
    9. '.mu' → logprob: -14.753994941711426
    10. '.motor' → logprob: -14.878994941711426

Token 901: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -0.08046691119670868
    2. '[self' → logprob: -2.5804669857025146
    3. '[' → logprob: -6.4554667472839355
    4. '[first' → logprob: -13.955467224121094
    5. '[new' → logprob: -13.955467224121094
    6. 'self' → logprob: -15.455467224121094
    7. '\[' → logprob: -15.580467224121094
    8. '[
' → logprob: -15.580467224121094
    9. '[...]' → logprob: -15.580467224121094
    10. '[start' → logprob: -15.955467224121094

Token 902: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.2820117175579071
    2. '[' → logprob: -1.7820117473602295
    3. ']' → logprob: -2.7820117473602295
    4. '[t' → logprob: -4.78201150894165
    5. 't' → logprob: -6.15701150894165
    6. '.' → logprob: -6.53201150894165
    7. '[self' → logprob: -7.03201150894165
    8. '[state' → logprob: -7.15701150894165
    9. '_taken' → logprob: -7.65701150894165
    10. 'taken' → logprob: -8.032011985778809

Token 903: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -6.20603168499656e-05
    2. 'taken' → logprob: -11.000061988830566
    3. '```' → logprob: -11.625061988830566
    4. 'ak' → logprob: -11.750061988830566
    5. 'ken' → logprob: -12.000061988830566
    6. '_taken' → logprob: -12.000061988830566
    7. '{' → logprob: -13.000061988830566
    8. '_' → logprob: -13.000061988830566
    9. 'ake' → logprob: -13.625061988830566
    10. '#' → logprob: -13.750061988830566

Token 904: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0004666577442549169
    2. 'mask' → logprob: -7.750466823577881
    3. '_' → logprob: -11.875466346740723
    4. '```' → logprob: -12.125466346740723
    5. ']' → logprob: -12.625466346740723
    6. ')' → logprob: -12.750466346740723
    7. '_MASK' → logprob: -12.875466346740723
    8. '   ' → logprob: -13.125466346740723
    9. ''_' → logprob: -13.125466346740723
    10. '_masks' → logprob: -13.250466346740723

Token 905: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08004289865493774
    2. '=' → logprob: -2.580042839050293
    3. ']' → logprob: -6.830042839050293
    4. ']=' → logprob: -9.955042839050293
    5. ' ]' → logprob: -10.705042839050293
    6. ')' → logprob: -14.080042839050293
    7. ' =
' → logprob: -15.080042839050293
    8. ' )' → logprob: -15.580042839050293
    9. ')=' → logprob: -15.955042839050293
    10. ' =)' → logprob: -15.955042839050293

Token 906: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759394764900208
    2. ' =' → logprob: -0.8259394764900208
    3. ' =
' → logprob: -17.700939178466797
    4. '=
' → logprob: -17.700939178466797
    5. ' ' → logprob: -18.825939178466797
    6. ']=' → logprob: -19.700939178466797
    7. '＝' → logprob: -20.075939178466797
    8. '=

' → logprob: -20.450939178466797
    9. ')=' → logprob: -20.575939178466797
    10. '.=' → logprob: -20.700939178466797

Token 907: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0206720617134124e-05
    2. ' max' → logprob: -11.50001049041748
    3. '(max' → logprob: -22.500009536743164
    4. '[max' → logprob: -23.875009536743164
    5. '=max' → logprob: -24.250009536743164
    6. 'return' → logprob: -25.250009536743164
    7. '	max' → logprob: -25.375009536743164
    8. '
' → logprob: -27.000009536743164
    9. '   ' → logprob: -27.125009536743164
    10. '_max' → logprob: -27.125009536743164

Token 908: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -3.054500666621607e-06
    2. 'parallel' → logprob: -13.00000286102295
    3. '(max' → logprob: -15.00000286102295
    4. '```' → logprob: -15.62500286102295
    5. 'Parallel' → logprob: -17.250003814697266
    6. '
' → logprob: -17.875003814697266
    7. 'max' → logprob: -18.000003814697266
    8. '[max' → logprob: -18.500003814697266
    9. '\' → logprob: -18.500003814697266
    10. '(' → logprob: -19.000003814697266

Token 909: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024997208267450333
    2. '
' → logprob: -4.024997234344482
    3. 'return' → logprob: -5.274997234344482
    4. ' return' → logprob: -7.899997234344482
    5. '	' → logprob: -8.024996757507324
    6. '        
' → logprob: -8.024996757507324
    7. '	return' → logprob: -8.524996757507324
    8. '<|end|>' → logprob: -8.524996757507324
    9. '   ' → logprob: -9.649996757507324
    10. '		
' → logprob: -10.149996757507324

Token 910: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04936208203434944
    2. 'return' → logprob: -3.2993621826171875
    3. '	return' → logprob: -5.5493621826171875
    4. '   ' → logprob: -5.9243621826171875
    5. '
' → logprob: -6.5493621826171875
    6. ' return' → logprob: -6.5493621826171875
    7. '	' → logprob: -7.1743621826171875
    8. '        
' → logprob: -8.049362182617188
    9. '```' → logprob: -8.549362182617188
    10. '<|end|>' → logprob: -8.799362182617188

Token 911: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048653677105903625
    2. 'return' (adapté à ' return') → logprob: -3.0486536026000977
    3. ' return' → logprob: -10.173653602600098
    4. '	return' → logprob: -11.298653602600098
    5. '	' → logprob: -11.423653602600098
    6. '   ' → logprob: -13.548653602600098
    7. '```' → logprob: -13.673653602600098
    8. '<|end|>' → logprob: -14.923653602600098
    9. '{return' → logprob: -15.048653602600098
    10. '        
' → logprob: -15.173653602600098

Token 912: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001234428636962548
    2. ' max' → logprob: -9.000123023986816
    3. '(max' → logprob: -19.875123977661133
    4. '[max' → logprob: -20.250123977661133
    5. '
' → logprob: -21.500123977661133
    6. '	max' → logprob: -21.500123977661133
    7. ',max' → logprob: -22.250123977661133
    8. 'self' → logprob: -23.000123977661133
    9. '=max' → logprob: -23.500123977661133
    10. '   ' → logprob: -24.500123977661133

Token 913: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.25
    3. 'parallel' → logprob: -16.5
    4. 'Parallel' → logprob: -16.5
    5. '_par' → logprob: -17.25
    6. '_max' → logprob: -17.875
    7. '_possible' → logprob: -18.875
    8. '.parallel' → logprob: -19.75
    9. '```' → logprob: -19.75
    10. '[_' → logprob: -20.625

Token 914: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17670725286006927
    2. '   ' → logprob: -1.9267072677612305
    3. '    
' → logprob: -4.4267072677612305
    4. '<|end|>' → logprob: -5.9267072677612305
    5. '```' → logprob: -7.5517072677612305
    6. '  
' → logprob: -7.9267072677612305
    7. ' 
' → logprob: -8.42670726776123
    8. '

' → logprob: -8.92670726776123
    9. '_' → logprob: -9.80170726776123
    10. '        
' → logprob: -9.92670726776123

Token 915: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22249293327331543
    2. 'def' → logprob: -2.0974929332733154
    3. '
' → logprob: -2.9724929332733154
    4. '    
' → logprob: -4.4724931716918945
    5. '```' → logprob: -4.5974931716918945
    6. '<|end|>' → logprob: -6.3474931716918945
    7. ' def' → logprob: -7.0974931716918945
    8. '	def' → logprob: -7.9724931716918945
    9. '        
' → logprob: -8.222493171691895
    10. '

' → logprob: -8.597493171691895

Token 916: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.42405936121940613
    2. '
' → logprob: -1.2990593910217285
    3. '   ' → logprob: -2.6740593910217285
    4. ' def' → logprob: -6.4240593910217285
    5. '```' → logprob: -6.7990593910217285
    6. '    
' → logprob: -7.0490593910217285
    7. '_def' → logprob: -9.17405891418457
    8. '	def' → logprob: -10.17405891418457
    9. '        
' → logprob: -10.54905891418457
    10. '

' → logprob: -10.92405891418457

Token 917: ' _' (ID: 1175)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.00012106612848583609
    2. ' _' → logprob: -9.125121116638184
    3. '_recursive' → logprob: -11.625121116638184
    4. '._' → logprob: -14.750121116638184
    5. '_continue' → logprob: -14.750121116638184
    6. '\' → logprob: -15.375121116638184
    7. '_rec' → logprob: -15.375121116638184
    8. '_define' → logprob: -15.500121116638184
    9. '_r' → logprob: -15.625121116638184
    10. '_def' → logprob: -15.750121116638184

Token 918: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -3.128163257315464e-07
    2. '_re' → logprob: -15.5
    3. 'def' → logprob: -18.625
    4. 'rec' → logprob: -19.625
    5. 'with' → logprob: -20.75
    6. '#' → logprob: -21.0
    7. '
' → logprob: -21.25
    8. '```' → logprob: -21.5
    9. ' recurse' → logprob: -22.125
    10. '\' → logprob: -22.375

Token 919: 'curse' (ID: 134738)
  Prédit: 'curse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curse' → logprob: -0.0002986392646562308
    2. 'c' → logprob: -8.375298500061035
    3. '_c' → logprob: -10.625298500061035
    4. '_re' → logprob: -10.750298500061035
    5. 'cur' → logprob: -10.875298500061035
    6. '_cursor' → logprob: -13.875298500061035
    7. '_with' → logprob: -14.125298500061035
    8. '_cur' → logprob: -14.625298500061035
    9. 'urse' → logprob: -14.750298500061035
    10. '_' → logprob: -15.375298500061035

Token 920: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.00012023169983876869
    2. '(self' → logprob: -9.625120162963867
    3. 'with' → logprob: -9.875120162963867
    4. 'self' → logprob: -14.125120162963867
    5. '   ' → logprob: -14.750120162963867
    6. '
' → logprob: -15.125120162963867
    7. '_(' → logprob: -15.250120162963867
    8. '_' → logprob: -15.500120162963867
    9. '_WITH' → logprob: -15.500120162963867
    10. '_w' → logprob: -16.000120162963867

Token 921: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -5.037835580878891e-05
    2. 'self' → logprob: -10.37505054473877
    3. 'lines' → logprob: -11.12505054473877
    4. '_line' → logprob: -14.12505054473877
    5. '```' → logprob: -14.12505054473877
    6. '(self' → logprob: -14.62505054473877
    7. '_pairs' → logprob: -15.37505054473877
    8. 'def' → logprob: -15.50005054473877
    9. '_' → logprob: -15.62505054473877
    10. 'Lines' → logprob: -15.62505054473877

Token 922: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -14.000001907348633
    3. ' (' → logprob: -15.000001907348633
    4. 'self' → logprob: -15.000001907348633
    5. '(
' → logprob: -16.625001907348633
    6. '(s' → logprob: -17.125001907348633
    7. '       ' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '(state' → logprob: -18.500001907348633
    10. '
' → logprob: -19.500001907348633

Token 923: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.318681188422488e-05
    2. ' (' → logprob: -12.37501335144043
    3. 'self' → logprob: -12.62501335144043
    4. ',' → logprob: -12.75001335144043
    5. '(' → logprob: -13.50001335144043
    6. '       ' → logprob: -14.50001335144043
    7. '(state' → logprob: -15.50001335144043
    8. 'state' → logprob: -15.87501335144043
    9. '(s' → logprob: -16.00001335144043
    10. '   ' → logprob: -16.12501335144043

Token 924: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.014524973928928375
    2. ' state' → logprob: -4.514524936676025
    3. 'self' → logprob: -5.764524936676025
    4. '   ' → logprob: -8.389525413513184
    5. '       ' → logprob: -10.014525413513184
    6. ' self' → logprob: -11.014525413513184
    7. 'new' → logprob: -12.014525413513184
    8. '    ' → logprob: -12.139525413513184
    9. 'current' → logprob: -12.139525413513184
    10. ' ' → logprob: -12.264525413513184

Token 925: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021384824067354202
    2. '(self' → logprob: -6.627138614654541
    3. '       ' → logprob: -7.377138614654541
    4. 'self' → logprob: -8.877138137817383
    5. ' ,' → logprob: -11.002138137817383
    6. ',
' → logprob: -11.627138137817383
    7. ',self' → logprob: -11.752138137817383
    8. ')' → logprob: -12.377138137817383
    9. '   ' → logprob: -13.627138137817383
    10. ')(' → logprob: -13.752138137817383

Token 926: ' Pair' (ID: 41250)
  Prédit: 'Pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pair' → logprob: -0.0028539709746837616
    2. 'List' → logprob: -6.627853870391846
    3. ' Pair' → logprob: -6.752853870391846
    4. 'self' → logprob: -8.377854347229004
    5. 'state' → logprob: -9.752854347229004
    6. 'Point' → logprob: -10.752854347229004
    7. '   ' → logprob: -11.502854347229004
    8. 'Tuple' → logprob: -12.127854347229004
    9. 'int' → logprob: -12.252854347229004
    10. ''' → logprob: -12.502854347229004

Token 927: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.002847433090209961
    2. 'State' → logprob: -5.877847671508789
    3. '_state' → logprob: -11.627847671508789
    4. 'Pair' → logprob: -11.752847671508789
    5. 'state' → logprob: -12.002847671508789
    6. 'ning' → logprob: -12.002847671508789
    7. 'ng' → logprob: -13.127847671508789
    8. 'Point' → logprob: -13.252847671508789
    9. 'Mask' → logprob: -13.252847671508789
    10. 'air' → logprob: -14.127847671508789

Token 928: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.0009714908665046096
    2. 'state' → logprob: -8.250971794128418
    3. '   ' → logprob: -8.875971794128418
    4. '       ' → logprob: -9.250971794128418
    5. 'Point' → logprob: -9.250971794128418
    6. ',' → logprob: -9.250971794128418
    7. 'Points' → logprob: -9.625971794128418
    8. 'Pair' → logprob: -9.875971794128418
    9. 'Pairs' → logprob: -9.875971794128418
    10. 'self' → logprob: -10.625971794128418

Token 929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0722858102526516e-05
    2. ' ,' → logprob: -10.625041007995605
    3. 'self' → logprob: -11.375041007995605
    4. '       ' → logprob: -12.875041007995605
    5. ',self' → logprob: -13.375041007995605
    6. ')' → logprob: -16.25004005432129
    7. ',state' → logprob: -16.25004005432129
    8. '(self' → logprob: -16.37504005432129
    9. ',
' → logprob: -16.62504005432129
    10. '   ' → logprob: -16.87504005432129

Token 930: ' new' (ID: 620)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.07467450946569443
    2. 'pairs' → logprob: -3.449674606323242
    3. ' lines' → logprob: -3.574674606323242
    4. 'current' → logprob: -5.324674606323242
    5. 'formed' → logprob: -6.074674606323242
    6. 'existing' → logprob: -6.449674606323242
    7. 'line' → logprob: -6.699674606323242
    8. 'acc' → logprob: -7.074674606323242
    9. 'paired' → logprob: -8.199674606323242
    10. ' current' → logprob: -8.449674606323242

Token 931: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.13165763020515442
    2. '_pairs' → logprob: -2.131657600402832
    3. 'lines' → logprob: -5.631657600402832
    4. 'pairs' → logprob: -7.256657600402832
    5. '```' → logprob: -9.131657600402832
    6. ')' → logprob: -10.256657600402832
    7. '_line' → logprob: -10.381657600402832
    8. '[' → logprob: -10.381657600402832
    9. 's' → logprob: -10.756657600402832
    10. '_points' → logprob: -10.881657600402832

Token 932: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2684650719165802
    2. ',' → logprob: -1.5184650421142578
    3. '):' → logprob: -4.268465042114258
    4. ')' → logprob: -6.893465042114258
    5. '       ' → logprob: -7.268465042114258
    6. '   ' → logprob: -8.143465042114258
    7. '):
' → logprob: -8.893465042114258
    8. ' ,' → logprob: -9.268465042114258
    9. ' :' → logprob: -9.768465042114258
    10. '):

' → logprob: -10.643465042114258

Token 933: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0034228316508233547
    2. ' List' → logprob: -5.753422737121582
    3. '[List' → logprob: -8.753422737121582
    4. 'list' → logprob: -9.628422737121582
    5. ')' → logprob: -10.878422737121582
    6. '[(' → logprob: -14.253422737121582
    7. ' list' → logprob: -15.128422737121582
    8. '(List' → logprob: -15.128422737121582
    9. '   ' → logprob: -15.128422737121582
    10. '_list' → logprob: -15.503422737121582

Token 934: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015955790877342224
    2. '[List' → logprob: -8.87515926361084
    3. '[int' → logprob: -12.12515926361084
    4. '   ' → logprob: -12.50015926361084
    5. '[(' → logprob: -12.87515926361084
    6. ')' → logprob: -13.00015926361084
    7. '       ' → logprob: -13.50015926361084
    8. '[
' → logprob: -13.50015926361084
    9. ':' → logprob: -14.12515926361084
    10. '):' → logprob: -14.37515926361084

Token 935: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.625004768371582
    3. ' Tuple' → logprob: -13.625004768371582
    4. ']' → logprob: -16.1250057220459
    5. '   ' → logprob: -16.3750057220459
    6. 'Point' → logprob: -17.2500057220459
    7. '
' → logprob: -17.3750057220459
    8. 'Pair' → logprob: -17.8750057220459
    9. 'int' → logprob: -18.2500057220459
    10. 'tuple' → logprob: -18.8750057220459

Token 936: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.0484450437361374e-05
    2. 'int' → logprob: -10.125040054321289
    3. '(int' → logprob: -15.875040054321289
    4. ',int' → logprob: -16.87504005432129
    5. '[' → logprob: -17.00004005432129
    6. '
' → logprob: -17.25004005432129
    7. '   ' → logprob: -17.25004005432129
    8. '<int' → logprob: -18.12504005432129
    9. '])' → logprob: -18.37504005432129
    10. ']int' → logprob: -18.50004005432129

Token 937: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.016237881034612656
    2. ',' → logprob: -4.516237735748291
    3. '[int' → logprob: -5.266237735748291
    4. 'int' → logprob: -11.89123821258545
    5. ' ,' → logprob: -12.39123821258545
    6. ',List' → logprob: -14.01623821258545
    7. '(int' → logprob: -14.89123821258545
    8. ',Integer' → logprob: -15.14123821258545
    9. ',
' → logprob: -15.64123821258545
    10. '           ' → logprob: -15.89123821258545

Token 938: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002145858481526375
    2. ']):
' → logprob: -6.377145767211914
    3. ']])' → logprob: -8.752145767211914
    4. ']):' → logprob: -8.752145767211914
    5. ')])' → logprob: -10.252145767211914
    6. ' ])' → logprob: -10.252145767211914
    7. ')' → logprob: -11.002145767211914
    8. '       ' → logprob: -11.752145767211914
    9. ''])' → logprob: -11.877145767211914
    10. '   ' → logprob: -12.002145767211914

Token 939: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37020692229270935
    2. '       ' → logprob: -1.3702069520950317
    3. '(self' → logprob: -4.120206832885742
    4. ',' → logprob: -4.245206832885742
    5. ' ->' → logprob: -4.245206832885742
    6. '->' → logprob: -5.495206832885742
    7. ')' → logprob: -5.870206832885742
    8. ':
' → logprob: -6.995206832885742
    9. '   ' → logprob: -7.495206832885742
    10. '(' → logprob: -7.745206832885742

Token 940: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.4868770196917467e-05
    2. '
' → logprob: -10.875024795532227
    3. ' int' → logprob: -13.000024795532227
    4. '   ' → logprob: -13.625024795532227
    5. '[int' → logprob: -13.625024795532227
    6. '(int' → logprob: -14.375024795532227
    7. 'def' → logprob: -15.125024795532227
    8. '        
' → logprob: -16.125024795532227
    9. '    
' → logprob: -16.750024795532227
    10. '_int' → logprob: -17.000024795532227

Token 941: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19521817564964294
    2. ':
' → logprob: -1.9452182054519653
    3. '       ' → logprob: -3.445218086242676
    4. '):
' → logprob: -6.695218086242676
    5. '():
' → logprob: -7.695218086242676
    6. '   ' → logprob: -8.445218086242676
    7. '):' → logprob: -8.820218086242676
    8. '():' → logprob: -8.945218086242676
    9. ',' → logprob: -9.070218086242676
    10. ':

' → logprob: -10.195218086242676

Token 942: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008216609712690115
    2. 'if' → logprob: -7.250821590423584
    3. ' if' → logprob: -10.000822067260742
    4. 'dire' → logprob: -10.625822067260742
    5. '```' → logprob: -11.250822067260742
    6. 'lines' → logprob: -11.500822067260742
    7. '   ' → logprob: -12.125822067260742
    8. '#' → logprob: -12.625822067260742
    9. ' lines' → logprob: -13.375822067260742
    10. 'd' → logprob: -13.500822067260742

Token 943: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5880027413368225
    2. 'if' → logprob: -0.8380027413368225
    3. 'dire' → logprob: -4.713002681732178
    4. 'lines' → logprob: -6.713002681732178
    5. '#' → logprob: -7.213002681732178
    6. 'existing' → logprob: -7.963002681732178
    7. 'all' → logprob: -8.963003158569336
    8. 'd' → logprob: -8.963003158569336
    9. 'current' → logprob: -9.088003158569336
    10. ' if' → logprob: -9.088003158569336

Token 944: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14518269896507263
    2. 'if' → logprob: -2.0201826095581055
    3. ' if' → logprob: -6.2701826095581055
    4. 'lines' → logprob: -8.770182609558105
    5. '#' → logprob: -8.895182609558105
    6. 'dire' → logprob: -9.145182609558105
    7. 'points' → logprob: -10.395182609558105
    8. 'existing' → logprob: -10.395182609558105
    9. 'taken' → logprob: -10.520182609558105
    10. 'max' → logprob: -10.645182609558105

Token 945: ' Similar' (ID: 50901)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1816989779472351
    2. '       ' → logprob: -2.05669903755188
    3. '#' → logprob: -3.43169903755188
    4. 'existing' → logprob: -6.306698799133301
    5. 'lines' → logprob: -6.431698799133301
    6. 'current' → logprob: -7.306698799133301
    7. 'dire' → logprob: -7.306698799133301
    8. 'If' → logprob: -7.931698799133301
    9. 'all' → logprob: -8.5566987991333
    10. '"""
' → logprob: -8.9316987991333

Token 946: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1162030696868896
    2. 'to' → logprob: -1.2412030696868896
    3. '   ' → logprob: -1.6162030696868896
    4. 'def' → logprob: -1.9912030696868896
    5. ' to' → logprob: -3.3662030696868896
    6. '
' → logprob: -5.241203308105469
    7. '_to' → logprob: -5.616203308105469
    8. 'self' → logprob: -6.491203308105469
    9. '(self' → logprob: -6.866203308105469
    10. '```' → logprob: -7.616203308105469

Token 947: ' _' (ID: 1175)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0023436578921973705
    2. 'self' → logprob: -6.627343654632568
    3. 'def' → logprob: -8.127344131469727
    4. 're' → logprob: -8.127344131469727
    5. '   ' → logprob: -8.377344131469727
    6. '_count' → logprob: -9.252344131469727
    7. '       ' → logprob: -10.002344131469727
    8. '(self' → logprob: -11.002344131469727
    9. '_recursive' → logprob: -11.877344131469727
    10. '_continue' → logprob: -12.127344131469727

Token 948: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.8193366486229934e-05
    2. 'count' → logprob: -11.000018119812012
    3. '_re' → logprob: -14.500018119812012
    4. '
' → logprob: -15.250018119812012
    5. '_count' → logprob: -15.750018119812012
    6. 'def' → logprob: -15.875018119812012
    7. 'r' → logprob: -16.000019073486328
    8. '   ' → logprob: -16.250019073486328
    9. 'rec' → logprob: -16.875019073486328
    10. '#' → logprob: -17.250019073486328

Token 949: 'curse' (ID: 134738)
  Prédit: 'curse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curse' → logprob: -0.0028849986847490072
    2. '_re' → logprob: -6.627884864807129
    3. 'cur' → logprob: -6.752884864807129
    4. 'c' → logprob: -8.252884864807129
    5. '_c' → logprob: -9.627884864807129
    6. 're' → logprob: -10.502884864807129
    7. 'urse' → logprob: -10.877884864807129
    8. '_cur' → logprob: -11.627884864807129
    9. 'curve' → logprob: -13.002884864807129
    10. '_cursor' → logprob: -13.752884864807129

Token 950: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6872749328613281
    2. '(self' → logprob: -1.1872749328613281
    3. '       ' → logprob: -2.062274932861328
    4. ' but' → logprob: -2.812274932861328
    5. '
' → logprob: -6.437274932861328
    6. ',
' → logprob: -6.812274932861328
    7. '   ' → logprob: -7.437274932861328
    8. 'self' → logprob: -7.562274932861328
    9. 'but' → logprob: -7.687274932861328
    10. '(
' → logprob: -9.937274932861328

Token 951: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3926321864128113
    2. ' lines' → logprob: -1.517632246017456
    3. ' but' → logprob: -2.892632246017456
    4. 'lines' → logprob: -4.017632007598877
    5. 'state' → logprob: -4.267632007598877
    6. ' directions' → logprob: -5.267632007598877
    7. 'but' → logprob: -5.642632007598877
    8. ' state' → logprob: -5.767632007598877
    9. '        
' → logprob: -6.642632007598877
    10. '   ' → logprob: -6.892632007598877

Token 952: ' we' (ID: 581)
  Prédit: ' accum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accum' → logprob: -0.8623908162117004
    2. '       ' → logprob: -1.4873907566070557
    3. 'acc' → logprob: -2.4873907566070557
    4. ' collects' → logprob: -2.9873907566070557
    5. ' lines' → logprob: -3.7373907566070557
    6. 'def' → logprob: -3.7373907566070557
    7. ' we' → logprob: -3.8623907566070557
    8. 'includes' → logprob: -4.487390995025635
    9. 'passes' → logprob: -4.612390995025635
    10. 'collect' → logprob: -4.737390995025635

Token 953: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.1462347507476807
    2. 'pass' → logprob: -1.2712347507476807
    3. '       ' → logprob: -2.2712347507476807
    4. 'collect' → logprob: -2.8962347507476807
    5. ' pass' → logprob: -3.0212347507476807
    6. 'continue' → logprob: -3.0212347507476807
    7. ' accumulate' → logprob: -3.0212347507476807
    8. '   ' → logprob: -4.146234512329102
    9. 'keep' → logprob: -4.396234512329102
    10. 'carry' → logprob: -4.521234512329102

Token 954: ' lines' (ID: 8698)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.23268239200115204
    2. 'lines' → logprob: -1.8576823472976685
    3. ' lines' → logprob: -4.232682228088379
    4. 'all' → logprob: -4.357682228088379
    5. ' directions' → logprob: -4.857682228088379
    6. 'the' → logprob: -4.857682228088379
    7. 'existing' → logprob: -5.982682228088379
    8. '       ' → logprob: -5.982682228088379
    9. '#' → logprob: -7.107682228088379
    10. 'previous' → logprob: -7.107682228088379

Token 955: ' formed' (ID: 20680)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2254832237958908
    2. ',' → logprob: -1.9754831790924072
    3. 'and' → logprob: -3.3504831790924072
    4. ' and' → logprob: -4.475483417510986
    5. ':' → logprob: -5.850483417510986
    6. '=' → logprob: -6.100483417510986
    7. 'with' → logprob: -6.225483417510986
    8. 'that' → logprob: -6.600483417510986
    9. '.' → logprob: -6.850483417510986
    10. '(lines' → logprob: -6.975483417510986

Token 956: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4379781186580658
    2. 'and' → logprob: -2.0629780292510986
    3. ',' → logprob: -2.3129780292510986
    4. 'by' → logprob: -2.9379780292510986
    5. ' and' → logprob: -3.5629780292510986
    6. ' by' → logprob: -3.5629780292510986
    7. 'in' → logprob: -5.687978267669678
    8. 'from' → logprob: -5.812978267669678
    9. 'with' → logprob: -6.562978267669678
    10. '.' → logprob: -6.687978267669678

Token 957: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.002329148119315505
    2. ' far' → logprob: -6.752329349517822
    3. 'that' → logprob: -7.127329349517822
    4. '       ' → logprob: -8.002328872680664
    5. 'Far' → logprob: -11.502328872680664
    6. '_far' → logprob: -11.877328872680664
    7. '   ' → logprob: -13.627328872680664
    8. ' that' → logprob: -14.002328872680664
    9. '           ' → logprob: -14.127328872680664
    10. '
' → logprob: -14.877328872680664

Token 958: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21159705519676208
    2. ',' → logprob: -1.8365970849990845
    3. ' and' → logprob: -3.586596965789795
    4. 'and' → logprob: -7.086596965789795
    5. '.' → logprob: -7.336596965789795
    6. ':' → logprob: -7.461596965789795
    7. '(lines' → logprob: -8.211597442626953
    8. ' to' → logprob: -8.336597442626953
    9. ' with' → logprob: -8.836597442626953
    10. ' in' → logprob: -8.836597442626953

Token 959: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033558503491804004
    2. ' lines' → logprob: -9.000335693359375
    3. '           ' → logprob: -9.500335693359375
    4. ' and' → logprob: -10.250335693359375
    5. '   ' → logprob: -10.250335693359375
    6. ',' → logprob: -11.250335693359375
    7. '        ' → logprob: -11.500335693359375
    8. ' which' → logprob: -12.375335693359375
    9. 'tokens' → logprob: -12.375335693359375
    10. '```' → logprob: -12.375335693359375

Token 960: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9996181726455688
    2. ' lines' → logprob: -1.2496181726455688
    3. ' directions' → logprob: -1.8746181726455688
    4. 'dire' → logprob: -2.3746180534362793
    5. 'lines' → logprob: -3.2496180534362793
    6. ' and' → logprob: -3.8746180534362793
    7. 'and' (adapté à ' and') → logprob: -3.9996180534362793
    8. ' so' → logprob: -5.499618053436279
    9. ' passing' → logprob: -5.499618053436279
    10. 'prev' → logprob: -5.999618053436279

Token 961: ' at' (ID: 540)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.023853063583374
    2. 'compute' → logprob: -1.148853063583374
    3. 'calculate' → logprob: -2.398853063583374
    4. 'collect' → logprob: -2.523853063583374
    5. 'return' → logprob: -3.898853063583374
    6. 'use' → logprob: -4.023853302001953
    7. '       ' → logprob: -4.023853302001953
    8. 'combine' → logprob: -4.148853302001953
    9. ' pass' → logprob: -4.273853302001953
    10. 'their' → logprob: -4.398853302001953

Token 962: ' full' (ID: 3149)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.4758138656616211
    2. 'state' → logprob: -2.225813865661621
    3. ' each' → logprob: -2.225813865661621
    4. 'the' → logprob: -3.225813865661621
    5. 'least' → logprob: -3.350813865661621
    6. ' the' → logprob: -4.225813865661621
    7. '       ' → logprob: -4.225813865661621
    8. 'new' → logprob: -4.475813865661621
    9. 'some' → logprob: -5.100813865661621
    10. 'leaf' → logprob: -5.100813865661621

Token 963: ' pairing' (ID: 79656)
  Prédit: 'completion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'completion' → logprob: -0.7535341382026672
    2. 'coverage' → logprob: -2.0035340785980225
    3. '       ' → logprob: -2.3785340785980225
    4. 'depth' → logprob: -2.3785340785980225
    5. ' completion' → logprob: -3.2535340785980225
    6. ')' → logprob: -3.2535340785980225
    7. ' coverage' → logprob: -3.3785340785980225
    8. ' taken' → logprob: -3.8785340785980225
    9. 'taken' → logprob: -4.253534317016602
    10. ' recursion' → logprob: -4.503534317016602

Token 964: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5792115330696106
    2. ',' → logprob: -1.9542114734649658
    3. '):' → logprob: -2.079211473464966
    4. 'state' → logprob: -2.454211473464966
    5. '):
' → logprob: -3.579211473464966
    6. ':
' → logprob: -4.204211711883545
    7. '       ' → logprob: -4.829211711883545
    8. ' state' → logprob: -4.829211711883545
    9. '_state' → logprob: -5.079211711883545
    10. ')' → logprob: -5.704211711883545

Token 965: ' compute' (ID: 23864)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39773067831993103
    2. 'compute' → logprob: -2.022730588912964
    3. ' compute' → logprob: -2.397730588912964
    4. 'calculate' → logprob: -3.647730588912964
    5. ' lines' → logprob: -3.897730588912964
    6. 'count' → logprob: -4.397730827331543
    7. ' accumulate' → logprob: -4.772730827331543
    8. 'we' → logprob: -5.272730827331543
    9. '   ' → logprob: -5.397730827331543
    10. ' calculate' → logprob: -5.397730827331543

Token 966: ' total' (ID: 3609)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.6154748201370239
    2. 'the' → logprob: -1.740474820137024
    3. 'max' → logprob: -1.740474820137024
    4. ' the' → logprob: -3.4904747009277344
    5. 'dire' → logprob: -3.8654747009277344
    6. ' parallel' → logprob: -3.9904747009277344
    7. 'total' → logprob: -4.990474700927734
    8. ' directions' → logprob: -5.240474700927734
    9. 'self' → logprob: -5.365474700927734
    10. ' max' → logprob: -5.615474700927734

Token 967: ' parallel' (ID: 26697)
  Prédit: '_parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.3317239284515381
    2. '_lines' → logprob: -2.331723928451538
    3. 'parallel' → logprob: -2.581723928451538
    4. '_pairs' → logprob: -2.956723928451538
    5. ' parallel' → logprob: -3.831723928451538
    6. '```' → logprob: -4.956724166870117
    7. '       ' → logprob: -5.081724166870117
    8. 'lines' → logprob: -5.331724166870117
    9. '   ' → logprob: -5.456724166870117
    10. ' lines' → logprob: -5.706724166870117

Token 968: ' pairs' (ID: 24702)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.16469284892082214
    2. '_lines' → logprob: -1.9146928787231445
    3. 'pairs' → logprob: -6.1646928787231445
    4. ' lines' → logprob: -7.0396928787231445
    5. ' pairs' → logprob: -8.039692878723145
    6. '_' → logprob: -8.289692878723145
    7. '       ' → logprob: -8.414692878723145
    8. 'lines' → logprob: -8.664692878723145
    9. '```' → logprob: -9.164692878723145
    10. 's' → logprob: -9.164692878723145

Token 969: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020712753757834435
    2. ',' → logprob: -6.502071380615234
    3. ' if' → logprob: -8.752071380615234
    4. ':' → logprob: -9.252071380615234
    5. '```' → logprob: -9.627071380615234
    6. '{' → logprob: -10.002071380615234
    7. ' =' → logprob: -10.252071380615234
    8. ')' → logprob: -10.377071380615234
    9. '   ' → logprob: -10.502071380615234
    10. '):
' → logprob: -10.752071380615234

Token 970: ' all' (ID: 722)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.1477556228637695
    2. 'all' → logprob: -1.2727556228637695
    3. 'lines' → logprob: -2.3977556228637695
    4. 'self' → logprob: -2.6477556228637695
    5. 'dire' → logprob: -2.6477556228637695
    6. ' lines' → logprob: -3.0227556228637695
    7. ' all' → logprob: -3.5227556228637695
    8. 'the' → logprob: -3.7727556228637695
    9. '       ' → logprob: -4.0227556228637695
    10. ' new' → logprob: -4.5227556228637695

Token 971: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.014899562112987041
    2. ' lines' → logprob: -4.639899730682373
    3. '       ' → logprob: -6.514899730682373
    4. 'dire' → logprob: -6.639899730682373
    5. 'pairs' → logprob: -6.639899730682373
    6. '           ' → logprob: -8.139899253845215
    7. 'existing' → logprob: -8.514899253845215
    8. 'acc' → logprob: -9.014899253845215
    9. 'formed' → logprob: -9.389899253845215
    10. 'new' → logprob: -10.014899253845215

Token 972: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038885537069290876
    2. ',' → logprob: -6.1288886070251465
    3. '   ' → logprob: -8.003888130187988
    4. ':' → logprob: -8.003888130187988
    5. ')' → logprob: -8.128888130187988
    6. '{' → logprob: -8.503888130187988
    7. '        
' → logprob: -8.878888130187988
    8. '<|end|>' → logprob: -9.253888130187988
    9. '#' → logprob: -9.753888130187988
    10. ' if' → logprob: -10.128888130187988

Token 973: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030936390976421535
    2. '   ' → logprob: -8.500308990478516
    3. ' if' → logprob: -10.500308990478516
    4. '        
' → logprob: -10.625308990478516
    5. ')' → logprob: -10.750308990478516
    6. ',' → logprob: -11.375308990478516
    7. ' lines' → logprob: -11.875308990478516
    8. '<|end|>' → logprob: -12.750308990478516
    9. '```' → logprob: -13.500308990478516
    10. '           ' → logprob: -13.750308990478516

Token 974: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017953701317310333
    2. ' if' → logprob: -6.626795291900635
    3. ' lines' → logprob: -8.501795768737793
    4. 'if' → logprob: -8.751795768737793
    5. '   ' → logprob: -10.251795768737793
    6. ')' → logprob: -10.751795768737793
    7. '        
' → logprob: -11.001795768737793
    8. ',' → logprob: -11.126795768737793
    9. '
' → logprob: -12.001795768737793
    10. '#' → logprob: -12.251795768737793

Token 975: ' do' (ID: 621)
  Prédit: 'avoid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avoid' → logprob: -0.3327379822731018
    2. 'opt' → logprob: -1.332737922668457
    3. ' avoid' → logprob: -5.082737922668457
    4. '       ' → logprob: -5.082737922668457
    5. 'prevent' → logprob: -6.207737922668457
    6. 'support' → logprob: -7.207737922668457
    7. 'reduce' → logprob: -7.457737922668457
    8. 'continue' → logprob: -7.707737922668457
    9. 'handle' → logprob: -7.832737922668457
    10. 'keep' → logprob: -8.207737922668457

Token 976: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -1.1811455488204956
    2. 'this' → logprob: -1.3061455488204956
    3. '       ' → logprob: -1.5561455488204956
    4. 'so' → logprob: -1.8061455488204956
    5. ' this' → logprob: -3.306145668029785
    6. 'that' → logprob: -5.681145668029785
    7. '   ' → logprob: -6.431145668029785
    8. '           ' → logprob: -6.431145668029785
    9. ' that' → logprob: -6.681145668029785
    10. ' lines' → logprob: -7.806145668029785

Token 977: ' efficiently' (ID: 34229)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.060953959822654724
    2. '       ' → logprob: -3.0609538555145264
    3. ':' → logprob: -4.5609540939331055
    4. ' we' → logprob: -7.8109540939331055
    5. ' lines' → logprob: -8.435954093933105
    6. '   ' → logprob: -8.560954093933105
    7. ',
' → logprob: -8.810954093933105
    8. ':
' → logprob: -8.935954093933105
    9. '):
' → logprob: -9.185954093933105
    10. '):' → logprob: -9.435954093933105

Token 978: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04424205422401428
    2. '       ' → logprob: -3.1692421436309814
    3. ' we' → logprob: -8.169241905212402
    4. ' lines' → logprob: -8.669241905212402
    5. ' ,' → logprob: -8.919241905212402
    6. '   ' → logprob: -9.294241905212402
    7. ':' → logprob: -9.294241905212402
    8. '.' → logprob: -9.544241905212402
    9. ',
' → logprob: -9.544241905212402
    10. ')' → logprob: -10.169241905212402

Token 979: ' store' (ID: 4897)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4177719056606293
    2. ' if' → logprob: -1.6677719354629517
    3. 'if' → logprob: -2.667771816253662
    4. ' we' → logprob: -3.542771816253662
    5. 'we' → logprob: -4.042771816253662
    6. ' lines' → logprob: -4.042771816253662
    7. ' all' → logprob: -5.167771816253662
    8. 'all' → logprob: -5.542771816253662
    9. ' accumulate' → logprob: -5.792771816253662
    10. ' pass' → logprob: -6.417771816253662

Token 980: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9380421042442322
    2. 'lines' → logprob: -1.313042163848877
    3. 'self' → logprob: -2.563042163848877
    4. ' lines' → logprob: -2.813042163848877
    5. ' all' → logprob: -3.063042163848877
    6. 'dire' → logprob: -3.188042163848877
    7. '       ' → logprob: -3.688042163848877
    8. 'the' → logprob: -3.813042163848877
    9. ' the' → logprob: -4.563042163848877
    10. 'prev' → logprob: -4.688042163848877

Token 981: ' pairs' (ID: 24702)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.41719838976860046
    2. ' lines' → logprob: -1.1671984195709229
    3. 'new' → logprob: -4.542198181152344
    4. 'previous' → logprob: -5.542198181152344
    5. 'dire' → logprob: -5.667198181152344
    6. '       ' → logprob: -6.167198181152344
    7. 'self' → logprob: -6.292198181152344
    8. ' new' → logprob: -6.542198181152344
    9. '_lines' → logprob: -6.667198181152344
    10. 'pairs' → logprob: -7.292198181152344

Token 982: ' formed' (ID: 20680)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6493433117866516
    2. ',' → logprob: -1.2743432521820068
    3. ' in' → logprob: -2.649343252182007
    4. ' lines' → logprob: -3.149343252182007
    5. ' so' → logprob: -4.524343490600586
    6. 'in' → logprob: -4.524343490600586
    7. ' formed' → logprob: -4.774343490600586
    8. ' and' → logprob: -5.024343490600586
    9. 'formed' → logprob: -5.024343490600586
    10. '(lines' → logprob: -5.149343490600586

Token 983: ' in' (ID: 306)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.18876315653324127
    2. ',' → logprob: -2.31376314163208
    3. 'so' → logprob: -3.81376314163208
    4. ' in' → logprob: -4.06376314163208
    5. '       ' → logprob: -4.56376314163208
    6. 'in' → logprob: -4.81376314163208
    7. ' lines' → logprob: -5.68876314163208
    8. ' and' → logprob: -5.81376314163208
    9. ' as' → logprob: -6.18876314163208
    10. 'and' → logprob: -6.56376314163208

Token 984: ' recursion' (ID: 122185)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2039778232574463
    2. 'self' → logprob: -2.7039778232574463
    3. 'state' → logprob: -3.0789778232574463
    4. 'the' → logprob: -3.5789778232574463
    5. ' new' → logprob: -4.828977584838867
    6. '       ' → logprob: -4.953977584838867
    7. 'lines' → logprob: -4.953977584838867
    8. 'a' → logprob: -5.078977584838867
    9. 'all' → logprob: -5.328977584838867
    10. ' the' → logprob: -6.828977584838867

Token 985: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7451637387275696
    2. ',' → logprob: -1.1201636791229248
    3. ' and' → logprob: -2.370163679122925
    4. ' as' → logprob: -3.620163679122925
    5. ' so' → logprob: -3.995163679122925
    6. ' in' → logprob: -4.120163917541504
    7. '.' → logprob: -4.620163917541504
    8. ')' → logprob: -4.745163917541504
    9. 'and' → logprob: -4.995163917541504
    10. ' lines' → logprob: -5.370163917541504

Token 986: ' a' (ID: 261)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6692069172859192
    2. 'a' → logprob: -1.5442068576812744
    3. 'lines' → logprob: -2.4192068576812744
    4. 'parameters' → logprob: -2.6692068576812744
    5. 'parameter' → logprob: -3.6692068576812744
    6. ' lines' → logprob: -4.4192070960998535
    7. 'arguments' → logprob: -4.4192070960998535
    8. 'passed' → logprob: -4.5442070960998535
    9. 'the' → logprob: -4.9192070960998535
    10. ' new' → logprob: -5.2942070960998535

Token 987: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8530591130256653
    2. 'parameter' → logprob: -0.9780591130256653
    3. ' list' → logprob: -2.1030590534210205
    4. ' parameter' → logprob: -2.8530590534210205
    5. 'single' → logprob: -4.4780592918396
    6. ' single' → logprob: -6.3530592918396
    7. 'flat' → logprob: -6.8530592918396
    8. 'argument' → logprob: -7.2280592918396
    9. 'combined' → logprob: -7.2280592918396
    10. 'param' → logprob: -7.8530592918396

Token 988: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6543635129928589
    2. ',' → logprob: -0.9043635129928589
    3. '.' → logprob: -3.9043636322021484
    4. ')' → logprob: -3.9043636322021484
    5. ' and' → logprob: -4.029363632202148
    6. ' lines' → logprob: -5.654363632202148
    7. ' of' → logprob: -6.029363632202148
    8. ':' → logprob: -6.529363632202148
    9. '):
' → logprob: -6.904363632202148
    10. ' in' → logprob: -6.904363632202148

Token 989: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008055794751271605
    2. '   ' → logprob: -7.875805377960205
    3. '
' → logprob: -8.375805854797363
    4. ')' → logprob: -9.500805854797363
    5. '        
' → logprob: -10.375805854797363
    6. ',' → logprob: -10.625805854797363
    7. ' lines' → logprob: -10.750805854797363
    8. '<|end|>' → logprob: -11.625805854797363
    9. '```' → logprob: -11.875805854797363
    10. '#' → logprob: -12.500805854797363

Token 990: ' Use' (ID: 7649)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0074343509040772915
    2. 'if' → logprob: -5.132434368133545
    3. ' if' → logprob: -6.882434368133545
    4. '   ' → logprob: -9.132433891296387
    5. ' lines' → logprob: -9.132433891296387
    6. 'all' → logprob: -9.382433891296387
    7. 'lines' → logprob: -9.382433891296387
    8. '
' → logprob: -10.007433891296387
    9. '#' → logprob: -11.132433891296387
    10. '        
' → logprob: -12.007433891296387

Token 991: ' memo' (ID: 46393)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.46676328778266907
    2. 'memo' → logprob: -1.7167632579803467
    3. 'new' → logprob: -2.2167632579803467
    4. 'a' → logprob: -3.5917632579803467
    5. ' memo' → logprob: -4.591763496398926
    6. ' self' → logprob: -4.591763496398926
    7. ' new' → logprob: -4.716763496398926
    8. 'lines' → logprob: -5.091763496398926
    9. ' a' → logprob: -5.216763496398926
    10. 'cache' → logprob: -5.716763496398926

Token 992: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -1.0646262168884277
    2. ' =' → logprob: -1.5646262168884277
    3. '   ' → logprob: -2.0646262168884277
    4. '       ' → logprob: -2.3146262168884277
    5. ':' → logprob: -2.5646262168884277
    6. ' ' → logprob: -4.064626216888428
    7. '
' → logprob: -4.439626216888428
    8. ':
' → logprob: -4.439626216888428
    9. 'ized' → logprob: -4.439626216888428
    10. '.setdefault' → logprob: -4.439626216888428

Token 993: ' based' (ID: 4122)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2137264758348465
    2. ',' → logprob: -2.21372652053833
    3. '(self' → logprob: -3.08872652053833
    4. ')' → logprob: -3.83872652053833
    5. '(state' → logprob: -5.21372652053833
    6. '(' → logprob: -6.21372652053833
    7. '   ' → logprob: -6.33872652053833
    8. '(
' → logprob: -6.71372652053833
    9. '[' → logprob: -7.08872652053833
    10. 'def' → logprob: -7.33872652053833

Token 994: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.10072405636310577
    2. ' on' → logprob: -2.3507239818573
    3. 'def' → logprob: -8.100724220275879
    4. '       ' → logprob: -9.850724220275879
    5. 'only' → logprob: -9.975724220275879
    6. ',' → logprob: -10.975724220275879
    7. '_on' → logprob: -11.225724220275879
    8. '   ' → logprob: -11.600724220275879
    9. ')' → logprob: -11.725724220275879
    10. '<|end|>' → logprob: -11.850724220275879

Token 995: ' state' (ID: 2608)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.57855224609375
    2. 'state' → logprob: -0.82855224609375
    3. ' (' → logprob: -6.32855224609375
    4. ' state' → logprob: -7.20355224609375
    5. '(' → logprob: -10.20355224609375
    6. '   ' → logprob: -11.57855224609375
    7. '(st' → logprob: -12.07855224609375
    8. '[state' → logprob: -12.32855224609375
    9. '(self' → logprob: -12.57855224609375
    10. '(s' → logprob: -12.82855224609375

Token 996: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6885124444961548
    2. ' and' → logprob: -1.3135124444961548
    3. '       ' → logprob: -2.0635123252868652
    4. ')' → logprob: -3.0635123252868652
    5. 'and' → logprob: -3.9385123252868652
    6. '):' → logprob: -4.563512325286865
    7. ':' → logprob: -5.063512325286865
    8. '):
' → logprob: -5.688512325286865
    9. ' ,' → logprob: -6.188512325286865
    10. ',
' → logprob: -6.438512325286865

Token 997: ' fro' (ID: 16956)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.030613558366894722
    2. 'fro' → logprob: -3.780613660812378
    3. 'len' → logprob: -5.530613422393799
    4. ' tuple' → logprob: -6.780613422393799
    5. 'hash' → logprob: -6.905613422393799
    6. '
' → logprob: -7.405613422393799
    7. '(tuple' → logprob: -8.405613899230957
    8. '
' → logprob: -9.530613899230957
    9. 'id' → logprob: -9.655613899230957
    10. '```' → logprob: -9.780613899230957

Token 998: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -5.7053759519476444e-05
    2. 'zen' → logprob: -10.000057220458984
    3. 'zes' → logprob: -12.000057220458984
    4. 'zent' → logprob: -12.750057220458984
    5. 'zend' → logprob: -13.250057220458984
    6. 'zon' → logprob: -14.875057220458984
    7. '```' → logprob: -15.500057220458984
    8. 'z' → logprob: -16.625057220458984
    9. 'ze' → logprob: -16.875057220458984
    10. 'zs' → logprob: -17.125057220458984

Token 999: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.00013834332639817148
    2. 't' → logprob: -9.875138282775879
    3. 'ze' → logprob: -10.750138282775879
    4. 'e' → logprob: -10.750138282775879
    5. 'ent' → logprob: -11.000138282775879
    6. 'set' → logprob: -11.250138282775879
    7. '{' → logprob: -12.375138282775879
    8. '```' → logprob: -12.625138282775879
    9. 'ets' → logprob: -13.500138282775879
    10. 'ет' → logprob: -14.125138282775879

Token 1000: '(lines' (ID: 73839)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.0687919855117798
    2. '((' → logprob: -1.1937919855117798
    3. '({' → logprob: -1.6937919855117798
    4. ')' → logprob: -3.4437918663024902
    5. '{' → logprob: -3.4437918663024902
    6. ',' → logprob: -3.9437918663024902
    7. ')
' → logprob: -4.69379186630249
    8. '(lines' → logprob: -4.81879186630249
    9. '([(' → logprob: -5.06879186630249
    10. '_' → logprob: -5.31879186630249

Token 1001: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8149515390396118
    2. '):
' → logprob: -1.5649515390396118
    3. '):' → logprob: -1.9399515390396118
    4. '       ' → logprob: -1.9399515390396118
    5. ')
' → logprob: -3.4399514198303223
    6. ',' → logprob: -4.564951419830322
    7. '),' → logprob: -5.439951419830322
    8. '))' → logprob: -5.564951419830322
    9. '   ' → logprob: -6.314951419830322
    10. '_' → logprob: -6.814951419830322

Token 1002: ' impossible' (ID: 19786)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014039628207683563
    2. ':' → logprob: -4.514039516448975
    3. ',' → logprob: -7.014039516448975
    4. '
' → logprob: -7.389039516448975
    5. '{' → logprob: -8.139039993286133
    6. '):' → logprob: -8.139039993286133
    7. '```' → logprob: -8.764039993286133
    8. '(' → logprob: -8.889039993286133
    9. '):
' → logprob: -9.139039993286133
    10. ')' → logprob: -9.514039993286133

Token 1003: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7963969707489014
    2. ':' → logprob: -1.1713969707489014
    3. '):' → logprob: -1.9213969707489014
    4. ',' → logprob: -3.1713969707489014
    5. ')' → logprob: -4.0463972091674805
    6. '):
' → logprob: -4.5463972091674805
    7. '   ' → logprob: -4.6713972091674805
    8. ':
' → logprob: -5.4213972091674805
    9. '
' → logprob: -6.6713972091674805
    10. ' and' → logprob: -6.9213972091674805

Token 1004: 'hu' (ID: 6916)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9097087979316711
    2. '):' → logprob: -1.0347087383270264
    3. '):
' → logprob: -2.1597087383270264
    4. '       ' → logprob: -2.1597087383270264
    5. ',' → logprob: -5.9097089767456055
    6. ')
' → logprob: -6.4097089767456055
    7. ':' → logprob: -6.7847089767456055
    8. '),' → logprob: -7.0347089767456055
    9. ' because' → logprob: -7.0347089767456055
    10. ' )' → logprob: -7.2847089767456055

Token 1005: 'ge' (ID: 684)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27036330103874207
    2. ')' → logprob: -1.5203633308410645
    3. 'b' → logprob: -5.6453633308410645
    4. '<|end|>' → logprob: -5.6453633308410645
    5. '#' → logprob: -6.0203633308410645
    6. 'g' → logprob: -6.3953633308410645
    7. 'ntil' → logprob: -6.5203633308410645
    8. 'd' → logprob: -6.6453633308410645
    9. 'nt' → logprob: -6.7703633308410645
    10. 'e' → logprob: -7.6453633308410645

Token 1006: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021534085273742676
    2. ' to' → logprob: -4.896533966064453
    3. ',' → logprob: -5.396533966064453
    4. ' )' → logprob: -5.646533966064453
    5. '),' → logprob: -6.896533966064453
    6. '
' → logprob: -7.021533966064453
    7. ' because' → logprob: -7.771533966064453
    8. '<|end|>' → logprob: -7.771533966064453
    9. 'to' → logprob: -8.021533966064453
    10. ' due' → logprob: -8.271533966064453

Token 1007: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010552167892456055
    2. '
' → logprob: -4.885552406311035
    3. ')' → logprob: -6.510552406311035
    4. ',' → logprob: -7.635552406311035
    5. '        
' → logprob: -7.635552406311035
    6. '   ' → logprob: -8.510552406311035
    7. '```' → logprob: -9.635552406311035
    8. '`' → logprob: -10.260552406311035
    9. '#' → logprob: -11.010552406311035
    10. '           ' → logprob: -11.010552406311035

Token 1008: ' Instead' (ID: 21050)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0258542001247406
    2. '
' → logprob: -4.025854110717773
    3. '#' → logprob: -6.025854110717773
    4. 'if' → logprob: -6.525854110717773
    5. 'lines' → logprob: -6.900854110717773
    6. '   ' → logprob: -7.150854110717773
    7. ' lines' → logprob: -7.150854110717773
    8. '        
' → logprob: -8.400854110717773
    9. '```' → logprob: -8.400854110717773
    10. ' if' → logprob: -8.775854110717773

Token 1009: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7952179312705994
    2. ',' → logprob: -0.9202179312705994
    3. ':' → logprob: -2.045217990875244
    4. '
' → logprob: -5.045217990875244
    5. ':
' → logprob: -5.545217990875244
    6. '   ' → logprob: -6.170217990875244
    7. ' of' → logprob: -6.670217990875244
    8. 'def' → logprob: -6.795217990875244
    9. 'return' → logprob: -7.170217990875244
    10. '        
' → logprob: -7.170217990875244

Token 1010: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8209297060966492
    2. 'dire' → logprob: -1.445929765701294
    3. 'lines' → logprob: -1.445929765701294
    4. 'we' → logprob: -3.320929765701294
    5. '       ' → logprob: -3.445929765701294
    6. 'pass' → logprob: -5.570929527282715
    7. 'return' → logprob: -5.570929527282715
    8. ' lines' → logprob: -6.445929527282715
    9. 'all' → logprob: -6.695929527282715
    10. 'acc' → logprob: -6.695929527282715

Token 1011: ' accumulate' (ID: 74226)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -1.2590678930282593
    2. 'use' → logprob: -1.5090678930282593
    3. 'cache' → logprob: -2.009068012237549
    4. 'acc' → logprob: -2.384068012237549
    5. 'pass' → logprob: -2.759068012237549
    6. 'return' → logprob: -3.009068012237549
    7. ' use' → logprob: -3.884068012237549
    8. 'try' → logprob: -4.134068012237549
    9. 'can' → logprob: -4.134068012237549
    10. 'def' → logprob: -4.259068012237549

Token 1012: ' line' (ID: 2543)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.4370627701282501
    2. 'lines' → logprob: -1.9370627403259277
    3. ' lines' → logprob: -2.5620627403259277
    4. ' directions' → logprob: -2.6870627403259277
    5. 'all' → logprob: -3.5620627403259277
    6. 'the' → logprob: -4.312062740325928
    7. ' all' → logprob: -5.062062740325928
    8. ' the' → logprob: -5.062062740325928
    9. '       ' → logprob: -5.937062740325928
    10. '#' → logprob: -6.562062740325928

Token 1013: ' directions' (ID: 24921)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013665644451975822
    2. 'dire' → logprob: -5.138665676116943
    3. '_d' → logprob: -5.388665676116943
    4. '_dirs' → logprob: -6.388665676116943
    5. 'dirs' → logprob: -7.638665676116943
    6. '_pairs' → logprob: -8.763665199279785
    7. '_vectors' → logprob: -8.763665199279785
    8. '_list' → logprob: -9.013665199279785
    9. 'd' → logprob: -9.013665199279785
    10. ' directions' → logprob: -9.638665199279785

Token 1014: ' increment' (ID: 24032)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030957728624343872
    2. ',' → logprob: -4.1559576988220215
    3. ' and' → logprob: -5.2809576988220215
    4. '(lines' → logprob: -5.9059576988220215
    5. 'and' → logprob: -6.5309576988220215
    6. '(self' → logprob: -6.6559576988220215
    7. '   ' → logprob: -7.5309576988220215
    8. ')' → logprob: -7.6559576988220215
    9. ' (' → logprob: -7.7809576988220215
    10. '(' → logprob: -7.7809576988220215

Token 1015: 'ally' (ID: 2146)
  Prédit: 'ally'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ally' → logprob: -0.0031518118921667337
    2. 'ent' → logprob: -7.253151893615723
    3. 'aly' → logprob: -7.378151893615723
    4. 'al' → logprob: -7.628151893615723
    5. 'ment' → logprob: -8.128151893615723
    6. 'ently' → logprob: -8.128151893615723
    7. '```' → logprob: -8.753151893615723
    8. 'ly' → logprob: -9.378151893615723
    9. '=' → logprob: -10.003151893615723
    10. 'ement' → logprob: -10.003151893615723

Token 1016: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017033470794558525
    2. ',' → logprob: -4.392033576965332
    3. ':' → logprob: -6.767033576965332
    4. '.' → logprob: -7.142033576965332
    5. ' and' → logprob: -7.392033576965332
    6. ')' → logprob: -7.767033576965332
    7. ' =' → logprob: -8.142033576965332
    8. '   ' → logprob: -8.642033576965332
    9. '):' → logprob: -8.767033576965332
    10. '):
' → logprob: -8.892033576965332

Token 1017: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0099188769236207
    2. '        ' → logprob: -5.384918689727783
    3. '        
' → logprob: -6.509918689727783
    4. ')' → logprob: -6.634918689727783
    5. ',' → logprob: -7.134918689727783
    6. '           ' → logprob: -8.259919166564941
    7. '    ' → logprob: -8.384919166564941
    8. '   ' → logprob: -8.509919166564941
    9. ' )' → logprob: -8.884919166564941
    10. '`' → logprob: -9.509919166564941

Token 1018: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014064306393265724
    2. ' lines' → logprob: -5.014064311981201
    3. ')' → logprob: -6.514064311981201
    4. '        
' → logprob: -7.264064311981201
    5. ',' → logprob: -7.389064311981201
    6. '#' → logprob: -7.389064311981201
    7. '```' → logprob: -7.639064311981201
    8. 'lines' → logprob: -8.014063835144043
    9. '   ' → logprob: -8.139063835144043
    10. 'def' → logprob: -8.264063835144043

Token 1019: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7970299124717712
    2. '#' → logprob: -1.797029972076416
    3. 'if' → logprob: -1.797029972076416
    4. 'lines' → logprob: -2.422029972076416
    5. 'dire' → logprob: -3.422029972076416
    6. '
' → logprob: -3.922029972076416
    7. 'prev' → logprob: -4.297029972076416
    8. 'existing' → logprob: -4.672029972076416
    9. 'all' → logprob: -4.922029972076416
    10. 'current' → logprob: -4.922029972076416

Token 1020: ' exploit' (ID: 55310)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6483327150344849
    2. ' def' → logprob: -1.3983327150344849
    3. '       ' → logprob: -2.1483325958251953
    4. ' need' → logprob: -3.7733325958251953
    5. ' can' → logprob: -4.023332595825195
    6. ' continue' → logprob: -4.273332595825195
    7. 'continue' → logprob: -4.398332595825195
    8. '   ' → logprob: -4.773332595825195
    9. 'return' → logprob: -5.273332595825195
    10. 'import' → logprob: -5.273332595825195

Token 1021: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7552946209907532
    2. '       ' → logprob: -2.1302945613861084
    3. 'memo' → logprob: -2.5052945613861084
    4. ' the' → logprob: -2.7552945613861084
    5. 'self' → logprob: -3.1302945613861084
    6. 'dire' → logprob: -3.2552945613861084
    7. ' directions' → logprob: -3.8802945613861084
    8. 'def' → logprob: -4.0052947998046875
    9. 'new' → logprob: -4.1302947998046875
    10. 'a' → logprob: -4.2552947998046875

Token 1022: ' no' (ID: 860)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5316935777664185
    2. 'lines' → logprob: -2.156693458557129
    3. 'new' → logprob: -3.031693458557129
    4. 'each' → logprob: -3.156693458557129
    5. ' lines' → logprob: -3.281693458557129
    6. 'self' → logprob: -3.656693458557129
    7. 'len' → logprob: -3.656693458557129
    8. 'def' → logprob: -3.906693458557129
    9. ' the' → logprob: -3.906693458557129
    10. 'for' → logprob: -4.281693458557129

Token 1023: ' three' (ID: 3407)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4143942594528198
    2. ')' → logprob: -1.6643942594528198
    3. ' lines' → logprob: -1.9143942594528198
    4. 'n' → logprob: -2.0393943786621094
    5. ' new' → logprob: -3.1643943786621094
    6. 't' → logprob: -3.4143943786621094
    7. 'def' → logprob: -3.6643943786621094
    8. 'w' → logprob: -3.7893943786621094
    9. ' more' → logprob: -4.164394378662109
    10. 'd' → logprob: -4.539394378662109

Token 1024: ' points' (ID: 5571)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.3168889582157135
    2. ' points' → logprob: -1.6918889284133911
    3. 'points' → logprob: -3.9418890476226807
    4. '_lines' → logprob: -4.191888809204102
    5. 'lines' → logprob: -4.191888809204102
    6. ' pairs' → logprob: -4.941888809204102
    7. '_points' → logprob: -5.066888809204102
    8. ' tokens' → logprob: -5.941888809204102
    9. '   ' → logprob: -6.066888809204102
    10. '_pairs' → logprob: -6.441888809204102

Token 1025: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.3348473608493805
    2. ' can' → logprob: -2.0848474502563477
    3. 'are' → logprob: -2.3348474502563477
    4. ' col' → logprob: -3.5848474502563477
    5. 'can' → logprob: -4.834847450256348
    6. ' lie' → logprob: -5.459847450256348
    7. 'col' → logprob: -5.584847450256348
    8. ' in' → logprob: -5.709847450256348
    9. ' will' → logprob: -5.709847450256348
    10. ' points' → logprob: -6.209847450256348

Token 1026: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.43389004468917847
    2. 'col' → logprob: -1.0588901042938232
    3. 'aligned' → logprob: -5.808889865875244
    4. ' guaranteed' → logprob: -8.058890342712402
    5. ' aligned' → logprob: -8.558890342712402
    6. ' ' → logprob: -8.933890342712402
    7. 'co' → logprob: -9.058890342712402
    8. ' on' → logprob: -9.058890342712402
    9. 'always' → logprob: -9.183890342712402
    10. ' always' → logprob: -9.308890342712402

Token 1027: 'inear' (ID: 133017)
  Prédit: 'inear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inear' → logprob: -0.18854716420173645
    2. 'linear' → logprob: -2.813547134399414
    3. 'ine' → logprob: -2.813547134399414
    4. '       ' → logprob: -3.938547134399414
    5. '   ' → logprob: -4.063547134399414
    6. '           ' → logprob: -5.688547134399414
    7. 'line' → logprob: -6.313547134399414
    8. '
' → logprob: -6.313547134399414
    9. '    ' → logprob: -7.313547134399414
    10. '               ' → logprob: -7.563547134399414

Token 1028: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010946299880743027
    2. ',' → logprob: -5.510946273803711
    3. '
' → logprob: -6.135946273803711
    4. '):
' → logprob: -7.135946273803711
    5. '   ' → logprob: -7.260946273803711
    6. '        
' → logprob: -7.385946273803711
    7. ':' → logprob: -7.510946273803711
    8. '.' → logprob: -7.885946273803711
    9. ' and' → logprob: -8.260946273803711
    10. '):' → logprob: -8.385946273803711

Token 1029: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4939608871936798
    2. ' so' → logprob: -1.1189608573913574
    3. ' and' → logprob: -3.4939608573913574
    4. '        ' → logprob: -4.618960857391357
    5. '               ' → logprob: -5.743960857391357
    6. 'so' → logprob: -5.993960857391357
    7. 'and' → logprob: -6.118960857391357
    8. '           ' → logprob: -6.243960857391357
    9. ' but' → logprob: -6.493960857391357
    10. ' continuing' → logprob: -6.493960857391357

Token 1030: ' line' (ID: 2543)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1831626892089844
    2. '       ' → logprob: -1.4331626892089844
    3. 'dire' → logprob: -2.1831626892089844
    4. '#' → logprob: -2.4331626892089844
    5. 'each' → logprob: -2.9331626892089844
    6. 'all' → logprob: -3.0581626892089844
    7. 'lines' → logprob: -3.3081626892089844
    8. '```' → logprob: -3.6831626892089844
    9. ' the' → logprob: -3.8081626892089844
    10. ' lines' → logprob: -3.9331626892089844

Token 1031: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.5506399273872375
    2. 's' → logprob: -1.3006398677825928
    3. ' directions' → logprob: -2.1756398677825928
    4. '       ' → logprob: -4.300640106201172
    5. 'vectors' → logprob: -5.050640106201172
    6. 'points' → logprob: -5.800640106201172
    7. '_vectors' → logprob: -5.925640106201172
    8. '           ' → logprob: -6.050640106201172
    9. '   ' → logprob: -6.800640106201172
    10. 'dirs' → logprob: -6.800640106201172

Token 1032: ' from' (ID: 591)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.2197604179382324
    2. ' are' → logprob: -1.7197604179382324
    3. '       ' → logprob: -1.9697604179382324
    4. '<|end|>' → logprob: -2.2197604179382324
    5. ' can' → logprob: -2.7197604179382324
    6. ' have' → logprob: -2.8447604179382324
    7. '           ' → logprob: -3.0947604179382324
    8. ' must' → logprob: -4.094760417938232
    9. ' will' → logprob: -4.344760417938232
    10. ')' → logprob: -4.469760417938232

Token 1033: ' previously' (ID: 14380)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'previous' → logprob: -0.7922375798225403
    2. 'the' → logprob: -2.1672375202178955
    3. 'all' → logprob: -2.2922375202178955
    4. 'pairs' → logprob: -2.7922375202178955
    5. 'new' → logprob: -3.2922375202178955
    6. '```' → logprob: -3.5422375202178955
    7. 'existing' → logprob: -3.6672375202178955
    8. ' lines' → logprob: -3.7922375202178955
    9. 'lines' → logprob: -3.7922375202178955
    10. 'different' → logprob: -3.9172375202178955

Token 1034: ' formed' (ID: 20680)
  Prédit: ' taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taken' → logprob: -1.3545653820037842
    2. 'taken' → logprob: -1.6045653820037842
    3. 'paired' → logprob: -1.6045653820037842
    4. ' formed' → logprob: -1.8545653820037842
    5. ' paired' → logprob: -2.229565382003784
    6. 'formed' → logprob: -3.104565382003784
    7. '       ' → logprob: -5.229565620422363
    8. '```' → logprob: -5.479565620422363
    9. 'added' → logprob: -5.604565620422363
    10. 'chosen' → logprob: -6.104565620422363

Token 1035: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.6883506774902344
    2. ' pairs' → logprob: -0.9383506774902344
    3. 'pairs' → logprob: -2.4383506774902344
    4. 'lines' → logprob: -4.188350677490234
    5. '_pairs' → logprob: -7.188350677490234
    6. ' points' → logprob: -7.438350677490234
    7. 'points' → logprob: -7.688350677490234
    8. ',' → logprob: -8.063350677490234
    9. ' new' → logprob: -8.063350677490234
    10. ' ' → logprob: -8.688350677490234

Token 1036: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7407494783401489
    2. ' are' → logprob: -1.365749478340149
    3. ')' → logprob: -2.9907493591308594
    4. ' will' → logprob: -3.2407493591308594
    5. ',' → logprob: -3.4907493591308594
    6. ' can' → logprob: -3.7407493591308594
    7. '<|end|>' → logprob: -3.8657493591308594
    8. ' continue' → logprob: -4.115749359130859
    9. ' and' → logprob: -4.240749359130859
    10. '           ' → logprob: -4.240749359130859

Token 1037: ' fixed' (ID: 13213)
  Prédit: 'stored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stored' → logprob: -0.5468882918357849
    2. '       ' → logprob: -1.9218883514404297
    3. 'passed' → logprob: -2.9218883514404297
    4. ' stored' → logprob: -3.0468883514404297
    5. 'already' → logprob: -3.4218883514404297
    6. '#' → logprob: -4.04688835144043
    7. '```' → logprob: -4.42188835144043
    8. 'self' → logprob: -4.67188835144043
    9. 'not' → logprob: -4.79688835144043
    10. 'known' → logprob: -4.92188835144043

Token 1038: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003984012175351381
    2. ',' → logprob: -6.003983974456787
    3. ' and' → logprob: -7.878983974456787
    4. '.' → logprob: -8.128984451293945
    5. ')' → logprob: -8.128984451293945
    6. '        
' → logprob: -9.128984451293945
    7. '        ' → logprob: -9.628984451293945
    8. '           ' → logprob: -9.753984451293945
    9. ':' → logprob: -10.128984451293945
    10. '   ' → logprob: -10.378984451293945

Token 1039: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012446361361071467
    2. '        
' → logprob: -8.12624454498291
    3. ')' → logprob: -8.37624454498291
    4. '
' → logprob: -8.87624454498291
    5. '```' → logprob: -8.87624454498291
    6. ',' → logprob: -8.87624454498291
    7. '`' → logprob: -9.12624454498291
    8. '           ' → logprob: -9.50124454498291
    9. '   ' → logprob: -10.12624454498291
    10. ' and' → logprob: -12.00124454498291

Token 1040: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03029015101492405
    2. '
' → logprob: -4.405290126800537
    3. ' lines' → logprob: -4.405290126800537
    4. '        
' → logprob: -6.280290126800537
    5. ' if' → logprob: -7.030290126800537
    6. '#' → logprob: -7.155290126800537
    7. ',' → logprob: -8.530290603637695
    8. ' all' → logprob: -8.530290603637695
    9. 'lines' → logprob: -9.030290603637695
    10. '```' → logprob: -9.155290603637695

Token 1041: ' solve' (ID: 17722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6848511099815369
    2. '   ' → logprob: -1.1848511695861816
    3. ' need' → logprob: -3.3098511695861816
    4. ' continue' → logprob: -3.3098511695861816
    5. 'continue' → logprob: -3.4348511695861816
    6. 'def' → logprob: -3.6848511695861816
    7. 'need' → logprob: -4.559851169586182
    8. ' can' → logprob: -4.559851169586182
    9. ' store' → logprob: -5.434851169586182
    10. ' def' → logprob: -5.559851169586182

Token 1042: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5033379197120667
    2. '```' → logprob: -2.378337860107422
    3. ' the' → logprob: -2.753337860107422
    4. 'self' → logprob: -2.878337860107422
    5. 'the' → logprob: -3.128337860107422
    6. 'def' → logprob: -3.253337860107422
    7. ' by' → logprob: -3.878337860107422
    8. ',' → logprob: -4.128337860107422
    9. '   ' → logprob: -4.628337860107422
    10. 'state' → logprob: -4.878337860107422

Token 1043: ' memo' (ID: 46393)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7393632531166077
    2. 'def' → logprob: -0.9893632531166077
    3. ' accumulating' → logprob: -3.239363193511963
    4. 'passing' → logprob: -4.114363193511963
    5. ' collecting' → logprob: -4.489363193511963
    6. 'continu' → logprob: -4.489363193511963
    7. 'return' → logprob: -4.614363193511963
    8. 'collect' → logprob: -4.739363193511963
    9. '   ' → logprob: -4.864363193511963
    10. 'building' → logprob: -4.989363193511963

Token 1044: 'izing' (ID: 6396)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5676624178886414
    2. '_' → logprob: -1.1926624774932861
    3. 'ization' → logprob: -2.817662477493286
    4. 'izing' → logprob: -3.567662477493286
    5. '   ' → logprob: -4.692662239074707
    6. 'ize' → logprob: -4.817662239074707
    7. ':' → logprob: -4.942662239074707
    8. '           ' → logprob: -5.067662239074707
    9. '        ' → logprob: -5.442662239074707
    10. ' =' → logprob: -6.692662239074707

Token 1045: ' only' (ID: 1606)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.6844673156738281
    2. '(self' → logprob: -1.4344673156738281
    3. 'state' → logprob: -1.9344673156738281
    4. '       ' → logprob: -3.059467315673828
    5. 'the' → logprob: -4.434467315673828
    6. 'with' → logprob: -4.559467315673828
    7. 'self' → logprob: -5.059467315673828
    8. ' (' → logprob: -5.184467315673828
    9. '(
' → logprob: -5.434467315673828
    10. '_state' → logprob: -5.809467315673828

Token 1046: ' state' (ID: 2608)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.6056218147277832
    2. 'state' → logprob: -1.2306218147277832
    3. ' the' → logprob: -3.230621814727783
    4. 'the' → logprob: -3.605621814727783
    5. ' (' → logprob: -3.605621814727783
    6. '(self' → logprob: -4.105621814727783
    7. '       ' → logprob: -4.230621814727783
    8. ' state' → logprob: -4.605621814727783
    9. 'self' → logprob: -4.855621814727783
    10. '(
' → logprob: -5.230621814727783

Token 1047: '.t' (ID: 1370)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2637467384338379
    2. ',' → logprob: -2.013746738433838
    3. ':' → logprob: -3.388746738433838
    4. '):
' → logprob: -4.388746738433838
    5. ')' → logprob: -4.513746738433838
    6. '
' → logprob: -4.888746738433838
    7. ':
' → logprob: -5.263746738433838
    8. ' and' → logprob: -5.388746738433838
    9. '):' → logprob: -5.513746738433838
    10. '(self' → logprob: -5.638746738433838

Token 1048: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.0003554847207851708
    2. '_taken' → logprob: -9.25035572052002
    3. '_' → logprob: -9.50035572052002
    4. '```' → logprob: -10.25035572052002
    5. 'ak' → logprob: -10.37535572052002
    6. 'taken' → logprob: -10.37535572052002
    7. 'a' → logprob: -10.75035572052002
    8. '__' → logprob: -11.75035572052002
    9. '_a' → logprob: -12.12535572052002
    10. ':' → logprob: -12.50035572052002

Token 1049: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.00029995047952979803
    2. 'mask' → logprob: -9.000300407409668
    3. '_' → logprob: -9.375300407409668
    4. '_m' → logprob: -10.750300407409668
    5. '```' → logprob: -11.250300407409668
    6. ')' → logprob: -11.375300407409668
    7. '_masks' → logprob: -11.750300407409668
    8. 's' → logprob: -12.250300407409668
    9. '   ' → logprob: -12.500300407409668
    10. '_MASK' → logprob: -12.750300407409668

Token 1050: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04434206709265709
    2. ',' → logprob: -4.044342041015625
    3. '
' → logprob: -4.294342041015625
    4. ')' → logprob: -5.544342041015625
    5. '(self' → logprob: -6.419342041015625
    6. '```' → logprob: -6.544342041015625
    7. '        
' → logprob: -7.044342041015625
    8. '   ' → logprob: -7.419342041015625
    9. '):
' → logprob: -7.419342041015625
    10. ' and' → logprob: -7.544342041015625

Token 1051: ' passing' (ID: 21178)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41887736320495605
    2. 'passing' → logprob: -2.418877363204956
    3. 'return' → logprob: -2.543877363204956
    4. ' passing' → logprob: -2.918877363204956
    5. ' lines' → logprob: -3.293877363204956
    6. 'the' → logprob: -4.043877601623535
    7. ' the' → logprob: -4.293877601623535
    8. ' accumulating' → logprob: -4.793877601623535
    9. '   ' → logprob: -5.668877601623535
    10. 'we' → logprob: -5.668877601623535

Token 1052: ' lines' (ID: 8698)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7014023661613464
    2. 'new' → logprob: -1.5764024257659912
    3. ' directions' → logprob: -1.5764024257659912
    4. ' lines' → logprob: -3.326402425765991
    5. 'dire' → logprob: -3.576402425765991
    6. ' the' → logprob: -4.826402187347412
    7. 'lines' → logprob: -5.451402187347412
    8. 'the' → logprob: -5.701402187347412
    9. 'existing' → logprob: -5.951402187347412
    10. ' previous' → logprob: -6.576402187347412

Token 1053: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38989871740341187
    2. '       ' → logprob: -1.3898987770080566
    3. ' to' → logprob: -4.264898777008057
    4. ')' → logprob: -4.514898777008057
    5. ':' → logprob: -4.639898777008057
    6. '=' → logprob: -4.889898777008057
    7. '):
' → logprob: -5.389898777008057
    8. ' and' → logprob: -5.639898777008057
    9. '```' → logprob: -5.639898777008057
    10. ' as' → logprob: -5.764898777008057

Token 1054: ' parameter' (ID: 11047)
  Prédit: 'parameter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parameter' → logprob: -1.005092740058899
    2. 'a' → logprob: -1.505092740058899
    3. ' parameter' → logprob: -2.0050926208496094
    4. 'an' → logprob: -2.5050926208496094
    5. ' a' → logprob: -3.0050926208496094
    6. 'parameters' → logprob: -3.1300926208496094
    7. ' an' → logprob: -3.3800926208496094
    8. ' parameters' → logprob: -3.6300926208496094
    9. 'additional' → logprob: -4.755092620849609
    10. 'dire' → logprob: -4.880092620849609

Token 1055: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022061895579099655
    2. ',' → logprob: -4.647061824798584
    3. ':' → logprob: -4.897061824798584
    4. '
' → logprob: -7.147061824798584
    5. '):
' → logprob: -7.147061824798584
    6. '        
' → logprob: -7.397061824798584
    7. ' and' → logprob: -7.522061824798584
    8. ':
' → logprob: -7.772061824798584
    9. '):' → logprob: -8.147062301635742
    10. ')' → logprob: -8.397062301635742

Token 1056: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017680044984444976
    2. '
' → logprob: -6.626768112182617
    3. '        
' → logprob: -8.126768112182617
    4. ',' → logprob: -10.001768112182617
    5. ' lines' → logprob: -10.626768112182617
    6. '```' → logprob: -10.751768112182617
    7. ')' → logprob: -11.376768112182617
    8. '   ' → logprob: -11.501768112182617
    9. ' and' → logprob: -12.126768112182617
    10. '`' → logprob: -12.376768112182617

Token 1057: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019735998939722776
    2. '
' → logprob: -7.376973628997803
    3. ',' → logprob: -7.626973628997803
    4. '        
' → logprob: -7.876973628997803
    5. '```' → logprob: -9.001973152160645
    6. ')' → logprob: -9.126973152160645
    7. '   ' → logprob: -9.501973152160645
    8. ' lines' → logprob: -10.251973152160645
    9. '):
' → logprob: -10.626973152160645
    10. ':' → logprob: -11.251973152160645

Token 1058: ' avoid' (ID: 8397)
  Prédit: 'avoid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoid' → logprob: -0.3128744065761566
    2. '       ' → logprob: -2.8128743171691895
    3. ' avoid' → logprob: -2.8128743171691895
    4. 'continue' → logprob: -3.1878743171691895
    5. 'opt' → logprob: -3.5628743171691895
    6. 'return' → logprob: -3.6878743171691895
    7. '
' → logprob: -5.0628743171691895
    8. 'compute' → logprob: -5.3128743171691895
    9. 'do' → logprob: -5.3128743171691895
    10. '   ' → logprob: -5.3128743171691895

Token 1059: ' recom' (ID: 19119)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.2939184904098511
    2. 're' → logprob: -2.4189186096191406
    3. 'passing' → logprob: -2.7939186096191406
    4. 'com' → logprob: -3.6689186096191406
    5. ' exponential' → logprob: -3.6689186096191406
    6. 'redu' → logprob: -4.293918609619141
    7. 'stack' → logprob: -4.668918609619141
    8. 'the' → logprob: -5.418918609619141
    9. 'copy' → logprob: -5.668918609619141
    10. '       ' → logprob: -5.793918609619141

Token 1060: 'put' (ID: 772)
  Prédit: 'urse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urse' → logprob: -0.6323980093002319
    2. 'ursing' → logprob: -1.882398009300232
    3. 'ursion' → logprob: -2.0073981285095215
    4. 'curse' → logprob: -2.7573981285095215
    5. 'use' → logprob: -2.8823981285095215
    6. 'ute' → logprob: -3.8823981285095215
    7. 'ur' → logprob: -4.8823981285095215
    8. 'ss' → logprob: -5.2573981285095215
    9. 'ursive' → logprob: -5.5073981285095215
    10. 'uting' → logprob: -5.8823981285095215

Token 1061: 'ing' (ID: 289)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.010030882433056831
    2. 'ting' → logprob: -5.885030746459961
    3. 'e' → logprob: -6.135030746459961
    4. '```' → logprob: -6.260030746459961
    5. 'ing' → logprob: -7.260030746459961
    6. 'tion' → logprob: -7.385030746459961
    7. 'ple' → logprob: -7.510030746459961
    8. 't' → logprob: -8.010030746459961
    9. '
' → logprob: -8.260030746459961
    10. 'ng' → logprob: -8.385030746459961

Token 1062: ' directions' (ID: 24921)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.8748241066932678
    2. 'self' → logprob: -1.749824047088623
    3. '       ' → logprob: -2.124824047088623
    4. ' the' → logprob: -2.874824047088623
    5. 'the' → logprob: -2.874824047088623
    6. 'lines' → logprob: -2.874824047088623
    7. ' directions' → logprob: -3.374824047088623
    8. ',' → logprob: -3.624824047088623
    9. '```' → logprob: -4.499824047088623
    10. ' self' → logprob: -4.624824047088623

Token 1063: ' every' (ID: 1753)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044517673552036285
    2. '       ' → logprob: -3.419517755508423
    3. ' and' → logprob: -5.919517517089844
    4. ' for' → logprob: -6.044517517089844
    5. ' ,' → logprob: -6.169517517089844
    6. ',
' → logprob: -6.419517517089844
    7. 'for' → logprob: -7.919517517089844
    8. 'and' → logprob: -8.419517517089844
    9. ')' → logprob: -8.544517517089844
    10. '),' → logprob: -8.669517517089844

Token 1064: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.042004674673080444
    2. 'call' → logprob: -3.5420045852661133
    3. ' time' → logprob: -5.292004585266113
    4. 'step' → logprob: -5.792004585266113
    5. 'line' → logprob: -6.042004585266113
    6. '   ' → logprob: -8.042004585266113
    7. 'return' → logprob: -8.167004585266113
    8. ' call' → logprob: -8.417004585266113
    9. 'round' → logprob: -9.167004585266113
    10. 'recursive' → logprob: -9.167004585266113

Token 1065: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07189653068780899
    2. '       ' → logprob: -2.696896553039551
    3. ' ,' → logprob: -7.571896553039551
    4. ' we' → logprob: -7.821896553039551
    5. ',
' → logprob: -8.44689655303955
    6. ' for' → logprob: -8.44689655303955
    7. ' and' → logprob: -9.32189655303955
    8. ' in' → logprob: -9.69689655303955
    9. ')' → logprob: -9.69689655303955
    10. '),' → logprob: -9.82189655303955

Token 1066: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10883261263370514
    2. ' lines' → logprob: -2.483832597732544
    3. ' we' → logprob: -5.483832836151123
    4. ' directions' → logprob: -5.608832836151123
    5. ' return' → logprob: -5.733832836151123
    6. ' let's' → logprob: -6.233832836151123
    7. ' pass' → logprob: -6.858832836151123
    8. '        
' → logprob: -7.358832836151123
    9. 'we' → logprob: -7.358832836151123
    10. 'return' → logprob: -7.358832836151123

Token 1067: ' accumulate' (ID: 74226)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.389640212059021
    2. ' pass' → logprob: -2.0146403312683105
    3. 'cache' → logprob: -2.0146403312683105
    4. ' accumulate' → logprob: -2.0146403312683105
    5. ' cache' → logprob: -2.6396403312683105
    6. 'pass' → logprob: -3.1396403312683105
    7. ' store' → logprob: -3.1396403312683105
    8. 'store' → logprob: -3.5146403312683105
    9. 'def' → logprob: -4.0146403312683105
    10. 'return' → logprob: -4.0146403312683105

Token 1068: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.8674604892730713
    2. 'dire' → logprob: -0.9924604892730713
    3. ' lines' → logprob: -2.1174604892730713
    4. ' the' → logprob: -3.4924604892730713
    5. 'lines' → logprob: -4.367460250854492
    6. 'the' → logprob: -4.617460250854492
    7. 'existing' → logprob: -5.242460250854492
    8. '       ' → logprob: -5.492460250854492
    9. ' previous' → logprob: -5.742460250854492
    10. ' existing' → logprob: -5.867460250854492

Token 1069: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6572821140289307
    2. '       ' → logprob: -1.6572821140289307
    3. ' =' → logprob: -2.4072821140289307
    4. ' as' → logprob: -2.9072821140289307
    5. ' and' → logprob: -3.5322821140289307
    6. ' +' → logprob: -3.9072821140289307
    7. ')' → logprob: -4.157281875610352
    8. ' ,' → logprob: -4.407281875610352
    9. ' in' → logprob: -4.657281875610352
    10. '=' → logprob: -4.657281875610352

Token 1070: ' call' (ID: 2421)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1091234683990479
    2. 'new' → logprob: -1.3591234683990479
    3. ' new' → logprob: -1.9841234683990479
    4. ' the' → logprob: -2.234123468399048
    5. 'a' → logprob: -2.734123468399048
    6. ' a' → logprob: -3.359123468399048
    7. ' lines' → logprob: -3.734123468399048
    8. 'lines' → logprob: -4.359123229980469
    9. 'self' → logprob: -4.984123229980469
    10. 'parameters' → logprob: -5.484123229980469

Token 1071: ' stack' (ID: 10825)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0471832752227783
    2. '_stack' → logprob: -1.4221832752227783
    3. 'stack' → logprob: -1.6721832752227783
    4. '_' → logprob: -2.6721832752227783
    5. '       ' → logprob: -2.7971832752227783
    6. '_args' → logprob: -4.297183036804199
    7. '           ' → logprob: -4.547183036804199
    8. ',' → logprob: -4.672183036804199
    9. 'args' → logprob: -4.797183036804199
    10. ' stack' → logprob: -4.797183036804199

Token 1072: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005721386522054672
    2. ',' → logprob: -5.755721569061279
    3. ')' → logprob: -7.380721569061279
    4. ':' → logprob: -7.630721569061279
    5. '   ' → logprob: -7.630721569061279
    6. '.' → logprob: -8.255721092224121
    7. '):
' → logprob: -8.880721092224121
    8. '):' → logprob: -8.880721092224121
    9. ' and' → logprob: -9.505721092224121
    10. '           ' → logprob: -9.755721092224121

Token 1073: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005110541824251413
    2. ')' → logprob: -6.380110740661621
    3. ',' → logprob: -6.880110740661621
    4. '   ' → logprob: -7.130110740661621
    5. '        
' → logprob: -7.255110740661621
    6. '
' → logprob: -7.880110740661621
    7. '    
' → logprob: -8.505110740661621
    8. '```' → logprob: -10.005110740661621
    9. '`' → logprob: -10.130110740661621
    10. ')
' → logprob: -10.255110740661621

Token 1074: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00743494275957346
    2. ',' → logprob: -5.757434844970703
    3. ')' → logprob: -6.507434844970703
    4. '
' → logprob: -7.382434844970703
    5. '   ' → logprob: -7.632434844970703
    6. '        
' → logprob: -7.632434844970703
    7. '```' → logprob: -8.007434844970703
    8. '`' → logprob: -8.507434844970703
    9. '):' → logprob: -9.007434844970703
    10. ':' → logprob: -9.132434844970703

Token 1075: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001143314759247005
    2. '   ' → logprob: -7.126143455505371
    3. '
' → logprob: -9.001143455505371
    4. ')' → logprob: -9.376143455505371
    5. '        
' → logprob: -9.751143455505371
    6. ',' → logprob: -10.751143455505371
    7. '```' → logprob: -11.126143455505371
    8. '    
' → logprob: -11.501143455505371
    9. ' lines' → logprob: -11.751143455505371
    10. '`' → logprob: -12.626143455505371

Token 1076: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05035693198442459
    2. 'if' → logprob: -3.050356864929199
    3. ' if' → logprob: -6.800356864929199
    4. 'lines' → logprob: -7.925356864929199
    5. ' lines' → logprob: -9.3003568649292
    6. '   ' → logprob: -9.3003568649292
    7. '```' → logprob: -10.6753568649292
    8. '#' (adapté à ' #') → logprob: -10.9253568649292
    9. 'dire' → logprob: -11.1753568649292
    10. 'prev' → logprob: -11.3003568649292

Token 1077: ' Base' (ID: 8729)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5774357318878174
    2. 'if' → logprob: -0.8274357318878174
    3. ' if' → logprob: -6.577435493469238
    4. 'lines' → logprob: -9.702435493469238
    5. 'dire' → logprob: -10.952435493469238
    6. '```' → logprob: -11.827435493469238
    7. 'prev' → logprob: -12.202435493469238
    8. '   ' → logprob: -12.702435493469238
    9. 'all' → logprob: -12.952435493469238
    10. '#' → logprob: -13.577435493469238

Token 1078: ' case' (ID: 1890)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018987420946359634
    2. 'case' → logprob: -4.018987655639648
    3. ' case' → logprob: -7.268987655639648
    4. ' if' → logprob: -10.018987655639648
    5. '```' → logprob: -10.393987655639648
    6. 'if' → logprob: -10.643987655639648
    7. '      ' → logprob: -11.268987655639648
    8. '   ' → logprob: -11.268987655639648
    9. '
' → logprob: -11.768987655639648
    10. '           ' → logprob: -13.018987655639648

Token 1079: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4855663721391466e-05
    2. 'if' → logprob: -11.875015258789062
    3. ' if' → logprob: -12.125015258789062
    4. '   ' → logprob: -14.125015258789062
    5. '           ' → logprob: -14.500015258789062
    6. '```' → logprob: -14.500015258789062
    7. ',' → logprob: -15.000015258789062
    8. ':' → logprob: -15.500015258789062
    9. '      ' → logprob: -16.750015258789062
    10. '
' → logprob: -17.000015258789062

Token 1080: ' all' (ID: 722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05357808619737625
    2. '       ' → logprob: -3.0535781383514404
    3. ' if' → logprob: -5.303577899932861
    4. '   ' → logprob: -13.05357837677002
    5. '```' → logprob: -13.17857837677002
    6. ' ' → logprob: -15.67857837677002
    7. '	if' → logprob: -16.803577423095703
    8. 'If' → logprob: -17.178577423095703
    9. 'self' → logprob: -17.303577423095703
    10. '           ' → logprob: -17.803577423095703

Token 1081: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.7127946019172668
    2. 'points' → logprob: -1.212794542312622
    3. '_taken' → logprob: -1.837794542312622
    4. ' taken' → logprob: -3.587794542312622
    5. ' points' → logprob: -3.712794542312622
    6. '_points' → logprob: -7.337794780731201
    7. '       ' → logprob: -8.712794303894043
    8. '   ' → logprob: -9.462794303894043
    9. 'state' → logprob: -9.462794303894043
    10. 'Taken' → logprob: -9.712794303894043

Token 1082: ' means' (ID: 4748)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013532141456380486
    2. ' if' → logprob: -7.1263532638549805
    3. '
' → logprob: -8.25135326385498
    4. 'if' → logprob: -9.25135326385498
    5. '```' → logprob: -9.25135326385498
    6. ',' → logprob: -9.75135326385498
    7. ':' → logprob: -11.50135326385498
    8. ':
' → logprob: -11.50135326385498
    9. '           ' → logprob: -11.75135326385498
    10. '   ' → logprob: -12.75135326385498

Token 1083: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6131994724273682
    2. '[],' → logprob: -1.6131994724273682
    3. '[]' → logprob: -1.6131994724273682
    4. 'lines' → logprob: -2.613199472427368
    5. 'if' → logprob: -2.738199472427368
    6. '[]
' → logprob: -2.863199472427368
    7. 'dire' → logprob: -3.113199472427368
    8. 'len' → logprob: -3.363199472427368
    9. '           ' → logprob: -3.363199472427368
    10. 'all' → logprob: -3.738199472427368

Token 1084: ' pairs' (ID: 24702)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.021076520904898643
    2. 'taken' → logprob: -4.896076679229736
    3. 'pairs' → logprob: -5.146076679229736
    4. 'lines' → logprob: -5.146076679229736
    5. ' points' → logprob: -6.771076679229736
    6. '       ' → logprob: -8.896076202392578
    7. ' lines' → logprob: -9.021076202392578
    8. 'paired' → logprob: -9.271076202392578
    9. '_points' → logprob: -9.271076202392578
    10. '           ' → logprob: -10.271076202392578

Token 1085: ' formed' (ID: 20680)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08446235209703445
    2. ':' → logprob: -3.4594624042510986
    3. ' if' → logprob: -4.0844621658325195
    4. ' and' → logprob: -4.5844621658325195
    5. ':
' → logprob: -4.5844621658325195
    6. ' =' → logprob: -5.4594621658325195
    7. ',' → logprob: -5.9594621658325195
    8. '           ' → logprob: -6.3344621658325195
    9. '
' → logprob: -6.7094621658325195
    10. '```' → logprob: -7.4594621658325195

Token 1086: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026050140149891376
    2. ',' → logprob: -9.250260353088379
    3. ' if' → logprob: -9.500260353088379
    4. ':' → logprob: -10.500260353088379
    5. '```' → logprob: -11.000260353088379
    6. '
' → logprob: -11.375260353088379
    7. ' and' → logprob: -11.625260353088379
    8. '        
' → logprob: -12.125260353088379
    9. '           ' → logprob: -12.250260353088379
    10. '.' → logprob: -12.250260353088379

Token 1087: ' accumulate' (ID: 74226)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003401094349101186
    2. 'if' → logprob: -5.753401279449463
    3. ' if' → logprob: -9.003400802612305
    4. 'lines' → logprob: -10.128400802612305
    5. ' lines' → logprob: -10.878400802612305
    6. '   ' → logprob: -11.128400802612305
    7. '```' → logprob: -11.253400802612305
    8. 'dire' → logprob: -11.628400802612305
    9. 'all' → logprob: -13.128400802612305
    10. '           ' → logprob: -14.128400802612305

Token 1088: ' directions' (ID: 24921)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.055396948009729385
    2. '       ' → logprob: -4.180397033691406
    3. 'lines' → logprob: -4.305397033691406
    4. 'dire' → logprob: -4.430397033691406
    5. ' if' → logprob: -4.555397033691406
    6. '```' → logprob: -6.930397033691406
    7. ' lines' → logprob: -7.180397033691406
    8. 'all' → logprob: -7.430397033691406
    9. ' directions' → logprob: -9.430397033691406
    10. '           ' → logprob: -9.805397033691406

Token 1089: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010654398938640952
    2. ' if' → logprob: -7.126065254211426
    3. 'if' → logprob: -9.126065254211426
    4. ',' → logprob: -9.751065254211426
    5. ' lines' → logprob: -9.751065254211426
    6. '```' → logprob: -11.501065254211426
    7. ':' → logprob: -12.251065254211426
    8. ' and' → logprob: -12.376065254211426
    9. '(lines' → logprob: -12.376065254211426
    10. '           ' → logprob: -13.001065254211426

Token 1090: ' compute' (ID: 23864)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0849882364273071
    2. 'compute' → logprob: -1.0849882364273071
    3. 'count' → logprob: -1.5849882364273071
    4. 'calculate' → logprob: -2.7099881172180176
    5. '       ' → logprob: -3.9599881172180176
    6. 'lines' → logprob: -5.084988117218018
    7. 'dire' → logprob: -5.459988117218018
    8. 'if' → logprob: -5.459988117218018
    9. ' compute' → logprob: -5.584988117218018
    10. '           ' → logprob: -5.709988117218018

Token 1091: ' parallel' (ID: 26697)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18857035040855408
    2. 'dire' → logprob: -2.438570261001587
    3. '       ' → logprob: -3.563570261001587
    4. ' if' → logprob: -3.813570261001587
    5. 'lines' → logprob: -4.188570499420166
    6. ' directions' → logprob: -5.188570499420166
    7. '```' → logprob: -5.188570499420166
    8. ' lines' → logprob: -5.188570499420166
    9. '
' → logprob: -6.938570499420166
    10. 'dirs' → logprob: -7.938570499420166

Token 1092: ' pairs' (ID: 24702)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0406488180160522
    2. '_lines' → logprob: -1.7906488180160522
    3. 'lines' → logprob: -1.7906488180160522
    4. ' lines' → logprob: -2.165648937225342
    5. 'pairs' → logprob: -2.665648937225342
    6. 'if' → logprob: -3.165648937225342
    7. ' if' → logprob: -3.290648937225342
    8. '_pairs' → logprob: -3.540648937225342
    9. '```' → logprob: -5.415648937225342
    10. 'vectors' → logprob: -5.915648937225342

Token 1093: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002831030637025833
    2. ' if' → logprob: -6.627830982208252
    3. 'if' → logprob: -6.627830982208252
    4. ' lines' → logprob: -9.00283145904541
    5. ',' → logprob: -11.00283145904541
    6. '```' → logprob: -11.25283145904541
    7. '(lines' → logprob: -11.87783145904541
    8. '
' → logprob: -12.62783145904541
    9. '   ' → logprob: -12.75283145904541
    10. ':' → logprob: -12.87783145904541

Token 1094: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.60414821645827e-06
    2. '```' → logprob: -12.500004768371582
    3. ' if' → logprob: -15.125004768371582
    4. 'if' → logprob: -15.500004768371582
    5. '           ' → logprob: -15.625004768371582
    6. '   ' → logprob: -16.000003814697266
    7. ',' → logprob: -16.500003814697266
    8. '        
' → logprob: -17.000003814697266
    9. '
' → logprob: -17.250003814697266
    10. '​' → logprob: -18.625003814697266

Token 1095: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011394388042390347
    2. 'if' (adapté à ' if') → logprob: -4.511394500732422
    3. ' if' → logprob: -8.011394500732422
    4. '   ' → logprob: -11.261394500732422
    5. '
' → logprob: -14.011394500732422
    6. '```' → logprob: -14.261394500732422
    7. '           ' → logprob: -14.761394500732422
    8. 'state' → logprob: -16.636394500732422
    9. ',' → logprob: -16.761394500732422
    10. '        
' → logprob: -17.136394500732422

Token 1096: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.31328052282333374
    2. ' state' → logprob: -1.3132805824279785
    3. '       ' → logprob: -11.06328010559082
    4. '   ' → logprob: -13.81328010559082
    5. '(state' → logprob: -14.31328010559082
    6. ' ' → logprob: -14.68828010559082
    7. '           ' → logprob: -15.81328010559082
    8. 'len' → logprob: -15.93828010559082
    9. '	state' → logprob: -15.93828010559082
    10. '    ' → logprob: -16.06328010559082

Token 1097: '.all' (ID: 14045)
  Prédit: '.all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.all' → logprob: -5.085517113911919e-05
    2. '       ' → logprob: -10.75005054473877
    3. ' .' → logprob: -11.12505054473877
    4. '   ' → logprob: -12.12505054473877
    5. '.' → logprob: -12.37505054473877
    6. ').' → logprob: -13.37505054473877
    7. 'all' → logprob: -13.87505054473877
    8. '           ' → logprob: -15.00005054473877
    9. '
' → logprob: -15.25005054473877
    10. '.is' → logprob: -15.37505054473877

Token 1098: '_taken' (ID: 179958)
  Prédit: '_taken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_taken' → logprob: -0.0013484497321769595
    2. '(self' → logprob: -7.376348495483398
    3. 'taken' → logprob: -7.876348495483398
    4. '(state' → logprob: -8.751348495483398
    5. 'self' → logprob: -9.626348495483398
    6. '```' → logprob: -9.751348495483398
    7. '   ' → logprob: -11.501348495483398
    8. ' (' → logprob: -11.751348495483398
    9. '(' → logprob: -11.876348495483398
    10. '       ' → logprob: -12.126348495483398

Token 1099: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8789383830153383e-05
    2. '(' → logprob: -12.125019073486328
    3. 'self' → logprob: -12.125019073486328
    4. ' (' → logprob: -12.625019073486328
    5. '       ' → logprob: -12.625019073486328
    6. ' self' → logprob: -14.625019073486328
    7. '           ' → logprob: -15.750019073486328
    8. '=self' → logprob: -16.250019073486328
    9. '   ' → logprob: -16.500019073486328
    10. '(len' → logprob: -16.500019073486328

Token 1100: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.1517960956552997e-05
    2. 'n' → logprob: -12.125011444091797
    3. '.' → logprob: -12.875011444091797
    4. ' .' → logprob: -13.750011444091797
    5. '       ' → logprob: -14.625011444091797
    6. '   ' → logprob: -14.875011444091797
    7. ').' → logprob: -15.250011444091797
    8. ',n' → logprob: -15.250011444091797
    9. '```' → logprob: -15.375011444091797
    10. ')' → logprob: -15.750011444091797

Token 1101: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006149196065962315
    2. '):' → logprob: -5.5061492919921875
    3. '       ' → logprob: -6.2561492919921875
    4. ')' → logprob: -9.381149291992188
    5. '):
' → logprob: -10.756149291992188
    6. '   ' → logprob: -11.506149291992188
    7. '):

' → logprob: -11.631149291992188
    8. '           ' → logprob: -11.756149291992188
    9. ':
' → logprob: -12.256149291992188
    10. '():
' → logprob: -12.631149291992188

Token 1102: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.954393079970032e-05
    2. '```' → logprob: -11.125049591064453
    3. '        
' → logprob: -11.125049591064453
    4. '
' → logprob: -11.875049591064453
    5. ',' → logprob: -12.500049591064453
    6. ' lines' → logprob: -13.125049591064453
    7. '           ' → logprob: -13.125049591064453
    8. '   ' → logprob: -13.500049591064453
    9. ':' → logprob: -13.625049591064453
    10. 'return' → logprob: -14.375049591064453

Token 1103: ' directions' (ID: 24921)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5441054105758667
    2. 'dire' → logprob: -0.9191054105758667
    3. '           ' → logprob: -4.794105529785156
    4. 'dirs' → logprob: -5.294105529785156
    5. 'lines' → logprob: -5.669105529785156
    6. ' directions' → logprob: -5.919105529785156
    7. ' lines' → logprob: -7.294105529785156
    8. '   ' → logprob: -8.794105529785156
    9. 'd' → logprob: -8.794105529785156
    10. 'all' → logprob: -9.919105529785156

Token 1104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1271747201681137
    2. '=' → logprob: -2.1271746158599854
    3. '=[]' → logprob: -8.752174377441406
    4. '=[' → logprob: -10.127174377441406
    5. '           ' → logprob: -10.877174377441406
    6. '       ' → logprob: -11.502174377441406
    7. ':' → logprob: -11.627174377441406
    8. '=[]
' → logprob: -12.002174377441406
    9. '   ' → logprob: -14.377174377441406
    10. 's' → logprob: -14.502174377441406

Token 1105: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.6201828122138977
    2. '[' → logprob: -0.8701828122138977
    3. '[]' → logprob: -3.245182752609253
    4. '[
' → logprob: -5.620182991027832
    5. '[new' → logprob: -8.245182991027832
    6. '[self' → logprob: -8.245182991027832
    7. '[]

' → logprob: -9.370182991027832
    8. '[])
' → logprob: -10.745182991027832
    9. '[d' → logprob: -11.745182991027832
    10. ' []
' → logprob: -11.745182991027832

Token 1106: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5457437634468079
    2. '       ' → logprob: -0.9207437634468079
    3. ' for' → logprob: -4.045743942260742
    4. 'for' → logprob: -5.420743942260742
    5. '               ' → logprob: -8.170743942260742
    6. '   ' → logprob: -9.795743942260742
    7. '                   ' → logprob: -11.045743942260742
    8. '```' → logprob: -11.045743942260742
    9. ',' → logprob: -11.170743942260742
    10. '[' → logprob: -11.920743942260742

Token 1107: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004079589620232582
    2. ' for' → logprob: -6.254079818725586
    3. '           ' → logprob: -6.379079818725586
    4. '               ' → logprob: -7.754079818725586
    5. '                   ' → logprob: -11.504079818725586
    6. '       ' → logprob: -12.004079818725586
    7. '   ' → logprob: -12.254079818725586
    8. ' ' → logprob: -14.504079818725586
    9. 'prev' → logprob: -14.879079818725586
    10. '                       ' → logprob: -15.129079818725586

Token 1108: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15073581039905548
    2. '(i' → logprob: -2.025735855102539
    3. ' (' → logprob: -6.400735855102539
    4. '   ' → logprob: -7.025735855102539
    5. '(x' → logprob: -7.150735855102539
    6. '(a' → logprob: -7.275735855102539
    7. 'a' → logprob: -7.400735855102539
    8. 'pair' → logprob: -7.400735855102539
    9. ' i' → logprob: -7.650735855102539
    10. 'line' → logprob: -7.775735855102539

Token 1109: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003095719963312149
    2. 'a' → logprob: -6.378095626831055
    3. 'p' → logprob: -7.128095626831055
    4. 'x' → logprob: -8.503095626831055
    5. 'u' → logprob: -8.503095626831055
    6. '(i' → logprob: -9.128095626831055
    7. 'idx' → logprob: -10.753095626831055
    8. '   ' → logprob: -10.878095626831055
    9. 'pi' → logprob: -11.628095626831055
    10. 'start' → logprob: -12.628095626831055

Token 1110: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.06215421482920647
    2. ',' → logprob: -2.8121542930603027
    3. ',k' → logprob: -9.562153816223145
    4. ',n' → logprob: -10.562153816223145
    5. ',p' → logprob: -10.937153816223145
    6. ',i' → logprob: -11.062153816223145
    7. ',w' → logprob: -11.687153816223145
    8. ',x' → logprob: -11.812153816223145
    9. ' ,' → logprob: -11.812153816223145
    10. ',a' → logprob: -12.187153816223145

Token 1111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004944138927385211
    2. ' )' → logprob: -8.500494003295898
    3. '),' → logprob: -8.625494003295898
    4. 'in' → logprob: -9.500494003295898
    5. ' in' → logprob: -10.875494003295898
    6. ',)' → logprob: -11.500494003295898
    7. ')
' → logprob: -13.375494003295898
    8. ',' → logprob: -13.750494003295898
    9. '),(' → logprob: -13.750494003295898
    10. '):
' → logprob: -14.875494003295898

Token 1112: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5769872069358826
    2. ' in' → logprob: -0.8269872069358826
    3. ',' → logprob: -7.201987266540527
    4. ')' → logprob: -8.451987266540527
    5. '           ' → logprob: -10.826987266540527
    6. '),' → logprob: -11.451987266540527
    7. '):
' → logprob: -11.576987266540527
    8. '
' → logprob: -11.951987266540527
    9. '               ' → logprob: -11.951987266540527
    10. '```' → logprob: -12.201987266540527

Token 1113: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.010397866368293762
    2. 'self' → logprob: -5.260397911071777
    3. ' new' → logprob: -5.760397911071777
    4. '[(' → logprob: -6.635397911071777
    5. 'state' → logprob: -8.635397911071777
    6. '[new' → logprob: -8.885397911071777
    7. '(new' → logprob: -9.260397911071777
    8. '
' → logprob: -9.760397911071777
    9. '[' → logprob: -9.885397911071777
    10. '   ' → logprob: -10.260397911071777

Token 1114: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -7.97024549683556e-05
    2. '```' → logprob: -10.875080108642578
    3. '_pairs' → logprob: -10.875080108642578
    4. '_' → logprob: -11.625080108642578
    5. ')_' → logprob: -11.750080108642578
    6. ',_' → logprob: -12.750080108642578
    7. '_LINES' → logprob: -13.000080108642578
    8. ' _' → logprob: -13.000080108642578
    9. '
' → logprob: -13.250080108642578
    10. '_
' → logprob: -13.250080108642578

Token 1115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6077176332473755
    2. ':
' → logprob: -0.8577176332473755
    3. '               ' → logprob: -3.607717514038086
    4. ',' → logprob: -6.482717514038086
    5. '):
' → logprob: -6.482717514038086
    6. '           ' → logprob: -7.732717514038086
    7. ')' → logprob: -9.357717514038086
    8. '):' → logprob: -9.357717514038086
    9. '<|end|>' → logprob: -9.607717514038086
    10. '=' → logprob: -9.732717514038086

Token 1116: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005996193503960967
    2. '           ' → logprob: -8.62559986114502
    3. ',' → logprob: -8.87559986114502
    4. '```' → logprob: -10.25059986114502
    5. '<|end|>' → logprob: -10.37559986114502
    6. '                   ' → logprob: -10.50059986114502
    7. '   ' → logprob: -10.62559986114502
    8. ')' → logprob: -10.75059986114502
    9. '):
' → logprob: -11.12559986114502
    10. '              ' → logprob: -11.25059986114502

Token 1117: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.8977288007736206
    2. '               ' → logprob: -1.6477288007736206
    3. 'd' → logprob: -2.02272891998291
    4. 'vec' → logprob: -2.52272891998291
    5. 'v' → logprob: -2.64772891998291
    6. ' dx' → logprob: -2.77272891998291
    7. 'p' → logprob: -4.27272891998291
    8. '                   ' → logprob: -4.27272891998291
    9. 'vector' → logprob: -5.27272891998291
    10. ' d' → logprob: -5.39772891998291

Token 1118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09269539266824722
    2. '=' → logprob: -2.467695474624634
    3. ' =' → logprob: -5.717695236206055
    4. ' ,' → logprob: -8.342695236206055
    5. ',j' → logprob: -9.217695236206055
    6. '=
' → logprob: -10.842695236206055
    7. ',y' → logprob: -10.967695236206055
    8. '<|end|>' → logprob: -10.967695236206055
    9. ',i' → logprob: -11.592695236206055
    10. ',
' → logprob: -11.842695236206055

Token 1119: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -7.517272024415433e-05
    2. ' dy' → logprob: -9.500075340270996
    3. 'd' → logprob: -15.750075340270996
    4. '.dy' → logprob: -16.75007438659668
    5. '<|end|>' → logprob: -17.62507438659668
    6. 'Dy' → logprob: -17.62507438659668
    7. 'dj' → logprob: -18.25007438659668
    8. 'dx' → logprob: -19.62507438659668
    9. 'dym' → logprob: -19.75007438659668
    10. 'y' → logprob: -19.75007438659668

Token 1120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38726791739463806
    2. '=' → logprob: -1.1372679471969604
    3. '               ' → logprob: -7.88726806640625
    4. '=self' → logprob: -11.13726806640625
    5. '                ' → logprob: -13.01226806640625
    6. '                   ' → logprob: -13.13726806640625
    7. '           ' → logprob: -14.01226806640625
    8. '            ' → logprob: -15.26226806640625
    9. '```' → logprob: -15.38726806640625
    10. ')' → logprob: -15.51226806640625

Token 1121: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011079294607043266
    2. ' self' → logprob: -4.51107931137085
    3. '(self' → logprob: -10.636078834533691
    4. '           ' → logprob: -12.636078834533691
    5. '               ' → logprob: -13.761078834533691
    6. 'Direction' → logprob: -14.136078834533691
    7. '
' → logprob: -14.386078834533691
    8. '                   ' → logprob: -15.136078834533691
    9. '=self' → logprob: -15.136078834533691
    10. '   ' → logprob: -15.511078834533691

Token 1122: '.points' (ID: 66693)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.008258765563368797
    2. '.points' → logprob: -4.883258819580078
    3. ' points' → logprob: -7.383258819580078
    4. '(points' → logprob: -11.258258819580078
    5. 'self' → logprob: -11.758258819580078
    6. '	points' → logprob: -11.758258819580078
    7. '_points' → logprob: -15.008258819580078
    8. '
' → logprob: -15.008258819580078
    9. 'vectors' → logprob: -15.008258819580078
    10. 'vector' → logprob: -15.883258819580078

Token 1123: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006694287294521928
    2. 'i' → logprob: -7.625669479370117
    3. '[j' → logprob: -9.125669479370117
    4. '[' → logprob: -9.750669479370117
    5. ',i' → logprob: -12.625669479370117
    6. '[new' → logprob: -13.000669479370117
    7. '[
' → logprob: -13.250669479370117
    8. 'j' → logprob: -13.375669479370117
    9. ')[' → logprob: -13.625669479370117
    10. '(i' → logprob: -14.125669479370117

Token 1124: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.3754844069480896
    2. '],' → logprob: -1.3754844665527344
    3. ']' → logprob: -2.8754844665527344
    4. ']
' → logprob: -6.875484466552734
    5. '               ' → logprob: -7.750484466552734
    6. '.' → logprob: -8.000484466552734
    7. '.vector' → logprob: -8.000484466552734
    8. ']-' → logprob: -8.375484466552734
    9. ').' → logprob: -8.750484466552734
    10. '),' → logprob: -8.750484466552734

Token 1125: 'vector' (ID: 7603)
  Prédit: 'vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.0004690418136306107
    2. ' vector' → logprob: -8.000469207763672
    3. 'x' → logprob: -9.125469207763672
    4. '.vector' → logprob: -11.500469207763672
    5. '	vector' → logprob: -12.500469207763672
    6. '(vector' → logprob: -12.875469207763672
    7. '<vector' → logprob: -13.000469207763672
    8. '```' → logprob: -13.250469207763672
    9. '<|end|>' → logprob: -14.250469207763672
    10. '
' → logprob: -15.000469207763672

Token 1126: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.5014188799541444e-05
    2. 'to' → logprob: -10.125044822692871
    3. '```' → logprob: -12.875044822692871
    4. 'To' → logprob: -13.000044822692871
    5. ' to' → logprob: -17.250045776367188
    6. '_t' → logprob: -17.375045776367188
    7. '_TO' → logprob: -17.500045776367188
    8. '-to' → logprob: -18.375045776367188
    9. '<|end|>' → logprob: -18.875045776367188
    10. '
' → logprob: -19.000045776367188

Token 1127: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04864925146102905
    2. 'self' → logprob: -3.048649311065674
    3. '(' → logprob: -10.423648834228516
    4. '(
' → logprob: -10.798648834228516
    5. ' self' → logprob: -12.173648834228516
    6. '
' → logprob: -13.048648834228516
    7. '```' → logprob: -13.548648834228516
    8. ',self' → logprob: -14.298648834228516
    9. '[self' → logprob: -14.548648834228516
    10. '(Point' → logprob: -14.673648834228516

Token 1128: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.583193838596344
    2. 'points' → logprob: -0.833193838596344
    3. 'self' → logprob: -5.333193778991699
    4. ' points' → logprob: -7.083193778991699
    5. '(points' → logprob: -7.083193778991699
    6. 'j' → logprob: -8.5831937789917
    7. 'oints' → logprob: -8.5831937789917
    8. ').' → logprob: -9.4581937789917
    9. '[j' → logprob: -10.0831937789917
    10. ')' → logprob: -10.2081937789917

Token 1129: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.011074943467974663
    2. 'j' → logprob: -4.511075019836426
    3. '[' → logprob: -11.511075019836426
    4. '[
' → logprob: -11.886075019836426
    5. ',j' → logprob: -12.511075019836426
    6. ' [' → logprob: -12.761075019836426
    7. ' j' → logprob: -13.886075019836426
    8. '   ' → logprob: -14.386075019836426
    9. '(j' → logprob: -14.761075019836426
    10. ')' → logprob: -14.886075019836426

Token 1130: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2523871064186096
    2. '])
' → logprob: -1.5023870468139648
    3. ')' → logprob: -8.877387046813965
    4. ']' → logprob: -9.502387046813965
    5. '])
' → logprob: -9.627387046813965
    6. ')
' → logprob: -9.752387046813965
    7. ']),' → logprob: -10.252387046813965
    8. '])

' → logprob: -10.627387046813965
    9. ']),
' → logprob: -11.877387046813965
    10. '],' → logprob: -12.002387046813965

Token 1131: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007603150443173945
    2. 'direction' → logprob: -7.875760078430176
    3. ' direction' → logprob: -8.875760078430176
    4. '           ' → logprob: -9.375760078430176
    5. '                   ' → logprob: -10.625760078430176
    6. ',' → logprob: -11.125760078430176
    7. '       ' → logprob: -11.125760078430176
    8. ' directions' → logprob: -11.375760078430176
    9. ')' → logprob: -11.500760078430176
    10. '                
' → logprob: -11.500760078430176

Token 1132: ' directions' (ID: 24921)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9485839605331421
    2. 'direction' → logprob: -0.9485839605331421
    3. 'dir' → logprob: -1.698583960533142
    4. 'dire' → logprob: -3.8235840797424316
    5. ' direction' → logprob: -4.698584079742432
    6. '               ' → logprob: -5.198584079742432
    7. ' d' → logprob: -5.698584079742432
    8. ' dir' → logprob: -6.198584079742432
    9. 'line' → logprob: -8.698583602905273
    10. '           ' → logprob: -9.073583602905273

Token 1133: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8636196851730347
    2. ' =' → logprob: -0.8636196851730347
    3. '.append' → logprob: -2.363619804382324
    4. '           ' → logprob: -3.738619804382324
    5. '<|end|>' → logprob: -4.488619804382324
    6. '               ' → logprob: -4.738619804382324
    7. ')' → logprob: -4.863619804382324
    8. '.' → logprob: -5.113619804382324
    9. ',' → logprob: -6.988619804382324
    10. '                   ' → logprob: -7.613619804382324

Token 1134: '(Direction' (ID: 175338)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.00021140782337170094
    2. ' Direction' → logprob: -8.500211715698242
    3. '(Direction' → logprob: -11.750211715698242
    4. 'Directional' → logprob: -17.000211715698242
    5. '           ' → logprob: -17.750211715698242
    6. '   ' → logprob: -18.375211715698242
    7. '               ' → logprob: -18.500211715698242
    8. '                   ' → logprob: -19.375211715698242
    9. '.Direction' → logprob: -19.625211715698242
    10. 'Directions' → logprob: -19.750211715698242

Token 1135: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -5.824579784530215e-05
    2. '(' → logprob: -10.7500581741333
    3. ')' → logprob: -11.0000581741333
    4. ')(' → logprob: -11.8750581741333
    5. 'dx' → logprob: -12.0000581741333
    6. '(
' → logprob: -12.6250581741333
    7. ' (' → logprob: -12.7500581741333
    8. '```' → logprob: -15.5000581741333
    9. ')(
' → logprob: -16.000059127807617
    10. ' dx' → logprob: -16.000059127807617

Token 1136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011987409379798919
    2. ',
' → logprob: -9.625120162963867
    3. ' ,' → logprob: -10.000120162963867
    4. ',d' → logprob: -12.000120162963867
    5. '<|end|>' → logprob: -14.875120162963867
    6. '               ' → logprob: -15.125120162963867
    7. ',

' → logprob: -15.125120162963867
    8. '```' → logprob: -15.250120162963867
    9. '),' → logprob: -15.500120162963867
    10. ',\
' → logprob: -15.625120162963867

Token 1137: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -2.7729658540920354e-05
    2. ' dy' → logprob: -10.500027656555176
    3. '
' → logprob: -16.000028610229492
    4. '   ' → logprob: -19.125028610229492
    5. '
' → logprob: -19.250028610229492
    6. '.dy' → logprob: -19.625028610229492
    7. '```' → logprob: -19.875028610229492
    8. ')' → logprob: -19.875028610229492
    9. 'd' → logprob: -20.000028610229492
    10. 'Dy' → logprob: -20.625028610229492

Token 1138: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.014666994102299213
    2. '))' → logprob: -4.38966703414917
    3. '               ' → logprob: -6.51466703414917
    4. '           ' → logprob: -7.51466703414917
    5. '))
' → logprob: -10.514666557312012
    6. '))

' → logprob: -10.514666557312012
    7. ')
' → logprob: -10.639666557312012
    8. ')' → logprob: -10.639666557312012
    9. '                   ' → logprob: -10.889666557312012
    10. ' ))
' → logprob: -13.139666557312012

Token 1139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004984631086699665
    2. '       ' → logprob: -7.625498294830322
    3. 'return' → logprob: -12.75049877166748
    4. '
' → logprob: -12.87549877166748
    5. '               ' → logprob: -13.12549877166748
    6. '```' → logprob: -13.50049877166748
    7. '   ' → logprob: -14.50049877166748
    8. ',' → logprob: -14.75049877166748
    9. '          ' → logprob: -15.50049877166748
    10. ' return' → logprob: -15.62549877166748

Token 1140: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13550059497356415
    2. '       ' → logprob: -2.51050066947937
    3. 'return' (adapté à ' return') → logprob: -3.13550066947937
    4. 'total' → logprob: -6.760500431060791
    5. ' return' → logprob: -8.13550090789795
    6. 'count' → logprob: -8.63550090789795
    7. '   ' → logprob: -8.76050090789795
    8. 'result' → logprob: -9.51050090789795
    9. '               ' → logprob: -9.76050090789795
    10. ' total' → logprob: -10.51050090789795

Token 1141: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003608267055824399
    2. ' self' → logprob: -5.628608226776123
    3. '0' → logprob: -13.253608703613281
    4. '
' → logprob: -13.503608703613281
    5. '   ' → logprob: -13.503608703613281
    6. '       ' → logprob: -13.878608703613281
    7. '(self' → logprob: -14.128608703613281
    8. 'len' → logprob: -14.128608703613281
    9. 'sum' → logprob: -14.378608703613281
    10. '           ' → logprob: -15.628608703613281

Token 1142: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.8325677703833207e-05
    2. '_count' → logprob: -10.500028610229492
    3. '.' → logprob: -14.875028610229492
    4. '_max' → logprob: -15.500028610229492
    5. ' _' → logprob: -16.625028610229492
    6. '
' → logprob: -16.625028610229492
    7. '.\' → logprob: -17.500028610229492
    8. '\' → logprob: -18.000028610229492
    9. '_continue' → logprob: -18.000028610229492
    10. '->_' → logprob: -18.125028610229492

Token 1143: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0280383548888494e-06
    2. '_count' → logprob: -13.875000953674316
    3. ' count' → logprob: -17.625001907348633
    4. '
' → logprob: -18.000001907348633
    5. '```' → logprob: -20.125001907348633
    6. '.count' → logprob: -20.250001907348633
    7. 'Count' → logprob: -20.250001907348633
    8. '`' → logprob: -20.750001907348633
    9. '$count' → logprob: -20.875001907348633
    10. 'c' → logprob: -21.125001907348633

Token 1144: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -8.41866585687967e-06
    2. 'parallel' → logprob: -11.875008583068848
    3. '(d' → logprob: -13.750008583068848
    4. '
' → logprob: -16.12500762939453
    5. 'd' → logprob: -16.50000762939453
    6. '```' → logprob: -16.75000762939453
    7. '\' → logprob: -17.25000762939453
    8. '_par' → logprob: -17.50000762939453
    9. '_direction' → logprob: -17.62500762939453
    10. 'dire' → logprob: -17.62500762939453

Token 1145: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0005688794772140682
    2. 'pairs' → logprob: -7.500568866729736
    3. '_lines' → logprob: -11.750569343566895
    4. 'Pairs' → logprob: -11.875569343566895
    5. '(d' → logprob: -15.125569343566895
    6. '_parallel' → logprob: -15.500569343566895
    7. '
' → logprob: -15.875569343566895
    8. 'parallel' → logprob: -16.125568389892578
    9. 'd' → logprob: -16.250568389892578
    10. '```' → logprob: -16.375568389892578

Token 1146: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.3856492842023727e-06
    2. 'dire' → logprob: -14.375000953674316
    3. '(' → logprob: -14.625000953674316
    4. ' (' → logprob: -15.875000953674316
    5. '(
' → logprob: -16.000001907348633
    6. '(direction' → logprob: -17.750001907348633
    7. '```' → logprob: -18.125001907348633
    8. '(lines' → logprob: -19.000001907348633
    9. ' directions' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.375001907348633

Token 1147: 'irections' (ID: 119283)
  Prédit: 'irections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irections' → logprob: -5.512236498361744e-07
    2. 'dire' → logprob: -15.250000953674316
    3. 'ir' → logprob: -16.5
    4. ' directions' → logprob: -17.125
    5. 'Directions' → logprob: -17.125
    6. 'irect' → logprob: -17.5
    7. 'ire' → logprob: -18.0
    8. 'ections' → logprob: -18.0
    9. '```' → logprob: -18.125
    10. 'i' → logprob: -18.75

Token 1148: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01637696847319603
    2. '       ' → logprob: -4.141376972198486
    3. ')
' → logprob: -8.016376495361328
    4. ' )' → logprob: -12.516376495361328
    5. '
' → logprob: -12.641376495361328
    6. ')+' → logprob: -13.016376495361328
    7. '   ' → logprob: -13.766376495361328
    8. '))' → logprob: -15.016376495361328
    9. ')return' → logprob: -15.141376495361328
    10. '+' → logprob: -15.516376495361328

Token 1149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029847444966435432
    2. '
' → logprob: -4.029847621917725
    3. '        
' → logprob: -5.404847621917725
    4. '```' → logprob: -5.904847621917725
    5. '    
' → logprob: -6.779847621917725
    6. '   ' → logprob: -6.779847621917725
    7. '\n' → logprob: -7.654847621917725
    8. ')' → logprob: -7.779847621917725
    9. '	' → logprob: -8.529847145080566
    10. '<|end|>' → logprob: -8.779847145080566

Token 1150: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5022414326667786
    2. 'max' → logprob: -1.1272413730621338
    3. 'next' → logprob: -3.002241373062134
    4. 'first' → logprob: -4.377241611480713
    5. '#' (adapté à ' #') → logprob: -6.627241611480713
    6. '```' → logprob: -6.627241611480713
    7. 'best' → logprob: -6.752241611480713
    8. 'rest' → logprob: -7.002241611480713
    9. 'taken' → logprob: -7.127241611480713
    10. 'existing' → logprob: -7.752241611480713

Token 1151: ' Memo' (ID: 99417)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.30003175139427185
    2. 'first' → logprob: -2.0500316619873047
    3. 'dire' → logprob: -3.1750316619873047
    4. 'next' → logprob: -3.3000316619873047
    5. '#' → logprob: -3.6750316619873047
    6. 'lines' → logprob: -4.425031661987305
    7. 'acc' → logprob: -5.675031661987305
    8. 'result' → logprob: -5.800031661987305
    9. 'all' → logprob: -6.425031661987305
    10. 'existing' → logprob: -6.425031661987305

Token 1152: ' key' (ID: 2140)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041504453867673874
    2. 'if' → logprob: -3.791504383087158
    3. ' if' → logprob: -4.791504383087158
    4. ' =' → logprob: -5.416504383087158
    5. 'ize' → logprob: -6.291504383087158
    6. '   ' → logprob: -7.166504383087158
    7. '=' → logprob: -7.291504383087158
    8. 'ized' → logprob: -7.291504383087158
    9. '_key' → logprob: -7.541504383087158
    10. '      ' → logprob: -8.666504859924316

Token 1153: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8218020796775818
    2. '       ' → logprob: -1.5718021392822266
    3. 'key' → logprob: -1.6968021392822266
    4. '=' → logprob: -1.9468021392822266
    5. ' key' → logprob: -3.9468021392822266
    6. '_key' → logprob: -5.321802139282227
    7. ',' → logprob: -6.321802139282227
    8. ':' → logprob: -8.321802139282227
    9. 'state' → logprob: -8.321802139282227
    10. '        
' → logprob: -10.196802139282227

Token 1154: ' since' (ID: 3630)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.5235944986343384
    2. '(state' → logprob: -1.5235944986343384
    3. 'state' → logprob: -1.7735944986343384
    4. '(key' → logprob: -4.648594379425049
    5. 'mask' → logprob: -5.023594379425049
    6. 'taken' → logprob: -6.648594379425049
    7. '(t' → logprob: -7.148594379425049
    8. '       ' → logprob: -7.273594379425049
    9. '(mask' → logprob: -8.148594856262207
    10. ' key' → logprob: -8.273594856262207

Token 1155: ' lines' (ID: 8698)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.27190130949020386
    2. '(state' → logprob: -1.5219013690948486
    3. ' state' → logprob: -5.2719011306762695
    4. ' (' → logprob: -5.6469011306762695
    5. 'new' → logprob: -5.7719011306762695
    6. 'the' → logprob: -6.6469011306762695
    7. 'only' → logprob: -6.7719011306762695
    8. 'self' → logprob: -7.0219011306762695
    9. '(' → logprob: -7.2719011306762695
    10. '(len' → logprob: -7.3969011306762695

Token 1156: ' will' (ID: 738)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1619828939437866
    2. ')' → logprob: -1.9119828939437866
    3. '_t' → logprob: -2.036983013153076
    4. '.t' → logprob: -2.786983013153076
    5. ' is' → logprob: -2.786983013153076
    6. '_taken' → logprob: -2.786983013153076
    7. ' not' → logprob: -3.161983013153076
    8. 't' → logprob: -3.536983013153076
    9. ',t' → logprob: -3.536983013153076
    10. '       ' → logprob: -3.661983013153076

Token 1157: ' differ' (ID: 2171)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7791351079940796
    2. ' not' → logprob: -1.4041351079940796
    3. ' be' → logprob: -1.7791351079940796
    4. 'be' → logprob: -2.529135227203369
    5. 'always' → logprob: -4.279135227203369
    6. 'only' → logprob: -4.779135227203369
    7. ' always' → logprob: -4.904135227203369
    8. 'never' → logprob: -5.279135227203369
    9. ' only' → logprob: -5.529135227203369
    10. ' never' → logprob: -5.529135227203369

Token 1158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14910344779491425
    2. 'and' → logprob: -3.1491034030914307
    3. '=' → logprob: -3.3991034030914307
    4. ':' → logprob: -3.7741034030914307
    5. ' and' → logprob: -4.39910364151001
    6. ')' → logprob: -4.77410364151001
    7. ',
' → logprob: -5.39910364151001
    8. ' =' → logprob: -5.77410364151001
    9. '       ' → logprob: -5.89910364151001
    10. ' in' → logprob: -6.64910364151001

Token 1159: ' we' (ID: 581)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6110833883285522
    2. ' key' → logprob: -1.8610833883285522
    3. '#' → logprob: -2.611083507537842
    4. '       ' → logprob: -2.736083507537842
    5. 'return' → logprob: -2.736083507537842
    6. ' lines' → logprob: -3.236083507537842
    7. 'lines' → logprob: -3.736083507537842
    8. 'state' → logprob: -4.236083507537842
    9. ' return' → logprob: -5.111083507537842
    10. 'if' → logprob: -5.736083507537842

Token 1160: ' store' (ID: 4897)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22495274245738983
    2. '       ' → logprob: -2.8499526977539062
    3. 'continue' → logprob: -2.8499526977539062
    4. ' return' → logprob: -4.349952697753906
    5. 'pass' → logprob: -4.349952697753906
    6. 'only' → logprob: -4.474952697753906
    7. 'cannot' → logprob: -4.849952697753906
    8. ' only' → logprob: -5.099952697753906
    9. '#' → logprob: -5.099952697753906
    10. 'do' → logprob: -5.474952697753906

Token 1161: ' memo' (ID: 46393)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8890373110771179
    2. 'max' → logprob: -1.1390373706817627
    3. 'state' → logprob: -1.5140373706817627
    4. 'result' → logprob: -3.8890373706817627
    5. ' max' → logprob: -5.264037132263184
    6. '(state' → logprob: -5.889037132263184
    7. '(self' → logprob: -6.014037132263184
    8. '(max' → logprob: -6.139037132263184
    9. 'len' → logprob: -6.264037132263184
    10. 'the' → logprob: -6.264037132263184

Token 1162: ' only' (ID: 1606)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.38955989480018616
    2. 'key' → logprob: -1.1395598649978638
    3. ' key' → logprob: -7.014559745788574
    4. '       ' → logprob: -7.264559745788574
    5. 'state' → logprob: -7.389559745788574
    6. ',' → logprob: -9.639559745788574
    7. ' =' → logprob: -9.639559745788574
    8. '_state' → logprob: -9.639559745788574
    9. ':' → logprob: -10.139559745788574
    10. '=' → logprob: -10.139559745788574

Token 1163: ' on' (ID: 402)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.1061246395111084
    2. 'for' → logprob: -1.1061246395111084
    3. 'based' → logprob: -2.1061246395111084
    4. 'on' → logprob: -2.6061246395111084
    5. ' at' → logprob: -3.1061246395111084
    6. ' for' → logprob: -4.2311248779296875
    7. 'key' → logprob: -4.2311248779296875
    8. '[' → logprob: -4.3561248779296875
    9. 'with' → logprob: -4.6061248779296875
    10. '[state' → logprob: -4.9811248779296875

Token 1164: ' taken' (ID: 6697)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.00023071514442563057
    2. ' state' → logprob: -9.00023078918457
    3. 'the' → logprob: -9.25023078918457
    4. 'taken' → logprob: -11.87523078918457
    5. '(state' → logprob: -13.50023078918457
    6. 'states' → logprob: -13.87523078918457
    7. 'self' → logprob: -14.00023078918457
    8. '   ' → logprob: -15.50023078918457
    9. '```' → logprob: -16.00023078918457
    10. 't' → logprob: -16.12523078918457

Token 1165: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.4021237802808173e-05
    2. 'mask' → logprob: -11.625014305114746
    3. '_masks' → logprob: -13.125014305114746
    4. '_' → logprob: -13.875014305114746
    5. '```' → logprob: -14.375014305114746
    6. '_token' → logprob: -15.000014305114746
    7. '_m' → logprob: -15.125014305114746
    8. '_MASK' → logprob: -15.125014305114746
    9. '_state' → logprob: -15.250014305114746
    10. '
' → logprob: -16.25001335144043

Token 1166: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06712184846401215
    2. ',' → logprob: -3.567121744155884
    3. ')' → logprob: -4.192121982574463
    4. ':' → logprob: -4.317121982574463
    5. ' and' → logprob: -5.567121982574463
    6. '
' → logprob: -7.067121982574463
    7. '        ' → logprob: -7.692121982574463
    8. '=' → logprob: -7.942121982574463
    9. ' =' → logprob: -8.067121505737305
    10. '   ' → logprob: -8.067121505737305

Token 1167: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2056678980588913
    2. '       ' → logprob: -2.5806679725646973
    3. 'result' → logprob: -3.3306679725646973
    4. 'dire' → logprob: -3.7056679725646973
    5. 'but' → logprob: -4.205667972564697
    6. 'lines' → logprob: -4.455667972564697
    7. ' but' → logprob: -4.580667972564697
    8. ' lines' → logprob: -5.955667972564697
    9. 'return' → logprob: -6.205667972564697
    10. ' #' → logprob: -6.580667972564697

Token 1168: ' pass' (ID: 1853)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.035426463931798935
    2. '       ' → logprob: -3.910426378250122
    3. 'lines' → logprob: -4.535426616668701
    4. 'pass' → logprob: -6.535426616668701
    5. ' lines' → logprob: -7.785426616668701
    6. 'dire' → logprob: -8.035426139831543
    7. '
' → logprob: -8.160426139831543
    8. '...' → logprob: -8.410426139831543
    9. 'return' → logprob: -8.410426139831543
    10. ' #' → logprob: -8.660426139831543

Token 1169: ' lines' (ID: 8698)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07158643007278442
    2. ' new' → logprob: -3.1965863704681396
    3. 'lines' → logprob: -3.9465863704681396
    4. '
' → logprob: -6.071586608886719
    5. ' lines' → logprob: -6.071586608886719
    6. 'dire' → logprob: -6.821586608886719
    7. 'the' → logprob: -7.071586608886719
    8. 'state' → logprob: -7.321586608886719
    9. '   ' → logprob: -7.571586608886719
    10. ' directions' → logprob: -8.196586608886719

Token 1170: ' down' (ID: 1917)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37630438804626465
    2. ',' → logprob: -1.5013043880462646
    3. ':' → logprob: -3.2513043880462646
    4. ')' → logprob: -4.501304626464844
    5. '
' → logprob: -4.626304626464844
    6. ' =' → logprob: -5.376304626464844
    7. '=' → logprob: -5.501304626464844
    8. '):' → logprob: -5.626304626464844
    9. '):
' → logprob: -5.876304626464844
    10. ' and' → logprob: -6.251304626464844

Token 1171: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007422514725476503
    2. '
' → logprob: -5.75742244720459
    3. ',' → logprob: -5.88242244720459
    4. '        
' → logprob: -7.38242244720459
    5. '   ' → logprob: -8.00742244720459
    6. ' and' → logprob: -9.50742244720459
    7. ')' → logprob: -10.13242244720459
    8. '<|end|>' → logprob: -10.13242244720459
    9. '    
' → logprob: -10.25742244720459
    10. '    ' → logprob: -10.50742244720459

Token 1172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04821404069662094
    2. '
' → logprob: -3.1732139587402344
    3. '        
' → logprob: -5.673213958740234
    4. ' 
' → logprob: -7.423213958740234
    5. '   ' → logprob: -8.048213958740234
    6. '```' → logprob: -8.548213958740234
    7. '        ' → logprob: -9.173213958740234
    8. '    ' → logprob: -9.673213958740234
    9. '       
' → logprob: -9.923213958740234
    10. '    
' → logprob: -9.923213958740234

Token 1173: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056841008365154266
    2. 'result' → logprob: -3.4318408966064453
    3. 'res' → logprob: -5.056840896606445
    4. 'if' → logprob: -5.056840896606445
    5. 'max' → logprob: -5.806840896606445
    6. 'key' → logprob: -6.056840896606445
    7. 'lines' → logprob: -6.556840896606445
    8. '```' → logprob: -6.681840896606445
    9. 'state' → logprob: -8.181840896606445
    10. 'next' → logprob: -8.181840896606445

Token 1174: ' It' (ID: 1225)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5077123045921326
    2. 'if' → logprob: -1.6327123641967773
    3. 'result' → logprob: -2.6327123641967773
    4. 'key' → logprob: -3.7577123641967773
    5. 'max' → logprob: -3.7577123641967773
    6. 'current' → logprob: -3.7577123641967773
    7. 'memo' → logprob: -4.007712364196777
    8. 'best' → logprob: -4.507712364196777
    9. '#' → logprob: -4.757712364196777
    10. 'lines' → logprob: -5.007712364196777

Token 1175: ' means' (ID: 4748)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2260006666183472
    2. '       ' → logprob: -1.4760006666183472
    3. ' =' → logprob: -2.3510007858276367
    4. ' is' → logprob: -2.6010007858276367
    5. '#' → logprob: -2.8510007858276367
    6. 'is' → logprob: -2.9760007858276367
    7. 's' → logprob: -3.2260007858276367
    8. ' appears' → logprob: -3.4760007858276367
    9. '   ' → logprob: -3.6010007858276367
    10. '           ' → logprob: -4.351000785827637

Token 1176: ' sub' (ID: 1543)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6727427840232849
    2. '       ' → logprob: -1.2977428436279297
    3. 'that' → logprob: -1.9227428436279297
    4. 'result' → logprob: -3.9227428436279297
    5. 'we' → logprob: -4.42274284362793
    6. ' that' → logprob: -4.54774284362793
    7. 'best' → logprob: -5.04774284362793
    8. 'existing' → logprob: -6.04774284362793
    9. 'max' → logprob: -6.17274284362793
    10. 'memo' → logprob: -6.29774284362793

Token 1177: '-opt' (ID: 104111)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.866004228591919
    2. '_parallel' → logprob: -1.241004228591919
    3. '       ' → logprob: -2.366004228591919
    4. 'tree' → logprob: -2.616004228591919
    5. '_lines' → logprob: -3.991004228591919
    6. '_recursive' → logprob: -4.36600399017334
    7. 'tle' → logprob: -4.74100399017334
    8. '_state' → logprob: -4.74100399017334
    9. 'se' → logprob: -4.86600399017334
    10. '   ' → logprob: -4.86600399017334

Token 1178: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.0327150858938694
    2. 'imized' → logprob: -3.907715082168579
    3. 'imize' → logprob: -5.532715320587158
    4. 'imum' → logprob: -5.657715320587158
    5. 'im' → logprob: -6.157715320587158
    6. '       ' → logprob: -7.407715320587158
    7. '   ' → logprob: -7.657715320587158
    8. 'ized' → logprob: -8.15771484375
    9. 'al' → logprob: -8.15771484375
    10. '```' → logprob: -9.15771484375

Token 1179: ' memo' (ID: 46393)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04417454078793526
    2. ',' → logprob: -4.794174671173096
    3. ':' → logprob: -5.044174671173096
    4. ' and' → logprob: -5.419174671173096
    5. '   ' → logprob: -5.544174671173096
    6. '
' → logprob: -5.669174671173096
    7. ' but' → logprob: -6.044174671173096
    8. ' for' → logprob: -6.169174671173096
    9. ' if' → logprob: -6.419174671173096
    10. ')' → logprob: -6.669174671173096

Token 1180: ' reuse' (ID: 51683)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035854049026966095
    2. '
' → logprob: -4.660853862762451
    3. ':' → logprob: -4.910853862762451
    4. '   ' → logprob: -5.285853862762451
    5. ':
' → logprob: -5.660853862762451
    6. ' =' → logprob: -5.785853862762451
    7. ',' → logprob: -6.410853862762451
    8. '_' → logprob: -6.910853862762451
    9. '           ' → logprob: -6.910853862762451
    10. '        ' → logprob: -7.535853862762451

Token 1181: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026194632053375244
    2. ',' → logprob: -4.1511945724487305
    3. '
' → logprob: -5.5261945724487305
    4. ' and' → logprob: -6.6511945724487305
    5. '        
' → logprob: -6.7761945724487305
    6. ':' → logprob: -6.9011945724487305
    7. ')' → logprob: -7.0261945724487305
    8. ' if' → logprob: -8.15119457244873
    9. '   ' → logprob: -8.27619457244873
    10. '.' → logprob: -8.52619457244873

Token 1182: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49197062849998474
    2. ' but' → logprob: -1.1169706583023071
    3. ' lines' → logprob: -3.4919705390930176
    4. '
' → logprob: -4.991970539093018
    5. '           ' → logprob: -5.366970539093018
    6. '        
' → logprob: -5.491970539093018
    7. 'but' → logprob: -5.616970539093018
    8. '        ' → logprob: -6.116970539093018
    9. '               ' → logprob: -6.491970539093018
    10. ' 
' → logprob: -6.866970539093018

Token 1183: ' problem' (ID: 4792)
  Prédit: 'necessary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'necessary' → logprob: -0.5695400834083557
    2. ' necessary' → logprob: -2.319540023803711
    3. '#' → logprob: -2.944540023803711
    4. ' lines' → logprob: -3.194540023803711
    5. 'True' → logprob: -3.194540023803711
    6. 'the' → logprob: -3.819540023803711
    7. ' True' → logprob: -4.069540023803711
    8. 'lines' → logprob: -4.069540023803711
    9. 'we' → logprob: -4.194540023803711
    10. 'for' → logprob: -4.444540023803711

Token 1184: ' constraints' (ID: 31060)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.2018621563911438
    2. '   ' → logprob: -3.076862096786499
    3. ' is' → logprob: -3.076862096786499
    4. '       ' → logprob: -3.451862096786499
    5. ' remains' → logprob: -4.326862335205078
    6. 'contin' → logprob: -4.701862335205078
    7. ' will' → logprob: -5.326862335205078
    8. ' code' → logprob: -5.701862335205078
    9. '        
' → logprob: -6.451862335205078
    10. '.' → logprob: -6.451862335205078

Token 1185: ' allow' (ID: 3763)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5541415810585022
    2. '               ' → logprob: -1.5541415214538574
    3. '           ' → logprob: -2.0541415214538574
    4. ')' → logprob: -3.6791415214538574
    5. ' are' → logprob: -4.554141521453857
    6. ' continue' → logprob: -5.054141521453857
    7. '```' → logprob: -5.054141521453857
    8. '=' → logprob: -5.429141521453857
    9. 'continue' → logprob: -5.554141521453857
    10. ',' → logprob: -5.679141521453857

Token 1186: ' it' (ID: 480)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03866581991314888
    2. 'pass' → logprob: -4.788665771484375
    3. 'return' → logprob: -4.913665771484375
    4. '           ' → logprob: -5.038665771484375
    5. ' us' → logprob: -5.538665771484375
    6. '               ' → logprob: -5.663665771484375
    7. 'for' → logprob: -6.538665771484375
    8. '```' → logprob: -6.663665771484375
    9. 'continue' → logprob: -6.788665771484375
    10. '   ' → logprob: -7.038665771484375

Token 1187: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005095118656754494
    2. '        
' → logprob: -6.7550950050354
    3. ')' → logprob: -6.8800950050354
    4. ',' → logprob: -6.8800950050354
    5. '
' → logprob: -7.0050950050354
    6. '<|end|>' → logprob: -8.130095481872559
    7. '   ' → logprob: -8.755095481872559
    8. '.' → logprob: -9.880095481872559
    9. '    
' → logprob: -10.005095481872559
    10. ' and' → logprob: -10.255095481872559

Token 1188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017758170142769814
    2. '
' → logprob: -4.142758369445801
    3. '```' → logprob: -6.767758369445801
    4. '        
' → logprob: -7.767758369445801
    5. '   ' → logprob: -10.3927583694458
    6. '​' → logprob: -11.1427583694458
    7. '`' → logprob: -11.3927583694458
    8. 'return' → logprob: -11.3927583694458
    9. 'new' → logprob: -11.6427583694458
    10. ' 
' → logprob: -11.7677583694458

Token 1189: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8196322321891785
    2. 'if' (adapté à ' if') → logprob: -0.8196322321891785
    3. 'result' → logprob: -2.4446322917938232
    4. 'res' → logprob: -3.8196322917938232
    5. 'key' → logprob: -6.194632053375244
    6. 'max' → logprob: -6.194632053375244
    7. 'current' → logprob: -6.569632053375244
    8. 'memo' → logprob: -6.694632053375244
    9. 'best' → logprob: -7.069632053375244
    10. 'state' → logprob: -7.569632053375244

Token 1190: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0017242035828530788
    2. ' state' → logprob: -6.3767242431640625
    3. '   ' → logprob: -11.126724243164062
    4. '(state' → logprob: -12.001724243164062
    5. 'self' → logprob: -15.126724243164062
    6. ' ' → logprob: -15.251724243164062
    7. '    ' → logprob: -15.626724243164062
    8. '  ' → logprob: -15.751724243164062
    9. '       ' → logprob: -15.876724243164062
    10. ' (' → logprob: -16.876724243164062

Token 1191: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0003540542966220528
    2. 'Taken' → logprob: -8.375353813171387
    3. 'taken' → logprob: -10.000353813171387
    4. '_taken' → logprob: -10.125353813171387
    5. ' .' → logprob: -11.125353813171387
    6. '.' → logprob: -11.875353813171387
    7. '.is' → logprob: -12.000353813171387
    8. 'In' → logprob: -13.125353813171387
    9. '```' → logprob: -13.250353813171387
    10. 'in' → logprob: -14.250353813171387

Token 1192: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.00020652047533076257
    2. 'taken' → logprob: -8.62520694732666
    3. '_taken' → logprob: -10.87520694732666
    4. 'ak' → logprob: -13.00020694732666
    5. 'a' → logprob: -13.62520694732666
    6. '```' → logprob: -13.62520694732666
    7. '{' → logprob: -14.75020694732666
    8. 'ake' → logprob: -14.75020694732666
    9. ' taken' → logprob: -15.00020694732666
    10. 'Taken' → logprob: -15.25020694732666

Token 1193: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.00036299455678090453
    2. 'mask' → logprob: -8.00036334991455
    3. '_taken' → logprob: -12.00036334991455
    4. 't' → logprob: -12.12536334991455
    5. '```' → logprob: -12.62536334991455
    6. '_MASK' → logprob: -12.75036334991455
    7. 'aken' → logprob: -12.87536334991455
    8. 'taken' → logprob: -13.00036334991455
    9. 'm' → logprob: -14.62536334991455
    10. '_' → logprob: -14.62536334991455

Token 1194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07895885407924652
    2. 'in' → logprob: -2.578958749771118
    3. ' not' → logprob: -9.953958511352539
    4. 'not' → logprob: -11.078958511352539
    5. '   ' → logprob: -13.328958511352539
    6. ' ' → logprob: -13.703958511352539
    7. ')' → logprob: -14.328958511352539
    8. '	in' → logprob: -14.578958511352539
    9. '==' → logprob: -14.703958511352539
    10. '    ' → logprob: -15.203958511352539

Token 1195: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2471589798224159e-05
    2. ' self' → logprob: -11.375012397766113
    3. '       ' → logprob: -14.000012397766113
    4. '[self' → logprob: -16.37501335144043
    5. '           ' → logprob: -17.87501335144043
    6. '(self' → logprob: -18.00001335144043
    7. '   ' → logprob: -18.00001335144043
    8. '```' → logprob: -18.87501335144043
    9. '=self' → logprob: -19.50001335144043
    10. '
' → logprob: -20.37501335144043

Token 1196: '.memo' (ID: 161018)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.05557095631957054
    2. '.memo' → logprob: -2.9305708408355713
    3. 'self' → logprob: -7.30557107925415
    4. ' memo' → logprob: -11.680570602416992
    5. 'mem' → logprob: -13.055570602416992
    6. '```' → logprob: -13.180570602416992
    7. 'memory' → logprob: -13.430570602416992
    8. '.memory' → logprob: -14.305570602416992
    9. '.' → logprob: -15.180570602416992
    10. '.mem' → logprob: -15.305570602416992

Token 1197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012943142093718052
    2. ':
' → logprob: -5.762943267822266
    3. '==' → logprob: -5.887943267822266
    4. '           ' → logprob: -6.012943267822266
    5. '=' → logprob: -6.262943267822266
    6. '       ' → logprob: -7.387943267822266
    7. ':return' → logprob: -8.137943267822266
    8. '[' → logprob: -8.262943267822266
    9. ' =' → logprob: -8.387943267822266
    10. ',' → logprob: -8.387943267822266

Token 1198: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024971971288323402
    2. ':' → logprob: -3.8999719619750977
    3. '       ' → logprob: -6.024971961975098
    4. '<|end|>' → logprob: -7.149971961975098
    5. ',' → logprob: -8.399971961975098
    6. '<|end|>' → logprob: -8.524971961975098
    7. '	       ' → logprob: -9.024971961975098
    8. 'return' → logprob: -9.274971961975098
    9. '```' → logprob: -9.899971961975098
    10. ':return' → logprob: -10.024971961975098

Token 1199: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001205893131555058
    2. '       ' → logprob: -9.875120162963867
    3. '           ' → logprob: -10.125120162963867
    4. ' return' → logprob: -11.375120162963867
    5. 'prev' → logprob: -11.750120162963867
    6. 'result' → logprob: -12.500120162963867
    7. 'max' → logprob: -13.500120162963867
    8. '#' → logprob: -13.625120162963867
    9. '```' → logprob: -14.125120162963867
    10. 'if' → logprob: -14.375120162963867

Token 1200: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.5491004129871726e-05
    2. ' self' → logprob: -10.000045776367188
    3. '(self' → logprob: -18.500045776367188
    4. '
' → logprob: -18.500045776367188
    5. '[self' → logprob: -18.625045776367188
    6. 'max' → logprob: -18.750045776367188
    7. '	self' → logprob: -19.250045776367188
    8. '0' → logprob: -20.000045776367188
    9. '=self' → logprob: -21.250045776367188
    10. '   ' → logprob: -22.000045776367188

Token 1201: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.020210621878504753
    2. '.' → logprob: -4.2702107429504395
    3. '.m' → logprob: -5.2702107429504395
    4. ' .' → logprob: -8.020210266113281
    5. '.mem' → logprob: -8.020210266113281
    6. '.memory' → logprob: -10.020210266113281
    7. '.t' → logprob: -10.145210266113281
    8. '.mu' → logprob: -10.770210266113281
    9. '.mn' → logprob: -11.270210266113281
    10. '._' → logprob: -11.270210266113281

Token 1202: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -9.729906196298543e-06
    2. 'state' → logprob: -12.125009536743164
    3. '[' → logprob: -12.750009536743164
    4. '       ' → logprob: -15.000009536743164
    5. '(state' → logprob: -15.250009536743164
    6. '   ' → logprob: -15.750009536743164
    7. '```' → logprob: -15.750009536743164
    8. '[
' → logprob: -15.750009536743164
    9. '[self' → logprob: -16.000009536743164
    10. ',state' → logprob: -16.625009536743164

Token 1203: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -4.143808109802194e-05
    2. '.' → logprob: -11.250041007995605
    3. '```' → logprob: -11.500041007995605
    4. '_taken' → logprob: -11.750041007995605
    5. 'Taken' → logprob: -13.375041007995605
    6. '       ' → logprob: -13.500041007995605
    7. ']' → logprob: -13.625041007995605
    8. '   ' → logprob: -13.625041007995605
    9. '].' → logprob: -13.875041007995605
    10. '[' → logprob: -14.125041007995605

Token 1204: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.006429952569305897
    2. 'taken' → logprob: -5.756430149078369
    3. '_taken' → logprob: -6.881430149078369
    4. 'ak' → logprob: -7.631430149078369
    5. 'ken' → logprob: -7.881430149078369
    6. '```' → logprob: -8.506429672241211
    7. '._' → logprob: -8.881429672241211
    8. '.' → logprob: -8.881429672241211
    9. 'a' → logprob: -9.631429672241211
    10. '{' → logprob: -9.756429672241211

Token 1205: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -8.125210297293961e-05
    2. '_MASK' → logprob: -10.000081062316895
    3. 'mask' → logprob: -10.750081062316895
    4. '.mask' → logprob: -12.625081062316895
    5. '_masks' → logprob: -12.625081062316895
    6. '   ' → logprob: -13.375081062316895
    7. '       ' → logprob: -13.500081062316895
    8. 'Mask' → logprob: -13.750081062316895
    9. '_t' → logprob: -14.125081062316895
    10. '._' → logprob: -14.375081062316895

Token 1206: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21115915477275848
    2. ']

' → logprob: -1.711159110069275
    3. ']
' → logprob: -4.9611592292785645
    4. '       ' → logprob: -6.2111592292785645
    5. '](' → logprob: -8.586158752441406
    6. ']

' → logprob: -8.961158752441406
    7. ')]' → logprob: -9.711158752441406
    8. ']


' → logprob: -9.961158752441406
    9. ')' → logprob: -10.211158752441406
    10. '],' → logprob: -10.336158752441406

Token 1207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04922977089881897
    2. 'max' → logprob: -3.049229860305786
    3. '```' → logprob: -7.674229621887207
    4. '
' → logprob: -9.299229621887207
    5. 'next' → logprob: -10.799229621887207
    6. 'first' → logprob: -10.924229621887207
    7. ' max' → logprob: -11.549229621887207
    8. 'result' → logprob: -11.674229621887207
    9. '   ' → logprob: -11.924229621887207
    10. '        
' → logprob: -12.049229621887207

Token 1208: ' first' (ID: 1577)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6600026488304138
    2. 'first' (adapté à ' first') → logprob: -0.9100026488304138
    3. '       ' → logprob: -2.5350027084350586
    4. 'next' → logprob: -7.285002708435059
    5. 'best' → logprob: -8.535002708435059
    6. '```' → logprob: -8.660002708435059
    7. 'result' → logprob: -9.285002708435059
    8. '#' → logprob: -9.410002708435059
    9. ' first' → logprob: -10.660002708435059
    10. ' max' → logprob: -10.910002708435059

Token 1209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00409419322386384
    2. '=' → logprob: -5.629094123840332
    3. ' ' → logprob: -7.879094123840332
    4. ')' → logprob: -10.004094123840332
    5. '_' → logprob: -10.129094123840332
    6. '<|end|>' → logprob: -11.254094123840332
    7. ':' → logprob: -12.879094123840332
    8. '=None' → logprob: -13.004094123840332
    9. ',' → logprob: -13.254094123840332
    10. ' =
' → logprob: -13.879094123840332

Token 1210: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0077268220484256744
    2. ' None' → logprob: -4.882726669311523
    3. 'next' → logprob: -9.382726669311523
    4. '0' → logprob: -11.007726669311523
    5. ' next' → logprob: -12.257726669311523
    6. 'first' → logprob: -12.507726669311523
    7. '       ' → logprob: -12.632726669311523
    8. '[' → logprob: -13.132726669311523
    9. '   ' → logprob: -13.757726669311523
    10. '
' → logprob: -13.882726669311523

Token 1211: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5285513997077942
    2. '=' → logprob: -0.9035513997077942
    3. '       ' → logprob: -5.6535515785217285
    4. ' for' → logprob: -6.9035515785217285
    5. 'for' → logprob: -7.9035515785217285
    6. ':' → logprob: -9.02855110168457
    7. '=None' → logprob: -9.65355110168457
    8. '<|end|>' → logprob: -9.90355110168457
    9. '=True' → logprob: -10.02855110168457
    10. '        ' → logprob: -10.15355110168457

Token 1212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010020730085670948
    2. 'for' → logprob: -5.260020732879639
    3. ' for' → logprob: -5.385020732879639
    4. '	' → logprob: -9.38502025604248
    5. '```' → logprob: -10.38502025604248
    6. '           ' → logprob: -10.76002025604248
    7. '	for' → logprob: -11.01002025604248
    8. '[' → logprob: -11.13502025604248
    9. '   ' → logprob: -11.51002025604248
    10. '               ' → logprob: -12.26002025604248

Token 1213: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03016534633934498
    2. '       ' → logprob: -3.530165433883667
    3. ' for' → logprob: -7.905165195465088
    4. '```' → logprob: -10.655165672302246
    5. '           ' → logprob: -12.405165672302246
    6. '0' → logprob: -12.655165672302246
    7. '
' → logprob: -12.780165672302246
    8. 'i' → logprob: -12.905165672302246
    9. '[' → logprob: -13.280165672302246
    10. '   ' → logprob: -13.530165672302246

Token 1214: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007193420315161347
    2. ' i' → logprob: -7.2507195472717285
    3. 'k' → logprob: -11.87571907043457
    4. 'idx' → logprob: -13.37571907043457
    5. '```' → logprob: -15.37571907043457
    6. '   ' → logprob: -15.50071907043457
    7. 'j' → logprob: -16.00071907043457
    8. '`' → logprob: -16.50071907043457
    9. 'index' → logprob: -16.87571907043457
    10. 'x' → logprob: -17.00071907043457

Token 1215: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005244310479611158
    2. 'in' → logprob: -5.255244255065918
    3. ' ' → logprob: -12.630244255065918
    4. ' i' → logprob: -12.755244255065918
    5. 'n' → logprob: -13.505244255065918
    6. '=' → logprob: -13.880244255065918
    7. 'i' → logprob: -15.005244255065918
    8. ' =' → logprob: -15.255244255065918
    9. '	in' → logprob: -15.255244255065918
    10. '[' → logprob: -16.130245208740234

Token 1216: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001503313542343676
    2. ' range' → logprob: -6.5015034675598145
    3. 'in' → logprob: -14.376502990722656
    4. '(range' → logprob: -15.126502990722656
    5. '
' → logprob: -16.751502990722656
    6. ' in' → logprob: -17.001502990722656
    7. 'self' → logprob: -17.001502990722656
    8. '0' → logprob: -17.626502990722656
    9. 'i' → logprob: -18.001502990722656
    10. 'state' → logprob: -18.501502990722656

Token 1217: '(self' (ID: 2402)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5381394028663635
    2. 'self' → logprob: -1.0381393432617188
    3. '(self' → logprob: -2.7881393432617188
    4. '(range' → logprob: -8.038139343261719
    5. 'state' → logprob: -9.663139343261719
    6. ' range' → logprob: -9.663139343261719
    7. '[self' → logprob: -10.288139343261719
    8. 'first' → logprob: -11.663139343261719
    9. '(' → logprob: -12.038139343261719
    10. '0' → logprob: -12.288139343261719

Token 1218: '.n' (ID: 1835)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22858403623104095
    2. 'n' → logprob: -1.8535840511322021
    3. '(self' → logprob: -3.228584051132202
    4. '.n' → logprob: -5.353583812713623
    5. 'first' → logprob: -5.978583812713623
    6. 'range' → logprob: -8.353584289550781
    7. '
' → logprob: -9.353584289550781
    8. '.first' → logprob: -9.478584289550781
    9. 'state' → logprob: -9.478584289550781
    10. '(n' → logprob: -9.978584289550781

Token 1219: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.36682775616645813
    2. ':
' → logprob: -1.6168277263641357
    3. '           ' → logprob: -3.1168277263641357
    4. ':' → logprob: -3.3668277263641357
    5. ',' → logprob: -4.491827964782715
    6. '       ' → logprob: -4.616827964782715
    7. '):' → logprob: -5.616827964782715
    8. '():
' → logprob: -6.741827964782715
    9. '+' → logprob: -6.866827964782715
    10. '
' → logprob: -7.866827964782715

Token 1220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001922683441080153
    2. '	       ' → logprob: -6.376922607421875
    3. '		' → logprob: -9.626922607421875
    4. '               ' → logprob: -10.251922607421875
    5. ' if' → logprob: -10.876922607421875
    6. '<|end|>' → logprob: -11.126922607421875
    7. '       ' → logprob: -11.376922607421875
    8. '	           ' → logprob: -11.501922607421875
    9. '		   ' → logprob: -11.751922607421875
    10. ':' → logprob: -12.251922607421875

Token 1221: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.031073985621333122
    2. '           ' → logprob: -3.531074047088623
    3. ' if' → logprob: -6.656074047088623
    4. '               ' → logprob: -10.281073570251465
    5. '       ' → logprob: -14.406073570251465
    6. '```' → logprob: -14.906073570251465
    7. '   ' → logprob: -15.156073570251465
    8. 'If' → logprob: -15.156073570251465
    9. '                   ' → logprob: -15.781073570251465
    10. 'not' → logprob: -15.781073570251465

Token 1222: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3868798017501831
    2. ' not' → logprob: -1.136879801750183
    3. '           ' → logprob: -12.011879920959473
    4. 'n' → logprob: -14.261879920959473
    5. '(not' → logprob: -14.511879920959473
    6. '	not' → logprob: -14.511879920959473
    7. '               ' → logprob: -14.761879920959473
    8. '
' → logprob: -15.261879920959473
    9. 'i' → logprob: -15.761879920959473
    10. '                   ' → logprob: -16.386878967285156

Token 1223: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.004622137639671564
    2. ' state' → logprob: -5.379621982574463
    3. '(state' → logprob: -13.629622459411621
    4. '   ' → logprob: -15.754622459411621
    5. '	state' → logprob: -15.879622459411621
    6. '[state' → logprob: -16.254621505737305
    7. 'not' → logprob: -17.129621505737305
    8. 'self' → logprob: -17.254621505737305
    9. '.state' → logprob: -17.379621505737305
    10. '```' → logprob: -17.379621505737305

Token 1224: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -7.584239938296378e-06
    2. '.' → logprob: -12.250007629394531
    3. 'is' → logprob: -13.250007629394531
    4. ' .' → logprob: -14.625007629394531
    5. '.
' → logprob: -15.250007629394531
    6. '
' → logprob: -16.75000762939453
    7. '   ' → logprob: -17.00000762939453
    8. '```' → logprob: -17.37500762939453
    9. ').' → logprob: -18.12500762939453
    10. '       ' → logprob: -18.25000762939453

Token 1225: '_taken' (ID: 179958)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.5761977434158325
    2. '_taken' → logprob: -0.8261977434158325
    3. 'Taken' → logprob: -8.326197624206543
    4. ' taken' → logprob: -11.201197624206543
    5. 'i' → logprob: -13.951197624206543
    6. 'tak' → logprob: -14.826197624206543
    7. '```' → logprob: -15.076197624206543
    8. 'take' → logprob: -15.451197624206543
    9. ' Taken' → logprob: -15.951197624206543
    10. 'is' → logprob: -15.951197624206543

Token 1226: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -14.625000953674316
    3. '[i' → logprob: -17.125
    4. ' (' → logprob: -17.375
    5. '(' → logprob: -18.125
    6. '```' → logprob: -18.125
    7. '
' → logprob: -18.25
    8. 's' → logprob: -19.625
    9. '=i' → logprob: -20.125
    10. ' i' → logprob: -20.25

Token 1227: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01773170195519924
    2. '):' → logprob: -4.517731666564941
    3. '(i' → logprob: -5.517731666564941
    4. 'i' → logprob: -6.142731666564941
    5. '[i' → logprob: -8.267731666564941
    6. '):
' → logprob: -9.892731666564941
    7. ')i' → logprob: -10.017731666564941
    8. ')' → logprob: -10.142731666564941
    9. ' i' → logprob: -10.392731666564941
    10. ',i' → logprob: -11.017731666564941

Token 1228: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014045176794752479
    2. ' first' → logprob: -7.876404285430908
    3. 'first' → logprob: -8.126404762268066
    4. 'i' → logprob: -8.251404762268066
    5. '           ' → logprob: -8.626404762268066
    6. ' i' → logprob: -9.501404762268066
    7. '[first' → logprob: -9.501404762268066
    8. '(first' → logprob: -10.251404762268066
    9. ':' → logprob: -10.876404762268066
    10. 'First' → logprob: -11.751404762268066

Token 1229: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -5.288163083605468e-05
    2. ' first' → logprob: -10.500052452087402
    3. '           ' → logprob: -11.125052452087402
    4. 'i' → logprob: -11.750052452087402
    5. '               ' → logprob: -13.000052452087402
    6. 'First' → logprob: -16.00005340576172
    7. '[first' → logprob: -16.37505340576172
    8. '	first' → logprob: -16.50005340576172
    9. '```' → logprob: -16.50005340576172
    10. '                   ' → logprob: -16.75005340576172

Token 1230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133566081523895
    2. '=' → logprob: -1.313356637954712
    3. '=i' → logprob: -9.313356399536133
    4. '=
' → logprob: -12.563356399536133
    5. ' =
' → logprob: -13.938356399536133
    6. '＝' → logprob: -16.313356399536133
    7. '=None' → logprob: -16.688356399536133
    8. '=

' → logprob: -17.313356399536133
    9. ' ' → logprob: -17.438356399536133
    10. '<|end|>' → logprob: -18.188356399536133

Token 1231: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.941850526549388e-06
    2. ' i' → logprob: -11.750007629394531
    3. '```' → logprob: -20.00000762939453
    4. '	i' → logprob: -21.00000762939453
    5. ')i' → logprob: -22.12500762939453
    6. '
' → logprob: -22.75000762939453
    7. '           ' → logprob: -23.00000762939453
    8. '‌' → logprob: -23.12500762939453
    9. 'first' → logprob: -23.12500762939453
    10. '   ' → logprob: -23.50000762939453

Token 1232: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007803229382261634
    2. '           ' → logprob: -7.50078010559082
    3. '<|end|>' → logprob: -8.87578010559082
    4. '       ' → logprob: -10.87578010559082
    5. '                   ' → logprob: -11.62578010559082
    6. '              ' → logprob: -11.75078010559082
    7. '                ' → logprob: -11.87578010559082
    8. '                
' → logprob: -11.87578010559082
    9. ' and' → logprob: -12.12578010559082
    10. '
' → logprob: -12.25078010559082

Token 1233: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001473079901188612
    2. '           ' → logprob: -7.2514729499816895
    3. '       ' → logprob: -7.6264729499816895
    4. '			' → logprob: -9.876473426818848
    5. '                   ' → logprob: -10.501473426818848
    6. '	' → logprob: -10.751473426818848
    7. '		       ' → logprob: -10.876473426818848
    8. '	       ' → logprob: -11.126473426818848
    9. '<|end|>' → logprob: -11.251473426818848
    10. ' and' → logprob: -11.251473426818848

Token 1234: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.10088809579610825
    2. '               ' → logprob: -2.3508880138397217
    3. '           ' → logprob: -7.725888252258301
    4. ' break' → logprob: -8.3508882522583
    5. '                   ' → logprob: -13.9758882522583
    6. '       ' → logprob: -13.9758882522583
    7. '	break' → logprob: -14.4758882522583
    8. '
' → logprob: -14.7258882522583
    9. '```' → logprob: -14.9758882522583
    10. 'for' → logprob: -15.7258882522583

Token 1235: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014922809787094593
    2. '
' → logprob: -4.389922618865967
    3. '        
' → logprob: -7.014922618865967
    4. '<|end|>' → logprob: -7.639922618865967
    5. '```' → logprob: -8.639923095703125
    6. ',' → logprob: -8.639923095703125
    7. '               ' → logprob: -8.889923095703125
    8. 'for' → logprob: -9.264923095703125
    9. '  
' → logprob: -9.639923095703125
    10. ' for' → logprob: -10.014923095703125

Token 1236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010111343581229448
    2. '```' → logprob: -7.001011371612549
    3. 'for' → logprob: -9.75101089477539
    4. ' for' → logprob: -10.50101089477539
    5. '
' → logprob: -12.25101089477539
    6. '        
' → logprob: -12.75101089477539
    7. '   ' → logprob: -13.75101089477539
    8. '           ' → logprob: -13.75101089477539
    9. ',' → logprob: -13.87601089477539
    10. '<|end|>' → logprob: -14.62601089477539

Token 1237: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0036906935274600983
    2. '       ' → logprob: -5.753690719604492
    3. 'result' → logprob: -8.003690719604492
    4. ' max' → logprob: -9.878690719604492
    5. 'total' → logprob: -10.503690719604492
    6. 'lines' → logprob: -10.628690719604492
    7. 'res' → logprob: -10.753690719604492
    8. 'results' → logprob: -11.003690719604492
    9. 'best' → logprob: -11.378690719604492
    10. '
' → logprob: -11.628690719604492

Token 1238: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -5.512236498361744e-07
    2. 'parallel' → logprob: -15.125000953674316
    3. '_' → logprob: -16.125
    4. '_possible' → logprob: -16.875
    5. 'Parallel' → logprob: -17.125
    6. '```' → logprob: -17.125
    7. ' parallel' → logprob: -19.0
    8. '_pairs' → logprob: -19.125
    9. '           ' → logprob: -19.625
    10. '       ' → logprob: -19.75

Token 1239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269347220659256
    2. '=' → logprob: -2.126934766769409
    3. ' +=' → logprob: -12.876935005187988
    4. ',' → logprob: -13.751935005187988
    5. '_' → logprob: -14.501935005187988
    6. ' ' → logprob: -14.501935005187988
    7. ')' → logprob: -14.626935005187988
    8. '       ' → logprob: -14.751935005187988
    9. '   ' → logprob: -15.376935005187988
    10. '        ' → logprob: -15.376935005187988

Token 1240: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001340242917649448
    2. ' ' → logprob: -6.626340389251709
    3. '-' → logprob: -12.00133991241455
    4. '   ' → logprob: -12.75133991241455
    5. ' -' → logprob: -12.87633991241455
    6. 'max' → logprob: -13.75133991241455
    7. 'self' → logprob: -14.75133991241455
    8. 'float' → logprob: -14.75133991241455
    9. '       ' → logprob: -15.25133991241455
    10. ' max' → logprob: -15.50133991241455

Token 1241: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'max' → logprob: -15.00001049041748
    4. '-' → logprob: -15.37501049041748
    5. '   ' → logprob: -16.500011444091797
    6. 'self' → logprob: -17.750011444091797
    7. ' -' → logprob: -18.125011444091797
    8. '  ' → logprob: -18.875011444091797
    9. 'float' → logprob: -19.250011444091797
    10. '
' → logprob: -19.500011444091797

Token 1242: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006217909045517445
    2. '
' → logprob: -5.631217956542969
    3. 'for' → logprob: -6.381217956542969
    4. '	' → logprob: -8.131217956542969
    5. '   ' → logprob: -8.506217956542969
    6. ' for' → logprob: -8.756217956542969
    7. '        
' → logprob: -9.006217956542969
    8. '```' → logprob: -10.006217956542969
    9. '	for' → logprob: -10.131217956542969
    10. '           ' → logprob: -11.006217956542969

Token 1243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011112819192931056
    2. '	' → logprob: -7.5011115074157715
    3. 'for' → logprob: -8.126111030578613
    4. '
' → logprob: -9.501111030578613
    5. '   ' → logprob: -10.126111030578613
    6. ' for' → logprob: -10.251111030578613
    7. '        
' → logprob: -10.876111030578613
    8. '	for' → logprob: -10.876111030578613
    9. '```' → logprob: -11.001111030578613
    10. '           ' → logprob: -11.251111030578613

Token 1244: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16182871162891388
    2. '       ' → logprob: -1.9118287563323975
    3. ' for' → logprob: -6.536828517913818
    4. '```' → logprob: -9.286828994750977
    5. 'lines' → logprob: -10.786828994750977
    6. '   ' → logprob: -11.161828994750977
    7. '	for' → logprob: -11.411828994750977
    8. '	' → logprob: -12.286828994750977
    9. ' lines' → logprob: -12.536828994750977
    10. '
' → logprob: -13.161828994750977

Token 1245: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001055676257237792
    2. '       ' → logprob: -7.001055717468262
    3. 'lines' → logprob: -9.001055717468262
    4. ' for' → logprob: -11.501055717468262
    5. 'dire' → logprob: -12.626055717468262
    6. 'new' → logprob: -13.376055717468262
    7. '               ' → logprob: -14.001055717468262
    8. 'prev' → logprob: -14.376055717468262
    9. '```' → logprob: -14.376055717468262
    10. 'pairs' → logprob: -14.501055717468262

Token 1246: ' pairs' (ID: 24702)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7948665022850037
    2. 'j' → logprob: -0.9198665022850037
    3. 'for' → logprob: -2.2948665618896484
    4. 'pair' → logprob: -4.419866561889648
    5. 'first' → logprob: -4.544866561889648
    6. ' pairing' → logprob: -4.544866561889648
    7. ' j' → logprob: -5.294866561889648
    8. '               ' → logprob: -5.669866561889648
    9. 'range' → logprob: -6.044866561889648
    10. ' for' → logprob: -6.044866561889648

Token 1247: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9277046322822571
    2. ' for' → logprob: -0.9277046322822571
    3. 'for' → logprob: -2.4277045726776123
    4. '           ' → logprob: -2.8027045726776123
    5. '=' → logprob: -3.9277045726776123
    6. ' j' → logprob: -4.302704811096191
    7. ' =' → logprob: -4.802704811096191
    8. '               ' → logprob: -5.177704811096191
    9. ' in' → logprob: -6.177704811096191
    10. ' first' → logprob: -6.427704811096191

Token 1248: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.32011571526527405
    2. 'range' → logprob: -1.9451156854629517
    3. 'j' → logprob: -2.070115804672241
    4. ' first' → logprob: -6.320115566253662
    5. ' range' → logprob: -6.820115566253662
    6. 'for' → logprob: -6.945115566253662
    7. ' j' → logprob: -7.695115566253662
    8. 'i' → logprob: -8.94511604309082
    9. '(first' → logprob: -9.44511604309082
    10. '`' → logprob: -9.82011604309082

Token 1249: ' point' (ID: 2438)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1025018692016602
    2. 'in' → logprob: -1.2275018692016602
    3. ' in' → logprob: -1.4775018692016602
    4. ' for' → logprob: -2.72750186920166
    5. ' j' → logprob: -3.47750186920166
    6. 'j' → logprob: -3.47750186920166
    7. '=' → logprob: -5.10250186920166
    8. ',' → logprob: -5.47750186920166
    9. '
' → logprob: -6.47750186920166
    10. ')' → logprob: -6.85250186920166

Token 1250: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44318291544914246
    2. ' for' → logprob: -1.1931829452514648
    3. 'for' → logprob: -3.193182945251465
    4. '           ' → logprob: -4.818182945251465
    5. ',' → logprob: -6.443182945251465
    6. '               ' → logprob: -7.318182945251465
    7. '
' → logprob: -7.443182945251465
    8. '=' → logprob: -7.443182945251465
    9. '   ' → logprob: -7.693182945251465
    10. ' =' → logprob: -8.068182945251465

Token 1251: ' another' (ID: 3613)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.21066680550575256
    2. ' j' → logprob: -2.4606668949127197
    3. 'other' → logprob: -3.4606668949127197
    4. 'range' → logprob: -3.7106668949127197
    5. 'for' → logprob: -4.335666656494141
    6. ' other' → logprob: -4.460666656494141
    7. ' range' → logprob: -4.585666656494141
    8. ' for' → logprob: -5.085666656494141
    9. 'each' → logprob: -6.460666656494141
    10. 'all' → logprob: -6.710666656494141

Token 1252: ' unt' (ID: 8222)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0031784772872925
    2. 'for' → logprob: -1.1281784772872925
    3. 'j' → logprob: -1.6281784772872925
    4. ' j' → logprob: -2.878178596496582
    5. 'unt' → logprob: -3.503178596496582
    6. 'i' → logprob: -5.253178596496582
    7. '               ' → logprob: -5.753178596496582
    8. ' in' → logprob: -6.378178596496582
    9. 'range' → logprob: -6.503178596496582
    10. '(j' → logprob: -6.753178596496582

Token 1253: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.02524261549115181
    2. 'taken' → logprob: -4.275242805480957
    3. '```' → logprob: -4.900242805480957
    4. '               ' → logprob: -6.400242805480957
    5. '           ' → logprob: -6.775242805480957
    6. '                   ' → logprob: -9.025242805480957
    7. '_taken' → logprob: -9.275242805480957
    8. '       ' → logprob: -9.650242805480957
    9. 'ake' → logprob: -9.650242805480957
    10. '``' → logprob: -9.775242805480957

Token 1254: ' j' (ID: 441)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.39449745416641235
    2. 'j' → logprob: -2.3944973945617676
    3. 'for' → logprob: -2.5194973945617676
    4. ' point' → logprob: -3.2694973945617676
    5. ' j' → logprob: -3.8944973945617676
    6. '```' → logprob: -3.8944973945617676
    7. ')' → logprob: -4.144497394561768
    8. ' for' → logprob: -4.519497394561768
    9. '               ' → logprob: -4.644497394561768
    10. '
' → logprob: -4.769497394561768

Token 1255: '
' (ID: 198)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2828314006328583
    2. ':' → logprob: -2.0328314304351807
    3. 'in' → logprob: -2.5328314304351807
    4. ' for' → logprob: -4.282831192016602
    5. ':
' → logprob: -4.782831192016602
    6. 'for' → logprob: -4.782831192016602
    7. ',' → logprob: -6.282831192016602
    8. '       ' → logprob: -6.782831192016602
    9. '.' → logprob: -7.657831192016602
    10. '           ' → logprob: -7.907831192016602

Token 1256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007305122446268797
    2. ' for' → logprob: -5.507305145263672
    3. 'for' → logprob: -6.007305145263672
    4. '           ' → logprob: -8.132305145263672
    5. '               ' → logprob: -9.007305145263672
    6. '   ' → logprob: -9.257305145263672
    7. '	' → logprob: -9.757305145263672
    8. ',' → logprob: -10.007305145263672
    9. '        
' → logprob: -10.007305145263672
    10. ' ' → logprob: -10.757305145263672

Token 1257: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2658279538154602
    2. ' for' → logprob: -1.8908278942108154
    3. '       ' → logprob: -2.5158278942108154
    4. ' lines' → logprob: -7.6408281326293945
    5. '               ' → logprob: -7.8908281326293945
    6. '
' → logprob: -8.015828132629395
    7. '           ' → logprob: -8.765828132629395
    8. '   ' → logprob: -9.515828132629395
    9. 'lines' → logprob: -9.515828132629395
    10. '        
' → logprob: -10.140828132629395

Token 1258: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007108822464942932
    2. ' j' → logprob: -7.250710964202881
    3. '   ' → logprob: -15.000710487365723
    4. 'i' → logprob: -16.12571144104004
    5. '`' → logprob: -16.25071144104004
    6. '	j' → logprob: -16.37571144104004
    7. ' ' → logprob: -16.50071144104004
    8. '```' → logprob: -16.62571144104004
    9. 'k' → logprob: -17.12571144104004
    10. 'new' → logprob: -17.37571144104004

Token 1259: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6326212882995605
    2. ' in' → logprob: -0.7576212882995605
    3. ' ' → logprob: -11.632621765136719
    4. '
' → logprob: -12.882621765136719
    5. 'first' → logprob: -13.382621765136719
    6. 'In' → logprob: -13.632621765136719
    7. 'n' → logprob: -13.632621765136719
    8. 'range' → logprob: -13.757621765136719
    9. '	in' → logprob: -13.882621765136719
    10. '```' → logprob: -14.132621765136719

Token 1260: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078997299075127
    2. ' range' → logprob: -5.5040788650512695
    3. '(range' → logprob: -14.37907886505127
    4. 'first' → logprob: -17.129079818725586
    5. 'in' → logprob: -18.504079818725586
    6. '	range' → logprob: -20.879079818725586
    7. 'Range' → logprob: -21.379079818725586
    8. ' in' → logprob: -21.504079818725586
    9. '
' → logprob: -21.629079818725586
    10. '_range' → logprob: -22.379079818725586

Token 1261: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.0031812789384275675
    2. 'first' → logprob: -5.753181457519531
    3. ' first' → logprob: -13.253181457519531
    4. 'range' → logprob: -13.753181457519531
    5. '[first' → logprob: -14.128181457519531
    6. '	first' → logprob: -17.25318145751953
    7. ':first' → logprob: -17.50318145751953
    8. ' (' → logprob: -17.75318145751953
    9. 'First' → logprob: -18.50318145751953
    10. '(' → logprob: -18.75318145751953

Token 1262: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141500234603882
    2. '+' → logprob: -1.7014150619506836
    3. '+j' → logprob: -13.951415061950684
    4. '1' → logprob: -15.076415061950684
    5. '+
' → logprob: -15.701415061950684
    6. '+,' → logprob: -16.201414108276367
    7. ' +
' → logprob: -16.451414108276367
    8. ',' → logprob: -16.701414108276367
    9. '   ' → logprob: -17.826414108276367
    10. '
' → logprob: -17.951414108276367

Token 1263: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.37509536743164
    4. '```' → logprob: -18.12509536743164
    5. '
' → logprob: -18.25009536743164
    6. ',' → logprob: -18.37509536743164
    7. '0' → logprob: -18.62509536743164
    8. '2' → logprob: -19.18759536743164
    9. ')' → logprob: -19.25009536743164
    10. '`' → logprob: -19.62509536743164

Token 1264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -16.500001907348633
    4. '0' → logprob: -17.375001907348633
    5. '+' → logprob: -17.812501907348633
    6. '```' → logprob: -18.187501907348633
    7. 'range' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.812501907348633
    9. '2' → logprob: -19.000001907348633
    10. '１' → logprob: -19.250001907348633

Token 1265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.539801688631997e-05
    2. ',self' → logprob: -10.625065803527832
    3. ',j' → logprob: -10.750065803527832
    4. ' ,' → logprob: -11.125065803527832
    5. '1' → logprob: -13.500065803527832
    6. ',n' → logprob: -14.000065803527832
    7. ',len' → logprob: -14.250065803527832
    8. ',next' → logprob: -15.125065803527832
    9. 'self' → logprob: -15.625065803527832
    10. ',
' → logprob: -15.625065803527832

Token 1266: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.860340752406046e-05
    2. ' self' → logprob: -9.7500581741333
    3. '(self' → logprob: -15.6250581741333
    4. '       ' → logprob: -16.500059127807617
    5. '           ' → logprob: -18.125059127807617
    6. '[self' → logprob: -18.250059127807617
    7. ')' → logprob: -19.000059127807617
    8. '   ' → logprob: -19.750059127807617
    9. '	self' → logprob: -19.750059127807617
    10. '=self' → logprob: -19.750059127807617

Token 1267: '.n' (ID: 1835)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.927930654550437e-05
    2. ' self' → logprob: -10.500029563903809
    3. 'n' → logprob: -13.500029563903809
    4. '(self' → logprob: -16.375028610229492
    5. '       ' → logprob: -16.875028610229492
    6. '
' → logprob: -17.750028610229492
    7. '           ' → logprob: -18.000028610229492
    8. ')' → logprob: -18.125028610229492
    9. 'user' → logprob: -18.250028610229492
    10. '[self' → logprob: -18.875028610229492

Token 1268: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18012352287769318
    2. '):' → logprob: -1.8051235675811768
    3. ')' → logprob: -8.555123329162598
    4. '           ' → logprob: -9.555123329162598
    5. '               ' → logprob: -10.430123329162598
    6. '):
' → logprob: -10.805123329162598
    7. ':' → logprob: -10.930123329162598
    8. ',' → logprob: -11.180123329162598
    9. ':
' → logprob: -11.555123329162598
    10. '):

' → logprob: -11.930123329162598

Token 1269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026473645120859146
    2. '               ' → logprob: -3.6514737606048584
    3. ' if' → logprob: -9.276473999023438
    4. '                   ' → logprob: -10.901473999023438
    5. 'if' → logprob: -11.151473999023438
    6. '            ' → logprob: -11.151473999023438
    7. '                               ' → logprob: -12.276473999023438
    8. '          ' → logprob: -12.276473999023438
    9. '                       ' → logprob: -12.401473999023438
    10. ' ' → logprob: -12.401473999023438

Token 1270: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10116706788539886
    2. 'if' (adapté à ' if') → logprob: -2.6011669635772705
    3. '               ' → logprob: -3.9761669635772705
    4. '           ' → logprob: -6.22616720199585
    5. ' not' → logprob: -6.85116720199585
    6. 'not' → logprob: -8.476166725158691
    7. '                   ' → logprob: -11.476166725158691
    8. ' ' → logprob: -12.226166725158691
    9. '   ' → logprob: -12.351166725158691
    10. '0' → logprob: -13.851166725158691

Token 1271: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20141461491584778
    2. ' not' → logprob: -1.7014145851135254
    3. '           ' → logprob: -14.451415061950684
    4. '	not' → logprob: -15.326415061950684
    5. '(not' → logprob: -15.576415061950684
    6. 'n' → logprob: -15.951415061950684
    7. '               ' → logprob: -16.076414108276367
    8. '   ' → logprob: -16.576414108276367
    9. '
' → logprob: -17.701414108276367
    10. '!' → logprob: -17.701414108276367

Token 1272: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0001239196863025427
    2. ' state' → logprob: -9.000123977661133
    3. '(state' → logprob: -15.000123977661133
    4. '   ' → logprob: -17.375123977661133
    5. '	state' → logprob: -17.500123977661133
    6. '[state' → logprob: -17.625123977661133
    7. ' ' → logprob: -18.125123977661133
    8. '.state' → logprob: -18.250123977661133
    9. '           ' → logprob: -18.625123977661133
    10. 'not' → logprob: -18.625123977661133

Token 1273: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -9.088346359931165e-07
    2. 'is' → logprob: -14.125000953674316
    3. '.' → logprob: -16.0
    4. '(is' → logprob: -18.125
    5. ' .' → logprob: -18.25
    6. 'Taken' → logprob: -18.5
    7. 'taken' → logprob: -19.875
    8. '```' → logprob: -20.125
    9. '_taken' → logprob: -20.625
    10. '().' → logprob: -20.75

Token 1274: '_taken' (ID: 179958)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.010100985877215862
    2. '_taken' → logprob: -4.635100841522217
    3. 'is' → logprob: -8.385101318359375
    4. 'Taken' → logprob: -9.135101318359375
    5. ' taken' → logprob: -11.760101318359375
    6. '```' → logprob: -15.260101318359375
    7. 'tak' → logprob: -15.260101318359375
    8. 'state' → logprob: -15.885101318359375
    9. '
' → logprob: -16.135101318359375
    10. ' Taken' → logprob: -16.260101318359375

Token 1275: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.20146304368972778
    2. 'j' → logprob: -1.701462984085083
    3. ' j' → logprob: -10.326462745666504
    4. '           ' → logprob: -11.951462745666504
    5. '[j' → logprob: -12.076462745666504
    6. '               ' → logprob: -13.576462745666504
    7. ' (' → logprob: -13.576462745666504
    8. '	j' → logprob: -14.576462745666504
    9. '                   ' → logprob: -14.951462745666504
    10. '   ' → logprob: -15.076462745666504

Token 1276: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05942511931061745
    2. '):' → logprob: -3.434425115585327
    3. '               ' → logprob: -3.684425115585327
    4. ':
' → logprob: -9.434425354003906
    5. ')' → logprob: -9.559425354003906
    6. ':' → logprob: -9.809425354003906
    7. '           ' → logprob: -10.059425354003906
    8. '):
' → logprob: -10.309425354003906
    9. '):

' → logprob: -11.059425354003906
    10. '():
' → logprob: -12.059425354003906

Token 1277: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002892132615670562
    2. ':
' → logprob: -7.002892017364502
    3. ':' → logprob: -7.127892017364502
    4. '              ' → logprob: -8.25289249420166
    5. '           ' → logprob: -8.37789249420166
    6. '                ' → logprob: -8.62789249420166
    7. '                
' → logprob: -9.37789249420166
    8. '):
' → logprob: -9.62789249420166
    9. '                               ' → logprob: -10.00289249420166
    10. ')' → logprob: -10.12789249420166

Token 1278: ' next' (ID: 2613)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06735970824956894
    2. ' new' → logprob: -3.067359685897827
    3. '                   ' → logprob: -4.942359924316406
    4. 'next' (adapté à ' next') → logprob: -5.317359924316406
    5. '               ' → logprob: -5.942359924316406
    6. 'lines' → logprob: -6.067359924316406
    7. ' lines' → logprob: -7.067359924316406
    8. '   ' → logprob: -8.817359924316406
    9. ' next' → logprob: -8.817359924316406
    10. 'sub' → logprob: -9.317359924316406

Token 1279: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.058227431029081345
    2. '_lines' → logprob: -3.5582275390625
    3. '_new' → logprob: -4.0582275390625
    4. 'new' → logprob: -5.1832275390625
    5. 'state' → logprob: -5.3082275390625
    6. '```' → logprob: -9.8082275390625
    7. '                   ' → logprob: -10.3082275390625
    8. 'lines' → logprob: -10.3082275390625
    9. '               ' → logprob: -10.4332275390625
    10. '_states' → logprob: -10.4332275390625

Token 1280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. ',' → logprob: -16.66022491455078
    4. '```' → logprob: -17.66022491455078
    5. '=
' → logprob: -17.66022491455078
    6. '=self' → logprob: -17.91022491455078
    7. '=new' → logprob: -18.03522491455078
    8. ' =
' → logprob: -18.03522491455078
    9. '           ' → logprob: -18.03522491455078
    10. 'new' → logprob: -18.03522491455078

Token 1281: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0013283335138112307
    2. ' state' → logprob: -6.626328468322754
    3. '           ' → logprob: -13.751328468322754
    4. '               ' → logprob: -14.501328468322754
    5. '   ' → logprob: -15.251328468322754
    6. '                   ' → logprob: -15.251328468322754
    7. 'Pair' → logprob: -16.626327514648438
    8. '       ' → logprob: -16.876327514648438
    9. '	state' → logprob: -17.001327514648438
    10. 'self' → logprob: -17.001327514648438

Token 1282: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0006066487403586507
    2. ' =' → logprob: -8.375606536865234
    3. '=' → logprob: -8.500606536865234
    4. 'add' → logprob: -9.375606536865234
    5. '.' → logprob: -9.875606536865234
    6. '           ' → logprob: -10.750606536865234
    7. '   ' → logprob: -13.000606536865234
    8. ' .' → logprob: -13.000606536865234
    9. '       ' → logprob: -13.125606536865234
    10. '_add' → logprob: -13.375606536865234

Token 1283: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.0010996110504493117
    2. 'pair' → logprob: -7.376099586486816
    3. '(first' → logprob: -7.751099586486816
    4. 'first' → logprob: -10.251099586486816
    5. 'Pair' → logprob: -12.876099586486816
    6. '(j' → logprob: -12.876099586486816
    7. ' pair' → logprob: -14.126099586486816
    8. '_pairs' → logprob: -15.001099586486816
    9. '_PAIR' → logprob: -15.251099586486816
    10. 'j' → logprob: -15.376099586486816

Token 1284: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.12699803709983826
    2. 'first' → logprob: -2.126997947692871
    3. ' first' → logprob: -10.626997947692871
    4. '[first' → logprob: -10.626997947692871
    5. '	first' → logprob: -11.626997947692871
    6. '           ' → logprob: -11.876997947692871
    7. '               ' → logprob: -13.126997947692871
    8. '(next' → logprob: -13.626997947692871
    9. '(j' → logprob: -14.126997947692871
    10. '   ' → logprob: -14.501997947692871

Token 1285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03805537521839142
    2. ',j' → logprob: -3.288055419921875
    3. ' ,' → logprob: -12.038055419921875
    4. '                   ' → logprob: -13.663055419921875
    5. ',n' → logprob: -13.663055419921875
    6. ',next' → logprob: -13.663055419921875
    7. '               ' → logprob: -14.288055419921875
    8. ',k' → logprob: -14.288055419921875
    9. ',user' → logprob: -14.288055419921875
    10. ',new' → logprob: -14.413055419921875

Token 1286: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.014684110297821e-06
    2. ' j' → logprob: -11.625008583068848
    3. '                   ' → logprob: -17.375009536743164
    4. '	j' → logprob: -18.750009536743164
    5. '[j' → logprob: -18.875009536743164
    6. '   ' → logprob: -19.875009536743164
    7. '
' → logprob: -19.875009536743164
    8. '               ' → logprob: -20.250009536743164
    9. '           ' → logprob: -20.375009536743164
    10. '$j' → logprob: -20.375009536743164

Token 1287: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43419545888900757
    2. ',' → logprob: -1.0591955184936523
    3. ')
' → logprob: -6.059195518493652
    4. ',new' → logprob: -6.559195518493652
    5. '              ' → logprob: -7.434195518493652
    6. 'new' → logprob: -7.809195518493652
    7. '),' → logprob: -8.559195518493652
    8. ')' → logprob: -8.684195518493652
    9. '           ' → logprob: -9.184195518493652
    10. ',next' → logprob: -9.809195518493652

Token 1288: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007369658560492098
    2. '                   ' → logprob: -8.625737190246582
    3. '                
' → logprob: -9.000737190246582
    4. '```' → logprob: -9.000737190246582
    5. '                ' → logprob: -9.250737190246582
    6. '           ' → logprob: -9.875737190246582
    7. ',' → logprob: -10.500737190246582
    8. ' next' → logprob: -10.625737190246582
    9. '              ' → logprob: -11.125737190246582
    10. 'next' → logprob: -11.125737190246582

Token 1289: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2283172756433487
    2. 'res' → logprob: -2.1033172607421875
    3. 'combined' → logprob: -3.3533172607421875
    4. 'total' → logprob: -4.2283172607421875
    5. 'parallel' → logprob: -4.7283172607421875
    6. '               ' → logprob: -5.2283172607421875
    7. 'next' → logprob: -5.2283172607421875
    8. 'candidate' → logprob: -5.6033172607421875
    9. 'max' → logprob: -6.1033172607421875
    10. 'sub' → logprob: -6.1033172607421875

Token 1290: ' Append' (ID: 58624)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21727831661701202
    2. 'res' → logprob: -1.8422783613204956
    3. 'combined' → logprob: -4.342278480529785
    4. 'total' → logprob: -4.592278480529785
    5. 'candidate' → logprob: -5.592278480529785
    6. 'parallel' → logprob: -5.842278480529785
    7. 'sub' → logprob: -5.842278480529785
    8. 'next' → logprob: -7.092278480529785
    9. 'max' → logprob: -7.592278480529785
    10. 'current' → logprob: -7.717278480529785

Token 1291: ' this' (ID: 495)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.012726247310638428
    2. ' new' → logprob: -4.387726306915283
    3. '                   ' → logprob: -9.137725830078125
    4. '               ' → logprob: -9.637725830078125
    5. '   ' → logprob: -11.137725830078125
    6. '           ' → logprob: -11.262725830078125
    7. '                       ' → logprob: -11.762725830078125
    8. ' lines' → logprob: -12.762725830078125
    9. 'lines' → logprob: -13.262725830078125
    10. '       ' → logprob: -13.387725830078125

Token 1292: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.65268874168396
    2. '_lines' → logprob: -0.77768874168396
    3. 'lines' → logprob: -4.902688980102539
    4. ' new' → logprob: -4.902688980102539
    5. ' lines' → logprob: -6.652688980102539
    6. '               ' → logprob: -7.402688980102539
    7. '
' → logprob: -7.777688980102539
    8. '_new' → logprob: -8.027688980102539
    9. 'to' → logprob: -8.152688980102539
    10. '                   ' → logprob: -8.152688980102539

Token 1293: ' pair' (ID: 10610)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.11740555614233017
    2. 'new' → logprob: -2.492405652999878
    3. 'line' → logprob: -4.117405414581299
    4. 'lines' → logprob: -4.992405414581299
    5. '_line' → logprob: -5.992405414581299
    6. '_new' → logprob: -6.867405414581299
    7. '[(' → logprob: -8.242405891418457
    8. '```' → logprob: -8.367405891418457
    9. 'pair' → logprob: -8.742405891418457
    10. '
' → logprob: -9.117405891418457

Token 1294: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06132737174630165
    2. ',' → logprob: -3.4363274574279785
    3. ' to' → logprob: -4.6863274574279785
    4. ' +' → logprob: -5.6863274574279785
    5. ' lines' → logprob: -5.8113274574279785
    6. '+' → logprob: -6.0613274574279785
    7. '                   ' → logprob: -6.0613274574279785
    8. 'new' → logprob: -6.4363274574279785
    9. '_lines' → logprob: -6.6863274574279785
    10. 'to' → logprob: -6.8113274574279785

Token 1295: ' recurse' (ID: 178947)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.47350209951400757
    2. 'self' → logprob: -1.7235021591186523
    3. ' new' → logprob: -1.9735021591186523
    4. ' lines' → logprob: -3.9735021591186523
    5. '                   ' → logprob: -4.223502159118652
    6. ' self' → logprob: -4.973502159118652
    7. '               ' → logprob: -5.348502159118652
    8. '                       ' → logprob: -5.473502159118652
    9. 'lines' → logprob: -5.598502159118652
    10. 'next' → logprob: -6.348502159118652

Token 1296: ' deeper' (ID: 29159)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08807826787233353
    2. ',' → logprob: -3.213078260421753
    3. '(next' → logprob: -3.838078260421753
    4. '(new' → logprob: -4.213078498840332
    5. ' with' → logprob: -5.963078498840332
    6. 'new' → logprob: -6.713078498840332
    7. '                   ' → logprob: -6.838078498840332
    8. ',new' → logprob: -7.338078498840332
    9. '(lines' → logprob: -7.838078498840332
    10. ' new' → logprob: -8.713078498840332

Token 1297: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03271866217255592
    2. ',' → logprob: -3.5327186584472656
    3. '(next' → logprob: -6.907718658447266
    4. ',new' → logprob: -7.782718658447266
    5. 'new' → logprob: -8.032718658447266
    6. '(new' → logprob: -8.782718658447266
    7. '                   ' → logprob: -9.157718658447266
    8. '(lines' → logprob: -9.157718658447266
    9. ',
' → logprob: -9.282718658447266
    10. ',next' → logprob: -9.282718658447266

Token 1298: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009086026693694293
    2. ',' → logprob: -7.250908374786377
    3. '                
' → logprob: -10.000908851623535
    4. '                   ' → logprob: -10.625908851623535
    5. '                ' → logprob: -10.875908851623535
    6. '              ' → logprob: -11.000908851623535
    7. '```' → logprob: -11.125908851623535
    8. '(next' → logprob: -11.750908851623535
    9. '<|end|>' → logprob: -12.000908851623535
    10. 'new' → logprob: -12.000908851623535

Token 1299: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.28057578206062317
    2. 'res' → logprob: -1.6555757522583008
    3. '               ' → logprob: -3.780575752258301
    4. 'max' → logprob: -4.280575752258301
    5. 'total' → logprob: -5.030575752258301
    6. ' result' → logprob: -5.155575752258301
    7. ' res' → logprob: -6.530575752258301
    8. ' max' → logprob: -7.780575752258301
    9. 'combined' → logprob: -7.780575752258301
    10. 'parallel' → logprob: -8.0305757522583

Token 1300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020556719973683357
    2. '=' → logprob: -3.895556688308716
    3. ',' → logprob: -11.395556449890137
    4. '=self' → logprob: -13.270556449890137
    5. '=_' → logprob: -14.770556449890137
    6. '               ' → logprob: -15.020556449890137
    7. '           ' → logprob: -15.520556449890137
    8. ')' → logprob: -15.895556449890137
    9. '                   ' → logprob: -16.020557403564453
    10. 's' → logprob: -16.270557403564453

Token 1301: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023252001032233238
    2. ' self' → logprob: -3.773252010345459
    3. '               ' → logprob: -12.7732515335083
    4. '                   ' → logprob: -13.0232515335083
    5. '(self' → logprob: -14.2732515335083
    6. '           ' → logprob: -14.6482515335083
    7. '[self' → logprob: -16.273252487182617
    8. '	self' → logprob: -16.398252487182617
    9. '                       ' → logprob: -16.898252487182617
    10. '   ' → logprob: -16.898252487182617

Token 1302: '._' (ID: 2697)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.47424426674842834
    2. '._' → logprob: -0.974244236946106
    3. ' _' → logprob: -9.349244117736816
    4. '.re' → logprob: -10.099244117736816
    5. '_rec' → logprob: -11.724244117736816
    6. '       ' → logprob: -11.974244117736816
    7. '_recursive' → logprob: -11.974244117736816
    8. '   ' → logprob: -12.599244117736816
    9. '```' → logprob: -13.224244117736816
    10. '     ' → logprob: -13.724244117736816

Token 1303: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -4.320199877838604e-07
    2. '_re' → logprob: -14.75
    3. '```' → logprob: -19.0
    4. ' recurse' → logprob: -19.125
    5. '`' → logprob: -20.0
    6. '   ' → logprob: -20.25
    7. 'rec' → logprob: -20.375
    8. 'r' → logprob: -20.375
    9. '	re' → logprob: -21.0
    10. '(re' → logprob: -21.0

Token 1304: 'curse' (ID: 134738)
  Prédit: 'curse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curse' → logprob: -0.47740834951400757
    2. 're' → logprob: -0.9774083495140076
    3. 'c' → logprob: -6.102408409118652
    4. 'cur' → logprob: -7.227408409118652
    5. '_re' → logprob: -7.977408409118652
    6. 'r' → logprob: -11.977408409118652
    7. 'urse' → logprob: -12.852408409118652
    8. 'ce' → logprob: -13.227408409118652
    9. 'cursor' → logprob: -13.477408409118652
    10. ' recurse' → logprob: -13.727408409118652

Token 1305: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -3.4121114822482923e-06
    2. 'with' → logprob: -13.250003814697266
    3. '
' → logprob: -14.625003814697266
    4. '```' → logprob: -15.375003814697266
    5. ' _' → logprob: -15.625003814697266
    6. '_w' → logprob: -16.250003814697266
    7. '   ' → logprob: -16.375003814697266
    8. 'With' → logprob: -16.500003814697266
    9. ')_' → logprob: -16.625003814697266
    10. '_to' → logprob: -16.750003814697266

Token 1306: '_lines' (ID: 42980)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.01223448570817709
    2. ' next' → logprob: -4.887234687805176
    3. '(next' → logprob: -5.637234687805176
    4. 'state' → logprob: -7.512234687805176
    5. '[next' → logprob: -8.137234687805176
    6. 'new' → logprob: -8.762234687805176
    7. '```' → logprob: -10.887234687805176
    8. 'lines' → logprob: -11.512234687805176
    9. '
' → logprob: -12.137234687805176
    10. 'result' → logprob: -12.387234687805176

Token 1307: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.375008583068848
    3. 'next' → logprob: -13.000008583068848
    4. '(
' → logprob: -13.375008583068848
    5. '(new' → logprob: -15.750008583068848
    6. ' (' → logprob: -16.000009536743164
    7. '```' → logprob: -16.625009536743164
    8. ' next' → logprob: -16.750009536743164
    9. '(state' → logprob: -16.875009536743164
    10. '[next' → logprob: -17.250009536743164

Token 1308: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0077811297960579395
    2. 'state' → logprob: -4.882781028747559
    3. '```' → logprob: -9.882781028747559
    4. '_' → logprob: -11.007781028747559
    5. '(next' → logprob: -11.007781028747559
    6. '_lines' → logprob: -11.257781028747559
    7. 'State' → logprob: -11.382781028747559
    8. '(' → logprob: -11.882781028747559
    9. 'next' → logprob: -12.007781028747559
    10. '_states' → logprob: -12.007781028747559

Token 1309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039155878126621246
    2. ',new' → logprob: -3.414155960083008
    3. '(new' → logprob: -5.664155960083008
    4. 'new' → logprob: -6.664155960083008
    5. '               ' → logprob: -7.914155960083008
    6. '           ' → logprob: -8.664155960083008
    7. '                   ' → logprob: -10.289155960083008
    8. ' ,' → logprob: -10.789155960083008
    9. '              ' → logprob: -10.789155960083008
    10. ')' → logprob: -11.414155960083008

Token 1310: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.02325153350830078
    2. ' new' → logprob: -3.773251533508301
    3. '                   ' → logprob: -13.0232515335083
    4. '   ' → logprob: -13.7732515335083
    5. '               ' → logprob: -14.0232515335083
    6. '[new' → logprob: -14.0232515335083
    7. '                       ' → logprob: -14.7732515335083
    8. '                  ' → logprob: -15.6482515335083
    9. '           ' → logprob: -15.8982515335083
    10. ' ' → logprob: -16.773250579833984

Token 1311: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -4.0484450437361374e-05
    2. 'lines' → logprob: -10.125040054321289
    3. 'Lines' → logprob: -15.250040054321289
    4. '```' → logprob: -16.12504005432129
    5. ' lines' → logprob: -16.75004005432129
    6. '(lines' → logprob: -17.62504005432129
    7. 'new' → logprob: -18.12504005432129
    8. '_line' → logprob: -18.75004005432129
    9. '	lines' → logprob: -18.75004005432129
    10. '   ' → logprob: -19.25004005432129

Token 1312: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.049009934067726135
    2. '+' → logprob: -3.0490100383758545
    3. '+[' → logprob: -7.799009799957275
    4. '                   ' → logprob: -12.299010276794434
    5. '               ' → logprob: -12.674010276794434
    6. '                ' → logprob: -14.549010276794434
    7. '```' → logprob: -14.549010276794434
    8. '              ' → logprob: -14.549010276794434
    9. ' +
' → logprob: -14.674010276794434
    10. '                       ' → logprob: -14.799010276794434

Token 1313: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.632542913896032e-05
    2. '[((' → logprob: -10.000046730041504
    3. ' [(' → logprob: -14.000046730041504
    4. '([(' → logprob: -17.750045776367188
    5. '[' → logprob: -19.875045776367188
    6. '((' → logprob: -20.625045776367188
    7. '   ' → logprob: -21.750045776367188
    8. ' ' → logprob: -21.750045776367188
    9. '[
' → logprob: -22.250045776367188
    10. '[[' → logprob: -24.250045776367188

Token 1314: 'first' (ID: 7743)
  Prédit: 'first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.00012713817704934627
    2. 'i' → logprob: -9.250126838684082
    3. ' first' → logprob: -10.625126838684082
    4. '(first' → logprob: -12.750126838684082
    5. 'j' → logprob: -13.000126838684082
    6. '[first' → logprob: -14.875126838684082
    7. '   ' → logprob: -15.125126838684082
    8. '
' → logprob: -15.250126838684082
    9. 'First' → logprob: -15.375126838684082
    10. '	first' → logprob: -15.875126838684082

Token 1315: ',' (ID: 11)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.47418081760406494
    2. ',' → logprob: -0.9741808176040649
    3. ',
' → logprob: -9.349181175231934
    4. ' ,' → logprob: -11.724181175231934
    5. 'j' → logprob: -12.099181175231934
    6. '
' → logprob: -14.474181175231934
    7. ',{
' → logprob: -15.224181175231934
    8. '```' → logprob: -15.349181175231934
    9. ',

' → logprob: -15.474181175231934
    10. '<|end|>' → logprob: -15.474181175231934

Token 1316: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.896309739408025e-07
    2. ' j' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.5
    4. '
' → logprob: -18.5
    5. '	j' → logprob: -19.75
    6. '$j' → logprob: -21.75
    7. '       ' → logprob: -22.5
    8. '
' → logprob: -22.625
    9. '[j' → logprob: -22.75
    10. ',j' → logprob: -22.75

Token 1317: ')])
' (ID: 66560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.020915420725941658
    2. ')])' → logprob: -4.020915508270264
    3. '])
' → logprob: -6.145915508270264
    4. ')' → logprob: -8.020915031433105
    5. ')]' → logprob: -8.645915031433105
    6. '               ' → logprob: -9.645915031433105
    7. ')])
' → logprob: -10.270915031433105
    8. '           ' → logprob: -12.770915031433105
    9. ']))' → logprob: -13.270915031433105
    10. '                   ' → logprob: -13.270915031433105

Token 1318: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001313213026151061
    2. '
' → logprob: -7.876313209533691
    3. ')' → logprob: -8.001313209533691
    4. '                
' → logprob: -8.376313209533691
    5. '```' → logprob: -8.501313209533691
    6. '                   ' → logprob: -10.126313209533691
    7. ')
' → logprob: -10.251313209533691
    8. '                ' → logprob: -10.626313209533691
    9. '           ' → logprob: -10.751313209533691
    10. '<|end|>' → logprob: -11.751313209533691

Token 1319: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08001726120710373
    2. '               ' → logprob: -2.580017328262329
    3. ' if' → logprob: -6.83001708984375
    4. '           ' → logprob: -10.45501708984375
    5. '
' → logprob: -11.83001708984375
    6. '                   ' → logprob: -12.08001708984375
    7. '```' → logprob: -13.08001708984375
    8. 'max' → logprob: -14.58001708984375
    9. '              ' → logprob: -14.70501708984375
    10. '                       ' → logprob: -15.20501708984375

Token 1320: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0024756586644798517
    2. ' result' → logprob: -6.002475738525391
    3. '                   ' → logprob: -18.50247573852539
    4. '
' → logprob: -19.50247573852539
    5. '(result' → logprob: -19.62747573852539
    6. '	result' → logprob: -20.00247573852539
    7. '               ' → logprob: -20.75247573852539
    8. '   ' → logprob: -20.75247573852539
    9. '                       ' → logprob: -21.12747573852539
    10. '$result' → logprob: -21.37747573852539

Token 1321: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47410061955451965
    2. '>' → logprob: -0.9741005897521973
    3. '<|end|>' → logprob: -12.224101066589355
    4. ')' → logprob: -12.349101066589355
    5. '           ' → logprob: -12.974101066589355
    6. ' ' → logprob: -13.349101066589355
    7. '   ' → logprob: -13.349101066589355
    8. ')>' → logprob: -13.724101066589355
    9. '">' → logprob: -13.974101066589355
    10. '               ' → logprob: -14.099101066589355

Token 1322: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001234428636962548
    2. ' max' → logprob: -9.000123023986816
    3. '           ' → logprob: -18.250123977661133
    4. '                   ' → logprob: -19.000123977661133
    5. '               ' → logprob: -19.000123977661133
    6. '
' → logprob: -19.125123977661133
    7. '```' → logprob: -21.000123977661133
    8. '`' → logprob: -21.500123977661133
    9. '	max' → logprob: -21.875123977661133
    10. 'result' → logprob: -22.125123977661133

Token 1323: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -9.088346359931165e-07
    2. 'Parallel' → logprob: -14.500000953674316
    3. '_' → logprob: -15.750000953674316
    4. '```' → logprob: -16.375
    5. 'parallel' → logprob: -17.25
    6. '\' → logprob: -17.375
    7. '
' → logprob: -18.0
    8. '_
' → logprob: -18.625
    9. '_par' → logprob: -18.875
    10. '`' → logprob: -19.0

Token 1324: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5305148363113403
    2. '                   ' → logprob: -1.0305148363113403
    3. ':' → logprob: -3.155514717102051
    4. '                       ' → logprob: -4.655514717102051
    5. '                           ' → logprob: -6.905514717102051
    6. '               ' → logprob: -6.905514717102051
    7. '):
' → logprob: -7.905514717102051
    8. '                  ' → logprob: -9.03051471710205
    9. '           ' → logprob: -10.03051471710205
    10. '                               ' → logprob: -10.15551471710205

Token 1325: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029454337432980537
    2. 'max' → logprob: -3.904454231262207
    3. '                       ' → logprob: -5.029454231262207
    4. '                           ' → logprob: -7.154454231262207
    5. '
' → logprob: -7.904454231262207
    6. '                               ' → logprob: -8.029454231262207
    7. '               ' → logprob: -8.279454231262207
    8. ' max' → logprob: -8.404454231262207
    9. '(max' → logprob: -9.029454231262207
    10. '                  ' → logprob: -9.779454231262207

Token 1326: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -1.0445127372804563e-05
    2. ' max' → logprob: -11.50001049041748
    3. '                   ' → logprob: -15.12501049041748
    4. '                       ' → logprob: -18.875009536743164
    5. '```' → logprob: -19.125009536743164
    6. '	max' → logprob: -19.250009536743164
    7. '               ' → logprob: -19.500009536743164
    8. '_max' → logprob: -19.875009536743164
    9. '
' → logprob: -20.250009536743164
    10. '           ' → logprob: -20.375009536743164

Token 1327: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -1.981667537620524e-06
    2. 'parallel' → logprob: -13.375001907348633
    3. 'Parallel' → logprob: -15.250001907348633
    4. 'max' → logprob: -16.625001907348633
    5. '```' → logprob: -17.500001907348633
    6. '           ' → logprob: -18.500001907348633
    7. '               ' → logprob: -18.625001907348633
    8. '                   ' → logprob: -18.750001907348633
    9. '_possible' → logprob: -19.000001907348633
    10. '\' → logprob: -19.500001907348633

Token 1328: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019287518225610256
    2. ' =' → logprob: -6.251928806304932
    3. '=max' → logprob: -16.251928329467773
    4. '=
' → logprob: -16.751928329467773
    5. '_=' → logprob: -18.126928329467773
    6. '=_' → logprob: -19.126928329467773
    7. '=

' → logprob: -19.376928329467773
    8. '.=' → logprob: -19.626928329467773
    9. '＝' → logprob: -20.001928329467773
    10. '```' → logprob: -20.376928329467773

Token 1329: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0002613358374219388
    2. ' result' → logprob: -8.250261306762695
    3. '
' → logprob: -18.250261306762695
    4. '```' → logprob: -19.500261306762695
    5. '   ' → logprob: -19.625261306762695
    6. '	result' → logprob: -20.125261306762695
    7. '$result' → logprob: -20.875261306762695
    8. '_result' → logprob: -20.875261306762695
    9. '(result' → logprob: -21.000261306762695
    10. '=result' → logprob: -21.375261306762695

Token 1330: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023727675899863243
    2. '        
' → logprob: -4.148727893829346
    3. '
' → logprob: -5.023727893829346
    4. 'return' → logprob: -8.398727416992188
    5. '<|end|>' → logprob: -8.398727416992188
    6. '    
' → logprob: -8.648727416992188
    7. '  
' → logprob: -8.898727416992188
    8. '```' → logprob: -10.273727416992188
    9. '                    
' → logprob: -10.398727416992188
    10. '               ' → logprob: -10.648727416992188

Token 1331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010890735575230792
    2. 'return' → logprob: -10.37510871887207
    3. '<|end|>' → logprob: -10.50010871887207
    4. '```' → logprob: -11.12510871887207
    5. '        
' → logprob: -11.50010871887207
    6. '
' → logprob: -12.00010871887207
    7. '               ' → logprob: -12.00010871887207
    8. ' return' → logprob: -12.87510871887207
    9. ')' → logprob: -13.25010871887207
    10. '      ' → logprob: -13.25010871887207

Token 1332: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04116416722536087
    2. 'return' → logprob: -3.7911641597747803
    3. 'self' (adapté à ' self') → logprob: -4.041164398193359
    4. ' self' → logprob: -9.66616439819336
    5. ' return' → logprob: -9.91616439819336
    6. '```' → logprob: -10.29116439819336
    7. '
' → logprob: -11.04116439819336
    8. '   ' → logprob: -12.29116439819336
    9. '<|end|>' → logprob: -12.54116439819336
    10. ')return' → logprob: -13.29116439819336

Token 1333: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.014696947298943996
    2. '.' → logprob: -4.264697074890137
    3. '.mem' → logprob: -7.764697074890137
    4. '.memory' → logprob: -9.514697074890137
    5. ' .' → logprob: -11.389697074890137
    6. '​.' → logprob: -12.264697074890137
    7. '.
' → logprob: -12.389697074890137
    8. '.mime' → logprob: -12.639697074890137
    9. 'memo' → logprob: -12.764697074890137
    10. '.m' → logprob: -12.764697074890137

Token 1334: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -0.0004428243264555931
    2. '[self' → logprob: -7.875442981719971
    3. '[' → logprob: -9.750442504882812
    4. '```' → logprob: -12.500442504882812
    5. '\[' → logprob: -15.250442504882812
    6. '[s' → logprob: -16.000442504882812
    7. 'state' → logprob: -17.250442504882812
    8. '[current' → logprob: -17.375442504882812
    9. '[user' → logprob: -17.375442504882812
    10. '[
' → logprob: -17.500442504882812

Token 1335: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0036962779704481363
    2. '.' → logprob: -5.628696441650391
    3. ' .' → logprob: -10.12869644165039
    4. '].' → logprob: -11.12869644165039
    5. '       ' → logprob: -11.50369644165039
    6. '```' → logprob: -11.62869644165039
    7. '[' → logprob: -12.25369644165039
    8. '`.' → logprob: -12.25369644165039
    9. '   ' → logprob: -12.87869644165039
    10. '.s' → logprob: -13.50369644165039

Token 1336: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.0013320252764970064
    2. 'taken' → logprob: -7.251331806182861
    3. '_taken' → logprob: -8.62633228302002
    4. 'ken' → logprob: -9.00133228302002
    5. 'ak' → logprob: -9.12633228302002
    6. '```' → logprob: -10.00133228302002
    7. 'ake' → logprob: -10.62633228302002
    8. 'oken' → logprob: -11.00133228302002
    9. '_mask' → logprob: -11.37633228302002
    10. 'a' → logprob: -11.75133228302002

Token 1337: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0001261845463886857
    2. 'mask' → logprob: -9.000125885009766
    3. 'emask' → logprob: -14.000125885009766
    4. 't' → logprob: -14.125125885009766
    5. '_MASK' → logprob: -14.500125885009766
    6. 'ask' → logprob: -14.750125885009766
    7. '```' → logprob: -16.750125885009766
    8. 'm' → logprob: -16.750125885009766
    9. '   ' → logprob: -17.125125885009766
    10. '_masks' → logprob: -17.125125885009766

Token 1338: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37328654527664185
    2. ' =' → logprob: -1.373286485671997
    3. ']' → logprob: -2.873286485671997
    4. ']=' → logprob: -6.373286724090576
    5. ')' → logprob: -10.873286247253418
    6. ' ]' → logprob: -11.998286247253418
    7. '[' → logprob: -11.998286247253418
    8. '        ' → logprob: -12.873286247253418
    9. ')=' → logprob: -13.248286247253418
    10. ',' → logprob: -14.123286247253418

Token 1339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196802109479904
    2. ' =' → logprob: -2.8119680881500244
    3. '=
' → logprob: -14.811967849731445
    4. '=self' → logprob: -17.311967849731445
    5. ' =
' → logprob: -19.186967849731445
    6. ']=' → logprob: -19.686967849731445
    7. '＝' → logprob: -19.686967849731445
    8. '=

' → logprob: -20.061967849731445
    9. '       ' → logprob: -20.186967849731445
    10. '.=' → logprob: -20.436967849731445

Token 1340: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.5491004129871726e-05
    2. ' max' → logprob: -10.000045776367188
    3. '(max' → logprob: -21.375045776367188
    4. '	max' → logprob: -22.000045776367188
    5. '[max' → logprob: -22.250045776367188
    6. '=max' → logprob: -23.750045776367188
    7. '_max' → logprob: -24.625045776367188
    8. ',max' → logprob: -25.250045776367188
    9. '   ' → logprob: -26.000045776367188
    10. '
' → logprob: -26.250045776367188

Token 1341: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -4.60414821645827e-06
    2. 'max' → logprob: -13.000004768371582
    3. 'Parallel' → logprob: -14.125004768371582
    4. '(max' → logprob: -14.500004768371582
    5. 'parallel' → logprob: -15.000004768371582
    6. '```' → logprob: -15.125004768371582
    7. '_max' → logprob: -16.125003814697266
    8. 'ax' → logprob: -16.125003814697266
    9. '[max' → logprob: -16.125003814697266
    10. '=max' → logprob: -16.375003814697266

Token 1342: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009677823632955551
    2. '	' → logprob: -4.759677886962891
    3. 'return' → logprob: -7.259677886962891
    4. '
' → logprob: -9.13467788696289
    5. '	return' → logprob: -9.13467788696289
    6. ' return' → logprob: -9.88467788696289
    7. '<|end|>' → logprob: -10.25967788696289
    8. '   ' → logprob: -11.00967788696289
    9. '```' → logprob: -11.88467788696289
    10. ',' → logprob: -12.50967788696289

Token 1343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012297539506107569
    2. '	' → logprob: -7.251229763031006
    3. 'return' → logprob: -7.876229763031006
    4. '	return' → logprob: -10.126229286193848
    5. ' return' → logprob: -10.376229286193848
    6. '<|end|>' → logprob: -10.626229286193848
    7. '
' → logprob: -11.001229286193848
    8. '   ' → logprob: -11.501229286193848
    9. '        
' → logprob: -13.126229286193848
    10. '```' → logprob: -13.251229286193848

Token 1344: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006996558513492346
    2. 'return' (adapté à ' return') → logprob: -5.0069966316223145
    3. ' return' → logprob: -8.631996154785156
    4. '	' → logprob: -9.506996154785156
    5. '	return' → logprob: -11.131996154785156
    6. '
' → logprob: -11.881996154785156
    7. '   ' → logprob: -13.131996154785156
    8. '               ' → logprob: -13.381996154785156
    9. ':return' → logprob: -14.256996154785156
    10. '```' → logprob: -14.756996154785156

Token 1345: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005530327325686812
    2. ' max' → logprob: -7.500553131103516
    3. '	max' → logprob: -20.375553131103516
    4. '[max' → logprob: -22.125553131103516
    5. '(max' → logprob: -22.625553131103516
    6. '_max' → logprob: -23.250553131103516
    7. '
' → logprob: -24.125553131103516
    8. ',max' → logprob: -24.375553131103516
    9. '   ' → logprob: -25.125553131103516
    10. '=max' → logprob: -25.375553131103516

Token 1346: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -3.128163257315464e-07
    2. 'parallel' → logprob: -16.25
    3. 'Parallel' → logprob: -16.75
    4. 'max' → logprob: -17.5
    5. '_max' → logprob: -17.75
    6. '```' → logprob: -18.25
    7. '_possible' → logprob: -18.75
    8. '(max' → logprob: -18.75
    9. '_par' → logprob: -19.0
    10. '.parallel' → logprob: -19.0

Token 1347: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1348: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1349: ' read' (ID: 1729)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.2799947261810303
    2. ' main' → logprob: -1.9049947261810303
    3. ' parallel' → logprob: -2.9049947261810303
    4. ' max' → logprob: -3.7799947261810303
    5. ' find' → logprob: -5.404994964599609
    6. ' solution' → logprob: -5.779994964599609
    7. '_parallel' → logprob: -5.904994964599609
    8. ' Parallel' → logprob: -6.154994964599609
    9. ' compute' → logprob: -6.779994964599609
    10. '_' → logprob: -7.154994964599609

Token 1350: '_input' (ID: 12507)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.29871225357055664
    2. '_input' → logprob: -2.1737122535705566
    3. 'line' → logprob: -3.1737122535705566
    4. '_points' → logprob: -3.2987122535705566
    5. '():' → logprob: -3.7987122535705566
    6. '()' → logprob: -4.048712253570557
    7. '_lines' → logprob: -4.673712253570557
    8. '_point' → logprob: -5.423712253570557
    9. 'int' → logprob: -6.548712253570557
    10. 'input' → logprob: -6.548712253570557

Token 1351: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07895941287279129
    2. '():
' → logprob: -2.5789594650268555
    3. '()' → logprob: -9.703959465026855
    4. '():
' → logprob: -12.453959465026855
    5. ' ():' → logprob: -12.953959465026855
    6. '():

' → logprob: -13.203959465026855
    7. '(prompt' → logprob: -15.578959465026855
    8. '(' → logprob: -16.32895851135254
    9. '();' → logprob: -17.20395851135254
    10. '()>' → logprob: -17.20395851135254

Token 1352: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.009173214435577393
    2. '():
' → logprob: -4.759173393249512
    3. '()' → logprob: -7.509173393249512
    4. '()->' → logprob: -12.134173393249512
    5. ' ():' → logprob: -13.134173393249512
    6. '():
' → logprob: -13.884173393249512
    7. '(' → logprob: -14.384173393249512
    8. ':' → logprob: -14.509173393249512
    9. '():

' → logprob: -14.759173393249512
    10. 'def' → logprob: -15.259173393249512

Token 1353: ' List' (ID: 2655)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5840364098548889
    2. 'List' → logprob: -0.8340364098548889
    3. 'Tuple' → logprob: -4.834036350250244
    4. 'None' → logprob: -10.209036827087402
    5. '[int' → logprob: -10.334036827087402
    6. ' List' → logprob: -11.334036827087402
    7. '(int' → logprob: -11.834036827087402
    8. 'tuple' → logprob: -11.834036827087402
    9. ' int' → logprob: -12.084036827087402
    10. '[List' → logprob: -12.584036827087402

Token 1354: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31532248854637146
    2. '[int' → logprob: -1.3153225183486938
    3. 'Point' → logprob: -6.940322399139404
    4. '[List' → logprob: -7.315322399139404
    5. '()' → logprob: -9.065322875976562
    6. '[
' → logprob: -9.315322875976562
    7. '[Int' → logprob: -9.690322875976562
    8. 'int' → logprob: -9.815322875976562
    9. '[]' → logprob: -10.065322875976562
    10. '<Point' → logprob: -10.940322875976562

Token 1355: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.8624639324116288e-06
    2. 'Tuple' → logprob: -13.250001907348633
    3. 'int' → logprob: -17.500001907348633
    4. ' Point' → logprob: -17.750001907348633
    5. '(Point' → logprob: -18.375001907348633
    6. '	Point' → logprob: -19.000001907348633
    7. '[' → logprob: -19.125001907348633
    8. 'str' → logprob: -19.250001907348633
    9. 'tuple' → logprob: -19.750001907348633
    10. '<Point' → logprob: -21.000001907348633

Token 1356: ']:
' (ID: 22152)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.019153624773025513
    2. '():' → logprob: -4.019153594970703
    3. '()' → logprob: -7.019153594970703
    4. '():
' → logprob: -9.269153594970703
    5. ']:
' → logprob: -11.894153594970703
    6. ']:' → logprob: -13.394153594970703
    7. '()]' → logprob: -13.394153594970703
    8. '():

' → logprob: -13.519153594970703
    9. '()):
' → logprob: -14.019153594970703
    10. '()>' → logprob: -15.144153594970703

Token 1357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10839062929153442
    2. 'n' → logprob: -2.4833905696868896
    3. '```' → logprob: -3.9833905696868896
    4. 'import' → logprob: -8.108390808105469
    5. ' n' → logprob: -9.233390808105469
    6. '``' → logprob: -9.358390808105469
    7. '
' → logprob: -10.233390808105469
    8. 'points' → logprob: -10.483390808105469
    9. '	n' → logprob: -10.608390808105469
    10. '    
' → logprob: -10.858390808105469

Token 1358: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13066251575946808
    2. 'import' → logprob: -2.130662441253662
    3. ' n' → logprob: -6.005662441253662
    4. '```' → logprob: -7.880662441253662
    5. 'num' → logprob: -8.13066291809082
    6. '   ' → logprob: -8.13066291809082
    7. 'points' → logprob: -9.13066291809082
    8. ' import' → logprob: -9.75566291809082
    9. '
' → logprob: -9.88066291809082
    10. 'return' → logprob: -10.13066291809082

Token 1359: ' =' (ID: 314)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.010223590768873692
    2. ' =' → logprob: -4.760223388671875
    3. '=' → logprob: -6.760223388671875
    4. '=int' → logprob: -8.260223388671875
    5. '=input' → logprob: -9.135223388671875
    6. '   ' → logprob: -10.635223388671875
    7. 'aps' → logprob: -11.010223388671875
    8. 'e' → logprob: -11.385223388671875
    9. 'a' → logprob: -11.635223388671875
    10. '=[]
' → logprob: -12.510223388671875

Token 1360: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020377879263833165
    2. ' int' → logprob: -8.500204086303711
    3. '[int' → logprob: -16.12520408630371
    4. 'map' → logprob: -17.12520408630371
    5. ' ' → logprob: -17.75020408630371
    6. '=int' → logprob: -17.87520408630371
    7. 'm' → logprob: -18.25020408630371
    8. '(int' → logprob: -18.37520408630371
    9. '0' → logprob: -18.50020408630371
    10. '
' → logprob: -18.87520408630371

Token 1361: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00042745075188577175
    2. 'input' → logprob: -8.12542724609375
    3. '(' → logprob: -9.37542724609375
    4. '()' → logprob: -10.00042724609375
    5. '(
' → logprob: -14.37542724609375
    6. '=input' → logprob: -14.87542724609375
    7. ' input' → logprob: -16.62542724609375
    8. '()
' → logprob: -16.87542724609375
    9. '(in' → logprob: -17.25042724609375
    10. ' (' → logprob: -18.62542724609375

Token 1362: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04463966190814972
    2. '())
' → logprob: -3.2946395874023438
    3. '()' → logprob: -5.044639587402344
    4. '().' → logprob: -9.544639587402344
    5. '()
' → logprob: -9.794639587402344
    6. '(' → logprob: -13.294639587402344
    7. '())

' → logprob: -13.544639587402344
    8. ')' → logprob: -13.794639587402344
    9. '())
' → logprob: -14.294639587402344
    10. ' ())' → logprob: -15.294639587402344

Token 1363: '   ' (ID: 271)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0018107218202203512
    2. '   ' → logprob: -7.251810550689697
    3. '_points' → logprob: -7.751810550689697
    4. '
' → logprob: -8.251811027526855
    5. 'pts' → logprob: -9.001811027526855
    6. ' points' → logprob: -9.126811027526855
    7. '	points' → logprob: -9.376811027526855
    8. 'n' → logprob: -10.876811027526855
    9. '(points' → logprob: -10.876811027526855
    10. '    
' → logprob: -11.126811027526855

Token 1364: ' pts' (ID: 66515)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00019722258730325848
    2. ' points' → logprob: -8.750197410583496
    3. 'pts' (adapté à ' pts') → logprob: -10.250197410583496
    4. '
' → logprob: -13.500197410583496
    5. '	points' → logprob: -13.750197410583496
    6. '_points' → logprob: -14.750197410583496
    7. '   ' → logprob: -15.000197410583496
    8. '    
' → logprob: -16.37519645690918
    9. '(points' → logprob: -16.62519645690918
    10. 'point' → logprob: -17.50019645690918

Token 1365: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48061603307724
    2. 'oints' → logprob: -0.98061603307724
    3. '=[]
' → logprob: -5.605616092681885
    4. '=' → logprob: -5.980616092681885
    5. '   ' → logprob: -9.105615615844727
    6. 'ints' → logprob: -9.855615615844727
    7. '=[]' → logprob: -9.855615615844727
    8. 'nts' → logprob: -10.355615615844727
    9. 'ts' → logprob: -10.730615615844727
    10. '=
' → logprob: -11.480615615844727

Token 1366: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.029972856864333153
    2. '[' → logprob: -3.779972791671753
    3. '[]
' → logprob: -5.029973030090332
    4. '[m' → logprob: -9.529973030090332
    5. ' []' → logprob: -9.904973030090332
    6. '[p' → logprob: -11.029973030090332
    7. '[
' → logprob: -11.029973030090332
    8. '[int' → logprob: -12.654973030090332
    9. ' [' → logprob: -14.154973030090332
    10. '[n' → logprob: -14.529973030090332

Token 1367: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014387262053787708
    2. '   ' → logprob: -4.264387130737305
    3. ' for' → logprob: -8.764387130737305
    4. '
' → logprob: -9.764387130737305
    5. '	for' → logprob: -11.514387130737305
    6. '    
' → logprob: -16.014387130737305
    7. '  ' → logprob: -18.764387130737305
    8. 'while' → logprob: -18.764387130737305
    9. ' 
' → logprob: -18.889387130737305
    10. ' ' → logprob: -19.014387130737305

Token 1368: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.941850526549388e-06
    2. ' for' → logprob: -12.250007629394531
    3. '
' → logprob: -12.750007629394531
    4. '   ' → logprob: -15.625007629394531
    5. '	for' → logprob: -18.75000762939453
    6. '```' → logprob: -19.00000762939453
    7. '``' → logprob: -22.87500762939453
    8. '_' → logprob: -23.50000762939453
    9. 'while' → logprob: -23.62500762939453
    10. ' 
' → logprob: -23.75000762939453

Token 1369: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '_i' → logprob: -16.0
    3. ' _' → logprob: -16.375
    4. '_
' → logprob: -16.625
    5. '_range' → logprob: -17.0
    6. '_in' → logprob: -17.5
    7. '_=' → logprob: -17.875
    8. '_m' → logprob: -18.625
    9. '_
' → logprob: -19.75
    10. '_

' → logprob: -20.25

Token 1370: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00628046365454793
    2. 'range' → logprob: -5.131280422210693
    3. ' range' → logprob: -8.756280899047852
    4. '_range' → logprob: -8.756280899047852
    5. ' _' → logprob: -11.381280899047852
    6. 'in' → logprob: -11.631280899047852
    7. ' in' → logprob: -11.756280899047852
    8. '_
' → logprob: -13.131280899047852
    9. '_i' → logprob: -13.506280899047852
    10. 'i' → logprob: -14.131280899047852

Token 1371: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.9795445849886164e-05
    2. ' range' → logprob: -9.750060081481934
    3. '
' → logprob: -13.750060081481934
    4. '_' → logprob: -15.375060081481934
    5. '_range' → logprob: -16.000059127807617
    6. 'm' → logprob: -17.875059127807617
    7. '```' → logprob: -18.000059127807617
    8. 'pts' → logprob: -18.125059127807617
    9. 'r' → logprob: -19.500059127807617
    10. 'rang' → logprob: -19.625059127807617

Token 1372: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.20159763097763062
    2. 'm' → logprob: -1.7015976905822754
    3. '(' → logprob: -8.951597213745117
    4. ' m' → logprob: -10.201597213745117
    5. ' (' → logprob: -11.951597213745117
    6. 'range' → logprob: -12.201597213745117
    7. '   ' → logprob: -12.576597213745117
    8. '(
' → logprob: -13.576597213745117
    9. '	m' → logprob: -14.951597213745117
    10. '0' → logprob: -14.951597213745117

Token 1373: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011614412069320679
    2. '):' → logprob: -4.6366143226623535
    3. '   ' → logprob: -6.3866143226623535
    4. ':
' → logprob: -9.261614799499512
    5. '():
' → logprob: -11.011614799499512
    6. ':' → logprob: -11.011614799499512
    7. ',' → logprob: -11.261614799499512
    8. ')' → logprob: -11.386614799499512
    9. '       ' → logprob: -11.511614799499512
    10. '):
' → logprob: -12.261614799499512

Token 1374: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6250483989715576
    2. '       ' → logprob: -0.8750483989715576
    3. ' line' → logprob: -4.125048637390137
    4. 'line' → logprob: -4.250048637390137
    5. 'x' → logprob: -4.875048637390137
    6. '```' → logprob: -5.625048637390137
    7. 'pts' → logprob: -5.875048637390137
    8. 'pt' → logprob: -7.125048637390137
    9. ' pts' → logprob: -7.125048637390137
    10. ' x' → logprob: -7.875048637390137

Token 1375: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -7.896309739408025e-07
    2. ' x' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.125
    4. '	x' → logprob: -19.5
    5. '_x' → logprob: -19.625
    6. '
' → logprob: -20.5
    7. '    
' → logprob: -21.0
    8. '```' → logprob: -21.125
    9. '*x' → logprob: -22.375
    10. 'line' → logprob: -22.375

Token 1376: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016106978058815002
    2. ',y' → logprob: -4.141107082366943
    3. ' ,' → logprob: -9.766106605529785
    4. '_,' → logprob: -12.766106605529785
    5. ',x' → logprob: -12.766106605529785
    6. ',
' → logprob: -12.891106605529785
    7. ',int' → logprob: -13.641106605529785
    8. ',p' → logprob: -13.641106605529785
    9. ',s' → logprob: -14.016106605529785
    10. '=' → logprob: -14.266106605529785

Token 1377: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006722944788634777
    2. ' =' → logprob: -5.006722927093506
    3. '=input' → logprob: -12.006723403930664
    4. '=int' → logprob: -13.756723403930664
    5. '=
' → logprob: -15.131723403930664
    6. '=line' → logprob: -16.381723403930664
    7. ')' → logprob: -17.631723403930664
    8. ')=' → logprob: -17.881723403930664
    9. '=

' → logprob: -19.256723403930664
    10. ',' → logprob: -19.256723403930664

Token 1378: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00861468818038702
    2. ' map' → logprob: -4.758614540100098
    3. '	map' → logprob: -16.008615493774414
    4. '[' → logprob: -17.008615493774414
    5. '(map' → logprob: -17.258615493774414
    6. '   ' → logprob: -19.383615493774414
    7. '
' → logprob: -19.633615493774414
    8. '_map' → logprob: -20.383615493774414
    9. '.map' → logprob: -20.883615493774414
    10. ' ' → logprob: -21.008615493774414

Token 1379: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005616117268800735
    2. 'int' → logprob: -7.500561714172363
    3. '(str' → logprob: -11.875561714172363
    4. '(input' → logprob: -14.125561714172363
    5. '[int' → logprob: -14.625561714172363
    6. '(' → logprob: -15.250561714172363
    7. 'input' → logprob: -16.500560760498047
    8. 'str' → logprob: -16.750560760498047
    9. '(map' → logprob: -16.875560760498047
    10. '=int' → logprob: -17.000560760498047

Token 1380: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.19032107293605804
    2. 'input' → logprob: -2.1903209686279297
    3. ',' → logprob: -3.3153209686279297
    4. '(input' → logprob: -3.6903209686279297
    5. '   ' → logprob: -10.06532096862793
    6. '=input' → logprob: -10.56532096862793
    7. ')' → logprob: -10.81532096862793
    8. ' input' → logprob: -11.06532096862793
    9. '(' → logprob: -11.31532096862793
    10. '[input' → logprob: -12.56532096862793

Token 1381: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.547789674485102e-05
    2. ' input' → logprob: -10.250035285949707
    3. '(input' → logprob: -19.375036239624023
    4. '_input' → logprob: -19.625036239624023
    5. '
' → logprob: -20.000036239624023
    6. '=input' → logprob: -20.500036239624023
    7. 'Input' → logprob: -20.500036239624023
    8. '<input' → logprob: -20.875036239624023
    9. ',input' → logprob: -21.125036239624023
    10. '   ' → logprob: -21.875036239624023

Token 1382: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()
' → logprob: -16.875
    3. '()' → logprob: -17.25
    4. ' ().' → logprob: -17.875
    5. '.split' → logprob: -19.125
    6. 'split' → logprob: -19.125
    7. '('').' → logprob: -19.5
    8. '("").' → logprob: -20.125
    9. ')' → logprob: -20.25
    10. '().__' → logprob: -20.5

Token 1383: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.438573680294212e-06
    2. '().' → logprob: -13.000005722045898
    3. 'strip' → logprob: -13.000005722045898
    4. ' split' → logprob: -14.750005722045898
    5. '(split' → logprob: -15.125005722045898
    6. 'rstrip' → logprob: -16.2500057220459
    7. '.split' → logprob: -16.6250057220459
    8. 'spl' → logprob: -16.6250057220459
    9. 'read' → logprob: -18.2500057220459
    10. '_split' → logprob: -18.5000057220459

Token 1384: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.5
    3. '.split' → logprob: -15.875
    4. 'split' → logprob: -16.875
    5. ')' → logprob: -18.625
    6. '(' → logprob: -19.125
    7. '())' → logprob: -19.75
    8. ').' → logprob: -19.875
    9. '()
' → logprob: -20.125
    10. ' ().' → logprob: -20.25

Token 1385: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -15.875
    3. '(split' → logprob: -17.25
    4. 'spl' → logprob: -18.0
    5. '.split' → logprob: -20.0
    6. '().' → logprob: -21.75
    7. '
' → logprob: -21.875
    8. 's' → logprob: -22.125
    9. 'rstrip' → logprob: -22.375
    10. '```' → logprob: -22.5

Token 1386: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4616198241710663
    2. ')' → logprob: -1.2116198539733887
    3. '())
' → logprob: -2.8366198539733887
    4. '()' → logprob: -5.211619853973389
    5. ')
' → logprob: -5.211619853973389
    6. '('' → logprob: -7.211619853973389
    7. '))' → logprob: -7.586619853973389
    8. '(','' → logprob: -8.21161937713623
    9. '(',' → logprob: -8.46161937713623
    10. '(' → logprob: -8.46161937713623

Token 1387: '       ' (ID: 309)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.5290244817733765
    2. '       ' → logprob: -0.9040244817733765
    3. ' pts' → logprob: -5.904024600982666
    4. '   ' → logprob: -6.154024600982666
    5. 'points' → logprob: -7.279024600982666
    6. 'pt' → logprob: -9.154024124145508
    7. '<|end|>' → logprob: -9.529024124145508
    8. '_pts' → logprob: -10.029024124145508
    9. '```' → logprob: -10.779024124145508
    10. '
' → logprob: -10.904024124145508

Token 1388: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' (adapté à ' pts') → logprob: -6.988221684878226e-06
    2. 'pt' → logprob: -12.250006675720215
    3. ' pts' → logprob: -13.500006675720215
    4. 'points' → logprob: -14.250006675720215
    5. '_pts' → logprob: -17.62500762939453
    6. '
' → logprob: -18.12500762939453
    7. '       ' → logprob: -20.00000762939453
    8. 'Pts' → logprob: -20.12500762939453
    9. '   ' → logprob: -21.25000762939453
    10. 'PTS' → logprob: -21.75000762939453

Token 1389: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0181878749281168
    2. '.' → logprob: -4.018187999725342
    3. ' .' → logprob: -10.518187522888184
    4. 's' → logprob: -12.643187522888184
    5. '.app' → logprob: -13.518187522888184
    6. '.
' → logprob: -13.768187522888184
    7. 'pts' → logprob: -14.143187522888184
    8. ').' → logprob: -14.268187522888184
    9. '   ' → logprob: -14.518187522888184
    10. '.extend' → logprob: -14.518187522888184

Token 1390: '(Point' (ID: 72072)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.03816095367074013
    2. '(Point' → logprob: -3.288161039352417
    3. ' Point' → logprob: -9.038161277770996
    4. '	Point' → logprob: -14.288161277770996
    5. '.Point' → logprob: -18.03816032409668
    6. '_Point' → logprob: -18.53816032409668
    7. 'Points' → logprob: -19.16316032409668
    8. '<Point' → logprob: -20.03816032409668
    9. '_point' → logprob: -20.41316032409668
    10. '   ' → logprob: -20.66316032409668

Token 1391: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024793429765850306
    2. '(x' → logprob: -6.002479553222656
    3. ' x' → logprob: -12.627479553222656
    4. ')x' → logprob: -15.502479553222656
    5. 'int' → logprob: -16.502479553222656
    6. '(' → logprob: -16.502479553222656
    7. '	x' → logprob: -16.877479553222656
    8. ',x' → logprob: -17.252479553222656
    9. '(
' → logprob: -17.627479553222656
    10. ')' → logprob: -17.877479553222656

Token 1392: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010849024169147015
    2. ',x' → logprob: -4.8858489990234375
    3. ',y' → logprob: -6.6358489990234375
    4. '(x' → logprob: -7.0108489990234375
    5. ' ,' → logprob: -8.385848999023438
    6. 'x' → logprob: -8.385848999023438
    7. ',
' → logprob: -8.385848999023438
    8. '),' → logprob: -9.135848999023438
    9. ')' → logprob: -10.260848999023438
    10. '(' → logprob: -10.260848999023438

Token 1393: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03830862417817116
    2. '))
' → logprob: -3.288308620452881
    3. '       ' → logprob: -8.413309097290039
    4. ')' → logprob: -10.663309097290039
    5. '   ' → logprob: -10.913309097290039
    6. ',' → logprob: -14.038309097290039
    7. '           ' → logprob: -14.413309097290039
    8. ')
' → logprob: -14.788309097290039
    9. ')))' → logprob: -14.913309097290039
    10. '))
' → logprob: -15.038309097290039

Token 1394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04890288785099983
    2. 'return' → logprob: -3.048902988433838
    3. '
' → logprob: -8.17390251159668
    4. ' return' → logprob: -10.79890251159668
    5. '```' → logprob: -11.92390251159668
    6. '    
' → logprob: -12.67390251159668
    7. '	return' → logprob: -13.79890251159668
    8. '       ' → logprob: -14.54890251159668
    9. '<|end|>' → logprob: -14.54890251159668
    10. '`' → logprob: -15.54890251159668

Token 1395: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0003565575461834669
    2. '   ' → logprob: -8.000356674194336
    3. ' return' → logprob: -10.875356674194336
    4. '
' → logprob: -13.125356674194336
    5. '	return' → logprob: -16.125356674194336
    6. '```' → logprob: -17.625356674194336
    7. ' ' → logprob: -18.500356674194336
    8. 'eturn' → logprob: -18.750356674194336
    9. ':return' → logprob: -19.000356674194336
    10. '    
' → logprob: -19.000356674194336

Token 1396: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -6.392202976712724e-06
    2. ' pts' → logprob: -12.000006675720215
    3. 'pt' → logprob: -16.6250057220459
    4. 'points' → logprob: -19.3750057220459
    5. '_pts' → logprob: -19.6250057220459
    6. 'Pts' → logprob: -19.8750057220459
    7. '
' → logprob: -20.5000057220459
    8. '   ' → logprob: -22.2500057220459
    9. 'nts' → logprob: -22.8750057220459
    10. 'PTS' → logprob: -23.0000057220459

Token 1397: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015375093556940556
    2. '<|end|>' → logprob: -4.765375137329102
    3. '
' → logprob: -5.265375137329102
    4. '```' → logprob: -6.515375137329102
    5. '  
' → logprob: -10.140375137329102
    6. '    
' → logprob: -10.640375137329102
    7. '

' → logprob: -11.515375137329102
    8. '``' → logprob: -12.265375137329102
    9. ' 
' → logprob: -13.140375137329102
    10. '<|end|>' → logprob: -13.265375137329102

Token 1398: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3134567141532898
    2. 'if' → logprob: -1.3134567737579346
    3. '```' → logprob: -8.688456535339355
    4. 'points' → logprob: -10.688456535339355
    5. ' if' → logprob: -13.438456535339355
    6. '#' → logprob: -13.438456535339355
    7. '``' → logprob: -14.688456535339355
    8. '
' → logprob: -15.813456535339355
    9. 'pts' → logprob: -16.313457489013672
    10. 'import' → logprob: -17.188457489013672

Token 1399: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.106736039626412e-05
    2. ' main' → logprob: -11.250031471252441
    3. 'solve' → logprob: -11.500031471252441
    4. 'def' → logprob: -11.750031471252441
    5. 'run' → logprob: -17.375030517578125
    6. '
' → logprob: -17.875030517578125
    7. '```' → logprob: -18.250030517578125
    8. '	main' → logprob: -20.125030517578125
    9. '_main' → logprob: -20.625030517578125
    10. 'write' → logprob: -21.000030517578125

Token 1400: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001952541060745716
    2. '():
' → logprob: -6.251952648162842
    3. '()' → logprob: -10.751952171325684
    4. '():
' → logprob: -13.376952171325684
    5. ' ():' → logprob: -14.376952171325684
    6. '():

' → logprob: -15.376952171325684
    7. '()>' → logprob: -16.126953125
    8. '()">' → logprob: -17.126953125
    9. '().' → logprob: -17.626953125
    10. 'def' → logprob: -17.751953125

Token 1401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01593312807381153
    2. 'points' → logprob: -4.890933036804199
    3. ' points' → logprob: -5.640933036804199
    4. 'import' → logprob: -6.140933036804199
    5. '	points' → logprob: -6.765933036804199
    6. '```' → logprob: -7.265933036804199
    7. 'pts' → logprob: -7.640933036804199
    8. '(points' → logprob: -8.7659330368042
    9. '
' → logprob: -10.5159330368042
    10. 'def' → logprob: -10.7659330368042

Token 1402: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.022304758429527283
    2. 'pts' → logprob: -4.022304534912109
    3. '   ' → logprob: -6.022304534912109
    4. ' points' → logprob: -6.522304534912109
    5. 'import' → logprob: -8.52230453491211
    6. ' pts' → logprob: -10.02230453491211
    7. '	points' → logprob: -12.39730453491211
    8. 'n' → logprob: -12.89730453491211
    9. '```' → logprob: -14.89730453491211
    10. '_pts' → logprob: -15.02230453491211

Token 1403: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06212173029780388
    2. '=' → logprob: -2.812121629714966
    3. '   ' → logprob: -9.687121391296387
    4. '(points' → logprob: -9.812121391296387
    5. ' =
' → logprob: -11.562121391296387
    6. '()' → logprob: -11.812121391296387
    7. '_points' → logprob: -11.937121391296387
    8. 'points' → logprob: -12.937121391296387
    9. ')' → logprob: -13.312121391296387
    10. ',' → logprob: -13.562121391296387

Token 1404: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.020547958090901375
    2. ' read' → logprob: -3.895547866821289
    3. '[]' → logprob: -12.645547866821289
    4. '[' → logprob: -13.770547866821289
    5. '[]
' → logprob: -14.020547866821289
    6. ' [' → logprob: -14.770547866821289
    7. '(read' → logprob: -16.02054786682129
    8. '	read' → logprob: -16.14554786682129
    9. ' []' → logprob: -16.64554786682129
    10. '[
' → logprob: -16.89554786682129

Token 1405: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.05273164436221123
    2. '_points' → logprob: -3.05273175239563
    3. '_' → logprob: -6.052731513977051
    4. 'points' → logprob: -6.552731513977051
    5. '_
' → logprob: -8.92773151397705
    6. 'input' → logprob: -9.67773151397705
    7. '_inputs' → logprob: -10.17773151397705
    8. '(points' → logprob: -10.42773151397705
    9. ' points' → logprob: -10.80273151397705
    10. '```' → logprob: -10.92773151397705

Token 1406: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40417516231536865
    2. '
' → logprob: -1.1541751623153687
    3. 'solver' → logprob: -4.279175281524658
    4. 'result' → logprob: -6.654175281524658
    5. ' solver' → logprob: -6.779175281524658
    6. '    
' → logprob: -8.2791748046875
    7. '```' → logprob: -8.2791748046875
    8. ' result' → logprob: -9.6541748046875
    9. '
' → logprob: -9.6541748046875
    10. 'points' → logprob: -9.7791748046875

Token 1407: '   ' (ID: 271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.5089067816734314
    2. '   ' → logprob: -1.0089068412780762
    3. ' solver' → logprob: -3.383906841278076
    4. 's' → logprob: -8.758906364440918
    5. '```' → logprob: -10.008906364440918
    6. '
' → logprob: -10.133906364440918
    7. 'solution' → logprob: -11.008906364440918
    8. '	s' → logprob: -11.383906364440918
    9. '_solver' → logprob: -11.508906364440918
    10. 'result' → logprob: -11.883906364440918

Token 1408: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.011426560580730438
    2. ' solver' → logprob: -4.5114264488220215
    3. '   ' → logprob: -7.8864264488220215
    4. 'solution' → logprob: -13.76142692565918
    5. '
' → logprob: -13.88642692565918
    6. 's' → logprob: -14.76142692565918
    7. 'sol' → logprob: -15.51142692565918
    8. '_solver' → logprob: -16.38642692565918
    9. 'Solver' → logprob: -16.51142692565918
    10. 'solve' → logprob: -17.13642692565918

Token 1409: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045178502798080444
    2. '=' → logprob: -3.1701784133911133
    3. '.' → logprob: -6.170178413391113
    4. '   ' → logprob: -9.920178413391113
    5. '.=' → logprob: -11.295178413391113
    6. '.solve' → logprob: -12.170178413391113
    7. '.py' → logprob: -13.170178413391113
    8. '.points' → logprob: -13.170178413391113
    9. '.s' → logprob: -13.295178413391113
    10. ')' → logprob: -13.545178413391113

Token 1410: ' Parallel' (ID: 89035)
  Prédit: 'Parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parallel' → logprob: -0.0031777136027812958
    2. ' Parallel' → logprob: -5.753177642822266
    3. ' parallel' → logprob: -17.503177642822266
    4. '_parallel' → logprob: -18.003177642822266
    5. '
' → logprob: -18.753177642822266
    6. '   ' → logprob: -18.878177642822266
    7. 'Periodic' → logprob: -21.003177642822266
    8. 'parallel' → logprob: -21.253177642822266
    9. ' ' → logprob: -22.128177642822266
    10. ' ' → logprob: -22.253177642822266

Token 1411: 'Lines' (ID: 22204)
  Prédit: 'Lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lines' → logprob: -1.9361264946837764e-07
    2. ' Lines' → logprob: -16.875
    3. '_lines' → logprob: -17.0
    4. 'Line' → logprob: -17.875
    5. 'lines' → logprob: -18.125
    6. 'Points' → logprob: -18.125
    7. '
' → logprob: -18.625
    8. 'LINES' → logprob: -20.75
    9. '```' → logprob: -21.25
    10. ' lines' → logprob: -21.25

Token 1412: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -2.3676733690081164e-05
    2. 'solver' → logprob: -10.75002384185791
    3. 'Lines' → logprob: -14.37502384185791
    4. '_solver' → logprob: -14.87502384185791
    5. ' solver' → logprob: -15.00002384185791
    6. '(' → logprob: -15.50002384185791
    7. ' Solver' → logprob: -15.62502384185791
    8. '(points' → logprob: -16.000022888183594
    9. '(s' → logprob: -16.250022888183594
    10. 's' → logprob: -16.375022888183594

Token 1413: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0011709370883181691
    2. 'points' → logprob: -6.751171112060547
    3. ' points' → logprob: -15.126171112060547
    4. '   ' → logprob: -16.001171112060547
    5. '(
' → logprob: -16.126171112060547
    6. '(point' → logprob: -16.876171112060547
    7. '	points' → logprob: -16.876171112060547
    8. '(' → logprob: -17.001171112060547
    9. '.points' → logprob: -17.251171112060547
    10. '```' → logprob: -18.001171112060547

Token 1414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3989732265472412
    2. '   ' → logprob: -1.1489732265472412
    3. ')
' → logprob: -4.52397346496582
    4. '
' → logprob: -7.39897346496582
    5. '<|end|>' → logprob: -8.52397346496582
    6. '    
' → logprob: -9.14897346496582
    7. ').' → logprob: -9.14897346496582
    8. '<|end|>' → logprob: -10.39897346496582
    9. '  
' → logprob: -10.52397346496582
    10. ' ' → logprob: -11.14897346496582

Token 1415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06230723485350609
    2. 'print' → logprob: -2.812307119369507
    3. 'result' → logprob: -8.062307357788086
    4. '```' → logprob: -11.312307357788086
    5. '
' → logprob: -11.937307357788086
    6. '    
' → logprob: -12.812307357788086
    7. ' print' → logprob: -13.187307357788086
    8. 'res' → logprob: -15.687307357788086
    9. 'answer' → logprob: -15.812307357788086
    10. 'output' → logprob: -16.062307357788086

Token 1416: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0012482085730880499
    2. 'result' → logprob: -6.751248359680176
    3. '   ' → logprob: -9.501248359680176
    4. ' print' → logprob: -13.626248359680176
    5. '```' → logprob: -14.251248359680176
    6. 'max' → logprob: -14.376248359680176
    7. 'res' → logprob: -14.501248359680176
    8. '
' → logprob: -15.751248359680176
    9. 'answer' → logprob: -16.25124740600586
    10. 'score' → logprob: -16.50124740600586

Token 1417: '(s' (ID: 1858)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.3870202302932739
    2. '(s' → logprob: -1.137020230293274
    3. '(' → logprob: -9.387020111083984
    4. ' solver' → logprob: -9.762020111083984
    5. 's' → logprob: -12.512020111083984
    6. '(
' → logprob: -13.387020111083984
    7. '_solver' → logprob: -13.887020111083984
    8. 'sol' → logprob: -14.262020111083984
    9. '```' → logprob: -14.512020111083984
    10. '()' → logprob: -15.137020111083984

Token 1418: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -9.088346359931165e-07
    2. 'olve' → logprob: -14.250000953674316
    3. 'oler' → logprob: -15.875000953674316
    4. 't' → logprob: -17.0
    5. 'solver' → logprob: -17.125
    6. 'over' → logprob: -17.625
    7. 'erver' → logprob: -18.125
    8. '_' → logprob: -19.0
    9. '(' → logprob: -19.25
    10. ')' → logprob: -19.375

Token 1419: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -5.431207682704553e-05
    2. ').' → logprob: -9.875054359436035
    3. '.' → logprob: -14.250054359436035
    4. 'max' → logprob: -14.750054359436035
    5. '.maximum' → logprob: -15.000054359436035
    6. '.argmax' → logprob: -15.125054359436035
    7. '.mainloop' → logprob: -15.375054359436035
    8. '	max' → logprob: -15.875054359436035
    9. ')' → logprob: -16.37505340576172
    10. '.).' → logprob: -16.37505340576172

Token 1420: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -1.3856492842023727e-06
    2. 'parallel' → logprob: -13.625000953674316
    3. '_' → logprob: -16.000001907348633
    4. ' parallel' → logprob: -18.000001907348633
    5. 'Parallel' → logprob: -18.500001907348633
    6. '_par' → logprob: -19.750001907348633
    7. ')_' → logprob: -20.000001907348633
    8. '.parallel' → logprob: -20.375001907348633
    9. '```' → logprob: -20.375001907348633
    10. '_possible' → logprob: -20.750001907348633

Token 1421: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -9.400689305039123e-05
    2. ')' → logprob: -10.000094413757324
    3. ')_' → logprob: -10.500094413757324
    4. 'pairs' → logprob: -11.250094413757324
    5. '()' → logprob: -12.250094413757324
    6. '())' → logprob: -13.125094413757324
    7. 'Pairs' → logprob: -15.125094413757324
    8. '_lines' → logprob: -15.250094413757324
    9. '```' → logprob: -15.750094413757324
    10. '_)' → logprob: -15.875094413757324

Token 1422: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00043591417488642037
    2. '()' → logprob: -7.750435829162598
    3. '())
' → logprob: -12.375435829162598
    4. ')' → logprob: -14.125435829162598
    5. ' ())' → logprob: -15.625435829162598
    6. '()
' → logprob: -16.625436782836914
    7. '()))' → logprob: -17.125436782836914
    8. '();)' → logprob: -18.125436782836914
    9. '())

' → logprob: -18.500436782836914
    10. '   ' → logprob: -18.625436782836914

Token 1423: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.494741632603109e-05
    2. '```' → logprob: -9.87508487701416
    3. ' if' → logprob: -11.00008487701416
    4. '
' → logprob: -11.87508487701416
    5. '#' → logprob: -12.62508487701416
    6. 'main' → logprob: -12.75008487701416
    7. '<|end|>' → logprob: -13.00008487701416
    8. '\n' → logprob: -14.25008487701416
    9. '\' → logprob: -15.50008487701416
    10. '__' → logprob: -15.87508487701416

Token 1424: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3132758140563965
    2. '__' → logprob: -1.3132758140563965
    3. 'name' → logprob: -11.938276290893555
    4. '_name' → logprob: -12.063276290893555
    5. '___' → logprob: -13.813276290893555
    6. '_' → logprob: -15.063276290893555
    7. ' ' → logprob: -15.563276290893555
    8. '```' → logprob: -16.063276290893555
    9. '____' → logprob: -17.188276290893555
    10. 'Name' → logprob: -17.563276290893555

Token 1425: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009828811511397362
    2. '==' → logprob: -5.134829044342041
    3. ' ==' → logprob: -5.884829044342041
    4. '.__' → logprob: -7.884829044342041
    5. '=='' → logprob: -8.759828567504883
    6. '=="' → logprob: -9.134828567504883
    7. '[' → logprob: -9.259828567504883
    8. ' __' → logprob: -9.509828567504883
    9. 'if' → logprob: -9.759828567504883
    10. '__.__' → logprob: -9.759828567504883

Token 1426: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0020855467300862074
    2. '==' → logprob: -6.8770856857299805
    3. '__.__' → logprob: -7.1270856857299805
    4. '=='' → logprob: -10.00208568572998
    5. '__
' → logprob: -10.12708568572998
    6. '__["' → logprob: -10.37708568572998
    7. '=="' → logprob: -10.37708568572998
    8. ' ==' → logprob: -10.62708568572998
    9. '__.' → logprob: -10.75208568572998
    10. '___' → logprob: -12.00208568572998

Token 1427: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19569748640060425
    2. '__' → logprob: -2.570697546005249
    3. ' ==' → logprob: -2.695697546005249
    4. '=="' → logprob: -3.820697546005249
    5. '=='' → logprob: -4.44569730758667
    6. '===' → logprob: -10.320697784423828
    7. '==
' → logprob: -10.445697784423828
    8. '=' → logprob: -11.445697784423828
    9. '==='' → logprob: -11.820697784423828
    10. '__.__' → logprob: -12.195697784423828

Token 1428: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5759535431861877
    2. '"' → logprob: -0.8259535431861877
    3. '__' → logprob: -11.200953483581543
    4. ' "__' → logprob: -15.075953483581543
    5. ' '__' → logprob: -16.32595443725586
    6. '   ' → logprob: -17.45095443725586
    7. ''name' → logprob: -17.57595443725586
    8. '"name' → logprob: -17.95095443725586
    9. ''"' → logprob: -17.95095443725586
    10. '('__' → logprob: -18.07595443725586

Token 1429: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.007737820036709309
    2. '__' → logprob: -4.882737636566162
    3. 'name' → logprob: -9.13273811340332
    4. '"' → logprob: -11.25773811340332
    5. '_main' → logprob: -12.00773811340332
    6. ' main' → logprob: -13.63273811340332
    7. ''' → logprob: -13.88273811340332
    8. 'built' → logprob: -14.38273811340332
    9. '__":
' → logprob: -15.25773811340332
    10. '___' → logprob: -15.50773811340332

Token 1430: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.05097657069563866
    2. '__' → logprob: -3.050976514816284
    3. '__':
' → logprob: -6.175976753234863
    4. '__
' → logprob: -9.425976753234863
    5. '__.' → logprob: -9.550976753234863
    6. '__.__' → logprob: -9.800976753234863
    7. '__["' → logprob: -9.925976753234863
    8. '.' → logprob: -10.675976753234863
    9. '__
' → logprob: -12.175976753234863
    10. '"' → logprob: -12.800976753234863

Token 1431: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.181881383061409
    2. '__' → logprob: -1.8068814277648926
    3. '   ' → logprob: -6.556881427764893
    4. ' main' → logprob: -8.306880950927734
    5. '    
' → logprob: -8.931880950927734
    6. '_main' → logprob: -9.431880950927734
    7. '	main' → logprob: -9.431880950927734
    8. '"' → logprob: -9.931880950927734
    9. '__":
' → logprob: -10.306880950927734
    10. '
' → logprob: -10.806880950927734

Token 1432: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -20.25
    4. '   ' → logprob: -20.25
    5. 'import' → logprob: -23.125
    6. '_main' → logprob: -24.0
    7. '(main' → logprob: -25.0
    8. '.main' → logprob: -25.75
    9. '
' → logprob: -27.25
    10. 'Main' → logprob: -28.0

Token 1433: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1431
Tokens correctement prédits (1ère position, stricte): 564
Tokens correctement prédits (1ère position, avec adaptation): 618
Tokens correctement prédits (top 10): 1158
Précision stricte (1ère position): 39.41%
Précision adaptée (1ère position): 43.19%
Précision (top 10): 80.92%
================================================================================
