================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

MOD = 10**9 + 7

def build_failure(pattern):
    m = len(pattern)
    fail = [0]*m
    j = 0
    for i in range(1, m):
        while j > 0 and pattern[i] != pattern[j]:
            j = fail[j-1]
        if pattern[i] == pattern[j]:
            j += 1
            fail[i] = j
    return fail

def kmp_next_table(s, patterns):
    # Pour chaque pattern, on calcule la transition f[i][c]
    # ici, s est une chaîne, on veut a chaque indice le passage dans l'automate
    # On travaille avec la même technique pour chaque saison word
    next_tables = []
    # On retourne un tableau: pour chaque saison word k 
    #   un tableau next: pour chaque etat (0..len) et caractère 'a'..'z' next state
    for pat in patterns:
        m = len(pat)
        fail = build_failure(pat)
        nxt = [dict() for _ in range(m+1)]
        for i in range(m+1):
            for c in "abcdefghijklmnopqrstuvwxyz":
                if i < m and c == pat[i]:
                    nxt[i][c] = i+1
                else:
                    if i == 0:
                        nxt[i][c] = 0
                    else:
                        nxt[i][c] = nxt[fail[i-1]][c]
        next_tables.append(nxt)
    return next_tables

def main():
    input=sys.stdin.readline
    while True:
        N,M,K=map(int,input().split())
        if N==0 and M==0 and K==0:
            break
        connections = [input().split() for _ in range(N)]
        seasonwords = [input().strip() for _ in range(K)]

        # construire dictionnaire adjacence: from word index -> list of to word indices
        # on doit travailler avec index des mots
        # d'abord recuperer tous les mots apparaissant dans connections
        words_set = set()
        for f,t in connections:
            words_set.add(f)
            words_set.add(t)
        words = list(words_set)
        words_id = {w:i for i,w in enumerate(words)}
        # creer adjacency list
        adj = [[] for _ in range(len(words))]
        for f,t in connections:
            adj[words_id[f]].append(words_id[t])

        # important: on generera une phrase de M mots
        # dp[pos][word][season_mask][season_word_len][season_word_idx] = nombre de façons d'avoir construit
        # pos mots, le dernier mot est word, les saison words vus par des masques, 
        # on va factoriser autrement le matching du saison word dans la concaténation: 
        # on doit reconnaitre un seul saison word unique apparu une seule fois dans la concaténation des mots
        # Le matching se fait via les transitions des automates des saison words.
        # On construit un automate multi-mot

        # On fait une seule automatisation combinée des saison words:
        # On va garder un état pour chacun des saison words: position de matching dans la saison word
        # C'est un vecteur de K int (0..len seasonword)
        # Mais ca explose (len max 20, K max 30) => 21^30 trop gros

        # alternative: Puisqu'on doit avoir un seul saison word apparaissant une fois, 
        # on peut aussi stocker plutôt l'état suivant pour chaque saisonword:
        # Mais meme idee ca explose

        # On a la condition que qu'un seul saison word doit apparaître une fois dans la phrase.
        # On note que la saison word peut être traversée sur la frontière entre mots, c'est la concat des mots

        # On va donc modéliser par un automates combiné des saisonwords "acceptants":
        # On crée pour chaque saison word son automate de kmp (en `next_tables` ),
        # et on stocke pour l'etat de dp:
        # - pos actuel (indice mot)
        # - word actuel (dernier mot choisi)
        # - quelle saison word a été détectée (0: aucune, 1..K: et laquelle)
        # - pour la saison word détectée : un booléen "vu une fois" (quand on a fini de la matcher)
        # - mais on a aussi les états de matching partiel pour chaque saison word
        # 
        # idée: A cause de la condition d'une fois 1 seul saison word et une seule fois,
        # on ne peut pas matcher de 2 saisons differentes,
        # donc on mémorise quelle saison word c'est (0 = aucune, s en 1..K),
        # si aucune, on peut matcher les saison words,
        # si on a choisi une saison word, on ne veut plus matcher les autre et vérifier que c'est une seule apparition.

        # pour ne pas explose, on combine les états des automates KMP dans un tuple (états pour chaque saison word)
        # on limitera K à 30 et longueurs max 20 c'est plus ou moins possible
        # mais 21^30 out of question.

        # on suivant la recommandation: "季語は単語の接続の境界をまたいで出現してもよい"
        # donc c'est bien la concat des mot

        # on représente les mots par leur chaine, car pour chaque étape la suite des mots crée une phrase
        # on doit faire le dp sur pos et mot actuel et les etats des K automates

        # Solution alternative : construire un automatisme Aho-Corasick pour toutes les saison words en même temps,
        # cela gère tous les motifs dans une structure plus compacte.

        # On encode les mots par leur indices.
        # On construit l'automate d'Aho-Corasick des saison words.

        # On fera DP sur:
        # position (0..M)
        # mot actuel (id)
        # état du automate Aho-Corasick (nombre d'états <= somme(lengths des saison words))

        # dans cet état, on sait quelles saisons sont trouvées.

        # On doit vérifier qu'exactement un saison word apparait une fois (et pas plus)
        # L'automate d'Aho-Corasick donne l'état courant et les saisons détectées à cette position
        # car on peut tomber sur un mot de saison word qui apparait, on note cela

        # On renforcera pour stocker le nombre d'apparition des saison word: mais cela peut être multiple
        # On note la contrainte: une seule saison word apparaissant une fois.

        # Donc on fait états en mémorisant:
        # - automate state (0..ac_size-1)
        # - quel saison word a été rencontré? (0 = aucun, s=1..K)
        # - si on a rencontré un saison word, alors on doit éviter d'en rencontrer un autre différent (<=1)
        # Si on rencontre 2 fois la même saison word (2 occurrences) => rejet

        # Donc on stockera dans le dp
        # dp[pos][word][ac_state][season_found]
        # season_found = 0 => aucun
        # season_found = s (1..K) => saison s vu une fois
        # season_found = -1 => plus d'une occurence ou >1 saison word differentes (non valide)

        # dans dp on ne poursuivra pas les états où season_found=-1

        # Avant de coder, construire AC

        # Construct Aho Corasick
        class ACAutomaton:
            def __init__(self):
                self.next = [{}]
                self.fail = [0]
                self.output = [set()]
            def add_word(self, w, idx):
                cur = 0
                for c in w:
                    if c not in self.next[cur]:
                        self.next[cur][c] = len(self.next)
                        self.next.append({})
                        self.fail.append(0)
                        self.output.append(set())
                    cur = self.next[cur][c]
                self.output[cur].add(idx)
            def build(self):
                from collections import deque
                q = deque()
                for c,v in self.next[0].items():
                    q.append(v)
                while q:
                    r = q.popleft()
                    for c,nxt in self.next[r].items():
                        self.fail[nxt] = self.next[self.fail[r]].get(c, 0)
                        self.output[nxt] |= self.output[self.fail[nxt]]
                        q.append(nxt)
                    for c in "abcdefghijklmnopqrstuvwxyz":
                        if c not in self.next[r]:
                            self.next[r][c] = self.next[self.fail[r]].get(c,0)
                for c in "abcdefghijklmnopqrstuvwxyz":
                    if c not in self.next[0]:
                        self.next[0][c] = 0

        ac = ACAutomaton()
        for i, w in enumerate(seasonwords):
            ac.add_word(w, i+1) # saison word index from 1
        ac.build()

        word_strings = words
        nwords = len(words)
        ac_states = len(ac.next)

        # On precompute pour chaque mot et état ac_state, l'etat ac apres lecture de ce mot
        # et aussi la liste des saison words rencontrées (set)

        # On precompute la transition ac sur un mot entier:
        # pour chaque état ac_state:
        # on marche caractere par caractere du mot
        # au final on aura:
        #   next_state, set_saison_words found

        # dp dimensions:
        # pos : 0..M
        # cur_word: 0..nwords-1
        # ac_state: 0..ac_states-1
        # season_found: 0..K pour le numéro de saison word trouvé, ou 0 pour aucun

        # Pourato: stocker dp[pos][cur_word][ac_state][season_found] = nombre de façon

        # Compression mémoire:
        # On va faire dp en "pos" itératif, on garde un dict/map ou array pour dp
        # On gardera dp_current et dp_next

        import collections

        trans = [[0]*ac_states for _ in range(nwords)]
        secr = [set() for _ in range(nwords)]

        for wi in range(nwords):
            w = word_strings[wi]
            for st in range(ac_states):
                cur = st
                found = set()
                for c in w:
                    cur = ac.next[cur][c]
                    found |= ac.output[cur]
                trans[wi][st] = cur
                secr[wi] = secr[wi].union(found) if secr[wi] else found

        # maintenant dp
        # init: pos=1, dp[pos][word][ac_state][0] = 1 pour toutes word, ac_state=0 (etat initial AC)

        # mais saisonfound=0 = aucun
        # (pour saisonfound=0..K, 0=c=aucun, else un seul saisonword trouvé)

        # attention quand on combine found lors du passage d'un mot:
        # si saisonfound=0 et found dans mot = {s}, nouveau seasonfound = s si len(found)==1

        # si found multiple saisonword en un mot c'est invalid direct (car 2 saisonword different a 1 occurrence dans le meme mot), dp = 0 pour ce chemin

        # si seasonfound=s (avec s>0) et found={s'}, alors si s' == s, il s'agit d'un deuxième apparition => invalid -> poubelle

        # si s' != s : on a un deuxième saisonword différent ou on a déjà rencontré un saisonword et on en retrouve un autre -> invalid

        # si found vide => seasonfound ne change pas

        # si found multiple elements => invalid

        dp_cur = [[[0]*(K+1) for _ in range(ac_states)] for _ in range(nwords)]
        for w in range(nwords):
            dp_cur[w][0][0] = 1

        for _ in range(1,M):
            dp_next = [[[0]*(K+1) for _ in range(ac_states)] for _ in range(nwords)]
            for w in range(nwords):
                for acs in range(ac_states):
                    for sez in range(K+1):
                        val = dp_cur[w][acs][sez]
                        if val == 0:
                            continue
                        for nw in adj[w]:
                            nxt_acs = trans[nw][acs]
                            found = ac.output[nxt_acs]
                            # checked multiples
                            if len(found) > 1:
                                continue
                            if len(found) == 1:
                                f = next(iter(found))
                                if sez == 0:
                                    sez2 = f
                                else:
                                    if sez == f:
                                        # deuxième apparition du même saisonword
                                        continue
                                    else:
                                        # deuxième saisonword different
                                        continue
                            else:
                                sez2 = sez
                            dp_next[nw][nxt_acs][sez2] = (dp_next[nw][nxt_acs][sez2] + val) % MOD
            dp_cur = dp_next

        # somme sur pos=M, mot, ac_state, saisonfound qui est !=0 (exactement 1 saisonword apparent)
        ans = 0
        for w in range(nwords):
            for acs in range(ac_states):
                for sez in range(1,K+1):
                    ans = (ans + dp_cur[w][acs][sez])%MOD
        print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.314270555973053
    2. '_limit' → logprob: -1.3142704963684082
    3. '_depth' → logprob: -7.189270496368408
    4. 'depth' → logprob: -8.939270973205566
    5. ' limit' → logprob: -9.939270973205566
    6. 'lim' → logprob: -10.314270973205566
    7. '_stack' → logprob: -12.189270973205566
    8. '_lim' → logprob: -12.314270973205566
    9. '(limit' → logprob: -12.314270973205566
    10. '-limit' → logprob: -12.939270973205566

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.282920129597187e-05
    2. '(.' → logprob: -12.750012397766113
    3. '(
' → logprob: -12.875012397766113
    4. ' (' → logprob: -12.875012397766113
    5. '(

' → logprob: -13.625012397766113
    6. '((' → logprob: -13.750012397766113
    7. '("("' → logprob: -13.875012397766113
    8. '```' → logprob: -14.625012397766113
    9. '('' → logprob: -15.250012397766113
    10. '(`' → logprob: -15.500012397766113

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. '))' → logprob: -12.625003814697266
    3. ' )' → logprob: -14.375003814697266
    4. ')
' → logprob: -15.625003814697266
    5. ')))' → logprob: -17.250003814697266
    6. ')`' → logprob: -17.750003814697266
    7. '`)' → logprob: -18.000003814697266
    8. '')' → logprob: -18.250003814697266
    9. '```' → logprob: -18.375003814697266
    10. '）' → logprob: -18.500003814697266

Token 13: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0465119332075119
    2. '
' → logprob: -3.5465118885040283
    3. '

' → logprob: -4.921512126922607
    4. '```' → logprob: -5.296512126922607
    5. '\' → logprob: -6.421512126922607
    6. '
' → logprob: -7.046512126922607
    7. 'class' → logprob: -7.546512126922607
    8. '\n' → logprob: -7.671512126922607
    9. 'import' → logprob: -8.04651165008545
    10. ')' → logprob: -8.92151165008545

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871845304965973
    2. '=' → logprob: -1.137184500694275
    3. ' ' → logprob: -8.887184143066406
    4. ')' → logprob: -9.387184143066406
    5. '_' → logprob: -10.262184143066406
    6. ' =)' → logprob: -11.137184143066406
    7. ' =
' → logprob: -11.512184143066406
    8. '<|end|>' → logprob: -12.012184143066406
    9. '.' → logprob: -12.137184143066406
    10. ' )' → logprob: -12.262184143066406

Token 15: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16055291891098022
    2. ' ' → logprob: -1.910552978515625
    3. '100' → logprob: -8.035552978515625
    4. '1' → logprob: -12.285552978515625
    5. 'int' → logprob: -15.785552978515625
    6. '998' → logprob: -16.535552978515625
    7. ' ' → logprob: -16.660552978515625
    8. '109' → logprob: -17.160552978515625
    9. '2' → logprob: -17.785552978515625
    10. '(' → logprob: -18.410552978515625

Token 16: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0005549400229938328
    2. '100' → logprob: -7.500555038452148
    3. '1' → logprob: -13.500555038452148
    4. ' ' → logprob: -15.125555038452148
    5. '998' → logprob: -15.750555038452148
    6. 'int' → logprob: -16.00055503845215
    7. '(' → logprob: -19.00055503845215
    8. 'pow' → logprob: -19.12555503845215
    9. '```' → logprob: -19.12555503845215
    10. '１０' → logprob: -19.50055503845215

Token 17: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04053293541073799
    2. '**' → logprob: -3.2905328273773193
    3. '09' → logprob: -6.040533065795898
    4. '0' → logprob: -10.040533065795898
    5. '7' → logprob: -10.290533065795898
    6. '07' → logprob: -11.040533065795898
    7. '00' → logprob: -12.290533065795898
    8. '```' → logprob: -12.540533065795898
    9. ' ' → logprob: -12.790533065795898
    10. '000' → logprob: -13.415533065795898

Token 18: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -15.625
    3. '```' → logprob: -18.0
    4. '+' → logprob: -18.75
    5. ' ' → logprob: -18.875
    6. '10' → logprob: -19.25
    7. '7' → logprob: -21.125
    8. '8' → logprob: -21.125
    9. '９' → logprob: -21.125
    10. '4' → logprob: -22.125

Token 19: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017048174049705267
    2. ' +' → logprob: -6.376704692840576
    3. '7' → logprob: -13.376705169677734
    4. '＋' → logprob: -14.876705169677734
    5. '+
' → logprob: -15.001705169677734
    6. ' ' → logprob: -15.751705169677734
    7. '+

' → logprob: -16.001705169677734
    8. '```' → logprob: -17.251705169677734
    9. ' plus' → logprob: -17.376705169677734
    10. ' ' → logprob: -17.376705169677734

Token 20: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '+' → logprob: -15.87500286102295
    4. '9' → logprob: -16.000003814697266
    5. '```' → logprob: -17.000003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '07' → logprob: -18.375003814697266
    8. '  ' → logprob: -19.125003814697266
    9. ' ' → logprob: -19.125003814697266
    10. '19' → logprob: -20.125003814697266

Token 21: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -16.25
    3. ' ' → logprob: -16.5
    4. '9' → logprob: -18.0
    5. '```' → logprob: -18.5
    6. '07' → logprob: -19.25
    7. '   ' → logprob: -19.375
    8. '

' → logprob: -21.0
    9. '７' → logprob: -21.5625
    10. '  ' → logprob: -21.625

Token 22: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9760170578956604
    2. '

' → logprob: -1.1010169982910156
    3. 'def' → logprob: -1.7260169982910156
    4. '```' → logprob: -2.9760169982910156
    5. '\n' → logprob: -3.9760169982910156
    6. '
' → logprob: -3.9760169982910156
    7. '\' → logprob: -4.226016998291016
    8. '' → logprob: -5.101016998291016
    9. 'import' → logprob: -6.851016998291016
    10. '``' → logprob: -7.976016998291016

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010336418636143208
    2. '
' → logprob: -7.501033782958984
    3. '```' → logprob: -8.501033782958984
    4. 'n' → logprob: -8.751033782958984
    5. '

' → logprob: -10.251033782958984
    6. 'class' → logprob: -10.501033782958984
    7. '
' → logprob: -10.751033782958984
    8. '\' → logprob: -10.751033782958984
    9. '\n' → logprob: -12.501033782958984
    10. ' def' → logprob: -12.751033782958984

Token 24: ' build' (ID: 3024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2905051112174988
    2. ' dfs' → logprob: -1.5405051708221436
    3. ' factorial' → logprob: -4.1655049324035645
    4. ' solve' → logprob: -4.6655049324035645
    5. ' f' → logprob: -5.4155049324035645
    6. ' pow' → logprob: -5.9155049324035645
    7. ' factor' → logprob: -7.0405049324035645
    8. ' main' → logprob: -7.1655049324035645
    9. ' count' → logprob: -7.4155049324035645
    10. ' fast' → logprob: -7.5405049324035645

Token 25: '_failure' (ID: 110004)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.5320590138435364
    2. '_' → logprob: -1.0320589542388916
    3. '(' → logprob: -3.0320589542388916
    4. '_array' → logprob: -6.032059192657471
    5. '_segment' → logprob: -6.157059192657471
    6. '_graph' → logprob: -7.282059192657471
    7. '_suffix' → logprob: -8.157058715820312
    8. '_table' → logprob: -8.532058715820312
    9. '_b' → logprob: -9.032058715820312
    10. ' _' → logprob: -9.157058715820312

Token 26: '(pattern' (ID: 62660)
  Prédit: '_function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.038859739899635315
    2. '_array' → logprob: -3.2888598442077637
    3. '_table' → logprob: -7.538859844207764
    4. '_' → logprob: -10.038859367370605
    5. '_func' → logprob: -10.038859367370605
    6. '_pattern' → logprob: -10.038859367370605
    7. 'function' → logprob: -10.288859367370605
    8. '_tree' → logprob: -10.663859367370605
    9. '_pointer' → logprob: -10.913859367370605
    10. '_matrix' → logprob: -11.163859367370605

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.050064995884895325
    2. ',' → logprob: -3.050065040588379
    3. ')' → logprob: -6.675065040588379
    4. ' ):' → logprob: -9.300065040588379
    5. '[' → logprob: -10.300065040588379
    6. '   ' → logprob: -10.800065040588379
    7. '):
' → logprob: -11.550065040588379
    8. ' ' → logprob: -11.925065040588379
    9. ' ,' → logprob: -11.925065040588379
    10. ',p' → logprob: -12.050065040588379

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0257655568420887
    2. '():' → logprob: -4.400765419006348
    3. ':' → logprob: -4.525765419006348
    4. '():
' → logprob: -7.025765419006348
    5. '):' → logprob: -8.150765419006348
    6. '```' → logprob: -8.775765419006348
    7. ' :' → logprob: -9.150765419006348
    8. ':
' → logprob: -9.275765419006348
    9. ' ' → logprob: -9.275765419006348
    10. '    
' → logprob: -9.400765419006348

Token 29: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14823785424232483
    2. ' m' → logprob: -2.773237943649292
    3. 'n' → logprob: -3.273237943649292
    4. ' n' → logprob: -3.523237943649292
    5. ' l' → logprob: -6.023237705230713
    6. ' failure' → logprob: -6.773237705230713
    7. 'm' (adapté à ' m') → logprob: -7.023237705230713
    8. '    
' → logprob: -7.273237705230713
    9. '	n' → logprob: -7.398237705230713
    10. ' ' → logprob: -7.773237705230713

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07918895781040192
    2. '=' → logprob: -2.5791890621185303
    3. '=len' → logprob: -8.70418930053711
    4. '=int' → logprob: -9.07918930053711
    5. '   ' → logprob: -12.07918930053711
    6. ' =
' → logprob: -13.07918930053711
    7. ' ' → logprob: -13.45418930053711
    8. 'a' → logprob: -13.57918930053711
    9. '=a' → logprob: -14.20418930053711
    10. '=size' → logprob: -14.20418930053711

Token 31: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.048590775579214096
    2. 'len' → logprob: -3.048590660095215
    3. '=len' → logprob: -13.548590660095215
    4. '(len' → logprob: -13.798590660095215
    5. '[len' → logprob: -14.173590660095215
    6. '	len' → logprob: -15.673590660095215
    7. ' ' → logprob: -16.29859161376953
    8. '<len' → logprob: -17.17359161376953
    9. ',len' → logprob: -17.29859161376953
    10. ' ' → logprob: -18.29859161376953

Token 32: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -9.221884101862088e-05
    2. 'pattern' → logprob: -9.500092506408691
    3. '(' → logprob: -11.000092506408691
    4. ' (' → logprob: -15.250092506408691
    5. ' pattern' → logprob: -15.625092506408691
    6. '(p' → logprob: -17.125091552734375
    7. '.pattern' → logprob: -18.000091552734375
    8. '_pattern' → logprob: -18.000091552734375
    9. '(prefix' → logprob: -18.750091552734375
    10. '(policy' → logprob: -19.250091552734375

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20259234309196472
    2. ')
' → logprob: -1.702592372894287
    3. ')
' → logprob: -7.452592372894287
    4. '   ' → logprob: -7.952592372894287
    5. ' )' → logprob: -8.827591896057129
    6. ' )
' → logprob: -9.452591896057129
    7. ')

' → logprob: -12.577591896057129
    8. ' ' → logprob: -12.827591896057129
    9. '):
' → logprob: -12.827591896057129
    10. ')m' → logprob: -13.452591896057129

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04285518825054169
    2. ' failure' → logprob: -3.6678552627563477
    3. 'failure' → logprob: -4.417855262756348
    4. ' l' → logprob: -5.917855262756348
    5. 'fail' → logprob: -7.917855262756348
    6. '	l' → logprob: -8.042855262756348
    7. '	f' → logprob: -8.792855262756348
    8. '    
' → logprob: -9.042855262756348
    9. '	fail' → logprob: -9.042855262756348
    10. ' pi' → logprob: -9.167855262756348

Token 35: ' fail' (ID: 7111)
  Prédit: 'failure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'failure' → logprob: -0.655546247959137
    2. 'fail' (adapté à ' fail') → logprob: -1.4055461883544922
    3. ' failure' → logprob: -2.280546188354492
    4. 'l' → logprob: -3.030546188354492
    5. ' l' → logprob: -3.405546188354492
    6. 'f' → logprob: -3.905546188354492
    7. 'pi' → logprob: -4.030546188354492
    8. ' fail' → logprob: -4.530546188354492
    9. ' pi' → logprob: -6.155546188354492
    10. ' f' → logprob: -7.780546188354492

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01292278803884983
    2. '=' → logprob: -4.637922763824463
    3. 'ure' → logprob: -5.762922763824463
    4. '   ' → logprob: -12.137923240661621
    5. '=[' → logprob: -12.637923240661621
    6. 'ures' → logprob: -12.887923240661621
    7. 'ur' → logprob: -13.512923240661621
    8. '[' → logprob: -13.637923240661621
    9. 'd' → logprob: -13.637923240661621
    10. '[]' → logprob: -14.137923240661621

Token 37: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4743238389492035
    2. ' [' → logprob: -0.9743238687515259
    3. '[-' → logprob: -8.599324226379395
    4. ' [-' → logprob: -9.724324226379395
    5. '[m' → logprob: -13.224324226379395
    6. '   ' → logprob: -14.724324226379395
    7. ' ' → logprob: -15.099324226379395
    8. ' ' → logprob: -16.849323272705078
    9. '[len' → logprob: -16.974323272705078
    10. '[int' → logprob: -17.349323272705078

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004896456957794726
    2. '-' → logprob: -7.625489711761475
    3. ' ' → logprob: -13.625489234924316
    4. ' -' → logprob: -14.875489234924316
    5. '۰' → logprob: -17.000490188598633
    6. '０' → logprob: -18.250490188598633
    7. ')' → logprob: -18.625490188598633
    8. '```' → logprob: -19.000490188598633
    9. '`' → logprob: -19.687990188598633
    10. '   ' → logprob: -19.937990188598633

Token 39: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022112776059657335
    2. ']*' → logprob: -6.127211093902588
    3. ' ]' → logprob: -10.877211570739746
    4. ']*(' → logprob: -12.252211570739746
    5. ')' → logprob: -13.252211570739746
    6. '   ' → logprob: -15.502211570739746
    7. ')]' → logprob: -16.25221061706543
    8. ' for' → logprob: -16.37721061706543
    9. ',' → logprob: -16.62721061706543
    10. '()]' → logprob: -16.75221061706543

Token 40: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.5690089639974758e-05
    2. '(m' → logprob: -11.250015258789062
    3. ' m' → logprob: -12.875015258789062
    4. '(' → logprob: -17.250015258789062
    5. ' (' → logprob: -18.500015258789062
    6. '	m' → logprob: -18.875015258789062
    7. ')m' → logprob: -21.000015258789062
    8. 'м' → logprob: -21.125015258789062
    9. 'ｍ' → logprob: -21.125015258789062
    10. ' ' → logprob: -21.500015258789062

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13129232823848724
    2. '
' → logprob: -3.2562923431396484
    3. 'i' → logprob: -3.3812923431396484
    4. ' i' → logprob: -3.6312923431396484
    5. '	i' → logprob: -4.381292343139648
    6. ' for' → logprob: -5.256292343139648
    7. 'for' → logprob: -5.756292343139648
    8. '	for' → logprob: -6.506292343139648
    9. '    
' → logprob: -7.256292343139648
    10. '
' → logprob: -8.756292343139648

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09160944819450378
    2. ' i' → logprob: -2.966609477996826
    3. 'i' → logprob: -3.841609477996826
    4. '	i' → logprob: -4.841609477996826
    5. '
' → logprob: -5.591609477996826
    6. 'j' → logprob: -6.591609477996826
    7. 'for' → logprob: -7.966609477996826
    8. ' for' → logprob: -8.091609001159668
    9. ' j' → logprob: -8.841609001159668
    10. '    
' → logprob: -8.841609001159668

Token 43: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.00413444172590971
    2. ' j' → logprob: -5.504134654998779
    3. 'k' → logprob: -10.379134178161621
    4. 'for' → logprob: -10.754134178161621
    5. ' for' → logprob: -13.629134178161621
    6. ' k' → logprob: -13.629134178161621
    7. '	j' → logprob: -14.754134178161621
    8. '   ' → logprob: -14.879134178161621
    9. 'i' → logprob: -15.379134178161621
    10. ' ' → logprob: -16.129135131835938

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740881323814392
    2. ' =' → logprob: -0.9740881323814392
    3. ' ' → logprob: -11.724087715148926
    4. '<|end|>' → logprob: -13.224087715148926
    5. '＝' → logprob: -15.599087715148926
    6. '  ' → logprob: -15.724087715148926
    7. '0' → logprob: -15.724087715148926
    8. '=int' → logprob: -16.224088668823242
    9. '1' → logprob: -16.599088668823242
    10. '   ' → logprob: -16.724088668823242

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043162284418940544
    2. ' ' → logprob: -7.750431537628174
    3. '1' → logprob: -13.875432014465332
    4. '۰' → logprob: -17.625431060791016
    5. '01' → logprob: -18.187931060791016
    6. '012' → logprob: -18.625431060791016
    7. '  ' → logprob: -19.187931060791016
    8. '000' → logprob: -19.500431060791016
    9. '010' → logprob: -19.750431060791016
    10. '０' → logprob: -19.875431060791016

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '1' → logprob: -16.125
    4. '۰' → logprob: -19.125
    5. '```' → logprob: -20.875
    6. '０' → logprob: -21.0
    7. '000' → logprob: -21.5
    8. '-' → logprob: -21.625
    9. '00' → logprob: -21.6875
    10. '01' → logprob: -21.9375

Token 47: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5103325247764587
    2. ' for' → logprob: -1.0103325843811035
    3. '   ' → logprob: -4.1353325843811035
    4. '
' → logprob: -4.8853325843811035
    5. '	for' → logprob: -5.2603325843811035
    6. '1' → logprob: -6.5103325843811035
    7. '<|end|>' → logprob: -6.5103325843811035
    8. 'i' → logprob: -6.7603325843811035
    9. '\n' → logprob: -6.8853325843811035
    10. '' → logprob: -8.010332107543945

Token 48: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6309975981712341
    2. 'for' → logprob: -0.8809975981712341
    3. '   ' → logprob: -3.130997657775879
    4. '	for' → logprob: -4.880997657775879
    5. '
' → logprob: -7.255997657775879
    6. 'i' → logprob: -7.255997657775879
    7. ' i' → logprob: -8.505997657775879
    8. '\n' → logprob: -8.880997657775879
    9. ' ' → logprob: -8.880997657775879
    10. '1' → logprob: -9.255997657775879

Token 49: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.020052440464496613
    2. ' for' → logprob: -4.020052433013916
    3. '1' → logprob: -6.395052433013916
    4. 'i' → logprob: -9.020052909851074
    5. '
' → logprob: -10.145052909851074
    6. '   ' → logprob: -10.145052909851074
    7. '	for' → logprob: -10.520052909851074
    8. 'For' → logprob: -13.770052909851074
    9. '\n' → logprob: -14.270052909851074
    10. ' i' → logprob: -14.520052909851074

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004136103205382824
    2. 'i' → logprob: -5.504136085510254
    3. ' range' → logprob: -10.379136085510254
    4. 'range' → logprob: -10.629136085510254
    5. '	i' → logprob: -13.754136085510254
    6. ' ' → logprob: -13.754136085510254
    7. '_i' → logprob: -16.62913703918457
    8. ' in' → logprob: -17.37913703918457
    9. '  ' → logprob: -17.50413703918457
    10. 'I' → logprob: -17.62913703918457

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00447616633027792
    2. 'in' → logprob: -5.504476070404053
    3. ' ' → logprob: -8.004476547241211
    4. '1' → logprob: -9.754476547241211
    5. 'range' → logprob: -13.254476547241211
    6. '	in' → logprob: -13.629476547241211
    7. ' range' → logprob: -13.754476547241211
    8. '  ' → logprob: -14.004476547241211
    9. '=' → logprob: -15.754476547241211
    10. '2' → logprob: -16.00447654724121

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.062171582132577896
    2. 'range' → logprob: -2.812171697616577
    3. '1' → logprob: -8.812171936035156
    4. ' ' → logprob: -9.812171936035156
    5. '(range' → logprob: -15.812171936035156
    6. '	range' → logprob: -16.312171936035156
    7. '[' → logprob: -18.562171936035156
    8. '  ' → logprob: -19.062171936035156
    9. ' xrange' → logprob: -19.687171936035156
    10. '2' → logprob: -19.812171936035156

Token 53: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05513231083750725
    2. '(' → logprob: -2.9301323890686035
    3. ' ' → logprob: -8.305131912231445
    4. '   ' → logprob: -13.555131912231445
    5. '[' → logprob: -14.180131912231445
    6. '  ' → logprob: -15.805131912231445
    7. ',' → logprob: -16.430131912231445
    8. ' (' → logprob: -16.805131912231445
    9. '```' → logprob: -16.930131912231445
    10. '<|end|>' → logprob: -17.055131912231445

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '１' → logprob: -18.875001907348633
    4. '۱' → logprob: -19.125001907348633
    5. '```' → logprob: -19.875001907348633
    6. '2' → logprob: -20.500001907348633
    7. '   ' → logprob: -20.625001907348633
    8. '`' → logprob: -20.875001907348633
    9. '' → logprob: -21.500001907348633
    10. '12' → logprob: -21.625001907348633

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06266894936561584
    2. ',m' → logprob: -3.062669038772583
    3. ')' → logprob: -4.937668800354004
    4. 'm' → logprob: -5.687668800354004
    5. ' ,' → logprob: -6.937668800354004
    6. '):' → logprob: -6.937668800354004
    7. ')m' → logprob: -8.437668800354004
    8. ' ' → logprob: -8.562668800354004
    9. '<|end|>' → logprob: -8.812668800354004
    10. ' m' → logprob: -8.812668800354004

Token 56: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0040785204619169235
    2. ' m' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.754077911376953
    4. '	m' → logprob: -17.129077911376953
    5. ' ' → logprob: -19.004077911376953
    6. ')m' → logprob: -20.129077911376953
    7. '  ' → logprob: -20.879077911376953
    8. 'м' → logprob: -20.879077911376953
    9. 'ｍ' → logprob: -20.879077911376953
    10. ' м' → logprob: -21.504077911376953

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004166105354670435
    2. '):
' → logprob: -7.8754167556762695
    3. ':' → logprob: -10.87541675567627
    4. ')' → logprob: -11.62541675567627
    5. ' ):' → logprob: -11.75041675567627
    6. '():' → logprob: -15.25041675567627
    7. '   ' → logprob: -15.62541675567627
    8. '):
' → logprob: -16.250415802001953
    9. '}:' → logprob: -16.375415802001953
    10. ']:' → logprob: -16.625415802001953

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05540326610207558
    2. ':' → logprob: -3.055403232574463
    3. ' ' → logprob: -6.055403232574463
    4. ' :' → logprob: -6.305403232574463
    5. '   ' → logprob: -7.180403232574463
    6. '	' → logprob: -7.430403232574463
    7. '    ' → logprob: -8.305403709411621
    8. '<|end|>' → logprob: -8.680403709411621
    9. ':
' → logprob: -8.930403709411621
    10. '):' → logprob: -9.055403709411621

Token 59: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.06166881322860718
    2. ' while' → logprob: -3.061668872833252
    3. '       ' → logprob: -4.686668872833252
    4. '           ' → logprob: -6.436668872833252
    5. 'if' → logprob: -6.561668872833252
    6. '	while' → logprob: -7.686668872833252
    7. '   ' → logprob: -8.561668395996094
    8. ' ' → logprob: -10.561668395996094
    9. ' if' → logprob: -10.686668395996094
    10. '        ' → logprob: -10.686668395996094

Token 60: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6931533813476562
    2. ' j' → logprob: -0.6931533813476562
    3. ' ' → logprob: -13.193153381347656
    4. '	j' → logprob: -13.193153381347656
    5. '<|end|>' → logprob: -13.818153381347656
    6. '(j' → logprob: -14.568153381347656
    7. ' not' → logprob: -14.818153381347656
    8. ')' → logprob: -15.818153381347656
    9. ':j' → logprob: -16.443153381347656
    10. '[j' → logprob: -16.568153381347656

Token 61: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10130442678928375
    2. ' >' → logprob: -2.351304531097412
    3. 'and' → logprob: -7.101304531097412
    4. ' and' → logprob: -8.226304054260254
    5. '0' → logprob: -12.851304054260254
    6. '&gt' → logprob: -13.601304054260254
    7. '＞' → logprob: -14.101304054260254
    8. '()>' → logprob: -14.851304054260254
    9. ' ' → logprob: -15.851304054260254
    10. ' ' → logprob: -16.72630500793457

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028053484857082367
    2. ' ' → logprob: -5.877805233001709
    3. '=' → logprob: -14.627805709838867
    4. '>' → logprob: -17.252805709838867
    5. '<|end|>' → logprob: -18.127805709838867
    6. '  ' → logprob: -19.002805709838867
    7. '   ' → logprob: -19.627805709838867
    8. '۰' → logprob: -19.752805709838867
    9. '```' → logprob: -19.877805709838867
    10. '<|end|>' → logprob: -20.002805709838867

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '=' → logprob: -20.2500057220459
    4. '０' → logprob: -20.2500057220459
    5. '۰' → logprob: -20.3750057220459
    6. 'and' → logprob: -21.7500057220459
    7. '<|end|>' → logprob: -22.3750057220459
    8. '00' → logprob: -22.5000057220459
    9. '   ' → logprob: -22.6250057220459
    10. '  ' → logprob: -22.8750057220459

Token 64: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2014182209968567
    2. 'and' → logprob: -1.701418161392212
    3. '        ' → logprob: -12.826417922973633
    4. ' ' → logprob: -14.076417922973633
    5. '           ' → logprob: -15.201417922973633
    6. '	and' → logprob: -15.201417922973633
    7. '          ' → logprob: -15.326417922973633
    8. '            ' → logprob: -15.576417922973633
    9. '    ' → logprob: -15.701417922973633
    10. '       ' → logprob: -16.076417922973633

Token 65: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.2519490122795105
    2. ' pattern' → logprob: -1.5019490718841553
    3. '(pattern' → logprob: -10.876949310302734
    4. 'pat' → logprob: -14.126949310302734
    5. '.pattern' → logprob: -15.751949310302734
    6. 'patterns' → logprob: -17.001949310302734
    7. '_pattern' → logprob: -17.126949310302734
    8. 'attern' → logprob: -17.626949310302734
    9. ' patterns' → logprob: -17.876949310302734
    10. ' not' → logprob: -18.376949310302734

Token 66: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007100477814674377
    2. '[j' → logprob: -7.2507100105285645
    3. '[' → logprob: -15.625710487365723
    4. '```' → logprob: -16.875709533691406
    5. '[I' → logprob: -17.625709533691406
    6. 'i' → logprob: -20.250709533691406
    7. '[index' → logprob: -21.000709533691406
    8. ' [' → logprob: -21.500709533691406
    9. '[id' → logprob: -21.500709533691406
    10. '[int' → logprob: -21.625709533691406

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31357696652412415
    2. '!=' → logprob: -2.0635769367218018
    3. ' !=' → logprob: -2.5635769367218018
    4. ']!=' → logprob: -2.8135769367218018
    5. ' ]' → logprob: -5.313577175140381
    6. '[' → logprob: -9.563576698303223
    7. ')!=' → logprob: -9.813576698303223
    8. '```' → logprob: -10.438576698303223
    9. ' ' → logprob: -11.188576698303223
    10. '()!=' → logprob: -11.438576698303223

Token 68: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.22542479634284973
    2. '!=' → logprob: -1.6004247665405273
    3. ']!=' → logprob: -11.600424766540527
    4. '()!=' → logprob: -14.100424766540527
    5. '!==' → logprob: -14.100424766540527
    6. '```' → logprob: -14.600424766540527
    7. ')!=' → logprob: -15.600424766540527
    8. '!='' → logprob: -15.600424766540527
    9. '!=(' → logprob: -15.725424766540527
    10. ' ' → logprob: -16.100425720214844

Token 69: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.12692883610725403
    2. ' pattern' → logprob: -2.1269288063049316
    3. 'pat' → logprob: -14.37692928314209
    4. '(pattern' → logprob: -16.626928329467773
    5. '_pattern' → logprob: -17.376928329467773
    6. '.pattern' → logprob: -17.626928329467773
    7. 'attern' → logprob: -18.126928329467773
    8. ' ' → logprob: -18.251928329467773
    9. 'p' → logprob: -18.501928329467773
    10. 'patterns' → logprob: -19.126928329467773

Token 70: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. '[js' → logprob: -16.25
    3. '[' → logprob: -16.375
    4. 'j' → logprob: -17.125
    5. '```' → logprob: -17.125
    6. '[q' → logprob: -19.25
    7. '	j' → logprob: -19.375
    8. '][' → logprob: -19.625
    9. '[J' → logprob: -19.625
    10. '[i' → logprob: -20.125

Token 71: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029914898332208395
    2. ':' → logprob: -6.002991676330566
    3. '):
' → logprob: -7.752991676330566
    4. ']:' → logprob: -10.127991676330566
    5. ')' → logprob: -10.252991676330566
    6. ' ):' → logprob: -12.627991676330566
    7. '}:' → logprob: -12.752991676330566
    8. '():' → logprob: -13.877991676330566
    9. ''):' → logprob: -14.502991676330566
    10. '<|end|>' → logprob: -14.752991676330566

Token 72: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10976897925138474
    2. '       ' → logprob: -2.359768867492676
    3. ':
' → logprob: -5.984768867492676
    4. ',' → logprob: -5.984768867492676
    5. 'j' → logprob: -6.484768867492676
    6. ')' → logprob: -7.609768867492676
    7. ':j' → logprob: -7.609768867492676
    8. '):' → logprob: -7.859768867492676
    9. ' j' → logprob: -7.859768867492676
    10. '           ' → logprob: -8.109768867492676

Token 73: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.03382895886898041
    2. ' j' → logprob: -3.4088289737701416
    3. '               ' → logprob: -9.533828735351562
    4. '           ' → logprob: -9.658828735351562
    5. '	j' → logprob: -10.533828735351562
    6. ',j' → logprob: -12.158828735351562
    7. '[j' → logprob: -12.533828735351562
    8. ':j' → logprob: -12.783828735351562
    9. '_j' → logprob: -13.283828735351562
    10. '
' → logprob: -13.283828735351562

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759628415107727
    2. '=' → logprob: -0.8259628415107727
    3. ' -=' → logprob: -10.825963020324707
    4. '-=' → logprob: -12.700963020324707
    5. '＝' → logprob: -15.575963020324707
    6. '-' → logprob: -15.825963020324707
    7. '=j' → logprob: -15.825963020324707
    8. '.=' → logprob: -17.57596206665039
    9. '=int' → logprob: -18.57596206665039
    10. ' ' → logprob: -18.57596206665039

Token 75: ' fail' (ID: 7111)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.4740866422653198
    2. ' fail' → logprob: -0.9740866422653198
    3. '	fail' → logprob: -11.59908676147461
    4. '.fail' → logprob: -15.59908676147461
    5. '_fail' → logprob: -15.84908676147461
    6. ' ' → logprob: -16.09908676147461
    7. 'Fail' → logprob: -18.72408676147461
    8. 'failure' → logprob: -18.72408676147461
    9. '0' → logprob: -19.59908676147461
    10. 'f' → logprob: -19.72408676147461

Token 76: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3306015716807451e-05
    2. 'j' → logprob: -11.25001335144043
    3. '[' → logprob: -15.75001335144043
    4. '[js' → logprob: -16.75001335144043
    5. '[i' → logprob: -18.75001335144043
    6. '[
' → logprob: -19.37501335144043
    7. '<|end|>' → logprob: -19.37501335144043
    8. '```' → logprob: -19.87501335144043
    9. '	j' → logprob: -20.37501335144043
    10. '[q' → logprob: -20.50001335144043

Token 77: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000672639871481806
    2. '[j' → logprob: -7.875672817230225
    3. ' -' → logprob: -8.500672340393066
    4. '[' → logprob: -10.375672340393066
    5. ')' → logprob: -11.000672340393066
    6. 'j' → logprob: -11.000672340393066
    7. '1' → logprob: -11.875672340393066
    8. ']' → logprob: -12.250672340393066
    9. '[-' → logprob: -12.375672340393066
    10. '-)' → logprob: -12.375672340393066

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ']' → logprob: -14.500000953674316
    3. ' ' → logprob: -17.625
    4. '<|end|>' → logprob: -18.125
    5. '<|end|>' → logprob: -19.75
    6. '```' → logprob: -20.25
    7. ']>' → logprob: -21.25
    8. '۱' → logprob: -21.375
    9. '１' → logprob: -21.625
    10. '१' → logprob: -21.75

Token 79: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3874850273132324
    2. ']' → logprob: -1.1374850273132324
    3. '       ' → logprob: -8.26248550415039
    4. ')
' → logprob: -8.63748550415039
    5. '<|end|>' → logprob: -9.51248550415039
    6. ']
' → logprob: -10.01248550415039
    7. '）' → logprob: -10.88748550415039
    8. '}' → logprob: -11.01248550415039
    9. '```' → logprob: -12.13748550415039
    10. '   ' → logprob: -12.63748550415039

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045379105722531676
    2. ')' → logprob: -8.75045394897461
    3. '<|end|>' → logprob: -9.12545394897461
    4. '[' → logprob: -10.62545394897461
    5. '	' → logprob: -10.75045394897461
    6. '\' → logprob: -10.75045394897461
    7. '```' → logprob: -10.87545394897461
    8. ',' → logprob: -10.87545394897461
    9. '   ' → logprob: -11.37545394897461
    10. 'j' → logprob: -11.50045394897461

Token 81: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06867911666631699
    2. ' if' → logprob: -3.068679094314575
    3. 'if' (adapté à ' if') → logprob: -4.943679332733154
    4. ' ' → logprob: -5.193679332733154
    5. '<|end|>' → logprob: -5.818679332733154
    6. '   ' → logprob: -6.693679332733154
    7. '    ' → logprob: -7.443679332733154
    8. ' j' → logprob: -8.443678855895996
    9. 'j' → logprob: -8.443678855895996
    10. 'i' → logprob: -8.568678855895996

Token 82: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.16022473573684692
    2. ' pattern' → logprob: -1.9102246761322021
    3. 'pat' → logprob: -15.160224914550781
    4. '(pattern' → logprob: -15.410224914550781
    5. '   ' → logprob: -17.28522491455078
    6. ' ' → logprob: -17.41022491455078
    7. 'attern' → logprob: -17.78522491455078
    8. 'Pattern' → logprob: -18.16022491455078
    9. '_pattern' → logprob: -18.16022491455078
    10. 'patterns' → logprob: -18.28522491455078

Token 83: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.976922744186595e-05
    2. '[j' → logprob: -10.250040054321289
    3. '[' → logprob: -12.375040054321289
    4. 'i' → logprob: -16.87504005432129
    5. '[I' → logprob: -17.87504005432129
    6. '```' → logprob: -18.62504005432129
    7. '[
' → logprob: -18.75004005432129
    8. '[int' → logprob: -18.87504005432129
    9. '<|end|>' → logprob: -20.00004005432129
    10. '`' → logprob: -20.25004005432129

Token 84: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3136752247810364
    2. '==' → logprob: -1.3136751651763916
    3. ']==' → logprob: -7.938675403594971
    4. '=' → logprob: -10.688674926757812
    5. ')==' → logprob: -10.938674926757812
    6. ']' → logprob: -12.063674926757812
    7. ')' → logprob: -12.188674926757812
    8. ' ' → logprob: -13.563674926757812
    9. ' ' → logprob: -13.813674926757812
    10. '===' → logprob: -14.188674926757812

Token 85: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31331294775009155
    2. ' ==' → logprob: -1.3133130073547363
    3. '=' → logprob: -10.438312530517578
    4. ']==' → logprob: -11.063312530517578
    5. ')==' → logprob: -13.063312530517578
    6. '==
' → logprob: -13.813312530517578
    7. '===' → logprob: -13.938312530517578
    8. ')' → logprob: -13.938312530517578
    9. '()==' → logprob: -14.938312530517578
    10. ' ' → logprob: -15.438312530517578

Token 86: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.3868711292743683
    2. 'pattern' → logprob: -1.136871099472046
    3. '(pattern' → logprob: -17.011871337890625
    4. 'pat' → logprob: -18.761871337890625
    5. '.pattern' → logprob: -19.011871337890625
    6. '_pattern' → logprob: -19.011871337890625
    7. 'attern' → logprob: -20.511871337890625
    8. ' ' → logprob: -21.011871337890625
    9. 'patterns' → logprob: -21.636871337890625
    10. ' ' → logprob: -21.761871337890625

Token 87: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.723352049040841e-06
    2. 'pattern' → logprob: -12.500004768371582
    3. 'j' → logprob: -14.250004768371582
    4. '[' → logprob: -15.750004768371582
    5. '[i' → logprob: -15.875004768371582
    6. '   ' → logprob: -18.250003814697266
    7. '```' → logprob: -18.375003814697266
    8. '[
' → logprob: -18.500003814697266
    9. '	j' → logprob: -18.500003814697266
    10. ' [' → logprob: -18.625003814697266

Token 88: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4593302607536316
    2. ']:' → logprob: -1.7093303203582764
    3. '):' → logprob: -2.3343303203582764
    4. '):
' → logprob: -3.0843303203582764
    5. ']:
' → logprob: -3.7093303203582764
    6. ':
' → logprob: -4.084330081939697
    7. '       ' → logprob: -7.084330081939697
    8. ']' → logprob: -7.209330081939697
    9. ':j' → logprob: -7.209330081939697
    10. '}:' → logprob: -8.459330558776855

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0055404966697096825
    2. 'j' → logprob: -6.380540370941162
    3. ' j' → logprob: -6.755540370941162
    4. '		' → logprob: -7.505540370941162
    5. '	       ' → logprob: -7.505540370941162
    6. '<|end|>' → logprob: -7.505540370941162
    7. ' ' → logprob: -7.755540370941162
    8. '	j' → logprob: -9.00554084777832
    9. '               ' → logprob: -9.38054084777832
    10. '            
' → logprob: -9.63054084777832

Token 90: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.02213383838534355
    2. 'j' (adapté à ' j') → logprob: -3.8971338272094727
    3. '	j' → logprob: -7.147133827209473
    4. '               ' → logprob: -7.272133827209473
    5. '           ' → logprob: -9.522133827209473
    6. '	           ' → logprob: -12.022133827209473
    7. '[j' → logprob: -12.647133827209473
    8. ' ' → logprob: -12.772133827209473
    9. '_j' → logprob: -12.897133827209473
    10. '            ' → logprob: -12.897133827209473

Token 91: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8333976864814758
    2. ' +=' → logprob: -1.208397626876831
    3. '+=' → logprob: -1.333397626876831
    4. ' +' → logprob: -5.83339786529541
    5. '=' → logprob: -8.58339786529541
    6. ' =' → logprob: -11.08339786529541
    7. '   ' → logprob: -11.58339786529541
    8. '           ' → logprob: -11.95839786529541
    9. '1' → logprob: -12.20839786529541
    10. '<|end|>' → logprob: -12.20839786529541

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '<|end|>' → logprob: -20.125051498413086
    4. '   ' → logprob: -21.125051498413086
    5. '１' → logprob: -22.000051498413086
    6. '```' → logprob: -22.250051498413086
    7. '  ' → logprob: -22.500051498413086
    8. '۱' → logprob: -22.750051498413086
    9. '+' → logprob: -23.250051498413086
    10. '0' → logprob: -23.750051498413086

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -19.5
    4. '<|end|>' → logprob: -19.875
    5. '１' → logprob: -20.5625
    6. '۱' → logprob: -20.625
    7. '   ' → logprob: -21.375
    8. '१' → logprob: -21.375
    9. '১' → logprob: -21.4375
    10. '`' → logprob: -22.3125

Token 94: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5504994988441467
    2. '
' → logprob: -1.300499439239502
    3. ' fail' → logprob: -2.425499439239502
    4. 'fail' → logprob: -3.175499439239502
    5. '	fail' → logprob: -5.300499439239502
    6. '           ' → logprob: -5.425499439239502
    7. '```' → logprob: -5.550499439239502
    8. '<|end|>' → logprob: -6.050499439239502
    9. '[' → logprob: -6.675499439239502
    10. '   ' → logprob: -6.925499439239502

Token 95: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3249385356903076
    2. ' fail' → logprob: -1.9499385356903076
    3. 'fail' → logprob: -2.0749385356903076
    4. '           ' → logprob: -5.324938774108887
    5. '
' → logprob: -6.324938774108887
    6. '	fail' → logprob: -6.324938774108887
    7. '```' → logprob: -7.824938774108887
    8. ',' → logprob: -8.699938774108887
    9. '   ' → logprob: -8.699938774108887
    10. '	' → logprob: -9.449938774108887

Token 96: ' fail' (ID: 7111)
  Prédit: ' fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fail' → logprob: -0.47418639063835144
    2. 'fail' (adapté à ' fail') → logprob: -0.9741864204406738
    3. '       ' → logprob: -9.349185943603516
    4. '           ' → logprob: -10.849185943603516
    5. '	fail' → logprob: -13.474185943603516
    6. '   ' → logprob: -13.974185943603516
    7. '_fail' → logprob: -15.599185943603516
    8. '.fail' → logprob: -15.849185943603516
    9. ' ' → logprob: -15.849185943603516
    10. '        ' → logprob: -16.849185943603516

Token 97: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. '[j' → logprob: -12.75000286102295
    3. '[' → logprob: -15.25000286102295
    4. '[I' → logprob: -18.375003814697266
    5. '[u' → logprob: -21.625003814697266
    6. 'i' → logprob: -22.000003814697266
    7. '```' → logprob: -22.250003814697266
    8. '\[' → logprob: -22.625003814697266
    9. '[index' → logprob: -22.875003814697266
    10. '[m' → logprob: -22.875003814697266

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00037371189682744443
    2. ' ]' → logprob: -8.125373840332031
    3. ']=' → logprob: -9.625373840332031
    4. '=' → logprob: -11.625373840332031
    5. ' =' → logprob: -12.875373840332031
    6. ')' → logprob: -16.00037384033203
    7. '   ' → logprob: -18.12537384033203
    8. ' ' → logprob: -18.37537384033203
    9. '[' → logprob: -18.87537384033203
    10. ']+=' → logprob: -19.00037384033203

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687145709991455
    2. '=' → logprob: -1.1368714570999146
    3. ' ' → logprob: -15.011871337890625
    4. '=j' → logprob: -16.511871337890625
    5. '＝' → logprob: -17.511871337890625
    6. '=i' → logprob: -17.636871337890625
    7. '=int' → logprob: -19.136871337890625
    8. '.=' → logprob: -19.136871337890625
    9. ')' → logprob: -19.761871337890625
    10. ' =
' → logprob: -19.886871337890625

Token 100: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02975141443312168
    2. ' j' → logprob: -3.5297513008117676
    3. '	j' → logprob: -13.904751777648926
    4. '$j' → logprob: -18.52975082397461
    5. '   ' → logprob: -19.52975082397461
    6. ' ' → logprob: -19.65475082397461
    7. ' ' → logprob: -21.40475082397461
    8. '_j' → logprob: -22.02975082397461
    9. ':j' → logprob: -22.27975082397461
    10. '[j' → logprob: -22.27975082397461

Token 101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2943156361579895
    2. ' return' → logprob: -2.0443155765533447
    3. 'return' → logprob: -2.6693155765533447
    4. '	return' → logprob: -3.1693155765533447
    5. ':return' → logprob: -4.544315814971924
    6. '<|end|>' → logprob: -6.419315814971924
    7. '
' → logprob: -7.294315814971924
    8. '       ' → logprob: -8.044315338134766
    9. '_return' → logprob: -8.919315338134766
    10. '```' → logprob: -9.044315338134766

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04978397861123085
    2. 'return' → logprob: -3.049783945083618
    3. ' return' → logprob: -6.799784183502197
    4. '       ' → logprob: -10.299783706665039
    5. '	return' → logprob: -10.549783706665039
    6. '```' → logprob: -10.924783706665039
    7. ':return' → logprob: -12.674783706665039
    8. '_return' → logprob: -15.549783706665039
    9. '
' → logprob: -15.674783706665039
    10. '   ' → logprob: -16.42478370666504

Token 103: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004152718465775251
    2. ' return' → logprob: -5.629152774810791
    3. '   ' → logprob: -7.754152774810791
    4. '	return' → logprob: -9.129152297973633
    5. ' ' → logprob: -12.254152297973633
    6. ':return' → logprob: -12.254152297973633
    7. '       ' → logprob: -14.004152297973633
    8. '
' → logprob: -14.004152297973633
    9. '```' → logprob: -14.004152297973633
    10. 'eturn' → logprob: -14.254152297973633

Token 104: ' fail' (ID: 7111)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.0015023599844425917
    2. ' fail' → logprob: -6.501502513885498
    3. '	fail' → logprob: -17.001502990722656
    4. '.fail' → logprob: -20.001502990722656
    5. 'f' → logprob: -20.001502990722656
    6. 'failure' → logprob: -20.626502990722656
    7. '_fail' → logprob: -20.876502990722656
    8. ' ' → logprob: -21.001502990722656
    9. 'fa' → logprob: -21.126502990722656
    10. 'fails' → logprob: -21.251502990722656

Token 105: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007759823463857174
    2. '<|end|>' → logprob: -5.132760047912598
    3. '
' → logprob: -6.757760047912598
    4. '```' → logprob: -8.757760047912598
    5. '\' → logprob: -9.257760047912598
    6. '_' → logprob: -9.507760047912598
    7. '  
' → logprob: -9.757760047912598
    8. '#' → logprob: -9.757760047912598
    9. '

' → logprob: -10.007760047912598
    10. '<|end|>' → logprob: -10.382760047912598

Token 107: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.13651549816131592
    2. ' count' → logprob: -3.5115156173706055
    3. ' find' → logprob: -3.5115156173706055
    4. ' match' → logprob: -3.7615156173706055
    5. ' solve' → logprob: -4.2615156173706055
    6. ' main' → logprob: -5.0115156173706055
    7. ' ' → logprob: -5.2615156173706055
    8. ' search' → logprob: -5.6365156173706055
    9. ' pattern' → logprob: -5.6365156173706055
    10. ' compute' → logprob: -5.7615156173706055

Token 108: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0005190743831917644
    2. 'e' → logprob: -9.000518798828125
    3. 'n' → logprob: -9.125518798828125
    4. '_' → logprob: -9.375518798828125
    5. 'eep' → logprob: -9.500518798828125
    6. 'm' → logprob: -9.750518798828125
    7. '```' → logprob: -11.000518798828125
    8. 'MP' → logprob: -11.625518798828125
    9. '_mp' → logprob: -11.625518798828125
    10. 'pm' → logprob: -12.000518798828125

Token 109: '_next' (ID: 25436)
  Prédit: '(pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.18881869316101074
    2. '(text' → logprob: -2.8138186931610107
    3. '_search' → logprob: -2.8138186931610107
    4. '(' → logprob: -3.3138186931610107
    5. '_match' → logprob: -4.93881893157959
    6. '(search' → logprob: -5.56381893157959
    7. '_pattern' → logprob: -6.31381893157959
    8. '(query' → logprob: -7.31381893157959
    9. '(match' → logprob: -7.31381893157959
    10. '(p' → logprob: -7.81381893157959

Token 110: '_table' (ID: 11721)
  Prédit: '(pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.009962541982531548
    2. '(text' → logprob: -5.384962558746338
    3. '_pattern' → logprob: -6.509962558746338
    4. '(' → logprob: -6.634962558746338
    5. '(s' → logprob: -6.759962558746338
    6. '(match' → logprob: -8.63496208190918
    7. '_char' → logprob: -8.88496208190918
    8. '(p' → logprob: -8.88496208190918
    9. '(string' → logprob: -9.00996208190918
    10. '_state' → logprob: -9.38496208190918

Token 111: '(s' (ID: 1858)
  Prédit: '(pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -2.641841820150148e-05
    2. ' (' → logprob: -11.37502670288086
    3. '(p' → logprob: -11.37502670288086
    4. '(' → logprob: -13.00002670288086
    5. '(s' → logprob: -14.62502670288086
    6. '(prefix' → logprob: -15.62502670288086
    7. '(part' → logprob: -16.25002670288086
    8. 'pattern' → logprob: -16.37502670288086
    9. '(m' → logprob: -16.87502670288086
    10. '(match' → logprob: -17.25002670288086

Token 112: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007865179213695228
    2. ',' → logprob: -7.750786304473877
    3. '):
' → logprob: -8.250786781311035
    4. ' ):' → logprob: -10.250786781311035
    5. ')' → logprob: -10.625786781311035
    6. ':' → logprob: -10.750786781311035
    7. 's' → logprob: -12.125786781311035
    8. '   ' → logprob: -13.500786781311035
    9. '):
' → logprob: -13.750786781311035
    10. ',p' → logprob: -14.125786781311035

Token 113: ' patterns' (ID: 18587)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.2229948490858078
    2. ' pattern' → logprob: -1.7229948043823242
    3. 'p' → logprob: -4.222994804382324
    4. ' p' → logprob: -5.972994804382324
    5. 'pat' → logprob: -6.222994804382324
    6. ')' → logprob: -7.847994804382324
    7. '   ' → logprob: -7.972994804382324
    8. ' pat' → logprob: -8.097994804382324
    9. ' t' → logprob: -8.222994804382324
    10. 't' → logprob: -8.347994804382324

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026860401034355164
    2. '):
' → logprob: -3.651860475540161
    3. 's' → logprob: -7.651860237121582
    4. ',' → logprob: -10.526860237121582
    5. ')' → logprob: -11.151860237121582
    6. ':' → logprob: -11.651860237121582
    7. 'ts' → logprob: -11.901860237121582
    8. 't' → logprob: -12.276860237121582
    9. '[]):' → logprob: -12.401860237121582
    10. '_list' → logprob: -12.526860237121582

Token 115: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1026831716299057
    2. '   ' → logprob: -2.3526830673217773
    3. '<|end|>' → logprob: -7.352683067321777
    4. ':
' → logprob: -7.602683067321777
    5. ' :' → logprob: -7.852683067321777
    6. '):' → logprob: -8.227683067321777
    7. '[' → logprob: -8.852683067321777
    8. ',' → logprob: -8.977683067321777
    9. '():' → logprob: -9.602683067321777
    10. '[]' → logprob: -9.852683067321777

Token 116: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4533407688140869
    2. 'n' → logprob: -1.328340768814087
    3. ' m' → logprob: -3.453340768814087
    4. '   ' → logprob: -3.953340768814087
    5. ' from' → logprob: -4.578340530395508
    6. ' next' → logprob: -4.578340530395508
    7. ' dp' → logprob: -5.078340530395508
    8. ' res' → logprob: -5.453340530395508
    9. 'dp' → logprob: -5.578340530395508
    10. 'm' → logprob: -5.578340530395508

Token 117: ' Pour' (ID: 13931)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5644303560256958
    2. ' n' → logprob: -1.1894303560256958
    3. ' from' → logprob: -3.3144302368164062
    4. 'from' → logprob: -3.3144302368164062
    5. 'dp' → logprob: -3.8144302368164062
    6. ' res' → logprob: -4.439430236816406
    7. ' dp' → logprob: -5.439430236816406
    8. 'res' → logprob: -5.814430236816406
    9. ' m' → logprob: -5.939430236816406
    10. ' result' → logprob: -6.439430236816406

Token 118: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4915688931941986
    2. ' i' → logprob: -1.491568922996521
    3. ' p' → logprob: -2.6165688037872314
    4. ' pattern' → logprob: -3.2415688037872314
    5. ' chaque' → logprob: -4.2415690422058105
    6. ' ' → logprob: -4.9915690422058105
    7. '  ' → logprob: -4.9915690422058105
    8. '   ' → logprob: -5.1165690422058105
    9. ' each' → logprob: -5.4915690422058105
    10. ' t' → logprob: -6.1165690422058105

Token 119: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.03682807460427284
    2. ' pattern' → logprob: -3.41182804107666
    3. 'p' → logprob: -6.41182804107666
    4. 'pat' → logprob: -6.53682804107666
    5. ' p' → logprob: -9.66182804107666
    6. ' motif' → logprob: -12.16182804107666
    7. ' pat' → logprob: -12.66182804107666
    8. 'pos' → logprob: -13.16182804107666
    9. 'mot' → logprob: -13.28682804107666
    10. 'i' → logprob: -13.41182804107666

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5962923765182495
    2. ':' → logprob: -0.8462923765182495
    3. ' in' → logprob: -4.721292495727539
    4. 'in' → logprob: -5.471292495727539
    5. ' ,' → logprob: -5.596292495727539
    6. ':
' → logprob: -6.596292495727539
    7. ' :' → logprob: -7.346292495727539
    8. '[' → logprob: -8.346292495727539
    9. '):' → logprob: -8.346292495727539
    10. '[i' → logprob: -8.721292495727539

Token 121: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11334589123725891
    2. ' next' → logprob: -3.1133458614349365
    3. '<|end|>' → logprob: -3.1133458614349365
    4. 'next' → logprob: -5.488346099853516
    5. ' on' → logprob: -6.363346099853516
    6. ' return' → logprob: -6.488346099853516
    7. '...' → logprob: -6.488346099853516
    8. '<|end|>' → logprob: -6.738346099853516
    9. ' result' → logprob: -6.863346099853516
    10. ' tokens' → logprob: -7.238346099853516

Token 122: ' calc' (ID: 25691)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7825385928153992
    2. ' for' → logprob: -2.157538652420044
    3. ' crée' → logprob: -2.282538652420044
    4. '   ' → logprob: -2.532538652420044
    5. 'ret' → logprob: -3.407538652420044
    6. 'def' → logprob: -4.032538414001465
    7. 'calcul' → logprob: -4.157538414001465
    8. 'build' → logprob: -4.532538414001465
    9. ' stock' → logprob: -4.657538414001465
    10. 's' → logprob: -4.657538414001465

Token 123: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0002703953068703413
    2. 'ul' → logprob: -8.87527084350586
    3. '```' → logprob: -10.00027084350586
    4. 'cule' → logprob: -10.87527084350586
    5. 'le' → logprob: -11.12527084350586
    6. 'l' → logprob: -11.87527084350586
    7. '#' → logprob: -12.37527084350586
    8. 'ulate' → logprob: -12.75027084350586
    9. '**' → logprob: -12.75027084350586
    10. '[' → logprob: -12.87527084350586

Token 124: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0996026992797852
    2. '   ' → logprob: -1.7246026992797852
    3. '[]' → logprob: -1.7246026992797852
    4. ' leur' → logprob: -1.9746026992797852
    5. ' le' → logprob: -3.349602699279785
    6. '[' → logprob: -3.599602699279785
    7. 'leur' → logprob: -3.724602699279785
    8. ' leurs' → logprob: -4.099602699279785
    9. ' les' → logprob: -4.724602699279785
    10. ' their' → logprob: -4.974602699279785

Token 125: ' transition' (ID: 14463)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.1903897523880005
    2. ' fail' → logprob: -3.190389633178711
    3. 'next' → logprob: -3.190389633178711
    4. 'failure' → logprob: -3.815389633178711
    5. 'table' → logprob: -4.065389633178711
    6. 'liste' → logprob: -4.315389633178711
    7. ' next' → logprob: -5.065389633178711
    8. ' prochaine' → logprob: -5.190389633178711
    9. ' table' → logprob: -5.315389633178711
    10. ' longueur' → logprob: -5.440389633178711

Token 126: ' f' (ID: 285)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02787834405899048
    2. '[]' → logprob: -5.152878284454346
    3. 'def' → logprob: -5.277878284454346
    4. 'states' → logprob: -5.402878284454346
    5. '(s' → logprob: -6.152878284454346
    6. '[' → logprob: -6.652878284454346
    7. '_states' → logprob: -7.277878284454346
    8. 'matrix' → logprob: -7.402878284454346
    9. '[s' → logprob: -7.527878284454346
    10. '   ' → logprob: -7.527878284454346

Token 127: '[i' (ID: 1768)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.2756985127925873
    2. 'ail' → logprob: -2.15069842338562
    3. 'ailure' → logprob: -2.15069842338562
    4. 'rom' → logprob: -5.400698661804199
    5. 'unction' → logprob: -6.150698661804199
    6. 'ails' → logprob: -8.0256986618042
    7. 'a' → logprob: -8.1506986618042
    8. '[]' → logprob: -8.6506986618042
    9. '[' → logprob: -9.0256986618042
    10. 'orm' → logprob: -9.6506986618042

Token 128: '][' (ID: 2696)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.01219597551971674
    2. '][' → logprob: -4.887196063995361
    3. ']' → logprob: -6.012196063995361
    4. 'r' → logprob: -6.887196063995361
    5. 'ur' → logprob: -7.637196063995361
    6. 'rom' → logprob: -8.137195587158203
    7. 'unction' → logprob: -8.887195587158203
    8. 'orc' → logprob: -10.137195587158203
    9. ' or' → logprob: -11.262195587158203
    10. ']['' → logprob: -11.387195587158203

Token 129: 'c' (ID: 66)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8179284930229187
    2. ']' → logprob: -1.4429285526275635
    3. 'pattern' → logprob: -1.8179285526275635
    4. 's' → logprob: -3.0679285526275635
    5. 'c' → logprob: -3.8179285526275635
    6. 'i' → logprob: -3.8179285526275635
    7. 'len' → logprob: -4.317928314208984
    8. '0' → logprob: -4.317928314208984
    9. 'pat' → logprob: -4.442928314208984
    10. 'p' → logprob: -4.692928314208984

Token 130: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009489966556429863
    2. 'or' → logprob: -4.884490013122559
    3. ' ]' → logprob: -6.884490013122559
    4. 'ur' → logprob: -8.759490013122559
    5. ']=' → logprob: -9.134490013122559
    6. '][' → logprob: -9.259490013122559
    7. ']:' → logprob: -9.634490013122559
    8. '']' → logprob: -9.759490013122559
    9. '],' → logprob: -9.884490013122559
    10. 'orm' → logprob: -10.259490013122559

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10044744610786438
    2. ':' → logprob: -2.475447416305542
    3. ' for' → logprob: -6.225447654724121
    4. ' :' → logprob: -6.350447654724121
    5. ',' → logprob: -6.475447654724121
    6. ' =' → logprob: -6.975447654724121
    7. '[' → logprob: -7.475447654724121
    8. ' ' → logprob: -7.600447654724121
    9. '<|end|>' → logprob: -7.600447654724121
    10. '
' → logprob: -7.725447654724121

Token 132: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0401744842529297
    2. '   ' → logprob: -1.2901744842529297
    3. ' n' → logprob: -1.5401744842529297
    4. ' f' → logprob: -2.2901744842529297
    5. 'f' → logprob: -3.4151744842529297
    6. ' transitions' → logprob: -4.66517448425293
    7. 'm' → logprob: -5.91517448425293
    8. ' m' → logprob: -6.29017448425293
    9. ' next' → logprob: -6.54017448425293
    10. ']' → logprob: -6.79017448425293

Token 133: ' ici' (ID: 27994)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5772780179977417
    2. 'n' → logprob: -1.0772780179977417
    3. ' f' → logprob: -2.9522781372070312
    4. ' transitions' → logprob: -4.452278137207031
    5. 'f' → logprob: -4.577278137207031
    6. ' res' → logprob: -4.827278137207031
    7. ' next' → logprob: -5.577278137207031
    8. '   ' → logprob: -5.702278137207031
    9. ' result' → logprob: -6.327278137207031
    10. ' max' → logprob: -6.452278137207031

Token 134: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6147393584251404
    2. '   ' → logprob: -2.114739418029785
    3. ' f' → logprob: -2.364739418029785
    4. ':' → logprob: -2.864739418029785
    5. '
' → logprob: -2.989739418029785
    6. '    ' → logprob: -3.364739418029785
    7. ' m' → logprob: -3.739739418029785
    8. ' n' → logprob: -3.989739418029785
    9. ' :' → logprob: -3.989739418029785
    10. ',' → logprob: -4.739739418029785

Token 135: ' s' (ID: 265)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5903825759887695
    2. ' f' → logprob: -1.2153825759887695
    3. 'n' → logprob: -2.3403825759887695
    4. ' n' → logprob: -3.4653825759887695
    5. ' transitions' → logprob: -5.5903825759887695
    6. ' pass' → logprob: -5.7153825759887695
    7. ' for' → logprob: -5.8403825759887695
    8. ' res' → logprob: -6.0903825759887695
    9. ' next' → logprob: -6.2153825759887695
    10. 'for' → logprob: -6.7153825759887695

Token 136: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.684302806854248
    2. '_len' → logprob: -1.434302806854248
    3. '_length' → logprob: -2.309302806854248
    4. '=' → logprob: -2.309302806854248
    5. ')' → logprob: -3.184302806854248
    6. 'len' → logprob: -5.684302806854248
    7. 'length' → logprob: -5.934302806854248
    8. ',' → logprob: -6.059302806854248
    9. ' is' → logprob: -6.184302806854248
    10. '_lengths' → logprob: -6.934302806854248

Token 137: ' une' (ID: 2463)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.23211829364299774
    2. ' la' → logprob: -2.9821183681488037
    3. 's' → logprob: -3.1071183681488037
    4. ' len' → logprob: -3.7321183681488037
    5. 'la' → logprob: -3.8571183681488037
    6. 'une' → logprob: -4.107118129730225
    7. 'le' → logprob: -4.607118129730225
    8. ' une' → logprob: -4.732118129730225
    9. ' s' → logprob: -5.232118129730225
    10. 'patterns' → logprob: -5.232118129730225

Token 138: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.1487740278244019
    2. ' chaîne' → logprob: -1.1487740278244019
    3. 'string' → logprob: -2.0237741470336914
    4. 'str' → logprob: -2.6487741470336914
    5. ' string' → logprob: -2.8987741470336914
    6. 'liste' → logprob: -3.0237741470336914
    7. ' chaine' → logprob: -3.7737741470336914
    8. ' liste' → logprob: -4.773774147033691
    9. 'list' → logprob: -4.898774147033691
    10. 'cha' → logprob: -5.148774147033691

Token 139: ',' (ID: 11)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6216176152229309
    2. '[]' → logprob: -2.121617555618286
    3. '   ' → logprob: -2.746617555618286
    4. ')' → logprob: -2.871617555618286
    5. 'def' → logprob: -3.121617555618286
    6. 'de' → logprob: -3.746617555618286
    7. '[' → logprob: -3.871617555618286
    8. ',' → logprob: -4.121617794036865
    9. ' =' → logprob: -4.121617794036865
    10. ' of' → logprob: -4.496617794036865

Token 140: ' on' (ID: 402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9829069972038269
    2. ' n' → logprob: -1.3579070568084717
    3. 'm' → logprob: -1.4829070568084717
    4. ' patterns' → logprob: -3.2329070568084717
    5. 'patterns' → logprob: -3.4829070568084717
    6. ' m' → logprob: -3.6079070568084717
    7. '   ' → logprob: -3.9829070568084717
    8. ' f' → logprob: -4.982906818389893
    9. 'f' → logprob: -5.732906818389893
    10. ' s' → logprob: -5.857906818389893

Token 141: ' veut' (ID: 41653)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7095654010772705
    2. 'len' → logprob: -1.7095654010772705
    3. ' crée' → logprob: -1.9595654010772705
    4. ' veut' → logprob: -2.3345654010772705
    5. ' suppose' → logprob: -2.3345654010772705
    6. ' va' → logprob: -2.7095654010772705
    7. ' initialize' → logprob: -3.7095654010772705
    8. ' initialise' → logprob: -3.7095654010772705
    9. 'initialize' → logprob: -3.8345654010772705
    10. 'n' → logprob: -4.209565162658691

Token 142: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4763500988483429
    2. 'len' → logprob: -1.2263500690460205
    3. 'f' → logprob: -3.7263500690460205
    4. ' construire' → logprob: -4.6013503074646
    5. 'build' → logprob: -4.7263503074646
    6. ' len' → logprob: -4.8513503074646
    7. ' f' → logprob: -5.4763503074646
    8. 'for' → logprob: -5.7263503074646
    9. '    ' → logprob: -5.8513503074646
    10. ' créer' → logprob: -5.9763503074646

Token 143: ' chaque' (ID: 21194)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.657429039478302
    2. 'j' → logprob: -1.0324289798736572
    3. 'rray' → logprob: -3.6574289798736572
    4. 'rr' → logprob: -3.6574289798736572
    5. 'cc' → logprob: -4.032429218292236
    6. 'lle' → logprob: -4.782429218292236
    7. 'llo' → logprob: -4.782429218292236
    8. 'vec' → logprob: -5.282429218292236
    9. 'pp' → logprob: -5.282429218292236
    10. 'l' → logprob: -5.782429218292236

Token 144: ' indice' (ID: 90848)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.373336523771286
    2. 'indice' → logprob: -2.3733365535736084
    3. ' position' → logprob: -2.7483365535736084
    4. 'index' → logprob: -2.7483365535736084
    5. 'i' → logprob: -3.7483365535736084
    6. 'ét' → logprob: -4.498336315155029
    7. 'pos' → logprob: -4.873336315155029
    8. 'transition' → logprob: -4.873336315155029
    9. ' étape' → logprob: -4.998336315155029
    10. ' i' → logprob: -5.373336315155029

Token 145: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7056797742843628
    2. ' de' → logprob: -2.0806798934936523
    3. ',' → logprob: -2.3306798934936523
    4. ' s' → logprob: -3.3306798934936523
    5. ' ,' → logprob: -3.4556798934936523
    6. '[i' → logprob: -3.4556798934936523
    7. ' ' → logprob: -3.8306798934936523
    8. '_' → logprob: -3.9556798934936523
    9. 's' → logprob: -4.080679893493652
    10. ' [' → logprob: -4.455679893493652

Token 146: ' passage' (ID: 26368)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.896701455116272
    2. 'next' → logprob: -1.521701455116272
    3. ' nombre' → logprob: -2.1467013359069824
    4. 'nombre' → logprob: -2.6467013359069824
    5. ' tableau' → logprob: -3.0217013359069824
    6. 'len' → logprob: -3.1467013359069824
    7. ' transition' → logprob: -4.396701335906982
    8. ' prochain' → logprob: -4.646701335906982
    9. 's' → logprob: -4.771701335906982
    10. 'transition' → logprob: -4.896701335906982

Token 147: ' dans' (ID: 2671)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.27076256275177
    2. ' à' → logprob: -1.89576256275177
    3. ' de' → logprob: -2.0207624435424805
    4. ' au' → logprob: -2.1457624435424805
    5. ' des' → logprob: -2.6457624435424805
    6. ' ' → logprob: -2.8957624435424805
    7. ' suivant' → logprob: -3.1457624435424805
    8. ' aux' → logprob: -3.2707624435424805
    9. ' suivante' → logprob: -3.5207624435424805
    10. ' to' → logprob: -3.8957624435424805

Token 148: ' l' (ID: 305)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -1.223841905593872
    2. ' la' → logprob: -2.098841905593872
    3. 'the' → logprob: -2.473841905593872
    4. 'la' → logprob: -2.598841905593872
    5. 'le' → logprob: -2.848841905593872
    6. 's' → logprob: -2.973841905593872
    7. ' le' → logprob: -3.098841905593872
    8. 'len' → logprob: -3.098841905593872
    9. ' the' → logprob: -3.223841905593872
    10. ' patterns' → logprob: -3.598841905593872

Token 149: ''aut' (ID: 20714)
  Prédit: ''aut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aut' → logprob: -0.44509226083755493
    2. ''état' → logprob: -1.1950922012329102
    3. 'e' → logprob: -3.94509220123291
    4. 'a' → logprob: -3.94509220123291
    5. ''é' → logprob: -4.44509220123291
    6. 'autom' → logprob: -6.07009220123291
    7. ''' → logprob: -7.07009220123291
    8. ''al' → logprob: -7.19509220123291
    9. 'es' → logprob: -7.94509220123291
    10. ''ét' → logprob: -8.19509220123291

Token 150: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.009535547345876694
    2. 'o' → logprob: -5.134535312652588
    3. 'omation' → logprob: -6.259535312652588
    4. 'omat' → logprob: -8.009535789489746
    5. '```' → logprob: -8.009535789489746
    6. 'омат' → logprob: -8.509535789489746
    7. 'omne' → logprob: -9.509535789489746
    8. 'oma' → logprob: -9.759535789489746
    9. 'ocomplete' → logprob: -9.759535789489746
    10. 'omone' → logprob: -9.759535789489746

Token 151: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.0005002511315979064
    2. 'a' → logprob: -7.875500202178955
    3. 'e' → logprob: -10.500500679016113
    4. 'athe' → logprob: -11.125500679016113
    5. '```' → logprob: -11.625500679016113
    6. 'aton' → logprob: -11.625500679016113
    7. ')' → logprob: -12.000500679016113
    8. '
' → logprob: -12.000500679016113
    9. 'at' → logprob: -12.125500679016113
    10. '}' → logprob: -12.250500679016113

Token 152: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42858922481536865
    2. ':' → logprob: -1.8035892248153687
    3. 'def' → logprob: -2.303589344024658
    4. ' :' → logprob: -3.803589344024658
    5. '
' → logprob: -4.303589344024658
    6. ' ' → logprob: -4.428589344024658
    7. ' def' → logprob: -4.803589344024658
    8. ',' → logprob: -5.053589344024658
    9. '<|end|>' → logprob: -5.803589344024658
    10. '  ' → logprob: -6.053589344024658

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09534278512001038
    2. ':' → logprob: -2.7203428745269775
    3. 'def' → logprob: -4.345342636108398
    4. '):' → logprob: -6.345342636108398
    5. '
' → logprob: -6.720342636108398
    6. ')' → logprob: -6.720342636108398
    7. 'm' → logprob: -6.845342636108398
    8. ',' → logprob: -7.220342636108398
    9. ' :' → logprob: -7.345342636108398
    10. '<|end|>' → logprob: -7.595342636108398

Token 154: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2878488600254059
    2. 'n' → logprob: -2.162848949432373
    3. '   ' → logprob: -2.662848949432373
    4. ' m' → logprob: -2.912848949432373
    5. 'm' → logprob: -5.037848949432373
    6. ' length' → logprob: -6.537848949432373
    7. ' dp' → logprob: -7.787848949432373
    8. ' max' → logprob: -7.912848949432373
    9. ' transitions' → logprob: -8.287848472595215
    10. ' next' → logprob: -8.287848472595215

Token 155: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10216884315013885
    2. 'm' → logprob: -3.2271687984466553
    3. ' n' → logprob: -3.2271687984466553
    4. 'f' → logprob: -5.852169036865234
    5. ' m' → logprob: -6.102169036865234
    6. '   ' → logprob: -6.227169036865234
    7. ' res' → logprob: -6.352169036865234
    8. 'dp' → logprob: -6.352169036865234
    9. 'max' → logprob: -6.352169036865234
    10. ' transitions' → logprob: -6.977169036865234

Token 156: ' travaille' (ID: 92596)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7416911125183105
    2. '   ' → logprob: -2.3666911125183105
    3. ' continue' → logprob: -2.4916911125183105
    4. ' =' → logprob: -2.6166911125183105
    5. 'n' → logprob: -2.8666911125183105
    6. ' return' → logprob: -2.9916911125183105
    7. ' initialize' → logprob: -2.9916911125183105
    8. ' def' → logprob: -3.1166911125183105
    9. ' n' → logprob: -3.2416911125183105
    10. ' s' → logprob: -3.4916911125183105

Token 157: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9859260320663452
    2. ' with' → logprob: -1.8609260320663452
    3. ' avec' → logprob: -1.8609260320663452
    4. 'sur' → logprob: -2.4859261512756348
    5. 'with' → logprob: -2.8609261512756348
    6. ' sur' → logprob: -3.1109261512756348
    7. ' on' → logprob: -3.6109261512756348
    8. ' à' → logprob: -3.8609261512756348
    9. 's' → logprob: -3.9859261512756348
    10. 'avec' → logprob: -4.735926151275635

Token 158: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5553571581840515
    2. '26' → logprob: -1.9303572177886963
    3. ' ord' → logprob: -2.5553572177886963
    4. 'pattern' → logprob: -3.1803572177886963
    5. ' len' → logprob: -3.8053572177886963
    6. 'ord' → logprob: -3.9303572177886963
    7. ' alphabet' → logprob: -4.180356979370117
    8. 'alphabet' → logprob: -4.305356979370117
    9. 'a' → logprob: -4.430356979370117
    10. 's' → logprob: -4.555356979370117

Token 159: ' même' (ID: 9679)
  Prédit: ' alphabet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' alphabet' → logprob: -1.1918978691101074
    2. 'len' → logprob: -1.6918978691101074
    3. 'alphabet' → logprob: -1.8168978691101074
    4. 's' → logprob: -2.3168978691101074
    5. 'import' → logprob: -2.9418978691101074
    6. 'def' → logprob: -3.4418978691101074
    7. 'pattern' → logprob: -3.5668978691101074
    8. 'm' → logprob: -3.6918978691101074
    9. ' pattern' → logprob: -4.441897869110107
    10. 'ord' → logprob: -4.566897869110107

Token 160: ' technique' (ID: 16410)
  Prédit: 'alphabet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alphabet' → logprob: -0.8454502820968628
    2. 'def' → logprob: -1.4704502820968628
    3. 'for' → logprob: -2.3454504013061523
    4. 'indent' → logprob: -2.8454504013061523
    5. ' alphabet' → logprob: -3.0954504013061523
    6. 'pattern' → logprob: -3.7204504013061523
    7. 'len' → logprob: -4.220450401306152
    8. ' longueur' → logprob: -4.345450401306152
    9. 'charset' → logprob: -4.720450401306152
    10. 'fonction' → logprob: -4.845450401306152

Token 161: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.62594074010849
    2. ' for' → logprob: -1.8759407997131348
    3. ' de' → logprob: -2.8759407997131348
    4. 'def' → logprob: -3.0009407997131348
    5. ',' → logprob: -3.1259407997131348
    6. ' of' → logprob: -3.3759407997131348
    7. 'for' → logprob: -3.3759407997131348
    8. 'de' → logprob: -4.375940799713135
    9. ' d' → logprob: -4.500940799713135
    10. ' s' → logprob: -4.625940799713135

Token 162: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.274271845817566
    2. 'pattern' → logprob: -1.774271845817566
    3. ' construire' → logprob: -1.899271845817566
    4. ' pattern' → logprob: -2.0242719650268555
    5. ' le' → logprob: -3.5242719650268555
    6. 'les' → logprob: -3.6492719650268555
    7. ' les' → logprob: -3.8992719650268555
    8. 'l' → logprob: -3.8992719650268555
    9. 'p' → logprob: -4.3992719650268555
    10. ' la' → logprob: -4.3992719650268555

Token 163: ' saison' (ID: 38158)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.07933663576841354
    2. ' pattern' → logprob: -2.579336643218994
    3. 'pat' → logprob: -8.079336166381836
    4. 'p' → logprob: -9.829336166381836
    5. 'def' → logprob: -10.829336166381836
    6. 'character' → logprob: -11.454336166381836
    7. 'char' → logprob: -11.579336166381836
    8. 'c' → logprob: -11.704336166381836
    9. 'for' → logprob: -12.079336166381836
    10. ' for' → logprob: -12.579336166381836

Token 164: ' word' (ID: 2195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3575807213783264
    2. ':' → logprob: -2.3575806617736816
    3. '<|end|>' → logprob: -2.4825806617736816
    4. 'def' → logprob: -3.6075806617736816
    5. '
' → logprob: -3.7325806617736816
    6. ' :' → logprob: -3.8575806617736816
    7. ' ' → logprob: -4.482580661773682
    8. '<|end|>' → logprob: -5.107580661773682
    9. ' =' → logprob: -5.607580661773682
    10. '  
' → logprob: -5.607580661773682

Token 165: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8953089118003845
    2. '   ' → logprob: -1.8953089714050293
    3. 'def' → logprob: -2.5203089714050293
    4. '
' → logprob: -2.8953089714050293
    5. 's' → logprob: -3.0203089714050293
    6. ' :' → logprob: -3.1453089714050293
    7. '<|end|>' → logprob: -3.1453089714050293
    8. ' ' → logprob: -3.2703089714050293
    9. ')' → logprob: -3.6453089714050293
    10. '[' → logprob: -3.7703089714050293

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1861610859632492
    2. ':' → logprob: -2.6861610412597656
    3. '
' → logprob: -2.6861610412597656
    4. ' :' → logprob: -4.811161041259766
    5. 'def' → logprob: -5.311161041259766
    6. '    
' → logprob: -5.686161041259766
    7. ' 
' → logprob: -5.811161041259766
    8. ' ' → logprob: -6.061161041259766
    9. '  
' → logprob: -6.061161041259766
    10. '<|end|>' → logprob: -6.686161041259766

Token 167: ' next' (ID: 2613)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.709118664264679
    2. ' n' → logprob: -1.4591186046600342
    3. '   ' → logprob: -1.4591186046600342
    4. 'm' → logprob: -4.084118843078613
    5. ' m' → logprob: -4.709118843078613
    6. ')' → logprob: -6.084118843078613
    7. ':' → logprob: -6.209118843078613
    8. ' 
' → logprob: -6.709118843078613
    9. ' s' → logprob: -6.834118843078613
    10. ' length' → logprob: -6.834118843078613

Token 168: '_tables' (ID: 88363)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.40628647804260254
    2. ' =' → logprob: -1.7812864780426025
    3. '_' → logprob: -2.1562864780426025
    4. '=' → logprob: -3.9062864780426025
    5. '_tables' → logprob: -3.9062864780426025
    6. 's' → logprob: -5.031286239624023
    7. '=[]' → logprob: -7.531286239624023
    8. '   ' → logprob: -7.656286239624023
    9. '_tab' → logprob: -8.031286239624023
    10. '_=' → logprob: -8.156286239624023

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043050460517406464
    2. '=' → logprob: -3.168050527572632
    3. '=[]' → logprob: -10.168050765991211
    4. '[]' → logprob: -12.543050765991211
    5. '[' → logprob: -12.543050765991211
    6. 's' → logprob: -13.168050765991211
    7. ' ' → logprob: -14.168050765991211
    8. '={}' → logprob: -14.293050765991211
    9. ',' → logprob: -14.418050765991211
    10. '[:]' → logprob: -15.168050765991211

Token 170: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07998644560575485
    2. ' []' → logprob: -2.579986333847046
    3. '{}' → logprob: -6.829986572265625
    4. ' {}' → logprob: -11.829986572265625
    5. '[' → logprob: -12.204986572265625
    6. ' [{}' → logprob: -13.454986572265625
    7. '[]}' → logprob: -13.829986572265625
    8. '[]
' → logprob: -15.079986572265625
    9. '[]

' → logprob: -16.454986572265625
    10. ' [' → logprob: -16.704986572265625

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08586343377828598
    2. ' for' → logprob: -2.7108633518218994
    3. 'for' → logprob: -4.9608635902404785
    4. ' ' → logprob: -6.0858635902404785
    5. '<|end|>' → logprob: -6.3358635902404785
    6. '	for' → logprob: -6.5858635902404785
    7. '    
' → logprob: -6.7108635902404785
    8. ' =' → logprob: -7.5858635902404785
    9. '  
' → logprob: -8.08586311340332
    10. ')' → logprob: -8.58586311340332

Token 172: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3132711946964264
    2. ' for' → logprob: -1.313271164894104
    3. '   ' → logprob: -12.188271522521973
    4. 'n' → logprob: -12.563271522521973
    5. ' n' → logprob: -15.188271522521973
    6. 'm' → logprob: -15.688271522521973
    7. ' m' → logprob: -16.188270568847656
    8. '	for' → logprob: -16.313270568847656
    9. 'def' → logprob: -16.688270568847656
    10. 'from' → logprob: -16.938270568847656

Token 173: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38694867491722107
    2. ' for' → logprob: -1.1369487047195435
    3. 'n' → logprob: -9.761948585510254
    4. ' n' → logprob: -11.386948585510254
    5. '   ' → logprob: -13.136948585510254
    6. 'def' → logprob: -13.886948585510254
    7. 'from' → logprob: -14.011948585510254
    8. 'm' → logprob: -14.136948585510254
    9. 'return' → logprob: -14.511948585510254
    10. 'pattern' → logprob: -14.511948585510254

Token 174: ' retourne' (ID: 178818)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10137519985437393
    2. 'for' → logprob: -2.351375102996826
    3. '=' → logprob: -7.851375102996826
    4. ' =' → logprob: -7.851375102996826
    5. '   ' → logprob: -9.226375579833984
    6. 's' → logprob: -10.101375579833984
    7. ' ' → logprob: -10.226375579833984
    8. ' continue' → logprob: -10.226375579833984
    9. ' range' → logprob: -10.601375579833984
    10. 'def' → logprob: -10.851375579833984

Token 175: ' un' (ID: 537)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.27589765191078186
    2. ' []' → logprob: -1.6508976221084595
    3. 'next' → logprob: -3.400897741317749
    4. '[]' → logprob: -4.27589750289917
    5. ' [' → logprob: -7.52589750289917
    6. '[next' → logprob: -7.52589750289917
    7. ' None' → logprob: -8.150897979736328
    8. ' ' → logprob: -8.275897979736328
    9. 'None' → logprob: -9.525897979736328
    10. '  ' → logprob: -9.775897979736328

Token 176: ' tableau' (ID: 67053)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.15256114304065704
    2. ' []' → logprob: -2.4025611877441406
    3. ' array' → logprob: -4.027561187744141
    4. '[' → logprob: -4.277561187744141
    5. ' [' → logprob: -4.777561187744141
    6. 'array' → logprob: -5.902561187744141
    7. ' empty' → logprob: -5.902561187744141
    8. 'empty' → logprob: -6.402561187744141
    9. ' [[]' → logprob: -7.277561187744141
    10. 'list' → logprob: -8.02756118774414

Token 177: ':' (ID: 25)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.021359883248806
    2. ' of' → logprob: -4.646359920501709
    3. ' []' → logprob: -5.771359920501709
    4. '[' → logprob: -6.271359920501709
    5. '=[]' → logprob: -6.396359920501709
    6. ' de' → logprob: -6.521359920501709
    7. 'of' → logprob: -7.271359920501709
    8. '   ' → logprob: -7.521359920501709
    9. '[][]' → logprob: -7.896359920501709
    10. 'des' → logprob: -8.64635944366455

Token 178: ' pour' (ID: 1930)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6553694009780884
    2. '[]' → logprob: -0.7803694009780884
    3. ' [' → logprob: -4.780369281768799
    4. '[' → logprob: -4.780369281768799
    5. ' next' → logprob: -6.530369281768799
    6. ' for' → logprob: -6.655369281768799
    7. '[next' → logprob: -7.280369281768799
    8. ' [[]' → logprob: -7.780369281768799
    9. ' [
' → logprob: -7.905369281768799
    10. '[
' → logprob: -8.155369758605957

Token 179: ' chaque' (ID: 21194)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.2602635324001312
    2. 'pattern' → logprob: -1.8852635622024536
    3. ' chaque' → logprob: -3.760263442993164
    4. ' _' → logprob: -4.135263442993164
    5. ' p' → logprob: -4.635263442993164
    6. ' each' → logprob: -4.760263442993164
    7. ' i' → logprob: -5.385263442993164
    8. '_' → logprob: -5.635263442993164
    9. 'pat' → logprob: -6.135263442993164
    10. ' pat' → logprob: -6.135263442993164

Token 180: ' saison' (ID: 38158)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5429972410202026
    2. ' pattern' → logprob: -0.9179972410202026
    3. 'pat' → logprob: -5.167997360229492
    4. 'p' → logprob: -5.792997360229492
    5. ' pat' → logprob: -5.792997360229492
    6. ' p' → logprob: -5.792997360229492
    7. ' c' → logprob: -7.042997360229492
    8. ' i' → logprob: -7.292997360229492
    9. ' next' → logprob: -7.542997360229492
    10. 'i' → logprob: -7.542997360229492

Token 181: ' word' (ID: 2195)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.667310357093811
    2. '   ' → logprob: -2.0423102378845215
    3. '[]' → logprob: -2.1673102378845215
    4. '[' → logprob: -2.5423102378845215
    5. ' ,' → logprob: -3.4173102378845215
    6. '_' → logprob: -3.5423102378845215
    7. ' s' → logprob: -4.5423102378845215
    8. ' _' → logprob: -4.6673102378845215
    9. ' =' → logprob: -4.6673102378845215
    10. '[
' → logprob: -4.7923102378845215

Token 182: ' k' (ID: 372)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13849316537380219
    2. ' ,' → logprob: -3.388493061065674
    3. '[' → logprob: -3.763493061065674
    4. '[]' → logprob: -3.888493061065674
    5. '   ' → logprob: -4.013493061065674
    6. ' =' → logprob: -4.513493061065674
    7. ' de' → logprob: -5.263493061065674
    8. '[i' → logprob: -6.013493061065674
    9. ' for' → logprob: -6.513493061065674
    10. ':' → logprob: -6.638493061065674

Token 183: ' 
' (ID: 793)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04426702857017517
    2. 'ey' → logprob: -4.169267177581787
    3. ' ,' → logprob: -4.544267177581787
    4. '_next' → logprob: -5.419267177581787
    5. '[' → logprob: -6.169267177581787
    6. 'ernel' → logprob: -6.419267177581787
    7. ' =' → logprob: -6.419267177581787
    8. '=' → logprob: -6.419267177581787
    9. ' next' → logprob: -6.669267177581787
    10. 'e' → logprob: -7.169267177581787

Token 184: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1439158171415329
    2. ' in' → logprob: -2.768915891647339
    3. '   ' → logprob: -3.393915891647339
    4. '[' → logprob: -4.51891565322876
    5. ' ,' → logprob: -5.39391565322876
    6. 'in' → logprob: -5.39391565322876
    7. ' for' → logprob: -5.64391565322876
    8. ':' → logprob: -5.76891565322876
    9. 'for' → logprob: -6.39391565322876
    10. ' =' → logprob: -6.51891565322876

Token 185: ' #' (ID: 1069)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48469609022140503
    2. ',' → logprob: -1.3596961498260498
    3. ' for' → logprob: -2.98469614982605
    4. 'in' → logprob: -3.35969614982605
    5. 'for' → logprob: -4.109695911407471
    6. ':' → logprob: -4.984695911407471
    7. '   ' → logprob: -5.359695911407471
    8. ' ,' → logprob: -5.859695911407471
    9. ' dans' → logprob: -5.984695911407471
    10. ' ' → logprob: -6.859695911407471

Token 186: '  ' (ID: 256)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12291696667671204
    2. 'for' → logprob: -2.2479169368743896
    3. ' k' → logprob: -5.747917175292969
    4. ' next' → logprob: -6.372917175292969
    5. ' n' → logprob: -6.747917175292969
    6. '   ' → logprob: -7.372917175292969
    7. ' pattern' → logprob: -7.497917175292969
    8. 'k' → logprob: -7.747917175292969
    9. 'n' → logprob: -7.747917175292969
    10. 'pattern' → logprob: -8.372917175292969

Token 187: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4266529083251953
    2. ' for' → logprob: -1.1766529083251953
    3. 'pattern' → logprob: -4.426652908325195
    4. 'range' → logprob: -5.426652908325195
    5. ' pattern' → logprob: -5.551652908325195
    6. ' next' → logprob: -5.926652908325195
    7. 'next' → logprob: -6.051652908325195
    8. 'n' → logprob: -6.301652908325195
    9. '   ' → logprob: -6.301652908325195
    10. 'patterns' → logprob: -6.426652908325195

Token 188: ' tableau' (ID: 67053)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4242514669895172
    2. '[' → logprob: -1.9242514371871948
    3. ' [' → logprob: -2.0492515563964844
    4. ' []' → logprob: -3.4242515563964844
    5. '[[' → logprob: -4.174251556396484
    6. '[
' → logprob: -4.424251556396484
    7. '[m' → logprob: -5.924251556396484
    8. ' [[' → logprob: -6.049251556396484
    9. '[][]' → logprob: -6.674251556396484
    10. '[]
' → logprob: -6.924251556396484

Token 189: ' next' (ID: 2613)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35435059666633606
    2. '[]' → logprob: -2.3543505668640137
    3. ' de' → logprob: -2.9793505668640137
    4. ' [' → logprob: -3.2293505668640137
    5. '[k' → logprob: -3.4793505668640137
    6. ' of' → logprob: -3.6043505668640137
    7. '[
' → logprob: -3.9793505668640137
    8. ' =' → logprob: -4.979350566864014
    9. '(k' → logprob: -6.229350566864014
    10. '(' → logprob: -6.229350566864014

Token 190: ':' (ID: 25)
  Prédit: '_tables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.18544238805770874
    2. '_table' → logprob: -1.8104424476623535
    3. ' =' → logprob: -6.1854424476623535
    4. '=[]' → logprob: -7.0604424476623535
    5. '[]' → logprob: -7.1854424476623535
    6. '_' → logprob: -7.5604424476623535
    7. 'table' → logprob: -7.8104424476623535
    8. '=' → logprob: -8.560441970825195
    9. '   ' → logprob: -9.060441970825195
    10. '[' → logprob: -9.310441970825195

Token 191: ' pour' (ID: 1930)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6999329924583435
    2. '[]' → logprob: -0.8249329924583435
    3. ' [' → logprob: -3.6999330520629883
    4. '[' → logprob: -4.324933052062988
    5. ' [[' → logprob: -5.324933052062988
    6. '[
' → logprob: -5.449933052062988
    7. ' for' → logprob: -5.449933052062988
    8. ' [[]' → logprob: -5.824933052062988
    9. '[]
' → logprob: -5.824933052062988
    10. '[[' → logprob: -5.949933052062988

Token 192: ' chaque' (ID: 21194)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.98661208152771
    2. 'k' → logprob: -1.36161208152771
    3. 'i' → logprob: -1.73661208152771
    4. ' i' → logprob: -2.61161208152771
    5. ' k' → logprob: -2.86161208152771
    6. ' pattern' → logprob: -2.98661208152771
    7. 'pat' → logprob: -5.111612319946289
    8. ' _' → logprob: -6.361612319946289
    9. 'p' → logprob: -7.111612319946289
    10. '_' → logprob: -7.361612319946289

Token 193: ' et' (ID: 859)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22626233100891113
    2. ' i' → logprob: -2.601262331008911
    3. 'pattern' → logprob: -3.101262331008911
    4. 'pos' → logprob: -3.601262331008911
    5. 'state' → logprob: -4.226262092590332
    6. 'k' → logprob: -4.226262092590332
    7. 'idx' → logprob: -4.976262092590332
    8. ' pattern' → logprob: -5.351262092590332
    9. ' idx' → logprob: -5.726262092590332
    10. ' state' → logprob: -5.851262092590332

Token 194: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.008422021754086018
    2. 'ape' → logprob: -5.008421897888184
    3. 'a' → logprob: -8.258421897888184
    4. '
' → logprob: -8.820921897888184
    5. '[' → logprob: -8.883421897888184
    6. '

' → logprob: -9.195921897888184
    7. '[]' → logprob: -9.195921897888184
    8. '   ' → logprob: -9.508421897888184
    9. 'ats' → logprob: -9.758421897888184
    10. ']' → logprob: -10.070921897888184

Token 195: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8041502833366394
    2. ' =' → logprob: -1.8041503429412842
    3. ' k' → logprob: -2.304150342941284
    4. ' [' → logprob: -2.429150342941284
    5. '[i' → logprob: -3.429150342941284
    6. '[' → logprob: -3.929150342941284
    7. 'k' → logprob: -3.929150342941284
    8. ' ,' → logprob: -4.054150104522705
    9. ' in' → logprob: -4.054150104522705
    10. '[k' → logprob: -4.179150104522705

Token 196: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0564321279525757
    2. 'i' → logprob: -2.0564322471618652
    3. ')' → logprob: -2.1814322471618652
    4. 'k' → logprob: -2.5564322471618652
    5. '),' → logprob: -2.5564322471618652
    6. ' len' → logprob: -2.6814322471618652
    7. ' in' → logprob: -3.4314322471618652
    8. ',' → logprob: -3.5564322471618652
    9. ' i' → logprob: -3.6814322471618652
    10. ' range' → logprob: -3.9314322471618652

Token 197: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17767612636089325
    2. '),' → logprob: -2.302676200866699
    3. ',' → logprob: -3.552676200866699
    4. ' )' → logprob: -3.677676200866699
    5. ' ),' → logprob: -5.427676200866699
    6. ' ,' → logprob: -6.927676200866699
    7. ')...' → logprob: -7.302676200866699
    8. '   ' → logprob: -7.302676200866699
    9. ')[' → logprob: -7.427676200866699
    10. ' ' → logprob: -8.5526762008667

Token 198: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1334950476884842
    2. ' len' → logprob: -2.1334950923919678
    3. 'm' → logprob: -5.133494853973389
    4. ' m' → logprob: -7.383494853973389
    5. '   ' → logprob: -11.633495330810547
    6. '(len' → logprob: -12.383495330810547
    7. '[len' → logprob: -12.633495330810547
    8. ')' → logprob: -13.008495330810547
    9. ',len' → logprob: -13.383495330810547
    10. 'n' → logprob: -13.383495330810547

Token 199: ')' (ID: 8)
  Prédit: '(pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.12250678241252899
    2. '(s' → logprob: -2.247506856918335
    3. '(next' → logprob: -5.497506618499756
    4. 's' → logprob: -5.622506618499756
    5. 'pattern' → logprob: -7.247506618499756
    6. 'patterns' → logprob: -7.997506618499756
    7. '(' → logprob: -8.747507095336914
    8. 'next' → logprob: -8.747507095336914
    9. '(p' → logprob: -8.872507095336914
    10. ')' → logprob: -8.872507095336914

Token 200: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8173319101333618
    2. '   ' → logprob: -0.9423319101333618
    3. ')' → logprob: -3.0673317909240723
    4. ' de' → logprob: -4.067331790924072
    5. ' ,' → logprob: -4.192331790924072
    6. ' of' → logprob: -4.317331790924072
    7. '[]' → logprob: -4.317331790924072
    8. '    ' → logprob: -4.942331790924072
    9. '[' → logprob: -5.192331790924072
    10. ' =' → logprob: -5.567331790924072

Token 201: ' caractère' (ID: 80509)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.9962652325630188
    2. ' c' → logprob: -1.746265172958374
    3. ' for' → logprob: -2.246265172958374
    4. 'c' → logprob: -2.371265172958374
    5. ' chaque' → logprob: -2.371265172958374
    6. ' caract' → logprob: -2.871265172958374
    7. ' caractère' → logprob: -3.996265172958374
    8. '   ' → logprob: -4.121265411376953
    9. 'pour' → logprob: -4.121265411376953
    10. ' ' → logprob: -4.246265411376953

Token 202: ' '' (ID: 461)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1122428178787231
    2. ' ' → logprob: -2.2372426986694336
    3. '[' → logprob: -2.3622426986694336
    4. ',' → logprob: -2.6122426986694336
    5. ' (' → logprob: -2.6122426986694336
    6. '   ' → logprob: -3.2372426986694336
    7. ' c' → logprob: -3.2372426986694336
    8. ' [' → logprob: -3.3622426986694336
    9. ':' → logprob: -3.6122426986694336
    10. ' ,' → logprob: -3.7372426986694336

Token 203: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12450313568115234
    2. ''' → logprob: -3.7495031356811523
    3. ' a' → logprob: -4.124503135681152
    4. ')' → logprob: -4.249503135681152
    5. '')' → logprob: -4.499503135681152
    6. ' '' → logprob: -4.749503135681152
    7. ''a' → logprob: -5.124503135681152
    8. '('' → logprob: -5.249503135681152
    9. '   ' → logprob: -5.249503135681152
    10. 's' → logprob: -5.499503135681152

Token 204: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7062983512878418
    2. '')' → logprob: -2.331298351287842
    3. '   ' → logprob: -2.456298351287842
    4. ')' → logprob: -2.831298351287842
    5. '':
' → logprob: -2.956298351287842
    6. ''):
' → logprob: -3.456298351287842
    7. '):
' → logprob: -3.831298351287842
    8. '',' → logprob: -3.956298351287842
    9. '       ' → logprob: -4.081298351287842
    10. ']' → logprob: -4.206298351287842

Token 205: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.9913796782493591
    2. ' à' → logprob: -1.741379737854004
    3. '   ' → logprob: -1.991379737854004
    4. ' to' → logprob: -2.366379737854004
    5. ':' → logprob: -2.991379737854004
    6. '...' → logprob: -3.241379737854004
    7. ''' → logprob: -3.741379737854004
    8. ' ' → logprob: -4.116379737854004
    9. ',' → logprob: -4.241379737854004
    10. '       ' → logprob: -4.991379737854004

Token 206: ''' (ID: 6)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.006145873572677374
    2. 'z' → logprob: -5.88114595413208
    3. ''' → logprob: -6.25614595413208
    4. ' '' → logprob: -6.88114595413208
    5. ' z' → logprob: -8.631145477294922
    6. '-z' → logprob: -9.256145477294922
    7. '...' → logprob: -10.256145477294922
    8. ''à' → logprob: -10.506145477294922
    9. ''a' → logprob: -11.131145477294922
    10. '‘z' → logprob: -11.756145477294922

Token 207: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0013882085913792253
    2. ''z' → logprob: -6.626388072967529
    3. ' z' → logprob: -9.751388549804688
    4. '	z' → logprob: -13.001388549804688
    5. ''' → logprob: -14.001388549804688
    6. '```' → logprob: -14.626388549804688
    7. '
' → logprob: -15.251388549804688
    8. '{'' → logprob: -16.376388549804688
    9. '‘z' → logprob: -16.876388549804688
    10. '   ' → logprob: -17.126388549804688

Token 208: ''' (ID: 6)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9847670793533325
    2. ',' → logprob: -1.1097670793533325
    3. ''' → logprob: -1.9847670793533325
    4. '   ' → logprob: -2.984766960144043
    5. ')' → logprob: -3.484766960144043
    6. '']' → logprob: -4.234766960144043
    7. '[' → logprob: -4.609766960144043
    8. ':' → logprob: -4.609766960144043
    9. '[]' → logprob: -4.984766960144043
    10. '':
' → logprob: -5.734766960144043

Token 209: ' next' (ID: 2613)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03255482390522957
    2. ',' → logprob: -3.657554864883423
    3. ':' → logprob: -6.282554626464844
    4. '       ' → logprob: -6.657554626464844
    5. ' for' → logprob: -6.907554626464844
    6. 'def' → logprob: -7.657554626464844
    7. ' =' → logprob: -8.407554626464844
    8. '  ' → logprob: -8.657554626464844
    9. ' ,' → logprob: -8.657554626464844
    10. '    ' → logprob: -9.032554626464844

Token 210: ' state' (ID: 2608)
  Prédit: '_tables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.13906769454479218
    2. '_' → logprob: -3.0140676498413086
    3. ' =' → logprob: -3.1390676498413086
    4. '   ' → logprob: -4.389067649841309
    5. '[' → logprob: -4.764067649841309
    6. '_table' → logprob: -5.389067649841309
    7. '=' → logprob: -5.639067649841309
    8. ' _' → logprob: -6.014067649841309
    9. '[]' → logprob: -7.014067649841309
    10. '=[]' → logprob: -7.264067649841309

Token 211: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18761573731899261
    2. ' =' → logprob: -1.9376157522201538
    3. ':' → logprob: -4.437615871429443
    4. '=' → logprob: -5.937615871429443
    5. ',' → logprob: -6.187615871429443
    6. 'def' → logprob: -6.812615871429443
    7. '[' → logprob: -6.937615871429443
    8. '
' → logprob: -6.937615871429443
    9. '(s' → logprob: -7.062615871429443
    10. '[]' → logprob: -7.187615871429443

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20142912864685059
    2. ':' → logprob: -2.8264291286468506
    3. ' =' → logprob: -3.3264291286468506
    4. '[' → logprob: -3.7014291286468506
    5. ' ' → logprob: -3.9514291286468506
    6. ' for' → logprob: -4.70142936706543
    7. '
' → logprob: -5.20142936706543
    8. ',' → logprob: -5.95142936706543
    9. 'def' → logprob: -5.95142936706543
    10. '=' → logprob: -6.20142936706543

Token 213: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22981253266334534
    2. ' for' → logprob: -2.4798126220703125
    3. ' 
' → logprob: -3.1048126220703125
    4. '
' → logprob: -3.9798126220703125
    5. ' ' → logprob: -4.7298126220703125
    6. '    
' → logprob: -4.7298126220703125
    7. '  
' → logprob: -4.8548126220703125
    8. 'for' (adapté à ' for') → logprob: -5.3548126220703125
    9. ' =' → logprob: -5.3548126220703125
    10. '\' → logprob: -5.4798126220703125

Token 214: ' pat' (ID: 2506)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.7004388570785522
    2. 'pattern' → logprob: -0.7004388570785522
    3. ' pat' → logprob: -5.825438976287842
    4. 'pat' → logprob: -6.200438976287842
    5. 'p' → logprob: -6.575438976287842
    6. ' p' → logprob: -7.075438976287842
    7. '(pattern' → logprob: -11.575438499450684
    8. ' patt' → logprob: -11.575438499450684
    9. 'i' → logprob: -12.700438499450684
    10. 'patterns' → logprob: -12.700438499450684

Token 215: ' in' (ID: 306)
  Prédit: 'tern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tern' → logprob: -0.04144110158085823
    2. 't' → logprob: -3.2914412021636963
    3. '=' → logprob: -7.041440963745117
    4. ' =' → logprob: -7.291440963745117
    5. 'ern' → logprob: -7.666440963745117
    6. ',' → logprob: -7.791440963745117
    7. '_' → logprob: -8.041440963745117
    8. 'te' → logprob: -9.041440963745117
    9. ')' → logprob: -9.666440963745117
    10. ']' → logprob: -9.916440963745117

Token 216: ' patterns' (ID: 18587)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.023250719532370567
    2. ' patterns' → logprob: -3.7732508182525635
    3. 'pattern' → logprob: -12.398250579833984
    4. 'pat' → logprob: -14.148250579833984
    5. '(pattern' → logprob: -15.398250579833984
    6. '   ' → logprob: -16.773250579833984
    7. '[' → logprob: -16.898250579833984
    8. '_patterns' → logprob: -17.148250579833984
    9. ' ' → logprob: -17.398250579833984
    10. 's' → logprob: -18.523250579833984

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005238736979663372
    2. ':
' → logprob: -5.3802385330200195
    3. ' =' → logprob: -7.7552385330200195
    4. '):' → logprob: -9.25523853302002
    5. '   ' → logprob: -10.50523853302002
    6. '=' → logprob: -10.75523853302002
    7. ' :' → logprob: -11.00523853302002
    8. '):
' → logprob: -11.25523853302002
    9. '       ' → logprob: -12.13023853302002
    10. ',' → logprob: -12.50523853302002

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020104798022657633
    2. '   ' → logprob: -7.502010345458984
    3. ' next' → logprob: -8.002010345458984
    4. '        
' → logprob: -8.002010345458984
    5. '
' → logprob: -8.752010345458984
    6. ',' → logprob: -9.252010345458984
    7. '    ' → logprob: -9.627010345458984
    8. '    
' → logprob: -9.627010345458984
    9. '[' → logprob: -9.752010345458984
    10. 'next' → logprob: -10.002010345458984

Token 219: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.9193913340568542
    2. ' m' → logprob: -0.9193913340568542
    3. '   ' → logprob: -2.294391393661499
    4. 'fail' → logprob: -3.044391393661499
    5. ' fail' → logprob: -3.419391393661499
    6. '       ' → logprob: -4.41939115524292
    7. 'n' → logprob: -5.66939115524292
    8. 'l' → logprob: -6.91939115524292
    9. ' pat' → logprob: -7.16939115524292
    10. ' n' → logprob: -7.41939115524292

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014191711321473122
    2. '=' → logprob: -4.264191627502441
    3. '=len' → logprob: -10.514191627502441
    4. ')' → logprob: -15.139191627502441
    5. '   ' → logprob: -15.264191627502441
    6. ' ' → logprob: -15.389191627502441
    7. ',' → logprob: -16.264192581176758
    8. 'len' → logprob: -16.639192581176758
    9. ' +=' → logprob: -16.764192581176758
    10. '=int' → logprob: -17.014192581176758

Token 221: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16022595763206482
    2. ' len' → logprob: -1.9102259874343872
    3. '[len' → logprob: -13.410225868225098
    4. '(len' → logprob: -15.410225868225098
    5. '0' → logprob: -16.535226821899414
    6. '	len' → logprob: -17.035226821899414
    7. '=len' → logprob: -17.910226821899414
    8. 'Len' → logprob: -19.285226821899414
    9. '_len' → logprob: -19.660226821899414
    10. ' ' → logprob: -20.035226821899414

Token 222: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.975612187583465e-05
    2. 'pat' → logprob: -10.500029563903809
    3. '(' → logprob: -14.125029563903809
    4. 'next' → logprob: -15.000029563903809
    5. '(pattern' → logprob: -15.000029563903809
    6. ' pat' → logprob: -15.125029563903809
    7. 'p' → logprob: -15.500029563903809
    8. '(m' → logprob: -16.000030517578125
    9. '(next' → logprob: -16.125030517578125
    10. '(s' → logprob: -17.125030517578125

Token 223: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -7.862962229410186e-05
    2. 'pat' → logprob: -9.625078201293945
    3. 'ат' → logprob: -11.625078201293945
    4. 'a' → logprob: -14.375078201293945
    5. '
' → logprob: -14.375078201293945
    6. '[' → logprob: -14.750078201293945
    7. ' pat' → logprob: -15.125078201293945
    8. ')' → logprob: -15.125078201293945
    9. '>' → logprob: -15.375078201293945
    10. ' at' → logprob: -15.375078201293945

Token 224: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2256416231393814
    2. ')' → logprob: -1.6006416082382202
    3. '       ' → logprob: -9.350641250610352
    4. ')
' → logprob: -9.350641250610352
    5. '+' → logprob: -10.850641250610352
    6. '):
' → logprob: -11.850641250610352
    7. ' )
' → logprob: -11.975641250610352
    8. ')+' → logprob: -11.975641250610352
    9. '   ' → logprob: -12.100641250610352
    10. ' +' → logprob: -12.975641250610352

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006678790668956935
    2. ' next' → logprob: -7.875668048858643
    3. 'next' → logprob: -9.250667572021484
    4. '   ' → logprob: -9.500667572021484
    5. '
' → logprob: -9.875667572021484
    6. '        
' → logprob: -10.500667572021484
    7. '	' → logprob: -11.875667572021484
    8. '           ' → logprob: -12.375667572021484
    9. ',' → logprob: -12.500667572021484
    10. ' f' → logprob: -12.500667572021484

Token 226: ' fail' (ID: 7111)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' (adapté à ' fail') → logprob: -0.0007786541245877743
    2. 'next' → logprob: -7.625778675079346
    3. ' fail' → logprob: -9.375778198242188
    4. 'failure' → logprob: -9.375778198242188
    5. '   ' → logprob: -9.750778198242188
    6. 'f' → logprob: -10.500778198242188
    7. 'fa' → logprob: -12.125778198242188
    8. 'j' → logprob: -12.625778198242188
    9. 'fal' → logprob: -12.625778198242188
    10. '
' → logprob: -12.875778198242188

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005930101033300161
    2. '=' → logprob: -5.130929946899414
    3. ' ' → logprob: -14.630929946899414
    4. '[' → logprob: -14.630929946899414
    5. '   ' → logprob: -15.380929946899414
    6. ',' → logprob: -15.755929946899414
    7. '  ' → logprob: -16.255929946899414
    8. ')' → logprob: -16.880929946899414
    9. '    ' → logprob: -17.505929946899414
    10. ' =
' → logprob: -19.130929946899414

Token 228: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.011047935113310814
    2. ' build' → logprob: -4.511047840118408
    3. '	build' → logprob: -16.63604736328125
    4. '(build' → logprob: -17.63604736328125
    5. ' ' → logprob: -17.76104736328125
    6. '[' → logprob: -18.26104736328125
    7. '   ' → logprob: -19.13604736328125
    8. ' buil' → logprob: -19.38604736328125
    9. '  ' → logprob: -19.76104736328125
    10. '_build' → logprob: -19.76104736328125

Token 229: '_failure' (ID: 110004)
  Prédit: '_failure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_failure' → logprob: -0.0016750642098486423
    2. 'failure' → logprob: -7.001675128936768
    3. '(p' → logprob: -7.376675128936768
    4. '_fail' → logprob: -9.75167465209961
    5. '(f' → logprob: -10.75167465209961
    6. 'Failure' → logprob: -11.12667465209961
    7. ' failure' → logprob: -11.50167465209961
    8. '(pattern' → logprob: -11.62667465209961
    9. 'pat' → logprob: -12.12667465209961
    10. '_FAILURE' → logprob: -12.87667465209961

Token 230: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.2200749754119897e-06
    2. '(pattern' → logprob: -13.250001907348633
    3. '(' → logprob: -15.625001907348633
    4. ' (' → logprob: -15.875001907348633
    5. 'pat' → logprob: -16.625001907348633
    6. '(
' → logprob: -18.625001907348633
    7. '(pa' → logprob: -19.250001907348633
    8. '((' → logprob: -19.500001907348633
    9. ' pat' → logprob: -19.500001907348633
    10. ')' → logprob: -20.000001907348633

Token 231: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -7.3458322731312364e-06
    2. 'ат' → logprob: -12.375007629394531
    3. 'attern' → logprob: -13.500007629394531
    4. 'pat' → logprob: -14.000007629394531
    5. '[' → logprob: -15.000007629394531
    6. ')' → logprob: -16.12500762939453
    7. ' at' → logprob: -16.50000762939453
    8. '
' → logprob: -16.50000762939453
    9. 'att' → logprob: -16.75000762939453
    10. 'a' → logprob: -17.25000762939453

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759637951850891
    2. ')
' → logprob: -0.8259637951850891
    3. ')
' → logprob: -10.825963973999023
    4. ')

' → logprob: -13.075963973999023
    5. '       ' → logprob: -13.950963973999023
    6. ' )
' → logprob: -14.325963973999023
    7. '   ' → logprob: -14.825963973999023
    8. ' )' → logprob: -14.950963973999023
    9. ')`
' → logprob: -16.200963973999023
    10. ')\' → logprob: -17.825963973999023

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003074566484428942
    2. ' next' → logprob: -9.000307083129883
    3. '
' → logprob: -9.375307083129883
    4. '        
' → logprob: -10.250307083129883
    5. 'next' → logprob: -11.000307083129883
    6. '	' → logprob: -11.250307083129883
    7. '```' → logprob: -11.375307083129883
    8. '   ' → logprob: -12.000307083129883
    9. '[next' → logprob: -12.625307083129883
    10. ',' → logprob: -13.375307083129883

Token 234: ' nxt' (ID: 160200)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4200756251811981
    2. ' next' → logprob: -1.5450756549835205
    3. ' f' → logprob: -3.0450756549835205
    4. '       ' → logprob: -3.1700756549835205
    5. 'f' → logprob: -3.4200756549835205
    6. ' nxt' → logprob: -5.170075416564941
    7. '   ' → logprob: -7.045075416564941
    8. '           ' → logprob: -8.295075416564941
    9. 'n' → logprob: -8.670075416564941
    10. ' ' → logprob: -9.920075416564941

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891865074634552
    2. '=' → logprob: -2.578918695449829
    3. 't' → logprob: -11.20391845703125
    4. '_table' → logprob: -12.20391845703125
    5. ' ' → logprob: -12.45391845703125
    6. '   ' → logprob: -12.45391845703125
    7. '=[' → logprob: -14.20391845703125
    8. '	' → logprob: -15.32891845703125
    9. '  ' → logprob: -15.45391845703125
    10. '=[]
' → logprob: -15.82891845703125

Token 236: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.06423628330230713
    2. ' [[' → logprob: -2.8142361640930176
    3. '[' → logprob: -6.564236164093018
    4. ' [' → logprob: -7.064236164093018
    5. '[{' → logprob: -14.189236640930176
    6. '[m' → logprob: -16.06423568725586
    7. ' [{}' → logprob: -17.18923568725586
    8. '   ' → logprob: -17.56423568725586
    9. ' ' → logprob: -17.68923568725586
    10. '[]
' → logprob: -17.81423568725586

Token 237: 'dict' (ID: 20993)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012976157013326883
    2. ' [' → logprob: -7.251297473907471
    3. '{' → logprob: -7.501297473907471
    4. '{}' → logprob: -10.501297950744629
    5. 'dict' → logprob: -12.126297950744629
    6. '[{' → logprob: -13.626297950744629
    7. '[m' → logprob: -14.501297950744629
    8. '[[' → logprob: -16.001296997070312
    9. '[-' → logprob: -16.626296997070312
    10. '   ' → logprob: -16.626296997070312

Token 238: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.043070901185274124
    2. '()]' → logprob: -3.1680707931518555
    3. '()
' → logprob: -10.793070793151855
    4. ']()' → logprob: -11.418070793151855
    5. '()]
' → logprob: -11.543070793151855
    6. '((' → logprob: -12.043070793151855
    7. ' ()' → logprob: -12.043070793151855
    8. '()=>' → logprob: -12.418070793151855
    9. '(' → logprob: -12.793070793151855
    10. 'for' → logprob: -12.918070793151855

Token 239: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03649652749300003
    2. 'for' → logprob: -3.661496639251709
    3. '()' → logprob: -4.911496639251709
    4. '       ' → logprob: -6.411496639251709
    5. ')' → logprob: -7.536496639251709
    6. '<|end|>' → logprob: -9.03649616241455
    7. '   ' → logprob: -9.16149616241455
    8. '	for' → logprob: -9.16149616241455
    9. ' ' → logprob: -9.53649616241455
    10. '        ' → logprob: -9.91149616241455

Token 240: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007062142714858055
    2. ' _' → logprob: -5.507061958312988
    3. '_range' → logprob: -6.007061958312988
    4. '_i' → logprob: -8.007061958312988
    5. ' range' → logprob: -9.132061958312988
    6. ' i' → logprob: -10.132061958312988
    7. 'range' → logprob: -11.132061958312988
    8. 'i' → logprob: -11.632061958312988
    9. '_in' → logprob: -12.257061958312988
    10. '_j' → logprob: -12.757061958312988

Token 241: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0014679614687338471
    2. ' range' → logprob: -7.001468181610107
    3. 'in' → logprob: -7.501468181610107
    4. ' in' → logprob: -13.00146770477295
    5. '(range' → logprob: -13.37646770477295
    6. 'm' → logprob: -16.126468658447266
    7. '_range' → logprob: -16.626468658447266
    8. '	range' → logprob: -17.001468658447266
    9. '
' → logprob: -17.751468658447266
    10. '_' → logprob: -17.876468658447266

Token 242: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '(range' → logprob: -18.125911712646484
    4. '	range' → logprob: -19.250911712646484
    5. ' ' → logprob: -20.125911712646484
    6. '   ' → logprob: -20.625911712646484
    7. '
' → logprob: -21.125911712646484
    8. 'm' → logprob: -21.125911712646484
    9. '  ' → logprob: -21.625911712646484
    10. 'r' → logprob: -22.250911712646484

Token 243: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -6.511406809295295e-06
    2. 'm' → logprob: -12.250006675720215
    3. '(' → logprob: -13.750006675720215
    4. ' (' → logprob: -14.375006675720215
    5. '((' → logprob: -17.8750057220459
    6. '	m' → logprob: -18.8750057220459
    7. '   ' → logprob: -18.8750057220459
    8. '
' → logprob: -19.6250057220459
    9. ' m' → logprob: -20.0000057220459
    10. '(len' → logprob: -20.0000057220459

Token 244: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007634900975972414
    2. ' +' → logprob: -4.882635116577148
    3. ')]' → logprob: -10.507635116577148
    4. '+
' → logprob: -14.507635116577148
    5. ')' → logprob: -15.007635116577148
    6. ')])' → logprob: -15.882635116577148
    7. '+m' → logprob: -16.00763511657715
    8. ')],' → logprob: -16.63263511657715
    9. '   ' → logprob: -16.88263511657715
    10. '()+' → logprob: -17.13263511657715

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -10.625024795532227
    3. '
' → logprob: -15.250024795532227
    4. '   ' → logprob: -15.500024795532227
    5. '2' → logprob: -16.812524795532227
    6. '0' → logprob: -17.187524795532227
    7. '```' → logprob: -17.250024795532227
    8. '  ' → logprob: -17.312524795532227
    9. ')' → logprob: -17.625024795532227
    10. '

' → logprob: -17.812524795532227

Token 246: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001793457195162773
    2. ']' → logprob: -9.500179290771484
    3. ')' → logprob: -9.750179290771484
    4. ')]
' → logprob: -10.750179290771484
    5. '       ' → logprob: -11.000179290771484
    6. '   ' → logprob: -12.625179290771484
    7. ' )' → logprob: -13.375179290771484
    8. ' ]' → logprob: -13.750179290771484
    9. '}]' → logprob: -13.750179290771484
    10. ')]
' → logprob: -16.000179290771484

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32975372672080994
    2. '<|end|>' → logprob: -1.8297537565231323
    3. ' ' → logprob: -2.4547536373138428
    4. ' for' → logprob: -4.829753875732422
    5. ' 
' → logprob: -4.954753875732422
    6. '   ' → logprob: -4.954753875732422
    7. '        
' → logprob: -5.829753875732422
    8. ')' → logprob: -6.329753875732422
    9. '        ' → logprob: -6.579753875732422
    10. '	' → logprob: -6.954753875732422

Token 248: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20466108620166779
    2. '       ' → logprob: -2.2046611309051514
    3. 'for' (adapté à ' for') → logprob: -3.2046611309051514
    4. '   ' → logprob: -3.9546611309051514
    5. '	for' → logprob: -4.954660892486572
    6. ' c' → logprob: -5.079660892486572
    7. 'c' → logprob: -7.204660892486572
    8. '	' → logprob: -8.07966136932373
    9. '	c' → logprob: -8.20466136932373
    10. '	   ' → logprob: -8.95466136932373

Token 249: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6884207725524902
    2. ' i' → logprob: -0.8134207725524902
    3. 'state' → logprob: -3.8134207725524902
    4. ' state' → logprob: -3.9384207725524902
    5. ' j' → logprob: -5.43842077255249
    6. 'j' → logprob: -5.43842077255249
    7. ' length' → logprob: -6.43842077255249
    8. ' c' → logprob: -6.93842077255249
    9. 'length' → logprob: -7.31342077255249
    10. 'c' → logprob: -7.68842077255249

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014207934960722923
    2. 'in' → logprob: -4.26420783996582
    3. '	in' → logprob: -11.13920783996582
    4. ' ' → logprob: -11.51420783996582
    5. ',' → logprob: -11.63920783996582
    6. '0' → logprob: -13.26420783996582
    7. '   ' → logprob: -13.76420783996582
    8. '+' → logprob: -14.13920783996582
    9. '=' → logprob: -14.13920783996582
    10. '_' → logprob: -14.13920783996582

Token 251: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150296062231064
    2. ' range' → logprob: -4.018150329589844
    3. '0' → logprob: -15.893150329589844
    4. '(range' → logprob: -16.018150329589844
    5. ' ' → logprob: -16.143150329589844
    6. '   ' → logprob: -17.518150329589844
    7. '	range' → logprob: -17.768150329589844
    8. '```' → logprob: -19.268150329589844
    9. '
' → logprob: -19.643150329589844
    10. 'list' → logprob: -19.643150329589844

Token 252: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0004659425176214427
    2. '(' → logprob: -8.375466346740723
    3. 'm' → logprob: -8.375466346740723
    4. '1' → logprob: -12.625466346740723
    5. ' m' → logprob: -15.000466346740723
    6. '   ' → logprob: -15.250466346740723
    7. ' (' → logprob: -15.375466346740723
    8. '(len' → logprob: -15.500466346740723
    9. '	m' → logprob: -15.625466346740723
    10. '0' → logprob: -15.750466346740723

Token 253: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.021809978410601616
    2. ' +' → logprob: -4.271810054779053
    3. '):' → logprob: -5.021810054779053
    4. '):
' → logprob: -7.021810054779053
    5. '   ' → logprob: -9.646809577941895
    6. ' ):' → logprob: -10.896809577941895
    7. '       ' → logprob: -11.271809577941895
    8. ' ' → logprob: -12.021809577941895
    9. '           ' → logprob: -12.396809577941895
    10. '1' → logprob: -12.396809577941895

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002879145904444158
    2. '2' → logprob: -8.250288009643555
    3. ' ' → logprob: -11.375288009643555
    4. 'm' → logprob: -11.875288009643555
    5. '+' → logprob: -12.750288009643555
    6. '
' → logprob: -13.875288009643555
    7. '0' → logprob: -14.250288009643555
    8. '   ' → logprob: -14.687788009643555
    9. '```' → logprob: -14.687788009643555
    10. ')' → logprob: -14.875288009643555

Token 255: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38725489377975464
    2. '):
' → logprob: -1.1372549533843994
    3. ':' → logprob: -8.26225471496582
    4. '   ' → logprob: -10.26225471496582
    5. ')' → logprob: -10.63725471496582
    6. '):
' → logprob: -10.63725471496582
    7. '       ' → logprob: -10.88725471496582
    8. ' ):' → logprob: -11.13725471496582
    9. ' ):
' → logprob: -12.38725471496582
    10. ':
' → logprob: -13.26225471496582

Token 256: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4079122245311737
    2. ' for' → logprob: -1.907912254333496
    3. '   ' → logprob: -2.032912254333496
    4. '           ' → logprob: -3.032912254333496
    5. '	       ' → logprob: -5.907912254333496
    6. '	   ' → logprob: -6.032912254333496
    7. '	for' → logprob: -6.782912254333496
    8. ' ' → logprob: -7.782912254333496
    9. '	' → logprob: -8.657912254333496
    10. 'for' → logprob: -8.782912254333496

Token 257: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06341839581727982
    2. ' for' → logprob: -2.813418388366699
    3. '   ' → logprob: -6.563418388366699
    4. '           ' → logprob: -10.5634183883667
    5. '	for' → logprob: -12.0634183883667
    6. ' ' → logprob: -12.1884183883667
    7. '       ' → logprob: -13.4384183883667
    8. '  ' → logprob: -15.8134183883667
    9. 'if' → logprob: -16.688419342041016
    10. ' ' → logprob: -16.938419342041016

Token 258: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.07889628410339355
    2. 'c' → logprob: -2.5788962841033936
    3. 'ch' → logprob: -12.328896522521973
    4. ' ch' → logprob: -13.328896522521973
    5. '	c' → logprob: -15.328896522521973
    6. '   ' → logprob: -15.328896522521973
    7. ' ' → logprob: -17.078895568847656
    8. '_c' → logprob: -17.453895568847656
    9. '%c' → logprob: -17.953895568847656
    10. '(c' → logprob: -18.203895568847656

Token 259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16025246679782867
    2. 'in' → logprob: -1.9102524518966675
    3. ' ' → logprob: -11.160252571105957
    4. '  ' → logprob: -12.285252571105957
    5. 'range' → logprob: -13.160252571105957
    6. 'import' → logprob: -13.410252571105957
    7. 'In' → logprob: -13.660252571105957
    8. 's' → logprob: -14.160252571105957
    9. 'from' → logprob: -14.410252571105957
    10. '	in' → logprob: -14.410252571105957

Token 260: ' "' (ID: 392)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7136403322219849
    2. ' range' → logprob: -0.8386403322219849
    3. ''a' → logprob: -3.4636402130126953
    4. ''' → logprob: -3.7136402130126953
    5. '"' → logprob: -4.213640213012695
    6. ' '' → logprob: -5.213640213012695
    7. ' map' → logprob: -6.963640213012695
    8. 'map' → logprob: -7.838640213012695
    9. ' "' → logprob: -9.088640213012695
    10. ''ab' → logprob: -9.463640213012695

Token 261: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -1.7432603272027336e-06
    2. '"' → logprob: -14.125001907348633
    3. 'abc' → logprob: -14.750001907348633
    4. 'abcdefghijkl' → logprob: -15.125001907348633
    5. ''' → logprob: -15.750001907348633
    6. 'abcdef' → logprob: -16.000001907348633
    7. 'az' → logprob: -16.750001907348633
    8. ' abc' → logprob: -18.000001907348633
    9. 'import' → logprob: -18.125001907348633
    10. 'abcdefgh' → logprob: -18.375001907348633

Token 262: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.012742838822305202
    2. '":
' → logprob: -4.38774299621582
    3. '"' → logprob: -9.13774299621582
    4. ' ":' → logprob: -9.76274299621582
    5. ':' → logprob: -10.01274299621582
    6. ' "' → logprob: -11.63774299621582
    7. '":
' → logprob: -12.01274299621582
    8. '":

' → logprob: -13.63774299621582
    9. '):' → logprob: -14.01274299621582
    10. ':"' → logprob: -14.26274299621582

Token 263: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4121142327785492
    2. '           ' → logprob: -1.1621142625808716
    3. ' if' → logprob: -3.787114143371582
    4. '       ' → logprob: -7.287114143371582
    5. '   ' → logprob: -8.037114143371582
    6. ' ' → logprob: -8.162114143371582
    7. '<|end|>' → logprob: -8.162114143371582
    8. 'if' → logprob: -8.537114143371582
    9. '	       ' → logprob: -9.287114143371582
    10. '            ' → logprob: -9.787114143371582

Token 264: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7076913714408875
    2. ' if' → logprob: -0.7076913714408875
    3. 'k' → logprob: -5.332691192626953
    4. '   ' → logprob: -5.832691192626953
    5. ' k' → logprob: -6.207691192626953
    6. '                   ' → logprob: -6.707691192626953
    7. 'j' → logprob: -7.207691192626953
    8. ' nxt' → logprob: -7.457691192626953
    9. ' j' → logprob: -7.707691192626953
    10. 'n' → logprob: -8.082691192626953

Token 265: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3132770359516144
    2. ' i' → logprob: -1.313277006149292
    3. '	i' → logprob: -12.188277244567871
    4. ' ' → logprob: -12.938277244567871
    5. '(i' → logprob: -13.063277244567871
    6. '   ' → logprob: -13.188277244567871
    7. '[i' → logprob: -13.938277244567871
    8. 'c' → logprob: -13.938277244567871
    9. ' ' → logprob: -14.813277244567871
    10. '  ' → logprob: -15.063277244567871

Token 266: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.024396957829594612
    2. '<m' → logprob: -4.149396896362305
    3. '<' → logprob: -5.024396896362305
    4. '<len' → logprob: -7.399396896362305
    5. ' >' → logprob: -7.899396896362305
    6. ' ==' → logprob: -8.149396896362305
    7. '>' → logprob: -8.649396896362305
    8. '<n' → logprob: -8.774396896362305
    9. '==' → logprob: -9.649396896362305
    10. '<c' → logprob: -9.774396896362305

Token 267: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0003360582049936056
    2. ' m' → logprob: -8.000335693359375
    3. 'len' → logprob: -14.875335693359375
    4. '	m' → logprob: -16.250335693359375
    5. ' ' → logprob: -16.625335693359375
    6. '   ' → logprob: -18.125335693359375
    7. '
' → logprob: -18.375335693359375
    8. '  ' → logprob: -18.750335693359375
    9. '=' → logprob: -18.750335693359375
    10. '```' → logprob: -19.000335693359375

Token 268: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2024964541196823
    2. 'and' → logprob: -1.7024964094161987
    3. '                   ' → logprob: -7.452496528625488
    4. '               ' → logprob: -8.452496528625488
    5. '           ' → logprob: -9.452496528625488
    6. '                       ' → logprob: -9.702496528625488
    7. '>' → logprob: -10.577496528625488
    8. ':
' → logprob: -10.577496528625488
    9. ':' → logprob: -10.702496528625488
    10. '   ' → logprob: -11.077496528625488

Token 269: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09465450048446655
    2. 'i' → logprob: -3.2196545600891113
    3. '(i' → logprob: -3.7196545600891113
    4. ' c' → logprob: -4.594654560089111
    5. '(c' → logprob: -4.719654560089111
    6. 'pat' → logprob: -6.094654560089111
    7. ' (' → logprob: -6.094654560089111
    8. ' i' → logprob: -6.719654560089111
    9. '(' → logprob: -7.219654560089111
    10. 'chr' → logprob: -8.469654083251953

Token 270: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931794881820679
    2. ' ==' → logprob: -0.6931794881820679
    3. ']==' → logprob: -11.5681791305542
    4. '==
' → logprob: -11.5681791305542
    5. '=' → logprob: -11.9431791305542
    6. ')==' → logprob: -12.8181791305542
    7. ' ==
' → logprob: -13.8181791305542
    8. ' =' → logprob: -14.3181791305542
    9. '===' → logprob: -14.8181791305542
    10. ')' → logprob: -15.0681791305542

Token 271: ' pat' (ID: 2506)
  Prédit: 'pat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pat' → logprob: -0.01815006136894226
    2. ' pat' → logprob: -4.0181498527526855
    3. '_pat' → logprob: -17.018150329589844
    4. 'pattern' → logprob: -18.018150329589844
    5. ' ' → logprob: -18.393150329589844
    6. ' patr' → logprob: -18.518150329589844
    7. 'Pat' → logprob: -18.768150329589844
    8. '
' → logprob: -19.393150329589844
    9. 'p' → logprob: -19.643150329589844
    10. ' пат' → logprob: -19.768150329589844

Token 272: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005575587856583297
    2. '[j' → logprob: -7.5005574226379395
    3. '[c' → logprob: -12.375557899475098
    4. '[' → logprob: -15.375557899475098
    5. '[
' → logprob: -18.37555694580078
    6. 'c' → logprob: -18.50055694580078
    7. '```' → logprob: -18.50055694580078
    8. '
' → logprob: -18.75055694580078
    9. '[k' → logprob: -18.87555694580078
    10. '[m' → logprob: -19.62555694580078

Token 273: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.7140401005744934
    2. ']:' → logprob: -1.5890400409698486
    3. ':' → logprob: -1.8390400409698486
    4. ':
' → logprob: -1.9640400409698486
    5. ']' → logprob: -6.089040279388428
    6. '):
' → logprob: -6.214040279388428
    7. '":' → logprob: -7.589040279388428
    8. '       ' → logprob: -7.964040279388428
    9. '):' → logprob: -8.21403980255127
    10. '           ' → logprob: -8.21403980255127

Token 274: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05719728022813797
    2. '                       ' → logprob: -3.932197332382202
    3. ':' → logprob: -4.057197093963623
    4. ':
' → logprob: -5.057197093963623
    5. '               ' → logprob: -5.182197093963623
    6. 'n' → logprob: -6.057197093963623
    7. '                    
' → logprob: -7.182197093963623
    8. ' nxt' → logprob: -7.307197093963623
    9. '           ' → logprob: -7.807197093963623
    10. '                        
' → logprob: -8.182197570800781

Token 275: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007991524413228035
    2. '                   ' → logprob: -5.382991313934326
    3. ' nxt' → logprob: -6.257991313934326
    4. '                       ' → logprob: -6.882991313934326
    5. ' n' → logprob: -8.882991790771484
    6. '               ' → logprob: -8.882991790771484
    7. '[n' → logprob: -10.382991790771484
    8. '           ' → logprob: -11.132991790771484
    9. '	n' → logprob: -11.132991790771484
    10. '                           ' → logprob: -11.257991790771484

Token 276: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -12.625007629394531
    3. ' [' → logprob: -13.500007629394531
    4. ' =' → logprob: -13.875007629394531
    5. '
' → logprob: -14.625007629394531
    6. '           ' → logprob: -14.875007629394531
    7. '=' → logprob: -15.250007629394531
    8. '=i' → logprob: -15.375007629394531
    9. '                   ' → logprob: -15.750007629394531
    10. '{i' → logprob: -16.00000762939453

Token 277: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03215654194355011
    2. '][' → logprob: -3.907156467437744
    3. ']' → logprob: -5.157156467437744
    4. '+' → logprob: -6.157156467437744
    5. '[' → logprob: -6.782156467437744
    6. ']=' → logprob: -6.907156467437744
    7. '=' → logprob: -7.532156467437744
    8. ' [' → logprob: -8.032156944274902
    9. ' =' → logprob: -8.907156944274902
    10. ' +' → logprob: -9.407156944274902

Token 278: 'c' (ID: 66)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00013166792632546276
    2. ' i' → logprob: -9.375131607055664
    3. 'c' → logprob: -10.250131607055664
    4. 'j' → logprob: -11.625131607055664
    5. '(i' → logprob: -13.625131607055664
    6. '   ' → logprob: -14.500131607055664
    7. ' ' → logprob: -15.125131607055664
    8. '{i' → logprob: -15.500131607055664
    9. '[i' → logprob: -16.500131607055664
    10. '	i' → logprob: -16.875131607055664

Token 279: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6121892929077148
    2. ' =' → logprob: -0.8621892929077148
    3. ']' → logprob: -3.362189292907715
    4. ']=' → logprob: -7.362189292907715
    5. '=i' → logprob: -8.112189292907715
    6. ')' → logprob: -12.987189292907715
    7. ' ' → logprob: -13.987189292907715
    8. ' ]' → logprob: -14.362189292907715
    9. '[i' → logprob: -14.362189292907715
    10. '   ' → logprob: -14.737189292907715

Token 280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858918860554695
    2. ' =' → logprob: -3.0485892295837402
    3. '=i' → logprob: -13.298588752746582
    4. '=
' → logprob: -17.6735897064209
    5. '=n' → logprob: -18.7985897064209
    6. '＝' → logprob: -18.9235897064209
    7. '=j' → logprob: -19.1735897064209
    8. '=k' → logprob: -19.1735897064209
    9. ']=' → logprob: -19.4235897064209
    10. '.=' → logprob: -19.5485897064209

Token 281: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.15310683415737e-05
    2. ' i' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.87502098083496
    4. '	i' → logprob: -17.87502098083496
    5. '{i' → logprob: -19.62502098083496
    6. '(i' → logprob: -20.50002098083496
    7. '                   ' → logprob: -21.00002098083496
    8. '[i' → logprob: -22.62502098083496
    9. '_i' → logprob: -23.37502098083496
    10. '=i' → logprob: -23.50002098083496

Token 282: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141343772411346
    2. ' +' → logprob: -1.7014133930206299
    3. ' +
' → logprob: -17.201414108276367
    4. '＋' → logprob: -17.201414108276367
    5. '+
' → logprob: -17.576414108276367
    6. ' ' → logprob: -17.701414108276367
    7. '+i' → logprob: -18.201414108276367
    8. '1' → logprob: -18.451414108276367
    9. '()+' → logprob: -18.701414108276367
    10. ' ' → logprob: -19.076414108276367

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -17.125
    4. '```' → logprob: -17.875
    5. '   ' → logprob: -20.0
    6. 'def' → logprob: -20.0
    7. '
' → logprob: -20.875
    8. '0' → logprob: -21.0625
    9. '۱' → logprob: -21.5
    10. '<|end|>' → logprob: -21.8125

Token 284: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019632408395409584
    2. 'else' → logprob: -4.519632339477539
    3. ' else' → logprob: -4.769632339477539
    4. '<|end|>' → logprob: -11.019632339477539
    5. '                   ' → logprob: -11.269632339477539
    6. '           ' → logprob: -11.769632339477539
    7. '
' → logprob: -11.894632339477539
    8. 'elif' → logprob: -12.269632339477539
    9. '			' → logprob: -12.644632339477539
    10. '```' → logprob: -13.019632339477539

Token 285: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12995031476020813
    2. 'else' → logprob: -2.6299502849578857
    3. ' else' → logprob: -3.0049502849578857
    4. '                   ' → logprob: -9.379950523376465
    5. '```' → logprob: -9.629950523376465
    6. '           ' → logprob: -10.754950523376465
    7. '<|end|>' → logprob: -11.129950523376465
    8. '       ' → logprob: -11.879950523376465
    9. 'elif' → logprob: -11.879950523376465
    10. '	else' → logprob: -12.004950523376465

Token 286: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.055532388389110565
    2. ' else' → logprob: -3.305532455444336
    3. '               ' → logprob: -4.055532455444336
    4. '           ' → logprob: -12.430532455444336
    5. 'elif' → logprob: -12.430532455444336
    6. '	else' → logprob: -12.805532455444336
    7. '       ' → logprob: -14.180532455444336
    8. '   ' → logprob: -15.305532455444336
    9. '_else' → logprob: -15.680532455444336
    10. '              ' → logprob: -15.930532455444336

Token 287: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2617048919200897
    2. ':
' → logprob: -1.636704921722412
    3. ':' → logprob: -4.136704921722412
    4. '{
' → logprob: -5.386704921722412
    5. '               ' → logprob: -5.511704921722412
    6. ' if' → logprob: -6.011704921722412
    7. 'if' → logprob: -6.261704921722412
    8. 'n' → logprob: -6.511704921722412
    9. '                       ' → logprob: -6.761704921722412
    10. '{' → logprob: -6.761704921722412

Token 288: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5533163547515869
    2. 'if' → logprob: -1.428316354751587
    3. ' if' → logprob: -2.053316354751587
    4. '   ' → logprob: -3.928316354751587
    5. 'j' → logprob: -4.303316116333008
    6. ' nxt' → logprob: -5.053316116333008
    7. ' j' → logprob: -5.303316116333008
    8. '               ' → logprob: -5.553316116333008
    9. '                       ' → logprob: -5.678316116333008
    10. 'n' → logprob: -6.178316116333008

Token 289: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.37552410364151
    2. 'n' → logprob: -1.6255240440368652
    3. ' nxt' → logprob: -2.6255240440368652
    4. ' if' → logprob: -3.2505240440368652
    5. '                   ' → logprob: -5.875524044036865
    6. '   ' → logprob: -7.250524044036865
    7. 'j' → logprob: -7.500524044036865
    8. 'next' → logprob: -8.250524520874023
    9. '                       ' → logprob: -8.375524520874023
    10. ' n' → logprob: -9.000524520874023

Token 290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06197720766067505
    2. ' i' → logprob: -2.8119771480560303
    3. '	i' → logprob: -12.81197738647461
    4. ' ' → logprob: -12.93697738647461
    5. '   ' → logprob: -13.06197738647461
    6. '(i' → logprob: -14.56197738647461
    7. '[i' → logprob: -14.81197738647461
    8. '0' → logprob: -15.06197738647461
    9. '>' → logprob: -15.31197738647461
    10. '  ' → logprob: -15.43697738647461

Token 291: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5194616913795471
    2. ' >' → logprob: -1.7694616317749023
    3. '==' → logprob: -2.1444616317749023
    4. ' ==' → logprob: -2.1444616317749023
    5. ':' → logprob: -8.519461631774902
    6. '0' → logprob: -8.644461631774902
    7. '=' → logprob: -10.144461631774902
    8. ' ' → logprob: -11.644461631774902
    9. 'and' → logprob: -11.894461631774902
    10. '!=' → logprob: -12.144461631774902

Token 292: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.875911712646484
    4. '  ' → logprob: -18.375911712646484
    5. '۰' → logprob: -19.125911712646484
    6. 'm' → logprob: -19.313411712646484
    7. '     ' → logprob: -19.938411712646484
    8. '
' → logprob: -20.000911712646484
    9. '０' → logprob: -20.375911712646484
    10. '```' → logprob: -20.375911712646484

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.62501335144043
    4. '۰' → logprob: -18.00001335144043
    5. '  ' → logprob: -19.31251335144043
    6. 'm' → logprob: -19.56251335144043
    7. '```' → logprob: -19.87501335144043
    8. '০' → logprob: -20.06251335144043
    9. '[' → logprob: -20.18751335144043
    10. '０' → logprob: -20.31251335144043

Token 294: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21339967846870422
    2. '                       ' → logprob: -1.8383996486663818
    3. ':' → logprob: -3.713399648666382
    4. '                   ' → logprob: -5.463399887084961
    5. 'n' → logprob: -6.838399887084961
    6. '):
' → logprob: -6.963399887084961
    7. ':n' → logprob: -7.338399887084961
    8. ' nxt' → logprob: -8.088399887084961
    9. '                           ' → logprob: -8.213399887084961
    10. '               ' → logprob: -8.588399887084961

Token 295: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.45641615986824036
    2. ' nxt' → logprob: -1.581416130065918
    3. 'n' → logprob: -1.956416130065918
    4. '                   ' → logprob: -4.081416130065918
    5. '                           ' → logprob: -7.206416130065918
    6. '               ' → logprob: -7.706416130065918
    7. ' n' → logprob: -7.706416130065918
    8. '                               ' → logprob: -8.831416130065918
    9. '                        
' → logprob: -9.331416130065918
    10. '                      ' → logprob: -9.456416130065918

Token 296: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010220637544989586
    2. ' nxt' → logprob: -4.760220527648926
    3. '                       ' → logprob: -7.260220527648926
    4. '0' → logprob: -7.260220527648926
    5. '                   ' → logprob: -9.260220527648926
    6. '                           ' → logprob: -9.760220527648926
    7. ' n' → logprob: -11.260220527648926
    8. ' ' → logprob: -12.010220527648926
    9. '                               ' → logprob: -12.135220527648926
    10. '               ' → logprob: -12.135220527648926

Token 297: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.931863051955588e-05
    2. '[' → logprob: -9.750059127807617
    3. '[n' → logprob: -15.000059127807617
    4. ' [' → logprob: -15.500059127807617
    5. 'n' → logprob: -16.125059127807617
    6. '                   ' → logprob: -16.375059127807617
    7. '][' → logprob: -16.625059127807617
    8. '0' → logprob: -17.250059127807617
    9. '=' → logprob: -17.625059127807617
    10. 'i' → logprob: -17.625059127807617

Token 298: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04383721947669983
    2. '[c' → logprob: -3.168837308883667
    3. ']' → logprob: -7.668837070465088
    4. '[' → logprob: -8.418837547302246
    5. '.setdefault' → logprob: -10.293837547302246
    6. ']=' → logprob: -11.043837547302246
    7. '=' → logprob: -11.168837547302246
    8. '[i' → logprob: -11.293837547302246
    9. ' ][' → logprob: -11.418837547302246
    10. '].' → logprob: -11.418837547302246

Token 299: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.465036105713807e-06
    2. ' c' → logprob: -12.250007629394531
    3. '
' → logprob: -14.625007629394531
    4. '[c' → logprob: -14.625007629394531
    5. ']' → logprob: -14.875007629394531
    6. '0' → logprob: -15.000007629394531
    7. ' ' → logprob: -15.125007629394531
    8. '{' → logprob: -15.250007629394531
    9. '	c' → logprob: -15.875007629394531
    10. ')c' → logprob: -16.12500762939453

Token 300: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0067405966110527515
    2. '=' → logprob: -5.506740570068359
    3. ']=' → logprob: -6.256740570068359
    4. ' =' → logprob: -7.256740570068359
    5. ' ]' → logprob: -10.25674057006836
    6. '   ' → logprob: -15.38174057006836
    7. ')' → logprob: -15.75674057006836
    8. '[' → logprob: -16.00674057006836
    9. ' ' → logprob: -16.63174057006836
    10. '']' → logprob: -16.88174057006836

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '=
' → logprob: -17.88604736328125
    4. ']' → logprob: -18.76104736328125
    5. ')' → logprob: -19.26104736328125
    6. ']=' → logprob: -19.38604736328125
    7. ' ' → logprob: -19.38604736328125
    8. '=

' → logprob: -19.63604736328125
    9. '0' → logprob: -19.76104736328125
    10. '[' → logprob: -19.88604736328125

Token 302: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۰' → logprob: -22.375
    4. '   ' → logprob: -22.5
    5. '０' → logprob: -23.25
    6. 'i' → logprob: -23.625
    7. '```' → logprob: -25.125
    8. '00' → logprob: -25.25
    9. ' ' → logprob: -25.25
    10. '  ' → logprob: -25.25

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. 'i' → logprob: -17.125
    4. '   ' → logprob: -21.125
    5. '۰' → logprob: -21.5
    6. '０' → logprob: -22.25
    7. '  ' → logprob: -23.375
    8. '00' → logprob: -23.5
    9. '```' → logprob: -23.5
    10. ' ' → logprob: -23.5625

Token 304: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12773826718330383
    2. 'else' → logprob: -2.7527382373809814
    3. '               ' → logprob: -3.0027382373809814
    4. ' else' → logprob: -5.5027384757995605
    5. '
' → logprob: -6.7527384757995605
    6. '           ' → logprob: -7.0027384757995605
    7. '```' → logprob: -9.252737998962402
    8. 'elif' → logprob: -9.752737998962402
    9. '<|end|>' → logprob: -9.877737998962402
    10. '       ' → logprob: -10.752737998962402

Token 305: '                   ' (ID: 699)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7526353001594543
    2. '                   ' → logprob: -1.1276352405548096
    3. '               ' → logprob: -1.8776352405548096
    4. ' else' → logprob: -3.0026352405548096
    5. '           ' → logprob: -6.252635478973389
    6. '```' → logprob: -8.37763500213623
    7. '       ' → logprob: -9.12763500213623
    8. 'elif' → logprob: -10.37763500213623
    9. '	else' → logprob: -10.50263500213623
    10. '   ' → logprob: -10.62763500213623

Token 306: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04968927055597305
    2. ' else' → logprob: -3.049689292907715
    3. '                   ' → logprob: -7.299689292907715
    4. '               ' → logprob: -8.549689292907715
    5. ':
' → logprob: -8.924689292907715
    6. ':' → logprob: -9.674689292907715
    7. '	else' → logprob: -11.174689292907715
    8. '       ' → logprob: -12.299689292907715
    9. '           ' → logprob: -12.424689292907715
    10. '
' → logprob: -12.674689292907715

Token 307: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34915637969970703
    2. ':' → logprob: -1.349156379699707
    3. '                       ' → logprob: -3.349156379699707
    4. '                   ' → logprob: -9.974156379699707
    5. ':n' → logprob: -10.724156379699707
    6. ':

' → logprob: -11.099156379699707
    7. 'n' → logprob: -11.349156379699707
    8. ' :
' → logprob: -11.349156379699707
    9. ' :' → logprob: -11.974156379699707
    10. ':
' → logprob: -12.099156379699707

Token 308: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.12669549882411957
    2. 'n' → logprob: -2.251695394515991
    3. ' nxt' → logprob: -4.37669563293457
    4. '                   ' → logprob: -7.00169563293457
    5. '               ' → logprob: -8.87669563293457
    6. '                           ' → logprob: -10.00169563293457
    7. ' n' → logprob: -10.12669563293457
    8. '           ' → logprob: -11.50169563293457
    9. '                      ' → logprob: -11.75169563293457
    10. '                     ' → logprob: -12.00169563293457

Token 309: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020532844064291567
    2. ' nxt' → logprob: -8.750205039978027
    3. '                       ' → logprob: -10.125205039978027
    4. '                   ' → logprob: -13.000205039978027
    5. ' n' → logprob: -13.625205039978027
    6. '   ' → logprob: -14.250205039978027
    7. '                           ' → logprob: -14.375205039978027
    8. '               ' → logprob: -14.500205039978027
    9. '	n' → logprob: -15.125205039978027
    10. '           ' → logprob: -15.125205039978027

Token 310: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.62500286102295
    3. '[n' → logprob: -13.87500286102295
    4. '=' → logprob: -15.12500286102295
    5. '=i' → logprob: -16.250003814697266
    6. '_i' → logprob: -16.375003814697266
    7. 's' → logprob: -16.500003814697266
    8. 'n' → logprob: -16.750003814697266
    9. 'i' → logprob: -17.000003814697266
    10. ' =' → logprob: -17.375003814697266

Token 311: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05144002288579941
    2. '][' → logprob: -3.0514400005340576
    3. '-' → logprob: -5.926440238952637
    4. '[' → logprob: -9.926440238952637
    5. '[n' → logprob: -9.926440238952637
    6. '=' → logprob: -10.801440238952637
    7. 'n' → logprob: -11.426440238952637
    8. ')[' → logprob: -11.551440238952637
    9. 'i' → logprob: -11.676440238952637
    10. ']' → logprob: -12.051440238952637

Token 312: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008383014239370823
    2. 'fail' → logprob: -5.133382797241211
    3. '[c' → logprob: -6.133382797241211
    4. '0' → logprob: -10.008382797241211
    5. 'i' → logprob: -10.008382797241211
    6. 'pat' → logprob: -10.008382797241211
    7. ' c' → logprob: -10.008382797241211
    8. '-' → logprob: -10.383382797241211
    9. ' fail' → logprob: -11.258382797241211
    10. '][' → logprob: -11.258382797241211

Token 313: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18290868401527405
    2. '][' → logprob: -2.057908773422241
    3. ']=' → logprob: -3.307908773422241
    4. '[c' → logprob: -6.057908535003662
    5. '=' → logprob: -8.18290901184082
    6. ' =' → logprob: -10.18290901184082
    7. ' ]' → logprob: -10.30790901184082
    8. '=c' → logprob: -10.55790901184082
    9. ']={' → logprob: -10.55790901184082
    10. 'n' → logprob: -10.80790901184082

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889970391988754
    2. ' =' → logprob: -2.578899621963501
    3. ']' → logprob: -11.828899383544922
    4. ']=' → logprob: -13.203899383544922
    5. '=n' → logprob: -14.578899383544922
    6. '[' → logprob: -15.203899383544922
    7. '=
' → logprob: -16.578899383544922
    8. ' ' → logprob: -17.078899383544922
    9. '[n' → logprob: -17.203899383544922
    10. 'n' → logprob: -17.453899383544922

Token 315: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002619318547658622
    2. ' nxt' → logprob: -8.250262260437012
    3. '	n' → logprob: -15.375262260437012
    4. '   ' → logprob: -15.625262260437012
    5. ' n' → logprob: -16.250261306762695
    6. '[n' → logprob: -17.000261306762695
    7. '(n' → logprob: -17.000261306762695
    8. 'next' → logprob: -17.500261306762695
    9. 'x' → logprob: -18.375261306762695
    10. '  ' → logprob: -18.625261306762695

Token 316: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20405110716819763
    2. '[' → logprob: -1.70405113697052
    3. 'fail' → logprob: -5.9540510177612305
    4. '[f' → logprob: -11.57905101776123
    5. 'i' → logprob: -11.82905101776123
    6. '[n' → logprob: -12.07905101776123
    7. ' fail' → logprob: -12.20405101776123
    8. '[j' → logprob: -12.20405101776123
    9. ' [' → logprob: -12.95405101776123
    10. '	fail' → logprob: -14.45405101776123

Token 317: 'fail' (ID: 37533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6932051777839661
    2. 'fail' → logprob: -0.6932051777839661
    3. ' fail' → logprob: -9.943204879760742
    4. '   ' → logprob: -12.943204879760742
    5. '	fail' → logprob: -13.193204879760742
    6. ' ' → logprob: -13.568204879760742
    7. 'f' → logprob: -13.818204879760742
    8. '_fail' → logprob: -14.318204879760742
    9. '[f' → logprob: -14.943204879760742
    10. '  ' → logprob: -15.068204879760742

Token 318: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02325631119310856
    2. '[j' → logprob: -3.773256301879883
    3. 'i' → logprob: -12.148256301879883
    4. 'j' → logprob: -12.648256301879883
    5. '[' → logprob: -13.148256301879883
    6. '[
' → logprob: -16.648256301879883
    7. '][' → logprob: -16.648256301879883
    8. '```' → logprob: -16.648256301879883
    9. '   ' → logprob: -17.023256301879883
    10. ']' → logprob: -17.398256301879883

Token 319: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.019369127228856087
    2. '[i' → logprob: -4.269369125366211
    3. '[j' → logprob: -5.394369125366211
    4. '[-' → logprob: -7.769369125366211
    5. ' -' → logprob: -8.769369125366211
    6. '[' → logprob: -10.019369125366211
    7. '1' → logprob: -11.769369125366211
    8. 'i' → logprob: -11.769369125366211
    9. 'j' → logprob: -12.019369125366211
    10. '0' → logprob: -13.519369125366211

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. ']' → logprob: -16.5
    4. '   ' → logprob: -19.375
    5. '
' → logprob: -20.125
    6. '```' → logprob: -20.75
    7. '...' → logprob: -20.875
    8. '][' → logprob: -20.9375
    9. '-' → logprob: -21.0625
    10. ']]' → logprob: -21.5

Token 321: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.3120038501219824e-05
    2. ']' → logprob: -10.125053405761719
    3. ' ][' → logprob: -11.750053405761719
    4. '[c' → logprob: -12.375053405761719
    5. '"][' → logprob: -15.625053405761719
    6. ''][' → logprob: -15.625053405761719
    7. ']][' → logprob: -16.25005340576172
    8. '].' → logprob: -16.37505340576172
    9. ' ' → logprob: -16.62505340576172
    10. '   ' → logprob: -16.75005340576172

Token 322: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.9361264946837764e-07
    2. ' c' → logprob: -15.75
    3. '	c' → logprob: -19.875
    4. '   ' → logprob: -22.0
    5. '
' → logprob: -22.75
    6. '[c' → logprob: -22.875
    7. '_c' → logprob: -23.375
    8. ')c' → logprob: -23.75
    9. '```' → logprob: -24.5
    10. '(c' → logprob: -24.625

Token 323: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14351075887680054
    2. ')' → logprob: -2.6435108184814453
    3. '       ' → logprob: -3.6435108184814453
    4. '}' → logprob: -3.8935108184814453
    5. '           ' → logprob: -4.893510818481445
    6. '               ' → logprob: -5.268510818481445
    7. '<|end|>' → logprob: -6.018510818481445
    8. '   ' → logprob: -8.018510818481445
    9. ' ]' → logprob: -9.143510818481445
    10. '                   ' → logprob: -9.393510818481445

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046041090041399
    2. '   ' → logprob: -3.7960410118103027
    3. '	return' → logprob: -4.796041011810303
    4. ' return' → logprob: -5.046041011810303
    5. 'return' → logprob: -5.046041011810303
    6. '
' → logprob: -6.921041011810303
    7. '           ' → logprob: -8.796041488647461
    8. '```' → logprob: -9.421041488647461
    9. '        
' → logprob: -10.546041488647461
    10. '<|end|>' → logprob: -10.546041488647461

Token 325: ' next' (ID: 2613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3337554931640625
    2. ' next' → logprob: -1.4587554931640625
    3. 'next' (adapté à ' next') → logprob: -3.9587554931640625
    4. '   ' → logprob: -4.2087554931640625
    5. ' return' → logprob: -4.7087554931640625
    6. 'return' → logprob: -5.9587554931640625
    7. ')' → logprob: -6.0837554931640625
    8. '[next' → logprob: -6.2087554931640625
    9. '	next' → logprob: -7.7087554931640625
    10. ',next' → logprob: -8.208755493164062

Token 326: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -8.537868779967539e-06
    2. 's' → logprob: -12.125008583068848
    3. '_' → logprob: -13.250008583068848
    4. '_tabs' → logprob: -14.000008583068848
    5. '_table' → logprob: -15.375008583068848
    6. 'tables' → logprob: -15.625008583068848
    7. '.append' → logprob: -17.62500762939453
    8. '   ' → logprob: -17.75000762939453
    9. 'Tables' → logprob: -18.00000762939453
    10. '_lists' → logprob: -18.37500762939453

Token 327: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008634423837065697
    2. '.' → logprob: -4.758634567260742
    3. '.app' → logprob: -11.758634567260742
    4. ' .' → logprob: -12.258634567260742
    5. '.extend' → logprob: -12.633634567260742
    6. '.ap' → logprob: -13.258634567260742
    7. '.push' → logprob: -13.633634567260742
    8. '.add' → logprob: -14.883634567260742
    9. '.Append' → logprob: -15.383634567260742
    10. '.py' → logprob: -15.508634567260742

Token 328: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.125015258789062
    3. ' (' → logprob: -17.750015258789062
    4. '((' → logprob: -17.875015258789062
    5. '(next' → logprob: -18.750015258789062
    6. '(
' → logprob: -19.250015258789062
    7. 'n' → logprob: -19.375015258789062
    8. '(noun' → logprob: -21.250015258789062
    9. '(nd' → logprob: -21.875015258789062
    10. '(N' → logprob: -21.875015258789062

Token 329: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -4.320199877838604e-07
    2. 'ext' → logprob: -16.25
    3. 't' → logprob: -16.375
    4. ')' → logprob: -16.875
    5. '[' → logprob: -17.125
    6. '   ' → logprob: -17.875
    7. '(' → logprob: -17.875
    8. ']' → logprob: -18.125
    9. '"' → logprob: -18.25
    10. 'x' → logprob: -18.25

Token 330: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016671013145241886
    2. ')
' → logprob: -8.750166893005371
    3. '   ' → logprob: -11.750166893005371
    4. ' )' → logprob: -15.750166893005371
    5. '       ' → logprob: -16.375165939331055
    6. ')return' → logprob: -17.250165939331055
    7. ']' → logprob: -17.750165939331055
    8. ')

' → logprob: -18.000165939331055
    9. ')
' → logprob: -18.000165939331055
    10. '）' → logprob: -18.125165939331055

Token 331: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38731592893600464
    2. '   ' → logprob: -1.1373159885406494
    3. ' return' → logprob: -7.76231575012207
    4. '```' → logprob: -11.88731575012207
    5. '	return' → logprob: -12.01231575012207
    6. '
' → logprob: -12.76231575012207
    7. ':return' → logprob: -13.51231575012207
    8. '{return' → logprob: -14.63731575012207
    9. '    
' → logprob: -15.01231575012207
    10. '@return' → logprob: -15.26231575012207

Token 332: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07371612638235092
    2. '
' → logprob: -2.823716163635254
    3. '   ' → logprob: -4.823716163635254
    4. ' return' → logprob: -5.698716163635254
    5. '    
' → logprob: -8.448716163635254
    6. '	return' → logprob: -10.573716163635254
    7. '  
' → logprob: -11.323716163635254
    8. ' 
' → logprob: -11.698716163635254
    9. ' ' → logprob: -11.948716163635254
    10. ':return' → logprob: -12.198716163635254

Token 333: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.023245595395565033
    2. ' next' → logprob: -3.7732455730438232
    3. '[next' → logprob: -16.148244857788086
    4. '(next' → logprob: -18.898244857788086
    5. '	next' → logprob: -20.898244857788086
    6. '_next' → logprob: -21.398244857788086
    7. '.next' → logprob: -22.523244857788086
    8. 'Next' → logprob: -23.148244857788086
    9. ',next' → logprob: -23.523244857788086
    10. '[' → logprob: -25.523244857788086

Token 334: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -4.320199877838604e-07
    2. '_tabs' → logprob: -15.75
    3. '_' → logprob: -17.0
    4. '_table' → logprob: -17.0
    5. 'tables' → logprob: -17.5
    6. '_next' → logprob: -18.0
    7. 'Tables' → logprob: -18.75
    8. '_tbl' → logprob: -18.875
    9. '_s' → logprob: -19.25
    10. '```' → logprob: -19.25

Token 335: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005396088119596243
    2. '
' → logprob: -5.255395889282227
    3. '\' → logprob: -10.130395889282227
    4. '```' → logprob: -10.380395889282227
    5. '\n' → logprob: -10.755395889282227
    6. '

' → logprob: -10.755395889282227
    7. ' def' → logprob: -11.380395889282227
    8. 'import' → logprob: -11.505395889282227
    9. '<|end|>' → logprob: -11.880395889282227
    10. '#' → logprob: -12.005395889282227

Token 337: ' main' (ID: 2758)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6747051477432251
    2. ' solve' → logprob: -1.549705147743225
    3. ' main' → logprob: -2.1747050285339355
    4. 'count' → logprob: -3.0497050285339355
    5. ' combine' → logprob: -3.4247050285339355
    6. ' multi' → logprob: -4.1747050285339355
    7. 'solve' → logprob: -4.5497050285339355
    8. ' dp' → logprob: -4.9247050285339355
    9. 'combine' → logprob: -5.0497050285339355
    10. ' dfs' → logprob: -5.2997050285339355

Token 338: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.9981420336989686e-05
    2. ' ():' → logprob: -11.500020027160645
    3. '():
' → logprob: -11.750020027160645
    4. '()' → logprob: -13.375020027160645
    5. '(' → logprob: -15.500020027160645
    6. '():

' → logprob: -17.125019073486328
    7. '():
' → logprob: -17.375019073486328
    8. '(":' → logprob: -19.125019073486328
    9. '()>' → logprob: -19.250019073486328
    10. '(args' → logprob: -19.875019073486328

Token 339: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.36836349964141846
    2. ' import' → logprob: -1.7433634996414185
    3. '   ' → logprob: -2.368363380432129
    4. 'n' → logprob: -3.868363380432129
    5. ' input' → logprob: -4.493363380432129
    6. 'import' → logprob: -5.118363380432129
    7. ' line' → logprob: -7.743363380432129
    8. '	n' → logprob: -8.243363380432129
    9. ' readline' → logprob: -8.368363380432129
    10. ' s' → logprob: -8.493363380432129

Token 340: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3313131630420685
    2. ' n' → logprob: -1.331313133239746
    3. '   ' → logprob: -4.081313133239746
    4. 'import' → logprob: -7.831313133239746
    5. ' import' → logprob: -8.581313133239746
    6. 'N' → logprob: -8.581313133239746
    7. ' input' → logprob: -8.831313133239746
    8. ' N' → logprob: -10.331313133239746
    9. 'input' (adapté à ' input') → logprob: -10.581313133239746
    10. '	n' → logprob: -10.706313133239746

Token 341: '=sys' (ID: 149200)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.367659330368042
    2. '_data' → logprob: -1.367659330368042
    3. '_line' → logprob: -3.367659330368042
    4. '_text' → logprob: -4.867659568786621
    5. '_str' → logprob: -4.992659568786621
    6. ' =' → logprob: -6.242659568786621
    7. '_string' → logprob: -7.242659568786621
    8. 'data' → logprob: -7.492659568786621
    9. '_lines' → logprob: -8.367659568786621
    10. '=' → logprob: -8.617659568786621

Token 342: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19393539428710938
    2. '.stdin' → logprob: -1.9439353942871094
    3. '.readline' → logprob: -3.4439353942871094
    4. '.read' → logprob: -7.568935394287109
    5. '().' → logprob: -7.568935394287109
    6. '.argv' → logprob: -10.06893539428711
    7. '.stdout' → logprob: -10.31893539428711
    8. ' .' → logprob: -10.81893539428711
    9. 'stdin' → logprob: -10.81893539428711
    10. '(stdin' → logprob: -10.94393539428711

Token 343: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008504302240908146
    2. 'read' → logprob: -5.633504390716553
    3. ' =' → logprob: -6.008504390716553
    4. '.read' → logprob: -6.883504390716553
    5. '_read' → logprob: -7.383504390716553
    6. '=' → logprob: -8.133503913879395
    7. '().' → logprob: -8.758503913879395
    8. '()' → logprob: -9.383503913879395
    9. ' readline' → logprob: -9.633503913879395
    10. '=input' → logprob: -10.008503913879395

Token 344: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5790706276893616
    2. '().' → logprob: -0.8290706276893616
    3. '()
' → logprob: -5.954070568084717
    4. '   ' → logprob: -7.579070568084717
    5. '()\' → logprob: -11.829071044921875
    6. '()
' → logprob: -12.954071044921875
    7. '()<' → logprob: -13.079071044921875
    8. '())' → logprob: -13.579071044921875
    9. '()

' → logprob: -13.579071044921875
    10. ' ()' → logprob: -13.829071044921875

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00443284772336483
    2. 'n' → logprob: -5.504432678222656
    3. 't' → logprob: -9.254432678222656
    4. 's' → logprob: -9.379432678222656
    5. ' n' → logprob: -9.629432678222656
    6. '    
' → logprob: -10.004432678222656
    7. 'a' → logprob: -10.754432678222656
    8. '(n' → logprob: -11.379432678222656
    9. '
' → logprob: -11.879432678222656
    10. '	n' → logprob: -11.879432678222656

Token 346: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17022724449634552
    2. '   ' → logprob: -2.545227289199829
    3. 'N' → logprob: -2.795227289199829
    4. ' n' → logprob: -4.29522705078125
    5. 't' → logprob: -6.67022705078125
    6. ' N' → logprob: -7.04522705078125
    7. 'q' → logprob: -7.79522705078125
    8. 's' → logprob: -8.29522705078125
    9. 'Q' → logprob: -9.17022705078125
    10. ' t' → logprob: -9.42022705078125

Token 347: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.04873201996088028
    2. 'True' → logprob: -3.048732042312622
    3. '(True' → logprob: -8.923731803894043
    4. ' line' → logprob: -12.048731803894043
    5. '1' → logprob: -12.798731803894043
    6. ' ' → logprob: -13.048731803894043
    7. 'line' → logprob: -15.673731803894043
    8. '(' → logprob: -15.923731803894043
    9. '=True' → logprob: -16.42373275756836
    10. ' (' → logprob: -16.67373275756836

Token 348: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06585060805082321
    2. '():' → logprob: -3.3158504962921143
    3. '       ' → logprob: -3.9408504962921143
    4. '   ' → logprob: -5.940850734710693
    5. ':
' → logprob: -5.940850734710693
    6. ',' → logprob: -6.690850734710693
    7. ' :' → logprob: -7.815850734710693
    8. '(' → logprob: -7.940850734710693
    9. '():
' → logprob: -7.940850734710693
    10. '(line' → logprob: -9.190850257873535

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013980613090097904
    2. '   ' → logprob: -4.763980388641357
    3. ' line' → logprob: -5.263980388641357
    4. 'line' → logprob: -9.013980865478516
    5. '    ' → logprob: -11.263980865478516
    6. ' try' → logprob: -11.638980865478516
    7. '#line' → logprob: -12.263980865478516
    8. '	   ' → logprob: -12.388980865478516
    9. '	line' → logprob: -12.388980865478516
    10. '           ' → logprob: -13.013980865478516

Token 350: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3611700236797333
    2. 'line' → logprob: -1.2361700534820557
    3. 's' → logprob: -5.486169815063477
    4. '   ' → logprob: -5.486169815063477
    5. ' s' → logprob: -6.111169815063477
    6. 'n' → logprob: -6.986169815063477
    7. '       ' → logprob: -7.236169815063477
    8. ' n' → logprob: -8.361169815063477
    9. '	line' → logprob: -9.611169815063477
    10. 'S' → logprob: -9.861169815063477

Token 351: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014227956533432
    2. ',' → logprob: -2.201422691345215
    3. '=' → logprob: -2.701422691345215
    4. '=int' → logprob: -6.576422691345215
    5. ',N' → logprob: -6.701422691345215
    6. '=input' → logprob: -7.076422691345215
    7. ',n' → logprob: -7.951422691345215
    8. ' ,' → logprob: -8.201422691345215
    9. '=line' → logprob: -8.951422691345215
    10. ' ==' → logprob: -9.076422691345215

Token 352: ',K' (ID: 107147)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39390116930007935
    2. ' =' → logprob: -1.2689011096954346
    3. ',' → logprob: -3.1439011096954346
    4. '=input' → logprob: -7.268901348114014
    5. ',K' → logprob: -8.518900871276855
    6. ',Q' → logprob: -9.268900871276855
    7. ',P' → logprob: -9.643900871276855
    8. '=int' → logprob: -9.768900871276855
    9. ',N' → logprob: -10.143900871276855
    10. ',input' → logprob: -10.518900871276855

Token 353: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5053480863571167
    2. '=' → logprob: -1.0053480863571167
    3. '=input' → logprob: -3.5053482055664062
    4. '=line' → logprob: -7.505348205566406
    5. '=sys' → logprob: -9.380348205566406
    6. '=int' → logprob: -10.130348205566406
    7. '=list' → logprob: -10.630348205566406
    8. '=N' → logprob: -10.630348205566406
    9. ',' → logprob: -12.005348205566406
    10. ',N' → logprob: -12.255348205566406

Token 354: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00862131267786026
    2. ' map' → logprob: -4.7586212158203125
    3. 'input' → logprob: -12.758621215820312
    4. 'list' → logprob: -12.883621215820312
    5. '(map' → logprob: -13.883621215820312
    6. 'sys' → logprob: -15.633621215820312
    7. '	map' → logprob: -16.008621215820312
    8. '[' → logprob: -17.008621215820312
    9. 'tuple' → logprob: -17.008621215820312
    10. '
' → logprob: -17.883621215820312

Token 355: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003805064770858735
    2. '(input' → logprob: -8.500380516052246
    3. '(str' → logprob: -8.875380516052246
    4. '(' → logprob: -11.125380516052246
    5. 'int' → logprob: -11.375380516052246
    6. '(list' → logprob: -12.000380516052246
    7. '(lambda' → logprob: -13.250380516052246
    8. '(sys' → logprob: -13.750380516052246
    9. 'input' → logprob: -14.500380516052246
    10. 'list' → logprob: -14.750380516052246

Token 356: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.10174426436424255
    2. ',' → logprob: -2.3517441749572754
    3. '(input' → logprob: -6.726744174957275
    4. 'input' → logprob: -8.976744651794434
    5. '(sys' → logprob: -9.351744651794434
    6. ',int' → logprob: -9.601744651794434
    7. '(' → logprob: -10.976744651794434
    8. '(),' → logprob: -11.351744651794434
    9. 'sys' → logprob: -11.601744651794434
    10. ')' → logprob: -12.726744651794434

Token 357: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.204720582696609e-05
    2. '()' → logprob: -9.875052452087402
    3. '())' → logprob: -15.500052452087402
    4. '()
' → logprob: -16.500051498413086
    5. '(' → logprob: -16.875051498413086
    6. ' ().' → logprob: -17.250051498413086
    7. '().'' → logprob: -18.000051498413086
    8. '('' → logprob: -18.125051498413086
    9. '()[' → logprob: -18.500051498413086
    10. ')' → logprob: -19.000051498413086

Token 358: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.030042966827750206
    2. 'strip' → logprob: -3.530042886734009
    3. 'rstrip' → logprob: -8.15504264831543
    4. 'read' → logprob: -13.53004264831543
    5. ' split' → logprob: -13.78004264831543
    6. '().' → logprob: -13.90504264831543
    7. '(split' → logprob: -13.90504264831543
    8. ')' → logprob: -14.40504264831543
    9. ' strip' → logprob: -15.53004264831543
    10. 'plit' → logprob: -16.90504264831543

Token 359: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2575438618659973
    2. '())' → logprob: -1.5075438022613525
    3. '()' → logprob: -5.257544040679932
    4. '())
' → logprob: -8.757543563842773
    5. '))' → logprob: -9.132543563842773
    6. ')
' → logprob: -9.257543563842773
    7. '(' → logprob: -11.382543563842773
    8. '()
' → logprob: -12.507543563842773
    9. '()))' → logprob: -12.632543563842773
    10. '(),' → logprob: -13.132543563842773

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009949568659067154
    2. '<|end|>' → logprob: -4.759949684143066
    3. ' if' → logprob: -7.009949684143066
    4. '	' → logprob: -8.884949684143066
    5. '   ' → logprob: -9.509949684143066
    6. ' ' → logprob: -9.509949684143066
    7. '	if' → logprob: -10.509949684143066
    8. '        
' → logprob: -10.884949684143066
    9. ',' → logprob: -11.134949684143066
    10. '<|end|>' → logprob: -11.134949684143066

Token 361: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35189568996429443
    2. 'if' (adapté à ' if') → logprob: -1.4768956899642944
    3. '       ' → logprob: -2.726895809173584
    4. '<|end|>' → logprob: -6.101895809173584
    5. '	if' → logprob: -7.976895809173584
    6. ' ' → logprob: -8.476895332336426
    7. '
' → logprob: -11.226895332336426
    8. '	' → logprob: -11.351895332336426
    9. ';if' → logprob: -11.476895332336426
    10. '   ' → logprob: -11.476895332336426

Token 362: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.029791107401251793
    2. ' N' → logprob: -3.5297911167144775
    3. ' not' → logprob: -10.154790878295898
    4. 'not' → logprob: -13.904790878295898
    5. ' ' → logprob: -14.779790878295898
    6. '(N' → logprob: -15.029790878295898
    7. '[N' → logprob: -16.9047908782959
    8. '	N' → logprob: -17.1547908782959
    9. ' (' → logprob: -17.4047908782959
    10. '  ' → logprob: -18.5297908782959

Token 363: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5760300159454346
    2. '==' → logprob: -0.8260300159454346
    3. '<' → logprob: -10.326029777526855
    4. '=' → logprob: -10.326029777526855
    5. ' <' → logprob: -11.326029777526855
    6. '<=' → logprob: -12.326029777526855
    7. '==-' → logprob: -12.576029777526855
    8. ' <=' → logprob: -13.201029777526855
    9. '===' → logprob: -14.201029777526855
    10. ')==' → logprob: -14.451029777526855

Token 364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '۰' → logprob: -19.25023078918457
    4. '```' → logprob: -20.00023078918457
    5. '０' → logprob: -20.12523078918457
    6. 'M' → logprob: -20.37523078918457
    7. '   ' → logprob: -20.87523078918457
    8. '  ' → logprob: -21.25023078918457
    9. '=' → logprob: -21.62523078918457
    10. '-' → logprob: -21.75023078918457

Token 365: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018437055870890617
    2. 'and' → logprob: -4.018436908721924
    3. ' or' → logprob: -8.643437385559082
    4. ':' → logprob: -9.643437385559082
    5. '	and' → logprob: -10.143437385559082
    6. ',' → logprob: -13.268437385559082
    7. ' ' → logprob: -13.393437385559082
    8. '<|end|>' → logprob: -14.143437385559082
    9. ' ' → logprob: -14.518437385559082
    10. '   ' → logprob: -14.518437385559082

Token 366: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0015023599844425917
    2. ' M' → logprob: -6.501502513885498
    3. '	M' → logprob: -18.376502990722656
    4. ' ' → logprob: -19.251502990722656
    5. '  ' → logprob: -19.251502990722656
    6. '   ' → logprob: -20.001502990722656
    7. ',M' → logprob: -20.251502990722656
    8. '<M' → logprob: -20.751502990722656
    9. ' ' → logprob: -21.126502990722656
    10. '=M' → logprob: -21.751502990722656

Token 367: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0002692032721824944
    2. ' ==' → logprob: -8.250268936157227
    3. '0' → logprob: -12.125268936157227
    4. '=' → logprob: -13.375268936157227
    5. '===' → logprob: -15.125268936157227
    6. ')==' → logprob: -15.375268936157227
    7. '==
' → logprob: -15.875268936157227
    8. ']==' → logprob: -16.250268936157227
    9. '```' → logprob: -16.250268936157227
    10. 'and' → logprob: -16.875268936157227

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -20.062515258789062
    4. '```' → logprob: -20.125015258789062
    5. '<|end|>' → logprob: -20.187515258789062
    6. '=' → logprob: -20.312515258789062
    7. '  ' → logprob: -21.687515258789062
    8. ' and' → logprob: -21.750015258789062
    9. '০' → logprob: -21.750015258789062
    10. '   ' → logprob: -21.812515258789062

Token 369: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009771435521543026
    2. 'and' → logprob: -4.634771347045898
    3. '0' → logprob: -11.509771347045898
    4. '	and' → logprob: -13.134771347045898
    5. '           ' → logprob: -14.509771347045898
    6. '       ' → logprob: -14.509771347045898
    7. ' и' → logprob: -14.759771347045898
    8. '<|end|>' → logprob: -14.759771347045898
    9. '<|end|>' → logprob: -14.884771347045898
    10. '```' → logprob: -15.009771347045898

Token 370: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0001584850688232109
    2. ' K' → logprob: -8.750158309936523
    3. ' ' → logprob: -17.125158309936523
    4. '0' → logprob: -17.125158309936523
    5. '       ' → logprob: -17.250158309936523
    6. '   ' → logprob: -17.875158309936523
    7. '	K' → logprob: -19.750158309936523
    8. '  ' → logprob: -20.375158309936523
    9. '           ' → logprob: -20.625158309936523
    10. '     ' → logprob: -21.125158309936523

Token 371: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004654641728848219
    2. ' ==' → logprob: -5.379654407501221
    3. '=' → logprob: -11.004654884338379
    4. ')==' → logprob: -11.879654884338379
    5. '()==' → logprob: -12.379654884338379
    6. '==
' → logprob: -13.004654884338379
    7. ']==' → logprob: -13.379654884338379
    8. '<|end|>' → logprob: -13.754654884338379
    9. '```' → logprob: -14.629654884338379
    10. '0' → logprob: -14.879654884338379

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -21.375
    4. '۰' → logprob: -22.375
    5. '<|end|>' → logprob: -22.75
    6. '  ' → logprob: -23.75
    7. '```' → logprob: -24.375
    8. '০' → logprob: -24.375
    9. '       ' → logprob: -25.25
    10. '０' → logprob: -25.25

Token 373: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04919947683811188
    2. ':
' → logprob: -3.6741995811462402
    3. '           ' → logprob: -3.7991995811462402
    4. ':return' → logprob: -8.549199104309082
    5. '       ' → logprob: -10.299199104309082
    6. ',' → logprob: -12.049199104309082
    7. '   ' → logprob: -12.549199104309082
    8. '.' → logprob: -12.799199104309082
    9. ':
' → logprob: -13.049199104309082
    10. ' break' → logprob: -13.799199104309082

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.741137283621356e-05
    2. '       ' → logprob: -9.875057220458984
    3. '		' → logprob: -13.000057220458984
    4. ' break' → logprob: -13.875057220458984
    5. '               ' → logprob: -14.375057220458984
    6. '   ' → logprob: -14.500057220458984
    7. '	       ' → logprob: -14.500057220458984
    8. '          ' → logprob: -15.125057220458984
    9. 'break' → logprob: -15.125057220458984
    10. '<|end|>' → logprob: -15.625057220458984

Token 375: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.032309021800756454
    2. ' break' → logprob: -4.032309055328369
    3. 'return' → logprob: -4.282309055328369
    4. '           ' → logprob: -8.782308578491211
    5. ' return' → logprob: -9.657308578491211
    6. '	break' → logprob: -11.157308578491211
    7. '       ' → logprob: -11.157308578491211
    8. '               ' → logprob: -13.157308578491211
    9. '_break' → logprob: -15.282308578491211
    10. '   ' → logprob: -15.282308578491211

Token 376: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036554694175720215
    2. '<|end|>' → logprob: -3.4115548133850098
    3. '        
' → logprob: -5.91155481338501
    4. '<|end|>' → logprob: -9.161554336547852
    5. '```' → logprob: -11.286554336547852
    6. '
' → logprob: -11.661554336547852
    7. 's' → logprob: -11.911554336547852
    8. '        ' → logprob: -12.036554336547852
    9. '            
' → logprob: -12.161554336547852
    10. ',' → logprob: -12.161554336547852

Token 377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00991356372833252
    2. '        
' → logprob: -5.384913444519043
    3. '<|end|>' → logprob: -5.384913444519043
    4. '
' → logprob: -7.384913444519043
    5. '```' → logprob: -10.509913444519043
    6. '<|end|>' → logprob: -11.634913444519043
    7. '            
' → logprob: -13.009913444519043
    8. ')' → logprob: -13.072413444519043
    9. 's' → logprob: -13.134913444519043
    10. 'next' → logprob: -13.197413444519043

Token 378: ' connections' (ID: 21069)
  Prédit: ' patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -1.0756841897964478
    2. '       ' → logprob: -1.2006841897964478
    3. 'patterns' → logprob: -1.8256841897964478
    4. ' words' → logprob: -2.825684070587158
    5. 'words' → logprob: -3.325684070587158
    6. 's' → logprob: -3.325684070587158
    7. 'strings' → logprob: -4.075684070587158
    8. ' s' → logprob: -4.200684070587158
    9. ' strings' → logprob: -4.575684070587158
    10. 'pattern' → logprob: -5.450684070587158

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04917961359024048
    2. '=' → logprob: -3.0491795539855957
    3. '=[]' → logprob: -8.174180030822754
    4. '   ' → logprob: -8.674180030822754
    5. ',' → logprob: -10.299180030822754
    6. '[' → logprob: -10.799180030822754
    7. ' ' → logprob: -11.299180030822754
    8. '={}' → logprob: -11.549180030822754
    9. '<|end|>' → logprob: -11.674180030822754
    10. '=[' → logprob: -11.674180030822754

Token 380: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008146900683641434
    2. '[]' → logprob: -5.2581467628479
    3. ' [[]' → logprob: -6.2581467628479
    4. ' [' → logprob: -7.2581467628479
    5. '[[' → logprob: -9.383147239685059
    6. '{}' → logprob: -9.508147239685059
    7. '[int' → logprob: -10.008147239685059
    8. '[]
' → logprob: -10.258147239685059
    9. '[n' → logprob: -11.508147239685059
    10. '[s' → logprob: -12.258147239685059

Token 381: 'input' (ID: 2586)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000206401280593127
    2. ' []' → logprob: -8.750205993652344
    3. 'set' → logprob: -10.250205993652344
    4. '[]
' → logprob: -12.000205993652344
    5. '{}' → logprob: -12.500205993652344
    6. '[' → logprob: -13.000205993652344
    7. '[]

' → logprob: -16.500205993652344
    8. ']' → logprob: -16.875205993652344
    9. '[][]' → logprob: -16.875205993652344
    10. '[]}' → logprob: -17.000205993652344

Token 382: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002515969565138221
    2. '()' → logprob: -6.00251579284668
    3. '()]' → logprob: -10.75251579284668
    4. '()].' → logprob: -11.00251579284668
    5. '())' → logprob: -14.00251579284668
    6. '()[' → logprob: -14.50251579284668
    7. '()).' → logprob: -14.87751579284668
    8. ' ().' → logprob: -16.00251579284668
    9. '()
' → logprob: -16.12751579284668
    10. ')' → logprob: -17.00251579284668

Token 383: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00654413178563118
    2. 'rstrip' → logprob: -5.50654411315918
    3. 'split' → logprob: -6.00654411315918
    4. ' strip' → logprob: -16.63154411315918
    5. '.strip' → logprob: -18.38154411315918
    6. '(strip' → logprob: -19.38154411315918
    7. 'replace' → logprob: -19.63154411315918
    8. '.rstrip' → logprob: -21.00654411315918
    9. 'rs' → logprob: -21.25654411315918
    10. 'read' → logprob: -21.50654411315918

Token 384: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3869536221027374
    2. '()]' → logprob: -1.136953592300415
    3. '()]
' → logprob: -10.761953353881836
    4. ' ()' → logprob: -11.011953353881836
    5. '()
' → logprob: -11.511953353881836
    6. '())' → logprob: -11.886953353881836
    7. '(' → logprob: -12.011953353881836
    8. '()[' → logprob: -12.261953353881836
    9. '(),' → logprob: -12.386953353881836
    10. '()\' → logprob: -12.386953353881836

Token 385: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38319170475006104
    2. '()' → logprob: -1.383191704750061
    3. 'for' → logprob: -2.8831915855407715
    4. '       ' → logprob: -4.6331915855407715
    5. ')' → logprob: -7.7581915855407715
    6. ']' → logprob: -8.00819206237793
    7. '()]' → logprob: -8.00819206237793
    8. '[' → logprob: -8.75819206237793
    9. '<|end|>' → logprob: -9.38319206237793
    10. '()[' → logprob: -9.38319206237793

Token 386: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00944887287914753
    2. 'range' → logprob: -5.259449005126953
    3. ' range' → logprob: -5.509449005126953
    4. ' _' → logprob: -8.884449005126953
    5. '_range' → logprob: -11.384449005126953
    6. ' in' → logprob: -12.009449005126953
    7. 'in' → logprob: -13.634449005126953
    8. '_=' → logprob: -15.259449005126953
    9. '(range' → logprob: -16.259449005126953
    10. '	range' → logprob: -16.759449005126953

Token 387: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5779626369476318
    2. 'range' → logprob: -1.3279626369476318
    3. 'in' → logprob: -1.8279626369476318
    4. ' range' → logprob: -4.327962875366211
    5. '_' → logprob: -13.077962875366211
    6. ' ' → logprob: -13.077962875366211
    7. '   ' → logprob: -13.827962875366211
    8. '(range' → logprob: -14.077962875366211
    9. '  ' → logprob: -14.327962875366211
    10. 'i' → logprob: -14.952962875366211

Token 388: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.6087021473795176e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -14.375045776367188
    4. '[' → logprob: -18.875045776367188
    5. '	range' → logprob: -19.125045776367188
    6. '
' → logprob: -20.500045776367188
    7. '   ' → logprob: -20.875045776367188
    8. '.range' → logprob: -21.000045776367188
    9. '[N' → logprob: -22.125045776367188
    10. '```' → logprob: -22.625045776367188

Token 389: '(N' (ID: 10564)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.10853737592697144
    2. 'N' → logprob: -2.483537435531616
    3. '(M' → logprob: -4.358537197113037
    4. ' M' → logprob: -5.858537197113037
    5. '(N' → logprob: -5.983537197113037
    6. 'K' → logprob: -6.858537197113037
    7. ' N' → logprob: -8.858537673950195
    8. '(K' → logprob: -10.483537673950195
    9. ' (' → logprob: -12.233537673950195
    10. ' K' → logprob: -12.858537673950195

Token 390: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.13388703338569e-06
    2. ']' → logprob: -12.125009536743164
    3. ')' → logprob: -13.250009536743164
    4. '       ' → logprob: -13.750009536743164
    5. ')]
' → logprob: -14.875009536743164
    6. ')],' → logprob: -16.125009536743164
    7. ' )' → logprob: -16.500009536743164
    8. '')]' → logprob: -16.625009536743164
    9. ' ]' → logprob: -17.000009536743164
    10. ')][' → logprob: -17.000009536743164

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6726940274238586
    2. 'dp' → logprob: -0.9226940274238586
    3. 'states' → logprob: -2.797693967819214
    4. 'DP' → logprob: -5.047694206237793
    5. 'state' → logprob: -5.297694206237793
    6. 'counts' → logprob: -5.547694206237793
    7. 'next' → logprob: -5.922694206237793
    8. 'graph' → logprob: -6.672694206237793
    9. 's' → logprob: -6.672694206237793
    10. '        
' → logprob: -6.797694206237793

Token 392: ' season' (ID: 5217)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7430086731910706
    2. 'states' → logprob: -1.2430086135864258
    3. 'graph' → logprob: -3.118008613586426
    4. ' states' → logprob: -3.493008613586426
    5. '       ' → logprob: -3.993008613586426
    6. 'patterns' → logprob: -4.118008613586426
    7. ' dp' → logprob: -4.243008613586426
    8. 'state' → logprob: -4.368008613586426
    9. 'words' → logprob: -4.618008613586426
    10. 'adj' → logprob: -4.618008613586426

Token 393: 'words' (ID: 10020)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.44819074869155884
    2. 's' → logprob: -1.198190689086914
    3. '_states' → logprob: -2.948190689086914
    4. '_word' → logprob: -5.573190689086914
    5. '_names' → logprob: -6.948190689086914
    6. 'al' → logprob: -7.573190689086914
    7. ' =' → logprob: -7.948190689086914
    8. '_lengths' → logprob: -8.573190689086914
    9. '_ids' → logprob: -8.823190689086914
    10. '_state' → logprob: -8.823190689086914

Token 394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869742453098297
    2. ' =' → logprob: -1.1369742155075073
    3. '=[]' → logprob: -9.511974334716797
    4. 's' → logprob: -10.886974334716797
    5. '   ' → logprob: -12.511974334716797
    6. '=[' → logprob: -13.886974334716797
    7. '=[]
' → logprob: -14.136974334716797
    8. '＝' → logprob: -14.261974334716797
    9. ' ' → logprob: -14.261974334716797
    10. ' =[' → logprob: -14.761974334716797

Token 395: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.00041625293670222163
    2. '[' → logprob: -8.250415802001953
    3. ' [' → logprob: -9.250415802001953
    4. 'input' → logprob: -9.750415802001953
    5. ' input' → logprob: -14.625415802001953
    6. '[]' → logprob: -17.500415802001953
    7. '[int' → logprob: -17.625415802001953
    8. '[list' → logprob: -17.750415802001953
    9. '[in' → logprob: -17.875415802001953
    10. '[line' → logprob: -18.500415802001953

Token 396: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -6.630610641877865e-06
    2. ' input' → logprob: -12.000006675720215
    3. 'sys' → logprob: -14.750006675720215
    4. '(input' → logprob: -17.6250057220459
    5. '
' → logprob: -18.5000057220459
    6. '<input' → logprob: -19.1250057220459
    7. '=input' → logprob: -19.5000057220459
    8. '	input' → logprob: -20.2500057220459
    9. '.input' → logprob: -20.2500057220459
    10. 'list' → logprob: -20.5000057220459

Token 397: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005563704180531204
    2. '()' → logprob: -7.500556468963623
    3. '()].' → logprob: -13.500555992126465
    4. '()]' → logprob: -13.750555992126465
    5. '.readline' → logprob: -14.625555992126465
    6. '())' → logprob: -16.00055694580078
    7. '.strip' → logprob: -16.25055694580078
    8. '()).' → logprob: -16.62555694580078
    9. '()[' → logprob: -17.25055694580078
    10. ' ().' → logprob: -17.37555694580078

Token 398: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.001502598519437015
    2. 'rstrip' → logprob: -6.501502513885498
    3. ' strip' → logprob: -15.251502990722656
    4. '(strip' → logprob: -18.126502990722656
    5. 'read' → logprob: -19.001502990722656
    6. '.strip' → logprob: -19.001502990722656
    7. '_strip' → logprob: -19.126502990722656
    8. 'split' → logprob: -19.251502990722656
    9. '```' → logprob: -20.126502990722656
    10. '-strip' → logprob: -20.501502990722656

Token 399: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.56364209135063e-05
    2. '()]' → logprob: -9.750065803527832
    3. '()
' → logprob: -13.125065803527832
    4. 'for' → logprob: -13.125065803527832
    5. ' ()' → logprob: -13.125065803527832
    6. '())' → logprob: -14.875065803527832
    7. ')' → logprob: -14.875065803527832
    8. ' for' → logprob: -15.125065803527832
    9. ']' → logprob: -15.875065803527832
    10. '(' → logprob: -17.250064849853516

Token 400: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0026876560878008604
    2. ' for' → logprob: -6.502687454223633
    3. 'for' → logprob: -6.752687454223633
    4. '()]' → logprob: -11.377687454223633
    5. ')' → logprob: -13.377687454223633
    6. ' ()' → logprob: -13.502687454223633
    7. '()
' → logprob: -13.627687454223633
    8. ']' → logprob: -14.627687454223633
    9. '())' → logprob: -14.752687454223633
    10. '	for' → logprob: -16.127687454223633

Token 401: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.464956670999527
    2. 'range' → logprob: -1.2149566411972046
    3. '_' → logprob: -2.714956760406494
    4. 'in' → logprob: -5.214956760406494
    5. ' in' → logprob: -5.714956760406494
    6. '_range' → logprob: -8.839956283569336
    7. '(range' → logprob: -11.214956283569336
    8. ' _' → logprob: -11.464956283569336
    9. '	range' → logprob: -12.589956283569336
    10. 'i' → logprob: -13.714956283569336

Token 402: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.619311974034645e-05
    2. ' range' → logprob: -10.250036239624023
    3. '_' → logprob: -14.375036239624023
    4. '_range' → logprob: -16.000036239624023
    5. '(range' → logprob: -17.625036239624023
    6. 'in' → logprob: -17.625036239624023
    7. '	range' → logprob: -19.500036239624023
    8. '[' → logprob: -20.375036239624023
    9. '.range' → logprob: -22.625036239624023
    10. '(' → logprob: -23.000036239624023

Token 403: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -18.25002670288086
    4. '
' → logprob: -21.50002670288086
    5. '	range' → logprob: -21.50002670288086
    6. '   ' → logprob: -23.37502670288086
    7. '.range' → logprob: -23.62502670288086
    8. ' ' → logprob: -24.37502670288086
    9. '[' → logprob: -24.62502670288086
    10. '```' → logprob: -24.75002670288086

Token 404: '(K' (ID: 28797)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007108421064913273
    2. ' range' → logprob: -5.007108211517334
    3. 'M' → logprob: -8.757108688354492
    4. '(M' → logprob: -8.882108688354492
    5. '(range' → logprob: -9.257108688354492
    6. 'K' → logprob: -13.882108688354492
    7. '.range' → logprob: -16.382108688354492
    8. '	range' → logprob: -16.382108688354492
    9. 'Range' → logprob: -16.632108688354492
    10. '(K' → logprob: -16.757108688354492

Token 405: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.010534112341701984
    2. ']' → logprob: -4.760534286499023
    3. ')' → logprob: -6.260534286499023
    4. ' ]' → logprob: -13.385534286499023
    5. '   ' → logprob: -13.635534286499023
    6. '       ' → logprob: -13.885534286499023
    7. '()]' → logprob: -14.010534286499023
    8. '])' → logprob: -14.135534286499023
    9. ' )' → logprob: -14.260534286499023
    10. '])]' → logprob: -14.385534286499023

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03973517566919327
    2. '<|end|>' → logprob: -3.4147350788116455
    3. '        
' → logprob: -6.164735317230225
    4. 'next' → logprob: -6.414735317230225
    5. '
' → logprob: -6.539735317230225
    6. ' next' → logprob: -8.039734840393066
    7. '[next' → logprob: -9.414734840393066
    8. 'dp' → logprob: -9.414734840393066
    9. '<|end|>' → logprob: -9.414734840393066
    10. '_next' → logprob: -9.914734840393066

Token 407: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6197212338447571
    2. 'dp' → logprob: -0.8697212338447571
    3. '#' (adapté à ' #') → logprob: -3.7447211742401123
    4. 'states' → logprob: -4.869721412658691
    5. 'patterns' → logprob: -5.994721412658691
    6. 'from' → logprob: -5.994721412658691
    7. 'state' → logprob: -6.244721412658691
    8. 'n' → logprob: -7.119721412658691
    9. 'f' → logprob: -7.494721412658691
    10. 'pattern' → logprob: -8.369721412658691

Token 408: ' construire' (ID: 92473)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3888186812400818
    2. 'next' → logprob: -1.5138187408447266
    3. '#' → logprob: -3.2638187408447266
    4. ' next' → logprob: -3.7638187408447266
    5. ' dp' → logprob: -4.013818740844727
    6. 'from' → logprob: -4.388818740844727
    7. 'import' → logprob: -6.888818740844727
    8. 'f' → logprob: -6.888818740844727
    9. 'states' → logprob: -7.013818740844727
    10. 'patterns' → logprob: -7.013818740844727

Token 409: ' diction' (ID: 155259)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4760338068008423
    2. ' next' → logprob: -1.1010338068008423
    3. ' nxt' → logprob: -5.226033687591553
    4. ' les' → logprob: -5.351033687591553
    5. ' la' → logprob: -5.476033687591553
    6. 'l' → logprob: -5.476033687591553
    7. 'f' → logprob: -5.601033687591553
    8. '_next' → logprob: -5.726033687591553
    9. '#' → logprob: -5.726033687591553
    10. ' l' → logprob: -6.101033687591553

Token 410: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.002784077310934663
    2. 'naires' → logprob: -6.002784252166748
    3. 'aire' → logprob: -8.12778377532959
    4. 'n' → logprob: -12.62778377532959
    5. 'aires' → logprob: -12.62778377532959
    6. 'na' → logprob: -12.87778377532959
    7. 'ary' → logprob: -13.00278377532959
    8. '   ' → logprob: -14.50278377532959
    9. '```' → logprob: -15.00278377532959
    10. '#' → logprob: -15.62778377532959

Token 411: ' adj' (ID: 20251)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007058711722493172
    2. 'dict' → logprob: -5.757058620452881
    3. ' =' → logprob: -6.632058620452881
    4. ' dict' → logprob: -7.882058620452881
    5. '=' → logprob: -8.257059097290039
    6. ',' → logprob: -8.382059097290039
    7. '        
' → logprob: -8.882059097290039
    8. ' graph' → logprob: -8.882059097290039
    9. ':' → logprob: -9.007059097290039
    10. 'graph' → logprob: -9.007059097290039

Token 412: 'ac' (ID: 359)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.061310555785894394
    2. ' =' → logprob: -2.9363105297088623
    3. '=' → logprob: -6.061310768127441
    4. 'ac' → logprob: -6.311310768127441
    5. 'acent' → logprob: -6.686310768127441
    6. '[' → logprob: -8.186310768127441
    7. '       ' → logprob: -8.936310768127441
    8. '=[]
' → logprob: -9.061310768127441
    9. '={}
' → logprob: -9.436310768127441
    10. '_list' → logprob: -9.686310768127441

Token 413: 'ence' (ID: 1082)
  Prédit: 'ency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.7424980401992798
    2. 'acency' → logprob: -1.3674980401992798
    3. 'ac' → logprob: -2.3674979209899902
    4. 'ent' → logprob: -2.8674979209899902
    5. 'ence' → logprob: -2.9924979209899902
    6. 'ance' → logprob: -3.2424979209899902
    7. 'ancy' → logprob: -5.36749792098999
    8. '```' → logprob: -5.61749792098999
    9. 'rence' → logprob: -5.99249792098999
    10. 'c' → logprob: -6.36749792098999

Token 414: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029907269403338432
    2. ' =' → logprob: -3.7799072265625
    3. ' adjacency' → logprob: -6.1549072265625
    4. '=' → logprob: -6.4049072265625
    5. 'adj' → logprob: -7.0299072265625
    6. ',' → logprob: -7.5299072265625
    7. ':' → logprob: -7.6549072265625
    8. '
' → logprob: -8.5299072265625
    9. '   ' → logprob: -9.5299072265625
    10. '(adj' → logprob: -9.6549072265625

Token 415: ' from' (ID: 591)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.8181654810905457
    2. ' graph' → logprob: -1.4431655406951904
    3. ' adj' → logprob: -1.5681655406951904
    4. 'graph' → logprob: -2.9431655406951904
    5. ' adjacency' → logprob: -3.4431655406951904
    6. '       ' → logprob: -3.6931655406951904
    7. 'from' → logprob: -5.943165302276611
    8. ' from' → logprob: -6.568165302276611
    9. ' defaultdict' → logprob: -8.31816577911377
    10. 'Adj' → logprob: -9.44316577911377

Token 416: ' word' (ID: 2195)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.2102169692516327
    2. ' collections' → logprob: -1.710216999053955
    3. 'default' → logprob: -5.210216999053955
    4. '{}' → logprob: -6.835216999053955
    5. '=' → logprob: -7.335216999053955
    6. '[' → logprob: -7.960216999053955
    7. 'connections' → logprob: -8.460216522216797
    8. ' defaultdict' → logprob: -8.710216522216797
    9. 'dict' → logprob: -8.960216522216797
    10. ' =' → logprob: -8.960216522216797

Token 417: ' index' (ID: 3472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1294519156217575
    2. '_to' → logprob: -3.0044519901275635
    3. 's' → logprob: -3.6294519901275635
    4. '=' → logprob: -4.004451751708984
    5. '_dict' → logprob: -4.754451751708984
    6. ',' → logprob: -5.379451751708984
    7. 'dict' → logprob: -5.629451751708984
    8. 'to' → logprob: -6.379451751708984
    9. '_list' → logprob: -6.754451751708984
    10. '   ' → logprob: -6.754451751708984

Token 418: ' ->' (ID: 2747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0503234937787056
    2. '       ' → logprob: -3.550323486328125
    3. '=' → logprob: -4.425323486328125
    4. 'adj' → logprob: -6.050323486328125
    5. ' adjacency' → logprob: -6.300323486328125
    6. ':' → logprob: -6.675323486328125
    7. '_adj' → logprob: -7.300323486328125
    8. ',' → logprob: -7.425323486328125
    9. '   ' → logprob: -7.675323486328125
    10. ' adj' → logprob: -8.675323486328125

Token 419: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.17611995339393616
    2. '{}' → logprob: -1.9261199235916138
    3. '{' → logprob: -4.926119804382324
    4. 'set' → logprob: -5.051119804382324
    5. ' []' → logprob: -6.801119804382324
    6. 'default' → logprob: -7.801119804382324
    7. '[' → logprob: -7.926119804382324
    8. 'list' → logprob: -9.426119804382324
    9. 'dict' → logprob: -10.051119804382324
    10. ' {}' → logprob: -10.426119804382324

Token 420: ' of' (ID: 328)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3932666480541229
    2. ' of' → logprob: -2.1432666778564453
    3. 'of' → logprob: -2.8932666778564453
    4. '_of' → logprob: -3.3932666778564453
    5. '=[]' → logprob: -3.5182666778564453
    6. ' =' → logprob: -3.6432666778564453
    7. '=' → logprob: -3.7682666778564453
    8. '()' → logprob: -4.518266677856445
    9. '[' → logprob: -5.143266677856445
    10. '<|end|>' → logprob: -5.518266677856445

Token 421: ' to' (ID: 316)
  Prédit: '(to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(to' → logprob: -1.279289722442627
    2. '(' → logprob: -1.529289722442627
    3. '(next' → logprob: -1.654289722442627
    4. ' (' → logprob: -2.029289722442627
    5. '(word' → logprob: -2.279289722442627
    6. '(destination' → logprob: -4.154289722442627
    7. '(indices' → logprob: -4.154289722442627
    8. '(dest' → logprob: -4.654289722442627
    9. '(target' → logprob: -4.654289722442627
    10. 'neighbors' → logprob: -5.404289722442627

Token 422: ' word' (ID: 2195)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.330636203289032
    2. '[]' → logprob: -2.0806362628936768
    3. '_indices' → logprob: -2.7056362628936768
    4. '_vertices' → logprob: -4.205636024475098
    5. 'indices' → logprob: -4.330636024475098
    6. 's' → logprob: -4.580636024475098
    7. '_lists' → logprob: -4.580636024475098
    8. ' =' → logprob: -4.705636024475098
    9. '=[]
' → logprob: -5.205636024475098
    10. '_list' → logprob: -5.705636024475098

Token 423: ' indices' (ID: 30378)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020866157487034798
    2. 'indices' → logprob: -4.270866394042969
    3. ' indices' → logprob: -5.895866394042969
    4. '_indices' → logprob: -6.145866394042969
    5. '[]' → logprob: -7.270866394042969
    6. ' s' → logprob: -8.145866394042969
    7. ' =' → logprob: -8.645866394042969
    8. 'indexes' → logprob: -8.645866394042969
    9. '_indexes' → logprob: -9.145866394042969
    10. '   ' → logprob: -9.395866394042969

Token 424: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01737855188548565
    2. 'adj' → logprob: -5.017378330230713
    3. ' adjacency' → logprob: -5.017378330230713
    4. ' adj' → logprob: -6.892378330230713
    5. 'graph' → logprob: -7.767378330230713
    6. ',' → logprob: -7.767378330230713
    7. '<|end|>' → logprob: -7.892378330230713
    8. '        
' → logprob: -8.017378807067871
    9. 'edges' → logprob: -8.267378807067871
    10. ' graph' → logprob: -8.642378807067871

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03585979714989662
    2. ' adjacency' → logprob: -4.03585958480835
    3. 'adj' → logprob: -4.91085958480835
    4. ' adj' → logprob: -5.53585958480835
    5. '        
' → logprob: -6.41085958480835
    6. ' graph' → logprob: -6.66085958480835
    7. '<|end|>' → logprob: -7.53585958480835
    8. 'graph' → logprob: -7.66085958480835
    9. '```' → logprob: -7.66085958480835
    10. ',' → logprob: -7.91085958480835

Token 426: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.14562292397022247
    2. 'graph' → logprob: -3.270622968673706
    3. ' adj' → logprob: -3.395622968673706
    4. '       ' → logprob: -3.520622968673706
    5. ' graph' → logprob: -4.145622730255127
    6. ' adjacency' → logprob: -4.270622730255127
    7. 'from' → logprob: -5.520622730255127
    8. ' from' → logprob: -8.145623207092285
    9. 'edges' → logprob: -9.770623207092285
    10. ' defaultdict' → logprob: -10.395623207092285

Token 427: ' on' (ID: 402)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.032054487615823746
    2. 'graph' → logprob: -3.9070544242858887
    3. ' adj' → logprob: -4.907054424285889
    4. 'from' → logprob: -6.157054424285889
    5. ' graph' → logprob: -6.907054424285889
    6. '       ' → logprob: -7.532054424285889
    7. ' adjacency' → logprob: -8.157054901123047
    8. '   ' → logprob: -10.157054901123047
    9. ' from' → logprob: -10.532054901123047
    10. 'edges' → logprob: -10.657054901123047

Token 428: ' doit' (ID: 21822)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.4872574508190155
    2. 'collections' → logprob: -1.487257480621338
    3. 'continue' → logprob: -3.237257480621338
    4. ' defaultdict' → logprob: -3.487257480621338
    5. 'from' → logprob: -4.362257480621338
    6. ' collections' → logprob: -4.487257480621338
    7. 's' → logprob: -4.737257480621338
    8. '=' → logprob: -4.862257480621338
    9. 'adj' → logprob: -4.862257480621338
    10. '[]' → logprob: -5.737257480621338

Token 429: ' travailler' (ID: 57952)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.6218546628952026
    2. '=' → logprob: -1.9968546628952026
    3. ' =' → logprob: -1.9968546628952026
    4. 'd' → logprob: -1.9968546628952026
    5. 'adj' → logprob: -2.496854782104492
    6. 'continue' → logprob: -2.746854782104492
    7. '[]' → logprob: -3.246854782104492
    8. 'default' → logprob: -3.871854782104492
    9. 't' → logprob: -4.246854782104492
    10. 's' → logprob: -4.246854782104492

Token 430: ' avec' (ID: 3937)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.8327862024307251
    2. 'sur' → logprob: -1.707786202430725
    3. ' avec' → logprob: -2.2077860832214355
    4. 'avec' → logprob: -2.2077860832214355
    5. ' with' → logprob: -2.5827860832214355
    6. '       ' → logprob: -4.0827860832214355
    7. '   ' → logprob: -4.2077860832214355
    8. 'for' → logprob: -4.4577860832214355
    9. '_sur' → logprob: -5.0827860832214355
    10. ' sur' → logprob: -5.2077860832214355

Token 431: ' index' (ID: 3472)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.06505449116230011
    2. 'default' → logprob: -3.065054416656494
    3. '{' → logprob: -4.940054416656494
    4. 'dict' → logprob: -5.315054416656494
    5. ' {}' → logprob: -6.315054416656494
    6. 'collections' → logprob: -6.440054416656494
    7. ' defaultdict' → logprob: -7.690054416656494
    8. 'range' → logprob: -9.565054893493652
    9. 'a' → logprob: -9.565054893493652
    10. '[' → logprob: -9.940054893493652

Token 432: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6477312445640564
    2. ' =' → logprob: -1.0227313041687012
    3. '_map' → logprob: -3.522731304168701
    4. '_connections' → logprob: -3.772731304168701
    5. 'from' → logprob: -5.022731304168701
    6. '_to' → logprob: -5.022731304168701
    7. '_from' → logprob: -5.022731304168701
    8. '_' → logprob: -5.022731304168701
    9. '_mapping' → logprob: -5.022731304168701
    10. '_s' → logprob: -5.147731304168701

Token 433: ' mots' (ID: 38338)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.7068272829055786
    2. ' mots' → logprob: -1.8318272829055786
    3. 'connections' → logprob: -1.8318272829055786
    4. 'm' → logprob: -1.9568272829055786
    5. ' words' → logprob: -4.206827163696289
    6. 'nodes' → logprob: -4.456827163696289
    7. ' connections' → logprob: -4.456827163696289
    8. 'conn' → logprob: -5.831827163696289
    9. 'word' → logprob: -7.081827163696289
    10. 'con' → logprob: -7.081827163696289

Token 434: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005509315058588982
    2. '        
' → logprob: -6.005509376525879
    3. '   ' → logprob: -7.255509376525879
    4. 'from' → logprob: -7.880509376525879
    5. ',' → logprob: -8.130509376525879
    6. 'indices' → logprob: -8.255509376525879
    7. 'adj' → logprob: -8.505509376525879
    8. ' adjacency' → logprob: -8.755509376525879
    9. ' =' → logprob: -8.880509376525879
    10. '
' → logprob: -9.505509376525879

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021981537342071533
    2. 'adj' → logprob: -4.771981716156006
    3. '        
' → logprob: -5.771981716156006
    4. '
' → logprob: -6.021981716156006
    5. '   ' → logprob: -6.271981716156006
    6. ' adjacency' → logprob: -6.521981716156006
    7. '<|end|>' → logprob: -6.771981716156006
    8. ' adj' → logprob: -7.021981716156006
    9. ',' → logprob: -7.771981716156006
    10. 'from' → logprob: -8.271981239318848

Token 436: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.18065860867500305
    2. 'graph' → logprob: -1.9306585788726807
    3. ' graph' → logprob: -4.68065881729126
    4. ' adj' → logprob: -5.43065881729126
    5. 'word' → logprob: -5.80565881729126
    6. 'from' → logprob: -5.93065881729126
    7. ' adjacency' → logprob: -7.80565881729126
    8. '       ' → logprob: -8.430658340454102
    9. ' word' → logprob: -9.430658340454102
    10. '```' → logprob: -9.930658340454102

Token 437: ' d' (ID: 272)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0705723762512207
    2. 'graph' → logprob: -2.9455723762512207
    3. ' adj' → logprob: -5.195572376251221
    4. 'from' → logprob: -5.320572376251221
    5. 'word' → logprob: -5.945572376251221
    6. ' graph' → logprob: -6.570572376251221
    7. ' adjacency' → logprob: -8.070571899414062
    8. '       ' → logprob: -8.445571899414062
    9. '   ' → logprob: -8.570571899414062
    10. ' from' → logprob: -9.320571899414062

Token 438: ''abord' (ID: 89989)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6526351571083069
    2. 'ict' → logprob: -1.652635097503662
    3. ' adjacency' → logprob: -2.777635097503662
    4. '=' → logprob: -3.027635097503662
    5. 'graph' → logprob: -3.402635097503662
    6. 'ictionary' → logprob: -3.777635097503662
    7. 'from' → logprob: -3.777635097503662
    8. 'e' → logprob: -3.777635097503662
    9. 'for' → logprob: -4.027635097503662
    10. 'ic' → logprob: -4.152635097503662

Token 439: ' recuper' (ID: 25501)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.053002797067165375
    2. 'adj' → logprob: -4.053002834320068
    3. ' word' → logprob: -4.178002834320068
    4. 'graph' → logprob: -5.053002834320068
    5. 'words' → logprob: -5.428002834320068
    6. 'index' → logprob: -6.678002834320068
    7. 'dict' → logprob: -6.803002834320068
    8. 'indices' → logprob: -6.803002834320068
    9. 'from' → logprob: -7.053002834320068
    10. 'node' → logprob: -7.053002834320068

Token 440: 'er' (ID: 259)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.08106816560029984
    2. 'er' → logprob: -2.581068277359009
    3. 'ate' → logprob: -6.20606803894043
    4. 'ération' → logprob: -10.20606803894043
    5. 'rer' → logprob: -10.20606803894043
    6. 'erer' → logprob: -10.70606803894043
    7. 'éré' → logprob: -11.33106803894043
    8. 'ère' → logprob: -11.45606803894043
    9. 'ér' → logprob: -11.95606803894043
    10. 'érez' → logprob: -11.95606803894043

Token 441: ' tous' (ID: 10688)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.0578291192650795
    2. 'all' → logprob: -3.8078291416168213
    3. ' word' → logprob: -4.182828903198242
    4. 'words' → logprob: -4.182828903198242
    5. 'index' → logprob: -6.307828903198242
    6. ' all' → logprob: -7.807828903198242
    7. ' words' → logprob: -7.807828903198242
    8. 'indices' → logprob: -7.932828903198242
    9. 'idx' → logprob: -8.807828903198242
    10. 'node' → logprob: -9.807828903198242

Token 442: ' les' (ID: 1341)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.12204642593860626
    2. ' words' → logprob: -2.99704647064209
    3. 'word' → logprob: -3.24704647064209
    4. 'nodes' → logprob: -4.49704647064209
    5. '_words' → logprob: -4.99704647064209
    6. ' word' → logprob: -5.49704647064209
    7. ' mots' → logprob: -7.12204647064209
    8. 'indices' → logprob: -7.37204647064209
    9. ' nodes' → logprob: -7.74704647064209
    10. '_word' → logprob: -7.87204647064209

Token 443: ' mots' (ID: 38338)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.03591281920671463
    2. 'm' → logprob: -3.6609127521514893
    3. 'nodes' → logprob: -5.035912990570068
    4. 'unique' → logprob: -7.035912990570068
    5. 'word' → logprob: -7.160912990570068
    6. ' mots' → logprob: -7.410912990570068
    7. 'mot' → logprob: -7.660912990570068
    8. ' words' → logprob: -8.91091251373291
    9. 'indices' → logprob: -9.28591251373291
    10. 'connections' → logprob: -10.41091251373291

Token 444: ' appara' (ID: 52982)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16538196802139282
    2. 'words' → logprob: -2.415381908416748
    3. ' words' → logprob: -4.040381908416748
    4. 'all' → logprob: -4.040381908416748
    5. ' all' → logprob: -4.165381908416748
    6. '(words' → logprob: -5.915381908416748
    7. 'word' → logprob: -5.915381908416748
    8. '<|end|>' → logprob: -7.040381908416748
    9. ',' → logprob: -7.290381908416748
    10. ' word' → logprob: -7.290381908416748

Token 445: 'issant' (ID: 31359)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.0818336009979248
    2. 'issent' → logprob: -1.0818336009979248
    3. 'issant' → logprob: -1.4568336009979248
    4. 'issants' → logprob: -2.956833600997925
    5. 'î' → logprob: -5.081833839416504
    6. '
' → logprob: -5.081833839416504
    7. '```' → logprob: -5.206833839416504
    8. 'us' → logprob: -5.706833839416504
    9. '``' → logprob: -5.831833839416504
    10. 'iss' → logprob: -6.331833839416504

Token 446: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.4211365580558777
    2. ' dans' → logprob: -1.2961366176605225
    3. ' =' → logprob: -3.6711366176605225
    4. ' in' → logprob: -3.9211366176605225
    5. 'in' → logprob: -4.546136379241943
    6. '=' → logprob: -5.546136379241943
    7. '=set' → logprob: -5.796136379241943
    8. '_words' → logprob: -7.171136379241943
    9. ',' → logprob: -7.296136379241943
    10. '_in' → logprob: -7.421136379241943

Token 447: ' connections' (ID: 21069)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.005309654399752617
    2. ' connections' → logprob: -5.255309581756592
    3. 'con' → logprob: -10.38031005859375
    4. '
' → logprob: -11.50531005859375
    5. '[' → logprob: -11.75531005859375
    6. '_connections' → logprob: -12.50531005859375
    7. 'the' → logprob: -12.63031005859375
    8. 'conn' → logprob: -12.88031005859375
    9. 'connection' → logprob: -13.13031005859375
    10. 'edges' → logprob: -13.13031005859375

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030066566541790962
    2. 'all' → logprob: -4.53006649017334
    3. 'words' → logprob: -5.28006649017334
    4. ' all' → logprob: -5.53006649017334
    5. '        
' → logprob: -6.03006649017334
    6. '(words' → logprob: -7.15506649017334
    7. ' words' → logprob: -7.28006649017334
    8. ':' → logprob: -7.28006649017334
    9. '```' → logprob: -7.65506649017334
    10. 'word' → logprob: -7.90506649017334

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02204754762351513
    2. 'words' → logprob: -4.772047519683838
    3. 'all' → logprob: -5.272047519683838
    4. 'word' → logprob: -5.522047519683838
    5. ' all' → logprob: -7.022047519683838
    6. '        
' → logprob: -7.272047519683838
    7. ' words' → logprob: -7.397047519683838
    8. 'indices' → logprob: -7.647047519683838
    9. ' word' → logprob: -8.022047996520996
    10. ',' → logprob: -8.397047996520996

Token 450: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' (adapté à ' words') → logprob: -0.8681634068489075
    2. 'all' → logprob: -1.3681633472442627
    3. '       ' → logprob: -1.6181633472442627
    4. 'word' → logprob: -2.2431633472442627
    5. ' all' → logprob: -4.743163585662842
    6. ' words' → logprob: -4.993163585662842
    7. ' word' → logprob: -6.368163585662842
    8. 'w' → logprob: -7.493163585662842
    9. '        
' → logprob: -7.743163585662842
    10. 'indices' → logprob: -8.118163108825684

Token 451: '_set' (ID: 5451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24228782951831818
    2. '=' → logprob: -1.6172878742218018
    3. '=set' → logprob: -4.117287635803223
    4. '_set' → logprob: -8.242287635803223
    5. '={}' → logprob: -8.867287635803223
    6. ',' → logprob: -11.492287635803223
    7. ' ' → logprob: -11.867287635803223
    8. '=[]' → logprob: -12.492287635803223
    9. '={}
' → logprob: -12.742287635803223
    10. '   ' → logprob: -13.117287635803223

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009902465157210827
    2. '=' → logprob: -4.634902477264404
    3. '=set' → logprob: -8.884902000427246
    4. '={}' → logprob: -12.384902000427246
    5. ' ' → logprob: -13.009902000427246
    6. ' ={' → logprob: -14.384902000427246
    7. '  ' → logprob: -15.384902000427246
    8. '   ' → logprob: -15.509902000427246
    9. ',' → logprob: -15.759902000427246
    10. ' ' → logprob: -15.884902000427246

Token 453: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00010402000043541193
    2. ' set' → logprob: -9.250103950500488
    3. '{' → logprob: -11.750103950500488
    4. '=set' → logprob: -17.500104904174805
    5. '(set' → logprob: -17.625104904174805
    6. '	set' → logprob: -19.375104904174805
    7. '{}' → logprob: -19.625104904174805
    8. ' {' → logprob: -20.875104904174805
    9. '   ' → logprob: -21.625104904174805
    10. '{
' → logprob: -22.375104904174805

Token 454: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5759950280189514
    2. '()' → logprob: -0.8259950280189514
    3. '()

' → logprob: -10.325995445251465
    4. '()
' → logprob: -11.825995445251465
    5. '(word' → logprob: -12.075995445251465
    6. '([' → logprob: -12.325995445251465
    7. '(con' → logprob: -13.575995445251465
    8. '(c' → logprob: -13.950995445251465
    9. '();' → logprob: -14.575995445251465
    10. '(words' → logprob: -14.700995445251465

Token 455: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15183085203170776
    2. '       ' → logprob: -2.7768309116363525
    3. ' for' → logprob: -2.9018309116363525
    4. '()
' → logprob: -4.026830673217773
    5. '()' → logprob: -5.401830673217773
    6. '   ' → logprob: -8.026830673217773
    7. '
' → logprob: -8.151830673217773
    8. '(words' → logprob: -8.276830673217773
    9. '        
' → logprob: -8.651830673217773
    10. '<|end|>' → logprob: -9.901830673217773

Token 456: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.3544423381972592e-05
    2. ' for' → logprob: -11.37501335144043
    3. '       ' → logprob: -13.50001335144043
    4. '   ' → logprob: -14.87501335144043
    5. 'words' → logprob: -16.12501335144043
    6. '	for' → logprob: -16.62501335144043
    7. '
' → logprob: -17.00001335144043
    8. '        
' → logprob: -17.37501335144043
    9. '```' → logprob: -18.00001335144043
    10. '    
' → logprob: -19.25001335144043

Token 457: ' f' (ID: 285)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5142236351966858
    2. 'u' → logprob: -1.389223575592041
    3. 'f' → logprob: -3.139223575592041
    4. 'frm' → logprob: -3.764223575592041
    5. 'from' → logprob: -4.264223575592041
    6. ' a' → logprob: -4.389223575592041
    7. 'conn' → logprob: -4.389223575592041
    8. ' u' → logprob: -4.514223575592041
    9. 'fr' → logprob: -4.639223575592041
    10. ' frm' → logprob: -5.389223575592041

Token 458: ',t' (ID: 26927)
  Prédit: 'rom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rom' → logprob: -0.4680192172527313
    2. ' in' → logprob: -2.0930192470550537
    3. 'word' → logprob: -2.3430192470550537
    4. ',' → logprob: -2.4680192470550537
    5. '_word' → logprob: -3.4680192470550537
    6. 'w' → logprob: -4.468019008636475
    7. 'in' → logprob: -4.843019008636475
    8. '_' → logprob: -4.968019008636475
    9. ',w' → logprob: -5.718019008636475
    10. '_,' → logprob: -5.968019008636475

Token 459: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012513183988630772
    2. 'in' → logprob: -4.387513160705566
    3. ' ' → logprob: -13.762513160705566
    4. '	in' → logprob: -14.512513160705566
    5. 'n' → logprob: -15.512513160705566
    6. 'import' → logprob: -15.637513160705566
    7. ',' → logprob: -15.637513160705566
    8. 'i' → logprob: -15.762513160705566
    9. 'or' → logprob: -15.887513160705566
    10. '_in' → logprob: -16.012514114379883

Token 460: ' connections' (ID: 21069)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.008617054671049118
    2. ' connections' → logprob: -4.758616924285889
    3. ' ' → logprob: -14.133617401123047
    4. '.connections' → logprob: -14.508617401123047
    5. '   ' → logprob: -14.633617401123047
    6. 'connection' → logprob: -15.508617401123047
    7. 'con' → logprob: -15.633617401123047
    8. '_connections' → logprob: -15.883617401123047
    9. '```' → logprob: -16.258617401123047
    10. 'connect' → logprob: -16.633617401123047

Token 461: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3489397168159485
    2. ':
' → logprob: -1.2239396572113037
    3. '():
' → logprob: -8.848939895629883
    4. '   ' → logprob: -9.348939895629883
    5. '<|end|>' → logprob: -9.348939895629883
    6. '):
' → logprob: -9.473939895629883
    7. ' :' → logprob: -10.973939895629883
    8. ':
' → logprob: -11.223939895629883
    9. ' :
' → logprob: -11.598939895629883
    10. '):' → logprob: -11.598939895629883

Token 462: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6657183170318604
    2. '           ' → logprob: -0.7907183170318604
    3. ' words' → logprob: -3.5407183170318604
    4. '   ' → logprob: -6.040718078613281
    5. '(words' → logprob: -7.915718078613281
    6. 'words' → logprob: -8.415718078613281
    7. '.words' → logprob: -9.165718078613281
    8. ',' → logprob: -9.290718078613281
    9. '```' → logprob: -9.290718078613281
    10. '
' → logprob: -9.915718078613281

Token 463: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.20802894234657288
    2. 'words' (adapté à ' words') → logprob: -2.08302903175354
    3. '           ' → logprob: -3.20802903175354
    4. '       ' → logprob: -4.083028793334961
    5. '   ' → logprob: -5.333028793334961
    6. '               ' → logprob: -6.958028793334961
    7. ' ' → logprob: -9.833028793334961
    8. '(words' → logprob: -10.208028793334961
    9. '```' → logprob: -10.583028793334961
    10. '.words' → logprob: -10.708028793334961

Token 464: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0008135587559081614
    2. '.' → logprob: -8.125813484191895
    3. '._' → logprob: -8.250813484191895
    4. '.add' → logprob: -8.625813484191895
    5. '_add' → logprob: -11.000813484191895
    6. '   ' → logprob: -11.500813484191895
    7. '.append' → logprob: -11.625813484191895
    8. '.setdefault' → logprob: -11.625813484191895
    9. '_.' → logprob: -11.750813484191895
    10. '_sets' → logprob: -12.250813484191895

Token 465: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.003183420980349183
    2. '.' → logprob: -5.753183364868164
    3. ' .' → logprob: -12.753183364868164
    4. '.update' → logprob: -13.128183364868164
    5. 'add' → logprob: -14.128183364868164
    6. '.Add' → logprob: -17.378183364868164
    7. '.dis' → logprob: -18.628183364868164
    8. '.setdefault' → logprob: -19.003183364868164
    9. '.append' → logprob: -19.128183364868164
    10. '   ' → logprob: -19.628183364868164

Token 466: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -5.836499985889532e-05
    2. 'f' → logprob: -9.7500581741333
    3. '(' → logprob: -16.750059127807617
    4. '	f' → logprob: -19.250059127807617
    5. ' f' → logprob: -19.875059127807617
    6. ' (' → logprob: -20.375059127807617
    7. '(t' → logprob: -21.500059127807617
    8. '(
' → logprob: -22.500059127807617
    9. '(str' → logprob: -22.500059127807617
    10. '   ' → logprob: -22.625059127807617

Token 467: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014174560084939003
    2. ')' → logprob: -4.264174461364746
    3. ')
' → logprob: -11.514174461364746
    4. ' )
' → logprob: -13.889174461364746
    5. ')

' → logprob: -16.889175415039062
    6. '           ' → logprob: -18.014175415039062
    7. '   ' → logprob: -18.389175415039062
    8. ')t' → logprob: -18.389175415039062
    9. '       ' → logprob: -18.514175415039062
    10. ' )' → logprob: -18.514175415039062

Token 468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12346890568733215
    2. '       ' → logprob: -2.3734688758850098
    3. '<|end|>' → logprob: -4.24846887588501
    4. '
' → logprob: -5.99846887588501
    5. '  
' → logprob: -6.37346887588501
    6. '   ' → logprob: -6.74846887588501
    7. '        
' → logprob: -7.12346887588501
    8. ' for' → logprob: -7.74846887588501
    9. 'for' → logprob: -8.123469352722168
    10. '    
' → logprob: -8.123469352722168

Token 469: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' (adapté à ' words') → logprob: -0.20166398584842682
    2. ' words' → logprob: -1.7016639709472656
    3. '           ' → logprob: -8.326663970947266
    4. '       ' → logprob: -11.951663970947266
    5. '   ' → logprob: -14.201663970947266
    6. '(words' → logprob: -14.451663970947266
    7. '.words' → logprob: -15.076663970947266
    8. 'for' → logprob: -16.201663970947266
    9. '```' → logprob: -16.201663970947266
    10. '
' → logprob: -16.326663970947266

Token 470: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.016488956287503242
    2. '.add' → logprob: -4.141489028930664
    3. '.' → logprob: -8.016489028930664
    4. 'add' → logprob: -9.766489028930664
    5. '           ' → logprob: -10.766489028930664
    6. 'Set' → logprob: -11.141489028930664
    7. 'set' → logprob: -11.516489028930664
    8. '.setdefault' → logprob: -11.766489028930664
    9. '.set' → logprob: -12.891489028930664
    10. '_SET' → logprob: -13.016489028930664

Token 471: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0002631238894537091
    2. '.' → logprob: -8.250263214111328
    3. ' .' → logprob: -13.750263214111328
    4. 'add' → logprob: -14.625263214111328
    5. '.update' → logprob: -16.000263214111328
    6. '           ' → logprob: -16.500263214111328
    7. '.Add' → logprob: -17.375263214111328
    8. '.append' → logprob: -18.250263214111328
    9. '
' → logprob: -19.125263214111328
    10. '.remove' → logprob: -19.625263214111328

Token 472: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.003184125293046236
    2. 't' → logprob: -5.7531843185424805
    3. ' t' → logprob: -12.12818431854248
    4. '(' → logprob: -14.62818431854248
    5. '(
' → logprob: -15.00318431854248
    6. ' (' → logprob: -15.87818431854248
    7. '	t' → logprob: -16.878183364868164
    8. '`t' → logprob: -18.878183364868164
    9. '(f' → logprob: -19.503183364868164
    10. ':t' → logprob: -19.503183364868164

Token 473: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000835120037663728
    2. ')
' → logprob: -7.250834941864014
    3. '       ' → logprob: -9.000835418701172
    4. ' )' → logprob: -13.875835418701172
    5. '   ' → logprob: -15.000835418701172
    6. '<|end|>' → logprob: -15.875835418701172
    7. ')

' → logprob: -16.250835418701172
    8. ')
' → logprob: -16.375835418701172
    9. '),' → logprob: -17.250835418701172
    10. '```' → logprob: -17.375835418701172

Token 474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26011785864830017
    2. '<|end|>' → logprob: -1.5101178884506226
    3. '        
' → logprob: -5.885118007659912
    4. '
' → logprob: -6.385118007659912
    5. '```' → logprob: -7.385118007659912
    6. '<|end|>' → logprob: -7.385118007659912
    7. ')' → logprob: -7.510118007659912
    8. '        ' → logprob: -8.010117530822754
    9. '  
' → logprob: -8.385117530822754
    10. '   ' → logprob: -8.635117530822754

Token 475: ' words' (ID: 6391)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3892766833305359
    2. ' words' → logprob: -1.5142767429351807
    3. 'words' (adapté à ' words') → logprob: -3.1392767429351807
    4. '
' → logprob: -3.6392767429351807
    5. '        
' → logprob: -4.639276504516602
    6. '<|end|>' → logprob: -4.889276504516602
    7. ' next' → logprob: -6.264276504516602
    8. '   ' → logprob: -6.264276504516602
    9. ')' → logprob: -6.264276504516602
    10. '(words' → logprob: -6.389276504516602

Token 476: ' =' (ID: 314)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.1243649423122406
    2. '_to' → logprob: -2.2493648529052734
    3. '_map' → logprob: -5.499364852905273
    4. ' =' → logprob: -5.624364852905273
    5. '_index' → logprob: -6.624364852905273
    6. '=' → logprob: -6.874364852905273
    7. '_dict' → logprob: -7.499364852905273
    8. '_idx' → logprob: -8.624364852905273
    9. '_set' → logprob: -8.874364852905273
    10. '_indices' → logprob: -9.124364852905273

Token 477: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10776639729738235
    2. 'sorted' → logprob: -2.6077663898468018
    3. ' list' → logprob: -3.6077663898468018
    4. ' sorted' → logprob: -6.607766628265381
    5. '[list' → logprob: -13.732766151428223
    6. '[' → logprob: -15.482766151428223
    7. ' ' → logprob: -16.73276710510254
    8. '['' → logprob: -16.85776710510254
    9. '(sorted' → logprob: -16.98276710510254
    10. '["' → logprob: -17.10776710510254

Token 478: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -4.36574100604048e-06
    2. '(sorted' → logprob: -12.625004768371582
    3. '(' → logprob: -14.375004768371582
    4. 'words' → logprob: -14.750004768371582
    5. '(word' → logprob: -18.000003814697266
    6. '(users' → logprob: -18.125003814697266
    7. '(w' → logprob: -19.500003814697266
    8. '(set' → logprob: -19.625003814697266
    9. '(
' → logprob: -19.750003814697266
    10. '(weights' → logprob: -19.875003814697266

Token 479: '_set' (ID: 5451)
  Prédit: '(words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -0.00046439285506494343
    2. '_set' → logprob: -7.87546443939209
    3. ')' → logprob: -10.12546443939209
    4. 'words' → logprob: -10.25046443939209
    5. '_words' → logprob: -12.25046443939209
    6. '.words' → logprob: -13.00046443939209
    7. ' words' → logprob: -14.62546443939209
    8. 'set' → logprob: -14.75046443939209
    9. 'Set' → logprob: -15.25046443939209
    10. '   ' → logprob: -16.000463485717773

Token 480: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011093381908722222
    2. ')
' → logprob: -9.125110626220703
    3. '())' → logprob: -14.375110626220703
    4. ' )' → logprob: -14.500110626220703
    5. '<|end|>' → logprob: -15.375110626220703
    6. '()' → logprob: -15.750110626220703
    7. '       ' → logprob: -16.375110626220703
    8. '   ' → logprob: -16.625110626220703
    9. '),' → logprob: -16.875110626220703
    10. ')

' → logprob: -17.250110626220703

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.585651159286499
    2. '<|end|>' → logprob: -2.085651159286499
    3. 'words' → logprob: -2.585651159286499
    4. '_words' → logprob: -2.585651159286499
    5. ' words' → logprob: -3.460651159286499
    6. '(words' → logprob: -3.585651159286499
    7. '```' → logprob: -3.585651159286499
    8. '.words' → logprob: -3.710651159286499
    9. ',' → logprob: -4.460651397705078
    10. 'index' → logprob: -5.085651397705078

Token 482: ' words' (ID: 6391)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.5504006147384644
    2. 'words' (adapté à ' words') → logprob: -0.9254006147384644
    3. 'index' → logprob: -4.050400733947754
    4. 'idx' → logprob: -4.925400733947754
    5. ' word' → logprob: -7.050400733947754
    6. ' words' → logprob: -7.425400733947754
    7. 'mapping' → logprob: -8.175400733947754
    8. '```' → logprob: -8.175400733947754
    9. '       ' → logprob: -9.675400733947754
    10. '   ' → logprob: -11.175400733947754

Token 483: '_id' (ID: 1537)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.42305082082748413
    2. '.sort' → logprob: -1.298050880432129
    3. '_map' → logprob: -3.423050880432129
    4. '_indices' → logprob: -4.423050880432129
    5. '_dict' → logprob: -4.548050880432129
    6. '.index' → logprob: -5.048050880432129
    7. '_to' → logprob: -5.673050880432129
    8. '_idx' → logprob: -5.673050880432129
    9. 'index' → logprob: -6.798050880432129
    10. '_sort' → logprob: -7.298050880432129

Token 484: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038115501403808594
    2. ' =' → logprob: -3.2881155014038086
    3. '={}' → logprob: -9.788115501403809
    4. '={' → logprob: -11.288115501403809
    5. '={"' → logprob: -13.038115501403809
    6. '={'' → logprob: -14.038115501403809
    7. '={
' → logprob: -14.038115501403809
    8. 's' → logprob: -15.163115501403809
    9. '＝' → logprob: -15.538115501403809
    10. '=dict' → logprob: -15.538115501403809

Token 485: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0024418854154646397
    2. '{}' → logprob: -6.502441883087158
    3. ' {' → logprob: -7.002441883087158
    4. '{id' → logprob: -11.002442359924316
    5. '{name' → logprob: -12.002442359924316
    6. '{i' → logprob: -12.752442359924316
    7. '{x' → logprob: -13.627442359924316
    8. '{k' → logprob: -14.252442359924316
    9. '{s' → logprob: -14.377442359924316
    10. ' {}' → logprob: -14.502442359924316

Token 486: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.11310350894927979
    2. 'word' → logprob: -2.3631033897399902
    3. 'words' → logprob: -4.36310338973999
    4. ' w' → logprob: -9.613103866577148
    5. ' word' → logprob: -11.988103866577148
    6. ' words' → logprob: -13.113103866577148
    7. 'wd' → logprob: -16.86310386657715
    8. '   ' → logprob: -16.98810386657715
    9. 'v' → logprob: -17.23810386657715
    10. '[word' → logprob: -17.36310386657715

Token 487: ':i' (ID: 34041)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47471144795417786
    2. ':w' → logprob: -0.9747114181518555
    3. '[w' → logprob: -7.4747114181518555
    4. '[word' → logprob: -10.599711418151855
    5. ' :' → logprob: -11.099711418151855
    6. ':i' → logprob: -11.849711418151855
    7. 'w' → logprob: -12.224711418151855
    8. ':s' → logprob: -12.599711418151855
    9. ':e' → logprob: -12.974711418151855
    10. 'words' → logprob: -13.349711418151855

Token 488: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.566857635974884
    2. 'for' → logprob: -1.3168575763702393
    3. ':' → logprob: -1.8168575763702393
    4. ':w' → logprob: -7.566857814788818
    5. '=' → logprob: -7.691857814788818
    6. ' w' → logprob: -7.941857814788818
    7. 'w' → logprob: -8.06685733795166
    8. ' =' → logprob: -9.06685733795166
    9. ' :' → logprob: -9.19185733795166
    10. ':i' → logprob: -9.19185733795166

Token 489: ' i' (ID: 575)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0029096081852912903
    2. ' w' → logprob: -5.8779096603393555
    3. 'i' → logprob: -9.502909660339355
    4. 'range' → logprob: -11.252909660339355
    5. ' range' → logprob: -12.002909660339355
    6. 'enumer' → logprob: -12.502909660339355
    7. ' i' → logprob: -12.752909660339355
    8. '(w' → logprob: -13.002909660339355
    9. 'in' → logprob: -13.752909660339355
    10. ' in' → logprob: -14.127909660339355

Token 490: ',w' (ID: 49598)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.01942910999059677
    2. ' w' → logprob: -4.6444292068481445
    3. ' in' → logprob: -5.2694292068481445
    4. 'in' → logprob: -5.5194292068481445
    5. ',w' → logprob: -8.394429206848145
    6. '(w' → logprob: -8.519429206848145
    7. '<w' → logprob: -11.019429206848145
    8. '[w' → logprob: -11.269429206848145
    9. ',' → logprob: -11.894429206848145
    10. '(words' → logprob: -12.894429206848145

Token 491: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4742271304130554
    2. ' in' → logprob: -0.9742271304130554
    3. 'n' → logprob: -9.224226951599121
    4. 'enumer' → logprob: -10.099226951599121
    5. 'In' → logprob: -13.599226951599121
    6. 's' → logprob: -14.099226951599121
    7. ' ' → logprob: -14.224226951599121
    8. 'w' → logprob: -14.349226951599121
    9. 'i' → logprob: -14.349226951599121
    10. 'en' → logprob: -14.474226951599121

Token 492: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.06197037547826767
    2. ' enumerate' → logprob: -2.8119704723358154
    3. 'en' → logprob: -12.936970710754395
    4. 'enum' → logprob: -16.061969757080078
    5. '```' → logprob: -16.436969757080078
    6. '(en' → logprob: -16.936969757080078
    7. 'Enumer' → logprob: -17.811969757080078
    8. '
' → logprob: -17.936969757080078
    9. 'in' → logprob: -18.186969757080078
    10. 'words' → logprob: -18.811969757080078

Token 493: '(words' (ID: 80550)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.10027438402175903
    2. '(words' → logprob: -2.3502743244171143
    3. ' words' → logprob: -9.600274085998535
    4. '.words' → logprob: -17.97527503967285
    5. '_words' → logprob: -19.22527503967285
    6. ' (' → logprob: -19.60027503967285
    7. 'word' → logprob: -19.72527503967285
    8. '```' → logprob: -19.97527503967285
    9. '}' → logprob: -20.22527503967285
    10. 'Words' → logprob: -20.35027503967285

Token 494: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -2.1888679839321412e-05
    2. '}' → logprob: -11.125021934509277
    3. ')' → logprob: -12.000021934509277
    4. ');}' → logprob: -15.000021934509277
    5. '})' → logprob: -15.500021934509277
    6. ')}
' → logprob: -15.625021934509277
    7. ' )' → logprob: -16.50002098083496
    8. '")}' → logprob: -16.87502098083496
    9. ']}' → logprob: -17.37502098083496
    10. ')}
' → logprob: -17.87502098083496

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004656899254769087
    2. '```' → logprob: -6.629656791687012
    3. '        
' → logprob: -6.879656791687012
    4. 'next' → logprob: -7.379656791687012
    5. '<|end|>' → logprob: -8.004656791687012
    6. 'tokens' → logprob: -8.129656791687012
    7. '	' → logprob: -8.754656791687012
    8. ' next' → logprob: -9.129656791687012
    9. '[next' → logprob: -9.254656791687012
    10. '[' → logprob: -9.254656791687012

Token 496: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11165639758110046
    2. 'adj' → logprob: -3.486656427383423
    3. 'next' → logprob: -3.611656427383423
    4. '       ' → logprob: -3.611656427383423
    5. 'graph' → logprob: -4.986656188964844
    6. ' dp' → logprob: -6.111656188964844
    7. 'dist' → logprob: -6.611656188964844
    8. '```' → logprob: -6.736656188964844
    9. ' next' → logprob: -6.861656188964844
    10. 'edges' → logprob: -6.986656188964844

Token 497: ' creer' (ID: 106341)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.22068944573402405
    2. 'graph' → logprob: -2.220689535140991
    3. 'dp' → logprob: -2.595689535140991
    4. 'next' → logprob: -5.220689296722412
    5. '#' → logprob: -5.845689296722412
    6. 'from' → logprob: -6.845689296722412
    7. 'edges' → logprob: -7.095689296722412
    8. 'n' → logprob: -7.345689296722412
    9. 'G' → logprob: -7.595689296722412
    10. 'g' → logprob: -7.720689296722412

Token 498: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.009004158899188042
    2. ' adj' → logprob: -5.25900411605835
    3. 'graph' → logprob: -5.75900411605835
    4. ' adjacency' → logprob: -7.63400411605835
    5. ' graph' → logprob: -9.259004592895508
    6. 'g' → logprob: -10.759004592895508
    7. '```' → logprob: -12.384004592895508
    8. 'edges' → logprob: -14.259004592895508
    9. 'from' → logprob: -14.634004592895508
    10. 'l' → logprob: -14.884004592895508

Token 499: ' list' (ID: 1562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6525179147720337
    2. 'list' → logprob: -0.9025179147720337
    3. '_list' → logprob: -2.902517795562744
    4. '=' → logprob: -4.527517795562744
    5. 'adj' → logprob: -5.277517795562744
    6. 'lists' → logprob: -6.527517795562744
    7. '   ' → logprob: -7.777517795562744
    8. '_lists' → logprob: -8.277518272399902
    9. '=[]' → logprob: -8.527518272399902
    10. ' list' → logprob: -9.277518272399902

Token 500: '
' (ID: 198)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.4404275417327881
    2. ' =' → logprob: -2.190427541732788
    3. 'graph' → logprob: -2.565427541732788
    4. ' adjacency' → logprob: -3.190427541732788
    5. ' graph' → logprob: -3.440427541732788
    6. '=' → logprob: -3.565427541732788
    7. ' adj' → logprob: -3.690427541732788
    8. '       ' → logprob: -4.440427780151367
    9. ':' → logprob: -4.690427780151367
    10. '```' → logprob: -4.940427780151367

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3139145076274872
    2. 'adj' → logprob: -1.4389145374298096
    3. 'graph' → logprob: -3.9389145374298096
    4. ' adjacency' → logprob: -5.0639142990112305
    5. ' graph' → logprob: -5.9389142990112305
    6. ' adj' → logprob: -6.5639142990112305
    7. '
' → logprob: -7.4389142990112305
    8. '        
' → logprob: -7.6889142990112305
    9. '```' → logprob: -7.8139142990112305
    10. '   ' → logprob: -8.06391429901123

Token 502: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.01130269281566143
    2. 'graph' → logprob: -4.636302471160889
    3. ' adj' → logprob: -7.011302471160889
    4. ' graph' → logprob: -8.136302947998047
    5. '       ' → logprob: -8.386302947998047
    6. ' adjacency' → logprob: -9.136302947998047
    7. '   ' → logprob: -11.886302947998047
    8. '```' → logprob: -13.136302947998047
    9. 'g' → logprob: -13.511302947998047
    10. 'edges' → logprob: -13.761302947998047

Token 503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47555509209632874
    2. '=' → logprob: -0.9755550622940063
    3. '=[' → logprob: -6.600554943084717
    4. '=[]' → logprob: -9.475555419921875
    5. '[' → logprob: -11.225555419921875
    6. '=[[' → logprob: -11.225555419921875
    7. ' =[' → logprob: -11.600555419921875
    8. '=[]
' → logprob: -13.100555419921875
    9. '=[
' → logprob: -14.350555419921875
    10. '＝' → logprob: -14.850555419921875

Token 504: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5759424567222595
    2. ' [[]' → logprob: -0.8259424567222595
    3. '[[' → logprob: -13.200942039489746
    4. '{' → logprob: -14.450942039489746
    5. '[len' → logprob: -15.950942039489746
    6. ' [' → logprob: -16.325942993164062
    7. '   ' → logprob: -16.325942993164062
    8. 'default' → logprob: -16.325942993164062
    9. '[]' → logprob: -16.825942993164062
    10. ' defaultdict' → logprob: -16.950942993164062

Token 505: ' for' (ID: 395)
  Prédit: '(words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -0.11412268131971359
    2. '[' → logprob: -2.4891226291656494
    3. 'for' → logprob: -3.8641226291656494
    4. 'words' → logprob: -5.8641228675842285
    5. ' for' → logprob: -7.9891228675842285
    6. '[i' → logprob: -8.23912239074707
    7. ']' → logprob: -9.23912239074707
    8. 'range' → logprob: -9.36412239074707
    9. '(w' → logprob: -9.48912239074707
    10. '[w' → logprob: -10.36412239074707

Token 506: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015320145525038242
    2. ' range' → logprob: -4.265320301055908
    3. 'range' → logprob: -7.140320301055908
    4. ' _' → logprob: -8.39031982421875
    5. '_range' → logprob: -9.01531982421875
    6. '_i' → logprob: -11.76531982421875
    7. 'i' → logprob: -12.64031982421875
    8. '(range' → logprob: -13.51531982421875
    9. ' in' → logprob: -14.39031982421875
    10. 'in' → logprob: -14.51531982421875

Token 507: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47467881441116333
    2. ' range' → logprob: -0.9746788144111633
    3. '_' → logprob: -7.974678993225098
    4. 'in' → logprob: -8.724678993225098
    5. ' in' → logprob: -9.849678993225098
    6. '_range' → logprob: -10.599678993225098
    7. '(range' → logprob: -11.099678993225098
    8. 'i' → logprob: -14.099678993225098
    9. '	range' → logprob: -14.599678993225098
    10. ' _' → logprob: -15.349678993225098

Token 508: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011051355861127377
    2. ' range' → logprob: -4.511051177978516
    3. 'words' → logprob: -12.636051177978516
    4. '(range' → logprob: -15.136051177978516
    5. ' words' → logprob: -18.386051177978516
    6. '	range' → logprob: -19.011051177978516
    7. 'Range' → logprob: -19.636051177978516
    8. 'ranges' → logprob: -20.136051177978516
    9. '
' → logprob: -20.511051177978516
    10. '_range' → logprob: -21.011051177978516

Token 509: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.2566449046134949
    2. 'len' → logprob: -1.5066449642181396
    3. '(N' → logprob: -5.6316447257995605
    4. 'N' → logprob: -6.8816447257995605
    5. 'range' → logprob: -9.756645202636719
    6. ' len' → logprob: -10.256645202636719
    7. '(range' → logprob: -13.881645202636719
    8. '=len' → logprob: -14.881645202636719
    9. '[len' → logprob: -15.131645202636719
    10. ',len' → logprob: -15.256645202636719

Token 510: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -0.00020354038861114532
    2. 'words' → logprob: -8.500203132629395
    3. ' words' → logprob: -18.25020408630371
    4. 'Words' → logprob: -20.12520408630371
    5. '.words' → logprob: -21.50020408630371
    6. '(points' → logprob: -21.62520408630371
    7. '```' → logprob: -21.87520408630371
    8. '_words' → logprob: -22.00020408630371
    9. ')' → logprob: -22.00020408630371
    10. '(nodes' → logprob: -22.62520408630371

Token 511: '))]
' (ID: 53695)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04867275804281235
    2. ')]
' → logprob: -3.048672676086426
    3. '))]
' → logprob: -10.048672676086426
    4. ')]
' → logprob: -10.798672676086426
    5. ')' → logprob: -11.923672676086426
    6. '))' → logprob: -12.048672676086426
    7. ')]

' → logprob: -12.548672676086426
    8. '])]' → logprob: -13.298672676086426
    9. ')])' → logprob: -13.673672676086426
    10. ']' → logprob: -14.298672676086426

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16411009430885315
    2. 'for' → logprob: -2.0391101837158203
    3. ' for' → logprob: -3.9141101837158203
    4. '	for' → logprob: -7.41411018371582
    5. '   ' → logprob: -7.91411018371582
    6. '<|end|>' → logprob: -8.78911018371582
    7. '	' → logprob: -9.91411018371582
    8. '	   ' → logprob: -10.78911018371582
    9. '           ' → logprob: -10.91411018371582
    10. '```' → logprob: -11.41411018371582

Token 513: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009435880929231644
    2. '       ' → logprob: -4.759435653686523
    3. ' for' → logprob: -7.134435653686523
    4. '	for' → logprob: -11.009435653686523
    5. '   ' → logprob: -11.884435653686523
    6. '```' → logprob: -15.384435653686523
    7. ' ' → logprob: -16.259435653686523
    8. '	' → logprob: -16.884435653686523
    9. '	   ' → logprob: -17.384435653686523
    10. '           ' → logprob: -17.509435653686523

Token 514: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.000533136713784188
    2. ' f' → logprob: -7.625533103942871
    3. '(f' → logprob: -10.375533103942871
    4. '_f' → logprob: -11.875533103942871
    5. 'i' → logprob: -13.250533103942871
    6. '   ' → logprob: -13.375533103942871
    7. ' (' → logprob: -14.500533103942871
    8. 'w' → logprob: -14.625533103942871
    9. ' ' → logprob: -14.625533103942871
    10. ',f' → logprob: -14.625533103942871

Token 515: ',t' (ID: 26927)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.02010536380112171
    2. 'id' → logprob: -5.270105361938477
    3. '_idx' → logprob: -5.395105361938477
    4. ',' → logprob: -5.770105361938477
    5. '_words' → logprob: -5.770105361938477
    6. 'in' → logprob: -6.770105361938477
    7. ' in' → logprob: -7.645105361938477
    8. 'words' → logprob: -7.770105361938477
    9. '_ids' → logprob: -8.145105361938477
    10. '_i' → logprob: -8.145105361938477

Token 516: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17993424832820892
    2. 'in' → logprob: -1.8049342632293701
    3. ')' → logprob: -9.55493450164795
    4. '   ' → logprob: -10.05493450164795
    5. ',' → logprob: -10.30493450164795
    6. ' ' → logprob: -11.17993450164795
    7. ']' → logprob: -12.55493450164795
    8. 's' → logprob: -12.67993450164795
    9. 'words' → logprob: -12.80493450164795
    10. '  ' → logprob: -13.17993450164795

Token 517: ' connections' (ID: 21069)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.01878119260072708
    2. ' connections' → logprob: -4.1437811851501465
    3. 'words' → logprob: -6.2687811851501465
    4. 'range' → logprob: -8.143781661987305
    5. 'adj' → logprob: -8.893781661987305
    6. '
' → logprob: -9.268781661987305
    7. '[' → logprob: -9.393781661987305
    8. ' words' → logprob: -9.893781661987305
    9. 'con' → logprob: -9.893781661987305
    10. ' range' → logprob: -10.268781661987305

Token 518: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08922440558671951
    2. ':' → logprob: -2.464224338531494
    3. '       ' → logprob: -9.339224815368652
    4. '           ' → logprob: -9.589224815368652
    5. '   ' → logprob: -10.214224815368652
    6. ':
' → logprob: -10.714224815368652
    7. '):
' → logprob: -10.714224815368652
    8. '.append' → logprob: -10.964224815368652
    9. '[' → logprob: -11.464224815368652
    10. ']:
' → logprob: -11.839224815368652

Token 519: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009645354934036732
    2. '           ' → logprob: -5.634645462036133
    3. '   ' → logprob: -5.884645462036133
    4. ' adj' → logprob: -6.009645462036133
    5. 'adj' → logprob: -7.759645462036133
    6. '
' → logprob: -8.509645462036133
    7. '        
' → logprob: -10.384645462036133
    8. '    
' → logprob: -10.509645462036133
    9. '	   ' → logprob: -10.884645462036133
    10. ' 
' → logprob: -11.009645462036133

Token 520: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.5761581659317017
    2. 'adj' (adapté à ' adj') → logprob: -0.8261581659317017
    3. '           ' → logprob: -9.20115852355957
    4. '       ' → logprob: -9.82615852355957
    5. '   ' → logprob: -9.95115852355957
    6. '
' → logprob: -12.20115852355957
    7. 'ad' → logprob: -12.45115852355957
    8. 'u' → logprob: -13.07615852355957
    9. 'idx' → logprob: -13.70115852355957
    10. 'a' → logprob: -14.57615852355957

Token 521: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. 'words' → logprob: -14.000001907348633
    3. '[word' → logprob: -14.750001907348633
    4. ' [' → logprob: -15.250001907348633
    5. '=' → logprob: -17.000001907348633
    6. '```' → logprob: -18.125001907348633
    7. '(words' → logprob: -18.250001907348633
    8. '][' → logprob: -18.750001907348633
    9. '   ' → logprob: -19.000001907348633
    10. ' =' → logprob: -19.125001907348633

Token 522: 'words' (ID: 10020)
  Prédit: 'words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.00011450992315076292
    2. ' words' → logprob: -9.125114440917969
    3. '[' → logprob: -12.250114440917969
    4. '(words' → logprob: -15.125114440917969
    5. '
' → logprob: -15.375114440917969
    6. '   ' → logprob: -16.25011444091797
    7. ']' → logprob: -17.50011444091797
    8. '.words' → logprob: -18.00011444091797
    9. '[
' → logprob: -18.12511444091797
    10. 'word' → logprob: -18.25011444091797

Token 523: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.774276774493046e-05
    2. 'id' → logprob: -10.625038146972656
    3. '[' → logprob: -12.250038146972656
    4. '[id' → logprob: -13.000038146972656
    5. ']' → logprob: -13.625038146972656
    6. '[_' → logprob: -14.000038146972656
    7. '][' → logprob: -14.125038146972656
    8. '[
' → logprob: -14.250038146972656
    9. '   ' → logprob: -14.875038146972656
    10. '```' → logprob: -15.125038146972656

Token 524: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.0041166311129927635
    2. '(f' → logprob: -5.504116535186768
    3. '[' → logprob: -10.754117012023926
    4. '][' → logprob: -11.129117012023926
    5. 'f' → logprob: -13.504117012023926
    6. ']' → logprob: -15.004117012023926
    7. ' [' → logprob: -16.25411605834961
    8. '[w' → logprob: -16.50411605834961
    9. '](' → logprob: -16.50411605834961
    10. '[
' → logprob: -17.00411605834961

Token 525: ']].' (ID: 47690)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.896309739408025e-07
    2. ' ].' → logprob: -14.250000953674316
    3. ']' → logprob: -16.75
    4. '   ' → logprob: -18.125
    5. ']].' → logprob: -18.25
    6. '"].' → logprob: -19.125
    7. '.append' → logprob: -19.625
    8. ''].' → logprob: -19.625
    9. '()].' → logprob: -19.75
    10. ').' → logprob: -19.875

Token 526: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -14.500000953674316
    3. '.append' → logprob: -18.0
    4. 'appen' → logprob: -19.5
    5. 'push' → logprob: -21.25
    6. '	append' → logprob: -21.375
    7. 'app' → logprob: -21.875
    8. 'Append' → logprob: -22.125
    9. '_append' → logprob: -22.25
    10. 'add' → logprob: -23.0

Token 527: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -0.038058701902627945
    2. 'words' → logprob: -3.2880587577819824
    3. ' words' → logprob: -11.288058280944824
    4. '(' → logprob: -12.288058280944824
    5. '(
' → logprob: -16.16305923461914
    6. ' (' → logprob: -16.78805923461914
    7. '(weights' → logprob: -19.28805923461914
    8. '(word' → logprob: -19.78805923461914
    9. '
' → logprob: -20.28805923461914
    10. '.words' → logprob: -20.53805923461914

Token 528: '_id' (ID: 1537)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.6108770966529846
    2. '[' → logprob: -0.9858770966529846
    3. '_id' → logprob: -2.48587703704834
    4. 'words' → logprob: -8.48587703704834
    5. '(words' → logprob: -8.86087703704834
    6. 't' → logprob: -9.36087703704834
    7. '[
' → logprob: -9.36087703704834
    8. '[w' → logprob: -9.61087703704834
    9. '][' → logprob: -9.73587703704834
    10. ']' → logprob: -10.61087703704834

Token 529: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0022294751834124327
    2. '(t' → logprob: -6.127229690551758
    3. 't' → logprob: -10.127229690551758
    4. '[' → logprob: -12.502229690551758
    5. ' [' → logprob: -15.502229690551758
    6. ' t' → logprob: -15.502229690551758
    7. '	t' → logprob: -15.877229690551758
    8. '[(' → logprob: -16.502229690551758
    9. '[
' → logprob: -17.127229690551758
    10. '```' → logprob: -17.502229690551758

Token 530: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5761400461196899
    2. '])' → logprob: -0.8261400461196899
    3. ')]' → logprob: -9.451140403747559
    4. ' )' → logprob: -10.451140403747559
    5. ')])' → logprob: -10.451140403747559
    6. ']' → logprob: -10.576140403747559
    7. ')
' → logprob: -11.701140403747559
    8. '())' → logprob: -12.451140403747559
    9. '})' → logprob: -12.451140403747559
    10. ' ])' → logprob: -12.576140403747559

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11187108606100082
    2. 'next' → logprob: -3.6118710041046143
    3. 'dp' → logprob: -3.9868710041046143
    4. '
' → logprob: -3.9868710041046143
    5. '```' → logprob: -4.486871242523193
    6. ' next' → logprob: -5.236871242523193
    7. 'def' → logprob: -5.611871242523193
    8. '   ' → logprob: -5.861871242523193
    9. 'tokens' → logprob: -6.486871242523193
    10. '        
' → logprob: -6.486871242523193

Token 532: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02827567793428898
    2. '#' (adapté à ' #') → logprob: -4.778275489807129
    3. '       ' → logprob: -5.528275489807129
    4. 'pattern' → logprob: -5.653275489807129
    5. 'from' → logprob: -6.153275489807129
    6. 'next' → logprob: -6.153275489807129
    7. 'patterns' → logprob: -6.403275489807129
    8. 'state' → logprob: -6.528275489807129
    9. 'visited' → logprob: -6.528275489807129
    10. 'states' → logprob: -7.528275489807129

Token 533: ' important' (ID: 3378)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.0155203342437744
    2. '#' → logprob: -1.5155203342437744
    3. 'dp' → logprob: -1.8905203342437744
    4. '       ' → logprob: -2.3905203342437744
    5. 'pattern' → logprob: -2.8905203342437744
    6. 'patterns' → logprob: -3.0155203342437744
    7. 'fail' → logprob: -3.7655203342437744
    8. 'from' → logprob: -4.265520095825195
    9. 'failure' → logprob: -4.765520095825195
    10. 'import' → logprob: -5.140520095825195

Token 534: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16898588836193085
    2. '#' → logprob: -2.9189858436584473
    3. 'next' → logprob: -3.1689858436584473
    4. ' next' → logprob: -3.9189858436584473
    5. 'dp' → logprob: -4.293985843658447
    6. 'pattern' → logprob: -5.043985843658447
    7. '
' → logprob: -5.293985843658447
    8. 'patterns' → logprob: -5.543985843658447
    9. '        
' → logprob: -6.168985843658447
    10. 'from' → logprob: -6.918985843658447

Token 535: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7694663405418396
    2. '#' → logprob: -1.2694664001464844
    3. 'next' → logprob: -2.3944664001464844
    4. 'fail' → logprob: -3.3944664001464844
    5. ' dp' → logprob: -3.6444664001464844
    6. ' next' → logprob: -3.7694664001464844
    7. 'pattern' → logprob: -3.8944664001464844
    8. 'from' → logprob: -4.769466400146484
    9. ' #' → logprob: -4.894466400146484
    10. 'import' → logprob: -4.894466400146484

Token 536: ' gener' (ID: 2217)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4581809043884277
    2. 'need' → logprob: -1.9581809043884277
    3. 'continue' → logprob: -1.9581809043884277
    4. 'len' → logprob: -2.3331809043884277
    5. 'do' → logprob: -3.2081809043884277
    6. 'have' → logprob: -3.4581809043884277
    7. 'def' → logprob: -3.4581809043884277
    8. '#' → logprob: -3.9581809043884277
    9. 'import' → logprob: -3.9581809043884277
    10. 'contin' → logprob: -4.208180904388428

Token 537: 'era' (ID: 2060)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.0389065183699131
    2. 'er' → logprob: -3.2889065742492676
    3. 'rate' → logprob: -7.538906574249268
    4. 'e' → logprob: -8.78890609741211
    5. 'ates' → logprob: -10.03890609741211
    6. 'n' → logprob: -10.28890609741211
    7. 'te' → logprob: -10.41390609741211
    8. 'r' → logprob: -10.91390609741211
    9. 'def' → logprob: -11.66390609741211
    10. 'al' → logprob: -11.91390609741211

Token 538: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18041649460792542
    2. ' dp' → logprob: -2.4304165840148926
    3. 'all' → logprob: -4.055416584014893
    4. ' a' → logprob: -4.930416584014893
    5. '       ' → logprob: -5.305416584014893
    6. ' states' → logprob: -5.305416584014893
    7. '_dp' → logprob: -5.305416584014893
    8. 'from' → logprob: -5.555416584014893
    9. 'states' → logprob: -5.555416584014893
    10. ' all' → logprob: -5.555416584014893

Token 539: ' phrase' (ID: 27179)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.3119412660598755
    2. 'file' → logprob: -2.061941146850586
    3. 'deque' → logprob: -2.061941146850586
    4. 'dp' → logprob: -2.311941146850586
    5. 'table' → logprob: -2.311941146850586
    6. '#' → logprob: -3.186941146850586
    7. 'DP' → logprob: -3.436941146850586
    8. ' queue' → logprob: -3.561941146850586
    9. 'liste' → logprob: -3.686941146850586
    10. 'import' → logprob: -4.061941146850586

Token 540: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4193403124809265
    2. 'tokens' → logprob: -2.6693403720855713
    3. 's' → logprob: -3.1693403720855713
    4. ' =' → logprob: -3.2943403720855713
    5. '[]' → logprob: -3.6693403720855713
    6. '<|end|>' → logprob: -3.9193403720855713
    7. '.' → logprob: -4.544340133666992
    8. 'length' → logprob: -4.669340133666992
    9. 'from' → logprob: -5.044340133666992
    10. ',' → logprob: -5.044340133666992

Token 541: ' M' (ID: 391)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.1180340126156807
    2. 'length' → logprob: -2.6180341243743896
    3. 'N' → logprob: -3.8680341243743896
    4. ' longueur' → logprob: -4.2430338859558105
    5. 'tail' → logprob: -7.2430338859558105
    6. 'len' → logprob: -7.4930338859558105
    7. 'mot' → logprob: -7.9930338859558105
    8. ' length' → logprob: -8.118034362792969
    9. 'M' → logprob: -8.493034362792969
    10. 'leng' → logprob: -8.868034362792969

Token 542: ' mots' (ID: 38338)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.5757410526275635
    2. ' phrase' → logprob: -1.8257410526275635
    3. ' tokens' → logprob: -2.3257410526275635
    4. '       ' → logprob: -3.2007410526275635
    5. ' words' → logprob: -3.2007410526275635
    6. 'length' → logprob: -3.3257410526275635
    7. ' =' → logprob: -3.4507410526275635
    8. ',' → logprob: -3.4507410526275635
    9. '_length' → logprob: -3.5757410526275635
    10. '_' → logprob: -3.5757410526275635

Token 543: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7715309262275696
    2. '<|end|>' → logprob: -0.7715309262275696
    3. '
' → logprob: -3.396530866622925
    4. '        
' → logprob: -3.646530866622925
    5. '<|end|>' → logprob: -5.021531105041504
    6. ',' → logprob: -5.271531105041504
    7. 'tokens' → logprob: -6.646531105041504
    8. '```' → logprob: -7.521531105041504
    9. 'indices' → logprob: -7.646531105041504
    10. ' tokens' → logprob: -8.646531105041504

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08375777304172516
    2. '
' → logprob: -3.0837578773498535
    3. '        
' → logprob: -3.8337578773498535
    4. '<|end|>' → logprob: -4.5837578773498535
    5. ',' → logprob: -6.2087578773498535
    6. '<|end|>' → logprob: -8.583757400512695
    7. '#' → logprob: -8.708757400512695
    8. ' ' → logprob: -10.458757400512695
    9. '  
' → logprob: -10.708757400512695
    10. '   ' → logprob: -10.833757400512695

Token 545: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30055397748947144
    2. ' dp' → logprob: -2.300554037094116
    3. '       ' → logprob: -2.425554037094116
    4. '
' → logprob: -2.800554037094116
    5. 'from' → logprob: -5.425553798675537
    6. '#' (adapté à ' #') → logprob: -6.300553798675537
    7. ' from' → logprob: -6.550553798675537
    8. 'DP' → logprob: -7.300553798675537
    9. '        
' → logprob: -7.300553798675537
    10. ' DP' → logprob: -8.175554275512695

Token 546: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17453785240650177
    2. '#' → logprob: -1.9245378971099854
    3. '       ' → logprob: -5.174537658691406
    4. 'from' → logprob: -5.674537658691406
    5. '
' → logprob: -6.299537658691406
    6. ' dp' → logprob: -6.299537658691406
    7. 'DP' → logprob: -7.174537658691406
    8. ' #' → logprob: -8.424537658691406
    9. 'import' → logprob: -9.049537658691406
    10. ' from' → logprob: -10.049537658691406

Token 547: '[pos' (ID: 48272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007644252385944128
    2. '=' → logprob: -4.882644176483154
    3. '=[' → logprob: -10.382644653320312
    4. '=[[' → logprob: -13.632644653320312
    5. ' =[' → logprob: -13.882644653320312
    6. '_size' → logprob: -14.007644653320312
    7. 'dp' → logprob: -14.007644653320312
    8. 'size' → logprob: -14.007644653320312
    9. '[' → logprob: -14.882644653320312
    10. '```' → logprob: -14.882644653320312

Token 548: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01378345862030983
    2. ']' → logprob: -4.3887834548950195
    3. '=' → logprob: -7.5137834548950195
    4. ']=' → logprob: -7.8887834548950195
    5. ' ][' → logprob: -8.76378345489502
    6. '+' → logprob: -10.26378345489502
    7. '[' → logprob: -10.38878345489502
    8. ' =' → logprob: -10.51378345489502
    9. '   ' → logprob: -10.63878345489502
    10. '=[' → logprob: -10.88878345489502

Token 549: 'word' (ID: 1801)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.4119987487792969
    2. 'state' → logprob: -1.4119987487792969
    3. 'words' → logprob: -1.9119987487792969
    4. '][' → logprob: -2.411998748779297
    5. ']' → logprob: -2.661998748779297
    6. 'tuple' → logprob: -3.036998748779297
    7. 'states' → logprob: -3.411998748779297
    8. 'K' → logprob: -3.786998748779297
    9. 'mask' → logprob: -4.036998748779297
    10. '0' → logprob: -4.536998748779297

Token 550: '][' (ID: 2696)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.9316633343696594
    2. '][' → logprob: -1.1816632747650146
    3. ']' → logprob: -1.3066632747650146
    4. '_idx' → logprob: -4.556663513183594
    5. 's' → logprob: -5.056663513183594
    6. '][_' → logprob: -5.806663513183594
    7. ']=' → logprob: -6.056663513183594
    8. 'id' → logprob: -6.306663513183594
    9. ']_' → logprob: -6.306663513183594
    10. '_count' → logprob: -7.181663513183594

Token 551: 'season' (ID: 38190)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.678134560585022
    2. 'k' → logprob: -1.303134560585022
    3. 'state' → logprob: -2.6781344413757324
    4. 'pat' → logprob: -2.9281344413757324
    5. 'mask' → logprob: -3.1781344413757324
    6. 'tuple' → logprob: -3.5531344413757324
    7. ' pattern' → logprob: -5.803134441375732
    8. 'len' → logprob: -5.803134441375732
    9. 'patterns' → logprob: -6.053134441375732
    10. 'matched' → logprob: -6.053134441375732

Token 552: '_mask' (ID: 21732)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.4398242235183716
    2. 'words' → logprob: -1.9398242235183716
    3. '][' → logprob: -2.314824104309082
    4. '_word' → logprob: -3.439824104309082
    5. ']' → logprob: -3.814824104309082
    6. 'state' → logprob: -3.814824104309082
    7. 's' → logprob: -4.064824104309082
    8. '_words' → logprob: -4.814824104309082
    9. '_state' → logprob: -5.189824104309082
    10. 'status' → logprob: -6.689824104309082

Token 553: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002239470137283206
    2. ']=' → logprob: -6.62723970413208
    3. ' ]' → logprob: -7.25223970413208
    4. '][' → logprob: -8.877239227294922
    5. ']={' → logprob: -9.877239227294922
    6. '=' → logprob: -11.877239227294922
    7. '][]' → logprob: -13.502239227294922
    8. ' =' → logprob: -14.127239227294922
    9. '],' → logprob: -14.252239227294922
    10. ' ][' → logprob: -14.877239227294922

Token 554: 'season' (ID: 38190)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.37024348974227905
    2. 'k' → logprob: -2.120243549346924
    3. 'pat' → logprob: -3.120243549346924
    4. 'state' → logprob: -3.120243549346924
    5. 'matched' → logprob: -3.995243549346924
    6. 'patterns' → logprob: -4.370243549346924
    7. '0' → logprob: -4.620243549346924
    8. 'tuple' → logprob: -4.620243549346924
    9. ' pattern' → logprob: -5.245243549346924
    10. 'len' → logprob: -5.495243549346924

Token 555: '_word' (ID: 32074)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.2964662313461304
    2. '_count' → logprob: -1.4214662313461304
    3. '_state' → logprob: -2.04646635055542
    4. '_states' → logprob: -2.29646635055542
    5. 's' → logprob: -2.92146635055542
    6. '_len' → logprob: -3.04646635055542
    7. ']' → logprob: -3.42146635055542
    8. '_length' → logprob: -3.54646635055542
    9. '_id' → logprob: -4.04646635055542
    10. '][' → logprob: -4.54646635055542

Token 556: '_len' (ID: 13683)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8576380610466003
    2. 's' → logprob: -0.8576380610466003
    3. '_count' → logprob: -2.607638120651245
    4. '_states' → logprob: -3.107638120651245
    5. '_state' → logprob: -4.732637882232666
    6. '_len' → logprob: -5.482637882232666
    7. '_idx' → logprob: -5.482637882232666
    8. '_id' → logprob: -6.357637882232666
    9. '][' → logprob: -6.357637882232666
    10. 'state' → logprob: -6.357637882232666

Token 557: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03813604637980461
    2. 's' → logprob: -3.7881360054016113
    3. '][' → logprob: -4.788136005401611
    4. ']=' → logprob: -5.788136005401611
    5. 'th' → logprob: -6.163136005401611
    6. '_]' → logprob: -8.28813648223877
    7. ']_' → logprob: -8.91313648223877
    8. ' ]' → logprob: -9.03813648223877
    9. '=' → logprob: -9.03813648223877
    10. '   ' → logprob: -9.66313648223877

Token 558: 'season' (ID: 38190)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.266675591468811
    2. 'pattern' → logprob: -1.391675591468811
    3. 'pos' → logprob: -1.891675591468811
    4. 'state' → logprob: -2.7666754722595215
    5. 'char' → logprob: -2.8916754722595215
    6. ']' → logprob: -3.2666754722595215
    7. 'patterns' → logprob: -3.6416754722595215
    8. 'position' → logprob: -3.7666754722595215
    9. 'pat' → logprob: -3.8916754722595215
    10. 'season' → logprob: -4.0166754722595215

Token 559: '_word' (ID: 32074)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.025075674057006836
    2. 's' → logprob: -5.150075912475586
    3. ']_' → logprob: -5.525075912475586
    4. '_masks' → logprob: -5.775075912475586
    5. '_count' → logprob: -5.900075912475586
    6. ']' → logprob: -6.025075912475586
    7. '_states' → logprob: -6.275075912475586
    8. '_state' → logprob: -6.775075912475586
    9. 'mask' → logprob: -7.525075912475586
    10. '][' → logprob: -7.775075912475586

Token 560: '_idx' (ID: 15257)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2956273555755615
    2. '_len' → logprob: -1.6706273555755615
    3. ']=' → logprob: -4.170627593994141
    4. ']_' → logprob: -4.295627593994141
    5. '][' → logprob: -4.420627593994141
    6. '_state' → logprob: -4.670627593994141
    7. 's' → logprob: -5.045627593994141
    8. '_idx' → logprob: -5.920627593994141
    9. 'len' → logprob: -6.545627593994141
    10. '_length' → logprob: -6.670627593994141

Token 561: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009756085462868214
    2. ']=' → logprob: -5.509756088256836
    3. 's' → logprob: -5.884756088256836
    4. ' ]' → logprob: -6.009756088256836
    5. '][' → logprob: -8.634756088256836
    6. '=' → logprob: -8.759756088256836
    7. ']
' → logprob: -10.884756088256836
    8. '']' → logprob: -11.634756088256836
    9. '   ' → logprob: -11.634756088256836
    10. '_]' → logprob: -12.134756088256836

Token 562: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025787856429815292
    2. '=' → logprob: -3.775787830352783
    3. ' =
' → logprob: -7.275787830352783
    4. ']' → logprob: -7.650787830352783
    5. '   ' → logprob: -7.650787830352783
    6. 'def' → logprob: -8.900788307189941
    7. 's' → logprob: -9.025788307189941
    8. ' ' → logprob: -9.400788307189941
    9. '[' → logprob: -9.650788307189941
    10. '=[' → logprob: -9.650788307189941

Token 563: ' nombre' (ID: 9733)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31276002526283264
    2. '0' → logprob: -1.4377599954605103
    3. ' [' → logprob: -3.9377601146698
    4. 'default' → logprob: -6.187759876251221
    5. '[
' → logprob: -6.437759876251221
    6. '{}' → logprob: -6.437759876251221
    7. '[[' → logprob: -6.687759876251221
    8. ' ' → logprob: -6.687759876251221
    9. 'None' → logprob: -6.687759876251221
    10. '{' → logprob: -7.062759876251221

Token 564: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0461268424987793
    2. ']' → logprob: -1.9211268424987793
    3. 'def' → logprob: -2.1711268424987793
    4. '   ' → logprob: -2.5461268424987793
    5. '<|end|>' → logprob: -2.6711268424987793
    6. '=' → logprob: -2.7961268424987793
    7. 'import' → logprob: -3.1711268424987793
    8. '<|end|>' → logprob: -3.2961268424987793
    9. '
' → logprob: -3.6711268424987793
    10. 's' → logprob: -4.296126842498779

Token 565: ' façons' (ID: 165958)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -1.053278923034668
    2. 'phr' → logprob: -1.053278923034668
    3. ' ways' → logprob: -2.553278923034668
    4. 'states' → logprob: -3.303278923034668
    5. ' phrases' → logprob: -3.803278923034668
    6. ']' → logprob: -3.803278923034668
    7. 'poss' → logprob: -4.178278923034668
    8. 'def' → logprob: -4.303278923034668
    9. ')' → logprob: -4.428278923034668
    10. ' façons' → logprob: -4.678278923034668

Token 566: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6605061292648315
    2. ' =' → logprob: -1.2855061292648315
    3. ']' → logprob: -3.035506248474121
    4. '[' → logprob: -3.160506248474121
    5. '       ' → logprob: -3.660506248474121
    6. 'def' → logprob: -3.785506248474121
    7. '=' → logprob: -3.910506248474121
    8. '[pos' → logprob: -5.035506248474121
    9. '
' → logprob: -5.160506248474121
    10. ' ' → logprob: -5.535506248474121

Token 567: ''avoir' (ID: 55863)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2500227987766266
    2. ''être' → logprob: -2.8750228881835938
    3. ''é' → logprob: -3.3750228881835938
    4. ''aller' → logprob: -3.5000228881835938
    5. ''utiliser' → logprob: -3.7500228881835938
    6. ''' → logprob: -4.250022888183594
    7. ' e' → logprob: -4.875022888183594
    8. 'é' → logprob: -4.875022888183594
    9. ''espace' → logprob: -5.500022888183594
    10. ''avoir' → logprob: -5.500022888183594

Token 568: ' construit' (ID: 119882)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1851772516965866
    2. ' pos' → logprob: -2.8101773262023926
    3. '[pos' → logprob: -2.9351773262023926
    4. '(pos' → logprob: -3.6851773262023926
    5. 'dp' → logprob: -5.310177326202393
    6. '(' → logprob: -5.435177326202393
    7. ' M' → logprob: -5.560177326202393
    8. 'M' → logprob: -5.560177326202393
    9. '[' → logprob: -6.060177326202393
    10. '   ' → logprob: -6.185177326202393

Token 569: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2087364196777344
    2. '[pos' → logprob: -1.2087364196777344
    3. 'dp' → logprob: -1.7087364196777344
    4. '[' → logprob: -1.8337364196777344
    5. ' [' → logprob: -4.583736419677734
    6. '[
' → logprob: -4.708736419677734
    7. ']' → logprob: -4.833736419677734
    8. '   ' → logprob: -4.958736419677734
    9. '][' → logprob: -4.958736419677734
    10. ' pos' → logprob: -5.083736419677734

Token 570: '       ' (ID: 309)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.6470874547958374
    2. 'dp' → logprob: -2.147087574005127
    3. '=' → logprob: -2.397087574005127
    4. 'pos' → logprob: -2.772087574005127
    5. '   ' → logprob: -3.147087574005127
    6. ' =' → logprob: -3.522087574005127
    7. 'def' → logprob: -3.647087574005127
    8. ']' → logprob: -4.022087574005127
    9. '[
' → logprob: -4.272087574005127
    10. '
' → logprob: -4.522087574005127

Token 571: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.914961576461792
    2. '[pos' → logprob: -1.164961576461792
    3. 'pos' → logprob: -2.164961576461792
    4. ']' → logprob: -3.414961576461792
    5. ')' → logprob: -3.664961576461792
    6. '[
' → logprob: -3.914961576461792
    7. '<|end|>' → logprob: -4.414961814880371
    8. '=' → logprob: -4.664961814880371
    9. '[]' → logprob: -4.914961814880371
    10. ' ' → logprob: -5.039961814880371

Token 572: ' pos' (ID: 1253)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.1755826473236084
    2. 'dp' → logprob: -1.3005826473236084
    3. 'pos' → logprob: -1.5505826473236084
    4. ']' → logprob: -2.4255826473236084
    5. '[' → logprob: -3.1755826473236084
    6. '][' → logprob: -4.1755828857421875
    7. ')' → logprob: -4.3005828857421875
    8. '[]' → logprob: -5.0505828857421875
    9. ' pos' → logprob: -5.4255828857421875
    10. '[
' → logprob: -5.5505828857421875

Token 573: ' mots' (ID: 38338)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12256890535354614
    2. ']' → logprob: -2.3725688457489014
    3. '=' → logprob: -4.7475690841674805
    4. '+' → logprob: -5.4975690841674805
    5. ' ][' → logprob: -6.6225690841674805
    6. '[pos' → logprob: -6.6225690841674805
    7. ' =' → logprob: -7.3725690841674805
    8. ')' → logprob: -7.4975690841674805
    9. '
' → logprob: -7.7475690841674805
    10. '[' → logprob: -7.8725690841674805

Token 574: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.96943598985672
    2. '       ' → logprob: -1.5944359302520752
    3. ' =' → logprob: -2.094435930252075
    4. 'def' → logprob: -2.469435930252075
    5. 'import' → logprob: -2.719435930252075
    6. ']' → logprob: -2.844435930252075
    7. '
' → logprob: -3.969435930252075
    8. '=' → logprob: -4.344436168670654
    9. 'from' → logprob: -4.719436168670654
    10. 'dp' → logprob: -5.219436168670654

Token 575: ' le' (ID: 505)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.9868866801261902
    2. 'season' → logprob: -1.486886739730835
    3. '       ' → logprob: -2.736886739730835
    4. '[
' → logprob: -2.736886739730835
    5. '[word' → logprob: -2.986886739730835
    6. ' word' → logprob: -3.861886739730835
    7. '#' → logprob: -3.986886739730835
    8. '[' → logprob: -4.111886501312256
    9. 'words' → logprob: -4.111886501312256
    10. '=' → logprob: -4.361886501312256

Token 576: ' dernier' (ID: 27982)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -2.1861777305603027
    2. ']' → logprob: -2.5611777305603027
    3. 'def' → logprob: -2.5611777305603027
    4. ' code' → logprob: -2.5611777305603027
    5. 'season' → logprob: -2.5611777305603027
    6. 'mot' → logprob: -2.9361777305603027
    7. '#' → logprob: -3.0611777305603027
    8. '[' → logprob: -3.3111777305603027
    9. 'dp' → logprob: -3.3111777305603027
    10. 'len' → logprob: -3.4361777305603027

Token 577: ' mot' (ID: 3598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38849693536758423
    2. '_' → logprob: -2.1384968757629395
    3. ' mot' → logprob: -3.1384968757629395
    4. 'mot' → logprob: -3.1384968757629395
    5. ' _' → logprob: -3.5134968757629395
    6. '_word' → logprob: -3.8884968757629395
    7. '][' → logprob: -4.3884968757629395
    8. ' ]' → logprob: -4.5134968757629395
    9. 'word' → logprob: -4.7634968757629395
    10. ' word' → logprob: -4.8884968757629395

Token 578: ' est' (ID: 893)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5567553639411926
    2. '][' → logprob: -1.4317553043365479
    3. '=' → logprob: -2.681755304336548
    4. ' =' → logprob: -3.681755304336548
    5. ',' → logprob: -3.681755304336548
    6. '_idx' → logprob: -4.556755542755127
    7. ']=' → logprob: -5.306755542755127
    8. '],' → logprob: -5.306755542755127
    9. '_' → logprob: -5.431755542755127
    10. ']_' → logprob: -5.556755542755127

Token 579: ' word' (ID: 2195)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.13542990386486053
    2. ' words' → logprob: -2.135429859161377
    3. 'word' → logprob: -4.885429859161377
    4. ' word' → logprob: -7.135429859161377
    5. '(words' → logprob: -10.135430335998535
    6. '[word' → logprob: -10.760430335998535
    7. 'w' → logprob: -11.635430335998535
    8. ' mots' → logprob: -11.760430335998535
    9. 'adj' → logprob: -12.510430335998535
    10. '=' → logprob: -12.760430335998535

Token 580: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8331558108329773
    2. '][' → logprob: -1.458155870437622
    3. '       ' → logprob: -1.708155870437622
    4. '   ' → logprob: -3.208155870437622
    5. ' =' → logprob: -3.583155870437622
    6. ',' → logprob: -3.583155870437622
    7. 'def' → logprob: -3.833155870437622
    8. '#' → logprob: -4.708155632019043
    9. '=' → logprob: -5.083155632019043
    10. '
' → logprob: -5.458155632019043

Token 581: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6450005769729614
    2. 'season' → logprob: -1.2700005769729614
    3. '<|end|>' → logprob: -2.770000457763672
    4. ')' → logprob: -3.895000457763672
    5. '       ' → logprob: -4.395000457763672
    6. '   ' → logprob: -4.645000457763672
    7. 'dp' → logprob: -4.770000457763672
    8. '...' → logprob: -4.770000457763672
    9. 'def' → logprob: -4.895000457763672
    10. '
' → logprob: -4.895000457763672

Token 582: ' saison' (ID: 38158)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -1.5338739156723022
    2. 's' → logprob: -1.6588739156723022
    3. ' saisons' → logprob: -2.158874034881592
    4. ' mots' → logprob: -2.283874034881592
    5. ' saison' → logprob: -2.533874034881592
    6. 'mas' → logprob: -3.158874034881592
    7. ' season' → logprob: -3.158874034881592
    8. 'mask' → logprob: -3.283874034881592
    9. 'm' → logprob: -3.408874034881592
    10. '#' → logprob: -4.158874034881592

Token 583: ' words' (ID: 6391)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.02794604003429413
    2. 's' → logprob: -4.2779459953308105
    3. ' _' → logprob: -5.0279459953308105
    4. '_masks' → logprob: -6.0279459953308105
    5. '_' → logprob: -6.1529459953308105
    6. '_s' → logprob: -7.0279459953308105
    7. ']_' → logprob: -7.9029459953308105
    8. '_len' → logprob: -9.027946472167969
    9. '_MASK' → logprob: -9.027946472167969
    10. '_length' → logprob: -9.027946472167969

Token 584: ' vus' (ID: 148277)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.4348618984222412
    2. '_len' → logprob: -1.5598618984222412
    3. ' =' → logprob: -4.05986213684082
    4. '_length' → logprob: -4.05986213684082
    5. ',' → logprob: -4.18486213684082
    6. '_masks' → logprob: -4.18486213684082
    7. 'len' → logprob: -4.55986213684082
    8. '_lengths' → logprob: -4.68486213684082
    9. ']' → logprob: -5.05986213684082
    10. 's' → logprob: -5.30986213684082

Token 585: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 586: ' des' (ID: 731)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.09864756464958191
    2. 'season' → logprob: -3.7236475944519043
    3. '[pos' → logprob: -4.598647594451904
    4. 'mask' → logprob: -4.848647594451904
    5. 'dp' → logprob: -4.973647594451904
    6. 'position' → logprob: -5.223647594451904
    7. 'the' → logprob: -5.223647594451904
    8. '[' → logprob: -5.223647594451904
    9. ' pos' → logprob: -5.348647594451904
    10. 'bit' → logprob: -5.723647594451904

Token 587: ' mas' (ID: 2948)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.8781643509864807
    2. 'mas' → logprob: -2.003164291381836
    3. 'positions' → logprob: -2.503164291381836
    4. ' bits' → logprob: -2.628164291381836
    5. 'mask' → logprob: -2.753164291381836
    6. 'pos' → logprob: -3.378164291381836
    7. '[' → logprob: -3.378164291381836
    8. '1' → logprob: -4.003164291381836
    9. '[
' → logprob: -4.503164291381836
    10. '#' → logprob: -4.503164291381836

Token 588: 'ques' (ID: 3531)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.6461719870567322
    2. 'k' → logprob: -0.7711719870567322
    3. 's' → logprob: -4.521172046661377
    4. 'ask' → logprob: -6.146172046661377
    5. 'ked' → logprob: -8.896171569824219
    6. 'ks' → logprob: -9.146171569824219
    7. 'asked' → logprob: -10.021171569824219
    8. 'que' → logprob: -10.021171569824219
    9. 'q' → logprob: -10.646171569824219
    10. 'к' → logprob: -11.146171569824219

Token 589: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8447999954223633
    2. '<|end|>' → logprob: -1.3447999954223633
    3. '=' → logprob: -2.4697999954223633
    4. '   ' → logprob: -2.9697999954223633
    5. '[' → logprob: -2.9697999954223633
    6. '[
' → logprob: -3.3447999954223633
    7. ']' → logprob: -3.7197999954223633
    8. ',' → logprob: -4.094799995422363
    9. '       ' → logprob: -4.219799995422363
    10. ' ' → logprob: -5.094799995422363

Token 590: ' 
' (ID: 793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1290802955627441
    2. '       ' → logprob: -1.2540802955627441
    3. 'season' → logprob: -2.254080295562744
    4. ' season' → logprob: -2.504080295562744
    5. '<|end|>' → logprob: -2.879080295562744
    6. ' saison' → logprob: -4.129080295562744
    7. ' #' → logprob: -4.254080295562744
    8. '...' → logprob: -4.254080295562744
    9. ' ' → logprob: -4.504080295562744
    10. '[' → logprob: -4.504080295562744

Token 591: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5855050086975098
    2. '#' → logprob: -1.3355050086975098
    3. ' #' → logprob: -2.8355050086975098
    4. '...' → logprob: -3.8355050086975098
    5. '<|end|>' → logprob: -4.46050500869751
    6. '   ' → logprob: -4.71050500869751
    7. ' saison' → logprob: -4.83550500869751
    8. '[' → logprob: -4.96050500869751
    9. '           ' → logprob: -5.08550500869751
    10. ' ' → logprob: -5.08550500869751

Token 592: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7720952033996582
    2. 'season' → logprob: -2.022095203399658
    3. 'pos' → logprob: -2.522095203399658
    4. '       ' → logprob: -2.647095203399658
    5. ' #' → logprob: -2.772095203399658
    6. ' pos' → logprob: -3.522095203399658
    7. ' saison' → logprob: -3.647095203399658
    8. ' season' → logprob: -3.772095203399658
    9. '[' → logprob: -3.772095203399658
    10. '   ' → logprob: -4.147095203399658

Token 593: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24135076999664307
    2. 'season' → logprob: -1.991350769996643
    3. 'len' → logprob: -3.8663506507873535
    4. 'pos' → logprob: -4.3663506507873535
    5. '       ' → logprob: -4.3663506507873535
    6. ' #' → logprob: -5.2413506507873535
    7. 'dp' → logprob: -5.6163506507873535
    8. 'def' → logprob: -6.1163506507873535
    9. ' saison' → logprob: -6.3663506507873535
    10. '
' → logprob: -6.4913506507873535

Token 594: ' va' (ID: 3423)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.11207210272550583
    2. 'continue' → logprob: -2.362071990966797
    3. ' continuer' → logprob: -6.237071990966797
    4. '       ' → logprob: -6.362071990966797
    5. ' continu' → logprob: -6.612071990966797
    6. ' continues' → logprob: -7.487071990966797
    7. ' initialize' → logprob: -7.487071990966797
    8. 'n' → logprob: -7.487071990966797
    9. ' need' → logprob: -7.612071990966797
    10. 'contin' → logprob: -7.862071990966797

Token 595: ' factor' (ID: 12332)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.14296646416187286
    2. 'contin' → logprob: -2.7679665088653564
    3. '   ' → logprob: -3.3929665088653564
    4. ' continue' → logprob: -4.892966270446777
    5. 'continue' → logprob: -5.142966270446777
    6. '       ' → logprob: -6.017966270446777
    7. ' indent' → logprob: -6.142966270446777
    8. ' compléter' → logprob: -6.142966270446777
    9. 'continu' → logprob: -6.267966270446777
    10. ' poursuivre' → logprob: -6.392966270446777

Token 596: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.28829482197761536
    2. '   ' → logprob: -2.538294792175293
    3. 'ialize' → logprob: -3.663294792175293
    4. ' ' → logprob: -3.913294792175293
    5. 'r' → logprob: -4.038294792175293
    6. 'i' → logprob: -4.038294792175293
    7. 'er' → logprob: -4.288294792175293
    8. '```' → logprob: -4.413294792175293
    9. '  ' → logprob: -4.538294792175293
    10. '=' → logprob: -4.663294792175293

Token 597: ' autrement' (ID: 144670)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.798153042793274
    2. 'def' → logprob: -2.0481529235839844
    3. '[' → logprob: -2.1731529235839844
    4. '   ' → logprob: -2.2981529235839844
    5. 'the' → logprob: -2.5481529235839844
    6. ']' → logprob: -2.9231529235839844
    7. '[pos' → logprob: -2.9231529235839844
    8. 'pos' → logprob: -3.1731529235839844
    9. 'import' → logprob: -3.4231529235839844
    10. ')' → logprob: -3.7981529235839844

Token 598: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 599: ' matching' (ID: 20238)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.6346646547317505
    2. 'dp' → logprob: -0.8846646547317505
    3. 'code' → logprob: -3.884664535522461
    4. ' dp' → logprob: -4.009664535522461
    5. 'def' → logprob: -5.134664535522461
    6. 'DP' → logprob: -6.009664535522461
    7. 'state' → logprob: -6.384664535522461
    8. ' state' → logprob: -6.884664535522461
    9. ' rest' → logprob: -7.009664535522461
    10. 'mask' → logprob: -7.384664535522461

Token 600: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5744551420211792
    2. '       ' → logprob: -1.9494551420211792
    3. '[' → logprob: -2.5744552612304688
    4. ' =' → logprob: -2.9494552612304688
    5. '=' → logprob: -3.3244552612304688
    6. 'def' → logprob: -3.5744552612304688
    7. ':' → logprob: -3.6994552612304688
    8. '[
' → logprob: -3.8244552612304688
    9. ' ' → logprob: -4.949455261230469
    10. '<|end|>' → logprob: -5.199455261230469

Token 601: ' saison' (ID: 38158)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -1.069279432296753
    2. 'season' → logprob: -1.319279432296753
    3. ' season' → logprob: -1.569279432296753
    4. ' pattern' → logprob: -1.944279432296753
    5. 'patterns' → logprob: -4.569279670715332
    6. ' saison' → logprob: -4.944279670715332
    7. 'k' → logprob: -5.069279670715332
    8. 's' → logprob: -5.819279670715332
    9. 'pat' → logprob: -6.069279670715332
    10. ' patterns' → logprob: -6.694279670715332

Token 602: ' word' (ID: 2195)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16699586808681488
    2. ' _' → logprob: -2.5419957637786865
    3. '_mask' → logprob: -3.0419957637786865
    4. ')' → logprob: -4.666996002197266
    5. '       ' → logprob: -5.291996002197266
    6. '   ' → logprob: -5.541996002197266
    7. ']' → logprob: -6.291996002197266
    8. 's' → logprob: -7.291996002197266
    9. '_words' → logprob: -7.291996002197266
    10. 'words' → logprob: -7.541996002197266

Token 603: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4213405847549438
    2. ' =' → logprob: -1.4213405847549438
    3. '[' → logprob: -2.0463404655456543
    4. '[
' → logprob: -2.2963404655456543
    5. 'def' → logprob: -2.7963404655456543
    6. '=' → logprob: -3.0463404655456543
    7. '<|end|>' → logprob: -3.4213404655456543
    8. '[pos' → logprob: -3.7963404655456543
    9. '<|end|>' → logprob: -4.671340465545654
    10. '```' → logprob: -4.796340465545654

Token 604: ' la' (ID: 557)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9403253197669983
    2. 'patterns' → logprob: -1.9403252601623535
    3. 'range' → logprob: -2.4403252601623535
    4. 'se' → logprob: -2.9403252601623535
    5. 'season' → logprob: -3.0653252601623535
    6. 'l' → logprob: -3.3153252601623535
    7. 'k' → logprob: -3.4403252601623535
    8. 'la' → logprob: -3.5653252601623535
    9. 'dp' → logprob: -3.8153252601623535
    10. 'les' → logprob: -3.8153252601623535

Token 605: ' concat' (ID: 73950)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4183820486068726
    2. 'for' → logprob: -1.9183820486068726
    3. 'dp' → logprob: -2.168382167816162
    4. '#' → logprob: -2.168382167816162
    5. 'pattern' → logprob: -2.293382167816162
    6. 'season' → logprob: -3.168382167816162
    7. 'K' → logprob: -3.293382167816162
    8. 'next' → logprob: -3.543382167816162
    9. 'autom' → logprob: -3.668382167816162
    10. '   ' → logprob: -4.043382167816162

Token 606: 'én' (ID: 3289)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6396317481994629
    2. 'def' → logprob: -2.014631748199463
    3. ']' → logprob: -2.889631748199463
    4. '<|end|>' → logprob: -3.514631748199463
    5. '       ' → logprob: -3.639631748199463
    6. '[' → logprob: -3.639631748199463
    7. 's' → logprob: -3.889631748199463
    8. '#' → logprob: -3.889631748199463
    9. '[
' → logprob: -4.014631748199463
    10. 'dp' → logprob: -4.139631748199463

Token 607: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.06882502138614655
    2. 'e' → logprob: -3.1938250064849854
    3. 'ated' → logprob: -4.6938252449035645
    4. '""' → logprob: -5.0688252449035645
    5. '"' → logprob: -6.3188252449035645
    6. 'ate' → logprob: -6.4438252449035645
    7. 'at' → logprob: -6.9438252449035645
    8. 't' → logprob: -7.0688252449035645
    9. '''' → logprob: -7.0688252449035645
    10. 'ed' → logprob: -7.5688252449035645

Token 608: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19730529189109802
    2. '<|end|>' → logprob: -1.9473053216934204
    3. '        ' → logprob: -4.822305202484131
    4. '#' → logprob: -4.947305202484131
    5. '<|end|>' → logprob: -5.447305202484131
    6. 'def' → logprob: -5.447305202484131
    7. '...' → logprob: -6.322305202484131
    8. '
' → logprob: -6.572305202484131
    9. 'import' → logprob: -6.822305202484131
    10. '        
' → logprob: -6.822305202484131

Token 610: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04864902421832085
    2. '<|end|>' → logprob: -3.7986490726470947
    3. '[' → logprob: -4.798648834228516
    4. '        ' → logprob: -5.423648834228516
    5. '           ' → logprob: -6.048648834228516
    6. ' ' → logprob: -6.298648834228516
    7. '   ' → logprob: -6.423648834228516
    8. ')' → logprob: -6.673648834228516
    9. '    ' → logprob: -7.048648834228516
    10. '<|end|>' → logprob: -7.548648834228516

Token 611: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010404117405414581
    2. '#' (adapté à ' #') → logprob: -5.635404109954834
    3. '        ' → logprob: -6.385404109954834
    4. '[' → logprob: -7.010404109954834
    5. '   ' → logprob: -7.010404109954834
    6. ' #' → logprob: -7.385404109954834
    7. '<|end|>' → logprob: -7.385404109954834
    8. '           ' → logprob: -8.385404586791992
    9. '    ' → logprob: -8.635404586791992
    10. 'def' → logprob: -8.760404586791992

Token 612: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.31452038884162903
    2. '       ' → logprob: -2.0645203590393066
    3. 'dp' → logprob: -2.3145203590393066
    4. 'for' → logprob: -4.689520359039307
    5. 'pos' → logprob: -4.814520359039307
    6. 'from' → logprob: -5.439520359039307
    7. ' #' → logprob: -5.564520359039307
    8. '   ' → logprob: -5.689520359039307
    9. 'import' → logprob: -5.689520359039307
    10. 'season' → logprob: -5.939520359039307

Token 613: ' doit' (ID: 21822)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9571735858917236
    2. 'continue' → logprob: -1.3321735858917236
    3. '#' → logprob: -2.0821735858917236
    4. ' vais' → logprob: -2.8321735858917236
    5. 'def' → logprob: -3.0821735858917236
    6. 'contin' → logprob: -3.7071735858917236
    7. ' continuer' → logprob: -4.2071733474731445
    8. '       ' → logprob: -4.2071733474731445
    9. ' #' → logprob: -4.4571733474731445
    10. 'vais' → logprob: -4.4571733474731445

Token 614: ' reconn' (ID: 132552)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.36681485176086426
    2. ' continuer' → logprob: -2.4918148517608643
    3. ' gérer' → logprob: -2.7418148517608643
    4. 'factor' → logprob: -4.116814613342285
    5. 'coder' → logprob: -4.366814613342285
    6. 'g' → logprob: -4.616814613342285
    7. 'match' → logprob: -4.866814613342285
    8. 'import' → logprob: -4.866814613342285
    9. 'consider' → logprob: -4.866814613342285
    10. 'prendre' → logprob: -4.866814613342285

Token 615: 'aitre' (ID: 105499)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18122224509716034
    2. 'aitre' → logprob: -1.8062222003936768
    3. 'na' → logprob: -8.306221961975098
    4. '
' → logprob: -8.556221961975098
    5. 'ître' → logprob: -8.806221961975098
    6. 'ait' → logprob: -8.931221961975098
    7. 'aise' → logprob: -9.181221961975098
    8. 'ue' → logprob: -9.306221961975098
    9. '#' → logprob: -9.806221961975098
    10. '[a' → logprob: -9.931221961975098

Token 616: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1616790294647217
    2. ' la' → logprob: -2.0366790294647217
    3. 'la' → logprob: -2.1616790294647217
    4. 'l' → logprob: -2.5366790294647217
    5. 'the' → logprob: -2.9116790294647217
    6. 'les' → logprob: -3.0366790294647217
    7. ' le' → logprob: -3.0366790294647217
    8. ' l' → logprob: -4.036679267883301
    9. ' les' → logprob: -4.161679267883301
    10. ' chaque' → logprob: -4.286679267883301

Token 617: ' seul' (ID: 33041)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mot' → logprob: -1.0329155921936035
    2. ' pattern' → logprob: -1.2829155921936035
    3. 'pattern' → logprob: -1.6579155921936035
    4. ' mot' → logprob: -2.5329155921936035
    5. ' motif' → logprob: -3.6579155921936035
    6. 's' → logprob: -4.0329155921936035
    7. ' saison' → logprob: -5.4079155921936035
    8. 'season' → logprob: -5.5329155921936035
    9. 'token' → logprob: -5.6579155921936035
    10. ' word' → logprob: -5.6579155921936035

Token 618: ' saison' (ID: 38158)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -1.2877044677734375
    2. 'token' → logprob: -1.4127044677734375
    3. 'pattern' → logprob: -1.6627044677734375
    4. ' token' → logprob: -2.1627044677734375
    5. 'mot' → logprob: -2.9127044677734375
    6. 's' → logprob: -3.7877044677734375
    7. 'state' → logprob: -4.1627044677734375
    8. ' motif' → logprob: -4.2877044677734375
    9. 'season' → logprob: -4.4127044677734375
    10. ' saison' → logprob: -4.6627044677734375

Token 619: ' word' (ID: 2195)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1546989530324936
    2. ' _' → logprob: -2.5296988487243652
    3. ']' → logprob: -4.279698848724365
    4. '       ' → logprob: -4.904698848724365
    5. '   ' → logprob: -5.154698848724365
    6. '[' → logprob: -5.529698848724365
    7. 'def' → logprob: -5.779698848724365
    8. 's' → logprob: -5.779698848724365
    9. '_
' → logprob: -5.904698848724365
    10. '_mask' → logprob: -6.279698848724365

Token 620: ' unique' (ID: 5746)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7308551073074341
    2. '   ' → logprob: -1.105855107307434
    3. '[
' → logprob: -2.9808549880981445
    4. '[' → logprob: -3.2308549880981445
    5. '[pos' → logprob: -4.2308549880981445
    6. '
' → logprob: -4.4808549880981445
    7. '_' → logprob: -4.4808549880981445
    8. '(
' → logprob: -4.7308549880981445
    9. ']' → logprob: -5.1058549880981445
    10. 'def' → logprob: -5.4808549880981445

Token 621: ' appar' (ID: 13643)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.319590449333191
    2. '       ' → logprob: -1.444590449333191
    3. '
' → logprob: -1.694590449333191
    4. '[' → logprob: -2.6945905685424805
    5. '[
' → logprob: -3.0695905685424805
    6. ']' → logprob: -3.1945905685424805
    7. 'def' → logprob: -3.8195905685424805
    8. ' ' → logprob: -3.9445905685424805
    9. '_' → logprob: -4.0695905685424805
    10. '(
' → logprob: -4.9445905685424805

Token 622: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.020361319184303284
    2. 'ait' → logprob: -4.645361423492432
    3. 'a' → logprob: -6.020361423492432
    4. 'ue' → logprob: -6.145361423492432
    5. '[u' → logprob: -6.270361423492432
    6. 'aru' → logprob: -7.270361423492432
    7. '
' → logprob: -7.770361423492432
    8. 'ent' → logprob: -8.395360946655273
    9. 'ar' → logprob: -8.520360946655273
    10. 'ai' → logprob: -8.645360946655273

Token 623: ' une' (ID: 2463)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8228252530097961
    2. '   ' → logprob: -1.6978251934051514
    3. '[' → logprob: -1.8228251934051514
    4. ' =' → logprob: -2.9478251934051514
    5. '[pos' → logprob: -3.4478251934051514
    6. '[
' → logprob: -3.9478251934051514
    7. ')' → logprob: -4.0728254318237305
    8. ' ' → logprob: -4.3228254318237305
    9. ']' → logprob: -4.3228254318237305
    10. ',' → logprob: -4.4478254318237305

Token 624: ' seule' (ID: 41983)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.6056450009346008
    2. ' fois' → logprob: -0.8556450009346008
    3. 'se' → logprob: -4.355645179748535
    4. ' seule' → logprob: -4.730645179748535
    5. ' ' → logprob: -5.855645179748535
    6. '   ' → logprob: -6.480645179748535
    7. ' ' → logprob: -7.855645179748535
    8. 'fo' → logprob: -8.293145179748535
    9. '```' → logprob: -8.355645179748535
    10. ' seul' → logprob: -8.543145179748535

Token 625: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.5774231553077698
    2. 'fois' → logprob: -0.8274231553077698
    3. ' ' → logprob: -7.577423095703125
    4. '   ' → logprob: -8.577423095703125
    5. 'fo' → logprob: -8.702423095703125
    6. '```' → logprob: -9.077423095703125
    7. 'time' → logprob: -9.202423095703125
    8. 'times' → logprob: -9.952423095703125
    9. 'phrase' → logprob: -10.327423095703125
    10. ' ' → logprob: -10.452423095703125

Token 626: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40112051367759705
    2. '   ' → logprob: -2.02612042427063
    3. '
' → logprob: -2.15112042427063
    4. '[' → logprob: -3.27612042427063
    5. '[
' → logprob: -4.651120662689209
    6. ']' → logprob: -4.901120662689209
    7. ')' → logprob: -5.651120662689209
    8. '<|end|>' → logprob: -6.026120662689209
    9. '```' → logprob: -6.026120662689209
    10. 'def' → logprob: -6.151120662689209

Token 627: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5859380960464478
    2. ' la' → logprob: -1.2109380960464478
    3. 'the' → logprob: -3.210937976837158
    4. 'phrase' → logprob: -3.585937976837158
    5. 'le' → logprob: -4.085937976837158
    6. 'une' → logprob: -4.710937976837158
    7. 'l' → logprob: -4.835937976837158
    8. ' le' → logprob: -5.085937976837158
    9. ' phrase' → logprob: -5.335937976837158
    10. ' the' → logprob: -5.460937976837158

Token 628: ' concat' (ID: 73950)
  Prédit: 'phrase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'phrase' → logprob: -0.0835268571972847
    2. 'chaine' → logprob: -3.208526849746704
    3. ' phrase' → logprob: -3.958526849746704
    4. 'sentence' → logprob: -5.333527088165283
    5. 'concat' → logprob: -5.458527088165283
    6. 'phr' → logprob: -6.083527088165283
    7. 'ligne' → logprob: -6.458527088165283
    8. 'sequence' → logprob: -7.458527088165283
    9. '```' → logprob: -7.583527088165283
    10. ' chaîne' → logprob: -7.583527088165283

Token 629: 'én' (ID: 3289)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5060662031173706
    2. ']' → logprob: -2.13106632232666
    3. '_' → logprob: -3.00606632232666
    4. '[pos' → logprob: -3.00606632232666
    5. '<|end|>' → logprob: -3.00606632232666
    6. '[' → logprob: -4.00606632232666
    7. ')' → logprob: -4.00606632232666
    8. 'def' → logprob: -4.25606632232666
    9. ' ' → logprob: -4.88106632232666
    10. '<|end|>' → logprob: -5.00606632232666

Token 630: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0015364045975729823
    2. 'ated' → logprob: -6.6265363693237305
    3. 'é' → logprob: -9.50153636932373
    4. 'e' → logprob: -10.00153636932373
    5. 'at' → logprob: -10.00153636932373
    6. '```' → logprob: -12.25153636932373
    7. '+' → logprob: -12.37653636932373
    8. 'ed' → logprob: -12.50153636932373
    9. 'ATION' → logprob: -12.87653636932373
    10. 's' → logprob: -12.87653636932373

Token 631: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6269539594650269
    2. '   ' → logprob: -1.5019539594650269
    3. '[' → logprob: -2.7519540786743164
    4. '<|end|>' → logprob: -3.0019540786743164
    5. ']' → logprob: -3.3769540786743164
    6. 'def' → logprob: -3.6269540786743164
    7. ')' → logprob: -4.126954078674316
    8. '[
' → logprob: -4.876954078674316
    9. ' ' → logprob: -5.251954078674316
    10. '
' → logprob: -5.376954078674316

Token 632: ' mots' (ID: 38338)
  Prédit: ' mots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.10463247448205948
    2. 'm' → logprob: -2.8546323776245117
    3. 'tokens' → logprob: -4.729632377624512
    4. 'words' → logprob: -4.854632377624512
    5. ' tokens' → logprob: -5.104632377624512
    6. 'mot' → logprob: -5.104632377624512
    7. ' words' → logprob: -5.354632377624512
    8. ' espaces' → logprob: -5.479632377624512
    9. 'esp' → logprob: -7.229632377624512
    10. 'spaces' → logprob: -7.479632377624512

Token 633: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9923277497291565
    2. '
' → logprob: -1.2423276901245117
    3. '       ' → logprob: -1.7423276901245117
    4. '[' → logprob: -2.7423276901245117
    5. ']' → logprob: -4.367327690124512
    6. 'def' → logprob: -4.742327690124512
    7. '[
' → logprob: -4.742327690124512
    8. '[pos' → logprob: -4.867327690124512
    9. '```' → logprob: -5.117327690124512
    10. 'import' → logprob: -5.492327690124512

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6658545136451721
    2. '   ' → logprob: -1.1658544540405273
    3. '[' → logprob: -2.1658544540405273
    4. '[
' → logprob: -4.290854454040527
    5. ' ' → logprob: -5.165854454040527
    6. '\' → logprob: -5.165854454040527
    7. ':' → logprob: -5.415854454040527
    8. '\t' → logprob: -5.415854454040527
    9. ',' → logprob: -6.040854454040527
    10. '<|end|>' → logprob: -6.290854454040527

Token 635: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029002582654356956
    2. '
' → logprob: -4.029002666473389
    3. '   ' → logprob: -5.154002666473389
    4. '        
' → logprob: -6.404002666473389
    5. ' 
' → logprob: -7.529002666473389
    6. 'dp' → logprob: -7.779002666473389
    7. ' dp' → logprob: -8.02900218963623
    8. '[' → logprob: -8.27900218963623
    9. ' ' → logprob: -8.77900218963623
    10. '' → logprob: -8.90400218963623

Token 636: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06199738010764122
    2. '       ' → logprob: -3.311997413635254
    3. 'from' → logprob: -4.561997413635254
    4. '#' → logprob: -5.686997413635254
    5. ' dp' → logprob: -5.936997413635254
    6. '   ' → logprob: -6.061997413635254
    7. '
' → logprob: -6.561997413635254
    8. 'import' → logprob: -6.686997413635254
    9. ' from' → logprob: -7.436997413635254
    10. 'max' → logprob: -7.936997413635254

Token 637: ' matching' (ID: 20238)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0036906003952026
    2. '#' → logprob: -1.8786906003952026
    3. ' code' → logprob: -2.003690719604492
    4. 'max' → logprob: -2.253690719604492
    5. 'def' → logprob: -3.128690719604492
    6. ' max' → logprob: -3.378690719604492
    7. ' dp' → logprob: -3.628690719604492
    8. 'pattern' → logprob: -4.128690719604492
    9. 'code' → logprob: -4.378690719604492
    10. 'season' → logprob: -4.503690719604492

Token 638: ' se' (ID: 458)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0876270532608032
    2. ' =' → logprob: -2.0876269340515137
    3. 's' → logprob: -2.4626269340515137
    4. 'def' → logprob: -2.5876269340515137
    5. ' states' → logprob: -3.0876269340515137
    6. 'des' → logprob: -3.3376269340515137
    7. '   ' → logprob: -3.7126269340515137
    8. 'state' → logprob: -3.7126269340515137
    9. ' de' → logprob: -3.7126269340515137
    10. ' process' → logprob: -3.8376269340515137

Token 639: ' fait' (ID: 7473)
  Prédit: ' fait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fait' → logprob: -0.15570610761642456
    2. ' fera' → logprob: -2.6557061672210693
    3. ' poursuit' → logprob: -3.9057061672210693
    4. ' poursu' → logprob: -4.15570592880249
    5. 'ffect' → logprob: -4.40570592880249
    6. ' réalise' → logprob: -5.15570592880249
    7. 'fait' → logprob: -5.53070592880249
    8. ' continue' → logprob: -5.65570592880249
    9. ''effect' → logprob: -6.65570592880249
    10. ' continu' → logprob: -6.78070592880249

Token 640: ' via' (ID: 4493)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -1.0326746702194214
    2. 'avec' → logprob: -1.9076746702194214
    3. 'dans' → logprob: -2.532674789428711
    4. 'par' → logprob: -2.532674789428711
    5. ' sur' → logprob: -2.782674789428711
    6. ' avec' → logprob: -3.157674789428711
    7. 'au' → logprob: -3.657674789428711
    8. 'à' → logprob: -3.782674789428711
    9. 'char' → logprob: -3.907674789428711
    10. ' via' → logprob: -4.032674789428711

Token 641: ' les' (ID: 1341)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5688504576683044
    2. 'next' → logprob: -1.0688505172729492
    3. 'the' → logprob: -3.568850517272949
    4. ' next' → logprob: -4.068850517272949
    5. 'la' → logprob: -4.443850517272949
    6. 'les' → logprob: -4.568850517272949
    7. ' k' → logprob: -4.818850517272949
    8. 'l' → logprob: -4.943850517272949
    9. ' les' → logprob: -6.443850517272949
    10. 'le' → logprob: -6.568850517272949

Token 642: ' transitions' (ID: 59824)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.48351791501045227
    2. ' next' → logprob: -0.9835178852081299
    3. ' tables' → logprob: -6.233518123626709
    4. 'k' → logprob: -6.733518123626709
    5. 'tables' → logprob: -6.733518123626709
    6. '[next' → logprob: -6.858518123626709
    7. ' k' → logprob: -7.358518123626709
    8. 'indices' → logprob: -7.858518123626709
    9. ' indices' → logprob: -7.858518123626709
    10. 'patterns' → logprob: -7.858518123626709

Token 643: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02576230652630329
    2. '
' → logprob: -4.40076208114624
    3. '   ' → logprob: -4.77576208114624
    4. '        
' → logprob: -6.77576208114624
    5. '#' → logprob: -6.90076208114624
    6. '[' → logprob: -7.77576208114624
    7. ',' → logprob: -8.900762557983398
    8. '	' → logprob: -9.025762557983398
    9. '  
' → logprob: -9.025762557983398
    10. ')' → logprob: -9.025762557983398

Token 644: ' autom' (ID: 5099)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.038684166967868805
    2. ' next' → logprob: -3.288684129714966
    3. 'patterns' → logprob: -8.163683891296387
    4. 'k' → logprob: -8.413683891296387
    5. '[next' → logprob: -10.288683891296387
    6. 'pattern' → logprob: -10.788683891296387
    7. 'n' → logprob: -11.538683891296387
    8. '#' → logprob: -11.913683891296387
    9. ' k' → logprob: -11.913683891296387
    10. 'def' → logprob: -12.163683891296387

Token 645: 'ates' (ID: 1381)
  Prédit: 'ates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.014620951376855373
    2. 'ate' → logprob: -4.264620780944824
    3. 'ata' → logprob: -8.764620780944824
    4. '```' → logprob: -9.389620780944824
    5. '``' → logprob: -10.264620780944824
    6. '
' → logprob: -10.764620780944824
    7. 'aton' → logprob: -11.014620780944824
    8. ''''
' → logprob: -11.139620780944824
    9. '#' → logprob: -11.264620780944824
    10. 'ATES' → logprob: -11.827120780944824

Token 646: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016728131100535393
    2. '
' → logprob: -4.641727924346924
    3. '        
' → logprob: -6.141727924346924
    4. '   ' → logprob: -6.391727924346924
    5. '<|end|>' → logprob: -6.641727924346924
    6. '[' → logprob: -8.266728401184082
    7. '<|end|>' → logprob: -8.516728401184082
    8. '#' → logprob: -8.641728401184082
    9. ',' → logprob: -9.016728401184082
    10. '    
' → logprob: -9.016728401184082

Token 647: ' saison' (ID: 38158)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.6572622060775757
    2. ' patterns' → logprob: -1.6572622060775757
    3. ' saison' → logprob: -2.2822623252868652
    4. 'season' → logprob: -2.9072623252868652
    5. ' season' → logprob: -3.0322623252868652
    6. 'pattern' → logprob: -3.4072623252868652
    7. 'k' → logprob: -4.282262325286865
    8. 's' → logprob: -4.532262325286865
    9. ' pattern' → logprob: -4.657262325286865
    10. ' saisons' → logprob: -5.032262325286865

Token 648: ' words' (ID: 6391)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.4925844371318817
    2. 'words' → logprob: -1.242584466934204
    3. '       ' → logprob: -3.117584466934204
    4. ' words' → logprob: -3.492584466934204
    5. '_word' → logprob: -4.242584228515625
    6. '   ' → logprob: -4.867584228515625
    7. 'word' → logprob: -6.617584228515625
    8. 's' → logprob: -7.242584228515625
    9. ' word' → logprob: -8.867584228515625
    10. '(words' → logprob: -9.117584228515625

Token 649: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07354480773210526
    2. '
' → logprob: -2.82354474067688
    3. '        
' → logprob: -5.573544979095459
    4. '   ' → logprob: -5.698544979095459
    5. 'dp' → logprob: -6.573544979095459
    6. 'import' → logprob: -7.448544979095459
    7. 'from' → logprob: -8.1985445022583
    8. '<|end|>' → logprob: -8.3235445022583
    9. '#' → logprob: -8.4485445022583
    10. '```' → logprob: -8.4485445022583

Token 650: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015548002906143665
    2. '        
' → logprob: -5.265548229217529
    3. '   ' → logprob: -6.140548229217529
    4. ' 
' → logprob: -6.265548229217529
    5. '[' → logprob: -7.265548229217529
    6. '\' → logprob: -7.265548229217529
    7. ' ' → logprob: -7.265548229217529
    8. '
' → logprob: -7.390548229217529
    9. '        ' → logprob: -7.515548229217529
    10. '<|end|>' → logprob: -7.640548229217529

Token 651: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6032873392105103
    2. '   ' → logprob: -1.1032873392105103
    3. ' 
' → logprob: -3.3532872200012207
    4. 'dp' → logprob: -3.4782872200012207
    5. '
' → logprob: -4.478287220001221
    6. ' dp' → logprob: -4.603287220001221
    7. '    
' → logprob: -4.853287220001221
    8. '\' → logprob: -4.853287220001221
    9. '        
' → logprob: -5.228287220001221
    10. '  
' → logprob: -5.978287220001221

Token 652: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11127803474664688
    2. '       ' → logprob: -2.8612780570983887
    3. 'from' → logprob: -3.6112780570983887
    4. '   ' → logprob: -4.611278057098389
    5. ' dp' → logprob: -5.361278057098389
    6. 'import' → logprob: -5.486278057098389
    7. ' from' → logprob: -6.861278057098389
    8. '#' → logprob: -7.361278057098389
    9. '
' → logprob: -8.61127758026123
    10. 'pos' → logprob: -9.23627758026123

Token 653: ' construit' (ID: 119882)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8646125197410583
    2. 'continue' → logprob: -1.4896125793457031
    3. '       ' → logprob: -1.7396125793457031
    4. 'import' → logprob: -3.114612579345703
    5. '#' → logprob: -3.239612579345703
    6. ' continue' → logprob: -3.489612579345703
    7. 'contin' → logprob: -4.114612579345703
    8. 'dp' → logprob: -4.489612579345703
    9. '   ' → logprob: -5.364612579345703
    10. 'continu' → logprob: -5.864612579345703

Token 654: ' un' (ID: 537)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.22298237681388855
    2. ' next' → logprob: -1.972982406616211
    3. '   ' → logprob: -3.972982406616211
    4. 'the' → logprob: -4.347982406616211
    5. '       ' → logprob: -4.597982406616211
    6. 'les' → logprob: -6.097982406616211
    7. 'l' → logprob: -6.222982406616211
    8. 'le' → logprob: -6.347982406616211
    9. ' the' → logprob: -6.347982406616211
    10. 'def' → logprob: -6.347982406616211

Token 655: ' automate' (ID: 90080)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.29244399070739746
    2. 'from' → logprob: -2.9174439907073975
    3. 'def' → logprob: -3.0424439907073975
    4. ' next' → logprob: -3.0424439907073975
    5. '#' → logprob: -3.5424439907073975
    6. 'dp' → logprob: -3.9174439907073975
    7. 'state' → logprob: -4.792444229125977
    8. 'import' → logprob: -4.917444229125977
    9. 'transition' → logprob: -4.917444229125977
    10. 'k' → logprob: -5.167444229125977

Token 656: ' multi' (ID: 12151)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15406987071037292
    2. '   ' → logprob: -2.2790699005126953
    3. '_next' → logprob: -4.779069900512695
    4. '       ' → logprob: -5.529069900512695
    5. 'def' → logprob: -5.529069900512695
    6. '_s' → logprob: -5.779069900512695
    7. ' next' → logprob: -5.779069900512695
    8. 'next' → logprob: -5.779069900512695
    9. '_tables' → logprob: -6.279069900512695
    10. 'es' → logprob: -6.654069900512695

Token 657: '-m' (ID: 2126)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.018427811563014984
    2. 'state' → logprob: -5.018427848815918
    3. 'index' → logprob: -5.643427848815918
    4. ' pattern' → logprob: -6.018427848815918
    5. 'pat' → logprob: -7.393427848815918
    6. 'autom' → logprob: -7.518427848815918
    7. 'et' → logprob: -7.518427848815918
    8. 'etat' → logprob: -7.643427848815918
    9. 'thread' → logprob: -7.768427848815918
    10. 'indice' → logprob: -7.893427848815918

Token 658: 'ot' (ID: 346)
  Prédit: 'otif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otif' → logprob: -0.5897973775863647
    2. 'ot' → logprob: -1.5897973775863647
    3. 'achine' → logprob: -2.3397974967956543
    4. 'atch' → logprob: -3.0897974967956543
    5. 'atching' → logprob: -3.7147974967956543
    6. 'ask' → logprob: -4.089797496795654
    7. 'atcher' → logprob: -4.214797496795654
    8. 'odule' → logprob: -4.839797496795654
    9. 'ode' → logprob: -5.214797496795654
    10. 'ulti' → logprob: -5.714797496795654

Token 659: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028239281848073006
    2. 's' → logprob: -5.1532392501831055
    3. '   ' → logprob: -5.2782392501831055
    4. '
' → logprob: -5.6532392501831055
    5. '        
' → logprob: -5.7782392501831055
    6. 'def' → logprob: -6.2782392501831055
    7. '#' → logprob: -6.6532392501831055
    8. ',' → logprob: -6.9032392501831055
    9. 'import' → logprob: -7.0282392501831055
    10. '<|end|>' → logprob: -7.2782392501831055

Token 660: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5222454071044922
    2. '[' → logprob: -1.5222454071044922
    3. ' 
' → logprob: -3.647245407104492
    4. '(' → logprob: -3.647245407104492
    5. '    ' → logprob: -3.897245407104492
    6. 'def' → logprob: -4.272245407104492
    7. ',' → logprob: -4.272245407104492
    8. '\' → logprob: -4.397245407104492
    9. ' ' → logprob: -4.397245407104492
    10. '       ' → logprob: -4.647245407104492

Token 661: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.769762396812439
    2. 'dp' → logprob: -2.0197625160217285
    3. '       ' → logprob: -2.2697625160217285
    4. '   ' → logprob: -2.2697625160217285
    5. 'next' → logprob: -2.8947625160217285
    6. 'import' → logprob: -3.6447625160217285
    7. 'patterns' → logprob: -3.6447625160217285
    8. ' from' → logprob: -3.7697625160217285
    9. '#' (adapté à ' #') → logprob: -4.1447625160217285
    10. 'pattern' → logprob: -4.3947625160217285

Token 662: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6790628433227539
    2. 'import' → logprob: -2.054062843322754
    3. ' from' → logprob: -2.304062843322754
    4. '   ' → logprob: -2.554062843322754
    5. '#' → logprob: -3.179062843322754
    6. 'dp' → logprob: -3.554062843322754
    7. ' next' → logprob: -3.679062843322754
    8. 'next' → logprob: -3.804062843322754
    9. ' import' → logprob: -4.054062843322754
    10. ' dp' → logprob: -4.554062843322754

Token 663: ' fait' (ID: 7473)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7529100775718689
    2. ' continue' → logprob: -1.3779101371765137
    3. '#' → logprob: -2.7529101371765137
    4. 'def' → logprob: -3.2529101371765137
    5. 'import' → logprob: -3.3779101371765137
    6. 'contin' → logprob: -3.5029101371765137
    7. '       ' → logprob: -4.252910137176514
    8. ' n' → logprob: -4.377910137176514
    9. '   ' → logprob: -4.877910137176514
    10. 'n' → logprob: -5.252910137176514

Token 664: ' une' (ID: 2463)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.44780272245407104
    2. 'from' → logprob: -1.3228027820587158
    3. '   ' → logprob: -3.822802782058716
    4. '#' → logprob: -3.822802782058716
    5. 'une' → logprob: -4.572802543640137
    6. 'un' → logprob: -4.947802543640137
    7. 'def' → logprob: -5.572802543640137
    8. 'la' → logprob: -5.697802543640137
    9. 'le' → logprob: -5.822802543640137
    10. 'appel' → logprob: -5.822802543640137

Token 665: ' seule' (ID: 41983)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11949516087770462
    2. '#' → logprob: -3.369495153427124
    3. ' from' → logprob: -3.619495153427124
    4. 'queue' → logprob: -4.244495391845703
    5. 'def' → logprob: -4.369495391845703
    6. 'import' → logprob: -4.994495391845703
    7. ' queue' → logprob: -5.494495391845703
    8. 'stack' → logprob: -5.619495391845703
    9. 'pass' → logprob: -5.994495391845703
    10. '
' → logprob: -6.994495391845703

Token 666: ' automatis' (ID: 38107)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2047377824783325
    2. 'def' → logprob: -1.3297377824783325
    3. '#' → logprob: -2.329737663269043
    4. 'import' → logprob: -2.579737663269043
    5. 'queue' → logprob: -2.704737663269043
    6. 'autom' → logprob: -3.454737663269043
    7. 'pass' → logprob: -3.454737663269043
    8. 'line' → logprob: -4.204737663269043
    9. ' queue' → logprob: -4.454737663269043
    10. '
' → logprob: -4.454737663269043

Token 667: 'ation' (ID: 387)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05524568632245064
    2. 'ate' → logprob: -3.4302456378936768
    3. 'te' → logprob: -3.9302456378936768
    4. 'ation' → logprob: -7.430245876312256
    5. 'me' → logprob: -7.680245876312256
    6. 'on' → logprob: -8.555245399475098
    7. 'def' → logprob: -8.555245399475098
    8. 'at' → logprob: -10.555245399475098
    9. 'a' → logprob: -10.555245399475098
    10. 'es' → logprob: -10.680245399475098

Token 668: ' combin' (ID: 25307)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18406611680984497
    2. 'def' → logprob: -3.0590660572052
    3. 's' → logprob: -3.5590660572052
    4. '
' → logprob: -4.059066295623779
    5. '   ' → logprob: -4.434066295623779
    6. ' next' → logprob: -5.059066295623779
    7. 'next' → logprob: -5.309066295623779
    8. ',' → logprob: -5.309066295623779
    9. 'import' → logprob: -5.559066295623779
    10. '#' → logprob: -5.684066295623779

Token 669: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16279058158397675
    2. 'ée' → logprob: -2.537790536880493
    3. 'ee' → logprob: -3.037790536880493
    4. 'é' → logprob: -4.162790775299072
    5. 'ed' → logprob: -5.287790775299072
    6. 'ation' → logprob: -6.037790775299072
    7. 'def' → logprob: -9.787790298461914
    8. 'es' → logprob: -10.537790298461914
    9. 'née' → logprob: -10.662790298461914
    10. 'er' → logprob: -10.787790298461914

Token 670: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1209837198257446
    2. ' =' → logprob: -1.6209837198257446
    3. 'def' → logprob: -1.9959837198257446
    4. ':' → logprob: -2.245983600616455
    5. ',' → logprob: -3.120983600616455
    6. '   ' → logprob: -3.245983600616455
    7. '
' → logprob: -3.745983600616455
    8. '#' → logprob: -4.620983600616455
    9. ' (' → logprob: -4.620983600616455
    10. ':
' → logprob: -4.620983600616455

Token 671: ' saison' (ID: 38158)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.22936929762363434
    2. ' patterns' → logprob: -1.8543692827224731
    3. 'pattern' → logprob: -4.354369163513184
    4. 'season' → logprob: -4.729369163513184
    5. 'pat' → logprob: -5.354369163513184
    6. ' season' → logprob: -5.479369163513184
    7. ' saison' → logprob: -5.479369163513184
    8. ' mots' → logprob: -5.604369163513184
    9. ' pattern' → logprob: -6.354369163513184
    10. ' saisons' → logprob: -6.729369163513184

Token 672: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.13633506000041962
    2. '_words' → logprob: -2.1363351345062256
    3. ' words' → logprob: -4.8863348960876465
    4. '_word' → logprob: -7.3863348960876465
    5. 'word' → logprob: -7.6363348960876465
    6. '       ' → logprob: -9.011335372924805
    7. 's' → logprob: -9.136335372924805
    8. '   ' → logprob: -9.261335372924805
    9. '_' → logprob: -9.636335372924805
    10. 'def' → logprob: -9.761335372924805

Token 673: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5491604804992676
    2. '       ' → logprob: -1.0491604804992676
    3. '        
' → logprob: -3.9241604804992676
    4. '   ' → logprob: -4.424160480499268
    5. ',' → logprob: -4.549160480499268
    6. '<|end|>' → logprob: -5.049160480499268
    7. 'import' → logprob: -5.799160480499268
    8. '#' → logprob: -5.924160480499268
    9. 'patterns' → logprob: -6.174160480499268
    10. '  
' → logprob: -6.299160480499268

Token 674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5548363924026489
    2. '   ' → logprob: -0.9298363924026489
    3. '    ' → logprob: -5.179836273193359
    4. ' states' → logprob: -5.429836273193359
    5. ' next' → logprob: -5.554836273193359
    6. ' from' → logprob: -6.429836273193359
    7. 'from' → logprob: -6.554836273193359
    8. ')' → logprob: -6.679836273193359
    9. ' 
' → logprob: -6.929836273193359
    10. 'def' → logprob: -7.054836273193359

Token 675: ' #' (ID: 1069)
  Prédit: ' patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -1.1467344760894775
    2. ' from' → logprob: -1.5217344760894775
    3. 'from' → logprob: -1.7717344760894775
    4. '   ' → logprob: -2.6467344760894775
    5. ' next' → logprob: -2.7717344760894775
    6. 'patterns' → logprob: -3.7717344760894775
    7. ' pattern' → logprob: -4.021734237670898
    8. '#' (adapté à ' #') → logprob: -4.146734237670898
    9. ' fail' → logprob: -4.271734237670898
    10. ' #' → logprob: -4.396734237670898

Token 676: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6452156901359558
    2. 'patterns' → logprob: -2.0202157497406006
    3. ' patterns' → logprob: -2.1452157497406006
    4. ' from' → logprob: -2.2702157497406006
    5. '   ' → logprob: -3.6452157497406006
    6. '#' → logprob: -3.7702157497406006
    7. 'import' → logprob: -4.3952155113220215
    8. 'pattern' → logprob: -4.5202155113220215
    9. 'all' → logprob: -4.8952155113220215
    10. ' #' → logprob: -5.3952155113220215

Token 677: ' va' (ID: 3423)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.19842040538787842
    2. '#' → logprob: -3.198420524597168
    3. ' from' → logprob: -3.323420524597168
    4. 'import' → logprob: -3.323420524597168
    5. 'continue' → logprob: -4.073420524597168
    6. 'def' → logprob: -4.073420524597168
    7. ' continue' → logprob: -4.448420524597168
    8. 'combine' → logprob: -4.823420524597168
    9. ' import' → logprob: -6.198420524597168
    10. ' #' → logprob: -6.448420524597168

Token 678: ' garder' (ID: 63069)
  Prédit: 'concat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'concat' → logprob: -1.2018039226531982
    2. ' concat' → logprob: -1.4518039226531982
    3. 'build' → logprob: -2.2018039226531982
    4. ' construire' → logprob: -2.2018039226531982
    5. 'comb' → logprob: -3.3268039226531982
    6. ' build' → logprob: -3.4518039226531982
    7. ' créer' → logprob: -3.4518039226531982
    8. 'combine' → logprob: -3.5768039226531982
    9. 'contin' → logprob: -4.076804161071777
    10. 'import' → logprob: -4.326804161071777

Token 679: ' un' (ID: 537)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.5483195781707764
    2. 'import' → logprob: -1.7983195781707764
    3. '...' → logprob: -2.2983195781707764
    4. '   ' → logprob: -2.7983195781707764
    5. 'next' → logprob: -3.2983195781707764
    6. 'states' → logprob: -3.2983195781707764
    7. '
' → logprob: -3.4233195781707764
    8. 'the' → logprob: -3.4233195781707764
    9. 'state' → logprob: -3.5483195781707764
    10. '#' → logprob: -3.6733195781707764

Token 680: ' état' (ID: 59181)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.535406768321991
    2. ' queue' → logprob: -1.6604068279266357
    3. 'queue' → logprob: -2.1604068279266357
    4. ' from' → logprob: -3.7854068279266357
    5. 'stack' → logprob: -4.160406589508057
    6. 'state' → logprob: -4.410406589508057
    7. ' stack' → logprob: -4.660406589508057
    8. 'import' → logprob: -4.785406589508057
    9. '
' → logprob: -5.285406589508057
    10. '#' → logprob: -5.285406589508057

Token 681: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 682: ' chacun' (ID: 52136)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.11756962537765503
    2. 'each' → logprob: -2.4925696849823
    3. ' each' → logprob: -3.7425696849823
    4. ' chacune' → logprob: -6.617569446563721
    5. ' chacun' → logprob: -7.492569446563721
    6. ' la' → logprob: -8.242569923400879
    7. 'pattern' → logprob: -8.242569923400879
    8. 'l' → logprob: -8.242569923400879
    9. 'ch' → logprob: -8.367569923400879
    10. 'le' → logprob: -8.367569923400879

Token 683: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.028792154043912888
    2. 'des' → logprob: -4.903792381286621
    3. '       ' → logprob: -5.403792381286621
    4. 'patterns' → logprob: -5.528792381286621
    5. ' de' → logprob: -6.028792381286621
    6. ' of' → logprob: -6.278792381286621
    7. 'pattern' → logprob: -6.403792381286621
    8. 'pat' → logprob: -7.403792381286621
    9. 's' → logprob: -7.403792381286621
    10. ' patterns' → logprob: -7.528792381286621

Token 684: ' saison' (ID: 38158)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.0365266427397728
    2. 'pattern' → logprob: -4.286526679992676
    3. 'season' → logprob: -4.911526679992676
    4. 'pat' → logprob: -5.411526679992676
    5. ' patterns' → logprob: -5.661526679992676
    6. 'K' → logprob: -6.161526679992676
    7. 'len' → logprob: -6.286526679992676
    8. 'next' → logprob: -7.036526679992676
    9. 'k' → logprob: -7.161526679992676
    10. 'indices' → logprob: -8.411526679992676

Token 685: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.45660609006881714
    2. '_words' → logprob: -1.706606149673462
    3. ' words' → logprob: -1.956606149673462
    4. '_word' → logprob: -3.581606149673462
    5. 'word' → logprob: -4.456605911254883
    6. ' word' → logprob: -5.706605911254883
    7. 's' → logprob: -7.581605911254883
    8. ' _' → logprob: -9.581605911254883
    9. 'w' → logprob: -10.144105911254883
    10. '_' → logprob: -10.269105911254883

Token 686: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 687: ' position' (ID: 4010)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.7156758308410645
    2. '       ' → logprob: -0.9656758308410645
    3. ' next' → logprob: -3.3406758308410645
    4. 'states' → logprob: -3.3406758308410645
    5. '   ' → logprob: -4.2156758308410645
    6. 'state' → logprob: -4.7156758308410645
    7. ' dp' → logprob: -4.9656758308410645
    8. ' current' → logprob: -5.5906758308410645
    9. 'next' → logprob: -5.5906758308410645
    10. ' state' → logprob: -5.7156758308410645

Token 688: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2281179130077362
    2. ',' → logprob: -2.7281179428100586
    3. '<|end|>' → logprob: -3.2281179428100586
    4. ' =' → logprob: -3.3531179428100586
    5. '<|end|>' → logprob: -4.103117942810059
    6. ' ,' → logprob: -4.353117942810059
    7. ']' → logprob: -4.853117942810059
    8. ' in' → logprob: -5.353117942810059
    9. '=' → logprob: -5.478117942810059
    10. 'import' → logprob: -6.478117942810059

Token 689: ' matching' (ID: 20238)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2826297283172607
    2. 'match' → logprob: -1.4076297283172607
    3. 'ch' → logprob: -1.5326297283172607
    4. 'cha' → logprob: -2.4076297283172607
    5. 'la' → logprob: -2.6576297283172607
    6. 'le' → logprob: -3.7826297283172607
    7. 'leur' → logprob: -3.7826297283172607
    8. 'matching' → logprob: -3.9076297283172607
    9. 'pattern' → logprob: -5.28262996673584
    10. 'mot' → logprob: -5.78262996673584

Token 690: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3138752281665802
    2. ',' → logprob: -2.438875198364258
    3. '_states' → logprob: -2.563875198364258
    4. ']' → logprob: -3.188875198364258
    5. '_' → logprob: -4.188875198364258
    6. ' _' → logprob: -5.063875198364258
    7. '_s' → logprob: -5.063875198364258
    8. ' =' → logprob: -5.313875198364258
    9. ' ,' → logprob: -5.563875198364258
    10. ' s' → logprob: -5.688875198364258

Token 691: ' la' (ID: 557)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.020842432975769
    2. 'range' → logprob: -1.145842432975769
    3. 'pattern' → logprob: -1.520842432975769
    4. '[' → logprob: -3.3958425521850586
    5. 'patterns' → logprob: -3.5208425521850586
    6. 'pat' → logprob: -4.145842552185059
    7. ' each' → logprob: -5.270842552185059
    8. ' range' → logprob: -5.645842552185059
    9. '   ' → logprob: -6.145842552185059
    10. 'the' → logprob: -6.395842552185059

Token 692: ' saison' (ID: 38158)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.4260435104370117
    2. 'season' → logprob: -2.1760435104370117
    3. 'pattern' → logprob: -2.3010435104370117
    4. 'pat' → logprob: -2.5510435104370117
    5. 'range' → logprob: -3.1760435104370117
    6. '[' → logprob: -5.676043510437012
    7. ' range' → logprob: -6.801043510437012
    8. 'K' → logprob: -7.176043510437012
    9. '   ' → logprob: -7.176043510437012
    10. ' patterns' → logprob: -7.176043510437012

Token 693: ' word' (ID: 2195)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.3119262754917145
    2. '_words' → logprob: -1.436926245689392
    3. '_word' → logprob: -4.061926364898682
    4. 'word' → logprob: -5.311926364898682
    5. ' words' → logprob: -5.561926364898682
    6. 's' → logprob: -6.186926364898682
    7. ')' → logprob: -7.686926364898682
    8. '       ' → logprob: -7.936926364898682
    9. '_' → logprob: -8.061925888061523
    10. '   ' → logprob: -8.186925888061523

Token 694: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7111732363700867
    2. '<|end|>' → logprob: -0.9611732363700867
    3. ',' → logprob: -2.7111732959747314
    4. '<|end|>' → logprob: -3.8361732959747314
    5. '
' → logprob: -4.211173057556152
    6. '   ' → logprob: -5.711173057556152
    7. '...' → logprob: -5.836173057556152
    8. 'state' → logprob: -6.461173057556152
    9. ')' → logprob: -6.461173057556152
    10. 'states' → logprob: -6.586173057556152

Token 695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033726390451192856
    2. '<|end|>' → logprob: -4.283726215362549
    3. '
' → logprob: -5.658726215362549
    4. ',' → logprob: -6.033726215362549
    5. '<|end|>' → logprob: -6.033726215362549
    6. '   ' → logprob: -6.158726215362549
    7. 'state' → logprob: -6.283726215362549
    8. ' states' → logprob: -6.658726215362549
    9. '        
' → logprob: -6.908726215362549
    10. 'states' → logprob: -7.283726215362549

Token 696: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005802704952657223
    2. '   ' → logprob: -6.130802631378174
    3. ',' → logprob: -6.755802631378174
    4. '
' → logprob: -7.880802631378174
    5. '#' (adapté à ' #') → logprob: -8.130803108215332
    6. '        
' → logprob: -8.255803108215332
    7. 'state' → logprob: -8.755803108215332
    8. '<|end|>' → logprob: -8.880803108215332
    9. ' next' → logprob: -9.005803108215332
    10. ' 
' → logprob: -9.130803108215332

Token 697: ' C' (ID: 363)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.29213547706604
    2. '       ' → logprob: -1.41713547706604
    3. 'dp' → logprob: -1.66713547706604
    4. 'from' → logprob: -2.04213547706604
    5. 'states' → logprob: -2.29213547706604
    6. '   ' → logprob: -3.91713547706604
    7. 'combined' → logprob: -4.542135238647461
    8. '#' → logprob: -5.042135238647461
    9. 'import' → logprob: -5.167135238647461
    10. 'max' → logprob: -5.292135238647461

Token 698: ''est' (ID: 6616)
  Prédit: 'urrent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urrent' → logprob: -0.10445819795131683
    2. '#' → logprob: -3.7294580936431885
    3. 'ont' → logprob: -3.8544580936431885
    4. 'omb' → logprob: -4.229458332061768
    5. 'ur' → logprob: -4.354458332061768
    6. 'state' → logprob: -4.979458332061768
    7. 'om' → logprob: -6.104458332061768
    8. '=' → logprob: -6.354458332061768
    9. 'omp' → logprob: -6.354458332061768
    10. 'u' → logprob: -6.729458332061768

Token 699: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6430339813232422
    2. 'un' → logprob: -2.018033981323242
    3. 'possible' → logprob: -2.768033981323242
    4. ' une' → logprob: -2.893033981323242
    5. 'comme' → logprob: -3.143033981323242
    6. 'à' → logprob: -3.268033981323242
    7. 'len' → logprob: -3.518033981323242
    8. ' un' → logprob: -4.018033981323242
    9. 'la' → logprob: -4.393033981323242
    10. 'import' → logprob: -4.643033981323242

Token 700: ' vect' (ID: 106052)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.5815487504005432
    2. 'tuple' → logprob: -1.4565486907958984
    3. 'list' → logprob: -2.3315486907958984
    4. 'def' → logprob: -3.4565486907958984
    5. ' list' → logprob: -3.4565486907958984
    6. 'len' → logprob: -4.956548690795898
    7. '#' → logprob: -5.081548690795898
    8. 'from' → logprob: -5.206548690795898
    9. 'state' → logprob: -5.331548690795898
    10. 'tu' → logprob: -5.706548690795898

Token 701: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.041203297674655914
    2. 'or' → logprob: -3.291203260421753
    3. '[' → logprob: -5.916203498840332
    4. 'eu' → logprob: -9.791203498840332
    5. 'ect' → logprob: -10.041203498840332
    6. '{' → logprob: -10.041203498840332
    7. '[
' → logprob: -10.291203498840332
    8. 'ector' → logprob: -10.416203498840332
    9. 'er' → logprob: -10.416203498840332
    10. 'eurs' → logprob: -10.541203498840332

Token 702: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.05968153476715088
    2. 'state' → logprob: -3.9346814155578613
    3. '<|end|>' → logprob: -4.809681415557861
    4. 'of' → logprob: -5.059681415557861
    5. 'states' → logprob: -5.184681415557861
    6. ' states' → logprob: -5.434681415557861
    7. '(states' → logprob: -6.059681415557861
    8. '   ' → logprob: -6.059681415557861
    9. ' state' → logprob: -6.559681415557861
    10. '[state' → logprob: -6.809681415557861

Token 703: ' K' (ID: 658)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.27738887071609497
    2. 'K' → logprob: -2.77738881111145
    3. 'len' → logprob: -3.15238881111145
    4. 'm' → logprob: -3.27738881111145
    5. 'inte' → logprob: -3.65238881111145
    6. 'ints' → logprob: -4.027389049530029
    7. 'positions' → logprob: -4.152389049530029
    8. '[K' → logprob: -4.527389049530029
    9. '[int' → logprob: -4.902389049530029
    10. ' K' → logprob: -5.027389049530029

Token 704: ' int' (ID: 677)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39017581939697266
    2. ',' → logprob: -2.0151758193969727
    3. 'indices' → logprob: -3.0151758193969727
    4. 'dimensions' → logprob: -4.140175819396973
    5. ')' → logprob: -4.265175819396973
    6. 'states' → logprob: -4.515175819396973
    7. 'inte' → logprob: -4.890175819396973
    8. '+' → logprob: -4.890175819396973
    9. 'positions' → logprob: -5.140175819396973
    10. ' états' → logprob: -5.265175819396973

Token 705: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 706: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06279311329126358
    2. ' )' → logprob: -3.437793016433716
    3. '),' → logprob: -4.437793254852295
    4. ').' → logprob: -5.937793254852295
    5. 'indices' → logprob: -6.437793254852295
    6. '[' → logprob: -6.687793254852295
    7. ')
' → logprob: -6.812793254852295
    8. ')n' → logprob: -6.937793254852295
    9. 'def' → logprob: -7.187793254852295
    10. 'positions' → logprob: -7.187793254852295

Token 707: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09429885447025299
    2. ']' → logprob: -3.469298839569092
    3. ')
' → logprob: -3.844298839569092
    4. '...' → logprob: -4.219298839569092
    5. '**' → logprob: -5.969298839569092
    6. '+' → logprob: -5.969298839569092
    7. ',' → logprob: -6.094298839569092
    8. ')+' → logprob: -6.219298839569092
    9. '#' → logprob: -6.344298839569092
    10. '
' → logprob: -6.344298839569092

Token 708: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.17444533109664917
    2. 'm' → logprob: -2.799445390701294
    3. '[len' → logprob: -3.174445390701294
    4. '[' → logprob: -3.799445390701294
    5. '[m' → logprob: -4.799445152282715
    6. 'length' → logprob: -5.049445152282715
    7. 'max' → logprob: -5.799445152282715
    8. '0' → logprob: -6.049445152282715
    9. ')' → logprob: -6.049445152282715
    10. '
' → logprob: -6.174445152282715

Token 709: ' season' (ID: 5217)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9740971922874451
    2. '(p' → logprob: -1.4740972518920898
    3. '(se' → logprob: -1.7240972518920898
    4. '(s' → logprob: -2.47409725189209
    5. 'season' → logprob: -2.97409725189209
    6. ')' → logprob: -3.72409725189209
    7. 'pat' → logprob: -4.09909725189209
    8. '(pattern' → logprob: -4.34909725189209
    9. '_se' → logprob: -5.47409725189209
    10. 'p' → logprob: -5.47409725189209

Token 710: 'word' (ID: 1801)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.0256482120603323
    2. '_words' → logprob: -4.65064811706543
    3. 'word' → logprob: -5.15064811706543
    4. 's' → logprob: -5.65064811706543
    5. '_word' → logprob: -5.90064811706543
    6. ' words' → logprob: -5.90064811706543
    7. ')' → logprob: -8.40064811706543
    8. '(words' → logprob: -8.40064811706543
    9. ']' → logprob: -9.02564811706543
    10. '_' → logprob: -9.77564811706543

Token 711: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7917578816413879
    2. 's' → logprob: -0.7917578816413879
    3. ')
' → logprob: -3.041757822036743
    4. '])' → logprob: -3.791757822036743
    5. '])
' → logprob: -5.041758060455322
    6. ']' → logprob: -5.291758060455322
    7. '))' → logprob: -6.291758060455322
    8. ')s' → logprob: -6.416758060455322
    9. ')]' → logprob: -6.916758060455322
    10. '))
' → logprob: -7.166758060455322

Token 712: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028394220396876335
    2. ')' → logprob: -4.7783942222595215
    3. ',' → logprob: -5.1533942222595215
    4. '<|end|>' → logprob: -5.2783942222595215
    5. '   ' → logprob: -5.6533942222595215
    6. '        
' → logprob: -6.9033942222595215
    7. '[' → logprob: -7.5283942222595215
    8. '.' → logprob: -7.6533942222595215
    9. '           ' → logprob: -7.7783942222595215
    10. '<|end|>' → logprob: -7.9033942222595215

Token 713: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005295903421938419
    2. '   ' → logprob: -6.255295753479004
    3. '<|end|>' → logprob: -6.255295753479004
    4. ')' → logprob: -8.005295753479004
    5. '        
' → logprob: -8.380295753479004
    6. '<|end|>' → logprob: -8.755295753479004
    7. ',' → logprob: -9.005295753479004
    8. '           ' → logprob: -9.630295753479004
    9. '[' → logprob: -9.630295753479004
    10. 'tokens' → logprob: -10.255295753479004

Token 714: ' Mais' (ID: 13880)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5446589589118958
    2. '       ' → logprob: -1.294658899307251
    3. 'state' → logprob: -2.794658899307251
    4. 'from' → logprob: -3.669658899307251
    5. 'max' → logprob: -4.29465913772583
    6. '   ' → logprob: -4.29465913772583
    7. 'states' → logprob: -4.79465913772583
    8. '#' → logprob: -5.16965913772583
    9. ' dp' → logprob: -5.66965913772583
    10. 'for' → logprob: -6.04465913772583

Token 715: ' ca' (ID: 3268)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5075140595436096
    2. '#' → logprob: -1.6325139999389648
    3. 'if' → logprob: -2.757513999938965
    4. 'import' → logprob: -2.757513999938965
    5. 'from' → logprob: -3.632513999938965
    6. ' if' → logprob: -4.257513999938965
    7. '           ' → logprob: -4.757513999938965
    8. ' from' → logprob: -5.507513999938965
    9. '   ' → logprob: -5.507513999938965
    10. ' on' → logprob: -5.882513999938965

Token 716: ' expl' (ID: 3421)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3121116161346436
    2. ' sera' → logprob: -2.0621116161346436
    3. ' va' → logprob: -2.1871116161346436
    4. 's' → logprob: -2.3121116161346436
    5. ' is' → logprob: -2.3121116161346436
    6. ' serait' → logprob: -3.0621116161346436
    7. ' peut' → logprob: -3.1871116161346436
    8. ' s' → logprob: -3.9371116161346436
    9. ' will' → logprob: -3.9371116161346436
    10. ' n' → logprob: -3.9371116161346436

Token 717: 'ose' (ID: 918)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.2049321085214615
    2. 'iques' → logprob: -3.70493221282959
    3. 'a' → logprob: -3.82993221282959
    4. '...' → logprob: -3.95493221282959
    5. 'ose' → logprob: -4.07993221282959
    6. 'pl' → logprob: -4.45493221282959
    7. '```' → logprob: -4.45493221282959
    8. 'q' → logprob: -4.57993221282959
    9. 'e' → logprob: -4.95493221282959
    10. '#' → logprob: -4.95493221282959

Token 718: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09342409670352936
    2. '...' → logprob: -3.343424081802368
    3. '<|end|>' → logprob: -3.718424081802368
    4. '
' → logprob: -4.843424320220947
    5. '        
' → logprob: -5.343424320220947
    6. ',' → logprob: -5.343424320220947
    7. '   ' → logprob: -5.593424320220947
    8. '<|end|>' → logprob: -5.843424320220947
    9. ',
' → logprob: -7.093424320220947
    10. ')' → logprob: -7.093424320220947

Token 719: 'len' (ID: 3303)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2130560278892517
    2. '<|end|>' → logprob: -2.5880560874938965
    3. '[' → logprob: -3.0880560874938965
    4. '...' → logprob: -3.8380560874938965
    5. ' )' → logprob: -4.2130560874938965
    6. '[
' → logprob: -4.8380560874938965
    7. '
' → logprob: -5.0880560874938965
    8. '<|end|>' → logprob: -5.3380560874938965
    9. 'import' → logprob: -5.9630560874938965
    10. '(
' → logprob: -6.4630560874938965

Token 720: ' max' (ID: 2999)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.8543822169303894
    2. 's' → logprob: -1.6043822765350342
    3. '(words' → logprob: -1.7293822765350342
    4. '(s' → logprob: -2.729382276535034
    5. ')' → logprob: -3.604382276535034
    6. '(next' → logprob: -3.729382276535034
    7. '(' → logprob: -4.354382038116455
    8. 'season' → logprob: -4.604382038116455
    9. '_se' → logprob: -4.854382038116455
    10. '_' → logprob: -4.854382038116455

Token 721: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3599895238876343
    2. '(s' → logprob: -1.6099895238876343
    3. ')' → logprob: -2.359989643096924
    4. '_' → logprob: -2.484989643096924
    5. 'season' → logprob: -2.859989643096924
    6. '(se' → logprob: -3.484989643096924
    7. '=' → logprob: -3.484989643096924
    8. '+' → logprob: -3.609989643096924
    9. '(' → logprob: -3.734989643096924
    10. '[' → logprob: -3.984989643096924

Token 722: '20' (ID: 455)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6083481311798096
    2. 'season' → logprob: -2.1083481311798096
    3. '=' → logprob: -2.2333481311798096
    4. ')' → logprob: -3.1083481311798096
    5. ')+' → logprob: -3.4833481311798096
    6. ' =' → logprob: -3.6083481311798096
    7. 'max' → logprob: -3.8583481311798096
    8. '+' → logprob: -4.6083478927612305
    9. ' season' → logprob: -4.6083478927612305
    10. 'patterns' → logprob: -4.6083478927612305

Token 723: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2969190180301666
    2. '+' → logprob: -2.046919107437134
    3. ')**' → logprob: -3.296919107437134
    4. ')
' → logprob: -3.796919107437134
    5. '**' → logprob: -4.421918869018555
    6. ')...' → logprob: -4.546918869018555
    7. '...' → logprob: -4.671918869018555
    8. ',' → logprob: -5.296918869018555
    9. ')+' → logprob: -5.421918869018555
    10. '),' → logprob: -5.421918869018555

Token 724: ' K' (ID: 658)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.7394846081733704
    2. 'K' → logprob: -1.6144845485687256
    3. ' K' → logprob: -1.9894845485687256
    4. ')' → logprob: -2.8644845485687256
    5. '...)' → logprob: -3.7394845485687256
    6. '20' → logprob: -4.239484786987305
    7. 'len' → logprob: -4.364484786987305
    8. 'max' → logprob: -4.489484786987305
    9. '#' → logprob: -4.489484786987305
    10. ' ' → logprob: -4.739484786987305

Token 725: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8172106146812439
    2. '**' → logprob: -1.6922106742858887
    3. '+' → logprob: -2.4422106742858887
    4. '
' → logprob: -2.8172106742858887
    5. '=' → logprob: -2.9422106742858887
    6. '<=' → logprob: -3.0672106742858887
    7. ' <=' → logprob: -3.3172106742858887
    8. ' +' → logprob: -4.567210674285889
    9. ' =' → logprob: -4.817210674285889
    10. '>' → logprob: -5.067210674285889

Token 726: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04387430474162102
    2. '20' → logprob: -3.9188742637634277
    3. ' =' → logprob: -4.543874263763428
    4. '10' → logprob: -4.918874263763428
    5. ' ' → logprob: -6.668874263763428
    6. '5' → logprob: -7.668874263763428
    7. '8' → logprob: -7.793874263763428
    8. ')' → logprob: -8.043874740600586
    9. '7' → logprob: -8.168874740600586
    10. '12' → logprob: -8.168874740600586

Token 727: '30' (ID: 1130)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5246209502220154
    2. '5' → logprob: -1.8996210098266602
    3. '20' → logprob: -2.14962100982666
    4. '8' → logprob: -3.27462100982666
    5. '11' → logprob: -3.52462100982666
    6. '7' → logprob: -3.89962100982666
    7. '6' → logprob: -4.02462100982666
    8. '15' → logprob: -4.27462100982666
    9. '12' → logprob: -5.02462100982666
    10. '9' → logprob: -5.52462100982666

Token 728: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000585918256547302
    2. ' )' → logprob: -9.125585556030273
    3. ')
' → logprob: -9.125585556030273
    4. '...' → logprob: -9.500585556030273
    5. '       ' → logprob: -9.750585556030273
    6. ',' → logprob: -9.750585556030273
    7. '<|end|>' → logprob: -10.000585556030273
    8. ')...' → logprob: -10.250585556030273
    9. ').' → logprob: -11.000585556030273
    10. '...)' → logprob: -11.250585556030273

Token 729: ' =>' (ID: 871)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6726552248001099
    2. '       ' → logprob: -0.7976552248001099
    3. '#' → logprob: -4.42265510559082
    4. '<|end|>' → logprob: -4.42265510559082
    5. ')' → logprob: -5.17265510559082
    6. '        
' → logprob: -5.92265510559082
    7. '   ' → logprob: -7.04765510559082
    8. ')
' → logprob: -7.17265510559082
    9. '...' → logprob: -7.29765510559082
    10. ',' → logprob: -7.29765510559082

Token 730: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49152547121047974
    2. 'return' → logprob: -1.616525411605835
    3. 'import' → logprob: -2.241525411605835
    4. 'continue' → logprob: -3.741525411605835
    5. ' return' → logprob: -3.866525411605835
    6. 'pass' → logprob: -4.741525650024414
    7. '
' → logprob: -4.991525650024414
    8. 'from' → logprob: -5.241525650024414
    9. ' #' → logprob: -5.741525650024414
    10. '       ' → logprob: -5.741525650024414

Token 731: '21' (ID: 2040)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1423516273498535
    2. '#' → logprob: -1.2673516273498535
    3. 'from' → logprob: -1.8923516273498535
    4. 'import' → logprob: -2.0173516273498535
    5. 'continue' → logprob: -2.7673516273498535
    6. 'pass' → logprob: -3.0173516273498535
    7. '       ' → logprob: -6.6423516273498535
    8. 'print' → logprob: -6.6423516273498535
    9. '
' → logprob: -8.267351150512695
    10. '   ' → logprob: -8.392351150512695

Token 732: '^' (ID: 61)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 733: '30' (ID: 1130)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.021410757675766945
    2. '30' → logprob: -4.271410942077637
    3. '31' → logprob: -5.021410942077637
    4. ' K' → logprob: -8.396410942077637
    5. '<|end|>' → logprob: -8.521410942077637
    6. '0' → logprob: -10.021410942077637
    7. '20' → logprob: -10.146410942077637
    8. '
' → logprob: -10.896410942077637
    9. '(K' → logprob: -11.396410942077637
    10. '32' → logprob: -11.771410942077637

Token 734: ' trop' (ID: 14765)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 735: ' gros' (ID: 28636)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 736: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025841765105724335
    2. '<|end|>' → logprob: -4.65084171295166
    3. '#' → logprob: -5.40084171295166
    4. ')' → logprob: -5.52584171295166
    5. '
' → logprob: -5.77584171295166
    6. '        
' → logprob: -7.02584171295166
    7. '<|end|>' → logprob: -7.02584171295166
    8. '...' → logprob: -7.52584171295166
    9. ',' → logprob: -8.02584171295166
    10. '   ' → logprob: -8.27584171295166

Token 737: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17238783836364746
    2. '#' → logprob: -1.9223878383636475
    3. '
' → logprob: -4.797388076782227
    4. '        
' → logprob: -6.547388076782227
    5. ' #' → logprob: -8.047388076782227
    6. '(
' → logprob: -8.297388076782227
    7. '[
' → logprob: -8.297388076782227
    8. '   ' → logprob: -8.547388076782227
    9. ' 
' → logprob: -8.547388076782227
    10. '[' → logprob: -8.672388076782227

Token 738: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.16642071306705475
    2. '       ' → logprob: -1.9164206981658936
    3. 'from' → logprob: -6.541420936584473
    4. '   ' → logprob: -6.666420936584473
    5. 'return' → logprob: -6.666420936584473
    6. 'import' → logprob: -7.166420936584473
    7. 'pass' → logprob: -8.041420936584473
    8. ' #' → logprob: -8.666420936584473
    9. '...' → logprob: -8.791420936584473
    10. '
' → logprob: -8.916420936584473

Token 739: ' alternative' (ID: 13319)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8071669936180115
    2. '#' → logprob: -1.0571670532226562
    3. 'from' → logprob: -2.1821670532226562
    4. '       ' → logprob: -2.6821670532226562
    5. 'state' → logprob: -4.432167053222656
    6. 'import' → logprob: -5.432167053222656
    7. 'dp' → logprob: -5.557167053222656
    8. '   ' → logprob: -6.557167053222656
    9. 'states' → logprob: -6.557167053222656
    10. 'length' → logprob: -7.682167053222656

Token 740: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23310956358909607
    2. '#' → logprob: -1.8581095933914185
    3. 'import' → logprob: -3.483109474182129
    4. 'def' → logprob: -5.358109474182129
    5. 'from' → logprob: -5.483109474182129
    6. ':' → logprob: -5.858109474182129
    7. '
' → logprob: -6.108109474182129
    8. '...' → logprob: -6.233109474182129
    9. '   ' → logprob: -6.733109474182129
    10. ':
' → logprob: -7.233109474182129

Token 741: ' Puis' (ID: 87717)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2914866805076599
    2. 'from' → logprob: -1.5414867401123047
    3. 'pass' → logprob: -4.416486740112305
    4. '       ' → logprob: -4.416486740112305
    5. 'import' → logprob: -4.666486740112305
    6. ' #' → logprob: -6.666486740112305
    7. '   ' → logprob: -6.791486740112305
    8. ' from' → logprob: -7.541486740112305
    9. 'next' → logprob: -7.541486740112305
    10. 'states' → logprob: -8.041486740112305

Token 742: 'qu' (ID: 351)
  Prédit: 'uis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uis' → logprob: -0.7035332918167114
    2. '#' → logprob: -1.8285332918167114
    3. 'er' → logprob: -1.9535332918167114
    4. 'def' → logprob: -3.453533172607422
    5. 'u' → logprob: -3.578533172607422
    6. 'que' → logprob: -3.953533172607422
    7. 'r' → logprob: -3.953533172607422
    8. '
' → logprob: -4.078533172607422
    9. '   ' → logprob: -4.953533172607422
    10. 'ro' → logprob: -5.078533172607422

Token 743: ''on' (ID: 25812)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.7059270739555359
    2. 'K' → logprob: -1.3309271335601807
    3. 'len' → logprob: -2.7059271335601807
    4. ' on' → logprob: -3.4559271335601807
    5. ' les' → logprob: -3.5809271335601807
    6. ' la' → logprob: -3.9559271335601807
    7. ' len' → logprob: -4.330926895141602
    8. 'on' → logprob: -4.330926895141602
    9. ' le' → logprob: -4.705926895141602
    10. 'le' → logprob: -4.705926895141602

Token 744: ' doit' (ID: 21822)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 've' → logprob: -1.364648461341858
    2. 'veux' → logprob: -1.489648461341858
    3. 'a' → logprob: -1.864648461341858
    4. 'ne' → logprob: -2.6146483421325684
    5. '#' → logprob: -2.8646483421325684
    6. 'n' → logprob: -2.9896483421325684
    7. 's' → logprob: -3.6146483421325684
    8. 'tr' → logprob: -3.9896483421325684
    9. 'voud' → logprob: -3.9896483421325684
    10. 'vou' → logprob: -4.239648342132568

Token 745: ' avoir' (ID: 16595)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.1456166505813599
    2. 're' → logprob: -1.3956166505813599
    3. 'con' → logprob: -2.8956165313720703
    4. 'matcher' → logprob: -2.8956165313720703
    5. ' trouver' → logprob: -3.0206165313720703
    6. 'g' → logprob: -3.7706165313720703
    7. 'chercher' → logprob: -3.7706165313720703
    8. 'faire' → logprob: -4.02061653137207
    9. 'util' → logprob: -5.02061653137207
    10. 'detect' → logprob: -5.02061653137207

Token 746: ' un' (ID: 537)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.2868900001049042
    2. 'une' → logprob: -2.1618900299072266
    3. 'un' → logprob: -2.2868900299072266
    4. 'unique' → logprob: -5.286890029907227
    5. ' exactement' → logprob: -5.286890029907227
    6. 'au' → logprob: -5.536890029907227
    7. 'uni' → logprob: -5.536890029907227
    8. 'que' → logprob: -5.911890029907227
    9. 'qu' → logprob: -5.911890029907227
    10. 'se' → logprob: -6.411890029907227

Token 747: ' seul' (ID: 33041)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -1.2541594505310059
    2. ' seul' → logprob: -1.2541594505310059
    3. 'se' → logprob: -1.6291594505310059
    4. 'mot' → logprob: -2.379159450531006
    5. ' unique' → logprob: -2.879159450531006
    6. 'single' → logprob: -3.254159450531006
    7. ' single' → logprob: -4.754159450531006
    8. ' mot' → logprob: -4.879159450531006
    9. 'pattern' → logprob: -5.629159450531006
    10. 's' → logprob: -5.879159450531006

Token 748: ' saison' (ID: 38158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0785561800003052
    2. 'mot' → logprob: -1.5785561800003052
    3. 'season' → logprob: -1.9535561800003052
    4. 'pattern' → logprob: -2.0785560607910156
    5. ' saison' → logprob: -2.7035560607910156
    6. ' pattern' → logprob: -3.7035560607910156
    7. ' unique' → logprob: -3.7035560607910156
    8. 'unique' → logprob: -3.8285560607910156
    9. ' mot' → logprob: -4.453556060791016
    10. 'match' → logprob: -4.828556060791016

Token 749: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.2697640359401703
    2. 'word' → logprob: -1.5197640657424927
    3. '_word' → logprob: -4.269763946533203
    4. ' mot' → logprob: -6.394763946533203
    5. 'mot' → logprob: -7.519763946533203
    6. '_words' → logprob: -7.769763946533203
    7. ' words' → logprob: -7.894763946533203
    8. 'words' → logprob: -7.894763946533203
    9. '	word' → logprob: -9.644763946533203
    10. '_m' → logprob: -10.582263946533203

Token 750: ' appara' (ID: 52982)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.215056911110878
    2. ' unique' → logprob: -2.590056896209717
    3. 'unique' → logprob: -2.590056896209717
    4. ',' → logprob: -4.090056896209717
    5. '_' → logprob: -4.965056896209717
    6. '_match' → logprob: -6.215056896209717
    7. '_index' → logprob: -6.215056896209717
    8. '```' → logprob: -6.215056896209717
    9. '_selected' → logprob: -6.215056896209717
    10. '_detect' → logprob: -6.715056896209717

Token 751: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.7507139444351196
    2. 'ît' → logprob: -2.25071382522583
    3. 'î' → logprob: -2.62571382522583
    4. 'ue' → logprob: -3.12571382522583
    5. 'ître' → logprob: -3.25071382522583
    6. 'issante' → logprob: -3.25071382522583
    7. 'it' → logprob: -3.75071382522583
    8. 'u' → logprob: -4.00071382522583
    9. 'issait' → logprob: -4.12571382522583
    10. 't' → logprob: -4.12571382522583

Token 752: ' une' (ID: 2463)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4469634294509888
    2. 'exact' → logprob: -1.4469634294509888
    3. 'une' → logprob: -1.5719634294509888
    4. 'dans' → logprob: -1.8219634294509888
    5. ' dans' → logprob: -3.946963310241699
    6. 'unique' → logprob: -3.946963310241699
    7. ' exactement' → logprob: -4.071963310241699
    8. 'explicit' → logprob: -4.071963310241699
    9. ' uniquement' → logprob: -4.696963310241699
    10. '_unique' → logprob: -4.696963310241699

Token 753: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.43329283595085144
    2. 'se' → logprob: -1.3082928657531738
    3. 'unique' → logprob: -2.808292865753174
    4. ' fois' → logprob: -5.058292865753174
    5. ' seule' → logprob: -5.183292865753174
    6. '```' → logprob: -5.433292865753174
    7. 'part' → logprob: -7.183292865753174
    8. '   ' → logprob: -7.558292865753174
    9. 'fo' → logprob: -7.683292865753174
    10. 'time' → logprob: -8.058292388916016

Token 754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41484102606773376
    2. ':' → logprob: -1.1648410558700562
    3. '...' → logprob: -4.539841175079346
    4. '.' → logprob: -4.914841175079346
    5. '#' → logprob: -6.664841175079346
    6. 'dans' → logprob: -6.914841175079346
    7. ' dans' → logprob: -7.039841175079346
    8. '```' → logprob: -7.789841175079346
    9. 's' → logprob: -8.039840698242188
    10. ' ' → logprob: -8.164840698242188

Token 755: ' 
' (ID: 793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5574710369110107
    2. '       ' → logprob: -1.3074710369110107
    3. ' #' → logprob: -2.9324710369110107
    4. ' on' → logprob: -3.0574710369110107
    5. 'state' → logprob: -4.68247127532959
    6. 'continue' → logprob: -4.80747127532959
    7. ' continue' → logprob: -4.93247127532959
    8. 'on' → logprob: -5.30747127532959
    9. ' continuer' → logprob: -5.43247127532959
    10. '        
' → logprob: -5.93247127532959

Token 756: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09055911749601364
    2. '#' → logprob: -2.4655590057373047
    3. ' #' → logprob: -7.340559005737305
    4. '   ' → logprob: -8.590559005737305
    5. 'continue' → logprob: -8.590559005737305
    6. ' on' → logprob: -9.215559005737305
    7. ' ' → logprob: -9.340559005737305
    8. '        
' → logprob: -9.465559005737305
    9. '           ' → logprob: -10.340559005737305
    10. ' continue' → logprob: -10.340559005737305

Token 757: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.43300116062164307
    2. '       ' → logprob: -1.183001160621643
    3. 'continue' → logprob: -3.8080010414123535
    4. 'state' → logprob: -5.1830010414123535
    5. 'on' → logprob: -5.8080010414123535
    6. ' #' → logprob: -6.0580010414123535
    7. 'for' → logprob: -6.3080010414123535
    8. ' on' → logprob: -6.4330010414123535
    9. 'mask' → logprob: -6.5580010414123535
    10. 'dp' → logprob: -6.8080010414123535

Token 758: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08943665772676468
    2. '       ' → logprob: -2.7144367694854736
    3. 'on' → logprob: -4.4644365310668945
    4. 'continue' → logprob: -6.2144365310668945
    5. '   ' → logprob: -7.3394365310668945
    6. 'import' → logprob: -7.4644365310668945
    7. 'possible' → logprob: -7.4644365310668945
    8. 'visited' → logprob: -7.7144365310668945
    9. 'dp' → logprob: -7.8394365310668945
    10. 'continu' → logprob: -7.8394365310668945

Token 759: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.18259280920028687
    2. ' continue' → logprob: -2.1825928688049316
    3. 'contin' → logprob: -3.8075928688049316
    4. '#' → logprob: -3.9325928688049316
    5. 'vais' → logprob: -5.307592868804932
    6. 'continu' → logprob: -6.682592868804932
    7. ' #' → logprob: -7.057592868804932
    8. 'pe' → logprob: -7.057592868804932
    9. '       ' → logprob: -7.682592868804932
    10. ' peux' → logprob: -7.807592868804932

Token 760: ' aussi' (ID: 9894)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.1964535266160965
    2. '#' → logprob: -2.19645357131958
    3. 'faire' → logprob: -3.94645357131958
    4. ' continuer' → logprob: -4.19645357131958
    5. 'util' → logprob: -4.94645357131958
    6. 'continue' → logprob: -5.44645357131958
    7. 'penser' → logprob: -5.57145357131958
    8. 'import' → logprob: -5.69645357131958
    9. '       ' → logprob: -6.07145357131958
    10. 'repr' → logprob: -6.44645357131958

Token 761: ' stock' (ID: 6546)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.5098876357078552
    2. 'faire' → logprob: -1.6348876953125
    3. 'penser' → logprob: -2.7598876953125
    4. '#' → logprob: -4.0098876953125
    5. 'util' → logprob: -4.1348876953125
    6. 'part' → logprob: -4.7598876953125
    7. 'cho' → logprob: -4.8848876953125
    8. 'sé' → logprob: -4.8848876953125
    9. 'impl' → logprob: -5.0098876953125
    10. 'tr' → logprob: -5.0098876953125

Token 762: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.0325924449716695e-05
    2. 'e' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.125009536743164
    4. 'ter' → logprob: -17.750009536743164
    5. '       ' → logprob: -17.875009536743164
    6. 'age' → logprob: -18.500009536743164
    7. 'r' → logprob: -18.875009536743164
    8. 'ent' → logprob: -19.125009536743164
    9. 'é' → logprob: -19.250009536743164
    10. 'eur' → logprob: -19.625009536743164

Token 763: ' plutôt' (ID: 40017)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.7435340881347656
    2. 'the' → logprob: -2.1185340881347656
    3. 'current' → logprob: -2.2435340881347656
    4. ' only' → logprob: -2.2435340881347656
    5. 'only' → logprob: -2.3685340881347656
    6. '#' → logprob: -2.4935340881347656
    7. 'for' → logprob: -2.9935340881347656
    8. 'state' → logprob: -3.3685340881347656
    9. 'dp' → logprob: -3.4935340881347656
    10. 'visited' → logprob: -3.6185340881347656

Token 764: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.52262282371521
    2. 'for' → logprob: -2.14762282371521
    3. 'None' → logprob: -2.27262282371521
    4. 'le' → logprob: -2.52262282371521
    5. 'la' → logprob: -2.52262282371521
    6. 'current' → logprob: -2.89762282371521
    7. 'state' → logprob: -3.14762282371521
    8. 'une' → logprob: -3.27262282371521
    9. ' l' → logprob: -3.77262282371521
    10. 'un' → logprob: -4.147623062133789

Token 765: ''état' (ID: 116357)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5157403349876404
    2. ''' → logprob: -2.015740394592285
    3. ''état' → logprob: -2.515740394592285
    4. 'a' → logprob: -3.390740394592285
    5. 'current' → logprob: -3.640740394592285
    6. 'ast' → logprob: -4.515740394592285
    7. 'et' → logprob: -4.765740394592285
    8. ' current' → logprob: -4.765740394592285
    9. 'state' → logprob: -4.765740394592285
    10. '#' → logprob: -4.890740394592285

Token 766: ' suivant' (ID: 68705)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6175528764724731
    2. 's' → logprob: -2.1175527572631836
    3. ',' → logprob: -2.6175527572631836
    4. '<|end|>' → logprob: -2.6175527572631836
    5. '   ' → logprob: -2.7425527572631836
    6. '[' → logprob: -2.9925527572631836
    7. '[]' → logprob: -3.1175527572631836
    8. ' of' → logprob: -3.1175527572631836
    9. '=' → logprob: -3.3675527572631836
    10. ')' → logprob: -3.4925527572631836

Token 767: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7246850728988647
    2. '   ' → logprob: -2.4746851921081543
    3. '[' → logprob: -2.7246851921081543
    4. 'state' → logprob: -3.2246851921081543
    5. '[]' → logprob: -3.7246851921081543
    6. 's' → logprob: -3.8496851921081543
    7. 'def' → logprob: -3.9746851921081543
    8. 'for' → logprob: -3.9746851921081543
    9. ']' → logprob: -4.099685192108154
    10. ''' → logprob: -4.224685192108154

Token 768: ' chaque' (ID: 21194)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.9795669913291931
    2. 'each' → logprob: -2.354567050933838
    3. ' None' → logprob: -2.479567050933838
    4. ' chaque' → logprob: -2.604567050933838
    5. 'l' → logprob: -2.854567050933838
    6. 'pattern' → logprob: -3.604567050933838
    7. 'la' → logprob: -3.604567050933838
    8. 'k' → logprob: -3.729567050933838
    9. 'le' → logprob: -3.854567050933838
    10. 'the' → logprob: -3.854567050933838

Token 769: ' saison' (ID: 38158)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.40621620416641235
    2. 'season' → logprob: -1.5312161445617676
    3. 'pat' → logprob: -2.4062161445617676
    4. ' pattern' → logprob: -5.156216144561768
    5. 's' → logprob: -5.281216144561768
    6. 'k' → logprob: -5.281216144561768
    7. ' saison' → logprob: -5.781216144561768
    8. '#' → logprob: -6.031216144561768
    9. ' season' → logprob: -6.281216144561768
    10. 'word' → logprob: -6.656216144561768

Token 770: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.13260719180107117
    2. 'words' → logprob: -2.3826072216033936
    3. '_word' → logprob: -4.2576069831848145
    4. ' word' → logprob: -4.6326069831848145
    5. '       ' → logprob: -5.1326069831848145
    6. '_words' → logprob: -6.7576069831848145
    7. ' words' → logprob: -8.257607460021973
    8. '   ' → logprob: -8.632607460021973
    9. '           ' → logprob: -8.882607460021973
    10. ')' → logprob: -9.257607460021973

Token 771: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13744959235191345
    2. '<|end|>' → logprob: -2.2624495029449463
    3. '<|end|>' → logprob: -4.887449741363525
    4. '#' → logprob: -5.887449741363525
    5. '...' → logprob: -5.887449741363525
    6. '        
' → logprob: -6.012449741363525
    7. '
' → logprob: -6.262449741363525
    8. ',' → logprob: -6.637449741363525
    9. ')' → logprob: -6.887449741363525
    10. '        ' → logprob: -7.637449741363525

Token 772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010253445245325565
    2. ' next' → logprob: -6.010253429412842
    3. '   ' → logprob: -7.135253429412842
    4. '#' → logprob: -7.635253429412842
    5. '           ' → logprob: -7.635253429412842
    6. '        
' → logprob: -7.635253429412842
    7. ',' → logprob: -7.635253429412842
    8. '
' → logprob: -7.760253429412842
    9. ' dp' → logprob: -7.760253429412842
    10. 'next' → logprob: -8.01025390625

Token 773: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47024524211883545
    2. ' next' → logprob: -1.7202452421188354
    3. 'next' → logprob: -2.595245361328125
    4. '   ' → logprob: -3.470245361328125
    5. '#' (adapté à ' #') → logprob: -4.345245361328125
    6. ' for' → logprob: -4.845245361328125
    7. '[' → logprob: -4.845245361328125
    8. ' #' → logprob: -5.095245361328125
    9. '        
' → logprob: -5.595245361328125
    10. ' 
' → logprob: -5.595245361328125

Token 774: ' Mais' (ID: 13880)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7707362771034241
    2. '#' → logprob: -1.6457362174987793
    3. 'dp' → logprob: -2.0207362174987793
    4. 'state' → logprob: -2.5207362174987793
    5. 'selected' → logprob: -3.5207362174987793
    6. '   ' → logprob: -3.8957362174987793
    7. 'visited' → logprob: -4.395736217498779
    8. 'chosen' → logprob: -4.770736217498779
    9. 'cur' → logprob: -4.895736217498779
    10. 'status' → logprob: -5.145736217498779

Token 775: ' meme' (ID: 54868)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5234644412994385
    2. '...' → logprob: -1.8984644412994385
    3. 'for' → logprob: -3.2734644412994385
    4. ' #' → logprob: -3.6484644412994385
    5. ' on' → logprob: -3.8984644412994385
    6. 'import' → logprob: -4.148464202880859
    7. ')' → logprob: -4.148464202880859
    8. ' for' → logprob: -4.398464202880859
    9. '           ' → logprob: -4.523464202880859
    10. 'def' → logprob: -4.648464202880859

Token 776: ' idee' (ID: 37015)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -0.27316713333129883
    2. '#' → logprob: -1.8981671333312988
    3. '<|end|>' → logprob: -3.398167133331299
    4. '[' → logprob: -4.148167133331299
    5. ')' → logprob: -4.898167133331299
    6. ' ...' → logprob: -5.023167133331299
    7. '<|end|>' → logprob: -5.273167133331299
    8. '   ' → logprob: -5.273167133331299
    9. ' ' → logprob: -5.773167133331299
    10. '       ' → logprob: -6.523167133331299

Token 777: ' ca' (ID: 3268)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06761598587036133
    2. '<|end|>' → logprob: -3.5676159858703613
    3. '
' → logprob: -3.6926159858703613
    4. '#' → logprob: -4.942615985870361
    5. '        
' → logprob: -5.942615985870361
    6. '<|end|>' → logprob: -7.192615985870361
    7. '...' → logprob: -7.442615985870361
    8. ')' → logprob: -8.317615509033203
    9. ',' → logprob: -8.442615509033203
    10. '   ' → logprob: -8.942615509033203

Token 778: ' expl' (ID: 3421)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9514362812042236
    2. 's' → logprob: -1.5764362812042236
    3. '...' → logprob: -2.0764362812042236
    4. 'est' → logprob: -2.3264362812042236
    5. '       ' → logprob: -3.7014362812042236
    6. 'n' → logprob: -3.9514362812042236
    7. 'continue' → logprob: -3.9514362812042236
    8. 'se' → logprob: -4.2014360427856445
    9. '           ' → logprob: -4.3264360427856445
    10. '=' → logprob: -4.5764360427856445

Token 779: 'ose' (ID: 918)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.9269573092460632
    2. 'ose' → logprob: -1.051957368850708
    3. '```' → logprob: -2.676957368850708
    4. 'ore' → logprob: -3.051957368850708
    5. '#' → logprob: -3.926957368850708
    6. 'plore' → logprob: -4.051957130432129
    7. 'it' → logprob: -4.176957130432129
    8. 'ude' → logprob: -4.551957130432129
    9. 'e' → logprob: -4.801957130432129
    10. 'u' → logprob: -4.926957130432129

Token 780: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.572718620300293
    2. '       ' → logprob: -1.697718620300293
    3. '<|end|>' → logprob: -1.822718620300293
    4. '...' → logprob: -2.947718620300293
    5. '<|end|>' → logprob: -4.947718620300293
    6. ')' → logprob: -5.197718620300293
    7. '[' → logprob: -5.197718620300293
    8. '   ' → logprob: -5.572718620300293
    9. '
' → logprob: -5.697718620300293
    10. '\' → logprob: -5.822718620300293

Token 781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4895348846912384
    2. '#' → logprob: -0.989534854888916
    3. '   ' → logprob: -5.239534854888916
    4. 'import' → logprob: -5.739534854888916
    5. '
' → logprob: -6.989534854888916
    6. 'def' → logprob: -7.239534854888916
    7. 'from' → logprob: -7.239534854888916
    8. 'state' → logprob: -7.239534854888916
    9. 'dp' → logprob: -7.239534854888916
    10. '```' → logprob: -7.614534854888916

Token 782: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6402535438537598
    2. '#' (adapté à ' #') → logprob: -0.7652535438537598
    3. '
' → logprob: -6.01525354385376
    4. 'state' → logprob: -6.39025354385376
    5. 'continue' → logprob: -7.39025354385376
    6. 'import' → logprob: -7.39025354385376
    7. ' #' → logprob: -7.64025354385376
    8. 'dp' → logprob: -7.76525354385376
    9. '        
' → logprob: -8.390253067016602
    10. 'from' → logprob: -8.640253067016602

Token 783: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0052826404571533
    2. 'from' → logprob: -1.5052826404571533
    3. '#' → logprob: -2.0052826404571533
    4. 'max' → logprob: -2.2552826404571533
    5. 'state' → logprob: -2.2552826404571533
    6. 'states' → logprob: -3.5052826404571533
    7. '       ' → logprob: -4.380282402038574
    8. '   ' → logprob: -4.505282402038574
    9. 'combined' → logprob: -6.005282402038574
    10. 'size' → logprob: -6.255282402038574

Token 784: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8047878742218018
    2. 'continue' → logprob: -1.0547878742218018
    3. '       ' → logprob: -2.1797878742218018
    4. 'contin' → logprob: -3.5547878742218018
    5. 'vais' → logprob: -4.304787635803223
    6. ' continue' → logprob: -4.554787635803223
    7. 'import' → logprob: -4.929787635803223
    8. 'def' → logprob: -5.554787635803223
    9. ' vais' → logprob: -6.179787635803223
    10. '   ' → logprob: -6.179787635803223

Token 785: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1179903745651245
    2. '   ' → logprob: -1.4929903745651245
    3. '       ' → logprob: -1.9929903745651245
    4. 'pas' → logprob: -3.617990493774414
    5. ' #' → logprob: -3.742990493774414
    6. 'def' → logprob: -3.867990493774414
    7. ' pas' → logprob: -3.867990493774414
    8. 'une' → logprob: -3.992990493774414
    9. '```' → logprob: -3.992990493774414
    10. 'import' → logprob: -4.117990493774414

Token 786: ' condition' (ID: 7060)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9358817338943481
    2. 'lim' → logprob: -2.5608816146850586
    3. 'from' → logprob: -2.8108816146850586
    4. 'def' → logprob: -2.9358816146850586
    5. 'import' → logprob: -2.9358816146850586
    6. '
' → logprob: -3.0608816146850586
    7. 'clear' → logprob: -3.1858816146850586
    8. 'limit' → logprob: -3.1858816146850586
    9. 'suite' → logprob: -4.185881614685059
    10. 'len' → logprob: -4.310881614685059

Token 787: ' que' (ID: 661)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2758346796035767
    2. ' que' → logprob: -2.025834560394287
    3. ' de' → logprob: -2.025834560394287
    4. ' d' → logprob: -2.150834560394287
    5. ' that' → logprob: -2.275834560394287
    6. '       ' → logprob: -3.025834560394287
    7. 'd' → logprob: -3.150834560394287
    8. 'that' → logprob: -3.275834560394287
    9. ':' → logprob: -3.400834560394287
    10. 'de' → logprob: -4.275834560394287

Token 788: ' qu' (ID: 474)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7593563795089722
    2. 'la' → logprob: -2.1343564987182617
    3. 'l' → logprob: -2.3843564987182617
    4. ' le' → logprob: -3.1343564987182617
    5. 'une' → logprob: -3.3843564987182617
    6. 'on' → logprob: -3.5093564987182617
    7. ' la' → logprob: -3.6343564987182617
    8. 'exact' → logprob: -3.6343564987182617
    9. 'len' → logprob: -3.7593564987182617
    10. ' chaque' → logprob: -4.134356498718262

Token 789: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.006412781774997711
    2. ''il' → logprob: -6.631412982940674
    3. 'estion' → logprob: -6.756412982940674
    4. ''' → logprob: -7.131412982940674
    5. ''''' → logprob: -7.131412982940674
    6. 'el' → logprob: -7.631412982940674
    7. 'i' → logprob: -8.256412506103516
    8. ' '' → logprob: -8.256412506103516
    9. ''une' → logprob: -8.381412506103516
    10. ' e' → logprob: -8.631412506103516

Token 790: ' seul' (ID: 33041)
  Prédit: ' seul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seul' → logprob: -0.4957239627838135
    2. 'e' → logprob: -1.4957239627838135
    3. ' unique' → logprob: -2.7457239627838135
    4. 'u' → logprob: -3.8707239627838135
    5. 's' → logprob: -3.9957239627838135
    6. 'se' → logprob: -4.745723724365234
    7. ' single' → logprob: -4.870723724365234
    8. ' season' → logprob: -4.870723724365234
    9. ' s' → logprob: -5.245723724365234
    10. 'unique' → logprob: -5.495723724365234

Token 791: ' saison' (ID: 38158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8995389342308044
    2. 'season' → logprob: -1.1495389938354492
    3. ' saison' → logprob: -1.5245389938354492
    4. ' season' → logprob: -4.024538993835449
    5. 'pattern' → logprob: -4.399538993835449
    6. ' pattern' → logprob: -4.774538993835449
    7. 'mot' → logprob: -5.149538993835449
    8. 'word' → logprob: -5.774538993835449
    9. ' word' → logprob: -6.149538993835449
    10. ' mot' → logprob: -6.149538993835449

Token 792: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.6219148635864258
    2. 'word' → logprob: -1.6219148635864258
    3. '_word' → logprob: -1.7469148635864258
    4. ' _' → logprob: -3.121914863586426
    5. '_' → logprob: -3.496914863586426
    6. '_words' → logprob: -4.746914863586426
    7. 'words' → logprob: -6.371914863586426
    8. ' words' → logprob: -6.621914863586426
    9. ')' → logprob: -6.871914863586426
    10. ' ' → logprob: -6.996914863586426

Token 793: ' doit' (ID: 21822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.207700729370117
    2. '_idx' → logprob: -2.207700729370117
    3. '_mask' → logprob: -2.207700729370117
    4. '_' → logprob: -2.332700729370117
    5. '_selected' → logprob: -2.457700729370117
    6. '_active' → logprob: -2.582700729370117
    7. '_index' → logprob: -2.707700729370117
    8. '_unique' → logprob: -3.082700729370117
    9. '_present' → logprob: -3.332700729370117
    10. '```' → logprob: -3.832700729370117

Token 794: ' appara' (ID: 52982)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.49863436818122864
    2. ' appara' → logprob: -1.3736343383789062
    3. ' être' → logprob: -2.6236343383789062
    4. 'appear' → logprob: -3.6236343383789062
    5. 'appar' → logprob: -4.498634338378906
    6. '_' → logprob: -4.623634338378906
    7. ' appar' → logprob: -5.873634338378906
    8. ' be' → logprob: -6.248634338378906
    9. ''être' → logprob: -6.373634338378906
    10. 'ap' → logprob: -6.623634338378906

Token 795: 'ître' (ID: 29135)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -1.3862347602844238
    2. 'î' → logprob: -1.3862347602844238
    3. '\' → logprob: -2.136234760284424
    4. 'ra' → logprob: -2.636234760284424
    5. '</' → logprob: -3.261234760284424
    6. 'rait' → logprob: -3.386234760284424
    7. '{"' → logprob: -3.511234760284424
    8. 'ît' → logprob: -3.636234760284424
    9. '```' → logprob: -3.886234760284424
    10. 'ître' → logprob: -4.011234760284424

Token 796: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7627095580101013
    2. '<|end|>' → logprob: -1.137709617614746
    3. ',' → logprob: -3.262709617614746
    4. '.' → logprob: -3.512709617614746
    5. '...' → logprob: -3.637709617614746
    6. ')' → logprob: -3.762709617614746
    7. ':' → logprob: -4.137709617614746
    8. 's' → logprob: -4.512709617614746
    9. ' _' → logprob: -4.762709617614746
    10. '[' → logprob: -5.137709617614746

Token 797: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.35720422863960266
    2. 'se' → logprob: -1.8572041988372803
    3. 'unique' → logprob: -2.8572041988372803
    4. ' fois' → logprob: -3.1072041988372803
    5. ' seule' → logprob: -3.3572041988372803
    6. '```' → logprob: -6.857204437255859
    7. ' unique' → logprob: -7.482204437255859
    8. 'part' → logprob: -7.607204437255859
    9. ' seul' → logprob: -7.607204437255859
    10. 'single' → logprob: -7.607204437255859

Token 798: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028490161523222923
    2. '
' → logprob: -4.52849006652832
    3. '#' → logprob: -5.27849006652832
    4. '   ' → logprob: -6.02849006652832
    5. ',' → logprob: -6.15349006652832
    6. ')' → logprob: -6.52849006652832
    7. '[' → logprob: -6.65349006652832
    8. '        
' → logprob: -6.77849006652832
    9. '<|end|>' → logprob: -6.77849006652832
    10. '...' → logprob: -8.02849006652832

Token 799: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.023288918659090996
    2. 'the' → logprob: -4.648288726806641
    3. 'le' → logprob: -5.023288726806641
    4. ' la' → logprob: -6.398288726806641
    5. 'l' → logprob: -6.898288726806641
    6. 'une' → logprob: -6.898288726806641
    7. 'phrase' → logprob: -6.898288726806641
    8. 'les' → logprob: -7.148288726806641
    9. '#' → logprob: -7.898288726806641
    10. '```' → logprob: -8.27328872680664

Token 800: ' phrase' (ID: 27179)
  Prédit: 'phrase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phrase' → logprob: -0.237099289894104
    2. 'concat' → logprob: -2.3620991706848145
    3. 'chaine' → logprob: -2.8620991706848145
    4. 'code' → logprob: -4.1120991706848145
    5. 'sentence' → logprob: -4.2370991706848145
    6. 'suite' → logprob: -4.7370991706848145
    7. 'conc' → logprob: -5.6120991706848145
    8. ' phrase' → logprob: -5.7370991706848145
    9. 'phr' → logprob: -6.2370991706848145
    10. 'mask' → logprob: -6.3620991706848145

Token 801: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012778379954397678
    2. '#' → logprob: -4.887778282165527
    3. '        
' → logprob: -6.512778282165527
    4. '
' → logprob: -6.637778282165527
    5. '   ' → logprob: -7.387778282165527
    6. ',' → logprob: -8.012778282165527
    7. ')' → logprob: -8.512778282165527
    8. '...' → logprob: -8.512778282165527
    9. ' #' → logprob: -9.387778282165527
    10. '[' → logprob: -9.762778282165527

Token 802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007344061974436045
    2. '        
' → logprob: -6.1323442459106445
    3. '   ' → logprob: -6.2573442459106445
    4. ' 
' → logprob: -7.3823442459106445
    5. '\' → logprob: -7.5073442459106445
    6. '#' → logprob: -8.257344245910645
    7. '[' → logprob: -8.507344245910645
    8. '  
' → logprob: -8.632344245910645
    9. '
' → logprob: -8.757344245910645
    10. ' ' → logprob: -9.007344245910645

Token 803: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007636678405106068
    2. '        
' → logprob: -6.257636547088623
    3. ' 
' → logprob: -7.007636547088623
    4. '#' (adapté à ' #') → logprob: -7.257636547088623
    5. '   ' → logprob: -7.257636547088623
    6. '
' → logprob: -7.382636547088623
    7. '\' → logprob: -8.132637023925781
    8. '        ' → logprob: -8.257637023925781
    9. ' next' → logprob: -8.632637023925781
    10. ' #' → logprob: -8.632637023925781

Token 804: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6865811944007874
    2. '#' → logprob: -1.4365811347961426
    3. 'dp' → logprob: -1.5615811347961426
    4. 'from' → logprob: -3.3115811347961426
    5. 'state' → logprob: -5.186581134796143
    6. '
' → logprob: -6.436581134796143
    7. 'import' → logprob: -6.811581134796143
    8. '   ' → logprob: -6.936581134796143
    9. 'for' → logprob: -7.311581134796143
    10. 'max' → logprob: -7.436581134796143

Token 805: ' note' (ID: 7477)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2093801498413086
    2. 'def' → logprob: -1.9593801498413086
    3. '       ' → logprob: -2.2093801498413086
    4. 'continue' → logprob: -3.0843801498413086
    5. 'stock' → logprob: -3.2093801498413086
    6. 'state' → logprob: -3.2093801498413086
    7. 'need' → logprob: -3.2093801498413086
    8. 'contin' → logprob: -3.4593801498413086
    9. 'import' → logprob: -3.7093801498413086
    10. '_' → logprob: -3.7093801498413086

Token 806: ' que' (ID: 661)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.7188730239868164
    2. 'pos' → logprob: -1.9688730239868164
    3. '_' → logprob: -2.9688730239868164
    4. '#' → logprob: -2.9688730239868164
    5. ' state' → logprob: -3.4688730239868164
    6. '   ' → logprob: -3.7188730239868164
    7. 'season' → logprob: -3.7188730239868164
    8. 'current' → logprob: -3.8438730239868164
    9. 'prev' → logprob: -4.093873023986816
    10. 'dp' → logprob: -4.218873023986816

Token 807: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.941150426864624
    2. '#' → logprob: -1.691150426864624
    3. ' #' → logprob: -2.316150426864624
    4. '       ' → logprob: -2.941150426864624
    5. ' le' → logprob: -2.941150426864624
    6. ' on' → logprob: -3.441150426864624
    7. ' for' → logprob: -3.441150426864624
    8. 'la' → logprob: -3.691150426864624
    9. 'for' → logprob: -3.691150426864624
    10. '   ' → logprob: -3.816150426864624

Token 808: ' saison' (ID: 38158)
  Prédit: ' phrase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' phrase' → logprob: -0.7231746912002563
    2. ' next' → logprob: -1.9731746912002563
    3. 'dp' → logprob: -2.473174571990967
    4. 'phrase' → logprob: -2.473174571990967
    5. 'next' → logprob: -2.973174571990967
    6. 'for' → logprob: -3.723174571990967
    7. 'import' → logprob: -3.848174571990967
    8. '#' → logprob: -4.348174571990967
    9. ' code' → logprob: -4.473174571990967
    10. 'len' → logprob: -4.473174571990967

Token 809: ' word' (ID: 2195)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.046323299407959
    2. '_words' → logprob: -1.171323299407959
    3. 'words' → logprob: -1.671323299407959
    4. '_word' → logprob: -2.296323299407959
    5. 's' → logprob: -3.796323299407959
    6. 'word' → logprob: -3.921323299407959
    7. '_masks' → logprob: -6.046323299407959
    8. '_length' → logprob: -7.421323299407959
    9. '_m' → logprob: -7.546323299407959
    10. 'mask' → logprob: -7.796323299407959

Token 810: ' peut' (ID: 9216)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5899816751480103
    2. '_' → logprob: -1.9649816751480103
    3. '_states' → logprob: -2.4649815559387207
    4. '_mask' → logprob: -2.8399815559387207
    5. '_idx' → logprob: -2.9649815559387207
    6. '_id' → logprob: -4.714981555938721
    7. '_masks' → logprob: -4.714981555938721
    8. '_state' → logprob: -4.714981555938721
    9. '_count' → logprob: -4.964981555938721
    10. '_index' → logprob: -4.964981555938721

Token 811: ' être' (ID: 9104)
  Prédit: 'appear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appear' → logprob: -0.596651017665863
    2. 'être' → logprob: -1.8466510772705078
    3. ' appara' → logprob: -2.471651077270508
    4. 'appar' → logprob: -2.971651077270508
    5. 's' → logprob: -3.471651077270508
    6. 'app' → logprob: -4.471651077270508
    7. 'n' → logprob: -4.596651077270508
    8. 'only' → logprob: -4.721651077270508
    9. ' appear' → logprob: -4.721651077270508
    10. 'ap' → logprob: -4.721651077270508

Token 812: ' travers' (ID: 26957)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.738397479057312
    2. 'une' → logprob: -1.988397479057312
    3. 'le' → logprob: -2.2383975982666016
    4. 'part' → logprob: -2.4883975982666016
    5. 'dans' → logprob: -2.7383975982666016
    6. 'vide' → logprob: -2.9883975982666016
    7. 'prés' → logprob: -3.1133975982666016
    8. 'prefix' → logprob: -3.6133975982666016
    9. 'so' → logprob: -3.6133975982666016
    10. 'conten' → logprob: -3.6133975982666016

Token 813: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.5631723999977112
    2. 'er' → logprob: -0.9381723999977112
    3. 'é' → logprob: -3.4381723403930664
    4. 'e' → logprob: -5.563172340393066
    5. '#' → logprob: -7.063172340393066
    6. 'és' → logprob: -8.188172340393066
    7. 'ee' → logprob: -8.438172340393066
    8. 'u' → logprob: -8.688172340393066
    9. 'ers' → logprob: -8.688172340393066
    10. 'rée' → logprob: -8.688172340393066

Token 814: ' sur' (ID: 1512)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9957535862922668
    2. '       ' → logprob: -1.120753526687622
    3. '   ' → logprob: -2.370753526687622
    4. ' _' → logprob: -3.620753526687622
    5. 's' → logprob: -3.995753526687622
    6. ',' → logprob: -3.995753526687622
    7. ' jusqu' → logprob: -4.120753765106201
    8. '
' → logprob: -4.245753765106201
    9. '           ' → logprob: -4.995753765106201
    10. ')' → logprob: -5.245753765106201

Token 815: ' la' (ID: 557)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.09071536362171173
    2. ' plusieurs' → logprob: -2.7157154083251953
    3. ' plus' → logprob: -5.340715408325195
    4. 'un' → logprob: -5.965715408325195
    5. 'une' → logprob: -5.965715408325195
    6. 'multiple' → logprob: -6.215715408325195
    7. 'le' → logprob: -6.590715408325195
    8. 'l' → logprob: -6.715715408325195
    9. 'les' → logprob: -6.840715408325195
    10. '   ' → logprob: -6.840715408325195

Token 816: ' frontière' (ID: 180460)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.8736391067504883
    2. 'm' → logprob: -0.9986391067504883
    3. 'chaine' → logprob: -3.2486391067504883
    4. '\n' → logprob: -3.6236391067504883
    5. 'next' → logprob: -3.7486391067504883
    6. ' même' → logprob: -4.248639106750488
    7. ' mot' → logprob: -4.248639106750488
    8. ' next' → logprob: -4.623639106750488
    9. 'plus' → logprob: -5.248639106750488
    10. '   ' → logprob: -5.248639106750488

Token 817: ' entre' (ID: 3853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029237745329737663
    2. '   ' → logprob: -4.529237747192383
    3. ',' → logprob: -5.779237747192383
    4. '#' → logprob: -6.279237747192383
    5. '        
' → logprob: -6.279237747192383
    6. '...' → logprob: -6.529237747192383
    7. '<|end|>' → logprob: -6.529237747192383
    8. '.' → logprob: -6.654237747192383
    9. ' ' → logprob: -6.779237747192383
    10. ')' → logprob: -7.154237747192383

Token 818: ' mots' (ID: 38338)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.36560115218162537
    2. 'two' → logprob: -1.3656011819839478
    3. 'de' → logprob: -3.490601062774658
    4. ' deux' → logprob: -4.740601062774658
    5. 'adj' → logprob: -5.240601062774658
    6. 'les' → logprob: -6.615601062774658
    7. 'm' → logprob: -6.615601062774658
    8. ' two' → logprob: -6.740601062774658
    9. 'tokens' → logprob: -7.490601062774658
    10. ' words' → logprob: -7.615601062774658

Token 819: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026486650109291077
    2. '
' → logprob: -4.026486873626709
    3. '        
' → logprob: -5.026486873626709
    4. '#' → logprob: -7.526486873626709
    5. '```' → logprob: -7.776486873626709
    6. ',' → logprob: -8.77648639678955
    7. ')' → logprob: -9.65148639678955
    8. '       
' → logprob: -10.02648639678955
    9. '   ' → logprob: -10.15148639678955
    10. '	' → logprob: -10.15148639678955

Token 820: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06384827941656113
    2. '#' → logprob: -3.3138482570648193
    3. '<|end|>' → logprob: -5.188848495483398
    4. '...' → logprob: -5.938848495483398
    5. '        
' → logprob: -6.188848495483398
    6. ' but' → logprob: -6.188848495483398
    7. ' ' → logprob: -6.313848495483398
    8. ' #' → logprob: -6.438848495483398
    9. ' ' → logprob: -6.438848495483398
    10. '        ' → logprob: -6.938848495483398

Token 821: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8424139022827148
    2. 'u' → logprob: -0.8424139022827148
    3. '       ' → logprob: -2.592413902282715
    4. ''est' → logprob: -4.342413902282715
    5. ''un' → logprob: -4.592413902282715
    6. ''espace' → logprob: -4.842413902282715
    7. '   ' → logprob: -5.092413902282715
    8. ''u' → logprob: -5.342413902282715
    9. '#' → logprob: -5.592413902282715
    10. 'e' → logprob: -6.217413902282715

Token 822: ' la' (ID: 557)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.010088324546814
    2. 'possible' → logprob: -1.135088324546814
    3. ' possible' → logprob: -2.3850884437561035
    4. '-à' → logprob: -2.6350884437561035
    5. '\n' → logprob: -3.3850884437561035
    6. '```' → logprob: -3.8850884437561035
    7. ' à' → logprob: -4.5100884437561035
    8. ' donc' → logprob: -4.8850884437561035
    9. 'une' → logprob: -4.8850884437561035
    10. 'a' → logprob: -5.0100884437561035

Token 823: ' concat' (ID: 73950)
  Prédit: 'raison'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raison' → logprob: -0.9418465495109558
    2. 'same' → logprob: -1.3168466091156006
    3. 'm' → logprob: -2.9418466091156006
    4. ' même' → logprob: -2.9418466091156006
    5. 'concat' → logprob: -3.6918466091156006
    6. 'mot' → logprob: -3.6918466091156006
    7. '#' → logprob: -3.8168466091156006
    8. 'conc' → logprob: -3.8168466091156006
    9. ' raison' → logprob: -4.1918463706970215
    10. 'part' → logprob: -4.1918463706970215

Token 824: ' des' (ID: 731)
  Prédit: 'aten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aten' → logprob: -0.24028852581977844
    2. 'atenate' → logprob: -2.240288496017456
    3. 'at' → logprob: -3.115288496017456
    4. 'ation' → logprob: -3.740288496017456
    5. '   ' → logprob: -4.490288734436035
    6. ')' → logprob: -4.615288734436035
    7. 'en' → logprob: -5.365288734436035
    8. '       ' → logprob: -5.990288734436035
    9. '...' → logprob: -6.240288734436035
    10. '[' → logprob: -6.490288734436035

Token 825: ' mots' (ID: 38338)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8510227203369141
    2. 'words' → logprob: -0.9760227203369141
    3. 'tokens' → logprob: -1.851022720336914
    4. 'mot' → logprob: -4.476022720336914
    5. ' mots' → logprob: -5.101022720336914
    6. 'de' → logprob: -5.351022720336914
    7. 'current' → logprob: -5.601022720336914
    8. 'strings' → logprob: -5.976022720336914
    9. 'word' → logprob: -6.351022720336914
    10. ' words' → logprob: -6.351022720336914

Token 826: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004790496081113815
    2. '        
' → logprob: -5.629790306091309
    3. '
' → logprob: -7.879790306091309
    4. ',' → logprob: -8.504790306091309
    5. '<|end|>' → logprob: -8.754790306091309
    6. '#' → logprob: -9.129790306091309
    7. '.' → logprob: -10.129790306091309
    8. '   ' → logprob: -10.379790306091309
    9. ' ' → logprob: -10.379790306091309
    10. '<|end|>' → logprob: -10.504790306091309

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013460656628012657
    2. '        
' → logprob: -7.126346111297607
    3. '\' → logprob: -8.87634563446045
    4. '\n' → logprob: -9.12634563446045
    5. '   ' → logprob: -9.62634563446045
    6. ' ' → logprob: -10.37634563446045
    7. '           ' → logprob: -10.62634563446045
    8. ',' → logprob: -10.62634563446045
    9. '```' → logprob: -10.62634563446045
    10. '        ' → logprob: -11.12634563446045

Token 828: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053346987813711166
    2. 'dp' → logprob: -3.178346872329712
    3. '#' (adapté à ' #') → logprob: -5.428347110748291
    4. ' dp' → logprob: -6.553347110748291
    5. 'state' → logprob: -6.928347110748291
    6. '
' → logprob: -7.178347110748291
    7. '        
' → logprob: -7.803347110748291
    8. 'max' → logprob: -7.803347110748291
    9. ' #' → logprob: -7.928347110748291
    10. 'import' → logprob: -8.053346633911133

Token 829: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5982881188392639
    2. '       ' → logprob: -1.7232880592346191
    3. 'state' → logprob: -2.598288059234619
    4. '#' → logprob: -2.848288059234619
    5. 'from' → logprob: -2.973288059234619
    6. 'states' → logprob: -3.973288059234619
    7. 'visited' → logprob: -4.473288059234619
    8. 'pos' → logprob: -4.598288059234619
    9. '   ' → logprob: -4.973288059234619
    10. 's' → logprob: -5.223288059234619

Token 830: ' va' (ID: 3423)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.3025444746017456
    2. '#' → logprob: -1.5525444746017456
    3. 'def' → logprob: -1.5525444746017456
    4. 'for' → logprob: -2.427544593811035
    5. 'contin' → logprob: -2.677544593811035
    6. ' continue' → logprob: -3.552544593811035
    7. '       ' → logprob: -3.552544593811035
    8. '_' → logprob: -4.802544593811035
    9. 'need' → logprob: -4.802544593811035
    10. 'import' → logprob: -5.177544593811035

Token 831: ' donc' (ID: 14206)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.3569721579551697
    2. 'import' → logprob: -1.9819722175598145
    3. 'util' → logprob: -2.4819722175598145
    4. 'stock' → logprob: -4.4819722175598145
    5. ' continuer' → logprob: -4.6069722175598145
    6. '   ' → logprob: -4.7319722175598145
    7. 'faire' → logprob: -4.7319722175598145
    8. 'initial' → logprob: -5.1069722175598145
    9. 'impl' → logprob: -5.2319722175598145
    10. 'coder' → logprob: -5.6069722175598145

Token 832: ' mod' (ID: 1812)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.3039311170578003
    2. 'util' → logprob: -1.8039311170578003
    3. 'impl' → logprob: -3.42893123626709
    4. 'faire' → logprob: -4.30393123626709
    5. 'sim' → logprob: -4.67893123626709
    6. 'coder' → logprob: -5.42893123626709
    7. 'import' → logprob: -5.42893123626709
    8. 'stock' → logprob: -5.42893123626709
    9. 'implement' → logprob: -5.55393123626709
    10. 'dé' → logprob: -5.80393123626709

Token 833: 'él' (ID: 6778)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.18851003050804138
    2. 'if' → logprob: -2.938509941101074
    3. 'él' → logprob: -3.188509941101074
    4. 'def' → logprob: -3.938509941101074
    5. 'ify' → logprob: -4.563509941101074
    6. 'eler' → logprob: -5.063509941101074
    7. 'é' → logprob: -5.313509941101074
    8. 'f' → logprob: -5.438509941101074
    9. 'import' → logprob: -5.563509941101074
    10. '```' → logprob: -5.563509941101074

Token 834: 'iser' (ID: 7466)
  Prédit: 'él'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'él' → logprob: -0.33113452792167664
    2. 'è' → logprob: -1.456134557723999
    3. 'érer' → logprob: -3.831134557723999
    4. 'eler' → logprob: -4.08113431930542
    5. 'é' → logprob: -5.45613431930542
    6. 'er' → logprob: -6.08113431930542
    7. '   ' → logprob: -6.83113431930542
    8. 'el' → logprob: -7.45613431930542
    9. 'eller' → logprob: -7.45613431930542
    10. 'èle' → logprob: -7.83113431930542

Token 835: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.843214213848114
    2. 'state' → logprob: -1.0932142734527588
    3. '#' → logprob: -2.843214273452759
    4. '       ' → logprob: -3.093214273452759
    5. 'dp' → logprob: -3.343214273452759
    6. 'l' → logprob: -3.968214273452759
    7. 'pos' → logprob: -4.46821403503418
    8. ' state' → logprob: -4.71821403503418
    9. 'import' → logprob: -4.71821403503418
    10. 'un' → logprob: -4.84321403503418

Token 836: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8713034987449646
    2. 'un' → logprob: -1.3713035583496094
    3. 'une' → logprob: -2.1213035583496094
    4. 'import' → logprob: -2.6213035583496094
    5. 'from' → logprob: -2.8713035583496094
    6. '#' → logprob: -3.7463035583496094
    7. 'la' → logprob: -4.371303558349609
    8. 'DP' → logprob: -5.121303558349609
    9. 'l' → logprob: -5.621303558349609
    10. '...' → logprob: -5.746303558349609

Token 837: ' autom' (ID: 5099)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.21731965243816376
    2. '#' → logprob: -2.9673197269439697
    3. 'import' → logprob: -3.3423197269439697
    4. 'dp' → logprob: -3.5923197269439697
    5. 'tuple' → logprob: -4.092319488525391
    6. 'state' → logprob: -4.092319488525391
    7. 'DP' → logprob: -4.717319488525391
    8. 'def' → logprob: -4.967319488525391
    9. 'deque' → logprob: -4.967319488525391
    10. '
' → logprob: -5.592319488525391

Token 838: 'ates' (ID: 1381)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.024802787229418755
    2. 'aton' → logprob: -3.7748026847839355
    3. 'at' → logprob: -7.5248026847839355
    4. 'a' → logprob: -8.524803161621094
    5. '```' → logprob: -8.774803161621094
    6. 'e' → logprob: -8.899803161621094
    7. 'ata' → logprob: -9.149803161621094
    8. '#' → logprob: -9.149803161621094
    9. 'ation' → logprob: -10.149803161621094
    10. 'state' → logprob: -10.274803161621094

Token 839: ' combin' (ID: 25307)
  Prédit: ' multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multi' → logprob: -0.8071725368499756
    2. '<|end|>' → logprob: -1.9321725368499756
    3. 's' → logprob: -2.9321725368499756
    4. '_states' → logprob: -3.4321725368499756
    5. ' composed' → logprob: -3.5571725368499756
    6. 'state' → logprob: -3.5571725368499756
    7. '_multi' → logprob: -3.6821725368499756
    8. 'multi' → logprob: -3.6821725368499756
    9. 'def' → logprob: -3.9321725368499756
    10. '_mult' → logprob: -4.182172775268555

Token 840: 'é' (ID: 377)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04927300661802292
    2. 'é' → logprob: -3.4242730140686035
    3. 'ate' → logprob: -4.5492730140686035
    4. '```' → logprob: -6.7992730140686035
    5. 'bined' → logprob: -7.0492730140686035
    6. 'ed' → logprob: -7.2992730140686035
    7. '_' → logprob: -8.174272537231445
    8. '#' → logprob: -8.174272537231445
    9. 'ation' → logprob: -8.674272537231445
    10. 'ined' → logprob: -9.299272537231445

Token 841: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9682648777961731
    2. '   ' → logprob: -1.0932648181915283
    3. 'def' → logprob: -2.3432648181915283
    4. 'import' → logprob: -2.9682648181915283
    5. ',' → logprob: -4.093265056610107
    6. '...' → logprob: -4.093265056610107
    7. '#' → logprob: -4.218265056610107
    8. 'from' → logprob: -4.468265056610107
    9. ' =' → logprob: -4.593265056610107
    10. ':' → logprob: -4.718265056610107

Token 842: ' saison' (ID: 38158)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -1.0440351963043213
    2. 's' → logprob: -1.7940351963043213
    3. 'pattern' → logprob: -2.4190351963043213
    4. 'K' → logprob: -2.6690351963043213
    5. ' K' → logprob: -2.7940351963043213
    6. 'k' → logprob: -3.1690351963043213
    7. 'autom' → logprob: -3.5440351963043213
    8. ' saison' → logprob: -3.9190351963043213
    9. 'season' → logprob: -3.9190351963043213
    10. ' états' → logprob: -3.9190351963043213

Token 843: 'words' (ID: 10020)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.8135883808135986
    2. 'words' → logprob: -0.9385883808135986
    3. ' words' → logprob: -1.9385883808135986
    4. '       ' → logprob: -4.8135881423950195
    5. '_word' → logprob: -5.6885881423950195
    6. 'word' → logprob: -5.6885881423950195
    7. '   ' → logprob: -5.8135881423950195
    8. 's' → logprob: -6.8135881423950195
    9. ' word' → logprob: -6.8135881423950195
    10. '_' → logprob: -7.1885881423950195

Token 844: ' "' (ID: 392)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45234930515289307
    2. '   ' → logprob: -2.0773491859436035
    3. '<|end|>' → logprob: -2.2023491859436035
    4. '#' → logprob: -3.5773491859436035
    5. 'import' → logprob: -3.8273491859436035
    6. 'def' → logprob: -4.4523491859436035
    7. '...' → logprob: -4.4523491859436035
    8. ',' → logprob: -4.5773491859436035
    9. '<|end|>' → logprob: -4.7023491859436035
    10. 'from' → logprob: -4.8273491859436035

Token 845: 'accept' (ID: 18735)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.82893306016922
    2. ':' → logprob: -2.453933000564575
    3. '.' → logprob: -2.828933000564575
    4. '_' → logprob: -3.203933000564575
    5. '
' → logprob: -3.578933000564575
    6. 's' → logprob: -3.703933000564575
    7. '   ' → logprob: -3.703933000564575
    8. '_next' → logprob: -3.953933000564575
    9. '_com' → logprob: -4.078933238983154
    10. ' combin' → logprob: -4.078933238983154

Token 846: 'ants' (ID: 2027)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.8077815771102905
    2. 'ed' → logprob: -1.3077815771102905
    3. 'ion' → logprob: -1.6827815771102905
    4. 'e' → logprob: -2.93278169631958
    5. '_states' → logprob: -4.05778169631958
    6. 'states' → logprob: -5.05778169631958
    7. ' states' → logprob: -5.18278169631958
    8. 'é' → logprob: -5.93278169631958
    9. '```' → logprob: -6.30778169631958
    10. 'States' → logprob: -6.30778169631958

Token 847: '":
' (ID: 9213)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03842918947339058
    2. '_states' → logprob: -3.9134292602539062
    3. '",' → logprob: -5.413429260253906
    4. 'es' → logprob: -6.413429260253906
    5. 'e' → logprob: -6.413429260253906
    6. 's' → logprob: -6.788429260253906
    7. 'states' → logprob: -6.788429260253906
    8. 'ion' → logprob: -6.913429260253906
    9. '"]' → logprob: -7.163429260253906
    10. ',' → logprob: -7.288429260253906

Token 848: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1545883417129517
    2. '       ' → logprob: -1.4045883417129517
    3. ' =' → logprob: -2.029588222503662
    4. '[' → logprob: -3.279588222503662
    5. 'def' → logprob: -3.529588222503662
    6. ',' → logprob: -3.654588222503662
    7. 'import' → logprob: -3.779588222503662
    8. 'from' → logprob: -3.904588222503662
    9. '#' → logprob: -4.154588222503662
    10. '.' → logprob: -4.279588222503662

Token 849: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10542558878660202
    2. 'from' → logprob: -3.1054255962371826
    3. ' from' → logprob: -3.7304255962371826
    4. ' next' → logprob: -4.6054253578186035
    5. '       ' → logprob: -5.6054253578186035
    6. 'import' → logprob: -5.6054253578186035
    7. '#' (adapté à ' #') → logprob: -6.1054253578186035
    8. ' combined' → logprob: -6.2304253578186035
    9. 'next' → logprob: -6.4804253578186035
    10. ' pattern' → logprob: -6.7304253578186035

Token 850: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07662951201200485
    2. '#' → logprob: -2.951629400253296
    3. 'import' → logprob: -4.951629638671875
    4. 'class' → logprob: -5.201629638671875
    5. '   ' → logprob: -5.576629638671875
    6. 'fail' → logprob: -6.701629638671875
    7. 'patterns' → logprob: -7.326629638671875
    8. 'pattern' → logprob: -7.451629638671875
    9. 'states' → logprob: -7.451629638671875
    10. ' from' → logprob: -7.701629638671875

Token 851: ' crée' (ID: 102256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0576001405715942
    2. 'import' → logprob: -1.3076001405715942
    3. 'combine' → logprob: -2.3076000213623047
    4. 'from' → logprob: -2.6826000213623047
    5. 'contin' → logprob: -3.0576000213623047
    6. 'vais' → logprob: -3.8076000213623047
    7. 'continue' → logprob: -3.8076000213623047
    8. 'all' → logprob: -3.9326000213623047
    9. 'continu' → logprob: -4.432600021362305
    10. 'util' → logprob: -4.807600021362305

Token 852: ' pour' (ID: 1930)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9291306734085083
    2. 'un' → logprob: -1.4291306734085083
    3. 'une' → logprob: -2.3041305541992188
    4. 'class' → logprob: -2.5541305541992188
    5. 'a' → logprob: -2.8041305541992188
    6. 'states' → logprob: -3.8041305541992188
    7. ' une' → logprob: -4.304130554199219
    8. ' un' → logprob: -4.429130554199219
    9. 'all' → logprob: -4.679130554199219
    10. 'next' → logprob: -4.804130554199219

Token 853: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.07092468440532684
    2. ' k' → logprob: -3.445924758911133
    3. ' each' → logprob: -4.445924758911133
    4. 'each' → logprob: -4.695924758911133
    5. 'k' → logprob: -4.820924758911133
    6. ' i' → logprob: -5.820924758911133
    7. 'ch' → logprob: -7.070924758911133
    8. 'i' → logprob: -7.070924758911133
    9. ' ch' → logprob: -7.570924758911133
    10. ' c' → logprob: -7.945924758911133

Token 854: ' saison' (ID: 38158)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5201449394226074
    2. 'pat' → logprob: -1.1451449394226074
    3. ' pattern' → logprob: -3.5201449394226074
    4. 'season' → logprob: -3.7701449394226074
    5. 'word' → logprob: -4.645144939422607
    6. 's' → logprob: -4.895144939422607
    7. 'mot' → logprob: -5.520144939422607
    8. ' word' → logprob: -6.145144939422607
    9. ' saison' → logprob: -6.145144939422607
    10. ' season' → logprob: -6.395144939422607

Token 855: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.3506922721862793
    2. 'words' → logprob: -2.1006922721862793
    3. '_word' → logprob: -2.4756922721862793
    4. ' word' → logprob: -2.6006922721862793
    5. '_words' → logprob: -4.975692272186279
    6. '       ' → logprob: -5.725692272186279
    7. ' words' → logprob: -5.850692272186279
    8. ')' → logprob: -8.100692749023438
    9. '   ' → logprob: -8.100692749023438
    10. ' _' → logprob: -8.225692749023438

Token 856: ' son' (ID: 2391)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6441785097122192
    2. 'un' → logprob: -1.2691785097122192
    3. 'une' → logprob: -2.3941783905029297
    4. ' une' → logprob: -3.1441783905029297
    5. ' a' → logprob: -3.6441783905029297
    6. 'a' → logprob: -4.26917839050293
    7. ' ' → logprob: -5.89417839050293
    8. ',' → logprob: -6.01917839050293
    9. '   ' → logprob: -6.26917839050293
    10. '
' → logprob: -6.51917839050293

Token 857: ' automate' (ID: 90080)
  Prédit: 'autom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'autom' → logprob: -0.6874476075172424
    2. 'pattern' → logprob: -1.1874475479125977
    3. 'prefix' → logprob: -2.4374475479125977
    4. 'next' → logprob: -4.187447547912598
    5. 'own' → logprob: -4.312447547912598
    6. 'length' → logprob: -4.437447547912598
    7. 'fail' → logprob: -4.562447547912598
    8. 'state' → logprob: -5.187447547912598
    9. 'def' → logprob: -5.312447547912598
    10. 'failure' → logprob: -5.562447547912598

Token 858: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.694250762462616
    2. '   ' → logprob: -0.819250762462616
    3. '#' → logprob: -3.8192508220672607
    4. 'def' → logprob: -4.694250583648682
    5. 's' → logprob: -4.819250583648682
    6. '
' → logprob: -5.319250583648682
    7. 'next' → logprob: -6.069250583648682
    8. '```' → logprob: -6.444250583648682
    9. ',' → logprob: -6.569250583648682
    10. 'import' → logprob: -6.819250583648682

Token 859: ' k' (ID: 372)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -1.2249385118484497
    2. 'K' → logprob: -1.5999385118484497
    3. 'prefix' → logprob: -2.22493839263916
    4. 'fail' → logprob: -2.72493839263916
    5. 'transition' → logprob: -2.84993839263916
    6. 'pattern' → logprob: -2.84993839263916
    7. 'k' → logprob: -2.84993839263916
    8. 'l' → logprob: -3.47493839263916
    9. 'mot' → logprob: -3.59993839263916
    10. 'failure' → logprob: -3.84993839263916

Token 860: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.5381730794906616
    2. 'ey' → logprob: -1.2881730794906616
    3. 'ind' → logprob: -3.163173198699951
    4. 'm' → logprob: -4.413173198699951
    5. 'len' → logprob: -4.538173198699951
    6. '```' → logprob: -4.663173198699951
    7. 'eys' → logprob: -4.788173198699951
    8. 'length' → logprob: -4.913173198699951
    9. 'n' → logprob: -4.913173198699951
    10. 'e' → logprob: -5.038173198699951

Token 861: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.170715793967247
    2. '<|end|>' → logprob: -2.420715808868408
    3. '   ' → logprob: -3.045715808868408
    4. '<|end|>' → logprob: -5.420715808868408
    5. 'def' → logprob: -5.545715808868408
    6. '
' → logprob: -6.670715808868408
    7. 'next' → logprob: -6.670715808868408
    8. 'tokens' → logprob: -6.795715808868408
    9. '...' → logprob: -6.920715808868408
    10. 'import' → logprob: -7.170715808868408

Token 862: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04998370260000229
    2. 'pattern' → logprob: -4.049983501434326
    3. ')
' → logprob: -5.549983501434326
    4. '),' → logprob: -5.549983501434326
    5. 'pat' → logprob: -6.049983501434326
    6. 'n' → logprob: -6.049983501434326
    7. 'def' → logprob: -6.174983501434326
    8. 'next' → logprob: -6.424983501434326
    9. '...' → logprob: -6.424983501434326
    10. ')n' → logprob: -6.549983501434326

Token 863: ' `' (ID: 2700)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'python' → logprob: -2.658827304840088
    2. 'concat' → logprob: -2.658827304840088
    3. 'chaine' → logprob: -2.908827304840088
    4. '```' → logprob: -2.908827304840088
    5. 'cours' → logprob: -2.908827304840088
    6. 'len' → logprob: -3.158827304840088
    7. 'tail' → logprob: -3.158827304840088
    8. 'state' → logprob: -3.408827304840088
    9. 'continu' → logprob: -3.658827304840088
    10. 's' → logprob: -3.658827304840088

Token 864: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.6229937076568604
    2. 'patterns' → logprob: -1.6229937076568604
    3. 'fail' → logprob: -1.9979937076568604
    4. 'n' → logprob: -2.1229937076568604
    5. 'build' → logprob: -2.2479937076568604
    6. 'k' → logprob: -2.7479937076568604
    7. 'pat' → logprob: -2.7479937076568604
    8. 'def' → logprob: -3.3729937076568604
    9. 'pattern' → logprob: -3.6229937076568604
    10. 'range' → logprob: -4.247993469238281

Token 865: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.0066990237683057785
    2. '`)' → logprob: -5.881699085235596
    3. '_' → logprob: -6.256699085235596
    4. '`' → logprob: -7.631699085235596
    5. ')' → logprob: -7.756699085235596
    6. 'tables' → logprob: -8.256698608398438
    7. '_table' → logprob: -9.006698608398438
    8. '[_' → logprob: -9.506698608398438
    9. '   ' → logprob: -9.756698608398438
    10. '[' → logprob: -9.756698608398438

Token 866: '`' (ID: 63)
  Prédit: '`)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '`)' → logprob: -0.32117292284965515
    2. ')' → logprob: -2.0711729526519775
    3. '`' → logprob: -2.5711729526519775
    4. ')`' → logprob: -2.8211729526519775
    5. '`)
' → logprob: -4.821172714233398
    6. 's' → logprob: -6.196172714233398
    7. '`).' → logprob: -7.321172714233398
    8. ')
' → logprob: -7.571172714233398
    9. '   ' → logprob: -7.696172714233398
    10. '`,' → logprob: -8.946172714233398

Token 867: ' ),
' (ID: 4954)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014868793077766895
    2. '       ' → logprob: -4.63986873626709
    3. ')
' → logprob: -5.88986873626709
    4. '),' → logprob: -6.88986873626709
    5. '`)' → logprob: -7.63986873626709
    6. ').' → logprob: -7.88986873626709
    7. ')`' → logprob: -9.63986873626709
    8. ' )' → logprob: -9.88986873626709
    9. ')...' → logprob: -10.13986873626709
    10. '   ' → logprob: -10.13986873626709

Token 868: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009276442229747772
    2. '<|end|>' → logprob: -5.884276390075684
    3. '#' → logprob: -6.759276390075684
    4. '        
' → logprob: -6.884276390075684
    5. 'tokens' → logprob: -7.259276390075684
    6. '   ' → logprob: -7.509276390075684
    7. 'state' → logprob: -7.509276390075684
    8. 'next' → logprob: -8.259276390075684
    9. 'token' → logprob: -8.634276390075684
    10. '...' → logprob: -8.634276390075684

Token 869: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14459608495235443
    2. '#' (adapté à ' #') → logprob: -2.3945960998535156
    3. 'state' → logprob: -4.144596099853516
    4. 'states' → logprob: -5.644596099853516
    5. '   ' → logprob: -5.894596099853516
    6. ' #' → logprob: -6.144596099853516
    7. 'et' → logprob: -6.144596099853516
    8. '
' → logprob: -6.394596099853516
    9. 'next' → logprob: -6.644596099853516
    10. '...' → logprob: -6.644596099853516

Token 870: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28342175483703613
    2. '#' → logprob: -1.5334217548370361
    3. 'state' → logprob: -5.033421516418457
    4. ' #' → logprob: -5.408421516418457
    5. '
' → logprob: -5.658421516418457
    6. 'next' → logprob: -6.158421516418457
    7. 'states' → logprob: -6.408421516418457
    8. '        
' → logprob: -6.908421516418457
    9. ' states' → logprob: -6.908421516418457
    10. '...' → logprob: -6.908421516418457

Token 871: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23646022379398346
    2. 'on' → logprob: -2.2364602088928223
    3. 'state' → logprob: -3.4864602088928223
    4. 'states' → logprob: -3.7364602088928223
    5. '       ' → logprob: -4.486460208892822
    6. 'accept' → logprob: -4.611460208892822
    7. 'for' → logprob: -4.986460208892822
    8. 'visited' → logprob: -5.611460208892822
    9. 'def' → logprob: -5.861460208892822
    10. 'current' → logprob: -5.986460208892822

Token 872: ' stock' (ID: 6546)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combine' → logprob: -0.1992262452840805
    2. 'continue' → logprob: -2.199226140975952
    3. '#' → logprob: -3.199226140975952
    4. 'from' → logprob: -4.949226379394531
    5. 'import' → logprob: -5.449226379394531
    6. 'contin' → logprob: -5.949226379394531
    7. ' combine' → logprob: -6.449226379394531
    8. 'def' → logprob: -6.699226379394531
    9. 'for' → logprob: -6.699226379394531
    10. 'initialize' → logprob: -6.699226379394531

Token 873: 'e' (ID: 68)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3176080286502838
    2. 'e' → logprob: -1.3176079988479614
    3. '       ' → logprob: -6.192607879638672
    4. 'ons' → logprob: -6.692607879638672
    5. '   ' → logprob: -8.067607879638672
    6. '[]' → logprob: -8.317607879638672
    7. '[' → logprob: -8.692607879638672
    8. 'ent' → logprob: -9.942607879638672
    9. '           ' → logprob: -10.067607879638672
    10. 'era' → logprob: -10.192607879638672

Token 874: ' pour' (ID: 1930)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.7424726486206055
    2. '   ' → logprob: -1.9924726486206055
    3. 'the' → logprob: -2.3674726486206055
    4. 'import' → logprob: -2.8674726486206055
    5. 'for' → logprob: -2.8674726486206055
    6. ' a' → logprob: -2.9924726486206055
    7. ' states' → logprob: -2.9924726486206055
    8. ' la' → logprob: -3.1174726486206055
    9. 'states' → logprob: -3.1174726486206055
    10. ' for' → logprob: -3.2424726486206055

Token 875: ' l' (ID: 305)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.6092536449432373
    2. ' k' → logprob: -1.9842536449432373
    3. 'k' → logprob: -2.1092536449432373
    4. 'pos' → logprob: -2.2342536449432373
    5. ' chaque' → logprob: -2.2342536449432373
    6. 'pat' → logprob: -3.1092536449432373
    7. ' each' → logprob: -3.3592536449432373
    8. 'i' → logprob: -3.6092536449432373
    9. 'idx' → logprob: -3.7342536449432373
    10. ' idx' → logprob: -3.8592536449432373

Token 876: ''et' (ID: 88821)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7098953127861023
    2. 'pattern' → logprob: -2.209895372390747
    3. ' range' → logprob: -2.459895372390747
    4. 'i' → logprob: -2.834895372390747
    5. ''état' → logprob: -3.209895372390747
    6. 'a' → logprob: -3.334895372390747
    7. 'k' → logprob: -3.459895372390747
    8. 'pat' → logprob: -3.584895372390747
    9. 'next' → logprob: -4.084895133972168
    10. ''ensemble' → logprob: -4.334895133972168

Token 877: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.001859749318100512
    2. '#' → logprob: -8.126859664916992
    3. 'ape' → logprob: -8.376859664916992
    4. '```' → logprob: -8.626859664916992
    5. '[' → logprob: -8.876859664916992
    6. 'a' → logprob: -9.314359664916992
    7. '   ' → logprob: -9.501859664916992
    8. 'ats' → logprob: -9.564359664916992
    9. ']' → logprob: -9.876859664916992
    10. '=' → logprob: -10.001859664916992

Token 878: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.379577875137329
    2. ',' → logprob: -1.879577875137329
    3. ' des' → logprob: -2.004577875137329
    4. ' current' → logprob: -2.129577875137329
    5. 'current' → logprob: -2.629577875137329
    6. ' tuple' → logprob: -3.129577875137329
    7. '0' → logprob: -3.504577875137329
    8. ' ,' → logprob: -3.629577875137329
    9. '[]' → logprob: -3.629577875137329
    10. ' s' → logprob: -3.629577875137329

Token 879: ' dp' (ID: 21546)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.439263939857483
    2. 'each' → logprob: -1.939263939857483
    3. 'range' → logprob: -2.1892638206481934
    4. 'k' → logprob: -2.4392638206481934
    5. 'pos' → logprob: -2.5642638206481934
    6. '(' → logprob: -3.0642638206481934
    7. 'tuple' → logprob: -3.0642638206481934
    8. 'K' → logprob: -3.6892638206481934
    9. 'all' → logprob: -3.8142638206481934
    10. '0' → logprob: -3.9392638206481934

Token 880: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2605633735656738
    2. ' (' → logprob: -2.010563373565674
    3. ' ,' → logprob: -2.510563373565674
    4. 's' → logprob: -2.760563373565674
    5. ':' → logprob: -2.885563373565674
    6. ']' → logprob: -3.010563373565674
    7. ' the' → logprob: -3.135563373565674
    8. ' a' → logprob: -3.635563373565674
    9. ' =' → logprob: -3.760563373565674
    10. ' :' → logprob: -4.010563373565674

Token 881: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.826529324054718
    2. '       ' → logprob: -1.7015292644500732
    3. '   ' → logprob: -2.0765292644500732
    4. '(' → logprob: -3.2015292644500732
    5. ' pos' → logprob: -3.4515292644500732
    6. 'pos' → logprob: -3.7015292644500732
    7. '[' → logprob: -3.7015292644500732
    8. ' [' → logprob: -4.201529502868652
    9. '    ' → logprob: -4.576529502868652
    10. '(pos' → logprob: -4.576529502868652

Token 882: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2615003287792206
    2. '(' → logprob: -3.011500358581543
    3. '   ' → logprob: -3.261500358581543
    4. ' season' → logprob: -3.761500358581543
    5. ' word' → logprob: -3.886500358581543
    6. ' None' → logprob: -4.386500358581543
    7. '(
' → logprob: -4.636500358581543
    8. '       ' → logprob: -4.761500358581543
    9. ' current' → logprob: -4.886500358581543
    10. ' ' → logprob: -5.011500358581543

Token 883: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5865509510040283
    2. 'state' → logprob: -2.2115509510040283
    3. ' (' → logprob: -2.3365509510040283
    4. 'current' → logprob: -2.8365509510040283
    5. '(
' → logprob: -3.2115509510040283
    6. '(state' → logprob: -3.3365509510040283
    7. ' current' → logprob: -4.336550712585449
    8. 'word' → logprob: -4.836550712585449
    9. '()' → logprob: -4.961550712585449
    10. '   ' → logprob: -4.961550712585449

Token 884: ' pos' (ID: 1253)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'season' → logprob: -1.1391096115112305
    2. 'current' → logprob: -1.3891096115112305
    3. 'word' → logprob: -2.3891096115112305
    4. ' season' → logprob: -2.6391096115112305
    5. 'pos' → logprob: -2.6391096115112305
    6. '(' → logprob: -3.7641096115112305
    7. 'K' → logprob: -3.7641096115112305
    8. ' current' → logprob: -4.0141096115112305
    9. 'tuple' → logprob: -4.0141096115112305
    10. 'state' → logprob: -4.5141096115112305

Token 885: ' actuel' (ID: 113646)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12135560810565948
    2. ' ,' → logprob: -2.4963555335998535
    3. '   ' → logprob: -4.8713555335998535
    4. ',
' → logprob: -5.1213555335998535
    5. '][' → logprob: -5.3713555335998535
    6. ' +' → logprob: -5.8713555335998535
    7. ')' → logprob: -6.2463555335998535
    8. '+' → logprob: -6.7463555335998535
    9. '	' → logprob: -6.7463555335998535
    10. '       ' → logprob: -7.1213555335998535

Token 886: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25527653098106384
    2. '[' → logprob: -2.0052764415740967
    3. '   ' → logprob: -3.8802764415740967
    4. ']' → logprob: -4.255276679992676
    5. ')' → logprob: -4.255276679992676
    6. '<|end|>' → logprob: -4.505276679992676
    7. '][' → logprob: -4.755276679992676
    8. '       ' → logprob: -5.880276679992676
    9. '=' → logprob: -6.130276679992676
    10. ',
' → logprob: -6.380276679992676

Token 887: 'indice' (ID: 176697)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40176135301589966
    2. ')' → logprob: -1.4017612934112549
    3. '),' → logprob: -3.526761293411255
    4. '+' → logprob: -3.901761293411255
    5. ' ,' → logprob: -4.151761531829834
    6. ',
' → logprob: -4.151761531829834
    7. ' )' → logprob: -7.151761531829834
    8. '[' → logprob: -8.026761054992676
    9. ' +' → logprob: -8.401761054992676
    10. '0' → logprob: -8.526761054992676

Token 888: ' mot' (ID: 3598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.208327978849411
    2. ' de' → logprob: -3.5833280086517334
    3. ' )' → logprob: -3.7083280086517334
    4. ' +' → logprob: -3.9583280086517334
    5. '+' → logprob: -4.083327770233154
    6. ',' → logprob: -4.208327770233154
    7. '=' → logprob: -4.583327770233154
    8. ' des' → logprob: -4.708327770233154
    9. '),' → logprob: -4.833327770233154
    10. '_' → logprob: -4.958327770233154

Token 889: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12364937365055084
    2. '+' → logprob: -2.9986493587493896
    3. ' +' → logprob: -3.9986493587493896
    4. '),' → logprob: -4.248649597167969
    5. '   ' → logprob: -4.748649597167969
    6. '```' → logprob: -5.498649597167969
    7. '       ' → logprob: -5.623649597167969
    8. ')
' → logprob: -5.623649597167969
    9. ',' → logprob: -6.248649597167969
    10. '[' → logprob: -6.498649597167969

Token 890: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41936492919921875
    2. '       ' → logprob: -1.4193649291992188
    3. '[' → logprob: -3.1693649291992188
    4. ')' → logprob: -3.1693649291992188
    5. ',
' → logprob: -5.419364929199219
    6. '	' → logprob: -6.419364929199219
    7. '#' → logprob: -6.544364929199219
    8. '[
' → logprob: -6.544364929199219
    9. '   ' → logprob: -6.544364929199219
    10. '```' → logprob: -6.544364929199219

Token 891: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18710125982761383
    2. ')' → logprob: -2.812101364135742
    3. '       ' → logprob: -2.937101364135742
    4. '[' → logprob: -3.687101364135742
    5. ',
' → logprob: -4.437101364135742
    6. '   ' → logprob: -4.937101364135742
    7. '[
' → logprob: -6.062101364135742
    8. '\t' → logprob: -6.437101364135742
    9. '#' (adapté à ' #') → logprob: -6.437101364135742
    10. '[word' → logprob: -6.812101364135742

Token 892: ' -' (ID: 533)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.7828027606010437
    2. ' word' → logprob: -1.7828028202056885
    3. 'words' → logprob: -3.0328028202056885
    4. 'season' → logprob: -3.2828028202056885
    5. '   ' → logprob: -3.4078028202056885
    6. ' season' → logprob: -3.4078028202056885
    7. ',' → logprob: -3.7828028202056885
    8. '\t' → logprob: -3.7828028202056885
    9. '	' → logprob: -4.032802581787109
    10. 'current' → logprob: -4.157802581787109

Token 893: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.6373468637466431
    2. ' word' → logprob: -0.7623468637466431
    3. ' tuple' → logprob: -6.6373467445373535
    4. 'current' → logprob: -7.5123467445373535
    5. ' current' → logprob: -7.6373467445373535
    6. 'tuple' → logprob: -7.7623467445373535
    7. 'words' → logprob: -8.137347221374512
    8. '...' → logprob: -8.137347221374512
    9. 'prev' → logprob: -8.387347221374512
    10. ' words' → logprob: -8.762347221374512

Token 894: ' actuel' (ID: 113646)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.5134087800979614
    2. '_id' → logprob: -1.0134087800979614
    3. '_index' → logprob: -4.013408660888672
    4. '_state' → logprob: -4.638408660888672
    5. 'id' → logprob: -5.388408660888672
    6. 'idx' → logprob: -5.763408660888672
    7. ',' → logprob: -7.513408660888672
    8. ')' → logprob: -7.763408660888672
    9. '<|end|>' → logprob: -7.763408660888672
    10. 'state' → logprob: -8.388408660888672

Token 895: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.744698703289032
    2. '<|end|>' → logprob: -1.1196987628936768
    3. '       ' → logprob: -2.7446987628936768
    4. '<|end|>' → logprob: -3.1196987628936768
    5. ',
' → logprob: -3.4946987628936768
    6. '[' → logprob: -3.8696987628936768
    7. ')' → logprob: -4.244698524475098
    8. '   ' → logprob: -4.994698524475098
    9. ',state' → logprob: -5.619698524475098
    10. '[state' → logprob: -6.369698524475098

Token 896: 'dern' (ID: 19098)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08203606307506561
    2. 'adj' → logprob: -3.707036018371582
    3. ' )' → logprob: -4.207036018371582
    4. 'idx' → logprob: -5.457036018371582
    5. 'len' → logprob: -5.582036018371582
    6. ',' → logprob: -5.582036018371582
    7. 'K' → logprob: -5.832036018371582
    8. '),' → logprob: -5.832036018371582
    9. 'pos' → logprob: -6.207036018371582
    10. '0' → logprob: -6.707036018371582

Token 897: 'ier' (ID: 905)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.7835685014724731
    2. 'e' → logprob: -1.5335685014724731
    3. 'ext' → logprob: -1.5335685014724731
    4. 'x' → logprob: -3.5335683822631836
    5. '   ' → logprob: -3.6585683822631836
    6. 't' → logprob: -4.408568382263184
    7. 'um' → logprob: -4.408568382263184
    8. 'xt' → logprob: -5.158568382263184
    9. ']' → logprob: -5.533568382263184
    10. ')' → logprob: -5.783568382263184

Token 898: ' mot' (ID: 3598)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.7936579585075378
    2. ')' → logprob: -0.9186579585075378
    3. '_' → logprob: -3.1686580181121826
    4. '_word' → logprob: -3.9186580181121826
    5. ' _' → logprob: -4.0436577796936035
    6. 'token' → logprob: -4.1686577796936035
    7. '_idx' → logprob: -4.9186577796936035
    8. '_index' → logprob: -5.1686577796936035
    9. ' token' → logprob: -5.2936577796936035
    10. '_id' → logprob: -5.5436577796936035

Token 899: ' choisi' (ID: 77245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5265146493911743
    2. ')
' → logprob: -0.9015146493911743
    3. ',' → logprob: -7.526514530181885
    4. '_idx' → logprob: -7.651514530181885
    5. 'index' → logprob: -8.276515007019043
    6. '),' → logprob: -8.526515007019043
    7. '_index' → logprob: -8.651515007019043
    8. '#' → logprob: -8.651515007019043
    9. '):
' → logprob: -8.651515007019043
    10. '   ' → logprob: -8.901515007019043

Token 900: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10238558053970337
    2. ')
' → logprob: -2.3523855209350586
    3. '       ' → logprob: -7.102385520935059
    4. ',' → logprob: -7.352385520935059
    5. '[' → logprob: -8.352385520935059
    6. '   ' → logprob: -8.977385520935059
    7. ')[' → logprob: -9.227385520935059
    8. ',
' → logprob: -10.227385520935059
    9. '           ' → logprob: -10.727385520935059
    10. '```' → logprob: -10.852385520935059

Token 901: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06431161612272263
    2. ',' → logprob: -3.0643115043640137
    3. '#' → logprob: -5.064311504364014
    4. ')' → logprob: -5.564311504364014
    5. '[' → logprob: -5.939311504364014
    6. '<|end|>' → logprob: -6.814311504364014
    7. '           ' → logprob: -7.689311504364014
    8. '   ' → logprob: -7.939311504364014
    9. '	' → logprob: -8.439311981201172
    10. '[
' → logprob: -8.939311981201172

Token 902: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010592036880552769
    2. ',' → logprob: -4.885591983795166
    3. '[' → logprob: -7.135591983795166
    4. '#' (adapté à ' #') → logprob: -7.385591983795166
    5. '	' → logprob: -7.510591983795166
    6. '           ' → logprob: -7.760591983795166
    7. '   ' → logprob: -8.760592460632324
    8. ')' → logprob: -9.260592460632324
    9. '               ' → logprob: -9.885592460632324
    10. '        ' → logprob: -10.260592460632324

Token 903: ' -' (ID: 533)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.21149614453315735
    2. ' season' → logprob: -2.586496114730835
    3. ',' → logprob: -2.961496114730835
    4. '   ' → logprob: -3.711496114730835
    5. '       ' → logprob: -4.586496353149414
    6. '#' → logprob: -4.711496353149414
    7. ',
' → logprob: -4.961496353149414
    8. '_' → logprob: -6.211496353149414
    9. ' #' → logprob: -6.461496353149414
    10. 'pos' → logprob: -6.586496353149414

Token 904: ' quelle' (ID: 47442)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.013898203149437904
    2. 'matched' → logprob: -6.2638983726501465
    3. 'tuple' → logprob: -6.3888983726501465
    4. '(' → logprob: -6.6388983726501465
    5. 'state' → logprob: -6.6388983726501465
    6. 'seen' → logprob: -6.7638983726501465
    7. 'mask' → logprob: -6.8888983726501465
    8. 'K' → logprob: -7.5138983726501465
    9. 'found' → logprob: -7.6388983726501465
    10. 'import' → logprob: -7.6388983726501465

Token 905: ' saison' (ID: 38158)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.8842255473136902
    2. '_s' → logprob: -1.134225606918335
    3. '_' → logprob: -2.384225606918335
    4. 's' → logprob: -2.759225606918335
    5. ' _' → logprob: -3.884225606918335
    6. ' season' → logprob: -4.134225368499756
    7. '_word' → logprob: -4.384225368499756
    8. ' saison' → logprob: -4.509225368499756
    9. 'season' → logprob: -4.509225368499756
    10. ')' → logprob: -4.759225368499756

Token 906: ' word' (ID: 2195)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.09781714528799057
    2. ' _' → logprob: -3.2228171825408936
    3. '_mask' → logprob: -3.5978171825408936
    4. '_' → logprob: -4.2228169441223145
    5. '_words' → logprob: -5.4728169441223145
    6. '_bit' → logprob: -5.7228169441223145
    7. 'word' → logprob: -5.9728169441223145
    8. ' word' → logprob: -7.9728169441223145
    9. ')' → logprob: -8.722817420959473
    10. '_idx' → logprob: -8.972817420959473

Token 907: ' a' (ID: 261)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.17244984209537506
    2. '_' → logprob: -3.297449827194214
    3. '_index' → logprob: -3.797449827194214
    4. '_id' → logprob: -4.047450065612793
    5. '_s' → logprob: -4.047450065612793
    6. '_act' → logprob: -4.172450065612793
    7. '_selected' → logprob: -4.797450065612793
    8. '_current' → logprob: -4.922450065612793
    9. '_mask' → logprob: -5.172450065612793
    10. '_active' → logprob: -5.172450065612793

Token 908: ' été' (ID: 9799)
  Prédit: 'appar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appar' → logprob: -0.6914471983909607
    2. 'pp' → logprob: -1.0664472579956055
    3. 'p' → logprob: -2.1914472579956055
    4. ' été' → logprob: -4.3164472579956055
    5. 'ct' → logprob: -4.5664472579956055
    6. 'app' → logprob: -5.6914472579956055
    7. 'été' → logprob: -5.8164472579956055
    8. 'appe' → logprob: -5.9414472579956055
    9. 'ppe' → logprob: -6.9414472579956055
    10. 'par' → logprob: -6.9414472579956055

Token 909: ' détect' (ID: 118715)
  Prédit: 'matched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matched' → logprob: -0.4801609218120575
    2. ' matched' → logprob: -1.6051609516143799
    3. 'found' → logprob: -2.48016095161438
    4. ' trouv' → logprob: -3.73016095161438
    5. ' trouvé' → logprob: -3.98016095161438
    6. 'match' → logprob: -4.855160713195801
    7. ' found' → logprob: -4.980160713195801
    8. 'tr' → logprob: -5.355160713195801
    9. 'detect' → logprob: -5.480160713195801
    10. 'seen' → logprob: -5.605160713195801

Token 910: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.04942721500992775
    2. 'é' → logprob: -3.0494272708892822
    3. 'e' → logprob: -7.424427032470703
    4. 'ected' → logprob: -9.049427032470703
    5. 'ee' → logprob: -9.424427032470703
    6. '   ' → logprob: -11.674427032470703
    7. 'ées' → logprob: -11.799427032470703
    8. 'ection' → logprob: -11.924427032470703
    9. 'ect' → logprob: -12.299427032470703
    10. 'er' → logprob: -12.924427032470703

Token 911: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0110066719353199
    2. ' _' → logprob: -4.886006832122803
    3. ',' → logprob: -7.011006832122803
    4. ' (' → logprob: -7.886006832122803
    5. '_mask' → logprob: -8.136006355285645
    6. '_or' → logprob: -8.136006355285645
    7. '_
' → logprob: -8.136006355285645
    8. '_index' → logprob: -8.636006355285645
    9. '   ' → logprob: -8.886006355285645
    10. '_s' → logprob: -9.386006355285645

Token 912: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.24495267868041992
    2. ' -' → logprob: -2.11995267868042
    3. ' season' → logprob: -3.86995267868042
    4. ' K' → logprob: -3.86995267868042
    5. 'season' → logprob: -3.86995267868042
    6. ' None' → logprob: -4.74495267868042
    7. 'None' → logprob: -4.86995267868042
    8. '0' → logprob: -5.49495267868042
    9. 'K' → logprob: -5.49495267868042
    10. ')' → logprob: -5.99495267868042

Token 913: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5741574168205261
    2. ')' → logprob: -1.699157476425171
    3. ' or' → logprob: -2.449157476425171
    4. ' if' → logprob: -2.574157476425171
    5. 'or' → logprob: -4.199157238006592
    6. ',None' → logprob: -4.324157238006592
    7. 'if' → logprob: -4.574157238006592
    8. 'None' → logprob: -4.699157238006592
    9. ' ,' → logprob: -4.824157238006592
    10. ' ' → logprob: -4.824157238006592

Token 914: ' aucune' (ID: 51173)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10968320816755295
    2. '-' → logprob: -2.7346832752227783
    3. ' None' → logprob: -3.6096832752227783
    4. 'none' → logprob: -5.359683036804199
    5. 'no' → logprob: -5.734683036804199
    6. ' no' → logprob: -6.359683036804199
    7. ' -' → logprob: -7.109683036804199
    8. 'K' → logprob: -7.859683036804199
    9. ' none' → logprob: -8.3596830368042
    10. ' K' → logprob: -8.6096830368042

Token 915: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004738772287964821
    2. ' ,' → logprob: -5.754738807678223
    3. ' None' → logprob: -7.879738807678223
    4. ',None' → logprob: -8.004738807678223
    5. 'None' → logprob: -8.504738807678223
    6. ' or' → logprob: -9.254738807678223
    7. ' ou' → logprob: -9.379738807678223
    8. ' ' → logprob: -9.629738807678223
    9. '/' → logprob: -9.754738807678223
    10. ';' → logprob: -9.879738807678223

Token 916: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025484368205070496
    2. ' ' → logprob: -3.900484323501587
    3. 'None' → logprob: -5.900484561920166
    4. ' None' → logprob: -7.025484561920166
    5. ' or' → logprob: -8.275484085083008
    6. '
' → logprob: -8.400484085083008
    7. ' -' → logprob: -8.525484085083008
    8. '-' → logprob: -8.525484085083008
    9. ',' → logprob: -9.650484085083008
    10. '   ' → logprob: -9.775484085083008

Token 917: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9833626747131348
    2. '-' → logprob: -1.3583626747131348
    3. '1' → logprob: -1.4833626747131348
    4. ' #' → logprob: -2.8583626747131348
    5. '...' → logprob: -3.9833626747131348
    6. '
' → logprob: -4.108362674713135
    7. 'or' → logprob: -4.858362674713135
    8. ' -' → logprob: -4.983362674713135
    9. 'K' → logprob: -5.358362674713135
    10. ' or' → logprob: -5.358362674713135

Token 918: '..' (ID: 485)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.2265322059392929
    2. ',' → logprob: -2.351532220840454
    3. '..' → logprob: -3.351532220840454
    4. '...' → logprob: -3.976532220840454
    5. ' <<' → logprob: -4.101531982421875
    6. ')' → logprob: -4.726531982421875
    7. ' ,' → logprob: -4.976531982421875
    8. ' ' → logprob: -5.476531982421875
    9. '<=' → logprob: -5.476531982421875
    10. ' or' → logprob: -5.726531982421875

Token 919: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0006272526225075126
    2. ' K' → logprob: -7.375627040863037
    3. ')' → logprob: -15.000627517700195
    4. ',K' → logprob: -16.125627517700195
    5. '...' → logprob: -16.125627517700195
    6. '1' → logprob: -16.500627517700195
    7. '
' → logprob: -16.750627517700195
    8. ',' → logprob: -17.000627517700195
    9. '+' → logprob: -17.375627517700195
    10. '30' → logprob: -17.500627517700195

Token 920: ':' (ID: 25)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0071840533055365086
    2. ')' → logprob: -5.257184028625488
    3. ' +' → logprob: -7.382184028625488
    4. ')+' → logprob: -7.632184028625488
    5. '):
' → logprob: -8.382184028625488
    6. ',' → logprob: -8.632184028625488
    7. '+)' → logprob: -9.007184028625488
    8. '):' → logprob: -9.632184028625488
    9. '<|end|>' → logprob: -10.007184028625488
    10. '),' → logprob: -10.382184028625488

Token 921: ' et' (ID: 859)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0015080781886354089
    2. ' K' → logprob: -6.5015082359313965
    3. 'None' → logprob: -12.751507759094238
    4. 'k' → logprob: -13.626507759094238
    5. ' ' → logprob: -14.751507759094238
    6. ')' → logprob: -15.001507759094238
    7. '1' → logprob: -15.501507759094238
    8. '
' → logprob: -15.876507759094238
    9. ' ' → logprob: -16.126508712768555
    10. '0' → logprob: -16.126508712768555

Token 922: ' laquelle' (ID: 47998)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.1582144498825073
    2. 'at' → logprob: -1.2832144498825073
    3. 'ant' → logprob: -1.4082144498825073
    4. 'ape' → logprob: -2.158214569091797
    5. 'ats' → logprob: -3.783214569091797
    6. 'endue' → logprob: -5.033214569091797
    7. 'ab' → logprob: -6.033214569091797
    8. 'k' → logprob: -6.658214569091797
    9. '1' → logprob: -6.783214569091797
    10. 'ablissement' → logprob: -6.908214569091797

Token 923: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010058381594717503
    2. ' )' → logprob: -5.635058403015137
    3. ')
' → logprob: -5.885058403015137
    4. ',' → logprob: -6.385058403015137
    5. '),' → logprob: -8.010058403015137
    6. '_' → logprob: -8.010058403015137
    7. ')_' → logprob: -8.885058403015137
    8. '```' → logprob: -9.010058403015137
    9. '})' → logprob: -9.135058403015137
    10. 'selected' → logprob: -9.135058403015137

Token 924: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8819642066955566
    2. '       ' → logprob: -1.0069642066955566
    3. '#' → logprob: -1.7569642066955566
    4. '<|end|>' → logprob: -4.006964206695557
    5. ')' → logprob: -4.131964206695557
    6. '...' → logprob: -6.006964206695557
    7. '[' → logprob: -6.381964206695557
    8. ',
' → logprob: -6.506964206695557
    9. ' ,' → logprob: -6.756964206695557
    10. ' #' → logprob: -6.881964206695557

Token 925: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37194114923477173
    2. '#' (adapté à ' #') → logprob: -1.871941089630127
    3. ',' → logprob: -2.621941089630127
    4. '	' → logprob: -3.121941089630127
    5. '<|end|>' → logprob: -4.246941089630127
    6. ')' → logprob: -4.871941089630127
    7. ' ' → logprob: -5.621941089630127
    8. '   ' → logprob: -6.246941089630127
    9. ' #' → logprob: -6.496941089630127
    10. '           ' → logprob: -6.871941089630127

Token 926: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49210742115974426
    2. '#' → logprob: -2.492107391357422
    3. ' ' → logprob: -2.492107391357422
    4. '0' → logprob: -2.867107391357422
    5. '   ' → logprob: -2.992107391357422
    6. ',' → logprob: -3.492107391357422
    7. ' #' → logprob: -3.742107391357422
    8. '	' → logprob: -3.867107391357422
    9. ')' → logprob: -4.742107391357422
    10. '\t' → logprob: -5.117107391357422

Token 927: ' pour' (ID: 1930)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.07228751480579376
    2. 'tuple' → logprob: -3.4472875595092773
    3. '0' → logprob: -4.572287559509277
    4. ' season' → logprob: -5.322287559509277
    5. 'len' → logprob: -5.447287559509277
    6. '#' → logprob: -5.822287559509277
    7. 'None' → logprob: -5.822287559509277
    8. 'prev' → logprob: -6.197287559509277
    9. 'pos' → logprob: -6.322287559509277
    10. 'current' → logprob: -6.572287559509277

Token 928: ' la' (ID: 557)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.24063944816589355
    2. ' la' → logprob: -2.6156394481658936
    3. ' le' → logprob: -2.8656394481658936
    4. ' l' → logprob: -4.240639686584473
    5. ' ' → logprob: -4.865639686584473
    6. ' c' → logprob: -4.990639686584473
    7. 'c' → logprob: -5.115639686584473
    8. ' each' → logprob: -5.240639686584473
    9. 'l' → logprob: -5.240639686584473
    10. ' les' → logprob: -5.615639686584473

Token 929: ' saison' (ID: 38158)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dern' → logprob: -1.0536051988601685
    2. 'current' → logprob: -1.1786051988601685
    3. 's' → logprob: -3.053605079650879
    4. ' current' → logprob: -3.428605079650879
    5. 'last' → logprob: -3.678605079650879
    6. 'next' → logprob: -3.803605079650879
    7. 'moment' → logprob: -4.303605079650879
    8. 'match' → logprob: -4.428605079650879
    9. 'season' → logprob: -4.428605079650879
    10. '#' → logprob: -4.553605079650879

Token 930: ' word' (ID: 2195)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.2165776938199997
    2. ' _' → logprob: -2.0915777683258057
    3. 'word' → logprob: -3.5915777683258057
    4. '_' → logprob: -3.5915777683258057
    5. '_mask' → logprob: -4.716577529907227
    6. ' word' → logprob: -5.216577529907227
    7. '_words' → logprob: -7.341577529907227
    8. '_index' → logprob: -8.591577529907227
    9. '_idx' → logprob: -9.091577529907227
    10. 'words' → logprob: -9.466577529907227

Token 931: ' détect' (ID: 118715)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.38885965943336487
    2. '_len' → logprob: -1.3888596296310425
    3. '_' → logprob: -3.638859748840332
    4. '_pos' → logprob: -4.638859748840332
    5. '_act' → logprob: -4.763859748840332
    6. ' _' → logprob: -5.263859748840332
    7. '_index' → logprob: -5.513859748840332
    8. 'idx' → logprob: -5.888859748840332
    9. '_length' → logprob: -5.888859748840332
    10. '_current' → logprob: -6.138859748840332

Token 932: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.2543078362941742
    2. 'ected' → logprob: -1.7543078660964966
    3. 'rée' → logprob: -3.629307746887207
    4. 'ect' → logprob: -5.379307746887207
    5. 'érée' → logprob: -5.379307746887207
    6. 'é' → logprob: -5.754307746887207
    7. '   ' → logprob: -6.129307746887207
    8. '__' → logprob: -6.629307746887207
    9. 'cée' → logprob: -6.629307746887207
    10. 'e' → logprob: -6.754307746887207

Token 933: ' :' (ID: 712)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.7628533244132996
    2. '_len' → logprob: -1.5128533840179443
    3. ' _' → logprob: -2.0128533840179443
    4. '_' → logprob: -2.5128533840179443
    5. '_index' → logprob: -4.137853145599365
    6. '_state' → logprob: -4.262853145599365
    7. '_pos' → logprob: -4.637853145599365
    8. '_length' → logprob: -4.762853145599365
    9. '_current' → logprob: -5.137853145599365
    10. ' (' → logprob: -5.262853145599365

Token 934: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033429212868213654
    2. ' ' → logprob: -4.783429145812988
    3. 'None' → logprob: -5.408429145812988
    4. 'season' → logprob: -5.408429145812988
    5. 'j' → logprob: -5.783429145812988
    6. ' None' → logprob: -6.408429145812988
    7. '#' → logprob: -6.408429145812988
    8. '(' → logprob: -6.783429145812988
    9. '-' → logprob: -7.033429145812988
    10. '   ' → logprob: -7.158429145812988

Token 935: ' bool' (ID: 3792)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -1.8297163248062134
    2. 'nd' → logprob: -2.204716205596924
    3. 'state' → logprob: -2.704716205596924
    4. 't' → logprob: -2.829716205596924
    5. ' tuple' → logprob: -2.829716205596924
    6. 'int' → logprob: -3.454716205596924
    7. ']' → logprob: -3.579716205596924
    8. 'indice' → logprob: -3.704716205596924
    9. '[' → logprob: -3.954716205596924
    10. 'vec' → logprob: -4.204716205596924

Token 936: 'é' (ID: 377)
  Prédit: 'ean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ean' → logprob: -0.1358812302350998
    2. 'é' → logprob: -2.635881185531616
    3. 'éan' → logprob: -3.635881185531616
    4. '[' → logprob: -4.135881423950195
    5. 'ian' → logprob: -5.885881423950195
    6. '_' → logprob: -6.135881423950195
    7. 'e' → logprob: -6.260881423950195
    8. ')' → logprob: -6.885881423950195
    9. '[
' → logprob: -7.385881423950195
    10. ' =' → logprob: -7.760881423950195

Token 937: 'en' (ID: 262)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.21387924253940582
    2. ' flag' → logprob: -3.088879346847534
    3. 'n' → logprob: -3.213879346847534
    4. 'ean' → logprob: -3.588879346847534
    5. '_' → logprob: -4.713879108428955
    6. ' ' → logprob: -5.213879108428955
    7. ' =' → logprob: -5.463879108428955
    8. ' n' → logprob: -5.588879108428955
    9. ')' → logprob: -5.713879108428955
    10. '           ' → logprob: -5.838879108428955

Token 938: ' "' (ID: 392)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8599091172218323
    2. ' =' → logprob: -1.3599090576171875
    3. ' _' → logprob: -2.6099090576171875
    4. ' True' → logprob: -2.8599090576171875
    5. ' ' → logprob: -3.1099090576171875
    6. '[' → logprob: -3.7349090576171875
    7. '=' → logprob: -4.2349090576171875
    8. 'True' → logprob: -4.2349090576171875
    9. ' False' → logprob: -4.2349090576171875
    10. 'False' → logprob: -4.3599090576171875

Token 939: 'vu' (ID: 18925)
  Prédit: 'matched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matched' → logprob: -0.4721704423427582
    2. 'found' → logprob: -1.2221704721450806
    3. 'finished' → logprob: -3.722170352935791
    4. 'in' → logprob: -4.347170352935791
    5. 'is' → logprob: -4.472170352935791
    6. 'completed' → logprob: -4.722170352935791
    7. 'done' → logprob: -5.597170352935791
    8. 'det' → logprob: -5.847170352935791
    9. ' matched' → logprob: -5.972170352935791
    10. 'inside' → logprob: -6.222170352935791

Token 940: ' une' (ID: 2463)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7633024454116821
    2. ')' → logprob: -2.0133023262023926
    3. '_' → logprob: -2.5133023262023926
    4. '_word' → logprob: -2.8883023262023926
    5. '")' → logprob: -3.0133023262023926
    6. '"' → logprob: -3.8883023262023926
    7. '_mask' → logprob: -4.138302326202393
    8. ']' → logprob: -4.138302326202393
    9. '"),' → logprob: -4.263302326202393
    10. ',' → logprob: -4.263302326202393

Token 941: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.3287631869316101
    2. ' fois' → logprob: -1.8287632465362549
    3. ' ' → logprob: -2.578763246536255
    4. ' seule' → logprob: -3.828763246536255
    5. '_' → logprob: -4.578763008117676
    6. 'se' → logprob: -5.078763008117676
    7. 'f' → logprob: -6.203763008117676
    8. ' seul' → logprob: -6.828763008117676
    9. 'fo' → logprob: -7.078763008117676
    10. ' ' → logprob: -7.703763008117676

Token 942: '"' (ID: 1)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4612865746021271
    2. '"' → logprob: -1.4612865447998047
    3. '")' → logprob: -3.4612865447998047
    4. ')' → logprob: -3.5862865447998047
    5. '"_' → logprob: -3.7112865447998047
    6. '_detect' → logprob: -4.461286544799805
    7. '_"' → logprob: -5.086286544799805
    8. '"]' → logprob: -5.211286544799805
    9. ']' → logprob: -5.586286544799805
    10. '=True' → logprob: -5.586286544799805

Token 943: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.721071183681488
    2. '[' → logprob: -1.4710712432861328
    3. '[
' → logprob: -3.471071243286133
    4. '       ' → logprob: -3.471071243286133
    5. '_' → logprob: -3.596071243286133
    6. ':' → logprob: -3.596071243286133
    7. '[pos' → logprob: -3.596071243286133
    8. 'def' → logprob: -3.846071243286133
    9. ' ' → logprob: -3.971071243286133
    10. ']' → logprob: -4.471071243286133

Token 944: 'qu' (ID: 351)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6601423025131226
    2. ' True' → logprob: -1.5351423025131226
    3. 'True' → logprob: -1.5351423025131226
    4. 'False' → logprob: -4.035142421722412
    5. ' )' → logprob: -4.535142421722412
    6. '=True' → logprob: -5.035142421722412
    7. ' False' → logprob: -5.160142421722412
    8. ')
' → logprob: -5.160142421722412
    9. ' =' → logprob: -6.785142421722412
    10. '   ' → logprob: -7.535142421722412

Token 945: 'and' (ID: 427)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0741182267665863
    2. 'ue' → logprob: -4.074118137359619
    3. 'uel' → logprob: -4.449118137359619
    4. 'ual' → logprob: -4.574118137359619
    5. ''' → logprob: -5.074118137359619
    6. 'e' → logprob: -5.449118137359619
    7. ''u' → logprob: -5.699118137359619
    8. 'el' → logprob: -5.824118137359619
    9. 'ed' → logprob: -6.199118137359619
    10. 'ui' → logprob: -6.449118137359619

Token 946: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.4346942901611328
    2. ' on' → logprob: -1.9346942901611328
    3. 'True' → logprob: -2.059694290161133
    4. ' True' → logprob: -2.309694290161133
    5. 'le' → logprob: -2.934694290161133
    6. ' detected' → logprob: -3.434694290161133
    7. 'pos' → logprob: -3.684694290161133
    8. ' le' → logprob: -3.809694290161133
    9. ')' → logprob: -3.934694290161133
    10. '=' → logprob: -4.059694290161133

Token 947: ' a' (ID: 261)
  Prédit: 'detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'detect' → logprob: -0.627041757106781
    2. 'a' → logprob: -2.377041816711426
    3. 'det' → logprob: -2.377041816711426
    4. 'ren' → logprob: -3.627041816711426
    5. ' detect' → logprob: -3.752041816711426
    6. 'match' → logprob: -4.002041816711426
    7. 'arr' → logprob: -4.002041816711426
    8. 'continue' → logprob: -4.002041816711426
    9. 'have' → logprob: -4.127041816711426
    10. ' a' → logprob: -4.627041816711426

Token 948: ' fini' (ID: 63561)
  Prédit: 'detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'detect' → logprob: -1.2956600189208984
    2. 'match' → logprob: -1.6706600189208984
    3. ' trouvé' → logprob: -1.9206600189208984
    4. 'tr' → logprob: -2.2956600189208984
    5. 'det' → logprob: -3.2956600189208984
    6. 'dé' → logprob: -3.4206600189208984
    7. 'matched' → logprob: -3.6706600189208984
    8. 'ren' → logprob: -3.9206600189208984
    9. ' atteint' → logprob: -3.9206600189208984
    10. ' détect' → logprob: -4.545660018920898

Token 949: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.897395133972168
    2. '_' → logprob: -2.022395133972168
    3. 'le' → logprob: -2.272395133972168
    4. '=True' → logprob: -2.522395133972168
    5. 'la' → logprob: -2.647395133972168
    6. '),' → logprob: -3.522395133972168
    7. 'de' → logprob: -3.772395133972168
    8. ' la' → logprob: -3.772395133972168
    9. 'l' → logprob: -4.147395133972168
    10. ' le' → logprob: -4.272395133972168

Token 950: ' la' (ID: 557)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.6911579966545105
    2. 'matcher' → logprob: -0.8161579966545105
    3. 'matched' → logprob: -3.5661580562591553
    4. 'mat' → logprob: -4.316157817840576
    5. '```' → logprob: -5.816157817840576
    6. 'matching' → logprob: -5.941157817840576
    7. 'det' → logprob: -6.441157817840576
    8. 'l' → logprob: -6.441157817840576
    9. '   ' → logprob: -6.691157817840576
    10. 'm' → logprob: -7.066157817840576

Token 951: ' matcher' (ID: 63436)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.2552342414855957
    2. 'matched' → logprob: -2.1302342414855957
    3. 'det' → logprob: -3.1302342414855957
    4. 'matcher' → logprob: -3.6302342414855957
    5. 'detect' → logprob: -3.8802342414855957
    6. 'matching' → logprob: -6.005234241485596
    7. ' matched' → logprob: -6.505234241485596
    8. 'tr' → logprob: -6.505234241485596
    9. '```' → logprob: -6.755234241485596
    10. ' match' → logprob: -6.755234241485596

Token 952: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007287146989256144
    2. ')
' → logprob: -5.75728702545166
    3. '):' → logprob: -6.25728702545166
    4. '")' → logprob: -6.75728702545166
    5. ')"' → logprob: -8.75728702545166
    6. ' )' → logprob: -8.75728702545166
    7. ')`' → logprob: -8.88228702545166
    8. 'def' → logprob: -9.50728702545166
    9. '):
' → logprob: -9.63228702545166
    10. ',' → logprob: -9.75728702545166

Token 953: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03151728957891464
    2. '   ' → logprob: -4.781517505645752
    3. ')' → logprob: -5.031517505645752
    4. ',' → logprob: -5.031517505645752
    5. '	' → logprob: -6.031517505645752
    6. '           ' → logprob: -6.531517505645752
    7. '#' → logprob: -6.531517505645752
    8. '[' → logprob: -7.656517505645752
    9. '_' → logprob: -7.906517505645752
    10. '\' → logprob: -8.031517028808594

Token 954: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3507704734802246
    2. '   ' → logprob: -1.3507704734802246
    3. ')' → logprob: -4.600770473480225
    4. ',' → logprob: -5.725770473480225
    5. '           ' → logprob: -5.850770473480225
    6. '    ' → logprob: -6.100770473480225
    7. ']' → logprob: -6.350770473480225
    8. '	' → logprob: -6.350770473480225
    9. ' ' → logprob: -6.475770473480225
    10. '[' → logprob: -6.600770473480225

Token 955: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03395640850067139
    2. ',' → logprob: -4.408956527709961
    3. '   ' → logprob: -4.408956527709961
    4. ',
' → logprob: -6.283956527709961
    5. '           ' → logprob: -6.533956527709961
    6. ' ' → logprob: -7.033956527709961
    7. '	' → logprob: -7.408956527709961
    8. '               ' → logprob: -7.658956527709961
    9. '\t' → logprob: -7.783956527709961
    10. ')' → logprob: -7.908956527709961

Token 956: ' mais' (ID: 2899)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.0447184294462204
    2. 'seen' → logprob: -4.669718265533447
    3. '   ' → logprob: -5.044718265533447
    4. ' season' → logprob: -5.419718265533447
    5. '(
' → logprob: -5.544718265533447
    6. '       ' → logprob: -5.669718265533447
    7. 'visited' → logprob: -6.044718265533447
    8. '#' → logprob: -6.294718265533447
    9. 'state' → logprob: -6.419718265533447
    10. 'current' → logprob: -6.419718265533447

Token 957: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6066647171974182
    2. ' not' → logprob: -2.3566646575927734
    3. '    ' → logprob: -2.4816646575927734
    4. '       ' → logprob: -2.8566646575927734
    5. ' ' → logprob: -3.4816646575927734
    6. '#' → logprob: -3.8566646575927734
    7. ' #' → logprob: -4.356664657592773
    8. '_' → logprob: -4.356664657592773
    9. 'not' → logprob: -4.731664657592773
    10. ' for' → logprob: -4.856664657592773

Token 958: ' a' (ID: 261)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8014324903488159
    2. ' _' → logprob: -2.3014326095581055
    3. '[' → logprob: -2.5514326095581055
    4. 'def' → logprob: -2.5514326095581055
    5. '_' → logprob: -3.0514326095581055
    6. ' continuer' → logprob: -3.4264326095581055
    7. '#' → logprob: -3.9264326095581055
    8. '   ' → logprob: -4.0514326095581055
    9. 'continue' → logprob: -4.0514326095581055
    10. ' n' → logprob: -4.1764326095581055

Token 959: ' aussi' (ID: 9894)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.2668678760528564
    2. 'not' → logprob: -2.1418678760528564
    3. ' seulement' → logprob: -2.3918678760528564
    4. 'pas' → logprob: -2.6418678760528564
    5. '   ' → logprob: -3.0168678760528564
    6. ' uniquement' → logprob: -3.1418678760528564
    7. ' only' → logprob: -3.3918678760528564
    8. ' not' → logprob: -3.3918678760528564
    9. ' besoin' → logprob: -3.3918678760528564
    10. ' juste' → logprob: -3.5168678760528564

Token 960: ' les' (ID: 1341)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.3332881927490234
    2. '   ' → logprob: -2.4582881927490234
    3. 'current' → logprob: -2.4582881927490234
    4. 'l' → logprob: -2.5832881927490234
    5. ' la' → logprob: -2.7082881927490234
    6. ' ' → logprob: -2.7082881927490234
    7. ' une' → logprob: -3.2082881927490234
    8. '"' → logprob: -3.2082881927490234
    9. 'prev' → logprob: -3.2082881927490234
    10. 'la' → logprob: -3.2082881927490234

Token 961: ' états' (ID: 184259)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -1.0668903589248657
    2. 'indices' → logprob: -1.8168903589248657
    3. '[
' → logprob: -2.566890239715576
    4. '_states' → logprob: -2.691890239715576
    5. ' states' → logprob: -3.191890239715576
    6. ' indices' → logprob: -3.316890239715576
    7. 'state' → logprob: -3.316890239715576
    8. ' next' → logprob: -3.691890239715576
    9. 'positions' → logprob: -3.691890239715576
    10. 'next' → logprob: -3.816890239715576

Token 962: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.101630687713623
    2. ' _' → logprob: -2.101630687713623
    3. ' des' → logprob: -2.226630687713623
    4. '[' → logprob: -2.351630687713623
    5. '[]' → logprob: -2.601630687713623
    6. ' de' → logprob: -2.726630687713623
    7. '_current' → logprob: -3.351630687713623
    8. '   ' → logprob: -3.601630687713623
    9. 'def' → logprob: -3.851630687713623
    10. 's' → logprob: -3.851630687713623

Token 963: ' matching' (ID: 20238)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09037509560585022
    2. ' l' → logprob: -3.5903751850128174
    3. 'matching' → logprob: -4.465374946594238
    4. ' matching' → logprob: -4.590374946594238
    5. 'autom' → logprob: -4.715374946594238
    6. 'la' → logprob: -5.090374946594238
    7. 'k' → logprob: -5.215374946594238
    8. 'match' → logprob: -5.715374946594238
    9. 'cha' → logprob: -5.965374946594238
    10. 't' → logprob: -6.590374946594238

Token 964: ' part' (ID: 997)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7108173370361328
    2. '       ' → logprob: -1.3358173370361328
    3. ',' → logprob: -2.710817337036133
    4. '[' → logprob: -2.835817337036133
    5. '_' → logprob: -4.085817337036133
    6. ']' → logprob: -4.335817337036133
    7. 'def' → logprob: -4.460817337036133
    8. ' ' → logprob: -4.585817337036133
    9. '[state' → logprob: -4.835817337036133
    10. ')' → logprob: -5.085817337036133

Token 965: 'iel' (ID: 930)
  Prédit: 'iel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iel' → logprob: -0.21544602513313293
    2. 'iels' → logprob: -2.7154459953308105
    3. 'ial' → logprob: -3.3404459953308105
    4. 'ielle' → logprob: -3.7154459953308105
    5. 'ie' → logprob: -3.9654459953308105
    6. '[]' → logprob: -4.4654459953308105
    7. '[' → logprob: -4.9654459953308105
    8. 'iaux' → logprob: -5.3404459953308105
    9. '```' → logprob: -5.5904459953308105
    10. 'iale' → logprob: -5.8404459953308105

Token 966: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9544252157211304
    2. '       ' → logprob: -1.4544252157211304
    3. ' _' → logprob: -1.9544252157211304
    4. ',' → logprob: -2.45442533493042
    5. '_' → logprob: -3.32942533493042
    6. 'def' → logprob: -4.07942533493042
    7. '[' → logprob: -4.57942533493042
    8. ')' → logprob: -4.95442533493042
    9. ']' → logprob: -4.95442533493042
    10. '_states' → logprob: -5.07942533493042

Token 967: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.961246132850647
    2. 'les' → logprob: -1.211246132850647
    3. '#' → logprob: -1.961246132850647
    4. ' les' → logprob: -2.3362460136413574
    5. 'la' → logprob: -3.9612460136413574
    6. ' #' → logprob: -4.086246013641357
    7. 'each' → logprob: -4.336246013641357
    8. 'le' → logprob: -5.211246013641357
    9. ' chacun' → logprob: -5.336246013641357
    10. 'l' → logprob: -5.461246013641357

Token 968: ' saison' (ID: 38158)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.8564161062240601
    2. 'pattern' → logprob: -1.48141610622406
    3. 's' → logprob: -1.73141610622406
    4. ' saison' → logprob: -2.3564162254333496
    5. ' season' → logprob: -4.10641622543335
    6. ' pattern' → logprob: -4.60641622543335
    7. 'word' → logprob: -4.98141622543335
    8. '_s' → logprob: -4.98141622543335
    9. 'pat' → logprob: -5.35641622543335
    10. 'k' → logprob: -5.35641622543335

Token 969: ' word' (ID: 2195)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4286952018737793
    2. ' _' → logprob: -1.1786952018737793
    3. '   ' → logprob: -4.803695201873779
    4. ',' → logprob: -4.803695201873779
    5. '[' → logprob: -5.553695201873779
    6. '_states' → logprob: -5.553695201873779
    7. '_
' → logprob: -6.428695201873779
    8. '_state' → logprob: -6.428695201873779
    9. 'def' → logprob: -6.428695201873779
    10. ' ' → logprob: -6.553695201873779

Token 970: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5221871733665466
    2. '   ' → logprob: -1.0221872329711914
    3. ')' → logprob: -4.772187232971191
    4. ',' → logprob: -5.022187232971191
    5. '
' → logprob: -5.147187232971191
    6. ',
' → logprob: -6.022187232971191
    7. '[' → logprob: -6.147187232971191
    8. ' _' → logprob: -6.397187232971191
    9. 'def' → logprob: -6.522187232971191
    10. '        
' → logprob: -6.522187232971191

Token 971: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012046989984810352
    2. '   ' → logprob: -4.762046813964844
    3. '[' → logprob: -7.137046813964844
    4. '	' → logprob: -7.637046813964844
    5. '           ' → logprob: -7.762046813964844
    6. ',' → logprob: -8.137046813964844
    7. '        
' → logprob: -8.137046813964844
    8. ')' → logprob: -8.637046813964844
    9. '        ' → logprob: -9.137046813964844
    10. '...' → logprob: -9.387046813964844

Token 972: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0470990315079689
    2. '   ' → logprob: -3.4220991134643555
    3. ' ' → logprob: -5.6720991134643555
    4. '[' → logprob: -6.5470991134643555
    5. '<|end|>' → logprob: -6.6720991134643555
    6. '\t' → logprob: -6.7970991134643555
    7. '        
' → logprob: -7.0470991134643555
    8. '	' → logprob: -7.4220991134643555
    9. '        ' → logprob: -7.4220991134643555
    10. '    ' → logprob: -7.5470991134643555

Token 973: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6277610659599304
    2. '       ' → logprob: -0.8777610659599304
    3. ' _' → logprob: -4.502760887145996
    4. '_' → logprob: -5.127760887145996
    5. 'state' → logprob: -5.627760887145996
    6. ' ' → logprob: -5.752760887145996
    7. '#' → logprob: -6.127760887145996
    8. ',' → logprob: -6.252760887145996
    9. '\' → logprob: -6.502760887145996
    10. '[' → logprob: -6.502760887145996

Token 974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02643963322043419
    2. '   ' → logprob: -3.901439666748047
    3. '
' → logprob: -6.151439666748047
    4. '        
' → logprob: -7.526439666748047
    5. '#' → logprob: -7.651439666748047
    6. '```' → logprob: -7.776439666748047
    7. '	' → logprob: -8.276439666748047
    8. '\' → logprob: -8.276439666748047
    9. ' ' → logprob: -8.401439666748047
    10. '           ' → logprob: -8.401439666748047

Token 975: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07539024204015732
    2. '   ' → logprob: -2.700390338897705
    3. '        
' → logprob: -6.825390338897705
    4. '#' (adapté à ' #') → logprob: -7.075390338897705
    5. ' 
' → logprob: -7.825390338897705
    6. '
' → logprob: -7.950390338897705
    7. ' ' → logprob: -7.950390338897705
    8. '           ' → logprob: -8.200389862060547
    9. '    
' → logprob: -8.200389862060547
    10. ' ' → logprob: -8.825389862060547

Token 976: ' idée' (ID: 64187)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5074490904808044
    2. '       ' → logprob: -1.7574491500854492
    3. '[' → logprob: -3.132449150085449
    4. '#' → logprob: -3.507449150085449
    5. ')' → logprob: -3.632449150085449
    6. ' ' → logprob: -3.632449150085449
    7. ' \' → logprob: -4.382449150085449
    8. ' 
' → logprob: -4.882449150085449
    9. '\' → logprob: -5.007449150085449
    10. ']' → logprob: -5.132449150085449

Token 977: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8157607316970825
    2. ':' → logprob: -1.0657607316970825
    3. ' =' → logprob: -2.190760612487793
    4. '       ' → logprob: -3.315760612487793
    5. ' :' → logprob: -3.940760612487793
    6. '=' → logprob: -4.190760612487793
    7. 'def' → logprob: -4.190760612487793
    8. ':
' → logprob: -5.815760612487793
    9. '#' → logprob: -6.690760612487793
    10. 'import' → logprob: -6.815760612487793

Token 978: ' A' (ID: 355)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5966839790344238
    2. '       ' → logprob: -1.9716839790344238
    3. '#' → logprob: -2.721683979034424
    4. ' from' → logprob: -2.846683979034424
    5. 'dp' → logprob: -2.971683979034424
    6. 'import' → logprob: -3.596683979034424
    7. '   ' → logprob: -3.721683979034424
    8. ' dp' → logprob: -4.221683979034424
    9. 'state' → logprob: -4.471683979034424
    10. ' max' → logprob: -4.471683979034424

Token 979: ' cause' (ID: 7075)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.7610622644424438
    2. 'from' → logprob: -0.7610622644424438
    3. '#' → logprob: -3.8860621452331543
    4. 'import' → logprob: -5.136062145233154
    5. ' from' → logprob: -5.136062145233154
    6. 'cc' → logprob: -5.261062145233154
    7. 'def' → logprob: -5.386062145233154
    8. 'l' → logprob: -5.511062145233154
    9. 'stack' → logprob: -6.011062145233154
    10. 'dd' → logprob: -6.136062145233154

Token 980: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4994484484195709
    2. ' de' → logprob: -1.6244484186172485
    3. '   ' → logprob: -2.874448537826538
    4. ' of' → logprob: -2.999448537826538
    5. ' des' → logprob: -3.374448537826538
    6. '_' → logprob: -3.874448537826538
    7. ' =' → logprob: -4.874448299407959
    8. ' ' → logprob: -5.374448299407959
    9. 's' → logprob: -5.624448299407959
    10. '[' → logprob: -6.124448299407959

Token 981: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.27359768748283386
    2. 'l' → logprob: -2.3985977172851562
    3. ' l' → logprob: -2.8985977172851562
    4. 'la' → logprob: -3.0235977172851562
    5. ' K' → logprob: -4.148597717285156
    6. 'K' → logprob: -5.273597717285156
    7. 'len' → logprob: -5.273597717285156
    8. ' len' → logprob: -5.773597717285156
    9. ' indentation' → logprob: -6.273597717285156
    10. ' memory' → logprob: -6.398597717285156

Token 982: ' condition' (ID: 7060)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -1.4017258882522583
    2. 'space' → logprob: -2.4017257690429688
    3. 's' → logprob: -2.5267257690429688
    4. ' continuation' → logprob: -2.5267257690429688
    5. ' ' → logprob: -2.7767257690429688
    6. ' next' → logprob: -3.1517257690429688
    7. ' combin' → logprob: -3.2767257690429688
    8. 'n' → logprob: -3.2767257690429688
    9. '_' → logprob: -3.5267257690429688
    10. ' continu' → logprob: -3.7767257690429688

Token 983: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6526866555213928
    2. ' d' → logprob: -2.152686595916748
    3. ' =' → logprob: -2.277686595916748
    4. '   ' → logprob: -2.777686595916748
    5. ':' → logprob: -3.527686595916748
    6. '_' → logprob: -3.777686595916748
    7. ' ' → logprob: -4.027686595916748
    8. ' :' → logprob: -4.152686595916748
    9. ' continu' → logprob: -4.277686595916748
    10. ',' → logprob: -4.527686595916748

Token 984: ''une' (ID: 13337)
  Prédit: ''espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''espace' → logprob: -1.8553467988967896
    2. 'es' → logprob: -2.3553466796875
    3. ' continuation' → logprob: -2.3553466796875
    4. 'e' → logprob: -2.4803466796875
    5. ''' → logprob: -2.7303466796875
    6. ' l' → logprob: -3.3553466796875
    7. ' length' → logprob: -3.6053466796875
    8. 's' → logprob: -3.7303466796875
    9. ' taille' → logprob: -3.8553466796875
    10. ' s' → logprob: -4.1053466796875

Token 985: ' fois' (ID: 14697)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7051098942756653
    2. 'space' → logprob: -2.9551098346710205
    3. ' ' → logprob: -3.0801098346710205
    4. ' _' → logprob: -3.4551098346710205
    5. 'def' → logprob: -3.5801098346710205
    6. ' espace' → logprob: -3.5801098346710205
    7. ')' → logprob: -3.7051098346710205
    8. '
' → logprob: -4.0801100730896
    9. ' #' → logprob: -4.4551100730896
    10. 'es' → logprob: -4.4551100730896

Token 986: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6832298040390015
    2. ',' → logprob: -2.308229923248291
    3. ' _' → logprob: -2.933229923248291
    4. 'def' → logprob: -2.933229923248291
    5. ' ' → logprob: -3.308229923248291
    6. '   ' → logprob: -3.433229923248291
    7. ')' → logprob: -3.683229923248291
    8. '_token' → logprob: -3.933229923248291
    9. '[' → logprob: -4.308229923248291
    10. ' ,' → logprob: -4.433229923248291

Token 987: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07651864737272263
    2. ' _' → logprob: -3.2015185356140137
    3. ',' → logprob: -5.451518535614014
    4. ')' → logprob: -5.576518535614014
    5. '_token' → logprob: -5.701518535614014
    6. 'def' → logprob: -6.076518535614014
    7. '_unique' → logprob: -6.326518535614014
    8. '<|end|>' → logprob: -6.701518535614014
    9. ' ' → logprob: -6.826518535614014
    10. '[' → logprob: -7.076518535614014

Token 988: ' seul' (ID: 33041)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5057989954948425
    2. ')' → logprob: -2.5057990550994873
    3. ' _' → logprob: -2.5057990550994873
    4. ' ' → logprob: -2.6307990550994873
    5. ' )' → logprob: -3.2557990550994873
    6. ' seul' → logprob: -3.6307990550994873
    7. ',' → logprob: -4.255798816680908
    8. ' ,' → logprob: -4.505798816680908
    9. 'e' → logprob: -4.630798816680908
    10. 'se' → logprob: -4.880798816680908

Token 989: ' saison' (ID: 38158)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2027409076690674
    2. ' saison' → logprob: -1.9527409076690674
    3. '_' → logprob: -2.0777409076690674
    4. 'season' → logprob: -2.8277409076690674
    5. 's' → logprob: -3.0777409076690674
    6. ' word' → logprob: -3.0777409076690674
    7. ' pattern' → logprob: -3.7027409076690674
    8. ' season' → logprob: -3.8277409076690674
    9. ' )' → logprob: -3.8277409076690674
    10. ' detected' → logprob: -3.9527409076690674

Token 990: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.7847416400909424
    2. 'word' → logprob: -1.1597416400909424
    3. '_word' → logprob: -2.0347416400909424
    4. ' _' → logprob: -2.6597416400909424
    5. '_words' → logprob: -4.159741401672363
    6. 'words' → logprob: -5.034741401672363
    7. ' words' → logprob: -5.784741401672363
    8. '_' → logprob: -6.034741401672363
    9. ' ' → logprob: -7.534741401672363
    10. ' ' → logprob: -7.784741401672363

Token 991: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8599892258644104
    2. ',' → logprob: -2.4849891662597656
    3. 's' → logprob: -2.8599891662597656
    4. '_detect' → logprob: -2.8599891662597656
    5. ')' → logprob: -3.1099891662597656
    6. '_states' → logprob: -3.2349891662597656
    7. ' _' → logprob: -3.3599891662597656
    8. '   ' → logprob: -3.6099891662597656
    9. '_idx' → logprob: -3.7349891662597656
    10. ' detected' → logprob: -3.8599891662597656

Token 992: ' une' (ID: 2463)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.4389666318893433
    2. 'd' → logprob: -1.9389666318893433
    3. ' d' → logprob: -2.313966751098633
    4. 'une' → logprob: -2.688966751098633
    5. 'K' → logprob: -2.938966751098633
    6. 'part' → logprob: -3.063966751098633
    7. ' K' → logprob: -3.563966751098633
    8. 'len' → logprob: -3.813966751098633
    9. 'de' → logprob: -3.938966751098633
    10. 'la' → logprob: -3.938966751098633

Token 993: ' seule' (ID: 41983)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -2.2264833450317383
    2. ' espace' → logprob: -2.2264833450317383
    3. 'part' → logprob: -2.4764833450317383
    4. 'u' → logprob: -2.9764833450317383
    5. 'space' → logprob: -3.1014833450317383
    6. 'vec' → logprob: -3.1014833450317383
    7. 'n' → logprob: -3.1014833450317383
    8. '_' → logprob: -3.1014833450317383
    9. ' ' → logprob: -3.4764833450317383
    10. 'ucune' → logprob: -3.8514833450317383

Token 994: ' fois' (ID: 14697)
  Prédit: ' occurrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' occurrence' → logprob: -1.630017638206482
    2. 'occ' → logprob: -1.755017638206482
    3. 'ligne' → logprob: -2.2550177574157715
    4. 'occur' → logprob: -2.3800177574157715
    5. 'autom' → logprob: -2.7550177574157715
    6. 'phrase' → logprob: -3.5050177574157715
    7. 'space' → logprob: -3.5050177574157715
    8. ' ligne' → logprob: -3.7550177574157715
    9. '   ' → logprob: -3.8800177574157715
    10. ' ' → logprob: -4.0050177574157715

Token 995: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5793870091438293
    2. ' _' → logprob: -2.5793869495391846
    3. '_' → logprob: -2.7043869495391846
    4. ' ,' → logprob: -2.8293869495391846
    5. ':' → logprob: -3.5793869495391846
    6. ')' → logprob: -3.7043869495391846
    7. 'state' → logprob: -3.9543869495391846
    8. '   ' → logprob: -4.204387187957764
    9. '_state' → logprob: -4.454387187957764
    10. ' state' → logprob: -4.579387187957764

Token 996: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005737271625548601
    2. '#' → logprob: -6.6307373046875
    3. '   ' → logprob: -6.6307373046875
    4. ')' → logprob: -6.8807373046875
    5. '           ' → logprob: -7.7557373046875
    6. ' ' → logprob: -8.1307373046875
    7. ',' → logprob: -8.6307373046875
    8. ' ' → logprob: -8.7557373046875
    9. ' #' → logprob: -8.7557373046875
    10. '               ' → logprob: -8.8807373046875

Token 997: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023228585720062256
    2. '   ' → logprob: -4.773228645324707
    3. ')' → logprob: -5.398228645324707
    4. '#' (adapté à ' #') → logprob: -6.523228645324707
    5. '           ' → logprob: -6.773228645324707
    6. '        
' → logprob: -6.773228645324707
    7. '        ' → logprob: -7.023228645324707
    8. ' ' → logprob: -7.398228645324707
    9. '               ' → logprob: -7.523228645324707
    10. ' 
' → logprob: -7.898228645324707

Token 998: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5024436116218567
    2. '   ' → logprob: -2.502443552017212
    3. ' \' → logprob: -3.127443552017212
    4. ' 
' → logprob: -3.252443552017212
    5. ')' → logprob: -3.377443552017212
    6. '#' → logprob: -3.502443552017212
    7. ' _' → logprob: -3.752443552017212
    8. '_' → logprob: -4.002443790435791
    9. '
' → logprob: -4.252443790435791
    10. '[
' → logprob: -4.752443790435791

Token 999: ' ne' (ID: 453)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0306063890457153
    2. 'def' → logprob: -2.655606269836426
    3. ' continue' → logprob: -2.780606269836426
    4. ' =' → logprob: -2.780606269836426
    5. '
' → logprob: -2.905606269836426
    6. '#' → logprob: -3.030606269836426
    7. ' _' → logprob: -3.155606269836426
    8. 'continue' → logprob: -3.280606269836426
    9. '=' → logprob: -3.405606269836426
    10. '   ' → logprob: -3.530606269836426

Token 1000: ' peut' (ID: 9216)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.9885690212249756
    2. '       ' → logprob: -1.7385690212249756
    3. 'continue' → logprob: -1.8635690212249756
    4. ' continue' → logprob: -2.2385690212249756
    5. 'def' → logprob: -3.3635690212249756
    6. '   ' → logprob: -4.363569259643555
    7. '#' → logprob: -4.488569259643555
    8. ' space' → logprob: -4.488569259643555
    9. ' #' → logprob: -4.863569259643555
    10. '_space' → logprob: -4.863569259643555

Token 1001: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.33812129497528076
    2. 'pas' → logprob: -1.9631212949752808
    3. '       ' → logprob: -2.8381214141845703
    4. ' stock' → logprob: -3.3381214141845703
    5. ' continuer' → logprob: -4.08812141418457
    6. '#' → logprob: -5.08812141418457
    7. '           ' → logprob: -5.21312141418457
    8. '   ' → logprob: -5.83812141418457
    9. '               ' → logprob: -5.83812141418457
    10. ' store' → logprob: -6.08812141418457

Token 1002: ' matcher' (ID: 63436)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1329998970031738
    2. '   ' → logprob: -1.3829998970031738
    3. '       ' → logprob: -1.6329998970031738
    4. ' continue' → logprob: -1.7579998970031738
    5. '           ' → logprob: -4.882999897003174
    6. '               ' → logprob: -5.007999897003174
    7. 'import' → logprob: -5.007999897003174
    8. ' continuer' → logprob: -5.507999897003174
    9. ' ' → logprob: -5.757999897003174
    10. ')' → logprob: -5.757999897003174

Token 1003: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.030651023611426353
    2. ' _' → logprob: -4.780651092529297
    3. '[' → logprob: -4.905651092529297
    4. ' pas' → logprob: -5.780651092529297
    5. 's' → logprob: -6.655651092529297
    6. ']' → logprob: -6.780651092529297
    7. ' plus' → logprob: -7.155651092529297
    8. ',' → logprob: -7.530651092529297
    9. 'pas' → logprob: -7.780651092529297
    10. 'r' → logprob: -7.905651092529297

Token 1004: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7923290133476257
    2. '_' → logprob: -2.0423290729522705
    3. 'r' → logprob: -2.5423290729522705
    4. ' ' → logprob: -3.0423290729522705
    5. 'f' → logprob: -3.2923290729522705
    6. ' mot' → logprob: -3.5423290729522705
    7. 'mot' → logprob: -3.9173290729522705
    8. 'ux' → logprob: -4.042328834533691
    9. 'u' → logprob: -4.167328834533691
    10. ''' → logprob: -4.292328834533691

Token 1005: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4950766563415527
    2. 'mot' → logprob: -1.8700766563415527
    3. ' mot' → logprob: -2.3700766563415527
    4. 'plus' → logprob: -2.6200766563415527
    5. ' mots' → logprob: -3.3700766563415527
    6. ' plus' → logprob: -3.3700766563415527
    7. '```' → logprob: -3.3700766563415527
    8. ' ' → logprob: -3.4950766563415527
    9. '"' → logprob: -3.9950766563415527
    10. 'r' → logprob: -4.120076656341553

Token 1006: ' saisons' (ID: 168672)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -1.4491503238677979
    2. '
' → logprob: -1.8241503238677979
    3. ']' → logprob: -2.324150323867798
    4. ')' → logprob: -2.574150323867798
    5. ' ' → logprob: -2.699150323867798
    6. '```' → logprob: -2.699150323867798
    7. 's' → logprob: -2.949150323867798
    8. '^' → logprob: -3.574150323867798
    9. 'uple' → logprob: -4.324150085449219
    10. '#' → logprob: -4.574150085449219

Token 1007: ' different' (ID: 2647)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6362514495849609
    2. '       ' → logprob: -1.886251449584961
    3. '   ' → logprob: -2.011251449584961
    4. '[' → logprob: -2.386251449584961
    5. ' _' → logprob: -3.761251449584961
    6. ')' → logprob: -3.886251449584961
    7. 'def' → logprob: -4.011251449584961
    8. ',' → logprob: -5.636251449584961
    9. '_
' → logprob: -5.761251449584961
    10. '[
' → logprob: -5.761251449584961

Token 1008: 'es' (ID: 268)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6658848524093628
    2. '   ' → logprob: -1.2908848524093628
    3. '[' → logprob: -3.1658849716186523
    4. '_' → logprob: -3.1658849716186523
    5. ')' → logprob: -3.4158849716186523
    6. 'def' → logprob: -3.6658849716186523
    7. '[
' → logprob: -4.040884971618652
    8. ',' → logprob: -4.290884971618652
    9. '_
' → logprob: -5.165884971618652
    10. '
' → logprob: -5.540884971618652

Token 1009: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06066925823688507
    2. '   ' → logprob: -3.435669183731079
    3. '_' → logprob: -5.060669422149658
    4. '        
' → logprob: -5.435669422149658
    5. '[' → logprob: -5.810669422149658
    6. ')' → logprob: -5.935669422149658
    7. ',' → logprob: -6.310669422149658
    8. '
' → logprob: -7.060669422149658
    9. ',
' → logprob: -7.185669422149658
    10. '_
' → logprob: -7.185669422149658

Token 1010: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05991778522729874
    2. '#' → logprob: -3.309917688369751
    3. '           ' → logprob: -5.80991792678833
    4. '...' → logprob: -5.80991792678833
    5. ')' → logprob: -5.93491792678833
    6. '        ' → logprob: -6.18491792678833
    7. ' or' → logprob: -6.18491792678833
    8. '<|end|>' → logprob: -6.30991792678833
    9. '               ' → logprob: -6.43491792678833
    10. ' ' → logprob: -7.18491792678833

Token 1011: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033232737332582474
    2. '#' (adapté à ' #') → logprob: -4.033232688903809
    3. '           ' → logprob: -5.658232688903809
    4. '               ' → logprob: -6.033232688903809
    5. '   ' → logprob: -6.283232688903809
    6. '        ' → logprob: -7.033232688903809
    7. ' #' → logprob: -7.033232688903809
    8. '\t' → logprob: -7.408232688903809
    9. ' ' → logprob: -7.408232688903809
    10. ')' → logprob: -7.658232688903809

Token 1012: ' donc' (ID: 14206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11030806601047516
    2. '   ' → logprob: -3.4853081703186035
    3. ')' → logprob: -3.9853081703186035
    4. ' \' → logprob: -4.9853081703186035
    5. '           ' → logprob: -4.9853081703186035
    6. '\n' → logprob: -5.1103081703186035
    7. ''' → logprob: -5.2353081703186035
    8. '               ' → logprob: -5.6103081703186035
    9. '\t' → logprob: -5.6103081703186035
    10. '[' → logprob: -6.1103081703186035

Token 1013: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42317822575569153
    2. '#' → logprob: -2.548178195953369
    3. ')' → logprob: -2.798178195953369
    4. '_' → logprob: -2.923178195953369
    5. '   ' → logprob: -4.173178195953369
    6. '[' → logprob: -4.423178195953369
    7. ' ' → logprob: -4.548178195953369
    8. '           ' → logprob: -4.548178195953369
    9. '               ' → logprob: -4.798178195953369
    10. ' #' → logprob: -5.173178195953369

Token 1014: ' mém' (ID: 136981)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2901443243026733
    2. ' continue' → logprob: -1.2901443243026733
    3. 'continue' → logprob: -1.6651443243026733
    4. 'contin' → logprob: -2.665144443511963
    5. ' peux' → logprob: -2.665144443511963
    6. 'pe' → logprob: -3.790144443511963
    7. 's' → logprob: -3.915144443511963
    8. ' #' → logprob: -4.540144443511963
    9. ' stock' → logprob: -5.040144443511963
    10. ' continues' → logprob: -5.165144443511963

Token 1015: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6706204414367676
    2. 'o' → logprob: -1.0456204414367676
    3. 'oire' → logprob: -2.1706204414367676
    4. 'ory' → logprob: -5.295620441436768
    5. '
' → logprob: -5.420620441436768
    6. '=' → logprob: -6.045620441436768
    7. 'oir' → logprob: -6.545620441436768
    8. '```' → logprob: -6.545620441436768
    9. 'oris' → logprob: -6.920620441436768
    10. '_' → logprob: -7.170620441436768

Token 1016: 'ise' (ID: 1096)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.546570360660553
    2. 'ise' → logprob: -2.171570301055908
    3. 'r' → logprob: -2.546570301055908
    4. 'iser' → logprob: -2.796570301055908
    5. '```' → logprob: -3.046570301055908
    6. 'rise' → logprob: -4.421570301055908
    7. 'ize' → logprob: -4.546570301055908
    8. '   ' → logprob: -4.671570301055908
    9. '{
' → logprob: -4.921570301055908
    10. 'ris' → logprob: -4.921570301055908

Token 1017: ' quelle' (ID: 47442)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1226544380187988
    2. '[' → logprob: -1.3726544380187988
    3. '   ' → logprob: -1.9976544380187988
    4. '(' → logprob: -2.747654438018799
    5. '_' → logprob: -2.872654438018799
    6. ' ' → logprob: -3.372654438018799
    7. ''' → logprob: -4.122654438018799
    8. ')' → logprob: -4.247654438018799
    9. '  ' → logprob: -4.372654438018799
    10. ',' → logprob: -4.497654438018799

Token 1018: ' saison' (ID: 38158)
  Prédit: ' saison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saison' → logprob: -1.2635598182678223
    2. 's' → logprob: -1.7635598182678223
    3. 'season' → logprob: -1.7635598182678223
    4. '_word' → logprob: -2.6385598182678223
    5. 'word' → logprob: -2.7635598182678223
    6. '_s' → logprob: -2.8885598182678223
    7. ' season' → logprob: -3.2635598182678223
    8. '_' → logprob: -3.5135598182678223
    9. ' word' → logprob: -4.013559818267822
    10. ' _' → logprob: -4.388559818267822

Token 1019: ' word' (ID: 2195)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5605898499488831
    2. '_' → logprob: -1.5605897903442383
    3. '_word' → logprob: -1.6855897903442383
    4. '_mask' → logprob: -4.435589790344238
    5. ')' → logprob: -4.810589790344238
    6. '_words' → logprob: -5.060589790344238
    7. ')_' → logprob: -5.935589790344238
    8. 'word' → logprob: -6.310589790344238
    9. ' word' → logprob: -7.435589790344238
    10. '_id' → logprob: -8.185589790344238

Token 1020: ' c' (ID: 274)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22518546879291534
    2. '_mask' → logprob: -3.2251853942871094
    3. '_idx' → logprob: -3.3501853942871094
    4. ' _' → logprob: -3.3501853942871094
    5. '_id' → logprob: -4.350185394287109
    6. ')_' → logprob: -4.850185394287109
    7. '_selected' → logprob: -4.850185394287109
    8. '_index' → logprob: -5.100185394287109
    9. '_s' → logprob: -5.350185394287109
    10. '_status' → logprob: -5.350185394287109

Token 1021: ''est' (ID: 6616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12137176096439362
    2. ''est' → logprob: -2.9963717460632324
    3. 's' → logprob: -3.8713717460632324
    4. 'u' → logprob: -4.996371746063232
    5. '_id' → logprob: -5.121371746063232
    6. 'est' → logprob: -5.371371746063232
    7. '```' → logprob: -5.371371746063232
    8. 'n' → logprob: -6.246371746063232
    9. '_est' → logprob: -6.246371746063232
    10. 'a' → logprob: -6.246371746063232

Token 1022: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.704130232334137
    2. '[' → logprob: -1.7041301727294922
    3. '       ' → logprob: -1.9541301727294922
    4. '[
' → logprob: -2.454130172729492
    5. ',' → logprob: -3.704130172729492
    6. ')' → logprob: -3.954130172729492
    7. '_' → logprob: -3.954130172729492
    8. ':' → logprob: -4.579130172729492
    9. '(
' → logprob: -5.579130172729492
    10. 'def' → logprob: -5.829130172729492

Token 1023: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08799073845148087
    2. ',' → logprob: -2.9629907608032227
    3. '_' → logprob: -4.462990760803223
    4. '),' → logprob: -5.462990760803223
    5. ' )' → logprob: -5.587990760803223
    6. '   ' → logprob: -5.962990760803223
    7. ' ,' → logprob: -6.712990760803223
    8. '0' → logprob: -6.837990760803223
    9. ')
' → logprob: -6.837990760803223
    10. ' (' → logprob: -7.337990760803223

Token 1024: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5907014012336731
    2. ')' → logprob: -1.0907013416290283
    3. ' or' → logprob: -2.9657013416290283
    4. '),' → logprob: -4.465701580047607
    5. '```' → logprob: -4.590701580047607
    6. ' if' → logprob: -5.215701580047607
    7. 'or' → logprob: -5.590701580047607
    8. ',
' → logprob: -5.715701580047607
    9. '...' → logprob: -5.840701580047607
    10. ':' → logprob: -5.840701580047607

Token 1025: ' aucune' (ID: 51173)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.13281689584255219
    2. ' None' → logprob: -2.132816791534424
    3. 'auc' → logprob: -5.507816791534424
    4. '0' → logprob: -6.882816791534424
    5. 'none' → logprob: -7.507816791534424
    6. 'A' → logprob: -9.632817268371582
    7. ' ' → logprob: -10.257817268371582
    8. ' none' → logprob: -10.507817268371582
    9. ' aucune' → logprob: -10.632817268371582
    10. 'no' → logprob: -10.882817268371582

Token 1026: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017474956810474396
    2. ',' → logprob: -4.767475128173828
    3. '<|end|>' → logprob: -4.892475128173828
    4. '),' → logprob: -7.267475128173828
    5. '_' → logprob: -8.517475128173828
    6. ' )' → logprob: -9.142475128173828
    7. ' or' → logprob: -9.892475128173828
    8. ' ,' → logprob: -10.142475128173828
    9. '<|end|>' → logprob: -10.142475128173828
    10. ']' → logprob: -10.767475128173828

Token 1027: ' s' (ID: 265)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6761115789413452
    2. ' K' → logprob: -1.4261115789413452
    3. 'None' → logprob: -2.5511116981506348
    4. ' #' → logprob: -3.1761116981506348
    5. ' None' → logprob: -3.4261116981506348
    6. 'K' → logprob: -3.6761116981506348
    7. '-' → logprob: -4.051111698150635
    8. '1' → logprob: -4.176111698150635
    9. '       ' → logprob: -4.551111698150635
    10. ' -' → logprob: -4.676111698150635

Token 1028: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9167236089706421
    2. 'e' → logprob: -0.9167236089706421
    3. '=' → logprob: -2.7917237281799316
    4. ']' → logprob: -3.1667237281799316
    5. '0' → logprob: -3.1667237281799316
    6. '_' → logprob: -4.166723728179932
    7. ',' → logprob: -5.416723728179932
    8. '[' → logprob: -5.416723728179932
    9. ' =' → logprob: -5.416723728179932
    10. '```' → logprob: -6.291723728179932

Token 1029: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009126550517976284
    2. '1' → logprob: -5.634126663208008
    3. ' range' → logprob: -5.634126663208008
    4. '...' → logprob: -7.634126663208008
    5. '0' → logprob: -8.134126663208008
    6. 'None' → logprob: -8.259126663208008
    7. '-' → logprob: -8.634126663208008
    8. '[' → logprob: -8.759126663208008
    9. '+' → logprob: -8.884126663208008
    10. '(range' → logprob: -9.884126663208008

Token 1030: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010643578134477139
    2. ' range' → logprob: -4.760643482208252
    3. '0' → logprob: -7.510643482208252
    4. '1' → logprob: -7.885643482208252
    5. '+' → logprob: -7.885643482208252
    6. '[' → logprob: -8.13564395904541
    7. '...' → logprob: -8.26064395904541
    8. 'K' → logprob: -10.01064395904541
    9. '```' → logprob: -10.13564395904541
    10. '(range' → logprob: -10.76064395904541

Token 1031: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.8238341212272644
    2. '...' → logprob: -1.1988341808319092
    3. '+' → logprob: -1.4488341808319092
    4. ',...' → logprob: -4.94883394241333
    5. ',' → logprob: -5.07383394241333
    6. '+
' → logprob: -5.69883394241333
    7. '-' → logprob: -6.44883394241333
    8. '
' → logprob: -6.94883394241333
    9. ')' → logprob: -7.19883394241333
    10. '=' → logprob: -7.69883394241333

Token 1032: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.37148091197013855
    2. ')' → logprob: -2.246480941772461
    3. '+' → logprob: -2.246480941772461
    4. '...' → logprob: -3.371480941772461
    5. ',' → logprob: -3.996480941772461
    6. '
' → logprob: -4.371480941772461
    7. '+
' → logprob: -5.746480941772461
    8. '```' → logprob: -5.746480941772461
    9. ' ' → logprob: -5.996480941772461
    10. ',K' → logprob: -6.121480941772461

Token 1033: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04387110471725464
    2. '):' → logprob: -4.04387092590332
    3. ')
' → logprob: -4.91887092590332
    4. '+' → logprob: -4.91887092590332
    5. '):
' → logprob: -5.54387092590332
    6. ',' → logprob: -6.04387092590332
    7. ']' → logprob: -6.54387092590332
    8. '])' → logprob: -6.91887092590332
    9. '```' → logprob: -7.66887092590332
    10. ')]' → logprob: -8.16887092590332

Token 1034: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06728347390890121
    2. ')' → logprob: -3.9422833919525146
    3. '           ' → logprob: -4.942283630371094
    4. '0' → logprob: -4.942283630371094
    5. '   ' → logprob: -5.567283630371094
    6. ' s' → logprob: -5.692283630371094
    7. '        ' → logprob: -5.817283630371094
    8. '#' → logprob: -5.817283630371094
    9. '    ' → logprob: -6.192283630371094
    10. ',' → logprob: -6.192283630371094

Token 1035: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7766470313072205
    2. '       ' → logprob: -0.9016470313072205
    3. ',' → logprob: -3.5266470909118652
    4. ''' → logprob: -3.9016470909118652
    5. '0' → logprob: -4.151647090911865
    6. ' )' → logprob: -4.276647090911865
    7. '   ' → logprob: -4.901647090911865
    8. ' ' → logprob: -5.026647090911865
    9. '    ' → logprob: -5.276647090911865
    10. '"' → logprob: -5.401647090911865

Token 1036: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4911910891532898
    2. ',' → logprob: -1.7411911487579346
    3. '   ' → logprob: -2.6161911487579346
    4. ''' → logprob: -3.6161911487579346
    5. '"' → logprob: -4.1161909103393555
    6. '[' → logprob: -4.2411909103393555
    7. ' ' → logprob: -4.3661909103393555
    8. '       ' → logprob: -4.3661909103393555
    9. '0' → logprob: -4.4911909103393555
    10. '(' → logprob: -4.9911909103393555

Token 1037: ' aucune' (ID: 51173)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4433843195438385
    2. ' s' → logprob: -1.0683842897415161
    3. 'season' → logprob: -5.318384170532227
    4. ' season' → logprob: -6.068384170532227
    5. '   ' → logprob: -6.818384170532227
    6. ' ' → logprob: -6.943384170532227
    7. ' saison' → logprob: -7.443384170532227
    8. ' K' → logprob: -7.443384170532227
    9. ' ' → logprob: -7.693384170532227
    10. '_' → logprob: -7.818384170532227

Token 1038: ',' (ID: 11)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5347009301185608
    2. ' ==' → logprob: -1.284700870513916
    3. '==' → logprob: -2.909700870513916
    4. '!=' → logprob: -3.409700870513916
    5. '   ' → logprob: -3.909700870513916
    6. '=' → logprob: -5.159700870513916
    7. ' detected' → logprob: -5.534700870513916
    8. ',' → logprob: -5.659700870513916
    9. ':' → logprob: -5.784700870513916
    10. ' >' → logprob: -5.909700870513916

Token 1039: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2851243019104004
    2. '   ' → logprob: -2.9101243019104004
    3. ' ' → logprob: -3.4101243019104004
    4. ' on' → logprob: -3.5351243019104004
    5. '           ' → logprob: -3.6601243019104004
    6. ' s' → logprob: -3.7851243019104004
    7. ' ' → logprob: -4.4101243019104
    8. '               ' → logprob: -4.5351243019104
    9. ':' → logprob: -4.7851243019104
    10. ' #' → logprob: -5.2851243019104

Token 1040: ' peut' (ID: 9216)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.0957917645573616
    2. 'continue' → logprob: -2.595791816711426
    3. 'contin' → logprob: -5.095791816711426
    4. '_continue' → logprob: -6.095791816711426
    5. ' continues' → logprob: -6.220791816711426
    6. '_' → logprob: -6.345791816711426
    7. ' continuer' → logprob: -6.845791816711426
    8. '#' → logprob: -7.470791816711426
    9. '=' → logprob: -7.595791816711426
    10. ' continu' → logprob: -7.845791816711426

Token 1041: ' matcher' (ID: 63436)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.24986375868320465
    2. 'contin' → logprob: -1.7498637437820435
    3. '   ' → logprob: -3.874863862991333
    4. ' continue' → logprob: -4.624863624572754
    5. '       ' → logprob: -4.874863624572754
    6. 'continue' → logprob: -5.624863624572754
    7. ' match' → logprob: -7.124863624572754
    8. ' choisir' → logprob: -7.374863624572754
    9. '    ' → logprob: -7.624863624572754
    10. '           ' → logprob: -7.874863624572754

Token 1042: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0030436515808105
    2. '[' → logprob: -1.1280436515808105
    3. '   ' → logprob: -2.5030436515808105
    4. ')' → logprob: -2.7530436515808105
    5. '=' → logprob: -3.1280436515808105
    6. '```' → logprob: -3.6280436515808105
    7. ' =' → logprob: -4.0030436515808105
    8. '       ' → logprob: -4.2530436515808105
    9. ',' → logprob: -4.3780436515808105
    10. 's' → logprob: -4.7530436515808105

Token 1043: ' saison' (ID: 38158)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.2700564861297607
    2. 's' → logprob: -1.5200564861297607
    3. ' ' → logprob: -2.2700564861297607
    4. ' mots' → logprob: -2.3950564861297607
    5. ' prochains' → logprob: -2.6450564861297607
    6. ' prochain' → logprob: -4.02005672454834
    7. '_' → logprob: -4.27005672454834
    8. ' autres' → logprob: -4.27005672454834
    9. 'next' → logprob: -4.52005672454834
    10. 'a' → logprob: -4.52005672454834

Token 1044: ' words' (ID: 6391)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.6629284024238586
    2. ' _' → logprob: -1.9129283428192139
    3. '_' → logprob: -2.162928342819214
    4. '_word' → logprob: -2.287928342819214
    5. 's' → logprob: -2.787928342819214
    6. 'words' → logprob: -3.037928342819214
    7. '_s' → logprob: -5.162928581237793
    8. ' words' → logprob: -6.287928581237793
    9. 'word' → logprob: -6.787928581237793
    10. ' s' → logprob: -6.912928581237793

Token 1045: ',
' (ID: 412)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1560981273651123
    2. '   ' → logprob: -1.1560981273651123
    3. ',' → logprob: -2.1560981273651123
    4. '       ' → logprob: -2.1560981273651123
    5. '[
' → logprob: -3.4060981273651123
    6. ':' → logprob: -3.9060981273651123
    7. '```' → logprob: -4.031098365783691
    8. ')' → logprob: -4.406098365783691
    9. ',
' → logprob: -4.781098365783691
    10. '=' → logprob: -4.781098365783691

Token 1046: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.089021697640419
    2. '   ' → logprob: -3.464021682739258
    3. ')' → logprob: -3.839021682739258
    4. '           ' → logprob: -5.464021682739258
    5. '               ' → logprob: -5.589021682739258
    6. '\t' → logprob: -5.839021682739258
    7. ' or' → logprob: -6.089021682739258
    8. '[' → logprob: -6.214021682739258
    9. '```' → logprob: -6.214021682739258
    10. ',' → logprob: -6.214021682739258

Token 1047: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07834839820861816
    2. '#' (adapté à ' #') → logprob: -2.703348398208618
    3. '           ' → logprob: -5.828348159790039
    4. ' #' → logprob: -6.703348159790039
    5. 'else' → logprob: -7.078348159790039
    6. '   ' → logprob: -7.328348159790039
    7. 's' → logprob: -7.453348159790039
    8. ' else' → logprob: -7.703348159790039
    9. ' s' → logprob: -8.078348159790039
    10. ',' → logprob: -8.703348159790039

Token 1048: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1660875082015991
    2. ',' → logprob: -1.9160875082015991
    3. ')' → logprob: -2.1660876274108887
    4. '   ' → logprob: -2.5410876274108887
    5. '_' → logprob: -3.0410876274108887
    6. '0' → logprob: -3.1660876274108887
    7. ''' → logprob: -3.4160876274108887
    8. '[' → logprob: -3.6660876274108887
    9. '"' → logprob: -3.7910876274108887
    10. '#' → logprob: -3.9160876274108887

Token 1049: ' on' (ID: 402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35843366384506226
    2. ' s' → logprob: -1.358433723449707
    3. '   ' → logprob: -4.983433723449707
    4. ' K' → logprob: -5.108433723449707
    5. 'season' → logprob: -5.483433723449707
    6. 'None' → logprob: -5.608433723449707
    7. 'none' → logprob: -5.733433723449707
    8. ' None' → logprob: -6.233433723449707
    9. ' season' → logprob: -6.358433723449707
    10. '0' → logprob: -6.358433723449707

Token 1050: ' a' (ID: 261)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.44639715552330017
    2. 's' → logprob: -2.821397066116333
    3. 'continue' → logprob: -2.946397066116333
    4. ' s' → logprob: -3.071397066116333
    5. ' n' → logprob: -3.196397066116333
    6. 'n' → logprob: -3.696397066116333
    7. ' est' → logprob: -3.946397066116333
    8. ' ==' → logprob: -3.946397066116333
    9. '_' → logprob: -4.321397304534912
    10. ' ne' → logprob: -4.571397304534912

Token 1051: ' choisi' (ID: 77245)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0323086977005005
    2. ' pas' → logprob: -2.032308578491211
    3. ' ' → logprob: -2.407308578491211
    4. ' un' → logprob: -2.532308578491211
    5. 's' → logprob: -3.157308578491211
    6. ' ==' → logprob: -3.282308578491211
    7. ' a' → logprob: -3.407308578491211
    8. 'une' → logprob: -3.532308578491211
    9. 'pas' → logprob: -3.907308578491211
    10. ' continu' → logprob: -3.907308578491211

Token 1052: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13056166470050812
    2. ' _' → logprob: -2.630561590194702
    3. '=' → logprob: -4.380561828613281
    4. ' ==' → logprob: -5.255561828613281
    5. 's' → logprob: -5.505561828613281
    6. '[' → logprob: -5.630561828613281
    7. '_s' → logprob: -5.755561828613281
    8. ' ' → logprob: -5.880561828613281
    9. ' un' → logprob: -5.880561828613281
    10. ')' → logprob: -6.755561828613281

Token 1053: ' saison' (ID: 38158)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07979340851306915
    2. ' ' → logprob: -3.7047934532165527
    3. 's' → logprob: -4.579793453216553
    4. ',' → logprob: -4.829793453216553
    5. ' _' → logprob: -5.079793453216553
    6. '[' → logprob: -5.329793453216553
    7. '_s' → logprob: -5.454793453216553
    8. '=' → logprob: -5.954793453216553
    9. ' ,' → logprob: -6.204793453216553
    10. ' s' → logprob: -6.204793453216553

Token 1054: ' word' (ID: 2195)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6479374170303345
    2. '_' → logprob: -0.8979374170303345
    3. '_word' → logprob: -3.647937297821045
    4. 'word' → logprob: -4.147937297821045
    5. ')' → logprob: -4.397937297821045
    6. ' word' → logprob: -4.897937297821045
    7. '[' → logprob: -6.772937297821045
    8. '_words' → logprob: -7.147937297821045
    9. ' )' → logprob: -7.272937297821045
    10. ' ' → logprob: -7.272937297821045

Token 1055: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5392892360687256
    2. '[' → logprob: -1.9142892360687256
    3. ':' → logprob: -2.4142892360687256
    4. ',' → logprob: -2.7892892360687256
    5. '   ' → logprob: -3.5392892360687256
    6. '=' → logprob: -3.7892892360687256
    7. '```' → logprob: -3.7892892360687256
    8. 's' → logprob: -5.039289474487305
    9. '[s' → logprob: -5.789289474487305
    10. '_,' → logprob: -5.914289474487305

Token 1056: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4282182455062866
    2. ')' → logprob: -1.6782182455062866
    3. ',' → logprob: -1.9282182455062866
    4. ':' → logprob: -1.9282182455062866
    5. '[' → logprob: -2.928218364715576
    6. '#' → logprob: -3.178218364715576
    7. ' s' → logprob: -3.303218364715576
    8. ' ' → logprob: -4.053218364715576
    9. '       ' → logprob: -4.178218364715576
    10. '=' → logprob: -4.178218364715576

Token 1057: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2783324122428894
    2. 'continue' → logprob: -1.5283324718475342
    3. 'contin' → logprob: -4.653332233428955
    4. ' continuer' → logprob: -5.278332233428955
    5. ' continues' → logprob: -5.778332233428955
    6. '_continue' → logprob: -6.028332233428955
    7. '=' → logprob: -7.278332233428955
    8. ' continu' → logprob: -7.403332233428955
    9. '   ' → logprob: -7.528332233428955
    10. '[' → logprob: -7.528332233428955

Token 1058: ' veut' (ID: 41653)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9956357479095459
    2. '       ' → logprob: -1.995635747909546
    3. '   ' → logprob: -2.120635747909546
    4. 'continue' → logprob: -2.370635747909546
    5. ' peux' → logprob: -3.745635747909546
    6. 'do' → logprob: -3.745635747909546
    7. ' continue' → logprob: -3.870635747909546
    8. 'can' → logprob: -3.995635747909546
    9. '#' → logprob: -3.995635747909546
    10. '_' → logprob: -3.995635747909546

Token 1059: ' plus' (ID: 2932)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.23689047992229462
    2. ' plus' → logprob: -2.1118905544281006
    3. 'pas' → logprob: -2.4868905544281006
    4. 'plus' → logprob: -5.7368903160095215
    5. '               ' → logprob: -7.4868903160095215
    6. '   ' → logprob: -7.6118903160095215
    7. ' ' → logprob: -7.9868903160095215
    8. ' rien' → logprob: -8.11189079284668
    9. '_pas' → logprob: -8.11189079284668
    10. '           ' → logprob: -8.36189079284668

Token 1060: ' matcher' (ID: 63436)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.096331238746643
    2. ' pas' → logprob: -2.4713311195373535
    3. 'match' → logprob: -2.4713311195373535
    4. ' match' → logprob: -2.4713311195373535
    5. 'pas' → logprob: -2.5963311195373535
    6. 'contin' → logprob: -2.7213311195373535
    7. '_' → logprob: -2.9713311195373535
    8. '_match' → logprob: -2.9713311195373535
    9. '   ' → logprob: -3.2213311195373535
    10. '```' → logprob: -3.3463311195373535

Token 1061: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.074532151222229
    2. '       ' → logprob: -1.324532151222229
    3. '   ' → logprob: -2.0745320320129395
    4. ')' → logprob: -2.0745320320129395
    5. '(
' → logprob: -3.4495320320129395
    6. '_' → logprob: -3.5745320320129395
    7. '(' → logprob: -3.6995320320129395
    8. '[
' → logprob: -4.0745320320129395
    9. ',' → logprob: -4.5745320320129395
    10. ']' → logprob: -5.5745320320129395

Token 1062: ' autre' (ID: 20278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3279385566711426
    2. ' autres' → logprob: -1.9529385566711426
    3. 'aut' → logprob: -1.9529385566711426
    4. 's' → logprob: -2.2029385566711426
    5. 'm' → logprob: -2.5779385566711426
    6. ' mots' → logprob: -3.3279385566711426
    7. '_s' → logprob: -3.4529385566711426
    8. ' mêmes' → logprob: -3.4529385566711426
    9. ' même' → logprob: -3.7029385566711426
    10. ' suivants' → logprob: -4.202938556671143

Token 1063: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.343423455953598
    2. ')' → logprob: -1.4684234857559204
    3. '[' → logprob: -3.093423366546631
    4. ',' → logprob: -5.593423366546631
    5. 's' → logprob: -6.218423366546631
    6. ']' → logprob: -6.218423366546631
    7. '   ' → logprob: -6.468423366546631
    8. 'def' → logprob: -6.843423366546631
    9. '#' → logprob: -7.343423366546631
    10. '[
' → logprob: -7.343423366546631

Token 1064: ' vérifier' (ID: 93671)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.1501197814941406
    2. ' pas' → logprob: -2.0251197814941406
    3. 'pas' → logprob: -2.0251197814941406
    4. ' continue' → logprob: -2.4001197814941406
    5. '#' → logprob: -2.7751197814941406
    6. '   ' → logprob: -3.2751197814941406
    7. 'contin' → logprob: -3.4001197814941406
    8. 's' → logprob: -3.6501197814941406
    9. 'continue' → logprob: -3.7751197814941406
    10. ' ne' → logprob: -3.9001197814941406

Token 1065: ' que' (ID: 661)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7557023167610168
    2. '       ' → logprob: -1.630702257156372
    3. '[' → logprob: -2.130702257156372
    4. '   ' → logprob: -2.255702257156372
    5. '```' → logprob: -4.005702495574951
    6. 'def' → logprob: -4.255702495574951
    7. ' _' → logprob: -4.505702495574951
    8. ' ' → logprob: -5.130702495574951
    9. '=' → logprob: -5.505702495574951
    10. '    ' → logprob: -5.630702495574951

Token 1066: ' c' (ID: 274)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.568108320236206
    2. ' le' → logprob: -1.818108320236206
    3. ' la' → logprob: -1.943108320236206
    4. 'l' → logprob: -2.443108320236206
    5. ' on' → logprob: -2.693108320236206
    6. 'la' → logprob: -3.068108320236206
    7. 'nous' → logprob: -3.318108320236206
    8. ' l' → logprob: -3.443108320236206
    9. ' the' → logprob: -3.443108320236206
    10. ' nous' → logprob: -3.568108320236206

Token 1067: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9949911236763
    2. ' n' → logprob: -1.2449910640716553
    3. ''est' → logprob: -2.4949910640716553
    4. 'e' → logprob: -2.4949910640716553
    5. 'n' → logprob: -2.6199910640716553
    6. 'ont' → logprob: -3.9949910640716553
    7. ''e' → logprob: -4.369991302490234
    8. ' ne' → logprob: -4.494991302490234
    9. 'a' → logprob: -4.619991302490234
    10. '_' → logprob: -4.619991302490234

Token 1068: ' une' (ID: 2463)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.9590461850166321
    2. 'pas' → logprob: -1.5840461254119873
    3. 'possible' → logprob: -2.3340461254119873
    4. ' possible' → logprob: -2.3340461254119873
    5. '0' → logprob: -3.5840461254119873
    6. 'strict' → logprob: -3.5840461254119873
    7. ' correct' → logprob: -3.7090461254119873
    8. ' bien' → logprob: -4.209046363830566
    9. 'une' → logprob: -4.334046363830566
    10. ' strict' → logprob: -4.584046363830566

Token 1069: ' seule' (ID: 41983)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.843884289264679
    2. ' match' → logprob: -2.093884229660034
    3. ' single' → logprob: -2.593884229660034
    4. ' space' → logprob: -2.843884229660034
    5. ' ' → logprob: -3.218884229660034
    6. 'match' → logprob: -3.593884229660034
    7. ' unique' → logprob: -3.593884229660034
    8. 's' → logprob: -3.968884229660034
    9. 'n' → logprob: -3.968884229660034
    10. 'space' → logprob: -4.218884468078613

Token 1070: ' apparition' (ID: 199609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14585743844509125
    2. '   ' → logprob: -2.895857334136963
    3. '[' → logprob: -3.020857334136963
    4. ',' → logprob: -4.895857334136963
    5. ')' → logprob: -5.020857334136963
    6. '_' → logprob: -5.270857334136963
    7. '[
' → logprob: -6.020857334136963
    8. '[pos' → logprob: -6.270857334136963
    9. '        
' → logprob: -7.020857334136963
    10. '	' → logprob: -7.645857334136963

Token 1071: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0972512885928154
    2. '   ' → logprob: -3.5972511768341064
    3. ')' → logprob: -4.9722514152526855
    4. '"' → logprob: -5.2222514152526855
    5. '[' → logprob: -5.2222514152526855
    6. ',' → logprob: -5.3472514152526855
    7. '\' → logprob: -5.4722514152526855
    8. ':' → logprob: -5.4722514152526855
    9. '        
' → logprob: -5.7222514152526855
    10. '[
' → logprob: -5.8472514152526855

Token 1072: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017513031139969826
    2. '   ' → logprob: -5.267512798309326
    3. '[' → logprob: -6.017512798309326
    4. ',' → logprob: -6.267512798309326
    5. '           ' → logprob: -6.642512798309326
    6. '        
' → logprob: -6.642512798309326
    7. ')' → logprob: -6.892512798309326
    8. '\' → logprob: -7.267512798309326
    9. '(' → logprob: -7.767512798309326
    10. '        ' → logprob: -8.142513275146484

Token 1073: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008436443284153938
    2. 'dp' → logprob: -5.133436679840088
    3. 'from' → logprob: -6.883436679840088
    4. '```' → logprob: -8.13343620300293
    5. '   ' → logprob: -8.25843620300293
    6. '
' → logprob: -8.38343620300293
    7. '        
' → logprob: -8.50843620300293
    8. 'for' → logprob: -9.25843620300293
    9. '	' → logprob: -9.25843620300293
    10. 'max' → logprob: -9.88343620300293

Token 1074: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5933734774589539
    2. 'from' → logprob: -1.9683735370635986
    3. 'words' → logprob: -2.5933735370635986
    4. 'dp' → logprob: -2.5933735370635986
    5. 'for' → logprob: -2.7183735370635986
    6. 'max' → logprob: -4.2183732986450195
    7. 'if' → logprob: -4.3433732986450195
    8. '#' → logprob: -4.5933732986450195
    9. '
' → logprob: -5.0933732986450195
    10. 'pos' → logprob: -5.2183732986450195

Token 1075: ' ne' (ID: 453)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4284777641296387
    2. 'l' → logprob: -1.4284777641296387
    3. 'pos' → logprob: -1.5534777641296387
    4. ' l' → logprob: -3.3034777641296387
    5. ' i' → logprob: -3.3034777641296387
    6. 'state' → logprob: -3.4284777641296387
    7. 's' → logprob: -3.6784777641296387
    8. ' la' → logprob: -3.6784777641296387
    9. 'K' → logprob: -4.053477764129639
    10. 'word' → logprob: -4.178477764129639

Token 1076: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.41138091683387756
    2. '       ' → logprob: -1.7863808870315552
    3. ' pas' → logprob: -1.9113808870315552
    4. '   ' → logprob: -4.161380767822266
    5. 't' → logprob: -5.911380767822266
    6. '
' → logprob: -6.786380767822266
    7. '_pas' → logprob: -7.411380767822266
    8. '#' → logprob: -8.411380767822266
    9. '           ' → logprob: -8.536380767822266
    10. '\t' → logprob: -8.786380767822266

Token 1077: ' expl' (ID: 3421)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.400625467300415
    2. 'pas' → logprob: -1.650625467300415
    3. 'contin' → logprob: -1.900625467300415
    4. '   ' → logprob: -2.400625467300415
    5. '       ' → logprob: -2.525625467300415
    6. '```' → logprob: -3.525625467300415
    7. 'faire' → logprob: -3.775625467300415
    8. 's' → logprob: -4.150625228881836
    9. 'import' → logprob: -4.150625228881836
    10. 'stock' → logprob: -4.400625228881836

Token 1078: 'ose' (ID: 918)
  Prédit: 'orer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orer' → logprob: -0.15438057482242584
    2. 'iquer' → logprob: -3.2793805599212646
    3. 'ore' → logprob: -4.029380798339844
    4. 'q' → logprob: -4.029380798339844
    5. '```' → logprob: -4.029380798339844
    6. 'r' → logprob: -4.654380798339844
    7. 'iter' → logprob: -4.904380798339844
    8. 'uire' → logprob: -5.154380798339844
    9. '       ' → logprob: -6.029380798339844
    10. '#' → logprob: -6.154380798339844

Token 1079: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1769745349884033
    2. '       ' → logprob: -1.5519745349884033
    3. ' ' → logprob: -2.1769745349884033
    4. '[' → logprob: -2.3019745349884033
    5. 'n' → logprob: -2.8019745349884033
    6. 'r' → logprob: -3.3019745349884033
    7. '    ' → logprob: -4.301974296569824
    8. ')' → logprob: -4.426974296569824
    9. 'd' → logprob: -4.551974296569824
    10. ''' → logprob: -4.676974296569824

Token 1080: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19469238817691803
    2. '#' → logprob: -2.319692373275757
    3. '   ' → logprob: -3.444692373275757
    4. 'dp' → logprob: -4.069692611694336
    5. 'import' → logprob: -5.319692611694336
    6. 'from' → logprob: -5.319692611694336
    7. 'continue' → logprob: -5.444692611694336
    8. '
' → logprob: -6.569692611694336
    9. '...' → logprob: -6.944692611694336
    10. '           ' → logprob: -7.069692611694336

Token 1081: ' combine' (ID: 21700)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.46916264295578003
    2. ' continue' → logprob: -2.469162702560425
    3. 'import' → logprob: -2.719162702560425
    4. 'contin' → logprob: -2.844162702560425
    5. 'def' → logprob: -3.469162702560425
    6. 'from' → logprob: -3.969162702560425
    7. '#' → logprob: -4.219162464141846
    8. 'util' → logprob: -4.469162464141846
    9. '       ' → logprob: -4.594162464141846
    10. 'use' → logprob: -4.719162464141846

Token 1082: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3127506971359253
    2. '_' → logprob: -3.062750816345215
    3. '[' → logprob: -3.437750816345215
    4. ')' → logprob: -3.437750816345215
    5. 'def' → logprob: -4.312750816345215
    6. ' _' → logprob: -4.312750816345215
    7. ']' → logprob: -4.437750816345215
    8. '[
' → logprob: -4.562750816345215
    9. '       ' → logprob: -4.812750816345215
    10. ' next' → logprob: -4.812750816345215

Token 1083: ' états' (ID: 184259)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.9745535254478455
    2. 'next' → logprob: -1.2245535850524902
    3. '#' → logprob: -2.4745535850524902
    4. 'keys' → logprob: -2.8495535850524902
    5. 'state' → logprob: -3.0995535850524902
    6. ' next' → logprob: -3.3495535850524902
    7. 'indices' → logprob: -4.47455358505249
    8. 'pattern' → logprob: -4.84955358505249
    9. 's' → logprob: -4.97455358505249
    10. 'et' → logprob: -5.09955358505249

Token 1084: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040743425488471985
    2. '   ' → logprob: -3.915743350982666
    3. ')' → logprob: -6.415743350982666
    4. '[' → logprob: -6.415743350982666
    5. '[
' → logprob: -6.415743350982666
    6. '\t' → logprob: -6.540743350982666
    7. ',' → logprob: -6.665743350982666
    8. '        
' → logprob: -6.665743350982666
    9. '\' → logprob: -6.790743350982666
    10. '```' → logprob: -6.915743350982666

Token 1085: ' autom' (ID: 5099)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -1.0901485681533813
    2. 'autom' → logprob: -1.3401485681533813
    3. 'dp' → logprob: -1.9651485681533813
    4. 'pattern' → logprob: -2.965148448944092
    5. 'next' → logprob: -3.340148448944092
    6. 'k' → logprob: -3.715148448944092
    7. 'K' → logprob: -3.840148448944092
    8. 'mot' → logprob: -4.090148448944092
    9. 'season' → logprob: -4.090148448944092
    10. 's' → logprob: -4.090148448944092

Token 1086: 'ates' (ID: 1381)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.6379014253616333
    2. 'ates' → logprob: -0.7629014253616333
    3. 'state' → logprob: -7.512901306152344
    4. 'ata' → logprob: -7.637901306152344
    5. '```' → logprob: -7.637901306152344
    6. 'at' → logprob: -7.762901306152344
    7. 'states' → logprob: -7.762901306152344
    8. '{
' → logprob: -8.012901306152344
    9. '
' → logprob: -8.387901306152344
    10. '``' → logprob: -8.387901306152344

Token 1087: ' K' (ID: 658)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46574845910072327
    2. '   ' → logprob: -1.3407484292984009
    3. '[' → logprob: -3.2157485485076904
    4. '[
' → logprob: -4.340748310089111
    5. 'def' → logprob: -4.465748310089111
    6. '(
' → logprob: -4.590748310089111
    7. '\' → logprob: -5.465748310089111
    8. '(' → logprob: -5.465748310089111
    9. '\t' → logprob: -5.465748310089111
    10. ')' → logprob: -5.590748310089111

Token 1088: 'MP' (ID: 9125)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.41749829053878784
    2. '+' → logprob: -3.2924983501434326
    3. '_next' → logprob: -3.4174983501434326
    4. 'w' → logprob: -3.6674983501434326
    5. ')' → logprob: -4.1674981117248535
    6. '_' → logprob: -4.1674981117248535
    7. '#' → logprob: -4.1674981117248535
    8. '[' → logprob: -4.2924981117248535
    9. ' combined' → logprob: -4.6674981117248535
    10. '_comb' → logprob: -4.7924981117248535

Token 1089: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025050343945622444
    2. '   ' → logprob: -4.900050163269043
    3. '#' → logprob: -5.775050163269043
    4. 'from' → logprob: -6.275050163269043
    5. '        
' → logprob: -6.650050163269043
    6. 'words' → logprob: -6.900050163269043
    7. ')' → logprob: -7.025050163269043
    8. 'word' → logprob: -7.025050163269043
    9. ',' → logprob: -7.150050163269043
    10. 'import' → logprob: -7.275050163269043

Token 1090: ' un' (ID: 537)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8866952657699585
    2. 'tu' → logprob: -1.5116952657699585
    3. 'un' → logprob: -2.136695384979248
    4. 'tuple' → logprob: -2.386695384979248
    5. 'la' → logprob: -2.636695384979248
    6. 'une' → logprob: -3.136695384979248
    7. 'one' → logprob: -4.136695384979248
    8. 'the' → logprob: -5.136695384979248
    9. 'def' → logprob: -5.761695384979248
    10. 'le' → logprob: -5.761695384979248

Token 1091: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.005464625079184771
    2. ' tuple' → logprob: -5.880464553833008
    3. 'deque' → logprob: -7.255464553833008
    4. 'list' → logprob: -7.630464553833008
    5. 'single' → logprob: -7.880464553833008
    6. 'dict' → logprob: -8.380464553833008
    7. 'def' → logprob: -8.630464553833008
    8. 'from' → logprob: -8.755464553833008
    9. 'vector' → logprob: -9.130464553833008
    10. 'compressed' → logprob: -9.255464553833008

Token 1092: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2624629735946655
    2. '   ' → logprob: -1.8874629735946655
    3. ':' → logprob: -4.137463092803955
    4. '(
' → logprob: -5.012463092803955
    5. '[' → logprob: -5.137463092803955
    6. '(' → logprob: -5.137463092803955
    7. 'def' → logprob: -5.262463092803955
    8. '```' → logprob: -5.262463092803955
    9. ',' → logprob: -5.512463092803955
    10. ')' → logprob: -5.887463092803955

Token 1093: 'ét' (ID: 3913)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007731554098427296
    2. '(
' → logprob: -5.8827314376831055
    3. ')
' → logprob: -6.7577314376831055
    4. '0' → logprob: -7.7577314376831055
    5. 'next' → logprob: -8.132731437683105
    6. 'len' → logprob: -8.382731437683105
    7. '   ' → logprob: -8.507731437683105
    8. '(' → logprob: -8.632731437683105
    9. '(word' → logprob: -8.632731437683105
    10. 'state' → logprob: -8.757731437683105

Token 1094: 'ats' (ID: 1838)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.10577385872602463
    2. 'up' → logprob: -3.85577392578125
    3. 'uple' → logprob: -3.85577392578125
    4. ')' → logprob: -4.10577392578125
    5. 'ab' → logprob: -5.10577392578125
    6. ']' → logprob: -5.60577392578125
    7. '_' → logprob: -5.60577392578125
    8. ',' → logprob: -5.73077392578125
    9. 'à' → logprob: -5.85577392578125
    10. '[' → logprob: -5.98077392578125

Token 1095: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5307717323303223
    2. ',' → logprob: -1.6557717323303223
    3. '=' → logprob: -3.0307717323303223
    4. '),' → logprob: -3.1557717323303223
    5. ',
' → logprob: -3.2807717323303223
    6. '_' → logprob: -4.030771732330322
    7. 's' → logprob: -4.155771732330322
    8. '(tuple' → logprob: -4.280771732330322
    9. '):
' → logprob: -5.280771732330322
    10. '
' → logprob: -5.405771732330322

Token 1096: ' chaque' (ID: 21194)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.6525555849075317
    2. 'each' → logprob: -1.7775555849075317
    3. ' chaque' → logprob: -2.402555465698242
    4. 'range' → logprob: -2.402555465698242
    5. 'cha' → logprob: -3.277555465698242
    6. ' range' → logprob: -4.277555465698242
    7. 'k' → logprob: -4.527555465698242
    8. 'all' → logprob: -4.527555465698242
    9. '0' → logprob: -4.652555465698242
    10. 'c' → logprob: -5.027555465698242

Token 1097: ' saison' (ID: 38158)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.8901663422584534
    2. 's' → logprob: -1.8901662826538086
    3. 'season' → logprob: -1.8901662826538086
    4. ' saison' → logprob: -2.3901662826538086
    5. ' pattern' → logprob: -2.7651662826538086
    6. ')' → logprob: -2.7651662826538086
    7. ' season' → logprob: -3.6401662826538086
    8. 'pat' → logprob: -4.515166282653809
    9. 'autom' → logprob: -4.515166282653809
    10. 'k' → logprob: -5.640166282653809

Token 1098: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.4621604382991791
    2. '_word' → logprob: -1.3371604681015015
    3. '_words' → logprob: -3.087160348892212
    4. ')' → logprob: -3.587160348892212
    5. ' _' → logprob: -4.337160587310791
    6. 'words' → logprob: -4.962160587310791
    7. ' word' → logprob: -5.212160587310791
    8. ']' → logprob: -5.587160587310791
    9. '_' → logprob: -6.587160587310791
    10. ')
' → logprob: -6.712160587310791

Token 1099: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21338032186031342
    2. ',' → logprob: -2.7133803367614746
    3. '_' → logprob: -3.3383803367614746
    4. ')_' → logprob: -3.3383803367614746
    5. '):' → logprob: -4.588380336761475
    6. 's' → logprob: -5.088380336761475
    7. '```' → logprob: -5.213380336761475
    8. '),' → logprob: -5.588380336761475
    9. '_states' → logprob: -5.963380336761475
    10. '   ' → logprob: -6.088380336761475

Token 1100: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8749693632125854
    2. '       ' → logprob: -0.9999693632125854
    3. '   ' → logprob: -2.749969482421875
    4. ',
' → logprob: -3.124969482421875
    5. '_' → logprob: -4.124969482421875
    6. ')' → logprob: -4.249969482421875
    7. '#' → logprob: -4.374969482421875
    8. 'state' → logprob: -4.874969482421875
    9. '
' → logprob: -5.374969482421875
    10. '```' → logprob: -5.499969482421875

Token 1101: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07548795640468597
    2. '   ' → logprob: -3.3254878520965576
    3. ',' → logprob: -5.075488090515137
    4. '[' → logprob: -5.700488090515137
    5. ')' → logprob: -5.700488090515137
    6. '(' → logprob: -5.825488090515137
    7. '(
' → logprob: -5.825488090515137
    8. ',
' → logprob: -5.950488090515137
    9. '```' → logprob: -6.450488090515137
    10. '#' (adapté à ' #') → logprob: -6.700488090515137

Token 1102: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5041073560714722
    2. '       ' → logprob: -1.7541073560714722
    3. '(
' → logprob: -3.5041074752807617
    4. 'state' → logprob: -3.6291074752807617
    5. ',' → logprob: -4.129107475280762
    6. ')' → logprob: -4.629107475280762
    7. '(' → logprob: -4.629107475280762
    8. ' next' → logprob: -4.754107475280762
    9. '\t' → logprob: -4.879107475280762
    10. '[' → logprob: -4.879107475280762

Token 1103: ' limit' (ID: 5967)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6957182288169861
    2. ' continue' → logprob: -1.6957182884216309
    3. 'append' → logprob: -2.945718288421631
    4. '#' → logprob: -3.195718288421631
    5. '   ' → logprob: -3.820718288421631
    6. '_' → logprob: -3.945718288421631
    7. '
' → logprob: -4.070718288421631
    8. '=' → logprob: -4.070718288421631
    9. 'contin' → logprob: -4.195718288421631
    10. 'def' → logprob: -4.195718288421631

Token 1104: 'era' (ID: 2060)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4376561939716339
    2. 'e' → logprob: -1.1876561641693115
    3. 'er' → logprob: -4.187656402587891
    4. 'ée' → logprob: -4.437656402587891
    5. '=' → logprob: -4.812656402587891
    6. 'ons' → logprob: -5.312656402587891
    7. 'és' → logprob: -5.812656402587891
    8. 'ed' → logprob: -6.562656402587891
    9. 'es' → logprob: -6.937656402587891
    10. 'ite' → logprob: -7.062656402587891

Token 1105: ' K' (ID: 658)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.5563480854034424
    2. '=' → logprob: -1.8063480854034424
    3. 'l' → logprob: -2.1813480854034424
    4. 'the' → logprob: -2.3063480854034424
    5. ' la' → logprob: -2.5563480854034424
    6. 'max' → logprob: -2.9313480854034424
    7. ' the' → logprob: -2.9313480854034424
    8. '   ' → logprob: -3.0563480854034424
    9. ' =' → logprob: -3.3063480854034424
    10. 'le' → logprob: -3.6813480854034424

Token 1106: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6686208844184875
    2. '   ' → logprob: -1.0436208248138428
    3. '[' → logprob: -3.5436208248138428
    4. '=' → logprob: -3.6686208248138428
    5. ' =' → logprob: -3.9186208248138428
    6. ',' → logprob: -4.293621063232422
    7. ')' → logprob: -4.543621063232422
    8. '\t' → logprob: -5.168621063232422
    9. '(
' → logprob: -5.668621063232422
    10. '[
' → logprob: -5.668621063232422

Token 1107: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.39124664664268494
    2. '10' → logprob: -1.5162466764450073
    3. '15' → logprob: -2.7662465572357178
    4. '21' → logprob: -3.7662465572357178
    5. '30' → logprob: -5.016246795654297
    6. '1' → logprob: -6.141246795654297
    7. '16' → logprob: -6.266246795654297
    8. '5' → logprob: -6.516246795654297
    9. '11' → logprob: -6.766246795654297
    10. '12' → logprob: -6.891246795654297

Token 1108: '30' (ID: 1130)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2629873752593994
    2. '1' → logprob: -1.5129873752593994
    3. '20' → logprob: -1.6379873752593994
    4. '30' → logprob: -2.2629873752593994
    5. '15' → logprob: -3.1379873752593994
    6. '3' → logprob: -3.3879873752593994
    7. '21' → logprob: -3.3879873752593994
    8. 'K' → logprob: -3.5129873752593994
    9. '5' → logprob: -4.01298713684082
    10. 'len' → logprob: -4.88798713684082

Token 1109: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6660969257354736
    2. '   ' → logprob: -0.9160969257354736
    3. '\t' → logprob: -4.2910966873168945
    4. ')' → logprob: -4.5410966873168945
    5. '[
' → logprob: -4.5410966873168945
    6. 'def' → logprob: -4.5410966873168945
    7. '[' → logprob: -4.7910966873168945
    8. 'import' → logprob: -5.4160966873168945
    9. 'from' → logprob: -5.7910966873168945
    10. '```' → logprob: -5.7910966873168945

Token 1110: ' longue' (ID: 59564)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.0115092992782593
    2. 'max' → logprob: -1.6365092992782593
    3. '20' → logprob: -1.8865092992782593
    4. 'm' → logprob: -2.761509418487549
    5. 'len' → logprob: -2.761509418487549
    6. ' M' → logprob: -3.511509418487549
    7. ' max' → logprob: -3.636509418487549
    8. '
' → logprob: -3.761509418487549
    9. '21' → logprob: -4.386509418487549
    10. ' ' → logprob: -4.886509418487549

Token 1111: 'urs' (ID: 1628)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.5809513926506042
    2. 'ueur' → logprob: -0.8309513926506042
    3. 'r' → logprob: -6.58095121383667
    4. 'eur' → logprob: -6.95595121383667
    5. '```' → logprob: -7.45595121383667
    6. '#' → logprob: -8.080951690673828
    7. 'urs' → logprob: -8.080951690673828
    8. '
' → logprob: -8.580951690673828
    9. 'reur' → logprob: -8.580951690673828
    10. 'ue' → logprob: -8.955951690673828

Token 1112: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.87581467628479
    2. '_max' → logprob: -2.00081467628479
    3. 'max' → logprob: -2.50081467628479
    4. '   ' → logprob: -2.50081467628479
    5. ' =' → logprob: -3.00081467628479
    6. ']' → logprob: -3.00081467628479
    7. '_' → logprob: -3.12581467628479
    8. '```' → logprob: -3.12581467628479
    9. '
' → logprob: -3.25081467628479
    10. ')' → logprob: -3.37581467628479

Token 1113: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.168117642402649
    2. 'def' → logprob: -1.668117642402649
    3. '   ' → logprob: -2.1681175231933594
    4. ']' → logprob: -2.6681175231933594
    5. '=' → logprob: -2.7931175231933594
    6. '_' → logprob: -2.9181175231933594
    7. ' =' → logprob: -3.7931175231933594
    8. ',' → logprob: -4.168117523193359
    9. '       ' → logprob: -4.168117523193359
    10. '[' → logprob: -4.293117523193359

Token 1114: '20' (ID: 455)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06650098413228989
    2. '20' → logprob: -3.1915009021759033
    3. '```' → logprob: -5.066501140594482
    4. 'of' → logprob: -5.941501140594482
    5. '=
' → logprob: -6.066501140594482
    6. '21' → logprob: -6.316501140594482
    7. 'for' → logprob: -6.316501140594482
    8. 's' → logprob: -6.316501140594482
    9. '30' → logprob: -6.941501140594482
    10. '(' → logprob: -7.066501140594482

Token 1115: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4769279956817627
    2. '   ' → logprob: -1.1019279956817627
    3. ':' → logprob: -4.726927757263184
    4. '[' → logprob: -4.851927757263184
    5. '):' → logprob: -5.601927757263184
    6. ')' → logprob: -5.851927757263184
    7. '
' → logprob: -6.101927757263184
    8. '    
' → logprob: -6.101927757263184
    9. '        
' → logprob: -6.226927757263184
    10. 'def' → logprob: -6.476927757263184

Token 1116: ''est' (ID: 6616)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5107016563415527
    2. 'ont' → logprob: -1.5107016563415527
    3. '```' → logprob: -2.6357016563415527
    4. 'har' → logprob: -3.7607016563415527
    5. '=' → logprob: -4.135701656341553
    6. ')' → logprob: -4.635701656341553
    7. '   ' → logprob: -5.010701656341553
    8. 'om' → logprob: -5.135701656341553
    9. '+' → logprob: -5.385701656341553
    10. '#' → logprob: -5.385701656341553

Token 1117: ' plus' (ID: 2932)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6944548487663269
    2. 'possible' → logprob: -1.9444549083709717
    3. '```' → logprob: -2.1944549083709717
    4. ')' → logprob: -2.8194549083709717
    5. ' possible' → logprob: -3.1944549083709717
    6. '\t' → logprob: -3.5694549083709717
    7. '<|end|>' → logprob: -3.9444549083709717
    8. '   ' → logprob: -4.694454669952393
    9. ' feasible' → logprob: -5.069454669952393
    10. '...' → logprob: -5.319454669952393

Token 1118: ' ou' (ID: 2031)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4252138137817383
    2. ')' → logprob: -2.0502138137817383
    3. '   ' → logprob: -2.8002138137817383
    4. ']' → logprob: -3.6752138137817383
    5. '       ' → logprob: -3.9252138137817383
    6. '0' → logprob: -4.175213813781738
    7. '
' → logprob: -4.550213813781738
    8. 'import' → logprob: -4.550213813781738
    9. '*' → logprob: -4.925213813781738
    10. '**' → logprob: -5.175213813781738

Token 1119: ' moins' (ID: 15924)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.156996726989746
    2. '100' → logprob: -1.406996726989746
    3. '#' → logprob: -2.531996726989746
    4. '```' → logprob: -2.531996726989746
    5. 'moins' → logprob: -2.656996726989746
    6. '1' → logprob: -3.281996726989746
    7. 'que' → logprob: -3.531996726989746
    8. 'près' → logprob: -3.656996726989746
    9. 'u' → logprob: -3.656996726989746
    10. 'long' → logprob: -4.406996726989746

Token 1120: ' possible' (ID: 4149)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17314685881137848
    2. '```' → logprob: -2.173146963119507
    3. ')' → logprob: -4.173146724700928
    4. '20' → logprob: -4.798146724700928
    5. '   ' → logprob: -5.673146724700928
    6. ']' → logprob: -5.798146724700928
    7. '
' → logprob: -5.923146724700928
    8. '):' → logprob: -6.048146724700928
    9. '``' → logprob: -6.423146724700928
    10. '       ' → logprob: -6.548146724700928

Token 1121: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016410628333687782
    2. '   ' → logprob: -5.266410827636719
    3. '        
' → logprob: -6.141410827636719
    4. '
' → logprob: -6.391410827636719
    5. '```' → logprob: -7.266410827636719
    6. '#' → logprob: -7.266410827636719
    7. 'def' → logprob: -7.391410827636719
    8. 'dp' → logprob: -7.641410827636719
    9. '[' → logprob: -8.016410827636719
    10. ')' → logprob: -8.141410827636719

Token 1122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005725182592868805
    2. '   ' → logprob: -5.505725383758545
    3. '
' → logprob: -7.755725383758545
    4. '        
' → logprob: -8.005724906921387
    5. '```' → logprob: -8.130724906921387
    6. ',' → logprob: -8.880724906921387
    7. '	' → logprob: -9.380724906921387
    8. '#' → logprob: -10.005724906921387
    9. '           ' → logprob: -10.130724906921387
    10. '    
' → logprob: -10.505724906921387

Token 1123: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017646444961428642
    2. 'from' → logprob: -5.142646312713623
    3. '```' → logprob: -6.017646312713623
    4. '
' → logprob: -6.142646312713623
    5. '   ' → logprob: -6.642646312713623
    6. '#' (adapté à ' #') → logprob: -6.767646312713623
    7. 'max' → logprob: -6.892646312713623
    8. 'dp' → logprob: -7.267646312713623
    9. '        
' → logprob: -7.517646312713623
    10. 'import' → logprob: -7.767646312713623

Token 1124: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24126404523849487
    2. 'dp' → logprob: -1.8662641048431396
    3. 'from' → logprob: -3.9912641048431396
    4. 'max' → logprob: -4.6162638664245605
    5. 'state' → logprob: -4.8662638664245605
    6. '   ' → logprob: -4.8662638664245605
    7. 'states' → logprob: -4.8662638664245605
    8. '#' → logprob: -6.3662638664245605
    9. '
' → logprob: -6.6162638664245605
    10. 'import' → logprob: -6.9912638664245605

Token 1125: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21813592314720154
    2. '#' → logprob: -2.0931358337402344
    3. '   ' → logprob: -3.7181358337402344
    4. '
' → logprob: -3.9681358337402344
    5. ')' → logprob: -5.343135833740234
    6. '...' → logprob: -5.718135833740234
    7. 'import' → logprob: -6.218135833740234
    8. '           ' → logprob: -6.343135833740234
    9. '[' → logprob: -6.343135833740234
    10. ' #' → logprob: -6.468135833740234

Token 1126: '21' (ID: 2040)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.736121416091919
    2. 'max' → logprob: -1.861121416091919
    3. '#' → logprob: -2.236121416091919
    4. '(' → logprob: -2.611121416091919
    5. 'K' → logprob: -3.611121416091919
    6. '   ' → logprob: -3.611121416091919
    7. 'len' → logprob: -3.736121416091919
    8. 'from' → logprob: -3.861121416091919
    9. '
' → logprob: -4.23612117767334
    10. 'def' → logprob: -4.23612117767334

Token 1127: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.05294795334339142
    2. ']' → logprob: -3.802947998046875
    3. ')' → logprob: -4.677947998046875
    4. '^' → logprob: -5.427947998046875
    5. '[' → logprob: -5.552947998046875
    6. ' **' → logprob: -6.052947998046875
    7. '
' → logprob: -6.177947998046875
    8. '```' → logprob: -6.552947998046875
    9. '[
' → logprob: -6.927947998046875
    10. '*' → logprob: -7.177947998046875

Token 1128: '30' (ID: 1130)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8265596628189087
    2. '0' → logprob: -1.0765596628189087
    3. '(
' → logprob: -2.326559543609619
    4. '[' → logprob: -3.326559543609619
    5. ')' → logprob: -3.326559543609619
    6. '1' → logprob: -4.701559543609619
    7. '[
' → logprob: -4.826559543609619
    8. '21' → logprob: -5.076559543609619
    9. '30' → logprob: -5.701559543609619
    10. '20' → logprob: -5.951559543609619

Token 1129: ' out' (ID: 842)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9513965845108032
    2. '<|end|>' → logprob: -1.8263965845108032
    3. '[' → logprob: -1.9513965845108032
    4. ']' → logprob: -2.0763964653015137
    5. '...' → logprob: -2.5763964653015137
    6. '[
' → logprob: -3.2013964653015137
    7. '#' → logprob: -4.201396465301514
    8. '<|end|>' → logprob: -4.326396465301514
    9. '
' → logprob: -4.826396465301514
    10. '**' → logprob: -4.951396465301514

Token 1130: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07722004503011703
    2. '   ' → logprob: -3.0772199630737305
    3. '[' → logprob: -4.9522199630737305
    4. ':' → logprob: -5.3272199630737305
    5. '           ' → logprob: -6.0772199630737305
    6. '[
' → logprob: -6.0772199630737305
    7. '):' → logprob: -6.4522199630737305
    8. ',' → logprob: -6.5772199630737305
    9. ')' → logprob: -6.7022199630737305
    10. '\t' → logprob: -7.4522199630737305

Token 1131: ' question' (ID: 4928)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49877509474754333
    2. '[' → logprob: -1.6237751245498657
    3. '       ' → logprob: -2.873775005340576
    4. '"' → logprob: -3.498775005340576
    5. '[
' → logprob: -3.623775005340576
    6. ')' → logprob: -4.123775005340576
    7. ''' → logprob: -4.373775005340576
    8. ']' → logprob: -4.998775005340576
    9. '_' → logprob: -5.498775005340576
    10. ' "' → logprob: -5.748775005340576

Token 1132: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01867179572582245
    2. '...' → logprob: -5.018671989440918
    3. ')' → logprob: -6.268671989440918
    4. '        
' → logprob: -6.268671989440918
    5. '   ' → logprob: -6.518671989440918
    6. '[' → logprob: -6.518671989440918
    7. ',' → logprob: -7.268671989440918
    8. '#' → logprob: -7.393671989440918
    9. '[
' → logprob: -7.643671989440918
    10. '```' → logprob: -8.143671989440918

Token 1133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6473895907402039
    2. '(
' → logprob: -2.6473896503448486
    3. '   ' → logprob: -2.7723896503448486
    4. '(' → logprob: -2.8973896503448486
    5. '[' → logprob: -2.8973896503448486
    6. '`' → logprob: -3.1473896503448486
    7. ')' → logprob: -3.7723896503448486
    8. '```' → logprob: -3.7723896503448486
    9. '\' → logprob: -3.8973896503448486
    10. '[
' → logprob: -4.0223894119262695

Token 1134: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03281579539179802
    2. 'from' → logprob: -4.282815933227539
    3. 'dp' → logprob: -5.157815933227539
    4. 'state' → logprob: -5.407815933227539
    5. '#' (adapté à ' #') → logprob: -5.782815933227539
    6. '   ' → logprob: -6.782815933227539
    7. 'max' → logprob: -6.782815933227539
    8. 'import' → logprob: -7.032815933227539
    9. 'states' → logprob: -7.157815933227539
    10. '
' → logprob: -8.032815933227539

Token 1135: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5664400458335876
    2. 'from' → logprob: -1.1914401054382324
    3. '#' → logprob: -3.1914401054382324
    4. 'import' → logprob: -3.6914401054382324
    5. 'words' → logprob: -3.8164401054382324
    6. 'patterns' → logprob: -5.191440105438232
    7. 'tokens' → logprob: -5.566440105438232
    8. 'dp' → logprob: -5.691440105438232
    9. 'lines' → logprob: -6.191440105438232
    10. 'if' → logprob: -6.316440105438232

Token 1136: ' suivant' (ID: 68705)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8303338289260864
    2. 'from' → logprob: -0.9553338289260864
    3. 'continue' → logprob: -2.330333709716797
    4. 'import' → logprob: -3.580333709716797
    5. 'def' → logprob: -4.080333709716797
    6. 'contin' → logprob: -4.580333709716797
    7. 'vais' → logprob: -4.830333709716797
    8. '
' → logprob: -5.705333709716797
    9. '       ' → logprob: -6.205333709716797
    10. 'will' → logprob: -6.705333709716797

Token 1137: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2650104761123657
    2. 'def' → logprob: -1.3900104761123657
    3. '       ' → logprob: -1.6400104761123657
    4. '#' → logprob: -2.265010356903076
    5. 'lines' → logprob: -4.140010356903076
    6. '=' → logprob: -4.515010356903076
    7. '_states' → logprob: -4.765010356903076
    8. '```' → logprob: -4.765010356903076
    9. 'le' → logprob: -4.890010356903076
    10. 'step' → logprob: -4.890010356903076

Token 1138: ' recommand' (ID: 56767)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5550353527069092
    2. '#' → logprob: -1.8050353527069092
    3. 'ligne' → logprob: -1.9300353527069092
    4. '```' → logprob: -2.680035352706909
    5. 'tail' → logprob: -3.305035352706909
    6. 'mot' → logprob: -3.305035352706909
    7. 'import' → logprob: -3.430035352706909
    8. 'code' → logprob: -3.680035352706909
    9. '   ' → logprob: -3.805035352706909
    10. 'suite' → logprob: -3.805035352706909

Token 1139: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0038975838106125593
    2. 'tion' → logprob: -7.003897666931152
    3. 'd' → logprob: -7.253897666931152
    4. 'ations' → logprob: -7.878897666931152
    5. ')
' → logprob: -8.003897666931152
    6. '
' → logprob: -8.253897666931152
    7. 'on' → logprob: -8.628897666931152
    8. 'é' → logprob: -8.628897666931152
    9. 'ion' → logprob: -8.878897666931152
    10. '   ' → logprob: -9.628897666931152

Token 1140: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8274771571159363
    2. '=' → logprob: -1.827477216720581
    3. '(
' → logprob: -1.827477216720581
    4. '_' → logprob: -2.702477216720581
    5. ':' → logprob: -3.327477216720581
    6. '()' → logprob: -3.452477216720581
    7. '       ' → logprob: -3.452477216720581
    8. '   ' → logprob: -4.077476978302002
    9. '[' → logprob: -4.327476978302002
    10. '#' → logprob: -4.827476978302002

Token 1141: ' "' (ID: 392)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6406474113464355
    2. '#' → logprob: -1.6406474113464355
    3. '       ' → logprob: -2.1406474113464355
    4. 'dp' → logprob: -2.3906474113464355
    5. 'import' → logprob: -3.2656474113464355
    6. 'visited' → logprob: -4.2656474113464355
    7. 'max' → logprob: -4.5156474113464355
    8. '   ' → logprob: -6.3906474113464355
    9. 'states' → logprob: -6.3906474113464355
    10. '
' → logprob: -7.2656474113464355

Token 1142: '季' (ID: 37231)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2709270715713501
    2. 'import' → logprob: -2.0209269523620605
    3. '#' → logprob: -2.6459269523620605
    4. 'max' → logprob: -4.5209269523620605
    5. 'dp' → logprob: -5.5209269523620605
    6. 'sys' → logprob: -5.6459269523620605
    7. '   ' → logprob: -5.7709269523620605
    8. '       ' → logprob: -6.0209269523620605
    9. 'def' → logprob: -6.3959269523620605
    10. '
' → logprob: -7.0209269523620605

Token 1143: '語' (ID: 40909)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5888065695762634
    2. 'def' → logprob: -1.8388066291809082
    3. '節' → logprob: -2.213806629180908
    4. '``' → logprob: -3.713806629180908
    5. '
' → logprob: -3.838806629180908
    6. '=' → logprob: -4.838806629180908
    7. 'p' → logprob: -4.963806629180908
    8. 'd' → logprob: -4.963806629180908
    9. '节' → logprob: -5.088806629180908
    10. 'n' → logprob: -5.088806629180908

Token 1144: 'は' (ID: 5205)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.097959041595459
    2. '_' → logprob: -1.472959041595459
    3. '=' → logprob: -2.847959041595459
    4. 's' → logprob: -3.222959041595459
    5. '")' → logprob: -3.347959041595459
    6. '"_' → logprob: -3.472959041595459
    7. 'は' → logprob: -3.597959041595459
    8. '_mask' → logprob: -3.722959041595459
    9. 'を' → logprob: -4.097959041595459
    10. '```' → logprob: -4.097959041595459

Token 1145: '単' (ID: 87236)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5385687351226807
    2. 's' → logprob: -2.5385687351226807
    3. '```' → logprob: -2.7885687351226807
    4. '"' → logprob: -3.1635687351226807
    5. 'K' → logprob: -3.1635687351226807
    6. '0' → logprob: -3.2885687351226807
    7. ''' → logprob: -3.5385687351226807
    8. 'す' → logprob: -3.7885687351226807
    9. 'が' → logprob: -3.7885687351226807
    10. '使' → logprob: -3.9135687351226807

Token 1146: '語' (ID: 40909)
  Prédit: '語'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '語' → logprob: -0.004582145716995001
    2. '一' → logprob: -6.629581928253174
    3. '
' → logprob: -7.254581928253174
    4. '```' → logprob: -7.629581928253174
    5. '純' → logprob: -7.629581928253174
    6. '位' → logprob: -8.254582405090332
    7. 'token' → logprob: -8.629582405090332
    8. '文' → logprob: -8.754582405090332
    9. '行' → logprob: -9.504582405090332
    10. '独' → logprob: -9.754582405090332

Token 1147: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.853697657585144
    2. '_' → logprob: -1.978697657585144
    3. '[' → logprob: -2.2286977767944336
    4. 'を' → logprob: -2.4786977767944336
    5. 'が' → logprob: -2.4786977767944336
    6. 'では' → logprob: -2.6036977767944336
    7. 'で' → logprob: -3.3536977767944336
    8. 'に' → logprob: -3.4786977767944336
    9. '"' → logprob: -3.7286977767944336
    10. '")' → logprob: -4.103697776794434

Token 1148: '接' (ID: 9878)
  Prédit: '続'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '続' → logprob: -1.749600887298584
    2. '```' → logprob: -2.124600887298584
    3. 'count' → logprob: -2.374600887298584
    4. 'length' → logprob: -2.499600887298584
    5. 'state' → logprob: -2.874600887298584
    6. 'def' → logprob: -3.374600887298584
    7. '長' → logprob: -3.749600887298584
    8. 'len' → logprob: -3.874600887298584
    9. '制' → logprob: -3.874600887298584
    10. 'next' → logprob: -3.874600887298584

Token 1149: '続' (ID: 47554)
  Prédit: '続'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '続' → logprob: -0.004857292398810387
    2. '頭' → logprob: -6.129857063293457
    3. '
' → logprob: -6.254857063293457
    4. '尾' → logprob: -8.379857063293457
    5. '```' → logprob: -9.004857063293457
    6. 'ぎ' → logprob: -9.754857063293457
    7. '続きを' → logprob: -10.004857063293457
    8. '[' → logprob: -10.504857063293457
    9. '``' → logprob: -10.504857063293457
    10. '   ' → logprob: -10.629857063293457

Token 1150: 'の' (ID: 3385)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2838524580001831
    2. '"' → logprob: -2.7838525772094727
    3. 'の' → logprob: -3.6588525772094727
    4. ' ' → logprob: -4.033852577209473
    5. 'を' → logprob: -4.283852577209473
    6. 'で' → logprob: -4.283852577209473
    7. '```' → logprob: -4.783852577209473
    8. '"_' → logprob: -4.908852577209473
    9. 'が' → logprob: -5.033852577209473
    10. '間' → logprob: -5.158852577209473

Token 1151: '境' (ID: 34975)
  Prédit: '制'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '制' → logprob: -1.4297984838485718
    2. '境' → logprob: -1.9297984838485718
    3. '続' → logprob: -2.0547986030578613
    4. '```' → logprob: -2.5547986030578613
    5. '合' → logprob: -3.6797986030578613
    6. '#' → logprob: -3.9297986030578613
    7. '\xe7\xb9' → logprob: -4.179798603057861
    8. '"' → logprob: -4.429798603057861
    9. '順' → logprob: -4.429798603057861
    10. '続きを' → logprob: -4.554798603057861

Token 1152: '界' (ID: 19056)
  Prédit: '続'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '続' → logprob: -0.028626520186662674
    2. '
' → logprob: -5.153626441955566
    3. '合' → logprob: -5.278626441955566
    4. '```' → logprob: -5.528626441955566
    5. '   ' → logprob: -5.778626441955566
    6. '#' → logprob: -6.153626441955566
    7. '点' → logprob: -6.903626441955566
    8. '界' → logprob: -6.903626441955566
    9. '"' → logprob: -7.403626441955566
    10. 'ぎ' → logprob: -7.528626441955566

Token 1153: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.8364536762237549
    2. 'で' → logprob: -1.8364536762237549
    3. '上' → logprob: -2.086453676223755
    4. 'に' → logprob: -2.086453676223755
    5. 'の' → logprob: -3.211453676223755
    6. 'として' → logprob: -3.336453676223755
    7. '_' → logprob: -4.086453437805176
    8. '"' → logprob: -4.336453437805176
    9. '間' → logprob: -4.961453437805176
    10. 'が' → logprob: -5.211453437805176

Token 1154: 'また' (ID: 34803)
  Prédit: '渡'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '渡' → logprob: -1.9016855955123901
    2. '境' → logprob: -2.0266857147216797
    3. 'で' → logprob: -2.4016857147216797
    4. 'こ' → logprob: -2.5266857147216797
    5. '接' → logprob: -3.0266857147216797
    6. 'に' → logprob: -3.1516857147216797
    7. '続' → logprob: -3.4016857147216797
    8. '超' → logprob: -3.4016857147216797
    9. '```' → logprob: -3.4016857147216797
    10. 'また' → logprob: -3.4016857147216797

Token 1155: 'い' (ID: 3826)
  Prédit: '続'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '続' → logprob: -0.339693158864975
    2. '
' → logprob: -2.214693069458008
    3. '```' → logprob: -3.714693069458008
    4. '界' → logprob: -3.964693069458008
    5. 'ぶ' → logprob: -4.339693069458008
    6. 'が' → logprob: -4.464693069458008
    7. '``' → logprob: -4.839693069458008
    8. '"' → logprob: -4.839693069458008
    9. 'b' → logprob: -5.089693069458008
    10. 'd' → logprob: -5.339693069458008

Token 1156: 'で' (ID: 4344)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -2.1479506492614746
    2. '[' → logprob: -2.2729506492614746
    3. 'd' → logprob: -2.5229506492614746
    4. '"' → logprob: -2.7729506492614746
    5. '
' → logprob: -3.0229506492614746
    6. '[
' → logprob: -3.2104506492614746
    7. '```' → logprob: -3.3979506492614746
    8. 'n' → logprob: -3.5229506492614746
    9. 'b' → logprob: -3.8979506492614746
    10. 'def' → logprob: -3.9604506492614746

Token 1157: '出' (ID: 6390)
  Prédit: '続'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '続' → logprob: -0.9390760660171509
    2. '```' → logprob: -2.0640759468078613
    3. 's' → logprob: -2.3140759468078613
    4. '"' → logprob: -2.4390759468078613
    5. ''' → logprob: -3.0640759468078613
    6. '続きを' → logprob: -3.0640759468078613
    7. '")' → logprob: -3.5640759468078613
    8. '次' → logprob: -3.6890759468078613
    9. 'n' → logprob: -3.8140759468078613
    10. ')' → logprob: -4.689075946807861

Token 1158: '現' (ID: 44159)
  Prédit: '現'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '現' → logprob: -0.9224545359611511
    2. 'る' → logprob: -1.422454595565796
    3. '```' → logprob: -2.047454595565796
    4. 'て' → logprob: -2.297454595565796
    5. '
' → logprob: -3.672454595565796
    6. '   ' → logprob: -4.297454357147217
    7. 'り' → logprob: -4.672454357147217
    8. '"' → logprob: -5.297454357147217
    9. '続' → logprob: -5.297454357147217
    10. '``' → logprob: -5.422454357147217

Token 1159: 'して' (ID: 22440)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7309017777442932
    2. 'し' → logprob: -1.6059017181396484
    3. 'する' → logprob: -2.8559017181396484
    4. 'す' → logprob: -2.9809017181396484
    5. '```' → logprob: -3.4809017181396484
    6. 'して' → logprob: -3.6059017181396484
    7. 'した' → logprob: -3.9809017181396484
    8. 'た' → logprob: -4.355901718139648
    9. 'る' → logprob: -4.355901718139648
    10. 'ます' → logprob: -4.605901718139648

Token 1160: 'も' (ID: 8446)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'い' → logprob: -1.3084357976913452
    2. 'す' → logprob: -1.4334357976913452
    3. 'います' → logprob: -1.9334357976913452
    4. 'いる' → logprob: -1.9334357976913452
    5. '```' → logprob: -3.0584359169006348
    6. 'く' → logprob: -3.1834359169006348
    7. 'る' → logprob: -4.558435916900635
    8. '#' → logprob: -4.558435916900635
    9. '
' → logprob: -4.558435916900635
    10. 'は' → logprob: -4.808435916900635

Token 1161: 'よ' (ID: 15161)
  Prédit: '続'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '続' → logprob: -0.8819994926452637
    2. '```' → logprob: -1.8819994926452637
    3. '``' → logprob: -2.8819994926452637
    4. 'いる' → logprob: -3.2569994926452637
    5. 'す' → logprob: -3.5069994926452637
    6. 'つ' → logprob: -3.6319994926452637
    7. '#' → logprob: -3.7569994926452637
    8. 's' → logprob: -4.006999492645264
    9. 'よ' → logprob: -4.256999492645264
    10. 'い' → logprob: -4.256999492645264

Token 1162: 'い' (ID: 3826)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.9070138335227966
    2. 'り' → logprob: -1.4070138931274414
    3. 'う' → logprob: -2.4070138931274414
    4. '```' → logprob: -2.5320138931274414
    5. 'き' → logprob: -2.9070138931274414
    6. 'く' → logprob: -3.7820138931274414
    7. 'て' → logprob: -4.032013893127441
    8. '良' → logprob: -4.532013893127441
    9. 'い' → logprob: -4.907013893127441
    10. 'け' → logprob: -5.032013893127441

Token 1163: '"
' (ID: 1092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027105119079351425
    2. '   ' → logprob: -5.152105331420898
    3. ')' → logprob: -5.277105331420898
    4. ',' → logprob: -5.902105331420898
    5. '        
' → logprob: -5.902105331420898
    6. '[' → logprob: -6.402105331420898
    7. '#' → logprob: -6.402105331420898
    8. '(' → logprob: -7.027105331420898
    9. '...' → logprob: -7.402105331420898
    10. '	' → logprob: -7.652105331420898

Token 1164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01056137029081583
    2. '#' → logprob: -5.260561466217041
    3. '```' → logprob: -6.385561466217041
    4. '        
' → logprob: -6.510561466217041
    5. ' ' → logprob: -8.260560989379883
    6. '   ' → logprob: -8.260560989379883
    7. ',' → logprob: -8.385560989379883
    8. '           ' → logprob: -8.635560989379883
    9. '(' → logprob: -8.760560989379883
    10. ' (' → logprob: -8.885560989379883

Token 1165: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023904841393232346
    2. '#' (adapté à ' #') → logprob: -4.773904800415039
    3. '```' → logprob: -5.148904800415039
    4. '
' → logprob: -5.773904800415039
    5. '        
' → logprob: -6.273904800415039
    6. '   ' → logprob: -7.148904800415039
    7. ' ' → logprob: -8.023904800415039
    8. '``' → logprob: -8.273904800415039
    9. '\n' → logprob: -8.523904800415039
    10. '"' → logprob: -8.523904800415039

Token 1166: ' donc' (ID: 14206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3507809638977051
    2. '#' → logprob: -1.475780963897705
    3. 's' → logprob: -4.475780963897705
    4. 'import' → logprob: -4.850780963897705
    5. 'from' → logprob: -4.975780963897705
    6. 'words' → logprob: -4.975780963897705
    7. '
' → logprob: -5.100780963897705
    8. 'max' → logprob: -5.475780963897705
    9. '   ' → logprob: -5.600780963897705
    10. 'pattern' → logprob: -6.100780963897705

Token 1167: ' c' (ID: 274)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32747703790664673
    2. '       ' → logprob: -1.702476978302002
    3. 'concat' → logprob: -4.202476978302002
    4. 'on' → logprob: -4.327476978302002
    5. 'max' → logprob: -5.077476978302002
    6. '```' → logprob: -5.077476978302002
    7. 'phrase' → logprob: -5.077476978302002
    8. 'words' → logprob: -5.202476978302002
    9. 'dp' → logprob: -5.702476978302002
    10. 'pattern' → logprob: -5.702476978302002

Token 1168: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.3386276364326477
    2. ''' → logprob: -1.588627576828003
    3. '#' → logprob: -3.588627576828003
    4. 'e' → logprob: -4.338627815246582
    5. ''''' → logprob: -4.463627815246582
    6. ''''
' → logprob: -5.338627815246582
    7. ''é' → logprob: -5.713627815246582
    8. 'ont' → logprob: -6.088627815246582
    9. '\'' → logprob: -6.338627815246582
    10. '
' → logprob: -6.463627815246582

Token 1169: ' bien' (ID: 5340)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.08353377133607864
    2. 'une' → logprob: -4.333533763885498
    3. '#' → logprob: -4.583533763885498
    4. ' possible' → logprob: -4.708533763885498
    5. 'un' → logprob: -5.208533763885498
    6. '"' → logprob: -5.208533763885498
    7. 'important' → logprob: -5.958533763885498
    8. 'à' → logprob: -6.083533763885498
    9. '```' → logprob: -6.083533763885498
    10. 'bien' → logprob: -6.083533763885498

Token 1170: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.708649218082428
    2. '#' → logprob: -2.333649158477783
    3. 'import' → logprob: -2.583649158477783
    4. 'possible' → logprob: -2.583649158477783
    5. 'contin' → logprob: -2.708649158477783
    6. '   ' → logprob: -3.208649158477783
    7. 'continue' → logprob: -3.708649158477783
    8. 'def' → logprob: -3.958649158477783
    9. '```' → logprob: -4.333649158477783
    10. '
' → logprob: -4.583649158477783

Token 1171: ' concat' (ID: 73950)
  Prédit: 'concat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'concat' → logprob: -0.17166276276111603
    2. 'conc' → logprob: -2.7966628074645996
    3. 'continu' → logprob: -3.7966628074645996
    4. 'chaine' → logprob: -4.2966628074646
    5. 'position' → logprob: -4.6716628074646
    6. '"' → logprob: -4.9216628074646
    7. 'con' → logprob: -5.5466628074646
    8. 'transition' → logprob: -5.7966628074646
    9. ' concaten' → logprob: -5.7966628074646
    10. '
' → logprob: -5.9216628074646

Token 1172: ' des' (ID: 731)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.36601194739341736
    2. '_' → logprob: -1.7410119771957397
    3. ''' → logprob: -3.49101185798645
    4. '   ' → logprob: -3.86601185798645
    5. '```' → logprob: -3.99101185798645
    6. '`' → logprob: -4.366012096405029
    7. 'def' → logprob: -4.741012096405029
    8. ')' → logprob: -5.491012096405029
    9. '``' → logprob: -5.491012096405029
    10. '[' → logprob: -5.616012096405029

Token 1173: ' mot' (ID: 3598)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04041421785950661
    2. ' mots' → logprob: -3.415414333343506
    3. 'mot' → logprob: -5.290414333343506
    4. 'words' → logprob: -7.040414333343506
    5. 'tokens' → logprob: -8.790413856506348
    6. '   ' → logprob: -9.165413856506348
    7. '"' → logprob: -9.290413856506348
    8. 's' → logprob: -9.665413856506348
    9. ' words' → logprob: -9.790413856506348
    10. '_m' → logprob: -10.040413856506348

Token 1174: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.442110538482666
    2. 's' → logprob: -2.067110538482666
    3. '```' → logprob: -2.817110538482666
    4. ''' → logprob: -3.817110538482666
    5. '   ' → logprob: -3.817110538482666
    6. '"' → logprob: -3.942110538482666
    7. ')' → logprob: -4.067110538482666
    8. '#' → logprob: -4.567110538482666
    9. '       ' → logprob: -4.942110538482666
    10. '_
' → logprob: -5.067110538482666

Token 1175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028093906585127115
    2. '        
' → logprob: -6.627809524536133
    3. '```' → logprob: -8.002809524536133
    4. '   ' → logprob: -8.252809524536133
    5. '
' → logprob: -8.627809524536133
    6. ',' → logprob: -9.002809524536133
    7. ' ' → logprob: -9.252809524536133
    8. '#' → logprob: -9.377809524536133
    9. '           ' → logprob: -10.127809524536133
    10. '\t' → logprob: -10.252809524536133

Token 1176: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026714172214269638
    2. 'dp' → logprob: -4.276714324951172
    3. '
' → logprob: -5.776714324951172
    4. '        
' → logprob: -5.901714324951172
    5. '#' (adapté à ' #') → logprob: -6.276714324951172
    6. 'from' → logprob: -6.401714324951172
    7. '   ' → logprob: -7.526714324951172
    8. 'words' → logprob: -7.901714324951172
    9. 'state' → logprob: -8.026714324951172
    10. 'max' → logprob: -8.526714324951172

Token 1177: ' on' (ID: 402)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0059159994125366
    2. '       ' → logprob: -1.6309159994125366
    3. 'words' → logprob: -1.7559159994125366
    4. '#' → logprob: -1.8809159994125366
    5. 'max' → logprob: -3.255916118621826
    6. 'length' → logprob: -4.130916118621826
    7. 'dp' → logprob: -4.255916118621826
    8. 'import' → logprob: -5.005916118621826
    9. 'word' → logprob: -5.505916118621826
    10. 'n' → logprob: -5.505916118621826

Token 1178: ' représente' (ID: 88912)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1154160499572754
    2. 'def' → logprob: -1.2404160499572754
    3. '       ' → logprob: -1.9904160499572754
    4. 'continue' → logprob: -2.2404160499572754
    5. '   ' → logprob: -3.6154160499572754
    6. 'contin' → logprob: -3.8654160499572754
    7. 'for' → logprob: -3.9904160499572754
    8. '
' → logprob: -4.490416049957275
    9. 'len' → logprob: -5.115416049957275
    10. 'import' → logprob: -5.115416049957275

Token 1179: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6943371891975403
    2. 'les' → logprob: -2.1943371295928955
    3. '   ' → logprob: -2.3193371295928955
    4. 'le' → logprob: -2.5693371295928955
    5. 'la' → logprob: -2.5693371295928955
    6. 'par' → logprob: -2.8193371295928955
    7. 'state' → logprob: -3.5693371295928955
    8. '       ' → logprob: -4.444337368011475
    9. 'un' → logprob: -4.944337368011475
    10. '#' → logprob: -5.444337368011475

Token 1180: ' mots' (ID: 38338)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.3450428247451782
    2. 'dp' → logprob: -1.3450428247451782
    3. 'states' → logprob: -1.8450428247451782
    4. 'current' → logprob: -2.3450427055358887
    5. 'pos' → logprob: -2.4700427055358887
    6. '#' → logprob: -3.2200427055358887
    7. 'matching' → logprob: -4.095042705535889
    8. 'position' → logprob: -4.220042705535889
    9. 'positions' → logprob: -4.345042705535889
    10. 'match' → logprob: -4.345042705535889

Token 1181: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5559349656105042
    2. '_ids' → logprob: -2.3059349060058594
    3. '_' → logprob: -2.5559349060058594
    4. '_indices' → logprob: -3.0559349060058594
    5. '_id' → logprob: -3.4309349060058594
    6. '=' → logprob: -3.4309349060058594
    7. '_words' → logprob: -3.5559349060058594
    8. 's' → logprob: -4.305934906005859
    9. '_idx' → logprob: -4.305934906005859
    10. '_index' → logprob: -4.430934906005859

Token 1182: ' leur' (ID: 9853)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.27273380756378174
    2. 'leurs' → logprob: -2.397733688354492
    3. 'leur' → logprob: -2.772733688354492
    4. 'their' → logprob: -3.647733688354492
    5. ' indices' → logprob: -4.647733688354492
    6. ' leurs' → logprob: -4.647733688354492
    7. ' leur' → logprob: -4.772733688354492
    8. 'len' → logprob: -5.272733688354492
    9. 'index' → logprob: -5.647733688354492
    10. 'indice' → logprob: -5.647733688354492

Token 1183: ' chaine' (ID: 192094)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.15901373326778412
    2. 'index' → logprob: -2.2840137481689453
    3. 'length' → logprob: -4.034013748168945
    4. 'indice' → logprob: -4.659013748168945
    5. 'indexes' → logprob: -5.159013748168945
    6. 'characters' → logprob: -6.159013748168945
    7. 'chaine' → logprob: -6.159013748168945
    8. 'first' → logprob: -6.534013748168945
    9. ' indices' → logprob: -6.784013748168945
    10. 'id' → logprob: -6.909013748168945

Token 1184: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10334936529397964
    2. 's' → logprob: -3.853349447250366
    3. 'words' → logprob: -4.353349208831787
    4. 'line' → logprob: -4.853349208831787
    5. ' line' → logprob: -4.853349208831787
    6. '
' → logprob: -5.353349208831787
    7. '        
' → logprob: -5.353349208831787
    8. ' s' → logprob: -5.603349208831787
    9. 'word' → logprob: -5.728349208831787
    10. '   ' → logprob: -5.728349208831787

Token 1185: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16970345377922058
    2. '#' → logprob: -2.544703483581543
    3. '   ' → logprob: -4.544703483581543
    4. '"' → logprob: -4.669703483581543
    5. 'word' → logprob: -4.919703483581543
    6. 'words' → logprob: -4.919703483581543
    7. 'def' → logprob: -5.169703483581543
    8. 'tokens' → logprob: -5.169703483581543
    9. 's' → logprob: -5.544703483581543
    10. '        
' → logprob: -5.669703483581543

Token 1186: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11159167438745499
    2. ' on' → logprob: -3.4865915775299072
    3. '       ' → logprob: -4.236591815948486
    4. ' #' → logprob: -4.361591815948486
    5. ' la' → logprob: -4.861591815948486
    6. '```' → logprob: -5.236591815948486
    7. 'la' → logprob: -5.486591815948486
    8. ' les' → logprob: -5.736591815948486
    9. 'on' → logprob: -5.736591815948486
    10. ' chaque' → logprob: -5.861591815948486

Token 1187: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.474939227104187
    2. ' i' → logprob: -2.3499393463134766
    3. 'l' → logprob: -2.4749393463134766
    4. '_' → logprob: -2.7249393463134766
    5. 'c' → logprob: -4.349939346313477
    6. 'word' → logprob: -4.724939346313477
    7. ' _' → logprob: -4.724939346313477
    8. ' l' → logprob: -4.849939346313477
    9. ' chaque' → logprob: -4.849939346313477
    10. 'la' → logprob: -4.974939346313477

Token 1188: ' étape' (ID: 83661)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.10779807716608047
    2. 'word' → logprob: -2.6077980995178223
    3. 'w' → logprob: -4.357798099517822
    4. ' mot' → logprob: -4.982798099517822
    5. 'car' → logprob: -6.232798099517822
    6. ' word' → logprob: -6.232798099517822
    7. 'm' → logprob: -6.982798099517822
    8. 'i' → logprob: -7.107798099517822
    9. 'indice' → logprob: -7.607798099517822
    10. '   ' → logprob: -7.857798099517822

Token 1189: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4625179767608643
    2. '   ' → logprob: -2.0875179767608643
    3. '       ' → logprob: -2.4625179767608643
    4. ',' → logprob: -2.4625179767608643
    5. ' =' → logprob: -2.5875179767608643
    6. '```' → logprob: -2.7125179767608643
    7. '=' → logprob: -2.8375179767608643
    8. ' _' → logprob: -2.9625179767608643
    9. '
' → logprob: -3.2125179767608643
    10. '[]' → logprob: -4.212517738342285

Token 1190: ' suite' (ID: 13800)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mot' → logprob: -1.3121978044509888
    2. 'car' → logprob: -1.9371978044509888
    3. '#' → logprob: -2.062197685241699
    4. 'word' → logprob: -2.437197685241699
    5. 'char' → logprob: -2.687197685241699
    6. 'current' → logprob: -2.687197685241699
    7. 'c' → logprob: -2.937197685241699
    8. 'next' → logprob: -3.062197685241699
    9. 'len' → logprob: -4.187197685241699
    10. 'i' → logprob: -4.187197685241699

Token 1191: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6528340578079224
    2. ' de' → logprob: -2.277833938598633
    3. '[' → logprob: -2.527833938598633
    4. 's' → logprob: -2.527833938598633
    5. ' des' → logprob: -2.652833938598633
    6. '=' → logprob: -2.902833938598633
    7. 'de' → logprob: -2.902833938598633
    8. '_' → logprob: -3.152833938598633
    9. '```' → logprob: -3.527833938598633
    10. ' _' → logprob: -3.652833938598633

Token 1192: ' mots' (ID: 38338)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.37327811121940613
    2. ' mots' → logprob: -2.7482781410217285
    3. 'words' → logprob: -2.7482781410217285
    4. 'chars' → logprob: -3.3732781410217285
    5. 'm' → logprob: -3.4982781410217285
    6. 'mot' → logprob: -3.4982781410217285
    7. 'indices' → logprob: -4.2482781410217285
    8. 'characters' → logprob: -4.3732781410217285
    9. 'letters' → logprob: -4.4982781410217285
    10. 'word' → logprob: -4.7482781410217285

Token 1193: ' crée' (ID: 102256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4333691895008087
    2. '   ' → logprob: -2.6833691596984863
    3. ' =' → logprob: -2.6833691596984863
    4. ',' → logprob: -3.1833691596984863
    5. 's' → logprob: -3.1833691596984863
    6. '[' → logprob: -3.5583691596984863
    7. '#' → logprob: -4.058369159698486
    8. '```' → logprob: -4.933369159698486
    9. '=' → logprob: -5.058369159698486
    10. '[
' → logprob: -5.433369159698486

Token 1194: ' une' (ID: 2463)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6281700134277344
    2. ''' → logprob: -1.7531700134277344
    3. '   ' → logprob: -2.3781700134277344
    4. 's' → logprob: -2.5031700134277344
    5. ',' → logprob: -2.8781700134277344
    6. '```' → logprob: -3.1281700134277344
    7. '=' → logprob: -3.2531700134277344
    8. '...' → logprob: -3.3781700134277344
    9. '_' → logprob: -3.5031700134277344
    10. '"' → logprob: -3.7531700134277344

Token 1195: ' phrase' (ID: 27179)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.2647074460983276
    2. 'es' → logprob: -1.8897074460983276
    3. 'chaine' → logprob: -2.014707565307617
    4. 'string' → logprob: -2.514707565307617
    5. 'concat' → logprob: -2.889707565307617
    6. '```' → logprob: -3.139707565307617
    7. '"' → logprob: -3.264707565307617
    8. ' concaten' → logprob: -3.639707565307617
    9. 's' → logprob: -3.889707565307617
    10. 'space' → logprob: -4.014707565307617

Token 1196: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014251415617763996
    2. '   ' → logprob: -5.639251232147217
    3. ',' → logprob: -5.764251232147217
    4. ' =' → logprob: -6.639251232147217
    5. '        
' → logprob: -7.264251232147217
    6. '[' → logprob: -7.264251232147217
    7. ')' → logprob: -7.389251232147217
    8. 's' → logprob: -7.764251232147217
    9. '```' → logprob: -8.014251708984375
    10. '()' → logprob: -8.389251708984375

Token 1197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008917202241718769
    2. '```' → logprob: -5.383917331695557
    3. ',' → logprob: -6.633917331695557
    4. '   ' → logprob: -7.133917331695557
    5. '        
' → logprob: -7.508917331695557
    6. '`' → logprob: -8.008916854858398
    7. '#' → logprob: -8.883916854858398
    8. '
' → logprob: -9.008916854858398
    9. '``' → logprob: -9.258916854858398
    10. '"' → logprob: -9.258916854858398

Token 1198: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010475249961018562
    2. '"' → logprob: -6.010475158691406
    3. '   ' → logprob: -6.510475158691406
    4. '```' → logprob: -6.885475158691406
    5. '        
' → logprob: -6.885475158691406
    6. '#' (adapté à ' #') → logprob: -7.010475158691406
    7. '
' → logprob: -7.385475158691406
    8. 'word' → logprob: -7.760475158691406
    9. ',' → logprob: -7.885475158691406
    10. 'words' → logprob: -8.760475158691406

Token 1199: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06469117105007172
    2. 'from' → logprob: -3.4396910667419434
    3. '       ' → logprob: -4.064691066741943
    4. 'n' → logprob: -5.689691066741943
    5. 'words' → logprob: -5.814691066741943
    6. '```' → logprob: -6.314691066741943
    7. '   ' → logprob: -7.189691066741943
    8. 'length' → logprob: -7.189691066741943
    9. 'max' → logprob: -7.439691066741943
    10. '#' → logprob: -7.439691066741943

Token 1200: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.37948986887931824
    2. 'contin' → logprob: -1.8794898986816406
    3. '       ' → logprob: -2.3794898986816406
    4. 'def' → logprob: -3.3794898986816406
    5. ' continue' → logprob: -4.754489898681641
    6. '#' → logprob: -5.379489898681641
    7. '   ' → logprob: -5.504489898681641
    8. 'continu' → logprob: -5.879489898681641
    9. 'len' → logprob: -6.129489898681641
    10. '_continue' → logprob: -6.379489898681641

Token 1201: ' faire' (ID: 8119)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.657063364982605
    2. '   ' → logprob: -1.532063364982605
    3. 'contin' → logprob: -1.907063364982605
    4. ' continuer' → logprob: -3.4070634841918945
    5. '```' → logprob: -4.0320634841918945
    6. '...' → logprob: -4.4070634841918945
    7. 'import' → logprob: -4.6570634841918945
    8. 'continue' → logprob: -4.9070634841918945
    9. 'for' → logprob: -5.7820634841918945
    10. ')' → logprob: -5.7820634841918945

Token 1202: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.719576895236969
    2. '
' → logprob: -1.5945768356323242
    3. '       ' → logprob: -2.469576835632324
    4. '```' → logprob: -2.469576835632324
    5. 'import' → logprob: -3.469576835632324
    6. 'def' → logprob: -4.219576835632324
    7. 'contin' → logprob: -4.719576835632324
    8. 'un' → logprob: -4.844576835632324
    9. 'une' → logprob: -4.969576835632324
    10. 'sure' → logprob: -5.094576835632324

Token 1203: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4840758740901947
    2. 'for' → logprob: -2.2340757846832275
    3. 'd' → logprob: -2.8590757846832275
    4. 'def' → logprob: -3.4840757846832275
    5. ' following' → logprob: -3.7340757846832275
    6. 'following' → logprob: -3.7340757846832275
    7. 'DP' → logprob: -4.359076023101807
    8. 'm' → logprob: -4.484076023101807
    9. 's' → logprob: -4.484076023101807
    10. '=' → logprob: -4.984076023101807

Token 1204: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4591416120529175
    2. '       ' → logprob: -1.0841416120529175
    3. '[' → logprob: -5.209141731262207
    4. '_' → logprob: -5.209141731262207
    5. ',' → logprob: -5.959141731262207
    6. '(' → logprob: -6.209141731262207
    7. 'dp' → logprob: -6.459141731262207
    8. '
' → logprob: -6.834141731262207
    9. '(
' → logprob: -6.959141731262207
    10. '    
' → logprob: -6.959141731262207

Token 1205: ' pos' (ID: 1253)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.4662422239780426
    2. '   ' → logprob: -1.7162421941757202
    3. 'N' → logprob: -2.5912423133850098
    4. 'pos' → logprob: -2.9662423133850098
    5. 'range' → logprob: -3.4662423133850098
    6. 'len' → logprob: -4.34124231338501
    7. '1' → logprob: -5.34124231338501
    8. ' M' → logprob: -5.34124231338501
    9. 'words' → logprob: -5.71624231338501
    10. ' range' → logprob: -5.84124231338501

Token 1206: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2625972032546997
    2. '[' → logprob: -1.6375972032546997
    3. ',' → logprob: -1.7625972032546997
    4. '       ' → logprob: -2.01259708404541
    5. ' =' → logprob: -2.76259708404541
    6. '[
' → logprob: -3.38759708404541
    7. '```' → logprob: -3.63759708404541
    8. '=' → logprob: -3.76259708404541
    9. ',
' → logprob: -4.13759708404541
    10. '[pos' → logprob: -4.76259708404541

Token 1207: ' mot' (ID: 3598)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.7599558234214783
    2. 'words' → logprob: -1.384955883026123
    3. 'adj' → logprob: -1.884955883026123
    4. ' word' → logprob: -3.009955883026123
    5. ' words' → logprob: -3.384955883026123
    6. ' adj' → logprob: -3.884955883026123
    7. 'len' → logprob: -4.884955883026123
    8. ' K' → logprob: -6.134955883026123
    9. '   ' → logprob: -6.259955883026123
    10. 'state' → logprob: -6.384955883026123

Token 1208: ' actuel' (ID: 113646)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2859972417354584
    2. '       ' → logprob: -2.035997152328491
    3. '\t' → logprob: -3.285997152328491
    4. '_' → logprob: -4.16099739074707
    5. '[' → logprob: -4.41099739074707
    6. '```' → logprob: -4.66099739074707
    7. ',' → logprob: -5.03599739074707
    8. ' =' → logprob: -5.53599739074707
    9. '
' → logprob: -5.53599739074707
    10. ':' → logprob: -5.78599739074707

Token 1209: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.508120596408844
    2. '[' → logprob: -1.7581205368041992
    3. '       ' → logprob: -2.133120536804199
    4. '_' → logprob: -3.258120536804199
    5. ',' → logprob: -3.633120536804199
    6. ' =' → logprob: -4.883120536804199
    7. ')' → logprob: -4.883120536804199
    8. '=' → logprob: -5.258120536804199
    9. ']' → logprob: -5.508120536804199
    10. ':' → logprob: -6.133120536804199

Token 1210: ' les' (ID: 1341)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.31076017022132874
    2. 'state' → logprob: -2.685760259628296
    3. ' season' → logprob: -2.935760259628296
    4. 'states' → logprob: -3.310760259628296
    5. 'next' → logprob: -3.685760259628296
    6. '   ' → logprob: -4.435760021209717
    7. ' next' → logprob: -4.685760021209717
    8. 'len' → logprob: -4.810760021209717
    9. ' saison' → logprob: -4.935760021209717
    10. 'mask' → logprob: -5.060760021209717

Token 1211: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4706788957118988
    2. 'states' → logprob: -2.0956788063049316
    3. '_states' → logprob: -2.3456788063049316
    4. ' _' → logprob: -4.345678806304932
    5. '[
' → logprob: -4.345678806304932
    6. '_next' → logprob: -4.345678806304932
    7. 'next' → logprob: -4.595678806304932
    8. '[' → logprob: -4.720678806304932
    9. 's' → logprob: -4.720678806304932
    10. ' next' → logprob: -4.845678806304932

Token 1212: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.003688555210828781
    2. 'at' → logprob: -5.628688335418701
    3. '
' → logprob: -10.37868881225586
    4. 'states' → logprob: -10.50368881225586
    5. '```' → logprob: -11.75368881225586
    6. '#' → logprob: -12.12868881225586
    7. '_states' → logprob: -12.37868881225586
    8. '_' → logprob: -12.87868881225586
    9. 'as' → logprob: -13.50368881225586
    10. '``' → logprob: -13.62868881225586

Token 1213: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.260105848312378
    2. '   ' → logprob: -1.510105848312378
    3. '_' → logprob: -2.010105848312378
    4. '=' → logprob: -2.135105848312378
    5. ' =' → logprob: -2.385105848312378
    6. '[
' → logprob: -3.510105848312378
    7. '```' → logprob: -4.135106086730957
    8. ':' → logprob: -4.260106086730957
    9. ' ' → logprob: -4.385106086730957
    10. ',' → logprob: -4.510106086730957

Token 1214: ' K' (ID: 658)
  Prédit: 'autom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'autom' → logprob: -0.1725759506225586
    2. 's' → logprob: -2.9225759506225586
    3. 'pattern' → logprob: -3.4225759506225586
    4. 'patterns' → logprob: -4.172575950622559
    5. 'aut' → logprob: -4.672575950622559
    6. 'matching' → logprob: -4.797575950622559
    7. ' saison' → logprob: -4.922575950622559
    8. 'season' → logprob: -5.047575950622559
    9. 'k' → logprob: -5.547575950622559
    10. ' autom' → logprob: -5.547575950622559

Token 1215: ' autom' (ID: 5099)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2217307686805725
    2. ' _' → logprob: -2.5967307090759277
    3. '   ' → logprob: -3.7217307090759277
    4. '_states' → logprob: -3.7217307090759277
    5. ',' → logprob: -4.096730709075928
    6. ']' → logprob: -4.221730709075928
    7. '[' → logprob: -4.471730709075928
    8. ')' → logprob: -4.846730709075928
    9. '_next' → logprob: -5.971730709075928
    10. '_
' → logprob: -6.221730709075928

Token 1216: 'ates' (ID: 1381)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1289253234863281
    2. 'es' → logprob: -1.7539253234863281
    3. '[' → logprob: -2.253925323486328
    4. '[
' → logprob: -2.378925323486328
    5. ']' → logprob: -2.503925323486328
    6. ')' → logprob: -3.378925323486328
    7. 'ates' → logprob: -3.878925323486328
    8. 'aires' → logprob: -3.878925323486328
    9. '[]' → logprob: -4.003925323486328
    10. 's' → logprob: -4.378925323486328

Token 1217: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0382273830473423
    2. '   ' → logprob: -3.6632273197174072
    3. '[' → logprob: -6.538227558135986
    4. ',' → logprob: -6.663227558135986
    5. '#' → logprob: -7.038227558135986
    6. '
' → logprob: -7.038227558135986
    7. '_' → logprob: -7.163227558135986
    8. ')' → logprob: -7.163227558135986
    9. '        
' → logprob: -7.538227558135986
    10. 'dp' → logprob: -7.538227558135986

Token 1218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005049333442002535
    2. '	' → logprob: -6.255049228668213
    3. '        
' → logprob: -7.505049228668213
    4. '[' → logprob: -7.505049228668213
    5. '   ' → logprob: -7.755049228668213
    6. '\' → logprob: -8.255049705505371
    7. '\t' → logprob: -8.380049705505371
    8. '```' → logprob: -8.630049705505371
    9. ' ' → logprob: -8.755049705505371
    10. ',' → logprob: -9.255049705505371

Token 1219: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07660455256700516
    2. 'dp' → logprob: -2.7016046047210693
    3. '   ' → logprob: -5.82660436630249
    4. 'from' → logprob: -6.57660436630249
    5. 'import' → logprob: -6.95160436630249
    6. '
' → logprob: -7.82660436630249
    7. '\' → logprob: -9.076604843139648
    8. '        
' → logprob: -9.076604843139648
    9. ' dp' → logprob: -9.326604843139648
    10. '#' (adapté à ' #') → logprob: -9.451604843139648

Token 1220: ' Solution' (ID: 20858)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9174008965492249
    2. 'from' → logprob: -1.29240083694458
    3. '       ' → logprob: -1.41740083694458
    4. 'import' → logprob: -3.54240083694458
    5. '#' → logprob: -4.29240083694458
    6. 'max' → logprob: -4.41740083694458
    7. '   ' → logprob: -4.54240083694458
    8. 'words' → logprob: -4.91740083694458
    9. 'if' → logprob: -6.41740083694458
    10. 'n' → logprob: -6.79240083694458

Token 1221: ' alternative' (ID: 13319)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4599738121032715
    2. '       ' → logprob: -1.8349738121032715
    3. 'import' → logprob: -2.3349738121032715
    4. '   ' → logprob: -2.5849738121032715
    5. 'dp' → logprob: -4.2099738121032715
    6. '#' → logprob: -4.7099738121032715
    7. 'max' → logprob: -5.3349738121032715
    8. '```' → logprob: -6.0849738121032715
    9. ' from' → logprob: -6.3349738121032715
    10. 'def' → logprob: -6.4599738121032715

Token 1222: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5817357897758484
    2. ':' → logprob: -2.206735849380493
    3. '#' → logprob: -2.456735849380493
    4. 'import' → logprob: -2.831735849380493
    5. '       ' → logprob: -3.331735849380493
    6. 'def' → logprob: -3.581735849380493
    7. '=' → logprob: -4.331735610961914
    8. '()' → logprob: -4.331735610961914
    9. '
' → logprob: -4.581735610961914
    10. ' =' → logprob: -4.706735610961914

Token 1223: ' construire' (ID: 92473)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0105345249176025
    2. 'dp' → logprob: -1.7605345249176025
    3. '#' → logprob: -1.8855345249176025
    4. '       ' → logprob: -1.8855345249176025
    5. 'import' → logprob: -2.6355345249176025
    6. '   ' → logprob: -2.7605345249176025
    7. 'def' → logprob: -5.260534286499023
    8. '"""
' → logprob: -5.885534286499023
    9. 'words' → logprob: -6.010534286499023
    10. '```' → logprob: -6.260534286499023

Token 1224: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.4588708877563477
    2. 'next' → logprob: -1.8338708877563477
    3. 'states' → logprob: -1.9588708877563477
    4. 'from' → logprob: -2.2088708877563477
    5. '   ' → logprob: -3.2088708877563477
    6. '```' → logprob: -3.5838708877563477
    7. 'import' → logprob: -3.8338708877563477
    8. '[
' → logprob: -3.8338708877563477
    9. 'prefix' → logprob: -3.9588708877563477
    10. 'state' → logprob: -3.9588708877563477

Token 1225: ' automatis' (ID: 38107)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.07529106736183167
    2. 'Trie' → logprob: -3.575291156768799
    3. 'from' → logprob: -4.325291156768799
    4. 'combined' → logprob: -5.075291156768799
    5. 'suffix' → logprob: -5.200291156768799
    6. 'class' → logprob: -5.575291156768799
    7. '#' → logprob: -5.700291156768799
    8. ' trie' → logprob: -6.575291156768799
    9. 'autom' → logprob: -6.700291156768799
    10. 'A' → logprob: -6.950291156768799

Token 1226: 'me' (ID: 1047)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.5500338077545166
    2. 'e' → logprob: -1.3000338077545166
    3. 'ate' → logprob: -1.9250338077545166
    4. '
' → logprob: -6.5500335693359375
    5. '```' → logprob: -6.8000335693359375
    6. 'me' → logprob: -8.050033569335938
    7. '#' → logprob: -8.550033569335938
    8. 't' → logprob: -8.925033569335938
    9. 'on' → logprob: -8.925033569335938
    10. 'ne' → logprob: -9.550033569335938

Token 1227: ' A' (ID: 355)
  Prédit: '_com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.6425982713699341
    2. '_comb' → logprob: -1.142598271369934
    3. 'com' → logprob: -3.2675981521606445
    4. '_' → logprob: -3.3925981521606445
    5. ' combin' → logprob: -4.3925981521606445
    6. '_mult' → logprob: -4.7675981521606445
    7. 'def' → logprob: -4.8925981521606445
    8. ' combined' → logprob: -4.8925981521606445
    9. 'combined' → logprob: -4.8925981521606445
    10. '_multi' → logprob: -5.1425981521606445

Token 1228: 'ho' (ID: 1555)
  Prédit: 'utom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'utom' → logprob: -0.13952744007110596
    2. 'uto' → logprob: -3.5145273208618164
    3. 'ut' → logprob: -3.7645273208618164
    4. 't' → logprob: -4.389527320861816
    5. '
' → logprob: -4.889527320861816
    6. 'u' → logprob: -5.014527320861816
    7. 'tom' → logprob: -5.264527320861816
    8. '```' → logprob: -5.264527320861816
    9. '_' → logprob: -5.389527320861816
    10. '#' → logprob: -5.764527320861816

Token 1229: '-C' (ID: 10050)
  Prédit: '_C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.8484096527099609
    2. '\' → logprob: -1.348409652709961
    3. 'Cor' → logprob: -2.598409652709961
    4. '-C' → logprob: -2.598409652709961
    5. '_c' → logprob: -2.973409652709961
    6. '
' → logprob: -3.598409652709961
    7. '_' → logprob: -4.098409652709961
    8. '```' → logprob: -5.098409652709961
    9. '_COR' → logprob: -5.223409652709961
    10. '_cor' → logprob: -5.473409652709961

Token 1230: 'oras' (ID: 41056)
  Prédit: 'ras'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ras' → logprob: -0.7334717512130737
    2. 'r' → logprob: -0.9834717512130737
    3. 'ra' → logprob: -2.4834718704223633
    4. 'rs' → logprob: -3.9834718704223633
    5. 'oras' → logprob: -4.858471870422363
    6. 'rash' → logprob: -4.983471870422363
    7. 'ris' → logprob: -5.108471870422363
    8. 'ro' → logprob: -6.358471870422363
    9. 'rase' → logprob: -6.483471870422363
    10. 'rasch' → logprob: -6.483471870422363

Token 1231: 'ick' (ID: 1003)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.214343547821045
    2. '<|end|>' → logprob: -1.964343547821045
    3. 'def' → logprob: -2.214343547821045
    4. '#' → logprob: -2.339343547821045
    5. 'from' → logprob: -2.714343547821045
    6. '   ' → logprob: -2.714343547821045
    7. '_' → logprob: -3.089343547821045
    8. 'A' → logprob: -3.964343547821045
    9. '...' → logprob: -3.964343547821045
    10. '
' → logprob: -4.214343547821045

Token 1232: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7041828632354736
    2. '   ' → logprob: -1.2041828632354736
    3. 'from' → logprob: -1.9541828632354736
    4. 'def' → logprob: -3.7041828632354736
    5. ' from' → logprob: -4.4541826248168945
    6. '#' → logprob: -4.4541826248168945
    7. '...' → logprob: -5.5791826248168945
    8. '
' → logprob: -5.8291826248168945
    9. '       ' → logprob: -6.4541826248168945
    10. ')' → logprob: -6.7041826248168945

Token 1233: ' toutes' (ID: 17502)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.9339933395385742
    2. 'la' → logprob: -1.9339933395385742
    3. 'matching' → logprob: -2.308993339538574
    4. 'l' → logprob: -2.683993339538574
    5. 'pattern' → logprob: -2.933993339538574
    6. 'detect' → logprob: -2.933993339538574
    7. 'patterns' → logprob: -3.183993339538574
    8. 'les' → logprob: -3.933993339538574
    9. 'multi' → logprob: -4.058993339538574
    10. 'recogn' → logprob: -4.308993339538574

Token 1234: ' les' (ID: 1341)
  Prédit: 'autom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'autom' → logprob: -0.9562166333198547
    2. '#' → logprob: -1.58121657371521
    3. '```' → logprob: -2.83121657371521
    4. 'from' → logprob: -3.08121657371521
    5. 'A' → logprob: -3.45621657371521
    6. '
' → logprob: -3.58121657371521
    7. 'def' → logprob: -3.70621657371521
    8. 'Trie' → logprob: -3.70621657371521
    9. 'Autom' → logprob: -3.83121657371521
    10. 'import' → logprob: -4.081216812133789

Token 1235: ' saison' (ID: 38158)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.06192678585648537
    2. 'pattern' → logprob: -3.18692684173584
    3. ' patterns' → logprob: -4.81192684173584
    4. 'autom' → logprob: -6.18692684173584
    5. 's' → logprob: -6.81192684173584
    6. 'mot' → logprob: -6.93692684173584
    7. ' pattern' → logprob: -7.06192684173584
    8. 'words' → logprob: -7.18692684173584
    9. 'pat' → logprob: -7.18692684173584
    10. ' saison' → logprob: -7.56192684173584

Token 1236: ' words' (ID: 6391)
  Prédit: 'Trie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Trie' → logprob: -0.041461460292339325
    2. '_' → logprob: -4.54146146774292
    3. '_tr' → logprob: -4.79146146774292
    4. '_C' → logprob: -5.54146146774292
    5. ' Trie' → logprob: -6.66646146774292
    6. '_A' → logprob: -6.66646146774292
    7. '-' → logprob: -6.66646146774292
    8. 'ah' → logprob: -6.79146146774292
    9. '
' → logprob: -7.16646146774292
    10. '{
' → logprob: -7.41646146774292

Token 1237: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9617682695388794
    2. 'from' → logprob: -0.9617682695388794
    3. 'import' → logprob: -1.5867682695388794
    4. '       ' → logprob: -4.83676815032959
    5. '#' → logprob: -4.83676815032959
    6. ' from' → logprob: -4.96176815032959
    7. '
' → logprob: -5.46176815032959
    8. 'AC' → logprob: -7.08676815032959
    9. '```' → logprob: -7.08676815032959
    10. 'ac' → logprob: -7.21176815032959

Token 1238: ' même' (ID: 9679)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.4806779623031616
    2. 'continu' → logprob: -2.105678081512451
    3. 'import' → logprob: -2.355678081512451
    4. '```' → logprob: -2.855678081512451
    5. 'python' → logprob: -2.980678081512451
    6. 'comb' → logprob: -3.105678081512451
    7. '#' → logprob: -3.230678081512451
    8. 'suite' → logprob: -3.855678081512451
    9. 'concat' → logprob: -4.105678081512451
    10. 'place' → logprob: -4.230678081512451

Token 1239: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -6.12258882028982e-05
    2. 'time' → logprob: -10.12506103515625
    3. ' temps' → logprob: -11.75006103515625
    4. 'temp' → logprob: -11.87506103515625
    5. 'tempo' → logprob: -12.75006103515625
    6. '
' → logprob: -13.37506103515625
    7. 'tem' → logprob: -14.37506103515625
    8. 'ligne' → logprob: -14.50006103515625
    9. '```' → logprob: -15.50006103515625
    10. 'fois' → logprob: -15.62506103515625

Token 1240: ',
' (ID: 412)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7877035140991211
    2. '   ' → logprob: -1.162703514099121
    3. 'import' → logprob: -1.537703514099121
    4. ' from' → logprob: -4.912703514099121
    5. '#' → logprob: -5.537703514099121
    6. '       ' → logprob: -6.287703514099121
    7. '
' → logprob: -6.287703514099121
    8. 'ac' → logprob: -6.912703514099121
    9. 'AC' → logprob: -7.662703514099121
    10. 'def' → logprob: -8.287703514099121

Token 1241: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8685382008552551
    2. '       ' → logprob: -2.1185381412506104
    3. '   ' → logprob: -2.2435381412506104
    4. 'import' → logprob: -2.4935381412506104
    5. ' from' → logprob: -2.4935381412506104
    6. '#' → logprob: -2.7435381412506104
    7. 'ac' → logprob: -3.8685381412506104
    8. '
' → logprob: -4.3685383796691895
    9. '```' → logprob: -4.3685383796691895
    10. 'A' → logprob: -4.6185383796691895

Token 1242: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7742442488670349
    2. '   ' → logprob: -2.0242443084716797
    3. '
' → logprob: -2.6492443084716797
    4. 'ac' → logprob: -2.7742443084716797
    5. '       ' → logprob: -3.2742443084716797
    6. 'import' → logprob: -3.5242443084716797
    7. '.' → logprob: -3.7742443084716797
    8. ' #' → logprob: -4.02424430847168
    9. 'A' → logprob: -4.14924430847168
    10. '"' → logprob: -4.27424430847168

Token 1243: ' cela' (ID: 17542)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11574842780828476
    2. 'from' → logprob: -3.115748405456543
    3. ' #' → logprob: -3.990748405456543
    4. '   ' → logprob: -3.990748405456543
    5. '       ' → logprob: -4.365748405456543
    6. 'import' → logprob: -5.115748405456543
    7. ' from' → logprob: -5.990748405456543
    8. 'ac' → logprob: -6.115748405456543
    9. '
' → logprob: -6.615748405456543
    10. ' ac' → logprob: -7.615748405456543

Token 1244: ' g' (ID: 329)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12837447226047516
    2. 'est' → logprob: -3.1283745765686035
    3. 'continue' → logprob: -3.5033745765686035
    4. 'contin' → logprob: -4.5033745765686035
    5. ' permet' → logprob: -4.5033745765686035
    6. 's' → logprob: -5.3783745765686035
    7. ' continue' → logprob: -5.7533745765686035
    8. '```' → logprob: -6.0033745765686035
    9. ' est' → logprob: -6.1283745765686035
    10. ' #' → logprob: -6.5033745765686035

Token 1245: 'ère' (ID: 4346)
  Prédit: 'enerate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enerate' → logprob: -0.38934847712516785
    2. 'enerated' → logprob: -1.3893485069274902
    3. 'ener' → logprob: -3.6393485069274902
    4. 'eneral' → logprob: -3.6393485069274902
    5. 'enerator' → logprob: -4.76434850692749
    6. 'ner' → logprob: -5.88934850692749
    7. 'en' → logprob: -6.38934850692749
    8. 'raph' → logprob: -6.51434850692749
    9. '#' → logprob: -7.13934850692749
    10. 'enera' → logprob: -7.51434850692749

Token 1246: ' tous' (ID: 10688)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.4664943218231201
    2. ' l' → logprob: -1.8414943218231201
    3. 'l' → logprob: -1.9664943218231201
    4. ' la' → logprob: -2.09149432182312
    5. '```' → logprob: -2.34149432182312
    6. 'les' → logprob: -2.71649432182312
    7. 'la' → logprob: -3.34149432182312
    8. 'le' → logprob: -3.84149432182312
    9. '   ' → logprob: -4.091494560241699
    10. '#' → logprob: -4.091494560241699

Token 1247: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.540087878704071
    2. '```' → logprob: -1.1650879383087158
    3. '_tokens' → logprob: -4.290087699890137
    4. '#' → logprob: -4.415087699890137
    5. 'l' → logprob: -5.290087699890137
    6. '-' → logprob: -5.415087699890137
    7. 'the' → logprob: -5.415087699890137
    8. '   ' → logprob: -5.540087699890137
    9. '_words' → logprob: -5.665087699890137
    10. '_states' → logprob: -5.915087699890137

Token 1248: ' motifs' (ID: 89637)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.8419322371482849
    2. 'mot' → logprob: -1.3419322967529297
    3. 'pattern' → logprob: -1.9669322967529297
    4. 'm' → logprob: -2.7169322967529297
    5. '#' → logprob: -3.5919322967529297
    6. 'match' → logprob: -4.34193229675293
    7. 'matches' → logprob: -4.59193229675293
    8. 'states' → logprob: -4.71693229675293
    9. 'autom' → logprob: -5.09193229675293
    10. 'suffix' → logprob: -5.21693229675293

Token 1249: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7019003033638
    2. 'import' → logprob: -1.2019002437591553
    3. 'from' → logprob: -1.7019002437591553
    4. '#' → logprob: -4.951900482177734
    5. '
' → logprob: -5.076900482177734
    6. ' from' → logprob: -5.576900482177734
    7. '```' → logprob: -6.576900482177734
    8. 'def' → logprob: -6.826900482177734
    9. '       ' → logprob: -7.076900482177734
    10. 'AC' → logprob: -8.201900482177734

Token 1250: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.2076723873615265
    2. 'un' → logprob: -2.207672357559204
    3. 'le' → logprob: -3.332672357559204
    4. 'la' → logprob: -3.832672357559204
    5. 'l' → logprob: -4.332672595977783
    6. 'les' → logprob: -6.332672595977783
    7. 'O' → logprob: -6.332672595977783
    8. '```' → logprob: -6.832672595977783
    9. 'leur' → logprob: -7.707672595977783
    10. ' un' → logprob: -8.582672119140625

Token 1251: ' structure' (ID: 8866)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.48295536637306213
    2. 'chaine' → logprob: -2.8579554557800293
    3. 'unique' → logprob: -2.9829554557800293
    4. 'autom' → logprob: -3.3579554557800293
    5. 'se' → logprob: -3.4829554557800293
    6. 'structure' → logprob: -3.4829554557800293
    7. ' seule' → logprob: -3.6079554557800293
    8. 'for' → logprob: -3.6079554557800293
    9. 'single' → logprob: -4.232955455780029
    10. 'class' → logprob: -4.482955455780029

Token 1252: ' plus' (ID: 2932)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0256388187408447
    2. 'from' → logprob: -1.0256388187408447
    3. 'import' → logprob: -1.5256388187408447
    4. '
' → logprob: -3.6506388187408447
    5. '#' → logprob: -4.275638580322266
    6. ' from' → logprob: -4.400638580322266
    7. '       ' → logprob: -4.900638580322266
    8. 'def' → logprob: -6.525638580322266
    9. '    
' → logprob: -6.900638580322266
    10. 'ac' → logprob: -7.275638580322266

Token 1253: ' compacte' (ID: 186860)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.4240734577178955
    2. 'compl' → logprob: -1.4240734577178955
    3. 'complex' → logprob: -1.6740734577178955
    4. 'large' → logprob: -2.6740734577178955
    5. 'class' → logprob: -3.1740734577178955
    6. 'pro' → logprob: -3.2990734577178955
    7. '#' → logprob: -3.2990734577178955
    8. 'compact' → logprob: -3.4240734577178955
    9. '
' → logprob: -4.049073219299316
    10. ' complexe' → logprob: -4.549073219299316

Token 1254: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9977919459342957
    2. 'from' → logprob: -1.1227920055389404
    3. 'import' → logprob: -1.2477920055389404
    4. ' from' → logprob: -4.997791767120361
    5. '#' → logprob: -5.747791767120361
    6. '
' → logprob: -5.872791767120361
    7. 'ac' → logprob: -6.372791767120361
    8. '```' → logprob: -6.622791767120361
    9. '    
' → logprob: -7.372791767120361
    10. '       ' → logprob: -7.372791767120361

Token 1255: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4682285189628601
    2. 'import' → logprob: -1.0932285785675049
    3. '   ' → logprob: -3.968228578567505
    4. ' from' → logprob: -4.718228340148926
    5. '
' → logprob: -5.093228340148926
    6. '#' → logprob: -6.093228340148926
    7. '```' → logprob: -6.843228340148926
    8. 'ac' → logprob: -7.843228340148926
    9. 'AC' → logprob: -8.093228340148926
    10. 'class' → logprob: -8.718228340148926

Token 1256: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11132410913705826
    2. 'import' → logprob: -2.8613240718841553
    3. '   ' → logprob: -3.1113240718841553
    4. ' from' → logprob: -6.111324310302734
    5. '#' (adapté à ' #') → logprob: -7.361324310302734
    6. '
' → logprob: -7.486324310302734
    7. '```' → logprob: -9.486324310302734
    8. 'ac' → logprob: -9.861324310302734
    9. '       ' → logprob: -10.486324310302734
    10. 'class' → logprob: -11.736324310302734

Token 1257: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07106470316648483
    2. 'import' → logprob: -3.1960647106170654
    3. '   ' → logprob: -3.9460647106170654
    4. ' from' → logprob: -5.571064472198486
    5. '#' → logprob: -6.071064472198486
    6. '       ' → logprob: -6.571064472198486
    7. '```' → logprob: -8.196064949035645
    8. '
' → logprob: -8.321064949035645
    9. 'class' → logprob: -9.321064949035645
    10. 'def' → logprob: -9.446064949035645

Token 1258: ' encode' (ID: 31288)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4111030697822571
    2. 'from' → logprob: -1.7861030101776123
    3. '#' → logprob: -2.4111030101776123
    4. '   ' → logprob: -3.4111030101776123
    5. 'continue' → logprob: -4.786103248596191
    6. 'def' → logprob: -4.786103248596191
    7. 'util' → logprob: -4.911103248596191
    8. '       ' → logprob: -4.911103248596191
    9. 'build' → logprob: -5.661103248596191
    10. 'contin' → logprob: -6.036103248596191

Token 1259: ' les' (ID: 1341)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.986188530921936
    2. '_states' → logprob: -1.361188530921936
    3. 'state' → logprob: -2.3611884117126465
    4. 'states' → logprob: -2.4861884117126465
    5. '_state' → logprob: -2.9861884117126465
    6. ' states' → logprob: -3.6111884117126465
    7. '=' → logprob: -3.7361884117126465
    8. ' the' → logprob: -4.6111884117126465
    9. ' next' → logprob: -4.7361884117126465
    10. 'ac' → logprob: -4.7361884117126465

Token 1260: ' mots' (ID: 38338)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -1.3910878896713257
    2. 'next' → logprob: -1.7660878896713257
    3. 'from' → logprob: -1.8910878896713257
    4. 'states' → logprob: -2.2660880088806152
    5. '#' → logprob: -2.3910880088806152
    6. 'import' → logprob: -2.5160880088806152
    7. 'def' → logprob: -3.7660880088806152
    8. 'tr' → logprob: -3.7660880088806152
    9. ' next' → logprob: -4.141088008880615
    10. 'aho' → logprob: -4.391088008880615

Token 1261: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5357533097267151
    2. '_ids' → logprob: -2.0357532501220703
    3. '_words' → logprob: -2.1607532501220703
    4. '_id' → logprob: -3.1607532501220703
    5. '=' → logprob: -3.4107532501220703
    6. '_chars' → logprob: -3.9107532501220703
    7. '   ' → logprob: -4.28575325012207
    8. '_indices' → logprob: -4.53575325012207
    9. '_idx' → logprob: -5.16075325012207
    10. '_' → logprob: -5.28575325012207

Token 1262: ' leur' (ID: 9853)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16694381833076477
    2. 'indices' → logprob: -2.4169437885284424
    3. 'indice' → logprob: -4.1669440269470215
    4. '[' → logprob: -4.2919440269470215
    5. 'un' → logprob: -4.6669440269470215
    6. 'length' → logprob: -5.7919440269470215
    7. '[len' → logprob: -6.1669440269470215
    8. 'id' → logprob: -6.4169440269470215
    9. 'index' → logprob: -6.5419440269470215
    10. 'leur' → logprob: -6.6669440269470215

Token 1263: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.3483089804649353
    2. 'length' → logprob: -1.59830904006958
    3. 'index' → logprob: -2.84830904006958
    4. 'indice' → logprob: -4.34830904006958
    5. 'ent' → logprob: -5.72330904006958
    6. 'indexes' → logprob: -5.84830904006958
    7. 'long' → logprob: -5.97330904006958
    8. 'id' → logprob: -6.09830904006958
    9. 'chaine' → logprob: -6.22330904006958
    10. 'len' → logprob: -6.47330904006958

Token 1264: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4089277386665344
    2. '
' → logprob: -2.1589276790618896
    3. '   ' → logprob: -2.7839276790618896
    4. '        
' → logprob: -3.1589276790618896
    5. '```' → logprob: -3.6589276790618896
    6. '    
' → logprob: -4.158927917480469
    7. ' 
' → logprob: -4.283927917480469
    8. ')' → logprob: -4.533927917480469
    9. 'tokens' → logprob: -5.283927917480469
    10. 'indices' → logprob: -5.533927917480469

Token 1265: '       ' (ID: 309)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.047224760055542
    2. '   ' → logprob: -1.172224760055542
    3. 'from' → logprob: -2.422224760055542
    4. '```' → logprob: -2.422224760055542
    5. '       ' → logprob: -2.672224760055542
    6. 'import' → logprob: -3.547224760055542
    7. '
' → logprob: -4.172224998474121
    8. 'tr' → logprob: -4.672224998474121
    9. '``' → logprob: -4.672224998474121
    10. 'AC' → logprob: -5.422224998474121

Token 1266: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5605565905570984
    2. 'from' → logprob: -1.1855566501617432
    3. 'ac' → logprob: -3.060556650161743
    4. '```' → logprob: -3.935556650161743
    5. '       ' → logprob: -4.060556411743164
    6. 'import' → logprob: -4.185556411743164
    7. ' from' → logprob: -5.310556411743164
    8. '
' → logprob: -5.435556411743164
    9. '#' (adapté à ' #') → logprob: -5.685556411743164
    10. '``' → logprob: -6.185556411743164

Token 1267: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4639650583267212
    2. '   ' → logprob: -1.2139650583267212
    3. 'import' → logprob: -3.3389649391174316
    4. 'ac' → logprob: -4.713964939117432
    5. '
' → logprob: -4.963964939117432
    6. '#' → logprob: -4.963964939117432
    7. '```' → logprob: -5.838964939117432
    8. ' from' → logprob: -6.213964939117432
    9. 'n' → logprob: -6.338964939117432
    10. 'aho' → logprob: -6.713964939117432

Token 1268: ' construit' (ID: 119882)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.3336199522018433
    2. '#' → logprob: -1.5836199522018433
    3. 'def' → logprob: -1.8336199522018433
    4. 'build' → logprob: -2.583620071411133
    5. '
' → logprob: -2.958620071411133
    6. 'contin' → logprob: -3.458620071411133
    7. '   ' → logprob: -3.458620071411133
    8. '       ' → logprob: -3.458620071411133
    9. 'import' → logprob: -4.208620071411133
    10. 'for' → logprob: -4.458620071411133

Token 1269: ' l' (ID: 305)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4590173661708832
    2. 'import' → logprob: -1.5840173959732056
    3. 'l' → logprob: -2.709017276763916
    4. 'aho' → logprob: -3.209017276763916
    5. '   ' → logprob: -3.459017276763916
    6. 'ac' → logprob: -4.959017276763916
    7. '#' → logprob: -5.709017276763916
    8. 'autom' → logprob: -6.084017276763916
    9. 'class' → logprob: -6.209017276763916
    10. 'la' → logprob: -6.459017276763916

Token 1270: ''aut' (ID: 20714)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aho' → logprob: -0.8778581619262695
    2. 'from' → logprob: -1.2528581619262695
    3. '#' → logprob: -2.5028581619262695
    4. 'class' → logprob: -2.7528581619262695
    5. 'A' → logprob: -3.6278581619262695
    6. 'AC' → logprob: -3.8778581619262695
    7. '
' → logprob: -4.2528581619262695
    8. 'e' → logprob: -4.3778581619262695
    9. 'root' → logprob: -4.8778581619262695
    10. 'ac' → logprob: -5.0028581619262695

Token 1271: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -4.620622712536715e-05
    2. 'ocomplete' → logprob: -10.500045776367188
    3. 'o' → logprob: -12.000045776367188
    4. 'omation' → logprob: -12.250045776367188
    5. 'or' → logprob: -12.625045776367188
    6. 'ocode' → logprob: -14.500045776367188
    7. 'omap' → logprob: -14.500045776367188
    8. 'ocom' → logprob: -14.875045776367188
    9. 'OM' → logprob: -14.875045776367188
    10. 'omne' → logprob: -15.000045776367188

Token 1272: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.02768297865986824
    2. 'aton' → logprob: -4.027682781219482
    3. 'at' → logprob: -4.777682781219482
    4. 'a' → logprob: -8.52768325805664
    5. '```' → logprob: -9.27768325805664
    6. '#' → logprob: -9.40268325805664
    7. '{
' → logprob: -9.40268325805664
    8. '
' → logprob: -9.52768325805664
    9. 'ated' → logprob: -9.52768325805664
    10. 'atique' → logprob: -9.52768325805664

Token 1273: ' d' (ID: 272)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18700428307056427
    2. '   ' → logprob: -2.312004327774048
    3. 'import' → logprob: -3.687004327774048
    4. 'class' → logprob: -3.937004327774048
    5. '
' → logprob: -4.937004089355469
    6. '```' → logprob: -4.937004089355469
    7. ' from' → logprob: -5.312004089355469
    8. '#' → logprob: -5.812004089355469
    9. 'ac' → logprob: -6.312004089355469
    10. '       ' → logprob: -7.562004089355469

Token 1274: ''A' (ID: 40735)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aho' → logprob: -0.10055137425661087
    2. 'ho' → logprob: -3.1005513668060303
    3. 'A' → logprob: -3.4755513668060303
    4. ' aho' → logprob: -4.725551605224609
    5. 'states' → logprob: -6.100551605224609
    6. 'ah' → logprob: -6.475551605224609
    7. ''' → logprob: -6.850551605224609
    8. ''A' → logprob: -6.850551605224609
    9. ' states' → logprob: -7.350551605224609
    10. '#' → logprob: -7.600551605224609

Token 1275: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -1.6405310816480778e-05
    2. 'хо' → logprob: -11.250016212463379
    3. 'h' → logprob: -13.750016212463379
    4. '#' → logprob: -14.375016212463379
    5. '```' → logprob: -15.000016212463379
    6. '
' → logprob: -15.125016212463379
    7. '호' → logprob: -15.875016212463379
    8. ''ho' → logprob: -16.000017166137695
    9. 'aho' → logprob: -16.125017166137695
    10. 'hoc' → logprob: -16.250017166137695

Token 1276: '-C' (ID: 10050)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.016761312261223793
    2. '_C' → logprob: -4.266761302947998
    3. '-C' → logprob: -6.516761302947998
    4. 'C' → logprob: -7.891761302947998
    5. '_c' → logprob: -8.516761779785156
    6. '\' → logprob: -9.266761779785156
    7. '_cor' → logprob: -9.266761779785156
    8. '_COR' → logprob: -9.516761779785156
    9. 'cor' → logprob: -9.641761779785156
    10. 'Cook' → logprob: -10.641761779785156

Token 1277: 'oras' (ID: 41056)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10637564212083817
    2. 'ro' → logprob: -4.106375694274902
    3. 'u' → logprob: -4.731375694274902
    4. 'rs' → logprob: -4.731375694274902
    5. 'rc' → logprob: -4.731375694274902
    6. 'rus' → logprob: -4.981375694274902
    7. 'R' → logprob: -5.106375694274902
    8. 'ras' → logprob: -5.356375694274902
    9. 'rl' → logprob: -5.606375694274902
    10. 'Cor' → logprob: -5.731375694274902

Token 1278: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.1713753640651703
    2. 'ic' → logprob: -2.671375274658203
    3. 'h' → logprob: -3.796375274658203
    4. 'r' → logprob: -5.171375274658203
    5. 'ck' → logprob: -5.296375274658203
    6. '-C' → logprob: -5.671375274658203
    7. '\' → logprob: -5.671375274658203
    8. 'i' → logprob: -5.796375274658203
    9. 'ï' → logprob: -6.046375274658203
    10. 'rd' → logprob: -6.046375274658203

Token 1279: ' des' (ID: 731)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.48326098918914795
    2. '   ' → logprob: -1.108260989189148
    3. 'class' → logprob: -3.9832611083984375
    4. '
' → logprob: -4.1082611083984375
    5. 'import' → logprob: -4.7332611083984375
    6. ' from' → logprob: -5.3582611083984375
    7. '#' → logprob: -6.1082611083984375
    8. '    
' → logprob: -7.8582611083984375
    9. '       ' → logprob: -8.108261108398438
    10. '```' → logprob: -8.108261108398438

Token 1280: ' saison' (ID: 38158)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.6874757409095764
    2. 'season' → logprob: -1.1874756813049316
    3. ' saison' → logprob: -2.4374756813049316
    4. 'pattern' → logprob: -3.6874756813049316
    5. 's' → logprob: -3.9374756813049316
    6. 'mot' → logprob: -4.062475681304932
    7. ' season' → logprob: -4.312475681304932
    8. ' saisons' → logprob: -4.812475681304932
    9. ' patterns' → logprob: -4.937475681304932
    10. 'm' → logprob: -5.312475681304932

Token 1281: ' words' (ID: 6391)
  Prédit: '-C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-C' → logprob: -0.4032476842403412
    2. '   ' → logprob: -1.4032477140426636
    3. '-c' → logprob: -3.653247594833374
    4. '       ' → logprob: -5.028247833251953
    5. 'cor' → logprob: -5.153247833251953
    6. '_C' → logprob: -5.278247833251953
    7. '#' → logprob: -5.403247833251953
    8. '
' → logprob: -5.653247833251953
    9. 'words' → logprob: -5.653247833251953
    10. 'class' → logprob: -5.653247833251953

Token 1282: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8377737402915955
    2. 'from' → logprob: -1.0877737998962402
    3. '
' → logprob: -1.8377737998962402
    4. 'import' → logprob: -3.5877737998962402
    5. 'class' → logprob: -3.9627737998962402
    6. ' from' → logprob: -4.33777379989624
    7. '       ' → logprob: -5.33777379989624
    8. '    
' → logprob: -6.33777379989624
    9. '#' → logprob: -6.58777379989624
    10. '```' → logprob: -6.71277379989624

Token 1283: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5880758166313171
    2. '   ' → logprob: -0.9630758166313171
    3. 'class' → logprob: -3.463075876235962
    4. 'import' → logprob: -4.088075637817383
    5. '
' → logprob: -4.588075637817383
    6. '    
' → logprob: -6.338075637817383
    7. '#' → logprob: -6.588075637817383
    8. ' from' → logprob: -7.338075637817383
    9. '```' → logprob: -7.963075637817383
    10. 'def' → logprob: -8.713075637817383

Token 1284: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2273786962032318
    2. 'class' → logprob: -2.2273786067962646
    3. '   ' → logprob: -2.4773786067962646
    4. '#' (adapté à ' #') → logprob: -5.727378845214844
    5. ' from' → logprob: -5.727378845214844
    6. 'import' → logprob: -6.102378845214844
    7. '
' → logprob: -6.352378845214844
    8. 'tr' → logprob: -8.102378845214844
    9. '```' → logprob: -8.352378845214844
    10. 'ac' → logprob: -9.102378845214844

Token 1285: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10855084657669067
    2. 'class' → logprob: -2.608550786972046
    3. '   ' → logprob: -3.733550786972046
    4. '#' → logprob: -5.858551025390625
    5. 'import' → logprob: -6.858551025390625
    6. '
' → logprob: -7.608551025390625
    7. 'def' → logprob: -7.983551025390625
    8. '       ' → logprob: -8.358551025390625
    9. ' from' → logprob: -8.858551025390625
    10. '```' → logprob: -9.483551025390625

Token 1286: ' fera' (ID: 69827)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.4497554302215576
    2. 'def' → logprob: -1.6997554302215576
    3. 'continue' → logprob: -1.6997554302215576
    4. '#' → logprob: -1.8247554302215576
    5. 'build' → logprob: -2.3247554302215576
    6. '   ' → logprob: -3.1997554302215576
    7. 'class' → logprob: -3.3247554302215576
    8. 'import' → logprob: -3.5747554302215576
    9. 'contin' → logprob: -4.074755668640137
    10. ' continue' → logprob: -5.824755668640137

Token 1287: ' DP' (ID: 51992)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4509871304035187
    2. 'from' → logprob: -2.7009871006011963
    3. 'l' → logprob: -2.8259871006011963
    4. 'la' → logprob: -2.8259871006011963
    5. '#' → logprob: -2.9509871006011963
    6. '
' → logprob: -3.3259871006011963
    7. 'une' → logprob: -4.075987339019775
    8. 'def' → logprob: -4.075987339019775
    9. 'class' → logprob: -4.075987339019775
    10. 'le' → logprob: -5.075987339019775

Token 1288: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06505058705806732
    2. '       ' → logprob: -4.0650506019592285
    3. '()' → logprob: -5.0650506019592285
    4. '(' → logprob: -5.1900506019592285
    5. '(
' → logprob: -5.1900506019592285
    6. '_' → logprob: -5.4400506019592285
    7. '#' → logprob: -5.6900506019592285
    8. '
' → logprob: -5.9400506019592285
    9. 'def' → logprob: -6.0650506019592285
    10. 'import' → logprob: -6.0650506019592285

Token 1289: ':
' (ID: 734)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.05241064727306366
    2. '   ' → logprob: -3.30241060256958
    3. 'len' → logprob: -5.55241060256958
    4. 'state' → logprob: -5.55241060256958
    5. 'N' → logprob: -6.30241060256958
    6. 'ac' → logprob: -6.55241060256958
    7. ' pos' → logprob: -6.55241060256958
    8. 'position' → logprob: -7.80241060256958
    9. 'states' → logprob: -7.92741060256958
    10. '(pos' → logprob: -8.927411079406738

Token 1290: '       ' (ID: 309)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.30753234028816223
    2. '   ' → logprob: -1.5575323104858398
    3. 'state' → logprob: -4.05753231048584
    4. '(pos' → logprob: -4.43253231048584
    5. '       ' → logprob: -4.55753231048584
    6. ' pos' → logprob: -5.05753231048584
    7. '[pos' → logprob: -6.05753231048584
    8. 'position' → logprob: -6.05753231048584
    9. 'dp' → logprob: -6.68253231048584
    10. ' (' → logprob: -7.93253231048584

Token 1291: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10840826481580734
    2. '       ' → logprob: -3.608408212661743
    3. 'state' → logprob: -3.608408212661743
    4. '   ' → logprob: -3.858408212661743
    5. '(pos' → logprob: -4.858408451080322
    6. '[pos' → logprob: -4.858408451080322
    7. ' pos' → logprob: -5.358408451080322
    8. 'position' → logprob: -5.983408451080322
    9. '[' → logprob: -6.858408451080322
    10. '[
' → logprob: -7.733408451080322

Token 1292: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.043940141797065735
    2. ' pos' → logprob: -3.7939400672912598
    3. 'state' → logprob: -5.04394006729126
    4. '   ' → logprob: -5.41894006729126
    5. '       ' → logprob: -5.66894006729126
    6. 'position' → logprob: -6.16894006729126
    7. '(pos' → logprob: -7.04394006729126
    8. '#' → logprob: -7.41894006729126
    9. '[pos' → logprob: -7.41894006729126
    10. 'states' → logprob: -7.91894006729126

Token 1293: ' (' (ID: 350)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.13710375130176544
    2. '[' → logprob: -3.262103796005249
    3. '[
' → logprob: -4.01210355758667
    4. '   ' → logprob: -4.01210355758667
    5. ',' → logprob: -4.26210355758667
    6. ' =' → logprob: -5.01210355758667
    7. '```' → logprob: -5.38710355758667
    8. '_' → logprob: -5.51210355758667
    9. '=' → logprob: -5.51210355758667
    10. '_in' → logprob: -5.88710355758667

Token 1294: '0' (ID: 15)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0751013234257698
    2. ')' → logprob: -3.450101375579834
    3. '[pos' → logprob: -4.200101375579834
    4. '[' → logprob: -5.700101375579834
    5. '(pos' → logprob: -5.825101375579834
    6. ',' → logprob: -5.825101375579834
    7. 'M' → logprob: -6.200101375579834
    8. ' pos' → logprob: -6.450101375579834
    9. '0' → logprob: -6.575101375579834
    10. '   ' → logprob: -6.700101375579834

Token 1295: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3123706579208374
    2. '
' → logprob: -2.687370777130127
    3. ',' → logprob: -2.937370777130127
    4. ',
' → logprob: -2.937370777130127
    5. '..' → logprob: -3.187370777130127
    6. '...' → logprob: -4.187370777130127
    7. ')
' → logprob: -5.562370777130127
    8. '=' → logprob: -5.687370777130127
    9. '   ' → logprob: -5.687370777130127
    10. '```' → logprob: -5.687370777130127

Token 1296: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.015978535637259483
    2. 'N' → logprob: -4.2659783363342285
    3. ' M' → logprob: -6.8909783363342285
    4. ')' → logprob: -7.8909783363342285
    5. '   ' → logprob: -8.390978813171387
    6. 'K' → logprob: -9.890978813171387
    7. ' ' → logprob: -10.765978813171387
    8. ')
' → logprob: -11.015978813171387
    9. ' N' → logprob: -11.265978813171387
    10. '  ' → logprob: -11.515978813171387

Token 1297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26458993554115295
    2. ')
' → logprob: -2.13959002494812
    3. '[' → logprob: -3.13959002494812
    4. '+' → logprob: -3.63959002494812
    5. ')[' → logprob: -3.63959002494812
    6. '```' → logprob: -4.764589786529541
    7. ',
' → logprob: -6.389589786529541
    8. ',' → logprob: -6.514589786529541
    9. '[
' → logprob: -6.639589786529541
    10. '[pos' → logprob: -7.014589786529541

Token 1298: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0454269647598267
    2. '[' → logprob: -1.5454269647598267
    3. '       ' → logprob: -2.295426845550537
    4. '[
' → logprob: -2.545426845550537
    5. ',
' → logprob: -2.670426845550537
    6. '[word' → logprob: -2.795426845550537
    7. '   ' → logprob: -3.420426845550537
    8. '```' → logprob: -3.545426845550537
    9. '[pos' → logprob: -3.670426845550537
    10. '#' → logprob: -4.170426845550537

Token 1299: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7013875842094421
    2. '[word' → logprob: -1.576387643814087
    3. '[
' → logprob: -2.201387643814087
    4. '```' → logprob: -3.076387643814087
    5. '[pos' → logprob: -3.326387643814087
    6. ',' → logprob: -3.451387643814087
    7. ',
' → logprob: -4.326387405395508
    8. 'word' → logprob: -4.451387405395508
    9. '[position' → logprob: -4.451387405395508
    10. '       ' → logprob: -4.701387405395508

Token 1300: ' mot' (ID: 3598)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.6800538897514343
    2. 'state' → logprob: -1.305053949356079
    3. 'current' → logprob: -2.430053949356079
    4. 'words' → logprob: -3.055053949356079
    5. 'states' → logprob: -3.180053949356079
    6. 'ac' → logprob: -4.8050537109375
    7. '   ' → logprob: -4.8050537109375
    8. ' word' → logprob: -5.0550537109375
    9. 'autom' → logprob: -5.9300537109375
    10. 'curr' → logprob: -6.1800537109375

Token 1301: ' actuel' (ID: 113646)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5941275358200073
    2. '_id' → logprob: -2.719127655029297
    3. '_idx' → logprob: -2.844127655029297
    4. 's' → logprob: -2.844127655029297
    5. '[' → logprob: -2.969127655029297
    6. ' _' → logprob: -2.969127655029297
    7. '_current' → logprob: -3.469127655029297
    8. '_indices' → logprob: -3.969127655029297
    9. '_index' → logprob: -3.969127655029297
    10. ')' → logprob: -4.219127655029297

Token 1302: ' (' (ID: 350)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.0196975469589233
    2. '_idx' → logprob: -1.6446975469589233
    3. '_states' → logprob: -2.269697666168213
    4. '_size' → logprob: -2.644697666168213
    5. ' =' → logprob: -3.019697666168213
    6. '_index' → logprob: -3.144697666168213
    7. '_state' → logprob: -3.394697666168213
    8. ',' → logprob: -3.644697666168213
    9. '   ' → logprob: -4.144697666168213
    10. '_len' → logprob: -4.144697666168213

Token 1303: 'id' (ID: 315)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01964292861521244
    2. '(len' → logprob: -5.0196428298950195
    3. ' len' → logprob: -5.0196428298950195
    4. ')' → logprob: -5.8946428298950195
    5. '[len' → logprob: -7.1446428298950195
    6. 'words' → logprob: -7.6446428298950195
    7. '=len' → logprob: -8.26964282989502
    8. ',' → logprob: -8.39464282989502
    9. '
' → logprob: -8.76964282989502
    10. 'idx' → logprob: -8.89464282989502

Token 1304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6261872053146362
    2. '_current' → logprob: -2.126187324523926
    3. '[current' → logprob: -2.251187324523926
    4. ')[' → logprob: -2.626187324523926
    5. ')
' → logprob: -3.126187324523926
    6. '=' → logprob: -3.126187324523926
    7. 'current' → logprob: -4.001187324523926
    8. '[' → logprob: -4.751187324523926
    9. '][' → logprob: -4.751187324523926
    10. '```' → logprob: -5.001187324523926

Token 1305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0580650269985199
    2. '#' → logprob: -3.1830649375915527
    3. '   ' → logprob: -4.933064937591553
    4. ',' → logprob: -5.058064937591553
    5. '[' → logprob: -8.058065414428711
    6. ',
' → logprob: -8.183065414428711
    7. ')' → logprob: -8.433065414428711
    8. '```' → logprob: -8.933065414428711
    9. ' #' → logprob: -9.683065414428711
    10. ')
' → logprob: -10.058065414428711

Token 1306: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.028349144384264946
    2. '       ' → logprob: -4.528348922729492
    3. '   ' → logprob: -5.278348922729492
    4. ',' → logprob: -5.653348922729492
    5. ' #' → logprob: -6.153348922729492
    6. '[
' → logprob: -6.653348922729492
    7. '```' → logprob: -7.028348922729492
    8. ',
' → logprob: -7.028348922729492
    9. '[' → logprob: -7.153348922729492
    10. 'word' → logprob: -7.278348922729492

Token 1307: ' état' (ID: 59181)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.17761482298374176
    2. 'state' → logprob: -1.9276148080825806
    3. 'autom' → logprob: -5.302614688873291
    4. 'aho' → logprob: -5.677614688873291
    5. 'season' → logprob: -6.177614688873291
    6. 'len' → logprob: -6.802614688873291
    7. 'auto' → logprob: -7.302614688873291
    8. 'ah' → logprob: -7.427614688873291
    9. 'states' → logprob: -7.677614688873291
    10. 'current' → logprob: -7.677614688873291

Token 1308: ' du' (ID: 1462)
  Prédit: '_ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ac' → logprob: -0.5513295531272888
    2. '_' → logprob: -2.4263296127319336
    3. 's' → logprob: -2.5513296127319336
    4. 'ac' → logprob: -3.0513296127319336
    5. ' =' → logprob: -3.1763296127319336
    6. '_AC' → logprob: -3.5513296127319336
    7. '```' → logprob: -3.8013296127319336
    8. '
' → logprob: -4.051329612731934
    9. '_de' → logprob: -4.176329612731934
    10. 'AC' → logprob: -4.301329612731934

Token 1309: ' automate' (ID: 90080)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aho' → logprob: -0.4845893383026123
    2. 'ac' → logprob: -1.7345893383026123
    3. 'autom' → logprob: -1.7345893383026123
    4. ' aho' → logprob: -3.9845893383026123
    5. 'ah' → logprob: -5.109589576721191
    6. ' autom' → logprob: -6.234589576721191
    7. 'AC' → logprob: -6.734589576721191
    8. 'ach' → logprob: -6.984589576721191
    9. 'auto' → logprob: -7.859589576721191
    10. 'aco' → logprob: -7.859589576721191

Token 1310: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023923933506011963
    2. '
' → logprob: -4.523923873901367
    3. '```' → logprob: -5.773923873901367
    4. '       ' → logprob: -6.023923873901367
    5. 'from' → logprob: -6.148923873901367
    6. 'import' → logprob: -6.648923873901367
    7. '_ac' → logprob: -7.648923873901367
    8. 'ac' → logprob: -7.773923873901367
    9. '#' → logprob: -7.773923873901367
    10. 'def' → logprob: -7.898923873901367

Token 1311: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.009251873940229416
    2. 'co' → logprob: -5.634252071380615
    3. '_co' → logprob: -6.634252071380615
    4. '_c' → logprob: -6.884252071380615
    5. '   ' → logprob: -7.509252071380615
    6. 'C' → logprob: -7.634252071380615
    7. 'cho' → logprob: -7.634252071380615
    8. '_C' → logprob: -7.759252071380615
    9. 'h' → logprob: -7.884252071380615
    10. 'c' → logprob: -8.759251594543457

Token 1312: '-C' (ID: 10050)
  Prédit: '-C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-C' → logprob: -0.981184184551239
    2. '-c' → logprob: -1.7311842441558838
    3. '_c' → logprob: -1.8561842441558838
    4. '-' → logprob: -2.106184244155884
    5. 'n' → logprob: -3.231184244155884
    6. '
' → logprob: -3.606184244155884
    7. '_C' → logprob: -3.731184244155884
    8. 'C' → logprob: -4.231184005737305
    9. 'Cor' → logprob: -4.356184005737305
    10. '_' → logprob: -4.981184005737305

Token 1313: 'oras' (ID: 41056)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.30575379729270935
    2. 'ric' → logprob: -1.9307538270950317
    3. 'rc' → logprob: -3.430753707885742
    4. 'ris' → logprob: -3.930753707885742
    5. 'oric' → logprob: -4.305753707885742
    6. 'C' → logprob: -4.555753707885742
    7. 'rics' → logprob: -4.805753707885742
    8. 'ro' → logprob: -4.930753707885742
    9. 'Cor' → logprob: -5.305753707885742
    10. 'R' → logprob: -5.555753707885742

Token 1314: 'ick' (ID: 1003)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.9350047707557678
    2. 'th' → logprob: -1.185004711151123
    3. 'ick' → logprob: -1.935004711151123
    4. 'ich' → logprob: -3.060004711151123
    5. 'ck' → logprob: -3.185004711151123
    6. 'ch' → logprob: -3.685004711151123
    7. 'h' → logprob: -4.435004711151123
    8. 'tic' → logprob: -4.560004711151123
    9. 'hic' → logprob: -5.435004711151123
    10. 'ut' → logprob: -5.560004711151123

Token 1315: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2680423855781555
    2. 'from' → logprob: -2.0180423259735107
    3. 'import' → logprob: -3.6430423259735107
    4. '#' → logprob: -3.7680423259735107
    5. '
' → logprob: -3.8930423259735107
    6. 'class' → logprob: -4.64304256439209
    7. 'def' → logprob: -5.14304256439209
    8. '```' → logprob: -5.51804256439209
    9. '       ' → logprob: -5.89304256439209
    10. ' from' → logprob: -6.14304256439209

Token 1316: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7389845252037048
    2. '0' → logprob: -1.8639845848083496
    3. 'ac' → logprob: -2.6139845848083496
    4. 'aho' → logprob: -3.1139845848083496
    5. 'size' → logprob: -3.2389845848083496
    6. 'current' → logprob: -3.4889845848083496
    7. 'state' → logprob: -3.4889845848083496
    8. 'None' → logprob: -3.6139845848083496
    9. 'autom' → logprob: -4.11398458480835
    10. 'len' → logprob: -4.23898458480835

Token 1317: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.579702615737915
    2. '_tokens' → logprob: -1.579702615737915
    3. '_token' → logprob: -2.579702615737915
    4. ' of' → logprob: -3.329702615737915
    5. '_of' → logprob: -3.704702615737915
    6. ' _' → logprob: -4.204702377319336
    7. ' de' → logprob: -4.454702377319336
    8. 'of' → logprob: -4.579702377319336
    9. 's' → logprob: -5.079702377319336
    10. ' =' → logprob: -5.204702377319336

Token 1318: ''ét' (ID: 23771)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.2319352924823761
    2. 'states' → logprob: -1.6069352626800537
    3. '_nodes' → logprob: -5.981935501098633
    4. ')' → logprob: -7.106935501098633
    5. '
' → logprob: -7.481935501098633
    6. 'et' → logprob: -7.731935501098633
    7. 'ét' → logprob: -7.981935501098633
    8. '```' → logprob: -7.981935501098633
    9. 't' → logprob: -8.106935501098633
    10. ' states' → logprob: -8.606935501098633

Token 1319: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.00160317518748343
    2. 'at' → logprob: -6.501603126525879
    3. '```' → logprob: -11.126603126525879
    4. 'âts' → logprob: -11.251603126525879
    5. '``' → logprob: -11.501603126525879
    6. '
' → logprob: -11.814103126525879
    7. 'as' → logprob: -12.314103126525879
    8. 's' → logprob: -12.751603126525879
    9. '_' → logprob: -12.939103126525879
    10. 'a' → logprob: -13.001603126525879

Token 1320: ' <=' (ID: 5017)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13453437387943268
    2. '+' → logprob: -3.3845343589782715
    3. ')
' → logprob: -3.7595343589782715
    4. ' +' → logprob: -4.2595343589782715
    5. ' =' → logprob: -4.6345343589782715
    6. ' )' → logprob: -4.8845343589782715
    7. '=' → logprob: -4.8845343589782715
    8. ',' → logprob: -5.5095343589782715
    9. '_' → logprob: -5.6345343589782715
    10. '```' → logprob: -6.1345343589782715

Token 1321: ' somme' (ID: 64484)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4930421710014343
    2. 'sum' → logprob: -1.618042230606079
    3. 'len' → logprob: -2.493042230606079
    4. '1' → logprob: -3.243042230606079
    5. '
' → logprob: -3.493042230606079
    6. '10' → logprob: -4.3680419921875
    7. '500' → logprob: -4.7430419921875
    8. '200' → logprob: -4.8680419921875
    9. 'max' → logprob: -6.1180419921875
    10. '0' → logprob: -6.6180419921875

Token 1322: '(length' (ID: 47037)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6382157206535339
    2. 'des' → logprob: -2.1382157802581787
    3. 'of' → logprob: -2.2632157802581787
    4. ' des' → logprob: -2.5132157802581787
    5. '_des' → logprob: -3.0132157802581787
    6. '_total' → logprob: -3.2632157802581787
    7. '_of' → logprob: -3.6382157802581787
    8. '
' → logprob: -4.5132155418396
    9. ' of' → logprob: -4.8882155418396
    10. '```' → logprob: -5.0132155418396

Token 1323: 's' (ID: 82)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5570404529571533
    2. 'of' → logprob: -1.9320404529571533
    3. '(p' → logprob: -2.0570404529571533
    4. '(pattern' → logprob: -2.1820404529571533
    5. '(s' → logprob: -2.5570404529571533
    6. ')' → logprob: -2.5570404529571533
    7. 's' → logprob: -2.6820404529571533
    8. '(words' → logprob: -2.8070404529571533
    9. '(
' → logprob: -3.6820404529571533
    10. '(' → logprob: -3.8070404529571533

Token 1324: ' des' (ID: 731)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.2839701175689697
    2. 'des' → logprob: -1.4089701175689697
    3. ')' → logprob: -2.2839701175689697
    4. 's' → logprob: -2.7839701175689697
    5. ' des' → logprob: -2.7839701175689697
    6. ')
' → logprob: -3.1589701175689697
    7. '_' → logprob: -3.2839701175689697
    8. '+' → logprob: -3.4089701175689697
    9. ' of' → logprob: -3.6589701175689697
    10. '(s' → logprob: -4.158969879150391

Token 1325: ' saison' (ID: 38158)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.5292949676513672
    2. 'season' → logprob: -0.9042949676513672
    3. 'pattern' → logprob: -5.279294967651367
    4. 's' → logprob: -8.029294967651367
    5. ' season' → logprob: -8.154294967651367
    6. 'pat' → logprob: -8.154294967651367
    7. ' patterns' → logprob: -9.404294967651367
    8. ' saison' → logprob: -11.279294967651367
    9. 'se' → logprob: -11.404294967651367
    10. '(pattern' → logprob: -11.404294967651367

Token 1326: ' words' (ID: 6391)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.13113029301166534
    2. 'words' → logprob: -2.5061302185058594
    3. 's' → logprob: -3.3811302185058594
    4. '-' → logprob: -5.381130218505859
    5. '_word' → logprob: -7.131130218505859
    6. ')' → logprob: -7.756130218505859
    7. ' words' → logprob: -8.25613021850586
    8. '_s' → logprob: -8.25613021850586
    9. ']' → logprob: -8.88113021850586
    10. 'word' → logprob: -9.25613021850586

Token 1327: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20150543749332428
    2. ')+' → logprob: -2.451505422592163
    3. '+' → logprob: -3.201505422592163
    4. ')
' → logprob: -3.326505422592163
    5. ' +' → logprob: -4.201505661010742
    6. '))' → logprob: -6.701505661010742
    7. ' )' → logprob: -7.201505661010742
    8. '):
' → logprob: -7.576505661010742
    9. '```' → logprob: -7.576505661010742
    10. '   ' → logprob: -8.201505661010742

Token 1328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050136543810367584
    2. '   ' → logprob: -3.0501365661621094
    3. ')' → logprob: -7.300136566162109
    4. '#' → logprob: -8.30013656616211
    5. '        
' → logprob: -9.17513656616211
    6. '```' → logprob: -9.30013656616211
    7. '`' → logprob: -9.92513656616211
    8. '    
' → logprob: -9.92513656616211
    9. '           ' → logprob: -10.05013656616211
    10. ',' → logprob: -10.05013656616211

Token 1329: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25775742530822754
    2. '   ' → logprob: -2.1327574253082275
    3. '#' (adapté à ' #') → logprob: -2.2577574253082275
    4. '
' → logprob: -7.007757186889648
    5. '```' → logprob: -7.257757186889648
    6. 'ac' → logprob: -7.757757186889648
    7. '`' → logprob: -8.382757186889648
    8. 'state' → logprob: -8.757757186889648
    9. ' ' → logprob: -8.882757186889648
    10. ' #' → logprob: -9.007757186889648

Token 1330: ' dans' (ID: 2671)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2907215654850006
    2. '#' → logprob: -2.1657216548919678
    3. '   ' → logprob: -2.1657216548919678
    4. 'import' → logprob: -4.540721416473389
    5. 'class' → logprob: -4.790721416473389
    6. '
' → logprob: -7.165721416473389
    7. 'def' → logprob: -7.540721416473389
    8. 'size' → logprob: -7.665721416473389
    9. 'max' → logprob: -7.790721416473389
    10. '       ' → logprob: -8.290721893310547

Token 1331: ' cet' (ID: 19505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1126410961151123
    2. '#' → logprob: -1.3626410961151123
    3. 'la' → logprob: -1.8626410961151123
    4. '   ' → logprob: -2.4876410961151123
    5. 'le' → logprob: -2.7376410961151123
    6. 'the' → logprob: -3.4876410961151123
    7. 'aho' → logprob: -3.7376410961151123
    8. 'len' → logprob: -4.987641334533691
    9. 'autom' → logprob: -4.987641334533691
    10. 'def' → logprob: -5.362641334533691

Token 1332: ' état' (ID: 59181)
  Prédit: 'autom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'autom' → logprob: -1.227102518081665
    2. '
' → logprob: -1.477102518081665
    3. 'A' → logprob: -2.227102518081665
    4. ' automate' → logprob: -2.852102518081665
    5. '#' → logprob: -3.227102518081665
    6. ' autom' → logprob: -3.227102518081665
    7. ''aut' → logprob: -3.352102518081665
    8. 'e' → logprob: -3.352102518081665
    9. 'ac' → logprob: -3.602102518081665
    10. '```' → logprob: -3.727102518081665

Token 1333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4091631174087524
    2. 's' → logprob: -1.4091631174087524
    3. '_' → logprob: -2.284162998199463
    4. ':' → logprob: -2.784162998199463
    5. ' =' → logprob: -2.909162998199463
    6. '[' → logprob: -3.409162998199463
    7. '   ' → logprob: -3.409162998199463
    8. '.' → logprob: -3.534162998199463
    9. ' of' → logprob: -3.659162998199463
    10. '_s' → logprob: -3.659162998199463

Token 1334: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6243877410888672
    2. '#' → logprob: -1.4993877410888672
    3. '       ' → logprob: -1.9993877410888672
    4. ' on' → logprob: -2.624387741088867
    5. 'for' → logprob: -4.499387741088867
    6. 'les' → logprob: -4.874387741088867
    7. '   ' → logprob: -5.874387741088867
    8. 'le' → logprob: -6.374387741088867
    9. ''on' → logprob: -6.374387741088867
    10. 'match' → logprob: -6.749387741088867

Token 1335: ' sait' (ID: 52101)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2128456085920334
    2. '       ' → logprob: -2.83784556388855
    3. 'pe' → logprob: -3.58784556388855
    4. 'contin' → logprob: -3.71284556388855
    5. 'continue' → logprob: -4.337845802307129
    6. '   ' → logprob: -4.337845802307129
    7. 'pour' → logprob: -4.587845802307129
    8. 'vais' → logprob: -4.962845802307129
    9. 'ver' → logprob: -5.087845802307129
    10. 'can' → logprob: -5.087845802307129

Token 1336: ' quelles' (ID: 138516)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.732293963432312
    2. '   ' → logprob: -1.482293963432312
    3. '```' → logprob: -2.7322940826416016
    4. 'comment' → logprob: -3.4822940826416016
    5. ' exactement' → logprob: -3.4822940826416016
    6. 'où' → logprob: -4.107294082641602
    7. ' où' → logprob: -4.232294082641602
    8. 'exact' → logprob: -4.357294082641602
    9. ' que' → logprob: -4.607294082641602
    10. '_' → logprob: -4.732294082641602

Token 1337: ' saisons' (ID: 168672)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.049255609512329
    2. 'patterns' → logprob: -2.174255609512329
    3. 'indices' → logprob: -2.299255609512329
    4. '#' → logprob: -3.049255609512329
    5. '   ' → logprob: -3.049255609512329
    6. 'pattern' → logprob: -3.299255609512329
    7. 'suffix' → logprob: -3.424255609512329
    8. 'autom' → logprob: -3.674255609512329
    9. 'mot' → logprob: -3.674255609512329
    10. 'occ' → logprob: -3.924255609512329

Token 1338: ' sont' (ID: 5242)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.9290956258773804
    2. ' _' → logprob: -1.6790956258773804
    3. '_' → logprob: -1.9290956258773804
    4. ''_' → logprob: -2.67909574508667
    5. '_ac' → logprob: -3.30409574508667
    6. '_id' → logprob: -3.30409574508667
    7. '_words' → logprob: -3.67909574508667
    8. '_ids' → logprob: -4.17909574508667
    9. '_A' → logprob: -4.55409574508667
    10. '_state' → logprob: -4.80409574508667

Token 1339: ' trouv' (ID: 40254)
  Prédit: 'accept'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accept' → logprob: -0.6530699729919434
    2. 'detect' → logprob: -2.0280699729919434
    3. 'prés' → logprob: -2.4030699729919434
    4. 'dé' → logprob: -2.6530699729919434
    5. '_detect' → logprob: -2.9030699729919434
    6. 'match' → logprob: -4.278069972991943
    7. ' détect' → logprob: -4.278069972991943
    8. ' présentes' → logprob: -4.278069972991943
    9. '```' → logprob: -4.403069972991943
    10. 'matched' → logprob: -4.778069972991943

Token 1340: 'ées' (ID: 5161)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.0919032096862793
    2. '_states' → logprob: -1.2169032096862793
    3. '```' → logprob: -2.7169032096862793
    4. 'ées' → logprob: -2.7169032096862793
    5. 'e' → logprob: -3.4669032096862793
    6. '_' → logprob: -3.8419032096862793
    7. ')
' → logprob: -4.216903209686279
    8. 'és' → logprob: -4.216903209686279
    9. ')' → logprob: -4.216903209686279
    10. '[' → logprob: -4.466903209686279

Token 1341: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15935003757476807
    2. '
' → logprob: -3.0343499183654785
    3. '```' → logprob: -3.5343499183654785
    4. 'from' → logprob: -4.4093499183654785
    5. '       ' → logprob: -4.7843499183654785
    6. ':' → logprob: -4.9093499183654785
    7. '#' → logprob: -5.4093499183654785
    8. ',' → logprob: -5.4093499183654785
    9. ':
' → logprob: -5.6593499183654785
    10. ')' → logprob: -6.0343499183654785

Token 1342: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2503734827041626
    2. '       ' → logprob: -1.6253734827041626
    3. '
' → logprob: -4.125373363494873
    4. 'from' → logprob: -5.875373363494873
    5. '    
' → logprob: -6.375373363494873
    6. '#' → logprob: -7.000373363494873
    7. 'ac' → logprob: -7.375373363494873
    8. 'import' → logprob: -7.500373363494873
    9. '        
' → logprob: -7.625373363494873
    10. '```' → logprob: -8.250373840332031

Token 1343: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.37265267968177795
    2. '   ' → logprob: -1.3726526498794556
    3. ' from' → logprob: -3.872652769088745
    4. 'import' → logprob: -4.497652530670166
    5. '       ' → logprob: -4.747652530670166
    6. '
' → logprob: -4.747652530670166
    7. '#' (adapté à ' #') → logprob: -5.747652530670166
    8. 'ac' → logprob: -6.122652530670166
    9. 'class' → logprob: -6.747652530670166
    10. '```' → logprob: -6.747652530670166

Token 1344: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.06263670325279236
    2. '   ' → logprob: -3.187636613845825
    3. 'import' → logprob: -4.812636852264404
    4. '       ' → logprob: -5.312636852264404
    5. 'class' → logprob: -6.062636852264404
    6. '#' → logprob: -6.187636852264404
    7. '
' → logprob: -7.062636852264404
    8. ' from' → logprob: -7.312636852264404
    9. 'ac' → logprob: -8.562636375427246
    10. '```' → logprob: -9.187636375427246

Token 1345: ' doit' (ID: 21822)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1954874992370605
    2. 'def' → logprob: -1.5704874992370605
    3. 'from' → logprob: -1.6954874992370605
    4. 'import' → logprob: -2.5704874992370605
    5. 'continue' → logprob: -2.6954874992370605
    6. 'contin' → logprob: -2.9454874992370605
    7. 'build' → logprob: -3.0704874992370605
    8. '   ' → logprob: -3.5704874992370605
    9. '       ' → logprob: -4.8204874992370605
    10. 'next' → logprob: -5.6954874992370605

Token 1346: ' vérifier' (ID: 93671)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.10814029723405838
    2. ' continuer' → logprob: -3.608140230178833
    3. '   ' → logprob: -3.733140230178833
    4. '#' → logprob: -4.233140468597412
    5. ' construire' → logprob: -4.358140468597412
    6. 'coder' → logprob: -5.358140468597412
    7. 'import' → logprob: -5.608140468597412
    8. 'continue' → logprob: -5.608140468597412
    9. '       ' → logprob: -5.983140468597412
    10. 'continu' → logprob: -6.858140468597412

Token 1347: ' qu' (ID: 474)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.3458633422851562
    2. 'if' → logprob: -1.7208633422851562
    3. '       ' → logprob: -1.8458633422851562
    4. ' if' → logprob: -1.8458633422851562
    5. ' que' → logprob: -2.4708633422851562
    6. '   ' → logprob: -2.7208633422851562
    7. ' si' → logprob: -3.7208633422851562
    8. 'si' → logprob: -3.8458633422851562
    9. '    ' → logprob: -4.345863342285156
    10. '      ' → logprob: -5.720863342285156

Token 1348: ''ex' (ID: 23472)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.2559545040130615
    2. ' que' → logprob: -1.5059545040130615
    3. ' l' → logprob: -2.2559545040130615
    4. ' le' → logprob: -2.5059545040130615
    5. ' la' → logprob: -2.6309545040130615
    6. ' ' → logprob: -3.5059545040130615
    7. ' on' → logprob: -3.8809545040130615
    8. ' les' → logprob: -4.005954742431641
    9. ' not' → logprob: -4.130954742431641
    10. ' s' → logprob: -4.130954742431641

Token 1349: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.8574714660644531
    2. 'ist' → logprob: -1.3574714660644531
    3. 'iste' → logprob: -1.9824714660644531
    4. 'istence' → logprob: -2.482471466064453
    5. '
' → logprob: -4.232471466064453
    6. 'ists' → logprob: -4.607471466064453
    7. '```' → logprob: -4.607471466064453
    8. 't' → logprob: -5.107471466064453
    9. 'ister' → logprob: -5.357471466064453
    10. 'i' → logprob: -5.357471466064453

Token 1350: 'ement' (ID: 962)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9452592730522156
    2. 'ement' → logprob: -1.6952593326568604
    3. 'ètement' → logprob: -1.9452593326568604
    4. 'ément' → logprob: -1.9452593326568604
    5. 'ment' → logprob: -3.1952593326568604
    6. '```' → logprob: -3.3202593326568604
    7. 'it' → logprob: -4.195259094238281
    8. 'et' → logprob: -5.320259094238281
    9. '
' → logprob: -5.320259094238281
    10. 'e' → logprob: -5.320259094238281

Token 1351: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.059793710708618164
    2. '1' → logprob: -3.684793710708618
    3. 'un' → logprob: -3.934793710708618
    4. ' une' → logprob: -5.434793472290039
    5. 'qu' → logprob: -6.434793472290039
    6. 'que' → logprob: -6.434793472290039
    7. '```' → logprob: -6.434793472290039
    8. 'K' → logprob: -6.684793472290039
    9. ' K' → logprob: -7.059793472290039
    10. ' ' → logprob: -7.059793472290039

Token 1352: ' saison' (ID: 38158)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.081477165222168
    2. 's' → logprob: -1.331477165222168
    3. 'season' → logprob: -1.956477165222168
    4. ' saison' → logprob: -2.581477165222168
    5. ' season' → logprob: -2.831477165222168
    6. '_s' → logprob: -3.831477165222168
    7. 'e' → logprob: -4.456477165222168
    8. ' ' → logprob: -4.456477165222168
    9. 'mot' → logprob: -4.456477165222168
    10. ' _' → logprob: -4.581477165222168

Token 1353: ' word' (ID: 2195)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7945567965507507
    2. ' _' → logprob: -1.1695568561553955
    3. '_word' → logprob: -1.5445568561553955
    4. '_words' → logprob: -4.044556617736816
    5. 'word' → logprob: -5.544556617736816
    6. ')_' → logprob: -7.294556617736816
    7. ' word' → logprob: -7.419556617736816
    8. '_code' → logprob: -8.294556617736816
    9. 'words' → logprob: -8.544556617736816
    10. 's' → logprob: -8.919556617736816

Token 1354: ' appar' (ID: 13643)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3538365960121155
    2. '_detect' → logprob: -1.3538365364074707
    3. '_found' → logprob: -4.603836536407471
    4. '_unique' → logprob: -4.853836536407471
    5. '_a' → logprob: -5.728836536407471
    6. '_est' → logprob: -5.853836536407471
    7. 's' → logprob: -5.978836536407471
    8. '_s' → logprob: -6.478836536407471
    9. '_cont' → logprob: -6.853836536407471
    10. '_d' → logprob: -6.853836536407471

Token 1355: 'ait' (ID: 1271)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.5632501840591431
    2. 'u' → logprob: -1.688250184059143
    3. 'ait' → logprob: -1.688250184059143
    4. '```' → logprob: -3.9382500648498535
    5. 'a' → logprob: -4.9382500648498535
    6. 'ut' → logprob: -5.0632500648498535
    7. '|' → logprob: -5.6882500648498535
    8. '</' → logprob: -5.8132500648498535
    9. '=' → logprob: -5.8132500648498535
    10. 'ût' → logprob: -6.1882500648498535

Token 1356: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4495559632778168
    2. 'def' → logprob: -1.5745559930801392
    3. ' =' → logprob: -3.3245558738708496
    4. '()
' → logprob: -3.9495558738708496
    5. '()' → logprob: -4.07455587387085
    6. ':' → logprob: -4.19955587387085
    7. '
' → logprob: -4.57455587387085
    8. '       ' → logprob: -4.57455587387085
    9. ':
' → logprob: -4.82455587387085
    10. '#' → logprob: -5.07455587387085

Token 1357: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.6004946231842041
    2. ' fois' → logprob: -0.9754946231842041
    3. 'vec' → logprob: -3.725494623184204
    4. '
' → logprob: -4.725494384765625
    5. '   ' → logprob: -4.725494384765625
    6. '```' → logprob: -5.100494384765625
    7. 'once' → logprob: -5.850494384765625
    8. 'n' → logprob: -5.975494384765625
    9. 'une' → logprob: -5.975494384765625
    10. ' seule' → logprob: -6.225494384765625

Token 1358: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1873624324798584
    2. '       ' → logprob: -1.9373624324798584
    3. ':' → logprob: -5.3123626708984375
    4. ')' → logprob: -5.4373626708984375
    5. '
' → logprob: -5.4373626708984375
    6. 'def' → logprob: -6.0623626708984375
    7. ')
' → logprob: -6.3123626708984375
    8. '()' → logprob: -6.5623626708984375
    9. '()
' → logprob: -6.6873626708984375
    10. ':
' → logprob: -7.0623626708984375

Token 1359: 'et' (ID: 292)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020585328340530396
    2. ' )' → logprob: -4.270585536956787
    3. ').' → logprob: -6.770585536956787
    4. ',' → logprob: -7.270585536956787
    5. ')
' → logprob: -7.520585536956787
    6. 'exact' → logprob: -7.645585536956787
    7. ' detected' → logprob: -7.770585536956787
    8. '.' → logprob: -7.895585536956787
    9. 'et' → logprob: -7.895585536956787
    10. 'dans' → logprob: -8.145585060119629

Token 1360: ' pas' (ID: 2173)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.577018678188324
    2. ' exactement' → logprob: -1.3270187377929688
    3. 'pas' → logprob: -3.5770187377929688
    4. 'une' → logprob: -3.8270187377929688
    5. '#' → logprob: -4.202018737792969
    6. 'que' → logprob: -4.202018737792969
    7. ' exactly' → logprob: -4.327018737792969
    8. ' pas' → logprob: -4.577018737792969
    9. ' exact' → logprob: -4.702018737792969
    10. ' que' → logprob: -4.952018737792969

Token 1361: ' plus' (ID: 2932)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8272206783294678
    2. 'exact' → logprob: -1.3272206783294678
    3. 'plus' → logprob: -2.5772206783294678
    4. ' deux' → logprob: -3.2022206783294678
    5. 'd' → logprob: -3.2022206783294678
    6. ' exactement' → logprob: -3.5772206783294678
    7. ' de' → logprob: -3.9522206783294678
    8. ' d' → logprob: -4.202220916748047
    9. 'une' → logprob: -4.327220916748047
    10. ' plus' → logprob: -5.077220916748047

Token 1362: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029130762442946434
    2. ')
' → logprob: -4.654130935668945
    3. '=' → logprob: -6.029130935668945
    4. '```' → logprob: -6.029130935668945
    5. '       ' → logprob: -6.154130935668945
    6. ' de' → logprob: -6.279130935668945
    7. 'ieurs' → logprob: -6.404130935668945
    8. '_' → logprob: -6.529130935668945
    9. ' )' → logprob: -6.779130935668945
    10. '.' → logprob: -7.029130935668945

Token 1363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019558717031031847
    2. '        
' → logprob: -7.001955986022949
    3. '
' → logprob: -7.501955986022949
    4. ')' → logprob: -8.75195598602295
    5. ',' → logprob: -9.12695598602295
    6. '<|end|>' → logprob: -9.62695598602295
    7. '   ' → logprob: -10.62695598602295
    8. '#' → logprob: -11.00195598602295
    9. ')
' → logprob: -11.25195598602295
    10. 'import' → logprob: -11.37695598602295

Token 1364: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030529312789440155
    2. '
' → logprob: -6.253052711486816
    3. '        
' → logprob: -7.378052711486816
    4. '#' (adapté à ' #') → logprob: -8.878052711486816
    5. '```' → logprob: -9.503052711486816
    6. '   ' → logprob: -9.878052711486816
    7. ')' → logprob: -9.878052711486816
    8. ',' → logprob: -10.003052711486816
    9. 'import' → logprob: -10.628052711486816
    10. '           ' → logprob: -11.690552711486816

Token 1365: ' L' (ID: 451)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3791893422603607
    2. '
' → logprob: -2.1291892528533936
    3. '   ' → logprob: -2.8791892528533936
    4. 'states' → logprob: -3.6291892528533936
    5. '#' → logprob: -3.8791892528533936
    6. '        
' → logprob: -4.754189491271973
    7. 'state' → logprob: -4.879189491271973
    8. 'import' → logprob: -4.879189491271973
    9. 'max' → logprob: -4.879189491271973
    10. 'from' → logprob: -5.004189491271973

Token 1366: ''aut' (ID: 20714)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.8364710807800293
    2. 'e' → logprob: -2.0864710807800293
    3. 'state' → logprob: -2.2114710807800293
    4. 'im' → logprob: -3.4614710807800293
    5. 'et' → logprob: -3.4614710807800293
    6. '#' → logprob: -3.7114710807800293
    7. 'def' → logprob: -3.7114710807800293
    8. 'ine' → logprob: -3.8364710807800293
    9. 'ength' → logprob: -4.086471080780029
    10. 'states' → logprob: -4.086471080780029

Token 1367: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.13376402854919434
    2. 'o' → logprob: -2.6337640285491943
    3. 'ocomplete' → logprob: -3.0087640285491943
    4. '
' → logprob: -7.008764266967773
    5. 'ocode' → logprob: -7.258764266967773
    6. 'or' → logprob: -7.508764266967773
    7. 'oc' → logprob: -7.883764266967773
    8. 'e' → logprob: -8.383764266967773
    9. 'ocom' → logprob: -8.383764266967773
    10. '```' → logprob: -8.383764266967773

Token 1368: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.0008043874404393137
    2. 'aton' → logprob: -7.375804424285889
    3. '
' → logprob: -10.00080394744873
    4. 'at' → logprob: -10.37580394744873
    5. '```' → logprob: -10.75080394744873
    6. 'e' → logprob: -11.00080394744873
    7. '#' → logprob: -11.37580394744873
    8. 'a' → logprob: -11.75080394744873
    9. 'ata' → logprob: -12.62580394744873
    10. 'orph' → logprob: -12.75080394744873

Token 1369: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05711757019162178
    2. '=' → logprob: -4.182117462158203
    3. 'def' → logprob: -5.307117462158203
    4. '#' → logprob: -5.557117462158203
    5. ' AC' → logprob: -5.557117462158203
    6. ' def' → logprob: -5.682117462158203
    7. 'AC' → logprob: -5.807117462158203
    8. '   ' → logprob: -6.182117462158203
    9. '[' → logprob: -6.307117462158203
    10. 'class' → logprob: -6.682117462158203

Token 1370: ''A' (ID: 40735)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02868049405515194
    2. 'aho' → logprob: -3.9036805629730225
    3. '```' → logprob: -6.028680324554443
    4. 'ho' → logprob: -6.528680324554443
    5. 'C' → logprob: -6.653680324554443
    6. ' aho' → logprob: -7.653680324554443
    7. 'ah' → logprob: -8.028680801391602
    8. '#' → logprob: -8.153680801391602
    9. 'Ah' → logprob: -8.403680801391602
    10. 'cor' → logprob: -9.028680801391602

Token 1371: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.0010210209293290973
    2. 'cho' → logprob: -7.251020908355713
    3. 'Cho' → logprob: -8.751021385192871
    4. 'хо' → logprob: -9.751021385192871
    5. 'Ho' → logprob: -10.251021385192871
    6. 'hoc' → logprob: -11.626021385192871
    7. 'uto' → logprob: -11.876021385192871
    8. 'co' → logprob: -12.501021385192871
    9. '{' → logprob: -12.501021385192871
    10. 'C' → logprob: -12.501021385192871

Token 1372: '-C' (ID: 10050)
  Prédit: '-C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-C' → logprob: -0.5774720311164856
    2. 'Cor' → logprob: -0.8274720311164856
    3. '_C' → logprob: -6.82747220993042
    4. 'C' → logprob: -9.452471733093262
    5. '#' → logprob: -10.077471733093262
    6. ' Cor' → logprob: -10.202471733093262
    7. 'Кор' → logprob: -10.202471733093262
    8. '-cor' → logprob: -10.452471733093262
    9. '-Car' → logprob: -10.577471733093262
    10. '
' → logprob: -10.702471733093262

Token 1373: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.0004032634024042636
    2. 'or' → logprob: -8.62540340423584
    3. 'Or' → logprob: -9.25040340423584
    4. 'Cor' → logprob: -9.37540340423584
    5. '
' → logprob: -11.25040340423584
    6. 'C' → logprob: -11.25040340423584
    7. 'aras' → logprob: -11.87540340423584
    8. '```' → logprob: -12.87540340423584
    9. '#' → logprob: -14.25040340423584
    10. 'ras' → logprob: -14.62540340423584

Token 1374: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.025556528940796852
    2. 'ck' → logprob: -4.650556564331055
    3. 'f' → logprob: -5.900556564331055
    4. 'C' → logprob: -6.150556564331055
    5. 'rf' → logprob: -6.775556564331055
    6. '-C' → logprob: -7.025556564331055
    7. 'h' → logprob: -7.525556564331055
    8. 'ch' → logprob: -7.525556564331055
    9. '```' → logprob: -7.525556564331055
    10. 'c' → logprob: -7.650556564331055

Token 1375: ' donne' (ID: 30004)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8512721657752991
    2. 'import' → logprob: -1.4762721061706543
    3. ' =' → logprob: -1.9762721061706543
    4. '=' → logprob: -2.3512721061706543
    5. 'class' → logprob: -2.7262721061706543
    6. ' from' → logprob: -4.726272106170654
    7. '#' → logprob: -4.726272106170654
    8. '   ' → logprob: -5.226272106170654
    9. 'def' → logprob: -5.726272106170654
    10. '
' → logprob: -5.851272106170654

Token 1376: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3181596994400024
    2. 'states' → logprob: -2.068159580230713
    3. 'tokens' → logprob: -2.068159580230713
    4. 'state' → logprob: -2.443159580230713
    5. '```' → logprob: -2.818159580230713
    6. ' la' → logprob: -3.068159580230713
    7. 'the' → logprob: -3.818159580230713
    8. 's' → logprob: -3.943159580230713
    9. ' tokens' → logprob: -3.943159580230713
    10. ' des' → logprob: -4.068159580230713

Token 1377: ''état' (ID: 116357)
  Prédit: ''état'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''état' → logprob: -0.4923551082611084
    2. 'state' → logprob: -1.6173551082611084
    3. 'states' → logprob: -2.6173551082611084
    4. ' states' → logprob: -3.9923551082611084
    5. 't' → logprob: -4.3673553466796875
    6. ' state' → logprob: -4.3673553466796875
    7. '_states' → logprob: -4.4923553466796875
    8. ''ét' → logprob: -4.6173553466796875
    9. ''' → logprob: -4.8673553466796875
    10. '’état' → logprob: -5.2423553466796875

Token 1378: ' courant' (ID: 74694)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5549256801605225
    2. '   ' → logprob: -2.3049256801605225
    3. ',' → logprob: -2.4299256801605225
    4. '#' → logprob: -3.3049256801605225
    5. 's' → logprob: -3.4299256801605225
    6. 'def' → logprob: -3.5549256801605225
    7. '<|end|>' → logprob: -3.6799256801605225
    8. '=' → logprob: -3.8049256801605225
    9. '
' → logprob: -4.179925918579102
    10. ':' → logprob: -4.304925918579102

Token 1379: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2715195119380951
    2. '
' → logprob: -1.8965195417404175
    3. 'from' → logprob: -3.146519422531128
    4. 'import' → logprob: -3.896519422531128
    5. 'def' → logprob: -4.646519660949707
    6. 'class' → logprob: -5.271519660949707
    7. '#' → logprob: -5.521519660949707
    8. '```' → logprob: -6.271519660949707
    9. ' from' → logprob: -7.271519660949707
    10. ',' → logprob: -7.271519660949707

Token 1380: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.24711064994335175
    2. 'la' → logprob: -2.247110605239868
    3. '#' → logprob: -3.622110605239868
    4. ' les' → logprob: -3.622110605239868
    5. 'le' → logprob: -4.247110843658447
    6. 'l' → logprob: -4.247110843658447
    7. ' la' → logprob: -4.247110843658447
    8. 'ses' → logprob: -5.997110843658447
    9. 'des' → logprob: -6.372110843658447
    10. 'len' → logprob: -6.497110843658447

Token 1381: ' saisons' (ID: 168672)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.5326480865478516
    2. 'outputs' → logprob: -0.9076480865478516
    3. ' output' → logprob: -5.782648086547852
    4. ' outputs' → logprob: -5.907648086547852
    5. 'out' → logprob: -6.032648086547852
    6. 'fail' → logprob: -7.657648086547852
    7. 'matches' → logprob: -8.032648086547852
    8. 'matched' → logprob: -9.282648086547852
    9. 'match' → logprob: -9.907648086547852
    10. 'link' → logprob: -10.157648086547852

Token 1382: ' détect' (ID: 118715)
  Prédit: '_ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ac' → logprob: -1.0510506629943848
    2. ' _' → logprob: -1.6760506629943848
    3. '_AC' → logprob: -1.8010506629943848
    4. '_' → logprob: -2.0510506629943848
    5. 'AC' → logprob: -3.3010506629943848
    6. '```' → logprob: -3.8010506629943848
    7. '_states' → logprob: -4.176050662994385
    8. 'def' → logprob: -4.926050662994385
    9. '\' → logprob: -5.301050662994385
    10. ' =' → logprob: -5.551050662994385

Token 1383: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.8650472164154053
    2. '_states' → logprob: -1.8650472164154053
    3. 'ected' → logprob: -1.9900472164154053
    4. 'ion' → logprob: -1.9900472164154053
    5. '_state' → logprob: -2.4900472164154053
    6. 'state' → logprob: -2.6150472164154053
    7. 'e' → logprob: -2.9900472164154053
    8. '```' → logprob: -3.4900472164154053
    9. 'ées' → logprob: -3.7400472164154053
    10. 'es' → logprob: -3.8650472164154053

Token 1384: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14987675845623016
    2. '
' → logprob: -3.024876832962036
    3. 'import' → logprob: -3.149876832962036
    4. 'from' → logprob: -4.149876594543457
    5. 'def' → logprob: -4.274876594543457
    6. '       ' → logprob: -5.524876594543457
    7. '#' → logprob: -5.774876594543457
    8. '```' → logprob: -5.899876594543457
    9. ':' → logprob: -6.274876594543457
    10. ')' → logprob: -7.149876594543457

Token 1385: ' cette' (ID: 7696)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.4285806715488434
    2. ' chaque' → logprob: -1.178580641746521
    3. 'each' → logprob: -3.5535807609558105
    4. 'ch' → logprob: -4.6785807609558105
    5. 'l' → logprob: -6.8035807609558105
    6. 'Chaque' → logprob: -7.8035807609558105
    7. 'tout' → logprob: -8.053580284118652
    8. 'cada' → logprob: -8.303580284118652
    9. 'part' → logprob: -8.803580284118652
    10. 'aj' → logprob: -9.303580284118652

Token 1386: ' position' (ID: 4010)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0626264810562134
    2. 'state' → logprob: -1.3126264810562134
    3. 'point' → logprob: -2.437626361846924
    4. 'ét' → logprob: -2.812626361846924
    5. ' étape' → logprob: -2.812626361846924
    6. ' state' → logprob: -3.937626361846924
    7. 't' → logprob: -3.937626361846924
    8. ']' → logprob: -4.062626361846924
    9. ' point' → logprob: -4.312626361846924
    10. '.' → logprob: -4.312626361846924

Token 1387: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1709018051624298
    2. 'import' → logprob: -2.9209017753601074
    3. '
' → logprob: -3.1709017753601074
    4. '       ' → logprob: -4.045901775360107
    5. 'from' → logprob: -4.045901775360107
    6. 'def' → logprob: -4.295901775360107
    7. '#' → logprob: -5.670901775360107
    8. '```' → logprob: -5.795901775360107
    9. 'class' → logprob: -6.795901775360107
    10. ')' → logprob: -7.045901775360107

Token 1388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021344827488064766
    2. '   ' → logprob: -4.0213446617126465
    3. ')' → logprob: -6.8963446617126465
    4. '        
' → logprob: -7.1463446617126465
    5. '
' → logprob: -7.6463446617126465
    6. ',' → logprob: -8.146345138549805
    7. '```' → logprob: -8.646345138549805
    8. '    
' → logprob: -9.271345138549805
    9. '<|end|>' → logprob: -9.646345138549805
    10. '[' → logprob: -10.146345138549805

Token 1389: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00180024653673172
    2. '
' → logprob: -6.626800060272217
    3. '        
' → logprob: -8.626800537109375
    4. '   ' → logprob: -9.626800537109375
    5. '#' (adapté à ' #') → logprob: -9.751800537109375
    6. '```' → logprob: -10.126800537109375
    7. 'import' → logprob: -10.251800537109375
    8. ',' → logprob: -10.376800537109375
    9. ')' → logprob: -11.876800537109375
    10. '           ' → logprob: -11.876800537109375

Token 1390: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10645398497581482
    2. '   ' → logprob: -2.8564538955688477
    3. 'import' → logprob: -4.106453895568848
    4. 'from' → logprob: -5.231453895568848
    5. '
' → logprob: -5.606453895568848
    6. '        
' → logprob: -5.856453895568848
    7. '#' → logprob: -5.981453895568848
    8. 'def' → logprob: -5.981453895568848
    9. '```' → logprob: -6.106453895568848
    10. 'class' → logprob: -6.606453895568848

Token 1391: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0660573244094849
    2. 'l' → logprob: -1.4410573244094849
    3. ' l' → logprob: -1.4410573244094849
    4. ' on' → logprob: -2.4410572052001953
    5. 'on' → logprob: -3.3160572052001953
    6. ' la' → logprob: -3.9410572052001953
    7. ' chaque' → logprob: -4.691057205200195
    8. 'le' → logprob: -4.816057205200195
    9. '   ' → logprob: -5.691057205200195
    10. ' #' → logprob: -6.066057205200195

Token 1392: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.0596076250076294
    2. 'do' → logprob: -1.9346076250076294
    3. 'contin' → logprob: -2.05960750579834
    4. ' continue' → logprob: -2.30960750579834
    5. 'detect' → logprob: -2.68460750579834
    6. 'pe' → logprob: -3.18460750579834
    7. 'vais' → logprob: -4.30960750579834
    8. 's' → logprob: -4.30960750579834
    9. ' peux' → logprob: -4.55960750579834
    10. 'a' → logprob: -4.55960750579834

Token 1393: ' tomber' (ID: 102488)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.6522724628448486
    2. ' continuer' → logprob: -2.1522724628448486
    3. 'tr' → logprob: -2.2772724628448486
    4. 'detect' → logprob: -2.5272724628448486
    5. 'match' → logprob: -3.9022724628448486
    6. 'ren' → logprob: -3.9022724628448486
    7. 'util' → logprob: -4.1522722244262695
    8. 'have' → logprob: -4.6522722244262695
    9. 'avoir' → logprob: -4.6522722244262695
    10. ' detect' → logprob: -4.9022722244262695

Token 1394: ' sur' (ID: 1512)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.5010120272636414
    2. 'sur' → logprob: -2.001012086868286
    3. ' dans' → logprob: -2.126012086868286
    4. ' sur' → logprob: -2.126012086868286
    5. 'au' → logprob: -5.376011848449707
    6. ' à' → logprob: -6.376011848449707
    7. '```' → logprob: -6.751011848449707
    8. 's' → logprob: -6.876011848449707
    9. ' into' → logprob: -6.876011848449707
    10. ' en' → logprob: -7.001011848449707

Token 1395: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.9112308621406555
    2. ''un' → logprob: -1.1612308025360107
    3. 'des' → logprob: -2.4112308025360107
    4. 'une' → logprob: -3.4112308025360107
    5. 'l' → logprob: -3.5362308025360107
    6. 'les' → logprob: -3.7862308025360107
    7. ' un' → logprob: -3.7862308025360107
    8. ' des' → logprob: -4.16123104095459
    9. 'le' → logprob: -4.66123104095459
    10. ' plusieurs' → logprob: -4.91123104095459

Token 1396: ' mot' (ID: 3598)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.6967469453811646
    2. 'pattern' → logprob: -1.1967469453811646
    3. 'state' → logprob: -3.071746826171875
    4. 'match' → logprob: -3.571746826171875
    5. ' pattern' → logprob: -3.696746826171875
    6. 'token' → logprob: -3.821746826171875
    7. 'suffix' → logprob: -3.821746826171875
    8. 's' → logprob: -4.071746826171875
    9. ' motif' → logprob: -4.946746826171875
    10. ''état' → logprob: -5.696746826171875

Token 1397: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4795780181884766
    2. 'def' → logprob: -1.6045780181884766
    3. ' =' → logprob: -1.8545780181884766
    4. '()' → logprob: -2.4795780181884766
    5. '(
' → logprob: -2.7295780181884766
    6. ')' → logprob: -3.3545780181884766
    7. ':' → logprob: -3.3545780181884766
    8. '[' → logprob: -3.4795780181884766
    9. '()
' → logprob: -3.6045780181884766
    10. '_' → logprob: -3.8545780181884766

Token 1398: ' saison' (ID: 38158)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.35246214270591736
    2. 'transition' → logprob: -2.22746205329895
    3. ' transition' → logprob: -2.72746205329895
    4. 'mot' → logprob: -3.35246205329895
    5. 'chaine' → logprob: -3.85246205329895
    6. ' l' → logprob: -4.477462291717529
    7. 'la' → logprob: -5.102462291717529
    8. '
' → logprob: -5.352462291717529
    9. 'trans' → logprob: -5.477462291717529
    10. 'fin' → logprob: -5.602462291717529

Token 1399: ' word' (ID: 2195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35550352931022644
    2. '       ' → logprob: -1.7305035591125488
    3. '
' → logprob: -3.730503559112549
    4. 'def' → logprob: -3.855503559112549
    5. '()
' → logprob: -3.980503559112549
    6. ' =' → logprob: -4.230503559112549
    7. '()' → logprob: -5.230503559112549
    8. '_states' → logprob: -5.605503559112549
    9. ')
' → logprob: -5.730503559112549
    10. '_' → logprob: -5.730503559112549

Token 1400: ' qui' (ID: 2780)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23362582921981812
    2. '   ' → logprob: -1.983625888824463
    3. ')
' → logprob: -4.608625888824463
    4. '()
' → logprob: -4.608625888824463
    5. ')' → logprob: -4.733625888824463
    6. '
' → logprob: -4.858625888824463
    7. '        
' → logprob: -5.358625888824463
    8. ' =' → logprob: -5.608625888824463
    9. 'def' → logprob: -5.733625888824463
    10. ':' → logprob: -5.733625888824463

Token 1401: ' appar' (ID: 13643)
  Prédit: 'detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'detect' → logprob: -0.8718254566192627
    2. '```' → logprob: -1.6218254566192627
    3. ' détect' → logprob: -1.9968254566192627
    4. 'contin' → logprob: -3.2468254566192627
    5. 'match' → logprob: -3.7468254566192627
    6. ' match' → logprob: -3.7468254566192627
    7. 'continue' → logprob: -3.9968254566192627
    8. 'pe' → logprob: -4.246825218200684
    9. 'n' → logprob: -4.621825218200684
    10. ' detect' → logprob: -4.621825218200684

Token 1402: 'ait' (ID: 1271)
  Prédit: 'ait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ait' → logprob: -0.43058452010154724
    2. 'ît' → logprob: -1.1805845499038696
    3. 't' → logprob: -3.80558443069458
    4. 'rait' → logprob: -4.93058443069458
    5. '```' → logprob: -5.43058443069458
    6. 'êt' → logprob: -6.18058443069458
    7. 'ra' → logprob: -6.30558443069458
    8. 'it' → logprob: -6.80558443069458
    9. 'ar' → logprob: -7.18058443069458
    10. 'eit' → logprob: -7.93058443069458

Token 1403: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0731768608093262
    2. ')' → logprob: -1.6981768608093262
    3. '   ' → logprob: -2.323176860809326
    4. ':' → logprob: -2.698176860809326
    5. 'def' → logprob: -2.823176860809326
    6. '[' → logprob: -3.073176860809326
    7. ',' → logprob: -3.573176860809326
    8. '[
' → logprob: -3.573176860809326
    9. '       ' → logprob: -3.698176860809326
    10. '<|end|>' → logprob: -4.198176860809326

Token 1404: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06558403372764587
    2. ')' → logprob: -3.4405839443206787
    3. '   ' → logprob: -3.9405839443206787
    4. '#' → logprob: -5.565584182739258
    5. ' ' → logprob: -6.815584182739258
    6. '...' → logprob: -6.940584182739258
    7. '```' → logprob: -7.065584182739258
    8. ',' → logprob: -7.065584182739258
    9. '_' → logprob: -7.190584182739258
    10. '           ' → logprob: -8.065584182739258

Token 1405: ' note' (ID: 7477)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2337640523910522
    2. ' continue' → logprob: -1.2337640523910522
    3. 'continue' → logprob: -2.608764171600342
    4. ' peux' → logprob: -2.733764171600342
    5. 'contin' → logprob: -3.233764171600342
    6. '#' → logprob: -3.483764171600342
    7. 's' → logprob: -3.483764171600342
    8. '.' → logprob: -3.608764171600342
    9. ')' → logprob: -4.233764171600342
    10. '[' → logprob: -4.483764171600342

Token 1406: ' cela' (ID: 17542)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7380666136741638
    2. '   ' → logprob: -1.2380666732788086
    3. '_' → logprob: -2.8630666732788086
    4. '```' → logprob: -3.4880666732788086
    5. ' =' → logprob: -3.6130666732788086
    6. ' _' → logprob: -3.6130666732788086
    7. ' ' → logprob: -3.9880666732788086
    8. '[' → logprob: -4.613066673278809
    9. '    ' → logprob: -4.738066673278809
    10. 'def' → logprob: -5.113066673278809

Token 1407: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24743133783340454
    2. '   ' → logprob: -1.6224312782287598
    3. '
' → logprob: -4.87243127822876
    4. ':' → logprob: -5.12243127822876
    5. ':
' → logprob: -6.87243127822876
    6. 'def' → logprob: -6.99743127822876
    7. 'import' → logprob: -6.99743127822876
    8. ')' → logprob: -7.12243127822876
    9. '```' → logprob: -7.74743127822876
    10. ',' → logprob: -7.87243127822876

Token 1408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012256148271262646
    2. '        
' → logprob: -5.387256145477295
    3. '   ' → logprob: -5.637256145477295
    4. '```' → logprob: -6.637256145477295
    5. '\' → logprob: -8.012256622314453
    6. '`' → logprob: -8.512256622314453
    7. 'def' → logprob: -8.512256622314453
    8. '[' → logprob: -8.637256622314453
    9. ',' → logprob: -8.637256622314453
    10. '    
' → logprob: -8.762256622314453

Token 1409: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034079935867339373
    2. '   ' → logprob: -6.753407955169678
    3. '
' → logprob: -7.503407955169678
    4. '        
' → logprob: -7.628407955169678
    5. 'next' → logprob: -8.628408432006836
    6. '```' → logprob: -8.628408432006836
    7. '#' (adapté à ' #') → logprob: -8.753408432006836
    8. ' next' → logprob: -9.378408432006836
    9. 'dp' → logprob: -9.378408432006836
    10. 'import' → logprob: -9.503408432006836

Token 1410: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.31294670701026917
    2. '   ' → logprob: -2.0629467964172363
    3. '       ' → logprob: -2.8129467964172363
    4. 'import' → logprob: -2.9379467964172363
    5. '#' → logprob: -4.812946796417236
    6. 'ac' → logprob: -5.187946796417236
    7. ' from' → logprob: -5.562946796417236
    8. '
' → logprob: -5.562946796417236
    9. 'class' → logprob: -5.562946796417236
    10. 'n' → logprob: -7.312946796417236

Token 1411: ' renfor' (ID: 79381)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5786055326461792
    2. 'import' → logprob: -1.9536055326461792
    3. '#' → logprob: -2.2036056518554688
    4. 'continue' → logprob: -2.7036056518554688
    5. 'from' → logprob: -3.0786056518554688
    6. '   ' → logprob: -4.703605651855469
    7. ' continue' → logprob: -5.078605651855469
    8. 'contin' → logprob: -5.078605651855469
    9. '
' → logprob: -5.203605651855469
    10. 'state' → logprob: -5.328605651855469

Token 1412: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8426350951194763
    2. 'ç' → logprob: -1.467635154724121
    3. 'cer' → logprob: -1.592635154724121
    4. 'cement' → logprob: -2.592635154724121
    5. 'çons' → logprob: -4.092635154724121
    6. 'ce' → logprob: -4.217635154724121
    7. 'cé' → logprob: -4.217635154724121
    8. 'çant' → logprob: -4.967635154724121
    9. 'cements' → logprob: -5.592635154724121
    10. 'cée' → logprob: -6.717635154724121

Token 1413: 'era' (ID: 2060)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.6788325905799866
    2. 'cer' → logprob: -0.8038325905799866
    3. 'cement' → logprob: -3.553832530975342
    4. 'c' → logprob: -5.303832530975342
    5. 'cé' → logprob: -5.303832530975342
    6. 'ç' → logprob: -5.678832530975342
    7. 'cements' → logprob: -6.928832530975342
    8. 'çons' → logprob: -7.178832530975342
    9. 'çant' → logprob: -8.0538330078125
    10. 'cers' → logprob: -8.3038330078125

Token 1414: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8525347709655762
    2. 'import' → logprob: -1.9775347709655762
    3. '   ' → logprob: -2.227534770965576
    4. 'def' → logprob: -2.727534770965576
    5. '        ' → logprob: -3.102534770965576
    6. ' ' → logprob: -3.227534770965576
    7. '```' → logprob: -3.352534770965576
    8. '       ' → logprob: -3.477534770965576
    9. ' ' → logprob: -3.852534770965576
    10. '    ' → logprob: -3.852534770965576

Token 1415: ' stock' (ID: 6546)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6981818079948425
    2. '   ' → logprob: -1.3231818675994873
    3. 'l' → logprob: -2.5731818675994873
    4. ' la' → logprob: -2.9481818675994873
    5. ' continuer' → logprob: -3.4481818675994873
    6. 'le' → logprob: -3.6981818675994873
    7. '       ' → logprob: -4.323181629180908
    8. 'contin' → logprob: -5.198181629180908
    9. ' ' → logprob: -5.573181629180908
    10. 'import' → logprob: -5.573181629180908

Token 1416: 'er' (ID: 259)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.0856747031211853
    2. 'er' → logprob: -2.96067476272583
    3. '       ' → logprob: -4.46067476272583
    4. 'érons' → logprob: -5.08567476272583
    5. '   ' → logprob: -5.46067476272583
    6. 'çons' → logprob: -5.71067476272583
    7. 'ercer' → logprob: -7.58567476272583
    8. 'cer' → logprob: -7.71067476272583
    9. 'ér' → logprob: -7.83567476272583
    10. 'orer' → logprob: -7.96067476272583

Token 1417: ' le' (ID: 505)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.6196578145027161
    2. '   ' → logprob: -1.7446577548980713
    3. 'state' → logprob: -2.2446577548980713
    4. '(
' → logprob: -2.9946577548980713
    5. '       ' → logprob: -3.7446577548980713
    6. 'dp' → logprob: -4.61965799331665
    7. '[' → logprob: -4.86965799331665
    8. '[state' → logprob: -5.24465799331665
    9. ' la' → logprob: -5.36965799331665
    10. 'current' → logprob: -5.61965799331665

Token 1418: ' nombre' (ID: 9733)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0218878984451294
    2. 'current' → logprob: -1.5218878984451294
    3. 'season' → logprob: -2.14688777923584
    4. 'found' → logprob: -2.52188777923584
    5. 'dp' → logprob: -2.64688777923584
    6. 'state' → logprob: -3.39688777923584
    7. '(s' → logprob: -3.89688777923584
    8. '(' → logprob: -4.64688777923584
    9. ' visited' → logprob: -4.89688777923584
    10. 'seen' → logprob: -4.89688777923584

Token 1419: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1862351894378662
    2. '[
' → logprob: -1.6862351894378662
    3. '   ' → logprob: -2.186235189437866
    4. 'def' → logprob: -2.436235189437866
    5. ' =' → logprob: -3.061235189437866
    6. '[' → logprob: -3.186235189437866
    7. 'import' → logprob: -3.561235189437866
    8. '_
' → logprob: -3.686235189437866
    9. ' _' → logprob: -4.061235427856445
    10. ' de' → logprob: -4.561235427856445

Token 1420: ''appar' (ID: 195019)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.5922744870185852
    2. '_' → logprob: -1.9672744274139404
    3. ' _' → logprob: -2.9672744274139404
    4. '   ' → logprob: -3.8422744274139404
    5. 'states' → logprob: -3.9672744274139404
    6. '_dp' → logprob: -3.9672744274139404
    7. '_words' → logprob: -4.3422746658325195
    8. 'def' → logprob: -4.3422746658325195
    9. 'dp' → logprob: -4.5922746658325195
    10. '_tokens' → logprob: -4.5922746658325195

Token 1421: 'ition' (ID: 868)
  Prédit: 'itions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.03935623914003372
    2. 'ences' → logprob: -3.914356231689453
    3. 'ition' → logprob: -4.789356231689453
    4. 'u' → logprob: -5.539356231689453
    5. 'ues' → logprob: -6.164356231689453
    6. 'entions' → logprob: -6.914356231689453
    7. 'issions' → logprob: -7.664356231689453
    8. 't' → logprob: -8.164356231689453
    9. 'ais' → logprob: -8.414356231689453
    10. ' appearances' → logprob: -8.539356231689453

Token 1422: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7709482312202454
    2. ' =' → logprob: -1.5209481716156006
    3. '[' → logprob: -2.5209481716156006
    4. '_' → logprob: -2.7709481716156006
    5. ')' → logprob: -3.0209481716156006
    6. '(
' → logprob: -3.5209481716156006
    7. '=' → logprob: -3.7709481716156006
    8. ',' → logprob: -3.8959481716156006
    9. '       ' → logprob: -4.27094841003418
    10. '(' → logprob: -5.02094841003418

Token 1423: ' saison' (ID: 38158)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09814313054084778
    2. 's' → logprob: -3.9731431007385254
    3. 'dp' → logprob: -4.473143100738525
    4. '_s' → logprob: -4.723143100738525
    5. '_states' → logprob: -4.723143100738525
    6. 'states' → logprob: -5.348143100738525
    7. ' dp' → logprob: -5.973143100738525
    8. 'def' → logprob: -5.973143100738525
    9. '   ' → logprob: -6.098143100738525
    10. '_dp' → logprob: -6.098143100738525

Token 1424: ' word' (ID: 2195)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1777403354644775
    2. '_words' → logprob: -1.1777403354644775
    3. '_word' → logprob: -2.5527403354644775
    4. '_' → logprob: -2.9277403354644775
    5. '_count' → logprob: -3.1777403354644775
    6. ' _' → logprob: -3.4277403354644775
    7. '_counts' → logprob: -3.5527403354644775
    8. 'words' → logprob: -3.6777403354644775
    9. '_occ' → logprob: -3.8027403354644775
    10. '_tokens' → logprob: -4.302740097045898

Token 1425: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5184073448181152
    2. '       ' → logprob: -1.6434073448181152
    3. ':' → logprob: -2.0184073448181152
    4. 'import' → logprob: -4.018407344818115
    5. '():' → logprob: -4.393407344818115
    6. ' =' → logprob: -4.518407344818115
    7. '(' → logprob: -5.268407344818115
    8. '()' → logprob: -5.393407344818115
    9. '(
' → logprob: -5.643407344818115
    10. 'def' → logprob: -5.768407344818115

Token 1426: ' mais' (ID: 2899)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6796773076057434
    2. '   ' → logprob: -1.4296772480010986
    3. '_' → logprob: -2.8046772480010986
    4. '(' → logprob: -3.8046772480010986
    5. '{' → logprob: -3.8046772480010986
    6. ' {' → logprob: -3.9296772480010986
    7. ' ' → logprob: -3.9296772480010986
    8. '[
' → logprob: -4.179677486419678
    9. 'def' → logprob: -4.304677486419678
    10. ',' → logprob: -4.804677486419678

Token 1427: ' cela' (ID: 17542)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44319888949394226
    2. '       ' → logprob: -2.3181989192962646
    3. '   ' → logprob: -2.4431989192962646
    4. ' #' → logprob: -3.1931989192962646
    5. ' ' → logprob: -3.4431989192962646
    6. '0' → logprob: -3.8181989192962646
    7. ')' → logprob: -3.9431989192962646
    8. ' for' → logprob: -5.1931986808776855
    9. '...' → logprob: -5.1931986808776855
    10. '<|end|>' → logprob: -5.4431986808776855

Token 1428: ' peut' (ID: 9216)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1429: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.3092690110206604
    2. '```' → logprob: -2.5592689514160156
    3. '=' → logprob: -3.3092689514160156
    4. '
' → logprob: -3.5592689514160156
    5. 'be' → logprob: -3.6842689514160156
    6. ' dépasser' → logprob: -4.184268951416016
    7. '   ' → logprob: -4.434268951416016
    8. '#' → logprob: -4.559268951416016
    9. 'se' → logprob: -4.684268951416016
    10. 's' → logprob: -5.059268951416016

Token 1430: ' multiple' (ID: 7598)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.999973714351654
    2. '[' → logprob: -0.999973714351654
    3. '{' → logprob: -2.624973773956299
    4. ')' → logprob: -3.374973773956299
    5. '1' → logprob: -3.374973773956299
    6. ' ' → logprob: -3.999973773956299
    7. '```' → logprob: -4.374973773956299
    8. ' {' → logprob: -4.624973773956299
    9. '[
' → logprob: -4.624973773956299
    10. '2' → logprob: -4.624973773956299

Token 1431: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5849221348762512
    2. '   ' → logprob: -1.4599220752716064
    3. ' =' → logprob: -3.5849220752716064
    4. '()' → logprob: -3.7099220752716064
    5. '(
' → logprob: -3.7099220752716064
    6. '()
' → logprob: -3.8349220752716064
    7. 'def' → logprob: -4.2099223136901855
    8. '=' → logprob: -4.2099223136901855
    9. ':' → logprob: -4.9599223136901855
    10. ',' → logprob: -4.9599223136901855

Token 1432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023118412122130394
    2. '   ' → logprob: -4.523118495941162
    3. ')' → logprob: -5.648118495941162
    4. ',' → logprob: -6.148118495941162
    5. '[' → logprob: -6.523118495941162
    6. '```' → logprob: -7.648118495941162
    7. ':' → logprob: -7.773118495941162
    8. ' =' → logprob: -7.898118495941162
    9. ',
' → logprob: -8.023118019104004
    10. '#' → logprob: -8.273118019104004

Token 1433: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037875641137361526
    2. '   ' → logprob: -3.7878756523132324
    3. '_' → logprob: -5.537875652313232
    4. ')' → logprob: -6.412875652313232
    5. ',' → logprob: -6.662875652313232
    6. '\' → logprob: -6.787875652313232
    7. '[' → logprob: -6.912875652313232
    8. '"' → logprob: -7.787875652313232
    9. '[
' → logprob: -7.787875652313232
    10. '           ' → logprob: -8.037875175476074

Token 1434: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4101426303386688
    2. '   ' → logprob: -1.7851426601409912
    3. 'import' → logprob: -2.285142660140991
    4. 'def' → logprob: -3.660142660140991
    5. 'from' → logprob: -3.785142660140991
    6. '\' → logprob: -5.535142421722412
    7. '
' → logprob: -6.285142421722412
    8. '#' → logprob: -6.285142421722412
    9. ' from' → logprob: -6.410142421722412
    10. '\n' → logprob: -6.785142421722412

Token 1435: ' note' (ID: 7477)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5740445852279663
    2. '_' → logprob: -2.199044704437256
    3. '[' → logprob: -2.574044704437256
    4. '
' → logprob: -2.699044704437256
    5. '[
' → logprob: -2.699044704437256
    6. 'state' → logprob: -2.949044704437256
    7. '#' → logprob: -2.949044704437256
    8. ' =' → logprob: -3.199044704437256
    9. '_state' → logprob: -3.824044704437256
    10. '_states' → logprob: -3.949044704437256

Token 1436: ' la' (ID: 557)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.9545620083808899
    2. '   ' → logprob: -1.7045619487762451
    3. ':' → logprob: -2.204561948776245
    4. '(' → logprob: -2.829561948776245
    5. '=' → logprob: -3.079561948776245
    6. '_' → logprob: -3.329561948776245
    7. '[' → logprob: -3.329561948776245
    8. '[
' → logprob: -3.329561948776245
    9. 'def' → logprob: -3.704561948776245
    10. 'import' → logprob: -3.829561948776245

Token 1437: ' contr' (ID: 6030)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0387934446334839
    2. 'dp' → logprob: -1.2887934446334839
    3. ' next' → logprob: -2.1637935638427734
    4. 's' → logprob: -3.0387935638427734
    5. 'next' → logprob: -3.1637935638427734
    6. '#' → logprob: -3.5387935638427734
    7. 'from' → logprob: -3.9137935638427734
    8. 'count' → logprob: -4.038793563842773
    9. 'state' → logprob: -4.538793563842773
    10. 'def' → logprob: -4.538793563842773

Token 1438: 'ainte' (ID: 48434)
  Prédit: 'raint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raint' → logprob: -0.3085806667804718
    2. 'tra' → logprob: -2.3085806369781494
    3. 'aint' → logprob: -2.6835806369781494
    4. 'ainte' → logprob: -3.1835806369781494
    5. 'ra' → logprob: -3.6835806369781494
    6. 'raine' → logprob: -4.5585808753967285
    7. 'r' → logprob: -5.8085808753967285
    8. 'e' → logprob: -5.9335808753967285
    9. 'train' → logprob: -6.0585808753967285
    10. 'rait' → logprob: -6.4335808753967285

Token 1439: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36563780903816223
    2. '   ' → logprob: -1.4906377792358398
    3. ':' → logprob: -3.74063777923584
    4. ' =' → logprob: -3.86563777923584
    5. '=' → logprob: -5.11563777923584
    6. ',' → logprob: -5.24063777923584
    7. ')' → logprob: -5.86563777923584
    8. 'def' → logprob: -5.86563777923584
    9. '#' → logprob: -5.99063777923584
    10. '        
' → logprob: -6.11563777923584

Token 1440: ' une' (ID: 2463)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45580947399139404
    2. 'dp' → logprob: -2.5808095932006836
    3. '   ' → logprob: -3.2058095932006836
    4. '#' → logprob: -3.2058095932006836
    5. ')' → logprob: -3.2058095932006836
    6. 'from' → logprob: -3.5808095932006836
    7. ' dp' → logprob: -3.7058095932006836
    8. 'import' → logprob: -4.080809593200684
    9. 'def' → logprob: -4.330809593200684
    10. ' ' → logprob: -5.080809593200684

Token 1441: ' seule' (ID: 41983)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06810487806797028
    2. ' _' → logprob: -3.8181049823760986
    3. ' ' → logprob: -4.1931047439575195
    4. ' \' → logprob: -5.0681047439575195
    5. 's' → logprob: -5.4431047439575195
    6. ')' → logprob: -5.5681047439575195
    7. '_unique' → logprob: -6.3181047439575195
    8. 'def' → logprob: -6.5681047439575195
    9. ' ' → logprob: -6.6931047439575195
    10. 'n' → logprob: -7.0681047439575195

Token 1442: ' saison' (ID: 38158)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8185205459594727
    2. 'def' → logprob: -1.4435205459594727
    3. '       ' → logprob: -3.0685205459594727
    4. '_' → logprob: -3.0685205459594727
    5. '
' → logprob: -3.3185205459594727
    6. '[' → logprob: -3.5685205459594727
    7. ' =' → logprob: -3.8185205459594727
    8. ')' → logprob: -3.9435205459594727
    9. '[
' → logprob: -3.9435205459594727
    10. '_
' → logprob: -4.443520545959473

Token 1443: ' word' (ID: 2195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5844143629074097
    2. '_states' → logprob: -1.7094143629074097
    3. ' _' → logprob: -1.8344143629074097
    4. '_' → logprob: -2.209414482116699
    5. '_state' → logprob: -2.834414482116699
    6. ')' → logprob: -2.834414482116699
    7. '\' → logprob: -2.959414482116699
    8. '       ' → logprob: -3.959414482116699
    9. 'state' → logprob: -4.334414482116699
    10. 'def' → logprob: -4.334414482116699

Token 1444: ' appara' (ID: 52982)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6310028433799744
    2. '   ' → logprob: -1.0060029029846191
    3. 'def' → logprob: -3.881002902984619
    4. '
' → logprob: -4.381002902984619
    5. ')' → logprob: -4.631002902984619
    6. 'import' → logprob: -5.006002902984619
    7. '(
' → logprob: -5.506002902984619
    8. ',' → logprob: -5.631002902984619
    9. '    
' → logprob: -5.756002902984619
    10. '        
' → logprob: -5.756002902984619

Token 1445: 'issant' (ID: 31359)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4532565772533417
    2. 't' → logprob: -1.953256607055664
    3. ')' → logprob: -2.578256607055664
    4. 'ra' → logprob: -3.578256607055664
    5. 'n' → logprob: -4.078256607055664
    6. ')
' → logprob: -4.453256607055664
    7. '```' → logprob: -4.453256607055664
    8. 're' → logprob: -4.578256607055664
    9. 'rt' → logprob: -4.578256607055664
    10. 'rc' → logprob: -5.078256607055664

Token 1446: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.101297527551651
    2. ')' → logprob: -3.226297616958618
    3. ' _' → logprob: -4.851297378540039
    4. '_count' → logprob: -4.851297378540039
    5. '_states' → logprob: -5.351297378540039
    6. '_unique' → logprob: -5.351297378540039
    7. '_counts' → logprob: -5.351297378540039
    8. 's' → logprob: -5.601297378540039
    9. '_tokens' → logprob: -5.851297378540039
    10. '```' → logprob: -5.851297378540039

Token 1447: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.42529720067977905
    2. ' fois' → logprob: -1.1752972602844238
    3. 'se' → logprob: -4.050297260284424
    4. ' seule' → logprob: -4.300297260284424
    5. '```' → logprob: -6.175297260284424
    6. 'unique' → logprob: -7.300297260284424
    7. ' seul' → logprob: -7.550297260284424
    8. '_' → logprob: -7.550297260284424
    9. 'f' → logprob: -7.800297260284424
    10. ' ' → logprob: -8.175296783447266

Token 1448: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3708663880825043
    2. '       ' → logprob: -1.9958664178848267
    3. ':
' → logprob: -2.995866298675537
    4. '
' → logprob: -3.495866298675537
    5. ':' → logprob: -3.620866298675537
    6. 'import' → logprob: -3.870866298675537
    7. '    
' → logprob: -4.495866298675537
    8. 'from' → logprob: -4.620866298675537
    9. '        
' → logprob: -6.120866298675537
    10. '  
' → logprob: -6.120866298675537

Token 1449: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6557538509368896
    2. 'from' → logprob: -1.2807538509368896
    3. 'import' → logprob: -2.1557538509368896
    4. ' from' → logprob: -3.6557538509368896
    5. '       ' → logprob: -3.7807538509368896
    6. '
' → logprob: -4.405754089355469
    7. 'ac' → logprob: -4.905754089355469
    8. '    
' → logprob: -5.030754089355469
    9. 'AC' → logprob: -6.030754089355469
    10. '```' → logprob: -6.155754089355469

Token 1450: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6948726773262024
    2. '   ' → logprob: -1.0698726177215576
    3. '       ' → logprob: -3.3198726177215576
    4. 'dp' → logprob: -3.3198726177215576
    5. 'import' → logprob: -3.8198726177215576
    6. '
' → logprob: -4.194872856140137
    7. 'states' → logprob: -4.694872856140137
    8. 'next' → logprob: -5.194872856140137
    9. 'max' → logprob: -5.194872856140137
    10. ' from' → logprob: -5.319872856140137

Token 1451: ' Donc' (ID: 88837)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.19025857746601105
    2. 'import' → logprob: -2.565258502960205
    3. '   ' → logprob: -2.690258502960205
    4. '#' → logprob: -5.065258502960205
    5. '       ' → logprob: -5.065258502960205
    6. 'class' → logprob: -5.315258502960205
    7. ' from' → logprob: -5.690258502960205
    8. 'n' → logprob: -6.190258502960205
    9. 'ac' → logprob: -6.815258502960205
    10. 'states' → logprob: -6.815258502960205

Token 1452: ' on' (ID: 402)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2705485224723816
    2. '   ' → logprob: -2.3955485820770264
    3. 'import' → logprob: -2.6455485820770264
    4. ' from' → logprob: -3.1455485820770264
    5. '#' → logprob: -4.520548343658447
    6. 'states' → logprob: -5.145548343658447
    7. 'def' → logprob: -5.395548343658447
    8. '
' → logprob: -5.395548343658447
    9. '       ' → logprob: -6.645548343658447
    10. 'n' → logprob: -7.145548343658447

Token 1453: ' fait' (ID: 7473)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7944121956825256
    2. 'import' → logprob: -1.2944121360778809
    3. 'continue' → logprob: -1.5444121360778809
    4. '   ' → logprob: -4.169412136077881
    5. ' continue' → logprob: -4.794412136077881
    6. '#' → logprob: -5.044412136077881
    7. '
' → logprob: -5.419412136077881
    8. 'contin' → logprob: -5.919412136077881
    9. ' import' → logprob: -6.044412136077881
    10. '_continue' → logprob: -6.169412136077881

Token 1454: ' états' (ID: 184259)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.26017236709594727
    2. '   ' → logprob: -2.2601723670959473
    3. 'import' → logprob: -3.3851723670959473
    4. 'def' → logprob: -3.6351723670959473
    5. 'states' → logprob: -3.8851723670959473
    6. 'dp' → logprob: -4.385172367095947
    7. '```' → logprob: -4.510172367095947
    8. '
' → logprob: -4.760172367095947
    9. ' from' → logprob: -5.760172367095947
    10. 'ac' → logprob: -6.385172367095947

Token 1455: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.805023193359375
    2. ' =' → logprob: -1.180023193359375
    3. '   ' → logprob: -2.930023193359375
    4. '[
' → logprob: -3.180023193359375
    5. ':' → logprob: -3.805023193359375
    6. 'def' → logprob: -4.180023193359375
    7. '=' → logprob: -4.305023193359375
    8. '_' → logprob: -4.430023193359375
    9. '
' → logprob: -4.680023193359375
    10. ' [' → logprob: -4.805023193359375

Token 1456: ' mém' (ID: 136981)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.7637085914611816
    2. ' ' → logprob: -2.1387085914611816
    3. 'dp' → logprob: -2.5137085914611816
    4. 'bit' → logprob: -2.6387085914611816
    5. '#' → logprob: -3.2637085914611816
    6. 'bits' → logprob: -3.6387085914611816
    7. 'from' → logprob: -3.6387085914611816
    8. '   ' → logprob: -3.8887085914611816
    9. '
' → logprob: -3.8887085914611816
    10. ' mémoire' → logprob: -4.138708591461182

Token 1457: 'oris' (ID: 50689)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.236428141593933
    2. 'or' → logprob: -1.486428141593933
    3. 'cache' → logprob: -1.986428141593933
    4. 'oire' → logprob: -2.1114282608032227
    5. 'ory' → logprob: -2.1114282608032227
    6. 'moire' → logprob: -3.4864282608032227
    7. 'mo' → logprob: -4.111428260803223
    8. ']' → logprob: -4.236428260803223
    9. '```' → logprob: -4.611428260803223
    10. '
' → logprob: -4.611428260803223

Token 1458: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9906785488128662
    2. 'ize' → logprob: -1.1156785488128662
    3. 'ized' → logprob: -2.990678548812866
    4. 'ation' → logprob: -3.490678548812866
    5. '```' → logprob: -3.490678548812866
    6. 'ization' → logprob: -3.615678548812866
    7. 'é' → logprob: -3.615678548812866
    8. 'ry' → logprob: -3.740678548812866
    9. 'ed' → logprob: -3.990678548812866
    10. 'er' → logprob: -4.240678787231445

Token 1459: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -1.4752494096755981
    2. '[
' → logprob: -1.7252494096755981
    3. ')' → logprob: -2.2252492904663086
    4. '   ' → logprob: -2.4752492904663086
    5. '[' → logprob: -2.6002492904663086
    6. '(
' → logprob: -2.8502492904663086
    7. '```' → logprob: -2.9752492904663086
    8. '(' → logprob: -3.1002492904663086
    9. '_' → logprob: -3.6002492904663086
    10. 'dp' → logprob: -3.9752492904663086

Token 1460: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1589221954345703
    2. '   ' → logprob: -1.5339221954345703
    3. '(' → logprob: -1.7839221954345703
    4. '(pos' → logprob: -2.5339221954345703
    5. 'pos' → logprob: -3.1589221954345703
    6. '[' → logprob: -3.1589221954345703
    7. '       ' → logprob: -3.4089221954345703
    8. ' pos' → logprob: -3.9089221954345703
    9. '(
' → logprob: -4.28392219543457
    10. ' K' → logprob: -5.15892219543457

Token 1461: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9189457297325134
    2. ' (' → logprob: -1.6689457893371582
    3. '(pos' → logprob: -2.168945789337158
    4. 'pos' → logprob: -2.293945789337158
    5. ')' → logprob: -3.168945789337158
    6. '[' → logprob: -3.418945789337158
    7. '   ' → logprob: -3.918945789337158
    8. '(
' → logprob: -4.043945789337158
    9. ' pos' → logprob: -4.168945789337158
    10. '[pos' → logprob: -4.418945789337158

Token 1462: ' -' (ID: 533)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5216911435127258
    2. 'state' → logprob: -2.396691083908081
    3. '(' → logprob: -2.771691083908081
    4. 'dp' → logprob: -3.271691083908081
    5. ' (' → logprob: -3.646691083908081
    6. '(pos' → logprob: -3.896691083908081
    7. '(
' → logprob: -3.896691083908081
    8. 'visited' → logprob: -3.896691083908081
    9. 'current' → logprob: -4.02169132232666
    10. '   ' → logprob: -4.14669132232666

Token 1463: ' automate' (ID: 90080)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12923717498779297
    2. 'ac' → logprob: -2.879237174987793
    3. 'state' → logprob: -4.379237174987793
    4. ' pos' → logprob: -4.629237174987793
    5. 'autom' → logprob: -4.754237174987793
    6. 'current' → logprob: -5.379237174987793
    7. '   ' → logprob: -5.504237174987793
    8. 'from' → logprob: -5.754237174987793
    9. ' aho' → logprob: -5.754237174987793
    10. '(pos' → logprob: -6.129237174987793

Token 1464: ' state' (ID: 2608)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.5806638598442078
    2. '_states' → logprob: -0.9556638598442078
    3. 'state' → logprob: -3.0806639194488525
    4. '_' → logprob: -6.080663681030273
    5. 'states' → logprob: -6.080663681030273
    6. '[state' → logprob: -6.205663681030273
    7. '.states' → logprob: -7.830663681030273
    8. '_ac' → logprob: -7.955663681030273
    9. '.' → logprob: -8.205663681030273
    10. ')' → logprob: -8.455663681030273

Token 1465: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1593040227890015
    2. '```' → logprob: -1.5343040227890015
    3. ',' → logprob: -2.159304141998291
    4. '_states' → logprob: -2.534304141998291
    5. ' =' → logprob: -2.659304141998291
    6. '[' → logprob: -3.159304141998291
    7. '[state' → logprob: -3.409304141998291
    8. 's' → logprob: -3.534304141998291
    9. ':' → logprob: -4.534304141998291
    10. '``' → logprob: -4.909304141998291

Token 1466: '0' (ID: 15)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.0794035196304321
    2. 'autom' → logprob: -1.3294035196304321
    3. ')' → logprob: -2.5794034004211426
    4. ' aho' → logprob: -2.8294034004211426
    5. 'current' → logprob: -2.9544034004211426
    6. 'aho' → logprob: -3.0794034004211426
    7. ',' → logprob: -3.2044034004211426
    8. 'ach' → logprob: -3.7044034004211426
    9. '),' → logprob: -4.079403400421143
    10. 'ah' → logprob: -4.329403400421143

Token 1467: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2872677147388458
    2. ',' → logprob: -1.6622676849365234
    3. '...' → logprob: -3.5372676849365234
    4. '[' → logprob: -5.037267684936523
    5. ',
' → logprob: -5.287267684936523
    6. ')
' → logprob: -6.037267684936523
    7. '),' → logprob: -6.037267684936523
    8. ',...' → logprob: -6.162267684936523
    9. ')[' → logprob: -6.162267684936523
    10. '
' → logprob: -6.412267684936523

Token 1468: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.1509912014007568
    2. 'states' → logprob: -1.6509912014007568
    3. 'max' → logprob: -1.9009912014007568
    4. 'len' → logprob: -2.275991201400757
    5. 'size' → logprob: -2.525991201400757
    6. 'num' → logprob: -2.900991201400757
    7. 'aho' → logprob: -3.900991201400757
    8. 'total' → logprob: -4.150991439819336
    9. 'state' → logprob: -4.150991439819336
    10. '
' → logprob: -4.400991439819336

Token 1469: '_size' (ID: 5044)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.53263920545578
    2. '_states' → logprob: -1.6576392650604248
    3. 'o' → logprob: -3.157639265060425
    4. 'state' → logprob: -3.282639265060425
    5. '_machine' → logprob: -3.407639265060425
    6. '_id' → logprob: -4.532639026641846
    7. 'm' → logprob: -4.657639026641846
    8. '_' → logprob: -4.782639026641846
    9. '_m' → logprob: -5.032639026641846
    10. '_auto' → logprob: -5.157639026641846

Token 1470: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05328007787466049
    2. ')
' → logprob: -3.3032801151275635
    3. '-' → logprob: -4.553279876708984
    4. ')_' → logprob: -6.678279876708984
    5. '```' → logprob: -7.053279876708984
    6. '+' → logprob: -7.428279876708984
    7. '[' → logprob: -7.928279876708984
    8. ' -' → logprob: -8.178279876708984
    9. '
' → logprob: -8.303279876708984
    10. '``' → logprob: -9.178279876708984

Token 1471: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05060797557234764
    2. '1' → logprob: -3.550607919692993
    3. ')
' → logprob: -4.550608158111572
    4. '+' → logprob: -5.175608158111572
    5. '```' → logprob: -7.175608158111572
    6. '``' → logprob: -7.300608158111572
    7. '`)' → logprob: -7.550608158111572
    8. '')' → logprob: -7.925608158111572
    9. '#' → logprob: -8.675607681274414
    10. ']' → logprob: -8.925607681274414

Token 1472: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03397668898105621
    2. ')
' → logprob: -3.6589767932891846
    3. '```' → logprob: -5.7839765548706055
    4. ',' → logprob: -6.2839765548706055
    5. '),' → logprob: -6.7839765548706055
    6. ',
' → logprob: -8.033976554870605
    7. '
' → logprob: -8.533976554870605
    8. '):
' → logprob: -8.658976554870605
    9. '``' → logprob: -8.908976554870605
    10. '[' → logprob: -8.908976554870605

Token 1473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12514804303646088
    2. '   ' → logprob: -2.750148057937622
    3. ',' → logprob: -3.375148057937622
    4. ')' → logprob: -4.625147819519043
    5. '```' → logprob: -6.000147819519043
    6. '<|end|>' → logprob: -6.250147819519043
    7. '[' → logprob: -6.375147819519043
    8. '#' → logprob: -7.250147819519043
    9. '\' → logprob: -8.250147819519043
    10. '           ' → logprob: -8.250147819519043

Token 1474: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016292184591293335
    2. ',' → logprob: -4.891292095184326
    3. '```' → logprob: -5.641292095184326
    4. '#' (adapté à ' #') → logprob: -6.766292095184326
    5. ')' → logprob: -7.016292095184326
    6. '   ' → logprob: -7.641292095184326
    7. '<|end|>' → logprob: -7.766292095184326
    8. '[' → logprob: -7.891292095184326
    9. '           ' → logprob: -8.141292572021484
    10. '...' → logprob: -8.141292572021484

Token 1475: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7937431931495667
    2. '#' → logprob: -1.0437431335449219
    3. ',' → logprob: -2.543743133544922
    4. 'state' → logprob: -4.043743133544922
    5. 'word' → logprob: -4.168743133544922
    6. '   ' → logprob: -4.168743133544922
    7. 'visited' → logprob: -4.418743133544922
    8. '```' → logprob: -4.793743133544922
    9. '-' → logprob: -4.918743133544922
    10. 'ac' → logprob: -5.168743133544922

Token 1476: ' quel' (ID: 10613)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.7593615651130676
    2. 'season' → logprob: -1.3843615055084229
    3. 'visited' → logprob: -2.259361505508423
    4. 'seen' → logprob: -2.384361505508423
    5. 'det' → logprob: -3.134361505508423
    6. 'import' → logprob: -3.884361505508423
    7. 'from' → logprob: -5.634361743927002
    8. '#' → logprob: -5.759361743927002
    9. 'dp' → logprob: -6.134361743927002
    10. 'matched' → logprob: -6.134361743927002

Token 1477: ' saison' (ID: 38158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40115442872047424
    2. 'season' → logprob: -1.7761543989181519
    3. '_s' → logprob: -3.4011545181274414
    4. 'mask' → logprob: -3.7761545181274414
    5. '```' → logprob: -3.7761545181274414
    6. '_mask' → logprob: -4.026154518127441
    7. 'word' → logprob: -4.276154518127441
    8. 'token' → logprob: -4.901154518127441
    9. ' season' → logprob: -5.526154518127441
    10. 'state' → logprob: -5.526154518127441

Token 1478: ' word' (ID: 2195)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2060483694076538
    2. '_word' → logprob: -2.3310484886169434
    3. '_' → logprob: -3.4560484886169434
    4. ' word' → logprob: -3.7060484886169434
    5. 'word' → logprob: -3.8310484886169434
    6. '_state' → logprob: -5.331048488616943
    7. 'state' → logprob: -7.206048488616943
    8. ')_' → logprob: -7.331048488616943
    9. '_mask' → logprob: -7.456048488616943
    10. 's' → logprob: -7.456048488616943

Token 1479: ' a' (ID: 261)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.8751094937324524
    2. 's' → logprob: -1.2501094341278076
    3. '_s' → logprob: -1.5001094341278076
    4. '_id' → logprob: -3.1251094341278076
    5. '_index' → logprob: -4.625109672546387
    6. '_' → logprob: -5.375109672546387
    7. ' _' → logprob: -6.125109672546387
    8. '_states' → logprob: -6.500109672546387
    9. ''_' → logprob: -6.500109672546387
    10. '_state' → logprob: -6.875109672546387

Token 1480: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.7653178572654724
    2. 'été' → logprob: -0.7653178572654724
    3. '{
' → logprob: -3.890317916870117
    4. 's' → logprob: -5.140317916870117
    5. 'appar' → logprob: -5.140317916870117
    6. '_detect' → logprob: -5.265317916870117
    7. '=' → logprob: -5.390317916870117
    8. '```' → logprob: -5.765317916870117
    9. 'être' → logprob: -6.265317916870117
    10. 'et' → logprob: -6.265317916870117

Token 1481: ' rencontré' (ID: 141085)
  Prédit: 'detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'detect' → logprob: -0.7047929167747498
    2. ' détect' → logprob: -1.4547929763793945
    3. ' trouvé' → logprob: -2.4547929763793945
    4. 'dé' → logprob: -2.8297929763793945
    5. 'tr' → logprob: -3.2047929763793945
    6. '_detect' → logprob: -3.7047929763793945
    7. 'det' → logprob: -3.7047929763793945
    8. 'd' → logprob: -4.5797929763793945
    9. ' detected' → logprob: -4.5797929763793945
    10. ' trouv' → logprob: -5.3297929763793945

Token 1482: '?' (ID: 30)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9823136329650879
    2. '[' → logprob: -1.732313632965088
    3. '   ' → logprob: -1.857313632965088
    4. 'def' → logprob: -2.607313632965088
    5. '[
' → logprob: -2.732313632965088
    6. '=' → logprob: -3.732313632965088
    7. ' =' → logprob: -3.732313632965088
    8. '_' → logprob: -3.982313632965088
    9. ',' → logprob: -3.982313632965088
    10. '(
' → logprob: -4.232313632965088

Token 1483: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2921620607376099
    2. ',' → logprob: -1.5421620607376099
    3. '_' → logprob: -2.5421619415283203
    4. '   ' → logprob: -2.7921619415283203
    5. '[
' → logprob: -2.7921619415283203
    6. '```' → logprob: -2.9171619415283203
    7. ' =' → logprob: -3.1671619415283203
    8. '=' → logprob: -3.6671619415283203
    9. ':' → logprob: -3.7921619415283203
    10. '_states' → logprob: -4.16716194152832

Token 1484: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22174212336540222
    2. ' ' → logprob: -1.8467421531677246
    3. ' None' → logprob: -3.4717421531677246
    4. 'None' → logprob: -4.971742153167725
    5. ' -' → logprob: -6.596742153167725
    6. '-' → logprob: -6.971742153167725
    7. ')' → logprob: -8.596741676330566
    8. ',' → logprob: -8.971741676330566
    9. ' none' → logprob: -9.596741676330566
    10. ' #' → logprob: -9.596741676330566

Token 1485: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4670151472091675
    2. ' or' → logprob: -1.8420151472091675
    3. ')' → logprob: -2.092015266418457
    4. '<|end|>' → logprob: -3.342015266418457
    5. '..' → logprob: -3.967015266418457
    6. '...' → logprob: -4.092015266418457
    7. '|' → logprob: -5.217015266418457
    8. ' ,' → logprob: -5.842015266418457
    9. 'or' → logprob: -5.842015266418457
    10. '<|end|>' → logprob: -5.967015266418457

Token 1486: ' aucun' (ID: 41678)
  Prédit: 'auc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.031296759843826294
    2. 'none' → logprob: -3.531296730041504
    3. 'None' → logprob: -6.531296730041504
    4. ' aucune' → logprob: -9.781296730041504
    5. '0' → logprob: -11.281296730041504
    6. 'no' → logprob: -11.781296730041504
    7. 'A' → logprob: -11.906296730041504
    8. '1' → logprob: -13.656296730041504
    9. ' aucun' → logprob: -14.156296730041504
    10. '_none' → logprob: -14.406296730041504

Token 1487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019472837448120117
    2. ')' → logprob: -4.019473075866699
    3. ' ,' → logprob: -8.1444730758667
    4. '```' → logprob: -8.1444730758667
    5. ' or' → logprob: -8.6444730758667
    6. ' ou' → logprob: -8.7694730758667
    7. ',
' → logprob: -8.8944730758667
    8. '),' → logprob: -9.1444730758667
    9. ')
' → logprob: -10.5194730758667
    10. '_' → logprob: -10.7694730758667

Token 1488: ' s' (ID: 265)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43433764576911926
    2. ' K' → logprob: -1.9343376159667969
    3. ' ' → logprob: -2.684337615966797
    4. ' s' → logprob: -2.809337615966797
    5. 'K' → logprob: -3.809337615966797
    6. 's' → logprob: -3.809337615966797
    7. '-' → logprob: -4.434337615966797
    8. 'None' → logprob: -5.184337615966797
    9. ' None' → logprob: -5.559337615966797
    10. ' -' → logprob: -5.934337615966797

Token 1489: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27950188517570496
    2. ',' → logprob: -2.0295019149780273
    3. ' =' → logprob: -2.6545019149780273
    4. '+' → logprob: -4.279501914978027
    5. ')' → logprob: -4.404501914978027
    6. '...' → logprob: -5.529501914978027
    7. 'or' → logprob: -5.654501914978027
    8. ' or' → logprob: -6.404501914978027
    9. '```' → logprob: -6.404501914978027
    10. '=None' → logprob: -7.029501914978027

Token 1490: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38156941533088684
    2. '1' → logprob: -2.0065693855285645
    3. 'K' → logprob: -2.8815693855285645
    4. ' ' → logprob: -3.0065693855285645
    5. ' K' → logprob: -3.1315693855285645
    6. 'None' → logprob: -4.0065693855285645
    7. '-' → logprob: -4.7565693855285645
    8. ' None' → logprob: -6.0065693855285645
    9. ' -' → logprob: -6.8815693855285645
    10. 's' → logprob: -7.0065693855285645

Token 1491: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.0047946530394256115
    2. '...' → logprob: -5.504794597625732
    3. ',' → logprob: -7.629794597625732
    4. ',...' → logprob: -9.50479507446289
    5. ',..' → logprob: -10.00479507446289
    6. '..)' → logprob: -10.12979507446289
    7. '...,' → logprob: -11.37979507446289
    8. '
' → logprob: -11.37979507446289
    9. ')' → logprob: -11.50479507446289
    10. '```' → logprob: -11.75479507446289

Token 1492: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0022261450067162514
    2. ' K' → logprob: -6.37722635269165
    3. '
' → logprob: -8.127225875854492
    4. ')' → logprob: -8.627225875854492
    5. '...' → logprob: -10.752225875854492
    6. '```' → logprob: -12.127225875854492
    7. '1' → logprob: -12.502225875854492
    8. ' ' → logprob: -12.627225875854492
    9. '30' → logprob: -12.877225875854492
    10. ' 
' → logprob: -12.877225875854492

Token 1493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037531713023781776
    2. ',' → logprob: -6.128753185272217
    3. '...' → logprob: -7.378753185272217
    4. '=' → logprob: -8.253752708435059
    5. ')
' → logprob: -9.503752708435059
    6. '0' → logprob: -9.503752708435059
    7. '+' → logprob: -9.503752708435059
    8. ' )' → logprob: -9.628752708435059
    9. '...)' → logprob: -9.878752708435059
    10. '<|end|>' → logprob: -10.128752708435059

Token 1494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7055060267448425
    2. ',' → logprob: -0.9555060267448425
    3. ')' → logprob: -2.7055060863494873
    4. '   ' → logprob: -3.8305060863494873
    5. '[' → logprob: -4.455505847930908
    6. 'def' → logprob: -5.080505847930908
    7. ',
' → logprob: -5.830505847930908
    8. '#' → logprob: -6.330505847930908
    9. '           ' → logprob: -6.580505847930908
    10. ':' → logprob: -6.705505847930908

Token 1495: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7084401845932007
    2. ',' → logprob: -1.4584401845932007
    3. '   ' → logprob: -2.3334403038024902
    4. ')' → logprob: -3.0834403038024902
    5. '[' → logprob: -3.0834403038024902
    6. ',
' → logprob: -3.7084403038024902
    7. '```' → logprob: -3.9584403038024902
    8. '[
' → logprob: -4.45844030380249
    9. '	' → logprob: -5.70844030380249
    10. '\' → logprob: -5.70844030380249

Token 1496: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37513038516044617
    2. '#' → logprob: -2.2501304149627686
    3. ',
' → logprob: -2.5001304149627686
    4. ',' → logprob: -2.5001304149627686
    5. '   ' → logprob: -4.7501301765441895
    6. '_' → logprob: -5.5001301765441895
    7. ' ' → logprob: -5.8751301765441895
    8. 'visited' → logprob: -6.0001301765441895
    9. '
' → logprob: -6.2501301765441895
    10. ')
' → logprob: -6.2501301765441895

Token 1497: ' si' (ID: 1784)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.5454869270324707
    2. 'visited' → logprob: -1.6704869270324707
    3. 'season' → logprob: -2.0454869270324707
    4. 'seen' → logprob: -2.6704869270324707
    5. 'det' → logprob: -4.920486927032471
    6. 'None' → logprob: -5.045486927032471
    7. '0' → logprob: -5.670486927032471
    8. 'matched' → logprob: -5.920486927032471
    9. '1' → logprob: -6.420486927032471
    10. '-' → logprob: -6.670486927032471

Token 1498: ' on' (ID: 402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8444655537605286
    2. ' s' → logprob: -2.094465494155884
    3. 'found' → logprob: -2.719465494155884
    4. 'seen' → logprob: -2.969465494155884
    5. 'visited' → logprob: -3.219465494155884
    6. 'pos' → logprob: -3.344465494155884
    7. ' rencontré' → logprob: -3.344465494155884
    8. ' detected' → logprob: -4.094465732574463
    9. '   ' → logprob: -4.094465732574463
    10. 'matched' → logprob: -4.344465732574463

Token 1499: ' a' (ID: 261)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.3488612174987793
    2. 'n' → logprob: -1.9738612174987793
    3. '_' → logprob: -2.3488612174987793
    4. ' continue' → logprob: -2.7238612174987793
    5. 's' → logprob: -2.8488612174987793
    6. 'ren' → logprob: -2.9738612174987793
    7. 'a' → logprob: -3.5988612174987793
    8. 'est' → logprob: -3.8488612174987793
    9. 'contin' → logprob: -3.9738612174987793
    10. 'vu' → logprob: -3.9738612174987793

Token 1500: ' rencontré' (ID: 141085)
  Prédit: ' rencontré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rencontré' → logprob: -0.12406517565250397
    2. 'vu' → logprob: -3.2490651607513428
    3. 'ren' → logprob: -3.7490651607513428
    4. '_' → logprob: -3.9990651607513428
    5. 'dé' → logprob: -4.374065399169922
    6. ' rencontr' → logprob: -4.999065399169922
    7. '_detect' → logprob: -5.749065399169922
    8. ' vu' → logprob: -6.499065399169922
    9. ' trouvé' → logprob: -6.624065399169922
    10. 'enc' → logprob: -6.624065399169922

Token 1501: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5287193655967712
    2. 'une' → logprob: -1.778719425201416
    3. ' un' → logprob: -2.528719425201416
    4. '_' → logprob: -3.278719425201416
    5. ' une' → logprob: -3.903719425201416
    6. ' ' → logprob: -4.153719425201416
    7. 's' → logprob: -4.153719425201416
    8. '0' → logprob: -4.653719425201416
    9. '```' → logprob: -4.778719425201416
    10. 'd' → logprob: -4.903719425201416

Token 1502: ' saison' (ID: 38158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42048946022987366
    2. 'mot' → logprob: -1.4204894304275513
    3. 'season' → logprob: -4.045489311218262
    4. 'match' → logprob: -4.045489311218262
    5. '```' → logprob: -4.420489311218262
    6. 'm' → logprob: -5.045489311218262
    7. '_' → logprob: -5.420489311218262
    8. 'pattern' → logprob: -5.420489311218262
    9. '1' → logprob: -5.545489311218262
    10. '0' → logprob: -5.545489311218262

Token 1503: ' word' (ID: 2195)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6174286007881165
    2. '_word' → logprob: -0.8674286007881165
    3. '_' → logprob: -3.8674285411834717
    4. 'word' → logprob: -4.117428779602051
    5. ' word' → logprob: -6.742428779602051
    6. ' `_' → logprob: -7.742428779602051
    7. '_mask' → logprob: -7.992428779602051
    8. '_words' → logprob: -8.24242877960205
    9. ')_' → logprob: -9.11742877960205
    10. ' _
' → logprob: -9.36742877960205

Token 1504: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5548419952392578
    2. '[
' → logprob: -1.8048419952392578
    3. ':' → logprob: -2.554841995239258
    4. '   ' → logprob: -3.304841995239258
    5. '```' → logprob: -3.679841995239258
    6. ',' → logprob: -3.679841995239258
    7. '(
' → logprob: -3.929841995239258
    8. ' =' → logprob: -4.179841995239258
    9. '=' → logprob: -4.429841995239258
    10. '_' → logprob: -4.804841995239258

Token 1505: ' alors' (ID: 17971)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6440742611885071
    2. '   ' → logprob: -2.1440742015838623
    3. '```' → logprob: -2.6440742015838623
    4. ' #' → logprob: -3.3940742015838623
    5. 's' → logprob: -3.5190742015838623
    6. 'on' → logprob: -3.8940742015838623
    7. ' s' → logprob: -3.8940742015838623
    8. ':' → logprob: -3.8940742015838623
    9. 'visited' → logprob: -4.019074440002441
    10. '       ' → logprob: -4.144074440002441

Token 1506: ' on' (ID: 402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5494349598884583
    2. ' s' → logprob: -1.6744349002838135
    3. 'not' → logprob: -2.7994349002838135
    4. '   ' → logprob: -3.9244349002838135
    5. 'we' → logprob: -4.174435138702393
    6. 'on' → logprob: -4.299435138702393
    7. ' K' → logprob: -4.424435138702393
    8. ' not' → logprob: -4.424435138702393
    9. ' on' → logprob: -4.549435138702393
    10. 'season' → logprob: -4.924435138702393

Token 1507: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10425372421741486
    2. 'contin' → logprob: -3.6042537689208984
    3. '#' → logprob: -3.8542537689208984
    4. 'do' → logprob: -3.8542537689208984
    5. ' continue' → logprob: -4.729253768920898
    6. 'continu' → logprob: -5.104253768920898
    7. 'pe' → logprob: -5.979253768920898
    8. 's' → logprob: -6.979253768920898
    9. '       ' → logprob: -7.104253768920898
    10. 'aj' → logprob: -7.104253768920898

Token 1508: ' éviter' (ID: 64013)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.09704761207103729
    2. ' continuer' → logprob: -3.3470475673675537
    3. 'v' → logprob: -4.222047805786133
    4. '   ' → logprob: -5.222047805786133
    5. 'faire' → logprob: -5.597047805786133
    6. 'strict' → logprob: -5.847047805786133
    7. 'continue' → logprob: -5.972047805786133
    8. 're' → logprob: -6.222047805786133
    9. 'continu' → logprob: -6.222047805786133
    10. 's' → logprob: -6.472047805786133

Token 1509: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5753615498542786
    2. '```' → logprob: -1.8253614902496338
    3. '[' → logprob: -2.325361490249634
    4. ''' → logprob: -3.200361490249634
    5. ' ' → logprob: -3.575361490249634
    6. '_
' → logprob: -4.200361728668213
    7. '[
' → logprob: -4.575361728668213
    8. '`' → logprob: -4.575361728668213
    9. '``' → logprob: -4.575361728668213
    10. '   ' → logprob: -4.700361728668213

Token 1510: ''en' (ID: 16740)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.5928823947906494
    2. 'contin' → logprob: -1.8428823947906494
    3. ' rencontrer' → logprob: -1.9678823947906494
    4. 'e' → logprob: -2.8428823947906494
    5. 'ren' → logprob: -2.8428823947906494
    6. ''' → logprob: -3.3428823947906494
    7. 're' → logprob: -3.3428823947906494
    8. ''avoir' → logprob: -3.5928823947906494
    9. 'matcher' → logprob: -3.8428823947906494
    10. '```' → logprob: -3.9678823947906494

Token 1511: ' rencontrer' (ID: 81803)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.778871476650238
    2. 'coder' → logprob: -1.6538715362548828
    3. ' rencontrer' → logprob: -2.528871536254883
    4. 'count' → logprob: -2.528871536254883
    5. '```' → logprob: -2.903871536254883
    6. 'ren' → logprob: -3.278871536254883
    7. 'contr' → logprob: -4.153871536254883
    8. 'contin' → logprob: -4.278871536254883
    9. ' ren' → logprob: -4.653871536254883
    10. 'enc' → logprob: -4.653871536254883

Token 1512: ' un' (ID: 537)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.676515519618988
    2. '   ' → logprob: -1.1765155792236328
    3. ',' → logprob: -2.676515579223633
    4. '[' → logprob: -3.926515579223633
    5. ':' → logprob: -4.176515579223633
    6. ':
' → logprob: -4.551515579223633
    7. ',
' → logprob: -4.676515579223633
    8. '(
' → logprob: -4.801515579223633
    9. 'if' → logprob: -4.926515579223633
    10. '=' → logprob: -5.051515579223633

Token 1513: ' autre' (ID: 20278)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8446170687675476
    2. '       ' → logprob: -1.8446171283721924
    3. ':' → logprob: -2.5946171283721924
    4. ':
' → logprob: -2.7196171283721924
    5. '(
' → logprob: -2.8446171283721924
    6. 'import' → logprob: -3.4696171283721924
    7. '[' → logprob: -3.5946171283721924
    8. '[
' → logprob: -3.8446171283721924
    9. ',' → logprob: -4.219616889953613
    10. '(' → logprob: -4.594616889953613

Token 1514: ' différent' (ID: 114823)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1728183031082153
    2. ',' → logprob: -2.172818183898926
    3. '       ' → logprob: -2.172818183898926
    4. '   ' → logprob: -2.297818183898926
    5. '(
' → logprob: -2.547818183898926
    6. 'if' → logprob: -2.797818183898926
    7. '[' → logprob: -3.172818183898926
    8. ':
' → logprob: -3.547818183898926
    9. '=' → logprob: -3.922818183898926
    10. ' if' → logprob: -4.047818183898926

Token 1515: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013818263076245785
    2. '   ' → logprob: -5.263818264007568
    3. 'import' → logprob: -6.763818264007568
    4. '        
' → logprob: -7.013818264007568
    5. ',' → logprob: -7.138818264007568
    6. '```' → logprob: -7.513818264007568
    7. '`' → logprob: -7.638818264007568
    8. 'from' → logprob: -7.763818264007568
    9. ':
' → logprob: -7.888818264007568
    10. '           ' → logprob: -8.01381778717041

Token 1516: '<=' (ID: 16672)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26375213265419006
    2. '_' → logprob: -2.0137522220611572
    3. '0' → logprob: -4.013751983642578
    4. ')
' → logprob: -4.138751983642578
    5. 's' → logprob: -4.513751983642578
    6. ',' → logprob: -4.513751983642578
    7. '```' → logprob: -5.138751983642578
    8. ' ' → logprob: -5.388751983642578
    9. ' )' → logprob: -5.513751983642578
    10. ')_' → logprob: -5.888751983642578

Token 1517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01044198963791132
    2. '0' → logprob: -5.385441780090332
    3. ' ' → logprob: -5.510441780090332
    4. 'K' → logprob: -7.135441780090332
    5. ')' → logprob: -8.010441780090332
    6. '```' → logprob: -8.885441780090332
    7. '=' → logprob: -9.510441780090332
    8. ' K' → logprob: -9.760441780090332
    9. '
' → logprob: -9.885441780090332
    10. 's' → logprob: -9.885441780090332

Token 1518: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5941146612167358
    2. ')
' → logprob: -1.5941146612167358
    3. ']' → logprob: -1.9691146612167358
    4. ',' → logprob: -4.094114780426025
    5. 'def' → logprob: -4.344114780426025
    6. '
' → logprob: -4.344114780426025
    7. ']
' → logprob: -4.469114780426025
    8. '```' → logprob: -4.469114780426025
    9. '0' → logprob: -4.594114780426025
    10. ',
' → logprob: -5.344114780426025

Token 1519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04986745864152908
    2. '   ' → logprob: -4.424867630004883
    3. '[' → logprob: -5.174867630004883
    4. ',' → logprob: -5.549867630004883
    5. '```' → logprob: -5.674867630004883
    6. '[
' → logprob: -5.799867630004883
    7. '{
' → logprob: -5.924867630004883
    8. '`' → logprob: -6.424867630004883
    9. 'def' → logprob: -6.674867630004883
    10. ',
' → logprob: -6.674867630004883

Token 1520: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1622522473335266
    2. ',' → logprob: -3.037252187728882
    3. '   ' → logprob: -3.162252187728882
    4. ':' → logprob: -4.662252426147461
    5. '[' → logprob: -4.662252426147461
    6. ')' → logprob: -4.787252426147461
    7. ',
' → logprob: -5.037252426147461
    8. '[
' → logprob: -5.662252426147461
    9. ')
' → logprob: -5.787252426147461
    10. ':
' → logprob: -6.287252426147461

Token 1521: ' Si' (ID: 7832)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0668635368347168
    2. '   ' → logprob: -3.316863536834717
    3. ',
' → logprob: -5.691863536834717
    4. 'from' → logprob: -5.816863536834717
    5. 'ac' → logprob: -5.816863536834717
    6. ',' → logprob: -5.941863536834717
    7. 'state' → logprob: -6.066863536834717
    8. 'dp' → logprob: -6.441863536834717
    9. '[
' → logprob: -6.816863536834717
    10. '#' → logprob: -6.816863536834717

Token 1522: ' on' (ID: 402)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.4617000818252563
    2. ' s' → logprob: -1.5867000818252563
    3. 's' → logprob: -2.586699962615967
    4. '_' → logprob: -2.586699962615967
    5. ' ' → logprob: -2.836699962615967
    6. ' on' → logprob: -3.211699962615967
    7. ' _' → logprob: -3.211699962615967
    8. ' (' → logprob: -3.336699962615967
    9. 'K' → logprob: -3.336699962615967
    10. ' len' → logprob: -3.461699962615967

Token 1523: ' rencontre' (ID: 35953)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22624856233596802
    2. ' _' → logprob: -2.9762485027313232
    3. ' ' → logprob: -3.6012485027313232
    4. 's' → logprob: -4.101248741149902
    5. '_has' → logprob: -4.726248741149902
    6. 'have' → logprob: -4.976248741149902
    7. '_enc' → logprob: -4.976248741149902
    8. '_have' → logprob: -4.976248741149902
    9. '   ' → logprob: -5.101248741149902
    10. '=' → logprob: -5.476248741149902

Token 1524: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5493510365486145
    2. ' un' → logprob: -1.5493509769439697
    3. ' _' → logprob: -2.6743509769439697
    4. ' ' → logprob: -2.7993509769439697
    5. 's' → logprob: -3.4243509769439697
    6. ' s' → logprob: -4.549351215362549
    7. 'un' → logprob: -5.174351215362549
    8. ' a' → logprob: -5.299351215362549
    9. ' (' → logprob: -5.299351215362549
    10. ' une' → logprob: -5.424351215362549

Token 1525: '2' (ID: 17)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6940847635269165
    2. 'un' → logprob: -1.0690847635269165
    3. 'une' → logprob: -2.694084644317627
    4. ' another' → logprob: -3.569084644317627
    5. ' une' → logprob: -4.069084644317627
    6. '_' → logprob: -4.444084644317627
    7. 'another' → logprob: -4.694084644317627
    8. ' ' → logprob: -4.944084644317627
    9. 's' → logprob: -5.194084644317627
    10. ' s' → logprob: -6.319084644317627

Token 1526: ' fois' (ID: 14697)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.42737090587615967
    2. ' different' → logprob: -1.9273709058761597
    3. '
' → logprob: -3.177371025085449
    4. '_' → logprob: -3.427371025085449
    5. ' s' → logprob: -3.677371025085449
    6. 'different' → logprob: -3.927371025085449
    7. ' ' → logprob: -4.677371025085449
    8. '=' → logprob: -4.802371025085449
    9. 's' → logprob: -4.927371025085449
    10. '```' → logprob: -5.302371025085449

Token 1527: ' la' (ID: 557)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.0437167882919312
    2. 'def' → logprob: -1.2937167882919312
    3. '_' → logprob: -2.0437169075012207
    4. ' =' → logprob: -3.1687169075012207
    5. ' ' → logprob: -3.9187169075012207
    6. 'une' → logprob: -4.043716907501221
    7. ' on' → logprob: -4.168716907501221
    8. ' s' → logprob: -4.293716907501221
    9. '=' → logprob: -4.293716907501221
    10. 's' → logprob: -4.543716907501221

Token 1528: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -1.2384756803512573
    2. '_' → logprob: -1.6134756803512573
    3. 's' → logprob: -1.7384756803512573
    4. ' detected' → logprob: -1.9884756803512573
    5. ' current' → logprob: -3.363475799560547
    6. ' same' → logprob: -3.363475799560547
    7. ' saison' → logprob: -3.863475799560547
    8. 'same' → logprob: -4.113475799560547
    9. ' s' → logprob: -4.363475799560547
    10. 'n' → logprob: -4.613475799560547

Token 1529: ' saison' (ID: 38158)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34461280703544617
    2. 'fois' → logprob: -3.0946128368377686
    3. ' fois' → logprob: -3.3446128368377686
    4. 'season' → logprob: -3.3446128368377686
    5. ' rencontre' → logprob: -3.4696128368377686
    6. ' saison' → logprob: -3.5946128368377686
    7. 's' → logprob: -3.7196128368377686
    8. 'ren' → logprob: -4.3446125984191895
    9. ' ' → logprob: -4.3446125984191895
    10. '_word' → logprob: -5.2196125984191895

Token 1530: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.5091262459754944
    2. ' word' → logprob: -1.2591261863708496
    3. '_word' → logprob: -2.2591261863708496
    4. ' _' → logprob: -5.00912618637085
    5. '_' → logprob: -7.13412618637085
    6. 'def' → logprob: -7.63412618637085
    7. '[word' → logprob: -7.63412618637085
    8. ' def' → logprob: -7.88412618637085
    9. '_words' → logprob: -7.88412618637085
    10. 'words' → logprob: -8.884126663208008

Token 1531: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15996216237545013
    2. ',' → logprob: -2.4099621772766113
    3. '):' → logprob: -4.659962177276611
    4. ' ' → logprob: -5.159962177276611
    5. 'def' → logprob: -5.284962177276611
    6. '   ' → logprob: -5.409962177276611
    7. ' :' → logprob: -5.784962177276611
    8. ':
' → logprob: -5.784962177276611
    9. ' =' → logprob: -5.909962177276611
    10. ' and' → logprob: -5.909962177276611

Token 1532: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7672693729400635
    2. ')' → logprob: -1.0172693729400635
    3. ',' → logprob: -3.2672693729400635
    4. ')_' → logprob: -3.2672693729400635
    5. '),' → logprob: -3.6422693729400635
    6. ' _' → logprob: -4.642269134521484
    7. '):
' → logprob: -4.767269134521484
    8. '_detect' → logprob: -5.017269134521484
    9. '):' → logprob: -5.642269134521484
    10. ')
' → logprob: -5.767269134521484

Token 1533: ' occurrences' (ID: 108073)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2565787434577942
    2. '):' → logprob: -2.0065786838531494
    3. '),' → logprob: -3.1315786838531494
    4. ')' → logprob: -4.0065789222717285
    5. '==' → logprob: -4.7565789222717285
    6. ' fois' → logprob: -5.1315789222717285
    7. ' ):
' → logprob: -6.1315789222717285
    8. ',' → logprob: -6.2565789222717285
    9. ' ==' → logprob: -6.3815789222717285
    10. ' times' → logprob: -6.3815789222717285

Token 1534: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8459595441818237
    2. ')' → logprob: -1.2209595441818237
    3. '):' → logprob: -1.5959595441818237
    4. ',' → logprob: -3.5959596633911133
    5. '):
' → logprob: -4.095959663391113
    6. ' fois' → logprob: -5.095959663391113
    7. ':' → logprob: -5.095959663391113
    8. ' ==' → logprob: -5.970959663391113
    9. '==' → logprob: -6.345959663391113
    10. ' ),' → logprob: -6.845959663391113

Token 1535: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03739586099982262
    2. '[' → logprob: -4.41239595413208
    3. ':
' → logprob: -4.78739595413208
    4. ',' → logprob: -5.28739595413208
    5. '):' → logprob: -5.91239595413208
    6. '   ' → logprob: -6.16239595413208
    7. ' :' → logprob: -6.66239595413208
    8. ')' → logprob: -7.16239595413208
    9. 'def' → logprob: -7.28739595413208
    10. '_' → logprob: -7.66239595413208

Token 1536: ' rejet' (ID: 148312)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.252341628074646
    2. 'continue' → logprob: -1.502341628074646
    3. 'contin' → logprob: -8.502341270446777
    4. ' return' → logprob: -9.502341270446777
    5. ' continuer' → logprob: -9.627341270446777
    6. 'return' → logprob: -11.002341270446777
    7. ' ' → logprob: -11.127341270446777
    8. '   ' → logprob: -11.502341270446777
    9. '           ' → logprob: -12.377341270446777
    10. '	continue' → logprob: -12.752341270446777

Token 1537: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5622614026069641
    2. 'from' → logprob: -1.5622613430023193
    3. 'ac' → logprob: -2.6872613430023193
    4. '   ' → logprob: -3.3122613430023193
    5. '
' → logprob: -3.8122613430023193
    6. 'import' → logprob: -3.9372613430023193
    7. 'line' → logprob: -4.062261581420898
    8. 'n' → logprob: -4.687261581420898
    9. 'class' → logprob: -4.812261581420898
    10. 's' → logprob: -4.937261581420898

Token 1538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08135053515434265
    2. '   ' → logprob: -3.331350564956665
    3. 'import' → logprob: -4.331350326538086
    4. ':' → logprob: -4.456350326538086
    5. '\' → logprob: -5.706350326538086
    6. '[' → logprob: -6.456350326538086
    7. ':
' → logprob: -6.456350326538086
    8. '[
' → logprob: -6.581350326538086
    9. 'def' → logprob: -6.706350326538086
    10. '        
' → logprob: -6.706350326538086

Token 1539: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03242119774222374
    2. '   ' → logprob: -4.407421112060547
    3. ':
' → logprob: -5.532421112060547
    4. 'import' → logprob: -5.782421112060547
    5. '
' → logprob: -6.407421112060547
    6. '[
' → logprob: -6.657421112060547
    7. 'from' → logprob: -6.782421112060547
    8. ':' → logprob: -6.907421112060547
    9. '        
' → logprob: -7.032421112060547
    10. '\' → logprob: -7.407421112060547

Token 1540: ' Donc' (ID: 88837)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8519861698150635
    2. '       ' → logprob: -1.9769861698150635
    3. '   ' → logprob: -2.2269861698150635
    4. 'import' → logprob: -2.3519861698150635
    5. 'if' → logprob: -3.2269861698150635
    6. 'ac' → logprob: -3.7269861698150635
    7. 'try' → logprob: -3.9769861698150635
    8. 'states' → logprob: -3.9769861698150635
    9. 'def' → logprob: -4.101985931396484
    10. '#' → logprob: -4.101985931396484

Token 1541: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1505762338638306
    2. ' dp' → logprob: -1.5255762338638306
    3. '       ' → logprob: -1.6505762338638306
    4. '   ' → logprob: -2.275576114654541
    5. 'from' → logprob: -3.275576114654541
    6. '
' → logprob: -3.525576114654541
    7. ' from' → logprob: -4.025576114654541
    8. 'state' → logprob: -4.150576114654541
    9. '#' → logprob: -4.525576114654541
    10. ' state' → logprob: -4.650576114654541

Token 1542: ' stock' (ID: 6546)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9384127855300903
    2. 'def' → logprob: -1.3134127855300903
    3. '_' → logprob: -2.813412666320801
    4. ' continue' → logprob: -2.938412666320801
    5. '[
' → logprob: -3.438412666320801
    6. 'contin' → logprob: -3.563412666320801
    7. '[' → logprob: -3.688412666320801
    8. 'state' → logprob: -4.188412666320801
    9. '#' → logprob: -4.313412666320801
    10. '_continue' → logprob: -4.438412666320801

Token 1543: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03525777533650398
    2. '[' → logprob: -3.7852578163146973
    3. 'er' → logprob: -5.035257816314697
    4. '[
' → logprob: -5.910257816314697
    5. '[e' → logprob: -6.160257816314697
    6. 'é' → logprob: -8.035257339477539
    7. '_' → logprob: -9.035257339477539
    8. '=' → logprob: -10.285257339477539
    9. '['' → logprob: -10.660257339477539
    10. ']' → logprob: -11.160257339477539

Token 1544: ' dans' (ID: 2671)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7539072036743164
    2. '(
' → logprob: -2.1289072036743164
    3. '(' → logprob: -2.3789072036743164
    4. '   ' → logprob: -2.8789072036743164
    5. '(dp' → logprob: -2.8789072036743164
    6. ' dp' → logprob: -2.8789072036743164
    7. ' (' → logprob: -3.0039072036743164
    8. '[
' → logprob: -3.8789072036743164
    9. '(state' → logprob: -4.253907203674316
    10. '(states' → logprob: -4.628907203674316

Token 1545: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15395162999629974
    2. 'range' → logprob: -3.528951644897461
    3. 'state' → logprob: -3.653951644897461
    4. 'the' → logprob: -3.903951644897461
    5. ' dp' → logprob: -3.903951644897461
    6. '[
' → logprob: -4.528951644897461
    7. 'states' → logprob: -5.153951644897461
    8. '   ' → logprob: -5.903951644897461
    9. ' range' → logprob: -5.903951644897461
    10. 'ac' → logprob: -5.903951644897461

Token 1546: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013196704909205437
    2. 'visited' → logprob: -5.5131964683532715
    3. 'state' → logprob: -5.6381964683532715
    4. 'DP' → logprob: -6.3881964683532715
    5. ' dp' → logprob: -7.5131964683532715
    6. 'dict' → logprob: -7.5131964683532715
    7. 'status' → logprob: -7.6381964683532715
    8. '[
' → logprob: -8.01319694519043
    9. '(
' → logprob: -8.13819694519043
    10. 'tuple' → logprob: -8.38819694519043

Token 1547: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30530235171318054
    2. ' =' → logprob: -3.055302381515503
    3. '[
' → logprob: -3.180302381515503
    4. '_' → logprob: -3.555302381515503
    5. '_states' → logprob: -3.555302381515503
    6. '=' → logprob: -3.680302381515503
    7. '_state' → logprob: -4.055302143096924
    8. '[pos' → logprob: -4.430302143096924
    9. '```' → logprob: -4.555302143096924
    10. ',' → logprob: -4.805302143096924

Token 1548: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10280095040798187
    2. '[
' → logprob: -2.9778008460998535
    3. '[pos' → logprob: -3.8528008460998535
    4. '   ' → logprob: -4.3528008460998535
    5. '[(' → logprob: -4.9778008460998535
    6. ',' → logprob: -6.7278008460998535
    7. '(' → logprob: -6.9778008460998535
    8. '       ' → logprob: -7.3528008460998535
    9. '```' → logprob: -7.3528008460998535
    10. '[state' → logprob: -7.8528008460998535

Token 1549: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5521491169929504
    2. '[
' → logprob: -1.0521490573883057
    3. '   ' → logprob: -2.9271490573883057
    4. '[pos' → logprob: -5.552149295806885
    5. '_' → logprob: -5.927149295806885
    6. '(' → logprob: -6.052149295806885
    7. '(
' → logprob: -6.052149295806885
    8. '{' → logprob: -6.177149295806885
    9. '       ' → logprob: -6.302149295806885
    10. 'pos' → logprob: -7.052149295806885

Token 1550: ' dp' (ID: 21546)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.9353304505348206
    2. '[' → logprob: -1.9353303909301758
    3. '   ' → logprob: -1.9353303909301758
    4. '(
' → logprob: -2.435330390930176
    5. '(' → logprob: -2.935330390930176
    6. 'dp' → logprob: -3.560330390930176
    7. '{' → logprob: -3.560330390930176
    8. 'pos' → logprob: -3.810330390930176
    9. 'state' → logprob: -4.060330390930176
    10. '       ' → logprob: -4.435330390930176

Token 1551: '[pos' (ID: 48272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07451873272657394
    2. '[pos' → logprob: -3.5745186805725098
    3. '[
' → logprob: -4.07451868057251
    4. '=' → logprob: -4.94951868057251
    5. '```' → logprob: -4.94951868057251
    6. ' =' → logprob: -5.94951868057251
    7. '[(' → logprob: -6.07451868057251
    8. '_' → logprob: -6.69951868057251
    9. '[state' → logprob: -6.82451868057251
    10. '_states' → logprob: -6.94951868057251

Token 1552: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.039497654885053635
    2. ']' → logprob: -3.2894976139068604
    3. '[pos' → logprob: -7.5394978523254395
    4. '[' → logprob: -7.6644978523254395
    5. ']
' → logprob: -8.789497375488281
    6. '```' → logprob: -9.664497375488281
    7. '][]' → logprob: -9.914497375488281
    8. '[][' → logprob: -10.539497375488281
    9. '[
' → logprob: -10.664497375488281
    10. ' ][' → logprob: -10.789497375488281

Token 1553: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.20852290093898773
    2. 'ac' → logprob: -2.3335227966308594
    3. 'state' → logprob: -2.7085227966308594
    4. 'words' → logprob: -4.833522796630859
    5. 'current' → logprob: -4.958522796630859
    6. 'curr' → logprob: -6.208522796630859
    7. 'cur' → logprob: -6.458522796630859
    8. ' word' → logprob: -6.833522796630859
    9. 'autom' → logprob: -6.833522796630859
    10. '(word' → logprob: -7.083522796630859

Token 1554: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004617153201252222
    2. ']' → logprob: -5.629617214202881
    3. '_id' → logprob: -7.379617214202881
    4. '_current' → logprob: -8.504616737365723
    5. '][_' → logprob: -10.004616737365723
    6. ']
' → logprob: -11.129616737365723
    7. '][]' → logprob: -11.129616737365723
    8. 'id' → logprob: -11.129616737365723
    9. '   ' → logprob: -11.379616737365723
    10. '```' → logprob: -11.379616737365723

Token 1555: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.03274531289935112
    2. '(' → logprob: -4.282745361328125
    3. 'state' → logprob: -5.032745361328125
    4. 'autom' → logprob: -5.032745361328125
    5. '(ac' → logprob: -5.657745361328125
    6. '(state' → logprob: -7.657745361328125
    7. 'found' → logprob: -8.157745361328125
    8. 'auto' → logprob: -8.657745361328125
    9. 'season' → logprob: -8.907745361328125
    10. '(s' → logprob: -8.907745361328125

Token 1556: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.007972952909767628
    2. '_size' → logprob: -4.882972717285156
    3. '_states' → logprob: -8.882972717285156
    4. 'state' → logprob: -9.007972717285156
    5. '_s' → logprob: -10.007972717285156
    6. '_id' → logprob: -11.132972717285156
    7. '_' → logprob: -11.507972717285156
    8. '_count' → logprob: -11.632972717285156
    9. '_status' → logprob: -11.632972717285156
    10. '[state' → logprob: -12.507972717285156

Token 1557: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.47728657722473145
    2. ']' → logprob: -0.9772865772247314
    3. '][]' → logprob: -6.977286338806152
    4. ']
' → logprob: -7.852286338806152
    5. '].' → logprob: -8.102286338806152
    6. '],' → logprob: -8.227286338806152
    7. '   ' → logprob: -8.477286338806152
    8. ']=' → logprob: -8.977286338806152
    9. '[' → logprob: -9.102286338806152
    10. '       ' → logprob: -9.602286338806152

Token 1558: 'season' (ID: 38190)
  Prédit: 'season'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.19385534524917603
    2. 'found' → logprob: -2.5688552856445312
    3. 's' → logprob: -2.8188552856445312
    4. 'seen' → logprob: -4.068855285644531
    5. 'det' → logprob: -4.818855285644531
    6. '(' → logprob: -5.568855285644531
    7. 'enc' → logprob: -6.193855285644531
    8. 'K' → logprob: -6.318855285644531
    9. '1' → logprob: -6.568855285644531
    10. '0' → logprob: -6.943855285644531

Token 1559: '_found' (ID: 50825)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0315701961517334
    2. '_word' → logprob: -3.5315701961517334
    3. '_' → logprob: -7.7815704345703125
    4. 'word' → logprob: -8.156570434570312
    5. '_bit' → logprob: -8.406570434570312
    6. ']_' → logprob: -8.406570434570312
    7. '_words' → logprob: -8.656570434570312
    8. '_id' → logprob: -9.531570434570312
    9. '_state' → logprob: -9.781570434570312
    10. '_s' → logprob: -9.781570434570312

Token 1560: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.34002214670181274
    2. '_mask' → logprob: -1.840022087097168
    3. ']' → logprob: -3.340022087097168
    4. '][_' → logprob: -3.340022087097168
    5. '_status' → logprob: -4.215022087097168
    6. ']_' → logprob: -4.340022087097168
    7. '_idx' → logprob: -4.465022087097168
    8. '_found' → logprob: -5.215022087097168
    9. '```' → logprob: -5.840022087097168
    10. '_' → logprob: -5.965022087097168

Token 1561: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6425673365592957
    2. '][' → logprob: -1.2675673961639404
    3. '[' → logprob: -2.1425673961639404
    4. '       ' → logprob: -4.017567157745361
    5. '   ' → logprob: -4.142567157745361
    6. '[
' → logprob: -4.267567157745361
    7. ' =' → logprob: -5.392567157745361
    8. '=' → logprob: -5.642567157745361
    9. ',' → logprob: -6.017567157745361
    10. ')' → logprob: -6.142567157745361

Token 1562: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.511851966381073
    2. ' =' → logprob: -1.3868520259857178
    3. ']' → logprob: -2.8868520259857178
    4. '[' → logprob: -3.2618520259857178
    5. '   ' → logprob: -3.5118520259857178
    6. '       ' → logprob: -4.761851787567139
    7. '_' → logprob: -5.011851787567139
    8. ',' → logprob: -5.886851787567139
    9. '=[' → logprob: -6.886851787567139
    10. '.' → logprob: -7.136851787567139

Token 1563: ' season' (ID: 5217)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9473540186882019
    2. '=' → logprob: -1.8223540782928467
    3. '   ' → logprob: -2.1973540782928467
    4. ']' → logprob: -2.4473540782928467
    5. ' =' → logprob: -2.8223540782928467
    6. '][' → logprob: -3.0723540782928467
    7. '[
' → logprob: -3.1973540782928467
    8. ',' → logprob: -3.6973540782928467
    9. '       ' → logprob: -3.8223540782928467
    10. 'for' → logprob: -4.447353839874268

Token 1564: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.00013083349040243775
    2. '_mask' → logprob: -9.250130653381348
    3. 's' → logprob: -11.750130653381348
    4. 'found' → logprob: -11.875130653381348
    5. '_' → logprob: -12.375130653381348
    6. '_FOUND' → logprob: -12.750130653381348
    7. '```' → logprob: -13.125130653381348
    8. '_f' → logprob: -13.375130653381348
    9. ')_' → logprob: -13.625130653381348
    10. '_state' → logprob: -13.875130653381348

Token 1565: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08142416924238205
    2. ' =' → logprob: -2.5814242362976074
    3. 's' → logprob: -6.831424236297607
    4. ',' → logprob: -8.08142375946045
    5. ')' → logprob: -8.95642375946045
    6. ']' → logprob: -9.08142375946045
    7. '```' → logprob: -9.20642375946045
    8. '_states' → logprob: -9.33142375946045
    9. '=[' → logprob: -9.45642375946045
    10. '   ' → logprob: -9.58142375946045

Token 1566: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01166907325387001
    2. '-' → logprob: -4.886669158935547
    3. 'K' → logprob: -6.011669158935547
    4. ' ' → logprob: -6.886669158935547
    5. ' -' → logprob: -8.511669158935547
    6. 'int' → logprob: -8.761669158935547
    7. ' K' → logprob: -9.761669158935547
    8. '(K' → logprob: -9.886669158935547
    9. '-K' → logprob: -10.511669158935547
    10. ' (' → logprob: -11.011669158935547

Token 1567: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06790908426046371
    2. '-' → logprob: -2.942909002304077
    3. 'K' → logprob: -4.442909240722656
    4. '-K' → logprob: -7.817909240722656
    5. '(K' → logprob: -8.192909240722656
    6. 'int' → logprob: -8.317909240722656
    7. ' -' → logprob: -10.192909240722656
    8. '(' → logprob: -10.442909240722656
    9. '(-' → logprob: -10.442909240722656
    10. '[-' → logprob: -10.442909240722656

Token 1568: ' =>' (ID: 871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1569: ' aucun' (ID: 41678)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006084367632865906
    2. '-' → logprob: -7.625608444213867
    3. 'no' → logprob: -9.250608444213867
    4. ' ' → logprob: -11.500608444213867
    5. 'None' → logprob: -12.000608444213867
    6. ' -' → logprob: -13.000608444213867
    7. 'K' → logprob: -13.250608444213867
    8. ' no' → logprob: -13.500608444213867
    9. 'none' → logprob: -14.000608444213867
    10. 'No' → logprob: -14.000608444213867

Token 1570: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34957030415534973
    2. '[' → logprob: -2.5995702743530273
    3. '   ' → logprob: -2.5995702743530273
    4. '][' → logprob: -2.9745702743530273
    5. ')' → logprob: -3.8495702743530273
    6. ':' → logprob: -3.8495702743530273
    7. '```' → logprob: -4.599570274353027
    8. ',' → logprob: -4.724570274353027
    9. '_' → logprob: -4.974570274353027
    10. '=' → logprob: -5.099570274353027

Token 1571: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2159799337387085
    2. '       ' → logprob: -1.5909799337387085
    3. '   ' → logprob: -2.090980052947998
    4. ',' → logprob: -2.090980052947998
    5. '```' → logprob: -2.215980052947998
    6. ')' → logprob: -3.590980052947998
    7. '[
' → logprob: -3.965980052947998
    8. ',
' → logprob: -4.090980052947998
    9. '][' → logprob: -4.340980052947998
    10. ' ' → logprob: -4.465980052947998

Token 1572: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.172702670097351
    2. ',' → logprob: -1.422702670097351
    3. '<|end|>' → logprob: -1.922702670097351
    4. '=' → logprob: -2.7977027893066406
    5. ')' → logprob: -2.9227027893066406
    6. '       ' → logprob: -3.0477027893066406
    7. ' =' → logprob: -3.6727027893066406
    8. '<|end|>' → logprob: -4.047702789306641
    9. '```' → logprob: -4.172702789306641
    10. ',
' → logprob: -4.297702789306641

Token 1573: ' season' (ID: 5217)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009358998388051987
    2. 'season' → logprob: -5.634358882904053
    3. ' ' → logprob: -6.384358882904053
    4. '
' → logprob: -7.259358882904053
    5. '```' → logprob: -7.259358882904053
    6. '#' → logprob: -7.634358882904053
    7. '0' → logprob: -8.009359359741211
    8. ',' → logprob: -8.634359359741211
    9. '[' → logprob: -8.884359359741211
    10. 's' → logprob: -8.884359359741211

Token 1574: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -3.070975071750581e-05
    2. 'found' → logprob: -11.250030517578125
    3. '```' → logprob: -12.250030517578125
    4. 'Found' → logprob: -12.750030517578125
    5. '_' → logprob: -12.875030517578125
    6. '_FOUND' → logprob: -13.625030517578125
    7. ''_' → logprob: -13.625030517578125
    8. ' _' → logprob: -13.750030517578125
    9. '\' → logprob: -13.750030517578125
    10. '_f' → logprob: -13.875030517578125

Token 1575: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42918863892555237
    2. ' =' → logprob: -1.05418860912323
    3. ' ==' → logprob: -8.67918872833252
    4. '==' → logprob: -9.42918872833252
    5. ',' → logprob: -9.55418872833252
    6. '[' → logprob: -10.67918872833252
    7. 's' → logprob: -10.67918872833252
    8. ' +=' → logprob: -10.80418872833252
    9. ' ' → logprob: -11.17918872833252
    10. '|' → logprob: -11.30418872833252

Token 1576: ' s' (ID: 265)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2536151111125946
    2. '1' → logprob: -1.753615140914917
    3. ' ' → logprob: -3.003615140914917
    4. ' K' → logprob: -7.253614902496338
    5. 'K' → logprob: -8.503615379333496
    6. ' -' → logprob: -9.128615379333496
    7. '-' → logprob: -9.503615379333496
    8. 'None' → logprob: -10.503615379333496
    9. 's' → logprob: -10.753615379333496
    10. '   ' → logprob: -11.253615379333496

Token 1577: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19340017437934875
    2. ' =' → logprob: -2.1934001445770264
    3. 's' → logprob: -3.9434001445770264
    4. '+' → logprob: -4.0684003829956055
    5. '<|end|>' → logprob: -5.3184003829956055
    6. '<|end|>' → logprob: -5.6934003829956055
    7. '[' → logprob: -6.5684003829956055
    8. ':' → logprob: -6.6934003829956055
    9. '   ' → logprob: -6.6934003829956055
    10. '|' → logprob: -6.8184003829956055

Token 1578: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5560629367828369
    2. ')' → logprob: -1.556062936782837
    3. '1' → logprob: -1.681062936782837
    4. 's' → logprob: -4.556062698364258
    5. ' ' → logprob: -5.181062698364258
    6. '...' → logprob: -5.306062698364258
    7. '=' → logprob: -5.681062698364258
    8. ' s' → logprob: -6.431062698364258
    9. 'int' → logprob: -7.556062698364258
    10. '```' → logprob: -7.931062698364258

Token 1579: '..' (ID: 485)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.6236502528190613
    2. '...' → logprob: -0.9986502528190613
    3. '..' → logprob: -2.498650312423706
    4. ')' → logprob: -5.498650074005127
    5. '<=' → logprob: -5.623650074005127
    6. '
' → logprob: -6.498650074005127
    7. '+' → logprob: -6.748650074005127
    8. '<<(' → logprob: -7.123650074005127
    9. ')<<' → logprob: -7.998650074005127
    10. ',' → logprob: -8.248650550842285

Token 1580: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.7994282795116305e-05
    2. ' K' → logprob: -10.37504768371582
    3. ')' → logprob: -11.50004768371582
    4. '...' → logprob: -12.87504768371582
    5. '```' → logprob: -13.37504768371582
    6. '=' → logprob: -14.12504768371582
    7. 'M' → logprob: -14.37504768371582
    8. '1' → logprob: -15.25004768371582
    9. ',K' → logprob: -15.37504768371582
    10. '
' → logprob: -15.37504768371582

Token 1581: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31828683614730835
    2. '+' → logprob: -2.193286895751953
    3. ']' → logprob: -2.443286895751953
    4. ')]' → logprob: -2.818286895751953
    5. '])' → logprob: -4.943286895751953
    6. ')
' → logprob: -5.943286895751953
    7. ']+' → logprob: -6.818286895751953
    8. '])
' → logprob: -7.318286895751953
    9. ')]
' → logprob: -7.568286895751953
    10. '):' → logprob: -7.818286895751953

Token 1582: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8877546191215515
    2. '   ' → logprob: -1.7627546787261963
    3. '][' → logprob: -2.3877546787261963
    4. ']' → logprob: -2.3877546787261963
    5. ' =' → logprob: -2.8877546787261963
    6. ')
' → logprob: -3.6377546787261963
    7. '
' → logprob: -3.7627546787261963
    8. ')' → logprob: -4.137754440307617
    9. '[' → logprob: -4.262754440307617
    10. ':' → logprob: -4.512754440307617

Token 1583: ' saison' (ID: 38158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01004138495773077
    2. '0' → logprob: -5.135041236877441
    3. 'season' → logprob: -5.760041236877441
    4. ' s' → logprob: -7.135041236877441
    5. '(s' → logprob: -9.760041236877441
    6. ' season' → logprob: -10.760041236877441
    7. '-' → logprob: -11.135041236877441
    8. ' ' → logprob: -11.385041236877441
    9. ''s' → logprob: -11.635041236877441
    10. '1' → logprob: -11.635041236877441

Token 1584: ' s' (ID: 265)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.0043053762055933475
    2. '_word' → logprob: -5.754305362701416
    3. '_' → logprob: -8.379305839538574
    4. '_FOUND' → logprob: -8.629305839538574
    5. ' _' → logprob: -8.879305839538574
    6. ')_' → logprob: -9.254305839538574
    7. '_words' → logprob: -9.379305839538574
    8. '_f' → logprob: -9.504305839538574
    9. 'found' → logprob: -10.004305839538574
    10. ')' → logprob: -10.129305839538574

Token 1585: ' vu' (ID: 12005)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02251574769616127
    2. '   ' → logprob: -5.272515773773193
    3. '
' → logprob: -5.397515773773193
    4. ')' → logprob: -5.772515773773193
    5. ']' → logprob: -6.147515773773193
    6. ')
' → logprob: -6.272515773773193
    7. '[' → logprob: -7.022515773773193
    8. '][' → logprob: -7.147515773773193
    9. 'def' → logprob: -7.147515773773193
    10. '```' → logprob: -7.272515773773193

Token 1586: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8102695941925049
    2. '       ' → logprob: -1.3102695941925049
    3. '   ' → logprob: -2.310269594192505
    4. ',' → logprob: -2.810269594192505
    5. '[
' → logprob: -3.310269594192505
    6. '```' → logprob: -3.685269594192505
    7. '][' → logprob: -3.935269594192505
    8. '_' → logprob: -4.935269355773926
    9. ')' → logprob: -4.935269355773926
    10. ']' → logprob: -5.060269355773926

Token 1587: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.4486459493637085
    2. 'se' → logprob: -1.1986459493637085
    3. ' fois' → logprob: -2.948646068572998
    4. '```' → logprob: -6.073646068572998
    5. ' seule' → logprob: -6.198646068572998
    6. ' seul' → logprob: -7.198646068572998
    7. 'once' → logprob: -7.823646068572998
    8. 'fo' → logprob: -7.823646068572998
    9. 'f' → logprob: -8.07364559173584
    10. 'unique' → logprob: -8.19864559173584

Token 1588: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17886976897716522
    2. '   ' → logprob: -2.9288697242736816
    3. ':' → logprob: -3.1788697242736816
    4. ')' → logprob: -4.053869724273682
    5. '):' → logprob: -4.303869724273682
    6. ':
' → logprob: -4.428869724273682
    7. '[' → logprob: -5.428869724273682
    8. ')
' → logprob: -5.553869724273682
    9. '
' → logprob: -5.928869724273682
    10. '):
' → logprob: -6.053869724273682

Token 1589: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6337888836860657
    2. '   ' → logprob: -1.633788824081421
    3. '       ' → logprob: -1.883788824081421
    4. '[
' → logprob: -3.508788824081421
    5. ',' → logprob: -3.758788824081421
    6. '][' → logprob: -4.1337890625
    7. '```' → logprob: -4.2587890625
    8. ')' → logprob: -4.7587890625
    9. ']' → logprob: -5.1337890625
    10. '\t' → logprob: -5.7587890625

Token 1590: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21765419840812683
    2. '[' → logprob: -2.342654228210449
    3. ',' → logprob: -3.342654228210449
    4. ')' → logprob: -3.967654228210449
    5. '=' → logprob: -4.592654228210449
    6. ']' → logprob: -4.967654228210449
    7. '   ' → logprob: -5.467654228210449
    8. '[
' → logprob: -5.467654228210449
    9. '```' → logprob: -5.967654228210449
    10. ',
' → logprob: -6.217654228210449

Token 1591: ' season' (ID: 5217)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6886844038963318
    2. '0' → logprob: -2.0636844635009766
    3. ',' → logprob: -2.1886844635009766
    4. ',
' → logprob: -2.6886844635009766
    5. '[' → logprob: -3.0636844635009766
    6. '       ' → logprob: -3.3136844635009766
    7. ' ' → logprob: -4.188684463500977
    8. ')' → logprob: -4.313684463500977
    9. '[
' → logprob: -4.313684463500977
    10. '_
' → logprob: -4.563684463500977

Token 1592: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.00024001303245313466
    2. 'found' → logprob: -8.500240325927734
    3. 's' → logprob: -10.750240325927734
    4. '_f' → logprob: -12.375240325927734
    5. '_' → logprob: -12.875240325927734
    6. '```' → logprob: -13.375240325927734
    7. 'Found' → logprob: -13.750240325927734
    8. '_FOUND' → logprob: -13.875240325927734
    9. ''_' → logprob: -14.500240325927734
    10. '_present' → logprob: -15.000240325927734

Token 1593: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2034328728914261
    2. ' =' → logprob: -1.7034329175949097
    3. '==' → logprob: -7.578433036804199
    4. ' ==' → logprob: -8.0784330368042
    5. '[' → logprob: -8.3284330368042
    6. 's' → logprob: -8.5784330368042
    7. '<=' → logprob: -9.0784330368042
    8. ' <=' → logprob: -9.0784330368042
    9. '```' → logprob: -9.0784330368042
    10. ' +=' → logprob: -9.8284330368042

Token 1594: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5272647738456726
    2. 'K' → logprob: -0.9022647738456726
    3. '2' → logprob: -6.277264595031738
    4. '1' → logprob: -7.402264595031738
    5. 'M' → logprob: -7.652264595031738
    6. ' -' → logprob: -8.277264595031738
    7. ' K' → logprob: -8.402264595031738
    8. '-K' → logprob: -8.402264595031738
    9. ' ' → logprob: -9.152264595031738
    10. 'len' → logprob: -9.777264595031738

Token 1595: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017253957921639085
    2. '2' → logprob: -6.376725196838379
    3. '-' → logprob: -11.626725196838379
    4. ' ' → logprob: -12.751725196838379
    5. ' -' → logprob: -12.876725196838379
    6. '+' → logprob: -12.876725196838379
    7. '=' → logprob: -13.376725196838379
    8. 's' → logprob: -13.376725196838379
    9. '0' → logprob: -14.376725196838379
    10. '
' → logprob: -14.626725196838379

Token 1596: ' =>' (ID: 871)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.291791707277298
    2. '=' → logprob: -1.9167916774749756
    3. '1' → logprob: -2.2917916774749756
    4. ')' → logprob: -6.416791915893555
    5. '```' → logprob: -7.166791915893555
    6. ' (' → logprob: -7.541791915893555
    7. 'def' → logprob: -7.791791915893555
    8. ',' → logprob: -8.541791915893555
    9. '=-' → logprob: -9.291791915893555
    10. ']' → logprob: -9.291791915893555

Token 1597: ' plus' (ID: 2932)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020846068859100342
    2. '2' → logprob: -3.895846128463745
    3. ' -' → logprob: -9.020846366882324
    4. '1' → logprob: -9.645846366882324
    5. ' ' → logprob: -9.645846366882324
    6. 'multiple' → logprob: -10.770846366882324
    7. 'invalid' → logprob: -11.770846366882324
    8. '>' → logprob: -12.270846366882324
    9. 'float' → logprob: -12.645846366882324
    10. 'None' → logprob: -13.270846366882324

Token 1598: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5008712410926819
    2. ')' → logprob: -1.375871181488037
    3. '=' → logprob: -3.000871181488037
    4. ']' → logprob: -3.500871181488037
    5. ' =' → logprob: -3.875871181488037
    6. ' -' → logprob: -5.250871181488037
    7. '0' → logprob: -5.500871181488037
    8. '_' → logprob: -5.625871181488037
    9. '`' → logprob: -5.750871181488037
    10. ')
' → logprob: -6.000871181488037

Token 1599: ''une' (ID: 13337)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006612464785575867
    2. ' than' → logprob: -6.631612300872803
    3. ' ' → logprob: -6.881612300872803
    4. '-' → logprob: -6.881612300872803
    5. 'than' → logprob: -7.381612300872803
    6. 'inf' → logprob: -7.506612300872803
    7. '```' → logprob: -7.631612300872803
    8. 'in' → logprob: -8.631612777709961
    9. '_' → logprob: -8.881612777709961
    10. 'un' → logprob: -9.006612777709961

Token 1600: ' occur' (ID: 11416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6887810230255127
    2. 'import' → logprob: -1.9387810230255127
    3. 'def' → logprob: -2.4387810230255127
    4. 'from' → logprob: -2.5637810230255127
    5. ' =' → logprob: -3.5637810230255127
    6. '#' → logprob: -3.5637810230255127
    7. '       ' → logprob: -3.5637810230255127
    8. '
' → logprob: -3.6887810230255127
    9. '(
' → logprob: -3.8137810230255127
    10. '=' → logprob: -4.938780784606934

Token 1601: 'ence' (ID: 1082)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.092514991760254
    2. '(
' → logprob: -1.842514991760254
    3. 'def' → logprob: -1.967514991760254
    4. ':
' → logprob: -2.217514991760254
    5. ':' → logprob: -3.217514991760254
    6. '       ' → logprob: -3.467514991760254
    7. 'import' → logprob: -3.592514991760254
    8. ')
' → logprob: -3.592514991760254
    9. '
' → logprob: -3.967514991760254
    10. ' =' → logprob: -3.967514991760254

Token 1602: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4421147406101227
    2. ':
' → logprob: -2.31711483001709
    3. 'import' → logprob: -2.56711483001709
    4. '
' → logprob: -3.06711483001709
    5. 'ac' → logprob: -3.19211483001709
    6. 'from' → logprob: -3.81711483001709
    7. '       ' → logprob: -4.06711483001709
    8. '#' → logprob: -4.06711483001709
    9. ':' → logprob: -4.31711483001709
    10. 'def' → logprob: -4.69211483001709

Token 1603: ' >' (ID: 1424)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07881322503089905
    2. ' -' → logprob: -3.578813314437866
    3. 'None' → logprob: -3.703813314437866
    4. ' None' → logprob: -4.828813076019287
    5. '0' → logprob: -5.203813076019287
    6. '1' → logprob: -5.328813076019287
    7. ' ' → logprob: -5.828813076019287
    8. 's' → logprob: -8.078813552856445
    9. '+' → logprob: -8.203813552856445
    10. '2' → logprob: -8.328813552856445

Token 1604: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1098188161849976
    2. 'def' → logprob: -1.6098188161849976
    3. ' =' → logprob: -1.6098188161849976
    4. ':' → logprob: -3.484818935394287
    5. '[' → logprob: -3.609818935394287
    6. '       ' → logprob: -3.859818935394287
    7. '_' → logprob: -4.109818935394287
    8. ')' → logprob: -4.109818935394287
    9. '_ac' → logprob: -4.234818935394287
    10. 'import' → logprob: -4.359818935394287

Token 1605: ' saison' (ID: 38158)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8772740960121155
    2. '   ' → logprob: -1.3772740364074707
    3. 'from' → logprob: -1.5022740364074707
    4. 'ac' → logprob: -3.1272740364074707
    5. '#' → logprob: -4.252274036407471
    6. ':
' → logprob: -4.627274036407471
    7. 'if' → logprob: -4.752274036407471
    8. 'def' → logprob: -4.752274036407471
    9. '
' → logprob: -5.377274036407471
    10. '       ' → logprob: -5.627274036407471

Token 1606: ' word' (ID: 2195)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1319780796766281
    2. 'import' → logprob: -2.7569780349731445
    3. '   ' → logprob: -3.3819780349731445
    4. '#' → logprob: -4.6319780349731445
    5. 'ac' → logprob: -5.1319780349731445
    6. 'words' → logprob: -6.1319780349731445
    7. '
' → logprob: -6.2569780349731445
    8. '       ' → logprob: -6.3819780349731445
    9. 'class' → logprob: -6.5069780349731445
    10. 'n' → logprob: -7.2569780349731445

Token 1607: ' different' (ID: 2647)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6582844257354736
    2. 'import' → logprob: -1.5332844257354736
    3. 'from' → logprob: -1.7832844257354736
    4. '#' → logprob: -3.9082844257354736
    5. 'class' → logprob: -4.0332841873168945
    6. '       ' → logprob: -4.1582841873168945
    7. '
' → logprob: -4.1582841873168945
    8. 'def' → logprob: -4.4082841873168945
    9. ' from' → logprob: -5.0332841873168945
    10. 'if' → logprob: -6.4082841873168945

Token 1608: 'es' (ID: 268)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6229280829429626
    2. 'import' → logprob: -1.4979281425476074
    3. 'from' → logprob: -2.3729281425476074
    4. 'ac' → logprob: -3.2479281425476074
    5. '       ' → logprob: -3.2479281425476074
    6. '#' → logprob: -3.9979281425476074
    7. 'def' → logprob: -4.747928142547607
    8. '
' → logprob: -5.372928142547607
    9. '```' → logprob: -5.372928142547607
    10. ':
' → logprob: -5.497928142547607

Token 1609: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8933290243148804
    2. '   ' → logprob: -1.5183290243148804
    3. 'import' → logprob: -2.14332914352417
    4. '#' → logprob: -2.14332914352417
    5. 'ac' → logprob: -2.51832914352417
    6. '       ' → logprob: -4.14332914352417
    7. '
' → logprob: -4.64332914352417
    8. 'words' → logprob: -5.26832914352417
    9. '```' → logprob: -5.39332914352417
    10. 'class' → logprob: -5.64332914352417

Token 1610: 'non' (ID: 11741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10438453406095505
    2. '1' → logprob: -2.979384422302246
    3. '])' → logprob: -3.354384422302246
    4. '0' → logprob: -5.354384422302246
    5. ')]' → logprob: -5.729384422302246
    6. ']' → logprob: -5.729384422302246
    7. ')])' → logprob: -7.229384422302246
    8. ')
' → logprob: -8.479384422302246
    9. '=' → logprob: -8.729384422302246
    10. '})' → logprob: -9.104384422302246

Token 1611: ' valide' (ID: 137323)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03654813766479492
    2. ']' → logprob: -5.286548137664795
    3. '0' → logprob: -5.411548137664795
    4. '])' → logprob: -5.536548137664795
    5. 'acceptable' → logprob: -5.911548137664795
    6. 'accepted' → logprob: -6.161548137664795
    7. 'valid' → logprob: -6.286548137664795
    8. 'accept' → logprob: -6.536548137664795
    9. ' valid' → logprob: -6.911548137664795
    10. ' accepté' → logprob: -6.911548137664795

Token 1612: ')

' (ID: 1029)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30258068442344666
    2. ']
' → logprob: -2.0525805950164795
    3. '```' → logprob: -3.1775805950164795
    4. 'def' → logprob: -3.9275805950164795
    5. ')' → logprob: -4.052580833435059
    6. '[
' → logprob: -4.552580833435059
    7. '   ' → logprob: -4.802580833435059
    8. ')
' → logprob: -4.802580833435059
    9. '[' → logprob: -5.552580833435059
    10. '=' → logprob: -5.927580833435059

Token 1613: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16777615249156952
    2. '   ' → logprob: -3.292776107788086
    3. '       ' → logprob: -3.417776107788086
    4. '):' → logprob: -3.792776107788086
    5. '[' → logprob: -4.042776107788086
    6. ':
' → logprob: -4.417776107788086
    7. ')' → logprob: -4.542776107788086
    8. '(
' → logprob: -4.917776107788086
    9. ',' → logprob: -5.417776107788086
    10. '(' → logprob: -6.167776107788086

Token 1614: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14644832909107208
    2. '   ' → logprob: -3.0214483737945557
    3. '
' → logprob: -4.646448135375977
    4. ':
' → logprob: -4.896448135375977
    5. 's' → logprob: -5.146448135375977
    6. 'dp' → logprob: -5.396448135375977
    7. '        
' → logprob: -5.521448135375977
    8. '#' (adapté à ' #') → logprob: -5.521448135375977
    9. 'if' → logprob: -5.521448135375977
    10. ')' → logprob: -5.521448135375977

Token 1615: ' dans' (ID: 2671)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.25291842222213745
    2. 'import' → logprob: -2.3779184818267822
    3. '#' → logprob: -2.5029184818267822
    4. '   ' → logprob: -4.002918243408203
    5. '       ' → logprob: -4.377918243408203
    6. 'class' → logprob: -4.627918243408203
    7. 'ac' → logprob: -5.752918243408203
    8. ' from' → logprob: -6.877918243408203
    9. '
' → logprob: -7.002918243408203
    10. 'states' → logprob: -7.127918243408203

Token 1616: ' dp' (ID: 21546)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0348259210586548
    2. 'dp' → logprob: -1.5348259210586548
    3. '#' → logprob: -2.0348258018493652
    4. 'range' → logprob: -2.2848258018493652
    5. 'the' → logprob: -3.5348258018493652
    6. 'main' → logprob: -3.6598258018493652
    7. ' la' → logprob: -3.7848258018493652
    8. '   ' → logprob: -4.159825801849365
    9. 'continue' → logprob: -4.409825801849365
    10. 'le' → logprob: -4.409825801849365

Token 1617: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8853462934494019
    2. '[pos' → logprob: -1.0103462934494019
    3. '   ' → logprob: -2.2603464126586914
    4. '[
' → logprob: -2.7603464126586914
    5. '[' → logprob: -4.135346412658691
    6. 'pos' → logprob: -4.885346412658691
    7. '
' → logprob: -5.385346412658691
    8. '       ' → logprob: -5.635346412658691
    9. '=' → logprob: -5.760346412658691
    10. '```' → logprob: -6.010346412658691

Token 1618: ' ne' (ID: 453)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.31330606341362
    2. ' =' → logprob: -2.3133060932159424
    3. '=' → logprob: -2.4383060932159424
    4. '.append' → logprob: -3.9383060932159424
    5. '_append' → logprob: -4.063305854797363
    6. '[' → logprob: -4.688305854797363
    7. '_' → logprob: -4.938305854797363
    8. '[
' → logprob: -4.938305854797363
    9. '_tab' → logprob: -5.813305854797363
    10. '
' → logprob: -5.938305854797363

Token 1619: ' poursu' (ID: 76356)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.091718316078186
    2. 'tab' → logprob: -1.216718316078186
    3. '[
' → logprob: -2.5917181968688965
    4. '
' → logprob: -2.5917181968688965
    5. '.setdefault' → logprob: -3.0917181968688965
    6. '   ' → logprob: -3.8417181968688965
    7. '=' → logprob: -4.0917181968688965
    8. '       ' → logprob: -4.3417181968688965
    9. ' =' → logprob: -4.4667181968688965
    10. 'tabs' → logprob: -4.5917181968688965

Token 1620: 'iv' (ID: 349)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.008299073204398155
    2. 'iv' → logprob: -5.133298873901367
    3. '   ' → logprob: -8.133298873901367
    4. '
' → logprob: -8.258298873901367
    5. '#' → logprob: -8.633298873901367
    6. '  
' → logprob: -8.633298873901367
    7. 's' → logprob: -8.758298873901367
    8. '{
' → logprob: -8.883298873901367
    9. 't' → logprob: -9.133298873901367
    10. 'v' → logprob: -9.383298873901367

Token 1621: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.7530649304389954
    2. 'ait' → logprob: -1.7530648708343506
    3. 'oit' → logprob: -2.2530648708343506
    4. 'rait' → logprob: -3.0030648708343506
    5. '   ' → logprob: -3.1280648708343506
    6. 'ent' → logprob: -3.6280648708343506
    7. 'aient' → logprob: -4.50306510925293
    8. '#' → logprob: -4.50306510925293
    9. '}
' → logprob: -4.62806510925293
    10. '```' → logprob: -5.00306510925293

Token 1622: ' pas' (ID: 2173)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7263265252113342
    2. '[
' → logprob: -0.9763265252113342
    3. '_' → logprob: -2.3513264656066895
    4. '   ' → logprob: -4.1013264656066895
    5. ']' → logprob: -4.7263264656066895
    6. ')' → logprob: -5.2263264656066895
    7. '       ' → logprob: -5.6013264656066895
    8. '.' → logprob: -5.9763264656066895
    9. '           ' → logprob: -7.1013264656066895
    10. 'def' → logprob: -7.2263264656066895

Token 1623: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7561118602752686
    2. '       ' → logprob: -1.0061118602752686
    3. ':' → logprob: -2.5061118602752686
    4. '(
' → logprob: -3.7561118602752686
    5. 'def' → logprob: -4.131112098693848
    6. '(' → logprob: -4.756112098693848
    7. '[' → logprob: -4.881112098693848
    8. 'import' → logprob: -4.881112098693848
    9. ':
' → logprob: -5.506112098693848
    10. ' =' → logprob: -5.756112098693848

Token 1624: ' états' (ID: 184259)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9674677848815918
    2. ']' → logprob: -1.7174677848815918
    3. 'states' → logprob: -1.8424677848815918
    4. ' states' → logprob: -2.342467784881592
    5. '])' → logprob: -3.592467784881592
    6. '_states' → logprob: -3.967467784881592
    7. ')' → logprob: -4.217467784881592
    8. '#' → logprob: -4.467467784881592
    9. '   ' → logprob: -4.717467784881592
    10. 'state' → logprob: -4.967467784881592

Token 1625: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8676239252090454
    2. 'import' → logprob: -1.6176239252090454
    3. '       ' → logprob: -1.8676239252090454
    4. 'from' → logprob: -2.492623805999756
    5. 'ac' → logprob: -3.742623805999756
    6. '#' → logprob: -3.992623805999756
    7. '
' → logprob: -3.992623805999756
    8. 'def' → logprob: -3.992623805999756
    9. '(
' → logprob: -4.367623805999756
    10. ':
' → logprob: -4.492623805999756

Token 1626: ' season' (ID: 5217)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.000925753265619278
    2. ' season' → logprob: -7.000925540924072
    3. '```' → logprob: -11.62592601776123
    4. 'seat' → logprob: -13.75092601776123
    5. '   ' → logprob: -14.37592601776123
    6. ' saison' → logprob: -14.37592601776123
    7. 'sea' → logprob: -14.50092601776123
    8. '`' → logprob: -14.62592601776123
    9. ' ' → logprob: -14.87592601776123
    10. 'dp' → logprob: -15.00092601776123

Token 1627: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.0004734486574307084
    2. '_' → logprob: -7.750473499298096
    3. ')_' → logprob: -12.000473022460938
    4. '_f' → logprob: -12.000473022460938
    5. '\' → logprob: -12.125473022460938
    6. ']_' → logprob: -12.250473022460938
    7. ' _' → logprob: -12.500473022460938
    8. '[_' → logprob: -12.500473022460938
    9. '```' → logprob: -13.000473022460938
    10. '_
' → logprob: -13.000473022460938

Token 1628: '=-' (ID: 21714)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.0839831829071045
    2. '!=' → logprob: -1.8339831829071045
    3. '[' → logprob: -1.9589831829071045
    4. '=' → logprob: -2.4589831829071045
    5. ']' → logprob: -2.9589831829071045
    6. '[
' → logprob: -3.0839831829071045
    7. ' ==' → logprob: -3.2089831829071045
    8. '```' → logprob: -3.5839831829071045
    9. '==' → logprob: -4.208983421325684
    10. 's' → logprob: -4.583983421325684

Token 1629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -15.875000953674316
    3. ']' → logprob: -16.125
    4. ')' → logprob: -16.125
    5. ' ' → logprob: -16.25
    6. '2' → logprob: -16.625
    7. '{
' → logprob: -17.125
    8. '`' → logprob: -17.625
    9. '```' → logprob: -17.75
    10. '{' → logprob: -18.125

Token 1630: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.38882216811180115
    2. 'import' → logprob: -1.8888221979141235
    3. '   ' → logprob: -2.263822078704834
    4. 'ac' → logprob: -3.263822078704834
    5. '#' → logprob: -4.388822078704834
    6. 'if' → logprob: -5.638822078704834
    7. '
' → logprob: -5.638822078704834
    8. 'n' → logprob: -6.013822078704834
    9. '       ' → logprob: -6.888822078704834
    10. 's' → logprob: -7.013822078704834

Token 1631: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7508645057678223
    2. '       ' → logprob: -1.0008645057678223
    3. 'from' → logprob: -2.8758645057678223
    4. 'ac' → logprob: -3.3758645057678223
    5. 'import' → logprob: -3.5008645057678223
    6. '
' → logprob: -4.500864505767822
    7. '#' → logprob: -5.250864505767822
    8. 'if' → logprob: -5.500864505767822
    9. '    
' → logprob: -5.500864505767822
    10. '        
' → logprob: -6.000864505767822

Token 1632: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.49965983629226685
    2. 'import' → logprob: -1.999659776687622
    3. '   ' → logprob: -2.124659776687622
    4. '       ' → logprob: -2.749659776687622
    5. 'ac' → logprob: -2.749659776687622
    6. '#' (adapté à ' #') → logprob: -4.749660015106201
    7. '
' → logprob: -6.999660015106201
    8. ' from' → logprob: -8.374659538269043
    9. 'AC' → logprob: -8.874659538269043
    10. 'acy' → logprob: -9.374659538269043

Token 1633: ' Avant' (ID: 88245)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10365460813045502
    2. 'import' → logprob: -2.728654623031616
    3. '   ' → logprob: -3.728654623031616
    4. '#' → logprob: -5.228654384613037
    5. 'class' → logprob: -6.103654384613037
    6. '       ' → logprob: -7.853654384613037
    7. '
' → logprob: -8.228654861450195
    8. ' from' → logprob: -8.353654861450195
    9. 'if' → logprob: -8.728654861450195
    10. 'ac' → logprob: -8.728654861450195

Token 1634: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5259432196617126
    2. 'import' → logprob: -2.2759432792663574
    3. '#' → logprob: -2.6509432792663574
    4. 'from' → logprob: -2.7759432792663574
    5. 'for' → logprob: -2.7759432792663574
    6. '0' → logprob: -3.7759432792663574
    7. '=' → logprob: -4.400943279266357
    8. 'N' → logprob: -4.400943279266357
    9. ' =' → logprob: -4.400943279266357
    10. '   ' → logprob: -4.900943279266357

Token 1635: ' coder' (ID: 161238)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1863081455230713
    2. '#' → logprob: -2.6863081455230713
    3. 'def' → logprob: -2.8113081455230713
    4. 'for' → logprob: -3.9363081455230713
    5. 'build' → logprob: -4.686307907104492
    6. 'continue' → logprob: -5.561307907104492
    7. 'start' → logprob: -5.936307907104492
    8. '   ' → logprob: -6.561307907104492
    9. 'code' → logprob: -7.311307907104492
    10. 'from' → logprob: -7.436307907104492

Token 1636: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10385152697563171
    2. 'import' → logprob: -2.853851556777954
    3. '   ' → logprob: -4.353851318359375
    4. '#' → logprob: -4.478851318359375
    5. 'class' → logprob: -4.728851318359375
    6. 'ac' → logprob: -5.228851318359375
    7. 'words' → logprob: -7.728851318359375
    8. 'patterns' → logprob: -7.728851318359375
    9. 'AC' → logprob: -7.978851318359375
    10. '
' → logprob: -7.978851318359375

Token 1637: ' construire' (ID: 92473)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8422103524208069
    2. '#' → logprob: -1.217210292816162
    3. 'from' → logprob: -1.342210292816162
    4. '   ' → logprob: -5.217210292816162
    5. 'ac' → logprob: -6.092210292816162
    6. 'class' → logprob: -6.717210292816162
    7. '
' → logprob: -6.842210292816162
    8. 'pass' → logprob: -7.342210292816162
    9. 'def' → logprob: -7.467210292816162
    10. 'AC' → logprob: -8.71721076965332

Token 1638: ' AC' (ID: 18577)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.022914530709385872
    2. 'import' → logprob: -4.522914409637451
    3. '#' → logprob: -5.147914409637451
    4. 'class' → logprob: -6.022914409637451
    5. 'patterns' → logprob: -6.397914409637451
    6. 'ac' → logprob: -7.397914409637451
    7. 'next' → logprob: -7.897914409637451
    8. ' from' → logprob: -8.14791488647461
    9. '   ' → logprob: -8.52291488647461
    10. 'fail' → logprob: -9.77291488647461

Token 1639: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10134277492761612
    2. 'class' → logprob: -2.3513426780700684
    3. 'import' → logprob: -7.476342678070068
    4. '#' → logprob: -7.726342678070068
    5. '   ' → logprob: -9.226343154907227
    6. 'def' → logprob: -11.476343154907227
    7. '
' → logprob: -11.476343154907227
    8. ' from' → logprob: -12.226343154907227
    9. '    
' → logprob: -13.726343154907227
    10. '       ' → logprob: -14.851343154907227

Token 1640: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04978533461689949
    2. 'class' → logprob: -3.0497853755950928
    3. '#' → logprob: -7.174785137176514
    4. 'import' → logprob: -7.924785137176514
    5. ' from' → logprob: -11.174785614013672
    6. '   ' → logprob: -11.674785614013672
    7. 'tr' → logprob: -11.674785614013672
    8. 'patterns' → logprob: -11.799785614013672
    9. 'alphabet' → logprob: -12.049785614013672
    10. '
' → logprob: -12.174785614013672

Token 1641: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.06172899901866913
    2. 'class' → logprob: -2.9367289543151855
    3. '   ' → logprob: -5.4367289543151855
    4. '#' (adapté à ' #') → logprob: -6.3117289543151855
    5. 'import' → logprob: -8.061729431152344
    6. 'tr' → logprob: -8.311729431152344
    7. ' from' → logprob: -10.061729431152344
    8. 'ac' → logprob: -11.311729431152344
    9. '       ' → logprob: -11.561729431152344
    10. 'nodes' → logprob: -11.936729431152344

Token 1642: ' Construct' (ID: 36230)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.02811887115240097
    2. 'class' → logprob: -4.403119087219238
    3. '   ' → logprob: -4.653119087219238
    4. 'import' → logprob: -6.028119087219238
    5. '#' → logprob: -6.278119087219238
    6. 'tr' → logprob: -7.278119087219238
    7. ' from' → logprob: -7.528119087219238
    8. 'ac' → logprob: -9.153119087219238
    9. 'patterns' → logprob: -9.403119087219238
    10. 'nodes' → logprob: -9.778119087219238

Token 1643: ' A' (ID: 355)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9165894985198975
    2. '   ' → logprob: -1.9165894985198975
    3. 'ion' → logprob: -1.9165894985198975
    4. 'from' → logprob: -2.7915894985198975
    5. 'ing' → logprob: -2.9165894985198975
    6. '       ' → logprob: -3.0415894985198975
    7. 'AC' → logprob: -3.5415894985198975
    8. 'ct' → logprob: -3.9165894985198975
    9. 'uct' → logprob: -3.9165894985198975
    10. 'def' → logprob: -4.541589736938477

Token 1644: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.012248976156115532
    2. 'from' → logprob: -4.637248992919922
    3. 'class' → logprob: -6.137248992919922
    4. 'h' → logprob: -9.012248992919922
    5. '#' → logprob: -9.262248992919922
    6. 'import' → logprob: -10.512248992919922
    7. 'def' → logprob: -11.262248992919922
    8. 'hoc' → logprob: -11.637248992919922
    9. 'cho' → logprob: -11.887248992919922
    10. ' from' → logprob: -12.137248992919922

Token 1645: ' Cor' (ID: 5580)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.03612670674920082
    2. 'from' → logprob: -4.536126613616943
    3. 'class' → logprob: -4.786126613616943
    4. '#' → logprob: -5.036126613616943
    5. 'cor' → logprob: -5.286126613616943
    6. '_COR' → logprob: -7.286126613616943
    7. '_C' → logprob: -7.536126613616943
    8. 'COR' → logprob: -7.536126613616943
    9. '```' → logprob: -7.536126613616943
    10. 'import' → logprob: -7.661126613616943

Token 1646: 'as' (ID: 288)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.01246020570397377
    2. 'utin' → logprob: -5.637460231781006
    3. 'class' → logprob: -6.762460231781006
    4. 'cut' → logprob: -7.012460231781006
    5. 'pus' → logprob: -7.137460231781006
    6. 'as' → logprob: -7.387460231781006
    7. 'out' → logprob: -7.512460231781006
    8. 'r' → logprob: -8.262459754943848
    9. 'uth' → logprob: -8.387459754943848
    10. 'utch' → logprob: -8.512459754943848

Token 1647: 'ick' (ID: 1003)
  Prédit: 'cks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cks' → logprob: -0.8017758131027222
    2. 'ck' → logprob: -0.9267758131027222
    3. 'uc' → logprob: -3.9267759323120117
    4. '{
' → logprob: -4.051775932312012
    5. 'h' → logprob: -4.426775932312012
    6. 'uck' → logprob: -4.551775932312012
    7. 'icks' → logprob: -4.801775932312012
    8. '```' → logprob: -4.926775932312012
    9. 'chs' → logprob: -5.051775932312012
    10. 'ucks' → logprob: -5.051775932312012

Token 1648: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3047277629375458
    2. 'class' → logprob: -1.4297277927398682
    3. '   ' → logprob: -3.804727792739868
    4. 'import' → logprob: -7.429727554321289
    5. 'def' → logprob: -8.429727554321289
    6. '#' → logprob: -9.179727554321289
    7. ' from' → logprob: -9.679727554321289
    8. '    
' → logprob: -10.554727554321289
    9. ' class' → logprob: -11.304727554321289
    10. '
' → logprob: -11.679727554321289

Token 1649: '       ' (ID: 309)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.08747272193431854
    2. 'from' → logprob: -2.712472677230835
    3. 'tr' → logprob: -5.087472915649414
    4. 'ac' → logprob: -5.587472915649414
    5. '
' → logprob: -6.212472915649414
    6. '   ' → logprob: -6.712472915649414
    7. 'def' → logprob: -6.962472915649414
    8. ' =' → logprob: -7.337472915649414
    9. 'AC' → logprob: -7.337472915649414
    10. 'Trie' → logprob: -7.462472915649414

Token 1650: ' class' (ID: 744)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10467521846294403
    2. 'class' (adapté à ' class') → logprob: -2.72967529296875
    3. 'tr' → logprob: -3.72967529296875
    4. '   ' → logprob: -4.72967529296875
    5. 'ac' → logprob: -7.72967529296875
    6. '#' → logprob: -7.85467529296875
    7. 'AC' → logprob: -8.35467529296875
    8. 'def' → logprob: -9.47967529296875
    9. '
' → logprob: -10.60467529296875
    10. 'import' → logprob: -10.60467529296875

Token 1651: ' ACA' (ID: 152125)
  Prédit: 'Trie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Trie' → logprob: -0.1615326702594757
    2. 'AC' → logprob: -2.4115326404571533
    3. 'Node' → logprob: -3.1615326404571533
    4. 'A' → logprob: -4.286532878875732
    5. ' Trie' → logprob: -6.911532878875732
    6. 'Autom' → logprob: -7.161532878875732
    7. ' AC' → logprob: -7.536532878875732
    8. '   ' → logprob: -7.661532878875732
    9. ' A' → logprob: -8.411532402038574
    10. ' Node' → logprob: -8.536532402038574

Token 1652: 'utom' (ID: 69729)
  Prédit: 'utom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utom' → logprob: -0.14424248039722443
    2. 'uto' → logprob: -2.019242525100708
    3. 'ut' → logprob: -7.019242286682129
    4. 'Autom' → logprob: -7.519242286682129
    5. 'Trie' → logprob: -10.269242286682129
    6. 'UTO' → logprob: -10.519242286682129
    7. 'to' → logprob: -11.144242286682129
    8. 'autom' → logprob: -11.769242286682129
    9. '{
' → logprob: -12.144242286682129
    10. 'utor' → logprob: -12.144242286682129

Token 1653: 'aton' (ID: 24850)
  Prédit: 'aton'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aton' → logprob: -0.0027083458844572306
    2. 'ata' → logprob: -6.627708435058594
    3. 'ate' → logprob: -6.752708435058594
    4. 'at' → logprob: -9.252708435058594
    5. 'ation' → logprob: -9.877708435058594
    6. '```' → logprob: -10.627708435058594
    7. 'e' → logprob: -11.877708435058594
    8. 'achine' → logprob: -12.252708435058594
    9. 'a' → logprob: -12.752708435058594
    10. 'ton' → logprob: -12.752708435058594

Token 1654: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016144633293151855
    2. ':
' → logprob: -4.141144752502441
    3. '():' → logprob: -9.641144752502441
    4. '(object' → logprob: -10.266144752502441
    5. '():
' → logprob: -12.766144752502441
    6. '):' → logprob: -12.891144752502441
    7. '```' → logprob: -13.641144752502441
    8. ' :' → logprob: -14.641144752502441
    9. ':
' → logprob: -14.641144752502441
    10. '>:' → logprob: -14.641144752502441

Token 1655: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06095956265926361
    2. '       ' → logprob: -3.060959577560425
    3. '    ' → logprob: -5.560959339141846
    4. 'class' → logprob: -6.060959339141846
    5. '```' → logprob: -6.185959339141846
    6. '(
' → logprob: -6.560959339141846
    7. '(' → logprob: -7.060959339141846
    8. ' class' → logprob: -7.435959339141846
    9. ':' → logprob: -8.560959815979004
    10. ':
' → logprob: -8.935959815979004

Token 1656: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03176606073975563
    2. 'class' → logprob: -4.031765937805176
    3. 'def' (adapté à ' def') → logprob: -4.656765937805176
    4. '       ' → logprob: -6.031765937805176
    5. ' def' → logprob: -6.906765937805176
    6. ' class' → logprob: -8.656765937805176
    7. '    ' → logprob: -8.781765937805176
    8. '	def' → logprob: -8.781765937805176
    9. '```' → logprob: -9.781765937805176
    10. ' ' → logprob: -10.156765937805176

Token 1657: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0032058770302683115
    2. 'init' → logprob: -5.7532057762146
    3. '_init' → logprob: -10.753206253051758
    4. ' __' → logprob: -12.003206253051758
    5. '**' → logprob: -15.128206253051758
    6. '```' → logprob: -15.753206253051758
    7. ' init' → logprob: -16.503206253051758
    8. '___' → logprob: -16.503206253051758
    9. 'def' → logprob: -17.003206253051758
    10. '
' → logprob: -17.128206253051758

Token 1658: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0015230757417157292
    2. 'it' → logprob: -6.876523017883301
    3. 'nit' → logprob: -7.876523017883301
    4. 'int' → logprob: -9.5015230178833
    5. 'iter' → logprob: -11.1265230178833
    6. '```' → logprob: -11.3765230178833
    7. 'in' → logprob: -12.8765230178833
    8. '__' → logprob: -13.6265230178833
    9. 'i' → logprob: -14.1265230178833
    10. 'its' → logprob: -14.2515230178833

Token 1659: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003921847674064338
    2. '(' → logprob: -8.250391960144043
    3. 'self' → logprob: -9.625391960144043
    4. ' (' → logprob: -10.875391960144043
    5. '(
' → logprob: -11.375391960144043
    6. '(object' → logprob: -11.875391960144043
    7. '__(' → logprob: -12.000391960144043
    8. ':' → logprob: -12.250391960144043
    9. '```' → logprob: -12.625391960144043
    10. '   ' → logprob: -12.625391960144043

Token 1660: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019574174657464027
    2. ')' → logprob: -7.501957416534424
    3. '):
' → logprob: -7.751957416534424
    4. '[self' → logprob: -8.376957893371582
    5. '           ' → logprob: -8.751957893371582
    6. '0' → logprob: -8.751957893371582
    7. ' self' → logprob: -9.501957893371582
    8. '[]' → logprob: -9.626957893371582
    9. '
' → logprob: -10.126957893371582
    10. '       ' → logprob: -10.376957893371582

Token 1661: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6064985394477844
    2. '():' → logprob: -1.3564984798431396
    3. '):
' → logprob: -2.4814984798431396
    4. '():
' → logprob: -3.2314984798431396
    5. ',' → logprob: -3.3564984798431396
    6. ':' → logprob: -3.7314984798431396
    7. '   ' → logprob: -6.106498718261719
    8. '(self' → logprob: -6.106498718261719
    9. ':
' → logprob: -6.356498718261719
    10. '           ' → logprob: -6.356498718261719

Token 1662: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5694054365158081
    2. '               ' → logprob: -0.9444054365158081
    3. '           ' → logprob: -4.069405555725098
    4. '   ' → logprob: -4.444405555725098
    5. '       ' → logprob: -5.569405555725098
    6. '(self' → logprob: -5.694405555725098
    7. 'def' → logprob: -6.069405555725098
    8. '{
' → logprob: -6.319405555725098
    9. ' ' → logprob: -7.194405555725098
    10. '```' → logprob: -7.569405555725098

Token 1663: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.038112759590148926
    2. '               ' → logprob: -4.038112640380859
    3. 'def' → logprob: -4.538112640380859
    4. '       ' → logprob: -5.788112640380859
    5. ' self' → logprob: -6.288112640380859
    6. '           ' → logprob: -6.913112640380859
    7. '   ' → logprob: -7.163112640380859
    8. '
' → logprob: -7.163112640380859
    9. '                   ' → logprob: -7.413112640380859
    10. '(self' → logprob: -8.28811264038086

Token 1664: '.next' (ID: 6689)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.316044569015503
    2. 'children' → logprob: -1.441044569015503
    3. '_tr' → logprob: -2.066044569015503
    4. '=' → logprob: -2.191044569015503
    5. 'next' → logprob: -2.691044569015503
    6. '_next' → logprob: -3.441044569015503
    7. 'states' → logprob: -3.816044569015503
    8. '_children' → logprob: -4.191044807434082
    9. 'size' → logprob: -4.316044807434082
    10. 'edges' → logprob: -4.441044807434082

Token 1665: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18181608617305756
    2. ' =' → logprob: -1.8068161010742188
    3. '=[' → logprob: -7.056816101074219
    4. '   ' → logprob: -7.681816101074219
    5. '={
' → logprob: -8.681816101074219
    6. '_' → logprob: -8.931816101074219
    7. '=[]' → logprob: -9.931816101074219
    8. '_=' → logprob: -9.931816101074219
    9. '[' → logprob: -10.056816101074219
    10. '=
' → logprob: -10.181816101074219

Token 1666: ' [{}' (ID: 170238)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03642021492123604
    2. '{}' → logprob: -3.7864201068878174
    3. '[]' → logprob: -4.5364203453063965
    4. '[{' → logprob: -6.2864203453063965
    5. '{' → logprob: -8.411419868469238
    6. ' [{}' → logprob: -9.411419868469238
    7. 'default' → logprob: -9.536419868469238
    8. 'dict' → logprob: -9.911419868469238
    9. '[[' → logprob: -10.036419868469238
    10. '[]
' → logprob: -10.786419868469238

Token 1667: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4914758801460266
    2. 'for' → logprob: -1.6164758205413818
    3. '           ' → logprob: -2.241475820541382
    4. ' for' → logprob: -3.116475820541382
    5. '                   ' → logprob: -4.116476058959961
    6. ',' → logprob: -4.241476058959961
    7. ',
' → logprob: -5.241476058959961
    8. '
' → logprob: -6.991476058959961
    9. '       ' → logprob: -7.616476058959961
    10. '```' → logprob: -7.991476058959961

Token 1668: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15486305952072144
    2. '               ' → logprob: -2.029863119125366
    3. 'self' → logprob: -5.279862880706787
    4. '       ' → logprob: -5.654862880706787
    5. '   ' → logprob: -5.779862880706787
    6. '		' → logprob: -9.279863357543945
    7. '	           ' → logprob: -9.654863357543945
    8. '	       ' → logprob: -10.029863357543945
    9. '                   ' → logprob: -10.154863357543945
    10. '	' → logprob: -10.154863357543945

Token 1669: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01319952867925167
    2. '               ' → logprob: -4.388199329376221
    3. 'fail' → logprob: -7.888199329376221
    4. '                   ' → logprob: -8.763199806213379
    5. ' self' → logprob: -9.138199806213379
    6. '           ' → logprob: -11.013199806213379
    7. '   ' → logprob: -11.263199806213379
    8. '       ' → logprob: -12.138199806213379
    9. '0' → logprob: -12.513199806213379
    10. 'failure' → logprob: -13.263199806213379

Token 1670: '.fail' (ID: 48738)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.00021748353901784867
    2. 'failure' → logprob: -8.50021743774414
    3. 'link' → logprob: -11.75021743774414
    4. '_fail' → logprob: -12.87521743774414
    5. ' fail' → logprob: -13.25021743774414
    6. '.fail' → logprob: -13.87521743774414
    7. '_failure' → logprob: -15.75021743774414
    8. 'fails' → logprob: -15.87521743774414
    9. '	fail' → logprob: -15.87521743774414
    10. 'fa' → logprob: -16.62521743774414

Token 1671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0632752925157547
    2. ' =' → logprob: -3.1882753372192383
    3. '.append' → logprob: -4.063275337219238
    4. '   ' → logprob: -6.438275337219238
    5. '[' → logprob: -7.063275337219238
    6. '=[' → logprob: -8.813275337219238
    7. '       ' → logprob: -9.188275337219238
    8. ':' → logprob: -10.188275337219238
    9. '[-' → logprob: -10.438275337219238
    10. '           ' → logprob: -10.563275337219238

Token 1672: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04859236627817154
    2. '[-' → logprob: -3.0485923290252686
    3. ' [' → logprob: -12.298592567443848
    4. ' [-' → logprob: -15.423592567443848
    5. '[self' → logprob: -16.42359161376953
    6. '   ' → logprob: -16.54859161376953
    7. '[]' → logprob: -16.67359161376953
    8. '[len' → logprob: -18.17359161376953
    9. '[]
' → logprob: -18.54859161376953
    10. '0' → logprob: -18.54859161376953

Token 1673: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002614550176076591
    2. '-' → logprob: -8.250261306762695
    3. ' ' → logprob: -15.750261306762695
    4. ' -' → logprob: -17.875261306762695
    5. '   ' → logprob: -19.125261306762695
    6. '[' → logprob: -19.750261306762695
    7. '           ' → logprob: -20.125261306762695
    8. '[-' → logprob: -20.125261306762695
    9. '       ' → logprob: -20.375261306762695
    10. '00' → logprob: -21.375261306762695

Token 1674: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.007317792624235153
    2. ']' → logprob: -5.632318019866943
    3. '           ' → logprob: -5.882318019866943
    4. '               ' → logprob: -7.257318019866943
    5. ',' → logprob: -8.757317543029785
    6. '       ' → logprob: -10.507317543029785
    7. ',
' → logprob: -11.132317543029785
    8. '                   ' → logprob: -12.132317543029785
    9. ']
' → logprob: -12.507317543029785
    10. '   ' → logprob: -12.882317543029785

Token 1675: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.372786283493042
    2. '               ' → logprob: -1.372786283493042
    3. 'self' → logprob: -2.872786283493042
    4. '   ' → logprob: -7.122786521911621
    5. '       ' → logprob: -7.997786521911621
    6. '```' → logprob: -9.622786521911621
    7. ' self' → logprob: -10.872786521911621
    8. '                   ' → logprob: -12.247786521911621
    9. '		' → logprob: -12.372786521911621
    10. '			' → logprob: -13.747786521911621

Token 1676: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014200646430253983
    2. '               ' → logprob: -4.264200687408447
    3. '                   ' → logprob: -11.139200210571289
    4. ' self' → logprob: -11.389200210571289
    5. '```' → logprob: -12.389200210571289
    6. '           ' → logprob: -12.514200210571289
    7. '   ' → logprob: -13.514200210571289
    8. '       ' → logprob: -14.264200210571289
    9. '	self' → logprob: -14.264200210571289
    10. '``' → logprob: -15.764200210571289

Token 1677: '.output' (ID: 27521)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.0966198593378067
    2. 'count' → logprob: -2.8466198444366455
    3. 'cnt' → logprob: -4.471620082855225
    4. '_output' → logprob: -5.096620082855225
    5. 'depth' → logprob: -5.221620082855225
    6. 'out' → logprob: -5.346620082855225
    7. 'size' → logprob: -5.971620082855225
    8. 'outputs' → logprob: -6.346620082855225
    9. '_count' → logprob: -7.471620082855225
    10. 'len' → logprob: -8.596619606018066

Token 1678: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.061848461627960205
    2. '=' → logprob: -3.3118484020233154
    3. ' =' → logprob: -3.8118484020233154
    4. '[-' → logprob: -7.3118486404418945
    5. '[' → logprob: -8.311848640441895
    6. '           ' → logprob: -8.436848640441895
    7. '.extend' → logprob: -9.436848640441895
    8. 'append' → logprob: -9.811848640441895
    9. '=[' → logprob: -10.561848640441895
    10. '=[]' → logprob: -10.686848640441895

Token 1679: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43301835656166077
    2. 'set' → logprob: -1.4330183267593384
    3. '[]' → logprob: -2.183018445968628
    4. ' []' → logprob: -9.683018684387207
    5. ' [' → logprob: -10.058018684387207
    6. '[]
' → logprob: -10.683018684387207
    7. '   ' → logprob: -11.308018684387207
    8. ' set' → logprob: -11.433018684387207
    9. ' [[]' → logprob: -13.183018684387207
    10. '[:]' → logprob: -13.558018684387207

Token 1680: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2014457732439041
    2. '[]' → logprob: -1.7014458179473877
    3. ' []' → logprob: -11.201445579528809
    4. '[]
' → logprob: -11.451445579528809
    5. ' set' → logprob: -12.201445579528809
    6. '   ' → logprob: -13.451445579528809
    7. '[]}' → logprob: -14.451445579528809
    8. '{}' → logprob: -14.451445579528809
    9. '[' → logprob: -15.326445579528809
    10. '[])' → logprob: -15.951445579528809

Token 1681: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.255553275346756
    2. '()]
' → logprob: -1.5055532455444336
    3. '()' → logprob: -5.630553245544434
    4. '([' → logprob: -11.130553245544434
    5. ']' → logprob: -11.880553245544434
    6. '()],
' → logprob: -13.005553245544434
    7. '()])
' → logprob: -13.755553245544434
    8. '()}
' → logprob: -13.880553245544434
    9. ']
' → logprob: -14.130553245544434
    10. '()];
' → logprob: -14.255553245544434

Token 1682: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002493968466296792
    2. '       ' → logprob: -6.502493858337402
    3. '```' → logprob: -7.752493858337402
    4. 'def' → logprob: -8.252493858337402
    5. '   ' → logprob: -8.752493858337402
    6. '
' → logprob: -9.252493858337402
    7. '            
' → logprob: -11.377493858337402
    8. '		' → logprob: -12.002493858337402
    9. 'self' → logprob: -12.377493858337402
    10. '               ' → logprob: -12.502493858337402

Token 1683: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03901395946741104
    2. 'def' (adapté à ' def') → logprob: -3.9140138626098633
    3. '       ' → logprob: -4.664013862609863
    4. '
' → logprob: -4.914013862609863
    5. '   ' → logprob: -6.914013862609863
    6. '```' → logprob: -7.914013862609863
    7. ' def' → logprob: -9.539013862609863
    8. '            
' → logprob: -10.289013862609863
    9. '        
' → logprob: -10.539013862609863
    10. '    
' → logprob: -11.164013862609863

Token 1684: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.15520413219928741
    2. 'insert' → logprob: -2.2802040576934814
    3. 'def' → logprob: -3.2802040576934814
    4. 'build' → logprob: -6.0302042961120605
    5. '__' → logprob: -7.7802042961120605
    6. 'extend' → logprob: -8.405203819274902
    7. '_add' → logprob: -8.655203819274902
    8. 'get' → logprob: -8.780203819274902
    9. 'push' → logprob: -9.405203819274902
    10. 'next' → logprob: -9.405203819274902

Token 1685: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.013114108704030514
    2. 'word' → logprob: -4.888113975524902
    3. '_pattern' → logprob: -6.263113975524902
    4. '(self' → logprob: -6.513113975524902
    5. 'Word' → logprob: -7.388113975524902
    6. '(word' → logprob: -7.388113975524902
    7. '_character' → logprob: -7.888113975524902
    8. '_char' → logprob: -8.888113975524902
    9. '_string' → logprob: -9.138113975524902
    10. '(' → logprob: -9.513113975524902

Token 1686: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.21323007345199585
    2. '(' → logprob: -2.3382301330566406
    3. '(word' → logprob: -2.5882301330566406
    4. '(
' → logprob: -4.088230133056641
    5. '(token' → logprob: -6.213230133056641
    6. '       ' → logprob: -7.713230133056641
    7. ' (' → logprob: -8.08823013305664
    8. '('' → logprob: -8.21323013305664
    9. '   ' → logprob: -8.21323013305664
    10. '("' → logprob: -9.08823013305664

Token 1687: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3269507884979248
    2. ',' → logprob: -1.8269507884979248
    3. '(token' → logprob: -2.076950788497925
    4. '):
' → logprob: -2.326950788497925
    5. '):' → logprob: -2.451950788497925
    6. '       ' → logprob: -2.951950788497925
    7. '(word' → logprob: -3.076950788497925
    8. '   ' → logprob: -3.451950788497925
    9. '```' → logprob: -3.576950788497925
    10. '(' → logprob: -3.701950788497925

Token 1688: ' w' (ID: 286)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.3803125321865082
    2. 'pat' → logprob: -1.6303125619888306
    3. 'pattern' → logprob: -2.130312442779541
    4. 'w' → logprob: -6.755312442779541
    5. ' word' → logprob: -7.755312442779541
    6. ' pat' → logprob: -10.2553129196167
    7. ' pattern' → logprob: -10.5053129196167
    8. ')' → logprob: -12.1303129196167
    9. 's' → logprob: -12.2553129196167
    10. '   ' → logprob: -12.5053129196167

Token 1689: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.027824662625789642
    2. '):' → logprob: -4.402824878692627
    3. ',' → logprob: -5.152824878692627
    4. '(self' → logprob: -5.152824878692627
    5. '       ' → logprob: -7.527824878692627
    6. 'self' → logprob: -7.777824878692627
    7. '```' → logprob: -7.777824878692627
    8. '):
' → logprob: -8.027824401855469
    9. ''):
' → logprob: -8.152824401855469
    10. '   ' → logprob: -8.527824401855469

Token 1690: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.24641777575016022
    2. ' idx' → logprob: -1.996417760848999
    3. 'index' → logprob: -2.621417760848999
    4. ' index' → logprob: -5.371417999267578
    5. 'id' → logprob: -6.246417999267578
    6. 'word' → logprob: -6.621417999267578
    7. 'len' → logprob: -7.371417999267578
    8. 's' → logprob: -7.996417999267578
    9. ' word' → logprob: -8.246417999267578
    10. ' s' → logprob: -8.621417999267578

Token 1691: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003282525110989809
    2. '):' → logprob: -5.75328254699707
    3. ')' → logprob: -9.75328254699707
    4. '):
' → logprob: -10.62828254699707
    5. '=' → logprob: -11.87828254699707
    6. ')=' → logprob: -13.00328254699707
    7. '       ' → logprob: -13.00328254699707
    8. '               ' → logprob: -13.37828254699707
    9. '   ' → logprob: -13.37828254699707
    10. '           ' → logprob: -13.50328254699707

Token 1692: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002786167024169117
    2. '       ' → logprob: -8.62527847290039
    3. '```' → logprob: -9.62527847290039
    4. '   ' → logprob: -11.00027847290039
    5. '           ' → logprob: -11.87527847290039
    6. '                   ' → logprob: -12.25027847290039
    7. 'self' → logprob: -12.62527847290039
    8. '(self' → logprob: -15.25027847290039
    9. '	           ' → logprob: -15.50027847290039
    10. '                       ' → logprob: -15.87527847290039

Token 1693: ' cur' (ID: 4396)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11162952333688736
    2. '       ' → logprob: -2.9866294860839844
    3. '   ' → logprob: -3.3616294860839844
    4. 'for' → logprob: -4.736629486083984
    5. '```' → logprob: -5.486629486083984
    6. 'self' → logprob: -5.736629486083984
    7. 'i' → logprob: -6.736629486083984
    8. '                   ' → logprob: -6.986629486083984
    9. '           ' → logprob: -7.236629486083984
    10. 'pos' → logprob: -7.736629486083984

Token 1694: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4314615726470947
    2. ' =' → logprob: -1.0564615726470947
    3. '=self' → logprob: -6.181461334228516
    4. '=_' → logprob: -8.306461334228516
    5. '=int' → logprob: -9.056461334228516
    6. '       ' → logprob: -10.181461334228516
    7. '=None' → logprob: -10.181461334228516
    8. '=len' → logprob: -10.556461334228516
    9. '=
' → logprob: -10.681461334228516
    10. '=node' → logprob: -10.681461334228516

Token 1695: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '           ' → logprob: -19.000009536743164
    4. '               ' → logprob: -19.375009536743164
    5. '   ' → logprob: -20.500009536743164
    6. '                   ' → logprob: -20.625009536743164
    7. '=' → logprob: -21.875009536743164
    8. '
' → logprob: -22.375009536743164
    9. 'len' → logprob: -22.500009536743164
    10. '۰' → logprob: -23.125009536743164

Token 1696: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. 'len' → logprob: -16.0
    4. '   ' → logprob: -20.25
    5. '1' → logprob: -21.0
    6. '۰' → logprob: -22.25
    7. '           ' → logprob: -22.875
    8. '000' → logprob: -22.875
    9. '
' → logprob: -23.0
    10. '=' → logprob: -23.125

Token 1697: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002461622003465891
    2. '       ' → logprob: -7.2524614334106445
    3. '           ' → logprob: -7.2524614334106445
    4. ' for' → logprob: -7.8774614334106445
    5. 'for' → logprob: -8.127461433410645
    6. '                   ' → logprob: -9.127461433410645
    7. '		       ' → logprob: -9.502461433410645
    8. '	           ' → logprob: -9.752461433410645
    9. '   ' → logprob: -10.002461433410645
    10. '	       ' → logprob: -10.877461433410645

Token 1698: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.033274367451667786
    2. 'for' → logprob: -3.9082744121551514
    3. ' for' → logprob: -4.908274173736572
    4. '           ' → logprob: -6.158274173736572
    5. '	           ' → logprob: -6.783274173736572
    6. '       ' → logprob: -7.158274173736572
    7. '		       ' → logprob: -8.40827465057373
    8. '   ' → logprob: -8.53327465057373
    9. '	       ' → logprob: -8.53327465057373
    10. '                   ' → logprob: -8.90827465057373

Token 1699: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018488673493266106
    2. ' for' → logprob: -4.768488883972168
    3. '               ' → logprob: -5.518488883972168
    4. '           ' → logprob: -5.768488883972168
    5. '       ' → logprob: -6.893488883972168
    6. '   ' → logprob: -7.143488883972168
    7. '```' → logprob: -7.768488883972168
    8. '                   ' → logprob: -8.143488883972168
    9. '	       ' → logprob: -9.518488883972168
    10. '	for' → logprob: -10.643488883972168

Token 1700: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002626904286444187
    2. 'ch' → logprob: -6.002626895904541
    3. ' c' → logprob: -9.0026273727417
    4. 'char' → logprob: -10.5026273727417
    5. '   ' → logprob: -14.5026273727417
    6. ' ch' → logprob: -16.502626419067383
    7. 'x' → logprob: -18.502626419067383
    8. '
' → logprob: -19.377626419067383
    9. ' ' → logprob: -19.502626419067383
    10. '	c' → logprob: -19.752626419067383

Token 1701: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06997256726026535
    2. 'in' → logprob: -2.694972515106201
    3. ' ' → logprob: -11.69497299194336
    4. '   ' → logprob: -11.69497299194336
    5. '           ' → logprob: -12.19497299194336
    6. '       ' → logprob: -13.19497299194336
    7. ')' → logprob: -13.31997299194336
    8. '               ' → logprob: -13.44497299194336
    9. '  ' → logprob: -13.56997299194336
    10. '                   ' → logprob: -13.69497299194336

Token 1702: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0009117019944824278
    2. ' w' → logprob: -7.000911712646484
    3. 'c' → logprob: -15.875911712646484
    4. '
' → logprob: -17.000911712646484
    5. '	w' → logprob: -17.625911712646484
    6. 'word' → logprob: -18.125911712646484
    7. '   ' → logprob: -18.250911712646484
    8. '_w' → logprob: -18.625911712646484
    9. '[w' → logprob: -18.625911712646484
    10. '<w' → logprob: -18.875911712646484

Token 1703: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24150703847408295
    2. 'in' → logprob: -2.491507053375244
    3. ':
' → logprob: -2.866507053375244
    4. ':' → logprob: -2.991507053375244
    5. '           ' → logprob: -4.491507053375244
    6. '   ' → logprob: -5.491507053375244
    7. '=' → logprob: -5.491507053375244
    8. '                   ' → logprob: -6.116507053375244
    9. '       ' → logprob: -7.116507053375244
    10. '               ' → logprob: -7.366507053375244

Token 1704: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006900074891746044
    2. '   ' → logprob: -5.631900310516357
    3. ':
' → logprob: -5.881900310516357
    4. '	               ' → logprob: -8.7568998336792
    5. '		           ' → logprob: -9.1318998336792
    6. '```' → logprob: -9.7568998336792
    7. ':' → logprob: -10.3818998336792
    8. '               ' → logprob: -10.6318998336792
    9. 'if' → logprob: -11.0068998336792
    10. 'for' → logprob: -11.1318998336792

Token 1705: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023394789546728134
    2. ' if' → logprob: -3.898394823074341
    3. '                   ' → logprob: -6.023394584655762
    4. '{
' → logprob: -9.273394584655762
    5. 'd' → logprob: -9.523394584655762
    6. 'n' → logprob: -9.523394584655762
    7. '               ' → logprob: -9.523394584655762
    8. '   ' → logprob: -10.148394584655762
    9. '                       ' → logprob: -10.273394584655762
    10. '           ' → logprob: -11.648394584655762

Token 1706: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014442270912695676
    2. ' c' → logprob: -8.875144004821777
    3. '   ' → logprob: -13.125144004821777
    4. '                   ' → logprob: -13.500144004821777
    5. '               ' → logprob: -14.375144004821777
    6. 'not' → logprob: -15.375144004821777
    7. '           ' → logprob: -16.125144958496094
    8. '                       ' → logprob: -16.500144958496094
    9. 'cur' → logprob: -16.500144958496094
    10. '	c' → logprob: -16.750144958496094

Token 1707: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4740850329399109
    2. ' not' → logprob: -0.9740850329399109
    3. ':not' → logprob: -13.474084854125977
    4. '               ' → logprob: -13.599084854125977
    5. '           ' → logprob: -13.849084854125977
    6. '
' → logprob: -14.224084854125977
    7. '                   ' → logprob: -14.224084854125977
    8. 'n't' → logprob: -14.349084854125977
    9. '	not' → logprob: -14.474084854125977
    10. ']' → logprob: -14.974084854125977

Token 1708: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7809874415397644
    2. 'self' → logprob: -0.9059874415397644
    3. 'in' → logprob: -2.030987501144409
    4. ' self' → logprob: -5.53098726272583
    5. '                   ' → logprob: -6.03098726272583
    6. '               ' → logprob: -8.405987739562988
    7. '                       ' → logprob: -9.905987739562988
    8. '=self' → logprob: -10.655987739562988
    9. '[self' → logprob: -12.405987739562988
    10. '           ' → logprob: -12.405987739562988

Token 1709: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2664456789934775e-06
    2. ' self' → logprob: -13.625000953674316
    3. '
' → logprob: -17.250001907348633
    4. '           ' → logprob: -18.625001907348633
    5. '(self' → logprob: -19.375001907348633
    6. '[self' → logprob: -20.125001907348633
    7. '{' → logprob: -20.250001907348633
    8. '               ' → logprob: -20.250001907348633
    9. '=self' → logprob: -20.500001907348633
    10. '   ' → logprob: -20.875001907348633

Token 1710: '.next' (ID: 6689)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5765990018844604
    2. '.next' → logprob: -0.8265990018844604
    3. 'self' → logprob: -7.70159912109375
    4. ' next' → logprob: -8.82659912109375
    5. '
' → logprob: -10.70159912109375
    6. '           ' → logprob: -11.07659912109375
    7. '               ' → logprob: -12.32659912109375
    8. '.' → logprob: -12.82659912109375
    9. '_next' → logprob: -12.95159912109375
    10. '{
' → logprob: -12.95159912109375

Token 1711: '[cur' (ID: 81868)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0020216628909111023
    2. '[cur' → logprob: -6.252021789550781
    3. '[-' → logprob: -9.377021789550781
    4. 'cur' → logprob: -12.252021789550781
    5. '0' → logprob: -13.377021789550781
    6. '           ' → logprob: -14.252021789550781
    7. '   ' → logprob: -14.877021789550781
    8. '                   ' → logprob: -15.002021789550781
    9. '               ' → logprob: -15.377021789550781
    10. '```' → logprob: -15.627021789550781

Token 1712: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4344445466995239
    2. ':
' → logprob: -1.309444546699524
    3. '[cur' → logprob: -3.3094444274902344
    4. '                   ' → logprob: -3.4344444274902344
    5. '                       ' → logprob: -5.059444427490234
    6. '[' → logprob: -5.934444427490234
    7. '               ' → logprob: -6.184444427490234
    8. '[next' → logprob: -6.809444427490234
    9. '][' → logprob: -7.684444427490234
    10. '           ' → logprob: -8.559444427490234

Token 1713: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007516168989241123
    2. '                   ' → logprob: -7.500751495361328
    3. ':
' → logprob: -8.750751495361328
    4. '```' → logprob: -11.125751495361328
    5. '[next' → logprob: -12.125751495361328
    6. '{
' → logprob: -12.375751495361328
    7. ':' → logprob: -12.500751495361328
    8. '       ' → logprob: -13.500751495361328
    9. '=' → logprob: -13.500751495361328
    10. '	                   ' → logprob: -13.750751495361328

Token 1714: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00016194197814911604
    2. ' self' → logprob: -9.250162124633789
    3. '                       ' → logprob: -9.750162124633789
    4. '                   ' → logprob: -12.375162124633789
    5. '                           ' → logprob: -13.500162124633789
    6. '   ' → logprob: -14.125162124633789
    7. '	self' → logprob: -14.500162124633789
    8. '               ' → logprob: -15.125162124633789
    9. '           ' → logprob: -15.875162124633789
    10. '
' → logprob: -16.62516212463379

Token 1715: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0009158630855381489
    2. 'next' → logprob: -7.000916004180908
    3. '[next' → logprob: -12.75091552734375
    4. ' next' → logprob: -14.50091552734375
    5. '_next' → logprob: -15.25091552734375
    6. '	next' → logprob: -15.75091552734375
    7. 'Next' → logprob: -15.87591552734375
    8. '.' → logprob: -16.00091552734375
    9. '           ' → logprob: -16.00091552734375
    10. '].' → logprob: -16.62591552734375

Token 1716: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -4.60414821645827e-06
    2. 'cur' → logprob: -13.000004768371582
    3. '[' → logprob: -13.750004768371582
    4. ' [' → logprob: -14.750004768371582
    5. '   ' → logprob: -15.125004768371582
    6. '           ' → logprob: -15.875004768371582
    7. '
' → logprob: -16.125003814697266
    8. '       ' → logprob: -16.375003814697266
    9. '                   ' → logprob: -16.750003814697266
    10. '```' → logprob: -16.875003814697266

Token 1717: '][' (ID: 2696)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.0003800296690315008
    2. '[' → logprob: -9.00037956237793
    3. '][' → logprob: -9.37537956237793
    4. '           ' → logprob: -10.37537956237793
    5. '                   ' → logprob: -10.75037956237793
    6. '].' → logprob: -11.12537956237793
    7. '               ' → logprob: -11.12537956237793
    8. '.append' → logprob: -11.12537956237793
    9. 'cur' → logprob: -11.37537956237793
    10. '       ' → logprob: -11.50037956237793

Token 1718: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.052377623040229e-05
    2. ' c' → logprob: -10.000070571899414
    3. '                   ' → logprob: -12.125070571899414
    4. '           ' → logprob: -12.250070571899414
    5. '                           ' → logprob: -12.500070571899414
    6. '               ' → logprob: -12.625070571899414
    7. '   ' → logprob: -13.000070571899414
    8. '                       ' → logprob: -13.500070571899414
    9. '                               ' → logprob: -13.750070571899414
    10. '
' → logprob: -14.000070571899414

Token 1719: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20363712310791016
    2. ']=' → logprob: -1.7036371231079102
    3. '=' → logprob: -7.32863712310791
    4. ']={' → logprob: -8.07863712310791
    5. ']+=' → logprob: -8.07863712310791
    6. '                   ' → logprob: -8.45363712310791
    7. '                       ' → logprob: -8.57863712310791
    8. '']=' → logprob: -8.70363712310791
    9. '                           ' → logprob: -9.32863712310791
    10. '           ' → logprob: -9.32863712310791

Token 1720: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036228811368346214
    2. ']=' → logprob: -6.253623008728027
    3. '                           ' → logprob: -7.753623008728027
    4. ']' → logprob: -7.753623008728027
    5. '                       ' → logprob: -8.128623008728027
    6. ' =' → logprob: -8.503623008728027
    7. '=
' → logprob: -8.878623008728027
    8. '                   ' → logprob: -9.503623008728027
    9. '={}' → logprob: -9.878623008728027
    10. '[' → logprob: -11.378623008728027

Token 1721: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00024524700711481273
    2. ' len' → logprob: -8.375245094299316
    3. '                   ' → logprob: -12.250245094299316
    4. '1' → logprob: -12.625245094299316
    5. 'self' → logprob: -12.625245094299316
    6. '                           ' → logprob: -14.000245094299316
    7. '                       ' → logprob: -14.500245094299316
    8. '	len' → logprob: -14.750245094299316
    9. '[len' → logprob: -14.875245094299316
    10. '               ' → logprob: -15.125245094299316

Token 1722: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.088346359931165e-07
    2. 'self' → logprob: -14.000000953674316
    3. '(' → logprob: -18.0
    4. '=self' → logprob: -18.75
    5. '[self' → logprob: -19.25
    6. '(
' → logprob: -19.625
    7. '	self' → logprob: -20.5
    8. '
' → logprob: -20.625
    9. ' self' → logprob: -21.125
    10. ' (' → logprob: -21.25

Token 1723: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0002636006975080818
    2. 'self' → logprob: -8.375263214111328
    3. '.self' → logprob: -11.125263214111328
    4. '(self' → logprob: -11.875263214111328
    5. 'next' → logprob: -12.000263214111328
    6. '[self' → logprob: -12.750263214111328
    7. '           ' → logprob: -14.875263214111328
    8. '[next' → logprob: -14.875263214111328
    9. 'Next' → logprob: -15.250263214111328
    10. '(next' → logprob: -15.500263214111328

Token 1724: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05683403089642525
    2. ')' → logprob: -2.9318339824676514
    3. '[self' → logprob: -6.8068342208862305
    4. 'self' → logprob: -7.6818342208862305
    5. '                   ' → logprob: -9.43183422088623
    6. '[cur' → logprob: -9.55683422088623
    7. '(self' → logprob: -10.05683422088623
    8. ')]
' → logprob: -10.55683422088623
    9. '[' → logprob: -10.55683422088623
    10. ')-' → logprob: -10.68183422088623

Token 1725: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0004523606039583683
    2. '                   ' → logprob: -7.875452518463135
    3. '                           ' → logprob: -10.500452041625977
    4. '               ' → logprob: -10.625452041625977
    5. '           ' → logprob: -11.750452041625977
    6. '                      ' → logprob: -12.750452041625977
    7. ',' → logprob: -13.250452041625977
    8. '       ' → logprob: -13.625452041625977
    9. 'self' → logprob: -13.625452041625977
    10. '                        ' → logprob: -13.625452041625977

Token 1726: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0193264652043581
    2. '                       ' → logprob: -4.019326686859131
    3. '                   ' → logprob: -6.894326686859131
    4. '               ' → logprob: -9.894326210021973
    5. ' self' → logprob: -10.019326210021973
    6. '                           ' → logprob: -10.519326210021973
    7. '   ' → logprob: -10.894326210021973
    8. '           ' → logprob: -11.019326210021973
    9. '                               ' → logprob: -13.269326210021973
    10. '       ' → logprob: -13.644326210021973

Token 1727: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.06508855521678925
    2. 'next' → logprob: -2.8150885105133057
    3. '[next' → logprob: -5.815088748931885
    4. ' next' → logprob: -9.065088272094727
    5. '.append' → logprob: -12.565088272094727
    6. '	next' → logprob: -12.565088272094727
    7. '_next' → logprob: -12.815088272094727
    8. '                   ' → logprob: -13.065088272094727
    9. '           ' → logprob: -13.190088272094727
    10. 'Next' → logprob: -13.440088272094727

Token 1728: '.append' (ID: 3709)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cur' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -12.375009536743164
    3. '[self' → logprob: -13.500009536743164
    4. '[-' → logprob: -13.875009536743164
    5. '           ' → logprob: -14.625009536743164
    6. '       ' → logprob: -15.000009536743164
    7. '                   ' → logprob: -15.250009536743164
    8. '][' → logprob: -15.250009536743164
    9. '               ' → logprob: -15.375009536743164
    10. '```' → logprob: -15.500009536743164

Token 1729: '({})
' (ID: 141996)
  Prédit: '({})
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({})
' → logprob: -0.25199997425079346
    2. '({' → logprob: -1.5019999742507935
    3. '{}' → logprob: -11.126999855041504
    4. '([])
' → logprob: -11.251999855041504
    5. '(' → logprob: -11.751999855041504
    6. '({});
' → logprob: -12.001999855041504
    7. '{}
' → logprob: -12.251999855041504
    8. '   ' → logprob: -12.376999855041504
    9. '({
' → logprob: -12.626999855041504
    10. ' ({' → logprob: -12.876999855041504

Token 1730: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3159980773925781
    2. '                   ' → logprob: -1.3159980773925781
    3. '               ' → logprob: -6.190998077392578
    4. 'self' → logprob: -8.065998077392578
    5. '           ' → logprob: -8.440998077392578
    6. '```' → logprob: -9.315998077392578
    7. '                           ' → logprob: -10.690998077392578
    8. '       ' → logprob: -11.190998077392578
    9. ' self' → logprob: -11.815998077392578
    10. '   ' → logprob: -12.065998077392578

Token 1731: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00018327576981391758
    2. '                       ' → logprob: -8.75018310546875
    3. ' self' → logprob: -11.25018310546875
    4. '                   ' → logprob: -11.87518310546875
    5. '   ' → logprob: -13.25018310546875
    6. '           ' → logprob: -13.75018310546875
    7. '               ' → logprob: -14.25018310546875
    8. ' ' → logprob: -14.37518310546875
    9. '       ' → logprob: -14.87518310546875
    10. '                           ' → logprob: -15.87518310546875

Token 1732: '.fail' (ID: 48738)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.02778698317706585
    2. 'output' → logprob: -3.77778697013855
    3. '.fail' → logprob: -5.402787208557129
    4. '.output' → logprob: -11.027787208557129
    5. ' fail' → logprob: -12.277787208557129
    6. '	fail' → logprob: -13.277787208557129
    7. '
' → logprob: -13.402787208557129
    8. '_fail' → logprob: -13.902787208557129
    9. 'next' → logprob: -14.527787208557129
    10. '   ' → logprob: -14.527787208557129

Token 1733: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.432518421206623e-05
    2. '.' → logprob: -10.6250638961792
    3. 'append' → logprob: -11.3750638961792
    4. ' .' → logprob: -11.6250638961792
    5. '   ' → logprob: -12.6250638961792
    6. '.extend' → logprob: -12.8750638961792
    7. '[-' → logprob: -12.8750638961792
    8. '[len' → logprob: -13.0000638961792
    9. '           ' → logprob: -13.1250638961792
    10. '       ' → logprob: -13.2500638961792

Token 1734: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. '                       ' → logprob: -14.750001907348633
    4. '                           ' → logprob: -16.250001907348633
    5. 'len' → logprob: -16.750001907348633
    6. '                   ' → logprob: -17.500001907348633
    7. '(' → logprob: -17.875001907348633
    8. '                               ' → logprob: -18.000001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '                        ' → logprob: -19.375001907348633

Token 1735: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -19.625
    4. 'len' → logprob: -19.875
    5. 'cur' → logprob: -20.375
    6. '           ' → logprob: -20.75
    7. '       ' → logprob: -21.125
    8. '０' → logprob: -21.125
    9. '
' → logprob: -21.75
    10. '۰' → logprob: -22.0

Token 1736: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.39897289872169495
    2. '                       ' → logprob: -1.1489728689193726
    3. ')' → logprob: -4.898972988128662
    4. '                   ' → logprob: -5.523972988128662
    5. '               ' → logprob: -7.648972988128662
    6. '           ' → logprob: -9.648972511291504
    7. '       ' → logprob: -11.523972511291504
    8. '                        
' → logprob: -12.023972511291504
    9. '')
' → logprob: -12.273972511291504
    10. '):
' → logprob: -12.523972511291504

Token 1737: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.324562132358551
    2. '                       ' → logprob: -1.3245620727539062
    3. '```' → logprob: -4.949562072753906
    4. '               ' → logprob: -5.699562072753906
    5. '           ' → logprob: -7.824562072753906
    6. '       ' → logprob: -9.824562072753906
    7. '                           ' → logprob: -10.074562072753906
    8. '                    ' → logprob: -10.074562072753906
    9. '``' → logprob: -10.199562072753906
    10. 'for' → logprob: -10.324562072753906

Token 1738: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.2729995988775045e-06
    2. ' self' → logprob: -12.375006675720215
    3. '                       ' → logprob: -13.375006675720215
    4. '                   ' → logprob: -14.500006675720215
    5. '           ' → logprob: -18.0000057220459
    6. '	self' → logprob: -18.2500057220459
    7. '               ' → logprob: -18.2500057220459
    8. '   ' → logprob: -18.8750057220459
    9. '                           ' → logprob: -19.2500057220459
    10. '       ' → logprob: -19.8750057220459

Token 1739: '.output' (ID: 27521)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -5.88418151892256e-05
    2. '.output' → logprob: -10.125059127807617
    3. ' output' → logprob: -11.000059127807617
    4. '	output' → logprob: -14.000059127807617
    5. '_output' → logprob: -14.500059127807617
    6. '
' → logprob: -15.250059127807617
    7. '           ' → logprob: -15.750059127807617
    8. '(output' → logprob: -16.625059127807617
    9. '$output' → logprob: -16.750059127807617
    10. 'Output' → logprob: -17.000059127807617

Token 1740: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1273394078016281
    2. '[-' → logprob: -2.1273393630981445
    3. '[' → logprob: -8.127339363098145
    4. '           ' → logprob: -9.252339363098145
    5. '[len' → logprob: -12.252339363098145
    6. '   ' → logprob: -12.502339363098145
    7. '=' → logprob: -12.627339363098145
    8. 'append' → logprob: -13.127339363098145
    9. '       ' → logprob: -13.377339363098145
    10. '```' → logprob: -14.252339363098145

Token 1741: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -7.541112427134067e-05
    2. 'set' → logprob: -9.500075340270996
    3. '(' → logprob: -15.625075340270996
    4. ' (' → logprob: -16.250076293945312
    5. '({' → logprob: -16.625076293945312
    6. '=set' → logprob: -16.750076293945312
    7. '   ' → logprob: -17.625076293945312
    8. ' set' → logprob: -18.125076293945312
    9. '       ' → logprob: -18.500076293945312
    10. ':set' → logprob: -19.500076293945312

Token 1742: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.007220395840704441
    2. '())' → logprob: -5.007220268249512
    3. ')
' → logprob: -7.882220268249512
    4. '()' → logprob: -9.507220268249512
    5. ')' → logprob: -10.882220268249512
    6. '                   ' → logprob: -11.882220268249512
    7. '())

' → logprob: -12.007220268249512
    8. '           ' → logprob: -12.257220268249512
    9. '                       ' → logprob: -12.382220268249512
    10. '())
' → logprob: -12.507220268249512

Token 1743: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0051913014613091946
    2. '               ' → logprob: -5.380191326141357
    3. '           ' → logprob: -8.2551908493042
    4. '```' → logprob: -8.6301908493042
    5. '                       ' → logprob: -10.2551908493042
    6. '       ' → logprob: -10.2551908493042
    7. '   ' → logprob: -10.6301908493042
    8. '
' → logprob: -10.8801908493042
    9. 'for' → logprob: -11.7551908493042
    10. ' for' → logprob: -12.6301908493042

Token 1744: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.0003408263437449932
    2. '                   ' → logprob: -8.125340461730957
    3. ' cur' → logprob: -10.500340461730957
    4. '               ' → logprob: -11.500340461730957
    5. '	cur' → logprob: -12.125340461730957
    6. '           ' → logprob: -14.250340461730957
    7. '   ' → logprob: -14.750340461730957
    8. '[cur' → logprob: -15.375340461730957
    9. '_cur' → logprob: -15.750340461730957
    10. '                       ' → logprob: -16.375341415405273

Token 1745: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007617863826453686
    2. ' =' → logprob: -4.882617950439453
    3. '=
' → logprob: -11.757617950439453
    4. '=c' → logprob: -13.507617950439453
    5. '=current' → logprob: -14.007617950439453
    6. '   ' → logprob: -15.632617950439453
    7. ']=' → logprob: -15.632617950439453
    8. '           ' → logprob: -15.882617950439453
    9. '       ' → logprob: -16.132617950439453
    10. ' =
' → logprob: -16.382617950439453

Token 1746: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004900033236481249
    2. ' self' → logprob: -7.625490188598633
    3. 'next' → logprob: -13.750490188598633
    4. '                   ' → logprob: -14.625490188598633
    5. '               ' → logprob: -15.625490188598633
    6. '[self' → logprob: -15.875490188598633
    7. '                       ' → logprob: -16.500490188598633
    8. '(self' → logprob: -16.875490188598633
    9. '	self' → logprob: -17.375490188598633
    10. '   ' → logprob: -17.625490188598633

Token 1747: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.6934424042701721
    2. 'next' → logprob: -0.6934424042701721
    3. '[next' → logprob: -8.693442344665527
    4. ' next' → logprob: -9.193442344665527
    5. '	next' → logprob: -11.193442344665527
    6. '_next' → logprob: -11.568442344665527
    7. 'NEXT' → logprob: -13.943442344665527
    8. '(next' → logprob: -14.193442344665527
    9. 'Next' → logprob: -14.443442344665527
    10. ',next' → logprob: -15.193442344665527

Token 1748: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -2.2127087504486553e-05
    2. 'cur' → logprob: -10.750021934509277
    3. '	cur' → logprob: -15.500021934509277
    4. '(cur' → logprob: -16.125022888183594
    5. '[' → logprob: -16.500022888183594
    6. '                   ' → logprob: -17.500022888183594
    7. '```' → logprob: -17.625022888183594
    8. '[
' → logprob: -17.875022888183594
    9. '
' → logprob: -18.000022888183594
    10. '_cur' → logprob: -18.125022888183594

Token 1749: '][' (ID: 2696)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.21505507826805115
    2. '][' → logprob: -1.7150551080703735
    3. '[c' → logprob: -4.340054988861084
    4. 'cur' → logprob: -8.340055465698242
    5. ']' → logprob: -8.840055465698242
    6. '[' → logprob: -9.215055465698242
    7. '   ' → logprob: -11.715055465698242
    8. '(cur' → logprob: -12.465055465698242
    9. ']
' → logprob: -12.465055465698242
    10. '[curr' → logprob: -12.715055465698242

Token 1750: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.7432603272027336e-06
    2. ' c' → logprob: -13.875001907348633
    3. '[c' → logprob: -14.500001907348633
    4. '
' → logprob: -15.375001907348633
    5. ']' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '[' → logprob: -17.875001907348633
    8. '	c' → logprob: -18.375001907348633
    9. '][' → logprob: -18.375001907348633
    10. ' ' → logprob: -18.625001907348633

Token 1751: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002438789699226618
    2. '               ' → logprob: -6.377439022064209
    3. ']
' → logprob: -7.627439022064209
    4. '                   ' → logprob: -9.12743854522705
    5. '           ' → logprob: -9.25243854522705
    6. '       ' → logprob: -10.62743854522705
    7. '']' → logprob: -12.25243854522705
    8. '[' → logprob: -13.50243854522705
    9. '[
' → logprob: -13.50243854522705
    10. '   ' → logprob: -13.87743854522705

Token 1752: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027135051786899567
    2. '                   ' → logprob: -4.402134895324707
    3. '           ' → logprob: -4.902134895324707
    4. '```' → logprob: -5.152134895324707
    5. 'for' → logprob: -7.652134895324707
    6. 'def' → logprob: -8.152134895324707
    7. '       ' → logprob: -8.777134895324707
    8. '   ' → logprob: -9.277134895324707
    9. '
' → logprob: -9.402134895324707
    10. ' for' → logprob: -9.527134895324707

Token 1753: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008807347039692104
    2. '               ' → logprob: -7.750880718231201
    3. '           ' → logprob: -7.875880718231201
    4. ' self' → logprob: -9.75088119506836
    5. '                   ' → logprob: -12.37588119506836
    6. '       ' → logprob: -12.37588119506836
    7. '   ' → logprob: -12.87588119506836
    8. 'for' → logprob: -15.25088119506836
    9. '	self' → logprob: -15.37588119506836
    10. '```' → logprob: -15.62588119506836

Token 1754: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.00672922981902957
    2. 'output' → logprob: -5.0067291259765625
    3. '_output' → logprob: -11.881729125976562
    4. 'Output' → logprob: -12.881729125976562
    5. ' output' → logprob: -13.631729125976562
    6. '	output' → logprob: -13.631729125976562
    7. '$output' → logprob: -14.381729125976562
    8. 'OUTPUT' → logprob: -14.381729125976562
    9. '
' → logprob: -15.631729125976562
    10. '(output' → logprob: -15.881729125976562

Token 1755: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.00033558503491804004
    2. '[-' → logprob: -8.000335693359375
    3. 'cur' → logprob: -16.625335693359375
    4. '```' → logprob: -17.125335693359375
    5. '[' → logprob: -18.000335693359375
    6. '[curr' → logprob: -19.250335693359375
    7. '(cur' → logprob: -19.375335693359375
    8. '[
' → logprob: -19.875335693359375
    9. '[len' → logprob: -19.875335693359375
    10. '[current' → logprob: -20.125335693359375

Token 1756: '].' (ID: 1651)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.005382929928600788
    2. '.' → logprob: -5.630383014678955
    3. '].' → logprob: -6.380383014678955
    4. '.append' → logprob: -10.130382537841797
    5. ').' → logprob: -10.630382537841797
    6. '}.' → logprob: -11.130382537841797
    7. '.union' → logprob: -13.255382537841797
    8. '.update' → logprob: -13.505382537841797
    9. ' .' → logprob: -14.130382537841797
    10. '.setdefault' → logprob: -14.255382537841797

Token 1757: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -9.088346359931165e-07
    2. '.add' → logprob: -14.625000953674316
    3. 'update' → logprob: -15.000000953674316
    4. ' add' → logprob: -16.625
    5. '_add' → logprob: -19.375
    6. '	add' → logprob: -19.375
    7. 'append' → logprob: -19.75
    8. ')add' → logprob: -20.625
    9. '```' → logprob: -21.0
    10. '
' → logprob: -21.375

Token 1758: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0015034328680485487
    2. 'idx' → logprob: -6.5015034675598145
    3. ' idx' → logprob: -13.876502990722656
    4. '	idx' → logprob: -16.626502990722656
    5. ' (' → logprob: -17.251502990722656
    6. '[idx' → logprob: -17.376502990722656
    7. '((' → logprob: -17.751502990722656
    8. '(' → logprob: -19.001502990722656
    9. '(
' → logprob: -19.376502990722656
    10. '_idx' → logprob: -19.751502990722656

Token 1759: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001710014621494338
    2. '           ' → logprob: -9.125170707702637
    3. '               ' → logprob: -10.125170707702637
    4. '       ' → logprob: -11.500170707702637
    5. ')
' → logprob: -11.750170707702637
    6. ' )' → logprob: -14.500170707702637
    7. '                   ' → logprob: -14.500170707702637
    8. '})' → logprob: -14.625170707702637
    9. '}' → logprob: -14.750170707702637
    10. ')}' → logprob: -14.875170707702637

Token 1760: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06804897636175156
    2. '       ' → logprob: -2.9430489540100098
    3. 'def' → logprob: -5.19304895401001
    4. '
' → logprob: -5.44304895401001
    5. '        
' → logprob: -7.06804895401001
    6. '	   ' → logprob: -7.81804895401001
    7. '	       ' → logprob: -7.81804895401001
    8. '```' → logprob: -7.81804895401001
    9. '            
' → logprob: -8.068049430847168
    10. '   ' → logprob: -8.193049430847168

Token 1761: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14807771146297455
    2. '       ' → logprob: -2.1480777263641357
    3. 'def' (adapté à ' def') → logprob: -4.148077487945557
    4. '
' → logprob: -5.523077487945557
    5. '```' → logprob: -7.398077487945557
    6. ' def' → logprob: -8.398077964782715
    7. '   ' → logprob: -8.398077964782715
    8. '``' → logprob: -11.273077964782715
    9. '               ' → logprob: -11.398077964782715
    10. '            
' → logprob: -11.523077964782715

Token 1762: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -8.399378566537052e-05
    2. ' build' → logprob: -10.250083923339844
    3. '_build' → logprob: -10.625083923339844
    4. 'construct' → logprob: -11.250083923339844
    5. '__' → logprob: -11.875083923339844
    6. 'fail' → logprob: -13.500083923339844
    7. 'compute' → logprob: -14.500083923339844
    8. 'dfs' → logprob: -14.500083923339844
    9. 'create' → logprob: -14.625083923339844
    10. 'make' → logprob: -14.875083923339844

Token 1763: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.046369124203920364
    2. '_failure' → logprob: -3.1713690757751465
    3. '_fail' → logprob: -5.7963690757751465
    4. '()' → logprob: -8.546369552612305
    5. '():
' → logprob: -9.921369552612305
    6. 'failure' → logprob: -10.546369552612305
    7. 'Failure' → logprob: -11.296369552612305
    8. ' Failure' → logprob: -11.421369552612305
    9. 'fail' → logprob: -11.921369552612305
    10. ' failure' → logprob: -12.171369552612305

Token 1764: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.79664546251297
    2. '):' → logprob: -1.0466454029083252
    3. '_failure' → logprob: -2.171645402908325
    4. '_fail' → logprob: -2.796645402908325
    5. '()):
' → logprob: -5.046645641326904
    6. '():
' → logprob: -5.171645641326904
    7. '()' → logprob: -5.921645641326904
    8. ')' → logprob: -6.171645641326904
    9. 'fail' → logprob: -6.296645641326904
    10. 'failure' → logprob: -6.796645641326904

Token 1765: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000510260637383908
    2. '   ' → logprob: -8.500510215759277
    3. '               ' → logprob: -8.625510215759277
    4. '	       ' → logprob: -10.125510215759277
    5. '```' → logprob: -10.375510215759277
    6. '	' → logprob: -10.375510215759277
    7. ' ' → logprob: -12.375510215759277
    8. 'self' → logprob: -12.500510215759277
    9. '           ' → logprob: -12.625510215759277
    10. '		       ' → logprob: -12.625510215759277

Token 1766: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04921625927090645
    2. 'from' (adapté à ' from') → logprob: -3.2992162704467773
    3. '               ' → logprob: -5.049216270446777
    4. '   ' → logprob: -5.549216270446777
    5. ' from' → logprob: -7.674216270446777
    6. 'queue' → logprob: -8.299216270446777
    7. '           ' → logprob: -10.674216270446777
    8. '	' → logprob: -10.799216270446777
    9. 'import' → logprob: -11.049216270446777
    10. '```' → logprob: -11.674216270446777

Token 1767: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.00020354038861114532
    2. ' collections' → logprob: -8.500203132629395
    3. 'queue' → logprob: -18.37520408630371
    4. 'collection' → logprob: -21.50020408630371
    5. 'deque' → logprob: -21.87520408630371
    6. '_' → logprob: -22.25020408630371
    7. '.collections' → logprob: -23.12520408630371
    8. 'collect' → logprob: -23.50020408630371
    9. '
' → logprob: -24.12520408630371
    10. 'heap' → logprob: -24.25020408630371

Token 1768: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9166526794433594
    2. 'collections' → logprob: -1.0416526794433594
    3. 'deque' → logprob: -1.6666526794433594
    4. 'from' → logprob: -4.291652679443359
    5. 'queue' → logprob: -4.541652679443359
    6. '```' → logprob: -4.791652679443359
    7. '
' → logprob: -5.791652679443359
    8. 'de' → logprob: -6.166652679443359
    9. 't' → logprob: -6.291652679443359
    10. 'f' → logprob: -6.541652679443359

Token 1769: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0005076381494291127
    2. 'collections' → logprob: -7.750507831573486
    3. ' deque' → logprob: -10.000507354736328
    4. 'queue' → logprob: -10.375507354736328
    5. '
' → logprob: -15.250507354736328
    6. '```' → logprob: -16.500507354736328
    7. 'de' → logprob: -17.125507354736328
    8. '   ' → logprob: -18.750507354736328
    9. '`' → logprob: -18.875507354736328
    10. '=' → logprob: -19.125507354736328

Token 1770: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014943843707442284
    2. '
' → logprob: -7.001494407653809
    3. '       ' → logprob: -7.501494407653809
    4. '```' → logprob: -11.626494407653809
    5. 'queue' → logprob: -11.751494407653809
    6. '			' → logprob: -12.626494407653809
    7. '	' → logprob: -13.251494407653809
    8. '		       ' → logprob: -13.501494407653809
    9. '                
' → logprob: -13.501494407653809
    10. ' queue' → logprob: -14.376494407653809

Token 1771: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027630331460386515
    2. '       ' → logprob: -6.002763271331787
    3. '	' → logprob: -9.627762794494629
    4. 'queue' → logprob: -9.877762794494629
    5. '			' → logprob: -10.127762794494629
    6. '		       ' → logprob: -10.252762794494629
    7. 'dq' → logprob: -10.877762794494629
    8. '
' → logprob: -11.002762794494629
    9. '	queue' → logprob: -11.502762794494629
    10. '   ' → logprob: -11.627762794494629

Token 1772: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.9144633412361145
    2. 'queue' → logprob: -0.9144633412361145
    3. '       ' → logprob: -2.5394632816314697
    4. '               ' → logprob: -2.5394632816314697
    5. ' queue' → logprob: -3.4144632816314697
    6. 'dq' → logprob: -5.914463520050049
    7. 'Q' → logprob: -6.039463520050049
    8. 'que' → logprob: -6.414463520050049
    9. ' q' → logprob: -7.289463520050049
    10. 'd' → logprob: -9.66446304321289

Token 1773: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25203776359558105
    2. ' =' → logprob: -1.502037763595581
    3. '=[]' → logprob: -9.87703800201416
    4. '=q' → logprob: -10.50203800201416
    5. '       ' → logprob: -12.12703800201416
    6. '=int' → logprob: -12.87703800201416
    7. '=True' → logprob: -12.87703800201416
    8. '=[]
' → logprob: -13.00203800201416
    9. '=self' → logprob: -13.00203800201416
    10. '=new' → logprob: -13.12703800201416

Token 1774: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.006344072986394167
    2. ' deque' → logprob: -5.131343841552734
    3. 'from' → logprob: -8.756343841552734
    4. 'Deque' → logprob: -9.131343841552734
    5. 'import' → logprob: -9.631343841552734
    6. 'collections' → logprob: -10.506343841552734
    7. '0' → logprob: -11.131343841552734
    8. '   ' → logprob: -11.256343841552734
    9. 'q' → logprob: -12.381343841552734
    10. 'dq' → logprob: -12.506343841552734

Token 1775: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.31352972984313965
    2. '()' → logprob: -1.3135297298431396
    3. '               ' → logprob: -9.563529968261719
    4. '([' → logprob: -9.563529968261719
    5. '[' → logprob: -9.813529968261719
    6. '(' → logprob: -10.313529968261719
    7. '([])
' → logprob: -11.438529968261719
    8. '()

' → logprob: -11.563529968261719
    9. '[]
' → logprob: -11.563529968261719
    10. '                   ' → logprob: -13.063529968261719

Token 1776: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003091254911851138
    2. 'for' → logprob: -8.500308990478516
    3. '       ' → logprob: -9.625308990478516
    4. ' for' → logprob: -10.625308990478516
    5. '```' → logprob: -11.875308990478516
    6. '		       ' → logprob: -12.875308990478516
    7. 'For' → logprob: -13.750308990478516
    8. '	for' → logprob: -13.875308990478516
    9. '           ' → logprob: -14.125308990478516
    10. '			' → logprob: -14.250308990478516

Token 1777: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.017838388681411743
    2. ' for' → logprob: -4.517838478088379
    3. '               ' → logprob: -5.017838478088379
    4. '	for' → logprob: -8.892838478088379
    5. '       ' → logprob: -13.142838478088379
    6. '			' → logprob: -13.142838478088379
    7. '_for' → logprob: -13.892838478088379
    8. '	' → logprob: -13.892838478088379
    9. '	       ' → logprob: -13.892838478088379
    10. '		       ' → logprob: -13.892838478088379

Token 1778: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3884665369987488
    2. 'i' → logprob: -1.1384665966033936
    3. 'ch' → logprob: -6.6384663581848145
    4. 'char' → logprob: -8.763466835021973
    5. '0' → logprob: -10.263466835021973
    6. 'cur' → logprob: -10.638466835021973
    7. 's' → logprob: -11.013466835021973
    8. ' c' → logprob: -11.138466835021973
    9. ' i' → logprob: -11.638466835021973
    10. 'a' → logprob: -11.763466835021973

Token 1779: ',v' (ID: 30680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11283113807439804
    2. 'in' → logprob: -2.2378311157226562
    3. ' ' → logprob: -13.237831115722656
    4. '   ' → logprob: -13.612831115722656
    5. ',' → logprob: -13.737831115722656
    6. '	in' → logprob: -13.737831115722656
    7. 'i' → logprob: -14.487831115722656
    8. '               ' → logprob: -14.612831115722656
    9. 's' → logprob: -14.862831115722656
    10. '                   ' → logprob: -14.987831115722656

Token 1780: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47409194707870483
    2. ' in' → logprob: -0.9740919470787048
    3. 'n' → logprob: -11.724091529846191
    4. '	in' → logprob: -12.849091529846191
    5. ' ' → logprob: -13.724091529846191
    6. '   ' → logprob: -13.849091529846191
    7. '```' → logprob: -14.474091529846191
    8. '
' → logprob: -15.099091529846191
    9. ',' → logprob: -15.849091529846191
    10. 'In' → logprob: -16.099092483520508

Token 1781: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0062400647439062595
    2. 'range' → logprob: -6.131239891052246
    3. 'next' → logprob: -6.381239891052246
    4. '0' → logprob: -6.631239891052246
    5. '[' → logprob: -7.256239891052246
    6. 'enumer' → logprob: -9.131239891052246
    7. '[(' → logprob: -9.381239891052246
    8. 'list' → logprob: -10.131239891052246
    9. ' self' → logprob: -10.131239891052246
    10. '(' → logprob: -10.631239891052246

Token 1782: '.next' (ID: 6689)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3528978228569031
    2. '.next' → logprob: -1.4778978824615479
    3. '.items' → logprob: -3.352897882461548
    4. '[next' → logprob: -4.227897644042969
    5. 'self' → logprob: -4.727897644042969
    6. '[' → logprob: -4.852897644042969
    7. 'items' → logprob: -6.102897644042969
    8. '_next' → logprob: -8.727897644042969
    9. '{' → logprob: -8.977897644042969
    10. '0' → logprob: -9.102897644042969

Token 1783: '[' (ID: 58)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.08351369947195053
    2. '[' → logprob: -2.5835137367248535
    3. '.items' → logprob: -5.8335137367248535
    4. 'cur' → logprob: -6.7085137367248535
    5. 'items' → logprob: -9.083513259887695
    6. '.iteritems' → logprob: -10.083513259887695
    7. '[curr' → logprob: -10.083513259887695
    8. '[v' → logprob: -10.208513259887695
    9. '[c' → logprob: -10.208513259887695
    10. 'in' → logprob: -10.333513259887695

Token 1784: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04712473228573799
    2. '[' → logprob: -3.4221246242523193
    3. 'cur' → logprob: -4.422124862670898
    4. 'c' → logprob: -7.547124862670898
    5. 'i' → logprob: -7.922124862670898
    6. '[cur' → logprob: -8.297124862670898
    7. 'item' → logprob: -9.547124862670898
    8. '[c' → logprob: -10.422124862670898
    9. '(' → logprob: -10.547124862670898
    10. 'q' → logprob: -10.922124862670898

Token 1785: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.253379225730896
    2. '.items' → logprob: -1.503379225730896
    3. 'items' → logprob: -7.2533793449401855
    4. '       ' → logprob: -8.753378868103027
    5. ']:
' → logprob: -9.128378868103027
    6. '.iteritems' → logprob: -9.128378868103027
    7. '   ' → logprob: -9.378378868103027
    8. '().' → logprob: -9.503378868103027
    9. '[c' → logprob: -9.628378868103027
    10. '.values' → logprob: -10.003378868103027

Token 1786: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.16034343838691711
    2. 'values' → logprob: -1.9103434085845947
    3. '.items' → logprob: -9.660343170166016
    4. '.values' → logprob: -10.035343170166016
    5. 'keys' → logprob: -11.910343170166016
    6. ' items' → logprob: -12.660343170166016
    7. '_items' → logprob: -14.285343170166016
    8. 'value' → logprob: -14.785343170166016
    9. '```' → logprob: -15.285343170166016
    10. ' values' → logprob: -15.910343170166016

Token 1787: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.0012067806674167514
    2. '():' → logprob: -6.751206874847412
    3. '()):
' → logprob: -11.001206398010254
    4. '()' → logprob: -11.376206398010254
    5. '():
' → logprob: -11.876206398010254
    6. '():

' → logprob: -13.626206398010254
    7. '()
' → logprob: -16.37620735168457
    8. '()`' → logprob: -17.50120735168457
    9. ':
' → logprob: -17.75120735168457
    10. '()}
' → logprob: -18.12620735168457

Token 1788: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011399771319702268
    2. '		           ' → logprob: -7.001140117645264
    3. '           ' → logprob: -9.501139640808105
    4. '                       ' → logprob: -10.501139640808105
    5. '	               ' → logprob: -10.751139640808105
    6. ':
' → logprob: -11.126139640808105
    7. '               ' → logprob: -11.376139640808105
    8. '				' → logprob: -11.376139640808105
    9. ':' → logprob: -11.501139640808105
    10. '			       ' → logprob: -11.876139640808105

Token 1789: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.05070725455880165
    2. '                   ' → logprob: -3.6757073402404785
    3. ' q' → logprob: -3.8007073402404785
    4. '                       ' → logprob: -6.6757073402404785
    5. '   ' → logprob: -7.8007073402404785
    6. '	q' → logprob: -9.92570686340332
    7. '               ' → logprob: -11.42570686340332
    8. '       ' → logprob: -11.67570686340332
    9. '           ' → logprob: -11.92570686340332
    10. 'queue' → logprob: -12.80070686340332

Token 1790: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.016233187168836594
    2. '.' → logprob: -5.391232967376709
    3. '().' → logprob: -6.016232967376709
    4. '```' → logprob: -6.266232967376709
    5. '=' → logprob: -6.391232967376709
    6. '.enqueue' → logprob: -6.766232967376709
    7. '[' → logprob: -6.891232967376709
    8. ' .' → logprob: -7.266232967376709
    9. '.setdefault' → logprob: -8.141233444213867
    10. '       ' → logprob: -8.391233444213867

Token 1791: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.012301838025450706
    2. '((' → logprob: -4.512301921844482
    3. '(' → logprob: -6.887301921844482
    4. 'v' → logprob: -8.387301445007324
    5. ' (' → logprob: -13.137301445007324
    6. '                   ' → logprob: -14.012301445007324
    7. '   ' → logprob: -14.012301445007324
    8. '(
' → logprob: -14.762301445007324
    9. ' v' → logprob: -15.137301445007324
    10. '([' → logprob: -15.637301445007324

Token 1792: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036003058776259422
    2. ')
' → logprob: -6.128600120544434
    3. '               ' → logprob: -6.628600120544434
    4. '                   ' → logprob: -9.503600120544434
    5. '           ' → logprob: -11.753600120544434
    6. '       ' → logprob: -13.003600120544434
    7. '[' → logprob: -13.253600120544434
    8. '                       ' → logprob: -14.003600120544434
    9. ')`' → logprob: -14.128600120544434
    10. '):
' → logprob: -14.253600120544434

Token 1793: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5802417397499084
    2. '               ' → logprob: -0.8302417397499084
    3. '       ' → logprob: -6.205241680145264
    4. '           ' → logprob: -6.705241680145264
    5. '                       ' → logprob: -7.955241680145264
    6. '```' → logprob: -7.955241680145264
    7. '   ' → logprob: -8.705242156982422
    8. 'for' → logprob: -8.955242156982422
    9. 'while' → logprob: -10.455242156982422
    10. ' for' → logprob: -11.580242156982422

Token 1794: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.08055313676595688
    2. '               ' → logprob: -2.5805530548095703
    3. '       ' → logprob: -6.95555305480957
    4. '           ' → logprob: -7.58055305480957
    5. ' while' → logprob: -8.95555305480957
    6. '                   ' → logprob: -10.08055305480957
    7. '   ' → logprob: -10.83055305480957
    8. 'for' → logprob: -12.83055305480957
    9. 'While' → logprob: -13.08055305480957
    10. '	while' → logprob: -13.70555305480957

Token 1795: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.4140441635390744e-05
    2. 'len' → logprob: -11.750014305114746
    3. ' q' → logprob: -12.000014305114746
    4. 'True' → logprob: -16.75001335144043
    5. '	q' → logprob: -19.00001335144043
    6. '$q' → logprob: -19.37501335144043
    7. '   ' → logprob: -19.62501335144043
    8. '```' → logprob: -20.12501335144043
    9. '(q' → logprob: -20.25001335144043
    10. '
' → logprob: -20.62501335144043

Token 1796: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0036417648661881685
    2. ':' → logprob: -5.628641605377197
    3. '               ' → logprob: -11.628642082214355
    4. '           ' → logprob: -11.628642082214355
    5. '                   ' → logprob: -11.753642082214355
    6. '       ' → logprob: -12.253642082214355
    7. '):
' → logprob: -13.128642082214355
    8. 'and' → logprob: -13.253642082214355
    9. '   ' → logprob: -13.378642082214355
    10. '```' → logprob: -13.753642082214355

Token 1797: '                   ' (ID: 699)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3111684322357178
    2. '                   ' → logprob: -1.4361684322357178
    3. 'node' → logprob: -1.5611684322357178
    4. ' u' → logprob: -2.1861684322357178
    5. ' node' → logprob: -3.6861684322357178
    6. 'pop' → logprob: -3.8111684322357178
    7. 'v' → logprob: -3.8111684322357178
    8. 'current' → logprob: -3.9361684322357178
    9. 'cur' → logprob: -4.186168670654297
    10. '   ' → logprob: -4.561168670654297

Token 1798: ' r' (ID: 428)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.015383790247142315
    2. '                   ' → logprob: -5.390383720397949
    3. ' u' → logprob: -5.640383720397949
    4. '   ' → logprob: -5.765383720397949
    5. 'node' → logprob: -6.015383720397949
    6. 'v' → logprob: -7.015383720397949
    7. 'state' → logprob: -8.14038372039795
    8. '               ' → logprob: -8.76538372039795
    9. 'cur' → logprob: -9.26538372039795
    10. '(u' → logprob: -10.26538372039795

Token 1799: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1154697835445404
    2. ' =' → logprob: -2.2404696941375732
    3. '=v' → logprob: -6.740469932556152
    4. 'v' → logprob: -6.990469932556152
    5. 'node' → logprob: -8.115469932556152
    6. '=node' → logprob: -9.990469932556152
    7. '=q' → logprob: -10.365469932556152
    8. 'u' → logprob: -10.365469932556152
    9. '=u' → logprob: -10.490469932556152
    10. '=r' → logprob: -10.615469932556152

Token 1800: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0010336418636143208
    2. ' q' → logprob: -6.876033782958984
    3. '	q' → logprob: -14.376033782958984
    4. '                   ' → logprob: -16.376033782958984
    5. '=q' → logprob: -16.626033782958984
    6. 'r' → logprob: -17.001033782958984
    7. 'queue' → logprob: -17.126033782958984
    8. '$q' → logprob: -17.251033782958984
    9. 'qid' → logprob: -17.626033782958984
    10. 'deque' → logprob: -17.876033782958984

Token 1801: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.024203237146139145
    2. '.pop' → logprob: -4.274203300476074
    3. '=' → logprob: -4.649203300476074
    4. ' =' → logprob: -8.149203300476074
    5. 'p' → logprob: -9.774203300476074
    6. '=p' → logprob: -9.899203300476074
    7. '.append' → logprob: -11.399203300476074
    8. 'pop' → logprob: -12.524203300476074
    9. '.dequeue' → logprob: -12.774203300476074
    10. '.' → logprob: -13.149203300476074

Token 1802: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.00023369524569716305
    2. 'op' → logprob: -8.37523365020752
    3. 'ople' → logprob: -13.75023365020752
    4. 'opped' → logprob: -14.50023365020752
    5. 'opt' → logprob: -14.87523365020752
    6. '```' → logprob: -15.62523365020752
    7. 'opl' → logprob: -15.75023365020752
    8. 'p' → logprob: -16.000234603881836
    9. 'oplevel' → logprob: -16.000234603881836
    10. '   ' → logprob: -16.125234603881836

Token 1803: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005676874425262213
    2. '               ' → logprob: -8.500567436218262
    3. '
' → logprob: -8.625567436218262
    4. 'for' → logprob: -9.750567436218262
    5. '           ' → logprob: -10.000567436218262
    6. '                       ' → logprob: -10.750567436218262
    7. ':
' → logprob: -10.875567436218262
    8. '		           ' → logprob: -11.625567436218262
    9. '       ' → logprob: -11.875567436218262
    10. '				' → logprob: -12.000567436218262

Token 1804: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0053818607702851295
    2. 'for' → logprob: -5.630382061004639
    3. '               ' → logprob: -6.630382061004639
    4. ' for' → logprob: -8.13038158416748
    5. '           ' → logprob: -9.63038158416748
    6. '		           ' → logprob: -10.25538158416748
    7. '       ' → logprob: -10.50538158416748
    8. '   ' → logprob: -11.00538158416748
    9. '                       ' → logprob: -11.50538158416748
    10. '```' → logprob: -12.50538158416748

Token 1805: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006422612932510674
    2. 'f' → logprob: -7.7506422996521
    3. '                   ' → logprob: -9.125641822814941
    4. 'u' → logprob: -10.000641822814941
    5. ' for' → logprob: -10.250641822814941
    6. '                       ' → logprob: -11.750641822814941
    7. 'fail' → logprob: -12.000641822814941
    8. '   ' → logprob: -12.625641822814941
    9. 'r' → logprob: -13.000641822814941
    10. '       ' → logprob: -14.125641822814941

Token 1806: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.596781946020201e-05
    2. ' c' → logprob: -10.250045776367188
    3. 'ch' → logprob: -12.125045776367188
    4. 'k' → logprob: -13.000045776367188
    5. '   ' → logprob: -13.625045776367188
    6. 'key' → logprob: -13.750045776367188
    7. 'u' → logprob: -15.375045776367188
    8. 'a' → logprob: -15.500045776367188
    9. 'char' → logprob: -15.625045776367188
    10. 'x' → logprob: -17.000045776367188

Token 1807: ',n' (ID: 18103)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6830240488052368
    2. ' in' → logprob: -1.4330240488052368
    3. ',' → logprob: -2.5580239295959473
    4. ',u' → logprob: -2.6830239295959473
    5. ',v' → logprob: -2.8080239295959473
    6. ',self' → logprob: -4.058023929595947
    7. ',w' → logprob: -4.558023929595947
    8. 'u' → logprob: -4.683023929595947
    9. 'self' → logprob: -6.058023929595947
    10. '```' → logprob: -6.058023929595947

Token 1808: 'xt' (ID: 711)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.402946412563324
    2. 'ode' → logprob: -1.2779464721679688
    3. 'xt' → logprob: -3.1529464721679688
    4. ' in' → logprob: -4.777946472167969
    5. 'e' → logprob: -7.277946472167969
    6. 'r' → logprob: -8.152946472167969
    7. 'x' → logprob: -8.402946472167969
    8. '[r' → logprob: -9.027946472167969
    9. '[self' → logprob: -9.277946472167969
    10. 'ex' → logprob: -9.402946472167969

Token 1809: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12730498611927032
    2. ' in' → logprob: -2.127305030822754
    3. 'r' → logprob: -8.127305030822754
    4. 'n' → logprob: -11.002305030822754
    5. 'v' → logprob: -11.002305030822754
    6. '[r' → logprob: -11.127305030822754
    7. '[v' → logprob: -12.002305030822754
    8. 'e' → logprob: -12.252305030822754
    9. 's' → logprob: -12.752305030822754
    10. '```' → logprob: -12.752305030822754

Token 1810: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.829823102336377e-05
    2. 'range' → logprob: -9.50009822845459
    3. ' self' → logprob: -10.87509822845459
    4. 'list' → logprob: -12.37509822845459
    5. '(self' → logprob: -16.000099182128906
    6. '[self' → logprob: -16.250099182128906
    7. ' range' → logprob: -17.875099182128906
    8. 'next' → logprob: -18.125099182128906
    9. '
' → logprob: -18.250099182128906
    10. '[' → logprob: -19.500099182128906

Token 1811: '.next' (ID: 6689)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.07899631559848785
    2. '.next' → logprob: -2.578996419906616
    3. '[next' → logprob: -9.828996658325195
    4. 'self' → logprob: -11.203996658325195
    5. 'AC' → logprob: -11.578996658325195
    6. 'range' → logprob: -11.703996658325195
    7. '
' → logprob: -11.828996658325195
    8. ' next' → logprob: -12.203996658325195
    9. '_next' → logprob: -13.328996658325195
    10. 'aut' → logprob: -13.453996658325195

Token 1812: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.339278580620885e-06
    2. 'r' → logprob: -13.000001907348633
    3. '[' → logprob: -19.125001907348633
    4. '
' → logprob: -20.375001907348633
    5. '(r' → logprob: -21.000001907348633
    6. '	r' → logprob: -21.250001907348633
    7. '=r' → logprob: -21.375001907348633
    8. '[
' → logprob: -21.500001907348633
    9. '```' → logprob: -21.875001907348633
    10. ' r' → logprob: -22.375001907348633

Token 1813: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4198479652404785
    2. '[r' → logprob: -1.4198479652404785
    3. '.items' → logprob: -2.2948479652404785
    4. 'r' → logprob: -9.41984748840332
    5. '}.' → logprob: -10.04484748840332
    6. '[' → logprob: -10.16984748840332
    7. ' .' → logprob: -10.29484748840332
    8. '[].' → logprob: -10.41984748840332
    9. ']:
' → logprob: -10.41984748840332
    10. 'items' → logprob: -10.91984748840332

Token 1814: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -2.935296834039036e-06
    2. '.items' → logprob: -12.87500286102295
    3. 'values' → logprob: -15.25000286102295
    4. ' items' → logprob: -16.375003814697266
    5. 'r' → logprob: -17.500003814697266
    6. '_items' → logprob: -18.375003814697266
    7. '(items' → logprob: -19.750003814697266
    8. 'get' → logprob: -20.375003814697266
    9. '```' → logprob: -20.500003814697266
    10. '/items' → logprob: -20.625003814697266

Token 1815: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.31815460324287415
    2. '():' → logprob: -1.3181545734405518
    3. ':' → logprob: -5.693154811859131
    4. '()' → logprob: -7.193154811859131
    5. ':
' → logprob: -7.443154811859131
    6. '                       ' → logprob: -9.068154335021973
    7. '():
' → logprob: -10.818154335021973
    8. '()):
' → logprob: -11.318154335021973
    9. '():

' → logprob: -11.693154335021973
    10. '       ' → logprob: -12.568154335021973

Token 1816: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -3.3213025744771585e-05
    2. '                   ' → logprob: -11.500033378601074
    3. '                           ' → logprob: -12.000033378601074
    4. 'q' → logprob: -12.375033378601074
    5. ' q' → logprob: -12.500033378601074
    6. '               ' → logprob: -13.500033378601074
    7. '	                   ' → logprob: -13.625033378601074
    8. 'if' → logprob: -13.750033378601074
    9. '```' → logprob: -13.875033378601074
    10. '					' → logprob: -14.000033378601074

Token 1817: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.27902618050575256
    2. ' self' → logprob: -1.7790261507034302
    3. '                           ' → logprob: -2.6540262699127197
    4. '                       ' → logprob: -5.779026031494141
    5. '                               ' → logprob: -7.029026031494141
    6. 'if' → logprob: -8.77902603149414
    7. '   ' → logprob: -10.02902603149414
    8. ' if' → logprob: -10.52902603149414
    9. ' q' → logprob: -10.90402603149414
    10. 'q' → logprob: -11.15402603149414

Token 1818: '.fail' (ID: 48738)
  Prédit: '.fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fail' → logprob: -0.4575141370296478
    2. 'fail' → logprob: -1.2075141668319702
    3. '.next' → logprob: -3.0825140476226807
    4. 'next' → logprob: -3.8325140476226807
    5. ' fail' → logprob: -7.70751428604126
    6. '_fail' → logprob: -9.707513809204102
    7. 'def' → logprob: -10.457513809204102
    8. ' next' → logprob: -10.832513809204102
    9. '
' → logprob: -10.957513809204102
    10. '=' → logprob: -11.082513809204102

Token 1819: '[n' (ID: 15433)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.10420463979244232
    2. '[self' → logprob: -2.3542046546936035
    3. '[n' → logprob: -5.7292046546936035
    4. '[' → logprob: -7.6042046546936035
    5. 'self' → logprob: -9.354204177856445
    6. ' =' → logprob: -10.604204177856445
    7. '=' → logprob: -10.729204177856445
    8. '       ' → logprob: -11.104204177856445
    9. '[next' → logprob: -11.104204177856445
    10. '=self' → logprob: -11.354204177856445

Token 1820: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0025433204136788845
    2. 'ext' → logprob: -6.3775434494018555
    3. '[r' → logprob: -7.5025434494018555
    4. ']' → logprob: -9.127543449401855
    5. '[' → logprob: -10.002543449401855
    6. '[n' → logprob: -10.127543449401855
    7. 'x' → logprob: -10.377543449401855
    8. 't' → logprob: -10.752543449401855
    9. '[next' → logprob: -11.127543449401855
    10. 'r' → logprob: -11.502543449401855

Token 1821: ']' (ID: 60)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.42320024967193604
    2. ']' → logprob: -1.173200249671936
    3. ' =' → logprob: -4.1732001304626465
    4. ']=' → logprob: -4.2982001304626465
    5. '=' → logprob: -5.4232001304626465
    6. '=r' → logprob: -6.4232001304626465
    7. '                       ' → logprob: -8.173200607299805
    8. '                   ' → logprob: -9.298200607299805
    9. '                           ' → logprob: -9.923200607299805
    10. '           ' → logprob: -9.923200607299805

Token 1822: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038146715611219406
    2. ' =' → logprob: -3.288146734237671
    3. '=r' → logprob: -9.28814697265625
    4. '[r' → logprob: -12.16314697265625
    5. '                       ' → logprob: -12.53814697265625
    6. '                   ' → logprob: -13.66314697265625
    7. ']=' → logprob: -14.03814697265625
    8. ']' → logprob: -14.28814697265625
    9. '                           ' → logprob: -14.28814697265625
    10. '           ' → logprob: -15.28814697265625

Token 1823: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006110482499934733
    2. ' self' → logprob: -7.875610828399658
    3. 'r' → logprob: -8.375611305236816
    4. '0' → logprob: -15.750611305236816
    5. '	self' → logprob: -15.750611305236816
    6. '   ' → logprob: -16.1256103515625
    7. '(self' → logprob: -17.0006103515625
    8. ' r' → logprob: -17.6256103515625
    9. '[self' → logprob: -18.2506103515625
    10. ' ' → logprob: -18.5006103515625

Token 1824: '.next' (ID: 6689)
  Prédit: '.fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.fail' → logprob: -0.03938420116901398
    2. 'fail' → logprob: -3.289384126663208
    3. '[r' → logprob: -7.289384365081787
    4. '	fail' → logprob: -7.539384365081787
    5. ' fail' → logprob: -9.539383888244629
    6. '_fail' → logprob: -10.539383888244629
    7. 'FAIL' → logprob: -11.914383888244629
    8. '[' → logprob: -12.039383888244629
    9. 'r' → logprob: -12.289383888244629
    10. 'Fail' → logprob: -12.789383888244629

Token 1825: '[self' (ID: 33734)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0006520323222503066
    2. 'r' → logprob: -7.500651836395264
    3. '[' → logprob: -9.375652313232422
    4. '[self' → logprob: -11.375652313232422
    5. '       ' → logprob: -14.250652313232422
    6. '[f' → logprob: -14.500652313232422
    7. '                   ' → logprob: -14.625652313232422
    8. '   ' → logprob: -15.500652313232422
    9. '               ' → logprob: -15.500652313232422
    10. 'self' → logprob: -15.625652313232422

Token 1826: '.fail' (ID: 48738)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8297215104103088
    2. 'fail' → logprob: -0.8297215104103088
    3. '[r' → logprob: -2.079721450805664
    4. '[' → logprob: -6.079721450805664
    5. '0' → logprob: -8.704721450805664
    6. ' fail' → logprob: -10.204721450805664
    7. 'self' → logprob: -10.329721450805664
    8. 'def' → logprob: -10.579721450805664
    9. ' r' → logprob: -10.954721450805664
    10. '
' → logprob: -11.079721450805664

Token 1827: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.000556012790184468
    2. 'r' → logprob: -7.500555992126465
    3. '[' → logprob: -13.375555992126465
    4. '][' → logprob: -13.500555992126465
    5. '[c' → logprob: -17.62555694580078
    6. '       ' → logprob: -17.75055694580078
    7. '[u' → logprob: -17.75055694580078
    8. '[
' → logprob: -17.87555694580078
    9. '	r' → logprob: -18.75055694580078
    10. '   ' → logprob: -18.87555694580078

Token 1828: ']].' (ID: 47690)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002495991066098213
    2. '[r' → logprob: -6.002495765686035
    3. ']][' → logprob: -11.502495765686035
    4. ' ][' → logprob: -12.377495765686035
    5. 'r' → logprob: -13.002495765686035
    6. '   ' → logprob: -13.752495765686035
    7. '[' → logprob: -13.877495765686035
    8. '       ' → logprob: -13.877495765686035
    9. ''][' → logprob: -15.502495765686035
    10. ']' → logprob: -15.752495765686035

Token 1829: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.9361264946837764e-07
    2. ' get' → logprob: -16.375
    3. '.get' → logprob: -17.375
    4. 'getc' → logprob: -19.625
    5. 'set' → logprob: -20.125
    6. '	get' → logprob: -20.625
    7. 'c' → logprob: -21.0
    8. 'getitem' → logprob: -21.0
    9. '[get' → logprob: -21.25
    10. '__' → logprob: -21.5

Token 1830: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006719991099089384
    2. '(c' → logprob: -5.006720066070557
    3. ' c' → logprob: -12.756719589233398
    4. '               ' → logprob: -15.131719589233398
    5. ',c' → logprob: -15.131719589233398
    6. '                       ' → logprob: -15.256719589233398
    7. '   ' → logprob: -15.381719589233398
    8. '[c' → logprob: -15.506719589233398
    9. '```' → logprob: -16.1317195892334
    10. '	c' → logprob: -16.2567195892334

Token 1831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01633276417851448
    2. ',n' → logprob: -4.266332626342773
    3. ',r' → logprob: -6.266332626342773
    4. ',c' → logprob: -8.516332626342773
    5. ',None' → logprob: -11.016332626342773
    6. ' ,' → logprob: -11.141332626342773
    7. ',d' → logprob: -11.141332626342773
    8. ',k' → logprob: -11.891332626342773
    9. ',next' → logprob: -12.766332626342773
    10. ',s' → logprob: -12.891332626342773

Token 1832: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -20.0
    4. '           ' → logprob: -21.625
    5. '                   ' → logprob: -22.0
    6. 'self' → logprob: -22.0
    7. '       ' → logprob: -22.25
    8. '               ' → logprob: -22.375
    9. '                       ' → logprob: -22.875
    10. '۰' → logprob: -23.125

Token 1833: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -21.625
    4. '۰' → logprob: -21.875
    5. '０' → logprob: -22.625
    6. ' ' → logprob: -22.875
    7. 'self' → logprob: -22.875
    8. 'next' → logprob: -23.0
    9. '`' → logprob: -23.5
    10. ')' → logprob: -23.75

Token 1834: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.045980971306562424
    2. '                       ' → logprob: -3.545980930328369
    3. ')' → logprob: -4.295980930328369
    4. '                   ' → logprob: -6.045980930328369
    5. '                           ' → logprob: -10.170981407165527
    6. '               ' → logprob: -10.795981407165527
    7. '           ' → logprob: -10.920981407165527
    8. '```' → logprob: -11.920981407165527
    9. ')+' → logprob: -11.920981407165527
    10. ')
' → logprob: -12.545981407165527

Token 1835: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -3.5120287066092715e-05
    2. '```' → logprob: -10.500035285949707
    3. '                   ' → logprob: -12.500035285949707
    4. '					' → logprob: -13.625035285949707
    5. '               ' → logprob: -13.750035285949707
    6. '           ' → logprob: -15.000035285949707
    7. '                      ' → logprob: -15.000035285949707
    8. '       ' → logprob: -15.000035285949707
    9. '                           ' → logprob: -15.500035285949707
    10. '                        ' → logprob: -16.25003433227539

Token 1836: ' self' (ID: 1051)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00027921271976083517
    2. ' q' → logprob: -8.875279426574707
    3. '```' → logprob: -9.500279426574707
    4. '                       ' → logprob: -10.250279426574707
    5. '                           ' → logprob: -10.875279426574707
    6. '                               ' → logprob: -11.750279426574707
    7. '``' → logprob: -13.625279426574707
    8. '	q' → logprob: -14.750279426574707
    9. '
' → logprob: -15.375279426574707
    10. 'queue' → logprob: -16.62527847290039

Token 1837: '.output' (ID: 27521)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.19978341460227966
    2. 'output' → logprob: -2.1997833251953125
    3. 'next' → logprob: -3.4497833251953125
    4. '.append' → logprob: -3.8247833251953125
    5. '                   ' → logprob: -5.8247833251953125
    6. '.enqueue' → logprob: -5.9497833251953125
    7. '               ' → logprob: -6.0747833251953125
    8. '
' → logprob: -6.6997833251953125
    9. '.next' → logprob: -6.8247833251953125
    10. 'for' → logprob: -6.8247833251953125

Token 1838: '[n' (ID: 15433)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0789460837841034
    2. '[n' → logprob: -2.578946113586426
    3. '[r' → logprob: -10.078946113586426
    4. 'self' → logprob: -11.953946113586426
    5. '[' → logprob: -12.453946113586426
    6. '```' → logprob: -13.453946113586426
    7. '[next' → logprob: -13.703946113586426
    8. '       ' → logprob: -15.203946113586426
    9. '[
' → logprob: -15.203946113586426
    10. '[cur' → logprob: -15.453946113586426

Token 1839: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.019747775048017502
    2. 'self' → logprob: -4.644747734069824
    3. '[self' → logprob: -5.394747734069824
    4. 'n' → logprob: -5.894747734069824
    5. 'x' → logprob: -6.894747734069824
    6. '[n' → logprob: -7.394747734069824
    7. 'ext' → logprob: -7.519747734069824
    8. '[' → logprob: -8.894747734069824
    9. '[next' → logprob: -8.894747734069824
    10. 'fail' → logprob: -9.519747734069824

Token 1840: ']' (ID: 60)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.597985029220581
    2. '.update' → logprob: -0.847985029220581
    3. '=' → logprob: -4.09798526763916
    4. '.union' → logprob: -6.09798526763916
    5. ' |=' → logprob: -6.47298526763916
    6. '.' → logprob: -7.59798526763916
    7. '.add' → logprob: -7.97298526763916
    8. ').' → logprob: -9.09798526763916
    9. ')' → logprob: -9.09798526763916
    10. ' =' → logprob: -9.97298526763916

Token 1841: ' |=' (ID: 19917)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.5870349407196045
    2. '|' → logprob: -0.8370349407196045
    3. ' |=' → logprob: -4.962035179138184
    4. '.' → logprob: -5.962035179138184
    5. '=' → logprob: -7.712035179138184
    6. '.union' → logprob: -7.837035179138184
    7. '           ' → logprob: -8.212035179138184
    8. '.add' → logprob: -9.462035179138184
    9. '       ' → logprob: -9.837035179138184
    10. '   ' → logprob: -9.962035179138184

Token 1842: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.56102097814437e-05
    2. ' self' → logprob: -10.000045776367188
    3. '(self' → logprob: -16.250045776367188
    4. '                   ' → logprob: -18.000045776367188
    5. '           ' → logprob: -18.250045776367188
    6. 'output' → logprob: -18.375045776367188
    7. 'set' → logprob: -19.625045776367188
    8. '                       ' → logprob: -19.750045776367188
    9. '[self' → logprob: -20.250045776367188
    10. '               ' → logprob: -20.500045776367188

Token 1843: '.output' (ID: 27521)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.2519378066062927
    2. '.output' → logprob: -1.5019378662109375
    3. ' output' → logprob: -12.876937866210938
    4. '	output' → logprob: -13.001937866210938
    5. '
' → logprob: -13.626937866210938
    6. '$output' → logprob: -13.751937866210938
    7. '.' → logprob: -14.001937866210938
    8. '   ' → logprob: -15.751937866210938
    9. '[' → logprob: -16.126937866210938
    10. ' ' → logprob: -16.376937866210938

Token 1844: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00033581978641450405
    2. 'self' → logprob: -8.000335693359375
    3. '[' → logprob: -15.125335693359375
    4. '[
' → logprob: -17.875335693359375
    5. '(self' → logprob: -18.000335693359375
    6. ' self' → logprob: -18.375335693359375
    7. '
' → logprob: -19.375335693359375
    8. '   ' → logprob: -19.375335693359375
    9. '	self' → logprob: -19.375335693359375
    10. '       ' → logprob: -20.000335693359375

Token 1845: '.fail' (ID: 48738)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.00524667976424098
    2. '.fail' → logprob: -5.255246639251709
    3. '[' → logprob: -11.880247116088867
    4. '	fail' → logprob: -12.755247116088867
    5. ' fail' → logprob: -13.005247116088867
    6. '_fail' → logprob: -14.255247116088867
    7. '   ' → logprob: -17.005247116088867
    8. 'FAIL' → logprob: -17.755247116088867
    9. '
' → logprob: -18.630247116088867
    10. ' ' → logprob: -18.755247116088867

Token 1846: '[n' (ID: 15433)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.007144528906792402
    2. 'r' → logprob: -5.007144451141357
    3. '[n' → logprob: -7.757144451141357
    4. '	r' → logprob: -14.257144927978516
    5. 'n' → logprob: -15.007144927978516
    6. '[' → logprob: -15.882144927978516
    7. '   ' → logprob: -16.007144927978516
    8. '```' → logprob: -16.632144927978516
    9. '
' → logprob: -17.132144927978516
    10. '(r' → logprob: -17.257144927978516

Token 1847: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.07622454315423965
    2. '[r' → logprob: -2.7012245655059814
    3. '[n' → logprob: -6.076224327087402
    4. 't' → logprob: -6.451224327087402
    5. 'tr' → logprob: -6.951224327087402
    6. 'r' → logprob: -6.951224327087402
    7. '[t' → logprob: -8.326224327087402
    8. 'x' → logprob: -10.076224327087402
    9. 'zt' → logprob: -10.201224327087402
    10. 'tk' → logprob: -10.451224327087402

Token 1848: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5758399367332458
    2. '[n' → logprob: -1.2008399963378906
    3. '[r' → logprob: -2.2008399963378906
    4. '])' → logprob: -3.7008399963378906
    5. ']
' → logprob: -6.950839996337891
    6. ']]' → logprob: -8.20083999633789
    7. '][' → logprob: -10.07583999633789
    8. '[' → logprob: -10.82583999633789
    9. ']}' → logprob: -11.07583999633789
    10. '])
' → logprob: -11.32583999633789

Token 1849: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00944379810243845
    2. '```' → logprob: -4.759443759918213
    3. '                   ' → logprob: -7.509443759918213
    4. '               ' → logprob: -8.634444236755371
    5. '           ' → logprob: -10.134444236755371
    6. '       ' → logprob: -10.384444236755371
    7. '``' → logprob: -11.884444236755371
    8. '<|end|>' → logprob: -12.009444236755371
    9. '                           ' → logprob: -12.259444236755371
    10. '                      ' → logprob: -12.884444236755371

Token 1850: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0011381926015019417
    2. ' q' → logprob: -7.251138210296631
    3. '                       ' → logprob: -8.001137733459473
    4. '```' → logprob: -9.876137733459473
    5. '                           ' → logprob: -10.501137733459473
    6. '                               ' → logprob: -11.751137733459473
    7. '	q' → logprob: -12.626137733459473
    8. '``' → logprob: -13.501137733459473
    9. 'queue' → logprob: -14.626137733459473
    10. '                   ' → logprob: -15.376137733459473

Token 1851: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.739826181321405e-05
    2. 'append' → logprob: -10.87504768371582
    3. '.' → logprob: -11.00004768371582
    4. '```' → logprob: -12.50004768371582
    5. '.p' → logprob: -12.62504768371582
    6. '.extend' → logprob: -13.62504768371582
    7. '.enqueue' → logprob: -13.62504768371582
    8. '.put' → logprob: -14.37504768371582
    9. '=' → logprob: -14.87504768371582
    10. '   ' → logprob: -15.25004768371582

Token 1852: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.836499985889532e-05
    2. 'n' → logprob: -9.7500581741333
    3. '((' → logprob: -17.375059127807617
    4. '(' → logprob: -18.375059127807617
    5. '(next' → logprob: -19.000059127807617
    6. '	n' → logprob: -19.250059127807617
    7. '(
' → logprob: -19.625059127807617
    8. '[n' → logprob: -19.750059127807617
    9. '(v' → logprob: -20.000059127807617
    10. 'left' → logprob: -20.875059127807617

Token 1853: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -6.110668618930504e-05
    2. 'n' → logprob: -10.12506103515625
    3. 'w' → logprob: -12.25006103515625
    4. '[n' → logprob: -12.62506103515625
    5. 'ext' → logprob: -12.87506103515625
    6. 'v' → logprob: -13.37506103515625
    7. '[' → logprob: -13.37506103515625
    8. ' nxt' → logprob: -14.00006103515625
    9. 'q' → logprob: -14.25006103515625
    10. 't' → logprob: -14.25006103515625

Token 1854: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018763974076136947
    2. '                   ' → logprob: -7.376876354217529
    3. '                       ' → logprob: -7.626876354217529
    4. '           ' → logprob: -7.876876354217529
    5. '               ' → logprob: -8.501876831054688
    6. '       ' → logprob: -9.501876831054688
    7. '())' → logprob: -10.376876831054688
    8. ')
' → logprob: -10.376876831054688
    9. '```' → logprob: -11.501876831054688
    10. '()' → logprob: -12.251876831054688

Token 1855: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.575079083442688
    2. '               ' → logprob: -1.825079083442688
    3. '                   ' → logprob: -2.0750789642333984
    4. '       ' → logprob: -2.5750789642333984
    5. '                       ' → logprob: -3.3250789642333984
    6. '```' → logprob: -3.3250789642333984
    7. '
' → logprob: -6.825078964233398
    8. '   ' → logprob: -7.200078964233398
    9. ' ' → logprob: -9.075078964233398
    10. '<|end|>' → logprob: -9.200078964233398

Token 1856: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26725900173187256
    2. '```' → logprob: -2.267259120941162
    3. '           ' → logprob: -2.767259120941162
    4. '
' → logprob: -3.517259120941162
    5. '               ' → logprob: -4.142259120941162
    6. '<|end|>' → logprob: -4.767259120941162
    7. '                   ' → logprob: -4.892259120941162
    8. '   ' → logprob: -6.642259120941162
    9. '<|end|>' → logprob: -7.267259120941162
    10. '#' → logprob: -7.392259120941162

Token 1857: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03762045502662659
    2. ' c' → logprob: -3.5376205444335938
    3. 'i' → logprob: -4.912620544433594
    4. ' i' → logprob: -8.037620544433594
    5. '_c' → logprob: -9.537620544433594
    6. '_' → logprob: -10.037620544433594
    7. '_i' → logprob: -11.537620544433594
    8. 'ch' → logprob: -11.787620544433594
    9. 'w' → logprob: -12.287620544433594
    10. 'f' → logprob: -12.412620544433594

Token 1858: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07092823833227158
    2. 'in' → logprob: -2.6959283351898193
    3. ',' → logprob: -7.69592809677124
    4. '                   ' → logprob: -8.445928573608398
    5. ',v' → logprob: -9.195928573608398
    6. 'v' → logprob: -9.945928573608398
    7. '   ' → logprob: -10.195928573608398
    8. ' not' → logprob: -10.570928573608398
    9. ' ,' → logprob: -11.070928573608398
    10. 'not' → logprob: -11.445928573608398

Token 1859: ' "' (ID: 392)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15795812010765076
    2. '"' → logprob: -2.1579580307006836
    3. ' self' → logprob: -4.407958030700684
    4. 'range' → logprob: -4.907958030700684
    5. 'list' → logprob: -5.032958030700684
    6. ' "' → logprob: -6.532958030700684
    7. ' range' → logprob: -6.782958030700684
    8. ' list' → logprob: -7.157958030700684
    9. ''' → logprob: -7.407958030700684
    10. 'set' → logprob: -9.032958030700684

Token 1860: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.0006332091288641095
    2. '"' → logprob: -7.375633239746094
    3. 'self' → logprob: -12.875633239746094
    4. ''' → logprob: -13.125633239746094
    5. 'abcdefghijkl' → logprob: -14.250633239746094
    6. 'abcdef' → logprob: -14.500633239746094
    7. '
' → logprob: -15.125633239746094
    8. ''z' → logprob: -15.375633239746094
    9. 'abcdefgh' → logprob: -16.125633239746094
    10. '   ' → logprob: -16.375633239746094

Token 1861: '":
' (ID: 9213)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3060412108898163
    2. '                       ' → logprob: -1.4310412406921387
    3. ':' → logprob: -4.556041240692139
    4. '                   ' → logprob: -4.806041240692139
    5. '":
' → logprob: -5.806041240692139
    6. '               ' → logprob: -6.556041240692139
    7. '       ' → logprob: -7.306041240692139
    8. '):
' → logprob: -8.43104076385498
    9. '           ' → logprob: -8.55604076385498
    10. ' :
' → logprob: -9.55604076385498

Token 1862: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0008775161695666611
    2. '                   ' → logprob: -7.375877380371094
    3. ' if' → logprob: -9.250877380371094
    4. '               ' → logprob: -10.000877380371094
    5. '	                   ' → logprob: -11.000877380371094
    6. 'if' → logprob: -11.375877380371094
    7. '           ' → logprob: -11.375877380371094
    8. '```' → logprob: -11.500877380371094
    9. '       ' → logprob: -11.625877380371094
    10. ':
' → logprob: -12.000877380371094

Token 1863: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8758211731910706
    2. 'if' (adapté à ' if') → logprob: -1.2508211135864258
    3. '                       ' → logprob: -1.2508211135864258
    4. 'self' → logprob: -5.250821113586426
    5. ' self' → logprob: -5.375821113586426
    6. '                           ' → logprob: -8.250821113586426
    7. '                   ' → logprob: -8.375821113586426
    8. ' next' → logprob: -9.125821113586426
    9. 'next' → logprob: -9.125821113586426
    10. ' for' → logprob: -9.375821113586426

Token 1864: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.608322024345398
    2. 'c' → logprob: -0.858322024345398
    3. ' self' → logprob: -3.8583221435546875
    4. 'self' → logprob: -4.6083221435546875
    5. ' not' → logprob: -7.9833221435546875
    6. '   ' → logprob: -8.108322143554688
    7. '                           ' → logprob: -9.733322143554688
    8. '                       ' → logprob: -10.608322143554688
    9. 'not' → logprob: -10.858322143554688
    10. ' (' → logprob: -11.483322143554688

Token 1865: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02786477841436863
    2. 'not' → logprob: -3.652864694595337
    3. ' in' → logprob: -6.527864933013916
    4. 'in' → logprob: -10.277864456176758
    5. '	not' → logprob: -10.902864456176758
    6. '                       ' → logprob: -11.152864456176758
    7. '                   ' → logprob: -11.902864456176758
    8. '[' → logprob: -12.277864456176758
    9. '   ' → logprob: -12.402864456176758
    10. '               ' → logprob: -12.652864456176758

Token 1866: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17129270732402802
    2. 'in' → logprob: -1.9212926626205444
    3. 'self' → logprob: -4.546292781829834
    4. '[self' → logprob: -8.921292304992676
    5. ' self' → logprob: -9.421292304992676
    6. '                       ' → logprob: -9.421292304992676
    7. '                   ' → logprob: -9.796292304992676
    8. '```' → logprob: -11.921292304992676
    9. '(self' → logprob: -12.046292304992676
    10. ',' → logprob: -12.046292304992676

Token 1867: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.438573680294212e-06
    2. ' self' → logprob: -12.125005722045898
    3. '                   ' → logprob: -17.0000057220459
    4. '0' → logprob: -17.2500057220459
    5. '[self' → logprob: -17.8750057220459
    6. '
' → logprob: -18.6250057220459
    7. '                       ' → logprob: -18.7500057220459
    8. '(self' → logprob: -18.7500057220459
    9. '{' → logprob: -19.5000057220459
    10. '=self' → logprob: -19.7500057220459

Token 1868: '.next' (ID: 6689)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.005415181163698435
    2. '.next' → logprob: -5.255414962768555
    3. ' next' → logprob: -8.755414962768555
    4. '_next' → logprob: -11.130414962768555
    5. '[next' → logprob: -11.755414962768555
    6. '	next' → logprob: -13.755414962768555
    7. 'output' → logprob: -16.755414962768555
    8. '   ' → logprob: -17.005414962768555
    9. 'Next' → logprob: -17.505414962768555
    10. '
' → logprob: -17.505414962768555

Token 1869: '[r' (ID: 33265)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. '0' → logprob: -12.375005722045898
    3. '                   ' → logprob: -14.625005722045898
    4. '   ' → logprob: -15.375005722045898
    5. '           ' → logprob: -15.875005722045898
    6. '               ' → logprob: -16.0000057220459
    7. 'r' → logprob: -16.6250057220459
    8. ' [' → logprob: -16.8750057220459
    9. '       ' → logprob: -17.2500057220459
    10. '[r' → logprob: -17.3750057220459

Token 1870: ']:
' (ID: 22152)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6572121381759644
    2. ':
' → logprob: -1.0322121381759644
    3. '                   ' → logprob: -3.282212257385254
    4. '[' → logprob: -3.407212257385254
    5. '[self' → logprob: -4.032212257385254
    6. '[r' → logprob: -4.157212257385254
    7. ']:
' → logprob: -4.782212257385254
    8. '                           ' → logprob: -5.532212257385254
    9. ':' → logprob: -5.657212257385254
    10. '               ' → logprob: -6.407212257385254

Token 1871: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.043624866753816605
    2. '                       ' → logprob: -3.1686248779296875
    3. ' =' → logprob: -8.543624877929688
    4. '                   ' → logprob: -8.543624877929688
    5. ' :' → logprob: -10.043624877929688
    6. '                               ' → logprob: -10.543624877929688
    7. '```' → logprob: -10.543624877929688
    8. ':' → logprob: -10.668624877929688
    9. '=' → logprob: -10.668624877929688
    10. '           ' → logprob: -10.918624877929688

Token 1872: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06119002029299736
    2. ' self' → logprob: -3.561190128326416
    3. '                       ' → logprob: -3.936190128326416
    4. '                           ' → logprob: -4.561190128326416
    5. '```' → logprob: -7.561190128326416
    6. '   ' → logprob: -8.311189651489258
    7. '                               ' → logprob: -9.061189651489258
    8. '                   ' → logprob: -10.811189651489258
    9. ' ' → logprob: -10.811189651489258
    10. '	self' → logprob: -11.311189651489258

Token 1873: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.04036062955856323
    2. 'next' → logprob: -3.290360689163208
    3. '[next' → logprob: -6.290360450744629
    4. '[' → logprob: -9.290360450744629
    5. '_next' → logprob: -9.790360450744629
    6. '[r' → logprob: -9.915360450744629
    7. '
' → logprob: -10.165360450744629
    8. '.' → logprob: -10.290360450744629
    9. ' next' → logprob: -10.415360450744629
    10. '=' → logprob: -10.415360450744629

Token 1874: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0006719246739521623
    2. '[' → logprob: -8.000672340393066
    3. 'r' → logprob: -8.000672340393066
    4. '=r' → logprob: -14.625672340393066
    5. '0' → logprob: -15.000672340393066
    6. '   ' → logprob: -16.25067138671875
    7. '                   ' → logprob: -16.62567138671875
    8. '=' → logprob: -16.75067138671875
    9. '       ' → logprob: -17.00067138671875
    10. '	r' → logprob: -17.12567138671875

Token 1875: '][' (ID: 2696)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0008005765848793089
    2. '[' → logprob: -7.250800609588623
    3. 'r' → logprob: -10.250800132751465
    4. '][' → logprob: -10.375800132751465
    5. '[self' → logprob: -11.625800132751465
    6. '[c' → logprob: -12.750800132751465
    7. '=r' → logprob: -13.000800132751465
    8. '                   ' → logprob: -13.250800132751465
    9. '=' → logprob: -13.750800132751465
    10. '                       ' → logprob: -14.000800132751465

Token 1876: 'c' (ID: 66)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12709084153175354
    2. 'self' → logprob: -2.1270909309387207
    3. 'c' → logprob: -9.127090454101562
    4. ' self' → logprob: -11.002090454101562
    5. ' r' → logprob: -11.627090454101562
    6. '                           ' → logprob: -11.627090454101562
    7. '                   ' → logprob: -12.127090454101562
    8. '(self' → logprob: -12.752090454101562
    9. '                       ' → logprob: -13.002090454101562
    10. '   ' → logprob: -13.002090454101562

Token 1877: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44829994440078735
    2. ']=' → logprob: -1.4482998847961426
    3. '=' → logprob: -2.0732998847961426
    4. ' =' → logprob: -7.573299884796143
    5. '=self' → logprob: -11.1983003616333
    6. 'self' → logprob: -12.0733003616333
    7. '[' → logprob: -13.1983003616333
    8. '                       ' → logprob: -13.6983003616333
    9. '                           ' → logprob: -13.6983003616333
    10. '[self' → logprob: -13.8233003616333

Token 1878: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011260372586548328
    2. '[r' → logprob: -5.011260509490967
    3. ' =' → logprob: -5.761260509490967
    4. '=r' → logprob: -6.636260509490967
    5. '[' → logprob: -10.636260032653809
    6. '[self' → logprob: -11.261260032653809
    7. ']=' → logprob: -11.511260032653809
    8. '=self' → logprob: -12.011260032653809
    9. '=
' → logprob: -12.511260032653809
    10. '[c' → logprob: -12.636260032653809

Token 1879: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012368128227535635
    2. ' self' → logprob: -9.000123977661133
    3. '0' → logprob: -15.750123977661133
    4. '                           ' → logprob: -15.875123977661133
    5. '                       ' → logprob: -18.000123977661133
    6. '   ' → logprob: -18.500123977661133
    7. '                               ' → logprob: -18.625123977661133
    8. '(self' → logprob: -19.125123977661133
    9. '	self' → logprob: -19.750123977661133
    10. '                   ' → logprob: -19.750123977661133

Token 1880: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.20150387287139893
    2. 'next' → logprob: -1.701503872871399
    3. '.fail' → logprob: -10.07650375366211
    4. ' next' → logprob: -10.82650375366211
    5. 'self' → logprob: -11.32650375366211
    6. '_next' → logprob: -12.07650375366211
    7. '[next' → logprob: -12.07650375366211
    8. '	next' → logprob: -13.32650375366211
    9. 'Next' → logprob: -13.57650375366211
    10. '0' → logprob: -13.70150375366211

Token 1881: '[self' (ID: 33734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012987985974177718
    2. '0' → logprob: -9.000129699707031
    3. 'self' → logprob: -12.375129699707031
    4. '[self' → logprob: -14.375129699707031
    5. 'def' → logprob: -14.625129699707031
    6. 'r' → logprob: -15.000129699707031
    7. ' [' → logprob: -15.250129699707031
    8. '   ' → logprob: -15.625129699707031
    9. '                   ' → logprob: -16.12512969970703
    10. '           ' → logprob: -16.25012969970703

Token 1882: '.fail' (ID: 48738)
  Prédit: '.fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fail' → logprob: -0.5761547684669495
    2. 'fail' → logprob: -0.8261547684669495
    3. '0' → logprob: -8.951154708862305
    4. '[' → logprob: -10.076154708862305
    5. ' fail' → logprob: -10.951154708862305
    6. '	fail' → logprob: -11.201154708862305
    7. ' ' → logprob: -12.576154708862305
    8. 'FAIL' → logprob: -13.076154708862305
    9. '   ' → logprob: -13.201154708862305
    10. '_fail' → logprob: -13.451154708862305

Token 1883: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0001242772996192798
    2. 'r' → logprob: -9.000123977661133
    3. '[' → logprob: -14.625123977661133
    4. '   ' → logprob: -16.375123977661133
    5. '       ' → logprob: -16.375123977661133
    6. '	r' → logprob: -16.875123977661133
    7. '[
' → logprob: -17.375123977661133
    8. '           ' → logprob: -17.750123977661133
    9. '][' → logprob: -17.875123977661133
    10. '(r' → logprob: -18.000123977661133

Token 1884: ']].' (ID: 47690)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010998494690284133
    2. '].' → logprob: -6.876100063323975
    3. ' ][' → logprob: -10.501099586486816
    4. '[r' → logprob: -11.001099586486816
    5. '[c' → logprob: -11.876099586486816
    6. '[' → logprob: -12.126099586486816
    7. '   ' → logprob: -12.876099586486816
    8. ']' → logprob: -13.001099586486816
    9. ''][' → logprob: -13.751099586486816
    10. '       ' → logprob: -13.876099586486816

Token 1885: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -2.15310683415737e-05
    2. '0' → logprob: -11.500021934509277
    3. 'c' → logprob: -12.125021934509277
    4. '.get' → logprob: -12.375021934509277
    5. ' get' → logprob: -14.375021934509277
    6. '[c' → logprob: -14.500021934509277
    7. '[get' → logprob: -14.875021934509277
    8. 'getc' → logprob: -16.37502098083496
    9. '
' → logprob: -17.25002098083496
    10. ' ' → logprob: -17.50002098083496

Token 1886: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.47414395213127136
    2. 'c' → logprob: -0.9741439819335938
    3. '0' → logprob: -9.974143981933594
    4. '(' → logprob: -11.474143981933594
    5. ' c' → logprob: -12.724143981933594
    6. ')c' → logprob: -13.224143981933594
    7. '	c' → logprob: -13.724143981933594
    8. '   ' → logprob: -13.849143981933594
    9. '```' → logprob: -13.849143981933594
    10. ' (' → logprob: -14.224143981933594

Token 1887: ',' (ID: 11)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.5891821384429932
    2. ',' → logprob: -0.8391821384429932
    3. 'c' → logprob: -4.339181900024414
    4. '(c' → logprob: -9.714181900024414
    5. ' c' → logprob: -11.089181900024414
    6. '[c' → logprob: -11.089181900024414
    7. ' ,' → logprob: -11.214181900024414
    8. '   ' → logprob: -14.339181900024414
    9. '                           ' → logprob: -14.589181900024414
    10. '           ' → logprob: -14.964181900024414

Token 1888: '0' (ID: 15)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.007731911726295948
    2. ' c' → logprob: -5.132731914520264
    3. '0' → logprob: -6.382731914520264
    4. ' ' → logprob: -9.132731437683105
    5. '   ' → logprob: -13.132731437683105
    6. '	c' → logprob: -15.257731437683105
    7. ')c' → logprob: -15.382731437683105
    8. '[c' → logprob: -16.257732391357422
    9. '```' → logprob: -16.382732391357422
    10. '(c' → logprob: -16.757732391357422

Token 1889: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004640880040824413
    2. '           ' → logprob: -6.379641056060791
    3. '                           ' → logprob: -6.754641056060791
    4. ')
' → logprob: -7.379641056060791
    5. '                       ' → logprob: -7.754641056060791
    6. '               ' → logprob: -7.879641056060791
    7. '                   ' → logprob: -8.879640579223633
    8. '       ' → logprob: -9.254640579223633
    9. '```' → logprob: -10.629640579223633
    10. ')}' → logprob: -11.379640579223633

Token 1890: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1891: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1892: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012862293981015682
    2. ' i' → logprob: -4.512862205505371
    3. 'state' → logprob: -6.887862205505371
    4. 's' → logprob: -8.512862205505371
    5. 'c' → logprob: -9.012862205505371
    6. 'r' → logprob: -9.012862205505371
    7. '_' → logprob: -9.637862205505371
    8. 'v' → logprob: -10.012862205505371
    9. '_i' → logprob: -10.012862205505371
    10. 'st' → logprob: -10.262862205505371

Token 1893: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01816738210618496
    2. 'in' → logprob: -4.018167495727539
    3. ' ' → logprob: -11.643167495727539
    4. '  ' → logprob: -13.018167495727539
    5. '   ' → logprob: -13.518167495727539
    6. 'import' → logprob: -13.893167495727539
    7. '[' → logprob: -14.518167495727539
    8. '	in' → logprob: -14.518167495727539
    9. '```' → logprob: -14.643167495727539
    10. ',' → logprob: -14.643167495727539

Token 1894: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07655353844165802
    2. ' "' → logprob: -3.0765535831451416
    3. ' range' → logprob: -3.9515535831451416
    4. 'range' → logprob: -4.8265533447265625
    5. '"a' → logprob: -8.201553344726562
    6. ''' → logprob: -11.451553344726562
    7. '"A' → logprob: -11.576553344726562
    8. ' ' → logprob: -11.701553344726562
    9. ' sys' → logprob: -12.076553344726562
    10. 'sys' → logprob: -12.201553344726562

Token 1895: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.12697461247444153
    2. '"' → logprob: -2.126974582672119
    3. ' "' → logprob: -10.126975059509277
    4. ''' → logprob: -13.251975059509277
    5. 'abcdef' → logprob: -13.501975059509277
    6. '
' → logprob: -13.751975059509277
    7. 'range' → logprob: -14.751975059509277
    8. 'abcdefghijkl' → logprob: -14.876975059509277
    9. '"a' → logprob: -15.126975059509277
    10. '"default' → logprob: -15.376975059509277

Token 1896: '":
' (ID: 9213)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.009562942199409008
    2. '                   ' → logprob: -5.134562969207764
    3. ':' → logprob: -6.634562969207764
    4. '           ' → logprob: -6.759562969207764
    5. '               ' → logprob: -7.134562969207764
    6. '                       ' → logprob: -8.509562492370605
    7. '   ' → logprob: -9.884562492370605
    8. '):
' → logprob: -10.259562492370605
    9. '       ' → logprob: -10.509562492370605
    10. '                           ' → logprob: -10.884562492370605

Token 1897: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07259375602006912
    2. '               ' → logprob: -2.8225936889648438
    3. '[' → logprob: -5.697593688964844
    4. '   ' → logprob: -5.947593688964844
    5. '                       ' → logprob: -6.572593688964844
    6. '           ' → logprob: -6.572593688964844
    7. ' if' → logprob: -6.697593688964844
    8. '=' → logprob: -9.822593688964844
    9. '                           ' → logprob: -10.197593688964844
    10. '```' → logprob: -10.197593688964844

Token 1898: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027745472267270088
    2. ' if' → logprob: -3.902745485305786
    3. 'if' (adapté à ' if') → logprob: -5.777745246887207
    4. '               ' → logprob: -6.652745246887207
    5. '                       ' → logprob: -7.027745246887207
    6. ' self' → logprob: -7.027745246887207
    7. 'self' → logprob: -7.652745246887207
    8. '   ' → logprob: -8.402745246887207
    9. '```' → logprob: -9.527745246887207
    10. '           ' → logprob: -9.777745246887207

Token 1899: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4742310643196106
    2. ' c' → logprob: -0.9742310643196106
    3. '   ' → logprob: -9.474230766296387
    4. '0' → logprob: -10.474230766296387
    5. ' ' → logprob: -10.974230766296387
    6. ''' → logprob: -11.349230766296387
    7. '"' → logprob: -12.224230766296387
    8. ' '' → logprob: -12.974230766296387
    9. '(c' → logprob: -13.224230766296387
    10. '	c' → logprob: -13.474230766296387

Token 1900: ' not' (ID: 625)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8434267044067383
    2. 'not' → logprob: -1.2184267044067383
    3. ' not' → logprob: -1.3434267044067383
    4. '0' → logprob: -4.343426704406738
    5. ' ' → logprob: -10.468426704406738
    6. '   ' → logprob: -10.843426704406738
    7. 'c' → logprob: -10.968426704406738
    8. '```' → logprob: -11.218426704406738
    9. ' in' → logprob: -11.593426704406738
    10. 'def' → logprob: -11.843426704406738

Token 1901: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17306526005268097
    2. 'self' → logprob: -2.048065185546875
    3. 'in' → logprob: -4.423065185546875
    4. ' self' → logprob: -4.548065185546875
    5. '[' → logprob: -5.423065185546875
    6. '[self' → logprob: -6.048065185546875
    7. '                   ' → logprob: -8.548065185546875
    8. '   ' → logprob: -9.423065185546875
    9. '               ' → logprob: -9.423065185546875
    10. '(self' → logprob: -9.548065185546875

Token 1902: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000712074339389801
    2. ' self' → logprob: -7.250711917877197
    3. '   ' → logprob: -14.125712394714355
    4. '                   ' → logprob: -14.500712394714355
    5. '0' → logprob: -15.375712394714355
    6. '               ' → logprob: -15.875712394714355
    7. '[' → logprob: -15.875712394714355
    8. 'next' → logprob: -16.00071144104004
    9. 'sys' → logprob: -16.62571144104004
    10. '           ' → logprob: -16.75071144104004

Token 1903: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.1270718276500702
    2. 'next' → logprob: -2.1270718574523926
    3. ' next' → logprob: -8.877071380615234
    4. '_next' → logprob: -12.502071380615234
    5. '	next' → logprob: -15.252071380615234
    6. '[next' → logprob: -16.127071380615234
    7. 'Next' → logprob: -16.627071380615234
    8. ' .' → logprob: -16.877071380615234
    9. '.' → logprob: -17.877071380615234
    10. '(next' → logprob: -18.377071380615234

Token 1904: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.27099974633893e-05
    2. '0' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.625012397766113
    4. '```' → logprob: -15.250012397766113
    5. 'def' → logprob: -15.625012397766113
    6. ' [' → logprob: -16.25001335144043
    7. 'r' → logprob: -16.75001335144043
    8. '\[' → logprob: -17.50001335144043
    9. 'import' → logprob: -18.12501335144043
    10. '#' → logprob: -18.25001335144043

Token 1905: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018006093159783632
    2. '[' → logprob: -8.6251802444458
    3. ' ' → logprob: -14.6251802444458
    4. '   ' → logprob: -17.750179290771484
    5. '
' → logprob: -18.500179290771484
    6. '```' → logprob: -19.625179290771484
    7. ' [' → logprob: -19.750179290771484
    8. 'r' → logprob: -19.875179290771484
    9. '[
' → logprob: -20.000179290771484
    10. '#' → logprob: -20.250179290771484

Token 1906: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32366374135017395
    2. ']:
' → logprob: -1.3236637115478516
    3. ':' → logprob: -5.448663711547852
    4. '   ' → logprob: -6.073663711547852
    5. ']:' → logprob: -6.198663711547852
    6. '                   ' → logprob: -7.448663711547852
    7. ']' → logprob: -8.073663711547852
    8. '       ' → logprob: -8.323663711547852
    9. '               ' → logprob: -8.948663711547852
    10. '                       ' → logprob: -9.073663711547852

Token 1907: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.21564185619354248
    2. '                   ' → logprob: -2.340641975402832
    3. '=' → logprob: -2.465641975402832
    4. ' =' → logprob: -4.590641975402832
    5. '[' → logprob: -6.715641975402832
    6. '```' → logprob: -8.090641975402832
    7. '                        
' → logprob: -8.965641975402832
    8. '=c' → logprob: -9.090641975402832
    9. '               ' → logprob: -9.215641975402832
    10. '	                   ' → logprob: -9.340641975402832

Token 1908: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4693654477596283
    2. '                   ' → logprob: -1.4693654775619507
    3. ' self' → logprob: -2.594365358352661
    4. '                       ' → logprob: -2.844365358352661
    5. '               ' → logprob: -4.96936559677124
    6. '           ' → logprob: -6.46936559677124
    7. '```' → logprob: -6.46936559677124
    8. '   ' → logprob: -6.71936559677124
    9. ' ' → logprob: -9.469365119934082
    10. '                           ' → logprob: -9.719365119934082

Token 1909: '.next' (ID: 6689)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4742715060710907
    2. '.next' → logprob: -0.9742715358734131
    3. ' next' → logprob: -8.599271774291992
    4. '[next' → logprob: -12.099271774291992
    5. '_next' → logprob: -13.599271774291992
    6. '.' → logprob: -14.224271774291992
    7. '	next' → logprob: -14.224271774291992
    8. 'Next' → logprob: -14.224271774291992
    9. '```' → logprob: -14.474271774291992
    10. '=' → logprob: -15.099271774291992

Token 1910: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '0' → logprob: -14.000001907348633
    3. ' [' → logprob: -14.000001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '```' → logprob: -15.875001907348633
    6. '
' → logprob: -17.250001907348633
    7. 'def' → logprob: -17.375001907348633
    8. '                   ' → logprob: -17.500001907348633
    9. '=' → logprob: -17.625001907348633
    10. '[i' → logprob: -18.125001907348633

Token 1911: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015908108616713434
    2. '[' → logprob: -8.75015926361084
    3. ' ' → logprob: -15.50015926361084
    4. '"' → logprob: -15.62515926361084
    5. ''' → logprob: -16.125158309936523
    6. '{' → logprob: -17.125158309936523
    7. 'c' → logprob: -17.875158309936523
    8. '   ' → logprob: -18.875158309936523
    9. '
' → logprob: -19.500158309936523
    10. '{
' → logprob: -19.750158309936523

Token 1912: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0005299181793816388
    2. '][' → logprob: -7.625529766082764
    3. ' [' → logprob: -11.000530242919922
    4. '[' → logprob: -11.125530242919922
    5. ']' → logprob: -12.250530242919922
    6. '
' → logprob: -13.750530242919922
    7. ']={' → logprob: -13.875530242919922
    8. '[C' → logprob: -14.250530242919922
    9. ']=' → logprob: -14.375530242919922
    10. '   ' → logprob: -14.625530242919922

Token 1913: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5570885807392187e-05
    2. ' c' → logprob: -11.125015258789062
    3. '   ' → logprob: -14.625015258789062
    4. '0' → logprob: -16.500015258789062
    5. '	c' → logprob: -17.250015258789062
    6. '(c' → logprob: -17.375015258789062
    7. '[c' → logprob: -17.625015258789062
    8. '                   ' → logprob: -17.625015258789062
    9. '```' → logprob: -17.625015258789062
    10. '{' → logprob: -17.750015258789062

Token 1914: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02325211651623249
    2. ' =' → logprob: -3.773252010345459
    3. ']=' → logprob: -12.398252487182617
    4. ']' → logprob: -12.898252487182617
    5. '=c' → logprob: -17.898252487182617
    6. '[' → logprob: -18.148252487182617
    7. ')' → logprob: -18.273252487182617
    8. '   ' → logprob: -18.648252487182617
    9. ')=' → logprob: -19.398252487182617
    10. '                   ' → logprob: -19.398252487182617

Token 1915: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '[' → logprob: -17.503177642822266
    4. ']=' → logprob: -17.878177642822266
    5. '=
' → logprob: -18.628177642822266
    6. '                       ' → logprob: -19.753177642822266
    7. '＝' → logprob: -20.253177642822266
    8. '   ' → logprob: -20.503177642822266
    9. ']' → logprob: -20.628177642822266
    10. '.=' → logprob: -20.753177642822266

Token 1916: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -19.625009536743164
    4. '۰' → logprob: -20.750009536743164
    5. '  ' → logprob: -21.437509536743164
    6. '                   ' → logprob: -21.750009536743164
    7. ' ' → logprob: -21.812509536743164
    8. '```' → logprob: -22.062509536743164
    9. '000' → logprob: -22.125009536743164
    10. '00' → logprob: -22.125009536743164

Token 1917: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.750001907348633
    4. '۰' → logprob: -21.125001907348633
    5. '00' → logprob: -21.187501907348633
    6. '                   ' → logprob: -21.250001907348633
    7. '000' → logprob: -21.375001907348633
    8. '                       ' → logprob: -21.687501907348633
    9. '０' → logprob: -21.937501907348633
    10. '  ' → logprob: -22.187501907348633

Token 1918: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5956282019615173
    2. '<|end|>' → logprob: -0.9706282019615173
    3. '```' → logprob: -3.595628261566162
    4. '       ' → logprob: -3.720628261566162
    5. '        
' → logprob: -5.345628261566162
    6. '           ' → logprob: -5.595628261566162
    7. '<|end|>' → logprob: -6.095628261566162
    8. '                        
' → logprob: -6.845628261566162
    9. '\n' → logprob: -7.220628261566162
    10. ')' → logprob: -7.220628261566162

Token 1919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05989139899611473
    2. '
' → logprob: -3.55989146232605
    3. '```' → logprob: -4.434891223907471
    4. '           ' → logprob: -4.684891223907471
    5. '<|end|>' → logprob: -5.184891223907471
    6. '   ' → logprob: -6.559891223907471
    7. '        
' → logprob: -7.184891223907471
    8. 'import' → logprob: -8.809891700744629
    9. 'def' → logprob: -8.934891700744629
    10. '<|end|>' → logprob: -9.184891700744629

Token 1920: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' (adapté à ' ac') → logprob: -0.8537238240242004
    2. '       ' → logprob: -0.9787238240242004
    3. '   ' → logprob: -1.9787237644195557
    4. '```' → logprob: -3.1037237644195557
    5. 'autom' → logprob: -5.103724002838135
    6. '
' → logprob: -6.103724002838135
    7. 'AC' → logprob: -6.728724002838135
    8. '    
' → logprob: -6.978724002838135
    9. 'acy' → logprob: -6.978724002838135
    10. '        
' → logprob: -7.103724002838135

Token 1921: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6948952674865723
    2. ' =' → logprob: -0.6948952674865723
    3. 'Autom' → logprob: -6.694895267486572
    4. '=A' → logprob: -8.944894790649414
    5. '.=' → logprob: -9.319894790649414
    6. '.' → logprob: -9.444894790649414
    7. '=new' → logprob: -9.569894790649414
    8. 'autom' → logprob: -10.194894790649414
    9. '.Aut' → logprob: -10.194894790649414
    10. '=
' → logprob: -11.069894790649414

Token 1922: ' ACA' (ID: 152125)
  Prédit: 'AC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.000688486616127193
    2. ' ACA' → logprob: -7.375688552856445
    3. 'ACA' → logprob: -10.875688552856445
    4. 'ac' → logprob: -11.250688552856445
    5. '```' → logprob: -12.125688552856445
    6. 'A' → logprob: -12.625688552856445
    7. 'AN' → logprob: -12.875688552856445
    8. 'AG' → logprob: -13.125688552856445
    9. '`' → logprob: -13.375688552856445
    10. '_AC' → logprob: -13.500688552856445

Token 1923: 'utom' (ID: 69729)
  Prédit: 'utom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utom' → logprob: -0.023543719202280045
    2. 'Autom' → logprob: -3.7735438346862793
    3. 'ut' → logprob: -8.523543357849121
    4. 'autom' → logprob: -9.398543357849121
    5. 'tom' → logprob: -11.898543357849121
    6. 'Ut' → logprob: -12.273543357849121
    7. ' ut' → logprob: -13.273543357849121
    8. ' Autom' → logprob: -14.148543357849121
    9. ' autom' → logprob: -14.648543357849121
    10. 'u' → logprob: -14.648543357849121

Token 1924: 'aton' (ID: 24850)
  Prédit: 'aton'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aton' → logprob: -4.320199877838604e-07
    2. 'autom' → logprob: -15.125
    3. 'on' → logprob: -17.125
    4. 'oton' → logprob: -17.25
    5. 'aut' → logprob: -18.125
    6. '```' → logprob: -18.375
    7. 'Autom' → logprob: -18.375
    8. 'ation' → logprob: -18.5
    9. 'ton' → logprob: -18.625
    10. ' autom' → logprob: -18.875

Token 1925: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3566528856754303
    2. 'for' → logprob: -1.231652855873108
    3. ' for' → logprob: -4.856652736663818
    4. '<|end|>' → logprob: -8.356653213500977
    5. '```' → logprob: -9.606653213500977
    6. '        
' → logprob: -10.606653213500977
    7. '   ' → logprob: -11.106653213500977
    8. '<|end|>' → logprob: -11.106653213500977
    9. '
' → logprob: -11.356653213500977
    10. 'ac' → logprob: -12.481653213500977

Token 1926: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38711413741111755
    2. 'for' → logprob: -1.13711416721344
    3. ' for' → logprob: -8.762114524841309
    4. '```' → logprob: -9.387114524841309
    5. '
' → logprob: -13.637114524841309
    6. '``' → logprob: -14.637114524841309
    7. '   ' → logprob: -14.762114524841309
    8. '	for' → logprob: -15.387114524841309
    9. '        
' → logprob: -15.512114524841309
    10. '           ' → logprob: -15.887114524841309

Token 1927: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3136204481124878
    2. 'for' (adapté à ' for') → logprob: -1.3136204481124878
    3. ' for' → logprob: -7.938620567321777
    4. '   ' → logprob: -14.563620567321777
    5. '        
' → logprob: -14.688620567321777
    6. '	for' → logprob: -14.813620567321777
    7. '```' → logprob: -14.938620567321777
    8. '
' → logprob: -16.06361961364746
    9. '           ' → logprob: -16.81361961364746
    10. '<|end|>' → logprob: -17.31361961364746

Token 1928: ' i' (ID: 575)
  Prédit: 'pat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pat' → logprob: -0.42665475606918335
    2. 'w' → logprob: -1.4266548156738281
    3. 'sw' → logprob: -3.176654815673828
    4. 'word' → logprob: -3.676654815673828
    5. 'i' → logprob: -4.176654815673828
    6. ' pat' → logprob: -4.801654815673828
    7. ' w' → logprob: -5.176654815673828
    8. 'pattern' → logprob: -5.676654815673828
    9. 'season' → logprob: -6.176654815673828
    10. ' i' → logprob: -6.426654815673828

Token 1929: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2662123441696167
    2. ' in' → logprob: -1.5162123441696167
    3. ',' → logprob: -4.266212463378906
    4. ',s' → logprob: -9.391212463378906
    5. ',in' → logprob: -10.766212463378906
    6. ' ,' → logprob: -11.016212463378906
    7. ',se' → logprob: -11.516212463378906
    8. ' ' → logprob: -13.266212463378906
    9. ',p' → logprob: -13.516212463378906
    10. '   ' → logprob: -13.516212463378906

Token 1930: ' w' (ID: 286)
  Prédit: 'pat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pat' → logprob: -0.25077348947525024
    2. 'w' → logprob: -1.7507734298706055
    3. 'word' → logprob: -3.5007734298706055
    4. 'sw' → logprob: -4.3757734298706055
    5. 'pattern' → logprob: -5.6257734298706055
    6. 'season' → logprob: -6.6257734298706055
    7. 'pw' → logprob: -8.500773429870605
    8. ' pat' → logprob: -9.125773429870605
    9. ' w' → logprob: -9.500773429870605
    10. 'p' → logprob: -9.750773429870605

Token 1931: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12696653604507446
    2. 'in' → logprob: -2.1269664764404297
    3. 's' → logprob: -11.25196647644043
    4. 'n' → logprob: -11.50196647644043
    5. ',' → logprob: -13.00196647644043
    6. '   ' → logprob: -13.37696647644043
    7. ' ' → logprob: -13.75196647644043
    8. ')' → logprob: -13.87696647644043
    9. 'w' → logprob: -13.87696647644043
    10. '_in' → logprob: -13.87696647644043

Token 1932: ' enumerate' (ID: 29671)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.0018708095885813236
    2. 'enumer' → logprob: -6.876870632171631
    3. ' season' → logprob: -7.126870632171631
    4. 'range' → logprob: -10.876871109008789
    5. ' enumerate' → logprob: -11.126871109008789
    6. ' saison' → logprob: -15.376871109008789
    7. '   ' → logprob: -16.50187110900879
    8. ' ' → logprob: -16.75187110900879
    9. 'semester' → logprob: -16.75187110900879
    10. ' range' → logprob: -16.75187110900879

Token 1933: '(se' (ID: 19430)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.00091217877343297
    2. ' season' → logprob: -7.000912189483643
    3. '   ' → logprob: -14.875911712646484
    4. '(se' → logprob: -15.875911712646484
    5. 'range' → logprob: -16.125911712646484
    6. '(' → logprob: -17.500911712646484
    7. ' saison' → logprob: -17.625911712646484
    8. '       ' → logprob: -17.875911712646484
    9. 'sea' → logprob: -18.625911712646484
    10. ' ' → logprob: -19.000911712646484

Token 1934: 'ason' (ID: 2350)
  Prédit: 'ason'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ason' → logprob: -7.226628895296017e-06
    2. 'season' → logprob: -12.750007629394531
    3. 'as' → logprob: -13.000007629394531
    4. 'aison' → logprob: -14.750007629394531
    5. 'asons' → logprob: -15.000007629394531
    6. 'a' → logprob: -15.000007629394531
    7. 'asion' → logprob: -15.375007629394531
    8. 'son' → logprob: -15.750007629394531
    9. 'ASON' → logprob: -16.00000762939453
    10. 'anson' → logprob: -16.37500762939453

Token 1935: 'words' (ID: 10020)
  Prédit: 'words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -5.438573680294212e-06
    2. 's' → logprob: -12.375005722045898
    3. 'word' → logprob: -14.250005722045898
    4. ' words' → logprob: -15.875005722045898
    5. '_words' → logprob: -15.875005722045898
    6. '   ' → logprob: -16.2500057220459
    7. 'w' → logprob: -16.3750057220459
    8. '       ' → logprob: -16.8750057220459
    9. '
' → logprob: -17.1250057220459
    10. ')' → logprob: -17.3750057220459

Token 1936: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.48821064829826355
    2. ':
' → logprob: -0.9882106781005859
    3. '       ' → logprob: -4.613210678100586
    4. ':' → logprob: -5.988210678100586
    5. '):' → logprob: -6.738210678100586
    6. '   ' → logprob: -8.738210678100586
    7. '           ' → logprob: -8.863210678100586
    8. '():
' → logprob: -9.238210678100586
    9. '):
' → logprob: -12.738210678100586
    10. ' :
' → logprob: -12.863210678100586

Token 1937: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26215890049934387
    2. 'ac' → logprob: -1.5121588706970215
    3. ' ac' → logprob: -4.7621588706970215
    4. '   ' → logprob: -6.6371588706970215
    5. '	ac' → logprob: -8.76215934753418
    6. '#ac' → logprob: -9.88715934753418
    7. '       ' → logprob: -10.13715934753418
    8. '```' → logprob: -10.13715934753418
    9. '(ac' → logprob: -11.13715934753418
    10. ' ' → logprob: -13.13715934753418

Token 1938: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' (adapté à ' ac') → logprob: -0.0007688904879614711
    2. ' ac' → logprob: -7.250768661499023
    3. '           ' → logprob: -10.125768661499023
    4. '   ' → logprob: -11.125768661499023
    5. '	ac' → logprob: -12.875768661499023
    6. '       ' → logprob: -14.375768661499023
    7. '#ac' → logprob: -14.500768661499023
    8. '```' → logprob: -15.500768661499023
    9. 'add' → logprob: -17.000768661499023
    10. '(ac' → logprob: -17.000768661499023

Token 1939: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.5776860184123507e-06
    2. '.' → logprob: -13.00000286102295
    3. 'add' → logprob: -15.87500286102295
    4. ').' → logprob: -16.875001907348633
    5. '}.' → logprob: -17.625001907348633
    6. '.append' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. ' .' → logprob: -18.375001907348633
    9. '].' → logprob: -18.500001907348633
    10. '.Add' → logprob: -19.125001907348633

Token 1940: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.028586551547050476
    2. 'word' → logprob: -3.6535866260528564
    3. '(w' → logprob: -6.653586387634277
    4. 'w' → logprob: -7.028586387634277
    5. '_w' → logprob: -9.653586387634277
    6. 'Word' → logprob: -10.903586387634277
    7. 'words' → logprob: -11.403586387634277
    8. '_words' → logprob: -12.028586387634277
    9. '(word' → logprob: -12.778586387634277
    10. '_' → logprob: -14.278586387634277

Token 1941: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0011793931480497122
    2. 'w' → logprob: -6.751179218292236
    3. ' w' → logprob: -12.126179695129395
    4. '(' → logprob: -13.126179695129395
    5. ' (' → logprob: -13.501179695129395
    6. '(i' → logprob: -16.126178741455078
    7. '(
' → logprob: -16.376178741455078
    8. '((' → logprob: -17.001178741455078
    9. '(se' → logprob: -17.376178741455078
    10. '[w' → logprob: -17.376178741455078

Token 1942: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1200379878282547
    2. ',' → logprob: -2.9950380325317383
    3. '[i' → logprob: -3.1200380325317383
    4. '           ' → logprob: -4.495038032531738
    5. '(i' → logprob: -5.745038032531738
    6. ',i' → logprob: -6.495038032531738
    7. ',w' → logprob: -6.870038032531738
    8. '       ' → logprob: -7.245038032531738
    9. '   ' → logprob: -8.245038032531738
    10. '[' → logprob: -8.245038032531738

Token 1943: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.4391956685576588e-05
    2. ' i' → logprob: -10.625024795532227
    3. '(i' → logprob: -19.250024795532227
    4. '       ' → logprob: -19.500024795532227
    5. ')i' → logprob: -19.500024795532227
    6. '   ' → logprob: -19.625024795532227
    7. '	i' → logprob: -19.625024795532227
    8. '           ' → logprob: -19.875024795532227
    9. '
' → logprob: -19.875024795532227
    10. '{i' → logprob: -20.000024795532227

Token 1944: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002738522016443312
    2. ')
' → logprob: -8.250273704528809
    3. '       ' → logprob: -11.625273704528809
    4. ' )' → logprob: -13.000273704528809
    5. '           ' → logprob: -14.625273704528809
    6. ')

' → logprob: -15.375273704528809
    7. ')#' → logprob: -16.250274658203125
    8. '),' → logprob: -16.375274658203125
    9. ')`' → logprob: -16.750274658203125
    10. ')
' → logprob: -17.000274658203125

Token 1945: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.625001907348633
    4. '0' → logprob: -17.875001907348633
    5. ')' → logprob: -19.875001907348633
    6. '=' → logprob: -20.250001907348633
    7. '<|end|>' → logprob: -20.625001907348633
    8. '   ' → logprob: -20.625001907348633
    9. 'def' → logprob: -20.875001907348633
    10. '``' → logprob: -21.125001907348633

Token 1946: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.833878508885391e-05
    2. ')
' → logprob: -10.250038146972656
    3. '       ' → logprob: -13.375038146972656
    4. ' )' → logprob: -14.250038146972656
    5. '           ' → logprob: -14.625038146972656
    6. ')`' → logprob: -16.625038146972656
    7. '   ' → logprob: -17.125038146972656
    8. ')#' → logprob: -17.625038146972656
    9. '))' → logprob: -17.750038146972656
    10. '               ' → logprob: -17.875038146972656

Token 1947: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042858731001615524
    2. 'ac' → logprob: -3.292858839035034
    3. '   ' → logprob: -5.917858600616455
    4. '<|end|>' → logprob: -6.917858600616455
    5. '```' → logprob: -8.167859077453613
    6. '
' → logprob: -8.292859077453613
    7. ' ac' → logprob: -8.292859077453613
    8. '           ' → logprob: -9.167859077453613
    9. '        
' → logprob: -9.542859077453613
    10. '	ac' → logprob: -10.042859077453613

Token 1948: ' saison' (ID: 38158)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.1445988565683365
    2. ')' → logprob: -2.144598960876465
    3. '#' → logprob: -5.144598960876465
    4. ' ac' → logprob: -6.019598960876465
    5. ')
' → logprob: -6.644598960876465
    6. '<|end|>' → logprob: -7.019598960876465
    7. '0' → logprob: -7.269598960876465
    8. 'w' → logprob: -7.269598960876465
    9. 'i' → logprob: -7.269598960876465
    10. '       ' → logprob: -7.394598960876465

Token 1949: ' word' (ID: 2195)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.2889890670776367
    2. '       ' → logprob: -1.4139890670776367
    3. ')' → logprob: -1.5389890670776367
    4. 'words' → logprob: -1.7889890670776367
    5. 's' → logprob: -2.5389890670776367
    6. '
' → logprob: -5.288989067077637
    7. 'for' → logprob: -6.038989067077637
    8. 'word' → logprob: -6.413989067077637
    9. '           ' → logprob: -6.538989067077637
    10. 'indices' → logprob: -6.663989067077637

Token 1950: ' index' (ID: 3472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039743658155202866
    2. ')' → logprob: -3.789743661880493
    3. 'ac' → logprob: -4.539743423461914
    4. ')
' → logprob: -6.164743423461914
    5. '           ' → logprob: -6.789743423461914
    6. '
' → logprob: -6.914743423461914
    7. '<|end|>' → logprob: -7.789743423461914
    8. '   ' → logprob: -8.039743423461914
    9. '```' → logprob: -8.664743423461914
    10. '        
' → logprob: -8.664743423461914

Token 1951: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038378480821847916
    2. '<|end|>' → logprob: -3.7883784770965576
    3. 'ac' → logprob: -5.288378715515137
    4. '           ' → logprob: -5.538378715515137
    5. ')' → logprob: -5.788378715515137
    6. '<|end|>' → logprob: -7.163378715515137
    7. '
' → logprob: -7.663378715515137
    8. '        
' → logprob: -7.663378715515137
    9. '   ' → logprob: -7.788378715515137
    10. '```' → logprob: -8.913378715515137

Token 1952: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. '0' → logprob: -11.125020027160645
    3. ' ' → logprob: -12.125020027160645
    4. '   ' → logprob: -17.12502098083496
    5. '           ' → logprob: -18.50002098083496
    6. '=' → logprob: -18.75002098083496
    7. '```' → logprob: -18.75002098083496
    8. 'def' → logprob: -19.12502098083496
    9. '#' → logprob: -19.87502098083496
    10. '
' → logprob: -20.00002098083496

Token 1953: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.20603168499656e-05
    2. '0' → logprob: -9.750061988830566
    3. ' ' → logprob: -12.750061988830566
    4. '```' → logprob: -15.375061988830566
    5. 'i' → logprob: -15.500061988830566
    6. '   ' → logprob: -16.125062942504883
    7. '
' → logprob: -16.875062942504883
    8. '=' → logprob: -17.375062942504883
    9. 'def' → logprob: -17.500062942504883
    10. '#' → logprob: -17.750062942504883

Token 1954: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061018891632556915
    2. 'ac' → logprob: -2.936018943786621
    3. '```' → logprob: -6.561018943786621
    4. '           ' → logprob: -6.686018943786621
    5. '<|end|>' → logprob: -6.686018943786621
    6. '   ' → logprob: -6.811018943786621
    7. ' ac' → logprob: -7.936018943786621
    8. '
' → logprob: -8.811018943786621
    9. '        
' → logprob: -8.936018943786621
    10. ' for' → logprob: -9.311018943786621

Token 1955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005196878220885992
    2. 'ac' → logprob: -5.630197048187256
    3. '           ' → logprob: -7.130197048187256
    4. ' ac' → logprob: -7.380197048187256
    5. '   ' → logprob: -9.130196571350098
    6. '```' → logprob: -10.630196571350098
    7. '
' → logprob: -11.130196571350098
    8. '	ac' → logprob: -12.005196571350098
    9. ' for' → logprob: -12.255196571350098
    10. 'for' → logprob: -12.505196571350098

Token 1956: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' (adapté à ' ac') → logprob: -0.5819141268730164
    2. '       ' → logprob: -0.8319141268730164
    3. '   ' → logprob: -5.581913948059082
    4. ' ac' → logprob: -6.206913948059082
    5. '```' → logprob: -9.081913948059082
    6. '	ac' → logprob: -10.456913948059082
    7. '           ' → logprob: -11.081913948059082
    8. '
' → logprob: -12.581913948059082
    9. '        
' → logprob: -13.206913948059082
    10. '(ac' → logprob: -13.206913948059082

Token 1957: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -2.816093228830141e-06
    2. 'build' → logprob: -13.12500286102295
    3. '.' → logprob: -15.12500286102295
    4. ' .' → logprob: -15.25000286102295
    5. '_build' → logprob: -15.87500286102295
    6. '	build' → logprob: -17.000001907348633
    7. ' build' → logprob: -17.125001907348633
    8. '```' → logprob: -17.125001907348633
    9. ').' → logprob: -18.125001907348633
    10. '(build' → logprob: -18.375001907348633

Token 1958: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022549335844814777
    2. '
' → logprob: -7.127254962921143
    3. '        
' → logprob: -7.377254962921143
    4. 'dp' → logprob: -7.377254962921143
    5. '```' → logprob: -9.127254486083984
    6. 'from' → logprob: -10.627254486083984
    7. ' dp' → logprob: -10.627254486083984
    8. 'DP' → logprob: -11.877254486083984
    9. '	dp' → logprob: -12.127254486083984
    10. '    
' → logprob: -12.502254486083984

Token 1959: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05191323533654213
    2. 'dp' → logprob: -3.051913261413574
    3. 'from' → logprob: -6.301913261413574
    4. '
' → logprob: -7.051913261413574
    5. '```' → logprob: -7.926913261413574
    6. '        
' → logprob: -9.301913261413574
    7. 'DP' → logprob: -10.176913261413574
    8. '   ' → logprob: -10.551913261413574
    9. 'size' → logprob: -10.551913261413574
    10. ' dp' → logprob: -10.551913261413574

Token 1960: ' word' (ID: 2195)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18932974338531494
    2. '       ' → logprob: -1.939329743385315
    3. 'from' → logprob: -3.5643296241760254
    4. 'DP' → logprob: -8.689330101013184
    5. '#' → logprob: -9.814330101013184
    6. ' dp' → logprob: -10.814330101013184
    7. 'max' → logprob: -10.814330101013184
    8. 'size' → logprob: -10.939330101013184
    9. '```' → logprob: -11.064330101013184
    10. '
' → logprob: -11.314330101013184

Token 1961: '_strings' (ID: 87251)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.28627464175224304
    2. '_id' → logprob: -1.9112746715545654
    3. '_count' → logprob: -3.0362746715545654
    4. '_ids' → logprob: -3.7862746715545654
    5. '_num' → logprob: -4.911274433135986
    6. '_lengths' → logprob: -5.036274433135986
    7. '_idx' → logprob: -5.161274433135986
    8. '_indices' → logprob: -6.036274433135986
    9. 's' → logprob: -6.161274433135986
    10. '_l' → logprob: -6.661274433135986

Token 1962: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3887616991996765
    2. ' =' → logprob: -1.2637617588043213
    3. '_ids' → logprob: -3.2637617588043213
    4. '_id' → logprob: -7.638761520385742
    5. '_indices' → logprob: -8.263761520385742
    6. '=[]' → logprob: -8.888761520385742
    7. 's' → logprob: -9.513761520385742
    8. '_idx' → logprob: -10.138761520385742
    9. '=[]
' → logprob: -10.263761520385742
    10. '_' → logprob: -10.388761520385742

Token 1963: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.07835115492343903
    2. ' words' → logprob: -3.0783512592315674
    3. '[' → logprob: -3.7033512592315674
    4. ' [' → logprob: -5.703351020812988
    5. '[word' → logprob: -7.578351020812988
    6. '(words' → logprob: -8.078351020812988
    7. '[]
' → logprob: -9.328351020812988
    8. '   ' → logprob: -9.828351020812988
    9. 'list' → logprob: -9.828351020812988
    10. '{' → logprob: -10.203351020812988

Token 1964: '
' (ID: 198)
  Prédit: '_ids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -0.3092823922634125
    2. ' =' → logprob: -1.4342824220657349
    3. '_id' → logprob: -4.809282302856445
    4. '=' → logprob: -5.184282302856445
    5. '_indices' → logprob: -5.184282302856445
    6. '
' → logprob: -5.684282302856445
    7. '       ' → logprob: -6.309282302856445
    8. '_idx' → logprob: -7.309282302856445
    9. '   ' → logprob: -8.309282302856445
    10. '_idxs' → logprob: -8.434282302856445

Token 1965: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3423004746437073
    2. 'word' → logprob: -1.3423004150390625
    3. 'dp' → logprob: -4.4673004150390625
    4. ' word' → logprob: -5.3423004150390625
    5. 'words' → logprob: -5.4673004150390625
    6. '
' → logprob: -6.0923004150390625
    7. '```' → logprob: -6.0923004150390625
    8. '#' → logprob: -6.9673004150390625
    9. 'adj' → logprob: -7.0923004150390625
    10. 'n' → logprob: -8.717300415039062

Token 1966: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07278242707252502
    2. 'word' → logprob: -3.822782516479492
    3. 'ac' → logprob: -4.447782516479492
    4. 'n' (adapté à ' n') → logprob: -4.572782516479492
    5. '       ' → logprob: -5.072782516479492
    6. 'size' → logprob: -5.197782516479492
    7. 'from' → logprob: -5.572782516479492
    8. 'num' → logprob: -5.947782516479492
    9. '#' → logprob: -6.072782516479492
    10. 'words' → logprob: -6.572782516479492

Token 1967: 'words' (ID: 10020)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41849252581596375
    2. '_words' → logprob: -1.1684925556182861
    3. '=' → logprob: -3.668492555618286
    4. 'um' → logprob: -6.043492317199707
    5. '   ' → logprob: -6.418492317199707
    6. '_word' → logprob: -7.543492317199707
    7. '
' → logprob: -8.543492317199707
    8. '       ' → logprob: -8.793492317199707
    9. '=len' → logprob: -9.043492317199707
    10. '     ' → logprob: -9.668492317199707

Token 1968: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20260323584079742
    2. ' =' → logprob: -1.7026032209396362
    3. '=len' → logprob: -7.202603340148926
    4. 't' → logprob: -8.077603340148926
    5. 'x' → logprob: -9.827603340148926
    6. ')' → logprob: -10.577603340148926
    7. '=int' → logprob: -11.327603340148926
    8. '_' → logprob: -11.577603340148926
    9. ',' → logprob: -12.077603340148926
    10. '=[]' → logprob: -12.577603340148926

Token 1969: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.941850526549388e-06
    2. ' len' → logprob: -11.750007629394531
    3. '[len' → logprob: -16.87500762939453
    4. '   ' → logprob: -17.75000762939453
    5. '(len' → logprob: -18.25000762939453
    6. '=len' → logprob: -19.12500762939453
    7. '	len' → logprob: -20.50000762939453
    8. 'n' → logprob: -21.62500762939453
    9. '       ' → logprob: -22.12500762939453
    10. ',len' → logprob: -22.50000762939453

Token 1970: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -0.47415226697921753
    2. '(word' → logprob: -0.9741522669792175
    3. 'words' → logprob: -9.849152565002441
    4. 'word' → logprob: -10.724152565002441
    5. '[word' → logprob: -15.599152565002441
    6. ' words' → logprob: -16.599151611328125
    7. '(' → logprob: -16.724151611328125
    8. '(world' → logprob: -16.974151611328125
    9. '(w' → logprob: -17.224151611328125
    10. ' word' → logprob: -17.599151611328125

Token 1971: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2995447814464569
    2. ')' → logprob: -1.6745448112487793
    3. '       ' → logprob: -2.6745448112487793
    4. '
' → logprob: -6.049544811248779
    5. '   ' → logprob: -9.424544334411621
    6. '```' → logprob: -10.674544334411621
    7. '        
' → logprob: -10.799544334411621
    8. ',
' → logprob: -12.674544334411621
    9. '           ' → logprob: -12.674544334411621
    10. ')
' → logprob: -12.799544334411621

Token 1972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010387713089585304
    2. '
' → logprob: -5.010387897491455
    3. 'dp' → logprob: -5.760387897491455
    4. '        
' → logprob: -8.010387420654297
    5. '```' → logprob: -9.635387420654297
    6. ' dp' → logprob: -10.010387420654297
    7. 'from' → logprob: -10.510387420654297
    8. '   ' → logprob: -11.260387420654297
    9. '    
' → logprob: -11.885387420654297
    10. 'DP' → logprob: -12.510387420654297

Token 1973: ' ac' (ID: 1375)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1594131588935852
    2. '       ' → logprob: -2.5344130992889404
    3. 'from' → logprob: -2.7844130992889404
    4. '
' → logprob: -5.4094133377075195
    5. 'ac' (adapté à ' ac') → logprob: -7.9094133377075195
    6. 'size' → logprob: -8.03441333770752
    7. 'import' → logprob: -8.28441333770752
    8. '#' → logprob: -8.78441333770752
    9. 'max' → logprob: -8.78441333770752
    10. 'DP' → logprob: -9.03441333770752

Token 1974: '_states' (ID: 53795)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.8359902501106262
    2. '_states' → logprob: -0.9609902501106262
    3. '_state' → logprob: -1.7109901905059814
    4. 'size' → logprob: -6.8359904289245605
    5. '_sizes' → logprob: -6.8359904289245605
    6. '_next' → logprob: -7.3359904289245605
    7. ' =' → logprob: -9.210989952087402
    8. 'state' → logprob: -9.460989952087402
    9. '_sz' → logprob: -9.585989952087402
    10. '=' → logprob: -9.835989952087402

Token 1975: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14294323325157166
    2. '=' → logprob: -2.0179431438446045
    3. '=[' → logprob: -9.392943382263184
    4. '=[]' → logprob: -10.017943382263184
    5. '=len' → logprob: -10.392943382263184
    6. ')' → logprob: -10.392943382263184
    7. '   ' → logprob: -10.392943382263184
    8. '=[]
' → logprob: -11.642943382263184
    9. ',' → logprob: -11.892943382263184
    10. '=int' → logprob: -12.017943382263184

Token 1976: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00010556964843999594
    2. ' len' → logprob: -9.250105857849121
    3. '[len' → logprob: -12.125105857849121
    4. '   ' → logprob: -13.500105857849121
    5. '[' → logprob: -13.875105857849121
    6. '1' → logprob: -14.000105857849121
    7. '(len' → logprob: -14.375105857849121
    8. '0' → logprob: -16.125104904174805
    9. 'sum' → logprob: -16.375104904174805
    10. 'ac' → logprob: -17.125104904174805

Token 1977: '(ac' (ID: 95204)
  Prédit: '(ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ac' → logprob: -3.173704271830502e-06
    2. '(word' → logprob: -13.25000286102295
    3. 'ac' → logprob: -13.87500286102295
    4. '(words' → logprob: -16.000003814697266
    5. '(next' → logprob: -16.250003814697266
    6. '(' → logprob: -16.250003814697266
    7. '(
' → logprob: -18.125003814697266
    8. '	ac' → logprob: -18.250003814697266
    9. '(a' → logprob: -19.250003814697266
    10. '
' → logprob: -19.250003814697266

Token 1978: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0007113590254448354
    2. 'next' → logprob: -7.250711441040039
    3. '.fail' → logprob: -14.625711441040039
    4. ' next' → logprob: -15.375711441040039
    5. '.state' → logprob: -15.375711441040039
    6. '.states' → logprob: -15.875711441040039
    7. '_next' → logprob: -16.37571144104004
    8. ' .' → logprob: -16.62571144104004
    9. '[next' → logprob: -16.62571144104004
    10. '.' → logprob: -16.75071144104004

Token 1979: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023405285901390016
    2. ')
' → logprob: -8.87523365020752
    3. '[' → logprob: -10.00023365020752
    4. '<|end|>' → logprob: -10.87523365020752
    5. '   ' → logprob: -11.62523365020752
    6. ' )' → logprob: -12.37523365020752
    7. '       ' → logprob: -12.87523365020752
    8. '<|end|>' → logprob: -13.00023365020752
    9. '])' → logprob: -13.12523365020752
    10. '))' → logprob: -13.62523365020752

Token 1980: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020154789090156555
    2. '
' → logprob: -7.377015590667725
    3. 'dp' → logprob: -7.377015590667725
    4. '```' → logprob: -7.377015590667725
    5. '        
' → logprob: -9.377015113830566
    6. 'from' → logprob: -11.002015113830566
    7. ' dp' → logprob: -11.377015113830566
    8. 'DP' → logprob: -11.877015113830566
    9. '`' → logprob: -12.127015113830566
    10. '   ' → logprob: -12.752015113830566

Token 1981: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39854896068573
    2. 'from' → logprob: -1.14854896068573
    3. 'dp' → logprob: -5.3985490798950195
    4. 'import' → logprob: -5.3985490798950195
    5. '
' → logprob: -6.0235490798950195
    6. ' from' → logprob: -9.39854907989502
    7. '```' → logprob: -9.89854907989502
    8. '        
' → logprob: -12.39854907989502
    9. '``' → logprob: -13.39854907989502
    10. '   ' → logprob: -13.52354907989502

Token 1982: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44600924849510193
    2. 'from' → logprob: -1.1960092782974243
    3. 'dp' → logprob: -2.9460091590881348
    4. 'import' → logprob: -5.446009159088135
    5. ' from' → logprob: -7.821009159088135
    6. '```' → logprob: -9.571009635925293
    7. '
' → logprob: -10.071009635925293
    8. '   ' → logprob: -10.821009635925293
    9. ' dp' → logprob: -11.446009635925293
    10. 'DP' → logprob: -11.696009635925293

Token 1983: ' pre' (ID: 876)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6921803951263428
    2. '       ' → logprob: -1.3171803951263428
    3. 'from' → logprob: -2.0671803951263428
    4. 'import' → logprob: -2.3171803951263428
    5. '#' → logprob: -5.692180633544922
    6. '
' → logprob: -6.817180633544922
    7. 'def' → logprob: -6.942180633544922
    8. '   ' → logprob: -7.442180633544922
    9. '=' → logprob: -9.317180633544922
    10. 'max' → logprob: -10.192180633544922

Token 1984: 'compute' (ID: 54521)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -1.2466678619384766
    2. 'cal' → logprob: -1.7466678619384766
    3. 'compute' → logprob: -1.7466678619384766
    4. 'calcul' → logprob: -2.2466678619384766
    5. 'comput' → logprob: -2.2466678619384766
    6. 'c' → logprob: -2.7466678619384766
    7. 'computed' → logprob: -4.121667861938477
    8. 'rem' → logprob: -4.496667861938477
    9. 'comp' → logprob: -4.871667861938477
    10. '-cal' → logprob: -5.121667861938477

Token 1985: ' pour' (ID: 1930)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.1680134534835815
    2. '       ' → logprob: -1.6680134534835815
    3. '#' → logprob: -1.9180134534835815
    4. 'trans' → logprob: -2.418013572692871
    5. 'dp' → logprob: -2.793013572692871
    6. 'word' → logprob: -3.293013572692871
    7. 'transition' → logprob: -3.543013572692871
    8. ' next' → logprob: -3.793013572692871
    9. 'for' → logprob: -3.793013572692871
    10. 'max' → logprob: -4.043013572692871

Token 1986: ' chaque' (ID: 21194)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.3627934753894806
    2. ' chaque' → logprob: -2.112793445587158
    3. 'i' → logprob: -2.237793445587158
    4. ' each' → logprob: -3.237793445587158
    5. 'ch' → logprob: -4.362793445587158
    6. 'word' → logprob: -5.237793445587158
    7. ' i' → logprob: -5.362793445587158
    8. '_each' → logprob: -5.737793445587158
    9. 'w' → logprob: -5.862793445587158
    10. 'adj' → logprob: -6.112793445587158

Token 1987: ' mot' (ID: 3598)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.384060263633728
    2. 'w' → logprob: -1.259060263633728
    3. 'i' → logprob: -3.8840603828430176
    4. ' word' → logprob: -4.884060382843018
    5. 'adj' → logprob: -6.009060382843018
    6. ' w' → logprob: -6.759060382843018
    7. 'u' → logprob: -7.009060382843018
    8. 'v' → logprob: -7.134060382843018
    9. 'idx' → logprob: -7.884060382843018
    10. 'id' → logprob: -8.50905990600586

Token 1988: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0121679306030273
    2. 'word' → logprob: -1.6371679306030273
    3. '   ' → logprob: -2.2621679306030273
    4. 'for' → logprob: -2.7621679306030273
    5. 'next' → logprob: -3.1371679306030273
    6. '
' → logprob: -3.2621679306030273
    7. '#' → logprob: -3.5121679306030273
    8. 'pre' → logprob: -3.7621679306030273
    9. ' next' → logprob: -4.637167930603027
    10. '[' → logprob: -4.637167930603027

Token 1989: ' état' (ID: 59181)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5980334877967834
    2. 'c' → logprob: -1.3480334281921387
    3. 'ac' → logprob: -1.9730334281921387
    4. 'each' → logprob: -3.9730334281921387
    5. 'ch' → logprob: -4.473033428192139
    6. 'for' → logprob: -5.098033428192139
    7. ' each' → logprob: -5.348033428192139
    8. 'char' → logprob: -6.223033428192139
    9. ' c' → logprob: -6.348033428192139
    10. ' for' → logprob: -6.473033428192139

Token 1990: ' ac' (ID: 1375)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3795970380306244
    2. '   ' → logprob: -2.6295969486236572
    3. ',' → logprob: -2.7545969486236572
    4. 'ac' → logprob: -3.2545969486236572
    5. ' ac' → logprob: -3.6295969486236572
    6. ' of' → logprob: -3.6295969486236572
    7. ' de' → logprob: -4.004597187042236
    8. ' in' → logprob: -4.754597187042236
    9. '#' → logprob: -5.254597187042236
    10. ' for' → logprob: -5.379597187042236

Token 1991: '_state' (ID: 9479)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6414424777030945
    2. '   ' → logprob: -2.2664425373077393
    3. ' for' → logprob: -2.6414425373077393
    4. 'for' → logprob: -3.0164425373077393
    5. ' in' → logprob: -3.3914425373077393
    6. 'state' → logprob: -3.3914425373077393
    7. ',' → logprob: -3.6414425373077393
    8. ' ac' → logprob: -3.8914425373077393
    9. 'ac' → logprob: -4.14144229888916
    10. ' _' → logprob: -4.64144229888916

Token 1992: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04269219934940338
    2. ',' → logprob: -4.292692184448242
    3. ':' → logprob: -4.667692184448242
    4. ' next' → logprob: -5.292692184448242
    5. 'next' → logprob: -6.042692184448242
    6. ':
' → logprob: -6.542692184448242
    7. '   ' → logprob: -6.792692184448242
    8. '[next' → logprob: -6.792692184448242
    9. ' the' → logprob: -7.042692184448242
    10. '        
' → logprob: -7.167692184448242

Token 1993: ' l' (ID: 305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6655538082122803
    2. ' for' → logprob: -1.1655538082122803
    3. 'for' → logprob: -2.1655538082122803
    4. ' next' → logprob: -3.2905538082122803
    5. 'next' → logprob: -5.165554046630859
    6. ' pre' → logprob: -5.290554046630859
    7. 'pre' → logprob: -6.665554046630859
    8. ' dp' → logprob: -6.665554046630859
    9. ' nxt' → logprob: -7.165554046630859
    10. '#' → logprob: -7.290554046630859

Token 1994: ''et' (ID: 88821)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4896622598171234
    2. 'next' → logprob: -1.1146622896194458
    3. 'ext' → logprob: -4.614662170410156
    4. ' transitions' → logprob: -5.239662170410156
    5. ' for' → logprob: -5.489662170410156
    6. '#' → logprob: -5.489662170410156
    7. 'trans' → logprob: -5.614662170410156
    8. ' next' → logprob: -5.614662170410156
    9. 'transition' → logprob: -5.864662170410156
    10. 'computed' → logprob: -5.989662170410156

Token 1995: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.13058435916900635
    2. 'ats' → logprob: -2.505584239959717
    3. 'next' → logprob: -5.005584239959717
    4. '#' → logprob: -5.130584239959717
    5. 'd' → logprob: -5.255584239959717
    6. 't' → logprob: -5.255584239959717
    7. 'xt' → logprob: -5.630584239959717
    8. 'ac' → logprob: -5.630584239959717
    9. 'tat' → logprob: -6.255584239959717
    10. 'st' → logprob: -6.505584239959717

Token 1996: ' ac' (ID: 1375)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.9113378524780273
    2. '_s' → logprob: -1.4113378524780273
    3. 's' → logprob: -1.5363378524780273
    4. 'next' → logprob: -3.2863378524780273
    5. '_next' → logprob: -3.4113378524780273
    6. '   ' → logprob: -3.6613378524780273
    7. '       ' → logprob: -4.161337852478027
    8. ' suivant' → logprob: -4.911337852478027
    9. '_transition' → logprob: -5.536337852478027
    10. ' =' → logprob: -5.911337852478027

Token 1997: ' apres' (ID: 104102)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.07181366533041
    2. '       ' → logprob: -3.3218135833740234
    3. '_transition' → logprob: -3.8218135833740234
    4. 'next' → logprob: -5.571813583374023
    5. '_' → logprob: -6.446813583374023
    6. '           ' → logprob: -6.946813583374023
    7. '[next' → logprob: -7.071813583374023
    8. '   ' → logprob: -7.071813583374023
    9. 's' → logprob: -7.196813583374023
    10. ' =' → logprob: -7.446813583374023

Token 1998: ' lecture' (ID: 31993)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2293481826782227
    2. 'range' → logprob: -1.3543481826782227
    3. '   ' → logprob: -1.7293481826782227
    4. 'word' → logprob: -2.8543481826782227
    5. 'ac' → logprob: -3.1043481826782227
    6. 'processing' → logprob: -3.6043481826782227
    7. 'c' → logprob: -4.354348182678223
    8. '#' → logprob: -4.354348182678223
    9. 'adj' → logprob: -4.479348182678223
    10. 'next' → logprob: -4.729348182678223

Token 1999: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07212481647729874
    2. 'for' → logprob: -3.447124719619751
    3. '   ' → logprob: -5.44712495803833
    4. ' =' → logprob: -5.57212495803833
    5. ' for' → logprob: -5.57212495803833
    6. ' of' → logprob: -5.69712495803833
    7. 'de' → logprob: -5.82212495803833
    8. '#' → logprob: -6.19712495803833
    9. 'of' → logprob: -6.44712495803833
    10. '           ' → logprob: -6.44712495803833

Token 2000: ' ce' (ID: 2357)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.21501730382442474
    2. 'words' → logprob: -1.840017318725586
    3. 'w' → logprob: -3.465017318725586
    4. 'c' → logprob: -7.215017318725586
    5. 's' → logprob: -7.340017318725586
    6. ' word' → logprob: -7.465017318725586
    7. 'the' → logprob: -8.340017318725586
    8. ' words' → logprob: -8.590017318725586
    9. '   ' → logprob: -8.715017318725586
    10. 'i' → logprob: -9.215017318725586

Token 2001: ' mot' (ID: 3598)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.8442919850349426
    2. ' word' → logprob: -1.2192919254302979
    3. 'w' → logprob: -2.594291925430298
    4. '_' → logprob: -3.344291925430298
    5. '   ' → logprob: -3.469291925430298
    6. '       ' → logprob: -4.094292163848877
    7. ' w' → logprob: -4.094292163848877
    8. '[' → logprob: -4.219292163848877
    9. ']' → logprob: -4.469292163848877
    10. 'for' → logprob: -4.844292163848877

Token 2002: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015293825417757034
    2. '
' → logprob: -7.501529216766357
    3. ',' → logprob: -8.126529693603516
    4. 'pre' → logprob: -8.376529693603516
    5. 'dp' → logprob: -9.501529693603516
    6. ' pre' → logprob: -10.001529693603516
    7. '`' → logprob: -10.126529693603516
    8. '        
' → logprob: -10.376529693603516
    9. '#' → logprob: -10.626529693603516
    10. ' =' → logprob: -10.626529693603516

Token 2003: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031520487391389906
    2. '
' → logprob: -8.62531566619873
    3. 'pre' → logprob: -10.37531566619873
    4. 'for' → logprob: -10.87531566619873
    5. ',' → logprob: -11.00031566619873
    6. '```' → logprob: -11.12531566619873
    7. '   ' → logprob: -11.50031566619873
    8. '        
' → logprob: -11.50031566619873
    9. '`' → logprob: -11.75031566619873
    10. 'dp' → logprob: -12.00031566619873

Token 2004: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05816129967570305
    2. 'pre' → logprob: -3.9331612586975098
    3. '   ' → logprob: -4.18316125869751
    4. 'for' → logprob: -5.05816125869751
    5. 'word' → logprob: -5.55816125869751
    6. 'dp' → logprob: -5.80816125869751
    7. 'trans' → logprob: -6.18316125869751
    8. '
' → logprob: -6.18316125869751
    9. 'next' → logprob: -6.30816125869751
    10. 'ac' → logprob: -7.43316125869751

Token 2005: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7270722985267639
    2. 'dp' → logprob: -1.7270722389221191
    3. '   ' → logprob: -2.227072238922119
    4. 'word' → logprob: -2.852072238922119
    5. 'pre' → logprob: -2.852072238922119
    6. 'ac' → logprob: -2.977072238922119
    7. 'trans' → logprob: -4.102072238922119
    8. 'next' → logprob: -4.227072238922119
    9. 'read' → logprob: -4.477072238922119
    10. 'prefix' → logprob: -4.727072238922119

Token 2006: ' aussi' (ID: 9894)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.0016788244247437
    2. '       ' → logprob: -1.8766788244247437
    3. '#' → logprob: -2.126678943634033
    4. 'occ' → logprob: -3.001678943634033
    5. 'outputs' → logprob: -3.001678943634033
    6. 'output' → logprob: -3.126678943634033
    7. 'for' → logprob: -3.376678943634033
    8. 'le' → logprob: -3.501678943634033
    9. 'la' → logprob: -3.626678943634033
    10. 'l' → logprob: -4.001678943634033

Token 2007: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1613823175430298
    2. 'les' → logprob: -1.2863823175430298
    3. '#' → logprob: -2.1613821983337402
    4. 'le' → logprob: -2.5363821983337402
    5. 'la' → logprob: -3.6613821983337402
    6. 'the' → logprob: -3.7863821983337402
    7. 'occ' → logprob: -3.9113821983337402
    8. 'count' → logprob: -3.9113821983337402
    9. '   ' → logprob: -4.03638219833374
    10. 'for' → logprob: -4.16138219833374

Token 2008: ' liste' (ID: 31719)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.8973745703697205
    2. 'count' → logprob: -1.8973746299743652
    3. 'length' → logprob: -2.3973746299743652
    4. 'outputs' → logprob: -2.3973746299743652
    5. 'len' → logprob: -2.6473746299743652
    6. 'occ' → logprob: -3.0223746299743652
    7. 'matches' → logprob: -3.3973746299743652
    8. 'out' → logprob: -4.272374629974365
    9. 'matched' → logprob: -4.397374629974365
    10. 'match' → logprob: -4.647374629974365

Token 2009: ' des' (ID: 731)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.2743443250656128
    2. 'for' → logprob: -1.2743443250656128
    3. ' of' → logprob: -1.7743443250656128
    4. '#' → logprob: -3.3993444442749023
    5. '       ' → logprob: -3.5243444442749023
    6. '_of' → logprob: -3.7743444442749023
    7. ' for' → logprob: -3.8993444442749023
    8. 'des' → logprob: -4.274344444274902
    9. 'de' → logprob: -4.274344444274902
    10. 'ac' → logprob: -4.524344444274902

Token 2010: ' saison' (ID: 38158)
  Prédit: 'outputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outputs' → logprob: -0.3841264545917511
    2. 'output' → logprob: -3.0091264247894287
    3. 'occ' → logprob: -3.0091264247894287
    4. 'found' → logprob: -3.2591264247894287
    5. 'patterns' → logprob: -3.2591264247894287
    6. 'season' → logprob: -3.8841264247894287
    7. '#' → logprob: -4.009126663208008
    8. 'matched' → logprob: -4.009126663208008
    9. 'matches' → logprob: -4.134126663208008
    10. 'se' → logprob: -4.259126663208008

Token 2011: ' words' (ID: 6391)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.12099487334489822
    2. 'words' → logprob: -2.995994806289673
    3. 'found' → logprob: -3.620994806289673
    4. '_detect' → logprob: -4.245995044708252
    5. 'word' → logprob: -5.620995044708252
    6. 'states' → logprob: -6.120995044708252
    7. '_' → logprob: -6.120995044708252
    8. '_words' → logprob: -6.120995044708252
    9. '_word' → logprob: -6.370995044708252
    10. 'matches' → logprob: -6.495995044708252

Token 2012: ' rencontr' (ID: 49751)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.3989622592926025
    2. 'dp' → logprob: -1.3989622592926025
    3. 'ac' → logprob: -2.0239622592926025
    4. 'trans' → logprob: -2.5239622592926025
    5. 'states' → logprob: -2.8989622592926025
    6. 'next' → logprob: -3.2739622592926025
    7. '```' → logprob: -3.6489622592926025
    8. 'word' → logprob: -3.6489622592926025
    9. '#' → logprob: -4.023962020874023
    10. '``' → logprob: -4.773962020874023

Token 2013: 'ées' (ID: 5161)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4284512996673584
    2. 'ed' → logprob: -1.5534512996673584
    3. ' =' → logprob: -1.6784512996673584
    4. '[
' → logprob: -2.8034512996673584
    5. '][' → logprob: -3.6784512996673584
    6. '[' → logprob: -3.9284512996673584
    7. '_for' → logprob: -4.0534515380859375
    8. '_states' → logprob: -4.0534515380859375
    9. '_' → logprob: -4.1784515380859375
    10. ']' → logprob: -4.3034515380859375

Token 2014: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30256256461143494
    2. 'dp' → logprob: -2.5525624752044678
    3. 'next' → logprob: -3.3025624752044678
    4. 'word' → logprob: -3.5525624752044678
    5. 'pre' → logprob: -3.8025624752044678
    6. 'trans' → logprob: -3.8025624752044678
    7. '   ' → logprob: -3.9275624752044678
    8. 'ac' → logprob: -4.427562713623047
    9. '
' → logprob: -4.552562713623047
    10. 'read' → logprob: -5.052562713623047

Token 2015: 'set' (ID: 977)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.8011268377304077
    2. '
' → logprob: -1.9261268377304077
    3. 'for' → logprob: -1.9261268377304077
    4. ')' → logprob: -2.4261269569396973
    5. ']
' → logprob: -3.6761269569396973
    6. 'ac' → logprob: -3.6761269569396973
    7. ']' → logprob: -4.051126956939697
    8. '#' → logprob: -4.176126956939697
    9. '][' → logprob: -4.301126956939697
    10. '[]
' → logprob: -4.426126956939697

Token 2016: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0424468517303467
    2. 's' → logprob: -1.6674468517303467
    3. ')
' → logprob: -2.0424468517303467
    4. '_states' → logprob: -2.2924468517303467
    5. '
' → logprob: -3.1674468517303467
    6. '_ac' → logprob: -3.5424468517303467
    7. '```' → logprob: -3.9174468517303467
    8. '):
' → logprob: -4.292447090148926
    9. 'ac' → logprob: -4.667447090148926
    10. 'states' → logprob: -4.667447090148926

Token 2017: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007062619552016258
    2. '
' → logprob: -5.3820624351501465
    3. 'pre' → logprob: -6.8820624351501465
    4. 'next' → logprob: -7.7570624351501465
    5. 'word' → logprob: -8.257062911987305
    6. '   ' → logprob: -8.882062911987305
    7. '#' → logprob: -9.007062911987305
    8. 'dp' → logprob: -9.007062911987305
    9. 'for' → logprob: -9.382062911987305
    10. '        
' → logprob: -9.882062911987305

Token 2018: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7110008001327515
    2. 'word' → logprob: -2.211000919342041
    3. '   ' → logprob: -2.336000919342041
    4. 'trans' → logprob: -2.586000919342041
    5. 'pre' → logprob: -2.711000919342041
    6. 'ac' → logprob: -2.836000919342041
    7. 'next' → logprob: -3.336000919342041
    8. 'read' → logprob: -3.461000919342041
    9. 'mot' → logprob: -4.711000919342041
    10. 'state' → logprob: -4.961000919342041

Token 2019: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044037315994501114
    2. 'dp' → logprob: -4.544037342071533
    3. 'pre' → logprob: -4.544037342071533
    4. '   ' → logprob: -4.669037342071533
    5. '
' → logprob: -5.419037342071533
    6. 'next' → logprob: -6.169037342071533
    7. '#' → logprob: -6.294037342071533
    8. 'word' → logprob: -6.794037342071533
    9. 'trans' → logprob: -7.294037342071533
    10. 'read' → logprob: -7.669037342071533

Token 2020: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.14961792528629303
    2. 'for' → logprob: -2.524617910385132
    3. '=' → logprob: -4.399618148803711
    4. '#' → logprob: -4.774618148803711
    5. '       ' → logprob: -4.774618148803711
    6. '_pre' → logprob: -4.899618148803711
    7. 'word' → logprob: -5.649618148803711
    8. '
' → logprob: -6.149618148803711
    9. 'state' → logprob: -6.149618148803711
    10. ' pre' → logprob: -6.274618148803711

Token 2021: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0004444931691978127
    2. 'computed' → logprob: -7.750444412231445
    3. 'calculate' → logprob: -13.125444412231445
    4. ' compute' → logprob: -13.500444412231445
    5. 'c' → logprob: -13.625444412231445
    6. '#' → logprob: -13.625444412231445
    7. '_compute' → logprob: -13.625444412231445
    8. 'dict' → logprob: -13.750444412231445
    9. 'comput' → logprob: -13.875444412231445
    10. '```' → logprob: -14.750444412231445

Token 2022: ' la' (ID: 557)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.006064772605896
    2. '=' → logprob: -1.756064772605896
    3. 'pre' → logprob: -1.756064772605896
    4. 'dp' → logprob: -2.6310648918151855
    5. 'word' → logprob: -3.6310648918151855
    6. '       ' → logprob: -3.8810648918151855
    7. 'for' → logprob: -4.0060648918151855
    8. 'trans' → logprob: -4.2560648918151855
    9. ' pre' → logprob: -4.5060648918151855
    10. '   ' → logprob: -4.5060648918151855

Token 2023: ' transition' (ID: 14463)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -1.0025118589401245
    2. 'next' → logprob: -1.3775118589401245
    3. 'dp' → logprob: -1.6275118589401245
    4. 'ac' → logprob: -2.877511978149414
    5. 'read' → logprob: -3.752511978149414
    6. 'transition' → logprob: -3.877511978149414
    7. '#' → logprob: -4.127511978149414
    8. 'for' → logprob: -4.377511978149414
    9. 'word' → logprob: -4.377511978149414
    10. 'def' → logprob: -4.627511978149414

Token 2024: ' ac' (ID: 1375)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.8142694234848022
    2. 'for' → logprob: -1.5642694234848022
    3. 'pre' → logprob: -1.8142694234848022
    4. ' =' → logprob: -3.189269542694092
    5. 'ac' → logprob: -3.564269542694092
    6. 'dp' → logprob: -3.939269542694092
    7. '=' → logprob: -4.189269542694092
    8. 'word' → logprob: -4.189269542694092
    9. '   ' → logprob: -4.564269542694092
    10. 'next' → logprob: -4.814269542694092

Token 2025: ' sur' (ID: 1512)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.468790054321289
    2. 'trans' → logprob: -1.593790054321289
    3. '_states' → logprob: -1.593790054321289
    4. '_state' → logprob: -2.093790054321289
    5. '_trans' → logprob: -2.218790054321289
    6. ' =' → logprob: -3.218790054321289
    7. 'states' → logprob: -3.593790054321289
    8. '_next' → logprob: -3.593790054321289
    9. 'for' → logprob: -4.218790054321289
    10. 'next' → logprob: -5.593790054321289

Token 2026: ' un' (ID: 537)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.2884233891963959
    2. 'range' → logprob: -1.7884234189987183
    3. 'w' → logprob: -3.0384232997894287
    4. 'each' → logprob: -4.038423538208008
    5. 'words' → logprob: -4.163423538208008
    6. 's' → logprob: -7.538423538208008
    7. ' range' → logprob: -7.788423538208008
    8. 'ws' → logprob: -8.413423538208008
    9. ' word' → logprob: -8.413423538208008
    10. 'all' → logprob: -8.538423538208008

Token 2027: ' mot' (ID: 3598)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.1031537875533104
    2. 'word' → logprob: -2.603153705596924
    3. ' mot' → logprob: -3.853153705596924
    4. 'w' → logprob: -6.603153705596924
    5. 'for' → logprob: -7.728153705596924
    6. ' word' → logprob: -7.728153705596924
    7. 'range' → logprob: -8.728154182434082
    8. 'm' → logprob: -9.478154182434082
    9. 'def' → logprob: -9.603154182434082
    10. 'i' → logprob: -10.478154182434082

Token 2028: ' entier' (ID: 80473)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1680498123168945
    2. 'trans' → logprob: -1.6680498123168945
    3. '=' → logprob: -2.1680498123168945
    4. '_trans' → logprob: -2.4180498123168945
    5. '
' → logprob: -2.5430498123168945
    6. '_pre' → logprob: -3.4180498123168945
    7. 'pre' → logprob: -3.4180498123168945
    8. 'for' → logprob: -3.7930498123168945
    9. '=
' → logprob: -4.0430498123168945
    10. 'word' → logprob: -4.4180498123168945

Token 2029: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9877966642379761
    2. 'trans' → logprob: -1.862796664237976
    3. 'pre' → logprob: -1.987796664237976
    4. 'word' → logprob: -2.1127967834472656
    5. '   ' → logprob: -2.2377967834472656
    6. 'dp' → logprob: -3.7377967834472656
    7. 'ac' → logprob: -3.7377967834472656
    8. 'for' → logprob: -3.8627967834472656
    9. '
' → logprob: -4.487796783447266
    10. 'next' → logprob: -4.987796783447266

Token 2030: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3833974599838257
    2. 'pre' → logprob: -1.3833974599838257
    3. 'trans' → logprob: -1.5083974599838257
    4. 'dp' → logprob: -2.5083975791931152
    5. 'for' → logprob: -3.0083975791931152
    6. '   ' → logprob: -3.1333975791931152
    7. '
' → logprob: -3.2583975791931152
    8. 'word' → logprob: -3.7583975791931152
    9. 'ac' → logprob: -4.383397579193115
    10. 'transition' → logprob: -5.383397579193115

Token 2031: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0826106071472168
    2. 'trans' → logprob: -1.2076106071472168
    3. 'pre' → logprob: -2.207610607147217
    4. 'dp' → logprob: -2.832610607147217
    5. 'ac' → logprob: -3.082610607147217
    6. '   ' → logprob: -3.207610607147217
    7. '
' → logprob: -3.332610607147217
    8. 'for' → logprob: -3.582610607147217
    9. 'word' → logprob: -4.582610607147217
    10. 'next' → logprob: -4.582610607147217

Token 2032: ' pour' (ID: 1930)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -1.072678804397583
    2. 'dp' → logprob: -1.322678804397583
    3. 'ac' → logprob: -1.822678804397583
    4. '   ' → logprob: -2.447678804397583
    5. 'pre' → logprob: -3.072678804397583
    6. 'word' → logprob: -3.072678804397583
    7. '       ' → logprob: -3.947678804397583
    8. '
' → logprob: -4.697678565979004
    9. 'next' → logprob: -5.197678565979004
    10. 'transition' → logprob: -5.447678565979004

Token 2033: ' chaque' (ID: 21194)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5565241575241089
    2. 'word' → logprob: -1.0565241575241089
    3. 'state' → logprob: -3.4315242767333984
    4. 'i' → logprob: -4.056524276733398
    5. ' word' → logprob: -4.431524276733398
    6. ' w' → logprob: -4.681524276733398
    7. 'idx' → logprob: -6.306524276733398
    8. 'wi' → logprob: -6.681524276733398
    9. ' state' → logprob: -6.931524276733398
    10. '
' → logprob: -7.056524276733398

Token 2034: ' état' (ID: 59181)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.47927653789520264
    2. 'w' → logprob: -1.2292765378952026
    3. 'state' → logprob: -2.729276657104492
    4. ' word' → logprob: -4.229276657104492
    5. ' w' → logprob: -5.729276657104492
    6. 'i' → logprob: -6.354276657104492
    7. 'idx' → logprob: -6.604276657104492
    8. ' state' → logprob: -7.229276657104492
    9. 'ac' → logprob: -7.229276657104492
    10. 'id' → logprob: -9.104276657104492

Token 2035: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.24527119100093842
    2. 'in' → logprob: -1.8702712059020996
    3. ' in' → logprob: -3.2452712059020996
    4. 'state' → logprob: -4.1202712059021
    5. ' ac' → logprob: -5.9952712059021
    6. 'i' → logprob: -6.6202712059021
    7. 'range' → logprob: -7.1202712059021
    8. 's' → logprob: -7.2452712059021
    9. '0' → logprob: -7.4952712059021
    10. ',' → logprob: -7.7452712059021

Token 2036: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.4555634558200836
    2. '_' → logprob: -1.3305634260177612
    3. 'state' → logprob: -2.955563545227051
    4. '_states' → logprob: -4.205563545227051
    5. '_
' → logprob: -5.580563545227051
    6. 't' → logprob: -5.580563545227051
    7. '   ' → logprob: -5.955563545227051
    8. 'for' → logprob: -5.955563545227051
    9. '_,' → logprob: -6.080563545227051
    10. ' =' → logprob: -6.330563545227051

Token 2037: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.133352518081665
    2. ':
' → logprob: -1.133352518081665
    3. 'for' → logprob: -1.508352518081665
    4. ',' → logprob: -3.383352518081665
    5. '
' → logprob: -3.633352518081665
    6. ':' → logprob: -4.383352279663086
    7. '```' → logprob: -4.508352279663086
    8. ' for' → logprob: -4.633352279663086
    9. ',
' → logprob: -4.758352279663086
    10. '   ' → logprob: -5.258352279663086

Token 2038: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015292330645024776
    2. ' for' → logprob: -5.015292167663574
    3. 'for' → logprob: -5.140292167663574
    4. '           ' → logprob: -6.140292167663574
    5. '```' → logprob: -7.890292167663574
    6. '   ' → logprob: -9.140292167663574
    7. '               ' → logprob: -11.515292167663574
    8. ',' → logprob: -12.265292167663574
    9. '``' → logprob: -12.265292167663574
    10. '
' → logprob: -12.265292167663574

Token 2039: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35492822527885437
    2. 'for' → logprob: -1.6049282550811768
    3. ' for' → logprob: -2.4799282550811768
    4. 'next' → logprob: -5.729928016662598
    5. ' next' → logprob: -6.104928016662598
    6. '   ' → logprob: -6.229928016662598
    7. '```' → logprob: -6.604928016662598
    8. 'prev' → logprob: -7.104928016662598
    9. 'trans' → logprob: -7.354928016662598
    10. 'word' → logprob: -7.354928016662598

Token 2040: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35959509015083313
    2. '       ' → logprob: -1.4845950603485107
    3. 'range' → logprob: -3.1095950603485107
    4. '   ' → logprob: -4.10959529876709
    5. ' for' → logprob: -4.98459529876709
    6. ' range' → logprob: -6.48459529876709
    7. 'ac' → logprob: -6.73459529876709
    8. '#' → logprob: -6.98459529876709
    9. 'word' → logprob: -6.98459529876709
    10. '
' → logprob: -7.10959529876709

Token 2041: ' marche' (ID: 58191)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6198372840881348
    2. '       ' → logprob: -1.2448372840881348
    3. '           ' → logprob: -3.4948372840881348
    4. '=' → logprob: -3.7448372840881348
    5. 'cur' → logprob: -3.9948372840881348
    6. '   ' → logprob: -4.494837284088135
    7. ' for' → logprob: -4.494837284088135
    8. ' =' → logprob: -4.494837284088135
    9. 'state' → logprob: -4.619837284088135
    10. 'pre' → logprob: -4.994837284088135

Token 2042: ' caract' (ID: 36343)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2153171300888062
    2. '       ' → logprob: -1.5903171300888062
    3. '           ' → logprob: -1.9653171300888062
    4. 'through' → logprob: -2.7153172492980957
    5. '   ' → logprob: -2.9653172492980957
    6. '               ' → logprob: -3.0903172492980957
    7. 'ac' → logprob: -3.4653172492980957
    8. ' through' → logprob: -3.5903172492980957
    9. '                   ' → logprob: -3.7153172492980957
    10. 'sur' → logprob: -3.8403172492980957

Token 2043: 'ere' (ID: 512)
  Prédit: 'ère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.06423873454332352
    2. 'ere' → logprob: -2.9392387866973877
    3. 'er' → logprob: -5.689238548278809
    4. 'e' → logprob: -6.439238548278809
    5. '   ' → logprob: -6.689238548278809
    6. '
' → logprob: -6.814238548278809
    7. '```' → logprob: -8.064238548278809
    8. 'ères' → logprob: -8.439238548278809
    9. '#' → logprob: -8.564238548278809
    10. '{
' → logprob: -8.689238548278809

Token 2044: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.1649694442749023
    2. ' par' → logprob: -1.4149694442749023
    3. 'acter' → logprob: -1.9149694442749023
    4. 'ère' → logprob: -2.7899694442749023
    5. 's' → logprob: -2.9149694442749023
    6. 'er' → logprob: -3.4149694442749023
    7. 'r' → logprob: -3.5399694442749023
    8. 'by' → logprob: -3.5399694442749023
    9. '_par' → logprob: -4.289969444274902
    10. 'def' → logprob: -4.414969444274902

Token 2045: ' caract' (ID: 36343)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.00016384923947043717
    2. 'character' → logprob: -10.625164031982422
    3. ' caractère' → logprob: -10.625164031982422
    4. '```' → logprob: -10.625164031982422
    5. '1' → logprob: -11.375164031982422
    6. 'ac' → logprob: -11.375164031982422
    7. 'mot' → logprob: -11.625164031982422
    8. ' caract' → logprob: -11.625164031982422
    9. 'char' → logprob: -11.750164031982422
    10. 'etat' → logprob: -11.750164031982422

Token 2046: 'ere' (ID: 512)
  Prédit: 'ère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.03024110198020935
    2. 'r' → logprob: -5.030241012573242
    3. 'ére' → logprob: -5.280241012573242
    4. 'acter' → logprob: -5.655241012573242
    5. 'ètre' → logprob: -5.780241012573242
    6. 'ere' → logprob: -5.905241012573242
    7. 'er' → logprob: -5.905241012573242
    8. 'éter' → logprob: -6.655241012573242
    9. 'é' → logprob: -7.530241012573242
    10. 'ét' → logprob: -7.905241012573242

Token 2047: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5724378824234009
    2. '       ' → logprob: -0.9474378824234009
    3. ' for' → logprob: -4.197437763214111
    4. '           ' → logprob: -4.822437763214111
    5. 'in' → logprob: -5.572437763214111
    6. 'ac' → logprob: -5.572437763214111
    7. '
' → logprob: -6.197437763214111
    8. ',' → logprob: -6.197437763214111
    9. '```' → logprob: -6.572437763214111
    10. '   ' → logprob: -6.697437763214111

Token 2048: ' mot' (ID: 3598)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.2084478884935379
    2. 'words' → logprob: -1.8334479331970215
    3. 'w' → logprob: -3.5834479331970215
    4. 's' → logprob: -8.458447456359863
    5. 'ws' → logprob: -8.958447456359863
    6. ' word' → logprob: -9.083447456359863
    7. ' words' → logprob: -10.958447456359863
    8. 'mot' → logprob: -10.958447456359863
    9. 'm' → logprob: -12.333447456359863
    10. ' w' → logprob: -12.583447456359863

Token 2049: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06698395311832428
    2. 'for' → logprob: -2.816983938217163
    3. '           ' → logprob: -6.191984176635742
    4. ' for' → logprob: -6.316984176635742
    5. ',' → logprob: -8.191984176635742
    6. '```' → logprob: -8.441984176635742
    7. '
' → logprob: -8.691984176635742
    8. '               ' → logprob: -8.941984176635742
    9. '   ' → logprob: -9.316984176635742
    10. '`' → logprob: -10.316984176635742

Token 2050: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03831939026713371
    2. 'for' → logprob: -3.6633193492889404
    3. '           ' → logprob: -4.9133195877075195
    4. ' for' → logprob: -5.6633195877075195
    5. '               ' → logprob: -8.41331958770752
    6. '   ' → logprob: -8.53831958770752
    7. '
' → logprob: -8.66331958770752
    8. ',' → logprob: -8.66331958770752
    9. ' ' → logprob: -9.41331958770752
    10. 'state' → logprob: -10.16331958770752

Token 2051: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31626051664352417
    2. 'for' → logprob: -1.316260576248169
    3. '           ' → logprob: -6.44126033782959
    4. ' for' → logprob: -7.31626033782959
    5. '```' → logprob: -8.06626033782959
    6. '   ' → logprob: -9.44126033782959
    7. '               ' → logprob: -9.69126033782959
    8. '
' → logprob: -9.81626033782959
    9. ',' → logprob: -9.81626033782959
    10. '#' (adapté à ' #') → logprob: -10.94126033782959

Token 2052: ' au' (ID: 2791)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2555677592754364
    2. 'for' → logprob: -1.5055677890777588
    3. ' for' → logprob: -6.63056755065918
    4. '
' → logprob: -6.75556755065918
    5. '           ' → logprob: -7.88056755065918
    6. '   ' → logprob: -8.00556755065918
    7. '#' → logprob: -9.00556755065918
    8. '               ' → logprob: -9.63056755065918
    9. '```' → logprob: -9.63056755065918
    10. 'pre' → logprob: -10.88056755065918

Token 2053: ' final' (ID: 1721)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.438806176185608
    2. 'for' → logprob: -1.813806176185608
    3. '       ' → logprob: -2.5638060569763184
    4. 'moins' → logprob: -2.5638060569763184
    5. '   ' → logprob: -2.6888060569763184
    6. 'pass' → logprob: -3.1888060569763184
    7. 'c' → logprob: -3.3138060569763184
    8. 'def' → logprob: -3.3138060569763184
    9. '
' → logprob: -3.5638060569763184
    10. '#' → logprob: -3.6888060569763184

Token 2054: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7333978414535522
    2. 'ac' → logprob: -1.7333978414535522
    3. ' for' → logprob: -2.608397960662842
    4. '       ' → logprob: -2.983397960662842
    5. 'on' → logprob: -3.358397960662842
    6. 'state' → logprob: -3.483397960662842
    7. 'cur' → logprob: -4.108397960662842
    8. ' on' → logprob: -4.108397960662842
    9. ':
' → logprob: -4.233397960662842
    10. 'current' → logprob: -4.358397960662842

Token 2055: ' aura' (ID: 33008)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -1.9822417497634888
    2. 'for' → logprob: -2.357241630554199
    3. 'stock' → logprob: -2.482241630554199
    4. 'ac' → logprob: -2.607241630554199
    5. 'obt' → logprob: -2.607241630554199
    6. 'cal' → logprob: -2.732241630554199
    7. 'get' → logprob: -2.857241630554199
    8. 'store' → logprob: -2.982241630554199
    9. 'calc' → logprob: -3.107241630554199
    10. 'compute' → logprob: -3.107241630554199

Token 2056: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8820688128471375
    2. 'trans' → logprob: -1.1320688724517822
    3. 'next' → logprob: -3.3820688724517822
    4. '[' → logprob: -3.3820688724517822
    5. ' ac' → logprob: -3.7570688724517822
    6. '   ' → logprob: -4.007068634033203
    7. '
' → logprob: -4.007068634033203
    8. 'transition' → logprob: -4.007068634033203
    9. 'ac' → logprob: -4.257068634033203
    10. ' next' → logprob: -4.632068634033203

Token 2057: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009907304309308529
    2. 'trans' → logprob: -6.509907245635986
    3. 'for' → logprob: -6.509907245635986
    4. '```' → logprob: -6.509907245635986
    5. 'pre' → logprob: -6.759907245635986
    6. '`' → logprob: -6.884907245635986
    7. '
' → logprob: -7.759907245635986
    8. 'word' → logprob: -7.759907245635986
    9. '   ' → logprob: -8.134907722473145
    10. 'next' → logprob: -8.259907722473145

Token 2058: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048510145395994186
    2. 'pre' → logprob: -3.9235100746154785
    3. 'trans' → logprob: -5.1735100746154785
    4. 'word' → logprob: -5.2985100746154785
    5. 'for' → logprob: -5.5485100746154785
    6. '   ' → logprob: -5.7985100746154785
    7. '`' → logprob: -6.4235100746154785
    8. 'transition' → logprob: -6.4235100746154785
    9. '#' (adapté à ' #') → logprob: -6.7985100746154785
    10. '```' → logprob: -7.0485100746154785

Token 2059: '  ' (ID: 256)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.418962836265564
    2. 'word' → logprob: -1.418962836265564
    3. '       ' → logprob: -2.0439629554748535
    4. 'pre' → logprob: -2.0439629554748535
    5. 'trans' → logprob: -2.1689629554748535
    6. '#' → logprob: -2.9189629554748535
    7. '   ' → logprob: -3.9189629554748535
    8. 'next' → logprob: -4.4189629554748535
    9. 'transition' → logprob: -4.5439629554748535
    10. 'dp' → logprob: -4.7939629554748535

Token 2060: ' next' (ID: 2613)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.7332264184951782
    2. 'word' → logprob: -1.7332264184951782
    3. 'ac' → logprob: -2.1082262992858887
    4. 'next' (adapté à ' next') → logprob: -2.4832262992858887
    5. '#' → logprob: -3.3582262992858887
    6. 'pre' → logprob: -3.7332262992858887
    7. 'mot' → logprob: -4.233226299285889
    8. '   ' → logprob: -4.483226299285889
    9. 'dp' → logprob: -4.608226299285889
    10. 'transition' → logprob: -4.858226299285889

Token 2061: '_state' (ID: 9479)
  Prédit: '_ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ac' → logprob: -0.2660006284713745
    2. '_state' → logprob: -1.5160006284713745
    3. 'ac' → logprob: -5.141000747680664
    4. 'state' → logprob: -5.641000747680664
    5. '_states' → logprob: -5.641000747680664
    6. ' =' → logprob: -8.391000747680664
    7. 'Ac' → logprob: -8.641000747680664
    8. 'AC' → logprob: -8.641000747680664
    9. '_transition' → logprob: -8.766000747680664
    10. '_pos' → logprob: -9.516000747680664

Token 2062: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6175306439399719
    2. ' =' → logprob: -1.1175305843353271
    3. 's' → logprob: -2.617530584335327
    4. 'for' → logprob: -4.742530822753906
    5. '_ac' → logprob: -4.867530822753906
    6. '[' → logprob: -5.117530822753906
    7. '
' → logprob: -5.242530822753906
    8. 'ac' → logprob: -5.492530822753906
    9. '```' → logprob: -5.617530822753906
    10. '   ' → logprob: -5.742530822753906

Token 2063: ' set' (ID: 920)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.6204877495765686
    2. 'season' → logprob: -1.6204876899719238
    3. 'outputs' → logprob: -1.9954876899719238
    4. 'output' → logprob: -3.370487689971924
    5. 'matched' → logprob: -3.495487689971924
    6. 'seen' → logprob: -4.370487689971924
    7. 'det' → logprob: -4.495487689971924
    8. '   ' → logprob: -4.620487689971924
    9. 'matches' → logprob: -5.245487689971924
    10. 'se' → logprob: -5.620487689971924

Token 2064: '_s' (ID: 1278)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.631125807762146
    2. 'enc' → logprob: -1.881125807762146
    3. '_enc' → logprob: -1.881125807762146
    4. '```' → logprob: -2.2561259269714355
    5. '_of' → logprob: -2.5061259269714355
    6. '()' → logprob: -2.5061259269714355
    7. '_words' → logprob: -2.8811259269714355
    8. '()
' → logprob: -3.2561259269714355
    9. 's' → logprob: -3.3811259269714355
    10. '_' → logprob: -3.7561259269714355

Token 2065: 'aison' (ID: 37278)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12502633035182953
    2. 't' → logprob: -2.875026226043701
    3. 'et' → logprob: -3.375026226043701
    4. '_found' → logprob: -4.625026226043701
    5. 'aison' → logprob: -4.875026226043701
    6. 'found' → logprob: -6.875026226043701
    7. '_states' → logprob: -7.000026226043701
    8. 'ets' → logprob: -7.000026226043701
    9. 'een' → logprob: -7.000026226043701
    10. '_seen' → logprob: -7.500026226043701

Token 2066: '_words' (ID: 45077)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4101288318634033
    2. '       ' → logprob: -1.6601288318634033
    3. '
' → logprob: -2.2851288318634033
    4. '=' → logprob: -2.6601288318634033
    5. '```' → logprob: -2.6601288318634033
    6. '_words' → logprob: -2.9101288318634033
    7. 'for' → logprob: -3.1601288318634033
    8. 's' → logprob: -3.1601288318634033
    9. '_word' → logprob: -3.4101288318634033
    10. '   ' → logprob: -3.7851288318634033

Token 2067: ' found' (ID: 2491)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29408249258995056
    2. ' =' → logprob: -2.2940824031829834
    3. '=' → logprob: -2.7940824031829834
    4. '
' → logprob: -2.7940824031829834
    5. '   ' → logprob: -4.7940826416015625
    6. '_pre' → logprob: -5.6690826416015625
    7. 'for' → logprob: -5.6690826416015625
    8. 'pre' → logprob: -6.0440826416015625
    9. '```' → logprob: -6.4190826416015625
    10. '#' → logprob: -6.6690826416015625

Token 2068: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9593994617462158
    2. ' =' → logprob: -1.2093994617462158
    3. '
' → logprob: -2.084399461746216
    4. '=' → logprob: -2.459399461746216
    5. '   ' → logprob: -3.459399461746216
    6. '```' → logprob: -4.459399223327637
    7. '_word' → logprob: -4.834399223327637
    8. 'for' → logprob: -4.959399223327637
    9. '_states' → logprob: -5.209399223327637
    10. '_words' → logprob: -5.459399223327637

Token 2069: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02468857727944851
    2. '
' → logprob: -4.274688720703125
    3. '   ' → logprob: -5.524688720703125
    4. 'pre' → logprob: -6.149688720703125
    5. 'word' → logprob: -6.649688720703125
    6. '```' → logprob: -7.649688720703125
    7. 'for' → logprob: -8.149688720703125
    8. '`' → logprob: -8.274688720703125
    9. ',' → logprob: -8.274688720703125
    10. '        
' → logprob: -8.524688720703125

Token 2070: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17200058698654175
    2. '   ' → logprob: -2.9220006465911865
    3. 'pre' → logprob: -2.9220006465911865
    4. 'trans' → logprob: -4.297000408172607
    5. 'word' → logprob: -4.672000408172607
    6. 'dp' → logprob: -5.047000408172607
    7. 'next' → logprob: -5.047000408172607
    8. '
' → logprob: -5.297000408172607
    9. 'ac' → logprob: -5.672000408172607
    10. '#' (adapté à ' #') → logprob: -6.547000408172607

Token 2071: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00162221840582788
    2. 'pre' → logprob: -6.876622200012207
    3. '
' → logprob: -8.001622200012207
    4. '   ' → logprob: -9.001622200012207
    5. 'word' → logprob: -9.626622200012207
    6. '```' → logprob: -10.751622200012207
    7. 'next' → logprob: -11.376622200012207
    8. '        
' → logprob: -12.126622200012207
    9. '#' → logprob: -12.126622200012207
    10. 'dp' → logprob: -12.501622200012207

Token 2072: ' dimensions' (ID: 23995)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3269500136375427
    2. '=' → logprob: -1.9519500732421875
    3. '       ' → logprob: -2.5769500732421875
    4. '   ' → logprob: -3.9519500732421875
    5. '[pos' → logprob: -4.5769500732421875
    6. '=
' → logprob: -5.0769500732421875
    7. 'dp' → logprob: -5.3269500732421875
    8. 'pos' → logprob: -5.8269500732421875
    9. 'size' → logprob: -6.3269500732421875
    10. '
' → logprob: -6.3269500732421875

Token 2073: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49240314960479736
    2. 'dp' → logprob: -1.9924031496047974
    3. '       ' → logprob: -2.242403030395508
    4. ' =' → logprob: -2.992403030395508
    5. '=
' → logprob: -3.492403030395508
    6. '#' → logprob: -3.867403030395508
    7. 'word' → logprob: -5.117403030395508
    8. 'max' → logprob: -5.367403030395508
    9. '```' → logprob: -5.367403030395508
    10. '
' → logprob: -5.492403030395508

Token 2074: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2936643362045288
    2. 'pos' → logprob: -1.7936643362045288
    3. 'M' → logprob: -2.0436644554138184
    4. '[' → logprob: -2.4186644554138184
    5. 'dp' → logprob: -2.5436644554138184
    6. '(M' → logprob: -2.6686644554138184
    7. '[
' → logprob: -3.5436644554138184
    8. '   ' → logprob: -3.5436644554138184
    9. '(' → logprob: -3.6686644554138184
    10. ' M' → logprob: -3.7936644554138184

Token 2075: ' #' (ID: 1069)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.9995569586753845
    2. '(' → logprob: -1.6245570182800293
    3. '(M' → logprob: -1.7495570182800293
    4. '[' → logprob: -2.7495570182800293
    5. '(
' → logprob: -2.8745570182800293
    6. '[
' → logprob: -3.2495570182800293
    7. '   ' → logprob: -3.3745570182800293
    8. ' M' → logprob: -4.249557018280029
    9. ' (' → logprob: -4.624557018280029
    10. '       ' → logprob: -4.624557018280029

Token 2076: ' pos' (ID: 1253)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.9169579744338989
    2. '(M' → logprob: -2.0419578552246094
    3. '(
' → logprob: -2.5419578552246094
    4. '(' → logprob: -2.7919578552246094
    5. '       ' → logprob: -2.9169578552246094
    6. '#' → logprob: -2.9169578552246094
    7. '[
' → logprob: -3.5419578552246094
    8. '   ' → logprob: -3.6669578552246094
    9. '(n' → logprob: -3.7919578552246094
    10. 'word' → logprob: -3.7919578552246094

Token 2077: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41653838753700256
    2. ' =' → logprob: -1.4165383577346802
    3. '=[' → logprob: -3.1665384769439697
    4. '=
' → logprob: -4.541538238525391
    5. '   ' → logprob: -4.666538238525391
    6. '```' → logprob: -5.291538238525391
    7. '[' → logprob: -5.416538238525391
    8. '       ' → logprob: -5.666538238525391
    9. ',' → logprob: -5.666538238525391
    10. '[pos' → logprob: -5.666538238525391

Token 2078: ' ' (ID: 220)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05599362775683403
    2. '[M' → logprob: -4.555993556976318
    3. ' M' → logprob: -4.805993556976318
    4. '[' → logprob: -4.805993556976318
    5. '=' → logprob: -5.305993556976318
    6. '[
' → logprob: -5.555993556976318
    7. '0' → logprob: -5.680993556976318
    8. '(M' → logprob: -5.805993556976318
    9. 'range' → logprob: -5.805993556976318
    10. ' =' → logprob: -6.180993556976318

Token 2079: '0' (ID: 15)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.007432580925524235
    2. '0' → logprob: -5.382432460784912
    3. '1' → logprob: -7.007432460784912
    4. 'range' → logprob: -7.507432460784912
    5. '=' → logprob: -8.13243293762207
    6. ' M' → logprob: -8.25743293762207
    7. '[M' → logprob: -8.25743293762207
    8. '
' → logprob: -8.63243293762207
    9. '[
' → logprob: -9.25743293762207
    10. '[' → logprob: -9.38243293762207

Token 2080: '..' (ID: 485)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4197254776954651
    2. '=' → logprob: -2.7947254180908203
    3. '```' → logprob: -2.7947254180908203
    4. '   ' → logprob: -2.9197254180908203
    5. '][' → logprob: -3.0447254180908203
    6. '[' → logprob: -3.5447254180908203
    7. '+' → logprob: -3.6697254180908203
    8. '       ' → logprob: -4.41972541809082
    9. ',' → logprob: -4.66972541809082
    10. '<=' → logprob: -4.79472541809082

Token 2081: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0008783506345935166
    2. ' M' → logprob: -7.25087833404541
    3. '
' → logprob: -9.37587833404541
    4. '```' → logprob: -10.12587833404541
    5. '``' → logprob: -11.62587833404541
    6. '1' → logprob: -11.87587833404541
    7. '   ' → logprob: -12.00087833404541
    8. ',' → logprob: -12.50087833404541
    9. ')' → logprob: -12.87587833404541
    10. '`' → logprob: -13.00087833404541

Token 2082: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9401088356971741
    2. '[' → logprob: -1.0651087760925293
    3. '[
' → logprob: -2.5651087760925293
    4. '
' → logprob: -2.9401087760925293
    5. '[pos' → logprob: -2.9401087760925293
    6. '       ' → logprob: -3.5651087760925293
    7. '``' → logprob: -3.6901087760925293
    8. '[M' → logprob: -5.065108776092529
    9. '][' → logprob: -5.315108776092529
    10. '   ' → logprob: -5.565108776092529

Token 2083: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06836365163326263
    2. '[' → logprob: -3.693363666534424
    3. '   ' → logprob: -4.443363666534424
    4. '```' → logprob: -4.568363666534424
    5. '[
' → logprob: -4.693363666534424
    6. ',' → logprob: -5.693363666534424
    7. '\t' → logprob: -6.068363666534424
    8. '#' → logprob: -6.943363666534424
    9. '
' → logprob: -7.068363666534424
    10. 'dp' → logprob: -7.193363666534424

Token 2084: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.273014098405838
    2. '```' → logprob: -2.6480140686035156
    3. '[' → logprob: -3.1480140686035156
    4. '   ' → logprob: -3.5230140686035156
    5. '[
' → logprob: -3.5230140686035156
    6. '\t' → logprob: -4.023014068603516
    7. 'word' → logprob: -4.398014068603516
    8. '
' → logprob: -4.648014068603516
    9. ',' → logprob: -5.023014068603516
    10. '``' → logprob: -5.523014068603516

Token 2085: ' cur' (ID: 4396)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.2673846483230591
    2. '       ' → logprob: -2.5173845291137695
    3. 'words' → logprob: -3.2673845291137695
    4. '#' → logprob: -3.6423845291137695
    5. 'n' → logprob: -3.6423845291137695
    6. '
' → logprob: -4.1423845291137695
    7. ' word' → logprob: -4.8923845291137695
    8. '(word' → logprob: -5.1423845291137695
    9. '   ' → logprob: -5.2673845291137695
    10. '[word' → logprob: -5.5173845291137695

Token 2086: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.3760361969470978
    2. '_state' → logprob: -1.2510361671447754
    3. 'word' → logprob: -4.126036167144775
    4. 'state' → logprob: -5.251036167144775
    5. '_id' → logprob: -5.751036167144775
    6. '_' → logprob: -6.876036167144775
    7. '_ac' → logprob: -8.126036643981934
    8. '_states' → logprob: -8.126036643981934
    9. '_words' → logprob: -9.001036643981934
    10. '_idx' → logprob: -9.001036643981934

Token 2087: ':' (ID: 25)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.5514353513717651
    2. ' =' → logprob: -1.0514353513717651
    3. '_idx' → logprob: -3.5514354705810547
    4. '```' → logprob: -4.551435470581055
    5. '=' → logprob: -4.801435470581055
    6. 'id' → logprob: -5.426435470581055
    7. '   ' → logprob: -5.551435470581055
    8. '[' → logprob: -5.926435470581055
    9. '\t' → logprob: -6.426435470581055
    10. 's' → logprob: -6.426435470581055

Token 2088: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29409322142601013
    2. '0' → logprob: -2.294093132019043
    3. ' n' → logprob: -2.669093132019043
    4. 'len' → logprob: -3.169093132019043
    5. 'words' → logprob: -4.669093132019043
    6. '[' → logprob: -4.919093132019043
    7. '[n' → logprob: -5.044093132019043
    8. 'range' → logprob: -5.044093132019043
    9. '[len' → logprob: -5.669093132019043
    10. ' len' → logprob: -6.169093132019043

Token 2089: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01931476779282093
    2. 'len' → logprob: -4.269314765930176
    3. 'range' → logprob: -5.769314765930176
    4. '0' → logprob: -6.769314765930176
    5. '[n' → logprob: -7.269314765930176
    6. ' n' → logprob: -10.019314765930176
    7. '[len' → logprob: -10.519314765930176
    8. '[]' → logprob: -11.144314765930176
    9. '(n' → logprob: -11.144314765930176
    10. ']' → logprob: -11.394314765930176

Token 2090: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.008659250102937222
    2. '..<' → logprob: -5.508659362792969
    3. '...' → logprob: -5.758659362792969
    4. '<=' → logprob: -8.133659362792969
    5. '       ' → logprob: -8.258659362792969
    6. ',' → logprob: -8.633659362792969
    7. '<len' → logprob: -9.008659362792969
    8. '           ' → logprob: -9.758659362792969
    9. '#' → logprob: -9.883659362792969
    10. 'for' → logprob: -9.883659362792969

Token 2091: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.007317567011341e-05
    2. 'len' → logprob: -9.875089645385742
    3. '(n' → logprob: -11.500089645385742
    4. '   ' → logprob: -11.500089645385742
    5. ' n' → logprob: -11.625089645385742
    6. '       ' → logprob: -12.625089645385742
    7. '
' → logprob: -13.000089645385742
    8. '           ' → logprob: -14.000089645385742
    9. '```' → logprob: -14.375089645385742
    10. '``' → logprob: -14.875089645385742

Token 2092: 'words' (ID: 10020)
  Prédit: 'words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.31575044989585876
    2. '_words' → logprob: -1.3157504796981812
    3. 'w' → logprob: -6.565750598907471
    4. '-' → logprob: -7.940750598907471
    5. '_word' → logprob: -8.690750122070312
    6. '
' → logprob: -9.440750122070312
    7. ' words' → logprob: -9.565750122070312
    8. 'word' → logprob: -9.690750122070312
    9. '_' → logprob: -9.690750122070312
    10. ')' → logprob: -9.815750122070312

Token 2093: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3767051696777344
    2. '   ' → logprob: -1.6267051696777344
    3. '```' → logprob: -2.1267051696777344
    4. '
' → logprob: -2.5017051696777344
    5. '[
' → logprob: -2.5017051696777344
    6. '[' → logprob: -2.7517051696777344
    7. '[cur' → logprob: -3.1267051696777344
    8. '#' → logprob: -3.5017051696777344
    9. '\t' → logprob: -3.7517051696777344
    10. 'cur' → logprob: -3.8767051696777344

Token 2094: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '
' → logprob: -15.87500286102295
    4. '```' → logprob: -15.87500286102295
    5. '   ' → logprob: -16.250001907348633
    6. ')' → logprob: -16.500001907348633
    7. '-' → logprob: -17.375001907348633
    8. '=' → logprob: -17.875001907348633
    9. '``' → logprob: -18.125001907348633
    10. '+' → logprob: -18.250001907348633

Token 2095: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7533527612686157
    2. '```' → logprob: -1.8783527612686157
    3. '       ' → logprob: -2.128352642059326
    4. '
' → logprob: -2.503352642059326
    5. 'cur' → logprob: -3.128352642059326
    6. '   ' → logprob: -3.128352642059326
    7. '\t' → logprob: -3.503352642059326
    8. 'tab' → logprob: -4.378352642059326
    9. 'tabs' → logprob: -4.753352642059326
    10. '[
' → logprob: -5.378352642059326

Token 2096: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07960165292024612
    2. '#' → logprob: -2.829601764678955
    3. '   ' → logprob: -5.204601764678955
    4. '
' → logprob: -5.454601764678955
    5. '```' → logprob: -5.829601764678955
    6. '[' → logprob: -6.329601764678955
    7. '[
' → logprob: -7.704601764678955
    8. ',' → logprob: -8.079601287841797
    9. '           ' → logprob: -8.329601287841797
    10. '	' → logprob: -8.454601287841797

Token 2097: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5007148385047913
    2. '#' (adapté à ' #') → logprob: -1.0007147789001465
    3. '```' → logprob: -4.5007147789001465
    4. '
' → logprob: -5.7507147789001465
    5. '   ' → logprob: -6.0007147789001465
    6. 'cur' → logprob: -6.3757147789001465
    7. '[' → logprob: -6.7507147789001465
    8. '``' → logprob: -7.1257147789001465
    9. '[
' → logprob: -7.3757147789001465
    10. ',' → logprob: -7.6257147789001465

Token 2098: ' ac' (ID: 1375)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'season' → logprob: -1.3339627981185913
    2. 'cur' → logprob: -1.4589627981185913
    3. 'ac' → logprob: -1.5839627981185913
    4. '#' → logprob: -1.5839627981185913
    5. '
' → logprob: -3.083962917327881
    6. 'for' → logprob: -4.708962917327881
    7. '       ' → logprob: -4.833962917327881
    8. 'word' → logprob: -4.958962917327881
    9. '   ' → logprob: -5.083962917327881
    10. 'found' → logprob: -6.083962917327881

Token 2099: '_state' (ID: 9479)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.11299598962068558
    2. '_state' → logprob: -2.2379961013793945
    3. 'state' → logprob: -9.237996101379395
    4. '_' → logprob: -11.362996101379395
    5. '[_' → logprob: -11.487996101379395
    6. '_next' → logprob: -11.737996101379395
    7. '_s' → logprob: -11.862996101379395
    8. '[state' → logprob: -11.862996101379395
    9. '
' → logprob: -12.862996101379395
    10. '_positions' → logprob: -12.987996101379395

Token 2100: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5407770872116089
    2. ' =' → logprob: -1.6657770872116089
    3. ',' → logprob: -1.9157770872116089
    4. '[' → logprob: -2.2907772064208984
    5. ':' → logprob: -2.9157772064208984
    6. '][' → logprob: -3.1657772064208984
    7. '   ' → logprob: -3.2907772064208984
    8. '[cur' → logprob: -3.2907772064208984
    9. '           ' → logprob: -3.7907772064208984
    10. ']' → logprob: -3.7907772064208984

Token 2101: ' ' (ID: 220)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -9.341087570646778e-05
    2. ' ac' → logprob: -9.625093460083008
    3. '0' → logprob: -10.750093460083008
    4. 'len' → logprob: -12.875093460083008
    5. '	ac' → logprob: -13.875093460083008
    6. '
' → logprob: -14.625093460083008
    7. '(ac' → logprob: -14.625093460083008
    8. '1' → logprob: -15.125093460083008
    9. '#ac' → logprob: -15.125093460083008
    10. '   ' → logprob: -15.875093460083008

Token 2102: '0' (ID: 15)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -8.41866585687967e-06
    2. ' ac' → logprob: -12.000008583068848
    3. '0' → logprob: -14.500008583068848
    4. '	ac' → logprob: -14.875008583068848
    5. '(ac' → logprob: -15.000008583068848
    6. 'len' → logprob: -15.125008583068848
    7. '#ac' → logprob: -15.125008583068848
    8. '
' → logprob: -15.250008583068848
    9. '_ac' → logprob: -17.12500762939453
    10. '{' → logprob: -17.25000762939453

Token 2103: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.0018518929136916995
    2. '...' → logprob: -7.251852035522461
    3. '..
' → logprob: -7.501852035522461
    4. '..<' → logprob: -8.126852035522461
    5. '.' → logprob: -9.001852035522461
    6. '.
' → logprob: -10.126852035522461
    7. '<=' → logprob: -10.251852035522461
    8. '...
' → logprob: -10.751852035522461
    9. '
' → logprob: -10.751852035522461
    10. '+' → logprob: -11.751852035522461

Token 2104: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -4.036524842376821e-05
    2. '(ac' → logprob: -10.250040054321289
    3. ' ac' → logprob: -13.125040054321289
    4. 'n' → logprob: -13.875040054321289
    5. '
' → logprob: -14.500040054321289
    6. '```' → logprob: -14.750040054321289
    7. 'len' → logprob: -15.125040054321289
    8. '	ac' → logprob: -15.500040054321289
    9. '`' → logprob: -15.750040054321289
    10. '{' → logprob: -16.00004005432129

Token 2105: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.005074006505310535
    2. '_state' → logprob: -5.3800740242004395
    3. '_size' → logprob: -8.255073547363281
    4. '[_' → logprob: -10.255073547363281
    5. 'next' → logprob: -11.005073547363281
    6. 'states' → logprob: -11.005073547363281
    7. 'States' → logprob: -11.255073547363281
    8. '_next' → logprob: -11.255073547363281
    9. '```' → logprob: -11.255073547363281
    10. '[' → logprob: -11.380073547363281

Token 2106: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18724273145198822
    2. '       ' → logprob: -3.0622427463531494
    3. '```' → logprob: -3.1872427463531494
    4. '
' → logprob: -3.3122427463531494
    5. '#' → logprob: -3.9372427463531494
    6. '   ' → logprob: -4.93724250793457
    7. ' -' → logprob: -4.93724250793457
    8. '           ' → logprob: -6.18724250793457
    9. '=' → logprob: -6.56224250793457
    10. '[' → logprob: -6.56224250793457

Token 2107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.3213025744771585e-05
    2. '-' → logprob: -10.500033378601074
    3. '```' → logprob: -12.500033378601074
    4. '0' → logprob: -14.000033378601074
    5. '
' → logprob: -15.375033378601074
    6. '2' → logprob: -15.500033378601074
    7. '``' → logprob: -15.500033378601074
    8. '#' → logprob: -15.625033378601074
    9. ' ' → logprob: -16.750032424926758
    10. '   ' → logprob: -17.000032424926758

Token 2108: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03615591675043106
    2. '
' → logprob: -4.161155700683594
    3. '```' → logprob: -5.036155700683594
    4. 'dp' → logprob: -5.161155700683594
    5. '#' → logprob: -6.036155700683594
    6. '   ' → logprob: -6.161155700683594
    7. '`' → logprob: -7.536155700683594
    8. ',' → logprob: -8.411155700683594
    9. '           ' → logprob: -8.411155700683594
    10. 'import' → logprob: -8.536155700683594

Token 2109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03792316094040871
    2. '#' → logprob: -3.5379230976104736
    3. '```' → logprob: -6.287923336029053
    4. '[' → logprob: -6.662923336029053
    5. '   ' → logprob: -6.787923336029053
    6. '
' → logprob: -7.037923336029053
    7. '[
' → logprob: -7.787923336029053
    8. '           ' → logprob: -7.912923336029053
    9. 'dp' → logprob: -7.912923336029053
    10. '	' → logprob: -8.037922859191895

Token 2110: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3339349627494812
    2. '#' (adapté à ' #') → logprob: -1.333935022354126
    3. '```' → logprob: -4.583934783935547
    4. 'dp' → logprob: -5.333934783935547
    5. '   ' → logprob: -6.583934783935547
    6. 'season' → logprob: -6.708934783935547
    7. '
' → logprob: -7.208934783935547
    8. '	' → logprob: -7.708934783935547
    9. '           ' → logprob: -8.333934783935547
    10. 'prev' → logprob: -8.833934783935547

Token 2111: ' season' (ID: 5217)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.49853047728538513
    2. 'dp' → logprob: -2.123530387878418
    3. '#' → logprob: -2.498530387878418
    4. 'visited' → logprob: -2.748530387878418
    5. '
' → logprob: -3.498530387878418
    6. 'for' → logprob: -3.998530387878418
    7. 'found' → logprob: -4.373530387878418
    8. 'from' → logprob: -4.498530387878418
    9. '0' → logprob: -4.623530387878418
    10. 'K' → logprob: -4.998530387878418

Token 2112: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -9.519893501419574e-05
    2. '_mask' → logprob: -10.25009536743164
    3. '_word' → logprob: -11.37509536743164
    4. '_f' → logprob: -11.87509536743164
    5. '_' → logprob: -12.12509536743164
    6. '_state' → logprob: -12.50009536743164
    7. ']_' → logprob: -12.50009536743164
    8. '\' → logprob: -12.62509536743164
    9. '```' → logprob: -12.62509536743164
    10. ')_' → logprob: -12.62509536743164

Token 2113: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7499723434448242
    2. '       ' → logprob: -1.2499723434448242
    3. '_pre' → logprob: -2.874972343444824
    4. '   ' → logprob: -3.249972343444824
    5. '
' → logprob: -3.374972343444824
    6. '_next' → logprob: -3.749972343444824
    7. '_' → logprob: -4.374972343444824
    8. '_word' → logprob: -4.374972343444824
    9. '_s' → logprob: -4.499972343444824
    10. '_trans' → logprob: -4.874972343444824

Token 2114: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.070611372590065
    2. '3' → logprob: -2.9456114768981934
    3. '0' → logprob: -4.695611476898193
    4. '-' → logprob: -5.195611476898193
    5. '5' → logprob: -8.570611000061035
    6. 'M' → logprob: -8.820611000061035
    7. 'K' → logprob: -8.820611000061035
    8. 'range' → logprob: -8.945611000061035
    9. '{-' → logprob: -9.570611000061035
    10. '{' → logprob: -9.820611000061035

Token 2115: '0' (ID: 15)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.04989036172628403
    2. '3' → logprob: -3.1748902797698975
    3. '-' → logprob: -5.174890518188477
    4. '0' → logprob: -7.049890518188477
    5. '1' → logprob: -9.549890518188477
    6. '5' → logprob: -9.674890518188477
    7. '{' → logprob: -9.674890518188477
    8. '{-' → logprob: -9.924890518188477
    9. '2' → logprob: -10.049890518188477
    10. ' ' → logprob: -11.174890518188477

Token 2116: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.013263402506709099
    2. ',' → logprob: -5.76326322555542
    3. '...' → logprob: -5.88826322555542
    4. ',
' → logprob: -6.26326322555542
    5. '
' → logprob: -6.63826322555542
    6. '<=' → logprob: -6.76326322555542
    7. '..
' → logprob: -6.88826322555542
    8. '.' → logprob: -7.88826322555542
    9. '..<' → logprob: -8.263263702392578
    10. '[' → logprob: -8.263263702392578

Token 2117: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0028728691395372152
    2. '1' → logprob: -6.377872943878174
    3. '(K' → logprob: -7.877872943878174
    4. '2' → logprob: -8.002872467041016
    5. '3' → logprob: -8.752872467041016
    6. 'M' → logprob: -9.002872467041016
    7. ' K' → logprob: -9.502872467041016
    8. '
' → logprob: -10.127872467041016
    9. '(' → logprob: -10.502872467041016
    10. '0' → logprob: -11.377872467041016

Token 2118: ' pour' (ID: 1930)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6118139624595642
    2. '-' → logprob: -1.361814022064209
    3. '
' → logprob: -2.111814022064209
    4. ',' → logprob: -3.986814022064209
    5. '```' → logprob: -4.361814022064209
    6. ' +' → logprob: -4.736814022064209
    7. '#' → logprob: -5.111814022064209
    8. '<|end|>' → logprob: -5.236814022064209
    9. '=' → logprob: -5.361814022064209
    10. ' or' → logprob: -5.736814022064209

Token 2119: ' le' (ID: 505)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19899393618106842
    2. 'None' → logprob: -2.1989939212799072
    3. 'K' → logprob: -3.1989939212799072
    4. '1' → logprob: -4.698994159698486
    5. '-K' → logprob: -5.323994159698486
    6. 'M' → logprob: -5.698994159698486
    7. '-none' → logprob: -5.823994159698486
    8. 'none' → logprob: -6.448994159698486
    9. '0' → logprob: -6.698994159698486
    10. ' -' → logprob: -6.698994159698486

Token 2120: ' numéro' (ID: 65036)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.033316101878881454
    2. 'none' → logprob: -4.533316135406494
    3. 'season' → logprob: -4.658316135406494
    4. '-' → logprob: -6.158316135406494
    5. '_none' → logprob: -6.283316135406494
    6. '#' → logprob: -6.283316135406494
    7. ' None' → logprob: -6.408316135406494
    8. '_None' → logprob: -6.533316135406494
    9. '0' → logprob: -7.408316135406494
    10. 's' → logprob: -8.033315658569336

Token 2121: ' de' (ID: 334)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.538250744342804
    2. '```' → logprob: -2.788250684738159
    3. 's' → logprob: -3.038250684738159
    4. '
' → logprob: -3.163250684738159
    5. '_' → logprob: -3.163250684738159
    6. ')' → logprob: -3.163250684738159
    7. ',' → logprob: -3.538250684738159
    8. 'found' → logprob: -3.663250684738159
    9. '_s' → logprob: -3.663250684738159
    10. '#' → logprob: -4.038250923156738

Token 2122: ' saison' (ID: 38158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05689878761768341
    2. 'la' → logprob: -3.556898832321167
    3. ' saison' → logprob: -4.556898593902588
    4. 'season' → logprob: -5.056898593902588
    5. 'mot' → logprob: -5.181898593902588
    6. 'pattern' → logprob: -6.306898593902588
    7. 'l' → logprob: -7.306898593902588
    8. 'sé' → logprob: -7.681898593902588
    9. ' la' → logprob: -7.806898593902588
    10. 'sa' → logprob: -8.931899070739746

Token 2123: ' word' (ID: 2195)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.0031190139707177877
    2. '_word' → logprob: -6.628118991851807
    3. '_words' → logprob: -8.128119468688965
    4. '_' → logprob: -8.128119468688965
    5. '_mask' → logprob: -8.378119468688965
    6. 'word' → logprob: -8.378119468688965
    7. '```' → logprob: -8.878119468688965
    8. '_f' → logprob: -9.253119468688965
    9. ' _' → logprob: -9.253119468688965
    10. 's' → logprob: -10.128119468688965

Token 2124: ' trouvé' (ID: 60081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2607601583003998
    2. '```' → logprob: -2.5107600688934326
    3. '
' → logprob: -3.5107600688934326
    4. '   ' → logprob: -3.8857600688934326
    5. '[' → logprob: -4.135760307312012
    6. ',' → logprob: -4.135760307312012
    7. '][' → logprob: -4.510760307312012
    8. '=' → logprob: -4.635760307312012
    9. ' =' → logprob: -4.885760307312012
    10. ']' → logprob: -5.385760307312012

Token 2125: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.858285665512085
    2. '       ' → logprob: -1.858285665512085
    3. ',' → logprob: -2.233285665512085
    4. '   ' → logprob: -2.358285665512085
    5. '```' → logprob: -2.358285665512085
    6. '+' → logprob: -2.608285665512085
    7. '=' → logprob: -3.108285665512085
    8. '][' → logprob: -3.358285665512085
    9. '[' → logprob: -3.358285665512085
    10. ',
' → logprob: -3.483285665512085

Token 2126: ' ou' (ID: 2031)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.033226512372493744
    2. '
' → logprob: -3.783226490020752
    3. ' #' → logprob: -5.658226490020752
    4. '       ' → logprob: -6.533226490020752
    5. '```' → logprob: -6.533226490020752
    6. '#
' → logprob: -6.908226490020752
    7. '	' → logprob: -7.658226490020752
    8. '   ' → logprob: -8.03322696685791
    9. '        
' → logprob: -8.78322696685791
    10. ' ' → logprob: -9.15822696685791

Token 2127: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0070494795218110085
    2. ' -' → logprob: -5.632049560546875
    3. '-M' → logprob: -6.132049560546875
    4. '-K' → logprob: -7.632049560546875
    5. 'M' → logprob: -8.382049560546875
    6. '1' → logprob: -8.507049560546875
    7. 'K' → logprob: -9.257049560546875
    8. '2' → logprob: -9.257049560546875
    9. '-n' → logprob: -10.257049560546875
    10. 'None' → logprob: -10.507049560546875

Token 2128: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013790446100756526
    2. '-M' → logprob: -6.876379013061523
    3. '-K' → logprob: -8.751379013061523
    4. ' -' → logprob: -9.001379013061523
    5. '-n' → logprob: -10.626379013061523
    6. 'None' → logprob: -11.251379013061523
    7. '1' → logprob: -11.876379013061523
    8. '
' → logprob: -12.251379013061523
    9. 'M' → logprob: -12.876379013061523
    10. '0' → logprob: -13.001379013061523

Token 2129: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0325894355773926
    2. ']' → logprob: -1.1575894355773926
    3. '
' → logprob: -2.7825894355773926
    4. ',' → logprob: -2.7825894355773926
    5. '][' → logprob: -3.5325894355773926
    6. '```' → logprob: -3.5325894355773926
    7. '       ' → logprob: -4.157589435577393
    8. ' or' → logprob: -4.157589435577393
    9. '[' → logprob: -4.407589435577393
    10. ',
' → logprob: -4.532589435577393

Token 2130: ' aucun' (ID: 41678)
  Prédit: 'auc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.004023307003080845
    2. 'none' → logprob: -5.75402307510376
    3. ' aucune' → logprob: -7.62902307510376
    4. ' aucun' → logprob: -8.879023551940918
    5. 'None' → logprob: -9.129023551940918
    6. 'no' → logprob: -9.754023551940918
    7. 'A' → logprob: -11.254023551940918
    8. ' none' → logprob: -11.879023551940918
    9. 'ucune' → logprob: -11.879023551940918
    10. ' None' → logprob: -12.004023551940918

Token 2131: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.317338466644287
    2. ',' → logprob: -1.942338466644287
    3. ',
' → logprob: -2.567338466644287
    4. '       ' → logprob: -2.692338466644287
    5. '#' → logprob: -2.817338466644287
    6. '   ' → logprob: -2.817338466644287
    7. '```' → logprob: -2.817338466644287
    8. '][' → logprob: -3.067338466644287
    9. ']' → logprob: -3.192338466644287
    10. '_
' → logprob: -3.567338466644287

Token 2132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8389593958854675
    2. '
' → logprob: -1.8389594554901123
    3. '   ' → logprob: -2.2139594554901123
    4. ')
' → logprob: -3.2139594554901123
    5. ',' → logprob: -3.4639594554901123
    6. ']' → logprob: -3.5889594554901123
    7. ':
' → logprob: -3.7139594554901123
    8. '=' → logprob: -3.8389594554901123
    9. '[' → logprob: -3.9639594554901123
    10. '```' → logprob: -4.213959217071533

Token 2133: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03965085744857788
    2. 'dp' → logprob: -4.039650917053223
    3. '   ' → logprob: -4.914650917053223
    4. '
' → logprob: -4.914650917053223
    5. ']' → logprob: -7.039650917053223
    6. '[' → logprob: -7.164650917053223
    7. ')' → logprob: -7.789650917053223
    8. ',' → logprob: -7.914650917053223
    9. ' dp' → logprob: -8.039650917053223
    10. '        
' → logprob: -8.039650917053223

Token 2134: ' Pour' (ID: 13931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10794298350811005
    2. 'dp' → logprob: -2.482943058013916
    3. '
' → logprob: -5.607943058013916
    4. '   ' → logprob: -5.607943058013916
    5. 'from' → logprob: -6.232943058013916
    6. 'for' → logprob: -6.232943058013916
    7. '```' → logprob: -6.482943058013916
    8. '#' → logprob: -6.982943058013916
    9. 'words' → logprob: -7.107943058013916
    10. '`' → logprob: -7.857943058013916

Token 2135: 'ato' (ID: 2754)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03462865576148033
    2. ' pos' → logprob: -4.409628868103027
    3. '_pos' → logprob: -5.159628868103027
    4. 'word' → logprob: -5.534628868103027
    5. '_' → logprob: -5.784628868103027
    6. 'ac' → logprob: -6.159628868103027
    7. 'i' → logprob: -6.159628868103027
    8. 'pre' → logprob: -6.534628868103027
    9. '_ac' → logprob: -7.659628868103027
    10. 'w' → logprob: -7.784628868103027

Token 2136: ':' (ID: 25)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2770191431045532
    2. 'ble' → logprob: -1.2770191431045532
    3. 't' → logprob: -2.6520190238952637
    4. 'type' → logprob: -2.7770190238952637
    5. '#' → logprob: -3.0270190238952637
    6. 'def' → logprob: -3.4020190238952637
    7. 's' → logprob: -3.4020190238952637
    8. 'n' → logprob: -3.7770190238952637
    9. 'te' → logprob: -3.7770190238952637
    10. '   ' → logprob: -4.027019023895264

Token 2137: ' stock' (ID: 6546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6004679203033447
    2. '       ' → logprob: -1.7254679203033447
    3. '   ' → logprob: -2.6004679203033447
    4. 'for' → logprob: -2.6004679203033447
    5. ' =' → logprob: -2.8504679203033447
    6. 'def' → logprob: -2.8504679203033447
    7. '#' → logprob: -3.2254679203033447
    8. '=' → logprob: -3.4754679203033447
    9. 'range' → logprob: -3.6004679203033447
    10. '[
' → logprob: -3.6004679203033447

Token 2138: 'er' (ID: 259)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0765854120254517
    2. 'ed' → logprob: -1.8265854120254517
    3. 're' → logprob: -1.9515854120254517
    4. 'red' → logprob: -2.076585292816162
    5. 'rage' → logprob: -3.451585292816162
    6. 'd' → logprob: -3.576585292816162
    7. 'ring' → logprob: -3.576585292816162
    8. '   ' → logprob: -3.701585292816162
    9. '=' → logprob: -3.951585292816162
    10. '       ' → logprob: -3.951585292816162

Token 2139: ' dp' (ID: 21546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4461852312088013
    2. '   ' → logprob: -1.8211852312088013
    3. '[
' → logprob: -1.8211852312088013
    4. ']' → logprob: -2.5711851119995117
    5. 'dp' → logprob: -2.9461851119995117
    6. '{}' → logprob: -3.0711851119995117
    7. 'next' → logprob: -3.5711851119995117
    8. 'default' → logprob: -3.6961851119995117
    9. '{' → logprob: -3.6961851119995117
    10. '[]' → logprob: -3.9461851119995117

Token 2140: '[pos' (ID: 48272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4730184078216553
    2. '[' → logprob: -1.3480184078216553
    3. ' =' → logprob: -2.7230184078216553
    4. '   ' → logprob: -4.473018646240234
    5. '[
' → logprob: -4.473018646240234
    6. '_' → logprob: -5.223018646240234
    7. 'import' → logprob: -5.348018646240234
    8. 'default' → logprob: -5.848018646240234
    9. ']' → logprob: -5.848018646240234
    10. '{' → logprob: -6.473018646240234

Token 2141: '][' (ID: 2696)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5693047642707825
    2. '=' → logprob: -1.4443047046661377
    3. ']' → logprob: -2.0693047046661377
    4. '][' → logprob: -3.8193047046661377
    5. '
' → logprob: -4.069304943084717
    6. '=[' → logprob: -5.194304943084717
    7. ']=' → logprob: -5.569304943084717
    8. '```' → logprob: -5.944304943084717
    9. '   ' → logprob: -6.069304943084717
    10. '       ' → logprob: -6.069304943084717

Token 2142: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.15268833935260773
    2. 'word' → logprob: -2.2776882648468018
    3. '][' → logprob: -4.027688503265381
    4. 'M' → logprob: -5.027688503265381
    5. 'n' → logprob: -5.277688503265381
    6. 'pos' → logprob: -5.902688503265381
    7. 'season' → logprob: -5.902688503265381
    8. ']' → logprob: -6.652688503265381
    9. '0' → logprob: -7.152688503265381
    10. '
' → logprob: -7.902688503265381

Token 2143: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.08119611442089081
    2. '][' → logprob: -3.4561960697174072
    3. ']' → logprob: -3.9561960697174072
    4. 'word' → logprob: -4.206196308135986
    5. ']_' → logprob: -5.956196308135986
    6. ']
' → logprob: -6.206196308135986
    7. '_' → logprob: -6.456196308135986
    8. '][_' → logprob: -6.706196308135986
    9. '_words' → logprob: -7.456196308135986
    10. '[' → logprob: -7.706196308135986

Token 2144: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06124888360500336
    2. '][' → logprob: -3.436248779296875
    3. ']=' → logprob: -4.311248779296875
    4. ' =' → logprob: -5.686248779296875
    5. '=' → logprob: -5.811248779296875
    6. ']
' → logprob: -6.186248779296875
    7. '   ' → logprob: -6.811248779296875
    8. '       ' → logprob: -7.436248779296875
    9. '][]' → logprob: -7.436248779296875
    10. '```' → logprob: -7.811248779296875

Token 2145: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.3039008378982544
    2. 'cur' → logprob: -1.6789008378982544
    3. 'season' → logprob: -2.678900718688965
    4. '][' → logprob: -6.053900718688965
    5. 'K' → logprob: -6.303900718688965
    6. '
' → logprob: -7.553900718688965
    7. ']' → logprob: -7.678900718688965
    8. 'M' → logprob: -7.928900718688965
    9. 'se' → logprob: -7.928900718688965
    10. '0' → logprob: -8.803900718688965

Token 2146: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.6985470056533813
    2. '_states' → logprob: -0.6985470056533813
    3. 'state' → logprob: -6.448546886444092
    4. ']' → logprob: -7.448546886444092
    5. ']_' → logprob: -7.448546886444092
    6. '_' → logprob: -7.573546886444092
    7. '_size' → logprob: -7.823546886444092
    8. '_s' → logprob: -7.948546886444092
    9. 'states' → logprob: -7.948546886444092
    10. '][' → logprob: -8.07354736328125

Token 2147: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.556130051612854
    2. '][' → logprob: -0.931130051612854
    3. ']=' → logprob: -4.5561299324035645
    4. '[' → logprob: -4.6811299324035645
    5. '=' → logprob: -6.1811299324035645
    6. '].' → logprob: -6.4311299324035645
    7. '[
' → logprob: -6.4311299324035645
    8. '][]' → logprob: -6.4311299324035645
    9. '],' → logprob: -7.1811299324035645
    10. ']
' → logprob: -7.3061299324035645

Token 2148: 'season' (ID: 38190)
  Prédit: 'season'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.051012035459280014
    2. 'K' → logprob: -3.1760120391845703
    3. ']' → logprob: -6.42601203918457
    4. 'M' → logprob: -6.55101203918457
    5. 'se' → logprob: -7.05101203918457
    6. 'cur' → logprob: -7.05101203918457
    7. '0' → logprob: -7.05101203918457
    8. '
' → logprob: -7.17601203918457
    9. '4' → logprob: -7.55101203918457
    10. ' season' → logprob: -8.30101203918457

Token 2149: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.13102427124977112
    2. '_mask' → logprob: -2.3810243606567383
    3. '_size' → logprob: -5.006024360656738
    4. '_count' → logprob: -5.256024360656738
    5. '_state' → logprob: -5.756024360656738
    6. '_f' → logprob: -5.756024360656738
    7. 'found' → logprob: -5.881024360656738
    8. ']_' → logprob: -6.006024360656738
    9. '_dim' → logprob: -6.631024360656738
    10. ']' → logprob: -7.006024360656738

Token 2150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04635990783572197
    2. '=' → logprob: -4.171360015869141
    3. '[' → logprob: -4.921360015869141
    4. ']=' → logprob: -5.046360015869141
    5. ' =' → logprob: -5.171360015869141
    6. '][' → logprob: -5.921360015869141
    7. ']
' → logprob: -6.046360015869141
    8. '_' → logprob: -6.546360015869141
    9. '   ' → logprob: -6.921360015869141
    10. '[
' → logprob: -7.296360015869141

Token 2151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.649760127067566
    2. ' =' → logprob: -1.774760127067566
    3. '[' → logprob: -1.899760127067566
    4. ']' → logprob: -2.0247602462768555
    5. '   ' → logprob: -2.2747602462768555
    6. '[
' → logprob: -2.5247602462768555
    7. '       ' → logprob: -3.0247602462768555
    8. '][' → logprob: -3.1497602462768555
    9. ']
' → logprob: -4.2747602462768555
    10. '=
' → logprob: -4.5247602462768555

Token 2152: ' nombre' (ID: 9733)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8419148921966553
    2. 'default' → logprob: -1.3419148921966553
    3. '0' → logprob: -1.4669148921966553
    4. '{}' → logprob: -3.3419148921966553
    5. '[[' → logprob: -3.5919148921966553
    6. '{' → logprob: -4.466915130615234
    7. '[
' → logprob: -6.341915130615234
    8. '{}
' → logprob: -8.341915130615234
    9. '[int' → logprob: -8.466915130615234
    10. ' [' → logprob: -9.466915130615234

Token 2153: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1437627077102661
    2. '_' → logprob: -1.1437627077102661
    3. '=' → logprob: -1.8937627077102661
    4. '[
' → logprob: -2.1437625885009766
    5. ']' → logprob: -2.7687625885009766
    6. ')' → logprob: -4.643762588500977
    7. '   ' → logprob: -5.393762588500977
    8. ' =' → logprob: -6.393762588500977
    9. 'def' → logprob: -6.518762588500977
    10. ',' → logprob: -6.643762588500977

Token 2154: ' façon' (ID: 33381)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.8620046973228455
    2. 'fa' → logprob: -1.8620047569274902
    3. ']' → logprob: -2.2370047569274902
    4. 'default' → logprob: -2.2370047569274902
    5. 'def' → logprob: -2.9870047569274902
    6. '[
' → logprob: -3.4870047569274902
    7. 'dé' → logprob: -3.7370047569274902
    8. 'states' → logprob: -4.11200475692749
    9. '```' → logprob: -4.11200475692749
    10. '#' → logprob: -4.23700475692749

Token 2155: '

' (ID: 279)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08032456040382385
    2. '[
' → logprob: -3.455324649810791
    3. '[' → logprob: -4.580324649810791
    4. '   ' → logprob: -4.705324649810791
    5. ']' → logprob: -4.830324649810791
    6. '=' → logprob: -5.330324649810791
    7. '       ' → logprob: -5.830324649810791
    8. ']
' → logprob: -6.705324649810791
    9. '
' → logprob: -6.705324649810791
    10. 'def' → logprob: -6.830324649810791

Token 2156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5683456659317017
    2. '   ' → logprob: -1.1933456659317017
    3. ']' → logprob: -2.943345546722412
    4. '[
' → logprob: -3.568345546722412
    5. ' =' → logprob: -4.943345546722412
    6. '[' → logprob: -4.943345546722412
    7. ']
' → logprob: -5.318345546722412
    8. '
' → logprob: -5.443345546722412
    9. '\t' → logprob: -5.818345546722412
    10. ',
' → logprob: -6.318345546722412

Token 2157: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8760253190994263
    2. '   ' → logprob: -1.6260253190994263
    3. ']' → logprob: -2.1260251998901367
    4. 'dp' → logprob: -2.2510251998901367
    5. '[
' → logprob: -3.1260251998901367
    6. '[' → logprob: -3.1260251998901367
    7. ',
' → logprob: -4.251025199890137
    8. ',' → logprob: -4.376025199890137
    9. '_' → logprob: -4.751025199890137
    10. '\' → logprob: -5.501025199890137

Token 2158: ' Compression' (ID: 133421)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42265936732292175
    2. 'dp' → logprob: -1.1726593971252441
    3. ']' → logprob: -5.047659397125244
    4. '][' → logprob: -5.172659397125244
    5. ']
' → logprob: -5.297659397125244
    6. 'import' → logprob: -5.422659397125244
    7. '   ' → logprob: -5.422659397125244
    8. '[
' → logprob: -6.297659397125244
    9. '```' → logprob: -6.547659397125244
    10. '
' → logprob: -6.922659397125244

Token 2159: ' mémoire' (ID: 79071)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44927993416786194
    2. '=' → logprob: -2.074280023574829
    3. '[' → logprob: -2.449280023574829
    4. '[
' → logprob: -2.949280023574829
    5. '   ' → logprob: -3.324280023574829
    6. '4' → logprob: -4.57427978515625
    7. '][' → logprob: -5.07427978515625
    8. ',' → logprob: -5.19927978515625
    9. '[]' → logprob: -5.57427978515625
    10. 'dp' → logprob: -5.69927978515625

Token 2160: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4371109008789062
    2. '[
' → logprob: -1.4371109008789062
    3. '   ' → logprob: -2.1871109008789062
    4. ']' → logprob: -2.3121109008789062
    5. '=' → logprob: -2.4371109008789062
    6. '```' → logprob: -3.4371109008789062
    7. '][' → logprob: -3.6871109008789062
    8. ',' → logprob: -3.8121109008789062
    9. ',
' → logprob: -3.8121109008789062
    10. ' =' → logprob: -4.312110900878906

Token 2161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6739839911460876
    2. 'dp' → logprob: -1.1739840507507324
    3. '   ' → logprob: -2.6739840507507324
    4. '[' → logprob: -3.0489840507507324
    5. '[
' → logprob: -3.7989840507507324
    6. ' dp' → logprob: -4.173984050750732
    7. 'import' → logprob: -5.673984050750732
    8. '"' → logprob: -5.798984050750732
    9. '`' → logprob: -5.923984050750732
    10. ''' → logprob: -6.173984050750732

Token 2162: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0897529274225235
    2. '[
' → logprob: -3.3397529125213623
    3. '[' → logprob: -4.339753150939941
    4. '#' (adapté à ' #') → logprob: -4.714753150939941
    5. 'prev' → logprob: -5.214753150939941
    6. '       ' → logprob: -5.339753150939941
    7. 'pos' → logprob: -5.839753150939941
    8. 'cur' → logprob: -5.964753150939941
    9. '   ' → logprob: -6.089753150939941
    10. '```' → logprob: -6.464753150939941

Token 2163: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2600351572036743
    2. '[
' → logprob: -2.5100350379943848
    3. '[' → logprob: -2.6350350379943848
    4. 'default' → logprob: -3.3850350379943848
    5. 'prev' → logprob: -4.385035037994385
    6. 'cur' → logprob: -4.885035037994385
    7. '   ' → logprob: -5.510035037994385
    8. '#' → logprob: -6.010035037994385
    9. '       ' → logprob: -6.135035037994385
    10. 'for' → logprob: -6.385035037994385

Token 2164: ' va' (ID: 3423)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9044065475463867
    2. 'from' → logprob: -2.0294065475463867
    3. 'def' → logprob: -2.1544065475463867
    4. '#' → logprob: -2.1544065475463867
    5. 'import' → logprob: -3.0294065475463867
    6. 'for' → logprob: -3.0294065475463867
    7. '=' → logprob: -3.6544065475463867
    8. 'dp' → logprob: -3.7794065475463867
    9. '       ' → logprob: -4.154406547546387
    10. '   ' → logprob: -4.779406547546387

Token 2165: ' faire' (ID: 8119)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.899061918258667
    2. 'initialize' → logprob: -1.899061918258667
    3. 'use' → logprob: -2.024061918258667
    4. 'dp' → logprob: -2.024061918258667
    5. 'init' → logprob: -3.149061918258667
    6. 'import' → logprob: -3.274061918258667
    7. '   ' → logprob: -3.774061918258667
    8. 'create' → logprob: -4.649062156677246
    9. '       ' → logprob: -4.774062156677246
    10. 'allocate' → logprob: -5.274062156677246

Token 2166: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.025253424420952797
    2. 'prev' → logprob: -4.7752532958984375
    3. 'cur' → logprob: -5.1502532958984375
    4. 'from' → logprob: -5.4002532958984375
    5. 'curr' → logprob: -5.5252532958984375
    6. '
' → logprob: -7.0252532958984375
    7. 'current' → logprob: -7.5252532958984375
    8. '   ' → logprob: -7.6502532958984375
    9. ' dp' → logprob: -9.025253295898438
    10. '```' → logprob: -10.025253295898438

Token 2167: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9380097985267639
    2. ' =' → logprob: -0.9380097985267639
    3. '_prev' → logprob: -2.563009738922119
    4. '_current' → logprob: -2.688009738922119
    5. '=
' → logprob: -4.063009738922119
    6. '=[' → logprob: -4.813009738922119
    7. '_=' → logprob: -4.813009738922119
    8. '=[]' → logprob: -4.938009738922119
    9. '_' → logprob: -5.188009738922119
    10. '_cur' → logprob: -5.563009738922119

Token 2168: ' "' (ID: 392)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -1.1945732831954956
    2. 'curr' → logprob: -1.3195732831954956
    3. 'current' → logprob: -2.194573402404785
    4. 'rolling' → logprob: -2.444573402404785
    5. 'cur' → logprob: -2.694573402404785
    6. '2' → logprob: -3.319573402404785
    7. 'double' → logprob: -3.569573402404785
    8. '[' → logprob: -3.569573402404785
    9. 'default' → logprob: -4.694573402404785
    10. '1' → logprob: -5.194573402404785

Token 2169: 'pos' (ID: 1103)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.0188416242599487
    2. 'current' → logprob: -1.8938416242599487
    3. 'curr' → logprob: -2.3938417434692383
    4. '[' → logprob: -3.0188417434692383
    5. 'layers' → logprob: -3.0188417434692383
    6. 'rolling' → logprob: -3.2688417434692383
    7. 'for' → logprob: -3.6438417434692383
    8. 'cur' → logprob: -3.6438417434692383
    9. 'two' → logprob: -3.7688417434692383
    10. 'range' → logprob: -4.018841743469238

Token 2170: '"' (ID: 1)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6886922717094421
    2. '```' → logprob: -1.563692331314087
    3. '=' → logprob: -2.438692331314087
    4. '
' → logprob: -3.188692331314087
    5. ']' → logprob: -3.313692331314087
    6. '   ' → logprob: -3.563692331314087
    7. '_' → logprob: -4.313692092895508
    8. '``' → logprob: -4.438692092895508
    9. '++' → logprob: -4.813692092895508
    10. '+
' → logprob: -4.938692092895508

Token 2171: ' it' (ID: 480)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7820448875427246
    2. '=' → logprob: -1.0320448875427246
    3. '=
' → logprob: -2.4070448875427246
    4. '   ' → logprob: -3.2820448875427246
    5. '[pos' → logprob: -4.657044887542725
    6. '```' → logprob: -5.157044887542725
    7. '       ' → logprob: -5.282044887542725
    8. '
' → logprob: -5.407044887542725
    9. '_prev' → logprob: -5.532044887542725
    10. '=[]
' → logprob: -5.782044887542725

Token 2172: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.025093231350183487
    2. 'ération' → logprob: -4.650093078613281
    3. '   ' → logprob: -4.900093078613281
    4. '=' → logprob: -5.900093078613281
    5. 'ér' → logprob: -6.775093078613281
    6. 'ter' → logprob: -7.150093078613281
    7. '
' → logprob: -7.275093078613281
    8. 'r' → logprob: -8.400093078613281
    9. 'érations' → logprob: -8.400093078613281
    10. 'ration' → logprob: -8.525093078613281

Token 2173: 'atif' (ID: 23984)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0617281049489975
    2. 'ration' → logprob: -3.686728000640869
    3. '
' → logprob: -4.936728000640869
    4. '   ' → logprob: -5.061728000640869
    5. 'ération' → logprob: -5.186728000640869
    6. 'range' → logprob: -5.936728000640869
    7. 'érer' → logprob: -6.186728000640869
    8. 'ation' → logprob: -6.311728000640869
    9. 'atif' → logprob: -6.561728000640869
    10. 'r' → logprob: -6.811728000640869

Token 2174: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7531129717826843
    2. '   ' → logprob: -1.253113031387329
    3. 'dp' → logprob: -1.628113031387329
    4. '
' → logprob: -3.878113031387329
    5. '```' → logprob: -4.37811279296875
    6. ' =' → logprob: -6.00311279296875
    7. 'import' → logprob: -6.00311279296875
    8. '_dp' → logprob: -6.75311279296875
    9. 'def' → logprob: -7.12811279296875
    10. '`' → logprob: -7.25311279296875

Token 2175: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0066175502724945545
    2. '       ' → logprob: -5.881617546081543
    3. '```' → logprob: -6.506617546081543
    4. '
' → logprob: -7.006617546081543
    5. 'cur' → logprob: -7.881617546081543
    6. 'prev' → logprob: -8.256617546081543
    7. 'from' → logprob: -8.381617546081543
    8. '   ' → logprob: -8.506617546081543
    9. ' dp' → logprob: -9.756617546081543
    10. '``' → logprob: -9.756617546081543

Token 2176: ' garde' (ID: 65309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4432034492492676
    2. '#' → logprob: -1.8182034492492676
    3. ' =' → logprob: -2.0682034492492676
    4. 'prev' → logprob: -2.4432034492492676
    5. 'initialize' → logprob: -2.5682034492492676
    6. 'will' → logprob: -2.6932034492492676
    7. ' will' → logprob: -3.0682034492492676
    8. '
' → logprob: -3.4432034492492676
    9. 'def' → logprob: -3.5682034492492676
    10. 'continue' → logprob: -3.5682034492492676

Token 2177: ' un' (ID: 537)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.9917386174201965
    2. 'two' → logprob: -1.8667385578155518
    3. 'dp' → logprob: -2.1167385578155518
    4. 'prev' → logprob: -2.4917385578155518
    5. 'current' → logprob: -2.7417385578155518
    6. '   ' → logprob: -3.3667385578155518
    7. 'cur' → logprob: -3.9917385578155518
    8. 'une' → logprob: -3.9917385578155518
    9. 'un' → logprob: -4.116738796234131
    10. 'curr' → logprob: -4.241738796234131

Token 2178: ' dict' (ID: 11878)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.13202925026416779
    2. 'dict' → logprob: -2.8820292949676514
    3. 'd' → logprob: -4.007029056549072
    4. 'from' → logprob: -4.257029056549072
    5. '
' → logprob: -4.882029056549072
    6. ' defaultdict' → logprob: -5.257029056549072
    7. '```' → logprob: -5.632029056549072
    8. 'dp' → logprob: -5.632029056549072
    9. 'prev' → logprob: -6.007029056549072
    10. 'current' → logprob: -6.757029056549072

Token 2179: '/map' (ID: 89146)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9137006402015686
    2. ' =' → logprob: -2.163700580596924
    3. '   ' → logprob: -2.288700580596924
    4. 'dp' → logprob: -2.663700580596924
    5. '={}
' → logprob: -2.913700580596924
    6. '=
' → logprob: -3.038700580596924
    7. '()
' → logprob: -3.163700580596924
    8. '{}
' → logprob: -3.413700580596924
    9. '
' → logprob: -4.038700580596924
    10. '{}' → logprob: -4.288700580596924

Token 2180: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0983489751815796
    2. ']' → logprob: -1.5983489751815796
    3. '=' → logprob: -1.7233489751815796
    4. ' =' → logprob: -2.223349094390869
    5. '{' → logprob: -2.598349094390869
    6. '       ' → logprob: -3.848349094390869
    7. ':' → logprob: -4.723349094390869
    8. ')' → logprob: -4.723349094390869
    9. '_' → logprob: -4.723349094390869
    10. '[' → logprob: -5.098349094390869

Token 2181: ' array' (ID: 2644)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0004290003562346101
    2. '
' → logprob: -8.500429153442383
    3. 'dp' → logprob: -10.000429153442383
    4. '[]
' → logprob: -10.500429153442383
    5. '#' → logprob: -10.750429153442383
    6. ' defaultdict' → logprob: -10.875429153442383
    7. '```' → logprob: -11.000429153442383
    8. 'def' → logprob: -11.500429153442383
    9. 'list' → logprob: -11.500429153442383
    10. '[]' → logprob: -11.625429153442383

Token 2182: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48871564865112305
    2. '[' → logprob: -2.113715648651123
    3. ' =' → logprob: -2.738715648651123
    4. ']' → logprob: -2.863715648651123
    5. '_' → logprob: -3.113715648651123
    6. '[
' → logprob: -3.738715648651123
    7. '{' → logprob: -3.988715648651123
    8. '   ' → logprob: -3.988715648651123
    9. ',' → logprob: -4.863715648651123
    10. '```' → logprob: -5.113715648651123

Token 2183: ' dp' (ID: 21546)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8671001195907593
    2. 'dp' → logprob: -0.9921001195907593
    3. 'cur' → logprob: -3.367100238800049
    4. 'la' → logprob: -3.492100238800049
    5. '{}' → logprob: -3.492100238800049
    6. '
' → logprob: -3.992100238800049
    7. 'None' → logprob: -4.367100238800049
    8. 'current' → logprob: -4.367100238800049
    9. '[' → logprob: -4.492100238800049
    10. 'prev' → logprob: -4.617100238800049

Token 2184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34326717257499695
    2. '   ' → logprob: -1.5932672023773193
    3. 'dp' → logprob: -2.5932672023773193
    4. '```' → logprob: -5.34326696395874
    5. '
' → logprob: -6.21826696395874
    6. '[
' → logprob: -6.96826696395874
    7. ']' → logprob: -7.21826696395874
    8. '[' → logprob: -7.21826696395874
    9. '_dp' → logprob: -7.59326696395874
    10. '`' → logprob: -7.84326696395874

Token 2185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9648585319519043
    2. ' =' → logprob: -1.5898585319519043
    3. '=' → logprob: -1.8398585319519043
    4. 'dp' → logprob: -1.9648585319519043
    5. '   ' → logprob: -3.0898585319519043
    6. '```' → logprob: -3.9648585319519043
    7. '_dp' → logprob: -4.214858531951904
    8. '_prev' → logprob: -5.089858531951904
    9. '
' → logprob: -5.214858531951904
    10. '=
' → logprob: -5.464858531951904

Token 2186: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3879915177822113
    2. 'dp' → logprob: -1.2629915475845337
    3. '   ' → logprob: -4.887991428375244
    4. ']' → logprob: -5.012991428375244
    5. '{' → logprob: -5.387991428375244
    6. '{
' → logprob: -5.512991428375244
    7. '=' → logprob: -6.012991428375244
    8. 'prev' → logprob: -6.387991428375244
    9. '[
' → logprob: -6.512991428375244
    10. '[' → logprob: -6.637991428375244

Token 2187: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03505842760205269
    2. '       ' → logprob: -3.4100584983825684
    3. '   ' → logprob: -8.03505802154541
    4. '```' → logprob: -8.03505802154541
    5. 'from' → logprob: -8.16005802154541
    6. '
' → logprob: -8.91005802154541
    7. 'prev' → logprob: -9.78505802154541
    8. 'cur' → logprob: -9.78505802154541
    9. ' dp' → logprob: -10.16005802154541
    10. 'curr' → logprob: -10.53505802154541

Token 2188: ' gard' (ID: 18283)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7413261532783508
    2. '
' → logprob: -2.366326093673706
    3. '       ' → logprob: -2.366326093673706
    4. 'dp' → logprob: -2.491326093673706
    5. '#' → logprob: -2.616326093673706
    6. 'def' → logprob: -3.241326093673706
    7. 'prev' → logprob: -3.491326093673706
    8. 'from' → logprob: -3.741326093673706
    9. '   ' → logprob: -3.991326093673706
    10. 'will' → logprob: -4.366326332092285

Token 2189: 'era' (ID: 2060)
  Prédit: 'era'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'era' → logprob: -0.7096940279006958
    2. 'er' → logprob: -1.0846940279006958
    3. 'e' → logprob: -1.8346940279006958
    4. 'ra' → logprob: -4.834693908691406
    5. 'eras' → logprob: -7.334693908691406
    6. 'érer' → logprob: -7.959693908691406
    7. 'rait' → logprob: -8.209693908691406
    8. 'a' → logprob: -8.459693908691406
    9. '```' → logprob: -8.584693908691406
    10. 'éra' → logprob: -9.084693908691406

Token 2190: ' dp' (ID: 21546)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8167663812637329
    2. '[
' → logprob: -0.8167663812637329
    3. '[' → logprob: -2.6917662620544434
    4. '[]
' → logprob: -4.816766262054443
    5. '{}' → logprob: -4.941766262054443
    6. '   ' → logprob: -4.941766262054443
    7. ']' → logprob: -6.066766262054443
    8. '```' → logprob: -6.066766262054443
    9. 'le' → logprob: -6.191766262054443
    10. '{' → logprob: -6.441766262054443

Token 2191: '_current' (ID: 23981)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.53508061170578
    2. ' =' → logprob: -1.6600806713104248
    3. '_current' → logprob: -2.660080671310425
    4. '_cur' → logprob: -2.660080671310425
    5. '_prev' → logprob: -3.160080671310425
    6. '=[' → logprob: -4.535080432891846
    7. '_curr' → logprob: -4.785080432891846
    8. 'cur' → logprob: -5.410080432891846
    9. '=[]' → logprob: -5.660080432891846
    10. '={}' → logprob: -6.160080432891846

Token 2192: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7460974454879761
    2. '_current' → logprob: -1.371097445487976
    3. '   ' → logprob: -2.3710975646972656
    4. '```' → logprob: -2.7460975646972656
    5. '
' → logprob: -3.2460975646972656
    6. ' =' → logprob: -3.7460975646972656
    7. '=' → logprob: -3.8710975646972656
    8. ']' → logprob: -4.996097564697266
    9. '`' → logprob: -6.121097564697266
    10. 'current' → logprob: -6.246097564697266

Token 2193: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.5107177862082608e-05
    2. '
' → logprob: -10.875024795532227
    3. '```' → logprob: -12.375024795532227
    4. ' dp' → logprob: -13.750024795532227
    5. '   ' → logprob: -15.000024795532227
    6. '_dp' → logprob: -15.250024795532227
    7. '``' → logprob: -16.500024795532227
    8. '       ' → logprob: -16.750024795532227
    9. '	dp' → logprob: -16.750024795532227
    10. 'd' → logprob: -17.375024795532227

Token 2194: '_next' (ID: 25436)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.09077447652816772
    2. '_next' → logprob: -2.5907745361328125
    3. '_previous' → logprob: -5.0907745361328125
    4. '_prev' → logprob: -5.2157745361328125
    5. '```' → logprob: -8.965774536132812
    6. '_old' → logprob: -10.590774536132812
    7. ' =' → logprob: -10.965774536132812
    8. 'current' → logprob: -10.965774536132812
    9. '_' → logprob: -11.465774536132812
    10. '_future' → logprob: -11.965774536132812

Token 2195: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09909376502037048
    2. 'dp' → logprob: -2.9740936756134033
    3. '
' → logprob: -3.5990936756134033
    4. '   ' → logprob: -4.474093914031982
    5. '```' → logprob: -5.974093914031982
    6. '        
' → logprob: -8.099093437194824
    7. 'def' → logprob: -8.224093437194824
    8. '#' → logprob: -8.474093437194824
    9. 'import' → logprob: -8.724093437194824
    10. '           ' → logprob: -8.849093437194824

Token 2196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009202509187161922
    2. '   ' → logprob: -5.759202480316162
    3. '```' → logprob: -6.134202480316162
    4. '
' → logprob: -6.259202480316162
    5. 'dp' → logprob: -6.884202480316162
    6. '`' → logprob: -8.25920295715332
    7. '        
' → logprob: -8.38420295715332
    8. '           ' → logprob: -9.50920295715332
    9. ')' → logprob: -9.75920295715332
    10. ']' → logprob: -9.88420295715332

Token 2197: ' import' (ID: 1588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01943519338965416
    2. '
' → logprob: -5.269435405731201
    3. 'dp' → logprob: -5.644435405731201
    4. '```' → logprob: -5.894435405731201
    5. '   ' → logprob: -6.019435405731201
    6. '        
' → logprob: -6.144435405731201
    7. '`' → logprob: -6.769435405731201
    8. '{
' → logprob: -7.894435405731201
    9. '`
' → logprob: -8.644434928894043
    10. '           ' → logprob: -8.769434928894043

Token 2198: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.00465523824095726
    2. 'sys' → logprob: -5.504655361175537
    3. 'heap' → logprob: -7.754655361175537
    4. 'math' → logprob: -9.504654884338379
    5. 'bis' → logprob: -9.754654884338379
    6. 'array' → logprob: -11.254654884338379
    7. 'copy' → logprob: -13.379654884338379
    8. 'deque' → logprob: -15.129654884338379
    9. ' collections' → logprob: -15.504654884338379
    10. '
' → logprob: -15.754654884338379

Token 2199: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008233580738306046
    2. '       ' → logprob: -4.883233547210693
    3. '   ' → logprob: -8.258234024047852
    4. '
' → logprob: -8.258234024047852
    5. '```' → logprob: -9.383234024047852
    6. '        
' → logprob: -11.883234024047852
    7. '#' → logprob: -12.508234024047852
    8. ' dp' → logprob: -12.508234024047852
    9. 'def' → logprob: -12.633234024047852
    10. '``' → logprob: -13.008234024047852

Token 2200: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13746538758277893
    2. '       ' → logprob: -2.137465476989746
    3. '
' → logprob: -4.887465476989746
    4. '```' → logprob: -6.762465476989746
    5. '   ' → logprob: -7.137465476989746
    6. '        
' → logprob: -7.387465476989746
    7. ' dp' → logprob: -8.637465476989746
    8. 'def' → logprob: -10.137465476989746
    9. 'DP' → logprob: -10.387465476989746
    10. '    
' → logprob: -10.637465476989746

Token 2201: ' trans' (ID: 1643)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01019374467432499
    2. '#' → logprob: -5.385193824768066
    3. '       ' → logprob: -5.510193824768066
    4. '   ' → logprob: -7.385193824768066
    5. 'word' → logprob: -8.385193824768066
    6. 'ac' → logprob: -8.885193824768066
    7. 'next' → logprob: -9.010193824768066
    8. 'pre' → logprob: -9.385193824768066
    9. '
' → logprob: -9.510193824768066
    10. 'def' → logprob: -9.885193824768066

Token 2202: ' =' (ID: 314)
  Prédit: 'itions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.15522587299346924
    2. ' =' → logprob: -2.1552257537841797
    3. 'ition' → logprob: -3.6552257537841797
    4. '=' → logprob: -7.03022575378418
    5. 'it' → logprob: -8.53022575378418
    6. '   ' → logprob: -8.65522575378418
    7. '={
' → logprob: -8.90522575378418
    8. '
' → logprob: -9.03022575378418
    9. '=[]
' → logprob: -9.40522575378418
    10. '_table' → logprob: -9.53022575378418

Token 2203: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5772149562835693
    2. '[[' → logprob: -0.8272149562835693
    3. '[{' → logprob: -7.077215194702148
    4. ' [' → logprob: -9.077215194702148
    5. ' [{}' → logprob: -9.077215194702148
    6. '[]
' → logprob: -9.452215194702148
    7. ' [[' → logprob: -9.577215194702148
    8. '[]' → logprob: -10.202215194702148
    9. '[
' → logprob: -12.452215194702148
    10. '{}' → logprob: -12.577215194702148

Token 2204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21278105676174164
    2. '{}' → logprob: -2.2127809524536133
    3. '[' → logprob: -2.7127809524536133
    4. 'dict' → logprob: -5.087780952453613
    5. '(' → logprob: -5.587780952453613
    6. 'ac' → logprob: -6.462780952453613
    7. '{' → logprob: -6.712780952453613
    8. 'None' → logprob: -7.212780952453613
    9. '[]' → logprob: -7.337780952453613
    10. ']' → logprob: -8.087780952453613

Token 2205: ']*' (ID: 18579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3687712848186493
    2. ' for' → logprob: -1.8687713146209717
    3. ']' → logprob: -2.3687713146209717
    4. '][' → logprob: -2.8687713146209717
    5. '       ' → logprob: -6.743771076202393
    6. '[' → logprob: -7.243771076202393
    7. '[len' → logprob: -7.993771076202393
    8. ']*' → logprob: -8.24377155303955
    9. '           ' → logprob: -8.36877155303955
    10. '[c' → logprob: -8.86877155303955

Token 2206: 'ac' (ID: 359)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.052753694355487823
    2. '(len' → logprob: -3.3027536869049072
    3. 'ac' → logprob: -5.052753925323486
    4. 'n' → logprob: -6.302753925323486
    5. '21' → logprob: -6.427753925323486
    6. '(' → logprob: -7.052753925323486
    7. 'max' → logprob: -7.052753925323486
    8. '(ac' → logprob: -7.302753925323486
    9. '(n' → logprob: -7.427753925323486
    10. '20' → logprob: -7.677753925323486

Token 2207: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.02975500375032425
    2. 'states' → logprob: -3.529755115509033
    3. 'States' → logprob: -13.404754638671875
    4. ' states' → logprob: -13.529754638671875
    5. '[' → logprob: -14.779754638671875
    6. '
' → logprob: -15.154754638671875
    7. 'state' → logprob: -15.279754638671875
    8. '(states' → logprob: -15.404754638671875
    9. '.states' → logprob: -15.654754638671875
    10. 's' → logprob: -16.029754638671875

Token 2208: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08949530869722366
    2. ' for' → logprob: -2.4644954204559326
    3. ']' → logprob: -8.589495658874512
    4. '       ' → logprob: -8.589495658874512
    5. '           ' → logprob: -9.839495658874512
    6. '   ' → logprob: -10.089495658874512
    7. '[len' → logprob: -10.464495658874512
    8. '               ' → logprob: -11.214495658874512
    9. 'len' → logprob: -12.214495658874512
    10. '[' → logprob: -12.214495658874512

Token 2209: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6975555419921875
    2. '_range' → logprob: -0.6975555419921875
    3. 'range' → logprob: -6.4475555419921875
    4. ' range' → logprob: -6.6975555419921875
    5. '_i' → logprob: -7.5725555419921875
    6. '_word' → logprob: -8.072555541992188
    7. '_w' → logprob: -8.447555541992188
    8. '_words' → logprob: -8.697555541992188
    9. ' _' → logprob: -9.697555541992188
    10. '_r' → logprob: -10.197555541992188

Token 2210: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05814746394753456
    2. ' range' → logprob: -3.183147430419922
    3. '_' → logprob: -4.433147430419922
    4. '_range' → logprob: -5.808147430419922
    5. 'in' → logprob: -9.683147430419922
    6. 'i' → logprob: -11.058147430419922
    7. ' in' → logprob: -11.308147430419922
    8. 'n' → logprob: -11.308147430419922
    9. '   ' → logprob: -11.433147430419922
    10. '	range' → logprob: -11.808147430419922

Token 2211: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001179512357339263
    2. ' range' → logprob: -6.7511796951293945
    3. '_range' → logprob: -11.751179695129395
    4. '_' → logprob: -13.876179695129395
    5. '(range' → logprob: -14.751179695129395
    6. '
' → logprob: -16.376178741455078
    7. '	range' → logprob: -16.751178741455078
    8. '   ' → logprob: -18.001178741455078
    9. ')' → logprob: -19.751178741455078
    10. ']' → logprob: -20.126178741455078

Token 2212: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23245924711227417
    2. 'range' → logprob: -1.607459306716919
    3. 'words' → logprob: -5.73245906829834
    4. 'word' → logprob: -6.73245906829834
    5. ' range' → logprob: -6.98245906829834
    6. '(n' → logprob: -7.23245906829834
    7. '   ' → logprob: -8.23245906829834
    8. '       ' → logprob: -8.73245906829834
    9. '           ' → logprob: -8.85745906829834
    10. ' n' → logprob: -8.85745906829834

Token 2213: 'words' (ID: 10020)
  Prédit: 'words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.005968492478132248
    2. 'w' → logprob: -5.6309685707092285
    3. 'ords' → logprob: -6.7559685707092285
    4. '_words' → logprob: -7.0059685707092285
    5. ']' → logprob: -9.00596809387207
    6. ')' → logprob: -9.75596809387207
    7. 'word' → logprob: -11.00596809387207
    8. '])' → logprob: -11.13096809387207
    9. '(words' → logprob: -11.25596809387207
    10. 'n' → logprob: -11.50596809387207

Token 2214: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5784505605697632
    2. ')]
' → logprob: -0.8284505605697632
    3. '       ' → logprob: -6.078450679779053
    4. ']' → logprob: -9.578450202941895
    5. ')]
' → logprob: -9.703450202941895
    6. ')]

' → logprob: -10.453450202941895
    7. ']
' → logprob: -10.703450202941895
    8. '   ' → logprob: -11.328450202941895
    9. ')][' → logprob: -12.328450202941895
    10. ' )' → logprob: -12.828450202941895

Token 2215: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001896033063530922
    2. '       ' → logprob: -6.501895904541016
    3. ' for' → logprob: -8.126895904541016
    4. 'import' → logprob: -10.501895904541016
    5. 'word' → logprob: -10.626895904541016
    6. '```' → logprob: -10.626895904541016
    7. '   ' → logprob: -11.751895904541016
    8. 'words' → logprob: -12.751895904541016
    9. '
' → logprob: -13.501895904541016
    10. '[word' → logprob: -13.751895904541016

Token 2216: ' secr' (ID: 96175)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0025647184811532497
    2. 'found' → logprob: -6.752564907073975
    3. 'trans' → logprob: -7.627564907073975
    4. ' for' → logprob: -8.127564430236816
    5. 'season' → logprob: -9.252564430236816
    6. 'visited' → logprob: -9.377564430236816
    7. 'output' → logprob: -9.502564430236816
    8. 'set' → logprob: -9.877564430236816
    9. '```' → logprob: -9.877564430236816
    10. 'import' → logprob: -10.002564430236816

Token 2217: ' =' (ID: 314)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.2265705019235611
    2. 'ets' → logprob: -1.8515704870224
    3. 't' → logprob: -4.1015706062316895
    4. 'e' → logprob: -4.3515706062316895
    5. 'ret' → logprob: -4.9765706062316895
    6. 'trans' → logprob: -6.7265706062316895
    7. '=' → logprob: -6.8515706062316895
    8. 'eted' → logprob: -7.2265706062316895
    9. 'ts' → logprob: -7.4765706062316895
    10. '```' → logprob: -7.6015706062316895

Token 2218: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010551994200795889
    2. '[[' → logprob: -7.2510552406311035
    3. '[{' → logprob: -8.001054763793945
    4. '[new' → logprob: -12.501054763793945
    5. '[e' → logprob: -13.626054763793945
    6. '[u' → logprob: -14.251054763793945
    7. '[i' → logprob: -14.251054763793945
    8. '[s' → logprob: -14.251054763793945
    9. '[f' → logprob: -14.626054763793945
    10. '[start' → logprob: -14.751054763793945

Token 2219: 'set' (ID: 977)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048671845346689224
    2. 'set' → logprob: -3.0486719608306885
    3. ' [' → logprob: -10.17367172241211
    4. '   ' → logprob: -11.04867172241211
    5. '[]' → logprob: -11.29867172241211
    6. '0' → logprob: -12.42367172241211
    7. '       ' → logprob: -13.17367172241211
    8. '[s' → logprob: -13.17367172241211
    9. 'sets' → logprob: -13.54867172241211
    10. '[
' → logprob: -13.67367172241211

Token 2220: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10137809813022614
    2. '()]' → logprob: -2.6013782024383545
    3. '(n' → logprob: -4.976377964019775
    4. '()
' → logprob: -5.101377964019775
    5. ']()' → logprob: -6.101377964019775
    6. '(range' → logprob: -6.351377964019775
    7. '()[' → logprob: -6.476377964019775
    8. ']' → logprob: -7.351377964019775
    9. '(i' → logprob: -7.726377964019775
    10. '()]
' → logprob: -7.851377964019775

Token 2221: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49482688307762146
    2. '(n' → logprob: -1.1198269128799438
    3. ' for' → logprob: -3.4948267936706543
    4. '[n' → logprob: -4.119826793670654
    5. ']' → logprob: -5.369826793670654
    6. '       ' → logprob: -5.494826793670654
    7. '(range' → logprob: -6.119826793670654
    8. '           ' → logprob: -6.369826793670654
    9. '][' → logprob: -6.869826793670654
    10. 'range' → logprob: -7.869826793670654

Token 2222: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00010342398309148848
    2. '_range' → logprob: -10.250102996826172
    3. 'range' → logprob: -10.750102996826172
    4. '_word' → logprob: -10.875102996826172
    5. ' range' → logprob: -11.125102996826172
    6. '_w' → logprob: -12.625102996826172
    7. '_=' → logprob: -12.625102996826172
    8. '_
' → logprob: -13.250102996826172
    9. '_i' → logprob: -14.000102996826172
    10. '_n' → logprob: -14.000102996826172

Token 2223: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.076218025758862e-05
    2. ' range' → logprob: -10.250070571899414
    3. '_' → logprob: -10.625070571899414
    4. '_range' → logprob: -11.750070571899414
    5. '(range' → logprob: -12.750070571899414
    6. '   ' → logprob: -16.000070571899414
    7. '	range' → logprob: -16.125070571899414
    8. '_RANGE' → logprob: -17.375070571899414
    9. '
' → logprob: -17.750070571899414
    10. 'r' → logprob: -18.125070571899414

Token 2224: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015072436071932316
    2. ' range' → logprob: -6.50150728225708
    3. '_' → logprob: -12.876506805419922
    4. '(range' → logprob: -13.251506805419922
    5. '_range' → logprob: -15.001506805419922
    6. '   ' → logprob: -15.876506805419922
    7. '
' → logprob: -16.751506805419922
    8. '	range' → logprob: -17.501506805419922
    9. '       ' → logprob: -18.126506805419922
    10. '    ' → logprob: -19.251506805419922

Token 2225: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00911402516067028
    2. '(n' → logprob: -5.509113788604736
    3. '(range' → logprob: -6.009113788604736
    4. ' range' → logprob: -6.009113788604736
    5. 'n' → logprob: -9.134114265441895
    6. '_range' → logprob: -14.259114265441895
    7. '[n' → logprob: -14.634114265441895
    8. '
' → logprob: -14.884114265441895
    9. '   ' → logprob: -14.884114265441895
    10. 'Range' → logprob: -15.384114265441895

Token 2226: 'words' (ID: 10020)
  Prédit: 'words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -1.580929347255733e-05
    2. 'w' → logprob: -11.125016212463379
    3. 'word' → logprob: -14.500016212463379
    4. '_words' → logprob: -15.750016212463379
    5. 'wo' → logprob: -15.875016212463379
    6. 'works' → logprob: -16.750015258789062
    7. 'ords' → logprob: -16.875015258789062
    8. '(words' → logprob: -16.875015258789062
    9. 'ow' → logprob: -17.375015258789062
    10. 'WORDS' → logprob: -17.500015258789062

Token 2227: ')]

' (ID: 56882)
  Prédit: ')]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.4789624512195587
    2. ')]' → logprob: -0.9789624214172363
    3. '       ' → logprob: -5.603962421417236
    4. ')]

' → logprob: -7.228962421417236
    5. ')]
' → logprob: -8.478962898254395
    6. ']' → logprob: -9.103962898254395
    7. ']
' → logprob: -9.603962898254395
    8. '   ' → logprob: -10.978962898254395
    9. ')][' → logprob: -10.978962898254395
    10. '           ' → logprob: -11.978962898254395

Token 2228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12709052860736847
    2. 'for' → logprob: -2.1270904541015625
    3. ' for' → logprob: -9.377090454101562
    4. '   ' → logprob: -10.127090454101562
    5. 'import' → logprob: -10.752090454101562
    6. '	for' → logprob: -12.502090454101562
    7. '```' → logprob: -12.627090454101562
    8. '
' → logprob: -13.127090454101562
    9. '           ' → logprob: -13.252090454101562
    10. 'def' → logprob: -13.377090454101562

Token 2229: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.2729995988775045e-06
    2. '       ' → logprob: -12.000006675720215
    3. ' for' → logprob: -17.2500057220459
    4. '#' → logprob: -18.2500057220459
    5. '   ' → logprob: -18.6250057220459
    6. '```' → logprob: -19.8750057220459
    7. 'import' → logprob: -20.6250057220459
    8. '
' → logprob: -20.6250057220459
    9. '	for' → logprob: -21.8750057220459
    10. 'word' → logprob: -22.1250057220459

Token 2230: ' wi' (ID: 20219)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27708205580711365
    2. 'w' → logprob: -1.527082085609436
    3. 'word' → logprob: -4.5270819664001465
    4. 'wi' → logprob: -5.0270819664001465
    5. 'idx' → logprob: -5.1520819664001465
    6. 'wid' → logprob: -6.5270819664001465
    7. 'iw' → logprob: -9.152082443237305
    8. ' i' → logprob: -9.652082443237305
    9. ' w' → logprob: -10.902082443237305
    10. 'id' → logprob: -11.902082443237305

Token 2231: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42059019207954407
    2. 'n' → logprob: -1.4205901622772217
    3. 'in' → logprob: -2.2955901622772217
    4. 'w' → logprob: -8.1705904006958
    5. ',' → logprob: -8.2955904006958
    6. 'for' → logprob: -9.0455904006958
    7. 't' → logprob: -9.0455904006958
    8. 'x' → logprob: -9.4205904006958
    9. 'nd' → logprob: -9.9205904006958
    10. 'range' → logprob: -10.2955904006958

Token 2232: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.165027217415627e-05
    2. ' range' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.50002098083496
    4. '
' → logprob: -17.25002098083496
    5. '(range' → logprob: -18.25002098083496
    6. '0' → logprob: -18.75002098083496
    7. 'word' → logprob: -19.00002098083496
    8. ' ' → logprob: -19.25002098083496
    9. '	range' → logprob: -19.25002098083496
    10. 'in' → logprob: -19.50002098083496

Token 2233: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0030083691235631704
    2. 'len' → logprob: -5.8780083656311035
    3. '(n' → logprob: -9.003008842468262
    4. ' n' → logprob: -10.003008842468262
    5. 'range' → logprob: -11.003008842468262
    6. '(len' → logprob: -11.628008842468262
    7. '   ' → logprob: -12.128008842468262
    8. '       ' → logprob: -13.628008842468262
    9. '0' → logprob: -14.128008842468262
    10. '           ' → logprob: -14.753008842468262

Token 2234: 'words' (ID: 10020)
  Prédit: 'words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.0008498902898281813
    2. 'w' → logprob: -7.250849723815918
    3. 'word' → logprob: -9.250849723815918
    4. '_words' → logprob: -10.375849723815918
    5. ')' → logprob: -12.500849723815918
    6. '(words' → logprob: -12.625849723815918
    7. 'ords' → logprob: -13.750849723815918
    8. 'len' → logprob: -13.750849723815918
    9. ' words' → logprob: -14.125849723815918
    10. 'WORDS' → logprob: -14.125849723815918

Token 2235: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010355977341532707
    2. '):' → logprob: -4.6353559494018555
    3. '       ' → logprob: -7.6353559494018555
    4. ':
' → logprob: -10.260355949401855
    5. ':' → logprob: -10.635355949401855
    6. '           ' → logprob: -10.760355949401855
    7. '   ' → logprob: -10.885355949401855
    8. '):
' → logprob: -11.885355949401855
    9. ')' → logprob: -13.135355949401855
    10. ' ):
' → logprob: -13.135355949401855

Token 2236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016980495303869247
    2. 'word' → logprob: -4.5169806480407715
    3. ' word' → logprob: -5.2669806480407715
    4. '       ' → logprob: -8.141980171203613
    5. '   ' → logprob: -8.516980171203613
    6. '```' → logprob: -9.641980171203613
    7. '               ' → logprob: -10.266980171203613
    8. ' for' → logprob: -10.266980171203613
    9. 'for' → logprob: -10.516980171203613
    10. 's' → logprob: -10.891980171203613

Token 2237: ' w' (ID: 286)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.057319652289152145
    2. '           ' → logprob: -3.6823196411132812
    3. 'w' (adapté à ' w') → logprob: -3.9323196411132812
    4. 'for' → logprob: -4.682319641113281
    5. ' word' → logprob: -6.682319641113281
    6. ' w' → logprob: -8.807319641113281
    7. '       ' → logprob: -9.432319641113281
    8. 's' → logprob: -9.557319641113281
    9. ' for' → logprob: -9.932319641113281
    10. 'ws' → logprob: -10.557319641113281

Token 2238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.031005002558231354
    2. ' =' → logprob: -3.5310049057006836
    3. 's' → logprob: -7.531004905700684
    4. 'ord' → logprob: -8.406004905700684
    5. 'for' → logprob: -8.906004905700684
    6. 'ords' → logprob: -8.906004905700684
    7. 'len' → logprob: -10.031004905700684
    8. 'str' → logprob: -10.531004905700684
    9. '=w' → logprob: -10.781004905700684
    10. '=
' → logprob: -11.156004905700684

Token 2239: ' word' (ID: 2195)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.0545363575220108
    2. 'word' → logprob: -3.0545363426208496
    3. ' words' → logprob: -5.17953634262085
    4. ' word' → logprob: -8.179536819458008
    5. '(words' → logprob: -11.679536819458008
    6. 'len' → logprob: -12.429536819458008
    7. 'w' → logprob: -13.054536819458008
    8. '           ' → logprob: -13.304536819458008
    9. '       ' → logprob: -13.679536819458008
    10. '   ' → logprob: -14.429536819458008

Token 2240: '_strings' (ID: 87251)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5190332531929016
    2. '=' → logprob: -1.0190331935882568
    3. 's' → logprob: -4.144033432006836
    4. '_strings' → logprob: -4.519033432006836
    5. '_str' → logprob: -4.769033432006836
    6. '_len' → logprob: -5.519033432006836
    7. '_' → logprob: -6.269033432006836
    8. '_s' → logprob: -6.394033432006836
    9. '_=' → logprob: -8.644033432006836
    10. '=_' → logprob: -8.769033432006836

Token 2241: '[' (ID: 58)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.212076798081398
    2. 'for' → logprob: -2.2120769023895264
    3. '
' → logprob: -2.8370769023895264
    4. ' for' → logprob: -4.962076663970947
    5. ' =' → logprob: -5.587076663970947
    6. ':
' → logprob: -5.962076663970947
    7. '```' → logprob: -6.212076663970947
    8. ':' → logprob: -6.712076663970947
    9. '               ' → logprob: -6.837076663970947
    10. '       ' → logprob: -6.837076663970947

Token 2242: 'wi' (ID: 7491)
  Prédit: 'wi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -2.696889623621246e-06
    2. ' wi' → logprob: -12.87500286102295
    3. 'w' → logprob: -17.875001907348633
    4. '[' → logprob: -18.875001907348633
    5. 'Wi' → logprob: -19.500001907348633
    6. '
' → logprob: -19.625001907348633
    7. '       ' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.250001907348633
    9. 'wifi' → logprob: -21.500001907348633
    10. ')' → logprob: -21.625001907348633

Token 2243: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34018921852111816
    2. ']
' → logprob: -1.5901892185211182
    3. ']' → logprob: -2.965189218521118
    4. '):
' → logprob: -4.465188980102539
    5. ']:
' → logprob: -4.715188980102539
    6. ')
' → logprob: -5.465188980102539
    7. ':
' → logprob: -5.465188980102539
    8. '       ' → logprob: -6.715188980102539
    9. ')' → logprob: -6.840188980102539
    10. '][' → logprob: -8.465188980102539

Token 2244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010560780763626099
    2. '   ' → logprob: -5.760560989379883
    3. 'ac' → logprob: -6.135560989379883
    4. 'state' → logprob: -6.260560989379883
    5. ' ac' → logprob: -6.885560989379883
    6. 'cur' → logprob: -7.135560989379883
    7. '       ' → logprob: -7.510560989379883
    8. '```' → logprob: -7.885560989379883
    9. 'for' → logprob: -8.260560989379883
    10. ' ' → logprob: -9.760560989379883

Token 2245: ' for' (ID: 395)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.12196950614452362
    2. 'cur' → logprob: -3.12196946144104
    3. '           ' → logprob: -3.24696946144104
    4. 'state' → logprob: -3.99696946144104
    5. 'for' (adapté à ' for') → logprob: -4.621969699859619
    6. ' ac' → logprob: -6.246969699859619
    7. '   ' → logprob: -7.371969699859619
    8. '       ' → logprob: -7.996969699859619
    9. 'st' → logprob: -8.621969223022461
    10. 'pos' → logprob: -8.871969223022461

Token 2246: ' st' (ID: 420)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.007517415564507246
    2. 'state' → logprob: -5.882517337799072
    3. 'c' → logprob: -6.757517337799072
    4. 'pos' → logprob: -7.007517337799072
    5. ' ac' → logprob: -7.132517337799072
    6. 'st' → logprob: -7.257517337799072
    7. 's' → logprob: -8.38251781463623
    8. 'i' → logprob: -8.63251781463623
    9. 'ai' → logprob: -9.00751781463623
    10. 'a' → logprob: -9.63251781463623

Token 2247: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09682872146368027
    2. 'ate' → logprob: -3.0968286991119385
    3. 'in' → logprob: -3.0968286991119385
    4. 't' → logprob: -7.721828937530518
    5. ' ' → logprob: -7.721828937530518
    6. 'ac' → logprob: -7.846828937530518
    7. 'ates' → logprob: -8.84682846069336
    8. '0' → logprob: -9.09682846069336
    9. 'i' → logprob: -9.34682846069336
    10. 'e' → logprob: -10.09682846069336

Token 2248: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011068218387663364
    2. ' range' → logprob: -4.511068344116211
    3. '0' → logprob: -11.261068344116211
    4. 'ac' → logprob: -12.011068344116211
    5. '(range' → logprob: -14.261068344116211
    6. '
' → logprob: -15.136068344116211
    7. '   ' → logprob: -15.386068344116211
    8. ' ' → logprob: -16.51106834411621
    9. '[' → logprob: -17.01106834411621
    10. ' ac' → logprob: -17.01106834411621

Token 2249: '(ac' (ID: 95204)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -7.896309739408025e-07
    2. ' ac' → logprob: -14.625000953674316
    3. '(ac' → logprob: -15.125000953674316
    4. '           ' → logprob: -18.375
    5. '	ac' → logprob: -18.625
    6. '   ' → logprob: -18.75
    7. '0' → logprob: -19.0
    8. '       ' → logprob: -19.0
    9. '#ac' → logprob: -19.125
    10. '
' → logprob: -19.875

Token 2250: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.39107799530029297
    2. 'states' → logprob: -1.141077995300293
    3. 'ac' → logprob: -5.516077995300293
    4. ' states' → logprob: -9.516077995300293
    5. 'st' → logprob: -10.391077995300293
    6. 'States' → logprob: -10.766077995300293
    7. ' ac' → logprob: -11.266077995300293
    8. 'state' → logprob: -11.766077995300293
    9. '.states' → logprob: -12.016077995300293
    10. 't' → logprob: -12.141077995300293

Token 2251: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03628341481089592
    2. '               ' → logprob: -3.536283493041992
    3. '+' → logprob: -6.286283493041992
    4. '           ' → logprob: -6.411283493041992
    5. ':
' → logprob: -6.536283493041992
    6. '):' → logprob: -6.786283493041992
    7. ':' → logprob: -8.286283493041992
    8. '                   ' → logprob: -10.411283493041992
    9. ']:
' → logprob: -10.661283493041992
    10. '):
' → logprob: -10.911283493041992

Token 2252: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005365899996832013
    2. 'cur' → logprob: -8.875536918640137
    3. '                   ' → logprob: -9.250536918640137
    4. 'next' → logprob: -9.500536918640137
    5. ' cur' → logprob: -9.750536918640137
    6. '```' → logprob: -9.875536918640137
    7. 'c' → logprob: -10.750536918640137
    8. ' next' → logprob: -11.375536918640137
    9. 'state' → logprob: -11.375536918640137
    10. ' c' → logprob: -11.375536918640137

Token 2253: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.034674715250730515
    2. '           ' → logprob: -4.284674644470215
    3. 'curr' → logprob: -5.409674644470215
    4. 'ns' → logprob: -5.659674644470215
    5. '   ' → logprob: -6.034674644470215
    6. 'state' → logprob: -6.284674644470215
    7. 'next' → logprob: -6.409674644470215
    8. 'now' → logprob: -6.409674644470215
    9. '               ' → logprob: -6.659674644470215
    10. '                   ' → logprob: -7.034674644470215

Token 2254: ' =' (ID: 314)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.3506425619125366
    2. ' =' → logprob: -1.7256425619125366
    3. 'state' → logprob: -2.600642681121826
    4. '=' → logprob: -3.225642681121826
    5. '_char' → logprob: -6.975642681121826
    6. '_cur' → logprob: -7.725642681121826
    7. '_c' → logprob: -8.100642204284668
    8. '               ' → logprob: -8.350642204284668
    9. 't' → logprob: -8.475642204284668
    10. ' state' → logprob: -8.600642204284668

Token 2255: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.05616404116153717
    2. 'ac' → logprob: -2.931164026260376
    3. ' st' → logprob: -7.431164264678955
    4. '               ' → logprob: -8.431163787841797
    5. '                   ' → logprob: -9.181163787841797
    6. 'cur' → logprob: -9.431163787841797
    7. '           ' → logprob: -9.556163787841797
    8. '0' → logprob: -9.556163787841797
    9. '   ' → logprob: -10.181163787841797
    10. ' ac' → logprob: -10.306163787841797

Token 2256: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002090899972245097
    2. 'for' → logprob: -6.377090930938721
    3. ' for' → logprob: -8.002090454101562
    4. '
' → logprob: -10.877090454101562
    5. '                   ' → logprob: -11.877090454101562
    6. '           ' → logprob: -12.002090454101562
    7. ':
' → logprob: -13.127090454101562
    8. ' =' → logprob: -13.252090454101562
    9. '                       ' → logprob: -13.252090454101562
    10. '                
' → logprob: -13.377090454101562

Token 2257: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2703365981578827
    2. '                   ' → logprob: -1.520336627960205
    3. ' for' → logprob: -4.395336627960205
    4. 'for' → logprob: -5.145336627960205
    5. '```' → logprob: -10.770336151123047
    6. '   ' → logprob: -11.145336151123047
    7. '           ' → logprob: -11.270336151123047
    8. '                       ' → logprob: -11.395336151123047
    9. '       ' → logprob: -11.645336151123047
    10. '                ' → logprob: -13.145336151123047

Token 2258: ' found' (ID: 2491)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019091293215751648
    2. '                   ' → logprob: -4.0190911293029785
    3. ' for' → logprob: -7.0190911293029785
    4. '               ' → logprob: -11.019091606140137
    5. 'c' → logprob: -11.519091606140137
    6. '```' → logprob: -11.644091606140137
    7. '   ' → logprob: -12.019091606140137
    8. '           ' → logprob: -12.894091606140137
    9. '                       ' → logprob: -13.644091606140137
    10. '       ' → logprob: -14.269091606140137

Token 2259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5899676084518433
    2. ' =' → logprob: -1.3399676084518433
    3. 'for' → logprob: -2.089967727661133
    4. '=set' → logprob: -3.714967727661133
    5. '                   ' → logprob: -4.089967727661133
    6. '               ' → logprob: -5.089967727661133
    7. '           ' → logprob: -5.464967727661133
    8. '       ' → logprob: -6.714967727661133
    9. '|' → logprob: -6.714967727661133
    10. 's' → logprob: -6.714967727661133

Token 2260: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.006732541602104902
    2. 'ac' → logprob: -5.00673246383667
    3. ' set' → logprob: -11.131732940673828
    4. '(set' → logprob: -14.631732940673828
    5. 'copy' → logprob: -14.881732940673828
    6. 'output' → logprob: -15.256732940673828
    7. '{' → logprob: -15.256732940673828
    8. ' ac' → logprob: -15.631732940673828
    9. '=set' → logprob: -15.631732940673828
    10. '   ' → logprob: -15.881732940673828

Token 2261: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.07456254214048386
    2. '()' → logprob: -2.8245625495910645
    3. 'for' → logprob: -4.8245625495910645
    4. '               ' → logprob: -5.6995625495910645
    5. '                   ' → logprob: -7.8245625495910645
    6. '(w' → logprob: -8.074562072753906
    7. '           ' → logprob: -9.199562072753906
    8. '(c' → logprob: -9.199562072753906
    9. ' for' → logprob: -9.574562072753906
    10. '                       ' → logprob: -9.699562072753906

Token 2262: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00038014890742488205
    2. '                   ' → logprob: -8.875380516052246
    3. 'for' → logprob: -9.000380516052246
    4. ' for' → logprob: -9.125380516052246
    5. '           ' → logprob: -12.750380516052246
    6. '       ' → logprob: -13.625380516052246
    7. '```' → logprob: -13.750380516052246
    8. '   ' → logprob: -14.000380516052246
    9. '                       ' → logprob: -14.375380516052246
    10. '                ' → logprob: -15.125380516052246

Token 2263: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.021056203171610832
    2. '               ' → logprob: -4.396056175231934
    3. ' for' → logprob: -4.896056175231934
    4. '                   ' → logprob: -6.896056175231934
    5. '   ' → logprob: -11.396056175231934
    6. '```' → logprob: -11.896056175231934
    7. '           ' → logprob: -13.146056175231934
    8. '	for' → logprob: -14.021056175231934
    9. '                       ' → logprob: -14.396056175231934
    10. '       ' → logprob: -14.521056175231934

Token 2264: ' c' (ID: 274)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.07889506965875626
    2. 'c' → logprob: -2.578895092010498
    3. ' ch' → logprob: -12.82889461517334
    4. 'char' → logprob: -13.07889461517334
    5. 'cc' → logprob: -14.57889461517334
    6. '
' → logprob: -16.953895568847656
    7. ' c' → logprob: -17.328895568847656
    8. 'x' → logprob: -17.578895568847656
    9. 'chr' → logprob: -18.828895568847656
    10. '```' → logprob: -19.203895568847656

Token 2265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20147883892059326
    2. 'in' → logprob: -1.7014788389205933
    3. 'c' → logprob: -10.951478958129883
    4. '	in' → logprob: -11.451478958129883
    5. '                   ' → logprob: -11.826478958129883
    6. '               ' → logprob: -12.201478958129883
    7. '_in' → logprob: -12.451478958129883
    8. 'w' → logprob: -12.701478958129883
    9. '   ' → logprob: -12.951478958129883
    10. ' ' → logprob: -13.076478958129883

Token 2266: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.23917081207037e-05
    2. ' w' → logprob: -10.125041961669922
    3. '   ' → logprob: -13.750041961669922
    4. 'range' → logprob: -14.500041961669922
    5. 'word' → logprob: -14.750041961669922
    6. '
' → logprob: -16.250041961669922
    7. '       ' → logprob: -16.750041961669922
    8. 'c' → logprob: -17.250041961669922
    9. '           ' → logprob: -17.625041961669922
    10. ' range' → logprob: -18.250041961669922

Token 2267: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09134062379598618
    2. ':' → logprob: -2.9663405418395996
    3. '                   ' → logprob: -3.3413405418395996
    4. '                       ' → logprob: -8.591341018676758
    5. '               ' → logprob: -9.341341018676758
    6. '=' → logprob: -9.966341018676758
    7. '):
' → logprob: -10.341341018676758
    8. ':
' → logprob: -11.466341018676758
    9. '                  ' → logprob: -11.966341018676758
    10. ' =' → logprob: -12.091341018676758

Token 2268: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00016635251813568175
    2. 'cur' → logprob: -8.875165939331055
    3. '```' → logprob: -11.750165939331055
    4. '   ' → logprob: -12.250165939331055
    5. '               ' → logprob: -12.625165939331055
    6. '                       ' → logprob: -12.875165939331055
    7. ' cur' → logprob: -13.500165939331055
    8. '		           ' → logprob: -13.750165939331055
    9. '                  ' → logprob: -14.000165939331055
    10. '#' → logprob: -14.125165939331055

Token 2269: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.0066908677108585835
    2. ' cur' → logprob: -5.631690979003906
    3. '                   ' → logprob: -5.881690979003906
    4. '                       ' → logprob: -8.506690979003906
    5. 'c' → logprob: -9.631690979003906
    6. '   ' → logprob: -11.756690979003906
    7. '[cur' → logprob: -12.506690979003906
    8. '               ' → logprob: -12.631690979003906
    9. '```' → logprob: -12.756690979003906
    10. ' c' → logprob: -13.131690979003906

Token 2270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003178306156769395
    2. ' =' → logprob: -5.753178119659424
    3. '                   ' → logprob: -14.878178596496582
    4. '=c' → logprob: -16.003177642822266
    5. '   ' → logprob: -17.128177642822266
    6. '＝' → logprob: -18.003177642822266
    7. '=
' → logprob: -18.253177642822266
    8. ']=' → logprob: -18.628177642822266
    9. '=sys' → logprob: -18.878177642822266
    10. '                       ' → logprob: -19.003177642822266

Token 2271: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -9.627176768844947e-05
    2. ' ac' → logprob: -9.250096321105957
    3. '                   ' → logprob: -16.50009536743164
    4. '	ac' → logprob: -17.87509536743164
    5. '   ' → logprob: -18.37509536743164
    6. '                       ' → logprob: -19.00009536743164
    7. '               ' → logprob: -19.12509536743164
    8. '           ' → logprob: -19.62509536743164
    9. '
' → logprob: -19.87509536743164
    10. '(ac' → logprob: -20.25009536743164

Token 2272: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.00015920029545668513
    2. 'next' → logprob: -8.75015926361084
    3. '[next' → logprob: -14.62515926361084
    4. '_next' → logprob: -16.750158309936523
    5. ' .' → logprob: -17.500158309936523
    6. ' next' → logprob: -17.625158309936523
    7. '
' → logprob: -17.750158309936523
    8. '.' → logprob: -18.375158309936523
    9. '	next' → logprob: -18.500158309936523
    10. ',next' → logprob: -18.875158309936523

Token 2273: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -5.1928003813372925e-05
    2. 'cur' → logprob: -9.875051498413086
    3. '(cur' → logprob: -15.750051498413086
    4. '```' → logprob: -15.875051498413086
    5. '   ' → logprob: -16.375051498413086
    6. '	cur' → logprob: -16.875051498413086
    7. '[' → logprob: -17.000051498413086
    8. '[
' → logprob: -18.000051498413086
    9. '
' → logprob: -18.000051498413086
    10. '][' → logprob: -18.125051498413086

Token 2274: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04319557920098305
    2. '[c' → logprob: -3.1681954860687256
    3. '[' → logprob: -9.293195724487305
    4. ']' → logprob: -9.668195724487305
    5. 'c' → logprob: -11.418195724487305
    6. '].' → logprob: -11.918195724487305
    7. '                   ' → logprob: -12.293195724487305
    8. '[cur' → logprob: -12.543195724487305
    9. '   ' → logprob: -12.793195724487305
    10. '(c' → logprob: -13.293195724487305

Token 2275: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.9361264946837764e-07
    2. ' c' → logprob: -16.375
    3. ')c' → logprob: -19.0
    4. '
' → logprob: -20.125
    5. '```' → logprob: -20.25
    6. '   ' → logprob: -20.375
    7. '	c' → logprob: -21.25
    8. '(c' → logprob: -21.875
    9. '_c' → logprob: -22.25
    10. '[c' → logprob: -22.25

Token 2276: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.85235276655294e-05
    2. '               ' → logprob: -9.875088691711426
    3. ']
' → logprob: -11.125088691711426
    4. '()]' → logprob: -11.750088691711426
    5. ' ]' → logprob: -12.000088691711426
    6. '                   ' → logprob: -12.625088691711426
    7. '           ' → logprob: -13.500088691711426
    8. ')' → logprob: -14.250088691711426
    9. ')]' → logprob: -14.625088691711426
    10. '       ' → logprob: -14.875088691711426

Token 2277: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0029151919297873974
    2. 'if' → logprob: -6.502915382385254
    3. '               ' → logprob: -7.002915382385254
    4. '```' → logprob: -8.127915382385254
    5. 'for' → logprob: -8.877915382385254
    6. ' if' → logprob: -11.002915382385254
    7. '           ' → logprob: -11.502915382385254
    8. '                       ' → logprob: -11.752915382385254
    9. '
' → logprob: -11.877915382385254
    10. '#' → logprob: -12.127915382385254

Token 2278: ' found' (ID: 2491)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15955452620983124
    2. '                   ' → logprob: -2.2845544815063477
    3. 'for' → logprob: -3.1595544815063477
    4. '               ' → logprob: -6.659554481506348
    5. 'found' (adapté à ' found') → logprob: -6.659554481506348
    6. ' if' → logprob: -8.159554481506348
    7. 'output' → logprob: -9.284554481506348
    8. '                       ' → logprob: -9.284554481506348
    9. 'ac' → logprob: -9.784554481506348
    10. ' for' → logprob: -10.659554481506348

Token 2279: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.3800467848777771
    2. '.update' → logprob: -1.3800468444824219
    3. ' |=' → logprob: -2.880046844482422
    4. '.' → logprob: -4.880046844482422
    5. 'update' → logprob: -8.130046844482422
    6. '.|' → logprob: -8.630046844482422
    7. '.add' → logprob: -9.255046844482422
    8. '=' → logprob: -9.380046844482422
    9. '       ' → logprob: -9.755046844482422
    10. '   ' → logprob: -10.005046844482422

Token 2280: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -2.2127087504486553e-05
    2. ' ac' → logprob: -11.000021934509277
    3. '(ac' → logprob: -13.750021934509277
    4. '                   ' → logprob: -13.875021934509277
    5. '   ' → logprob: -14.000021934509277
    6. '           ' → logprob: -14.500021934509277
    7. '       ' → logprob: -14.625021934509277
    8. '               ' → logprob: -14.750021934509277
    9. '                       ' → logprob: -15.000021934509277
    10. '	ac' → logprob: -15.625021934509277

Token 2281: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.10021205991506577
    2. 'output' → logprob: -2.3502120971679688
    3. ' output' → logprob: -12.725212097167969
    4. '.' → logprob: -14.725212097167969
    5. '	output' → logprob: -14.725212097167969
    6. 'Output' → logprob: -14.725212097167969
    7. '_output' → logprob: -14.850212097167969
    8. '$output' → logprob: -14.850212097167969
    9. '(output' → logprob: -15.475212097167969
    10. '
' → logprob: -16.60021209716797

Token 2282: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -1.3856492842023727e-06
    2. 'cur' → logprob: -13.875000953674316
    3. '(cur' → logprob: -15.125000953674316
    4. '[curr' → logprob: -15.875000953674316
    5. '[current' → logprob: -17.750001907348633
    6. '```' → logprob: -18.750001907348633
    7. '
' → logprob: -19.125001907348633
    8. '[' → logprob: -19.500001907348633
    9. '	cur' → logprob: -19.625001907348633
    10. '   ' → logprob: -19.625001907348633

Token 2283: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.08917108178138733
    2. ']' → logprob: -2.9641711711883545
    3. '               ' → logprob: -3.4641711711883545
    4. '()]
' → logprob: -6.464170932769775
    5. '           ' → logprob: -7.589170932769775
    6. ']
' → logprob: -8.964171409606934
    7. '()]' → logprob: -9.089171409606934
    8. '       ' → logprob: -10.214171409606934
    9. '                   ' → logprob: -10.589171409606934
    10. ']()
' → logprob: -11.214171409606934

Token 2284: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004541486850939691
    2. '                   ' → logprob: -8.62545394897461
    3. '```' → logprob: -9.25045394897461
    4. '
' → logprob: -10.25045394897461
    5. '                
' → logprob: -10.50045394897461
    6. '#' → logprob: -10.50045394897461
    7. '       ' → logprob: -10.75045394897461
    8. 'found' → logprob: -11.00045394897461
    9. '<|end|>' → logprob: -11.50045394897461
    10. '           ' → logprob: -11.50045394897461

Token 2285: ' trans' (ID: 1643)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' (adapté à ' trans') → logprob: -0.7390261888504028
    2. 'se' → logprob: -1.2390261888504028
    3. '               ' → logprob: -1.4890261888504028
    4. '
' → logprob: -5.489026069641113
    5. 'found' → logprob: -6.364026069641113
    6. '```' → logprob: -7.364026069641113
    7. '                   ' → logprob: -8.489026069641113
    8. ' trans' → logprob: -9.364026069641113
    9. 'for' → logprob: -9.614026069641113
    10. '``' → logprob: -9.989026069641113

Token 2286: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '[w' → logprob: -14.375000953674316
    3. '```' → logprob: -15.625000953674316
    4. '\[' → logprob: -16.250001907348633
    5. ' [' → logprob: -16.375001907348633
    6. '][' → logprob: -17.125001907348633
    7. '[cur' → logprob: -17.750001907348633
    8. ')[' → logprob: -17.750001907348633
    9. '               ' → logprob: -17.875001907348633
    10. '       ' → logprob: -18.000001907348633

Token 2287: 'wi' (ID: 7491)
  Prédit: 'wi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.00043734462815336883
    2. '[' → logprob: -7.750437259674072
    3. 'w' → logprob: -12.25043773651123
    4. ' wi' → logprob: -13.75043773651123
    5. '[w' → logprob: -14.87543773651123
    6. '][' → logprob: -16.000436782836914
    7. '```' → logprob: -16.750436782836914
    8. '[
' → logprob: -16.875436782836914
    9. '
' → logprob: -17.250436782836914
    10. '(w' → logprob: -17.625436782836914

Token 2288: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2817884683609009
    2. '[' → logprob: -1.5317884683609009
    3. '[cur' → logprob: -3.5317883491516113
    4. 'cur' → logprob: -9.03178882598877
    5. '           ' → logprob: -11.65678882598877
    6. ']' → logprob: -11.65678882598877
    7. '               ' → logprob: -12.28178882598877
    8. ' ][' → logprob: -12.40678882598877
    9. 'st' → logprob: -12.90678882598877
    10. ')[' → logprob: -13.15678882598877

Token 2289: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -9.627176768844947e-05
    2. 'cur' → logprob: -9.250096321105957
    3. ' st' → logprob: -16.50009536743164
    4. '(st' → logprob: -17.50009536743164
    5. '	st' → logprob: -18.50009536743164
    6. '
' → logprob: -19.75009536743164
    7. '[cur' → logprob: -20.25009536743164
    8. '[' → logprob: -20.50009536743164
    9. 'St' → logprob: -20.62509536743164
    10. '   ' → logprob: -20.75009536743164

Token 2290: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000432695698691532
    2. ' =' → logprob: -7.75043249130249
    3. ']=' → logprob: -13.500432968139648
    4. '=
' → logprob: -15.125432968139648
    5. ']' → logprob: -16.00043296813965
    6. '=current' → logprob: -16.37543296813965
    7. ')=' → logprob: -16.87543296813965
    8. '＝' → logprob: -17.25043296813965
    9. '=c' → logprob: -17.37543296813965
    10. '=int' → logprob: -17.37543296813965

Token 2291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002615742268972099
    2. ' =' → logprob: -8.250261306762695
    3. '=
' → logprob: -15.375261306762695
    4. '=

' → logprob: -17.375261306762695
    5. '=}' → logprob: -17.875261306762695
    6. '＝' → logprob: -18.250261306762695
    7. '=current' → logprob: -18.875261306762695
    8. '=cut' → logprob: -19.250261306762695
    9. ',' → logprob: -19.250261306762695
    10. '=c' → logprob: -19.375261306762695

Token 2292: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.9361264946837764e-07
    2. ' cur' → logprob: -16.25
    3. '[cur' → logprob: -20.75
    4. '	cur' → logprob: -22.25
    5. '(cur' → logprob: -23.0
    6. 'curr' → logprob: -23.625
    7. '_cur' → logprob: -24.25
    8. 'Cur' → logprob: -25.125
    9. 'cu' → logprob: -25.375
    10. 'current' → logprob: -26.125

Token 2293: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007691288483329117
    2. '
' → logprob: -8.000768661499023
    3. 'se' → logprob: -8.000768661499023
    4. '       ' → logprob: -10.375768661499023
    5. '           ' → logprob: -10.625768661499023
    6. 'found' → logprob: -11.125768661499023
    7. '<|end|>' → logprob: -11.375768661499023
    8. 'for' → logprob: -13.000768661499023
    9. '                   ' → logprob: -13.125768661499023
    10. '                
' → logprob: -13.250768661499023

Token 2294: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004167202394455671
    2. 'se' → logprob: -5.629167079925537
    3. 'for' → logprob: -8.379167556762695
    4. '       ' → logprob: -9.254167556762695
    5. '```' → logprob: -9.504167556762695
    6. 'found' → logprob: -10.129167556762695
    7. '           ' → logprob: -10.379167556762695
    8. '                   ' → logprob: -10.754167556762695
    9. '
' → logprob: -11.004167556762695
    10. '<|end|>' → logprob: -11.004167556762695

Token 2295: ' secr' (ID: 96175)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.000628683075774461
    2. 'for' → logprob: -7.875628471374512
    3. 'found' → logprob: -9.250628471374512
    4. '               ' → logprob: -9.375628471374512
    5. '                   ' → logprob: -10.750628471374512
    6. '           ' → logprob: -11.000628471374512
    7. 'if' → logprob: -11.500628471374512
    8. '
' → logprob: -11.875628471374512
    9. '```' → logprob: -12.375628471374512
    10. '#' → logprob: -12.625628471374512

Token 2296: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -16.5
    3. '[i' → logprob: -16.5
    4. '=' → logprob: -17.375
    5. '
' → logprob: -17.5
    6. '[w' → logprob: -17.875
    7. '\[' → logprob: -17.875
    8. ' [' → logprob: -18.0
    9. 'wi' → logprob: -18.375
    10. 's' → logprob: -18.75

Token 2297: 'wi' (ID: 7491)
  Prédit: 'wi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -3.082895273109898e-05
    2. '[' → logprob: -10.500030517578125
    3. ' wi' → logprob: -12.750030517578125
    4. 'w' → logprob: -15.375030517578125
    5. '
' → logprob: -16.750030517578125
    6. 'wo' → logprob: -17.375030517578125
    7. 'vi' → logprob: -18.500030517578125
    8. 'Wi' → logprob: -18.750030517578125
    9. 'wt' → logprob: -18.875030517578125
    10. '[
' → logprob: -18.875030517578125

Token 2298: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06459115445613861
    2. '|' → logprob: -2.9395911693573
    3. ' |=' → logprob: -5.564590930938721
    4. '].' → logprob: -5.939590930938721
    5. ']' → logprob: -6.439590930938721
    6. '][' → logprob: -7.064590930938721
    7. '           ' → logprob: -8.564591407775879
    8. '.setdefault' → logprob: -9.189591407775879
    9. ' |' → logprob: -9.314591407775879
    10. '.' → logprob: -9.689591407775879

Token 2299: ' =' (ID: 314)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.47689712047576904
    2. '.add' → logprob: -1.976897120475769
    3. '.' → logprob: -2.2268972396850586
    4. '.setdefault' → logprob: -2.6018972396850586
    5. '[' → logprob: -3.8518972396850586
    6. '.clear' → logprob: -4.476897239685059
    7. '.append' → logprob: -5.226897239685059
    8. '=' → logprob: -5.351897239685059
    9. '.union' → logprob: -5.476897239685059
    10. '.=' → logprob: -5.601897239685059

Token 2300: ' secr' (ID: 96175)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.2594972848892212
    2. 'ac' → logprob: -1.8844972848892212
    3. 'set' → logprob: -2.6344971656799316
    4. 'found' → logprob: -5.759497165679932
    5. 'secret' → logprob: -6.884497165679932
    6. '{' → logprob: -8.25949764251709
    7. ' ac' → logprob: -8.88449764251709
    8. 'output' → logprob: -9.38449764251709
    9. 'sec' → logprob: -10.50949764251709
    10. '{}' → logprob: -10.50949764251709

Token 2301: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. 'se' → logprob: -14.625000953674316
    3. '[w' → logprob: -16.5
    4. '
' → logprob: -16.75
    5. 'wi' → logprob: -17.125
    6. '_se' → logprob: -17.375
    7. '```' → logprob: -17.5
    8. '{' → logprob: -17.625
    9. 's' → logprob: -17.75
    10. 'trans' → logprob: -18.5

Token 2302: 'wi' (ID: 7491)
  Prédit: 'wi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.018178973346948624
    2. '[' → logprob: -4.018178939819336
    3. 'w' → logprob: -12.143178939819336
    4. '[w' → logprob: -12.518178939819336
    5. ' wi' → logprob: -12.893178939819336
    6. 'wo' → logprob: -13.018178939819336
    7. '[i' → logprob: -13.268178939819336
    8. '```' → logprob: -13.643178939819336
    9. 'Wi' → logprob: -13.893178939819336
    10. 'wt' → logprob: -13.893178939819336

Token 2303: '].' (ID: 1651)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3510800898075104
    2. '|' → logprob: -1.226080060005188
    3. 'union' → logprob: -6.601079940795898
    4. '.union' → logprob: -7.726079940795898
    5. '][' → logprob: -8.851079940795898
    6. 'wi' → logprob: -8.851079940795898
    7. '].' → logprob: -8.976079940795898
    8. ' |' → logprob: -8.976079940795898
    9. '```' → logprob: -10.351079940795898
    10. ']' → logprob: -10.351079940795898

Token 2304: 'union' (ID: 37013)
  Prédit: 'union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.0038441363722085953
    2. 'copy' → logprob: -6.003844261169434
    3. 'update' → logprob: -6.628844261169434
    4. '|' → logprob: -10.253844261169434
    5. '.union' → logprob: -11.753844261169434
    6. 'intersection' → logprob: -14.378844261169434
    7. 'add' → logprob: -14.628844261169434
    8. ' union' → logprob: -15.003844261169434
    9. '_union' → logprob: -15.128844261169434
    10. 'get' → logprob: -15.378844261169434

Token 2305: '(found' (ID: 105397)
  Prédit: '(ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ac' → logprob: -0.31536734104156494
    2. 'ac' → logprob: -1.315367341041565
    3. 'found' → logprob: -6.940367221832275
    4. '(set' → logprob: -8.065367698669434
    5. 'set' → logprob: -8.065367698669434
    6. '(found' → logprob: -8.315367698669434
    7. '({' → logprob: -9.440367698669434
    8. '(output' → logprob: -10.065367698669434
    9. 'output' → logprob: -10.065367698669434
    10. '(' → logprob: -10.190367698669434

Token 2306: ')' (ID: 8)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2307: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2308: ' secr' (ID: 96175)
  Prédit: 'wi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.007941493764519691
    2. 'se' → logprob: -5.507941722869873
    3. ' wi' → logprob: -5.882941722869873
    4. 'w' → logprob: -7.507941722869873
    5. 'trans' → logprob: -8.757941246032715
    6. 'len' → logprob: -9.632941246032715
    7. 'True' → logprob: -9.882941246032715
    8. 'not' → logprob: -10.257941246032715
    9. '(w' → logprob: -10.382941246032715
    10. 'secret' → logprob: -10.507941246032715

Token 2309: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. '
' → logprob: -13.750005722045898
    3. '[w' → logprob: -14.125005722045898
    4. 'wi' → logprob: -14.250005722045898
    5. '_' → logprob: -14.750005722045898
    6. '==' → logprob: -14.875005722045898
    7. 'w' → logprob: -14.875005722045898
    8. 's' → logprob: -15.375005722045898
    9. '```' → logprob: -15.500005722045898
    10. '[i' → logprob: -15.750005722045898

Token 2310: 'wi' (ID: 7491)
  Prédit: 'wi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -4.763666947837919e-05
    2. '[' → logprob: -10.12504768371582
    3. ' wi' → logprob: -12.50004768371582
    4. 'w' → logprob: -13.25004768371582
    5. 'wo' → logprob: -14.62504768371582
    6. 'Wi' → logprob: -14.87504768371582
    7. '```' → logprob: -15.62504768371582
    8. ']' → logprob: -15.87504768371582
    9. '
' → logprob: -16.00004768371582
    10. 'wj' → logprob: -16.12504768371582

Token 2311: ']' (ID: 60)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30211004614830017
    2. 'else' → logprob: -1.9271100759506226
    3. '!=' → logprob: -3.302109956741333
    4. ' |=' → logprob: -3.802109956741333
    5. '.union' → logprob: -4.427110195159912
    6. '|' → logprob: -4.552110195159912
    7. '=' → logprob: -4.927110195159912
    8. '                   ' → logprob: -5.052110195159912
    9. '].' → logprob: -5.552110195159912
    10. ']' → logprob: -6.052110195159912

Token 2312: ' else' (ID: 1203)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8439976572990417
    2. '!=' → logprob: -0.8439976572990417
    3. '|' → logprob: -2.8439977169036865
    4. '==' → logprob: -3.9689977169036865
    5. ' |=' → logprob: -3.9689977169036865
    6. '=' → logprob: -4.218997478485107
    7. '.union' → logprob: -4.968997478485107
    8. ' !=' → logprob: -5.468997478485107
    9. '.add' → logprob: -6.093997478485107
    10. '.update' → logprob: -6.218997478485107

Token 2313: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.004131949506700039
    2. 'set' → logprob: -5.50413179397583
    3. ' found' → logprob: -9.879132270812988
    4. 'w' → logprob: -14.629132270812988
    5. '(found' → logprob: -14.629132270812988
    6. '{' → logprob: -14.754132270812988
    7. ' set' → logprob: -15.379132270812988
    8. 'f' → logprob: -15.504132270812988
    9. 'se' → logprob: -15.879132270812988
    10. 'copy' → logprob: -16.004131317138672

Token 2314: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33165478706359863
    2. '
' → logprob: -1.3316547870635986
    3. '<|end|>' → logprob: -4.0816545486450195
    4. '```' → logprob: -7.7066545486450195
    5. '<|end|>' → logprob: -7.8316545486450195
    6. '        
' → logprob: -8.95665454864502
    7. ')' → logprob: -9.45665454864502
    8. '   ' → logprob: -9.58165454864502
    9. '           ' → logprob: -10.33165454864502
    10. 'for' → logprob: -10.45665454864502

Token 2316: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3140936493873596
    2. '       ' → logprob: -1.3140935897827148
    3. '
' → logprob: -8.189093589782715
    4. 'from' → logprob: -8.314093589782715
    5. '```' → logprob: -8.564093589782715
    6. 'import' → logprob: -10.064093589782715
    7. 'def' → logprob: -11.064093589782715
    8. '   ' → logprob: -11.189093589782715
    9. 'for' → logprob: -11.314093589782715
    10. ' dp' → logprob: -11.689093589782715

Token 2317: ' maintenant' (ID: 35735)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13218343257904053
    2. '       ' → logprob: -2.13218355178833
    3. 'from' → logprob: -5.38218355178833
    4. '
' → logprob: -7.63218355178833
    5. 'import' → logprob: -9.382183074951172
    6. '#' → logprob: -10.257183074951172
    7. '        
' → logprob: -11.632183074951172
    8. '```' → logprob: -11.632183074951172
    9. '   ' → logprob: -11.757183074951172
    10. ' dp' → logprob: -12.507183074951172

Token 2318: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20640094578266144
    2. 'dp' → logprob: -1.706400990486145
    3. ' dp' → logprob: -6.0814008712768555
    4. 'from' → logprob: -6.5814008712768555
    5. 'import' → logprob: -7.5814008712768555
    6. '
' → logprob: -7.7064008712768555
    7. '   ' → logprob: -8.581400871276855
    8. 'def' → logprob: -9.831400871276855
    9. '#' → logprob: -10.081400871276855
    10. '	dp' → logprob: -10.956400871276855

Token 2319: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4089058041572571
    2. 'dp' → logprob: -1.1589057445526123
    3. 'from' → logprob: -4.033905982971191
    4. '   ' → logprob: -6.158905982971191
    5. 'import' → logprob: -6.908905982971191
    6. '
' → logprob: -7.533905982971191
    7. ' dp' → logprob: -8.283905982971191
    8. ' from' → logprob: -9.533905982971191
    9. '	dp' → logprob: -9.908905982971191
    10. '        
' → logprob: -10.158905982971191

Token 2320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4574015140533447
    2. 'dp' → logprob: -1.2074015140533447
    3. '   ' → logprob: -2.7074015140533447
    4. 'from' → logprob: -7.457401275634766
    5. 'import' → logprob: -7.957401275634766
    6. ' dp' → logprob: -8.582401275634766
    7. '
' → logprob: -8.582401275634766
    8. '	dp' → logprob: -9.832401275634766
    9. '        
' → logprob: -11.332401275634766
    10. '    
' → logprob: -12.082401275634766

Token 2321: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04556376859545708
    2. '       ' → logprob: -3.1705636978149414
    3. 'from' → logprob: -6.545563697814941
    4. '   ' → logprob: -7.545563697814941
    5. 'import' → logprob: -8.295563697814941
    6. '
' → logprob: -8.420563697814941
    7. '```' → logprob: -9.420563697814941
    8. ' dp' → logprob: -10.420563697814941
    9. '        
' → logprob: -12.295563697814941
    10. '	dp' → logprob: -12.420563697814941

Token 2322: ' init' (ID: 6327)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008521197363734245
    2. '       ' → logprob: -5.25852108001709
    3. 'from' → logprob: -5.75852108001709
    4. '   ' → logprob: -9.75852108001709
    5. 'import' → logprob: -9.75852108001709
    6. '
' → logprob: -11.88352108001709
    7. '```' → logprob: -13.50852108001709
    8. ' dp' → logprob: -14.13352108001709
    9. '	dp' → logprob: -14.88352108001709
    10. '        
' → logprob: -15.00852108001709

Token 2323: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00863631535321474
    2. '       ' → logprob: -5.258636474609375
    3. 'from' → logprob: -5.758636474609375
    4. 'import' → logprob: -8.508636474609375
    5. '```' → logprob: -10.633636474609375
    6. ' dp' → logprob: -12.008636474609375
    7. '   ' → logprob: -12.258636474609375
    8. '
' → logprob: -12.758636474609375
    9. ' from' → logprob: -14.133636474609375
    10. '_dp' → logprob: -14.883636474609375

Token 2324: ' pos' (ID: 1253)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004239615984261036
    2. '```' → logprob: -6.254239559173584
    3. '       ' → logprob: -6.504239559173584
    4. 'from' → logprob: -7.504239559173584
    5. ' dp' → logprob: -8.879240036010742
    6. 'import' → logprob: -9.754240036010742
    7. '   ' → logprob: -10.129240036010742
    8. '``' → logprob: -11.379240036010742
    9. ' from' → logprob: -12.254240036010742
    10. '
' → logprob: -12.504240036010742

Token 2325: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7645720839500427
    2. '=' → logprob: -1.7645721435546875
    3. '   ' → logprob: -2.0145721435546875
    4. '_dp' → logprob: -2.2645721435546875
    5. 'dp' → logprob: -2.5145721435546875
    6. '_current' → logprob: -3.5145721435546875
    7. '
' → logprob: -5.1395721435546875
    8. '```' → logprob: -6.3895721435546875
    9. '_cur' → logprob: -6.5145721435546875
    10. '       ' → logprob: -6.7645721435546875

Token 2326: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008208861574530602
    2. '=' → logprob: -5.133208751678467
    3. '{' → logprob: -7.258208751678467
    4. '{}' → logprob: -7.383208751678467
    5. 'default' → logprob: -7.383208751678467
    6. '1' → logprob: -9.258209228515625
    7. 'collections' → logprob: -10.008209228515625
    8. '   ' → logprob: -10.133209228515625
    9. '{}
' → logprob: -10.258209228515625
    10. ' ' → logprob: -10.383209228515625

Token 2327: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022877128794789314
    2. '=' → logprob: -4.022877216339111
    3. '       ' → logprob: -5.897877216339111
    4. ' =' → logprob: -7.397877216339111
    5. '   ' → logprob: -7.522877216339111
    6. 'from' → logprob: -8.397876739501953
    7. '
' → logprob: -8.647876739501953
    8. '```' → logprob: -9.397876739501953
    9. '=
' → logprob: -9.522876739501953
    10. ',' → logprob: -9.522876739501953

Token 2328: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022086845710873604
    2. 'from' → logprob: -3.8970868587493896
    3. '       ' → logprob: -6.6470866203308105
    4. 'import' → logprob: -8.647087097167969
    5. 'word' → logprob: -10.772087097167969
    6. '
' → logprob: -11.272087097167969
    7. '   ' → logprob: -11.522087097167969
    8. 'words' → logprob: -11.647087097167969
    9. 'for' → logprob: -12.272087097167969
    10. 'cur' → logprob: -12.272087097167969

Token 2329: '[pos' (ID: 48272)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.2631179094314575
    2. ' =' → logprob: -2.138117790222168
    3. '=' → logprob: -2.263117790222168
    4. '   ' → logprob: -5.513117790222168
    5. 'current' → logprob: -5.888117790222168
    6. '_cur' → logprob: -7.013117790222168
    7. 'from' → logprob: -7.513117790222168
    8. 'cur' → logprob: -8.513117790222168
    9. '={}
' → logprob: -8.763117790222168
    10. '={' → logprob: -9.138117790222168

Token 2330: '][' (ID: 2696)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0870765969157219
    2. ' =' → logprob: -3.4620766639709473
    3. ']' → logprob: -3.7120766639709473
    4. '_current' → logprob: -4.212076663970947
    5. '][' → logprob: -5.087076663970947
    6. ']=' → logprob: -6.212076663970947
    7. 'current' → logprob: -6.837076663970947
    8. '={' → logprob: -7.462076663970947
    9. '_cur' → logprob: -7.462076663970947
    10. ']={' → logprob: -7.462076663970947

Token 2331: 'word' (ID: 1801)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.6645574569702148
    2. 'cur' → logprob: -1.0395574569702148
    3. '{' → logprob: -2.664557456970215
    4. '{}' → logprob: -3.539557456970215
    5. '][' → logprob: -4.664557456970215
    6. '[' → logprob: -5.039557456970215
    7. 'word' → logprob: -5.539557456970215
    8. '0' → logprob: -5.664557456970215
    9. '=' → logprob: -5.914557456970215
    10. '(words' → logprob: -6.539557456970215

Token 2332: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.42766073346138
    2. ']' → logprob: -1.8026607036590576
    3. '_current' → logprob: -2.3026607036590576
    4. '=' → logprob: -3.6776607036590576
    5. ']=' → logprob: -3.6776607036590576
    6. '][_' → logprob: -4.427660942077637
    7. ']={' → logprob: -4.677660942077637
    8. ']_' → logprob: -5.677660942077637
    9. '```' → logprob: -5.802660942077637
    10. '[' → logprob: -7.302660942077637

Token 2333: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.025060338899493217
    2. '0' → logprob: -3.7750604152679443
    3. '{}' → logprob: -7.900060176849365
    4. '1' → logprob: -8.400060653686523
    5. 'st' → logprob: -8.400060653686523
    6. ']' → logprob: -8.525060653686523
    7. '{' → logprob: -8.650060653686523
    8. 'cur' → logprob: -8.775060653686523
    9. '
' → logprob: -9.400060653686523
    10. '][' → logprob: -9.650060653686523

Token 2334: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.004798565059900284
    2. '_states' → logprob: -5.379798412322998
    3. 'state' → logprob: -8.754798889160156
    4. '_s' → logprob: -11.754798889160156
    5. ']_' → logprob: -12.379798889160156
    6. '
' → logprob: -13.629798889160156
    7. '_stat' → logprob: -14.004798889160156
    8. '_' → logprob: -14.129798889160156
    9. '```' → logprob: -14.254798889160156
    10. '_st' → logprob: -14.254798889160156

Token 2335: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.294594407081604
    2. '][' → logprob: -1.419594407081604
    3. ']={' → logprob: -4.7945942878723145
    4. ']=' → logprob: -5.6695942878723145
    5. '=' → logprob: -7.0445942878723145
    6. '].' → logprob: -8.044594764709473
    7. '[' → logprob: -9.294594764709473
    8. '={' → logprob: -9.919594764709473
    9. ' =' → logprob: -9.919594764709473
    10. ']
' → logprob: -10.419594764709473

Token 2336: '0' (ID: 15)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.006278567481786013
    2. '0' → logprob: -5.1312785148620605
    3. '1' → logprob: -8.131278991699219
    4. ' season' → logprob: -11.131278991699219
    5. '
' → logprob: -11.756278991699219
    6. 'None' → logprob: -12.131278991699219
    7. 'True' → logprob: -12.381278991699219
    8. ']' → logprob: -12.381278991699219
    9. '(' → logprob: -13.256278991699219
    10. 'se' → logprob: -13.256278991699219

Token 2337: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20036116242408752
    2. ']' → logprob: -2.2003612518310547
    3. ' =' → logprob: -2.8253612518310547
    4. ']=' → logprob: -5.325361251831055
    5. '={' → logprob: -5.825361251831055
    6. ']={' → logprob: -5.950361251831055
    7. '][' → logprob: -8.075361251831055
    8. '={}
' → logprob: -8.575361251831055
    9. '={}' → logprob: -8.700361251831055
    10. '```' → logprob: -9.450361251831055

Token 2338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04489167779684067
    2. ' =' → logprob: -3.169891595840454
    3. '   ' → logprob: -6.919891834259033
    4. '={}' → logprob: -8.169891357421875
    5. '_current' → logprob: -8.919891357421875
    6. '={' → logprob: -9.294891357421875
    7. '={}
' → logprob: -9.419891357421875
    8. '=
' → logprob: -9.544891357421875
    9. '```' → logprob: -9.669891357421875
    10. '=[' → logprob: -10.294891357421875

Token 2339: ' ' (ID: 220)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.76496821641922
    2. '{' → logprob: -1.2649681568145752
    3. '1' → logprob: -1.3899681568145752
    4. 'default' → logprob: -6.514968395233154
    5. '0' → logprob: -7.389968395233154
    6. '{
' → logprob: -7.514968395233154
    7. '{}
' → logprob: -8.014967918395996
    8. '{}' → logprob: -9.389967918395996
    9. '[' → logprob: -9.514967918395996
    10. '```' → logprob: -9.889967918395996

Token 2340: '1' (ID: 16)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.04071836173534393
    2. '{' → logprob: -3.5407183170318604
    3. '1' → logprob: -4.5407185554504395
    4. '[' → logprob: -8.790718078613281
    5. '{}
' → logprob: -10.540718078613281
    6. '0' → logprob: -10.915718078613281
    7. '{
' → logprob: -11.165718078613281
    8. 'default' → logprob: -11.665718078613281
    9. ' collections' → logprob: -11.790718078613281
    10. '{}' → logprob: -12.290718078613281

Token 2341: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05727676674723625
    2. '       ' → logprob: -3.182276725769043
    3. 'from' → logprob: -4.557276725769043
    4. '```' → logprob: -6.057276725769043
    5. 'import' → logprob: -7.057276725769043
    6. '   ' → logprob: -7.932276725769043
    7. ' dp' → logprob: -9.807276725769043
    8. '
' → logprob: -10.557276725769043
    9. '	dp' → logprob: -11.307276725769043
    10. ' from' → logprob: -11.682276725769043

Token 2342: ' toutes' (ID: 17502)
  Prédit: 'wi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.37045106291770935
    2. 'w' → logprob: -1.9954510927200317
    3. 'word' → logprob: -2.245450973510742
    4. ' wi' → logprob: -3.745450973510742
    5. 'all' → logprob: -3.870450973510742
    6. 'words' → logprob: -4.620450973510742
    7. 'i' → logprob: -5.620450973510742
    8. ' w' → logprob: -6.245450973510742
    9. ' word' → logprob: -6.245450973510742
    10. '   ' → logprob: -6.495450973510742

Token 2343: ' word' (ID: 2195)
  Prédit: 'wi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.434190958738327
    2. 'words' → logprob: -1.5591909885406494
    3. 'w' → logprob: -2.8091909885406494
    4. 'range' → logprob: -3.5591909885406494
    5. 'word' → logprob: -3.9341909885406494
    6. '   ' → logprob: -4.30919075012207
    7. 'for' → logprob: -5.68419075012207
    8. '(w' → logprob: -5.80919075012207
    9. '(words' → logprob: -6.05919075012207
    10. ' wi' → logprob: -6.30919075012207

Token 2344: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23566249012947083
    2. '
' → logprob: -2.4856624603271484
    3. '       ' → logprob: -2.4856624603271484
    4. '   ' → logprob: -3.9856624603271484
    5. '```' → logprob: -4.235662460327148
    6. '_dp' → logprob: -5.485662460327148
    7. '_current' → logprob: -5.735662460327148
    8. ' =' → logprob: -7.235662460327148
    9. '=' → logprob: -7.360662460327148
    10. '`' → logprob: -8.235662460327148

Token 2345: ' ac' (ID: 1375)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001399164437316358
    2. '       ' → logprob: -7.001399040222168
    3. 'import' → logprob: -8.626399040222168
    4. 'from' → logprob: -8.751399040222168
    5. '
' → logprob: -9.626399040222168
    6. '```' → logprob: -9.751399040222168
    7. '   ' → logprob: -11.876399040222168
    8. 'for' → logprob: -12.001399040222168
    9. ' dp' → logprob: -12.626399040222168
    10. '`' → logprob: -13.376399040222168

Token 2346: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.3505038619041443
    2. '_states' → logprob: -1.225503921508789
    3. '_current' → logprob: -6.350503921508789
    4. ' =' → logprob: -9.100503921508789
    5. 'state' → logprob: -9.100503921508789
    6. '=' → logprob: -11.100503921508789
    7. 'states' → logprob: -12.100503921508789
    8. 'States' → logprob: -12.225503921508789
    9. '_next' → logprob: -12.225503921508789
    10. '   ' → logprob: -12.225503921508789

Token 2347: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37800005078315735
    2. ' =' → logprob: -1.878000020980835
    3. '_current' → logprob: -2.003000020980835
    4. '```' → logprob: -4.753000259399414
    5. '=[' → logprob: -5.753000259399414
    6. '   ' → logprob: -6.003000259399414
    7. '={' → logprob: -6.003000259399414
    8. '
' → logprob: -6.753000259399414
    9. '_' → logprob: -7.003000259399414
    10. '[' → logprob: -7.003000259399414

Token 2348: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027182576013728976
    2. 'ac' → logprob: -8.375271797180176
    3. '[' → logprob: -11.125271797180176
    4. 'range' → logprob: -11.250271797180176
    5. 'trans' → logprob: -12.250271797180176
    6. ' ' → logprob: -13.250271797180176
    7. '```' → logprob: -13.875271797180176
    8. 'len' → logprob: -14.000271797180176
    9. '{' → logprob: -14.125271797180176
    10. '1' → logprob: -14.250271797180176

Token 2349: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07947779446840286
    2. '       ' → logprob: -2.5794777870178223
    3. '   ' → logprob: -8.57947826385498
    4. '```' → logprob: -8.95447826385498
    5. 'from' → logprob: -9.20447826385498
    6. 'import' → logprob: -9.57947826385498
    7. '
' → logprob: -9.82947826385498
    8. ' dp' → logprob: -10.20447826385498
    9. '	dp' → logprob: -12.57947826385498
    10. '        
' → logprob: -12.57947826385498

Token 2350: 'etat' (ID: 172279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.540086030960083
    2. ')' → logprob: -1.415086030960083
    3. ']' → logprob: -2.290086030960083
    4. 'for' → logprob: -4.290085792541504
    5. '
' → logprob: -4.290085792541504
    6. ' =' → logprob: -4.290085792541504
    7. '```' → logprob: -5.040085792541504
    8. ',' → logprob: -5.290085792541504
    9. '0' → logprob: -5.665085792541504
    10. ':' → logprob: -5.790085792541504

Token 2351: ' initial' (ID: 4871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40235504508018494
    2. ')' → logprob: -1.9023550748825073
    3. ' =' → logprob: -3.0273549556732178
    4. '```' → logprob: -3.0273549556732178
    5. 'initial' → logprob: -3.4023549556732178
    6. ',' → logprob: -3.9023549556732178
    7. 'dp' → logprob: -5.402355194091797
    8. 'for' → logprob: -5.402355194091797
    9. ')
' → logprob: -5.652355194091797
    10. '
' → logprob: -6.152355194091797

Token 2352: ' AC' (ID: 18577)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9436984062194824
    2. ']' → logprob: -1.8186984062194824
    3. ',' → logprob: -1.9436984062194824
    4. 'dp' → logprob: -2.3186984062194824
    5. '][' → logprob: -3.1936984062194824
    6. '       ' → logprob: -3.6936984062194824
    7. '=' → logprob: -3.8186984062194824
    8. ':
' → logprob: -3.9436984062194824
    9. ']
' → logprob: -4.068698406219482
    10. ',
' → logprob: -4.068698406219482

Token 2353: ')

' (ID: 1029)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2971751689910889
    2. '
' → logprob: -1.6721751689910889
    3. ' =' → logprob: -1.9221751689910889
    4. '_current' → logprob: -1.9221751689910889
    5. ']' → logprob: -2.047175168991089
    6. '_' → logprob: -3.672175168991089
    7. '```' → logprob: -3.672175168991089
    8. 'dp' → logprob: -4.672175407409668
    9. '_dp' → logprob: -4.672175407409668
    10. '][' → logprob: -5.297175407409668

Token 2354: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14374227821826935
    2. '       ' → logprob: -2.018742322921753
    3. '```' → logprob: -7.643742084503174
    4. '
' → logprob: -8.143742561340332
    5. ' dp' → logprob: -8.893742561340332
    6. '   ' → logprob: -9.518742561340332
    7. '        
' → logprob: -10.268742561340332
    8. 'import' → logprob: -11.268742561340332
    9. '	dp' → logprob: -11.393742561340332
    10. '``' → logprob: -11.893742561340332

Token 2355: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004138003569096327
    2. '       ' → logprob: -5.504137992858887
    3. '   ' → logprob: -10.629137992858887
    4. 'from' → logprob: -10.879137992858887
    5. '
' → logprob: -11.629137992858887
    6. 'import' → logprob: -12.379137992858887
    7. ' dp' → logprob: -13.379137992858887
    8. '        
' → logprob: -14.004137992858887
    9. '```' → logprob: -14.004137992858887
    10. '	dp' → logprob: -15.754137992858887

Token 2356: ' mais' (ID: 2899)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0016056748572736979
    2. '       ' → logprob: -6.50160551071167
    3. '   ' → logprob: -9.626605987548828
    4. 'from' → logprob: -10.751605987548828
    5. '
' → logprob: -12.126605987548828
    6. '```' → logprob: -12.251605987548828
    7. 'import' → logprob: -12.876605987548828
    8. ' dp' → logprob: -13.001605987548828
    9. '        
' → logprob: -14.626605987548828
    10. '	dp' → logprob: -15.376605987548828

Token 2357: ' saison' (ID: 38158)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2940783202648163
    2. 'pos' → logprob: -1.7940783500671387
    3. '#' → logprob: -2.7940783500671387
    4. '   ' → logprob: -4.919078350067139
    5. 'for' → logprob: -5.044078350067139
    6. '       ' → logprob: -5.294078350067139
    7. 'True' → logprob: -6.044078350067139
    8. 'M' → logprob: -7.044078350067139
    9. '
' → logprob: -7.169078350067139
    10. 'len' → logprob: -7.294078350067139

Token 2358: 'found' (ID: 26334)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.0010611523175612092
    2. 'found' → logprob: -7.126060962677002
    3. 'words' → logprob: -9.50106143951416
    4. '_mask' → logprob: -10.37606143951416
    5. '_f' → logprob: -10.75106143951416
    6. 's' → logprob: -10.87606143951416
    7. 'Found' → logprob: -11.25106143951416
    8. '
' → logprob: -11.25106143951416
    9. '_FOUND' → logprob: -11.37606143951416
    10. '_words' → logprob: -11.87606143951416

Token 2359: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014801718294620514
    2. ' =' → logprob: -4.264801502227783
    3. 's' → logprob: -8.514801979064941
    4. '
' → logprob: -9.139801979064941
    5. '==' → logprob: -9.264801979064941
    6. '```' → logprob: -10.014801979064941
    7. '[' → logprob: -10.764801979064941
    8. '=None' → logprob: -11.014801979064941
    9. '_found' → logprob: -11.139801979064941
    10. ',' → logprob: -11.139801979064941

Token 2360: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10027740150690079
    2. '=' → logprob: -2.3502774238586426
    3. ' ' → logprob: -10.350276947021484
    4. ' =' → logprob: -10.600276947021484
    5. '```' → logprob: -12.600276947021484
    6. '=
' → logprob: -12.850276947021484
    7. '{' → logprob: -13.225276947021484
    8. '==' → logprob: -13.350276947021484
    9. '[' → logprob: -13.350276947021484
    10. '
' → logprob: -15.350276947021484

Token 2361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41375744342803955
    2. ' =' → logprob: -1.4137574434280396
    3. 'dp' → logprob: -3.91375732421875
    4. '
' → logprob: -4.03875732421875
    5. '_current' → logprob: -4.03875732421875
    6. '   ' → logprob: -4.78875732421875
    7. ',' → logprob: -5.28875732421875
    8. '[' → logprob: -5.53875732421875
    9. '_dp' → logprob: -5.53875732421875
    10. '=[' → logprob: -5.66375732421875

Token 2362: ' aucun' (ID: 41678)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21803748607635498
    2. '1' → logprob: -2.2180376052856445
    3. 'no' → logprob: -2.7180376052856445
    4. '{' → logprob: -4.8430376052856445
    5. 'default' → logprob: -5.9680376052856445
    6. 'None' → logprob: -6.0930376052856445
    7. ' ' → logprob: -6.0930376052856445
    8. '{}' → logprob: -6.5930376052856445
    9. ' no' → logprob: -6.9680376052856445
    10. 'all' → logprob: -7.2180376052856445

Token 2363: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49713414907455444
    2. '=' → logprob: -1.8721342086791992
    3. ' =' → logprob: -2.372134208679199
    4. '_current' → logprob: -2.497134208679199
    5. '```' → logprob: -4.372134208679199
    6. 'dp' → logprob: -4.872134208679199
    7. '=
' → logprob: -5.372134208679199
    8. '

' → logprob: -5.872134208679199
    9. '[' → logprob: -5.872134208679199
    10. ',' → logprob: -5.872134208679199

Token 2364: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18659819662570953
    2. '       ' → logprob: -2.186598300933838
    3. 'dp' → logprob: -3.436598300933838
    4. '   ' → logprob: -4.436598300933838
    5. '```' → logprob: -5.186598300933838
    6. '_current' → logprob: -5.811598300933838
    7. ' =' → logprob: -6.686598300933838
    8. '_dp' → logprob: -6.936598300933838
    9. '        
' → logprob: -7.186598300933838
    10. '=' → logprob: -7.686598300933838

Token 2365: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2666044235229492
    2. '       ' → logprob: -1.6416044235229492
    3. '
' → logprob: -3.266604423522949
    4. '   ' → logprob: -6.766604423522949
    5. '        
' → logprob: -7.641604423522949
    6. 'import' → logprob: -8.51660442352295
    7. '```' → logprob: -8.89160442352295
    8. ' dp' → logprob: -9.14160442352295
    9. 'from' → logprob: -10.01660442352295
    10. '    
' → logprob: -10.26660442352295

Token 2366: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008560742135159671
    2. '       ' → logprob: -7.250855922698975
    3. 'from' → logprob: -9.125856399536133
    4. '   ' → logprob: -10.375856399536133
    5. '
' → logprob: -12.375856399536133
    6. 'import' → logprob: -14.125856399536133
    7. '        
' → logprob: -14.750856399536133
    8. ' dp' → logprob: -14.875856399536133
    9. '	dp' → logprob: -15.375856399536133
    10. '           ' → logprob: -16.625856399536133

Token 2367: 'pour' (ID: 52723)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43952232599258423
    2. ')' → logprob: -1.5645222663879395
    3. 'dp' → logprob: -2.6895222663879395
    4. 'pos' → logprob: -3.4395222663879395
    5. ' =' → logprob: -4.4395222663879395
    6. ']' → logprob: -4.6895222663879395
    7. ')
' → logprob: -4.8145222663879395
    8. '])' → logprob: -5.6895222663879395
    9. '=
' → logprob: -6.1895222663879395
    10. '0' → logprob: -6.3145222663879395

Token 2368: ' saison' (ID: 38158)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5960036516189575
    2. 'wi' → logprob: -1.2210036516189575
    3. 'word' → logprob: -2.471003532409668
    4. 'w' → logprob: -3.971003532409668
    5. '_pos' → logprob: -4.721003532409668
    6. 'dp' → logprob: -4.846003532409668
    7. ')' → logprob: -5.221003532409668
    8. '_w' → logprob: -5.596003532409668
    9. '_word' → logprob: -5.721003532409668
    10. '_' → logprob: -5.846003532409668

Token 2369: 'found' (ID: 26334)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.02372383326292038
    2. 'found' → logprob: -3.773723840713501
    3. '_f' → logprob: -8.273723602294922
    4. '_' → logprob: -10.148723602294922
    5. ')' → logprob: -10.273723602294922
    6. '
' → logprob: -10.898723602294922
    7. '```' → logprob: -11.023723602294922
    8. '_FOUND' → logprob: -11.148723602294922
    9. 'Found' → logprob: -11.773723602294922
    10. ')_' → logprob: -11.898723602294922

Token 2370: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09835340082645416
    2. ' =' → logprob: -3.223353385925293
    3. ')' → logprob: -3.723353385925293
    4. ',' → logprob: -4.848353385925293
    5. '_found' → logprob: -5.598353385925293
    6. '[' → logprob: -5.723353385925293
    7. 'found' → logprob: -6.098353385925293
    8. ']' → logprob: -6.598353385925293
    9. '
' → logprob: -6.723353385925293
    10. '+' → logprob: -6.848353385925293

Token 2371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1873662918806076
    2. '=' → logprob: -2.062366247177124
    3. '1' → logprob: -3.937366247177124
    4. ')' → logprob: -4.062366485595703
    5. ')
' → logprob: -6.812366485595703
    6. '):
' → logprob: -6.812366485595703
    7. ' =' → logprob: -7.187366485595703
    8. '
' → logprob: -7.187366485595703
    9. ' ' → logprob: -7.687366485595703
    10. ',' → logprob: -8.062366485595703

Token 2372: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17479132115840912
    2. ',' → logprob: -3.0497913360595703
    3. ')
' → logprob: -3.7997913360595703
    4. '=' → logprob: -3.9247913360595703
    5. '[' → logprob: -4.04979133605957
    6. ',
' → logprob: -4.29979133605957
    7. '):
' → logprob: -5.29979133605957
    8. ',)' → logprob: -5.29979133605957
    9. ')[' → logprob: -5.29979133605957
    10. '
' → logprob: -5.42479133605957

Token 2373: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0024943258613348007
    2. '0' → logprob: -6.7524943351745605
    3. '30' → logprob: -7.7524943351745605
    4. '=' → logprob: -8.502493858337402
    5. '
' → logprob: -8.502493858337402
    6. 'M' → logprob: -9.127493858337402
    7. '29' → logprob: -9.502493858337402
    8. '1' → logprob: -9.752493858337402
    9. ')' → logprob: -9.752493858337402
    10. '(K' → logprob: -10.502493858337402

Token 2374: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35691410303115845
    2. '):
' → logprob: -2.1069140434265137
    3. '])' → logprob: -2.8569140434265137
    4. ')
' → logprob: -2.9819140434265137
    5. ']' → logprob: -3.4819140434265137
    6. '])
' → logprob: -4.731914043426514
    7. '):' → logprob: -4.731914043426514
    8. '=' → logprob: -5.231914043426514
    9. '+' → logprob: -6.106914043426514
    10. ']):
' → logprob: -6.106914043426514

Token 2375: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3359581232070923
    2. 'dp' → logprob: -1.7109581232070923
    3. ')' → logprob: -1.9609581232070923
    4. '       ' → logprob: -2.4609580039978027
    5. ')
' → logprob: -2.9609580039978027
    6. '0' → logprob: -3.0859580039978027
    7. 'for' → logprob: -3.2109580039978027
    8. 'M' → logprob: -3.2109580039978027
    9. '   ' → logprob: -3.8359580039978027
    10. '=' → logprob: -3.9609580039978027

Token 2376: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0363150835037231
    2. 'for' → logprob: -1.9113150835037231
    3. '=' → logprob: -2.0363149642944336
    4. ')' → logprob: -2.2863149642944336
    5. '#' → logprob: -2.2863149642944336
    6. 'dp' → logprob: -3.7863149642944336
    7. '
' → logprob: -3.9113149642944336
    8. 'K' → logprob: -3.9113149642944336
    9. '):
' → logprob: -4.286314964294434
    10. ' =' → logprob: -4.411314964294434

Token 2377: '=c' (ID: 43473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3498735725879669
    2. ']' → logprob: -1.9748735427856445
    3. ' =' → logprob: -2.4748735427856445
    4. ')' → logprob: -3.4748735427856445
    5. ']=' → logprob: -4.8498735427856445
    6. '[' → logprob: -4.9748735427856445
    7. ',' → logprob: -5.3498735427856445
    8. '][' → logprob: -5.8498735427856445
    9. '])' → logprob: -5.9748735427856445
    10. '
' → logprob: -6.0998735427856445

Token 2378: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1610080003738403
    2. '=' → logprob: -1.4110080003738403
    3. '0' → logprob: -1.9110080003738403
    4. ']' → logprob: -2.411007881164551
    5. 'urrent' → logprob: -3.411007881164551
    6. 'None' → logprob: -3.786007881164551
    7. '
' → logprob: -3.911007881164551
    8. 'ont' → logprob: -4.286007881164551
    9. 'none' → logprob: -4.286007881164551
    10. '```' → logprob: -4.286007881164551

Token 2379: 'auc' (ID: 11816)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39049121737480164
    2. 'None' → logprob: -1.890491247177124
    3. ')' → logprob: -2.515491247177124
    4. 'none' → logprob: -3.890491247177124
    5. ']' → logprob: -4.140491008758545
    6. '[' → logprob: -4.390491008758545
    7. '1' → logprob: -4.890491008758545
    8. 'urrent' → logprob: -5.265491008758545
    9. 'ont' → logprob: -5.515491008758545
    10. '=' → logprob: -5.765491008758545

Token 2380: 'un' (ID: 373)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11893606185913086
    2. '0' → logprob: -2.243936061859131
    3. ' =' → logprob: -6.243936061859131
    4. '=None' → logprob: -6.868936061859131
    5. '==' → logprob: -7.243936061859131
    6. ')' → logprob: -7.868936061859131
    7. ']' → logprob: -7.993936061859131
    8. 'l' → logprob: -8.243936538696289
    9. '```' → logprob: -8.368936538696289
    10. 'ont' → logprob: -8.618936538696289

Token 2381: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6378365755081177
    2. '
' → logprob: -2.262836456298828
    3. ')' → logprob: -2.762836456298828
    4. '```' → logprob: -3.012836456298828
    5. ')
' → logprob: -3.262836456298828
    6. ']
' → logprob: -3.262836456298828
    7. '=' → logprob: -3.262836456298828
    8. '][' → logprob: -3.512836456298828
    9. '_current' → logprob: -3.637836456298828
    10. 'for' → logprob: -4.012836456298828

Token 2382: ' else' (ID: 1203)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8087357878684998
    2. 'K' → logprob: -0.9337357878684998
    3. ')' → logprob: -2.8087358474731445
    4. '#' → logprob: -3.5587358474731445
    5. '
' → logprob: -4.0587358474731445
    6. 'c' → logprob: -4.4337358474731445
    7. ')
' → logprob: -5.0587358474731445
    8. '):
' → logprob: -5.1837358474731445
    9. ' K' → logprob: -5.3087358474731445
    10. 's' → logprob: -5.5587358474731445

Token 2383: ' un' (ID: 537)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4122216701507568
    2. 'K' → logprob: -1.4122216701507568
    3. '1' → logprob: -1.7872216701507568
    4. 's' → logprob: -2.287221670150757
    5. 'c' → logprob: -2.412221670150757
    6. ')' → logprob: -3.037221670150757
    7. '#' → logprob: -4.037221908569336
    8. ' K' → logprob: -4.287221908569336
    9. ' =' → logprob: -4.287221908569336
    10. ')
' → logprob: -4.662221908569336

Token 2384: ' seul' (ID: 33041)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41775020956993103
    2. 'ique' → logprob: -1.6677502393722534
    3. 'm' → logprob: -3.292750120162964
    4. ' =' → logprob: -3.417750120162964
    5. '#' → logprob: -4.292750358581543
    6. 's' → logprob: -4.667750358581543
    7. '```' → logprob: -5.042750358581543
    8. '[' → logprob: -5.667750358581543
    9. '+=' → logprob: -5.667750358581543
    10. ')' → logprob: -5.792750358581543

Token 2385: ' saison' (ID: 38158)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4567376971244812
    2. ')' → logprob: -1.456737756729126
    3. 's' → logprob: -3.081737756729126
    4. ')
' → logprob: -3.331737756729126
    5. 'season' → logprob: -4.706737518310547
    6. '```' → logprob: -4.956737518310547
    7. '_s' → logprob: -5.206737518310547
    8. 'found' → logprob: -5.331737518310547
    9. ' =' → logprob: -5.581737518310547
    10. '#' → logprob: -6.206737518310547

Token 2386: 'word' (ID: 1801)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.08616019785404205
    2. 'found' → logprob: -2.711160182952881
    3. '_word' → logprob: -5.711160182952881
    4. '_' → logprob: -5.711160182952881
    5. '=' → logprob: -5.836160182952881
    6. ')' → logprob: -6.461160182952881
    7. 'word' → logprob: -6.836160182952881
    8. ' =' → logprob: -7.211160182952881
    9. '
' → logprob: -7.961160182952881
    10. '```' → logprob: -8.336160659790039

Token 2387: ' trouvé' (ID: 60081)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5143734216690063
    2. ']' → logprob: -2.139373302459717
    3. 'found' → logprob: -2.639373302459717
    4. ')' → logprob: -2.889373302459717
    5. '_found' → logprob: -3.264373302459717
    6. ' =' → logprob: -3.514373302459717
    7. '```' → logprob: -4.139373302459717
    8. '[' → logprob: -4.639373302459717
    9. '0' → logprob: -4.639373302459717
    10. ']=' → logprob: -4.889373302459717

Token 2388: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.794724702835083
    2. '_current' → logprob: -1.294724702835083
    3. '   ' → logprob: -2.419724702835083
    4. '       ' → logprob: -2.419724702835083
    5. ' =' → logprob: -3.169724702835083
    6. '=' → logprob: -3.919724702835083
    7. ']' → logprob: -4.794724464416504
    8. '```' → logprob: -5.044724464416504
    9. ')
' → logprob: -5.794724464416504
    10. 'dp' → logprob: -6.169724464416504

Token 2389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4352019131183624
    2. 'dp' → logprob: -1.06020188331604
    3. 'from' → logprob: -6.060202121734619
    4. '
' → logprob: -6.560202121734619
    5. '```' → logprob: -6.810202121734619
    6. 'import' → logprob: -7.060202121734619
    7. '   ' → logprob: -7.435202121734619
    8. ' dp' → logprob: -9.185201644897461
    9. '        
' → logprob: -10.560201644897461
    10. '	dp' → logprob: -11.060201644897461

Token 2390: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016023222357034683
    2. '       ' → logprob: -4.2660231590271
    3. '   ' → logprob: -6.5160231590271
    4. '
' → logprob: -8.266023635864258
    5. 'from' → logprob: -9.766023635864258
    6. '```' → logprob: -10.516023635864258
    7. '        
' → logprob: -11.141023635864258
    8. ' dp' → logprob: -11.766023635864258
    9. 'import' → logprob: -11.766023635864258
    10. '    
' → logprob: -12.641023635864258

Token 2391: ' attention' (ID: 8684)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.026533665135502815
    2. '       ' → logprob: -3.776533603668213
    3. '   ' → logprob: -5.901533603668213
    4. 'from' → logprob: -7.901533603668213
    5. ' dp' → logprob: -9.901534080505371
    6. 'import' → logprob: -10.026534080505371
    7. '
' → logprob: -10.276534080505371
    8. '```' → logprob: -10.526534080505371
    9. '        
' → logprob: -11.526534080505371
    10. '	dp' → logprob: -12.776534080505371

Token 2392: ' quand' (ID: 18026)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.041982270777225494
    2. '       ' → logprob: -4.166982173919678
    3. ' dp' → logprob: -4.291982173919678
    4. '
' → logprob: -4.666982173919678
    5. '   ' → logprob: -6.541982173919678
    6. 'import' → logprob: -8.541982650756836
    7. '#' → logprob: -8.541982650756836
    8. '[
' → logprob: -8.791982650756836
    9. '[' → logprob: -9.541982650756836
    10. '_dp' → logprob: -9.541982650756836

Token 2393: ' on' (ID: 402)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.44267821311950684
    2. 'M' → logprob: -2.192678213119507
    3. 'K' → logprob: -2.567678213119507
    4. 'se' → logprob: -3.442678213119507
    5. ' pos' → logprob: -3.442678213119507
    6. 'wi' → logprob: -3.692678213119507
    7. 'season' → logprob: -4.317678451538086
    8. 'trans' → logprob: -4.942678451538086
    9. 's' → logprob: -5.192678451538086
    10. ' K' → logprob: -5.567678451538086

Token 2394: ' combine' (ID: 21700)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.504503607749939
    2. '#' → logprob: -1.629503607749939
    3. 'contin' → logprob: -2.3795037269592285
    4. 'for' → logprob: -4.8795037269592285
    5. 'update' → logprob: -5.2545037269592285
    6. 's' → logprob: -5.3795037269592285
    7. 'repr' → logprob: -5.5045037269592285
    8. 'read' → logprob: -5.6295037269592285
    9. 're' → logprob: -5.6295037269592285
    10. 'initialize' → logprob: -5.7545037269592285

Token 2395: ' found' (ID: 2491)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.034348487854004
    2. '_' → logprob: -2.284348487854004
    3. ' dp' → logprob: -2.284348487854004
    4. '[
' → logprob: -2.409348487854004
    5. '   ' → logprob: -2.784348487854004
    6. ']' → logprob: -2.909348487854004
    7. '_
' → logprob: -3.284348487854004
    8. '
' → logprob: -3.784348487854004
    9. '       ' → logprob: -3.909348487854004
    10. 'pos' → logprob: -4.534348487854004

Token 2396: ' lors' (ID: 15456)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7440603375434875
    2. '_' → logprob: -1.7440602779388428
    3. '_se' → logprob: -2.3690602779388428
    4. '[' → logprob: -2.7440602779388428
    5. ' =' → logprob: -3.6190602779388428
    6. 's' → logprob: -3.6190602779388428
    7. '_found' → logprob: -3.6190602779388428
    8. 'found' → logprob: -3.7440602779388428
    9. '_s' → logprob: -4.244060516357422
    10. '!=' → logprob: -4.369060516357422

Token 2397: ' du' (ID: 1462)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9903098344802856
    2. 'd' → logprob: -2.365309715270996
    3. 'de' → logprob: -2.365309715270996
    4. 'la' → logprob: -2.490309715270996
    5. 'que' → logprob: -2.615309715270996
    6. 'le' → logprob: -3.365309715270996
    7. '       ' → logprob: -3.365309715270996
    8. 'du' → logprob: -3.365309715270996
    9. ' de' → logprob: -3.740309715270996
    10. '#' → logprob: -4.240309715270996

Token 2398: ' passage' (ID: 26368)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23738427460193634
    2. '#' → logprob: -2.86238431930542
    3. 'trans' → logprob: -3.86238431930542
    4. 'dp' → logprob: -4.23738431930542
    5. 'if' → logprob: -4.36238431930542
    6. 'concat' → logprob: -4.48738431930542
    7. 'w' → logprob: -4.73738431930542
    8. ' for' → logprob: -4.86238431930542
    9. 'lecture' → logprob: -4.86238431930542
    10. 'read' → logprob: -5.11238431930542

Token 2399: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1272244453430176
    2. ':' → logprob: -2.6272244453430176
    3. '```' → logprob: -2.6272244453430176
    4. '=' → logprob: -2.7522244453430176
    5. ':
' → logprob: -2.8772244453430176
    6. '#' → logprob: -3.1272244453430176
    7. 'from' → logprob: -3.3772244453430176
    8. '           ' → logprob: -3.5022244453430176
    9. 'de' → logprob: -3.7522244453430176
    10. 's' → logprob: -3.8772244453430176

Token 2400: ''un' (ID: 9788)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.6887487173080444
    2. 'e' → logprob: -2.313748836517334
    3. ' un' → logprob: -2.313748836517334
    4. ' mot' → logprob: -2.313748836517334
    5. 'dp' → logprob: -2.438748836517334
    6. ''un' → logprob: -2.813748836517334
    7. 'word' → logprob: -3.313748836517334
    8. 'u' → logprob: -3.563748836517334
    9. ' dp' → logprob: -3.688748836517334
    10. 'mot' → logprob: -3.688748836517334

Token 2401: ' mot' (ID: 3598)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.09770968556404114
    2. ' mot' → logprob: -3.4727096557617188
    3. 'ét' → logprob: -3.7227096557617188
    4. '
' → logprob: -4.472709655761719
    5. 'word' → logprob: -5.097709655761719
    6. 'm' → logprob: -5.597709655761719
    7. '```' → logprob: -5.597709655761719
    8. 'w' → logprob: -6.972709655761719
    9. '`' → logprob: -6.972709655761719
    10. 'élé' → logprob: -7.097709655761719

Token 2402: ':
' (ID: 734)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.6785901188850403
    2. '       ' → logprob: -1.3035900592803955
    3. '_next' → logprob: -2.3035900592803955
    4. 'dp' → logprob: -3.1785900592803955
    5. '
' → logprob: -4.178590297698975
    6. '_' → logprob: -4.303590297698975
    7. '_dp' → logprob: -4.428590297698975
    8. '=' → logprob: -4.928590297698975
    9. '   ' → logprob: -5.053590297698975
    10. '```' → logprob: -5.178590297698975

Token 2403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6989849805831909
    2. '```' → logprob: -1.073984980583191
    3. '               ' → logprob: -2.8239850997924805
    4. '#' → logprob: -3.9489850997924805
    5. '                   ' → logprob: -4.5739850997924805
    6. '[
' → logprob: -4.6989850997924805
    7. '[' → logprob: -4.8239850997924805
    8. '                       ' → logprob: -4.8239850997924805
    9. '``' → logprob: -4.8239850997924805
    10. 'for' → logprob: -4.8239850997924805

Token 2404: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11465780436992645
    2. '#' (adapté à ' #') → logprob: -3.3646578788757324
    3. '               ' → logprob: -3.7396578788757324
    4. '                       ' → logprob: -4.614657878875732
    5. '                   ' → logprob: -4.989657878875732
    6. ' if' → logprob: -5.239657878875732
    7. '           ' → logprob: -5.489657878875732
    8. 'for' → logprob: -5.489657878875732
    9. '```' → logprob: -5.614657878875732
    10. ' for' → logprob: -6.239657878875732

Token 2405: ' si' (ID: 1784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5041906237602234
    2. '       ' → logprob: -1.7541906833648682
    3. 'for' → logprob: -2.629190683364868
    4. 'season' → logprob: -2.879190683364868
    5. 'if' → logprob: -3.129190683364868
    6. '               ' → logprob: -4.504190444946289
    7. '           ' → logprob: -4.504190444946289
    8. 'found' → logprob: -5.379190444946289
    9. '
' → logprob: -5.504190444946289
    10. ' #' → logprob: -5.754190444946289

Token 2406: ' saison' (ID: 38158)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.03689678758382797
    2. 's' → logprob: -4.161896705627441
    3. ' season' → logprob: -4.536896705627441
    4. 'found' → logprob: -5.286896705627441
    5. ' saison' → logprob: -5.786896705627441
    6. 'len' → logprob: -7.286896705627441
    7. 'se' → logprob: -7.411896705627441
    8. '
' → logprob: -9.411896705627441
    9. ' found' → logprob: -9.661896705627441
    10. '#' → logprob: -9.661896705627441

Token 2407: 'found' (ID: 26334)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.02394058182835579
    2. 'found' → logprob: -3.7739405632019043
    3. '_f' → logprob: -7.648940563201904
    4. '_' → logprob: -9.148941040039062
    5. '```' → logprob: -10.648941040039062
    6. '
' → logprob: -11.023941040039062
    7. '_FOUND' → logprob: -11.773941040039062
    8. '_find' → logprob: -12.023941040039062
    9. '\' → logprob: -12.023941040039062
    10. 'Found' → logprob: -12.273941040039062

Token 2408: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4469706416130066
    2. '==' → logprob: -1.5719707012176514
    3. '!=' → logprob: -2.9469707012176514
    4. '_found' → logprob: -3.1969707012176514
    5. 'found' → logprob: -4.196970462799072
    6. ' ==' → logprob: -4.196970462799072
    7. ' !=' → logprob: -4.571970462799072
    8. '+' → logprob: -4.821970462799072
    9. ' =' → logprob: -6.321970462799072
    10. '_' → logprob: -6.446970462799072

Token 2409: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.08944896562025e-05
    2. ' ' → logprob: -9.500081062316895
    3. '=' → logprob: -13.000081062316895
    4. '1' → logprob: -13.125081062316895
    5. 'found' → logprob: -14.750081062316895
    6. '   ' → logprob: -15.000081062316895
    7. '>' → logprob: -15.750081062316895
    8. ' found' → logprob: -15.750081062316895
    9. '==' → logprob: -15.937581062316895
    10. '```' → logprob: -16.062580108642578

Token 2410: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8964160680770874
    2. '==' → logprob: -0.8964160680770874
    3. '=' → logprob: -2.396416187286377
    4. ' ==' → logprob: -3.396416187286377
    5. ':
' → logprob: -4.396416187286377
    6. ' and' → logprob: -4.521416187286377
    7. 'and' → logprob: -4.646416187286377
    8. '!=' → logprob: -4.771416187286377
    9. ',' → logprob: -5.146416187286377
    10. '<|end|>' → logprob: -5.521416187286377

Token 2411: ' found' (ID: 2491)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.3823135197162628
    2. 'found' → logprob: -1.6323134899139404
    3. 's' → logprob: -2.6323134899139404
    4. 'len' → logprob: -3.3823134899139404
    5. 'secret' → logprob: -5.5073137283325195
    6. '#' → logprob: -6.2573137283325195
    7. 'trans' → logprob: -6.3823137283325195
    8. 'not' → logprob: -6.5073137283325195
    9. 'ac' → logprob: -6.7573137283325195
    10. ' found' → logprob: -7.0073137283325195

Token 2412: ' dans' (ID: 2671)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8202861547470093
    2. '!=' → logprob: -1.1952861547470093
    3. ' !=' → logprob: -1.8202861547470093
    4. ' ==' → logprob: -2.695286273956299
    5. '=' → logprob: -3.945286273956299
    6. '[' → logprob: -5.320286273956299
    7. '[s' → logprob: -6.820286273956299
    8. '_found' → logprob: -7.945286273956299
    9. '==-' → logprob: -8.07028579711914
    10. '```' → logprob: -8.19528579711914

Token 2413: ' mot' (ID: 3598)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.034493573009967804
    2. 'trans' → logprob: -4.034493446350098
    3. 'ac' → logprob: -5.284493446350098
    4. 'secret' → logprob: -5.534493446350098
    5. 's' → logprob: -6.034493446350098
    6. 'found' → logprob: -6.534493446350098
    7. '[' → logprob: -6.659493446350098
    8. ' secr' → logprob: -8.034493446350098
    9. '   ' → logprob: -8.159493446350098
    10. '
' → logprob: -8.659493446350098

Token 2414: ' =' (ID: 314)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -1.0025979280471802
    2. '==' → logprob: -1.3775979280471802
    3. ' !=' → logprob: -2.1275978088378906
    4. ':
' → logprob: -2.1275978088378906
    5. '[' → logprob: -2.6275978088378906
    6. '=' → logprob: -4.002597808837891
    7. ' ==' → logprob: -4.252597808837891
    8. ':' → logprob: -4.377597808837891
    9. '```' → logprob: -4.502597808837891
    10. '[s' → logprob: -5.877597808837891

Token 2415: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.9813863635063171
    2. 'se' → logprob: -1.481386423110962
    3. 'found' → logprob: -2.106386423110962
    4. '1' → logprob: -2.356386423110962
    5. '0' → logprob: -2.606386423110962
    6. 'set' → logprob: -2.856386423110962
    7. 'range' → logprob: -3.606386423110962
    8. 'list' → logprob: -5.356386184692383
    9. '-' → logprob: -5.606386184692383
    10. '{s' → logprob: -5.731386184692383

Token 2416: 's' (ID: 82)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4554197788238525
    2. '0' → logprob: -1.9554197788238525
    3. '}' → logprob: -2.2054197788238525
    4. 'w' → logprob: -2.3304197788238525
    5. 's' → logprob: -2.4554197788238525
    6. 'se' → logprob: -2.7054197788238525
    7. ')' → logprob: -2.8304197788238525
    8. 'found' → logprob: -2.8304197788238525
    9. 'i' → logprob: -3.4554197788238525
    10. '...' → logprob: -3.7054197788238525

Token 2417: '},' (ID: 4180)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.002361974911764264
    2. '}
' → logprob: -7.62736177444458
    3. '}:' → logprob: -7.75236177444458
    4. 'et' → logprob: -8.002362251281738
    5. ' }' → logprob: -8.377362251281738
    6. 's' → logprob: -8.377362251281738
    7. '},' → logprob: -8.502362251281738
    8. ',' → logprob: -8.877362251281738
    9. '[' → logprob: -9.877362251281738
    10. ':' → logprob: -10.502362251281738

Token 2418: ' nouveau' (ID: 23184)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6355592012405396
    2. '#' → logprob: -1.7605592012405396
    3. ':
' → logprob: -1.8855592012405396
    4. '       ' → logprob: -3.01055908203125
    5. ' on' → logprob: -4.38555908203125
    6. 's' → logprob: -4.51055908203125
    7. ',' → logprob: -4.63555908203125
    8. '           ' → logprob: -4.88555908203125
    9. '   ' → logprob: -5.01055908203125
    10. ' s' → logprob: -5.51055908203125

Token 2419: ' season' (ID: 5217)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3473770022392273
    2. 'season' → logprob: -2.347377061843872
    3. '_se' → logprob: -2.972377061843872
    4. 's' → logprob: -3.097377061843872
    5. '_s' → logprob: -3.097377061843872
    6. '=' → logprob: -4.222376823425293
    7. '_found' → logprob: -4.597376823425293
    8. 'found' → logprob: -4.972376823425293
    9. ')' → logprob: -6.097376823425293
    10. 'for' → logprob: -6.097376823425293

Token 2420: 'found' (ID: 26334)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.005983900744467974
    2. 'found' → logprob: -5.130983829498291
    3. '_' → logprob: -10.50598430633545
    4. '_f' → logprob: -11.63098430633545
    5. '```' → logprob: -11.75598430633545
    6. '\' → logprob: -12.50598430633545
    7. 'Found' → logprob: -12.75598430633545
    8. '_FOUND' → logprob: -14.13098430633545
    9. '	found' → logprob: -15.13098430633545
    10. ' _' → logprob: -15.13098430633545

Token 2421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7846012711524963
    2. '_' → logprob: -1.2846012115478516
    3. ' =' → logprob: -2.5346012115478516
    4. '_found' → logprob: -3.0346012115478516
    5. '```' → logprob: -3.9096012115478516
    6. '_
' → logprob: -4.034601211547852
    7. '=
' → logprob: -4.284601211547852
    8. '[' → logprob: -4.409601211547852
    9. '_current' → logprob: -4.534601211547852
    10. ',' → logprob: -4.659601211547852

Token 2422: ' s' (ID: 265)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5500509738922119
    2. 'list' → logprob: -1.175050973892212
    3. 's' → logprob: -2.675050973892212
    4. 'found' → logprob: -3.800050973892212
    5. ' next' → logprob: -4.425050735473633
    6. '(next' → logprob: -5.300050735473633
    7. ' list' → logprob: -5.550050735473633
    8. '(s' → logprob: -7.050050735473633
    9. ' s' → logprob: -8.050050735473633
    10. '1' → logprob: -8.550050735473633

Token 2423: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010821070522069931
    2. 'dp' → logprob: -5.5108208656311035
    3. ']' → logprob: -6.6358208656311035
    4. '
' → logprob: -7.0108208656311035
    5. '=' → logprob: -7.1358208656311035
    6. '   ' → logprob: -7.5108208656311035
    7. '           ' → logprob: -7.6358208656311035
    8. '```' → logprob: -7.6358208656311035
    9. '_current' → logprob: -7.7608208656311035
    10. ' =' → logprob: -8.010821342468262

Token 2424: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004330303054302931
    2. 'found' → logprob: -6.004330158233643
    3. 'season' → logprob: -6.879330158233643
    4. 's' → logprob: -7.379330158233643
    5. '0' → logprob: -9.1293306350708
    6. ' len' → logprob: -10.0043306350708
    7. '(len' → logprob: -11.2543306350708
    8. 'list' → logprob: -11.5043306350708
    9. 'se' → logprob: -12.1293306350708
    10. 'not' → logprob: -12.7543306350708

Token 2425: '(found' (ID: 105397)
  Prédit: '(found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(found' → logprob: -0.002458056667819619
    2. '(' → logprob: -6.502458095550537
    3. 'found' → logprob: -7.377458095550537
    4. '(se' → logprob: -9.127457618713379
    5. '(s' → logprob: -9.377457618713379
    6. '(
' → logprob: -10.127457618713379
    7. '
' → logprob: -10.627457618713379
    8. ' found' → logprob: -11.252457618713379
    9. '	found' → logprob: -11.377457618713379
    10. '{' → logprob: -11.752457618713379

Token 2426: ')==' (ID: 35269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6144797801971436
    2. '==' → logprob: -1.2394797801971436
    3. '>' → logprob: -2.9894797801971436
    4. ' ==' → logprob: -3.1144797801971436
    5. ')==' → logprob: -3.3644797801971436
    6. ')>' → logprob: -4.989480018615723
    7. '1' → logprob: -5.114480018615723
    8. '=' → logprob: -5.239480018615723
    9. '<=' → logprob: -5.489480018615723
    10. ' >' → logprob: -5.739480018615723

Token 2427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -13.125006675720215
    3. '```' → logprob: -13.250006675720215
    4. '
' → logprob: -13.875006675720215
    5. '==' → logprob: -14.750006675720215
    6. '0' → logprob: -15.000006675720215
    7. '=' → logprob: -15.500006675720215
    8. '...' → logprob: -15.625006675720215
    9. '<|end|>' → logprob: -15.625006675720215
    10. '[' → logprob: -16.25000762939453

Token 2428: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6877057552337646
    2. '
' → logprob: -1.0627057552337646
    3. '```' → logprob: -3.6877057552337646
    4. '[' → logprob: -4.187705993652344
    5. ':
' → logprob: -4.312705993652344
    6. '=' → logprob: -4.437705993652344
    7. '               ' → logprob: -4.937705993652344
    8. '           ' → logprob: -4.937705993652344
    9. '   ' → logprob: -5.062705993652344
    10. ':' → logprob: -5.312705993652344

Token 2429: '       ' (ID: 309)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.41895970702171326
    2. 'else' → logprob: -1.4189597368240356
    3. '
' → logprob: -3.543959617614746
    4. '       ' → logprob: -3.543959617614746
    5. '           ' → logprob: -4.543959617614746
    6. '```' → logprob: -5.168959617614746
    7. '               ' → logprob: -5.418959617614746
    8. '                   ' → logprob: -6.043959617614746
    9. '[' → logprob: -6.293959617614746
    10. '0' → logprob: -6.418959617614746

Token 2430: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08710096031427383
    2. '
' → logprob: -3.7121009826660156
    3. '```' → logprob: -3.7121009826660156
    4. 'dp' → logprob: -4.712100982666016
    5. 'if' → logprob: -5.462100982666016
    6. ' if' → logprob: -5.712100982666016
    7. '           ' → logprob: -6.337100982666016
    8. ',' → logprob: -6.337100982666016
    9. 'found' → logprob: -6.587100982666016
    10. '``' → logprob: -6.712100982666016

Token 2431: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3625279664993286
    2. 'dp' → logprob: -1.2375279664993286
    3. '   ' → logprob: -5.487527847290039
    4. '```' → logprob: -5.862527847290039
    5. ' dp' → logprob: -6.362527847290039
    6. '
' → logprob: -6.612527847290039
    7. 'for' → logprob: -7.112527847290039
    8. 'pos' → logprob: -7.362527847290039
    9. ']' → logprob: -8.237527847290039
    10. '_dp' → logprob: -8.487527847290039

Token 2432: ' found' (ID: 2491)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.24113506078720093
    2. 's' → logprob: -2.3661351203918457
    3. 'found' → logprob: -2.9911351203918457
    4. ' season' → logprob: -3.4911351203918457
    5. 'len' → logprob: -3.9911351203918457
    6. ' saison' → logprob: -4.116135120391846
    7. ' found' → logprob: -5.741135120391846
    8. ' len' → logprob: -7.491135120391846
    9. 'se' → logprob: -8.366134643554688
    10. ' sezon' → logprob: -8.866134643554688

Token 2433: ' multiple' (ID: 7598)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42783650755882263
    2. '==' → logprob: -1.177836537361145
    3. '[' → logprob: -4.0528364181518555
    4. '!=' → logprob: -4.8028364181518555
    5. 'len' → logprob: -5.3028364181518555
    6. ' ==' → logprob: -5.5528364181518555
    7. '=len' → logprob: -6.9278364181518555
    8. '[len' → logprob: -7.1778364181518555
    9. 's' → logprob: -7.4278364181518555
    10. '[s' → logprob: -7.6778364181518555

Token 2434: ' saison' (ID: 38158)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.41869449615478516
    2. '_found' → logprob: -2.543694496154785
    3. ' ==' → logprob: -2.918694496154785
    4. '=' → logprob: -3.043694496154785
    5. 's' → logprob: -3.043694496154785
    6. '>' → logprob: -3.918694496154785
    7. 'found' → logprob: -4.418694496154785
    8. '{' → logprob: -4.793694496154785
    9. ':' → logprob: -4.793694496154785
    10. '_s' → logprob: -5.043694496154785

Token 2435: 'word' (ID: 1801)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.09270746260881424
    2. '_words' → logprob: -3.342707395553589
    3. '_word' → logprob: -3.592707395553589
    4. 'words' → logprob: -4.717707633972168
    5. 's' → logprob: -5.217707633972168
    6. 'found' → logprob: -6.217707633972168
    7. ' _' → logprob: -6.842707633972168
    8. '_' → logprob: -7.092707633972168
    9. 'word' → logprob: -7.092707633972168
    10. '\' → logprob: -7.717707633972168

Token 2436: ' en' (ID: 469)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.6089046001434326
    2. 'found' → logprob: -2.1089046001434326
    3. '==' → logprob: -2.2339046001434326
    4. '=' → logprob: -2.4839046001434326
    5. 's' → logprob: -2.8589046001434326
    6. ' ==' → logprob: -3.9839046001434326
    7. '```' → logprob: -4.358904838562012
    8. '[' → logprob: -4.483904838562012
    9. ' =' → logprob: -4.483904838562012
    10. '!=' → logprob: -5.483904838562012

Token 2437: ' un' (ID: 537)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.14684005081653595
    2. 'found' → logprob: -2.5218400955200195
    3. 'plus' → logprob: -3.7718400955200195
    4. '```' → logprob: -5.5218400955200195
    5. 'set' → logprob: -5.6468400955200195
    6. 's' → logprob: -5.6468400955200195
    7. 'multip' → logprob: -5.7718400955200195
    8. 'same' → logprob: -5.8968400955200195
    9. ' mot' → logprob: -6.3968400955200195
    10. 'multiple' → logprob: -6.6468400955200195

Token 2438: ' mot' (ID: 3598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9332267642021179
    2. 's' → logprob: -2.0582268238067627
    3. '_' → logprob: -2.3082268238067627
    4. '```' → logprob: -2.6832268238067627
    5. ' ' → logprob: -2.8082268238067627
    6. '"' → logprob: -2.8082268238067627
    7. ',' → logprob: -3.0582268238067627
    8. '
' → logprob: -3.8082268238067627
    9. ']' → logprob: -4.058226585388184
    10. ''' → logprob: -4.183226585388184

Token 2439: ' c' (ID: 274)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8331823348999023
    2. ':' → logprob: -1.2081823348999023
    3. '       ' → logprob: -2.8331823348999023
    4. '=' → logprob: -3.0831823348999023
    5. ' =' → logprob: -4.083182334899902
    6. ' and' → logprob: -4.458182334899902
    7. 's' → logprob: -4.458182334899902
    8. '   ' → logprob: -4.458182334899902
    9. ' or' → logprob: -4.708182334899902
    10. '{' → logprob: -4.958182334899902

Token 2440: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.451803594827652
    2. '==' → logprob: -1.3268035650253296
    3. ' ==' → logprob: -3.951803684234619
    4. ''' → logprob: -4.326803684234619
    5. ''est' → logprob: -4.951803684234619
    6. 'n' → logprob: -5.201803684234619
    7. ' =' → logprob: -5.326803684234619
    8. 's' → logprob: -5.576803684234619
    9. '!=' → logprob: -5.576803684234619
    10. '#' → logprob: -5.576803684234619

Token 2441: ' invalid' (ID: 15796)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03560847416520119
    2. '0' → logprob: -3.9106085300445557
    3. 'im' → logprob: -4.910608291625977
    4. '#' → logprob: -5.535608291625977
    5. 'invalid' → logprob: -6.285608291625977
    6. '```' → logprob: -7.910608291625977
    7. ' -' → logprob: -8.035608291625977
    8. 'not' → logprob: -8.660608291625977
    9. 's' → logprob: -9.160608291625977
    10. 'non' → logprob: -9.285608291625977

Token 2442: ' direct' (ID: 2823)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09980703145265579
    2. '
' → logprob: -2.974807024002075
    3. ']' → logprob: -4.599807262420654
    4. '   ' → logprob: -5.724807262420654
    5. '           ' → logprob: -5.724807262420654
    6. ']
' → logprob: -5.724807262420654
    7. '_current' → logprob: -5.974807262420654
    8. ')
' → logprob: -6.099807262420654
    9. ' =' → logprob: -6.099807262420654
    10. ')' → logprob: -6.224807262420654

Token 2443: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18953195214271545
    2. ']' → logprob: -2.9395320415496826
    3. '[
' → logprob: -3.9395320415496826
    4. ']
' → logprob: -4.0645318031311035
    5. '           ' → logprob: -4.3145318031311035
    6. '   ' → logprob: -4.3145318031311035
    7. '
' → logprob: -4.6895318031311035
    8. ')
' → logprob: -5.0645318031311035
    9. '               ' → logprob: -5.3145318031311035
    10. '[' → logprob: -5.3145318031311035

Token 2444: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0294408798217773
    2. ')
' → logprob: -1.0294408798217773
    3. ':' → logprob: -3.1544408798217773
    4. '#' → logprob: -3.2794408798217773
    5. ':
' → logprob: -3.4044408798217773
    6. '):
' → logprob: -3.6544408798217773
    7. '=' → logprob: -3.7794408798217773
    8. ',' → logprob: -4.154440879821777
    9. 'continue' → logprob: -4.529440879821777
    10. '0' → logprob: -4.654440879821777

Token 2445: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0996984988451004
    2. ' len' → logprob: -3.599698543548584
    3. '#' → logprob: -4.599698543548584
    4. 's' → logprob: -4.599698543548584
    5. 'found' → logprob: -4.724698543548584
    6. ' on' → logprob: -5.224698543548584
    7. ')' → logprob: -5.349698543548584
    8. 'on' → logprob: -5.474698543548584
    9. ' s' → logprob: -5.599698543548584
    10. ' found' → logprob: -5.974698543548584

Token 2446: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20876015722751617
    2. ' len' → logprob: -2.5837602615356445
    3. '>' → logprob: -2.9587602615356445
    4. ')' → logprob: -4.2087602615356445
    5. ' found' → logprob: -4.7087602615356445
    6. 'found' → logprob: -5.0837602615356445
    7. ''' → logprob: -5.3337602615356445
    8. 's' → logprob: -5.8337602615356445
    9. ' multiple' → logprob: -6.2087602615356445
    10. ' >' → logprob: -6.2087602615356445

Token 2447: ' saison' (ID: 38158)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.834959864616394
    2. 's' → logprob: -1.334959864616394
    3. '```' → logprob: -3.4599599838256836
    4. ' s' → logprob: -3.5849599838256836
    5. ')
' → logprob: -3.7099599838256836
    6. '),' → logprob: -4.084959983825684
    7. '...' → logprob: -4.209959983825684
    8. '}' → logprob: -4.334959983825684
    9. '):
' → logprob: -4.459959983825684
    10. '+' → logprob: -4.459959983825684

Token 2448: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.4141184389591217
    2. 'words' → logprob: -1.7891184091567993
    3. '_word' → logprob: -2.789118528366089
    4. ')' → logprob: -3.289118528366089
    5. '_words' → logprob: -3.289118528366089
    6. 's' → logprob: -4.03911828994751
    7. ')_' → logprob: -5.41411828994751
    8. ')
' → logprob: -5.41411828994751
    9. ' word' → logprob: -6.03911828994751
    10. '_' → logprob: -6.03911828994751

Token 2449: ' different' (ID: 2647)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7121052145957947
    2. ')' → logprob: -2.0871052742004395
    3. '}' → logprob: -2.2121052742004395
    4. '_found' → logprob: -3.0871052742004395
    5. 'found' → logprob: -3.3371052742004395
    6. ' found' → logprob: -3.5871052742004395
    7. '(s' → logprob: -4.3371052742004395
    8. ',' → logprob: -4.4621052742004395
    9. ' ' → logprob: -4.8371052742004395
    10. ']' → logprob: -4.8371052742004395

Token 2450: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.037933267652988434
    2. ')' → logprob: -4.162933349609375
    3. '}' → logprob: -5.287933349609375
    4. ')
' → logprob: -5.787933349609375
    5. ' s' → logprob: -6.287933349609375
    6. 'e' → logprob: -6.787933349609375
    7. '):
' → logprob: -6.787933349609375
    8. '})' → logprob: -7.162933349609375
    9. '}
' → logprob: -7.537933349609375
    10. 'es' → logprob: -7.662933349609375

Token 2451: ' ' (ID: 220)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6725969314575195
    2. 'pp' → logprob: -1.5475969314575195
    3. 'vec' → logprob: -1.9225969314575195
    4. 'u' → logprob: -2.9225969314575195
    5. 'pres' → logprob: -4.1725969314575195
    6. 'ucun' → logprob: -4.2975969314575195
    7. 'prés' → logprob: -4.5475969314575195
    8. 'ucune' → logprob: -4.9225969314575195
    9. 'cc' → logprob: -5.2975969314575195
    10. 'près' → logprob: -5.7975969314575195

Token 2452: '1' (ID: 16)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5397137403488159
    2. '1' → logprob: -1.789713740348816
    3. 'part' → logprob: -2.0397138595581055
    4. 'l' → logprob: -2.9147138595581055
    5. 'plus' → logprob: -4.1647138595581055
    6. 'fois' → logprob: -4.6647138595581055
    7. '0' → logprob: -5.0397138595581055
    8. 'once' → logprob: -5.4147138595581055
    9. 'prés' → logprob: -5.7897138595581055
    10. '+' → logprob: -6.0397138595581055

Token 2453: ' occurrence' (ID: 55807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8579525351524353
    2. '
' → logprob: -2.73295259475708
    3. ']' → logprob: -2.85795259475708
    4. 'u' → logprob: -2.85795259475708
    5. 'nd' → logprob: -3.23295259475708
    6. '```' → logprob: -3.23295259475708
    7. 'ucune' → logprob: -3.35795259475708
    8. 'p' → logprob: -3.60795259475708
    9. '#' → logprob: -3.73295259475708
    10. 'vec' → logprob: -3.73295259475708

Token 2454: ' dans' (ID: 2671)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6948930025100708
    2. ')' → logprob: -1.3198930025100708
    3. '}' → logprob: -1.9448930025100708
    4. ')
' → logprob: -4.319892883300781
    5. '[' → logprob: -4.819892883300781
    6. '```' → logprob: -4.944892883300781
    7. 's' → logprob: -5.069892883300781
    8. ',' → logprob: -5.069892883300781
    9. '}
' → logprob: -5.194892883300781
    10. '_' → logprob: -5.444892883300781

Token 2455: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6302273273468018
    2. 'la' → logprob: -1.2552273273468018
    3. 'un' → logprob: -2.5052273273468018
    4. 'mot' → logprob: -3.0052273273468018
    5. 'une' → logprob: -4.005227088928223
    6. 'phrase' → logprob: -4.755227088928223
    7. 'ce' → logprob: -5.005227088928223
    8. ' le' → logprob: -5.630227088928223
    9. ' la' → logprob: -5.755227088928223
    10. 'l' → logprob: -6.380227088928223

Token 2456: ' meme' (ID: 54868)
  Prédit: 'phrase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'phrase' → logprob: -0.17768341302871704
    2. 'mot' → logprob: -2.5526833534240723
    3. 'dp' → logprob: -3.4276833534240723
    4. 'concat' → logprob: -3.8026833534240723
    5. 'm' → logprob: -4.927683353424072
    6. 'chaine' → logprob: -5.427683353424072
    7. 'code' → logprob: -5.677683353424072
    8. 'phr' → logprob: -5.927683353424072
    9. ' phrase' → logprob: -5.927683353424072
    10. 'conc' → logprob: -6.177683353424072

Token 2457: ' mot' (ID: 3598)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.012985032051801682
    2. ' mot' → logprob: -4.5129852294921875
    3. '```' → logprob: -7.7629852294921875
    4. 'word' → logprob: -7.7629852294921875
    5. 'm' → logprob: -7.8879852294921875
    6. '
' → logprob: -8.512985229492188
    7. ')' → logprob: -8.637985229492188
    8. 'token' → logprob: -10.012985229492188
    9. ' word' → logprob: -10.137985229492188
    10. ' 
' → logprob: -10.637985229492188

Token 2458: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.296445369720459
    2. ':
' → logprob: -2.171445369720459
    3. ')
' → logprob: -2.421445369720459
    4. '[' → logprob: -2.421445369720459
    5. 'if' → logprob: -2.921445369720459
    6. '```' → logprob: -3.046445369720459
    7. ' if' → logprob: -3.421445369720459
    8. '       ' → logprob: -3.546445369720459
    9. ':' → logprob: -3.671445369720459
    10. 's' → logprob: -3.671445369720459

Token 2459: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23778508603572845
    2. '#' → logprob: -2.6127851009368896
    3. ',' → logprob: -3.3627851009368896
    4. '           ' → logprob: -4.1127848625183105
    5. ':
' → logprob: -4.2377848625183105
    6. ':' → logprob: -4.4877848625183105
    7. '```' → logprob: -4.8627848625183105
    8. ')' → logprob: -4.9877848625183105
    9. ',
' → logprob: -5.3627848625183105
    10. '               ' → logprob: -5.4877848625183105

Token 2460: ' =' (ID: 314)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.9476633071899414
    2. '_next' → logprob: -1.3226633071899414
    3. '_' → logprob: -1.8226633071899414
    4. '=' → logprob: -2.4476633071899414
    5. ' =' → logprob: -3.1976633071899414
    6. '[' → logprob: -4.697663307189941
    7. '_
' → logprob: -5.072663307189941
    8. ')' → logprob: -5.197663307189941
    9. ']' → logprob: -5.447663307189941
    10. '[
' → logprob: -5.572663307189941

Token 2461: ' ' (ID: 220)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.514551043510437
    2. '0' → logprob: -1.889551043510437
    3. '{}' → logprob: -2.0145511627197266
    4. '{' → logprob: -3.1395511627197266
    5. 'None' → logprob: -3.2645511627197266
    6. '{}
' → logprob: -4.514551162719727
    7. 'discard' → logprob: -4.639551162719727
    8. 'skip' → logprob: -6.014551162719727
    9. '[]' → logprob: -6.139551162719727
    10. 'break' → logprob: -6.389551162719727

Token 2462: '0' (ID: 15)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.011115610599517822
    2. '{}' → logprob: -5.011115550994873
    3. '0' → logprob: -6.011115550994873
    4. 'None' → logprob: -7.386115550994873
    5. '{' → logprob: -7.636115550994873
    6. '{}
' → logprob: -7.761115550994873
    7. '[]' → logprob: -8.636116027832031
    8. 'skip' → logprob: -9.511116027832031
    9. 'pass' → logprob: -10.136116027832031
    10. '[]
' → logprob: -10.886116027832031

Token 2463: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05273854359984398
    2. '[
' → logprob: -4.052738666534424
    3. '
' → logprob: -4.677738666534424
    4. '[' → logprob: -4.677738666534424
    5. '   ' → logprob: -5.427738666534424
    6. ')' → logprob: -6.552738666534424
    7. ']' → logprob: -6.802738666534424
    8. ',' → logprob: -6.927738666534424
    9. ')
' → logprob: -7.052738666534424
    10. '           ' → logprob: -7.177738666534424

Token 2464: ' ce' (ID: 2357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8024640679359436
    2. ']' → logprob: -1.8024640083312988
    3. '```' → logprob: -3.427464008331299
    4. '#' → logprob: -3.552464008331299
    5. '_' → logprob: -3.677464008331299
    6. 's' → logprob: -3.677464008331299
    7. 'found' → logprob: -3.677464008331299
    8. 'w' → logprob: -3.802464008331299
    9. 'l' → logprob: -3.927464008331299
    10. '[
' → logprob: -4.177464008331299

Token 2465: ' chemin' (ID: 45035)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0079470872879028
    2. ')' → logprob: -1.3829470872879028
    3. '}' → logprob: -1.3829470872879028
    4. 's' → logprob: -4.132946968078613
    5. '```' → logprob: -4.257946968078613
    6. 'found' → logprob: -4.507946968078613
    7. ')
' → logprob: -4.882946968078613
    8. '}
' → logprob: -5.007946968078613
    9. '`' → logprob: -5.132946968078613
    10. '_' → logprob: -5.132946968078613

Token 2466: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04534825682640076
    2. ']' → logprob: -4.545348167419434
    3. ')' → logprob: -4.670348167419434
    4. ')
' → logprob: -4.920348167419434
    5. '
' → logprob: -5.045348167419434
    6. ']
' → logprob: -6.545348167419434
    7. 'dp' → logprob: -6.545348167419434
    8. '   ' → logprob: -6.795348167419434
    9. '```' → logprob: -6.920348167419434
    10. '[
' → logprob: -7.045348167419434

Token 2467: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.526228666305542
    2. '       ' → logprob: -0.901228666305542
    3. '
' → logprob: -6.401228904724121
    4. '   ' → logprob: -6.901228904724121
    5. '        
' → logprob: -8.401228904724121
    6. '	dp' → logprob: -9.776228904724121
    7. ' dp' → logprob: -9.901228904724121
    8. 'def' → logprob: -10.401228904724121
    9. '```' → logprob: -11.151228904724121
    10. '    
' → logprob: -11.526228904724121

Token 2468: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4331534802913666
    2. '       ' → logprob: -1.058153510093689
    3. '   ' → logprob: -6.0581536293029785
    4. '
' → logprob: -6.3081536293029785
    5. '        
' → logprob: -9.05815315246582
    6. ' dp' → logprob: -10.18315315246582
    7. '	dp' → logprob: -10.18315315246582
    8. '```' → logprob: -10.80815315246582
    9. '#' (adapté à ' #') → logprob: -11.05815315246582
    10. '    
' → logprob: -11.18315315246582

Token 2469: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020093560218811035
    2. 'dp' → logprob: -4.0200934410095215
    3. '
' → logprob: -7.6450934410095215
    4. ' dp' → logprob: -8.52009391784668
    5. '```' → logprob: -8.77009391784668
    6. '   ' → logprob: -8.77009391784668
    7. ']' → logprob: -8.89509391784668
    8. ')' → logprob: -9.14509391784668
    9. '[' → logprob: -9.27009391784668
    10. '#' → logprob: -9.39509391784668

Token 2470: ' season' (ID: 5217)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.40800046920776367
    2. 'season' → logprob: -1.2830004692077637
    3. 'pos' → logprob: -4.033000469207764
    4. 's' → logprob: -4.033000469207764
    5. ' found' → logprob: -4.658000469207764
    6. ' season' → logprob: -5.033000469207764
    7. ' saison' → logprob: -6.283000469207764
    8. 'len' → logprob: -6.408000469207764
    9. 'K' → logprob: -7.158000469207764
    10. '   ' → logprob: -7.533000469207764

Token 2471: 'found' (ID: 26334)
  Prédit: 'found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.42899051308631897
    2. '_found' → logprob: -1.0539904832839966
    3. '_' → logprob: -9.053990364074707
    4. '_f' → logprob: -9.678990364074707
    5. '
' → logprob: -11.053990364074707
    6. 'f' → logprob: -11.178990364074707
    7. '```' → logprob: -11.928990364074707
    8. ' found' → logprob: -12.178990364074707
    9. '	found' → logprob: -12.178990364074707
    10. ')' → logprob: -12.303990364074707

Token 2472: '=s' (ID: 32455)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1699300855398178
    2. '!=' → logprob: -2.6699299812316895
    3. '==' → logprob: -2.7949299812316895
    4. ' !=' → logprob: -4.9199299812316895
    5. ' ==' → logprob: -5.2949299812316895
    6. 's' → logprob: -5.6699299812316895
    7. '[' → logprob: -6.4199299812316895
    8. '==-' → logprob: -6.7949299812316895
    9. ' =' → logprob: -6.9199299812316895
    10. '>=' → logprob: -7.0449299812316895

Token 2473: ' (' (ID: 350)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4903531074523926
    2. '!=' → logprob: -0.9903531074523926
    3. '=' → logprob: -5.490353107452393
    4. '==' → logprob: -5.740353107452393
    5. '>=' → logprob: -5.865353107452393
    6. '_found' → logprob: -6.990353107452393
    7. ' ==' → logprob: -7.115353107452393
    8. 'found' → logprob: -7.490353107452393
    9. 's' → logprob: -7.615353107452393
    10. '!=-' → logprob: -7.740353107452393

Token 2474: 'avec' (ID: 64065)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6014370918273926
    2. ' !=' → logprob: -0.9764370918273926
    3. '>=' → logprob: -3.7264370918273926
    4. '==' → logprob: -3.9764370918273926
    5. 's' → logprob: -4.976437091827393
    6. '!=-' → logprob: -5.226437091827393
    7. ' ==' → logprob: -5.476437091827393
    8. ')' → logprob: -5.601437091827393
    9. '<s' → logprob: -5.726437091827393
    10. ' >=' → logprob: -6.101437091827393

Token 2475: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.021492674946784973
    2. 'found' → logprob: -4.3964924812316895
    3. 'K' → logprob: -5.7714924812316895
    4. ' s' → logprob: -6.5214924812316895
    5. '0' → logprob: -6.6464924812316895
    6. '#' → logprob: -7.3964924812316895
    7. ')' → logprob: -8.021492958068848
    8. ' found' → logprob: -8.021492958068848
    9. '1' → logprob: -8.146492958068848
    10. '
' → logprob: -8.521492958068848

Token 2476: '>' (ID: 29)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6341952085494995
    2. ' !=' → logprob: -0.8841952085494995
    3. '>=' → logprob: -3.759195327758789
    4. ' <' → logprob: -5.134195327758789
    5. ' >=' → logprob: -5.634195327758789
    6. '==' → logprob: -5.759195327758789
    7. '!=-' → logprob: -5.884195327758789
    8. ')' → logprob: -6.134195327758789
    9. '=' → logprob: -6.384195327758789
    10. '<=' → logprob: -6.384195327758789

Token 2477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029470553272403777
    2. '=' → logprob: -8.50029468536377
    3. ' ' → logprob: -9.87529468536377
    4. 'K' → logprob: -10.62529468536377
    5. '1' → logprob: -12.37529468536377
    6. '```' → logprob: -12.87529468536377
    7. '>' → logprob: -13.12529468536377
    8. ' =' → logprob: -13.75029468536377
    9. '#' → logprob: -13.87529468536377
    10. '   ' → logprob: -14.00029468536377

Token 2478: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5493105053901672
    2. ')' → logprob: -1.4243104457855225
    3. '),' → logprob: -2.7993104457855225
    4. '):' → logprob: -2.9243104457855225
    5. ':
' → logprob: -3.7993104457855225
    6. ':' → logprob: -4.424310684204102
    7. ' and' → logprob: -4.549310684204102
    8. 'and' → logprob: -5.174310684204102
    9. ',' → logprob: -5.799310684204102
    10. '=' → logprob: -5.924310684204102

Token 2479: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9335882067680359
    2. ':
' → logprob: -1.5585882663726807
    3. ':' → logprob: -1.9335882663726807
    4. '           ' → logprob: -2.9335882663726807
    5. '               ' → logprob: -2.9335882663726807
    6. 'and' → logprob: -3.4335882663726807
    7. '       ' → logprob: -4.183588027954102
    8. ',' → logprob: -4.183588027954102
    9. '                   ' → logprob: -4.433588027954102
    10. ')' → logprob: -4.433588027954102

Token 2480: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.18512991070747375
    2. 'se' → logprob: -2.4351298809051514
    3. 'len' → logprob: -3.3101298809051514
    4. 's' → logprob: -4.5601301193237305
    5. '(se' → logprob: -4.8101301193237305
    6. ' found' → logprob: -5.1851301193237305
    7. '(found' → logprob: -5.1851301193237305
    8. 'trans' → logprob: -5.3101301193237305
    9. '(s' → logprob: -6.3101301193237305
    10. 'season' → logprob: -6.8101301193237305

Token 2481: '={' (ID: 1693)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5226833820343018
    2. '=' → logprob: -1.2726833820343018
    3. ' ==' → logprob: -2.5226833820343018
    4. 's' → logprob: -3.8976833820343018
    5. '[s' → logprob: -4.522683143615723
    6. '={' → logprob: -5.897683143615723
    7. ' =' → logprob: -6.022683143615723
    8. '[' → logprob: -6.147683143615723
    9. '=s' → logprob: -6.147683143615723
    10. ')' → logprob: -7.272683143615723

Token 2482: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.763666947837919e-05
    2. '0' → logprob: -11.50004768371582
    3. 'next' → logprob: -11.50004768371582
    4. '...' → logprob: -11.62504768371582
    5. 'list' → logprob: -11.87504768371582
    6. 'season' → logprob: -12.12504768371582
    7. '{s' → logprob: -13.50004768371582
    8. '
' → logprob: -14.12504768371582
    9. '#' → logprob: -14.12504768371582
    10. ')' → logprob: -14.37504768371582

Token 2483: ''},' (ID: 59350)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.17550352215766907
    2. '},' → logprob: -2.0505034923553467
    3. '}:' → logprob: -3.5505034923553467
    4. '}
' → logprob: -6.425503730773926
    5. '}>' → logprob: -7.425503730773926
    6. '[' → logprob: -8.050503730773926
    7. '           ' → logprob: -8.675503730773926
    8. '}=' → logprob: -9.050503730773926
    9. '},
' → logprob: -9.175503730773926
    10. '       ' → logprob: -9.675503730773926

Token 2484: ' alors' (ID: 17971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24530066549777985
    2. ' if' → logprob: -2.245300769805908
    3. 's' → logprob: -3.370300769805908
    4. ' and' → logprob: -4.120300769805908
    5. 'and' → logprob: -4.245300769805908
    6. '           ' → logprob: -4.745300769805908
    7. '#' → logprob: -4.745300769805908
    8. '                           ' → logprob: -4.870300769805908
    9. ' s' → logprob: -4.995300769805908
    10. '                               ' → logprob: -5.495300769805908

Token 2485: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21190330386161804
    2. 's' → logprob: -2.2119033336639404
    3. 'found' → logprob: -3.4619033336639404
    4. '#' → logprob: -3.5869033336639404
    5. '           ' → logprob: -4.711903095245361
    6. '(found' → logprob: -5.336903095245361
    7. ' if' → logprob: -6.086903095245361
    8. '
' → logprob: -7.211903095245361
    9. '               ' → logprob: -7.211903095245361
    10. '```' → logprob: -7.211903095245361

Token 2486: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00027099132421426475
    2. ' s' → logprob: -8.25027084350586
    3. 'season' → logprob: -12.12527084350586
    4. 'found' → logprob: -14.25027084350586
    5. '```' → logprob: -14.25027084350586
    6. '   ' → logprob: -14.37527084350586
    7. '(s' → logprob: -14.62527084350586
    8. '
' → logprob: -15.50027084350586
    9. '           ' → logprob: -15.62527084350586
    10. '`s' → logprob: -15.75027084350586

Token 2487: ''' (ID: 6)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4501485228538513
    2. ' ==' → logprob: -1.825148582458496
    3. ' !=' → logprob: -2.200148582458496
    4. '!=' → logprob: -2.575148582458496
    5. ''' → logprob: -4.575148582458496
    6. '=' → logprob: -6.575148582458496
    7. ']==' → logprob: -7.825148582458496
    8. '']==' → logprob: -8.450148582458496
    9. 's' → logprob: -8.575148582458496
    10. '_' → logprob: -8.575148582458496

Token 2488: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2381659299135208
    2. '!=' → logprob: -1.7381659746170044
    3. ''' → logprob: -4.113165855407715
    4. ' ==' → logprob: -4.738165855407715
    5. ' !=' → logprob: -4.738165855407715
    6. '[' → logprob: -6.613165855407715
    7. 's' → logprob: -8.238165855407715
    8. '[s' → logprob: -9.363165855407715
    9. '```' → logprob: -9.613165855407715
    10. ''''' → logprob: -9.738165855407715

Token 2489: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.941850526549388e-06
    2. ' s' → logprob: -12.625007629394531
    3. 'season' → logprob: -13.125007629394531
    4. 'found' → logprob: -13.375007629394531
    5. '0' → logprob: -14.375007629394531
    6. '
' → logprob: -15.875007629394531
    7. '```' → logprob: -16.62500762939453
    8. '(s' → logprob: -17.12500762939453
    9. '{s' → logprob: -17.37500762939453
    10. '`s' → logprob: -17.62500762939453

Token 2490: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.641950786113739
    2. ':
' → logprob: -1.0169508457183838
    3. ' or' → logprob: -3.391950845718384
    4. '           ' → logprob: -3.766950845718384
    5. '                       ' → logprob: -4.266950607299805
    6. '               ' → logprob: -4.766950607299805
    7. ',' → logprob: -4.891950607299805
    8. '':' → logprob: -5.391950607299805
    9. '                           ' → logprob: -5.516950607299805
    10. '                   ' → logprob: -6.141950607299805

Token 2491: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9300603270530701
    2. 'continue' → logprob: -1.9300603866577148
    3. 's' → logprob: -2.680060386657715
    4. '```' → logprob: -2.930060386657715
    5. ' #' → logprob: -3.055060386657715
    6. '           ' → logprob: -3.180060386657715
    7. '               ' → logprob: -3.555060386657715
    8. ' s' → logprob: -3.680060386657715
    9. ' ' → logprob: -4.180060386657715
    10. '                   ' → logprob: -4.305060386657715

Token 2492: ' s' (ID: 265)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37659192085266113
    2. '==' → logprob: -1.5015919208526611
    3. '#' → logprob: -3.751591920852661
    4. ''' → logprob: -3.876591920852661
    5. 'continue' → logprob: -4.251591682434082
    6. ''s' → logprob: -4.876591682434082
    7. '           ' → logprob: -5.126591682434082
    8. 's' → logprob: -5.376591682434082
    9. '=
' → logprob: -6.126591682434082
    10. ''=' → logprob: -6.626591682434082

Token 2493: ''agit' (ID: 72975)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5397478938102722
    2. 'e' → logprob: -1.664747953414917
    3. ''' → logprob: -2.664747953414917
    4. ''e' → logprob: -3.164747953414917
    5. ''agit' → logprob: -3.414747953414917
    6. ''est' → logprob: -3.914747953414917
    7. ''''' → logprob: -4.289747714996338
    8. '=='' → logprob: -4.539747714996338
    9. '=' → logprob: -4.664747714996338
    10. '```' → logprob: -5.164747714996338

Token 2494: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6415743827819824
    2. ' d' → logprob: -2.0165743827819824
    3. '=' → logprob: -2.7665743827819824
    4. '                   ' → logprob: -2.7665743827819824
    5. '==' → logprob: -2.8915743827819824
    6. '```' → logprob: -3.2665743827819824
    7. 'de' → logprob: -3.5165743827819824
    8. ' of' → logprob: -4.016574382781982
    9. '                       ' → logprob: -4.266574382781982
    10. ' de' → logprob: -4.516574382781982

Token 2495: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.021937111392617226
    2. ''un' → logprob: -5.021936893463135
    3. ''une' → logprob: -5.146936893463135
    4. 'a' → logprob: -5.646936893463135
    5. 'u' → logprob: -6.896936893463135
    6. ''e' → logprob: -6.896936893463135
    7. '{'' → logprob: -7.271936893463135
    8. '=' → logprob: -8.021937370300293
    9. ''' → logprob: -8.396937370300293
    10. ''appar' → logprob: -8.396937370300293

Token 2496: ' deuxième' (ID: 51664)
  Prédit: 'continu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continu' → logprob: -0.956605851650238
    2. 'se' → logprob: -2.081605911254883
    3. 'occ' → logprob: -2.081605911254883
    4. 'repeat' → logprob: -3.081605911254883
    5. 're' → logprob: -3.581605911254883
    6. 'occur' → logprob: -3.581605911254883
    7. '```' → logprob: -3.706605911254883
    8. 'single' → logprob: -3.956605911254883
    9. 'oc' → logprob: -4.081605911254883
    10. 'm' → logprob: -4.456605911254883

Token 2497: ' apparition' (ID: 199609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2655775249004364
    2. '_occ' → logprob: -1.7655775547027588
    3. 'occ' → logprob: -4.01557731628418
    4. '_oc' → logprob: -4.76557731628418
    5. 'occur' → logprob: -4.89057731628418
    6. '```' → logprob: -5.14057731628418
    7. '_found' → logprob: -5.51557731628418
    8. '_
' → logprob: -5.76557731628418
    9. ')' → logprob: -5.89057731628418
    10. 's' → logprob: -6.14057731628418

Token 2498: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9806749820709229
    2. '           ' → logprob: -1.2306749820709229
    3. ':' → logprob: -2.855674982070923
    4. '=' → logprob: -3.230674982070923
    5. '               ' → logprob: -3.230674982070923
    6. '```' → logprob: -3.355674982070923
    7. '                       ' → logprob: -4.105674743652344
    8. ' =' → logprob: -4.230674743652344
    9. ':
' → logprob: -4.230674743652344
    10. ',' → logprob: -4.355674743652344

Token 2499: ' invalid' (ID: 15796)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0196300745010376
    2. 'season' → logprob: -1.5196300745010376
    3. '0' → logprob: -2.019629955291748
    4. ' season' → logprob: -2.144629955291748
    5. 's' → logprob: -3.144629955291748
    6. 'continue' → logprob: -4.019629955291748
    7. 'dp' → logprob: -4.144629955291748
    8. '#' → logprob: -4.269629955291748
    9. 'break' → logprob: -4.519629955291748
    10. ' s' → logprob: -4.519629955291748

Token 2500: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07725547254085541
    2. ']' → logprob: -4.3272552490234375
    3. '
' → logprob: -4.3272552490234375
    4. '   ' → logprob: -5.4522552490234375
    5. '```' → logprob: -5.4522552490234375
    6. '[
' → logprob: -5.5772552490234375
    7. '[' → logprob: -5.7022552490234375
    8. '           ' → logprob: -5.8272552490234375
    9. ' =' → logprob: -5.9522552490234375
    10. ':
' → logprob: -5.9522552490234375

Token 2501: ' pou' (ID: 5241)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20096197724342346
    2. 'continue' → logprob: -2.8259620666503906
    3. '0' → logprob: -3.3259620666503906
    4. ' -' → logprob: -3.8259620666503906
    5. ' continue' → logprob: -3.9509620666503906
    6. 'season' → logprob: -4.325962066650391
    7. 's' → logprob: -4.575962066650391
    8. ' season' → logprob: -4.575962066650391
    9. ' s' → logprob: -5.825962066650391
    10. ' ' → logprob: -6.075962066650391

Token 2502: 'b' (ID: 65)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.22723519802093506
    2. 't' → logprob: -2.3522353172302246
    3. 'sh' → logprob: -4.227235317230225
    4. 'rst' → logprob: -4.227235317230225
    5. 'st' → logprob: -4.352235317230225
    6. 's' → logprob: -4.477235317230225
    7. 'nt' → logprob: -4.602235317230225
    8. 'rch' → logprob: -4.602235317230225
    9. 'mp' → logprob: -5.227235317230225
    10. 'n' → logprob: -5.727235317230225

Token 2503: 'elle' (ID: 3486)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007653011474758387
    2. 't' → logprob: -6.25765323638916
    3. 're' → logprob: -6.88265323638916
    4. 'rk' → logprob: -7.13265323638916
    5. 'll' → logprob: -7.38265323638916
    6. 'l' → logprob: -7.38265323638916
    7. '```' → logprob: -8.00765323638916
    8. 'lle' → logprob: -8.50765323638916
    9. 'rée' → logprob: -8.75765323638916
    10. 'e' → logprob: -8.75765323638916

Token 2504: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006209139246493578
    2. '
' → logprob: -6.381209373474121
    3. ']' → logprob: -7.006209373474121
    4. '   ' → logprob: -7.881209373474121
    5. '           ' → logprob: -7.881209373474121
    6. '```' → logprob: -7.881209373474121
    7. '[' → logprob: -8.006209373474121
    8. 'def' → logprob: -8.381209373474121
    9. 'for' → logprob: -8.381209373474121
    10. 'dp' → logprob: -8.506209373474121

Token 2505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09586638957262039
    2. '
' → logprob: -2.7208664417266846
    3. '           ' → logprob: -5.3458662033081055
    4. '        
' → logprob: -5.9708662033081055
    5. '               ' → logprob: -5.9708662033081055
    6. ']' → logprob: -6.2208662033081055
    7. '[' → logprob: -6.4708662033081055
    8. '                   ' → logprob: -6.4708662033081055
    9. '[
' → logprob: -6.5958662033081055
    10. '   ' → logprob: -7.2208662033081055

Token 2506: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020090525969862938
    2. 'dp' → logprob: -4.020090579986572
    3. '
' → logprob: -6.395090579986572
    4. '```' → logprob: -9.895090103149414
    5. '        
' → logprob: -10.020090103149414
    6. '	' → logprob: -10.145090103149414
    7. 'import' → logprob: -10.270090103149414
    8. '   ' → logprob: -10.520090103149414
    9. 'from' → logprob: -10.770090103149414
    10. '	dp' → logprob: -11.145090103149414

Token 2507: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027277747169137
    2. ']' → logprob: -5.402277946472168
    3. '           ' → logprob: -5.777277946472168
    4. '[
' → logprob: -5.777277946472168
    5. '               ' → logprob: -6.027277946472168
    6. '
' → logprob: -6.152277946472168
    7. '[' → logprob: -6.277277946472168
    8. '\' → logprob: -6.652277946472168
    9. '   ' → logprob: -7.152277946472168
    10. '                   ' → logprob: -7.277277946472168

Token 2508: ' s' (ID: 265)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.06826411187648773
    2. ' season' → logprob: -2.8182640075683594
    3. 's' → logprob: -5.443264007568359
    4. 'found' → logprob: -6.943264007568359
    5. ' s' → logprob: -7.193264007568359
    6. ' found' → logprob: -8.81826400756836
    7. ' saison' → logprob: -10.94326400756836
    8. '   ' → logprob: -11.19326400756836
    9. ' ' → logprob: -11.19326400756836
    10. '#' → logprob: -12.19326400756836

Token 2509: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03628583252429962
    2. 's' → logprob: -4.536285877227783
    3. '==' → logprob: -4.661285877227783
    4. ''>' → logprob: -5.911285877227783
    5. '!=' → logprob: -5.911285877227783
    6. ' !=' → logprob: -6.036285877227783
    7. ''=' → logprob: -6.036285877227783
    8. ' ==' → logprob: -6.536285877227783
    9. ''<' → logprob: -7.536285877227783
    10. ''s' → logprob: -7.661285877227783

Token 2510: ' !=' (ID: 1666)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1442947387695312
    2. ' ==' → logprob: -1.1442947387695312
    3. '==' → logprob: -1.1442947387695312
    4. 's' → logprob: -3.7692947387695312
    5. '=' → logprob: -4.894294738769531
    6. '[' → logprob: -5.769294738769531
    7. ' s' → logprob: -5.769294738769531
    8. ''''' → logprob: -6.519294738769531
    9. ' !=' → logprob: -6.769294738769531
    10. ''s' → logprob: -7.144294738769531

Token 2511: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007123930845409632
    2. '-' → logprob: -5.132123947143555
    3. '0' → logprob: -7.132123947143555
    4. '-s' → logprob: -8.757123947143555
    5. 'season' → logprob: -9.007123947143555
    6. ' s' → logprob: -9.632123947143555
    7. 'None' → logprob: -11.882123947143555
    8. '(s' → logprob: -12.132123947143555
    9. '```' → logprob: -12.132123947143555
    10. ' -' → logprob: -12.257123947143555

Token 2512: ' :' (ID: 712)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0371198654174805
    2. '=' → logprob: -1.5371198654174805
    3. ':' → logprob: -2.0371198654174805
    4. ' and' → logprob: -2.1621198654174805
    5. ' or' → logprob: -3.0371198654174805
    6. '           ' → logprob: -3.6621198654174805
    7. 'and' → logprob: -3.9121198654174805
    8. ''' → logprob: -4.0371198654174805
    9. '==' → logprob: -4.1621198654174805
    10. ',' → logprob: -4.1621198654174805

Token 2513: ' on' (ID: 402)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4957564175128937
    2. '0' → logprob: -1.7457563877105713
    3. ' -' → logprob: -1.9957563877105713
    4. ' s' → logprob: -3.4957563877105713
    5. ' ' → logprob: -4.24575662612915
    6. ' #' → logprob: -4.37075662612915
    7. '#' → logprob: -4.49575662612915
    8. 's' → logprob: -5.24575662612915
    9. '           ' → logprob: -6.37075662612915
    10. '   ' → logprob: -7.24575662612915

Token 2514: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36435651779174805
    2. 'continue' → logprob: -1.864356517791748
    3. ' continue' → logprob: -3.239356517791748
    4. '#' → logprob: -3.239356517791748
    5. 'return' → logprob: -3.364356517791748
    6. ' =' → logprob: -4.364356517791748
    7. 'break' → logprob: -4.489356517791748
    8. ' return' → logprob: -6.239356517791748
    9. '=
' → logprob: -6.364356517791748
    10. '_continue' → logprob: -6.489356517791748

Token 2515: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2727127075195312
    2. 'invalid' → logprob: -1.5227127075195312
    3. '-' → logprob: -2.2727127075195312
    4. ' invalid' → logprob: -2.5227127075195312
    5. '2' → logprob: -3.5227127075195312
    6. 'p' → logprob: -3.6477127075195312
    7. ' -' → logprob: -3.7727127075195312
    8. 'continue' → logprob: -4.022712707519531
    9. ' ' → logprob: -4.147712707519531
    10. '#' → logprob: -4.147712707519531

Token 2516: ' deuxième' (ID: 51664)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.4996554851531982
    2. '=' → logprob: -1.6246554851531982
    3. ' return' → logprob: -1.8746554851531982
    4. '#' → logprob: -1.9996554851531982
    5. 's' → logprob: -3.4996554851531982
    6. ' #' → logprob: -3.4996554851531982
    7. 'continue' → logprob: -3.6246554851531982
    8. '```' → logprob: -3.6246554851531982
    9. 'break' → logprob: -3.6246554851531982
    10. ' =' → logprob: -3.7496554851531982

Token 2517: ' saison' (ID: 38158)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6776993870735168
    2. 's' → logprob: -1.427699327468872
    3. '_found' → logprob: -3.052699327468872
    4. '=' → logprob: -3.302699327468872
    5. ' _' → logprob: -3.802699327468872
    6. '_s' → logprob: -3.802699327468872
    7. 'found' → logprob: -4.052699565887451
    8. ')' → logprob: -4.177699565887451
    9. '```' → logprob: -4.802699565887451
    10. '#' → logprob: -4.927699565887451

Token 2518: 'word' (ID: 1801)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.5964077711105347
    2. '_' → logprob: -1.7214077711105347
    3. 'found' → logprob: -2.971407890319824
    4. ')' → logprob: -3.096407890319824
    5. '=' → logprob: -3.721407890319824
    6. ']' → logprob: -3.971407890319824
    7. '       ' → logprob: -4.221407890319824
    8. ' _' → logprob: -4.471407890319824
    9. '   ' → logprob: -4.471407890319824
    10. '           ' → logprob: -4.596407890319824

Token 2519: ' différent' (ID: 114823)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2231513112783432
    2. ']' → logprob: -3.223151206970215
    3. '           ' → logprob: -3.598151206970215
    4. '               ' → logprob: -3.723151206970215
    5. ']
' → logprob: -3.848151206970215
    6. '][' → logprob: -3.973151206970215
    7. '   ' → logprob: -4.598151206970215
    8. '[' → logprob: -4.598151206970215
    9. '                   ' → logprob: -4.973151206970215
    10. '
' → logprob: -5.473151206970215

Token 2520: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07117128372192383
    2. ']' → logprob: -3.821171283721924
    3. '][' → logprob: -4.071171283721924
    4. '
' → logprob: -5.571171283721924
    5. ']
' → logprob: -5.696171283721924
    6. '[
' → logprob: -5.946171283721924
    7. '   ' → logprob: -6.071171283721924
    8. '           ' → logprob: -6.196171283721924
    9. '[' → logprob: -6.321171283721924
    10. '```' → logprob: -6.446171283721924

Token 2521: ' on' (ID: 402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5532347559928894
    2. '#' → logprob: -2.428234815597534
    3. ' s' → logprob: -2.553234815597534
    4. 'plus' → logprob: -2.803234815597534
    5. ' plus' → logprob: -3.678234815597534
    6. 'multiple' → logprob: -3.928234815597534
    7. 'une' → logprob: -4.178234577178955
    8. '
' → logprob: -4.178234577178955
    9. 'found' → logprob: -4.303234577178955
    10. ' multiple' → logprob: -4.553234577178955

Token 2522: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2285432368516922
    2. 'a' → logprob: -1.9785432815551758
    3. 's' → logprob: -4.478543281555176
    4. 'n't' → logprob: -4.603543281555176
    5. 'ne' → logprob: -4.603543281555176
    6. ' n' → logprob: -5.853543281555176
    7. ''ve' → logprob: -5.853543281555176
    8. 'pas' → logprob: -5.978543281555176
    9. ''ai' → logprob: -5.978543281555176
    10. 'do' → logprob: -6.603543281555176

Token 2523: ' déjà' (ID: 21229)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.44971221685409546
    2. 'de' → logprob: -2.1997122764587402
    3. ' plus' → logprob: -2.1997122764587402
    4. 'une' → logprob: -3.0747122764587402
    5. 's' → logprob: -3.8247122764587402
    6. 'un' → logprob: -3.9497122764587402
    7. 'multip' → logprob: -4.44971227645874
    8. '{
' → logprob: -5.44971227645874
    9. 'pas' → logprob: -5.57471227645874
    10. '2' → logprob: -5.94971227645874

Token 2524: ' rencontré' (ID: 141085)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0692189931869507
    2. ' trouvé' → logprob: -1.4442189931869507
    3. ' s' → logprob: -2.0692191123962402
    4. ' rencontré' → logprob: -2.6942191123962402
    5. 'found' → logprob: -3.0692191123962402
    6. 'plus' → logprob: -3.1942191123962402
    7. 'de' → logprob: -3.8192191123962402
    8. 'dé' → logprob: -3.9442191123962402
    9. 'ren' → logprob: -4.06921911239624
    10. 'tr' → logprob: -4.44421911239624

Token 2525: ' un' (ID: 537)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13628023862838745
    2. 'un' → logprob: -2.5112802982330322
    3. 'une' → logprob: -4.761280059814453
    4. ''un' → logprob: -4.761280059814453
    5. 'de' → logprob: -5.136280059814453
    6. '_' → logprob: -5.761280059814453
    7. '=' → logprob: -5.886280059814453
    8. 'le' → logprob: -6.136280059814453
    9. '```' → logprob: -6.136280059814453
    10. ' s' → logprob: -6.261280059814453

Token 2526: ' saison' (ID: 38158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7040045261383057
    2. '=' → logprob: -1.2040045261383057
    3. 'season' → logprob: -3.0790045261383057
    4. '_' → logprob: -3.8290045261383057
    5. '
' → logprob: -4.204004287719727
    6. ' =' → logprob: -4.454004287719727
    7. '{
' → logprob: -4.454004287719727
    8. ' s' → logprob: -4.829004287719727
    9. '{' → logprob: -5.204004287719727
    10. '#' → logprob: -5.329004287719727

Token 2527: 'word' (ID: 1801)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8564865589141846
    2. '_found' → logprob: -1.3564865589141846
    3. ' _' → logprob: -2.3564865589141846
    4. ')' → logprob: -3.2314865589141846
    5. 'word' → logprob: -3.4814865589141846
    6. '_word' → logprob: -3.6064865589141846
    7. '```' → logprob: -3.7314865589141846
    8. 'found' → logprob: -4.2314863204956055
    9. ')
' → logprob: -4.3564863204956055
    10. '=' → logprob: -4.7314863204956055

Token 2528: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03735877200961113
    2. ']' → logprob: -4.41235876083374
    3. '][' → logprob: -5.91235876083374
    4. '```' → logprob: -5.91235876083374
    5. '   ' → logprob: -6.03735876083374
    6. '           ' → logprob: -6.28735876083374
    7. ' =' → logprob: -6.28735876083374
    8. '
' → logprob: -6.41235876083374
    9. '[' → logprob: -6.53735876083374
    10. '=' → logprob: -6.53735876083374

Token 2529: ' on' (ID: 402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24098752439022064
    2. 'found' → logprob: -2.615987539291382
    3. ' s' → logprob: -3.240987539291382
    4. 'len' → logprob: -3.865987539291382
    5. 'continu' → logprob: -4.615987300872803
    6. ' trouvé' → logprob: -4.990987300872803
    7. 'c' → logprob: -5.115987300872803
    8. '#' → logprob: -5.365987300872803
    9. '
' → logprob: -5.365987300872803
    10. ' found' → logprob: -5.490987300872803

Token 2530: ' en' (ID: 469)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7953658699989319
    2. 'ne' → logprob: -1.670365810394287
    3. 'do' → logprob: -2.420365810394287
    4. 'n' → logprob: -2.920365810394287
    5. ' continue' → logprob: -3.545365810394287
    6. 'veux' → logprob: -3.670365810394287
    7. 's' → logprob: -3.670365810394287
    8. '```' → logprob: -4.170365810394287
    9. ' ne' → logprob: -4.420365810394287
    10. '#' → logprob: -4.545365810394287

Token 2531: ' retrouve' (ID: 70617)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9015988111495972
    2. '```' → logprob: -2.0265989303588867
    3. 'ren' → logprob: -2.4015989303588867
    4. 'tr' → logprob: -2.4015989303588867
    5. 'a' → logprob: -2.6515989303588867
    6. 'cont' → logprob: -3.4015989303588867
    7. 's' → logprob: -4.151598930358887
    8. 'aj' → logprob: -4.151598930358887
    9. 'v' → logprob: -4.401598930358887
    10. 'vient' → logprob: -4.526598930358887

Token 2532: ' un' (ID: 537)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.7905628085136414
    2. ''' → logprob: -2.290562868118286
    3. 's' → logprob: -2.290562868118286
    4. 't' → logprob: -3.040562868118286
    5. '=' → logprob: -3.290562868118286
    6. 'un' → logprob: -3.415562868118286
    7. ''une' → logprob: -3.540562868118286
    8. 'une' → logprob: -3.790562868118286
    9. ''autre' → logprob: -4.040562629699707
    10. 'd' → logprob: -4.165562629699707

Token 2533: ' autre' (ID: 20278)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04213862121105194
    2. ']' → logprob: -4.667138576507568
    3. '
' → logprob: -4.792138576507568
    4. '   ' → logprob: -5.667138576507568
    5. ' =' → logprob: -5.792138576507568
    6. ']
' → logprob: -6.167138576507568
    7. '=' → logprob: -6.417138576507568
    8. '][' → logprob: -6.667138576507568
    9. '```' → logprob: -6.667138576507568
    10. ')' → logprob: -6.917138576507568

Token 2534: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03067551739513874
    2. '           ' → logprob: -5.030675411224365
    3. '               ' → logprob: -5.655675411224365
    4. ':' → logprob: -5.780675411224365
    5. ':
' → logprob: -5.905675411224365
    6. '[' → logprob: -6.030675411224365
    7. '[
' → logprob: -6.155675411224365
    8. ',' → logprob: -6.530675411224365
    9. '
' → logprob: -6.905675411224365
    10. ')' → logprob: -7.405675411224365

Token 2535: ' invalid' (ID: 15796)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01651252619922161
    2. '0' → logprob: -4.516512393951416
    3. ' -' → logprob: -6.641512393951416
    4. '=' → logprob: -7.266512393951416
    5. ' season' → logprob: -7.266512393951416
    6. 'season' → logprob: -7.266512393951416
    7. ' ' → logprob: -7.391512393951416
    8. 'p' → logprob: -7.766512393951416
    9. '-p' → logprob: -7.766512393951416
    10. 's' → logprob: -9.016512870788574

Token 2536: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03669052571058273
    2. '_current' → logprob: -4.911690711975098
    3. '```' → logprob: -5.161690711975098
    4. ']' → logprob: -5.786690711975098
    5. '
' → logprob: -5.786690711975098
    6. '   ' → logprob: -6.036690711975098
    7. '[
' → logprob: -6.161690711975098
    8. '\' → logprob: -6.786690711975098
    9. '[' → logprob: -6.911690711975098
    10. '=' → logprob: -7.161690711975098

Token 2537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06462489813566208
    2. '
' → logprob: -2.939624786376953
    3. '        
' → logprob: -6.189624786376953
    4. '   ' → logprob: -6.689624786376953
    5. '```' → logprob: -7.064624786376953
    6. '	' → logprob: -7.189624786376953
    7. '\' → logprob: -7.314624786376953
    8. '[
' → logprob: -7.564624786376953
    9. '           ' → logprob: -7.689624786376953
    10. '[' → logprob: -7.689624786376953

Token 2538: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16121353209018707
    2. 'dp' → logprob: -2.1612136363983154
    3. '
' → logprob: -4.161213397979736
    4. '   ' → logprob: -5.161213397979736
    5. '[
' → logprob: -5.661213397979736
    6. 'for' → logprob: -6.536213397979736
    7. '\' → logprob: -6.661213397979736
    8. '[' → logprob: -6.786213397979736
    9. '```' → logprob: -7.286213397979736
    10. ' dp' → logprob: -7.411213397979736

Token 2539: ' si' (ID: 1784)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4775715172290802
    2. '       ' → logprob: -0.9775714874267578
    3. '
' → logprob: -6.227571487426758
    4. '   ' → logprob: -7.852571487426758
    5. '```' → logprob: -7.852571487426758
    6. 'from' → logprob: -8.227571487426758
    7. ' dp' → logprob: -9.102571487426758
    8. 'for' → logprob: -9.477571487426758
    9. '        
' → logprob: -9.602571487426758
    10. 'pos' → logprob: -10.227571487426758

Token 2540: ' found' (ID: 2491)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.2895658612251282
    2. ' season' → logprob: -1.5395658016204834
    3. 's' → logprob: -4.0395660400390625
    4. 'found' → logprob: -4.9145660400390625
    5. ' s' → logprob: -4.9145660400390625
    6. ' found' → logprob: -5.6645660400390625
    7. ' saison' → logprob: -6.9145660400390625
    8. ' ' → logprob: -10.539566040039062
    9. ' ' → logprob: -10.664566040039062
    10. 'len' → logprob: -10.914566040039062

Token 2541: ' vide' (ID: 21835)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1845272034406662
    2. '=' → logprob: -2.4345271587371826
    3. ' ==' → logprob: -2.8095271587371826
    4. ' =' → logprob: -5.309527397155762
    5. ':
' → logprob: -5.434527397155762
    6. '!=' → logprob: -5.684527397155762
    7. 's' → logprob: -5.934527397155762
    8. ':' → logprob: -6.559527397155762
    9. ' !=' → logprob: -6.809527397155762
    10. '={' → logprob: -7.309527397155762

Token 2542: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14994417130947113
    2. ':
' → logprob: -2.1499440670013428
    3. '=' → logprob: -4.024944305419922
    4. '==' → logprob: -7.024944305419922
    5. ',' → logprob: -7.649944305419922
    6. 'else' → logprob: -7.899944305419922
    7. 'empty' → logprob: -8.024944305419922
    8. ' or' → logprob: -8.149944305419922
    9. ' and' → logprob: -8.274944305419922
    10. '       ' → logprob: -8.524944305419922

Token 2543: ' season' (ID: 5217)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.04773988574743271
    2. '0' → logprob: -3.5477399826049805
    3. ' season' → logprob: -5.5477399826049805
    4. 'new' → logprob: -5.6727399826049805
    5. 's' → logprob: -6.0477399826049805
    6. 'continue' → logprob: -6.1727399826049805
    7. ' saison' → logprob: -6.9227399826049805
    8. '   ' → logprob: -7.4227399826049805
    9. 'contin' → logprob: -7.4227399826049805
    10. 'on' → logprob: -7.5477399826049805

Token 2544: 'found' (ID: 26334)
  Prédit: 'found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.42880114912986755
    2. '_found' → logprob: -1.05380117893219
    3. '_' → logprob: -9.553801536560059
    4. 'Found' → logprob: -11.928801536560059
    5. ' found' → logprob: -12.053801536560059
    6. '	found' → logprob: -12.178801536560059
    7. '_f' → logprob: -13.053801536560059
    8. '_FOUND' → logprob: -13.428801536560059
    9. '```' → logprob: -13.428801536560059
    10. '(found' → logprob: -13.553801536560059

Token 2545: ' ne' (ID: 453)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43407097458839417
    2. '=' → logprob: -1.0590709447860718
    3. 's' → logprob: -6.684071063995361
    4. '0' → logprob: -7.309071063995361
    5. 'found' → logprob: -7.434071063995361
    6. '==' → logprob: -7.934071063995361
    7. '```' → logprob: -8.059070587158203
    8. ',' → logprob: -8.434070587158203
    9. '_found' → logprob: -8.434070587158203
    10. ')' → logprob: -8.559070587158203

Token 2546: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.0032360595650970936
    2. ' change' → logprob: -6.253236293792725
    3. '_change' → logprob: -7.128236293792725
    4. '=' → logprob: -8.003235816955566
    5. 'chang' → logprob: -10.128235816955566
    6. 'ch' → logprob: -10.253235816955566
    7. ' =' → logprob: -10.878235816955566
    8. 'changed' → logprob: -11.003235816955566
    9. 'changes' → logprob: -11.128235816955566
    10. 'changer' → logprob: -11.378235816955566

Token 2547: ' pas' (ID: 2173)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07131693512201309
    2. 'dp' → logprob: -2.696316957473755
    3. '
' → logprob: -8.071316719055176
    4. '   ' → logprob: -8.321316719055176
    5. '        
' → logprob: -8.696316719055176
    6. '```' → logprob: -9.446316719055176
    7. ' dp' → logprob: -9.446316719055176
    8. '#' → logprob: -9.946316719055176
    9. '           ' → logprob: -10.321316719055176
    10. '{
' → logprob: -10.321316719055176

Token 2548: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07413693517446518
    2. 'dp' → logprob: -3.074136972427368
    3. ' =' → logprob: -5.449136734008789
    4. '_dp' → logprob: -5.574136734008789
    5. '=' → logprob: -5.699136734008789
    6. ']' → logprob: -6.074136734008789
    7. '_current' → logprob: -6.074136734008789
    8. '   ' → logprob: -6.324136734008789
    9. '
' → logprob: -6.699136734008789
    10. ')' → logprob: -6.949136734008789

Token 2549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3415925204753876
    2. 'dp' → logprob: -1.34159255027771
    3. '
' → logprob: -3.96659255027771
    4. '   ' → logprob: -5.216592311859131
    5. '```' → logprob: -6.216592311859131
    6. '        
' → logprob: -7.716592311859131
    7. ']' → logprob: -8.591592788696289
    8. '`' → logprob: -9.216592788696289
    9. ' dp' → logprob: -9.341592788696289
    10. ']
' → logprob: -9.466592788696289

Token 2550: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6583493947982788
    2. 'dp' → logprob: -0.7833493947982788
    3. '
' → logprob: -3.9083495140075684
    4. '   ' → logprob: -5.533349514007568
    5. '        
' → logprob: -7.033349514007568
    6. '    
' → logprob: -9.15834903717041
    7. '```' → logprob: -9.40834903717041
    8. ' dp' → logprob: -9.65834903717041
    9. '\' → logprob: -10.40834903717041
    10. '`
' → logprob: -10.78334903717041

Token 2551: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028196057304739952
    2. 'dp' → logprob: -3.903196096420288
    3. '```' → logprob: -6.028195858001709
    4. '   ' → logprob: -7.028195858001709
    5. '[' → logprob: -7.403195858001709
    6. 'pos' → logprob: -7.778195858001709
    7. '{
' → logprob: -7.778195858001709
    8. ']' → logprob: -8.028196334838867
    9. 'for' → logprob: -8.028196334838867
    10. '{' → logprob: -8.278196334838867

Token 2552: ' found' (ID: 2491)
  Prédit: 'season'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'season' → logprob: -0.3215808570384979
    2. 'found' → logprob: -1.5715808868408203
    3. ' season' → logprob: -3.0715808868408203
    4. ' found' → logprob: -4.19658088684082
    5. 's' → logprob: -6.07158088684082
    6. 'pos' → logprob: -6.32158088684082
    7. 'len' → logprob: -7.57158088684082
    8. ' saison' → logprob: -8.32158088684082
    9. ' s' → logprob: -8.82158088684082
    10. 'K' → logprob: -8.82158088684082

Token 2553: ' multiple' (ID: 7598)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21578145027160645
    2. ':' → logprob: -2.3407814502716064
    3. ' ==' → logprob: -2.7157814502716064
    4. '=' → logprob: -3.5907814502716064
    5. ':
' → logprob: -6.340781211853027
    6. ' =' → logprob: -7.465781211853027
    7. '!=' → logprob: -7.715781211853027
    8. '=[]' → logprob: -8.090781211853027
    9. 'empty' → logprob: -8.215781211853027
    10. ' !=' → logprob: -8.715781211853027

Token 2554: ' elements' (ID: 8632)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5317754745483398
    2. ' !=' → logprob: -1.5317754745483398
    3. ':' → logprob: -2.15677547454834
    4. 's' → logprob: -2.78177547454834
    5. '!=' → logprob: -2.78177547454834
    6. '_s' → logprob: -3.03177547454834
    7. '=' → logprob: -3.15677547454834
    8. '==' → logprob: -3.53177547454834
    9. '_words' → logprob: -3.78177547454834
    10. '>' → logprob: -3.90677547454834

Token 2555: ' =>' (ID: 871)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8060959577560425
    2. ':' → logprob: -1.5560959577560425
    3. '=' → logprob: -2.556096076965332
    4. '==' → logprob: -2.556096076965332
    5. 's' → logprob: -3.181096076965332
    6. '{' → logprob: -3.556096076965332
    7. ' >' → logprob: -3.556096076965332
    8. 'and' → logprob: -4.431096076965332
    9. ':
' → logprob: -4.681096076965332
    10. ' ==' → logprob: -4.681096076965332

Token 2556: ' invalid' (ID: 15796)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017175739631056786
    2. 'continue' → logprob: -4.517175674438477
    3. 'season' → logprob: -6.267175674438477
    4. '#' → logprob: -6.392175674438477
    5. 'set' → logprob: -6.392175674438477
    6. '[]' → logprob: -7.767175674438477
    7. 'dp' → logprob: -9.517175674438477
    8. 'return' → logprob: -9.642175674438477
    9. '{' → logprob: -9.642175674438477
    10. '[' → logprob: -10.142175674438477

Token 2557: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05585700273513794
    2. ']' → logprob: -4.430857181549072
    3. '   ' → logprob: -4.805857181549072
    4. '
' → logprob: -5.055857181549072
    5. '[
' → logprob: -5.430857181549072
    6. '[' → logprob: -5.680857181549072
    7. '```' → logprob: -5.805857181549072
    8. '_current' → logprob: -6.055857181549072
    9. ')' → logprob: -6.180857181549072
    10. '][' → logprob: -6.680857181549072

Token 2558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31633612513542175
    2. ']' → logprob: -2.691336154937744
    3. '   ' → logprob: -2.941336154937744
    4. 'dp' → logprob: -3.691336154937744
    5. '[
' → logprob: -3.941336154937744
    6. '
' → logprob: -4.066336154937744
    7. ':' → logprob: -4.316336154937744
    8. '[' → logprob: -4.316336154937744
    9. ')' → logprob: -4.566336154937744
    10. ':
' → logprob: -4.566336154937744

Token 2559: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.35236427187919617
    2. '       ' → logprob: -1.2273643016815186
    3. '
' → logprob: -6.2273640632629395
    4. 'from' → logprob: -6.6023640632629395
    5. '```' → logprob: -8.477364540100098
    6. '   ' → logprob: -8.977364540100098
    7. 'import' → logprob: -9.477364540100098
    8. '#' → logprob: -9.852364540100098
    9. ' dp' → logprob: -10.602364540100098
    10. '        
' → logprob: -10.727364540100098

Token 2560: '_cur' (ID: 46382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7684751152992249
    2. '_current' → logprob: -1.26847505569458
    3. ' =' → logprob: -1.39347505569458
    4. '_' → logprob: -5.76847505569458
    5. '=[' → logprob: -6.51847505569458
    6. '_cur' → logprob: -7.14347505569458
    7. '=_' → logprob: -8.393475532531738
    8. 'Current' → logprob: -8.518475532531738
    9. 'current' → logprob: -8.768475532531738
    10. '_prev' → logprob: -8.768475532531738

Token 2561: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07900237292051315
    2. ' =' → logprob: -2.5790023803710938
    3. '={}' → logprob: -9.204002380371094
    4. '=[' → logprob: -11.954002380371094
    5. '={' → logprob: -12.704002380371094
    6. '={}
' → logprob: -14.204002380371094
    7. '=[]' → logprob: -14.704002380371094
    8. '=[[' → logprob: -14.829002380371094
    9. '=dict' → logprob: -15.079002380371094
    10. '={"' → logprob: -15.204002380371094

Token 2562: ' [[[' (ID: 121934)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.10208801180124283
    2. '[' → logprob: -2.35208797454834
    3. '{}' → logprob: -6.85208797454834
    4. '{' → logprob: -7.35208797454834
    5. 'default' → logprob: -9.60208797454834
    6. '[{' → logprob: -9.85208797454834
    7. ' collections' → logprob: -10.47708797454834
    8. ' [' → logprob: -11.60208797454834
    9. '{}
' → logprob: -11.72708797454834
    10. 'import' → logprob: -12.35208797454834

Token 2563: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038777425652369857
    2. '[' → logprob: -8.250388145446777
    3. 'default' → logprob: -9.625388145446777
    4. '{}' → logprob: -10.375388145446777
    5. '{' → logprob: -10.625388145446777
    6. 'dict' → logprob: -13.250388145446777
    7. ' ' → logprob: -13.750388145446777
    8. '(' → logprob: -13.875388145446777
    9. '[[' → logprob: -14.875388145446777
    10. 'collections' → logprob: -15.125388145446777

Token 2564: ']*(' (ID: 92627)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4726356267929077
    2. ' for' → logprob: -1.0976356267929077
    3. ']*' → logprob: -3.7226357460021973
    4. ']' → logprob: -4.097635746002197
    5. '[' → logprob: -6.847635746002197
    6. '0' → logprob: -7.972635746002197
    7. ']*(' → logprob: -8.347635269165039
    8. '][' → logprob: -8.847635269165039
    9. '   ' → logprob: -9.347635269165039
    10. '
' → logprob: -9.472635269165039

Token 2565: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0006120019243098795
    2. '(K' → logprob: -7.500611782073975
    3. '(' → logprob: -11.000612258911133
    4. ' K' → logprob: -11.500612258911133
    5. '12' → logprob: -11.500612258911133
    6. 'M' → logprob: -12.375612258911133
    7. '(M' → logprob: -12.750612258911133
    8. '102' → logprob: -13.250612258911133
    9. '
' → logprob: -13.250612258911133
    10. 'MOD' → logprob: -13.375612258911133

Token 2566: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4378848391061183e-05
    2. ' +' → logprob: -11.250014305114746
    3. '+
' → logprob: -14.000014305114746
    4. '```' → logprob: -15.125014305114746
    5. ')' → logprob: -16.375015258789062
    6. ')+' → logprob: -16.750015258789062
    7. '+)' → logprob: -17.000015258789062
    8. '+++' → logprob: -18.125015258789062
    9. '＋' → logprob: -18.500015258789062
    10. '
' → logprob: -18.625015258789062

Token 2567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6330395936965942
    2. '2' → logprob: -0.7580395936965942
    3. '3' → logprob: -9.133039474487305
    4. '11' → logprob: -9.383039474487305
    5. '
' → logprob: -9.758039474487305
    6. '(' → logprob: -10.258039474487305
    7. '+' → logprob: -10.383039474487305
    8. '   ' → logprob: -11.008039474487305
    9. '```' → logprob: -11.008039474487305
    10. ' ' → logprob: -11.258039474487305

Token 2568: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010862821945920587
    2. 'for' → logprob: -6.876086235046387
    3. ' for' → logprob: -10.251086235046387
    4. '+' → logprob: -11.251086235046387
    5. ' )' → logprob: -13.376086235046387
    6. '   ' → logprob: -14.126086235046387
    7. '```' → logprob: -14.126086235046387
    8. '           ' → logprob: -14.251086235046387
    9. '       ' → logprob: -14.626086235046387
    10. ')]' → logprob: -15.126086235046387

Token 2569: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5760352611541748
    2. ' for' → logprob: -0.8260352611541748
    3. '           ' → logprob: -10.451035499572754
    4. '       ' → logprob: -10.576035499572754
    5. ']' → logprob: -11.076035499572754
    6. '               ' → logprob: -11.826035499572754
    7. '   ' → logprob: -12.451035499572754
    8. ')' → logprob: -12.826035499572754
    9. ' ' → logprob: -13.451035499572754
    10. '        ' → logprob: -13.451035499572754

Token 2570: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05652359127998352
    2. '_ac' → logprob: -3.306523561477661
    3. ' _' → logprob: -4.68152379989624
    4. '_w' → logprob: -6.18152379989624
    5. '_word' → logprob: -6.30652379989624
    6. '_in' → logprob: -6.30652379989624
    7. '_i' → logprob: -6.68152379989624
    8. '_range' → logprob: -7.43152379989624
    9. ' in' → logprob: -7.93152379989624
    10. '_n' → logprob: -8.056523323059082

Token 2571: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5876669883728027
    2. ' in' → logprob: -0.8376669883728027
    3. 'range' → logprob: -4.462666988372803
    4. ' range' → logprob: -9.712667465209961
    5. '_' → logprob: -10.962667465209961
    6. 'w' → logprob: -11.962667465209961
    7. '    ' → logprob: -12.212667465209961
    8. '0' → logprob: -12.337667465209961
    9. 'i' → logprob: -12.462667465209961
    10. '...' → logprob: -12.587667465209961

Token 2572: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003385614836588502
    2. ' range' → logprob: -8.000338554382324
    3. '   ' → logprob: -13.125338554382324
    4. '(range' → logprob: -14.125338554382324
    5. 'ac' → logprob: -15.000338554382324
    6. '       ' → logprob: -16.87533950805664
    7. '    ' → logprob: -17.00033950805664
    8. '           ' → logprob: -18.25033950805664
    9. '     ' → logprob: -18.50033950805664
    10. '                   ' → logprob: -18.50033950805664

Token 2573: '(ac' (ID: 95204)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.008238658308982849
    2. '(ac' → logprob: -5.258238792419434
    3. 'n' → logprob: -5.883238792419434
    4. '(n' → logprob: -9.008238792419434
    5. ' ac' → logprob: -9.508238792419434
    6. 'range' → logprob: -12.383238792419434
    7. '   ' → logprob: -13.008238792419434
    8. 'len' → logprob: -13.258238792419434
    9. '	ac' → logprob: -13.258238792419434
    10. '#ac' → logprob: -13.633238792419434

Token 2574: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.000712074339389801
    2. 'states' → logprob: -7.250711917877197
    3. 'States' → logprob: -13.250712394714355
    4. ' states' → logprob: -15.125712394714355
    5. 't' → logprob: -17.50071144104004
    6. '.states' → logprob: -18.00071144104004
    7. 's' → logprob: -18.12571144104004
    8. '_state' → logprob: -18.62571144104004
    9. '_words' → logprob: -19.00071144104004
    10. ' States' → logprob: -19.12571144104004

Token 2575: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014994684606790543
    2. ']' → logprob: -4.6399946212768555
    3. ')' → logprob: -5.2649946212768555
    4. '       ' → logprob: -10.764994621276855
    5. '   ' → logprob: -11.264994621276855
    6. ' )' → logprob: -12.264994621276855
    7. ')]
' → logprob: -12.389994621276855
    8. ' ]' → logprob: -12.639994621276855
    9. ']]' → logprob: -12.764994621276855
    10. '           ' → logprob: -13.389994621276855

Token 2576: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3391930162906647
    2. ' for' → logprob: -1.5891929864883423
    3. ']' → logprob: -2.589193105697632
    4. '       ' → logprob: -5.089192867279053
    5. '           ' → logprob: -6.964192867279053
    6. '   ' → logprob: -7.464192867279053
    7. '               ' → logprob: -8.339193344116211
    8. '        ' → logprob: -8.964193344116211
    9. '                   ' → logprob: -9.464193344116211
    10. '         ' → logprob: -10.214193344116211

Token 2577: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16046549379825592
    2. 'range' → logprob: -1.9104654788970947
    3. '_' → logprob: -8.660465240478516
    4. '_range' → logprob: -9.910465240478516
    5. '(range' → logprob: -11.535465240478516
    6. ' _' → logprob: -12.285465240478516
    7. '   ' → logprob: -12.785465240478516
    8. '	range' → logprob: -14.660465240478516
    9. '    ' → logprob: -15.285465240478516
    10. '_n' → logprob: -15.535465240478516

Token 2578: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012176171876490116
    2. ' range' → logprob: -6.751217842102051
    3. '(range' → logprob: -10.25121784210205
    4. '   ' → logprob: -12.00121784210205
    5. 'n' → logprob: -12.37621784210205
    6. '       ' → logprob: -15.00121784210205
    7. '(n' → logprob: -15.25121784210205
    8. 'len' → logprob: -15.62621784210205
    9. '           ' → logprob: -15.62621784210205
    10. '               ' → logprob: -16.126216888427734

Token 2579: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003184125293046236
    2. ' range' → logprob: -5.7531843185424805
    3. '(range' → logprob: -12.00318431854248
    4. '   ' → logprob: -16.253183364868164
    5. '	range' → logprob: -16.753183364868164
    6. '
' → logprob: -17.878183364868164
    7. '[' → logprob: -18.128183364868164
    8. 'n' → logprob: -18.753183364868164
    9. '_range' → logprob: -19.378183364868164
    10. '    ' → logprob: -19.878183364868164

Token 2580: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002466774603817612
    2. '(n' → logprob: -8.62524700164795
    3. 'len' → logprob: -10.87524700164795
    4. '   ' → logprob: -11.25024700164795
    5. ' n' → logprob: -11.62524700164795
    6. '           ' → logprob: -11.75024700164795
    7. 'range' → logprob: -12.00024700164795
    8. '       ' → logprob: -12.50024700164795
    9. '               ' → logprob: -12.75024700164795
    10. '
' → logprob: -14.00024700164795

Token 2581: 'words' (ID: 10020)
  Prédit: 'words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -9.968312951968983e-06
    2. 'w' → logprob: -11.625009536743164
    3. '_words' → logprob: -15.000009536743164
    4. 'word' → logprob: -15.375009536743164
    5. 'wo' → logprob: -15.750009536743164
    6. 'ords' → logprob: -16.750009536743164
    7. '(words' → logprob: -16.750009536743164
    8. 'WORDS' → logprob: -17.625009536743164
    9. ' words' → logprob: -17.750009536743164
    10. ')' → logprob: -18.000009536743164

Token 2582: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07236757129430771
    2. ')]' → logprob: -2.8223676681518555
    3. ']
' → logprob: -4.8223676681518555
    4. ')]
' → logprob: -6.8223676681518555
    5. '       ' → logprob: -6.9473676681518555
    6. '   ' → logprob: -8.572367668151855
    7. ' ]' → logprob: -11.447367668151855
    8. ']>
' → logprob: -11.447367668151855
    9. ']]' → logprob: -11.697367668151855
    10. ']]
' → logprob: -12.197367668151855

Token 2583: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49702930450439453
    2. '       ' → logprob: -1.2470293045043945
    3. 'dp' → logprob: -3.3720293045043945
    4. ' for' → logprob: -4.3720293045043945
    5. '
' → logprob: -4.6220293045043945
    6. '[' → logprob: -4.6220293045043945
    7. '   ' → logprob: -4.7470293045043945
    8. '\t' → logprob: -4.9970293045043945
    9. ')' → logprob: -5.1220293045043945
    10. '```' → logprob: -5.4970293045043945

Token 2584: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0564331205387134e-05
    2. '       ' → logprob: -11.50001049041748
    3. ' for' → logprob: -15.62501049041748
    4. '
' → logprob: -16.250011444091797
    5. 'import' → logprob: -16.875011444091797
    6. '#' → logprob: -17.125011444091797
    7. '```' → logprob: -17.250011444091797
    8. 'from' → logprob: -17.750011444091797
    9. '	for' → logprob: -18.125011444091797
    10. '   ' → logprob: -19.125011444091797

Token 2585: ' w' (ID: 286)
  Prédit: 'wi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.032320670783519745
    2. 'w' → logprob: -3.782320737838745
    3. 'i' → logprob: -5.157320499420166
    4. 'word' → logprob: -5.907320499420166
    5. ' wi' → logprob: -7.657320499420166
    6. ' w' → logprob: -10.157320976257324
    7. ' i' → logprob: -11.032320976257324
    8. ' word' → logprob: -11.407320976257324
    9. 'wid' → logprob: -11.532320976257324
    10. 'iw' → logprob: -13.782320976257324

Token 2586: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01796894334256649
    2. 'in' → logprob: -4.392969131469727
    3. ' in' → logprob: -5.267969131469727
    4. 'id' → logprob: -9.392969131469727
    5. '_i' → logprob: -9.392969131469727
    6. '_id' → logprob: -10.017969131469727
    7. 'w' → logprob: -11.392969131469727
    8. ' i' → logprob: -11.517969131469727
    9. '_idx' → logprob: -11.642969131469727
    10. '_in' → logprob: -11.642969131469727

Token 2587: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014175849966704845
    2. ' range' → logprob: -4.264175891876221
    3. 'in' → logprob: -12.014175415039062
    4. ' in' → logprob: -12.639175415039062
    5. '_' → logprob: -13.889175415039062
    6. '0' → logprob: -14.264175415039062
    7. ' ' → logprob: -14.389175415039062
    8. '   ' → logprob: -15.139175415039062
    9. '_range' → logprob: -15.514175415039062
    10. '(range' → logprob: -15.889175415039062

Token 2588: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00023894020705483854
    2. '(n' → logprob: -8.500239372253418
    3. 'len' → logprob: -10.750239372253418
    4. 'range' → logprob: -11.750239372253418
    5. ' n' → logprob: -12.875239372253418
    6. '   ' → logprob: -13.250239372253418
    7. '0' → logprob: -13.750239372253418
    8. '(len' → logprob: -15.250239372253418
    9. '
' → logprob: -16.0002384185791
    10. '       ' → logprob: -16.1252384185791

Token 2589: 'words' (ID: 10020)
  Prédit: 'words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.0002226093056378886
    2. '_words' → logprob: -9.500222206115723
    3. 'w' → logprob: -9.875222206115723
    4. ' words' → logprob: -10.250222206115723
    5. 'ords' → logprob: -10.375222206115723
    6. '(words' → logprob: -11.375222206115723
    7. 'word' → logprob: -11.500222206115723
    8. 'n' → logprob: -12.500222206115723
    9. '   ' → logprob: -13.750222206115723
    10. '       ' → logprob: -14.375222206115723

Token 2590: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010629777796566486
    2. '):' → logprob: -5.385629653930664
    3. '       ' → logprob: -6.135629653930664
    4. '           ' → logprob: -6.635629653930664
    5. '   ' → logprob: -7.010629653930664
    6. ':
' → logprob: -7.260629653930664
    7. ':' → logprob: -7.635629653930664
    8. ']:
' → logprob: -9.635629653930664
    9. '               ' → logprob: -10.010629653930664
    10. '[' → logprob: -10.385629653930664

Token 2591: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008611264638602734
    2. '       ' → logprob: -5.50861120223999
    3. 'for' → logprob: -6.00861120223999
    4. 'dp' → logprob: -6.50861120223999
    5. ' for' → logprob: -8.383611679077148
    6. ' dp' → logprob: -9.008611679077148
    7. '   ' → logprob: -9.008611679077148
    8. '               ' → logprob: -10.133611679077148
    9. '	dp' → logprob: -10.633611679077148
    10. '```' → logprob: -11.133611679077148

Token 2592: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.2079041302204132
    2. 'for' → logprob: -1.7079041004180908
    3. '           ' → logprob: -5.33290433883667
    4. '   ' → logprob: -7.08290433883667
    5. '       ' → logprob: -7.45790433883667
    6. ' dp' → logprob: -8.832903861999512
    7. ' for' → logprob: -9.957903861999512
    8. '               ' → logprob: -11.207903861999512
    9. '                   ' → logprob: -12.582903861999512
    10. '	dp' → logprob: -12.707903861999512

Token 2593: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -2.618001053633634e-05
    2. 'cur' → logprob: -10.875025749206543
    3. '[cur' → logprob: -13.625025749206543
    4. 'Cur' → logprob: -13.625025749206543
    5. '[w' → logprob: -13.625025749206543
    6. '_curr' → logprob: -14.125025749206543
    7. '```' → logprob: -14.625025749206543
    8. '\' → logprob: -14.625025749206543
    9. 'w' → logprob: -14.875025749206543
    10. '[_' → logprob: -14.875025749206543

Token 2594: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.003198750549927354
    2. '[' → logprob: -5.753198623657227
    3. 'w' → logprob: -12.003198623657227
    4. ' [' → logprob: -12.628198623657227
    5. '[word' → logprob: -12.753198623657227
    6. '][' → logprob: -12.753198623657227
    7. '[][' → logprob: -13.253198623657227
    8. ')[' → logprob: -13.753198623657227
    9. '   ' → logprob: -14.628198623657227
    10. '```' → logprob: -15.253198623657227

Token 2595: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002504555508494377
    2. '[' → logprob: -6.002504348754883
    3. ']' → logprob: -11.252504348754883
    4. '0' → logprob: -11.752504348754883
    5. ' ][' → logprob: -12.627504348754883
    6. '           ' → logprob: -13.752504348754883
    7. '```' → logprob: -14.377504348754883
    8. ')[' → logprob: -15.252504348754883
    9. '[][' → logprob: -15.252504348754883
    10. '=' → logprob: -15.377504348754883

Token 2596: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '000' → logprob: -18.375
    4. '   ' → logprob: -18.75
    5. '[' → logprob: -19.875
    6. '00' → logprob: -20.375
    7. 'ac' → logprob: -20.375
    8. 'MOD' → logprob: -20.5
    9. ']' → logprob: -20.625
    10. '```' → logprob: -20.75

Token 2597: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5155363082885742
    2. ']' → logprob: -1.0155363082885742
    3. ']+=' → logprob: -3.390536308288574
    4. ']=' → logprob: -5.015536308288574
    5. '[' → logprob: -8.890536308288574
    6. ']==' → logprob: -10.015536308288574
    7. '=' → logprob: -11.015536308288574
    8. '0' → logprob: -11.015536308288574
    9. '1' → logprob: -11.640536308288574
    10. '+=' → logprob: -11.765536308288574

Token 2598: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -21.0
    3. '۰' → logprob: -21.125
    4. '```' → logprob: -22.75
    5. '০' → logprob: -23.125
    6. '#' → logprob: -23.375
    7. '=' → logprob: -23.875
    8. '(' → logprob: -24.0
    9. 'import' → logprob: -24.25
    10. '[' → logprob: -24.375

Token 2599: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012208930216729641
    2. ']+=' → logprob: -4.512208938598633
    3. ']=' → logprob: -6.887208938598633
    4. '=' → logprob: -9.512208938598633
    5. ' ]' → logprob: -10.512208938598633
    6. '+=' → logprob: -10.762208938598633
    7. ']+' → logprob: -12.262208938598633
    8. ')' → logprob: -12.887208938598633
    9. ']==' → logprob: -12.887208938598633
    10. '+' → logprob: -13.762208938598633

Token 2600: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0034534833393990993
    2. '+=' → logprob: -6.378453254699707
    3. ' =' → logprob: -6.503453254699707
    4. ']=' → logprob: -9.253453254699707
    5. ']' → logprob: -9.753453254699707
    6. ']+=' → logprob: -9.878453254699707
    7. ' +=' → logprob: -10.003453254699707
    8. '=
' → logprob: -15.003453254699707
    9. '=True' → logprob: -15.003453254699707
    10. '+' → logprob: -16.378454208374023

Token 2601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '           ' → logprob: -21.375
    3. '   ' → logprob: -21.375
    4. ' ' → logprob: -21.625
    5. '       ' → logprob: -22.875
    6. '                   ' → logprob: -24.125
    7. '۱' → logprob: -24.125
    8. '```' → logprob: -24.25
    9. '' → logprob: -24.875
    10. '                       ' → logprob: -25.0

Token 2602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.625
    3. '0' → logprob: -22.5
    4. '۱' → logprob: -22.75
    5. '' → logprob: -23.125
    6. '１' → logprob: -23.25
    7. '(' → logprob: -23.75
    8. '১' → logprob: -24.0
    9. '   ' → logprob: -24.0
    10. '१' → logprob: -24.25

Token 2603: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14607706665992737
    2. '
' → logprob: -2.2710771560668945
    3. '<|end|>' → logprob: -4.2710771560668945
    4. ')' → logprob: -4.5210771560668945
    5. '	' → logprob: -5.5210771560668945
    6. '   ' → logprob: -7.0210771560668945
    7. '<|end|>' → logprob: -7.3960771560668945
    8. '```' → logprob: -8.021077156066895
    9. '        
' → logprob: -8.146077156066895
    10. '           ' → logprob: -8.271077156066895

Token 2604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002833172446116805
    2. ')' → logprob: -7.002833366394043
    3. '<|end|>' → logprob: -7.252833366394043
    4. '   ' → logprob: -7.377833366394043
    5. '	' → logprob: -8.127833366394043
    6. '
' → logprob: -9.377833366394043
    7. '<|end|>' → logprob: -10.252833366394043
    8. '        
' → logprob: -10.627833366394043
    9. ',' → logprob: -10.627833366394043
    10. '```' → logprob: -10.752833366394043

Token 2605: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0760670155286789
    2. ')' → logprob: -2.7010669708251953
    3. '   ' → logprob: -6.326066970825195
    4. '
' → logprob: -6.951066970825195
    5. ':' → logprob: -7.326066970825195
    6. '#' → logprob: -7.826066970825195
    7. '<|end|>' → logprob: -8.076066970825195
    8. '           ' → logprob: -8.326066970825195
    9. '[' → logprob: -8.326066970825195
    10. '	' → logprob: -8.451066970825195

Token 2606: ' _' (ID: 1175)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.5747421979904175
    2. 'pos' → logprob: -0.9497421979904175
    3. ' _' → logprob: -3.449742317199707
    4. '_' → logprob: -4.449742317199707
    5. '_pos' → logprob: -5.449742317199707
    6. ' i' → logprob: -7.199742317199707
    7. 'i' → logprob: -7.699742317199707
    8. ' step' → logprob: -7.824742317199707
    9. 'step' → logprob: -8.574742317199707
    10. '_m' → logprob: -8.574742317199707

Token 2607: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0789131447672844
    2. 'in' → logprob: -2.5789132118225098
    3. ',' → logprob: -11.453912734985352
    4. ' ' → logprob: -13.203912734985352
    5. 'range' → logprob: -13.203912734985352
    6. 'n' → logprob: -13.578912734985352
    7. '1' → logprob: -13.953912734985352
    8. '   ' → logprob: -13.953912734985352
    9. '_in' → logprob: -14.078912734985352
    10. '
' → logprob: -14.203912734985352

Token 2608: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004081247374415398
    2. ' range' → logprob: -5.5040812492370605
    3. 'in' → logprob: -13.004080772399902
    4. ' in' → logprob: -15.129080772399902
    5. '_' → logprob: -15.879080772399902
    6. '(range' → logprob: -16.37908172607422
    7. '_range' → logprob: -17.25408172607422
    8. '
' → logprob: -17.37908172607422
    9. ' ' → logprob: -18.37908172607422
    10. '   ' → logprob: -19.37908172607422

Token 2609: '(' (ID: 7)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.108928918838501
    2. 'M' → logprob: -1.733928918838501
    3. '(M' → logprob: -1.733928918838501
    4. ' range' → logprob: -2.358928918838501
    5. ' in' → logprob: -2.483928918838501
    6. '1' → logprob: -2.483928918838501
    7. '(' → logprob: -3.608928918838501
    8. 'range' → logprob: -4.358928680419922
    9. '   ' → logprob: -5.358928680419922
    10. ' (' → logprob: -5.608928680419922

Token 2610: '1' (ID: 16)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.022724362090229988
    2. '1' → logprob: -4.022724151611328
    3. 'range' → logprob: -5.397724151611328
    4. ' range' → logprob: -11.647724151611328
    5. '
' → logprob: -11.772724151611328
    6. '2' → logprob: -11.897724151611328
    7. '(M' → logprob: -12.022724151611328
    8. '   ' → logprob: -12.772724151611328
    9. ' M' → logprob: -13.272724151611328
    10. '(' → logprob: -13.647724151611328

Token 2611: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005105679854750633
    2. ',M' → logprob: -5.380105495452881
    3. ' ,' → logprob: -7.880105495452881
    4. 'M' → logprob: -10.130105972290039
    5. ',
' → logprob: -11.255105972290039
    6. '   ' → logprob: -11.380105972290039
    7. ',m' → logprob: -11.630105972290039
    8. 'to' → logprob: -11.880105972290039
    9. '       ' → logprob: -12.005105972290039
    10. '
' → logprob: -12.255105972290039

Token 2612: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02333970181643963
    2. '):' → logprob: -3.7733397483825684
    3. '+' → logprob: -10.64833927154541
    4. '):
' → logprob: -10.64833927154541
    5. ':' → logprob: -11.02333927154541
    6. ':
' → logprob: -11.64833927154541
    7. '   ' → logprob: -12.02333927154541
    8. '       ' → logprob: -12.39833927154541
    9. '```' → logprob: -12.77333927154541
    10. '):

' → logprob: -12.89833927154541

Token 2613: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5256398916244507
    2. '       ' → logprob: -0.9006398916244507
    3. '   ' → logprob: -6.27564001083374
    4. ' for' → logprob: -8.650639533996582
    5. 'for' → logprob: -8.900639533996582
    6. '	       ' → logprob: -9.150639533996582
    7. '```' → logprob: -9.900639533996582
    8. '#' → logprob: -10.275639533996582
    9. ',' → logprob: -10.525639533996582
    10. '	   ' → logprob: -10.650639533996582

Token 2614: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.008317753672599792
    2. '           ' → logprob: -5.383317947387695
    3. '       ' → logprob: -5.633317947387695
    4. ' dp' → logprob: -9.633317947387695
    5. 'import' → logprob: -10.383317947387695
    6. '```' → logprob: -11.883317947387695
    7. '   ' → logprob: -12.008317947387695
    8. '	dp' → logprob: -13.508317947387695
    9. '#' → logprob: -13.633317947387695
    10. '_dp' → logprob: -14.758317947387695

Token 2615: '_next' (ID: 25436)
  Prédit: '_cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.20160269737243652
    2. '_next' → logprob: -1.7016026973724365
    3. '_prev' → logprob: -9.826602935791016
    4. '_curr' → logprob: -10.076602935791016
    5. '_new' → logprob: -10.326602935791016
    6. '_tmp' → logprob: -10.701602935791016
    7. '_current' → logprob: -10.826602935791016
    8. '_val' → logprob: -12.451602935791016
    9. '=_' → logprob: -12.951602935791016
    10. '_' → logprob: -13.201602935791016

Token 2616: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030226876959204674
    2. '=' → logprob: -3.530226945877075
    3. '=[' → logprob: -7.780226707458496
    4. '=[[' → logprob: -9.780226707458496
    5. '=[]' → logprob: -13.655226707458496
    6. ' =[' → logprob: -15.530226707458496
    7. '=[
' → logprob: -16.405227661132812
    8. '=
' → logprob: -16.530227661132812
    9. '=[]
' → logprob: -17.280227661132812
    10. '＝' → logprob: -17.405227661132812

Token 2617: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -5.9795445849886164e-05
    2. ' [[[' → logprob: -9.750060081481934
    3. '[' → logprob: -14.000060081481934
    4. '[
' → logprob: -14.250060081481934
    5. '   ' → logprob: -17.250059127807617
    6. '       ' → logprob: -17.750059127807617
    7. 'default' → logprob: -18.750059127807617
    8. '[]
' → logprob: -19.375059127807617
    9. ' [[' → logprob: -20.750059127807617
    10. '[]' → logprob: -21.125059127807617

Token 2618: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.625000953674316
    3. '
' → logprob: -16.125
    4. '[' → logprob: -16.25
    5. 'int' → logprob: -16.5
    6. ' ' → logprob: -17.0
    7. 'MOD' → logprob: -17.5
    8. 'K' → logprob: -18.875
    9. '(M' → logprob: -19.375
    10. '[int' → logprob: -19.375

Token 2619: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.003074206644669175
    2. '*(' → logprob: -6.0030741691589355
    3. ']*' → logprob: -7.8780741691589355
    4. ']' → logprob: -9.003074645996094
    5. 'for' → logprob: -9.503074645996094
    6. ' for' → logprob: -12.003074645996094
    7. '](' → logprob: -12.253074645996094
    8. '(ac' → logprob: -12.753074645996094
    9. '           ' → logprob: -12.878074645996094
    10. '(n' → logprob: -13.503074645996094

Token 2620: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3132825195789337
    2. '(K' → logprob: -1.3132824897766113
    3. ' (' → logprob: -11.31328296661377
    4. ' K' → logprob: -12.93828296661377
    5. '(M' → logprob: -13.06328296661377
    6. 'MOD' → logprob: -13.43828296661377
    7. '
' → logprob: -14.31328296661377
    8. '   ' → logprob: -14.56328296661377
    9. '(' → logprob: -14.93828296661377
    10. '           ' → logprob: -15.68828296661377

Token 2621: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.896309739408025e-07
    2. ' +' → logprob: -14.250000953674316
    3. '```' → logprob: -16.0
    4. '+
' → logprob: -17.125
    5. '()+' → logprob: -18.875
    6. '[' → logprob: -19.375
    7. '1' → logprob: -19.875
    8. 'plus' → logprob: -19.875
    9. '
' → logprob: -19.875
    10. ')+' → logprob: -20.375

Token 2622: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.607391408877447e-05
    2. '2' → logprob: -10.875036239624023
    3. '
' → logprob: -12.125036239624023
    4. ' ' → logprob: -12.500036239624023
    5. '+' → logprob: -12.625036239624023
    6. '(' → logprob: -12.875036239624023
    7. '```' → logprob: -13.750036239624023
    8. ' (' → logprob: -15.125036239624023
    9. '   ' → logprob: -15.750036239624023
    10. '(M' → logprob: -16.500036239624023

Token 2623: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7091425061225891
    2. ')' → logprob: -0.9591425061225891
    3. ' for' → logprob: -2.0841424465179443
    4. ']' → logprob: -8.959142684936523
    5. '           ' → logprob: -10.084142684936523
    6. '   ' → logprob: -10.584142684936523
    7. '       ' → logprob: -10.709142684936523
    8. '               ' → logprob: -10.959142684936523
    9. ' ' → logprob: -11.209142684936523
    10. '```' → logprob: -11.584142684936523

Token 2624: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38689786195755005
    2. ' for' → logprob: -1.1368978023529053
    3. '               ' → logprob: -11.636898040771484
    4. '           ' → logprob: -11.636898040771484
    5. '            ' → logprob: -12.511898040771484
    6. '                ' → logprob: -13.886898040771484
    7. '                   ' → logprob: -14.136898040771484
    8. '             ' → logprob: -14.136898040771484
    9. '              ' → logprob: -14.511898040771484
    10. '        ' → logprob: -14.636898040771484

Token 2625: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0807463601231575
    2. '_ac' → logprob: -2.5807464122772217
    3. ' _' → logprob: -6.330746173858643
    4. '_in' → logprob: -9.9557466506958
    5. '_range' → logprob: -11.2057466506958
    6. ' in' → logprob: -11.9557466506958
    7. '_AC' → logprob: -13.2057466506958
    8. ' ac' → logprob: -13.8307466506958
    9. '_j' → logprob: -14.4557466506958
    10. '_for' → logprob: -14.5807466506958

Token 2626: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6006369590759277
    2. 'in' → logprob: -0.8506369590759277
    3. ' in' → logprob: -3.7256369590759277
    4. 'range' → logprob: -8.975637435913086
    5. '_in' → logprob: -9.850637435913086
    6. '__' → logprob: -9.850637435913086
    7. '_ac' → logprob: -10.100637435913086
    8. 'ac' → logprob: -11.350637435913086
    9. ' _' → logprob: -12.225637435913086
    10. '___' → logprob: -13.600637435913086

Token 2627: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.576873758807778e-05
    2. ' range' → logprob: -9.500075340270996
    3. 'ac' → logprob: -14.000075340270996
    4. '(range' → logprob: -16.875076293945312
    5. '
' → logprob: -17.625076293945312
    6. '_range' → logprob: -19.875076293945312
    7. 'Range' → logprob: -20.125076293945312
    8. '(ac' → logprob: -20.250076293945312
    9. '	range' → logprob: -21.625076293945312
    10. 'in' → logprob: -21.875076293945312

Token 2628: '(ac' (ID: 95204)
  Prédit: '(ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ac' → logprob: -0.061970822513103485
    2. 'ac' → logprob: -2.8119707107543945
    3. '	ac' → logprob: -14.061970710754395
    4. '   ' → logprob: -14.061970710754395
    5. 'range' → logprob: -14.436970710754395
    6. '
' → logprob: -15.061970710754395
    7. '_ac' → logprob: -15.061970710754395
    8. ' ac' → logprob: -15.686970710754395
    9. '/ac' → logprob: -15.811970710754395
    10. '#ac' → logprob: -16.06197166442871

Token 2629: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.700132997939363e-05
    2. 'states' → logprob: -11.000017166137695
    3. 'States' → logprob: -15.250017166137695
    4. '_state' → logprob: -19.125017166137695
    5. '.states' → logprob: -19.625017166137695
    6. ' states' → logprob: -19.750017166137695
    7. ' States' → logprob: -20.250017166137695
    8. '_st' → logprob: -20.750017166137695
    9. '_' → logprob: -20.875017166137695
    10. '```' → logprob: -21.500017166137695

Token 2630: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31340131163597107
    2. ')]' → logprob: -1.3134013414382935
    3. ')' → logprob: -9.563401222229004
    4. ']]' → logprob: -10.438401222229004
    5. '           ' → logprob: -11.188401222229004
    6. ']
' → logprob: -11.688401222229004
    7. '])' → logprob: -12.188401222229004
    8. '       ' → logprob: -12.313401222229004
    9. ')]
' → logprob: -12.938401222229004
    10. '}]' → logprob: -13.188401222229004

Token 2631: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5763305425643921
    2. 'for' → logprob: -0.8263305425643921
    3. '           ' → logprob: -8.326330184936523
    4. '               ' → logprob: -9.951330184936523
    5. '            ' → logprob: -10.076330184936523
    6. ' in' → logprob: -10.326330184936523
    7. '                ' → logprob: -12.076330184936523
    8. '                   ' → logprob: -12.076330184936523
    9. '          ' → logprob: -12.951330184936523
    10. '        ' → logprob: -13.326330184936523

Token 2632: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.361715704202652
    2. '_' → logprob: -2.486715793609619
    3. 'range' → logprob: -2.486715793609619
    4. '_n' → logprob: -2.861715793609619
    5. '(n' → logprob: -3.111715793609619
    6. '_range' → logprob: -3.861715793609619
    7. ' _' → logprob: -4.861715793609619
    8. ' (' → logprob: -5.361715793609619
    9. '(range' → logprob: -7.611715793609619
    10. 'n' → logprob: -8.361715316772461

Token 2633: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03847082331776619
    2. ' range' → logprob: -3.28847074508667
    3. '(range' → logprob: -8.413471221923828
    4. '(n' → logprob: -8.788471221923828
    5. '_range' → logprob: -10.538471221923828
    6. 'n' → logprob: -11.163471221923828
    7. 'in' → logprob: -12.163471221923828
    8. ' in' → logprob: -12.288471221923828
    9. '_' → logprob: -13.038471221923828
    10. 'len' → logprob: -14.538471221923828

Token 2634: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006773514673113823
    2. ' range' → logprob: -5.006773471832275
    3. '(n' → logprob: -10.506773948669434
    4. '(range' → logprob: -10.631773948669434
    5. 'n' → logprob: -12.131773948669434
    6. '[n' → logprob: -14.256773948669434
    7. '_range' → logprob: -14.756773948669434
    8. 'w' → logprob: -16.131772994995117
    9. '	range' → logprob: -17.256772994995117
    10. '
' → logprob: -17.881772994995117

Token 2635: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005095454398542643
    2. 'n' → logprob: -8.000509262084961
    3. 'range' → logprob: -8.750509262084961
    4. '(range' → logprob: -11.625509262084961
    5. '(len' → logprob: -12.875509262084961
    6. ' (' → logprob: -13.000509262084961
    7. '
' → logprob: -14.750509262084961
    8. 'len' → logprob: -15.250509262084961
    9. '(' → logprob: -15.375509262084961
    10. '   ' → logprob: -15.375509262084961

Token 2636: 'words' (ID: 10020)
  Prédit: 'words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -4.320199877838604e-07
    2. '_words' → logprob: -15.5
    3. '(words' → logprob: -16.625
    4. 'word' → logprob: -16.75
    5. 'w' → logprob: -16.875
    6. ' words' → logprob: -19.75
    7. 'works' → logprob: -20.0
    8. 'ords' → logprob: -20.0
    9. 'wo' → logprob: -20.625
    10. 'n' → logprob: -20.75

Token 2637: ')]
' (ID: 11587)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35114118456840515
    2. ']' → logprob: -1.8511412143707275
    3. ']
' → logprob: -1.9761412143707275
    4. ')' → logprob: -8.726140975952148
    5. ']
' → logprob: -9.351140975952148
    6. '               ' → logprob: -9.726140975952148
    7. '       ' → logprob: -9.726140975952148
    8. ')]' → logprob: -9.976140975952148
    9. ')
' → logprob: -11.226140975952148
    10. ')]
' → logprob: -11.976140975952148

Token 2638: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20320311188697815
    2. 'for' → logprob: -1.9532030820846558
    3. '       ' → logprob: -3.2032032012939453
    4. ' for' → logprob: -6.703203201293945
    5. '   ' → logprob: -8.828203201293945
    6. '```' → logprob: -11.203203201293945
    7. '<|end|>' → logprob: -11.578203201293945
    8. '		' → logprob: -11.578203201293945
    9. '	       ' → logprob: -12.078203201293945
    10. '               ' → logprob: -12.203203201293945

Token 2639: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02034064382314682
    2. '       ' → logprob: -4.020340442657471
    3. ' for' → logprob: -6.770340442657471
    4. '           ' → logprob: -6.895340442657471
    5. 'word' → logprob: -11.645340919494629
    6. '```' → logprob: -11.770340919494629
    7. '	for' → logprob: -12.145340919494629
    8. '   ' → logprob: -13.395340919494629
    9. 'words' → logprob: -13.645340919494629
    10. 'w' → logprob: -13.645340919494629

Token 2640: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.21064943075180054
    2. ' w' → logprob: -2.2106494903564453
    3. 'pos' → logprob: -3.0856494903564453
    4. 'word' → logprob: -4.085649490356445
    5. ' word' → logprob: -4.835649490356445
    6. ' pos' → logprob: -5.210649490356445
    7. 'cur' → logprob: -5.835649490356445
    8. ' cur' → logprob: -6.710649490356445
    9. 'prev' → logprob: -9.210649490356445
    10. ' prev' → logprob: -10.210649490356445

Token 2641: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09008720517158508
    2. 'in' → logprob: -2.4650871753692627
    3. 'i' → logprob: -7.215087413787842
    4. '_in' → logprob: -9.465086936950684
    5. ',' → logprob: -9.590086936950684
    6. 'id' → logprob: -9.715086936950684
    7. '_id' → logprob: -10.090086936950684
    8. '2' → logprob: -10.590086936950684
    9. 'w' → logprob: -10.590086936950684
    10. '0' → logprob: -10.965086936950684

Token 2642: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868763744831085
    2. ' range' → logprob: -1.1368763446807861
    3. ' in' → logprob: -12.886876106262207
    4. '(range' → logprob: -13.511876106262207
    5. '0' → logprob: -14.136876106262207
    6. 'n' → logprob: -15.511876106262207
    7. 'w' → logprob: -15.761876106262207
    8. 'in' → logprob: -15.886876106262207
    9. ' ' → logprob: -16.511877059936523
    10. 'ange' → logprob: -16.886877059936523

Token 2643: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05766889080405235
    2. 'ac' → logprob: -3.057668924331665
    3. '(n' → logprob: -5.432668685913086
    4. 'range' → logprob: -6.057668685913086
    5. 'words' → logprob: -6.682668685913086
    6. 'len' → logprob: -7.807668685913086
    7. '0' → logprob: -8.682668685913086
    8. '(ac' → logprob: -8.682668685913086
    9. 'adj' → logprob: -9.182668685913086
    10. ' n' → logprob: -10.307668685913086

Token 2644: 'words' (ID: 10020)
  Prédit: 'words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -1.27099974633893e-05
    2. 'word' → logprob: -11.500012397766113
    3. '_words' → logprob: -13.625012397766113
    4. 'w' → logprob: -14.750012397766113
    5. '(words' → logprob: -14.875012397766113
    6. ' words' → logprob: -15.000012397766113
    7. ')' → logprob: -17.12501335144043
    8. 'WORDS' → logprob: -17.25001335144043
    9. 'ords' → logprob: -17.50001335144043
    10. '.words' → logprob: -17.87501335144043

Token 2645: '):
' (ID: 1883)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3606574833393097
    2. '):
' → logprob: -1.3606574535369873
    3. '           ' → logprob: -3.8606574535369873
    4. '):' → logprob: -4.360657691955566
    5. ':' → logprob: -5.610657691955566
    6. ')' → logprob: -6.110657691955566
    7. ':
' → logprob: -6.485657691955566
    8. ',' → logprob: -6.735657691955566
    9. '][' → logprob: -7.110657691955566
    10. '                   ' → logprob: -7.110657691955566

Token 2646: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01693209633231163
    2. ' for' → logprob: -4.516932010650635
    3. 'for' → logprob: -5.391932010650635
    4. '           ' → logprob: -7.016932010650635
    5. ' adj' → logprob: -9.391932487487793
    6. '                   ' → logprob: -9.391932487487793
    7. '   ' → logprob: -9.516932487487793
    8. 'adj' → logprob: -10.141932487487793
    9. '	           ' → logprob: -10.516932487487793
    10. '```' → logprob: -11.266932487487793

Token 2647: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.40553387999534607
    2. 'ac' → logprob: -1.5305339097976685
    3. '               ' → logprob: -2.905533790588379
    4. ' for' → logprob: -3.030533790588379
    5. '                   ' → logprob: -5.280533790588379
    6. '           ' → logprob: -6.030533790588379
    7. 'adj' → logprob: -6.405533790588379
    8. ' ac' → logprob: -6.655533790588379
    9. 'st' → logprob: -7.280533790588379
    10. 'w' → logprob: -7.530533790588379

Token 2648: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.014406184665858746
    2. 'st' → logprob: -4.889406204223633
    3. 'a' → logprob: -6.514406204223633
    4. 's' → logprob: -6.514406204223633
    5. 'aw' → logprob: -7.139406204223633
    6. 'ws' → logprob: -7.389406204223633
    7. 'prev' → logprob: -7.639406204223633
    8. 'state' → logprob: -7.889406204223633
    9. 'word' → logprob: -8.139406204223633
    10. 'w' → logprob: -8.639406204223633

Token 2649: 's' (ID: 82)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.10686919838190079
    2. 'state' → logprob: -2.6068692207336426
    3. '_s' → logprob: -4.106869220733643
    4. 's' → logprob: -4.606869220733643
    5. '_states' → logprob: -7.356869220733643
    6. '_st' → logprob: -8.106868743896484
    7. 'st' → logprob: -8.731868743896484
    8. 't' → logprob: -11.231868743896484
    9. 'states' → logprob: -11.481868743896484
    10. ' state' → logprob: -12.231868743896484

Token 2650: ' in' (ID: 306)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16685111820697784
    2. ' in' → logprob: -2.041851043701172
    3. 'in' → logprob: -3.791851043701172
    4. 'st' → logprob: -7.666851043701172
    5. 'state' → logprob: -8.291851043701172
    6. 's' → logprob: -8.666851043701172
    7. '_state' → logprob: -8.666851043701172
    8. '_states' → logprob: -8.791851043701172
    9. '
' → logprob: -10.416851043701172
    10. '_t' → logprob: -10.791851043701172

Token 2651: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006691106595098972
    2. 'ac' → logprob: -5.506690979003906
    3. ' range' → logprob: -6.006690979003906
    4. '(ac' → logprob: -9.131690979003906
    5. '0' → logprob: -10.506690979003906
    6. '(range' → logprob: -12.131690979003906
    7. '[' → logprob: -12.381690979003906
    8. '(' → logprob: -14.881690979003906
    9. '   ' → logprob: -14.881690979003906
    10. '
' → logprob: -15.631690979003906

Token 2652: '(ac' (ID: 95204)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -4.320199877838604e-07
    2. '(ac' → logprob: -15.375
    3. ' ac' → logprob: -16.125
    4. '	ac' → logprob: -17.625
    5. '#ac' → logprob: -19.25
    6. 'len' → logprob: -19.875
    7. '0' → logprob: -20.125
    8. '               ' → logprob: -20.625
    9. '_ac' → logprob: -20.875
    10. '           ' → logprob: -21.0

Token 2653: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0067456853576004505
    2. 'states' → logprob: -5.0067458152771
    3. 't' → logprob: -10.506745338439941
    4. 's' → logprob: -14.131745338439941
    5. '_state' → logprob: -14.381745338439941
    6. 'state' → logprob: -14.506745338439941
    7. 'States' → logprob: -15.131745338439941
    8. ' states' → logprob: -15.131745338439941
    9. '_st' → logprob: -15.506745338439941
    10. 'st' → logprob: -16.131746292114258

Token 2654: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08168181777000427
    2. '                   ' → logprob: -2.581681728363037
    3. ':
' → logprob: -6.831681728363037
    4. '               ' → logprob: -7.331681728363037
    5. '):' → logprob: -7.456681728363037
    6. '                       ' → logprob: -8.956682205200195
    7. ':' → logprob: -8.956682205200195
    8. '           ' → logprob: -9.706682205200195
    9. '```' → logprob: -10.206682205200195
    10. ']:
' → logprob: -10.956682205200195

Token 2655: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003745571244508028
    2. 'for' → logprob: -5.8787455558776855
    3. ' for' → logprob: -7.3787455558776855
    4. '```' → logprob: -8.753746032714844
    5. '                       ' → logprob: -9.503746032714844
    6. '                           ' → logprob: -10.503746032714844
    7. '		           ' → logprob: -10.878746032714844
    8. '               ' → logprob: -11.003746032714844
    9. '	               ' → logprob: -12.128746032714844
    10. '           ' → logprob: -12.753746032714844

Token 2656: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018276600167155266
    2. ' for' → logprob: -5.143276691436768
    3. 'dp' → logprob: -5.143276691436768
    4. 'k' → logprob: -6.393276691436768
    5. '                       ' → logprob: -6.643276691436768
    6. '                   ' → logprob: -6.893276691436768
    7. 'K' → logprob: -7.143276691436768
    8. 'if' → logprob: -7.268276691436768
    9. '0' → logprob: -8.01827621459961
    10. '                           ' → logprob: -8.64327621459961

Token 2657: ' sez' (ID: 50082)
  Prédit: 'sf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sf' → logprob: -0.1638319343328476
    2. 'c' → logprob: -2.788831949234009
    3. 's' → logprob: -3.038831949234009
    4. 'season' → logprob: -3.288831949234009
    5. ' sf' → logprob: -6.41383171081543
    6. 'k' → logprob: -7.03883171081543
    7. ' season' → logprob: -7.28883171081543
    8. ' c' → logprob: -8.28883171081543
    9. 'found' → logprob: -8.53883171081543
    10. 'f' → logprob: -8.53883171081543

Token 2658: ' in' (ID: 306)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.18114736676216125
    2. 'n' → logprob: -1.9311473369598389
    3. 'found' → logprob: -4.806147575378418
    4. ',' → logprob: -5.931147575378418
    5. '=' → logprob: -6.431147575378418
    6. ' ' → logprob: -6.556147575378418
    7. '   ' → logprob: -6.681147575378418
    8. ' in' → logprob: -7.056147575378418
    9. 'on' → logprob: -7.431147575378418
    10. 'u' → logprob: -7.556147575378418

Token 2659: ' range' (ID: 3352)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.020412135869264603
    2. 'K' → logprob: -4.270411968231201
    3. '0' → logprob: -5.145411968231201
    4. '(' → logprob: -8.89541244506836
    5. '                   ' → logprob: -9.02041244506836
    6. 'range' → logprob: -10.39541244506836
    7. '                           ' → logprob: -10.52041244506836
    8. '1' → logprob: -11.02041244506836
    9. '[K' → logprob: -11.27041244506836
    10. '                                   ' → logprob: -11.39541244506836

Token 2660: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.03955196961760521
    2. 'K' → logprob: -3.9145519733428955
    3. '0' → logprob: -4.039551734924316
    4. '(' → logprob: -7.539551734924316
    5. '                   ' → logprob: -8.289551734924316
    6. '                           ' → logprob: -9.039551734924316
    7. '[K' → logprob: -9.664551734924316
    8. '                                   ' → logprob: -9.789551734924316
    9. '                                           ' → logprob: -9.914551734924316
    10. '                               ' → logprob: -10.039551734924316

Token 2661: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016301481809932739
    2. ' +' → logprob: -8.750163078308105
    3. '+
' → logprob: -12.375163078308105
    4. ')+' → logprob: -15.875163078308105
    5. '＋' → logprob: -16.37516212463379
    6. '1' → logprob: -16.87516212463379
    7. '[' → logprob: -17.50016212463379
    8. '):
' → logprob: -17.62516212463379
    9. '                                           ' → logprob: -17.87516212463379
    10. '+[' → logprob: -18.00016212463379

Token 2662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003374599851667881
    2. '2' → logprob: -5.7533745765686035
    3. '+' → logprob: -8.753375053405762
    4. '
' → logprob: -11.128375053405762
    5. '```' → logprob: -11.503375053405762
    6. ' ' → logprob: -12.878375053405762
    7. '0' → logprob: -13.253375053405762
    8. '[' → logprob: -13.815875053405762
    9. '   ' → logprob: -14.128375053405762
    10. ')' → logprob: -14.190875053405762

Token 2663: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1248326450586319
    2. '+' → logprob: -2.9998326301574707
    3. '                       ' → logprob: -3.4998326301574707
    4. '):' → logprob: -3.8748326301574707
    5. '                               ' → logprob: -5.249832630157471
    6. '                   ' → logprob: -5.374832630157471
    7. '                           ' → logprob: -5.874832630157471
    8. ':' → logprob: -7.249832630157471
    9. ':
' → logprob: -7.749832630157471
    10. ')' → logprob: -8.124833106994629

Token 2664: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.17062684893608093
    2. '                               ' → logprob: -2.0456268787384033
    3. '                           ' → logprob: -3.9206268787384033
    4. ' if' → logprob: -5.795626640319824
    5. '                                   ' → logprob: -6.420626640319824
    6. 'if' → logprob: -6.670626640319824
    7. '                                               ' → logprob: -7.670626640319824
    8. '                                       ' → logprob: -8.170626640319824
    9. '```' → logprob: -8.170626640319824
    10. '                                           ' → logprob: -8.295626640319824

Token 2665: ' val' (ID: 1459)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.8791430592536926
    2. 'if' → logprob: -1.2541429996490479
    3. 'val' (adapté à ' val') → logprob: -2.129142999649048
    4. ' if' → logprob: -2.379142999649048
    5. ' val' → logprob: -3.254142999649048
    6. '                               ' → logprob: -3.379142999649048
    7. 'count' → logprob: -5.254143238067627
    8. '                       ' → logprob: -6.004143238067627
    9. 'cnt' → logprob: -6.129143238067627
    10. 'v' → logprob: -6.254143238067627

Token 2666: ' =' (ID: 314)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.2981938123703003
    2. '+=' → logprob: -1.2981938123703003
    3. '=' → logprob: -2.04819393157959
    4. '                       ' → logprob: -2.54819393157959
    5. '                               ' → logprob: -2.67319393157959
    6. ' +=' → logprob: -2.92319393157959
    7. ' =' → logprob: -3.67319393157959
    8. ',' → logprob: -3.92319393157959
    9. '```' → logprob: -3.92319393157959
    10. 'if' → logprob: -4.92319393157959

Token 2667: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006717267446219921
    2. ' dp' → logprob: -5.006717205047607
    3. '(dp' → logprob: -14.006717681884766
    4. '                           ' → logprob: -14.131717681884766
    5. '                       ' → logprob: -15.381717681884766
    6. '	dp' → logprob: -16.631717681884766
    7. '                               ' → logprob: -16.756717681884766
    8. '_dp' → logprob: -17.381717681884766
    9. '                                   ' → logprob: -18.006717681884766
    10. '```' → logprob: -18.506717681884766

Token 2668: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -2.6776029699249193e-05
    2. '_next' → logprob: -10.62502670288086
    3. '[cur' → logprob: -13.87502670288086
    4. 'cur' → logprob: -14.37502670288086
    5. '_curr' → logprob: -14.62502670288086
    6. 'Cur' → logprob: -16.12502670288086
    7. '_current' → logprob: -16.50002670288086
    8. '[_' → logprob: -16.62502670288086
    9. '_prev' → logprob: -17.25002670288086
    10. '_CUR' → logprob: -17.37502670288086

Token 2669: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -2.999452772201039e-05
    2. 'w' → logprob: -10.750029563903809
    3. '[' → logprob: -12.000029563903809
    4. '                       ' → logprob: -14.000029563903809
    5. '	w' → logprob: -15.375029563903809
    6. '[
' → logprob: -15.625029563903809
    7. '```' → logprob: -15.625029563903809
    8. '(w' → logprob: -15.750029563903809
    9. ' [' → logprob: -15.750029563903809
    10. '<w' → logprob: -16.000030517578125

Token 2670: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6430057883262634
    2. '][' → logprob: -0.7680057883262634
    3. '[w' → logprob: -5.143005847930908
    4. '                       ' → logprob: -7.268005847930908
    5. ')[' → logprob: -7.393005847930908
    6. ']' → logprob: -7.518005847930908
    7. '[s' → logprob: -7.518005847930908
    8. '                               ' → logprob: -8.26800537109375
    9. ')][' → logprob: -8.64300537109375
    10. '                           ' → logprob: -8.64300537109375

Token 2671: 'acs' (ID: 30834)
  Prédit: 'acs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acs' → logprob: -0.002510974183678627
    2. 's' → logprob: -6.127511024475098
    3. 'se' → logprob: -8.252511024475098
    4. 'ac' → logprob: -10.377511024475098
    5. '[' → logprob: -11.002511024475098
    6. '   ' → logprob: -12.127511024475098
    7. '
' → logprob: -12.627511024475098
    8. '           ' → logprob: -13.502511024475098
    9. '       ' → logprob: -13.877511024475098
    10. 'aces' → logprob: -14.502511024475098

Token 2672: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2606978714466095
    2. '                       ' → logprob: -2.135697841644287
    3. '][' → logprob: -3.010697841644287
    4. '                           ' → logprob: -3.635697841644287
    5. '[w' → logprob: -4.760697841644287
    6. '[' → logprob: -5.135697841644287
    7. ']*' → logprob: -5.260697841644287
    8. '                               ' → logprob: -5.385697841644287
    9. '])' → logprob: -5.760697841644287
    10. '[
' → logprob: -7.135697841644287

Token 2673: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.9361264946837764e-07
    2. '	se' → logprob: -16.75
    3. '
' → logprob: -17.125
    4. ' sez' → logprob: -18.5
    5. '(se' → logprob: -18.625
    6. 'sz' → logprob: -19.375
    7. ']' → logprob: -20.125
    8. 's' → logprob: -20.625
    9. 'zez' → logprob: -21.125
    10. 'Se' → logprob: -21.125

Token 2674: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -8.2994620242971e-06
    2. 'з' → logprob: -12.375008583068848
    3. '
' → logprob: -13.250008583068848
    4. '{
' → logprob: -14.500008583068848
    5. '	z' → logprob: -14.625008583068848
    6. '_z' → logprob: -15.625008583068848
    7. '```' → logprob: -16.25000762939453
    8. 'ز' → logprob: -16.50000762939453
    9. '\
' → logprob: -16.75000762939453
    10. ' z' → logprob: -16.75000762939453

Token 2675: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5259038209915161
    2. '                       ' → logprob: -1.4009038209915161
    3. '                           ' → logprob: -2.4009037017822266
    4. ']
' → logprob: -4.025903701782227
    5. 'if' → logprob: -4.400903701782227
    6. ')' → logprob: -5.025903701782227
    7. '
' → logprob: -5.275903701782227
    8. '+' → logprob: -5.525903701782227
    9. '                               ' → logprob: -5.650903701782227
    10. '                        ' → logprob: -5.900903701782227

Token 2676: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0821639895439148
    2. '                       ' → logprob: -2.8321640491485596
    3. '                               ' → logprob: -4.5821638107299805
    4. '                        ' → logprob: -5.9571638107299805
    5. '                            ' → logprob: -6.2071638107299805
    6. ' if' → logprob: -6.9571638107299805
    7. '```' → logprob: -6.9571638107299805
    8. '                         ' → logprob: -7.4571638107299805
    9. 'if' → logprob: -7.7071638107299805
    10. '                          ' → logprob: -7.8321638107299805

Token 2677: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8287286162376404
    2. '                           ' → logprob: -1.3287286758422852
    3. 'if' (adapté à ' if') → logprob: -1.4537286758422852
    4. '                       ' → logprob: -3.578728675842285
    5. '                               ' → logprob: -3.953728675842285
    6. ':' → logprob: -5.203728675842285
    7. '                            ' → logprob: -5.703728675842285
    8. ' :' → logprob: -5.953728675842285
    9. '                        ' → logprob: -6.328728675842285
    10. '                         ' → logprob: -7.328728675842285

Token 2678: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.12751559913158417
    2. 'val' → logprob: -2.1275155544281006
    3. ' not' → logprob: -7.62751579284668
    4. 'not' → logprob: -9.87751579284668
    5. '                           ' → logprob: -10.25251579284668
    6. '0' → logprob: -11.75251579284668
    7. '_val' → logprob: -13.25251579284668
    8. '                       ' → logprob: -13.62751579284668
    9. '                               ' → logprob: -13.75251579284668
    10. '	val' → logprob: -14.50251579284668

Token 2679: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6815524697303772
    2. ' ==' → logprob: -0.9315524697303772
    3. '>' → logprob: -2.4315524101257324
    4. ' >' → logprob: -4.681552410125732
    5. '!=' → logprob: -6.931552410125732
    6. ' !=' → logprob: -7.181552410125732
    7. '```' → logprob: -7.181552410125732
    8. '                           ' → logprob: -8.18155288696289
    9. '                               ' → logprob: -9.55655288696289
    10. ':' → logprob: -9.68155288696289

Token 2680: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. '                       ' → logprob: -15.500335693359375
    4. '```' → logprob: -15.875335693359375
    5. '                           ' → logprob: -16.125335693359375
    6. '                               ' → logprob: -17.250335693359375
    7. '>' → logprob: -17.250335693359375
    8. '                        ' → logprob: -19.125335693359375
    9. '                            ' → logprob: -19.125335693359375
    10. ':
' → logprob: -19.750335693359375

Token 2681: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '                       ' → logprob: -20.625
    4. '```' → logprob: -21.625
    5. '                           ' → logprob: -22.75
    6. '>' → logprob: -23.5
    7. '                               ' → logprob: -24.625
    8. '00' → logprob: -25.0
    9. '   ' → logprob: -25.0
    10. '=' → logprob: -25.0

Token 2682: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.18075750768184662
    2. ':' → logprob: -1.9307575225830078
    3. '                               ' → logprob: -4.555757522583008
    4. ':
' → logprob: -4.930757522583008
    5. '                       ' → logprob: -6.430757522583008
    6. '                                   ' → logprob: -8.055757522583008
    7. '                            ' → logprob: -8.555757522583008
    8. '                             ' → logprob: -9.930757522583008
    9. '                                           ' → logprob: -9.930757522583008
    10. '						' → logprob: -10.055757522583008

Token 2683: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.029007794335484505
    2. '                               ' → logprob: -3.654007911682129
    3. '                            ' → logprob: -7.404007911682129
    4. '                                   ' → logprob: -7.529007911682129
    5. '```' → logprob: -7.529007911682129
    6. ':
' → logprob: -8.529007911682129
    7. '                       ' → logprob: -8.779007911682129
    8. ':' → logprob: -8.779007911682129
    9. '                             ' → logprob: -9.029007911682129
    10. '                                           ' → logprob: -9.279007911682129

Token 2684: ' continue' (ID: 4901)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.6606605052947998
    2. '                           ' → logprob: -1.2856605052947998
    3. 'continue' (adapté à ' continue') → logprob: -1.9106605052947998
    4. ' continue' → logprob: -3.6606605052948
    5. '                                   ' → logprob: -4.035660743713379
    6. ':' → logprob: -5.535660743713379
    7. '                                       ' → logprob: -5.785660743713379
    8. '```' → logprob: -6.035660743713379
    9. '                                           ' → logprob: -6.410660743713379
    10. '                       ' → logprob: -6.535660743713379

Token 2685: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.18130698800086975
    2. '                           ' → logprob: -1.9313069581985474
    3. '
' → logprob: -5.056306838989258
    4. '                               ' → logprob: -5.306306838989258
    5. '```' → logprob: -5.431306838989258
    6. '                   ' → logprob: -6.931306838989258
    7. '           ' → logprob: -7.056306838989258
    8. '                        
' → logprob: -7.431306838989258
    9. '                                   ' → logprob: -8.181306838989258
    10. '\t' → logprob: -8.431306838989258

Token 2686: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0036972241941839457
    2. '                           ' → logprob: -6.128697395324707
    3. '```' → logprob: -7.503697395324707
    4. '                        
' → logprob: -7.878697395324707
    5. '                               ' → logprob: -9.128697395324707
    6. '					' → logprob: -9.378697395324707
    7. '                        ' → logprob: -9.628697395324707
    8. '                   ' → logprob: -9.753697395324707
    9. '           ' → logprob: -10.378697395324707
    10. '
' → logprob: -10.503697395324707

Token 2687: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07342740148305893
    2. '                       ' → logprob: -2.823427438735962
    3. ' for' → logprob: -4.823427200317383
    4. 'next' → logprob: -6.448427200317383
    5. '```' → logprob: -6.698427200317383
    6. '                           ' → logprob: -8.823427200317383
    7. '                   ' → logprob: -9.323427200317383
    8. '           ' → logprob: -9.948427200317383
    9. '``' → logprob: -9.948427200317383
    10. '                        
' → logprob: -10.073427200317383

Token 2688: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.0262290071696043
    2. 'nx' → logprob: -3.901228904724121
    3. 'n' → logprob: -5.651228904724121
    4. ' nw' → logprob: -7.401228904724121
    5. 'to' → logprob: -7.401228904724121
    6. 'w' → logprob: -8.276228904724121
    7. 'v' → logprob: -8.401228904724121
    8. 'nv' → logprob: -8.651228904724121
    9. 'tw' → logprob: -10.026228904724121
    10. 'nt' → logprob: -10.026228904724121

Token 2689: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014469155110418797
    2. 'in' → logprob: -4.889469146728516
    3. 'w' → logprob: -5.264469146728516
    4. '_word' → logprob: -7.889469146728516
    5. 'd' → logprob: -8.014469146728516
    6. 'i' → logprob: -8.389469146728516
    7. '_id' → logprob: -8.764469146728516
    8. '_in' → logprob: -9.514469146728516
    9. 'id' → logprob: -9.514469146728516
    10. 'ext' → logprob: -9.764469146728516

Token 2690: ' adj' (ID: 20251)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47249943017959595
    2. 'adj' → logprob: -1.3474993705749512
    3. ' in' → logprob: -2.222499370574951
    4. ' adj' → logprob: -4.847499370574951
    5. '(adj' → logprob: -8.59749984741211
    6. '                       ' → logprob: -9.47249984741211
    7. '_adj' → logprob: -9.59749984741211
    8. '                           ' → logprob: -9.97249984741211
    9. 'ad' → logprob: -10.72249984741211
    10. '(ad' → logprob: -11.47249984741211

Token 2691: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.001058890949934721
    2. '[' → logprob: -7.001059055328369
    3. '[n' → logprob: -9.126058578491211
    4. '[word' → logprob: -11.626058578491211
    5. 'w' → logprob: -11.751058578491211
    6. '               ' → logprob: -12.751058578491211
    7. ' in' → logprob: -13.001058578491211
    8. '       ' → logprob: -13.001058578491211
    9. '][' → logprob: -13.126058578491211
    10. '                       ' → logprob: -13.251058578491211

Token 2692: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.33104491233825684
    2. ']:
' → logprob: -1.3310449123382568
    3. '][' → logprob: -4.206045150756836
    4. ']' → logprob: -6.456045150756836
    5. ']:
' → logprob: -8.331045150756836
    6. '                       ' → logprob: -8.456045150756836
    7. '                   ' → logprob: -8.706045150756836
    8. ':' → logprob: -8.956045150756836
    9. '[w' → logprob: -9.706045150756836
    10. '].' → logprob: -9.706045150756836

Token 2693: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0008887103176675737
    2. '                               ' → logprob: -7.750888824462891
    3. '```' → logprob: -7.875888824462891
    4. '                            ' → logprob: -10.62588882446289
    5. 'for' → logprob: -11.87588882446289
    6. '                       ' → logprob: -11.87588882446289
    7. ' for' → logprob: -12.00088882446289
    8. '   ' → logprob: -12.12588882446289
    9. '                                   ' → logprob: -12.12588882446289
    10. ':' → logprob: -12.75088882446289

Token 2694: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0971587896347046
    2. 'acs' → logprob: -1.5971587896347046
    3. 'cur' → logprob: -1.8471587896347046
    4. 'ac' → logprob: -1.9721587896347046
    5. 'next' → logprob: -2.097158908843994
    6. 'new' → logprob: -4.472158908843994
    7. 'nc' → logprob: -4.722158908843994
    8. 'ns' → logprob: -5.472158908843994
    9. 'found' → logprob: -5.597158908843994
    10. '#' → logprob: -5.722158908843994

Token 2695: '_' (ID: 62)
  Prédit: '_ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ac' → logprob: -0.023481538519263268
    2. '_' → logprob: -4.023481369018555
    3. '_state' → logprob: -6.148481369018555
    4. 'acs' → logprob: -6.398481369018555
    5. 'ac' → logprob: -7.523481369018555
    6. '_cur' → logprob: -8.148481369018555
    7. '_dp' → logprob: -8.398481369018555
    8. '_se' → logprob: -9.273481369018555
    9. ' =' → logprob: -9.648481369018555
    10. '_w' → logprob: -10.023481369018555

Token 2696: 'acs' (ID: 30834)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.26380378007888794
    2. 'state' → logprob: -2.013803720474243
    3. 'acs' → logprob: -2.638803720474243
    4. '_state' → logprob: -4.888803958892822
    5. '_ac' → logprob: -5.138803958892822
    6. 'dp' → logprob: -5.388803958892822
    7. 'st' → logprob: -6.013803958892822
    8. '=' → logprob: -6.013803958892822
    9. ' =' → logprob: -7.763803958892822
    10. 's' → logprob: -7.888803958892822

Token 2697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002782173454761505
    2. ' =' → logprob: -6.252782344818115
    3. ']=' → logprob: -7.877782344818115
    4. ']' → logprob: -8.002781867980957
    5. '][' → logprob: -9.502781867980957
    6. '=
' → logprob: -11.252781867980957
    7. '=n' → logprob: -11.377781867980957
    8. '[' → logprob: -11.502781867980957
    9. '                           ' → logprob: -12.127781867980957
    10. '                               ' → logprob: -12.127781867980957

Token 2698: ' trans' (ID: 1643)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -1.700132997939363e-05
    2. ' trans' → logprob: -11.000017166137695
    3. 'ac' → logprob: -15.500017166137695
    4. '(trans' → logprob: -18.000017166137695
    5. '           ' → logprob: -18.750017166137695
    6. '                   ' → logprob: -18.875017166137695
    7. '               ' → logprob: -19.125017166137695
    8. '	trans' → logprob: -19.125017166137695
    9. '                           ' → logprob: -19.375017166137695
    10. '```' → logprob: -20.125017166137695

Token 2699: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00010163593105971813
    2. 'nw' → logprob: -9.500102043151855
    3. '```' → logprob: -11.500102043151855
    4. '
' → logprob: -12.125102043151855
    5. 'n' → logprob: -12.625102043151855
    6. '[
' → logprob: -13.000102043151855
    7. '[' → logprob: -14.000102043151855
    8. '   ' → logprob: -14.375102043151855
    9. '	n' → logprob: -14.750102043151855
    10. '           ' → logprob: -15.125102043151855

Token 2700: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00012451570364646614
    2. '[w' → logprob: -9.25012493133545
    3. '[n' → logprob: -10.50012493133545
    4. 'nw' → logprob: -14.87512493133545
    5. '[' → logprob: -15.50012493133545
    6. '```' → logprob: -15.62512493133545
    7. 'W' → logprob: -17.125123977661133
    8. ''w' → logprob: -17.250123977661133
    9. '
' → logprob: -17.375123977661133
    10. '_w' → logprob: -17.875123977661133

Token 2701: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.023306388407945633
    2. '[' → logprob: -3.773306369781494
    3. ''][' → logprob: -11.398306846618652
    4. '[w' → logprob: -11.648306846618652
    5. '[n' → logprob: -12.023306846618652
    6. ']][' → logprob: -12.148306846618652
    7. ']' → logprob: -12.398306846618652
    8. 'w' → logprob: -12.523306846618652
    9. ' ][' → logprob: -12.523306846618652
    10. '"][' → logprob: -12.773306846618652

Token 2702: 'acs' (ID: 30834)
  Prédit: 'acs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acs' → logprob: -5.512236498361744e-07
    2. 'ac' → logprob: -15.125000953674316
    3. '[' → logprob: -17.125
    4. '
' → logprob: -17.375
    5. ' ac' → logprob: -18.5
    6. '   ' → logprob: -18.75
    7. '```' → logprob: -18.875
    8. 'aces' → logprob: -19.25
    9. 'aps' → logprob: -19.5
    10. '`' → logprob: -19.875

Token 2703: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017344404477626085
    2. '[n' → logprob: -7.501734256744385
    3. '                           ' → logprob: -8.126734733581543
    4. '                       ' → logprob: -8.126734733581543
    5. '][' → logprob: -8.376734733581543
    6. '[w' → logprob: -9.126734733581543
    7. '[' → logprob: -9.876734733581543
    8. '])' → logprob: -9.876734733581543
    9. ']
' → logprob: -10.376734733581543
    10. '                               ' → logprob: -10.501734733581543

Token 2704: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0016982723027467728
    2. '                               ' → logprob: -7.7516984939575195
    3. ',' → logprob: -7.8766984939575195
    4. '                                   ' → logprob: -8.37669849395752
    5. '```' → logprob: -8.37669849395752
    6. '                            ' → logprob: -8.87669849395752
    7. '(se' → logprob: -9.62669849395752
    8. '                            
' → logprob: -10.00169849395752
    9. '                       ' → logprob: -10.37669849395752
    10. '[' → logprob: -11.00169849395752

Token 2705: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.003664325689896941
    2. 'f' → logprob: -5.878664493560791
    3. 'n' → logprob: -7.628664493560791
    4. 'if' → logprob: -9.003664016723633
    5. 'next' → logprob: -9.128664016723633
    6. 'new' → logprob: -9.753664016723633
    7. 'for' → logprob: -10.628664016723633
    8. 'se' → logprob: -10.753664016723633
    9. ' found' → logprob: -12.253664016723633
    10. 'nf' → logprob: -12.253664016723633

Token 2706: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20016250014305115
    2. '=' → logprob: -1.8251625299453735
    3. '=set' → logprob: -3.950162410736084
    4. 's' → logprob: -7.450162410736084
    5. '_set' → logprob: -8.825162887573242
    6. '_sets' → logprob: -9.575162887573242
    7. '_tokens' → logprob: -9.700162887573242
    8. '=s' → logprob: -10.700162887573242
    9. '={' → logprob: -11.450162887573242
    10. 'set' → logprob: -11.700162887573242

Token 2707: ' ac' (ID: 1375)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0009754245402291417
    2. ' secr' → logprob: -7.000975608825684
    3. 'ac' → logprob: -10.250975608825684
    4. 'secret' → logprob: -10.625975608825684
    5. ' secre' → logprob: -12.875975608825684
    6. 'sec' → logprob: -14.125975608825684
    7. '	se' → logprob: -15.125975608825684
    8. '(se' → logprob: -15.625975608825684
    9. ' secrets' → logprob: -15.750975608825684
    10. 'secs' → logprob: -16.500974655151367

Token 2708: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.02258428744971752
    2. 'r' → logprob: -4.022584438323975
    3. 'output' → logprob: -5.522584438323975
    4. '.se' → logprob: -8.647583961486816
    5. 'er' → logprob: -9.647583961486816
    6. '```' → logprob: -10.147583961486816
    7. 's' → logprob: -10.272583961486816
    8. 'rs' → logprob: -11.397583961486816
    9. 'Se' → logprob: -11.647583961486816
    10. '[' → logprob: -11.772583961486816

Token 2709: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.421908958349377e-05
    2. 'n' → logprob: -10.37507438659668
    3. '[cur' → logprob: -10.50007438659668
    4. 'cur' → logprob: -11.37507438659668
    5. '[' → logprob: -13.25007438659668
    6. '(n' → logprob: -14.62507438659668
    7. '[
' → logprob: -14.75007438659668
    8. '```' → logprob: -15.12507438659668
    9. '[next' → logprob: -15.75007438659668
    10. '           ' → logprob: -16.00007438659668

Token 2710: 'xt' (ID: 711)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.078526072204113
    2. 'n' → logprob: -2.703526020050049
    3. 't' → logprob: -5.328526020050049
    4. 'x' → logprob: -6.578526020050049
    5. 'xt' → logprob: -6.953526020050049
    6. 'w' → logprob: -7.078526020050049
    7. 'nw' → logprob: -8.203526496887207
    8. '[' → logprob: -9.578526496887207
    9. 's' → logprob: -10.328526496887207
    10. 'trans' → logprob: -10.703526496887207

Token 2711: '_' (ID: 62)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5108798742294312
    2. 'acs' → logprob: -1.3858798742294312
    3. 'cs' → logprob: -3.1358799934387207
    4. 'n' → logprob: -3.3858799934387207
    5. 'nw' → logprob: -3.3858799934387207
    6. 's' → logprob: -3.5108799934387207
    7. '[' → logprob: -7.010879993438721
    8. '
' → logprob: -7.010879993438721
    9. 'w' → logprob: -7.260879993438721
    10. '[w' → logprob: -7.260879993438721

Token 2712: 'acs' (ID: 30834)
  Prédit: 'acs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acs' → logprob: -0.0932789221405983
    2. 'nw' → logprob: -2.4682788848876953
    3. 'w' → logprob: -5.718278884887695
    4. 'n' → logprob: -8.218278884887695
    5. '[n' → logprob: -8.218278884887695
    6. 'cs' → logprob: -8.718278884887695
    7. '[w' → logprob: -9.218278884887695
    8. '
' → logprob: -9.468278884887695
    9. 'ac' → logprob: -10.093278884887695
    10. '[' → logprob: -10.843278884887695

Token 2713: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4401080012321472
    2. ']' → logprob: -1.315108060836792
    3. '                       ' → logprob: -2.565108060836792
    4. '                           ' → logprob: -5.315107822418213
    5. '].' → logprob: -5.815107822418213
    6. '                   ' → logprob: -8.315108299255371
    7. '                               ' → logprob: -8.565108299255371
    8. '                                   ' → logprob: -8.565108299255371
    9. '|' → logprob: -8.690108299255371
    10. '                        
' → logprob: -8.690108299255371

Token 2714: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03830862417817116
    2. '                       ' → logprob: -3.663308620452881
    3. '                            
' → logprob: -5.913308620452881
    4. 'if' → logprob: -6.288308620452881
    5. '
' → logprob: -6.663308620452881
    6. '                               ' → logprob: -6.788308620452881
    7. ' if' → logprob: -7.038308620452881
    8. '=' → logprob: -7.163308620452881
    9. '(se' → logprob: -7.663308620452881
    10. ' =' → logprob: -7.913308620452881

Token 2715: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07421784847974777
    2. ' if' → logprob: -3.4492177963256836
    3. '                           ' → logprob: -3.6992177963256836
    4. 'season' → logprob: -5.199217796325684
    5. '                       ' → logprob: -6.074217796325684
    6. '                               ' → logprob: -6.199217796325684
    7. '#' (adapté à ' #') → logprob: -6.324217796325684
    8. 'val' → logprob: -7.324217796325684
    9. 'found' → logprob: -7.574217796325684
    10. 'se' → logprob: -7.574217796325684

Token 2716: ' checked' (ID: 15579)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010627535171806812
    2. '#' → logprob: -5.635627746582031
    3. 'found' → logprob: -5.885627746582031
    4. 'season' → logprob: -5.885627746582031
    5. '                           ' → logprob: -7.510627746582031
    6. '```' → logprob: -8.510627746582031
    7. 'se' → logprob: -8.635627746582031
    8. '                               ' → logprob: -9.135627746582031
    9. 'for' → logprob: -9.260627746582031
    10. 'new' → logprob: -9.385627746582031

Token 2717: ' multiples' (ID: 70720)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6198199987411499
    2. '                           ' → logprob: -0.9948199987411499
    3. '                       ' → logprob: -3.1198201179504395
    4. ' if' → logprob: -3.8698201179504395
    5. '                               ' → logprob: -3.9948201179504395
    6. '```' → logprob: -4.9948201179504395
    7. '                                   ' → logprob: -8.119819641113281
    8. ' =' → logprob: -8.619819641113281
    9. '#' → logprob: -8.619819641113281
    10. 'found' → logprob: -8.869819641113281

Token 2718: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.880403995513916
    2. 'if' → logprob: -1.005403995513916
    3. '                           ' → logprob: -1.755403995513916
    4. 'found' → logprob: -4.130403995513916
    5. '                               ' → logprob: -5.005403995513916
    6. ' if' → logprob: -5.005403995513916
    7. '```' → logprob: -5.380403995513916
    8. '=' → logprob: -6.005403995513916
    9. ':' → logprob: -6.130403995513916
    10. ' =' → logprob: -6.255403995513916

Token 2719: '                           ' (ID: 1686)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5176325440406799
    2. '                           ' → logprob: -1.0176324844360352
    3. 'if' → logprob: -3.767632484436035
    4. '                               ' → logprob: -5.017632484436035
    5. '```' → logprob: -5.142632484436035
    6. ' =' → logprob: -6.017632484436035
    7. ' if' → logprob: -6.767632484436035
    8. ':' → logprob: -6.892632484436035
    9. '=' → logprob: -7.642632484436035
    10. ',' → logprob: -8.017632484436035

Token 2720: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03748554736375809
    2. '                           ' → logprob: -3.6624855995178223
    3. ' if' → logprob: -5.037485599517822
    4. 'found' → logprob: -5.912485599517822
    5. 'season' → logprob: -6.912485599517822
    6. '```' → logprob: -8.162485122680664
    7. 'se' → logprob: -8.162485122680664
    8. '                               ' → logprob: -8.662485122680664
    9. '                                   ' → logprob: -10.162485122680664
    10. '#' → logprob: -10.162485122680664

Token 2721: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00997623335570097
    2. 'not' → logprob: -5.509976387023926
    3. '(len' → logprob: -6.134976387023926
    4. 'found' → logprob: -6.134976387023926
    5. 'se' → logprob: -6.884976387023926
    6. '(se' → logprob: -8.009976387023926
    7. ' len' → logprob: -8.884976387023926
    8. '(found' → logprob: -11.009976387023926
    9. '(' → logprob: -11.259976387023926
    10. '(not' → logprob: -11.384976387023926

Token 2722: '(found' (ID: 105397)
  Prédit: '(found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(found' → logprob: -1.747814349073451e-05
    2. 'found' → logprob: -11.000017166137695
    3. '(' → logprob: -14.750017166137695
    4. '>' → logprob: -16.375017166137695
    5. '(f' → logprob: -16.500017166137695
    6. '==' → logprob: -17.000017166137695
    7. '(
' → logprob: -17.250017166137695
    8. '	found' → logprob: -17.625017166137695
    9. ' found' → logprob: -18.375017166137695
    10. 'Found' → logprob: -18.375017166137695

Token 2723: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2113812267780304
    2. ')' → logprob: -2.336381196975708
    3. '==' → logprob: -3.086381196975708
    4. '!=' → logprob: -3.961381196975708
    5. '<=' → logprob: -4.461381435394287
    6. ' !=' → logprob: -4.961381435394287
    7. ' >' → logprob: -5.211381435394287
    8. ')>' → logprob: -6.336381435394287
    9. ' ==' → logprob: -6.711381435394287
    10. ' <=' → logprob: -7.211381435394287

Token 2724: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.669916033744812
    2. '==' → logprob: -1.169916033744812
    3. '<=' → logprob: -2.4199161529541016
    4. '!=' → logprob: -3.0449161529541016
    5. ' ==' → logprob: -4.294916152954102
    6. ' >' → logprob: -4.419916152954102
    7. ' !=' → logprob: -4.669916152954102
    8. ' <=' → logprob: -5.294916152954102
    9. '                           ' → logprob: -7.294916152954102
    10. '```' → logprob: -9.044916152954102

Token 2725: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019450569525361061
    2. '0' → logprob: -6.2519450187683105
    3. ' ' → logprob: -11.626945495605469
    4. '   ' → logprob: -12.376945495605469
    5. '
' → logprob: -13.251945495605469
    6. '```' → logprob: -14.376945495605469
    7. ' ' → logprob: -16.25194549560547
    8. '  ' → logprob: -16.37694549560547
    9. '       ' → logprob: -16.37694549560547
    10. '>' → logprob: -16.50194549560547

Token 2726: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.656383680412546e-05
    2. '0' → logprob: -10.125046730041504
    3. '```' → logprob: -12.125046730041504
    4. ' ' → logprob: -14.500046730041504
    5. '
' → logprob: -14.875046730041504
    6. '   ' → logprob: -16.125045776367188
    7. '>' → logprob: -16.375045776367188
    8. '``' → logprob: -17.000045776367188
    9. ' ' → logprob: -18.125045776367188
    10. '' → logprob: -18.750045776367188

Token 2727: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0110780000686646
    2. '                           ' → logprob: -1.1360780000686646
    3. ':
' → logprob: -2.261077880859375
    4. '                               ' → logprob: -2.511077880859375
    5. ' and' → logprob: -2.761077880859375
    6. ' or' → logprob: -3.136077880859375
    7. '```' → logprob: -5.011077880859375
    8. '                       ' → logprob: -5.136077880859375
    9. 'and' → logprob: -5.386077880859375
    10. '                                   ' → logprob: -6.761077880859375

Token 2728: '                               ' (ID: 2419)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.666397750377655
    2. '                               ' → logprob: -0.791397750377655
    3. ':' → logprob: -4.541397571563721
    4. ':
' → logprob: -4.541397571563721
    5. '```' → logprob: -5.541397571563721
    6. 'continue' → logprob: -6.291397571563721
    7. ' or' → logprob: -6.416397571563721
    8. '                       ' → logprob: -6.791397571563721
    9. ' and' → logprob: -6.916397571563721
    10. '                                   ' → logprob: -7.541397571563721

Token 2729: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.020462235435843468
    2. '                               ' → logprob: -4.2704620361328125
    3. '                                   ' → logprob: -5.2704620361328125
    4. ' continue' → logprob: -7.6454620361328125
    5. '                           ' → logprob: -7.7704620361328125
    6. '```' → logprob: -8.895462036132812
    7. '                                       ' → logprob: -9.895462036132812
    8. '   ' → logprob: -10.520462036132812
    9. '                                           ' → logprob: -11.520462036132812
    10. '                       ' → logprob: -13.145462036132812

Token 2730: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.27621638774871826
    2. '```' → logprob: -2.026216506958008
    3. '                       ' → logprob: -2.276216506958008
    4. 'if' → logprob: -6.026216506958008
    5. '``' → logprob: -6.401216506958008
    6. '
' → logprob: -6.776216506958008
    7. '                               ' → logprob: -7.526216506958008
    8. '                            
' → logprob: -7.776216506958008
    9. '                        
' → logprob: -8.151216506958008
    10. ' if' → logprob: -9.026216506958008

Token 2731: '                           ' (ID: 1686)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.531662106513977
    2. '```' → logprob: -1.531662106513977
    3. 'if' → logprob: -2.0316619873046875
    4. '                           ' → logprob: -2.7816619873046875
    5. 'elif' → logprob: -7.0316619873046875
    6. ' if' → logprob: -7.1566619873046875
    7. '``' → logprob: -7.4066619873046875
    8. '                               ' → logprob: -7.9066619873046875
    9. '
' → logprob: -9.031661987304688
    10. '                        
' → logprob: -9.656661987304688

Token 2732: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.29767748713493347
    2. '                           ' → logprob: -1.6726775169372559
    3. '                       ' → logprob: -3.297677516937256
    4. ' if' → logprob: -3.547677516937256
    5. 'found' → logprob: -5.922677516937256
    6. '                               ' → logprob: -8.047677040100098
    7. 's' → logprob: -8.297677040100098
    8. ' found' → logprob: -9.172677040100098
    9. '                            
' → logprob: -9.172677040100098
    10. 'for' → logprob: -9.297677040100098

Token 2733: ' len' (ID: 4631)
  Prédit: ' sez'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sez' → logprob: -0.39581605792045593
    2. 'len' → logprob: -1.6458160877227783
    3. ' len' → logprob: -2.7708160877227783
    4. 'se' → logprob: -2.7708160877227783
    5. ' found' → logprob: -5.645815849304199
    6. 'found' → logprob: -6.270815849304199
    7. ' sezon' → logprob: -6.395815849304199
    8. '(se' → logprob: -7.895815849304199
    9. '(len' → logprob: -8.1458158493042
    10. ' sze' → logprob: -8.8958158493042

Token 2734: '(found' (ID: 105397)
  Prédit: '(found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(found' → logprob: -2.176947600673884e-05
    2. 'found' → logprob: -10.750021934509277
    3. '	found' → logprob: -16.25002098083496
    4. '
' → logprob: -16.62502098083496
    5. '==' → logprob: -17.37502098083496
    6. '(' → logprob: -17.87502098083496
    7. '(
' → logprob: -18.62502098083496
    8. ' found' → logprob: -19.00002098083496
    9. '```' → logprob: -19.12502098083496
    10. '1' → logprob: -19.50002098083496

Token 2735: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6994850635528564
    2. ' ==' → logprob: -0.6994850635528564
    3. ')' → logprob: -5.324484825134277
    4. ')==' → logprob: -6.574484825134277
    5. ']==' → logprob: -10.949484825134277
    6. '()==' → logprob: -11.324484825134277
    7. ' !=' → logprob: -12.449484825134277
    8. '==
' → logprob: -12.699484825134277
    9. '===' → logprob: -12.949484825134277
    10. '```' → logprob: -13.074484825134277

Token 2736: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10023697465658188
    2. ' ==' → logprob: -2.3502368927001953
    3. '()==' → logprob: -12.100236892700195
    4. '```' → logprob: -12.100236892700195
    5. ')==' → logprob: -12.225236892700195
    6. '==
' → logprob: -12.725236892700195
    7. '!=' → logprob: -12.975236892700195
    8. '===' → logprob: -13.100236892700195
    9. ' !=' → logprob: -13.225236892700195
    10. '>' → logprob: -13.225236892700195

Token 2737: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001044124481268227
    2. '0' → logprob: -6.876044273376465
    3. ' ' → logprob: -12.001044273376465
    4. '```' → logprob: -12.376044273376465
    5. '
' → logprob: -15.251044273376465
    6. '=' → logprob: -15.751044273376465
    7. '==' → logprob: -16.00104331970215
    8. '``' → logprob: -16.12604331970215
    9. '   ' → logprob: -16.87604331970215
    10. '           ' → logprob: -17.25104331970215

Token 2738: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1798134446144104
    2. '0' → logprob: -1.8048133850097656
    3. '```' → logprob: -10.179813385009766
    4. '
' → logprob: -10.804813385009766
    5. ' ' → logprob: -11.929813385009766
    6. '``' → logprob: -14.554813385009766
    7. '[' → logprob: -14.679813385009766
    8. '==' → logprob: -14.679813385009766
    9. '   ' → logprob: -14.929813385009766
    10. '{
' → logprob: -14.929813385009766

Token 2739: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5013099312782288
    2. ':
' → logprob: -1.001309871673584
    3. ':' → logprob: -3.876309871673584
    4. '                           ' → logprob: -6.376309871673584
    5. '                                   ' → logprob: -6.626309871673584
    6. '==' → logprob: -7.376309871673584
    7. '):
' → logprob: -7.376309871673584
    8. ' and' → logprob: -7.501309871673584
    9. '{s' → logprob: -8.501310348510742
    10. '=' → logprob: -8.626310348510742

Token 2740: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.052661191672086716
    2. 's' → logprob: -3.802661180496216
    3. '```' → logprob: -5.052661418914795
    4. ' s' → logprob: -5.552661418914795
    5. ':
' → logprob: -5.552661418914795
    6. '                                   ' → logprob: -6.052661418914795
    7. '                           ' → logprob: -6.052661418914795
    8. '``' → logprob: -6.552661418914795
    9. '{
' → logprob: -6.552661418914795
    10. '{' → logprob: -6.802661418914795

Token 2741: ' f' (ID: 285)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5263748168945312
    2. 'f' (adapté à ' f') → logprob: -1.5263748168945312
    3. 'found' → logprob: -2.2763748168945312
    4. '(s' → logprob: -3.4013748168945312
    5. '                               ' → logprob: -4.276374816894531
    6. 'next' → logprob: -4.401374816894531
    7. ' s' → logprob: -4.901374816894531
    8. '(f' → logprob: -5.651374816894531
    9. ' f' → logprob: -5.651374816894531
    10. '(found' → logprob: -6.401374816894531

Token 2742: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37904760241508484
    2. ' =' → logprob: -1.7540476322174072
    3. '=' → logprob: -2.8790476322174072
    4. '_s' → logprob: -3.1290476322174072
    5. 'f' → logprob: -3.3790476322174072
    6. '_f' → logprob: -5.629047393798828
    7. '_idx' → logprob: -6.629047393798828
    8. 'irst' → logprob: -7.004047393798828
    9. 'ound' → logprob: -7.254047393798828
    10. 'idx' → logprob: -7.879047393798828

Token 2743: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.32263413071632385
    2. 'list' → logprob: -1.5726341009140015
    3. 'found' → logprob: -2.822634220123291
    4. ' next' → logprob: -5.322634220123291
    5. '(next' → logprob: -5.697634220123291
    6. ' list' → logprob: -7.947634220123291
    7. '(found' → logprob: -9.572633743286133
    8. ' found' → logprob: -10.197633743286133
    9. '[next' → logprob: -10.197633743286133
    10. '(list' → logprob: -10.447633743286133

Token 2744: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -2.339278580620885e-06
    2. 'iter' → logprob: -13.000001907348633
    3. '	iter' → logprob: -17.500001907348633
    4. '                   ' → logprob: -19.250001907348633
    5. '(
' → logprob: -19.500001907348633
    6. '   ' → logprob: -19.500001907348633
    7. ' iter' → logprob: -19.625001907348633
    8. '(i' → logprob: -20.000001907348633
    9. '(iterator' → logprob: -20.000001907348633
    10. '                       ' → logprob: -20.000001907348633

Token 2745: '(found' (ID: 105397)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.4740847051143646
    2. '(found' → logprob: -0.974084734916687
    3. 'Found' → logprob: -12.349084854125977
    4. '	found' → logprob: -12.974084854125977
    5. ' found' → logprob: -14.099084854125977
    6. '_found' → logprob: -15.474084854125977
    7. '(f' → logprob: -17.099084854125977
    8. 'f' → logprob: -17.724084854125977
    9. 'FOUND' → logprob: -17.724084854125977
    10. '-found' → logprob: -18.974084854125977

Token 2746: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03396746888756752
    2. ')' → logprob: -3.4089674949645996
    3. '                               ' → logprob: -8.283967018127441
    4. '())
' → logprob: -10.283967018127441
    5. '))
' → logprob: -11.033967018127441
    6. '                           ' → logprob: -12.283967018127441
    7. '                                   ' → logprob: -12.783967018127441
    8. ')
' → logprob: -12.783967018127441
    9. ')

' → logprob: -13.408967018127441
    10. ')}
' → logprob: -13.783967018127441

Token 2747: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.004912092816084623
    2. '                                   ' → logprob: -6.00491189956665
    3. '```' → logprob: -6.50491189956665
    4. 'if' → logprob: -8.129912376403809
    5. '                                
' → logprob: -8.879912376403809
    6. '                           ' → logprob: -9.004912376403809
    7. ' if' → logprob: -9.254912376403809
    8. '                                ' → logprob: -9.754912376403809
    9. '
' → logprob: -10.129912376403809
    10. '                                       ' → logprob: -10.254912376403809

Token 2748: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02927873097360134
    2. ' if' → logprob: -3.7792787551879883
    3. '```' → logprob: -5.779278755187988
    4. '                               ' → logprob: -5.904278755187988
    5. 'season' → logprob: -9.404278755187988
    6. '                                   ' → logprob: -9.654278755187988
    7. '``' → logprob: -10.779278755187988
    8. '                           ' → logprob: -11.279278755187988
    9. 'se' → logprob: -12.654278755187988
    10. '#' → logprob: -12.904278755187988

Token 2749: ' sez' (ID: 50082)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.47918346524238586
    2. ' sez' → logprob: -0.9791834354400635
    3. 'f' → logprob: -6.854183673858643
    4. '(se' → logprob: -7.104183673858643
    5. 's' → logprob: -7.354183673858643
    6. ' sezon' → logprob: -7.729183673858643
    7. 'season' → logprob: -7.854183673858643
    8. '                               ' → logprob: -8.104183197021484
    9. ' se' → logprob: -8.104183197021484
    10. ' f' → logprob: -8.354183197021484

Token 2750: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7800341844558716
    2. ' ==' → logprob: -1.4050341844558716
    3. ' !=' → logprob: -1.6550341844558716
    4. '!=' → logprob: -2.280034065246582
    5. '                               ' → logprob: -6.905034065246582
    6. '```' → logprob: -7.405034065246582
    7. '                                   ' → logprob: -8.405034065246582
    8. ')' → logprob: -8.905034065246582
    9. '							' → logprob: -9.030034065246582
    10. '=' → logprob: -9.030034065246582

Token 2751: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002008102834224701
    2. 'f' → logprob: -6.252007961273193
    3. ' ' → logprob: -9.752008438110352
    4. '                               ' → logprob: -11.627008438110352
    5. 's' → logprob: -12.877008438110352
    6. '                                   ' → logprob: -13.377008438110352
    7. ' f' → logprob: -13.502008438110352
    8. '                                ' → logprob: -13.627008438110352
    9. 'w' → logprob: -13.752008438110352
    10. '1' → logprob: -13.877008438110352

Token 2752: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002651503309607506
    2. 'f' → logprob: -8.250265121459961
    3. ' ' → logprob: -13.000265121459961
    4. '1' → logprob: -14.625265121459961
    5. 's' → logprob: -15.125265121459961
    6. 'w' → logprob: -16.12526512145996
    7. ' f' → logprob: -16.37526512145996
    8. '                               ' → logprob: -16.50026512145996
    9. '                                   ' → logprob: -16.75026512145996
    10. '```' → logprob: -16.75026512145996

Token 2753: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8612799048423767
    2. '                                   ' → logprob: -1.1112799644470215
    3. ' and' → logprob: -2.2362799644470215
    4. ':
' → logprob: -2.3612799644470215
    5. '                               ' → logprob: -3.8612799644470215
    6. ' or' → logprob: -4.8612799644470215
    7. '==' → logprob: -4.9862799644470215
    8. '                           ' → logprob: -5.7362799644470215
    9. 'and' → logprob: -6.4862799644470215
    10. '```' → logprob: -6.4862799644470215

Token 2754: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.004873181227594614
    2. ' and' → logprob: -6.004873275756836
    3. '```' → logprob: -7.004873275756836
    4. '                               ' → logprob: -7.504873275756836
    5. ':
' → logprob: -8.504873275756836
    6. '                                    ' → logprob: -8.879873275756836
    7. '                                       ' → logprob: -9.379873275756836
    8. '                                  ' → logprob: -9.379873275756836
    9. 'if' → logprob: -9.754873275756836
    10. '                                 ' → logprob: -9.879873275756836

Token 2755: ' sez' (ID: 50082)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4558223485946655
    2. 'season' → logprob: -1.8308223485946655
    3. 'se' → logprob: -2.580822467803955
    4. '                                   ' → logprob: -2.955822467803955
    5. '```' → logprob: -3.705822467803955
    6. '                                       ' → logprob: -3.705822467803955
    7. ' f' → logprob: -4.830822467803955
    8. '                               ' → logprob: -5.080822467803955
    9. 's' → logprob: -5.455822467803955
    10. '_se' → logprob: -5.705822467803955

Token 2756: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2527611255645752
    2. ' =' → logprob: -1.5027611255645752
    3. '=f' → logprob: -7.127760887145996
    4. '+=' → logprob: -11.377760887145996
    5. ' +=' → logprob: -12.252760887145996
    6. '=
' → logprob: -12.752760887145996
    7. '                                   ' → logprob: -12.877760887145996
    8. '                               ' → logprob: -13.127760887145996
    9. '=s' → logprob: -13.377760887145996
    10. '+' → logprob: -14.252760887145996

Token 2757: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029762759804725647
    2. ' =' → logprob: -3.5297627449035645
    3. '=
' → logprob: -12.029763221740723
    4. '=f' → logprob: -12.279763221740723
    5. '                               ' → logprob: -14.904763221740723
    6. '```' → logprob: -15.154763221740723
    7. '                                   ' → logprob: -15.279763221740723
    8. '=True' → logprob: -15.779763221740723
    9. '_=' → logprob: -16.279762268066406
    10. '=s' → logprob: -16.279762268066406

Token 2758: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.392202976712724e-06
    2. ' f' → logprob: -12.000006675720215
    3. '                               ' → logprob: -15.750006675720215
    4. '                                   ' → logprob: -17.0000057220459
    5. '	f' → logprob: -17.7500057220459
    6. '
' → logprob: -19.2500057220459
    7. '```' → logprob: -19.8750057220459
    8. '                                       ' → logprob: -20.0000057220459
    9. '                                ' → logprob: -20.3750057220459
    10. '$f' → logprob: -20.8750057220459

Token 2759: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2760: '                               ' (ID: 2419)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.604521632194519
    2. '                               ' → logprob: -0.854521632194519
    3. '                                   ' → logprob: -4.604521751403809
    4. '
' → logprob: -4.729521751403809
    5. ' else' → logprob: -5.229521751403809
    6. 'elif' → logprob: -6.104521751403809
    7. '```' → logprob: -6.729521751403809
    8. '                                    
' → logprob: -9.104521751403809
    9. '                                
' → logprob: -9.604521751403809
    10. '                       ' → logprob: -9.729521751403809

Token 2761: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.32718709111213684
    2. '                               ' → logprob: -1.3271870613098145
    3. 'elif' → logprob: -4.3271870613098145
    4. ' else' → logprob: -7.9521870613098145
    5. '                                   ' → logprob: -8.577187538146973
    6. '```' → logprob: -9.952187538146973
    7. '                           ' → logprob: -11.327187538146973
    8. '
' → logprob: -11.827187538146973
    9. ' elif' → logprob: -12.577187538146973
    10. '                       ' → logprob: -12.577187538146973

Token 2762: ':
' (ID: 734)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.4566397964954376
    2. ' if' → logprob: -1.2066397666931152
    3. '                               ' → logprob: -3.8316397666931152
    4. '                                       ' → logprob: -3.8316397666931152
    5. 'if' → logprob: -4.581639766693115
    6. ':
' → logprob: -5.331639766693115
    7. '                                           ' → logprob: -6.206639766693115
    8. ':' → logprob: -6.331639766693115
    9. '                                    ' → logprob: -7.081639766693115
    10. '                                  ' → logprob: -7.206639766693115

Token 2763: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.7627384066581726
    2. ' if' → logprob: -1.2627384662628174
    3. '                                       ' → logprob: -1.7627384662628174
    4. '                               ' → logprob: -3.6377384662628174
    5. '```' → logprob: -4.012738227844238
    6. '                                           ' → logprob: -4.387738227844238
    7. 'if' → logprob: -5.012738227844238
    8. '                                    ' → logprob: -5.262738227844238
    9. '                                     ' → logprob: -5.637738227844238
    10. ' continue' → logprob: -6.637738227844238

Token 2764: ' if' (ID: 538)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.13032865524291992
    2. 'if' (adapté à ' if') → logprob: -2.25532865524292
    3. 'continue' → logprob: -4.25532865524292
    4. '                                   ' → logprob: -6.38032865524292
    5. '                               ' → logprob: -6.75532865524292
    6. '                           ' → logprob: -9.255329132080078
    7. ' if' → logprob: -9.630329132080078
    8. '```' → logprob: -9.880329132080078
    9. '                                       ' → logprob: -11.005329132080078
    10. '                                           ' → logprob: -11.255329132080078

Token 2765: ' sez' (ID: 50082)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.23010419309139252
    2. 'f' → logprob: -1.6051042079925537
    3. ' f' → logprob: -5.855103969573975
    4. ' sez' → logprob: -6.980103969573975
    5. 's' → logprob: -7.355103969573975
    6. '(se' → logprob: -9.480104446411133
    7. ' se' → logprob: -9.730104446411133
    8. '	se' → logprob: -10.480104446411133
    9. '                               ' → logprob: -11.730104446411133
    10. '                           ' → logprob: -11.730104446411133

Token 2766: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.19552770256996155
    2. '==' → logprob: -2.4455277919769287
    3. ' !=' → logprob: -2.6955277919769287
    4. '2' → logprob: -4.32052755355835
    5. '                                   ' → logprob: -5.32052755355835
    6. ' ==' → logprob: -6.07052755355835
    7. '```' → logprob: -6.57052755355835
    8. ']!=' → logprob: -8.445528030395508
    9. '                               ' → logprob: -8.570528030395508
    10. '								' → logprob: -8.570528030395508

Token 2767: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.018155328929424286
    2. ' f' → logprob: -4.018155097961426
    3. '                               ' → logprob: -12.518155097961426
    4. '                                   ' → logprob: -13.518155097961426
    5. '
' → logprob: -16.518156051635742
    6. '	f' → logprob: -16.518156051635742
    7. '                                       ' → logprob: -16.768156051635742
    8. '                                ' → logprob: -17.143156051635742
    9. ' ' → logprob: -17.393156051635742
    10. '```' → logprob: -17.893156051635742

Token 2768: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.403543621301651
    2. '                                       ' → logprob: -1.2785435914993286
    3. '                                   ' → logprob: -3.278543710708618
    4. ':' → logprob: -5.278543472290039
    5. '                               ' → logprob: -5.528543472290039
    6. '```' → logprob: -5.653543472290039
    7. '):
' → logprob: -6.778543472290039
    8. '                                           ' → logprob: -7.153543472290039
    9. '==' → logprob: -8.528543472290039
    10. 'else' → logprob: -8.778543472290039

Token 2769: '                                       ' (ID: 4754)
  Prédit: '                                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.00398876192048192
    2. '                                   ' → logprob: -6.253988742828369
    3. '```' → logprob: -7.253988742828369
    4. '                                           ' → logprob: -7.503988742828369
    5. ':
' → logprob: -7.878988742828369
    6. '                               ' → logprob: -8.628989219665527
    7. '                                      ' → logprob: -9.753989219665527
    8. '                                     ' → logprob: -9.878989219665527
    9. '                                        ' → logprob: -10.878989219665527
    10. '                                               ' → logprob: -10.878989219665527

Token 2770: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10602102428674698
    2. ' continue' → logprob: -2.356020927429199
    3. '                                   ' → logprob: -6.356020927429199
    4. '                                       ' → logprob: -6.731020927429199
    5. 'se' → logprob: -6.981020927429199
    6. '```' → logprob: -7.356020927429199
    7. '                                           ' → logprob: -8.2310209274292
    8. 'val' → logprob: -8.3560209274292
    9. '                               ' → logprob: -9.1060209274292
    10. ' val' → logprob: -9.4810209274292

Token 2771: ' deuxième' (ID: 51664)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.06001107394695282
    2. 'se' → logprob: -3.185011148452759
    3. '#' → logprob: -5.68501091003418
    4. 'val' → logprob: -5.81001091003418
    5. 'n' → logprob: -6.06001091003418
    6. '                                   ' → logprob: -6.31001091003418
    7. '```' → logprob: -6.31001091003418
    8. ' continue' → logprob: -6.68501091003418
    9. '                                       ' → logprob: -7.43501091003418
    10. 'dp' → logprob: -7.56001091003418

Token 2772: ' apparition' (ID: 199609)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.6101725697517395
    2. ' apparition' → logprob: -1.2351725101470947
    3. 'appar' → logprob: -2.6101725101470947
    4. '_' → logprob: -3.3601725101470947
    5. 'occur' → logprob: -3.7351725101470947
    6. ' occurrence' → logprob: -4.610172748565674
    7. '```' → logprob: -4.735172748565674
    8. 'appearance' → logprob: -4.985172748565674
    9. '_occ' → logprob: -5.860172748565674
    10. ''appar' → logprob: -6.735172748565674

Token 2773: ' du' (ID: 1462)
  Prédit: '                                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                                           ' → logprob: -0.8492950201034546
    2. ':' → logprob: -1.4742950201034546
    3. ':
' → logprob: -1.4742950201034546
    4. ' :' → logprob: -3.224295139312744
    5. '                                       ' → logprob: -3.349295139312744
    6. '                                   ' → logprob: -4.099295139312744
    7. '```' → logprob: -5.349295139312744
    8. '=' → logprob: -5.724295139312744
    9. ' =' → logprob: -5.849295139312744
    10. ' :
' → logprob: -5.974295139312744

Token 2774: ' même' (ID: 9679)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09078852087259293
    2. 'se' → logprob: -2.7157886028289795
    3. 'f' → logprob: -4.9657883644104
    4. 'season' → logprob: -5.0907883644104
    5. 'm' → logprob: -5.8407883644104
    6. ' saison' → logprob: -6.3407883644104
    7. ' même' → logprob: -6.8407883644104
    8. 'same' → logprob: -7.4657883644104
    9. ' f' → logprob: -8.215788841247559
    10. ' s' → logprob: -8.340788841247559

Token 2775: ' saison' (ID: 38158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8794059753417969
    2. 'season' → logprob: -1.0044059753417969
    3. ' saison' → logprob: -1.7544059753417969
    4. 'se' → logprob: -3.879405975341797
    5. ' season' → logprob: -4.629405975341797
    6. '_se' → logprob: -5.879405975341797
    7. '_s' → logprob: -5.879405975341797
    8. '
' → logprob: -6.004405975341797
    9. ' sezon' → logprob: -6.879405975341797
    10. '_' → logprob: -6.879405975341797

Token 2776: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.14420028030872345
    2. ' word' → logprob: -2.644200325012207
    3. '_word' → logprob: -2.769200325012207
    4. '                                       ' → logprob: -8.894200325012207
    5. '```' → logprob: -9.394200325012207
    6. 'found' → logprob: -9.894200325012207
    7. '                                   ' → logprob: -10.019200325012207
    8. '_' → logprob: -10.144200325012207
    9. '_found' → logprob: -10.894200325012207
    10. '                               ' → logprob: -11.394200325012207

Token 2777: '
' (ID: 198)
  Prédit: '                                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                                           ' → logprob: -0.524445116519928
    2. ':
' → logprob: -1.0244450569152832
    3. ':' → logprob: -3.399445056915283
    4. '                                       ' → logprob: -4.399445056915283
    5. '```' → logprob: -7.149445056915283
    6. ',' → logprob: -7.899445056915283
    7. ' and' → logprob: -8.149445533752441
    8. ' :
' → logprob: -8.524445533752441
    9. '                                   ' → logprob: -8.524445533752441
    10. '                                         ' → logprob: -8.524445533752441

Token 2778: '                                       ' (ID: 4754)
  Prédit: '                                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                           ' → logprob: -0.10943790525197983
    2. ':
' → logprob: -2.359437942504883
    3. '                                       ' → logprob: -5.234437942504883
    4. ':' → logprob: -5.984437942504883
    5. '```' → logprob: -7.734437942504883
    6. '                                   ' → logprob: -8.234437942504883
    7. '                                         ' → logprob: -8.734437942504883
    8. '                                               ' → logprob: -9.484437942504883
    9. '                                          ' → logprob: -9.859437942504883
    10. '):
' → logprob: -9.859437942504883

Token 2779: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2914269268512726
    2. '                                           ' → logprob: -2.04142689704895
    3. ' continue' → logprob: -2.79142689704895
    4. '                                       ' → logprob: -3.04142689704895
    5. '                                   ' → logprob: -4.791427135467529
    6. '```' → logprob: -6.541427135467529
    7. '                   ' → logprob: -7.166427135467529
    8. '
' → logprob: -7.166427135467529
    9. ':
' → logprob: -8.166426658630371
    10. '                                               ' → logprob: -8.166426658630371

Token 2780: '
' (ID: 198)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.023338185623288155
    2. '                               ' → logprob: -4.523338317871094
    3. '```' → logprob: -4.898338317871094
    4. 'else' → logprob: -5.773338317871094
    5. '                                       ' → logprob: -6.523338317871094
    6. '``' → logprob: -10.523338317871094
    7. ' else' → logprob: -10.523338317871094
    8. '                           ' → logprob: -10.648338317871094
    9. '                                    
' → logprob: -10.773338317871094
    10. '                       ' → logprob: -11.398338317871094

Token 2781: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.011697941459715366
    2. 'else' → logprob: -4.761697769165039
    3. '```' → logprob: -6.261697769165039
    4. '                               ' → logprob: -7.011697769165039
    5. '                                       ' → logprob: -8.761697769165039
    6. '
' → logprob: -9.761697769165039
    7. '``' → logprob: -11.011697769165039
    8. '                                    
' → logprob: -11.636697769165039
    9. '                           ' → logprob: -12.011697769165039
    10. '                       ' → logprob: -12.136697769165039

Token 2782: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16670329868793488
    2. '                                   ' → logprob: -1.9167033433914185
    3. '```' → logprob: -6.291703224182129
    4. ' else' → logprob: -6.416703224182129
    5. '                                       ' → logprob: -6.666703224182129
    6. '                               ' → logprob: -6.791703224182129
    7. 'elif' → logprob: -8.541703224182129
    8. 'continue' → logprob: -8.916703224182129
    9. '                                           ' → logprob: -9.791703224182129
    10. '                                    
' → logprob: -9.791703224182129

Token 2783: ':
' (ID: 734)
  Prédit: '                                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.02109414152801037
    2. ':
' → logprob: -4.02109432220459
    3. 'continue' → logprob: -7.02109432220459
    4. ' continue' → logprob: -7.27109432220459
    5. '                                           ' → logprob: -7.39609432220459
    6. ':' → logprob: -8.14609432220459
    7. '                                   ' → logprob: -8.14609432220459
    8. '                               ' → logprob: -10.64609432220459
    9. '                                      ' → logprob: -10.64609432220459
    10. '```' → logprob: -10.77109432220459

Token 2784: '                                       ' (ID: 4754)
  Prédit: '                                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.14084970951080322
    2. 'continue' → logprob: -2.1408495903015137
    3. ' continue' → logprob: -4.390849590301514
    4. '                                   ' → logprob: -7.390849590301514
    5. '```' → logprob: -7.640849590301514
    6. '                                           ' → logprob: -9.265850067138672
    7. '                               ' → logprob: -9.390850067138672
    8. '               ' → logprob: -9.890850067138672
    9. '                       ' → logprob: -10.265850067138672
    10. '                                      ' → logprob: -11.140850067138672

Token 2785: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.004045513924211264
    2. ' continue' → logprob: -6.004045486450195
    3. '                                       ' → logprob: -6.504045486450195
    4. '```' → logprob: -9.754045486450195
    5. '                                           ' → logprob: -11.629045486450195
    6. '                                   ' → logprob: -13.379045486450195
    7. '   ' → logprob: -14.129045486450195
    8. '``' → logprob: -14.629045486450195
    9. ' ' → logprob: -15.129045486450195
    10. '	continue' → logprob: -15.254045486450195

Token 2786: ' deuxième' (ID: 51664)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.00038241007132455707
    2. '#' → logprob: -8.375382423400879
    3. '                                       ' → logprob: -9.125382423400879
    4. ' continue' → logprob: -10.625382423400879
    5. '                                   ' → logprob: -11.625382423400879
    6. '                                           ' → logprob: -12.250382423400879
    7. '```' → logprob: -13.375382423400879
    8. 'contin' → logprob: -13.625382423400879
    9. 'continu' → logprob: -13.750382423400879
    10. '                               ' → logprob: -15.125382423400879

Token 2787: ' saison' (ID: 38158)
  Prédit: 'appar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appar' → logprob: -0.11017001420259476
    2. 's' → logprob: -2.7351701259613037
    3. ' apparition' → logprob: -3.6101701259613037
    4. 'occ' → logprob: -5.735169887542725
    5. 'appearance' → logprob: -5.985169887542725
    6. 'season' → logprob: -6.485169887542725
    7. '
' → logprob: -7.110169887542725
    8. 'occur' → logprob: -7.610169887542725
    9. ' saison' → logprob: -7.860169887542725
    10. 'word' → logprob: -7.860169887542725

Token 2788: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.17530405521392822
    2. 'found' → logprob: -2.1753039360046387
    3. '_found' → logprob: -3.1753039360046387
    4. 'w' → logprob: -6.050303936004639
    5. '                                       ' → logprob: -6.675303936004639
    6. '_word' → logprob: -7.050303936004639
    7. '                                   ' → logprob: -8.175304412841797
    8. '```' → logprob: -8.675304412841797
    9. ' word' → logprob: -9.175304412841797
    10. 'words' → logprob: -9.675304412841797

Token 2789: ' different' (ID: 2647)
  Prédit: '                                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.24584534764289856
    2. 'found' → logprob: -2.870845317840576
    3. 'different' → logprob: -2.995845317840576
    4. ' différent' → logprob: -3.745845317840576
    5. ' différente' → logprob: -4.495845317840576
    6. '```' → logprob: -4.620845317840576
    7. ',' → logprob: -4.620845317840576
    8. '                                           ' → logprob: -4.870845317840576
    9. '=' → logprob: -5.245845317840576
    10. ' different' → logprob: -5.495845317840576

Token 2790: '
' (ID: 198)
  Prédit: '                                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.77814120054245
    2. '                                           ' → logprob: -1.0281412601470947
    3. ':
' → logprob: -2.1531412601470947
    4. '```' → logprob: -3.5281412601470947
    5. 'continue' → logprob: -3.6531412601470947
    6. '                                        ' → logprob: -6.403141021728516
    7. ' continue' → logprob: -6.528141021728516
    8. '=' → logprob: -6.778141021728516
    9. ':' → logprob: -7.028141021728516
    10. '                                   ' → logprob: -7.153141021728516

Token 2791: '                                       ' (ID: 4754)
  Prédit: '                                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.009370105341076851
    2. '                                           ' → logprob: -5.13437032699585
    3. '```' → logprob: -5.75937032699585
    4. '                                        ' → logprob: -9.134369850158691
    5. 'continue' → logprob: -9.384369850158691
    6. '                                      ' → logprob: -10.759369850158691
    7. '``' → logprob: -11.259369850158691
    8. '                               ' → logprob: -12.009369850158691
    9. '                                         ' → logprob: -12.009369850158691
    10. ' continue' → logprob: -12.134369850158691

Token 2792: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.00575778353959322
    2. ' continue' → logprob: -5.505757808685303
    3. '                                       ' → logprob: -6.505757808685303
    4. '```' → logprob: -8.880757331848145
    5. '                                           ' → logprob: -10.255757331848145
    6. '                                   ' → logprob: -12.755757331848145
    7. '``' → logprob: -13.380757331848145
    8. '   ' → logprob: -14.005757331848145
    9. '	continue' → logprob: -14.255757331848145
    10. ' ' → logprob: -14.880757331848145

Token 2793: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.6036651134490967
    2. '```' → logprob: -0.9786651134490967
    3. '                                   ' → logprob: -3.6036651134490967
    4. '                           ' → logprob: -3.7286651134490967
    5. 'else' → logprob: -5.353665351867676
    6. 'se' → logprob: -5.478665351867676
    7. '``' → logprob: -5.853665351867676
    8. '                       ' → logprob: -6.228665351867676
    9. '_se' → logprob: -6.228665351867676
    10. '\' → logprob: -6.353665351867676

Token 2794: '                           ' (ID: 1686)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.014135892502963543
    2. '```' → logprob: -4.639135837554932
    3. '                                   ' → logprob: -6.889135837554932
    4. '_' → logprob: -6.889135837554932
    5. 'else' → logprob: -7.514135837554932
    6. '                           ' → logprob: -8.01413631439209
    7. '                                
' → logprob: -8.01413631439209
    8. '                                       ' → logprob: -8.51413631439209
    9. '\' → logprob: -8.51413631439209
    10. '`' → logprob: -8.76413631439209

Token 2795: ' else' (ID: 1203)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.7468321919441223
    2. 'else' (adapté à ' else') → logprob: -0.7468321919441223
    3. '                           ' → logprob: -3.1218321323394775
    4. ' else' → logprob: -5.496832370758057
    5. '```' → logprob: -5.996832370758057
    6. '                                   ' → logprob: -6.746832370758057
    7. '                       ' → logprob: -8.121831893920898
    8. '                                       ' → logprob: -9.996831893920898
    9. '							' → logprob: -10.746831893920898
    10. '                                           ' → logprob: -11.371831893920898

Token 2796: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.46866273880004883
    2. ':
' → logprob: -1.9686627388000488
    3. '                           ' → logprob: -2.093662738800049
    4. ':' → logprob: -3.218662738800049
    5. ' ==' → logprob: -3.843662738800049
    6. '                                   ' → logprob: -3.968662738800049
    7. '==' → logprob: -4.468662738800049
    8. ' =' → logprob: -5.718662738800049
    9. '=' → logprob: -5.968662738800049
    10. '                       ' → logprob: -6.468662738800049

Token 2797: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.2246379852294922
    2. '                           ' → logprob: -2.099637985229492
    3. '```' → logprob: -2.849637985229492
    4. '                                   ' → logprob: -4.099637985229492
    5. '                       ' → logprob: -6.849637985229492
    6. '                                       ' → logprob: -6.974637985229492
    7. 'se' → logprob: -7.849637985229492
    8. '                                ' → logprob: -8.099637985229492
    9. '                                           ' → logprob: -8.099637985229492
    10. '                            ' → logprob: -8.599637985229492

Token 2798: ' sez' (ID: 50082)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0307399220764637
    2. ' sez' → logprob: -3.5307400226593018
    3. '                               ' → logprob: -7.280739784240723
    4. '                                   ' → logprob: -9.280739784240723
    5. '_se' → logprob: -9.530739784240723
    6. '```' → logprob: -9.905739784240723
    7. '(se' → logprob: -10.655739784240723
    8. '	se' → logprob: -11.280739784240723
    9. ' se' → logprob: -11.530739784240723
    10. '0' → logprob: -11.905739784240723

Token 2799: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008373674005270004
    2. ' =' → logprob: -5.008373737335205
    3. '2' → logprob: -6.508373737335205
    4. '_=' → logprob: -9.508373260498047
    5. '_' → logprob: -10.008373260498047
    6. '==' → logprob: -10.633373260498047
    7. '0' → logprob: -12.133373260498047
    8. '                           ' → logprob: -12.508373260498047
    9. '=None' → logprob: -12.758373260498047
    10. '                               ' → logprob: -12.883373260498047

Token 2800: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0032261949963867664
    2. ' =' → logprob: -5.753226280212402
    3. '=
' → logprob: -10.628226280212402
    4. '                           ' → logprob: -11.503226280212402
    5. '                               ' → logprob: -11.753226280212402
    6. '==' → logprob: -13.628226280212402
    7. '                            ' → logprob: -13.628226280212402
    8. '```' → logprob: -14.753226280212402
    9. '<|end|>' → logprob: -15.128226280212402
    10. '=None' → logprob: -15.128226280212402

Token 2801: ' sez' (ID: 50082)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -2.081584716506768e-05
    2. ' sez' → logprob: -10.875020980834961
    3. '                               ' → logprob: -14.125020980834961
    4. '                           ' → logprob: -14.875020980834961
    5. '0' → logprob: -15.125020980834961
    6. '	se' → logprob: -15.750020980834961
    7. 'Se' → logprob: -16.50002098083496
    8. 'sé' → logprob: -16.62502098083496
    9. '_se' → logprob: -17.12502098083496
    10. '(se' → logprob: -17.25002098083496

Token 2802: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.12966251373291016
    2. '                       ' → logprob: -2.87966251373291
    3. '```' → logprob: -3.25466251373291
    4. '                               ' → logprob: -4.12966251373291
    5. ')' → logprob: -5.87966251373291
    6. '                                   ' → logprob: -6.50466251373291
    7. '[' → logprob: -6.75466251373291
    8. '                            ' → logprob: -6.87966251373291
    9. '<|end|>' → logprob: -7.12966251373291
    10. ':
' → logprob: -7.62966251373291

Token 2803: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0624951608479023
    2. '                       ' → logprob: -3.312495231628418
    3. '                               ' → logprob: -4.062495231628418
    4. '                            
' → logprob: -6.437495231628418
    5. '                        
' → logprob: -6.687495231628418
    6. '```' → logprob: -6.812495231628418
    7. '
' → logprob: -7.437495231628418
    8. '                                   ' → logprob: -8.312495231628418
    9. '                                       ' → logprob: -8.437495231628418
    10. '						' → logprob: -8.562495231628418

Token 2804: ' dp' (ID: 21546)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6943073868751526
    2. 'dp' (adapté à ' dp') → logprob: -0.6943073868751526
    3. '                       ' → logprob: -7.819307327270508
    4. '                               ' → logprob: -8.069307327270508
    5. ' dp' → logprob: -8.319307327270508
    6. 'val' → logprob: -9.069307327270508
    7. '```' → logprob: -10.569307327270508
    8. '                                   ' → logprob: -10.944307327270508
    9. '                            ' → logprob: -11.944307327270508
    10. '(dp' → logprob: -12.069307327270508

Token 2805: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0032037352211773396
    2. '_cur' → logprob: -5.753203868865967
    3. 'next' → logprob: -11.503203392028809
    4. 'cur' → logprob: -12.378203392028809
    5. '[next' → logprob: -13.128203392028809
    6. '```' → logprob: -13.128203392028809
    7. '                   ' → logprob: -13.753203392028809
    8. '[cur' → logprob: -14.003203392028809
    9. '_prev' → logprob: -14.003203392028809
    10. '_curr' → logprob: -14.128203392028809

Token 2806: '[n' (ID: 15433)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.00018387178715784103
    2. '[n' → logprob: -8.625184059143066
    3. '[' → logprob: -13.875184059143066
    4. 'w' → logprob: -14.000184059143066
    5. '                           ' → logprob: -14.500184059143066
    6. '```' → logprob: -14.875184059143066
    7. '][' → logprob: -15.250184059143066
    8. '                       ' → logprob: -15.625184059143066
    9. ' [' → logprob: -15.875184059143066
    10. ')[' → logprob: -15.875184059143066

Token 2807: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0013053566217422485
    2. 'ext' → logprob: -7.00130558013916
    3. '[w' → logprob: -8.12630558013916
    4. 'xt' → logprob: -9.50130558013916
    5. 'x' → logprob: -12.00130558013916
    6. '_next' → logprob: -12.12630558013916
    7. '[n' → logprob: -12.25130558013916
    8. '```' → logprob: -13.75130558013916
    9. 'nw' → logprob: -14.00130558013916
    10. '[next' → logprob: -14.12630558013916

Token 2808: '][' (ID: 2696)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.11741222441196442
    2. '][' → logprob: -2.2424123287200928
    3. '                           ' → logprob: -6.367412090301514
    4. '[' → logprob: -7.367412090301514
    5. '                               ' → logprob: -7.742412090301514
    6. '                       ' → logprob: -8.242412567138672
    7. '                                   ' → logprob: -8.617412567138672
    8. ']][' → logprob: -8.742412567138672
    9. ']' → logprob: -8.867412567138672
    10. '[n' → logprob: -9.117412567138672

Token 2809: 'n' (ID: 77)
  Prédit: 'acs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acs' → logprob: -8.41866585687967e-06
    2. '   ' → logprob: -12.500008583068848
    3. '
' → logprob: -13.000008583068848
    4. ' ' → logprob: -14.750008583068848
    5. '```' → logprob: -15.000008583068848
    6. 'n' → logprob: -15.125008583068848
    7. '           ' → logprob: -15.125008583068848
    8. 'ac' → logprob: -15.375008583068848
    9. '[' → logprob: -15.750008583068848
    10. '               ' → logprob: -15.750008583068848

Token 2810: 'xt' (ID: 711)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.026972046121954918
    2. 'acs' → logprob: -3.9019720554351807
    3. 'se' → logprob: -6.401971817016602
    4. '][' → logprob: -6.776971817016602
    5. 'nw' → logprob: -6.901971817016602
    6. '   ' → logprob: -7.526971817016602
    7. '```' → logprob: -7.651971817016602
    8. 'cs' → logprob: -8.026971817016602
    9. '           ' → logprob: -8.526971817016602
    10. '[' → logprob: -8.776971817016602

Token 2811: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005322227720171213
    2. 'acs' → logprob: -5.255322456359863
    3. 's' → logprob: -10.130322456359863
    4. '   ' → logprob: -10.755322456359863
    5. '```' → logprob: -11.880322456359863
    6. '           ' → logprob: -12.880322456359863
    7. '_cs' → logprob: -13.130322456359863
    8. '2' → logprob: -13.255322456359863
    9. '       ' → logprob: -13.380322456359863
    10. '[' → logprob: -13.505322456359863

Token 2812: 'acs' (ID: 30834)
  Prédit: 'acs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acs' → logprob: -1.5451681974809617e-05
    2. 'cs' → logprob: -11.875015258789062
    3. '_' → logprob: -12.500015258789062
    4. 's' → logprob: -13.375015258789062
    5. '   ' → logprob: -13.750015258789062
    6. '```' → logprob: -14.375015258789062
    7. '
' → logprob: -14.500015258789062
    8. 'ac' → logprob: -14.875015258789062
    9. '2' → logprob: -16.250015258789062
    10. ']' → logprob: -16.375015258789062

Token 2813: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00023631771910004318
    2. '                           ' → logprob: -8.875236511230469
    3. '                               ' → logprob: -10.000236511230469
    4. '[' → logprob: -11.000236511230469
    5. '                                   ' → logprob: -11.250236511230469
    6. ']' → logprob: -12.625236511230469
    7. '                            ' → logprob: -12.625236511230469
    8. ' ][' → logprob: -12.750236511230469
    9. '                             ' → logprob: -13.250236511230469
    10. '                       ' → logprob: -13.500236511230469

Token 2814: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: 0.0
    2. '	se' → logprob: -17.125
    3. '(se' → logprob: -19.0
    4. '   ' → logprob: -20.0
    5. '       ' → logprob: -20.125
    6. '           ' → logprob: -20.375
    7. '                   ' → logprob: -20.75
    8. '_se' → logprob: -21.0
    9. '                       ' → logprob: -21.25
    10. 'sz' → logprob: -21.25

Token 2815: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -14.375000953674316
    3. '1' → logprob: -15.500000953674316
    4. '0' → logprob: -15.500000953674316
    5. 'з' → logprob: -15.875000953674316
    6. '_z' → logprob: -15.875000953674316
    7. '```' → logprob: -16.375001907348633
    8. 'ž' → logprob: -17.625001907348633
    9. '3' → logprob: -17.750001907348633
    10. ''z' → logprob: -17.875001907348633

Token 2816: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.014684110297821e-06
    2. '```' → logprob: -12.125008583068848
    3. '₂' → logprob: -14.250008583068848
    4. '                           ' → logprob: -14.375008583068848
    5. '                               ' → logprob: -14.500008583068848
    6. '                                   ' → logprob: -14.750008583068848
    7. '=' → logprob: -15.125008583068848
    8. ' ' → logprob: -15.500008583068848
    9. '+' → logprob: -15.625008583068848
    10. '۲' → logprob: -15.750008583068848

Token 2817: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35209742188453674
    2. ']+=' → logprob: -1.2270973920822144
    3. '+' → logprob: -6.227097511291504
    4. '                           ' → logprob: -7.352097511291504
    5. '+=' → logprob: -7.352097511291504
    6. ']+' → logprob: -9.102097511291504
    7. '```' → logprob: -9.727097511291504
    8. ']=' → logprob: -9.727097511291504
    9. '                            ' → logprob: -10.352097511291504
    10. ' +=' → logprob: -10.477097511291504

Token 2818: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.33371391892433167
    2. '=' → logprob: -1.3337138891220093
    3. '```' → logprob: -4.833714008331299
    4. ' +=' → logprob: -5.083714008331299
    5. ']+=' → logprob: -6.333714008331299
    6. '                           ' → logprob: -6.708714008331299
    7. ' =' → logprob: -6.833714008331299
    8. '                               ' → logprob: -7.458714008331299
    9. '%=' → logprob: -7.458714008331299
    10. '                            ' → logprob: -7.833714008331299

Token 2819: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -7.707997428951785e-05
    2. ' (' → logprob: -9.875077247619629
    3. '(mod' → logprob: -12.250077247619629
    4. '(dx' → logprob: -12.250077247619629
    5. '                           ' → logprob: -12.500077247619629
    6. '(val' → logprob: -12.875077247619629
    7. '(min' → logprob: -13.125077247619629
    8. '(dt' → logprob: -13.250077247619629
    9. '                               ' → logprob: -14.250077247619629
    10. '(' → logprob: -14.500077247619629

Token 2820: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005270991940051317
    2. '(dp' → logprob: -5.255270957946777
    3. ' dp' → logprob: -10.255270957946777
    4. '                           ' → logprob: -13.380270957946777
    5. '	dp' → logprob: -15.630270957946777
    6. '_dp' → logprob: -15.755270957946777
    7. '                               ' → logprob: -16.380271911621094
    8. '                       ' → logprob: -16.505271911621094
    9. '.dp' → logprob: -17.380271911621094
    10. '                            ' → logprob: -17.880271911621094

Token 2821: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -4.4849443838757e-06
    2. 'Next' → logprob: -13.250004768371582
    3. '_cur' → logprob: -13.625004768371582
    4. 'next' → logprob: -14.250004768371582
    5. '_NEXT' → logprob: -14.875004768371582
    6. '_prev' → logprob: -15.375004768371582
    7. '[next' → logprob: -15.875004768371582
    8. '```' → logprob: -16.125003814697266
    9. '                   ' → logprob: -18.125003814697266
    10. '_now' → logprob: -18.250003814697266

Token 2822: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.7835754988482222e-05
    2. '```' → logprob: -12.375018119812012
    3. '
' → logprob: -13.000018119812012
    4. '       ' → logprob: -13.625018119812012
    5. 'nw' → logprob: -14.000018119812012
    6. '   ' → logprob: -14.125018119812012
    7. '                       ' → logprob: -14.125018119812012
    8. '                   ' → logprob: -14.250018119812012
    9. '        ' → logprob: -14.375018119812012
    10. '               ' → logprob: -14.500018119812012

Token 2823: 'w' (ID: 86)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.22303004562854767
    2. '_next' → logprob: -1.8480300903320312
    3. 'next' → logprob: -3.4730300903320312
    4. 'n' → logprob: -5.598030090332031
    5. '[n' → logprob: -5.848030090332031
    6. 'nx' → logprob: -6.098030090332031
    7. 'w' → logprob: -6.848030090332031
    8. 'Next' → logprob: -7.223030090332031
    9. '[next' → logprob: -7.848030090332031
    10. '
' → logprob: -9.973030090332031

Token 2824: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.01827121526002884
    2. '][' → logprob: -4.143271446228027
    3. '[w' → logprob: -6.143271446228027
    4. ')[' → logprob: -11.018271446228027
    5. '[' → logprob: -11.518271446228027
    6. '
' → logprob: -11.893271446228027
    7. '   ' → logprob: -12.143271446228027
    8. '[[' → logprob: -12.268271446228027
    9. '```' → logprob: -12.518271446228027
    10. '                       ' → logprob: -12.643271446228027

Token 2825: 'n' (ID: 77)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.643746554851532
    2. 'n' → logprob: -1.5187466144561768
    3. 'acs' → logprob: -2.1437466144561768
    4. '[n' → logprob: -2.5187466144561768
    5. '[' → logprob: -3.0187466144561768
    6. 'w' → logprob: -5.518746376037598
    7. '[w' → logprob: -6.018746376037598
    8. '   ' → logprob: -7.768746376037598
    9. 'nst' → logprob: -8.018746376037598
    10. 'ac' → logprob: -8.643746376037598

Token 2826: 'xt' (ID: 711)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0003036457928828895
    2. '[w' → logprob: -8.500303268432617
    3. '[n' → logprob: -10.125303268432617
    4. 'x' → logprob: -11.000303268432617
    5. '[' → logprob: -11.500303268432617
    6. '][' → logprob: -11.625303268432617
    7. '```' → logprob: -12.500303268432617
    8. 'ws' → logprob: -12.500303268432617
    9. '_w' → logprob: -13.125303268432617
    10. 'nw' → logprob: -13.625303268432617

Token 2827: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013184542767703533
    2. 'w' → logprob: -8.001317977905273
    3. '_ac' → logprob: -8.001317977905273
    4. '_w' → logprob: -8.501317977905273
    5. '][' → logprob: -8.876317977905273
    6. 'acs' → logprob: -9.126317977905273
    7. 's' → logprob: -10.001317977905273
    8. '_s' → logprob: -10.501317977905273
    9. '2' → logprob: -11.001317977905273
    10. '][_' → logprob: -11.126317977905273

Token 2828: 'acs' (ID: 30834)
  Prédit: 'acs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acs' → logprob: -0.0003763343847822398
    2. '3' → logprob: -8.37537670135498
    3. '_' → logprob: -9.50037670135498
    4. '2' → logprob: -10.62537670135498
    5. 'ac' → logprob: -10.75037670135498
    6. 'cs' → logprob: -11.50037670135498
    7. 's' → logprob: -11.87537670135498
    8. 'se' → logprob: -13.12537670135498
    9. '_ac' → logprob: -13.12537670135498
    10. '   ' → logprob: -13.62537670135498

Token 2829: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6092807054519653
    2. '[n' → logprob: -0.8592807054519653
    3. '[w' → logprob: -3.484280586242676
    4. '                           ' → logprob: -7.734280586242676
    5. '                               ' → logprob: -8.109280586242676
    6. ']' → logprob: -8.234280586242676
    7. '                       ' → logprob: -8.234280586242676
    8. '[' → logprob: -8.984280586242676
    9. '                   ' → logprob: -9.609280586242676
    10. ']+' → logprob: -9.859280586242676

Token 2830: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.1669597625732422
    2. '[' → logprob: -2.291959762573242
    3. '[w' → logprob: -3.416959762573242
    4. 'w' → logprob: -4.416959762573242
    5. '                           ' → logprob: -6.416959762573242
    6. '][' → logprob: -6.416959762573242
    7. '                       ' → logprob: -6.541959762573242
    8. '                               ' → logprob: -6.916959762573242
    9. '(se' → logprob: -7.541959762573242
    10. 'found' → logprob: -8.291959762573242

Token 2831: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06766524910926819
    2. '_se' → logprob: -3.8176653385162354
    3. ']' → logprob: -4.317665100097656
    4. 'w' → logprob: -4.567665100097656
    5. 's' → logprob: -5.192665100097656
    6. '[z' → logprob: -5.567665100097656
    7. '2' → logprob: -6.067665100097656
    8. '_z' → logprob: -6.192665100097656
    9. 'x' → logprob: -6.942665100097656
    10. '[w' → logprob: -7.442665100097656

Token 2832: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002564003225415945
    2. '_' → logprob: -7.002563953399658
    3. '[w' → logprob: -7.627563953399658
    4. '_next' → logprob: -8.127564430236816
    5. 'w' → logprob: -8.502564430236816
    6. 'acs' → logprob: -9.002564430236816
    7. '_w' → logprob: -9.252564430236816
    8. '   ' → logprob: -9.752564430236816
    9. ']' → logprob: -9.877564430236816
    10. '```' → logprob: -10.377564430236816

Token 2833: ']' (ID: 60)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2834: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693630158901215
    2. ' +' → logprob: -2.126936197280884
    3. '+d' → logprob: -12.126935958862305
    4. '+
' → logprob: -14.001935958862305
    5. '                           ' → logprob: -14.876935958862305
    6. '+D' → logprob: -15.501935958862305
    7. '+x' → logprob: -15.626935958862305
    8. '```' → logprob: -15.751935958862305
    9. '＋' → logprob: -16.001935958862305
    10. '                            ' → logprob: -16.251935958862305

Token 2835: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.018200282007455826
    2. ' val' → logprob: -4.018200397491455
    3. '                           ' → logprob: -10.018199920654297
    4. '                            ' → logprob: -12.518199920654297
    5. '                               ' → logprob: -13.518199920654297
    6. '                       ' → logprob: -15.518199920654297
    7. '(val' → logprob: -15.518199920654297
    8. '                        ' → logprob: -15.893199920654297
    9. '                          ' → logprob: -16.643199920654297
    10. '	val' → logprob: -16.768199920654297

Token 2836: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09332007169723511
    2. ')%' → logprob: -2.46832013130188
    3. '%' → logprob: -5.843319892883301
    4. ' %' → logprob: -6.718319892883301
    5. '                       ' → logprob: -8.5933198928833
    6. ' )' → logprob: -9.9683198928833
    7. '%)' → logprob: -11.0933198928833
    8. ']%' → logprob: -12.7183198928833
    9. '                   ' → logprob: -13.0933198928833
    10. '%d' → logprob: -13.2183198928833

Token 2837: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04246247187256813
    2. ' %' → logprob: -3.7924625873565674
    3. ')%' → logprob: -4.292462348937988
    4. ')' → logprob: -5.292462348937988
    5. '```' → logprob: -8.917462348937988
    6. '%x' → logprob: -10.542462348937988
    7. '%n' → logprob: -10.542462348937988
    8. '                       ' → logprob: -10.667462348937988
    9. '
' → logprob: -10.667462348937988
    10. '%d' → logprob: -10.792462348937988

Token 2838: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.15310683415737e-05
    2. ' MOD' → logprob: -10.750021934509277
    3. '100' → logprob: -18.37502098083496
    4. '```' → logprob: -18.75002098083496
    5. '_MOD' → logprob: -19.25002098083496
    6. '.MOD' → logprob: -21.12502098083496
    7. '   ' → logprob: -21.25002098083496
    8. '10' → logprob: -22.12502098083496
    9. '
' → logprob: -22.25002098083496
    10. '``' → logprob: -22.75002098083496

Token 2839: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2840: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9494360685348511
    2. '<|end|>' → logprob: -1.074436068534851
    3. ')' → logprob: -2.4494361877441406
    4. '                       ' → logprob: -2.4494361877441406
    5. '                           ' → logprob: -3.0744361877441406
    6. '                               ' → logprob: -3.9494361877441406
    7. '                        ' → logprob: -5.074436187744141
    8. '                        
' → logprob: -5.699436187744141
    9. ']' → logprob: -5.824436187744141
    10. '\' → logprob: -5.949436187744141

Token 2841: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21378760039806366
    2. 'dp' (adapté à ' dp') → logprob: -1.71378755569458
    3. '       ' → logprob: -4.83878755569458
    4. '_dp' → logprob: -6.46378755569458
    5. '```' → logprob: -6.96378755569458
    6. '                           ' → logprob: -7.83878755569458
    7. '                       ' → logprob: -8.213788032531738
    8. '                   ' → logprob: -8.588788032531738
    9. '<|end|>' → logprob: -8.713788032531738
    10. '	dp' → logprob: -8.713788032531738

Token 2842: '_cur' (ID: 46382)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2843: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016345186159014702
    2. ' =' → logprob: -4.141345024108887
    3. ',' → logprob: -8.266345024108887
    4. '=
' → logprob: -11.141345024108887
    5. '   ' → logprob: -12.016345024108887
    6. '=[' → logprob: -12.266345024108887
    7. '    ' → logprob: -12.641345024108887
    8. '[' → logprob: -13.016345024108887
    9. '           ' → logprob: -13.016345024108887
    10. '=[]' → logprob: -13.141345024108887

Token 2844: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.6087021473795176e-05
    2. ' dp' → logprob: -10.000045776367188
    3. '           ' → logprob: -15.625045776367188
    4. '[[' → logprob: -16.375045776367188
    5. '(dp' → logprob: -16.375045776367188
    6. '   ' → logprob: -16.625045776367188
    7. '	dp' → logprob: -16.750045776367188
    8. '_dp' → logprob: -17.750045776367188
    9. '       ' → logprob: -17.875045776367188
    10. '[' → logprob: -18.375045776367188

Token 2845: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -7.469590491382405e-05
    2. 'next' → logprob: -9.62507438659668
    3. 'Next' → logprob: -11.75007438659668
    4. '_cur' → logprob: -14.75007438659668
    5. ' next' → logprob: -16.00007438659668
    6. '_NEXT' → logprob: -16.62507438659668
    7. '```' → logprob: -16.75007438659668
    8. 'NEXT' → logprob: -16.87507438659668
    9. '[next' → logprob: -17.00007438659668
    10. '`' → logprob: -17.87507438659668

Token 2846: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2847: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6994446516036987
    2. '   ' → logprob: -0.9494446516036987
    3. 'for' → logprob: -2.8244447708129883
    4. '       ' → logprob: -3.0744447708129883
    5. '<|end|>' → logprob: -5.074444770812988
    6. '#' → logprob: -6.699444770812988
    7. '``' → logprob: -7.574444770812988
    8. 'return' → logprob: -7.949444770812988
    9. ')' → logprob: -8.199444770812988
    10. '[' → logprob: -8.324444770812988

Token 2848: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2849: ' somme' (ID: 64484)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7575605511665344
    2. 'result' → logprob: -1.0075604915618896
    3. '       ' → logprob: -2.5075604915618896
    4. 'print' → logprob: -2.8825604915618896
    5. 'ans' → logprob: -4.007560729980469
    6. 'total' → logprob: -5.382560729980469
    7. 'answer' → logprob: -5.632560729980469
    8. 'ret' → logprob: -6.632560729980469
    9. '   ' → logprob: -7.757560729980469
    10. 'out' → logprob: -9.007560729980469

Token 2850: ' sur' (ID: 1512)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2415982484817505
    2. 'res' → logprob: -1.7415982484817505
    3. 'ans' → logprob: -4.241598129272461
    4. 'answer' → logprob: -4.241598129272461
    5. '       ' → logprob: -4.741598129272461
    6. 'total' → logprob: -7.116598129272461
    7. 'ret' → logprob: -8.116598129272461
    8. 'print' → logprob: -8.866598129272461
    9. 'out' → logprob: -8.866598129272461
    10. '   ' → logprob: -9.116598129272461

Token 2851: ' pos' (ID: 1253)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2852: '=M' (ID: 125766)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2853: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2854: ' mot' (ID: 3598)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2269728183746338
    2. 'result' → logprob: -1.2269728183746338
    3. 'ans' → logprob: -1.4769728183746338
    4. 'sum' → logprob: -2.101972818374634
    5. 'answer' → logprob: -3.351972818374634
    6. '0' → logprob: -4.226972579956055
    7. 'total' → logprob: -4.476972579956055
    8. 'word' → logprob: -7.726972579956055
    9. '   ' → logprob: -7.726972579956055
    10. '       ' → logprob: -8.476972579956055

Token 2855: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4315948486328125
    2. '=' → logprob: -1.5565948486328125
    3. 'range' → logprob: -1.9315948486328125
    4. '][' → logprob: -2.3065948486328125
    5. ',' → logprob: -2.6815948486328125
    6. '
' → logprob: -2.8065948486328125
    7. '       ' → logprob: -3.1815948486328125
    8. 's' → logprob: -4.1815948486328125
    9. 'dans' → logprob: -4.3065948486328125
    10. '           ' → logprob: -4.6815948486328125

Token 2856: ' ac' (ID: 1375)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2857: '_state' (ID: 9479)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2858: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2859: ' saison' (ID: 38158)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2860: 'found' (ID: 26334)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2861: ' qui' (ID: 2780)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2862: ' est' (ID: 893)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2863: ' !=' (ID: 1666)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2864: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2865: ' (' (ID: 350)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2866: 'exact' (ID: 86898)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2867: 'ement' (ID: 962)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2868: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2869: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2870: ' saison' (ID: 38158)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2871: 'word' (ID: 1801)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2872: ' apparent' (ID: 36582)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2873: ')
' (ID: 446)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2874: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2875: ' ans' (ID: 3345)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2876: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2877: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2878: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2879: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2880: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2881: ' for' (ID: 395)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2882: ' w' (ID: 286)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2883: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2884: ' range' (ID: 3352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2885: '(n' (ID: 2406)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2886: 'words' (ID: 10020)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2887: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2888: '           ' (ID: 352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2889: ' for' (ID: 395)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2890: ' ac' (ID: 1375)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2891: 's' (ID: 82)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2892: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2893: ' range' (ID: 3352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2894: '(ac' (ID: 95204)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2895: '_states' (ID: 53795)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2896: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2897: '               ' (ID: 506)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2898: ' for' (ID: 395)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2899: ' sez' (ID: 50082)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2900: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2901: ' range' (ID: 3352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2902: '(' (ID: 7)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2903: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2904: ',K' (ID: 107147)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2905: '+' (ID: 10)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2906: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2907: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2908: '                   ' (ID: 699)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2909: ' ans' (ID: 3345)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2910: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2911: ' (' (ID: 350)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2912: 'ans' (ID: 616)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2913: ' +' (ID: 659)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2914: ' dp' (ID: 21546)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2915: '_cur' (ID: 46382)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2916: '[w' (ID: 94341)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2917: '][' (ID: 2696)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2918: 'acs' (ID: 30834)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2919: '][' (ID: 2696)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2920: 'se' (ID: 344)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2921: 'z' (ID: 89)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2922: '])' (ID: 4636)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2923: '%' (ID: 4)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2924: 'MOD' (ID: 52135)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2925: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2926: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2927: ' print' (ID: 2123)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2928: '(ans' (ID: 70054)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2929: ')

' (ID: 1029)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2930: 'if' (ID: 366)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2931: ' __' (ID: 2516)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2932: 'name' (ID: 897)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2933: '__' (ID: 771)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2934: ' ==' (ID: 951)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2935: ' "__' (ID: 27367)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2936: 'main' (ID: 7731)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2937: '__":
' (ID: 49892)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2938: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2939: ' main' (ID: 2758)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2940: '()' (ID: 416)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2938
Tokens correctement prédits (1ère position, stricte): 696
Tokens correctement prédits (1ère position, avec adaptation): 765
Tokens correctement prédits (top 10): 1660
Précision stricte (1ère position): 23.69%
Précision adaptée (1ère position): 26.04%
Précision (top 10): 56.50%
================================================================================
