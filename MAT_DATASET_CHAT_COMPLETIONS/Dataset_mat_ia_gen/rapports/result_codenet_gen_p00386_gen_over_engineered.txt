================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import threading
from collections import defaultdict
from typing import List, Tuple

sys.setrecursionlimit(1 << 25)

class Graph:
    def __init__(self, n: int):
        self.n = n
        self.adj = defaultdict(list)  # node -> list of (neighbor, weight)
    
    def add_edge(self, u: int, v: int, w: int):
        self.adj[u].append((v, w))
        self.adj[v].append((u, w))


class LCA:
    def __init__(self, graph: Graph, root: int = 1):
        self.n = graph.n
        self.LOG = max(1, (self.n.bit_length()))
        self.depth = [0] * (self.n + 1)
        self.parent = [[-1] * (self.n + 1) for _ in range(self.LOG)]
        self.dist_to_root = [0] * (self.n + 1)
        self.graph = graph
        self._dfs(root, -1, 0, 0)
        self._build()

    def _dfs(self, node: int, par: int, dep: int, dist: int):
        self.parent[0][node] = par
        self.depth[node] = dep
        self.dist_to_root[node] = dist
        for (nxt, w) in self.graph.adj[node]:
            if nxt != par:
                self._dfs(nxt, node, dep + 1, dist + w)
    
    def _build(self):
        for k in range(1, self.LOG):
            for v in range(1, self.n + 1):
                if self.parent[k-1][v] != -1:
                    self.parent[k][v] = self.parent[k-1][self.parent[k-1][v]]

    def lca(self, u: int, v: int) -> int:
        if self.depth[u] < self.depth[v]:
            u, v = v, u
        # Lift u up so it is at same depth with v
        for k in reversed(range(self.LOG)):
            if self.parent[k][u] != -1 and self.depth[self.parent[k][u]] >= self.depth[v]:
                u = self.parent[k][u]
        if u == v:
            return u
        for k in reversed(range(self.LOG)):
            if self.parent[k][u] != -1 and self.parent[k][u] != self.parent[k][v]:
                u = self.parent[k][u]
                v = self.parent[k][v]
        return self.parent[0][u]

    def distance(self, u: int, v: int) -> int:
        l = self.lca(u, v)
        return self.dist_to_root[u] + self.dist_to_root[v] - 2 * self.dist_to_root[l]


class MeetingInCitySolution:
    def __init__(self, n: int, edges: List[Tuple[int,int,int]], queries: List[Tuple[int,int,int]]):
        self.graph = Graph(n)
        for (u,v,w) in edges:
            self.graph.add_edge(u,v,w)
        self.lca_struct = LCA(self.graph, root=1)
        self.queries = queries

    def _dist(self,u,v):
        return self.lca_struct.distance(u,v)

    def _cost_for_theme(self, a:int,b:int,c:int) -> int:
        # Candidates for minimal cost meeting city are limited to a,b,c or the LCA nodes of pairs (a,b), (b,c), (a,c)
         # because the minimal maximum distances happen around these junction points.
        candidates = {a,b,c}
        candidates.add(self.lca_struct.lca(a,b))
        candidates.add(self.lca_struct.lca(b,c))
        candidates.add(self.lca_struct.lca(a,c))

        min_cost = float('inf')
        for city in candidates:
            # max distance for three students to this meeting city
            dist_a = self._dist(a, city)
            dist_b = self._dist(b, city)
            dist_c = self._dist(c, city)
            max_dist = max(dist_a, dist_b, dist_c)
            if max_dist < min_cost:
                min_cost = max_dist
        return min_cost

    def solve(self) -> List[int]:
        results = []
        for (a,b,c) in self.queries:
            # careful: input guarantees a < b < c but solution does not rely on that
            results.append(self._cost_for_theme(a,b,c))
        return results


def main():
    input = sys.stdin.readline
    n,q = map(int,input().split())
    edges = [tuple(map(int,input().split())) for _ in range(n-1)]
    queries = [tuple(map(int,input().split())) for _ in range(q)]
    sol = MeetingInCitySolution(n, edges, queries)
    results = sol.solve()
    print('\n'.join(map(str, results)))


threading.Thread(target=main,).start()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' threading' (ID: 72047)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00023321842309087515
    2. 'os' → logprob: -8.37523365020752
    3. ' math' → logprob: -13.87523365020752
    4. ' re' → logprob: -14.37523365020752
    5. '"os' → logprob: -14.87523365020752
    6. ' json' → logprob: -15.12523365020752
    7. '_os' → logprob: -15.87523365020752
    8. '	os' → logprob: -16.375232696533203
    9. ' ' → logprob: -16.750232696533203
    10. ' ' → logprob: -17.000232696533203

Token 5: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8981837630271912
    2. '\' → logprob: -1.773183822631836
    3. '
' → logprob: -1.898183822631836
    4. '.' → logprob: -2.398183822631836
    5. '```' → logprob: -2.523183822631836
    6. 'import' → logprob: -2.898183822631836
    7. '

' → logprob: -3.648183822631836
    8. '' → logprob: -5.273183822631836
    9. ',' → logprob: -5.773183822631836
    10. '.Thread' → logprob: -6.398183822631836

Token 6: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0472643375396729
    2. '.' → logprob: -1.5472643375396729
    3. '
' → logprob: -2.047264337539673
    4. '\' → logprob: -2.297264337539673
    5. 'import' → logprob: -2.672264337539673
    6. '```' → logprob: -3.047264337539673
    7. '

' → logprob: -3.172264337539673
    8. '.Thread' → logprob: -4.297264099121094
    9. 'def' → logprob: -4.547264099121094
    10. '#' → logprob: -5.172264099121094

Token 7: ' collections' (ID: 22690)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.007831023074686527
    2. ' socket' → logprob: -5.63283109664917
    3. 'queue' → logprob: -6.38283109664917
    4. ' concurrent' → logprob: -6.75783109664917
    5. ' collections' → logprob: -7.75783109664917
    6. ' time' → logprob: -7.75783109664917
    7. ' multiprocessing' → logprob: -9.257830619812012
    8. ' io' → logprob: -9.507830619812012
    9. ' os' → logprob: -9.632830619812012
    10. ' subprocess' → logprob: -10.007830619812012

Token 8: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6327356696128845
    2. ' import' → logprob: -0.7577356696128845
    3. '.' → logprob: -10.382735252380371
    4. '	import' → logprob: -10.507735252380371
    5. '<|end|>' → logprob: -10.632735252380371
    6. ' ' → logprob: -11.132735252380371
    7. '```' → logprob: -11.507735252380371
    8. '_import' → logprob: -12.007735252380371
    9. ' ' → logprob: -12.632735252380371
    10. ' defaultdict' → logprob: -12.757735252380371

Token 9: ' defaultdict' (ID: 107098)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.4301324784755707
    2. ' defaultdict' → logprob: -1.305132508277893
    3. ' abc' → logprob: -2.8051323890686035
    4. 'deque' → logprob: -4.0551323890686035
    5. 'abc' → logprob: -8.805132865905762
    6. ' Counter' → logprob: -8.805132865905762
    7. ' Ordered' → logprob: -9.305132865905762
    8. ' named' → logprob: -9.555132865905762
    9. ' ' → logprob: -10.180132865905762
    10. ' queue' → logprob: -10.180132865905762

Token 10: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.16519057750701904
    2. '
' → logprob: -2.4151906967163086
    3. '```' → logprob: -3.6651906967163086
    4. '\n' → logprob: -3.9151906967163086
    5. 'import' → logprob: -4.415190696716309
    6. ' 

' → logprob: -6.290190696716309
    7. '\' → logprob: -6.915190696716309
    8. '<|end|>' → logprob: -7.165190696716309
    9. '``' → logprob: -7.790190696716309
    10. 'newline' → logprob: -8.040190696716309

Token 11: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.11235778778791428
    2. '
' → logprob: -2.7373578548431396
    3. '```' → logprob: -3.8623578548431396
    4. 'import' → logprob: -4.2373576164245605
    5. ' 

' → logprob: -6.2373576164245605
    6. '\n' → logprob: -6.4873576164245605
    7. '``' → logprob: -7.1123576164245605
    8. 'class' → logprob: -8.112358093261719
    9. '
' → logprob: -8.237358093261719
    10. ',' → logprob: -8.612358093261719

Token 12: ' typing' (ID: 34152)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.009943070821464062
    2. 'queue' → logprob: -4.884943008422852
    3. ' itertools' → logprob: -7.384943008422852
    4. ' functools' → logprob: -7.634943008422852
    5. ' typing' → logprob: -8.134943008422852
    6. ' io' → logprob: -8.759943008422852
    7. ' time' → logprob: -8.759943008422852
    8. ' ' → logprob: -9.259943008422852
    9. ' concurrent' → logprob: -9.259943008422852
    10. ' math' → logprob: -9.509943008422852

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18208569288253784
    2. 'import' → logprob: -1.8070857524871826
    3. '.' → logprob: -6.4320855140686035
    4. '<|end|>' → logprob: -8.682085990905762
    5. '_import' → logprob: -8.932085990905762
    6. '.import' → logprob: -9.557085990905762
    7. '```' → logprob: -9.682085990905762
    8. ' ' → logprob: -9.932085990905762
    9. '	import' → logprob: -9.932085990905762
    10. '_' → logprob: -9.932085990905762

Token 14: ' List' (ID: 2655)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -1.1872798204421997
    2. ' Default' → logprob: -1.3122798204421997
    3. ' Dict' → logprob: -1.6872798204421997
    4. ' List' → logprob: -2.18727970123291
    5. 'Default' → logprob: -3.06227970123291
    6. 'Dict' → logprob: -3.43727970123291
    7. ' Any' → logprob: -4.06227970123291
    8. 'List' → logprob: -4.68727970123291
    9. ' Callable' → logprob: -4.93727970123291
    10. 'Any' → logprob: -4.93727970123291

Token 15: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.20563578605651855
    2. '
' → logprob: -2.0806357860565186
    3. 'class' → logprob: -3.7056357860565186
    4. '```' → logprob: -3.7056357860565186
    5. 'import' → logprob: -4.955636024475098
    6. '\n' → logprob: -6.455636024475098
    7. '
' → logprob: -7.330636024475098
    8. 'def' → logprob: -7.330636024475098
    9. '``' → logprob: -7.830636024475098
    10. ',' → logprob: -7.955636024475098

Token 16: ' Tuple' (ID: 50841)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.12617790699005127
    2. ' Dict' → logprob: -2.5011777877807617
    3. 'Tuple' → logprob: -4.251177787780762
    4. 'Set' → logprob: -5.126177787780762
    5. 'Optional' → logprob: -5.251177787780762
    6. 'Default' → logprob: -6.001177787780762
    7. ' defaultdict' → logprob: -6.501177787780762
    8. 'Any' → logprob: -6.751177787780762
    9. 'Deque' → logprob: -7.001177787780762
    10. ' Tuple' → logprob: -7.001177787780762

Token 17: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.15716974437236786
    2. '
' → logprob: -2.282169818878174
    3. 'class' → logprob: -3.282169818878174
    4. '```' → logprob: -6.532169818878174
    5. 'def' → logprob: -6.657169818878174
    6. 'import' → logprob: -6.782169818878174
    7. '
' → logprob: -7.657169818878174
    8. '\n' → logprob: -7.782169818878174
    9. '#' → logprob: -7.907169818878174
    10. ' class' → logprob: -8.782169342041016

Token 18: 'sys' (ID: 17324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7503789067268372
    2. 'class' → logprob: -0.8753789067268372
    3. 'def' → logprob: -2.8753788471221924
    4. 'c' → logprob: -3.0003788471221924
    5. '
' → logprob: -6.6253790855407715
    6. 'clas' → logprob: -6.7503790855407715
    7. '```' → logprob: -7.5003790855407715
    8. '\' → logprob: -7.7503790855407715
    9. 'de' → logprob: -8.000378608703613
    10. 'cla' → logprob: -8.250378608703613

Token 19: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1160349458805285e-05
    2. '.import' → logprob: -12.875011444091797
    3. '.`' → logprob: -13.000011444091797
    4. ' .' → logprob: -13.250011444091797
    5. '."""' → logprob: -14.625011444091797
    6. '.user' → logprob: -14.875011444091797
    7. '.​' → logprob: -14.875011444091797
    8. '.exit' → logprob: -15.000011444091797
    9. '.readline' → logprob: -15.250011444091797
    10. '.)' → logprob: -15.375011444091797

Token 20: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4537405967712402
    2. '_limit' → logprob: -1.7037405967712402
    3. '_execution' → logprob: -1.7037405967712402
    4. '_stack' → logprob: -2.5787405967712402
    5. '_trace' → logprob: -3.2037405967712402
    6. '_version' → logprob: -3.3287405967712402
    7. '_max' → logprob: -3.5787405967712402
    8. '_threshold' → logprob: -3.7037405967712402
    9. '_sys' → logprob: -3.8287405967712402
    10. ' _' → logprob: -4.07874059677124

Token 21: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.001285948441363871
    2. 'ursive' → logprob: -7.501286029815674
    3. 'urs' → logprob: -7.626286029815674
    4. 'ur' → logprob: -10.001285552978516
    5. 'urf' → logprob: -10.501285552978516
    6. 'limit' → logprob: -10.626285552978516
    7. '_limit' → logprob: -10.751285552978516
    8. '_' → logprob: -10.876285552978516
    9. 'urse' → logprob: -11.001285552978516
    10. 'ision' → logprob: -11.126285552978516

Token 22: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0009152670972980559
    2. '_limit' → logprob: -7.000915050506592
    3. '-' → logprob: -13.75091552734375
    4. 'depth' → logprob: -13.87591552734375
    5. '-limit' → logprob: -14.37591552734375
    6. 'lim' → logprob: -14.50091552734375
    7. '_depth' → logprob: -14.87591552734375
    8. ' limit' → logprob: -15.75091552734375
    9. 'Limit' → logprob: -17.50091552734375
    10. '.limit' → logprob: -17.62591552734375

Token 23: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.153795766294934e-06
    2. '("("' → logprob: -13.375005722045898
    3. '((' → logprob: -13.500005722045898
    4. ' (' → logprob: -13.875005722045898
    5. '(
' → logprob: -14.625005722045898
    6. '(

' → logprob: -15.000005722045898
    7. '```' → logprob: -15.125005722045898
    8. '()' → logprob: -15.375005722045898
    9. '<|end|>' → logprob: -15.375005722045898
    10. '("""' → logprob: -16.3750057220459

Token 24: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00862876046448946
    2. '100' → logprob: -4.758628845214844
    3. ' ' → logprob: -11.383628845214844
    4. '1' → logprob: -12.883628845214844
    5. '200' → logprob: -15.758628845214844
    6. '300' → logprob: -15.883628845214844
    7. '500' → logprob: -17.133628845214844
    8. '  ' → logprob: -17.883628845214844
    9. '   ' → logprob: -17.883628845214844
    10. 'int' → logprob: -18.508628845214844

Token 25: ' <<' (ID: 2256)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03125967085361481
    2. '0' → logprob: -4.281259536743164
    3. '00' → logprob: -4.781259536743164
    4. '6' → logprob: -5.906259536743164
    5. '5' → logprob: -6.031259536743164
    6. '<<' → logprob: -6.406259536743164
    7. '500' → logprob: -6.906259536743164
    8. '8' → logprob: -7.781259536743164
    9. '50' → logprob: -9.781259536743164
    10. '7' → logprob: -10.031259536743164

Token 26: ' ' (ID: 220)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.01831955648958683
    2. '20' → logprob: -4.018319606781006
    3. '2' → logprob: -8.768319129943848
    4. '27' → logprob: -12.268319129943848
    5. '7' → logprob: -12.643319129943848
    6. '15' → logprob: -12.768319129943848
    7. ' ' → logprob: -14.018319129943848
    8. '30' → logprob: -14.268319129943848
    9. '   ' → logprob: -15.268319129943848
    10. '5' → logprob: -15.268319129943848

Token 27: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.004033637698739767
    2. '20' → logprob: -5.62903356552124
    3. '7' → logprob: -8.629034042358398
    4. '2' → logprob: -8.629034042358398
    5. '27' → logprob: -9.754034042358398
    6. '5' → logprob: -12.504034042358398
    7. '15' → logprob: -12.754034042358398
    8. '30' → logprob: -13.004034042358398
    9. '9' → logprob: -14.004034042358398
    10. '22' → logprob: -14.129034042358398

Token 28: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.000003814697266
    4. '))' → logprob: -16.500003814697266
    5. ')

' → logprob: -16.750003814697266
    6. ')
' → logprob: -17.125003814697266
    7. '),' → logprob: -17.250003814697266
    8. ')`' → logprob: -18.500003814697266
    9. '```' → logprob: -18.875003814697266
    10. '）' → logprob: -19.250003814697266

Token 29: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2949833273887634
    2. 'def' → logprob: -1.4199833869934082
    3. 'n' → logprob: -4.419983386993408
    4. '
' → logprob: -6.919983386993408
    5. '

' → logprob: -8.41998291015625
    6. 'input' → logprob: -9.29498291015625
    7. 'N' → logprob: -9.29498291015625
    8. 'MOD' → logprob: -9.41998291015625
    9. ' class' → logprob: -9.79498291015625
    10. '#' → logprob: -9.91998291015625

Token 30: ' Graph' (ID: 15559)
  Prédit: ' Tar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tar' → logprob: -0.8192409873008728
    2. ' Solution' → logprob: -1.5692410469055176
    3. ' Graph' → logprob: -2.3192410469055176
    4. ' Union' → logprob: -2.5692410469055176
    5. ' DFS' → logprob: -3.4442410469055176
    6. ' Trie' → logprob: -3.4442410469055176
    7. ' Tree' → logprob: -3.6942410469055176
    8. 'Solution' → logprob: -3.9442410469055176
    9. ' Segment' → logprob: -4.194241046905518
    10. 'Tar' → logprob: -4.319241046905518

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011105302110081539
    2. ' :' → logprob: -9.750110626220703
    3. '(' → logprob: -10.000110626220703
    4. ':
' → logprob: -12.125110626220703
    5. '():' → logprob: -14.750110626220703
    6. ':def' → logprob: -15.000110626220703
    7. '):' → logprob: -15.250110626220703
    8. ':**' → logprob: -15.500110626220703
    9. '<|end|>' → logprob: -15.750110626220703
    10. ':

' → logprob: -16.125110626220703

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014571134001016617
    2. ' def' → logprob: -5.139571189880371
    3. '    
' → logprob: -5.889571189880371
    4. '<|end|>' → logprob: -6.514571189880371
    5. 'def' → logprob: -6.639571189880371
    6. '    ' → logprob: -7.139571189880371
    7. '```' → logprob: -7.764571189880371
    8. ':' → logprob: -7.764571189880371
    9. '  ' → logprob: -8.264571189880371
    10. '
' → logprob: -8.264571189880371

Token 33: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.019900288432836533
    2. 'def' (adapté à ' def') → logprob: -4.019900321960449
    3. '   ' → logprob: -7.019900321960449
    4. '    ' → logprob: -7.519900321960449
    5. ' ' → logprob: -9.39490032196045
    6. ' 
' → logprob: -9.64490032196045
    7. '    
' → logprob: -10.01990032196045
    8. ' ' → logprob: -10.01990032196045
    9. '	def' → logprob: -10.39490032196045
    10. ' de' → logprob: -11.51990032196045

Token 34: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.30839774012565613
    2. 'itialize' → logprob: -1.6833977699279785
    3. 'it' → logprob: -2.9333977699279785
    4. '__' → logprob: -4.8083977699279785
    5. 'ialize' → logprob: -5.0583977699279785
    6. 'italize' → logprob: -5.5583977699279785
    7. ' init' → logprob: -6.0583977699279785
    8. 'init' → logprob: -6.5583977699279785
    9. 'itial' → logprob: -6.9333977699279785
    10. 'ine' → logprob: -7.1833977699279785

Token 35: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'inite' → logprob: -19.0
    3. 'ini' → logprob: -19.25
    4. ' init' → logprob: -19.375
    5. 'int' → logprob: -21.75
    6. 'innit' → logprob: -21.75
    7. '	init' → logprob: -21.875
    8. 'in' → logprob: -21.875
    9. '_init' → logprob: -22.375
    10. 'inti' → logprob: -23.25

Token 36: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.027100708335638046
    2. '(self' → logprob: -3.9021008014678955
    3. '(' → logprob: -5.902100563049316
    4. '__' → logprob: -5.902100563049316
    5. '__(
' → logprob: -7.527100563049316
    6. '<|end|>' → logprob: -9.277100563049316
    7. ')(' → logprob: -9.527100563049316
    8. '__((' → logprob: -9.652100563049316
    9. '_(' → logprob: -9.652100563049316
    10. ' (' → logprob: -10.402100563049316

Token 37: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013335748808458447
    2. ' self' → logprob: -6.626333713531494
    3. ')' → logprob: -12.001333236694336
    4. ' ' → logprob: -14.126333236694336
    5. '	self' → logprob: -15.501333236694336
    6. '   ' → logprob: -15.876333236694336
    7. 's' → logprob: -16.001333236694336
    8. '(self' → logprob: -16.251333236694336
    9. ' )' → logprob: -16.501333236694336
    10. 'elf' → logprob: -16.626333236694336

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11368919909000397
    2. ' ,' → logprob: -2.2386891841888428
    3. ' )' → logprob: -8.363689422607422
    4. ')' → logprob: -8.988689422607422
    5. ' self' → logprob: -8.988689422607422
    6. ' ' → logprob: -9.113689422607422
    7. 'self' → logprob: -9.238689422607422
    8. ',self' → logprob: -9.488689422607422
    9. '_self' → logprob: -10.488689422607422
    10. '(' → logprob: -11.113689422607422

Token 39: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04627523571252823
    2. 'n' → logprob: -3.1712751388549805
    3. ' self' → logprob: -5.9212751388549805
    4. 'self' → logprob: -7.9212751388549805
    5. ' vertices' → logprob: -9.92127513885498
    6. ' num' → logprob: -10.04627513885498
    7. '   ' → logprob: -10.67127513885498
    8. ')' → logprob: -10.67127513885498
    9. ' )' → logprob: -10.79627513885498
    10. 'num' → logprob: -11.67127513885498

Token 40: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2379642128944397
    2. ':' → logprob: -1.987964153289795
    3. ',' → logprob: -2.987964153289795
    4. ')' → logprob: -3.737964153289795
    5. ' ):' → logprob: -7.862964153289795
    6. ':int' → logprob: -8.987964630126953
    7. '):
' → logprob: -10.112964630126953
    8. ' )' → logprob: -10.862964630126953
    9. ' ,' → logprob: -10.987964630126953
    10. ' :' → logprob: -12.237964630126953

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.023478863760828972
    2. 'int' → logprob: -3.7734787464141846
    3. ')' → logprob: -8.898478507995605
    4. ' )' → logprob: -9.648478507995605
    5. ' ' → logprob: -10.898478507995605
    6. ':int' → logprob: -12.273478507995605
    7. ' ' → logprob: -13.398478507995605
    8. '=int' → logprob: -13.398478507995605
    9. ',int' → logprob: -13.523478507995605
    10. ']int' → logprob: -13.773478507995605

Token 42: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06405437737703323
    2. '):' → logprob: -2.814054489135742
    3. ')' → logprob: -6.189054489135742
    4. ' ,' → logprob: -10.939054489135742
    5. ' ):' → logprob: -12.189054489135742
    6. ',n' → logprob: -12.814054489135742
    7. ':' → logprob: -13.064054489135742
    8. '),' → logprob: -13.689054489135742
    9. '):
' → logprob: -14.439054489135742
    10. ',int' → logprob: -14.439054489135742

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010612203739583492
    2. ')' → logprob: -6.0106120109558105
    3. 'self' → logprob: -6.1356120109558105
    4. '    ' → logprob: -6.2606120109558105
    5. '   ' → logprob: -6.5106120109558105
    6. 'n' → logprob: -7.2606120109558105
    7. '        ' → logprob: -8.385612487792969
    8. ' self' → logprob: -8.385612487792969
    9. ' ' → logprob: -8.385612487792969
    10. '     ' → logprob: -8.510612487792969

Token 44: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.23518364131450653
    2. 'self' (adapté à ' self') → logprob: -1.735183596611023
    3. '       ' → logprob: -3.6101837158203125
    4. 'n' → logprob: -5.7351837158203125
    5. '   ' → logprob: -6.6101837158203125
    6. ' ' → logprob: -7.2351837158203125
    7. ' ' → logprob: -8.360183715820312
    8. 's' → logprob: -8.485183715820312
    9. '	self' → logprob: -8.860183715820312
    10. ' n' → logprob: -9.235183715820312

Token 45: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.039972420781850815
    2. '.n' → logprob: -3.2899723052978516
    3. ' .' → logprob: -6.664972305297852
    4. '.nodes' → logprob: -7.539972305297852
    5. '.graph' → logprob: -10.539972305297852
    6. ' n' → logprob: -11.039972305297852
    7. '.data' → logprob: -11.164972305297852
    8. ' ' → logprob: -11.789972305297852
    9. '.vertices' → logprob: -11.789972305297852
    10. '.node' → logprob: -12.039972305297852

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05145440623164177
    2. '=' → logprob: -3.0514543056488037
    3. ' ' → logprob: -5.926454544067383
    4. ',' → logprob: -9.051454544067383
    5. ' ,' → logprob: -10.301454544067383
    6. ')' → logprob: -10.926454544067383
    7. ' =
' → logprob: -12.176454544067383
    8. ' )' → logprob: -12.301454544067383
    9. '<|end|>' → logprob: -12.426454544067383
    10. '<|end|>' → logprob: -13.051454544067383

Token 47: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02327156811952591
    2. 'n' → logprob: -3.7732715606689453
    3. ' ' → logprob: -10.648271560668945
    4. ' ' → logprob: -13.023271560668945
    5. '	n' → logprob: -16.148271560668945
    6. ' ‌' → logprob: -17.773271560668945
    7. '_' → logprob: -18.023271560668945
    8. ' н' → logprob: -18.398271560668945
    9. '_n' → logprob: -18.523271560668945
    10. '    ' → logprob: -19.148271560668945

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10405147075653076
    2. '<|end|>' → logprob: -2.7290515899658203
    3. '       ' → logprob: -3.4790515899658203
    4. ' 
' → logprob: -7.60405158996582
    5. '        ' → logprob: -7.60405158996582
    6. '  
' → logprob: -7.72905158996582
    7. ' ' → logprob: -8.10405158996582
    8. '<|end|>' → logprob: -8.22905158996582
    9. '        
' → logprob: -8.35405158996582
    10. '   ' → logprob: -8.97905158996582

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013645237777382135
    2. '<|end|>' → logprob: -7.501364707946777
    3. '
' → logprob: -7.876364707946777
    4. '   ' → logprob: -8.751364707946777
    5. '        
' → logprob: -9.251364707946777
    6. '        ' → logprob: -10.126364707946777
    7. ' ' → logprob: -10.751364707946777
    8. '      ' → logprob: -11.001364707946777
    9. '  
' → logprob: -11.001364707946777
    10. '    ' → logprob: -11.126364707946777

Token 50: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33836454153060913
    2. 'self' (adapté à ' self') → logprob: -1.463364601135254
    3. ' self' → logprob: -3.588364601135254
    4. '
' → logprob: -3.713364601135254
    5. ' ' → logprob: -6.838364601135254
    6. '   ' → logprob: -7.213364601135254
    7. '```' → logprob: -7.838364601135254
    8. ' 
' → logprob: -8.338364601135254
    9. '        
' → logprob: -8.588364601135254
    10. '  
' → logprob: -8.963364601135254

Token 51: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.5512360334396362
    2. ' .' → logprob: -1.6762360334396362
    3. '.edges' → logprob: -2.301236152648926
    4. '.graph' → logprob: -3.051236152648926
    5. '.' → logprob: -3.176236152648926
    6. '.nodes' → logprob: -4.801236152648926
    7. '._' → logprob: -5.051236152648926
    8. ' adjacency' → logprob: -5.176236152648926
    9. 'adj' → logprob: -5.301236152648926
    10. '_ad' → logprob: -5.301236152648926

Token 52: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00020401719666551799
    2. 'jac' → logprob: -8.500204086303711
    3. 'ja' → logprob: -15.875204086303711
    4. '[j' → logprob: -15.875204086303711
    5. 'js' → logprob: -16.12520408630371
    6. 'jc' → logprob: -16.37520408630371
    7. ' j' → logprob: -18.00020408630371
    8. 'd' → logprob: -18.12520408630371
    9. '	j' → logprob: -18.75020408630371
    10. '_j' → logprob: -18.75020408630371

Token 53: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6840116381645203
    2. 'acency' → logprob: -1.184011697769165
    3. ' =' → logprob: -1.684011697769165
    4. '[' → logprob: -5.934011459350586
    5. '_list' → logprob: -8.059011459350586
    6. 'acent' → logprob: -8.434011459350586
    7. 'List' → logprob: -9.059011459350586
    8. 'ac' → logprob: -9.184011459350586
    9. '=[]' → logprob: -9.184011459350586
    10. ' ' → logprob: -10.434011459350586

Token 54: ' defaultdict' (ID: 107098)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.305616170167923
    2. ' defaultdict' → logprob: -1.5556161403656006
    3. '[' → logprob: -3.5556161403656006
    4. 'default' → logprob: -4.05561637878418
    5. ' [' → logprob: -5.05561637878418
    6. '[]' → logprob: -12.80561637878418
    7. '[:]' → logprob: -13.18061637878418
    8. ' []' → logprob: -13.80561637878418
    9. ' default' → logprob: -14.30561637878418
    10. ' ' → logprob: -14.55561637878418

Token 55: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.014221210032701492
    2. '(' → logprob: -4.26422119140625
    3. '(
' → logprob: -10.51422119140625
    4. '(lambda' → logprob: -10.76422119140625
    5. '(set' → logprob: -11.88922119140625
    6. 'list' → logprob: -14.13922119140625
    7. '(

' → logprob: -14.26422119140625
    8. '(l' → logprob: -14.88922119140625
    9. '(List' → logprob: -15.26422119140625
    10. '(dict' → logprob: -16.13922119140625

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ' )' → logprob: -12.375006675720215
    3. '()' → logprob: -14.000006675720215
    4. ')
' → logprob: -14.250006675720215
    5. '(' → logprob: -14.500006675720215
    6. '[' → logprob: -14.875006675720215
    7. '())' → logprob: -16.00000762939453
    8. '   ' → logprob: -16.25000762939453
    9. ' ' → logprob: -16.37500762939453
    10. '       ' → logprob: -17.25000762939453

Token 57: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' node' (ID: 4596)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2882213592529297
    2. '<|end|>' → logprob: -1.4132213592529297
    3. ' adjacency' → logprob: -1.4132213592529297
    4. ' edges' → logprob: -3.0382213592529297
    5. ' defaultdict' → logprob: -3.6632213592529297
    6. ')' → logprob: -3.7882213592529297
    7. 'Edges' → logprob: -3.9132213592529297
    8. '<|end|>' → logprob: -4.16322135925293
    9. '  ' → logprob: -5.03822135925293
    10. 'Adj' → logprob: -5.03822135925293

Token 60: ' ->' (ID: 2747)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8779866695404053
    2. ':' → logprob: -1.2529866695404053
    3. ' ->' → logprob: -2.1279866695404053
    4. '<|end|>' → logprob: -2.8779866695404053
    5. ')' → logprob: -3.1279866695404053
    6. '_' → logprob: -3.6279866695404053
    7. ' ' → logprob: -3.8779866695404053
    8. '_neighbors' → logprob: -4.752986907958984
    9. '<|end|>' → logprob: -5.252986907958984
    10. ' :' → logprob: -6.002986907958984

Token 61: ' list' (ID: 1562)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.43434053659439087
    2. ' neighbors' → logprob: -1.809340476989746
    3. 'neighbors' → logprob: -2.309340476989746
    4. ' list' → logprob: -3.059340476989746
    5. 'List' → logprob: -3.559340476989746
    6. 'list' → logprob: -4.809340476989746
    7. ' neighboring' → logprob: -6.684340476989746
    8. ' edges' → logprob: -6.934340476989746
    9. 'neighbor' → logprob: -7.059340476989746
    10. ' adjacent' → logprob: -7.309340476989746

Token 62: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5185340046882629
    2. '<|end|>' → logprob: -1.1435339450836182
    3. '[int' → logprob: -2.518533945083618
    4. '<|end|>' → logprob: -6.268534183502197
    5. '[' → logprob: -6.518534183502197
    6. '(int' → logprob: -7.143534183502197
    7. '<int' → logprob: -7.893534183502197
    8. 'of' → logprob: -8.518533706665039
    9. ' ' → logprob: -8.643533706665039
    10. ')' → logprob: -9.018533706665039

Token 63: ' (' (ID: 350)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.3795924484729767
    2. ' neighbors' → logprob: -1.3795924186706543
    3. '<|end|>' → logprob: -3.0045924186706543
    4. 'neighbor' → logprob: -5.504592418670654
    5. ' edges' → logprob: -5.754592418670654
    6. ' neighboring' → logprob: -6.004592418670654
    7. ' tuples' → logprob: -7.004592418670654
    8. 'edges' → logprob: -7.254592418670654
    9. ' (' → logprob: -7.254592418670654
    10. ' nodes' → logprob: -7.379592418670654

Token 64: 'neighbor' (ID: 108409)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6521400809288025
    2. 'int' → logprob: -2.0271401405334473
    3. 'neighbor' → logprob: -2.0271401405334473
    4. ' neighbor' → logprob: -2.6521401405334473
    5. '<|end|>' → logprob: -3.6521401405334473
    6. ' tuple' → logprob: -3.7771401405334473
    7. ')' → logprob: -3.9021401405334473
    8. ' Tuple' → logprob: -3.9021401405334473
    9. ' node' → logprob: -4.402140140533447
    10. 'neighbors' → logprob: -4.527140140533447

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.245724504580721e-05
    2. ' ,' → logprob: -9.375092506408691
    3. '<|end|>' → logprob: -12.875092506408691
    4. '```' → logprob: -13.375092506408691
    5. ')' → logprob: -14.000092506408691
    6. '‌,' → logprob: -14.250092506408691
    7. ',node' → logprob: -14.625092506408691
    8. '_,' → logprob: -14.750092506408691
    9. ',int' → logprob: -15.125092506408691
    10. ' ' → logprob: -15.125092506408691

Token 66: ' weight' (ID: 6049)
  Prédit: ' weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.12740647792816162
    2. 'weight' → logprob: -2.502406597137451
    3. ' edge' → logprob: -3.627406597137451
    4. ' color' → logprob: -5.627406597137451
    5. ')' → logprob: -6.002406597137451
    6. ' )' → logprob: -6.377406597137451
    7. 'edge' → logprob: -6.502406597137451
    8. ' cost' → logprob: -7.502406597137451
    9. 'color' → logprob: -8.127406120300293
    10. ' w' → logprob: -8.252406120300293

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.889424836728722e-05
    2. ',' → logprob: -9.375099182128906
    3. ' )' → logprob: -11.500099182128906
    4. '),' → logprob: -12.875099182128906
    5. ')
' → logprob: -14.625099182128906
    6. ' ' → logprob: -15.500099182128906
    7. ',)' → logprob: -16.000099182128906
    8. '   ' → logprob: -16.125099182128906
    9. '))' → logprob: -16.750099182128906
    10. ')}' → logprob: -17.125099182128906

Token 68: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4615831971168518
    2. '<|end|>' → logprob: -1.461583137512207
    3. '   ' → logprob: -2.461583137512207
    4. ')' → logprob: -3.836583137512207
    5. '    
' → logprob: -4.586583137512207
    6. ' 
' → logprob: -5.461583137512207
    7. '  
' → logprob: -5.711583137512207
    8. ' ' → logprob: -5.836583137512207
    9. '' → logprob: -5.836583137512207
    10. '\n' → logprob: -6.336583137512207

Token 69: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7196123003959656
    2. '   ' → logprob: -1.2196123600006104
    3. ' def' → logprob: -1.5946123600006104
    4. '	def' → logprob: -5.094612121582031
    5. '
' → logprob: -5.594612121582031
    6. '    
' → logprob: -5.969612121582031
    7. '<|end|>' → logprob: -6.719612121582031
    8. ' 
' → logprob: -7.969612121582031
    9. ' ' → logprob: -8.219612121582031
    10. '<|end|>' → logprob: -9.719612121582031

Token 70: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008652626536786556
    2. ' def' → logprob: -4.758652687072754
    3. 'd' → logprob: -11.008652687072754
    4. '   ' → logprob: -11.508652687072754
    5. 'de' → logprob: -11.508652687072754
    6. ' ' → logprob: -14.383652687072754
    7. ' 
' → logprob: -15.008652687072754
    8. ')' → logprob: -15.633652687072754
    9. '
' → logprob: -15.883652687072754
    10. '```' → logprob: -16.258651733398438

Token 71: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.3321256935596466
    2. '_add' → logprob: -1.3321256637573242
    3. '_' → logprob: -4.332125663757324
    4. ' _' → logprob: -5.457125663757324
    5. '_ad' → logprob: -8.207125663757324
    6. ' ' → logprob: -8.332125663757324
    7. 'add' → logprob: -8.582125663757324
    8. '_insert' → logprob: -8.957125663757324
    9. '.add' → logprob: -9.207125663757324
    10. ' def' → logprob: -9.332125663757324

Token 72: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.02341388165950775
    2. '_' → logprob: -3.773413896560669
    3. '_node' → logprob: -9.52341365814209
    4. '_neighbor' → logprob: -9.52341365814209
    5. '_edges' → logprob: -11.14841365814209
    6. '_connection' → logprob: -12.39841365814209
    7. '_vertex' → logprob: -14.02341365814209
    8. '_e' → logprob: -15.02341365814209
    9. '_ed' → logprob: -15.02341365814209
    10. '```' → logprob: -15.64841365814209

Token 73: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06307418644428253
    2. '(self' → logprob: -2.8130741119384766
    3. ' (' → logprob: -7.063074111938477
    4. '(s' → logprob: -8.563074111938477
    5. '(node' → logprob: -11.438074111938477
    6. '(
' → logprob: -11.438074111938477
    7. ' ' → logprob: -11.813074111938477
    8. 'self' → logprob: -12.563074111938477
    9. '(u' → logprob: -12.938074111938477
    10. '(a' → logprob: -12.938074111938477

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002201763214543462
    2. ' ,' → logprob: -6.127201557159424
    3. ')' → logprob: -11.627202033996582
    4. ',node' → logprob: -12.377202033996582
    5. 'self' → logprob: -14.627202033996582
    6. 'u' → logprob: -14.752202033996582
    7. ' ' → logprob: -14.752202033996582
    8. 'a' → logprob: -15.127202033996582
    9. '_,' → logprob: -15.252202033996582
    10. 's' → logprob: -15.252202033996582

Token 75: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.01274813711643219
    2. 'u' → logprob: -4.3877482414245605
    3. ' self' → logprob: -8.637747764587402
    4. 'self' → logprob: -10.762747764587402
    5. ' node' → logprob: -11.637747764587402
    6. '   ' → logprob: -11.762747764587402
    7. ')' → logprob: -11.762747764587402
    8. '	u' → logprob: -12.012747764587402
    9. ' )' → logprob: -13.387747764587402
    10. ' ' → logprob: -13.762747764587402

Token 76: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005243833642452955
    2. ' ,' → logprob: -5.25524377822876
    3. ',u' → logprob: -11.880244255065918
    4. '‌,' → logprob: -13.880244255065918
    5. ':' → logprob: -14.380244255065918
    6. ',int' → logprob: -14.880244255065918
    7. '<|end|>' → logprob: -14.880244255065918
    8. '<|end|>' → logprob: -15.130244255065918
    9. ')' → logprob: -15.880244255065918
    10. '```' → logprob: -16.0052433013916

Token 77: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.9423764944076538
    2. ',' → logprob: -1.3173764944076538
    3. 'int' → logprob: -1.4423764944076538
    4. ' ,' → logprob: -2.4423766136169434
    5. ',int' → logprob: -4.942376613616943
    6. ')' → logprob: -5.067376613616943
    7. ':int' → logprob: -6.442376613616943
    8. ' )' → logprob: -6.817376613616943
    9. ' ' → logprob: -6.942376613616943
    10. ' u' → logprob: -6.942376613616943

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ' ,' → logprob: -12.250005722045898
    3. '‌,' → logprob: -14.500005722045898
    4. ',u' → logprob: -14.875005722045898
    5. '<|end|>' → logprob: -16.0000057220459
    6. ')' → logprob: -17.5000057220459
    7. ',int' → logprob: -17.7500057220459
    8. ',
' → logprob: -18.0000057220459
    9. '‍,' → logprob: -18.3750057220459
    10. 'u' → logprob: -18.3750057220459

Token 79: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.03368627279996872
    2. 'v' → logprob: -3.4086861610412598
    3. ' ' → logprob: -10.158686637878418
    4. '	v' → logprob: -14.408686637878418
    5. ',' → logprob: -14.658686637878418
    6. '    ' → logprob: -15.533686637878418
    7. ',v' → logprob: -15.533686637878418
    8. ')v' → logprob: -16.1586856842041
    9. ')' → logprob: -16.2836856842041
    10. '```' → logprob: -17.2836856842041

Token 80: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019150081789121032
    2. ' ,' → logprob: -8.625191688537598
    3. ')' → logprob: -11.500191688537598
    4. '‌,' → logprob: -14.500191688537598
    5. '<|end|>' → logprob: -14.750191688537598
    6. '<|end|>' → logprob: -15.625191688537598
    7. ':' → logprob: -15.750191688537598
    8. '   ' → logprob: -16.12519073486328
    9. ',int' → logprob: -16.37519073486328
    10. ' ' → logprob: -16.50019073486328

Token 81: ' int' (ID: 677)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1987534761428833
    2. 'int' → logprob: -1.1987534761428833
    3. ' int' → logprob: -1.4487534761428833
    4. ' ,' → logprob: -2.0737533569335938
    5. ',int' → logprob: -3.5737533569335938
    6. ')' → logprob: -5.823753356933594
    7. ' ' → logprob: -6.073753356933594
    8. ' )' → logprob: -6.073753356933594
    9. ':int' → logprob: -8.948753356933594
    10. ' ),' → logprob: -9.073753356933594

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001434690784662962
    2. ' ,' → logprob: -9.500143051147461
    3. ')' → logprob: -9.625143051147461
    4. '),' → logprob: -13.625143051147461
    5. '):' → logprob: -14.000143051147461
    6. ' )' → logprob: -15.375143051147461
    7. '`,' → logprob: -16.62514305114746
    8. '‌,' → logprob: -16.62514305114746
    9. ',
' → logprob: -17.12514305114746
    10. ',)' → logprob: -17.25014305114746

Token 83: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.005433200858533382
    2. 'w' → logprob: -5.880433082580566
    3. ' ' → logprob: -6.255433082580566
    4. ' weight' → logprob: -8.005433082580566
    5. ' )' → logprob: -8.630433082580566
    6. ')' → logprob: -9.380433082580566
    7. ' ' → logprob: -9.630433082580566
    8. 'weight' → logprob: -10.755433082580566
    9. ',' → logprob: -12.755433082580566
    10. ' int' → logprob: -13.130433082580566

Token 84: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16598257422447205
    2. ')' → logprob: -1.9159826040267944
    3. ':' → logprob: -6.165982723236084
    4. ',' → logprob: -6.165982723236084
    5. ' ):' → logprob: -7.165982723236084
    6. '=' → logprob: -7.790982723236084
    7. '):
' → logprob: -8.415982246398926
    8. ' )' → logprob: -9.165982246398926
    9. ' ' → logprob: -11.415982246398926
    10. ')=' → logprob: -12.415982246398926

Token 85: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47416338324546814
    2. ' )' → logprob: -1.3491634130477905
    3. ' int' → logprob: -2.724163293838501
    4. ' ):' → logprob: -3.599163293838501
    5. 'int' → logprob: -4.22416353225708
    6. '):' → logprob: -5.09916353225708
    7. ' ' → logprob: -5.84916353225708
    8. ':int' → logprob: -6.97416353225708
    9. '[int' → logprob: -8.974163055419922
    10. ' ):
' → logprob: -8.974163055419922

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03811240941286087
    2. ')' → logprob: -3.2881124019622803
    3. ' ):' → logprob: -9.91311264038086
    4. '):
' → logprob: -11.53811264038086
    5. ':' → logprob: -11.91311264038086
    6. ' )' → logprob: -12.66311264038086
    7. ',' → logprob: -14.16311264038086
    8. '):
' → logprob: -15.16311264038086
    9. '   ' → logprob: -15.53811264038086
    10. ')：' → logprob: -15.78811264038086

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03727263957262039
    2. '    ' → logprob: -4.6622724533081055
    3. '   ' → logprob: -4.6622724533081055
    4. ' ' → logprob: -4.9122724533081055
    5. ')' → logprob: -5.5372724533081055
    6. '        ' → logprob: -6.1622724533081055
    7. ' 
' → logprob: -6.2872724533081055
    8. '        
' → logprob: -7.5372724533081055
    9. ' self' → logprob: -8.412272453308105
    10. '    
' → logprob: -8.537272453308105

Token 88: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41883188486099243
    2. ' self' → logprob: -1.6688318252563477
    3. '        ' → logprob: -2.1688318252563477
    4. '       ' → logprob: -4.168831825256348
    5. ' ' → logprob: -4.793831825256348
    6. 'self' (adapté à ' self') → logprob: -5.043831825256348
    7. ' 
' → logprob: -5.168831825256348
    8. ')' → logprob: -7.293831825256348
    9. '        
' → logprob: -7.543831825256348
    10. ' s' → logprob: -8.293831825256348

Token 89: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.38697549700737
    2. '.' → logprob: -1.1369755268096924
    3. ' .' → logprob: -10.886975288391113
    4. '.add' → logprob: -10.886975288391113
    5. '.u' → logprob: -11.261975288391113
    6. '.Ad' → logprob: -12.011975288391113
    7. ').' → logprob: -12.011975288391113
    8. '.user' → logprob: -12.636975288391113
    9. 'adj' → logprob: -13.011975288391113
    10. '.s' → logprob: -13.136975288391113

Token 90: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00784912146627903
    2. 'd' → logprob: -4.882849216461182
    3. '[' → logprob: -9.257848739624023
    4. '.' → logprob: -9.632848739624023
    5. '```' → logprob: -10.882848739624023
    6. '   ' → logprob: -11.257848739624023
    7. '.append' → logprob: -11.632848739624023
    8. '[j' → logprob: -11.882848739624023
    9. 'g' → logprob: -12.132848739624023
    10. 'f' → logprob: -12.257848739624023

Token 91: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0024763736873865128
    2. '[' → logprob: -6.002476215362549
    3. ' [' → logprob: -14.877476692199707
    4. '```' → logprob: -16.50247573852539
    5. 'u' → logprob: -17.00247573852539
    6. '   ' → logprob: -17.00247573852539
    7. ')[' → logprob: -17.25247573852539
    8. '[v' → logprob: -17.50247573852539
    9. '\[' → logprob: -17.87747573852539
    10. '
' → logprob: -18.25247573852539

Token 92: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03948185220360756
    2. ').' → logprob: -3.2894818782806396
    3. ']' → logprob: -6.6644816398620605
    4. ')' → logprob: -9.789482116699219
    5. ' ].' → logprob: -9.914482116699219
    6. '.append' → logprob: -10.414482116699219
    7. '.' → logprob: -11.914482116699219
    8. '[' → logprob: -12.039482116699219
    9. '   ' → logprob: -12.414482116699219
    10. ',' → logprob: -12.914482116699219

Token 93: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. '.append' → logprob: -14.375000953674316
    3. ' append' → logprob: -14.875000953674316
    4. 'Append' → logprob: -16.500001907348633
    5. 'appen' → logprob: -18.375001907348633
    6. '_append' → logprob: -18.375001907348633
    7. '	append' → logprob: -19.375001907348633
    8. '```' → logprob: -19.500001907348633
    9. 'ap' → logprob: -19.875001907348633
    10. 'app' → logprob: -20.250001907348633

Token 94: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014172209426760674
    2. '(' → logprob: -4.264172077178955
    3. '(v' → logprob: -12.264172554016113
    4. '(
' → logprob: -13.139172554016113
    5. ' (' → logprob: -13.764172554016113
    6. ' ((' → logprob: -14.264172554016113
    7. ')((' → logprob: -16.014171600341797
    8. ')' → logprob: -16.389171600341797
    9. '(('' → logprob: -17.014171600341797
    10. '([' → logprob: -17.139171600341797

Token 95: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.6240566083070007e-06
    2. ' v' → logprob: -13.375001907348633
    3. ')v' → logprob: -17.625001907348633
    4. '	v' → logprob: -20.875001907348633
    5. ',v' → logprob: -21.250001907348633
    6. 'vq' → logprob: -21.875001907348633
    7. 'vj' → logprob: -22.000001907348633
    8. '?v' → logprob: -22.250001907348633
    9. ')' → logprob: -22.250001907348633
    10. 'vi' → logprob: -22.625001907348633

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.833878508885391e-05
    2. ' ,' → logprob: -10.625038146972656
    3. ',w' → logprob: -11.375038146972656
    4. ',
' → logprob: -14.375038146972656
    5. '<|end|>' → logprob: -14.375038146972656
    6. '‌,' → logprob: -14.875038146972656
    7. '`,' → logprob: -15.375038146972656
    8. '),' → logprob: -15.750038146972656
    9. ')' → logprob: -15.750038146972656
    10. '```' → logprob: -16.000038146972656

Token 97: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.726855993270874
    2. 'w' → logprob: -0.976855993270874
    3. ' ' → logprob: -1.976855993270874
    4. ' )' → logprob: -6.976856231689453
    5. ' ' → logprob: -7.851856231689453
    6. ')' → logprob: -8.851856231689453
    7. ' 
' → logprob: -9.601856231689453
    8. ',' → logprob: -12.351856231689453
    9. '```' → logprob: -12.351856231689453
    10. 's' → logprob: -12.476856231689453

Token 98: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931729912757874
    2. '))' → logprob: -0.6931729912757874
    3. '),' → logprob: -11.0681734085083
    4. '))
' → logprob: -12.6931734085083
    5. ',' → logprob: -12.9431734085083
    6. ' ))' → logprob: -13.4431734085083
    7. ' )' → logprob: -13.6931734085083
    8. ')
' → logprob: -13.6931734085083
    9. ')))' → logprob: -14.5681734085083
    10. '));' → logprob: -16.318172454833984

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12659698724746704
    2. '<|end|>' → logprob: -2.5015969276428223
    3. '
' → logprob: -3.3765969276428223
    4. ')' → logprob: -6.376596927642822
    5. ' 
' → logprob: -8.50159740447998
    6. ' ' → logprob: -8.75159740447998
    7. '        
' → logprob: -8.87659740447998
    8. '<|end|>' → logprob: -9.12659740447998
    9. '  
' → logprob: -9.25159740447998
    10. '   ' → logprob: -9.25159740447998

Token 100: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9540185332298279
    2. 'self' (adapté à ' self') → logprob: -0.9540185332298279
    3. ' ' → logprob: -2.2040185928344727
    4. '       ' → logprob: -2.3290185928344727
    5. ')' → logprob: -5.079018592834473
    6. ' 
' → logprob: -5.579018592834473
    7. '        ' → logprob: -5.579018592834473
    8. '<|end|>' → logprob: -6.079018592834473
    9. ' ' → logprob: -6.579018592834473
    10. '
' → logprob: -6.829018592834473

Token 101: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.20259281992912292
    2. '.' → logprob: -1.7025928497314453
    3. ' .' → logprob: -7.452592849731445
    4. ').' → logprob: -8.452592849731445
    5. '`.' → logprob: -9.327592849731445
    6. '<|end|>' → logprob: -10.202592849731445
    7. '.d' → logprob: -10.952592849731445
    8. '
' → logprob: -10.952592849731445
    9. '‍.' → logprob: -11.202592849731445
    10. ' ' → logprob: -11.327592849731445

Token 102: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.2842308680992573e-05
    2. '.' → logprob: -12.000022888183594
    3. '[j' → logprob: -12.125022888183594
    4. '[' → logprob: -12.625022888183594
    5. '.j' → logprob: -13.000022888183594
    6. 'ј' → logprob: -13.250022888183594
    7. '   ' → logprob: -14.000022888183594
    8. '.append' → logprob: -14.625022888183594
    9. 'f' → logprob: -14.750022888183594
    10. ' j' → logprob: -14.875022888183594

Token 103: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00010556964843999594
    2. '[' → logprob: -9.250105857849121
    3. '[u' → logprob: -11.750105857849121
    4. 'v' → logprob: -14.625105857849121
    5. '[z' → logprob: -15.625105857849121
    6. ' [' → logprob: -15.750105857849121
    7. '[w' → logprob: -15.875105857849121
    8. '```' → logprob: -16.250104904174805
    9. ')[' → logprob: -16.500104904174805
    10. '[V' → logprob: -17.000104904174805

Token 104: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.016002926975488663
    2. ',' → logprob: -4.516003131866455
    3. ')' → logprob: -5.516003131866455
    4. '].' → logprob: -7.766003131866455
    5. '   ' → logprob: -8.766002655029297
    6. ' ).' → logprob: -8.891002655029297
    7. '       ' → logprob: -9.016002655029297
    8. ' ' → logprob: -11.391002655029297
    9. '.append' → logprob: -11.391002655029297
    10. ')].' → logprob: -11.516002655029297

Token 105: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.416665640543215e-05
    2. 'adj' → logprob: -10.37503433227539
    3. '.append' → logprob: -13.62503433227539
    4. 'appen' → logprob: -14.00003433227539
    5. ' append' → logprob: -14.37503433227539
    6. 'app' → logprob: -16.00003433227539
    7. '	append' → logprob: -16.75003433227539
    8. 'add' → logprob: -16.87503433227539
    9. 'Append' → logprob: -17.37503433227539
    10. ' ' → logprob: -17.75003433227539

Token 106: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00019769940990954638
    2. '(' → logprob: -8.625197410583496
    3. '(u' → logprob: -12.000197410583496
    4. ' ((' → logprob: -12.500197410583496
    5. '(v' → logprob: -12.500197410583496
    6. ' (' → logprob: -12.875197410583496
    7. ')((' → logprob: -14.000197410583496
    8. '<|end|>' → logprob: -14.500197410583496
    9. '(
' → logprob: -15.250197410583496
    10. ')' → logprob: -15.750197410583496

Token 107: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0009207503753714263
    2. '(u' → logprob: -7.00092077255249
    3. ' u' → logprob: -12.000920295715332
    4. ',u' → logprob: -12.875920295715332
    5. '	u' → logprob: -15.125920295715332
    6. ',' → logprob: -15.625920295715332
    7. '[u' → logprob: -16.62592124938965
    8. ' (' → logprob: -17.25092124938965
    9. '   ' → logprob: -17.50092124938965
    10. ')' → logprob: -17.75092124938965

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001334559783572331
    2. ' ,' → logprob: -9.000133514404297
    3. ',w' → logprob: -11.625133514404297
    4. ')' → logprob: -14.500133514404297
    5. '),' → logprob: -15.750133514404297
    6. '`,' → logprob: -16.125133514404297
    7. ',v' → logprob: -16.500133514404297
    8. '‌,' → logprob: -16.750133514404297
    9. ',
' → logprob: -16.875133514404297
    10. '<|end|>' → logprob: -16.875133514404297

Token 109: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.34852880239486694
    2. 'w' → logprob: -1.2235288619995117
    3. ' ' → logprob: -9.598528861999512
    4. ' ' → logprob: -11.348528861999512
    5. ' 
' → logprob: -13.223528861999512
    6. '<|end|>' → logprob: -13.473528861999512
    7. ' )' → logprob: -14.723528861999512
    8. '	w' → logprob: -15.473528861999512
    9. ')' → logprob: -16.348527908325195
    10. ' ‌' → logprob: -16.661027908325195

Token 110: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759719014167786
    2. ')' → logprob: -0.8259719014167786
    3. ')
' → logprob: -11.325971603393555
    4. '))
' → logprob: -11.325971603393555
    5. ' )' → logprob: -12.325971603393555
    6. ' ))' → logprob: -12.950971603393555
    7. ')))' → logprob: -14.325971603393555
    8. '       ' → logprob: -15.325971603393555
    9. '),' → logprob: -15.450971603393555
    10. ')}' → logprob: -15.825971603393555

Token 111: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06766869872808456
    2. '   ' → logprob: -2.9426686763763428
    3. '    
' → logprob: -4.442668914794922
    4. ' 
' → logprob: -7.692668914794922
    5. '  
' → logprob: -8.817668914794922
    6. '   
' → logprob: -9.567668914794922
    7. '```' → logprob: -9.567668914794922
    8. 'n' → logprob: -9.942668914794922
    9. 'def' → logprob: -10.067668914794922
    10. '

' → logprob: -10.192668914794922

Token 112: ' L' (ID: 451)
  Prédit: ' Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -0.18016114830970764
    2. ' Graph' → logprob: -2.680161237716675
    3. ' Diameter' → logprob: -3.180161237716675
    4. ' Solution' → logprob: -3.680161237716675
    5. ' Tar' → logprob: -4.680160999298096
    6. ' DFS' → logprob: -5.430160999298096
    7. ' ' → logprob: -6.055160999298096
    8. ' L' → logprob: -6.180160999298096
    9. ' D' → logprob: -6.305160999298096
    10. 'Tree' → logprob: -6.680160999298096

Token 113: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.6696286201477051
    2. 'CAT' → logprob: -1.419628620147705
    3. 'C' → logprob: -1.544628620147705
    4. 'CAP' → logprob: -4.919628620147705
    5. 'CAD' → logprob: -5.169628620147705
    6. 'CT' → logprob: -5.669628620147705
    7. 'CAL' → logprob: -5.794628620147705
    8. 'CAC' → logprob: -5.794628620147705
    9. 'ca' → logprob: -6.169628620147705
    10. 'ow' → logprob: -7.044628620147705

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10248564928770065
    2. '(' → logprob: -2.3524856567382812
    3. ' :' → logprob: -6.852485656738281
    4. '(Graph' → logprob: -7.727485656738281
    5. ':
' → logprob: -8.352485656738281
    6. ' (' → logprob: -9.352485656738281
    7. '(Node' → logprob: -9.352485656738281
    8. '(:' → logprob: -9.477485656738281
    9. 'Colon' → logprob: -10.352485656738281
    10. '():' → logprob: -10.602485656738281

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45538440346717834
    2. ':' → logprob: -1.205384373664856
    3. ':
' → logprob: -2.8303844928741455
    4. ' def' → logprob: -5.580384254455566
    5. 'def' → logprob: -7.080384254455566
    6. ' :
' → logprob: -7.455384254455566
    7. '<|end|>' → logprob: -7.455384254455566
    8. '  ' → logprob: -8.455384254455566
    9. ' :' → logprob: -8.580384254455566
    10. ' ' → logprob: -8.705384254455566

Token 116: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.014413115568459034
    2. 'def' (adapté à ' def') → logprob: -4.264412879943848
    3. '   ' → logprob: -8.514412879943848
    4. '    ' → logprob: -10.764412879943848
    5. '	def' → logprob: -11.514412879943848
    6. ' ' → logprob: -11.889412879943848
    7. 'class' → logprob: -12.014412879943848
    8. 'import' → logprob: -13.514412879943848
    9. ' class' → logprob: -14.139412879943848
    10. '  ' → logprob: -14.514412879943848

Token 117: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3829962909221649
    2. ' init' → logprob: -1.2579963207244873
    3. ' ' → logprob: -3.8829963207244873
    4. '_init' → logprob: -5.007996082305908
    5. 'init' → logprob: -5.757996082305908
    6. ' ' → logprob: -6.382996082305908
    7. ' _' → logprob: -6.757996082305908
    8. ' ​' → logprob: -8.382996559143066
    9. ' def' → logprob: -9.007996559143066
    10. ' ‌' → logprob: -9.132996559143066

Token 118: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0001757696009008214
    2. 'i' → logprob: -8.750175476074219
    3. 'ini' → logprob: -11.125175476074219
    4. 'in' → logprob: -13.000175476074219
    5. ' init' → logprob: -16.37517547607422
    6. 'int' → logprob: -16.62517547607422
    7. 'inite' → logprob: -17.12517547607422
    8. ' ' → logprob: -17.75017547607422
    9. '```' → logprob: -17.75017547607422
    10. '   ' → logprob: -18.37517547607422

Token 119: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0025116894394159317
    2. '(self' → logprob: -6.377511501312256
    3. '__' → logprob: -7.627511501312256
    4. '__(
' → logprob: -8.627511978149414
    5. '(' → logprob: -9.377511978149414
    6. ' (' → logprob: -10.252511978149414
    7. '__((' → logprob: -11.502511978149414
    8. '<|end|>' → logprob: -12.377511978149414
    9. '__('' → logprob: -13.377511978149414
    10. 'self' → logprob: -13.377511978149414

Token 120: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008619539439678192
    2. ' self' → logprob: -4.75861930847168
    3. '
' → logprob: -13.75861930847168
    4. ')' → logprob: -14.13361930847168
    5. '(self' → logprob: -14.13361930847168
    6. '	self' → logprob: -14.13361930847168
    7. ',' → logprob: -14.63361930847168
    8. '   ' → logprob: -14.88361930847168
    9. ',self' → logprob: -15.00861930847168
    10. '       ' → logprob: -15.38361930847168

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037120769266039133
    2. ' ,' → logprob: -5.628712177276611
    3. '(self' → logprob: -9.503711700439453
    4. 'self' → logprob: -10.378711700439453
    5. ',self' → logprob: -12.628711700439453
    6. ' self' → logprob: -13.003711700439453
    7. ' (' → logprob: -15.003711700439453
    8. ')' → logprob: -15.253711700439453
    9. '`,' → logprob: -15.878711700439453
    10. ',n' → logprob: -17.628711700439453

Token 122: ' graph' (ID: 7465)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6023679971694946
    2. 'self' → logprob: -1.4773679971694946
    3. ' graph' → logprob: -1.7273679971694946
    4. 'graph' → logprob: -3.102367877960205
    5. ' n' → logprob: -6.977367877960205
    6. 'n' → logprob: -7.977367877960205
    7. ' Graph' → logprob: -8.977368354797363
    8. 'Graph' → logprob: -9.852368354797363
    9. ',' → logprob: -10.227368354797363
    10. '   ' → logprob: -11.352368354797363

Token 123: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002298228442668915
    2. ':' → logprob: -6.252298355102539
    3. ' ,' → logprob: -8.377298355102539
    4. '):' → logprob: -9.002298355102539
    5. ' ):' → logprob: -11.752298355102539
    6. ' :' → logprob: -13.127298355102539
    7. ')' → logprob: -13.252298355102539
    8. ' ' → logprob: -13.752298355102539
    9. ',n' → logprob: -14.127298355102539
    10. '):
' → logprob: -14.627298355102539

Token 124: ' Graph' (ID: 15559)
  Prédit: ' Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Graph' → logprob: -0.14276652038097382
    2. 'Graph' → logprob: -2.0177664756774902
    3. '(Graph' → logprob: -10.392766952514648
    4. ')' → logprob: -10.517766952514648
    5. ' graph' → logprob: -11.392766952514648
    6. ' ' → logprob: -11.517766952514648
    7. 'graph' → logprob: -12.517766952514648
    8. '_graph' → logprob: -13.267766952514648
    9. '):
' → logprob: -13.517766952514648
    10. '.Graph' → logprob: -13.517766952514648

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025638877414166927
    2. '):' → logprob: -6.002563953399658
    3. ' ,' → logprob: -9.6275634765625
    4. ')' → logprob: -11.5025634765625
    5. ' ):' → logprob: -11.8775634765625
    6. '):
' → logprob: -12.3775634765625
    7. ',
' → logprob: -14.8775634765625
    8. ',n' → logprob: -15.6275634765625
    9. ':' → logprob: -15.7525634765625
    10. ' ' → logprob: -16.1275634765625

Token 126: ' root' (ID: 6577)
  Prédit: ' root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.0010350722586736083
    2. 'root' → logprob: -6.876035213470459
    3. '	root' → logprob: -14.0010347366333
    4. '(root' → logprob: -15.3760347366333
    5. '[root' → logprob: -15.3760347366333
    6. ' ' → logprob: -15.6260347366333
    7. ' r' → logprob: -15.6260347366333
    8. ')' → logprob: -15.6260347366333
    9. '_root' → logprob: -15.7510347366333
    10. ' roots' → logprob: -15.7510347366333

Token 127: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1089223176240921
    2. '):' → logprob: -2.358922243118286
    3. '=' → logprob: -5.358922481536865
    4. ' ):' → logprob: -6.108922481536865
    5. ' :' → logprob: -7.108922481536865
    6. ':int' → logprob: -7.608922481536865
    7. ')' → logprob: -8.358922004699707
    8. ',' → logprob: -8.983922004699707
    9. '):
' → logprob: -10.608922004699707
    10. ' =' → logprob: -11.233922004699707

Token 128: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326321959495544
    2. '0' → logprob: -0.7576321959495544
    3. ')' → logprob: -11.1326322555542
    4. ' int' → logprob: -12.3826322555542
    5. ' )' → logprob: -12.5076322555542
    6. '1' → logprob: -12.8826322555542
    7. ' ' → logprob: -13.2576322555542
    8. '=' → logprob: -13.7576322555542
    9. ' 
' → logprob: -13.7576322555542
    10. ',' → logprob: -14.1326322555542

Token 129: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010621053166687489
    2. '):
' → logprob: -4.760621070861816
    3. ')' → logprob: -7.260621070861816
    4. ' ):' → logprob: -7.260621070861816
    5. ',' → logprob: -7.635621070861816
    6. '=' → logprob: -9.635621070861816
    7. ':' → logprob: -10.510621070861816
    8. '):
' → logprob: -11.385621070861816
    9. ' ):
' → logprob: -12.260621070861816
    10. '   ' → logprob: -13.135621070861816

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2254236489534378
    2. ' ' → logprob: -1.6004236936569214
    3. ')' → logprob: -12.475423812866211
    4. '1' → logprob: -12.725423812866211
    5. ' )' → logprob: -13.100423812866211
    6. ' ' → logprob: -14.600423812866211
    7. ' ,' → logprob: -15.037923812866211
    8. ',' → logprob: -15.100423812866211
    9. ' 
' → logprob: -15.225423812866211
    10. '   ' → logprob: -15.287923812866211

Token 131: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020246391650289297
    2. ' ' → logprob: -6.2520246505737305
    3. '1' → logprob: -9.25202465057373
    4. ')' → logprob: -16.627023696899414
    5. '   ' → logprob: -17.877023696899414
    6. '۰' → logprob: -18.377023696899414
    7. '
' → logprob: -19.877023696899414
    8. ' )' → logprob: -20.314523696899414
    9. '=' → logprob: -20.439523696899414
    10. '  ' → logprob: -20.564523696899414

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004445074126124382
    2. ')' → logprob: -6.2544450759887695
    3. '):
' → logprob: -6.2544450759887695
    4. ',' → logprob: -7.5044450759887695
    5. ' ):' → logprob: -10.25444507598877
    6. ':' → logprob: -12.37944507598877
    7. '):
' → logprob: -14.37944507598877
    8. ' ' → logprob: -15.37944507598877
    9. ' )' → logprob: -15.62944507598877
    10. '   ' → logprob: -15.75444507598877

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043007321073673666
    2. ',' → logprob: -8.3754301071167
    3. ':' → logprob: -9.1254301071167
    4. '      ' → logprob: -11.0004301071167
    5. '        
' → logprob: -11.0004301071167
    6. '   ' → logprob: -11.3754301071167
    7. '        ' → logprob: -11.6254301071167
    8. '    ' → logprob: -11.6254301071167
    9. ')' → logprob: -12.3754301071167
    10. '     ' → logprob: -12.7504301071167

Token 134: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.011740128509700298
    2. 'self' (adapté à ' self') → logprob: -4.511740207672119
    3. '       ' → logprob: -8.511739730834961
    4. ' ' → logprob: -8.886739730834961
    5. ' import' → logprob: -8.886739730834961
    6. 'import' → logprob: -9.261739730834961
    7. '        ' → logprob: -10.011739730834961
    8. 'n' → logprob: -10.511739730834961
    9. ' n' → logprob: -10.511739730834961
    10. ' from' → logprob: -11.386739730834961

Token 135: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2429695427417755
    2. '.n' → logprob: -2.242969512939453
    3. ' .' → logprob: -2.742969512939453
    4. '.graph' → logprob: -3.117969512939453
    5. 'n' → logprob: -7.867969512939453
    6. ' ' → logprob: -8.367969512939453
    7. ' graph' → logprob: -8.992969512939453
    8. ' n' → logprob: -9.242969512939453
    9. 'graph' → logprob: -10.367969512939453
    10. ':' → logprob: -11.242969512939453

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007632539141923189
    2. '=' → logprob: -4.882632732391357
    3. ' ' → logprob: -11.0076322555542
    4. ',' → logprob: -11.7576322555542
    5. ')' → logprob: -14.6326322555542
    6. ' =
' → logprob: -14.8826322555542
    7. '    ' → logprob: -15.2576322555542
    8. ' ,' → logprob: -15.3826322555542
    9. '=int' → logprob: -16.257633209228516
    10. '  ' → logprob: -16.382633209228516

Token 137: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.06198852136731148
    2. 'graph' → logprob: -2.811988592147827
    3. '	graph' → logprob: -10.936988830566406
    4. '(graph' → logprob: -12.811988830566406
    5. '.graph' → logprob: -16.061988830566406
    6. '_graph' → logprob: -16.561988830566406
    7. ' ' → logprob: -16.936988830566406
    8. 'raph' → logprob: -17.061988830566406
    9. 'graphql' → logprob: -17.811988830566406
    10. 'n' → logprob: -17.811988830566406

Token 138: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.9146995327901095e-05
    2. '.' → logprob: -10.875019073486328
    3. ' .' → logprob: -15.875019073486328
    4. 'n' → logprob: -17.875019073486328
    5. '.ad' → logprob: -18.750019073486328
    6. '.nn' → logprob: -19.000019073486328
    7. '.nt' → logprob: -19.000019073486328
    8. '.ng' → logprob: -19.125019073486328
    9. '.nl' → logprob: -19.250019073486328
    10. ').' → logprob: -19.375019073486328

Token 139: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11816451698541641
    2. '<|end|>' → logprob: -2.368164539337158
    3. '       ' → logprob: -4.118164539337158
    4. ' 
' → logprob: -8.1181640625
    5. '<|end|>' → logprob: -8.1181640625
    6. '        
' → logprob: -8.4931640625
    7. ',' → logprob: -8.6181640625
    8. '  
' → logprob: -8.6181640625
    9. 'self' → logprob: -9.1181640625
    10. ' ' → logprob: -9.4931640625

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.210133895277977
    2. '
' → logprob: -1.7101339101791382
    3. '<|end|>' → logprob: -5.335134029388428
    4. '        
' → logprob: -6.835134029388428
    5. '  
' → logprob: -7.085134029388428
    6. ',' → logprob: -7.460134029388428
    7. 'self' → logprob: -8.21013355255127
    8. ' ' → logprob: -8.33513355255127
    9. ' 
' → logprob: -8.46013355255127
    10. ' self' → logprob: -8.83513355255127

Token 141: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5768327116966248
    2. 'self' (adapté à ' self') → logprob: -0.8268327116966248
    3. 'import' → logprob: -7.5768327713012695
    4. ' ' → logprob: -8.70183277130127
    5. '       ' → logprob: -9.57683277130127
    6. ' import' → logprob: -10.20183277130127
    7. '   ' → logprob: -10.45183277130127
    8. 'root' → logprob: -11.07683277130127
    9. ' root' → logprob: -11.20183277130127
    10. '	self' → logprob: -11.32683277130127

Token 142: '.LOG' (ID: 68764)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -1.129377007484436
    2. '.root' → logprob: -1.629377007484436
    3. '.LOG' → logprob: -2.3793768882751465
    4. '.' → logprob: -2.5043768882751465
    5. '.parent' → logprob: -2.5043768882751465
    6. '.log' → logprob: -2.5043768882751465
    7. '.ad' → logprob: -2.8793768882751465
    8. ' .' → logprob: -3.1293768882751465
    9. '.depth' → logprob: -3.8793768882751465
    10. '.max' → logprob: -4.3793768882751465

Token 143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.54395991563797
    2. ' =' → logprob: -0.91895991563797
    3. 'n' → logprob: -4.668960094451904
    4. ' ' → logprob: -5.168960094451904
    5. '_' → logprob: -5.918960094451904
    6. '_n' → logprob: -6.918960094451904
    7. '2' → logprob: -7.168960094451904
    8. '[' → logprob: -8.418959617614746
    9. 'N' → logprob: -8.668959617614746
    10. '_MAX' → logprob: -8.793959617614746

Token 144: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06517232954502106
    2. '20' → logprob: -2.8151724338531494
    3. ' self' → logprob: -6.69017219543457
    4. ' (' → logprob: -6.81517219543457
    5. 'self' → logprob: -7.56517219543457
    6. '32' → logprob: -8.56517219543457
    7. '26' → logprob: -10.06517219543457
    8. '25' → logprob: -10.44017219543457
    9. '(self' → logprob: -10.44017219543457
    10. '21' → logprob: -11.44017219543457

Token 145: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003947913181036711
    2. '1' → logprob: -6.253947734832764
    3. '(self' → logprob: -6.378947734832764
    4. ' ' → logprob: -8.878948211669922
    5. ' (' → logprob: -9.878948211669922
    6. 'n' → logprob: -9.878948211669922
    7. '((' → logprob: -11.003948211669922
    8. '2' → logprob: -11.128948211669922
    9. '_n' → logprob: -11.378948211669922
    10. 'self' → logprob: -12.003948211669922

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18209603428840637
    2. ' ' → logprob: -1.807096004486084
    3. '(' → logprob: -6.557096004486084
    4. ')' → logprob: -7.932096004486084
    5. 'self' → logprob: -8.557096481323242
    6. ' self' → logprob: -8.807096481323242
    7. ' (' → logprob: -9.682096481323242
    8. '  ' → logprob: -10.682096481323242
    9. '(self' → logprob: -10.682096481323242
    10. '   ' → logprob: -10.932096481323242

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009812522679567337
    2. ' ,' → logprob: -4.634812355041504
    3. ',
' → logprob: -10.509812355041504
    4. ',(' → logprob: -11.509812355041504
    5. ' ' → logprob: -12.509812355041504
    6. '   ' → logprob: -12.634812355041504
    7. '0' → logprob: -13.134812355041504
    8. '  ' → logprob: -13.134812355041504
    9. ',int' → logprob: -13.509812355041504
    10. '    ' → logprob: -14.384812355041504

Token 148: ' (' (ID: 350)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6534820795059204
    2. ' (' → logprob: -0.7784820795059204
    3. '(self' → logprob: -4.528481960296631
    4. 'self' → logprob: -4.653481960296631
    5. ' ' → logprob: -8.403482437133789
    6. '32' → logprob: -10.528482437133789
    7. '26' → logprob: -11.403482437133789
    8. 'len' → logprob: -11.653482437133789
    9. '(' → logprob: -12.028482437133789
    10. '20' → logprob: -12.028482437133789

Token 149: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20158720016479492
    2. ' self' → logprob: -1.701587200164795
    3. '(self' → logprob: -8.826587677001953
    4. ' ' → logprob: -12.201587677001953
    5. ' (' → logprob: -12.451587677001953
    6. 'n' → logprob: -12.576587677001953
    7. '
' → logprob: -13.326587677001953
    8. '	self' → logprob: -13.451587677001953
    9. '    ' → logprob: -13.576587677001953
    10. 'graph' → logprob: -13.826587677001953

Token 150: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -5.431207682704553e-05
    2. '.' → logprob: -10.250054359436035
    3. 'n' → logprob: -11.000054359436035
    4. '
' → logprob: -14.250054359436035
    5. ' .' → logprob: -15.000054359436035
    6. '.
' → logprob: -15.250054359436035
    7. '	n' → logprob: -15.250054359436035
    8. ').' → logprob: -15.375054359436035
    9. ' n' → logprob: -15.375054359436035
    10. '.nl' → logprob: -16.25005340576172

Token 151: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.1321122944355011
    2. ').' → logprob: -2.1321122646331787
    3. ' ).' → logprob: -5.507112503051758
    4. '.' → logprob: -7.507112503051758
    5. '-' → logprob: -8.007112503051758
    6. ' .' → logprob: -8.507112503051758
    7. ' -' → logprob: -11.632112503051758
    8. ')' → logprob: -11.757112503051758
    9. ' bit' → logprob: -12.632112503051758
    10. 'bit' → logprob: -12.882112503051758

Token 152: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.8908587662735954e-05
    2. '_' → logprob: -11.250019073486328
    3. '_l' → logprob: -12.125019073486328
    4. '_LENGTH' → logprob: -15.625019073486328
    5. '_le' → logprob: -16.250019073486328
    6. 'length' → logprob: -16.500019073486328
    7. '```' → logprob: -16.875019073486328
    8. 'l' → logprob: -17.500019073486328
    9. 'ength' → logprob: -17.625019073486328
    10. '_leg' → logprob: -17.750019073486328

Token 153: '()))
' (ID: 24521)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023641297593712807
    2. '()))' → logprob: -4.773641109466553
    3. '())' → logprob: -5.023641109466553
    4. '()-' → logprob: -5.398641109466553
    5. ' ()' → logprob: -6.023641109466553
    6. ')' → logprob: -7.523641109466553
    7. '()
' → logprob: -8.398641586303711
    8. ' ' → logprob: -9.148641586303711
    9. ' ())' → logprob: -9.398641586303711
    10. '()+' → logprob: -9.523641586303711

Token 154: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7171143889427185
    2. ' 
' → logprob: -1.5921144485473633
    3. '       ' → logprob: -1.9671144485473633
    4. '<|end|>' → logprob: -2.3421144485473633
    5. '        
' → logprob: -3.7171144485473633
    6. '  
' → logprob: -3.7171144485473633
    7. ' ' → logprob: -4.092114448547363
    8. '        ' → logprob: -5.842114448547363
    9. '    
' → logprob: -7.092114448547363
    10. ')' → logprob: -7.342114448547363

Token 155: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1510736048221588
    2. ' self' → logprob: -2.026073694229126
    3. 'self' (adapté à ' self') → logprob: -5.026073455810547
    4. '        
' → logprob: -7.651073455810547
    5. '    ' → logprob: -7.776073455810547
    6. ' ' → logprob: -8.026073455810547
    7. '        ' → logprob: -8.651073455810547
    8. '   ' → logprob: -8.901073455810547
    9. ' 
' → logprob: -9.276073455810547
    10. '
' → logprob: -10.151073455810547

Token 156: '.depth' (ID: 89791)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.6768659949302673
    2. ' .' → logprob: -1.176866054534912
    3. '.graph' → logprob: -2.301866054534912
    4. '.depth' → logprob: -2.926866054534912
    5. '.' → logprob: -4.301866054534912
    6. '.par' → logprob: -5.676866054534912
    7. 'parent' → logprob: -6.051866054534912
    8. '.up' → logprob: -6.676866054534912
    9. 'graph' → logprob: -6.801866054534912
    10. '.ad' → logprob: -6.926866054534912

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00398982735350728
    2. '=' → logprob: -5.7539896965026855
    3. ' ' → logprob: -7.2539896965026855
    4. '[' → logprob: -9.753990173339844
    5. ' =[' → logprob: -10.878990173339844
    6. ',' → logprob: -11.128990173339844
    7. ')' → logprob: -12.753990173339844
    8. ' [' → logprob: -13.128990173339844
    9. '=[' → logprob: -13.503990173339844
    10. ' ,' → logprob: -13.628990173339844

Token 158: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5759626030921936
    2. '[' → logprob: -0.8259626030921936
    3. '[-' → logprob: -11.200963020324707
    4. '[n' → logprob: -13.075963020324707
    5. '[node' → logprob: -13.075963020324707
    6. ' [-' → logprob: -13.200963020324707
    7. '[int' → logprob: -13.325963020324707
    8. '[self' → logprob: -14.700963020324707
    9. ' ' → logprob: -14.825963020324707
    10. '   ' → logprob: -14.950963020324707

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002435235772281885
    2. ' ' → logprob: -6.377435207366943
    3. '-' → logprob: -7.252435207366943
    4. ' -' → logprob: -10.752435684204102
    5. '   ' → logprob: -13.627435684204102
    6. 'None' → logprob: -14.377435684204102
    7. '  ' → logprob: -15.252435684204102
    8. '
' → logprob: -15.502435684204102
    9. ' 
' → logprob: -16.3149356842041
    10. '    ' → logprob: -16.3149356842041

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023574524093419313
    2. ' ]' → logprob: -6.502357482910156
    3. ']*(' → logprob: -7.627357482910156
    4. ']*' → logprob: -8.377357482910156
    5. ' for' → logprob: -9.252357482910156
    6. ',' → logprob: -10.877357482910156
    7. ' ' → logprob: -11.127357482910156
    8. ')' → logprob: -12.127357482910156
    9. ']+' → logprob: -13.502357482910156
    10. 'for' → logprob: -14.377357482910156

Token 161: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06657058745622635
    2. '*' → logprob: -3.316570520401001
    3. ' for' → logprob: -4.31657075881958
    4. ',' → logprob: -5.19157075881958
    5. ' ' → logprob: -5.31657075881958
    6. ']' → logprob: -6.44157075881958
    7. '
' → logprob: -6.94157075881958
    8. '*self' → logprob: -7.69157075881958
    9. ')' → logprob: -8.441570281982422
    10. 'for' → logprob: -8.691570281982422

Token 162: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008049834286794066
    2. ' (' → logprob: -7.250804901123047
    3. 'self' → logprob: -9.625804901123047
    4. '(n' → logprob: -10.625804901123047
    5. '(' → logprob: -12.875804901123047
    6. ' self' → logprob: -13.750804901123047
    7. '(s' → logprob: -15.250804901123047
    8. '((' → logprob: -15.500804901123047
    9. '(sel' → logprob: -15.625804901123047
    10. '(this' → logprob: -16.000804901123047

Token 163: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0018498663557693362
    2. ' self' → logprob: -6.50184965133667
    3. '(self' → logprob: -8.001850128173828
    4. '
' → logprob: -11.876850128173828
    5. '[self' → logprob: -12.751850128173828
    6. '   ' → logprob: -14.001850128173828
    7. 'n' → logprob: -14.376850128173828
    8. '       ' → logprob: -15.126850128173828
    9. '	self' → logprob: -15.626850128173828
    10. ')' → logprob: -16.001850128173828

Token 164: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -9.126521035796031e-05
    2. '.' → logprob: -9.500091552734375
    3. ' .' → logprob: -11.500091552734375
    4. 'n' → logprob: -12.750091552734375
    5. '```' → logprob: -13.875091552734375
    6. ').' → logprob: -14.000091552734375
    7. '
' → logprob: -15.750091552734375
    8. '	n' → logprob: -15.875091552734375
    9. '   ' → logprob: -15.875091552734375
    10. '[' → logprob: -16.250091552734375

Token 165: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16023346781730652
    2. ' +' → logprob: -1.910233497619629
    3. '+
' → logprob: -12.660233497619629
    4. ' +
' → logprob: -12.910233497619629
    5. ')' → logprob: -13.035233497619629
    6. ' ' → logprob: -14.160233497619629
    7. '+)' → logprob: -14.660233497619629
    8. ' )' → logprob: -15.410233497619629
    9. ' plus' → logprob: -17.035232543945312
    10. '
' → logprob: -17.285232543945312

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.125709533691406
    4. '2' → logprob: -18.000709533691406
    5. '```' → logprob: -18.250709533691406
    6. '  ' → logprob: -18.375709533691406
    7. '0' → logprob: -19.063209533691406
    8. ')' → logprob: -19.063209533691406
    9. '１' → logprob: -19.125709533691406
    10. '[' → logprob: -19.438209533691406

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.37502098083496
    4. '2' → logprob: -16.50002098083496
    5. '```' → logprob: -17.50002098083496
    6. '0' → logprob: -17.75002098083496
    7. '{' → logprob: -17.75002098083496
    8. '
' → logprob: -18.18752098083496
    9. '  ' → logprob: -18.37502098083496
    10. '１' → logprob: -18.81252098083496

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019330393988639116
    2. ')
' → logprob: -6.2519330978393555
    3. ' )' → logprob: -12.751933097839355
    4. ')

' → logprob: -14.501933097839355
    5. '<|end|>' → logprob: -14.876933097839355
    6. '),' → logprob: -15.626933097839355
    7. '
' → logprob: -16.00193214416504
    8. ')
' → logprob: -16.12693214416504
    9. '       ' → logprob: -16.37693214416504
    10. '   ' → logprob: -16.75193214416504

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011177030391991138
    2. 'self' → logprob: -5.136177062988281
    3. ' self' → logprob: -5.511177062988281
    4. '<|end|>' → logprob: -7.511177062988281
    5. '   ' → logprob: -8.511177062988281
    6. ' ' → logprob: -8.511177062988281
    7. '	self' → logprob: -9.511177062988281
    8. '    ' → logprob: -10.136177062988281
    9. '	' → logprob: -10.261177062988281
    10. '        
' → logprob: -10.886177062988281

Token 170: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02797815203666687
    2. ' self' → logprob: -3.6529781818389893
    3. '       ' → logprob: -6.40297794342041
    4. '	self' → logprob: -12.27797794342041
    5. '   ' → logprob: -12.52797794342041
    6. ' ' → logprob: -12.65297794342041
    7. 'parent' → logprob: -13.27797794342041
    8. '[self' → logprob: -13.77797794342041
    9. '(self' → logprob: -14.27797794342041
    10. '```' → logprob: -14.90297794342041

Token 171: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.013529704883694649
    2. '.up' → logprob: -4.5135297775268555
    3. '.par' → logprob: -6.6385297775268555
    4. '.' → logprob: -7.3885297775268555
    5. '.parents' → logprob: -8.263529777526855
    6. 'parent' → logprob: -8.513529777526855
    7. '.pa' → logprob: -10.638529777526855
    8. ' .' → logprob: -10.763529777526855
    9. '.p' → logprob: -11.388529777526855
    10. 'up' → logprob: -12.138529777526855

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11312320083379745
    2. '=' → logprob: -2.2381231784820557
    3. '[' → logprob: -8.488122940063477
    4. ' ' → logprob: -10.113122940063477
    5. ']' → logprob: -11.238122940063477
    6. '<|end|>' → logprob: -11.613122940063477
    7. ',' → logprob: -11.738122940063477
    8. 's' → logprob: -11.863122940063477
    9. ' =[' → logprob: -12.863122940063477
    10. ')' → logprob: -12.988122940063477

Token 173: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.48142337799072266
    2. ' [[' → logprob: -0.9814233779907227
    3. '[' → logprob: -5.231423377990723
    4. ' [' → logprob: -6.231423377990723
    5. '[-' → logprob: -12.606423377990723
    6. '[
' → logprob: -13.481423377990723
    7. ' ' → logprob: -13.731423377990723
    8. ' [[]' → logprob: -15.106423377990723
    9. '   ' → logprob: -15.481423377990723
    10. '[['' → logprob: -15.731423377990723

Token 174: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008076059748418629
    2. '0' → logprob: -7.125807762145996
    3. ' -' → logprob: -12.875807762145996
    4. 'None' → logprob: -15.125807762145996
    5. '-n' → logprob: -16.62580680847168
    6. '-f' → logprob: -16.87580680847168
    7. '
' → logprob: -17.00080680847168
    8. '-self' → logprob: -17.37580680847168
    9. '   ' → logprob: -17.62580680847168
    10. '-
' → logprob: -18.00080680847168

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.500001907348633
    4. 'self' → logprob: -18.375001907348633
    5. ' -' → logprob: -18.437501907348633
    6. '(' → logprob: -18.500001907348633
    7. '-' → logprob: -18.812501907348633
    8. '
' → logprob: -19.187501907348633
    9. '  ' → logprob: -19.312501907348633
    10. '

' → logprob: -19.500001907348633

Token 176: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32277724146842957
    2. ' for' → logprob: -1.322777271270752
    3. ']*(' → logprob: -4.947777271270752
    4. ' ]' → logprob: -6.697777271270752
    5. 'for' → logprob: -7.572777271270752
    6. ')' → logprob: -8.572776794433594
    7. ']*' → logprob: -8.697776794433594
    8. '<|end|>' → logprob: -9.072776794433594
    9. ',' → logprob: -9.697776794433594
    10. ' ' → logprob: -10.447776794433594

Token 177: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007759942207485437
    2. 'for' → logprob: -5.257760047912598
    3. ']' → logprob: -6.507760047912598
    4. '<|end|>' → logprob: -7.382760047912598
    5. ']*(' → logprob: -8.882760047912598
    6. ' ' → logprob: -9.132760047912598
    7. ' *' → logprob: -9.507760047912598
    8. ')' → logprob: -10.507760047912598
    9. ' ]' → logprob: -11.257760047912598
    10. '<|end|>' → logprob: -11.882760047912598

Token 178: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008726968429982662
    2. ' (' → logprob: -4.758727073669434
    3. 'self' → logprob: -9.383727073669434
    4. '(' → logprob: -10.883727073669434
    5. ' self' → logprob: -12.133727073669434
    6. '(n' → logprob: -13.008727073669434
    7. '(s' → logprob: -14.008727073669434
    8. '((' → logprob: -15.008727073669434
    9. '
' → logprob: -15.258727073669434
    10. '[self' → logprob: -15.508727073669434

Token 179: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06053643301129341
    2. '(self' → logprob: -3.1855363845825195
    3. ' self' → logprob: -4.0605363845825195
    4. '
' → logprob: -9.81053638458252
    5. '[self' → logprob: -10.31053638458252
    6. ' (' → logprob: -10.93553638458252
    7. ')' → logprob: -11.18553638458252
    8. ':self' → logprob: -11.93553638458252
    9. '   ' → logprob: -12.43553638458252
    10. '	self' → logprob: -12.68553638458252

Token 180: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00027921271976083517
    2. 'n' → logprob: -8.625279426574707
    3. 'self' → logprob: -9.500279426574707
    4. '
' → logprob: -12.000279426574707
    5. '+' → logprob: -12.500279426574707
    6. ')' → logprob: -13.125279426574707
    7. '       ' → logprob: -13.375279426574707
    8. '   ' → logprob: -13.500279426574707
    9. '```' → logprob: -13.875279426574707
    10. '_n' → logprob: -14.000279426574707

Token 181: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759422779083252
    2. ' +' → logprob: -0.8259422779083252
    3. '+
' → logprob: -13.700942039489746
    4. ' +
' → logprob: -13.950942039489746
    5. ')' → logprob: -14.825942039489746
    6. ' ' → logprob: -15.575942039489746
    7. ' plus' → logprob: -16.825942993164062
    8. '+)' → logprob: -16.825942993164062
    9. ' ' → logprob: -17.200942993164062
    10. '＋' → logprob: -17.575942993164062

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.250027656555176
    4. '
' → logprob: -17.625028610229492
    5. '```' → logprob: -18.000028610229492
    6. '       ' → logprob: -18.125028610229492
    7. '+' → logprob: -18.437528610229492
    8. '6' → logprob: -18.562528610229492
    9. '  ' → logprob: -18.562528610229492
    10. '     ' → logprob: -18.625028610229492

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '+' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '2' → logprob: -17.750001907348633
    6. '
' → logprob: -18.875001907348633
    7. '0' → logprob: -18.875001907348633
    8. '6' → logprob: -19.000001907348633
    9. ')' → logprob: -19.812501907348633
    10. '(' → logprob: -19.812501907348633

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032350100576877594
    2. ' for' → logprob: -3.6573500633239746
    3. ']' → logprob: -6.407350063323975
    4. ')]' → logprob: -6.407350063323975
    5. ' )' → logprob: -6.657350063323975
    6. 'for' → logprob: -6.657350063323975
    7. ' ]' → logprob: -9.407350540161133
    8. ' ' → logprob: -9.532350540161133
    9. '	for' → logprob: -13.157350540161133
    10. '}' → logprob: -13.532350540161133

Token 185: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05096478387713432
    2. 'for' → logprob: -3.050964832305908
    3. ']' → logprob: -6.300964832305908
    4. ')' → logprob: -8.30096435546875
    5. ' ]' → logprob: -8.55096435546875
    6. ' ' → logprob: -9.42596435546875
    7. '	for' → logprob: -11.92596435546875
    8. ' )' → logprob: -12.42596435546875
    9. ')]' → logprob: -12.67596435546875
    10. '   ' → logprob: -13.67596435546875

Token 186: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009699547663331032
    2. ' in' → logprob: -5.00969934463501
    3. ' _' → logprob: -5.88469934463501
    4. ' ' → logprob: -9.259699821472168
    5. '<|end|>' → logprob: -9.384699821472168
    6. ' range' → logprob: -12.259699821472168
    7. ' i' → logprob: -13.009699821472168
    8. '_i' → logprob: -13.259699821472168
    9. '<|end|>' → logprob: -13.384699821472168
    10. '_range' → logprob: -13.509699821472168

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018582172691822052
    2. 'in' → logprob: -4.143582344055176
    3. 'range' → logprob: -6.143582344055176
    4. ' range' → logprob: -8.018582344055176
    5. 'ange' → logprob: -10.518582344055176
    6. '(range' → logprob: -11.143582344055176
    7. '_' → logprob: -12.018582344055176
    8. ' ' → logprob: -12.643582344055176
    9. 'import' → logprob: -13.143582344055176
    10. 'i' → logprob: -13.518582344055176

Token 188: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.69316166639328
    2. 'range' → logprob: -0.69316166639328
    3. '(range' → logprob: -11.943161964416504
    4. '	range' → logprob: -12.818161964416504
    5. ' xrange' → logprob: -13.318161964416504
    6. 'ange' → logprob: -13.318161964416504
    7. '
' → logprob: -13.943161964416504
    8. 'x' → logprob: -15.068161964416504
    9. ' ' → logprob: -15.443161964416504
    10. ' in' → logprob: -15.943161964416504

Token 189: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018149138486478478
    2. '(' → logprob: -8.625181198120117
    3. 'self' → logprob: -14.125181198120117
    4. ' (' → logprob: -14.375181198120117
    5. '(s' → logprob: -15.375181198120117
    6. '(
' → logprob: -15.500181198120117
    7. ')' → logprob: -16.750181198120117
    8. ' self' → logprob: -16.875181198120117
    9. ')(' → logprob: -17.250181198120117
    10. 's' → logprob: -17.375181198120117

Token 190: '.LOG' (ID: 68764)
  Prédit: '.LOG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.LOG' → logprob: -0.0007662679417990148
    2. 'LOG' → logprob: -7.875766277313232
    3. '(LOG' → logprob: -9.125765800476074
    4. 'self' → logprob: -9.375765800476074
    5. '.L' → logprob: -9.750765800476074
    6. '	LOG' → logprob: -10.500765800476074
    7. '.Log' → logprob: -10.750765800476074
    8. ' .' → logprob: -10.875765800476074
    9. 'OG' → logprob: -11.875765800476074
    10. '
' → logprob: -11.875765800476074

Token 191: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017672323156148195
    2. ')' → logprob: -9.000176429748535
    3. ' )' → logprob: -10.000176429748535
    4. ')]
' → logprob: -13.250176429748535
    5. ')])' → logprob: -13.375176429748535
    6. '   ' → logprob: -14.000176429748535
    7. ')],' → logprob: -14.125176429748535
    8. '       ' → logprob: -14.250176429748535
    9. ']' → logprob: -14.250176429748535
    10. ')][' → logprob: -14.750176429748535

Token 192: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6005966663360596
    2. '       ' → logprob: -1.4755966663360596
    3. '   ' → logprob: -2.1005966663360596
    4. '<|end|>' → logprob: -2.6005966663360596
    5. '  
' → logprob: -5.1005964279174805
    6. '    
' → logprob: -5.2255964279174805
    7. '        
' → logprob: -5.6005964279174805
    8. ' ' → logprob: -5.8505964279174805
    9. '	' → logprob: -6.2255964279174805
    10. ' 
' → logprob: -6.4755964279174805

Token 193: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.22803877294063568
    2. ' self' → logprob: -2.228038787841797
    3. '       ' → logprob: -2.353038787841797
    4. '   ' → logprob: -7.603038787841797
    5. 'def' → logprob: -8.728038787841797
    6. '
' → logprob: -9.103038787841797
    7. '	self' → logprob: -9.603038787841797
    8. ' ' → logprob: -9.728038787841797
    9. '0' → logprob: -10.103038787841797
    10. '        
' → logprob: -10.353038787841797

Token 194: '.dist' (ID: 77404)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.7292575240135193
    2. ' .' → logprob: -1.729257583618164
    3. '.ad' → logprob: -1.729257583618164
    4. '.weight' → logprob: -3.104257583618164
    5. '.dist' → logprob: -3.479257583618164
    6. '.depth' → logprob: -3.604257583618164
    7. '.' → logprob: -4.104257583618164
    8. '.parent' → logprob: -4.229257583618164
    9. '.cost' → logprob: -4.854257583618164
    10. 'adj' → logprob: -5.729257583618164

Token 195: '_to' (ID: 5089)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043094877153635025
    2. '=' → logprob: -3.1680948734283447
    3. 'To' → logprob: -10.543094635009766
    4. ' ' → logprob: -10.918094635009766
    5. 'from' → logprob: -11.168094635009766
    6. 'From' → logprob: -11.668094635009766
    7. '_to' → logprob: -11.793094635009766
    8. 'to' → logprob: -12.293094635009766
    9. '_from' → logprob: -12.418094635009766
    10. 'ance' → logprob: -13.043094635009766

Token 196: '_root' (ID: 29989)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.018012266606092453
    2. '_root' → logprob: -4.643012046813965
    3. '[root' → logprob: -5.518012046813965
    4. '=' → logprob: -6.893012046813965
    5. '[' → logprob: -7.018012046813965
    6. ' root' → logprob: -7.268012046813965
    7. ' =' → logprob: -7.643012046813965
    8. '=root' → logprob: -7.768012046813965
    9. '[node' → logprob: -8.268012046813965
    10. ' ' → logprob: -9.143012046813965

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014191241934895515
    2. '=' → logprob: -4.264191150665283
    3. ' ' → logprob: -10.889191627502441
    4. '[' → logprob: -11.889191627502441
    5. ' =[' → logprob: -13.764191627502441
    6. '=[' → logprob: -14.889191627502441
    7. ']' → logprob: -15.389191627502441
    8. ' [' → logprob: -15.514191627502441
    9. '=[]' → logprob: -16.264190673828125
    10. ')' → logprob: -16.639190673828125

Token 198: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3868718445301056
    2. ' [' → logprob: -1.1368718147277832
    3. ' ' → logprob: -14.886872291564941
    4. '0' → logprob: -14.886872291564941
    5. '   ' → logprob: -16.511871337890625
    6. '[-' → logprob: -17.011871337890625
    7. ' ' → logprob: -17.511871337890625
    8. '=[' → logprob: -18.261871337890625
    9. '	' → logprob: -18.386871337890625
    10. '  ' → logprob: -18.636871337890625

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '-' → logprob: -16.375009536743164
    4. '[' → logprob: -19.500009536743164
    5. 'float' → logprob: -19.500009536743164
    6. '۰' → logprob: -19.750009536743164
    7. '   ' → logprob: -20.750009536743164
    8. ')' → logprob: -20.875009536743164
    9. '(' → logprob: -21.125009536743164
    10. ' -' → logprob: -21.375009536743164

Token 200: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02795265056192875
    2. ' ]' → logprob: -3.7779526710510254
    3. ' ' → logprob: -6.152952671051025
    4. ' *' → logprob: -6.402952671051025
    5. ')' → logprob: -7.527952671051025
    6. ']*(' → logprob: -8.277952194213867
    7. ']*' → logprob: -10.777952194213867
    8. '*' → logprob: -10.777952194213867
    9. ',' → logprob: -11.277952194213867
    10. ' for' → logprob: -11.277952194213867

Token 201: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.003849128494039178
    2. '*' → logprob: -5.628849029541016
    3. '*(' → logprob: -8.753849029541016
    4. ' ' → logprob: -9.753849029541016
    5. ' *(' → logprob: -10.753849029541016
    6. ' (' → logprob: -13.128849029541016
    7. '<|end|>' → logprob: -13.503849029541016
    8. ']' → logprob: -13.628849029541016
    9. ')' → logprob: -13.753849029541016
    10. '    ' → logprob: -14.003849029541016

Token 202: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005937924608588219
    2. ' (' → logprob: -5.1309380531311035
    3. '(' → logprob: -12.130937576293945
    4. '(n' → logprob: -13.505937576293945
    5. 'self' → logprob: -13.630937576293945
    6. ' self' → logprob: -14.380937576293945
    7. '[self' → logprob: -14.880937576293945
    8. ' ' → logprob: -16.255937576293945
    9. '(len' → logprob: -16.505937576293945
    10. '((' → logprob: -16.755937576293945

Token 203: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01723022386431694
    2. '(self' → logprob: -4.142230033874512
    3. ' self' → logprob: -6.767230033874512
    4. '
' → logprob: -10.517230033874512
    5. '[self' → logprob: -12.017230033874512
    6. '   ' → logprob: -12.892230033874512
    7. ' (' → logprob: -13.017230033874512
    8. ')' → logprob: -13.767230033874512
    9. '       ' → logprob: -14.017230033874512
    10. ' ' → logprob: -14.142230033874512

Token 204: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -8.602024900028482e-05
    2. 'n' → logprob: -9.375085830688477
    3. 'self' → logprob: -15.125085830688477
    4. '
' → logprob: -15.625085830688477
    5. ' .' → logprob: -15.875085830688477
    6. '(n' → logprob: -16.375085830688477
    7. '.' → logprob: -16.500085830688477
    8. ',n' → logprob: -16.500085830688477
    9. '_n' → logprob: -16.625085830688477
    10. '+' → logprob: -17.000085830688477

Token 205: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1128242164850235
    2. ' +' → logprob: -2.2378242015838623
    3. '+
' → logprob: -13.987824440002441
    4. ' +
' → logprob: -15.237824440002441
    5. ')' → logprob: -15.362824440002441
    6. '
' → logprob: -16.237823486328125
    7. ')+' → logprob: -16.362823486328125
    8. ' ' → logprob: -16.362823486328125
    9. '()+' → logprob: -16.612823486328125
    10. ' plus' → logprob: -17.237823486328125

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. 'n' → logprob: -15.000022888183594
    4. '+' → logprob: -15.250022888183594
    5. '   ' → logprob: -16.250022888183594
    6. '(' → logprob: -16.250022888183594
    7. 'self' → logprob: -16.375022888183594
    8. '
' → logprob: -16.625022888183594
    9. ')' → logprob: -16.750022888183594
    10. '```' → logprob: -17.125022888183594

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -12.250007629394531
    3. '+' → logprob: -13.875007629394531
    4. 'n' → logprob: -14.500007629394531
    5. '   ' → logprob: -15.250007629394531
    6. '(' → logprob: -15.500007629394531
    7. '```' → logprob: -16.06250762939453
    8. 'graph' → logprob: -16.12500762939453
    9. '
' → logprob: -16.25000762939453
    10. '(n' → logprob: -16.75000762939453

Token 208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010572222527116537
    2. ')
' → logprob: -6.876057147979736
    3. ' )' → logprob: -11.876057624816895
    4. '   ' → logprob: -11.876057624816895
    5. '       ' → logprob: -12.126057624816895
    6. ')

' → logprob: -12.751057624816895
    7. '
' → logprob: -14.251057624816895
    8. ')
' → logprob: -14.251057624816895
    9. 'def' → logprob: -15.626057624816895
    10. ' ' → logprob: -15.626057624816895

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20441654324531555
    2. '
' → logprob: -1.8294165134429932
    3. '<|end|>' → logprob: -4.579416751861572
    4. '   ' → logprob: -5.079416751861572
    5. 'def' → logprob: -5.829416751861572
    6. '    
' → logprob: -6.579416751861572
    7. '        
' → logprob: -6.954416751861572
    8. '  
' → logprob: -7.079416751861572
    9. '<|end|>' → logprob: -7.329416751861572
    10. ' def' → logprob: -7.704416751861572

Token 210: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11614938825368881
    2. '       ' → logprob: -2.866149425506592
    3. 'self' (adapté à ' self') → logprob: -2.991149425506592
    4. ' def' → logprob: -6.616149425506592
    5. '   ' → logprob: -7.241149425506592
    6. ' self' → logprob: -7.991149425506592
    7. 'stack' → logprob: -10.241148948669434
    8. '        
' → logprob: -10.866148948669434
    9. 'queue' → logprob: -10.866148948669434
    10. 'visited' → logprob: -11.491148948669434

Token 211: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.00760698551312089
    2. '.ad' → logprob: -5.7576069831848145
    3. 'graph' → logprob: -6.5076069831848145
    4. ' .' → logprob: -7.5076069831848145
    5. '.vis' → logprob: -7.6326069831848145
    6. '.' → logprob: -7.6326069831848145
    7. '.g' → logprob: -7.6326069831848145
    8. 'def' → logprob: -8.507607460021973
    9. '._' → logprob: -8.882607460021973
    10. '.def' → logprob: -9.382607460021973

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2818605899810791
    2. '=' → logprob: -1.406860589981079
    3. '.' → logprob: -7.7818603515625
    4. '.graph' → logprob: -9.0318603515625
    5. '.ad' → logprob: -9.9068603515625
    6. ' ' → logprob: -10.1568603515625
    7. '.=' → logprob: -10.1568603515625
    8. ' .' → logprob: -10.9068603515625
    9. '    ' → logprob: -11.5318603515625
    10. '   ' → logprob: -12.9068603515625

Token 213: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0052456180565059185
    2. ' graph' → logprob: -5.255245685577393
    3. '(graph' → logprob: -12.005245208740234
    4. '	graph' → logprob: -12.380245208740234
    5. 'raph' → logprob: -14.005245208740234
    6. '
' → logprob: -15.505245208740234
    7. '.graph' → logprob: -15.755245208740234
    8. 'Graph' → logprob: -16.255245208740234
    9. '_graph' → logprob: -16.255245208740234
    10. 'graphql' → logprob: -17.005245208740234

Token 214: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0819399505853653
    2. '       ' → logprob: -2.706939935684204
    3. '<|end|>' → logprob: -4.581940174102783
    4. 'def' → logprob: -7.956940174102783
    5. '    
' → logprob: -8.081939697265625
    6. '   ' → logprob: -8.206939697265625
    7. ',' → logprob: -8.581939697265625
    8. '  
' → logprob: -8.831939697265625
    9. '<|end|>' → logprob: -9.081939697265625
    10. '        
' → logprob: -9.456939697265625

Token 215: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0071809799410402775
    2. '   ' → logprob: -6.007181167602539
    3. '<|end|>' → logprob: -6.132181167602539
    4. '    
' → logprob: -6.632181167602539
    5. 'def' → logprob: -7.382181167602539
    6. ' def' → logprob: -8.507181167602539
    7. '  
' → logprob: -9.007181167602539
    8. '       ' → logprob: -9.507181167602539
    9. '<|end|>' → logprob: -10.007181167602539
    10. ' 
' → logprob: -10.007181167602539

Token 216: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09044892340898514
    2. 'def' → logprob: -3.0904488563537598
    3. '       ' → logprob: -3.4654488563537598
    4. ' self' → logprob: -4.71544885635376
    5. '   ' → logprob: -7.46544885635376
    6. 'import' → logprob: -9.465449333190918
    7. '
' → logprob: -9.965449333190918
    8. ' def' → logprob: -9.965449333190918
    9. 'thread' → logprob: -11.465449333190918
    10. ' threading' → logprob: -11.715449333190918

Token 217: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4434919059276581
    2. '._' → logprob: -2.0684919357299805
    3. 'def' → logprob: -2.1934919357299805
    4. '.def' → logprob: -3.3184919357299805
    5. '.root' → logprob: -3.8184919357299805
    6. '.depth' → logprob: -4.1934919357299805
    7. ' .' → logprob: -4.5684919357299805
    8. '.visit' → logprob: -4.9434919357299805
    9. '.t' → logprob: -5.3184919357299805
    10. '.thread' → logprob: -5.8184919357299805

Token 218: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00669843889772892
    2. 'build' → logprob: -5.1316986083984375
    3. 'prepare' → logprob: -8.006698608398438
    4. 'init' → logprob: -8.381698608398438
    5. 'pre' → logprob: -9.131698608398438
    6. 'visited' → logprob: -10.381698608398438
    7. ' dfs' → logprob: -10.756698608398438
    8. 'initialize' → logprob: -11.506698608398438
    9. 'df' → logprob: -11.631698608398438
    10. 'compute' → logprob: -11.756698608398438

Token 219: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.03850305825471878
    2. '(' → logprob: -3.2885031700134277
    3. '(self' → logprob: -8.16350269317627
    4. 'root' → logprob: -9.41350269317627
    5. '(
' → logprob: -10.53850269317627
    6. ' (' → logprob: -10.66350269317627
    7. '(graph' → logprob: -10.91350269317627
    8. '(node' → logprob: -11.78850269317627
    9. '(u' → logprob: -12.41350269317627
    10. '(v' → logprob: -13.16350269317627

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.451116051815916e-05
    2. ' ,' → logprob: -10.625024795532227
    3. ')' → logprob: -16.375024795532227
    4. '‌,' → logprob: -17.500024795532227
    5. ',int' → logprob: -18.125024795532227
    6. ',
' → logprob: -18.375024795532227
    7. '	' → logprob: -19.250024795532227
    8. ' ' → logprob: -19.625024795532227
    9. '1' → logprob: -20.000024795532227
    10. '，' → logprob: -20.125024795532227

Token 221: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.41008156538009644
    2. 'root' → logprob: -1.5350816249847412
    3. ' -' → logprob: -2.660081624984741
    4. ' root' → logprob: -3.035081624984741
    5. '-root' → logprob: -6.660081386566162
    6. ' ' → logprob: -7.035081386566162
    7. '0' → logprob: -7.285081386566162
    8. '1' → logprob: -10.66008186340332
    9. '	root' → logprob: -11.03508186340332
    10. ')' → logprob: -11.16008186340332

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '-' → logprob: -17.250024795532227
    4. ')' → logprob: -17.750024795532227
    5. '2' → logprob: -18.000024795532227
    6. '   ' → logprob: -18.125024795532227
    7. '    ' → logprob: -18.500024795532227
    8. '       ' → logprob: -18.937524795532227
    9. '  ' → logprob: -19.312524795532227
    10. ' -' → logprob: -19.375024795532227

Token 223: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08439452946186066
    2. ',' → logprob: -2.5843944549560547
    3. ' )' → logprob: -5.209394454956055
    4. ' ,' → logprob: -11.334394454956055
    5. ',)' → logprob: -11.834394454956055
    6. '   ' → logprob: -13.209394454956055
    7. '    ' → logprob: -14.459394454956055
    8. '),' → logprob: -14.834394454956055
    9. '`)' → logprob: -14.959394454956055
    10. ' ' → logprob: -15.209394454956055

Token 224: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059290360659360886
    2. ' ' → logprob: -5.130928993225098
    3. ')' → logprob: -15.505928993225098
    4. '   ' → logprob: -16.005929946899414
    5. '  ' → logprob: -16.505929946899414
    6. ' ' → logprob: -16.880929946899414
    7. '۰' → logprob: -17.443429946899414
    8. '    ' → logprob: -17.755929946899414
    9. ',' → logprob: -18.318429946899414
    10. '
' → logprob: -18.693429946899414

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. ')' → logprob: -18.50002098083496
    4. '۰' → logprob: -19.50002098083496
    5. '   ' → logprob: -19.81252098083496
    6. '00' → logprob: -20.81252098083496
    7. ',' → logprob: -20.87502098083496
    8. '000' → logprob: -21.12502098083496
    9. '  ' → logprob: -21.25002098083496
    10. '1' → logprob: -21.93752098083496

Token 226: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015638137236237526
    2. ',' → logprob: -4.51563835144043
    3. ' )' → logprob: -5.39063835144043
    4. ' ,' → logprob: -11.64063835144043
    5. ')
' → logprob: -12.51563835144043
    6. ',)' → logprob: -12.51563835144043
    7. '   ' → logprob: -13.76563835144043
    8. '0' → logprob: -14.01563835144043
    9. '    ' → logprob: -14.51563835144043
    10. '))' → logprob: -14.89063835144043

Token 227: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019299437990412116
    2. ' ' → logprob: -6.251929759979248
    3. ')' → logprob: -13.876930236816406
    4. '   ' → logprob: -15.126930236816406
    5. '  ' → logprob: -16.876930236816406
    6. '    ' → logprob: -18.314430236816406
    7. ' ' → logprob: -18.376930236816406
    8. ')
' → logprob: -19.001930236816406
    9. '
' → logprob: -19.064430236816406
    10. '۰' → logprob: -19.189430236816406

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.624555291840807e-05
    2. ' ' → logprob: -9.500076293945312
    3. ')' → logprob: -13.625076293945312
    4. '   ' → logprob: -16.750076293945312
    5. 'self' → logprob: -16.875076293945312
    6. ')
' → logprob: -17.875076293945312
    7. '  ' → logprob: -18.375076293945312
    8. '
' → logprob: -18.687576293945312
    9. 'None' → logprob: -18.812576293945312
    10. ' )' → logprob: -18.937576293945312

Token 229: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015153385465964675
    2. ')
' → logprob: -6.5015153884887695
    3. ' )' → logprob: -12.00151538848877
    4. '   ' → logprob: -12.50151538848877
    5. '       ' → logprob: -13.75151538848877
    6. ')

' → logprob: -14.00151538848877
    7. '
' → logprob: -15.00151538848877
    8. ')
' → logprob: -15.12651538848877
    9. '<|end|>' → logprob: -15.50151538848877
    10. ' ' → logprob: -16.251514434814453

Token 230: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7969886660575867
    2. '<|end|>' → logprob: -0.7969886660575867
    3. '   ' → logprob: -3.4219887256622314
    4. '    
' → logprob: -3.7969887256622314
    5. ' 
' → logprob: -4.171988487243652
    6. '       ' → logprob: -4.671988487243652
    7. '  
' → logprob: -4.671988487243652
    8. ')' → logprob: -5.671988487243652
    9. '\n' → logprob: -6.671988487243652
    10. '<|end|>' → logprob: -6.796988487243652

Token 231: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5858774781227112
    2. ' for' → logprob: -0.9608774781227112
    3. '       ' → logprob: -2.8358774185180664
    4. 'def' → logprob: -6.585877418518066
    5. '   ' → logprob: -7.585877418518066
    6. 'self' (adapté à ' self') → logprob: -8.835877418518066
    7. '	for' → logprob: -9.585877418518066
    8. ' ' → logprob: -11.085877418518066
    9. ' self' → logprob: -11.460877418518066
    10. '
' → logprob: -11.710877418518066

Token 232: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.009626587852835655
    2. '.' → logprob: -4.759626388549805
    3. '.for' → logprob: -7.884626388549805
    4. 'for' → logprob: -8.384626388549805
    5. 'def' → logprob: -9.759626388549805
    6. '.__' → logprob: -10.259626388549805
    7. '.parent' → logprob: -10.259626388549805
    8. '.fill' → logprob: -10.384626388549805
    9. '.initialize' → logprob: -10.634626388549805
    10. ' .' → logprob: -11.134626388549805

Token 233: 'build' (ID: 9242)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.6100205183029175
    2. 'build' → logprob: -0.8600205183029175
    3. 'compute' → logprob: -3.610020637512207
    4. 'prepare' → logprob: -5.485020637512207
    5. 'init' → logprob: -6.235020637512207
    6. 'binary' → logprob: -8.735020637512207
    7. 'process' → logprob: -9.235020637512207
    8. ' preprocess' → logprob: -10.485020637512207
    9. '_pre' → logprob: -10.860020637512207
    10. 'populate' → logprob: -11.235020637512207

Token 234: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021641829516738653
    2. '_' → logprob: -6.627164363861084
    3. '_parent' → logprob: -7.752164363861084
    4. '_par' → logprob: -9.002163887023926
    5. '(' → logprob: -9.502163887023926
    6. '_table' → logprob: -9.877163887023926
    7. '_sparse' → logprob: -10.127163887023926
    8. '_tables' → logprob: -10.752163887023926
    9. '();' → logprob: -11.252163887023926
    10. '()
' → logprob: -11.377163887023926

Token 235: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19589607417583466
    2. '   ' → logprob: -2.4458961486816406
    3. '    
' → logprob: -2.4458961486816406
    4. 'def' → logprob: -5.695896148681641
    5. ' 
' → logprob: -7.570896148681641
    6. '  
' → logprob: -8.07089614868164
    7. ' def' → logprob: -9.07089614868164
    8. '   
' → logprob: -9.19589614868164
    9. '        
' → logprob: -9.94589614868164
    10. '	
' → logprob: -10.44589614868164

Token 236: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5299561023712158
    2. '   ' → logprob: -1.0299561023712158
    3. '
' → logprob: -3.529956102371216
    4. ' def' → logprob: -3.779956102371216
    5. '    
' → logprob: -6.404955863952637
    6. ' 
' → logprob: -8.654955863952637
    7. '	def' → logprob: -8.779955863952637
    8. ' ' → logprob: -9.404955863952637
    9. '  
' → logprob: -10.529955863952637
    10. '  ' → logprob: -10.904955863952637

Token 237: ' _' (ID: 1175)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0005913979839533567
    2. ' _' → logprob: -7.500591278076172
    3. '_' → logprob: -10.875591278076172
    4. 'dfs' → logprob: -11.375591278076172
    5. ' dfs' → logprob: -12.375591278076172
    6. '_df' → logprob: -13.375591278076172
    7. '_build' → logprob: -13.625591278076172
    8. '_depth' → logprob: -15.250591278076172
    9. '__' → logprob: -15.875591278076172
    10. ' DFS' → logprob: -16.250591278076172

Token 238: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0004429435357451439
    2. 'd' → logprob: -7.875442981719971
    3. 'df' → logprob: -10.000442504882812
    4. ' dfs' → logprob: -11.125442504882812
    5. 'def' → logprob: -13.625442504882812
    6. '_d' → logprob: -14.000442504882812
    7. 'ds' → logprob: -15.000442504882812
    8. 'dfa' → logprob: -15.875442504882812
    9. 'dsl' → logprob: -16.125442504882812
    10. 'depth' → logprob: -16.750442504882812

Token 239: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002997120900545269
    2. '(' → logprob: -8.125299453735352
    3. '(s' → logprob: -13.125299453735352
    4. ' (' → logprob: -13.875299453735352
    5. '(
' → logprob: -15.125299453735352
    6. '(node' → logprob: -15.875299453735352
    7. 'self' → logprob: -15.875299453735352
    8. '(sel' → logprob: -17.00029945373535
    9. '(root' → logprob: -17.12529945373535
    10. '(u' → logprob: -17.12529945373535

Token 240: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.313314952421933e-05
    2. '(' → logprob: -10.500062942504883
    3. ',' → logprob: -11.500062942504883
    4. 'self' → logprob: -11.500062942504883
    5. ' (' → logprob: -12.000062942504883
    6. ')' → logprob: -12.625062942504883
    7. '(s' → logprob: -13.250062942504883
    8. '   ' → logprob: -14.000062942504883
    9. ')(' → logprob: -14.000062942504883
    10. ' ' → logprob: -14.625062942504883

Token 241: ' node' (ID: 4596)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.013363859616219997
    2. 'node' → logprob: -4.763363838195801
    3. ' u' → logprob: -5.513363838195801
    4. ' node' → logprob: -7.263363838195801
    5. 'v' → logprob: -12.6383638381958
    6. 'current' → logprob: -14.5133638381958
    7. '   ' → logprob: -15.1383638381958
    8. '(u' → logprob: -15.7633638381958
    9. 'curr' → logprob: -15.7633638381958
    10. 'cur' → logprob: -16.138364791870117

Token 242: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -10.875019073486328
    3. ':' → logprob: -15.375019073486328
    4. '‌,' → logprob: -17.125019073486328
    5. ',int' → logprob: -18.125019073486328
    6. '<|end|>' → logprob: -18.875019073486328
    7. ',
' → logprob: -19.125019073486328
    8. '   ' → logprob: -19.375019073486328
    9. '`,' → logprob: -20.000019073486328
    10. '‍,' → logprob: -20.625019073486328

Token 243: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0014170228969305754
    2. ' int' → logprob: -6.62641716003418
    3. '0' → logprob: -10.87641716003418
    4. ')' → logprob: -11.12641716003418
    5. ' ' → logprob: -11.37641716003418
    6. '<int' → logprob: -11.50141716003418
    7. '<|end|>' → logprob: -12.00141716003418
    8. ':int' → logprob: -12.25141716003418
    9. ',' → logprob: -12.62641716003418
    10. '[int' → logprob: -12.62641716003418

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.848420551046729e-05
    2. ' ,' → logprob: -9.7500581741333
    3. '‌,' → logprob: -17.375059127807617
    4. '   ' → logprob: -17.750059127807617
    5. ',parent' → logprob: -17.750059127807617
    6. ',
' → logprob: -18.250059127807617
    7. ',node' → logprob: -18.500059127807617
    8. ',int' → logprob: -19.125059127807617
    9. ',u' → logprob: -19.250059127807617
    10. '`,' → logprob: -19.625059127807617

Token 245: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.04218079894781113
    2. 'parent' → logprob: -3.2921807765960693
    3. ' par' → logprob: -5.792181015014648
    4. 'p' → logprob: -7.292181015014648
    5. ' parent' → logprob: -8.292181015014648
    6. 'paren' → logprob: -9.042181015014648
    7. 'prev' → logprob: -10.667181015014648
    8. ' p' → logprob: -12.792181015014648
    9. 'pa' → logprob: -13.167181015014648
    10. 'pr' → logprob: -13.542181015014648

Token 246: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3161160945892334
    2. 't' → logprob: -1.3161160945892334
    3. ':' → logprob: -5.9411163330078125
    4. 'ent' → logprob: -8.941116333007812
    5. ' ' → logprob: -11.191116333007812
    6. ' ,' → logprob: -11.191116333007812
    7. '=' → logprob: -11.566116333007812
    8. '   ' → logprob: -11.816116333007812
    9. ')' → logprob: -12.066116333007812
    10. 'm' → logprob: -12.316116333007812

Token 247: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002872273325920105
    2. ' int' → logprob: -5.877872467041016
    3. '-' → logprob: -9.752872467041016
    4. ' -' → logprob: -12.377872467041016
    5. ')' → logprob: -12.877872467041016
    6. ' ' → logprob: -14.127872467041016
    7. '   ' → logprob: -14.377872467041016
    8. ',' → logprob: -15.127872467041016
    9. '<int' → logprob: -15.502872467041016
    10. '	int' → logprob: -15.752872467041016

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.860340752406046e-05
    2. ' ,' → logprob: -9.7500581741333
    3. ',w' → logprob: -16.750059127807617
    4. '‌,' → logprob: -17.125059127807617
    5. '   ' → logprob: -17.250059127807617
    6. ',int' → logprob: -17.250059127807617
    7. 'w' → logprob: -17.250059127807617
    8. ',
' → logprob: -17.625059127807617
    9. ')' → logprob: -18.250059127807617
    10. '،' → logprob: -18.312559127807617

Token 249: ' dep' (ID: 2834)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.08950205892324448
    2. 'dep' → logprob: -2.5895020961761475
    3. 'd' → logprob: -4.589501857757568
    4. ' depth' → logprob: -8.214502334594727
    5. ' dep' → logprob: -9.339502334594727
    6. ' d' → logprob: -10.714502334594727
    7. 'dist' → logprob: -12.089502334594727
    8. '_depth' → logprob: -12.214502334594727
    9. 'deep' → logprob: -12.839502334594727
    10. 'dept' → logprob: -13.589502334594727

Token 250: ':' (ID: 25)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.001103779417462647
    2. ',' → logprob: -7.12610387802124
    3. ':' → logprob: -9.126103401184082
    4. 't' → logprob: -9.251103401184082
    5. 'h' → logprob: -9.376103401184082
    6. '   ' → logprob: -12.751103401184082
    7. 'TH' → logprob: -13.501103401184082
    8. '):' → logprob: -13.751103401184082
    9. ',
' → logprob: -14.376103401184082
    10. '=' → logprob: -14.626103401184082

Token 251: ' int' (ID: 677)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7203937768936157
    2. 't' → logprob: -1.2203937768936157
    3. ' ' → logprob: -2.720393657684326
    4. 'th' → logprob: -2.720393657684326
    5. '0' → logprob: -3.220393657684326
    6. 'int' → logprob: -3.720393657684326
    7. ' int' → logprob: -5.095393657684326
    8. ' t' → logprob: -5.595393657684326
    9. 'depth' → logprob: -5.845393657684326
    10. '   ' → logprob: -6.470393657684326

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.68022444692906e-05
    2. ' ,' → logprob: -10.000046730041504
    3. ',
' → logprob: -14.750046730041504
    4. ',w' → logprob: -15.000046730041504
    5. 'w' → logprob: -15.750046730041504
    6. ',d' → logprob: -15.875046730041504
    7. '   ' → logprob: -16.37504768371582
    8. '‌,' → logprob: -17.12504768371582
    9. 'weight' → logprob: -17.37504768371582
    10. ',

' → logprob: -17.50004768371582

Token 253: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.036499518901109695
    2. 'acc' → logprob: -3.536499500274658
    3. 'cost' → logprob: -6.536499500274658
    4. 'd' → logprob: -6.661499500274658
    5. 'distance' → logprob: -6.661499500274658
    6. ' dist' → logprob: -7.161499500274658
    7. 'weight' → logprob: -7.536499500274658
    8. 'dis' → logprob: -7.536499500274658
    9. 'w' → logprob: -7.786499500274658
    10. 'cum' → logprob: -8.411499977111816

Token 254: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18841780722141266
    2. ':' → logprob: -1.8134177923202515
    3. '):
' → logprob: -5.563417911529541
    4. ' ):' → logprob: -6.313417911529541
    5. ')' → logprob: -6.688417911529541
    6. '_to' → logprob: -6.813417911529541
    7. 'to' → logprob: -7.813417911529541
    8. '   ' → logprob: -9.438417434692383
    9. 'To' → logprob: -10.438417434692383
    10. '_' → logprob: -10.813417434692383

Token 255: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.15420669317245483
    2. 'to' → logprob: -3.1542067527770996
    3. '0' → logprob: -3.4042067527770996
    4. ')' → logprob: -3.6542067527770996
    5. ' int' → logprob: -4.0292067527771
    6. '):' → logprob: -4.7792067527771
    7. '_to' → logprob: -5.2792067527771
    8. 'root' → logprob: -5.9042067527771
    9. 'To' → logprob: -6.1542067527771
    10. ' ' → logprob: -6.4042067527771

Token 256: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011393846943974495
    2. ')' → logprob: -6.876139163970947
    3. '):
' → logprob: -9.251139640808105
    4. ':' → logprob: -12.251139640808105
    5. ' ):' → logprob: -12.251139640808105
    6. '):
' → logprob: -14.251139640808105
    7. '   ' → logprob: -15.501139640808105
    8. '       ' → logprob: -17.12613868713379
    9. ' )' → logprob: -17.62613868713379
    10. '):

' → logprob: -17.75113868713379

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035267893224954605
    2. '   ' → logprob: -3.5352678298950195
    3. '	self' → logprob: -6.1602678298950195
    4. 'self' → logprob: -6.2852678298950195
    5. ' self' → logprob: -6.6602678298950195
    6. ')' → logprob: -9.28526782989502
    7. ' for' → logprob: -9.91026782989502
    8. '	for' → logprob: -10.78526782989502
    9. '<|end|>' → logprob: -11.03526782989502
    10. '	   ' → logprob: -11.16026782989502

Token 258: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003709701995830983
    2. '       ' → logprob: -8.000370979309082
    3. ' self' → logprob: -10.250370979309082
    4. '	self' → logprob: -16.750370025634766
    5. '   ' → logprob: -17.250370025634766
    6. '```' → logprob: -18.250370025634766
    7. ' ' → logprob: -19.500370025634766
    8. '(self' → logprob: -20.000370025634766
    9. 'for' → logprob: -20.125370025634766
    10. '[self' → logprob: -20.500370025634766

Token 259: '.parent' (ID: 17454)
  Prédit: '.depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.0004315036640036851
    2. '.' → logprob: -7.875431537628174
    3. ' .' → logprob: -10.375431060791016
    4. '.parent' → logprob: -10.875431060791016
    5. 'depth' → logprob: -14.250431060791016
    6. '.dep' → logprob: -16.250431060791016
    7. '.deep' → logprob: -16.625431060791016
    8. '.node' → logprob: -16.750431060791016
    9. '.Depth' → logprob: -16.750431060791016
    10. '.d' → logprob: -16.875431060791016

Token 260: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '0' → logprob: -13.000003814697266
    3. '```' → logprob: -14.375003814697266
    4. ' [' → logprob: -14.500003814697266
    5. ' ' → logprob: -16.625003814697266
    6. '
' → logprob: -17.125003814697266
    7. '[self' → logprob: -17.625003814697266
    8. '   ' → logprob: -17.875003814697266
    9. ')[' → logprob: -18.000003814697266
    10. '[
' → logprob: -18.125003814697266

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043400691356509924
    2. '[' → logprob: -7.750433921813965
    3. ' ' → logprob: -12.625433921813965
    4. '
' → logprob: -16.87543487548828
    5. ')' → logprob: -17.37543487548828
    6. '[
' → logprob: -17.37543487548828
    7. '```' → logprob: -18.25043487548828
    8. '   ' → logprob: -18.37543487548828
    9. '][' → logprob: -18.75043487548828
    10. '<|end|>' → logprob: -19.06293487548828

Token 262: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0622822530567646
    2. '[node' → logprob: -2.8122823238372803
    3. ']' → logprob: -8.68728256225586
    4. ' ][' → logprob: -9.56228256225586
    5. ')[' → logprob: -10.56228256225586
    6. '[' → logprob: -10.93728256225586
    7. '}[' → logprob: -11.68728256225586
    8. '   ' → logprob: -11.93728256225586
    9. '```' → logprob: -12.93728256225586
    10. ',node' → logprob: -13.06228256225586

Token 263: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -3.6789137084269896e-05
    2. ' node' → logprob: -10.25003719329834
    3. '[node' → logprob: -13.75003719329834
    4. '(node' → logprob: -15.62503719329834
    5. '=node' → logprob: -16.875036239624023
    6. '	node' → logprob: -18.125036239624023
    7. ',node' → logprob: -18.875036239624023
    8. 'nod' → logprob: -19.000036239624023
    9. 'Node' → logprob: -19.625036239624023
    10. ']' → logprob: -20.625036239624023

Token 264: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007523320964537561
    2. ']=' → logprob: -7.8757524490356445
    3. ' ]' → logprob: -8.500752449035645
    4. '=' → logprob: -8.750752449035645
    5. ' =' → logprob: -11.750752449035645
    6. ')' → logprob: -12.875752449035645
    7. ',' → logprob: -16.625751495361328
    8. ' ' → logprob: -18.125751495361328
    9. ' )' → logprob: -18.375751495361328
    10. '])' → logprob: -18.625751495361328

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192907452583313
    2. ' =' → logprob: -1.5019290447235107
    3. ' ' → logprob: -17.876928329467773
    4. '=int' → logprob: -19.501928329467773
    5. '＝' → logprob: -19.626928329467773
    6. ')=' → logprob: -19.751928329467773
    7. ')' → logprob: -20.126928329467773
    8. '.=' → logprob: -20.126928329467773
    9. '=s' → logprob: -20.501928329467773
    10. ',' → logprob: -20.501928329467773

Token 266: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0002614550176076591
    2. ' par' → logprob: -8.250261306762695
    3. '	par' → logprob: -15.875261306762695
    4. 'paren' → logprob: -17.375261306762695
    5. '(par' → logprob: -17.500261306762695
    6. 'pars' → logprob: -18.500261306762695
    7. 'pari' → logprob: -19.125261306762695
    8. 'пар' → logprob: -19.750261306762695
    9. 'parent' → logprob: -19.875261306762695
    10. 'p' → logprob: -19.875261306762695

Token 267: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5561850666999817
    2. '       ' → logprob: -0.9311850666999817
    3. '<|end|>' → logprob: -3.556185007095337
    4. 'self' → logprob: -5.931185245513916
    5. '        
' → logprob: -8.056184768676758
    6. ' self' → logprob: -8.806184768676758
    7. '
' → logprob: -8.931184768676758
    8. '  
' → logprob: -9.181184768676758
    9. '\n' → logprob: -9.181184768676758
    10. ',' → logprob: -9.306184768676758

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0523124635219574
    2. '
' → logprob: -3.1773123741149902
    3. '<|end|>' → logprob: -4.80231237411499
    4. 'self' → logprob: -7.42731237411499
    5. ' self' → logprob: -8.802312850952148
    6. '        
' → logprob: -9.427312850952148
    7. '   ' → logprob: -10.427312850952148
    8. '	self' → logprob: -10.552312850952148
    9. ',' → logprob: -10.677312850952148
    10. '  
' → logprob: -10.802312850952148

Token 269: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02171410247683525
    2. '       ' → logprob: -4.021714210510254
    3. ' self' → logprob: -5.646714210510254
    4. '   ' → logprob: -11.021714210510254
    5. '	self' → logprob: -12.271714210510254
    6. '           ' → logprob: -12.521714210510254
    7. 'depth' → logprob: -13.771714210510254
    8. '
' → logprob: -14.271714210510254
    9. '```' → logprob: -14.396714210510254
    10. '\' → logprob: -15.271714210510254

Token 270: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.00016742534353397787
    2. '.' → logprob: -9.500167846679688
    3. 'depth' → logprob: -9.500167846679688
    4. ' .' → logprob: -11.000167846679688
    5. ' depth' → logprob: -14.625167846679688
    6. '.dep' → logprob: -15.500167846679688
    7. '.Depth' → logprob: -16.375167846679688
    8. '.deep' → logprob: -16.500167846679688
    9. '.
' → logprob: -17.375167846679688
    10. '(depth' → logprob: -17.875167846679688

Token 271: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.75000286102295
    3. '=node' → logprob: -16.375003814697266
    4. '[token' → logprob: -16.750003814697266
    5. ' [' → logprob: -18.000003814697266
    6. '[n' → logprob: -18.000003814697266
    7. '[module' → logprob: -18.000003814697266
    8. '[user' → logprob: -18.250003814697266
    9. '[player' → logprob: -18.500003814697266
    10. '[cell' → logprob: -18.500003814697266

Token 272: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474082350730896
    2. ' =' → logprob: -0.974082350730896
    3. ')' → logprob: -12.474081993103027
    4. ' ' → logprob: -13.974081993103027
    5. ')=' → logprob: -14.724081993103027
    6. '=int' → logprob: -17.349082946777344
    7. ' )' → logprob: -17.599082946777344
    8. ',' → logprob: -17.724082946777344
    9. ' =
' → logprob: -17.849082946777344
    10. ' =)' → logprob: -18.224082946777344

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.563261032104492
    4. '=int' → logprob: -16.938261032104492
    5. '=
' → logprob: -19.063261032104492
    6. '=s' → logprob: -19.188261032104492
    7. '＝' → logprob: -19.563261032104492
    8. '=len' → logprob: -19.688261032104492
    9. ' =
' → logprob: -19.938261032104492
    10. '.=' → logprob: -19.938261032104492

Token 274: ' dep' (ID: 2834)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' → logprob: -0.07889000326395035
    2. ' dep' → logprob: -2.578890085220337
    3. 'de' → logprob: -15.578889846801758
    4. 'def' → logprob: -17.328889846801758
    5. '(dep' → logprob: -17.953889846801758
    6. 'depth' → logprob: -18.828889846801758
    7. 'd' → logprob: -19.203889846801758
    8. 'dev' → logprob: -19.453889846801758
    9. '_dep' → logprob: -19.578889846801758
    10. 'deb' → logprob: -19.578889846801758

Token 275: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36062872409820557
    2. '<|end|>' → logprob: -1.7356287240982056
    3. '       ' → logprob: -2.235628604888916
    4. 'self' → logprob: -3.985628604888916
    5. ' self' → logprob: -8.610629081726074
    6. ' 
' → logprob: -8.985629081726074
    7. '        
' → logprob: -9.235629081726074
    8. '<|end|>' → logprob: -9.235629081726074
    9. '   ' → logprob: -9.860629081726074
    10. '  
' → logprob: -9.860629081726074

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06221595034003258
    2. 'self' → logprob: -2.81221604347229
    3. '   ' → logprob: -8.937215805053711
    4. ' self' → logprob: -9.312215805053711
    5. '<|end|>' → logprob: -11.187215805053711
    6. '	self' → logprob: -12.062215805053711
    7. '           ' → logprob: -12.437215805053711
    8. ',' → logprob: -14.687215805053711
    9. ' ' → logprob: -15.062215805053711
    10. 'for' → logprob: -15.312215805053711

Token 277: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.107425062713446e-06
    2. '       ' → logprob: -12.125006675720215
    3. ' self' → logprob: -13.375006675720215
    4. 'for' → logprob: -17.75000762939453
    5. '	self' → logprob: -19.25000762939453
    6. '        
' → logprob: -20.00000762939453
    7. '=self' → logprob: -20.25000762939453
    8. 'if' → logprob: -20.37500762939453
    9. '   ' → logprob: -20.50000762939453
    10. '           ' → logprob: -20.62500762939453

Token 278: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -2.045823566731997e-05
    2. 'dist' → logprob: -10.875020027160645
    3. '.' → logprob: -14.125020027160645
    4. ' .' → logprob: -14.750020027160645
    5. '.depth' → logprob: -15.375020027160645
    6. '	dist' → logprob: -16.75002098083496
    7. '.distance' → logprob: -17.00002098083496
    8. '.dest' → logprob: -17.62502098083496
    9. ' dist' → logprob: -18.50002098083496
    10. '.def' → logprob: -19.00002098083496

Token 279: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.5
    3. ' _' → logprob: -16.375
    4. '_t' → logprob: -17.25
    5. '_TO' → logprob: -18.625
    6. '##_' → logprob: -19.125
    7. ')_' → logprob: -19.75
    8. '[_' → logprob: -20.0
    9. '_To' → logprob: -20.0
    10. '__' → logprob: -20.375

Token 280: '_root' (ID: 29989)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.6932154297828674
    2. '_root' → logprob: -0.6932154297828674
    3. ' root' → logprob: -9.693215370178223
    4. '[root' → logprob: -13.193215370178223
    5. '_to' → logprob: -13.943215370178223
    6. '(root' → logprob: -14.193215370178223
    7. '_' → logprob: -14.318215370178223
    8. '_ro' → logprob: -14.943215370178223
    9. 'to' → logprob: -14.943215370178223
    10. '```' → logprob: -15.318215370178223

Token 281: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.00000286102295
    3. ' [' → logprob: -15.62500286102295
    4. '[
' → logprob: -18.250001907348633
    5. '=node' → logprob: -18.625001907348633
    6. '[user' → logprob: -19.250001907348633
    7. '[module' → logprob: -19.750001907348633
    8. '```' → logprob: -19.750001907348633
    9. '[token' → logprob: -19.875001907348633
    10. '[n' → logprob: -20.500001907348633

Token 282: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133407235145569
    2. ' =' → logprob: -1.313340663909912
    3. ')' → logprob: -9.68834114074707
    4. ')=' → logprob: -11.43834114074707
    5. ']' → logprob: -12.68834114074707
    6. ']=' → logprob: -13.31334114074707
    7. ' )' → logprob: -14.06334114074707
    8. ' ' → logprob: -14.93834114074707
    9. ' +=' → logprob: -16.43834114074707
    10. ' ]' → logprob: -16.93834114074707

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '+=' → logprob: -18.014163970947266
    4. '=
' → logprob: -18.264163970947266
    5. '=int' → logprob: -18.389163970947266
    6. '.=' → logprob: -19.639163970947266
    7. '=s' → logprob: -19.639163970947266
    8. ' +=' → logprob: -19.639163970947266
    9. ' ' → logprob: -20.014163970947266
    10. ')' → logprob: -20.264163970947266

Token 284: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0031777136027812958
    2. ' dist' → logprob: -5.753177642822266
    3. '(dist' → logprob: -17.878177642822266
    4. '	dist' → logprob: -17.878177642822266
    5. 'd' → logprob: -19.503177642822266
    6. '_dist' → logprob: -19.753177642822266
    7. 'dis' → logprob: -20.003177642822266
    8. 'Dist' → logprob: -20.753177642822266
    9. ' ' → logprob: -21.003177642822266
    10. 'int' → logprob: -21.128177642822266

Token 285: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031771253794431686
    2. ' for' → logprob: -3.781771183013916
    3. '
' → logprob: -5.656771183013916
    4. 'for' → logprob: -6.156771183013916
    5. '<|end|>' → logprob: -6.156771183013916
    6. '   ' → logprob: -7.781771183013916
    7. '	for' → logprob: -9.156771659851074
    8. ',' → logprob: -9.281771659851074
    9. '        
' → logprob: -10.406771659851074
    10. ' ' → logprob: -10.656771659851074

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10031050443649292
    2. ' for' → logprob: -2.6003105640411377
    3. 'for' → logprob: -4.225310325622559
    4. '   ' → logprob: -5.725310325622559
    5. '
' → logprob: -6.475310325622559
    6. '<|end|>' → logprob: -6.725310325622559
    7. '	for' → logprob: -8.225310325622559
    8. '        
' → logprob: -9.225310325622559
    9. '  
' → logprob: -10.100310325622559
    10. ' ' → logprob: -10.475310325622559

Token 287: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.7697225252486533e-06
    2. ' for' → logprob: -12.750003814697266
    3. '       ' → logprob: -14.000003814697266
    4. '	for' → logprob: -19.250003814697266
    5. '   ' → logprob: -19.500003814697266
    6. '
' → logprob: -20.750003814697266
    7. '        
' → logprob: -21.500003814697266
    8. '```' → logprob: -24.375003814697266
    9. '           ' → logprob: -24.500003814697266
    10. '    
' → logprob: -25.125003814697266

Token 288: ' (' (ID: 350)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.37650519609451294
    2. '(ne' → logprob: -1.3765051364898682
    3. 'nei' → logprob: -3.126505136489868
    4. '(v' → logprob: -4.376505374908447
    5. 'nbr' → logprob: -6.126505374908447
    6. 'v' → logprob: -6.376505374908447
    7. 'ne' → logprob: -8.001504898071289
    8. ' nei' → logprob: -8.501504898071289
    9. '(n' → logprob: -9.126504898071289
    10. 'to' → logprob: -9.251504898071289

Token 289: 'n' (ID: 77)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.1464538872241974
    2. 'nei' → logprob: -2.146453857421875
    3. 'nbr' → logprob: -4.271453857421875
    4. 'ne' → logprob: -5.771453857421875
    5. '(ne' → logprob: -6.646453857421875
    6. 'n' → logprob: -7.896453857421875
    7. 'v' → logprob: -8.271453857421875
    8. 'next' → logprob: -9.146453857421875
    9. 'to' → logprob: -9.521453857421875
    10. ' nei' → logprob: -9.521453857421875

Token 290: 'xt' (ID: 711)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.005063806660473347
    2. 'ext' → logprob: -5.505064010620117
    3. 'eig' → logprob: -7.505064010620117
    4. ',' → logprob: -8.880064010620117
    5. 'ighbor' → logprob: -9.130064010620117
    6. 'br' → logprob: -9.880064010620117
    7. 'bor' → logprob: -10.130064010620117
    8. 'b' → logprob: -10.380064010620117
    9. 'ei' → logprob: -11.005064010620117
    10. 'ex' → logprob: -11.255064010620117

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.893480243277736e-05
    2. ' ,' → logprob: -10.500039100646973
    3. ',n' → logprob: -12.375039100646973
    4. ',node' → logprob: -12.625039100646973
    5. ',w' → logprob: -13.750039100646973
    6. ',
' → logprob: -14.000039100646973
    7. 'n' → logprob: -14.625039100646973
    8. ',v' → logprob: -14.875039100646973
    9. 'e' → logprob: -15.625039100646973
    10. 'w' → logprob: -16.000038146972656

Token 292: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0047982074320316315
    2. ' w' → logprob: -5.879798412322998
    3. 'weight' → logprob: -6.254798412322998
    4. 'wt' → logprob: -9.87979793548584
    5. ' weight' → logprob: -11.12979793548584
    6. ')' → logprob: -13.50479793548584
    7. 'weig' → logprob: -14.00479793548584
    8. '_w' → logprob: -14.62979793548584
    9. 'wg' → logprob: -14.75479793548584
    10. ' wt' → logprob: -14.75479793548584

Token 293: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8312570318812504e-05
    2. ' )' → logprob: -11.000018119812012
    3. ' in' → logprob: -14.250018119812012
    4. 'in' → logprob: -15.000018119812012
    5. ')
' → logprob: -15.375018119812012
    6. '),' → logprob: -16.250019073486328
    7. ' ' → logprob: -16.375019073486328
    8. 't' → logprob: -16.500019073486328
    9. ',' → logprob: -16.875019073486328
    10. '   ' → logprob: -18.000019073486328

Token 294: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4794876277446747
    2. 'in' → logprob: -0.9794876575469971
    3. ')' → logprob: -5.229487419128418
    4. ' )' → logprob: -11.104487419128418
    5. ',' → logprob: -11.479487419128418
    6. ' ' → logprob: -11.729487419128418
    7. 's' → logprob: -13.354487419128418
    8. '	in' → logprob: -13.729487419128418
    9. '  ' → logprob: -14.229487419128418
    10. 'n' → logprob: -14.479487419128418

Token 295: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004082078114151955
    2. ' self' → logprob: -5.504082202911377
    3. ')' → logprob: -13.379081726074219
    4. '(self' → logprob: -14.379081726074219
    5. '[self' → logprob: -14.629081726074219
    6. '   ' → logprob: -15.129081726074219
    7. '	self' → logprob: -15.129081726074219
    8. 'graph' → logprob: -15.504081726074219
    9. ' ' → logprob: -16.00408172607422
    10. '
' → logprob: -16.75408172607422

Token 296: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.00012166214582975954
    2. '.ad' → logprob: -9.3751220703125
    3. '.' → logprob: -11.0001220703125
    4. 'graph' → logprob: -11.2501220703125
    5. ' .' → logprob: -12.5001220703125
    6. '	graph' → logprob: -12.8751220703125
    7. ' graph' → logprob: -15.7501220703125
    8. '
' → logprob: -16.5001220703125
    9. '.g' → logprob: -16.5001220703125
    10. '   ' → logprob: -16.7501220703125

Token 297: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -5.438573680294212e-06
    2. ' .' → logprob: -12.625005722045898
    3. '.' → logprob: -13.250005722045898
    4. 'adj' → logprob: -15.625005722045898
    5. '.Ad' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.3750057220459
    7. ').' → logprob: -17.6250057220459
    8. '_adj' → logprob: -18.7500057220459
    9. 'Adj' → logprob: -19.1250057220459
    10. ' ' → logprob: -19.2500057220459

Token 298: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.2200749754119897e-06
    2. '[j' → logprob: -14.250001907348633
    3. ' j' → logprob: -15.250001907348633
    4. 'd' → logprob: -15.250001907348633
    5. 'js' → logprob: -15.750001907348633
    6. '[' → logprob: -15.750001907348633
    7. 'jn' → logprob: -16.000001907348633
    8. '
' → logprob: -16.125001907348633
    9. 'jac' → logprob: -16.375001907348633
    10. 'jr' → logprob: -16.625001907348633

Token 299: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. ')[' → logprob: -16.375
    4. ')' → logprob: -17.125
    5. ' [' → logprob: -17.375
    6. '[user' → logprob: -17.75
    7. 'node' → logprob: -17.875
    8. '[n' → logprob: -17.875
    9. '(node' → logprob: -18.375
    10. '][' → logprob: -18.5

Token 300: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07069411873817444
    2. ']:' → logprob: -2.6956942081451416
    3. ':' → logprob: -7.8206939697265625
    4. '):
' → logprob: -8.945693969726562
    5. ']):' → logprob: -9.570693969726562
    6. ')' → logprob: -10.070693969726562
    7. '       ' → logprob: -10.070693969726562
    8. ' ):' → logprob: -10.945693969726562
    9. ']' → logprob: -11.195693969726562
    10. '）：' → logprob: -11.570693969726562

Token 301: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011260485043749213
    2. '       ' → logprob: -7.751125812530518
    3. ' if' → logprob: -8.251126289367676
    4. '<|end|>' → logprob: -8.751126289367676
    5. ':' → logprob: -8.876126289367676
    6. ',' → logprob: -9.876126289367676
    7. '   ' → logprob: -10.876126289367676
    8. '<|end|>' → logprob: -11.501126289367676
    9. '               ' → logprob: -11.626126289367676
    10. '            ' → logprob: -11.876126289367676

Token 302: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21179306507110596
    2. 'if' (adapté à ' if') → logprob: -1.711793065071106
    3. '           ' → logprob: -4.961792945861816
    4. '               ' → logprob: -5.711792945861816
    5. '   ' → logprob: -11.961792945861816
    6. '	if' → logprob: -12.836792945861816
    7. '            ' → logprob: -12.836792945861816
    8. 'If' → logprob: -13.211792945861816
    9. '       ' → logprob: -13.961792945861816
    10. ' ' → logprob: -14.211792945861816

Token 303: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04881252348423004
    2. ' nxt' → logprob: -3.0488126277923584
    3. ' n' → logprob: -8.548812866210938
    4. '(n' → logprob: -10.923812866210938
    5. '	n' → logprob: -11.548812866210938
    6. ' nex' → logprob: -14.173812866210938
    7. 'n't' → logprob: -14.298812866210938
    8. '<|end|>' → logprob: -14.298812866210938
    9. '[n' → logprob: -15.048812866210938
    10. ' ' → logprob: -15.173812866210938

Token 304: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4741016626358032
    2. '!=' → logprob: -0.9741016626358032
    3. ')!=' → logprob: -11.349102020263672
    4. '()!=' → logprob: -12.224102020263672
    5. ']!=' → logprob: -13.099102020263672
    6. '!=-' → logprob: -13.224102020263672
    7. ' ' → logprob: -13.724102020263672
    8. '!==' → logprob: -14.474102020263672
    9. '!=(' → logprob: -14.599102020263672
    10. ' ==' → logprob: -14.724102020263672

Token 305: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.004078997299075127
    2. ' par' → logprob: -5.5040788650512695
    3. '	par' → logprob: -15.00407886505127
    4. 'paren' → logprob: -16.129079818725586
    5. 'parent' → logprob: -17.004079818725586
    6. '(par' → logprob: -17.504079818725586
    7. 'p' → logprob: -18.504079818725586
    8. '   ' → logprob: -18.879079818725586
    9. '_par' → logprob: -18.879079818725586
    10. ' ' → logprob: -18.879079818725586

Token 306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5330106019973755
    2. ':
' → logprob: -0.9080106019973755
    3. '               ' → logprob: -5.408010482788086
    4. ' and' → logprob: -6.158010482788086
    5. '):
' → logprob: -6.283010482788086
    6. '           ' → logprob: -6.908010482788086
    7. '):' → logprob: -8.783010482788086
    8. ')' → logprob: -9.658010482788086
    9. ',' → logprob: -10.033010482788086
    10. '<|end|>' → logprob: -10.658010482788086

Token 307: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006064103217795491
    2. ' self' → logprob: -7.500606536865234
    3. ' ' → logprob: -11.125606536865234
    4. '                
' → logprob: -11.500606536865234
    5. '           ' → logprob: -11.625606536865234
    6. 'self' → logprob: -12.125606536865234
    7. ' 
' → logprob: -12.250606536865234
    8. ',' → logprob: -12.875606536865234
    9. '       ' → logprob: -13.375606536865234
    10. '                   ' → logprob: -13.875606536865234

Token 308: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3154377043247223
    2. ' self' → logprob: -1.3154376745224
    3. '               ' → logprob: -6.3154377937316895
    4. '                   ' → logprob: -7.9404377937316895
    5. '   ' → logprob: -13.190437316894531
    6. '(self' → logprob: -13.190437316894531
    7. '                ' → logprob: -13.315437316894531
    8. '	self' → logprob: -13.815437316894531
    9. '           ' → logprob: -14.190437316894531
    10. ' ' → logprob: -14.440437316894531

Token 309: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0004008793330285698
    2. '_d' → logprob: -7.875401020050049
    3. '.' → logprob: -11.50040054321289
    4. '   ' → logprob: -12.25040054321289
    5. ' .' → logprob: -13.25040054321289
    6. '.d' → logprob: -13.37540054321289
    7. ' _' → logprob: -13.50040054321289
    8. '  ' → logprob: -15.62540054321289
    9. '.\' → logprob: -15.75040054321289
    10. '->_' → logprob: -16.12540054321289

Token 310: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.7432603272027336e-06
    2. ' dfs' → logprob: -13.750001907348633
    3. 'df' → logprob: -14.750001907348633
    4. 'd' → logprob: -15.750001907348633
    5. 'ds' → logprob: -18.000001907348633
    6. 'DFS' → logprob: -18.750001907348633
    7. '_d' → logprob: -18.875001907348633
    8. 'dfa' → logprob: -19.250001907348633
    9. 'dsl' → logprob: -19.500001907348633
    10. 'dns' → logprob: -20.250001907348633

Token 311: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008049834286794066
    2. '(' → logprob: -7.125804901123047
    3. '(
' → logprob: -15.125804901123047
    4. ' (' → logprob: -15.500804901123047
    5. '(nx' → logprob: -18.250804901123047
    6. '((' → logprob: -19.000804901123047
    7. '(

' → logprob: -19.500804901123047
    8. '(next' → logprob: -19.625804901123047
    9. '(s' → logprob: -20.125804901123047
    10. '(node' → logprob: -20.250804901123047

Token 312: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -9.729906196298543e-06
    2. '   ' → logprob: -12.750009536743164
    3. 'x' → logprob: -12.875009536743164
    4. '       ' → logprob: -14.000009536743164
    5. '[' → logprob: -14.250009536743164
    6. '```' → logprob: -14.250009536743164
    7. ',' → logprob: -14.500009536743164
    8. 't' → logprob: -14.875009536743164
    9. '
' → logprob: -15.750009536743164
    10. '     ' → logprob: -16.000009536743164

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003469057264737785
    2. ' ,' → logprob: -8.250347137451172
    3. ',node' → logprob: -9.375347137451172
    4. ',n' → logprob: -15.000347137451172
    5. ',
' → logprob: -15.250347137451172
    6. ' node' → logprob: -16.000347137451172
    7. 'node' → logprob: -16.125347137451172
    8. '
' → logprob: -17.000347137451172
    9. ' ' → logprob: -17.625347137451172
    10. '`,' → logprob: -17.750347137451172

Token 314: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.01815345324575901
    2. ' node' → logprob: -4.018153667449951
    3. ',node' → logprob: -13.643153190612793
    4. '	node' → logprob: -14.268153190612793
    5. '[node' → logprob: -14.643153190612793
    6. ',' → logprob: -15.143153190612793
    7. '=node' → logprob: -15.143153190612793
    8. '(node' → logprob: -15.643153190612793
    9. '   ' → logprob: -15.768153190612793
    10. ' ' → logprob: -15.893153190612793

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000718626833986491
    2. ' ,' → logprob: -7.250718593597412
    3. ',w' → logprob: -12.00071907043457
    4. 'w' → logprob: -13.00071907043457
    5. ',
' → logprob: -16.00071907043457
    6. '   ' → logprob: -17.00071907043457
    7. ',d' → logprob: -17.12571907043457
    8. ')' → logprob: -17.25071907043457
    9. ' w' → logprob: -17.25071907043457
    10. '),' → logprob: -17.62571907043457

Token 316: ' dep' (ID: 2834)
  Prédit: ' dep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dep' → logprob: -0.014163863845169544
    2. 'dep' → logprob: -4.264163970947266
    3. '(dep' → logprob: -15.889163970947266
    4. '	de' → logprob: -16.264163970947266
    5. 'de' → logprob: -16.639163970947266
    6. 'def' → logprob: -18.014163970947266
    7. ' ' → logprob: -18.014163970947266
    8. '   ' → logprob: -18.264163970947266
    9. '_dep' → logprob: -18.639163970947266
    10. 'depth' → logprob: -18.639163970947266

Token 317: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25192990899086
    2. ' +' → logprob: -1.5019298791885376
    3. ' ' → logprob: -14.626930236816406
    4. ' ' → logprob: -16.001930236816406
    5. '＋' → logprob: -16.501930236816406
    6. '   ' → logprob: -16.626930236816406
    7. ' plus' → logprob: -17.251930236816406
    8. '1' → logprob: -17.626930236816406
    9. '+
' → logprob: -18.126930236816406
    10. ',' → logprob: -18.876930236816406

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.12504005432129
    4. '
' → logprob: -19.00004005432129
    5. '```' → logprob: -19.00004005432129
    6. ',' → logprob: -20.62504005432129
    7. '  ' → logprob: -20.87504005432129
    8. ')' → logprob: -21.25004005432129
    9. '                   ' → logprob: -21.50004005432129
    10. '<|end|>' → logprob: -21.62504005432129

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -20.875001907348633
    4. '```' → logprob: -21.750001907348633
    5. '
' → logprob: -22.125001907348633
    6. '  ' → logprob: -22.375001907348633
    7. '<|end|>' → logprob: -23.375001907348633
    8. ',' → logprob: -24.125001907348633
    9. '' → logprob: -24.187501907348633
    10. '۱' → logprob: -24.312501907348633

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014060820103622973
    2. ' ,' → logprob: -8.875140190124512
    3. ',
' → logprob: -15.500140190124512
    4. 'w' → logprob: -15.500140190124512
    5. ')' → logprob: -15.750140190124512
    6. ',w' → logprob: -16.250141143798828
    7. '```' → logprob: -17.250141143798828
    8. '),' → logprob: -18.625141143798828
    9. ',d' → logprob: -18.875141143798828
    10. ' ' → logprob: -19.125141143798828

Token 321: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008614926598966122
    2. ' dist' → logprob: -4.758615016937256
    3. '	dist' → logprob: -16.008615493774414
    4. 'd' → logprob: -16.133615493774414
    5. '(dist' → logprob: -16.508615493774414
    6. 'w' → logprob: -16.508615493774414
    7. '_dist' → logprob: -17.258615493774414
    8. 'Dist' → logprob: -18.258615493774414
    9. '.dist' → logprob: -18.883615493774414
    10. ' ' → logprob: -19.383615493774414

Token 322: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5764529705047607
    2. '+' → logprob: -0.8264529705047607
    3. '+w' → logprob: -7.57645320892334
    4. ' ' → logprob: -15.20145320892334
    5. ' ' → logprob: -15.57645320892334
    6. 'w' → logprob: -15.57645320892334
    7. '+
' → logprob: -16.201452255249023
    8. ' w' → logprob: -16.326452255249023
    9. ')' → logprob: -17.201452255249023
    10. '＋' → logprob: -17.201452255249023

Token 323: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.003601617179811001
    2. ' w' → logprob: -5.628601551055908
    3. ' ' → logprob: -14.878602027893066
    4. '_w' → logprob: -15.128602027893066
    5. ' ' → logprob: -15.378602027893066
    6. '   ' → logprob: -15.378602027893066
    7. '	w' → logprob: -15.878602027893066
    8. '    ' → logprob: -16.37860107421875
    9. ')' → logprob: -16.75360107421875
    10. '  ' → logprob: -17.19110107421875

Token 324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. ')
' → logprob: -11.000019073486328
    3. ' )' → logprob: -14.250019073486328
    4. '<|end|>' → logprob: -14.375019073486328
    5. ')

' → logprob: -14.875019073486328
    6. ')return' → logprob: -15.750019073486328
    7. '               ' → logprob: -16.500019073486328
    8. '       ' → logprob: -17.375019073486328
    9. '),' → logprob: -17.750019073486328
    10. '<|end|>' → logprob: -18.000019073486328

Token 325: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7127823829650879
    2. '
' → logprob: -0.9627823829650879
    3. '<|end|>' → logprob: -3.212782382965088
    4. ')' → logprob: -3.337782382965088
    5. '    
' → logprob: -3.587782382965088
    6. ' 
' → logprob: -5.212782382965088
    7. '  
' → logprob: -5.337782382965088
    8. '       ' → logprob: -5.462782382965088
    9. ' ' → logprob: -5.962782382965088
    10. ')
' → logprob: -6.462782382965088

Token 326: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17413759231567383
    2. '   ' → logprob: -1.9241375923156738
    3. ' def' → logprob: -4.299137592315674
    4. '	def' → logprob: -8.549137115478516
    5. ' ' → logprob: -10.549137115478516
    6. '  ' → logprob: -11.799137115478516
    7. '```' → logprob: -12.674137115478516
    8. ')' → logprob: -12.924137115478516
    9. '
' → logprob: -13.799137115478516
    10. '    
' → logprob: -14.174137115478516

Token 327: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007146967691369355
    2. ' def' → logprob: -7.2507147789001465
    3. '   ' → logprob: -12.375714302062988
    4. '	def' → logprob: -15.375714302062988
    5. 'for' → logprob: -16.500715255737305
    6. ')' → logprob: -16.750715255737305
    7. ' ' → logprob: -17.000715255737305
    8. '
' → logprob: -18.000715255737305
    9. ' for' → logprob: -18.625715255737305
    10. '  ' → logprob: -19.000715255737305

Token 328: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.10025649517774582
    2. ' _' → logprob: -2.3502564430236816
    3. '_' → logprob: -10.22525691986084
    4. '_b' → logprob: -12.35025691986084
    5. 'def' → logprob: -12.72525691986084
    6. '_def' → logprob: -13.22525691986084
    7. ' def' → logprob: -13.72525691986084
    8. '
' → logprob: -14.10025691986084
    9. ' ' → logprob: -14.35025691986084
    10. '._' → logprob: -14.47525691986084

Token 329: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -2.45848218582978e-06
    2. 'dfs' → logprob: -13.62500286102295
    3. '_build' → logprob: -14.12500286102295
    4. 'b' → logprob: -15.62500286102295
    5. 'def' → logprob: -16.000001907348633
    6. ' build' → logprob: -16.250001907348633
    7. '	build' → logprob: -17.625001907348633
    8. '(build' → logprob: -18.375001907348633
    9. '
' → logprob: -18.750001907348633
    10. '.build' → logprob: -19.250001907348633

Token 330: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.704273118884885e-07
    2. 'self' → logprob: -15.125000953674316
    3. '(' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.875
    5. ' ' → logprob: -17.375
    6. ' (' → logprob: -17.375
    7. '       ' → logprob: -18.0
    8. '(s' → logprob: -18.0
    9. ' self' → logprob: -18.625
    10. '```' → logprob: -19.75

Token 331: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14276424050331116
    2. '):
' → logprob: -2.0177643299102783
    3. ')' → logprob: -10.3927640914917
    4. '):
' → logprob: -10.5177640914917
    5. ' ):' → logprob: -11.1427640914917
    6. ',' → logprob: -11.7677640914917
    7. 'self' → logprob: -12.8927640914917
    8. ':' → logprob: -13.1427640914917
    9. '):

' → logprob: -13.2677640914917
    10. ' ):
' → logprob: -14.2677640914917

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13425955176353455
    2. ' for' → logprob: -2.3842594623565674
    3. 'for' → logprob: -3.5092594623565674
    4. '   ' → logprob: -6.1342597007751465
    5. '	for' → logprob: -6.6342597007751465
    6. '	   ' → logprob: -9.884259223937988
    7. '	' → logprob: -10.884259223937988
    8. '```' → logprob: -13.259259223937988
    9. '	       ' → logprob: -13.634259223937988
    10. ':' → logprob: -13.759259223937988

Token 333: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00043257648940198123
    2. ' for' → logprob: -7.75043249130249
    3. '       ' → logprob: -13.500432968139648
    4. '	for' → logprob: -15.000432968139648
    5. '   ' → logprob: -16.25043296813965
    6. ' ' → logprob: -21.12543296813965
    7. '	' → logprob: -23.00043296813965
    8. 'i' → logprob: -23.25043296813965
    9. '0' → logprob: -23.62543296813965
    10. '           ' → logprob: -23.87543296813965

Token 334: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.41524946689605713
    2. 'i' → logprob: -1.4152494668960571
    3. ' i' → logprob: -2.9152493476867676
    4. ' k' → logprob: -3.1652493476867676
    5. 'j' → logprob: -7.665249347686768
    6. ' j' → logprob: -9.540249824523926
    7. 'h' → logprob: -11.415249824523926
    8. 'l' → logprob: -12.915249824523926
    9. 'p' → logprob: -13.040249824523926
    10. 'v' → logprob: -13.040249824523926

Token 335: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0016229336615651846
    2. 'in' → logprob: -6.501623153686523
    3. ' ' → logprob: -9.251623153686523
    4. ' i' → logprob: -11.626623153686523
    5. '	in' → logprob: -12.126623153686523
    6. '1' → logprob: -12.376623153686523
    7. '   ' → logprob: -13.001623153686523
    8. '  ' → logprob: -13.126623153686523
    9. 'range' → logprob: -14.501623153686523
    10. 'i' → logprob: -14.876623153686523

Token 336: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019294669618830085
    2. ' range' → logprob: -6.25192928314209
    3. ' ' → logprob: -15.12692928314209
    4. '1' → logprob: -16.251930236816406
    5. '	range' → logprob: -16.251930236816406
    6. '(range' → logprob: -16.376930236816406
    7. '   ' → logprob: -16.751930236816406
    8. 'ange' → logprob: -16.876930236816406
    9. ')' → logprob: -17.501930236816406
    10. '
' → logprob: -17.501930236816406

Token 337: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007878457196056843
    2. '1' → logprob: -5.007878303527832
    3. '(self' → logprob: -6.757878303527832
    4. 'self' → logprob: -14.757878303527832
    5. ' ' → logprob: -15.882878303527832
    6. '(
' → logprob: -16.50787925720215
    7. ' (' → logprob: -16.75787925720215
    8. '   ' → logprob: -17.88287925720215
    9. '
' → logprob: -18.13287925720215
    10. 's' → logprob: -20.00787925720215

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. 'self' → logprob: -13.250001907348633
    3. ' ' → logprob: -16.750001907348633
    4. '(self' → logprob: -19.875001907348633
    5. '   ' → logprob: -20.000001907348633
    6. '
' → logprob: -20.875001907348633
    7. ' self' → logprob: -21.750001907348633
    8. '

' → logprob: -22.250001907348633
    9. '(' → logprob: -22.375001907348633
    10. '0' → logprob: -22.500001907348633

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.538490950129926e-05
    2. ' ,' → logprob: -9.875055313110352
    3. ',self' → logprob: -12.500055313110352
    4. ',
' → logprob: -16.25005531311035
    5. 'self' → logprob: -17.50005531311035
    6. ' self' → logprob: -18.37505531311035
    7. '   ' → logprob: -19.62505531311035
    8. ' ' → logprob: -19.87505531311035
    9. '	' → logprob: -20.37505531311035
    10. '       ' → logprob: -20.62505531311035

Token 340: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00861456897109747
    2. ' self' → logprob: -4.758614540100098
    3. '	self' → logprob: -17.508615493774414
    4. '(self' → logprob: -18.383615493774414
    5. '[self' → logprob: -18.508615493774414
    6. '       ' → logprob: -19.383615493774414
    7. '=self' → logprob: -20.383615493774414
    8. '
' → logprob: -20.383615493774414
    9. '   ' → logprob: -21.133615493774414
    10. ':self' → logprob: -21.883615493774414

Token 341: '.LOG' (ID: 68764)
  Prédit: '.LOG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.LOG' → logprob: -0.0015152193373069167
    2. 'LOG' → logprob: -6.5015153884887695
    3. '	LOG' → logprob: -11.50151538848877
    4. '.L' → logprob: -14.75151538848877
    5. ' LOG' → logprob: -14.75151538848877
    6. '(LOG' → logprob: -14.87651538848877
    7. '_LOG' → logprob: -15.12651538848877
    8. '.LO' → logprob: -15.12651538848877
    9. '.Log' → logprob: -15.25151538848877
    10. '.' → logprob: -15.37651538848877

Token 342: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07033740729093552
    2. '):
' → logprob: -2.6953372955322266
    3. ' ):' → logprob: -7.945337295532227
    4. ':' → logprob: -11.070337295532227
    5. ' ):
' → logprob: -11.070337295532227
    6. '):
' → logprob: -11.570337295532227
    7. ')' → logprob: -12.445337295532227
    8. ',' → logprob: -14.195337295532227
    9. '():' → logprob: -15.195337295532227
    10. '   ' → logprob: -15.195337295532227

Token 343: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0413079634308815
    2. ' for' → logprob: -3.5413079261779785
    3. '       ' → logprob: -4.9163079261779785
    4. '   ' → logprob: -6.5413079261779785
    5. '	       ' → logprob: -7.0413079261779785
    6. ':' → logprob: -7.2913079261779785
    7. 'for' → logprob: -7.5413079261779785
    8. '               ' → logprob: -8.791308403015137
    9. '	   ' → logprob: -9.166308403015137
    10. ' ' → logprob: -9.291308403015137

Token 344: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011051944456994534
    2. ' for' → logprob: -4.511052131652832
    3. 'range' → logprob: -12.761052131652832
    4. '           ' → logprob: -14.886052131652832
    5. 'j' → logprob: -15.261052131652832
    6. '               ' → logprob: -15.886052131652832
    7. 'i' → logprob: -15.886052131652832
    8. '   ' → logprob: -16.011051177978516
    9. ' ' → logprob: -16.511051177978516
    10. 'n' → logprob: -16.636051177978516

Token 345: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003617647336795926
    2. 'node' → logprob: -6.003617763519287
    3. ' v' → logprob: -7.253617763519287
    4. 'j' → logprob: -8.003617286682129
    5. 'i' → logprob: -9.753617286682129
    6. ' node' → logprob: -10.128617286682129
    7. 'u' → logprob: -14.628617286682129
    8. ' j' → logprob: -14.878617286682129
    9. 'x' → logprob: -15.128617286682129
    10. ' i' → logprob: -15.128617286682129

Token 346: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001171652227640152
    2. 'in' → logprob: -6.751171588897705
    3. ' ' → logprob: -14.376172065734863
    4. 'n' → logprob: -14.751172065734863
    5. 'v' → logprob: -16.126171112060547
    6. '<|end|>' → logprob: -16.626171112060547
    7. '```' → logprob: -17.001171112060547
    8. 'range' → logprob: -17.376171112060547
    9. 'In' → logprob: -17.626171112060547
    10. '	in' → logprob: -17.751171112060547

Token 347: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -17.005233764648438
    4. '	range' → logprob: -19.755233764648438
    5. ' ' → logprob: -21.005233764648438
    6. '   ' → logprob: -22.130233764648438
    7. 'ange' → logprob: -22.880233764648438
    8. '.range' → logprob: -23.005233764648438
    9. 'ran' → logprob: -23.380233764648438
    10. '
' → logprob: -23.380233764648438

Token 348: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.505351095460355e-05
    2. '1' → logprob: -9.750075340270996
    3. '(self' → logprob: -11.000075340270996
    4. '(
' → logprob: -17.62507438659668
    5. '   ' → logprob: -18.62507438659668
    6. ' (' → logprob: -18.87507438659668
    7. ' ' → logprob: -19.25007438659668
    8. 'self' → logprob: -19.87507438659668
    9. '[' → logprob: -21.75007438659668
    10. '=' → logprob: -22.75007438659668

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'self' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.875
    5. '(self' → logprob: -20.0
    6. '(' → logprob: -20.75
    7. '           ' → logprob: -22.0
    8. ' self' → logprob: -22.75
    9. '１' → logprob: -23.5
    10. '       ' → logprob: -23.5

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.166338137816638e-05
    2. ' ,' → logprob: -10.625031471252441
    3. ',self' → logprob: -12.125031471252441
    4. ',
' → logprob: -13.500031471252441
    5. 'self' → logprob: -14.750031471252441
    6. ' self' → logprob: -17.250032424926758
    7. '(self' → logprob: -17.625032424926758
    8. '<|end|>' → logprob: -18.375032424926758
    9. ',n' → logprob: -18.500032424926758
    10. ',

' → logprob: -18.500032424926758

Token 351: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005931878462433815
    2. ' self' → logprob: -5.130931854248047
    3. '(self' → logprob: -13.130931854248047
    4. '   ' → logprob: -14.880931854248047
    5. '
' → logprob: -15.630931854248047
    6. '	self' → logprob: -15.755931854248047
    7. '[self' → logprob: -15.880931854248047
    8. '=self' → logprob: -15.880931854248047
    9. '           ' → logprob: -16.130931854248047
    10. '       ' → logprob: -16.255931854248047

Token 352: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.306760805164231e-05
    2. 'n' → logprob: -11.75001335144043
    3. ' .' → logprob: -12.37501335144043
    4. '.' → logprob: -14.62501335144043
    5. ' +' → logprob: -15.87501335144043
    6. '+n' → logprob: -15.87501335144043
    7. ' n' → logprob: -16.12501335144043
    8. '+' → logprob: -16.62501335144043
    9. 'self' → logprob: -17.00001335144043
    10. '   ' → logprob: -18.12501335144043

Token 353: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740777611732483
    2. ' +' → logprob: -0.9740777611732483
    3. ' ' → logprob: -15.224078178405762
    4. '+
' → logprob: -15.724078178405762
    5. ' ' → logprob: -16.474077224731445
    6. ' +
' → logprob: -16.599077224731445
    7. '   ' → logprob: -16.849077224731445
    8. '＋' → logprob: -17.224077224731445
    9. ' plus' → logprob: -17.349077224731445
    10. ')' → logprob: -17.349077224731445

Token 354: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.000085830688477
    4. ')' → logprob: -17.000085830688477
    5. '```' → logprob: -17.875085830688477
    6. '  ' → logprob: -19.875085830688477
    7. '
' → logprob: -20.000085830688477
    8. ',' → logprob: -20.625085830688477
    9. 'self' → logprob: -20.625085830688477
    10. 'n' → logprob: -20.625085830688477

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.375003814697266
    4. ')' → logprob: -18.500003814697266
    5. '```' → logprob: -19.750003814697266
    6. '
' → logprob: -20.250003814697266
    7. '0' → logprob: -20.625003814697266
    8. '  ' → logprob: -21.500003814697266
    9. '):
' → logprob: -22.000003814697266
    10. '     ' → logprob: -22.125003814697266

Token 356: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07923444360494614
    2. '):' → logprob: -2.5792343616485596
    3. ':' → logprob: -8.20423412322998
    4. '):
' → logprob: -10.45423412322998
    5. ':
' → logprob: -10.57923412322998
    6. '               ' → logprob: -11.45423412322998
    7. ' ):
' → logprob: -12.82923412322998
    8. '           ' → logprob: -13.82923412322998
    9. '():
' → logprob: -13.95423412322998
    10. ')' → logprob: -14.57923412322998

Token 357: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009018116979859769
    2. ' self' → logprob: -8.12590217590332
    3. 'self' → logprob: -8.62590217590332
    4. ':' → logprob: -9.25090217590332
    5. '[self' → logprob: -9.62590217590332
    6. ' if' → logprob: -9.87590217590332
    7. '[' → logprob: -10.12590217590332
    8. '           ' → logprob: -10.25090217590332
    9. ':
' → logprob: -10.87590217590332
    10. '):
' → logprob: -10.87590217590332

Token 358: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04628694802522659
    2. 'if' (adapté à ' if') → logprob: -3.9212870597839355
    3. ' self' → logprob: -4.5462870597839355
    4. '                   ' → logprob: -4.6712870597839355
    5. ' if' → logprob: -6.0462870597839355
    6. '               ' → logprob: -6.2962870597839355
    7. 'parent' → logprob: -7.2962870597839355
    8. 'prev' → logprob: -8.671286582946777
    9. '                       ' → logprob: -8.671286582946777
    10. '   ' → logprob: -10.296286582946777

Token 359: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007695002015680075
    2. ' self' → logprob: -5.507695198059082
    3. '(self' → logprob: -5.632695198059082
    4. '[self' → logprob: -11.632695198059082
    5. '	self' → logprob: -11.632695198059082
    6. '=self' → logprob: -12.132695198059082
    7. '   ' → logprob: -12.382695198059082
    8. '
' → logprob: -14.257695198059082
    9. ' ' → logprob: -14.257695198059082
    10. '               ' → logprob: -14.632695198059082

Token 360: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0031954164151102304
    2. 'parent' → logprob: -5.753195285797119
    3. '.' → logprob: -11.503195762634277
    4. '[parent' → logprob: -13.003195762634277
    5. '_parent' → logprob: -13.253195762634277
    6. '	parent' → logprob: -13.878195762634277
    7. ' .' → logprob: -14.003195762634277
    8. ' parent' → logprob: -14.628195762634277
    9. 'Parent' → logprob: -15.253195762634277
    10. ').' → logprob: -15.628195762634277

Token 361: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.856408536899835e-05
    2. 'k' → logprob: -11.125028610229492
    3. '[' → logprob: -11.500028610229492
    4. ' [' → logprob: -13.500028610229492
    5. '[
' → logprob: -14.250028610229492
    6. '```' → logprob: -14.250028610229492
    7. '   ' → logprob: -16.000028610229492
    8. 's' → logprob: -16.250028610229492
    9. '0' → logprob: -16.250028610229492
    10. '{k' → logprob: -16.250028610229492

Token 362: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.040368761867284775
    2. ' -' → logprob: -4.165368556976318
    3. '][' → logprob: -4.665368556976318
    4. '[v' → logprob: -4.790368556976318
    5. '[k' → logprob: -5.165368556976318
    6. '[-' → logprob: -8.540369033813477
    7. '[' → logprob: -9.165369033813477
    8. ' [' → logprob: -9.415369033813477
    9. 'v' → logprob: -10.290369033813477
    10. '   ' → logprob: -10.540369033813477

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '][' → logprob: -13.25000286102295
    3. ' ' → logprob: -13.62500286102295
    4. '   ' → logprob: -16.250003814697266
    5. '           ' → logprob: -18.250003814697266
    6. ']' → logprob: -18.625003814697266
    7. '```' → logprob: -18.750003814697266
    8. '                   ' → logprob: -19.250003814697266
    9. '               ' → logprob: -19.250003814697266
    10. '
' → logprob: -19.375003814697266

Token 364: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.43051913380622864
    2. '][' → logprob: -1.0555191040039062
    3. 'v' → logprob: -6.680519104003906
    4. '[' → logprob: -8.055519104003906
    5. ' [' → logprob: -9.805519104003906
    6. ' ][' → logprob: -10.055519104003906
    7. ')[' → logprob: -10.305519104003906
    8. ']' → logprob: -10.430519104003906
    9. '>[' → logprob: -10.930519104003906
    10. '}[' → logprob: -11.430519104003906

Token 365: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029762759804725647
    2. '[v' → logprob: -3.5297627449035645
    3. ' v' → logprob: -12.029763221740723
    4. '	v' → logprob: -12.404763221740723
    5. '][' → logprob: -14.279763221740723
    6. '<v' → logprob: -14.654763221740723
    7. ')v' → logprob: -14.779763221740723
    8. '   ' → logprob: -15.529763221740723
    9. ',v' → logprob: -16.154762268066406
    10. '-v' → logprob: -16.279762268066406

Token 366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04313678294420242
    2. ']!=' → logprob: -3.1681368350982666
    3. '!=' → logprob: -9.043136596679688
    4. ')!=' → logprob: -11.668136596679688
    5. ')' → logprob: -13.293136596679688
    6. ' ]' → logprob: -13.418136596679688
    7. '!=-' → logprob: -13.418136596679688
    8. '[' → logprob: -13.918136596679688
    9. ']>=' → logprob: -13.918136596679688
    10. '}' → logprob: -14.168136596679688

Token 367: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.011788664385676384
    2. ' !=' → logprob: -4.636788845062256
    3. '!=-' → logprob: -6.511788845062256
    4. ']!=' → logprob: -8.386788368225098
    5. ')!=' → logprob: -8.886788368225098
    6. ')' → logprob: -9.136788368225098
    7. '()!=' → logprob: -10.511788368225098
    8. ']' → logprob: -11.011788368225098
    9. '!==' → logprob: -11.761788368225098
    10. 'is' → logprob: -11.761788368225098

Token 368: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.615255839889869e-05
    2. ' -' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.50009536743164
    4. '−' → logprob: -20.50009536743164
    5. '‌' → logprob: -21.25009536743164
    6. ' ' → logprob: -21.37509536743164
    7. '	' → logprob: -21.37509536743164
    8. '-
' → logprob: -21.62509536743164
    9. '```' → logprob: -21.62509536743164
    10. '  ' → logprob: -21.75009536743164

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -17.75
    4. '   ' → logprob: -18.125
    5. ',' → logprob: -18.625
    6. '  ' → logprob: -18.9375
    7. ' -' → logprob: -19.0625
    8. ')' → logprob: -19.1875
    9. '2' → logprob: -19.5625
    10. '-' → logprob: -19.625

Token 370: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13616028428077698
    2. ':' → logprob: -2.261160373687744
    3. '                   ' → logprob: -4.261160373687744
    4. ' and' → logprob: -5.386160373687744
    5. '):
' → logprob: -6.136160373687744
    6. 'and' → logprob: -6.636160373687744
    7. '               ' → logprob: -7.511160373687744
    8. '                       ' → logprob: -9.011159896850586
    9. ',' → logprob: -9.636159896850586
    10. ':

' → logprob: -10.636159896850586

Token 371: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006328079383820295
    2. '				' → logprob: -5.506328105926514
    3. '                       ' → logprob: -7.381328105926514
    4. ' self' → logprob: -7.506328105926514
    5. 'self' → logprob: -8.506327629089355
    6. '	               ' → logprob: -9.006327629089355
    7. '		           ' → logprob: -9.006327629089355
    8. '	self' → logprob: -9.131327629089355
    9. '			       ' → logprob: -9.756327629089355
    10. '					' → logprob: -9.881327629089355

Token 372: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0067909169010818005
    2. ' self' → logprob: -5.256791114807129
    3. '                       ' → logprob: -6.506791114807129
    4. '                   ' → logprob: -10.006791114807129
    5. '	self' → logprob: -12.256791114807129
    6. ' ' → logprob: -12.381791114807129
    7. '   ' → logprob: -13.256791114807129
    8. '[self' → logprob: -13.631791114807129
    9. '=self' → logprob: -13.631791114807129
    10. '               ' → logprob: -13.756791114807129

Token 373: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -2.4153549020411447e-05
    2. 'parent' → logprob: -11.37502384185791
    3. '.' → logprob: -11.62502384185791
    4. '[parent' → logprob: -13.25002384185791
    5. ' .' → logprob: -13.75002384185791
    6. '_parent' → logprob: -15.87502384185791
    7. '.Parent' → logprob: -16.125024795532227
    8. '[k' → logprob: -16.375024795532227
    9. '.user' → logprob: -16.375024795532227
    10. '].' → logprob: -16.625024795532227

Token 374: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.173704271830502e-06
    2. '][' → logprob: -13.25000286102295
    3. 'k' → logprob: -14.37500286102295
    4. '[' → logprob: -15.12500286102295
    5. ' [' → logprob: -15.75000286102295
    6. ')[' → logprob: -16.375003814697266
    7. '=k' → logprob: -17.125003814697266
    8. '```' → logprob: -17.250003814697266
    9. '<|end|>' → logprob: -17.375003814697266
    10. '{k' → logprob: -17.500003814697266

Token 375: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00404135650023818
    2. '-' → logprob: -5.6290411949157715
    3. ' ][' → logprob: -8.62904167175293
    4. '[k' → logprob: -8.87904167175293
    5. '   ' → logprob: -10.37904167175293
    6. ']' → logprob: -10.50404167175293
    7. ' -' → logprob: -10.87904167175293
    8. ' ' → logprob: -11.25404167175293
    9. '][-' → logprob: -12.00404167175293
    10. '           ' → logprob: -12.00404167175293

Token 376: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.703443770878948e-06
    2. 'parent' → logprob: -12.000007629394531
    3. ' v' → logprob: -13.625007629394531
    4. '   ' → logprob: -16.37500762939453
    5. '[v' → logprob: -16.62500762939453
    6. ' parent' → logprob: -17.00000762939453
    7. '	v' → logprob: -17.62500762939453
    8. '][' → logprob: -18.50000762939453
    9. '```' → logprob: -18.50000762939453
    10. '[parent' → logprob: -18.50000762939453

Token 377: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007439558859914541
    2. ' ]' → logprob: -5.507439613342285
    3. ']=' → logprob: -6.507439613342285
    4. '=' → logprob: -6.882439613342285
    5. ' =' → logprob: -7.132439613342285
    6. '[' → logprob: -10.507439613342285
    7. ')' → logprob: -11.882439613342285
    8. '][' → logprob: -13.132439613342285
    9. 's' → logprob: -15.007439613342285
    10. ' ' → logprob: -15.132439613342285

Token 378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193002820014954
    2. ' =' → logprob: -1.5019299983978271
    3. '=self' → logprob: -14.126930236816406
    4. '=
' → logprob: -16.751930236816406
    5. '=

' → logprob: -16.751930236816406
    6. '[' → logprob: -17.251930236816406
    7. ']=' → logprob: -18.001930236816406
    8. ' =
' → logprob: -18.126930236816406
    9. '=[' → logprob: -18.251930236816406
    10. ' ' → logprob: -18.751930236816406

Token 379: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011703446507453918
    2. ' self' → logprob: -6.7511701583862305
    3. '[self' → logprob: -16.626171112060547
    4. '(self' → logprob: -17.251171112060547
    5. '	self' → logprob: -17.501171112060547
    6. 'parent' → logprob: -17.626171112060547
    7. ' ' → logprob: -18.251171112060547
    8. '   ' → logprob: -18.251171112060547
    9. '                   ' → logprob: -18.376171112060547
    10. '               ' → logprob: -19.251171112060547

Token 380: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -8.08944896562025e-05
    2. 'parent' → logprob: -9.500081062316895
    3. '[parent' → logprob: -12.750081062316895
    4. '.' → logprob: -13.125081062316895
    5. ' .' → logprob: -14.750081062316895
    6. '	parent' → logprob: -15.375081062316895
    7. ' parent' → logprob: -16.000080108642578
    8. '_parent' → logprob: -16.125080108642578
    9. '.Parent' → logprob: -16.250080108642578
    10. 'Parent' → logprob: -16.750080108642578

Token 381: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.024604277219623e-05
    2. 'k' → logprob: -10.125040054321289
    3. '[' → logprob: -16.12504005432129
    4. '(k' → logprob: -17.75004005432129
    5. ' [' → logprob: -18.37504005432129
    6. '{k' → logprob: -18.75004005432129
    7. '```' → logprob: -18.87504005432129
    8. '   ' → logprob: -18.87504005432129
    9. '[
' → logprob: -19.12504005432129
    10. '][' → logprob: -19.75004005432129

Token 382: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020377879263833165
    2. ' -' → logprob: -8.500204086303711
    3. '[' → logprob: -16.62520408630371
    4. '   ' → logprob: -17.12520408630371
    5. 'k' → logprob: -17.62520408630371
    6. '[k' → logprob: -17.87520408630371
    7. '1' → logprob: -18.12520408630371
    8. '	' → logprob: -18.37520408630371
    9. '[-' → logprob: -18.37520408630371
    10. ' ' → logprob: -18.37520408630371

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.375005722045898
    4. '
' → logprob: -16.1875057220459
    5. '-' → logprob: -16.5625057220459
    6. '<|end|>' → logprob: -16.7500057220459
    7. '```' → logprob: -16.8750057220459
    8. ']' → logprob: -17.0625057220459
    9. '  ' → logprob: -17.5625057220459
    10. '2' → logprob: -17.9375057220459

Token 384: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0026922940742224455
    2. '[k' → logprob: -6.002692222595215
    3. ' ][' → logprob: -9.002692222595215
    4. ']' → logprob: -9.877692222595215
    5. '[' → logprob: -10.877692222595215
    6. '	' → logprob: -12.252692222595215
    7. '   ' → logprob: -12.627692222595215
    8. '```' → logprob: -12.877692222595215
    9. '}[' → logprob: -13.002692222595215
    10. '"][' → logprob: -13.127692222595215

Token 385: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008919922634959221
    2. ' self' → logprob: -4.758919715881348
    3. '[self' → logprob: -8.133919715881348
    4. '][' → logprob: -12.758919715881348
    5. '(self' → logprob: -13.133919715881348
    6. '   ' → logprob: -13.383919715881348
    7. 'v' → logprob: -13.508919715881348
    8. 'parent' → logprob: -13.508919715881348
    9. '	self' → logprob: -14.258919715881348
    10. '[' → logprob: -14.383919715881348

Token 386: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.002478627720847726
    2. 'parent' → logprob: -6.00247859954834
    3. ' parent' → logprob: -13.12747859954834
    4. '.' → logprob: -14.62747859954834
    5. ' .' → logprob: -15.75247859954834
    6. '	parent' → logprob: -15.75247859954834
    7. '[parent' → logprob: -15.75247859954834
    8. '_parent' → logprob: -17.127479553222656
    9. 'Parent' → logprob: -18.127479553222656
    10. '[k' → logprob: -18.627479553222656

Token 387: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.200166469876422e-06
    2. 'k' → logprob: -12.375004768371582
    3. '[' → logprob: -14.500004768371582
    4. '{k' → logprob: -16.0000057220459
    5. '(k' → logprob: -16.5000057220459
    6. ' [' → logprob: -16.6250057220459
    7. '```' → logprob: -16.8750057220459
    8. '[
' → logprob: -17.6250057220459
    9. ' k' → logprob: -18.5000057220459
    10. '][' → logprob: -18.6250057220459

Token 388: '-' (ID: 12)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.007044744677841663
    2. 'k' → logprob: -5.007044792175293
    3. '-' → logprob: -8.132044792175293
    4. '][' → logprob: -11.757044792175293
    5. '(k' → logprob: -11.882044792175293
    6. '{k' → logprob: -12.257044792175293
    7. '   ' → logprob: -12.757044792175293
    8. '
' → logprob: -12.882044792175293
    9. '[' → logprob: -13.132044792175293
    10. ' k' → logprob: -13.382044792175293

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.625004768371582
    3. '```' → logprob: -14.250004768371582
    4. '<|end|>' → logprob: -15.000004768371582
    5. '   ' → logprob: -15.125004768371582
    6. '-' → logprob: -15.250004768371582
    7. '[' → logprob: -16.7500057220459
    8. ']' → logprob: -16.8750057220459
    9. '<|end|>' → logprob: -17.2500057220459
    10. '][' → logprob: -17.6250057220459

Token 390: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0056606982834637165
    2. '][' → logprob: -5.505660533905029
    3. '[v' → logprob: -6.505660533905029
    4. '[' → logprob: -9.880661010742188
    5. 'k' → logprob: -10.880661010742188
    6. ']' → logprob: -12.505661010742188
    7. ' [' → logprob: -12.505661010742188
    8. 'v' → logprob: -13.005661010742188
    9. ' ][' → logprob: -13.005661010742188
    10. '```' → logprob: -13.255661010742188

Token 391: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005550591740757227
    2. '[v' → logprob: -7.500555038452148
    3. ' v' → logprob: -13.375555038452148
    4. '	v' → logprob: -14.500555038452148
    5. ')v' → logprob: -17.37555503845215
    6. '```' → logprob: -18.25055503845215
    7. '][' → logprob: -19.37555503845215
    8. '?v' → logprob: -19.50055503845215
    9. '(v' → logprob: -19.62555503845215
    10. ',v' → logprob: -19.75055503845215

Token 392: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10129213333129883
    2. '[v' → logprob: -2.351292133331299
    3. 'v' → logprob: -7.601292133331299
    4. ']]' → logprob: -7.851292133331299
    5. '[k' → logprob: -9.47629165649414
    6. ' ]' → logprob: -9.72629165649414
    7. '][' → logprob: -11.22629165649414
    8. ')]' → logprob: -11.22629165649414
    9. '[' → logprob: -11.60129165649414
    10. '   ' → logprob: -11.72629165649414

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10089111328125
    2. '
' → logprob: -2.85089111328125
    3. 'def' → logprob: -4.22589111328125
    4. ' def' → logprob: -4.35089111328125
    5. '<|end|>' → logprob: -5.35089111328125
    6. '    
' → logprob: -5.85089111328125
    7. '	def' → logprob: -6.60089111328125
    8. '```' → logprob: -7.97589111328125
    9. '  ' → logprob: -8.22589111328125
    10. ' 
' → logprob: -8.60089111328125

Token 394: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20780962705612183
    2. ' def' → logprob: -1.7078096866607666
    3. '   ' → logprob: -5.3328094482421875
    4. '
' → logprob: -6.5828094482421875
    5. ' ' → logprob: -9.207809448242188
    6. '	def' → logprob: -10.707809448242188
    7. ')' → logprob: -11.082809448242188
    8. '  ' → logprob: -11.957809448242188
    9. '    
' → logprob: -12.457809448242188
    10. '```' → logprob: -12.832809448242188

Token 395: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.34272727370262146
    2. 'l' → logprob: -1.3427273035049438
    3. ' get' → logprob: -4.592727184295654
    4. 'query' → logprob: -4.592727184295654
    5. ' query' → logprob: -4.842727184295654
    6. 'get' → logprob: -7.217727184295654
    7. 'lift' → logprob: -9.842727661132812
    8. '_l' → logprob: -10.342727661132812
    9. ' ' → logprob: -10.717727661132812
    10. '_query' → logprob: -10.842727661132812

Token 396: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -8.983476436696947e-05
    2. 'c' → logprob: -10.000089645385742
    3. '_ca' → logprob: -10.250089645385742
    4. 'cas' → logprob: -13.000089645385742
    5. '   ' → logprob: -13.500089645385742
    6. '_c' → logprob: -13.500089645385742
    7. '_' → logprob: -13.500089645385742
    8. 'a' → logprob: -13.875089645385742
    9. 'CA' → logprob: -15.125089645385742
    10. 'e' → logprob: -15.250089645385742

Token 397: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018446780450176448
    2. '(' → logprob: -8.625184059143066
    3. ' (' → logprob: -13.250184059143066
    4. '(
' → logprob: -14.125184059143066
    5. '(s' → logprob: -14.250184059143066
    6. 'self' → logprob: -14.500184059143066
    7. '   ' → logprob: -14.625184059143066
    8. ' ' → logprob: -15.250184059143066
    9. 's' → logprob: -16.250185012817383
    10. 'def' → logprob: -16.500185012817383

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022522276267409325
    2. '(self' → logprob: -4.022522449493408
    3. 'self' → logprob: -5.522522449493408
    4. ' ,' → logprob: -8.39752197265625
    5. ',self' → logprob: -9.14752197265625
    6. ' self' → logprob: -11.39752197265625
    7. ' (' → logprob: -11.77252197265625
    8. ')(' → logprob: -12.02252197265625
    9. '   ' → logprob: -12.77252197265625
    10. '       ' → logprob: -12.89752197265625

Token 399: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005238140933215618
    2. ' u' → logprob: -5.255238056182861
    3. '   ' → logprob: -13.00523853302002
    4. 'a' → logprob: -14.00523853302002
    5. ' ' → logprob: -14.50523853302002
    6. '	u' → logprob: -14.63023853302002
    7. ')' → logprob: -16.755237579345703
    8. '```' → logprob: -16.880237579345703
    9. '
' → logprob: -17.005237579345703
    10. '    
' → logprob: -17.005237579345703

Token 400: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011771318968385458
    2. ' ,' → logprob: -6.7511773109436035
    3. ',u' → logprob: -12.376176834106445
    4. ',
' → logprob: -13.876176834106445
    5. ',int' → logprob: -14.251176834106445
    6. ':' → logprob: -14.626176834106445
    7. ',v' → logprob: -15.001176834106445
    8. ',b' → logprob: -16.001176834106445
    9. ' ' → logprob: -16.501176834106445
    10. '‌,' → logprob: -16.751176834106445

Token 401: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.576718807220459
    2. ' int' → logprob: -0.826718807220459
    3. ',' → logprob: -8.326719284057617
    4. ' ' → logprob: -8.701719284057617
    5. ' v' → logprob: -8.826719284057617
    6. 'v' → logprob: -9.201719284057617
    7. ' u' → logprob: -10.076719284057617
    8. ',int' → logprob: -10.576719284057617
    9. ')' → logprob: -10.701719284057617
    10. 'u' → logprob: -11.576719284057617

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001612267515156418
    2. ' ,' → logprob: -8.750161170959473
    3. ',u' → logprob: -13.250161170959473
    4. ',v' → logprob: -14.500161170959473
    5. ')' → logprob: -16.12516212463379
    6. ',
' → logprob: -16.25016212463379
    7. ',b' → logprob: -16.62516212463379
    8. ',int' → logprob: -16.87516212463379
    9. '‌,' → logprob: -17.37516212463379
    10. ' ' → logprob: -18.12516212463379

Token 403: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07888989895582199
    2. ' v' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.203889846801758
    4. '	v' → logprob: -17.328889846801758
    5. 'int' → logprob: -18.203889846801758
    6. '   ' → logprob: -18.328889846801758
    7. '  ' → logprob: -19.953889846801758
    8. ')v' → logprob: -19.953889846801758
    9. ' int' → logprob: -20.703889846801758
    10. ')' → logprob: -21.453889846801758

Token 404: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16587340831756592
    2. ')' → logprob: -1.915873408317566
    3. ':' → logprob: -5.5408735275268555
    4. '):
' → logprob: -7.0408735275268555
    5. ' ):' → logprob: -7.1658735275268555
    6. ' )' → logprob: -9.915873527526855
    7. '):
' → logprob: -11.665873527526855
    8. '   ' → logprob: -14.290873527526855
    9. '):

' → logprob: -14.415873527526855
    10. ' ):
' → logprob: -14.540873527526855

Token 405: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009053424000740051
    2. ' int' → logprob: -4.7590532302856445
    3. ')' → logprob: -7.7590532302856445
    4. ' )' → logprob: -11.509053230285645
    5. ' ' → logprob: -14.384053230285645
    6. ':int' → logprob: -14.384053230285645
    7. '[int' → logprob: -15.634053230285645
    8. '):
' → logprob: -15.759053230285645
    9. '):' → logprob: -16.13405418395996
    10. '   ' → logprob: -16.13405418395996

Token 406: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.579067587852478
    2. ')' → logprob: -0.829067587852478
    3. '):
' → logprob: -5.954067707061768
    4. ' ):' → logprob: -7.829067707061768
    5. ' )' → logprob: -9.20406723022461
    6. '):
' → logprob: -11.32906723022461
    7. ')->' → logprob: -11.45406723022461
    8. ':' → logprob: -12.95406723022461
    9. ' ):
' → logprob: -13.45406723022461
    10. '):

' → logprob: -13.57906723022461

Token 407: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005290561355650425
    2. ':
' → logprob: -5.255290508270264
    3. '):' → logprob: -10.255290985107422
    4. ' :' → logprob: -11.505290985107422
    5. '():' → logprob: -12.505290985107422
    6. '):
' → logprob: -12.755290985107422
    7. '():
' → logprob: -13.755290985107422
    8. ')' → logprob: -14.005290985107422
    9. ':
' → logprob: -14.255290985107422
    10. ' :
' → logprob: -14.505290985107422

Token 408: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004317420825827867
    2. ' int' → logprob: -7.750431537628174
    3. '[int' → logprob: -14.000432014465332
    4. '(int' → logprob: -16.375431060791016
    5. ':int' → logprob: -16.625431060791016
    6. '<int' → logprob: -17.625431060791016
    7. '	int' → logprob: -17.625431060791016
    8. '   ' → logprob: -18.125431060791016
    9. '=int' → logprob: -18.125431060791016
    10. ' ' → logprob: -18.500431060791016

Token 409: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006917838007211685
    2. ':
' → logprob: -5.006917953491211
    3. '):' → logprob: -9.381917953491211
    4. '):
' → logprob: -9.631917953491211
    5. '   ' → logprob: -11.506917953491211
    6. '       ' → logprob: -11.756917953491211
    7. '():' → logprob: -12.006917953491211
    8. ':def' → logprob: -12.256917953491211
    9. ':return' → logprob: -12.256917953491211
    10. ')' → logprob: -12.381917953491211

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04612338915467262
    2. '
' → logprob: -3.296123504638672
    3. ' 
' → logprob: -6.046123504638672
    4. '   ' → logprob: -6.421123504638672
    5. '<|end|>' → logprob: -7.421123504638672
    6. '    ' → logprob: -7.546123504638672
    7. ')' → logprob: -7.546123504638672
    8. '        
' → logprob: -7.671123504638672
    9. '        ' → logprob: -7.921123504638672
    10. ' ' → logprob: -7.921123504638672

Token 411: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008614926598966122
    2. ' if' → logprob: -4.758615016937256
    3. '       ' → logprob: -15.133614540100098
    4. '   ' → logprob: -16.008615493774414
    5. '	if' → logprob: -16.383615493774414
    6. '#' → logprob: -18.258615493774414
    7. 'If' → logprob: -19.508615493774414
    8. ';if' → logprob: -20.383615493774414
    9. ' ' → logprob: -20.633615493774414
    10. '
' → logprob: -20.758615493774414

Token 412: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009118211455643177
    2. ' self' → logprob: -7.000911712646484
    3. '(self' → logprob: -15.250911712646484
    4. '	self' → logprob: -16.875911712646484
    5. '   ' → logprob: -17.375911712646484
    6. '[self' → logprob: -18.750911712646484
    7. 'u' → logprob: -20.500911712646484
    8. '       ' → logprob: -20.500911712646484
    9. '
' → logprob: -20.625911712646484
    10. '=self' → logprob: -20.875911712646484

Token 413: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -9.014684110297821e-06
    2. 'depth' → logprob: -11.625008583068848
    3. '.' → logprob: -17.125009536743164
    4. ' .' → logprob: -18.000009536743164
    5. ' depth' → logprob: -18.875009536743164
    6. '.distance' → logprob: -20.250009536743164
    7. '.deep' → logprob: -20.375009536743164
    8. '(depth' → logprob: -20.375009536743164
    9. '_DEPTH' → logprob: -20.625009536743164
    10. '_depth' → logprob: -20.750009536743164

Token 414: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.153795766294934e-06
    2. 'u' → logprob: -12.250005722045898
    3. ' [' → logprob: -13.750005722045898
    4. ' u' → logprob: -15.875005722045898
    5. '[' → logprob: -16.5000057220459
    6. '[
' → logprob: -18.3750057220459
    7. '	u' → logprob: -18.5000057220459
    8. '[v' → logprob: -20.0000057220459
    9. '<u' → logprob: -20.0000057220459
    10. '   ' → logprob: -20.3750057220459

Token 415: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12706060707569122
    2. '<' → logprob: -2.127060651779175
    3. '>' → logprob: -9.627060890197754
    4. ' ' → logprob: -10.377060890197754
    5. ' >' → logprob: -10.377060890197754
    6. ']' → logprob: -13.377060890197754
    7. '<u' → logprob: -14.252060890197754
    8. ')' → logprob: -14.377060890197754
    9. ']<' → logprob: -15.127060890197754
    10. '[' → logprob: -15.377060890197754

Token 416: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5759836435317993
    2. ' <' → logprob: -0.8259836435317993
    3. '>' → logprob: -10.575984001159668
    4. '<u' → logprob: -11.450984001159668
    5. ' ' → logprob: -12.700984001159668
    6. ' >' → logprob: -13.325984001159668
    7. '[' → logprob: -13.575984001159668
    8. '<v' → logprob: -13.700984001159668
    9. ' ' → logprob: -15.700984001159668
    10. '<span' → logprob: -16.32598304748535

Token 417: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759758949279785
    2. 'self' → logprob: -0.8259758949279785
    3. 'v' → logprob: -11.82597541809082
    4. '=self' → logprob: -11.95097541809082
    5. '	self' → logprob: -11.95097541809082
    6. 'u' → logprob: -12.32597541809082
    7. ' v' → logprob: -12.32597541809082
    8. '=' → logprob: -12.45097541809082
    9. ' u' → logprob: -13.32597541809082
    10. ' ' → logprob: -14.07597541809082

Token 418: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.31775280833244324
    2. 'depth' → logprob: -1.3177528381347656
    3. '[u' → logprob: -6.192752838134766
    4. ' depth' → logprob: -6.192752838134766
    5. '.' → logprob: -8.817752838134766
    6. ' .' → logprob: -9.317752838134766
    7. '_depth' → logprob: -9.567752838134766
    8. '[v' → logprob: -10.692752838134766
    9. ' u' → logprob: -11.317752838134766
    10. 'u' → logprob: -11.442752838134766

Token 419: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.06719999015331268
    2. '[u' → logprob: -2.817199945449829
    3. 'v' → logprob: -5.317200183868408
    4. ' v' → logprob: -8.44219970703125
    5. 'u' → logprob: -10.06719970703125
    6. '[' → logprob: -10.19219970703125
    7. ':' → logprob: -11.69219970703125
    8. '   ' → logprob: -13.06719970703125
    9. ' [' → logprob: -13.06719970703125
    10. ' u' → logprob: -13.69219970703125

Token 420: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1286240667104721
    2. ']:' → logprob: -2.6286239624023438
    3. '):' → logprob: -3.1286239624023438
    4. '>:' → logprob: -6.003623962402344
    5. '}:' → logprob: -7.503623962402344
    6. ' :' → logprob: -7.878623962402344
    7. ' ):' → logprob: -8.128623962402344
    8. '):
' → logprob: -8.128623962402344
    9. ':
' → logprob: -8.628623962402344
    10. 'u' → logprob: -9.003623962402344

Token 421: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24717338383197784
    2. 'u' → logprob: -2.372173309326172
    3. ' u' → logprob: -2.372173309326172
    4. '           ' → logprob: -4.872173309326172
    5. '=' → logprob: -5.122173309326172
    6. '(u' → logprob: -5.747173309326172
    7. '_' → logprob: -5.872173309326172
    8. '[u' → logprob: -6.622173309326172
    9. ',' → logprob: -6.872173309326172
    10. 'v' → logprob: -6.872173309326172

Token 422: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.06199099123477936
    2. ' u' → logprob: -2.811990976333618
    3. 'v' → logprob: -10.811990737915039
    4. '	u' → logprob: -13.311990737915039
    5. '[u' → logprob: -14.561990737915039
    6. '(u' → logprob: -14.686990737915039
    7. ' v' → logprob: -15.061990737915039
    8. '       ' → logprob: -15.186990737915039
    9. ',u' → logprob: -16.81199073791504
    10. '_u' → logprob: -17.56199073791504

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002908910100813955
    2. ' ,' → logprob: -8.250290870666504
    3. ',u' → logprob: -11.500290870666504
    4. ',v' → logprob: -12.000290870666504
    5. ' =' → logprob: -12.000290870666504
    6. '=' → logprob: -12.375290870666504
    7. ' ' → logprob: -13.750290870666504
    8. ',
' → logprob: -14.875290870666504
    9. ')' → logprob: -15.250290870666504
    10. '<|end|>' → logprob: -15.375290870666504

Token 424: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029760440811514854
    2. ' v' → logprob: -3.5297603607177734
    3. '<|end|>' → logprob: -11.654760360717773
    4. ' ' → logprob: -14.404760360717773
    5. '	v' → logprob: -14.654760360717773
    6. 'u' → logprob: -16.029760360717773
    7. ')v' → logprob: -16.529760360717773
    8. ' 
' → logprob: -17.154760360717773
    9. '
' → logprob: -17.904760360717773
    10. '_v' → logprob: -18.154760360717773

Token 425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759643316268921
    2. ' =' → logprob: -0.8259643316268921
    3. ',' → logprob: -10.825963973999023
    4. ' ' → logprob: -12.575963973999023
    5. ')' → logprob: -14.825963973999023
    6. ')=' → logprob: -15.200963973999023
    7. '=u' → logprob: -15.450963973999023
    8. '[' → logprob: -15.825963973999023
    9. '<|end|>' → logprob: -16.200963973999023
    10. '    ' → logprob: -16.700963973999023

Token 426: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5759410262107849
    2. 'v' → logprob: -0.8259410262107849
    3. '	v' → logprob: -13.57594108581543
    4. ' ' → logprob: -15.82594108581543
    5. '
' → logprob: -16.45094108581543
    6. ')v' → logprob: -16.82594108581543
    7. '_v' → logprob: -18.32594108581543
    8. ',v' → logprob: -18.32594108581543
    9. ' ' → logprob: -18.82594108581543
    10. '=v' → logprob: -18.95094108581543

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019507692195475101
    2. ',u' → logprob: -9.125195503234863
    3. ' ,' → logprob: -10.500195503234863
    4. '<|end|>' → logprob: -10.500195503234863
    5. ',
' → logprob: -11.375195503234863
    6. ',v' → logprob: -11.625195503234863
    7. 'u' → logprob: -12.125195503234863
    8. ' u' → logprob: -13.500195503234863
    9. ',user' → logprob: -13.750195503234863
    10. ' ' → logprob: -14.500195503234863

Token 428: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6931478977203369
    2. ' u' → logprob: -0.6931478977203369
    3. '	u' → logprob: -14.318147659301758
    4. ' ' → logprob: -16.068147659301758
    5. ' 
' → logprob: -18.068147659301758
    6. ' ' → logprob: -18.193147659301758
    7. '(u' → logprob: -19.068147659301758
    8. '[u' → logprob: -19.193147659301758
    9. ',u' → logprob: -19.318147659301758
    10. '_u' → logprob: -19.443147659301758

Token 429: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.2671487629413605
    2. '  
' → logprob: -2.142148733139038
    3. '
' → logprob: -2.517148733139038
    4. '        
' → logprob: -4.267148971557617
    5. '\n' → logprob: -4.767148971557617
    6. '    
' → logprob: -4.892148971557617
    7. '   
' → logprob: -6.017148971557617
    8. '[' → logprob: -6.642148971557617
    9. '       ' → logprob: -6.642148971557617
    10. '     
' → logprob: -7.767148971557617

Token 430: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.39726555347442627
    2. '       ' → logprob: -1.3972655534744263
    3. '        
' → logprob: -3.3972654342651367
    4. '  
' → logprob: -4.147265434265137
    5. '
' → logprob: -4.647265434265137
    6. ' ' → logprob: -5.022265434265137
    7. '        ' → logprob: -6.147265434265137
    8. '   
' → logprob: -6.272265434265137
    9. '    
' → logprob: -6.272265434265137
    10. '' → logprob: -6.522265434265137

Token 431: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1651705503463745
    2. '       ' → logprob: -1.4151705503463745
    3. ' for' → logprob: -1.4151705503463745
    4. ' 
' → logprob: -1.7901705503463745
    5. '        
' → logprob: -3.915170669555664
    6. '        ' → logprob: -5.415170669555664
    7. '   ' → logprob: -6.290170669555664
    8. '     
' → logprob: -6.540170669555664
    9. '    ' → logprob: -6.665170669555664
    10. 'while' → logprob: -6.790170669555664

Token 432: ' Lift' (ID: 74007)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2014876902103424
    2. 'for' → logprob: -1.70148766040802
    3. ' diff' → logprob: -10.45148754119873
    4. ' for' → logprob: -10.45148754119873
    5. 'depth' → logprob: -11.82648754119873
    6. '#' → logprob: -12.57648754119873
    7. '   ' → logprob: -12.70148754119873
    8. '	diff' → logprob: -14.07648754119873
    9. '       ' → logprob: -14.45148754119873
    10. 'd' → logprob: -14.70148754119873

Token 433: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.07370128482580185
    2. ' u' → logprob: -2.6987013816833496
    3. '       ' → logprob: -6.07370138168335
    4. '[u' → logprob: -7.44870138168335
    5. ' for' → logprob: -7.69870138168335
    6. 'for' → logprob: -8.198700904846191
    7. '(u' → logprob: -9.448700904846191
    8. '   ' → logprob: -10.448700904846191
    9. '	u' → logprob: -11.323700904846191
    10. '_u' → logprob: -12.448700904846191

Token 434: ' up' (ID: 869)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12829992175102234
    2. 'while' → logprob: -3.1282999515533447
    3. ' for' → logprob: -4.128299713134766
    4. 'for' → logprob: -4.253299713134766
    5. '        
' → logprob: -4.503299713134766
    6. ' to' → logprob: -4.503299713134766
    7. ' while' → logprob: -4.628299713134766
    8. '        ' → logprob: -5.878299713134766
    9. '   ' → logprob: -6.128299713134766
    10. '           ' → logprob: -6.753299713134766

Token 435: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3034500777721405
    2. 'for' → logprob: -1.803450107574463
    3. ' for' → logprob: -2.678450107574463
    4. '        
' → logprob: -4.678450107574463
    5. 'while' → logprob: -5.553450107574463
    6. '
' → logprob: -5.928450107574463
    7. '        ' → logprob: -5.928450107574463
    8. '           ' → logprob: -6.303450107574463
    9. ' 
' → logprob: -6.303450107574463
    10. '   ' → logprob: -6.303450107574463

Token 436: ' it' (ID: 480)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.25307363271713257
    2. ' that' → logprob: -1.5030736923217773
    3. '       ' → logprob: -6.878073692321777
    4. 'u' → logprob: -9.378073692321777
    5. '   ' → logprob: -11.003073692321777
    6. 'That' → logprob: -13.128073692321777
    7. ' u' → logprob: -13.128073692321777
    8. '           ' → logprob: -13.628073692321777
    9. ' ' → logprob: -13.878073692321777
    10. 'depth' → logprob: -14.003073692321777

Token 437: ' is' (ID: 382)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -1.0470199584960938
    2. 'has' → logprob: -1.2970199584960938
    3. 'matches' → logprob: -1.6720199584960938
    4. ' has' → logprob: -2.5470199584960938
    5. 're' → logprob: -3.9220199584960938
    6. 'can' → logprob: -4.172019958496094
    7. ''s' → logprob: -4.547019958496094
    8. 'is' → logprob: -4.797019958496094
    9. ' reaches' → logprob: -4.797019958496094
    10. ' depth' → logprob: -4.797019958496094

Token 438: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.08509602397680283
    2. ' at' → logprob: -2.9600961208343506
    3. '       ' → logprob: -4.7100958824157715
    4. 'self' → logprob: -4.7100958824157715
    5. 'depth' → logprob: -5.0850958824157715
    6. '   ' → logprob: -6.4600958824157715
    7. 'level' → logprob: -6.9600958824157715
    8. 'aligned' → logprob: -7.3350958824157715
    9. 'deep' → logprob: -7.4600958824157715
    10. 'equal' → logprob: -7.5850958824157715

Token 439: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.002693840069696307
    2. ' the' → logprob: -6.5026936531066895
    3. 'self' → logprob: -7.2526936531066895
    4. 'same' → logprob: -7.8776936531066895
    5. 'depth' → logprob: -9.252694129943848
    6. '   ' → logprob: -12.502694129943848
    7. 'equal' → logprob: -13.127694129943848
    8. ' same' → logprob: -14.377694129943848
    9. 'level' → logprob: -14.502694129943848
    10. ' self' → logprob: -14.877694129943848

Token 440: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.2318524718284607
    2. ' depth' → logprob: -1.9818525314331055
    3. 'level' → logprob: -3.3568525314331055
    4. ' level' → logprob: -3.7318525314331055
    5. '_depth' → logprob: -5.3568525314331055
    6. '   ' → logprob: -5.6068525314331055
    7. ' ' → logprob: -6.7318525314331055
    8. '       ' → logprob: -7.9818525314331055
    9. '    ' → logprob: -9.106852531433105
    10. ' _' → logprob: -9.481852531433105

Token 441: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031153298914432526
    2. '        
' → logprob: -6.253115177154541
    3. '        ' → logprob: -8.1281156539917
    4. ' while' → logprob: -8.7531156539917
    5. ' for' → logprob: -9.0031156539917
    6. 'while' → logprob: -9.1281156539917
    7. '.' → logprob: -9.2531156539917
    8. 'for' → logprob: -9.5031156539917
    9. ' 
' → logprob: -9.7531156539917
    10. ':' → logprob: -9.8781156539917

Token 442: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0011703446507453918
    2. ' v' → logprob: -6.7511701583862305
    3. '	v' → logprob: -16.501171112060547
    4. ')v' → logprob: -19.376171112060547
    5. 'u' → logprob: -19.501171112060547
    6. '       ' → logprob: -19.876171112060547
    7. '?v' → logprob: -20.126171112060547
    8. '$v' → logprob: -20.626171112060547
    9. '
' → logprob: -21.001171112060547
    10. '_v' → logprob: -21.001171112060547

Token 443: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22276544570922852
    2. ' 
' → logprob: -2.5977654457092285
    3. '        
' → logprob: -2.5977654457092285
    4. ' for' → logprob: -3.4727654457092285
    5. 'for' → logprob: -5.0977654457092285
    6. '  
' → logprob: -5.3477654457092285
    7. '    
' → logprob: -5.4727654457092285
    8. '
' → logprob: -5.9727654457092285
    9. '\n' → logprob: -7.8477654457092285
    10. '   
' → logprob: -7.8477654457092285

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05028630793094635
    2. ' for' → logprob: -3.425286293029785
    3. ' 
' → logprob: -4.925286293029785
    4. '        
' → logprob: -5.425286293029785
    5. 'for' → logprob: -5.925286293029785
    6. '   ' → logprob: -7.425286293029785
    7. '  
' → logprob: -7.925286293029785
    8. '
' → logprob: -7.925286293029785
    9. '    
' → logprob: -8.550286293029785
    10. '        ' → logprob: -8.675286293029785

Token 445: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4985981285572052
    2. 'diff' → logprob: -0.9985980987548828
    3. ' for' → logprob: -3.748598098754883
    4. '       ' → logprob: -7.498598098754883
    5. ' diff' → logprob: -9.248598098754883
    6. 'd' → logprob: -11.748598098754883
    7. 'depth' → logprob: -12.623598098754883
    8. '```' → logprob: -13.123598098754883
    9. '	diff' → logprob: -13.248598098754883
    10. 'dif' → logprob: -13.373598098754883

Token 446: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3153206706047058
    2. 'i' → logprob: -1.3153207302093506
    3. ' i' → logprob: -6.3153204917907715
    4. ' k' → logprob: -8.31532096862793
    5. 'd' → logprob: -12.69032096862793
    6. 'diff' → logprob: -14.94032096862793
    7. '   ' → logprob: -16.69032096862793
    8. '	i' → logprob: -17.19032096862793
    9. 'level' → logprob: -17.19032096862793
    10. 'h' → logprob: -17.56532096862793

Token 447: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005931878462433815
    2. 'in' → logprob: -5.130931854248047
    3. '	in' → logprob: -13.255931854248047
    4. ' ' → logprob: -14.505931854248047
    5. '   ' → logprob: -15.130931854248047
    6. ' i' → logprob: -15.755931854248047
    7. '    ' → logprob: -16.255931854248047
    8. ',' → logprob: -16.380931854248047
    9. 's' → logprob: -16.880931854248047
    10. '	' → logprob: -16.880931854248047

Token 448: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00045009577297605574
    2. 're' → logprob: -7.750450134277344
    3. ' range' → logprob: -10.875450134277344
    4. '   ' → logprob: -15.000450134277344
    5. 'reverse' → logprob: -16.625450134277344
    6. ' reversed' → logprob: -16.750450134277344
    7. ' ' → logprob: -17.750450134277344
    8. 'r' → logprob: -18.375450134277344
    9. '	range' → logprob: -18.500450134277344
    10. '
' → logprob: -18.875450134277344

Token 449: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.12693651020526886
    2. 'range' → logprob: -2.126936435699463
    3. ' range' → logprob: -11.751936912536621
    4. '(' → logprob: -15.126936912536621
    5. '	range' → logprob: -15.376936912536621
    6. 'ange' → logprob: -17.751935958862305
    7. '   ' → logprob: -18.876935958862305
    8. ')' → logprob: -19.251935958862305
    9. '_range' → logprob: -19.376935958862305
    10. 'Range' → logprob: -19.501935958862305

Token 450: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.522638169466518e-05
    2. '(' → logprob: -10.625024795532227
    3. 'self' → logprob: -15.125024795532227
    4. '(
' → logprob: -15.250024795532227
    5. ')' → logprob: -16.125024795532227
    6. ' (' → logprob: -16.250024795532227
    7. '(s' → logprob: -16.875024795532227
    8. ' self' → logprob: -17.875024795532227
    9. ')(' → logprob: -18.000024795532227
    10. '[self' → logprob: -18.125024795532227

Token 451: '.LOG' (ID: 68764)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009601775673218071
    2. 'self' → logprob: -7.000960350036621
    3. '(' → logprob: -10.750960350036621
    4. '[self' → logprob: -11.875960350036621
    5. ' self' → logprob: -12.375960350036621
    6. 'def' → logprob: -12.750960350036621
    7. ')' → logprob: -12.875960350036621
    8. ':self' → logprob: -12.875960350036621
    9. 's' → logprob: -13.625960350036621
    10. '=self' → logprob: -13.875960350036621

Token 452: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.6944565176963806
    2. ')):' → logprob: -0.6944565176963806
    3. '))' → logprob: -7.569456577301025
    4. '):
' → logprob: -8.194456100463867
    5. '):' → logprob: -8.194456100463867
    6. ')):
' → logprob: -9.194456100463867
    7. '       ' → logprob: -9.569456100463867
    8. ' ' → logprob: -10.069456100463867
    9. ' ))' → logprob: -11.569456100463867
    10. ':' → logprob: -12.569456100463867

Token 453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6710968017578125
    2. ':' → logprob: -1.1710968017578125
    3. '       ' → logprob: -2.5460968017578125
    4. '<|end|>' → logprob: -2.9210968017578125
    5. ' if' → logprob: -3.4210968017578125
    6. '        ' → logprob: -5.7960968017578125
    7. ',' → logprob: -6.2960968017578125
    8. 'if' → logprob: -6.5460968017578125
    9. ':
' → logprob: -6.6710968017578125
    10. ' :' → logprob: -6.7960968017578125

Token 454: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5222331881523132
    2. 'if' (adapté à ' if') → logprob: -1.272233247756958
    3. '           ' → logprob: -2.397233247756958
    4. '               ' → logprob: -3.397233247756958
    5. '            ' → logprob: -7.772233009338379
    6. '<|end|>' → logprob: -8.522233009338379
    7. ' ' → logprob: -8.647233009338379
    8. '                ' → logprob: -8.897233009338379
    9. '	if' → logprob: -8.897233009338379
    10. '                   ' → logprob: -8.897233009338379

Token 455: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6997171640396118
    2. 'self' → logprob: -0.6997171640396118
    3. '(self' → logprob: -5.074717044830322
    4. ' (' → logprob: -8.32471752166748
    5. '	self' → logprob: -10.44971752166748
    6. ' ' → logprob: -11.82471752166748
    7. '   ' → logprob: -11.94971752166748
    8. '(' → logprob: -12.69971752166748
    9. '((' → logprob: -13.32471752166748
    10. 'u' → logprob: -13.69971752166748

Token 456: '.parent' (ID: 17454)
  Prédit: '.depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.0021975983399897814
    2. 'depth' → logprob: -6.127197742462158
    3. ' depth' → logprob: -12.127197265625
    4. '.parent' → logprob: -12.502197265625
    5. '_depth' → logprob: -13.502197265625
    6. '_DEPTH' → logprob: -14.377197265625
    7. '-depth' → logprob: -14.377197265625
    8. '(depth' → logprob: -14.752197265625
    9. 'Depth' → logprob: -15.127197265625
    10. '.Depth' → logprob: -16.627197265625

Token 457: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -7.553032628493384e-05
    2. '[' → logprob: -9.500075340270996
    3. ' [' → logprob: -14.750075340270996
    4. 'k' → logprob: -16.250076293945312
    5. ' ' → logprob: -16.875076293945312
    6. '[u' → logprob: -16.875076293945312
    7. '0' → logprob: -18.500076293945312
    8. '[
' → logprob: -18.625076293945312
    9. '```' → logprob: -18.750076293945312
    10. '(k' → logprob: -19.500076293945312

Token 458: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.05516796186566353
    2. '][' → logprob: -2.9301679134368896
    3. 'u' → logprob: -8.430168151855469
    4. ')[' → logprob: -10.680168151855469
    5. '[' → logprob: -10.930168151855469
    6. '}[' → logprob: -11.930168151855469
    7. '[user' → logprob: -12.180168151855469
    8. '[v' → logprob: -12.680168151855469
    9. '```' → logprob: -12.805168151855469
    10. ' ][' → logprob: -13.555168151855469

Token 459: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -8.506661833962426e-05
    2. '[u' → logprob: -9.50008487701416
    3. ' u' → logprob: -11.50008487701416
    4. '	u' → logprob: -17.625085830688477
    5. '
' → logprob: -19.250085830688477
    6. '(u' → logprob: -20.625085830688477
    7. '   ' → logprob: -20.625085830688477
    8. '```' → logprob: -20.875085830688477
    9. ''u' → logprob: -21.125085830688477
    10. ')' → logprob: -21.125085830688477

Token 460: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6683047413825989
    2. ']' → logprob: -1.543304681777954
    3. ']!=' → logprob: -1.668304681777954
    4. ' !=' → logprob: -3.293304681777954
    5. '!=-' → logprob: -3.293304681777954
    6. ')' → logprob: -5.168304920196533
    7. ')!=' → logprob: -5.293304920196533
    8. '()!=' → logprob: -10.168304443359375
    9. '}' → logprob: -10.293304443359375
    10. ']>=' → logprob: -10.418304443359375

Token 461: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0624847449362278
    2. '!=-' → logprob: -3.4374847412109375
    3. ' !=' → logprob: -3.5624847412109375
    4. ')!=' → logprob: -10.562484741210938
    5. '>=' → logprob: -11.312484741210938
    6. ']!=' → logprob: -11.437484741210938
    7. '!==' → logprob: -12.187484741210938
    8. '()!=' → logprob: -12.562484741210938
    9. ')' → logprob: -14.687484741210938
    10. '!='' → logprob: -15.187484741210938

Token 462: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.836499985889532e-05
    2. ' -' → logprob: -9.7500581741333
    3. '−' → logprob: -21.125059127807617
    4. '   ' → logprob: -23.125059127807617
    5. '‌' → logprob: -23.875059127807617
    6. ' ' → logprob: -24.000059127807617
    7. '\-' → logprob: -24.375059127807617
    8. '‑' → logprob: -24.375059127807617
    9. '-​' → logprob: -24.875059127807617
    10. '-
' → logprob: -25.125059127807617

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004911953583359718
    2. '-' → logprob: -7.625491142272949
    3. ' -' → logprob: -12.87549114227295
    4. ' ' → logprob: -14.75049114227295
    5. '```' → logprob: -17.000492095947266
    6. '   ' → logprob: -17.375492095947266
    7. '  ' → logprob: -18.812992095947266
    8. '
' → logprob: -19.062992095947266
    9. '``' → logprob: -19.687992095947266
    10. '(-' → logprob: -19.812992095947266

Token 464: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16023722290992737
    2. 'and' → logprob: -1.910237193107605
    3. '	and' → logprob: -12.410237312316895
    4. ' ' → logprob: -12.535237312316895
    5. '               ' → logprob: -13.160237312316895
    6. '           ' → logprob: -14.035237312316895
    7. '                ' → logprob: -14.160237312316895
    8. '            ' → logprob: -14.160237312316895
    9. '   ' → logprob: -15.410237312316895
    10. '    ' → logprob: -15.410237312316895

Token 465: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3133240044116974
    2. ' self' → logprob: -1.313323974609375
    3. '           ' → logprob: -10.438323974609375
    4. '               ' → logprob: -11.313323974609375
    5. '   ' → logprob: -11.813323974609375
    6. '(self' → logprob: -11.938323974609375
    7. '                   ' → logprob: -12.438323974609375
    8. '	self' → logprob: -13.938323974609375
    9. '[self' → logprob: -14.063323974609375
    10. ' ' → logprob: -14.313323974609375

Token 466: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.0021948604844510555
    2. 'depth' → logprob: -6.127194881439209
    3. ' depth' → logprob: -12.50219440460205
    4. ' .' → logprob: -12.75219440460205
    5. '.' → logprob: -13.25219440460205
    6. 'Depth' → logprob: -15.00219440460205
    7. '_DEPTH' → logprob: -15.25219440460205
    8. '_depth' → logprob: -15.50219440460205
    9. '(depth' → logprob: -15.62719440460205
    10. '   ' → logprob: -15.87719440460205

Token 467: '[self' (ID: 33734)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.2519890367984772
    2. '[self' → logprob: -1.5019890069961548
    3. 'self' → logprob: -10.126989364624023
    4. 'u' → logprob: -11.001989364624023
    5. '[' → logprob: -12.751989364624023
    6. ' self' → logprob: -15.501989364624023
    7. '[
' → logprob: -16.126989364624023
    8. ' u' → logprob: -17.501989364624023
    9. '(self' → logprob: -17.751989364624023
    10. ' [' → logprob: -18.251989364624023

Token 468: '.parent' (ID: 17454)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.4013861417770386
    2. '.parent' → logprob: -1.1513861417770386
    3. 'parent' → logprob: -4.901386260986328
    4. 'u' → logprob: -5.276386260986328
    5. '[parent' → logprob: -6.526386260986328
    6. '.u' → logprob: -7.901386260986328
    7. ' u' → logprob: -11.276386260986328
    8. '.' → logprob: -12.026386260986328
    9. '.user' → logprob: -13.526386260986328
    10. '[k' → logprob: -13.526386260986328

Token 469: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -6.869017852295656e-06
    2. 'k' → logprob: -12.250006675720215
    3. '[' → logprob: -13.375006675720215
    4. '][' → logprob: -15.750006675720215
    5. ' [' → logprob: -15.875006675720215
    6. '```' → logprob: -16.25000762939453
    7. '[
' → logprob: -17.25000762939453
    8. ')[' → logprob: -17.75000762939453
    9. '{k' → logprob: -17.87500762939453
    10. ' k' → logprob: -18.00000762939453

Token 470: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0013308331836014986
    2. '[u' → logprob: -7.251330852508545
    3. '][' → logprob: -7.626330852508545
    4. 'k' → logprob: -9.126330375671387
    5. '[' → logprob: -10.751330375671387
    6. ']' → logprob: -14.501330375671387
    7. ' [' → logprob: -15.126330375671387
    8. '```' → logprob: -15.126330375671387
    9. '[
' → logprob: -15.251330375671387
    10. '(k' → logprob: -15.251330375671387

Token 471: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00012844942102674395
    2. '[u' → logprob: -9.000128746032715
    3. ' u' → logprob: -12.250128746032715
    4. '	u' → logprob: -15.250128746032715
    5. '[' → logprob: -17.7501277923584
    6. ']' → logprob: -18.3751277923584
    7. '```' → logprob: -18.3751277923584
    8. 'v' → logprob: -18.5001277923584
    9. 'k' → logprob: -18.6251277923584
    10. '_u' → logprob: -18.7501277923584

Token 472: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015806859591975808
    2. ']>=' → logprob: -6.501580715179443
    3. '[u' → logprob: -9.626580238342285
    4. ' ]' → logprob: -11.876580238342285
    5. 'u' → logprob: -12.876580238342285
    6. ']<=' → logprob: -13.126580238342285
    7. '']' → logprob: -15.126580238342285
    8. '[' → logprob: -15.376580238342285
    9. '```' → logprob: -16.0015811920166
    10. '"]' → logprob: -16.3765811920166

Token 473: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -5.967624019831419e-05
    2. ' >=' → logprob: -10.000060081481934
    3. ']>=' → logprob: -11.375060081481934
    4. ')>=' → logprob: -13.375060081481934
    5. '>' → logprob: -14.000060081481934
    6. '≥' → logprob: -14.875060081481934
    7. '">' → logprob: -17.000059127807617
    8. '```' → logprob: -17.625059127807617
    9. 'u' → logprob: -19.000059127807617
    10. '   ' → logprob: -19.625059127807617

Token 474: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000204851632588543
    2. ' self' → logprob: -8.500205039978027
    3. '           ' → logprob: -14.375205039978027
    4. '   ' → logprob: -14.500205039978027
    5. '       ' → logprob: -16.75020408630371
    6. '[self' → logprob: -16.75020408630371
    7. '(self' → logprob: -16.87520408630371
    8. '               ' → logprob: -17.00020408630371
    9. '	self' → logprob: -17.12520408630371
    10. '                   ' → logprob: -17.25020408630371

Token 475: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.048590321093797684
    2. 'depth' → logprob: -3.0485904216766357
    3. ' depth' → logprob: -13.548590660095215
    4. '[v' → logprob: -14.673590660095215
    5. '_depth' → logprob: -15.048590660095215
    6. '.' → logprob: -15.173590660095215
    7. '   ' → logprob: -15.798590660095215
    8. '-depth' → logprob: -15.923590660095215
    9. '_DEPTH' → logprob: -16.4235897064209
    10. '(depth' → logprob: -16.6735897064209

Token 476: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.547789674485102e-05
    2. 'v' → logprob: -10.250035285949707
    3. '   ' → logprob: -19.000036239624023
    4. '[' → logprob: -19.625036239624023
    5. '	v' → logprob: -19.625036239624023
    6. '<v' → logprob: -19.625036239624023
    7. ' v' → logprob: -20.250036239624023
    8. '(v' → logprob: -21.000036239624023
    9. '[
' → logprob: -21.250036239624023
    10. '```' → logprob: -21.500036239624023

Token 477: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20782782137393951
    2. ':
' → logprob: -1.9578278064727783
    3. '):
' → logprob: -4.082828044891357
    4. '               ' → logprob: -4.082828044891357
    5. '):' → logprob: -5.082828044891357
    6. ']:
' → logprob: -5.957828044891357
    7. ']:' → logprob: -6.082828044891357
    8. '           ' → logprob: -6.957828044891357
    9. ' :' → logprob: -8.9578275680542
    10. '():
' → logprob: -9.4578275680542

Token 478: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04167347028851509
    2. 'u' → logprob: -3.416673421859741
    3. ' u' → logprob: -4.91667366027832
    4. '           ' → logprob: -8.54167366027832
    5. '	u' → logprob: -9.04167366027832
    6. '[u' → logprob: -9.16667366027832
    7. ':
' → logprob: -10.16667366027832
    8. '                
' → logprob: -10.16667366027832
    9. ',u' → logprob: -10.16667366027832
    10. '                   ' → logprob: -10.66667366027832

Token 479: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.00072851701406762
    2. ' u' → logprob: -7.250728607177734
    3. '	u' → logprob: -11.750728607177734
    4. '                   ' → logprob: -12.000728607177734
    5. '               ' → logprob: -12.375728607177734
    6. '   ' → logprob: -16.000728607177734
    7. '           ' → logprob: -16.125728607177734
    8. '_u' → logprob: -17.625728607177734
    9. '                       ' → logprob: -18.250728607177734
    10. '[u' → logprob: -19.250728607177734

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141363143920898
    2. ' =' → logprob: -1.701413631439209
    3. '=self' → logprob: -15.076414108276367
    4. ')' → logprob: -17.076414108276367
    5. ']' → logprob: -17.576414108276367
    6. ']=' → logprob: -17.701414108276367
    7. '=
' → logprob: -18.451414108276367
    8. ' ' → logprob: -18.451414108276367
    9. ')=' → logprob: -18.451414108276367
    10. '=

' → logprob: -18.576414108276367

Token 481: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975083328783512
    2. ' self' → logprob: -3.5297508239746094
    3. '               ' → logprob: -16.02975082397461
    4. '	self' → logprob: -16.65475082397461
    5. '(self' → logprob: -16.90475082397461
    6. '[self' → logprob: -16.90475082397461
    7. 'parent' → logprob: -17.27975082397461
    8. '                   ' → logprob: -17.65475082397461
    9. '           ' → logprob: -17.77975082397461
    10. '   ' → logprob: -18.40475082397461

Token 482: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00043102685594931245
    2. 'parent' → logprob: -7.750431060791016
    3. '	parent' → logprob: -16.375431060791016
    4. '[parent' → logprob: -16.500431060791016
    5. '.' → logprob: -16.625431060791016
    6. ' parent' → logprob: -17.000431060791016
    7. ' .' → logprob: -17.125431060791016
    8. '_parent' → logprob: -18.000431060791016
    9. '.Parent' → logprob: -18.125431060791016
    10. '.parents' → logprob: -18.750431060791016

Token 483: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.88418151892256e-05
    2. 'k' → logprob: -9.750059127807617
    3. '[' → logprob: -15.125059127807617
    4. '```' → logprob: -16.375059127807617
    5. ' [' → logprob: -17.375059127807617
    6. '[
' → logprob: -17.625059127807617
    7. '{k' → logprob: -17.750059127807617
    8. '][' → logprob: -18.000059127807617
    9. '(k' → logprob: -18.125059127807617
    10. '
' → logprob: -18.625059127807617

Token 484: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07906516641378403
    2. '[k' → logprob: -2.5790650844573975
    3. 'k' → logprob: -8.954065322875977
    4. ' ][' → logprob: -10.704065322875977
    5. ']' → logprob: -11.579065322875977
    6. ')[' → logprob: -12.329065322875977
    7. '[' → logprob: -12.829065322875977
    8. '}[' → logprob: -13.079065322875977
    9. ' [' → logprob: -13.829065322875977
    10. '"][' → logprob: -14.079065322875977

Token 485: 'u' (ID: 84)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0025212035980075598
    2. 'u' → logprob: -6.00252103805542
    3. '[k' → logprob: -10.752521514892578
    4. '[u' → logprob: -10.752521514892578
    5. ' k' → logprob: -13.127521514892578
    6. ')' → logprob: -15.502521514892578
    7. '][' → logprob: -15.502521514892578
    8. '```' → logprob: -16.127521514892578
    9. ']' → logprob: -16.502521514892578
    10. ' u' → logprob: -16.877521514892578

Token 486: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005433809128589928
    2. ']
' → logprob: -8.250543594360352
    3. '[k' → logprob: -8.750543594360352
    4. ')' → logprob: -10.125543594360352
    5. '               ' → logprob: -10.250543594360352
    6. '           ' → logprob: -11.000543594360352
    7. '       ' → logprob: -11.250543594360352
    8. ' ]' → logprob: -11.750543594360352
    9. '                   ' → logprob: -13.375543594360352
    10. '])' → logprob: -13.375543594360352

Token 487: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6543410420417786
    2. '       ' → logprob: -0.7793410420417786
    3. '        
' → logprob: -4.779341220855713
    4. ' 
' → logprob: -5.279341220855713
    5. '\n' → logprob: -5.404341220855713
    6. '  
' → logprob: -6.529341220855713
    7. '    
' → logprob: -7.779341220855713
    8. '' → logprob: -8.404340744018555
    9. ',
' → logprob: -8.404340744018555
    10. '```' → logprob: -9.029340744018555

Token 488: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01864992082118988
    2. 'for' → logprob: -4.643650054931641
    3. 'if' (adapté à ' if') → logprob: -5.018650054931641
    4. ' for' → logprob: -6.643650054931641
    5. ' if' → logprob: -7.268650054931641
    6. '        
' → logprob: -9.26865005493164
    7. '   ' → logprob: -9.64365005493164
    8. '
' → logprob: -10.01865005493164
    9. 'while' → logprob: -11.39365005493164
    10. ' ' → logprob: -12.01865005493164

Token 489: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1002078503370285
    2. ' u' → logprob: -2.350207805633545
    3. '	u' → logprob: -13.725208282470703
    4. '[u' → logprob: -16.350208282470703
    5. '(u' → logprob: -17.225208282470703
    6. '   ' → logprob: -17.350208282470703
    7. '       ' → logprob: -18.225208282470703
    8. '=u' → logprob: -19.350208282470703
    9. '    ' → logprob: -19.475208282470703
    10. '_u' → logprob: -19.725208282470703

Token 490: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023823618888855
    2. '==' → logprob: -1.910238265991211
    3. '=' → logprob: -11.535238265991211
    4. ' =' → logprob: -13.160238265991211
    5. ']==' → logprob: -14.160238265991211
    6. ')==' → logprob: -14.285238265991211
    7. '==
' → logprob: -14.785238265991211
    8. ')' → logprob: -15.410238265991211
    9. '===' → logprob: -16.16023826599121
    10. ' ' → logprob: -16.41023826599121

Token 491: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001234428636962548
    2. ' v' → logprob: -9.000123023986816
    3. '	v' → logprob: -17.750123977661133
    4. '   ' → logprob: -22.500123977661133
    5. '
' → logprob: -23.500123977661133
    6. ')v' → logprob: -23.625123977661133
    7. '?v' → logprob: -24.000123977661133
    8. '_v' → logprob: -24.000123977661133
    9. 'vq' → logprob: -24.000123977661133
    10. ' ' → logprob: -24.000123977661133

Token 492: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22350704669952393
    2. ':
' → logprob: -1.723507046699524
    3. ':return' → logprob: -3.8485069274902344
    4. '<|end|>' → logprob: -8.973506927490234
    5. 'return' → logprob: -9.098506927490234
    6. '
' → logprob: -9.723506927490234
    7. '       ' → logprob: -9.848506927490234
    8. ' return' → logprob: -9.973506927490234
    9. ' ' → logprob: -10.223506927490234
    10. '   ' → logprob: -10.598506927490234

Token 493: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09563662856817245
    2. ' return' → logprob: -3.4706366062164307
    3. 'return' → logprob: -3.5956366062164307
    4. '           ' → logprob: -4.34563684463501
    5. ':return' → logprob: -4.72063684463501
    6. '	' → logprob: -5.09563684463501
    7. '	return' → logprob: -6.09563684463501
    8. '   ' → logprob: -7.47063684463501
    9. '
' → logprob: -7.59563684463501
    10. ':' → logprob: -8.220636367797852

Token 494: ' return' (ID: 622)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.023299051448702812
    2. ' u' → logprob: -3.773298978805542
    3. 'return' (adapté à ' return') → logprob: -9.898299217224121
    4. ' return' → logprob: -13.273299217224121
    5. 'v' → logprob: -14.273299217224121
    6. '       ' → logprob: -14.898299217224121
    7. '
' → logprob: -15.023299217224121
    8. '	u' → logprob: -15.773299217224121
    9. '           ' → logprob: -17.523298263549805
    10. '[u' → logprob: -17.523298263549805

Token 495: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12760470807552338
    2. 'v' → logprob: -2.1276047229766846
    3. ' u' → logprob: -7.3776044845581055
    4. ' v' → logprob: -9.877604484558105
    5. '	u' → logprob: -19.377605438232422
    6. '	v' → logprob: -20.377605438232422
    7. '[u' → logprob: -21.502605438232422
    8. 'user' → logprob: -22.752605438232422
    9. '_u' → logprob: -22.877605438232422
    10. ' ' → logprob: -23.002605438232422

Token 496: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056605495512485504
    2. '
' → logprob: -3.806605577468872
    3. ' for' → logprob: -4.181605339050293
    4. 'for' → logprob: -4.931605339050293
    5. '	for' → logprob: -6.181605339050293
    6. '	' → logprob: -6.306605339050293
    7. '   ' → logprob: -6.931605339050293
    8. '        
' → logprob: -6.931605339050293
    9. ' 
' → logprob: -7.056605339050293
    10. '' → logprob: -7.306605339050293

Token 497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.208860382437706
    2. '
' → logprob: -2.083860397338867
    3. ' for' → logprob: -3.708860397338867
    4. '   ' → logprob: -4.458860397338867
    5. 'for' → logprob: -4.833860397338867
    6. ' 
' → logprob: -5.083860397338867
    7. '	for' → logprob: -5.708860397338867
    8. '	' → logprob: -6.083860397338867
    9. '  
' → logprob: -6.083860397338867
    10. '        
' → logprob: -6.583860397338867

Token 498: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10682246834039688
    2. 'for' (adapté à ' for') → logprob: -2.6068224906921387
    3. '       ' → logprob: -3.6068224906921387
    4. '
' → logprob: -8.35682201385498
    5. '   ' → logprob: -9.48182201385498
    6. '	for' → logprob: -10.35682201385498
    7. '        
' → logprob: -10.48182201385498
    8. ' 
' → logprob: -10.73182201385498
    9. '```' → logprob: -12.48182201385498
    10. ' ' → logprob: -12.98182201385498

Token 499: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.4121114822482923e-06
    2. ' k' → logprob: -12.625003814697266
    3. 're' → logprob: -16.875003814697266
    4. '	k' → logprob: -21.125003814697266
    5. 'range' → logprob: -21.375003814697266
    6. 'kx' → logprob: -22.250003814697266
    7. 'ks' → logprob: -22.750003814697266
    8. ' reversed' → logprob: -22.750003814697266
    9. 'r' → logprob: -23.500003814697266
    10. ' ' → logprob: -23.625003814697266

Token 500: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011705794604495168
    2. 'in' → logprob: -6.751170635223389
    3. ' reversed' → logprob: -15.62617015838623
    4. '[::-' → logprob: -16.251171112060547
    5. 's' → logprob: -16.876171112060547
    6. ' ' → logprob: -17.126171112060547
    7. '	in' → logprob: -17.376171112060547
    8. 're' → logprob: -18.251171112060547
    9. '   ' → logprob: -18.626171112060547
    10. ' i' → logprob: -18.751171112060547

Token 501: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.5048530030981055e-06
    2. ' reversed' → logprob: -13.500001907348633
    3. 'range' → logprob: -17.500001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '
' → logprob: -19.875001907348633
    6. ' ' → logprob: -20.125001907348633
    7. '	re' → logprob: -20.750001907348633
    8. 'r' → logprob: -21.625001907348633
    9. 'reverse' → logprob: -21.625001907348633
    10. 'rew' → logprob: -22.625001907348633

Token 502: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -7.505351095460355e-05
    2. 'range' → logprob: -9.500075340270996
    3. '(' → logprob: -16.50007438659668
    4. ' range' → logprob: -17.37507438659668
    5. ' (' → logprob: -19.00007438659668
    6. '	range' → logprob: -19.37507438659668
    7. '(r' → logprob: -19.62507438659668
    8. '(rank' → logprob: -20.37507438659668
    9. '(re' → logprob: -21.75007438659668
    10. '(
' → logprob: -22.00007438659668

Token 503: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.75
    3. '(s' → logprob: -18.0
    4. 'self' → logprob: -18.0
    5. '(this' → logprob: -19.0
    6. '(
' → logprob: -19.25
    7. ' (' → logprob: -20.625
    8. '(sel' → logprob: -21.25
    9. ',self' → logprob: -22.375
    10. '(len' → logprob: -22.375

Token 504: '.LOG' (ID: 68764)
  Prédit: '.LOG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.LOG' → logprob: -0.00017541198758408427
    2. 'LOG' → logprob: -8.750175476074219
    3. '.L' → logprob: -11.750175476074219
    4. '	LOG' → logprob: -12.125175476074219
    5. '.LO' → logprob: -13.500175476074219
    6. 'self' → logprob: -13.500175476074219
    7. '(LOG' → logprob: -14.875175476074219
    8. '.LE' → logprob: -16.25017547607422
    9. ' LOG' → logprob: -16.50017547607422
    10. '.S' → logprob: -16.62517547607422

Token 505: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5264204740524292
    2. '):' → logprob: -0.9014204740524292
    3. '       ' → logprob: -6.026420593261719
    4. ')):' → logprob: -8.276420593261719
    5. ')):
' → logprob: -8.776420593261719
    6. '()):
' → logprob: -9.526420593261719
    7. '):
' → logprob: -9.776420593261719
    8. ')' → logprob: -9.776420593261719
    9. '():
' → logprob: -10.026420593261719
    10. ']):' → logprob: -10.401420593261719

Token 506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05616820976138115
    2. '       ' → logprob: -3.6811683177948
    3. ' if' → logprob: -4.056168079376221
    4. '<|end|>' → logprob: -4.806168079376221
    5. '	       ' → logprob: -6.806168079376221
    6. ' ' → logprob: -7.181168079376221
    7. '        ' → logprob: -7.306168079376221
    8. '   ' → logprob: -7.681168079376221
    9. ':' → logprob: -8.556168556213379
    10. 'if' → logprob: -9.306168556213379

Token 507: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5779539346694946
    2. '           ' → logprob: -1.0779539346694946
    3. ' if' → logprob: -2.327953815460205
    4. '               ' → logprob: -7.327953815460205
    5. '   ' → logprob: -8.202954292297363
    6. '       ' → logprob: -8.702954292297363
    7. '	if' → logprob: -10.327954292297363
    8. ' ' → logprob: -10.702954292297363
    9. '```' → logprob: -12.452954292297363
    10. '		' → logprob: -13.202954292297363

Token 508: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023290082812309265
    2. ' self' → logprob: -3.7732901573181152
    3. '(self' → logprob: -10.148289680480957
    4. '   ' → logprob: -12.523289680480957
    5. ' ' → logprob: -13.898289680480957
    6. '	self' → logprob: -14.648289680480957
    7. '  ' → logprob: -16.398290634155273
    8. ' (' → logprob: -16.523290634155273
    9. '0' → logprob: -16.523290634155273
    10. '           ' → logprob: -16.648290634155273

Token 509: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.003070998936891556
    2. 'parent' → logprob: -5.878070831298828
    3. 'self' → logprob: -8.253070831298828
    4. '.self' → logprob: -13.253070831298828
    5. '[parent' → logprob: -13.378070831298828
    6. '[self' → logprob: -14.378070831298828
    7. '
' → logprob: -14.753070831298828
    8. '.' → logprob: -15.128070831298828
    9. ' parent' → logprob: -15.753070831298828
    10. ',parent' → logprob: -16.503070831298828

Token 510: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -7.3458322731312364e-06
    2. 'k' → logprob: -11.875007629394531
    3. '[' → logprob: -16.00000762939453
    4. '```' → logprob: -16.12500762939453
    5. '[
' → logprob: -17.12500762939453
    6. ' [' → logprob: -18.12500762939453
    7. '{k' → logprob: -18.25000762939453
    8. '(k' → logprob: -18.50000762939453
    9. '	k' → logprob: -19.50000762939453
    10. '
' → logprob: -19.62500762939453

Token 511: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0807785764336586
    2. '[k' → logprob: -2.5807785987854004
    3. '][' → logprob: -6.3307785987854
    4. 'k' → logprob: -10.580778121948242
    5. 'u' → logprob: -10.580778121948242
    6. ')[' → logprob: -10.705778121948242
    7. '[' → logprob: -11.455778121948242
    8. '}[' → logprob: -11.705778121948242
    9. '[user' → logprob: -12.205778121948242
    10. '```' → logprob: -12.330778121948242

Token 512: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.5776860184123507e-06
    2. '[u' → logprob: -13.12500286102295
    3. ' u' → logprob: -14.75000286102295
    4. '	u' → logprob: -16.500001907348633
    5. ''u' → logprob: -17.875001907348633
    6. '<u' → logprob: -18.000001907348633
    7. '(u' → logprob: -19.000001907348633
    8. '<|end|>' → logprob: -19.000001907348633
    9. 'user' → logprob: -19.125001907348633
    10. ',u' → logprob: -19.375001907348633

Token 513: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23719821870326996
    2. ']!=' → logprob: -1.7371982336044312
    3. '[u' → logprob: -3.6121981143951416
    4. '!=' → logprob: -5.862198352813721
    5. '[k' → logprob: -6.487198352813721
    6. '[' → logprob: -6.987198352813721
    7. '][' → logprob: -6.987198352813721
    8. ')!=' → logprob: -7.112198352813721
    9. ' !=' → logprob: -7.237198352813721
    10. ')' → logprob: -8.862197875976562

Token 514: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.14362652599811554
    2. ' !=' → logprob: -2.0186264514923096
    3. '!=-' → logprob: -7.143626689910889
    4. ']!=' → logprob: -9.51862621307373
    5. ')!=' → logprob: -10.14362621307373
    6. '[' → logprob: -10.64362621307373
    7. '()!=' → logprob: -11.64362621307373
    8. 'is' → logprob: -12.64362621307373
    9. '!==' → logprob: -12.64362621307373
    10. ')' → logprob: -13.14362621307373

Token 515: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00021641071361955255
    2. 'self' → logprob: -8.500216484069824
    3. ' -' → logprob: -11.500216484069824
    4. ' self' → logprob: -13.375216484069824
    5. '-self' → logprob: -13.625216484069824
    6. '   ' → logprob: -17.625215530395508
    7. '	self' → logprob: -18.875215530395508
    8. '           ' → logprob: -19.625215530395508
    9. '−' → logprob: -19.875215530395508
    10. ' ' → logprob: -20.125215530395508

Token 516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033760786755010486
    2. '-' → logprob: -8.000337600708008
    3. ' -' → logprob: -13.625337600708008
    4. ' ' → logprob: -14.125337600708008
    5. '```' → logprob: -16.250337600708008
    6. '
' → logprob: -17.500337600708008
    7. '   ' → logprob: -17.500337600708008
    8. 'sys' → logprob: -18.250337600708008
    9. '' → logprob: -18.500337600708008
    10. '-
' → logprob: -18.625337600708008

Token 517: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.061968132853507996
    2. 'and' → logprob: -2.8119680881500244
    3. '            ' → logprob: -15.936967849731445
    4. ' ' → logprob: -16.061967849731445
    5. '           ' → logprob: -16.561967849731445
    6. '	and' → logprob: -16.561967849731445
    7. '               ' → logprob: -17.436967849731445
    8. '                ' → logprob: -17.686967849731445
    9. ' и' → logprob: -19.436967849731445
    10. '                   ' → logprob: -19.561967849731445

Token 518: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04862143099308014
    2. ' self' → logprob: -3.048621416091919
    3. '               ' → logprob: -11.29862117767334
    4. '(self' → logprob: -11.54862117767334
    5. '           ' → logprob: -11.92362117767334
    6. '                   ' → logprob: -13.29862117767334
    7. '```' → logprob: -13.79862117767334
    8. '[self' → logprob: -14.04862117767334
    9. '	self' → logprob: -14.42362117767334
    10. '   ' → logprob: -15.17362117767334

Token 519: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0003466673369985074
    2. 'parent' → logprob: -8.000347137451172
    3. '[k' → logprob: -12.000347137451172
    4. 'self' → logprob: -12.750347137451172
    5. '[parent' → logprob: -13.750347137451172
    6. '.user' → logprob: -15.500347137451172
    7. '[self' → logprob: -15.500347137451172
    8. '.' → logprob: -16.000347137451172
    9. '.self' → logprob: -16.000347137451172
    10. 'k' → logprob: -16.250347137451172

Token 520: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.080963092041202e-06
    2. 'k' → logprob: -12.250004768371582
    3. '```' → logprob: -15.875004768371582
    4. '[' → logprob: -16.2500057220459
    5. '{k' → logprob: -17.8750057220459
    6. '	k' → logprob: -18.2500057220459
    7. '[
' → logprob: -19.2500057220459
    8. '
' → logprob: -19.5000057220459
    9. '(k' → logprob: -19.8750057220459
    10. ' [' → logprob: -20.2500057220459

Token 521: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.1424973713001236e-05
    2. 'k' → logprob: -10.750031471252441
    3. '[' → logprob: -12.250031471252441
    4. '][' → logprob: -12.750031471252441
    5. '[v' → logprob: -13.500031471252441
    6. '```' → logprob: -15.125031471252441
    7. '[u' → logprob: -15.375031471252441
    8. ')[' → logprob: -16.125030517578125
    9. '{k' → logprob: -16.500030517578125
    10. '[
' → logprob: -17.125030517578125

Token 522: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0030386780854314566
    2. 'v' → logprob: -6.3780388832092285
    3. '[u' → logprob: -6.6280388832092285
    4. 'k' → logprob: -12.37803840637207
    5. ' u' → logprob: -12.62803840637207
    6. '[v' → logprob: -13.00303840637207
    7. '[' → logprob: -14.12803840637207
    8. '
' → logprob: -14.62803840637207
    9. '	u' → logprob: -14.62803840637207
    10. '```' → logprob: -15.50303840637207

Token 523: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.003927725832909346
    2. ' !=' → logprob: -5.628927707672119
    3. ']!=' → logprob: -8.253928184509277
    4. '()!=' → logprob: -10.503928184509277
    5. ')!=' → logprob: -10.628928184509277
    6. '!==' → logprob: -12.253928184509277
    7. '```' → logprob: -12.378928184509277
    8. ']' → logprob: -12.628928184509277
    9. '!' → logprob: -13.753928184509277
    10. 'u' → logprob: -13.878928184509277

Token 524: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0032109846360981464
    2. ' !=' → logprob: -5.75321102142334
    3. ')!=' → logprob: -11.37821102142334
    4. ']!=' → logprob: -11.62821102142334
    5. '!==' → logprob: -11.87821102142334
    6. '()!=' → logprob: -12.25321102142334
    7. '!' → logprob: -14.62821102142334
    8. '!=(' → logprob: -15.00321102142334
    9. '```' → logprob: -15.12821102142334
    10. '!='' → logprob: -16.753210067749023

Token 525: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.493430894101039e-05
    2. ' self' → logprob: -9.500075340270996
    3. '[self' → logprob: -18.12507438659668
    4. '           ' → logprob: -18.25007438659668
    5. '(self' → logprob: -18.50007438659668
    6. '   ' → logprob: -18.87507438659668
    7. '	self' → logprob: -19.12507438659668
    8. ' ' → logprob: -19.87507438659668
    9. '       ' → logprob: -20.12507438659668
    10. 'parent' → logprob: -20.75007438659668

Token 526: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -9.627176768844947e-05
    2. 'parent' → logprob: -9.250096321105957
    3. '[parent' → logprob: -16.75009536743164
    4. '	parent' → logprob: -18.87509536743164
    5. '.' → logprob: -19.62509536743164
    6. '
' → logprob: -20.00009536743164
    7. ' .' → logprob: -20.12509536743164
    8. ' parent' → logprob: -20.25009536743164
    9. '_parent' → logprob: -20.75009536743164
    10. ',parent' → logprob: -21.00009536743164

Token 527: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.084206375409849e-05
    2. 'k' → logprob: -10.125041007995605
    3. '[' → logprob: -14.875041007995605
    4. '```' → logprob: -15.875041007995605
    5. '{k' → logprob: -16.50004005432129
    6. '(k' → logprob: -17.00004005432129
    7. '	k' → logprob: -17.25004005432129
    8. '
' → logprob: -18.25004005432129
    9. ' k' → logprob: -18.75004005432129
    10. '[
' → logprob: -19.00004005432129

Token 528: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.7120533811976202e-05
    2. 'k' → logprob: -11.500017166137695
    3. '][' → logprob: -12.250017166137695
    4. '[' → logprob: -13.500017166137695
    5. ' [' → logprob: -15.375017166137695
    6. '```' → logprob: -15.625017166137695
    7. '{k' → logprob: -16.500017166137695
    8. ')[' → logprob: -16.875017166137695
    9. '
' → logprob: -17.250017166137695
    10. '}[' → logprob: -17.250017166137695

Token 529: 'v' (ID: 85)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.794061770662665e-05
    2. '[k' → logprob: -9.25009822845459
    3. 'v' → logprob: -13.50009822845459
    4. '[v' → logprob: -16.000097274780273
    5. ' k' → logprob: -16.375097274780273
    6. '
' → logprob: -16.750097274780273
    7. '	k' → logprob: -17.500097274780273
    8. '{k' → logprob: -17.500097274780273
    9. '```' → logprob: -17.500097274780273
    10. '"k' → logprob: -18.125097274780273

Token 530: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.33154964447021484
    2. '):
' → logprob: -1.9565496444702148
    3. ':
' → logprob: -3.081549644470215
    4. '[u' → logprob: -3.206549644470215
    5. ']:' → logprob: -3.581549644470215
    6. ':' → logprob: -4.206549644470215
    7. '               ' → logprob: -5.581549644470215
    8. '):' → logprob: -6.081549644470215
    9. ']' → logprob: -6.456549644470215
    10. '           ' → logprob: -6.581549644470215

Token 531: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025619841180741787
    2. '           ' → logprob: -7.002562046051025
    3. 'u' → logprob: -7.252562046051025
    4. ' u' → logprob: -7.752562046051025
    5. ':
' → logprob: -8.377561569213867
    6. '                   ' → logprob: -9.252561569213867
    7. '
' → logprob: -9.752561569213867
    8. '                
' → logprob: -11.002561569213867
    9. '(u' → logprob: -11.127561569213867
    10. '[u' → logprob: -11.127561569213867

Token 532: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.011240453459322453
    2. ' u' → logprob: -4.511240482330322
    3. '               ' → logprob: -8.636240005493164
    4. '	u' → logprob: -11.386240005493164
    5. '                   ' → logprob: -12.886240005493164
    6. '           ' → logprob: -14.636240005493164
    7. ',u' → logprob: -15.511240005493164
    8. '   ' → logprob: -15.511240005493164
    9. '[u' → logprob: -15.886240005493164
    10. '_u' → logprob: -16.136240005493164

Token 533: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141558349132538
    2. ' =' → logprob: -1.7014155387878418
    3. ',' → logprob: -13.951416015625
    4. ' ' → logprob: -14.576416015625
    5. ')' → logprob: -14.951416015625
    6. '=self' → logprob: -14.951416015625
    7. '=
' → logprob: -15.826416015625
    8. '=k' → logprob: -16.201416015625
    9. ' =
' → logprob: -16.326416015625
    10. '=

' → logprob: -17.076416015625

Token 534: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007100477814674377
    2. ' self' → logprob: -7.2507100105285645
    3. '[self' → logprob: -16.875709533691406
    4. '	self' → logprob: -18.000709533691406
    5. '(self' → logprob: -18.000709533691406
    6. 'parent' → logprob: -18.875709533691406
    7. '   ' → logprob: -20.000709533691406
    8. '```' → logprob: -20.125709533691406
    9. '=self' → logprob: -20.500709533691406
    10. '           ' → logprob: -20.750709533691406

Token 535: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.038044363260269165
    2. 'parent' → logprob: -3.2880444526672363
    3. ' parent' → logprob: -13.413043975830078
    4. '[parent' → logprob: -14.288043975830078
    5. '	parent' → logprob: -14.788043975830078
    6. '_parent' → logprob: -15.413043975830078
    7. '.' → logprob: -15.913043975830078
    8. 'Parent' → logprob: -17.913043975830078
    9. ',parent' → logprob: -18.663043975830078
    10. '(parent' → logprob: -18.663043975830078

Token 536: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.688212614681106e-05
    2. 'k' → logprob: -11.250017166137695
    3. '][' → logprob: -13.500017166137695
    4. '[' → logprob: -13.625017166137695
    5. '
' → logprob: -15.125017166137695
    6. '```' → logprob: -15.375017166137695
    7. ')[' → logprob: -15.750017166137695
    8. ',k' → logprob: -16.125017166137695
    9. '{k' → logprob: -16.250017166137695
    10. ']' → logprob: -16.875017166137695

Token 537: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.135819760151207e-05
    2. '[k' → logprob: -9.75007152557373
    3. '[u' → logprob: -11.50007152557373
    4. ']' → logprob: -13.25007152557373
    5. ' ][' → logprob: -15.25007152557373
    6. 'k' → logprob: -15.37507152557373
    7. ']][' → logprob: -15.50007152557373
    8. ')[' → logprob: -15.75007152557373
    9. ')][' → logprob: -16.750070571899414
    10. '"][' → logprob: -16.875070571899414

Token 538: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4804692566394806
    2. 'k' → logprob: -0.9804692268371582
    3. '[u' → logprob: -5.730469226837158
    4. '[k' → logprob: -5.855469226837158
    5. 'v' → logprob: -8.355469703674316
    6. '[v' → logprob: -11.980469703674316
    7. ' k' → logprob: -11.980469703674316
    8. ' u' → logprob: -12.355469703674316
    9. '[' → logprob: -12.730469703674316
    10. '```' → logprob: -13.230469703674316

Token 539: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0451074056327343
    2. ')' → logprob: -3.920107364654541
    3. ')
' → logprob: -4.420107364654541
    4. ']
' → logprob: -5.045107364654541
    5. ']' → logprob: -5.420107364654541
    6. '<|end|>' → logprob: -8.0451078414917
    7. '                
' → logprob: -8.4201078414917
    8. 'v' → logprob: -8.4201078414917
    9. 'u' → logprob: -9.0451078414917
    10. '           ' → logprob: -9.1701078414917

Token 540: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02020280435681343
    2. 'v' → logprob: -4.02020263671875
    3. ' v' → logprob: -6.39520263671875
    4. ',v' → logprob: -8.27020263671875
    5. '       ' → logprob: -9.89520263671875
    6. '	v' → logprob: -11.02020263671875
    7. '                
' → logprob: -11.02020263671875
    8. '
' → logprob: -11.39520263671875
    9. '           ' → logprob: -12.64520263671875
    10. 'u' → logprob: -12.77020263671875

Token 541: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -9.627176768844947e-05
    2. ' v' → logprob: -9.250096321105957
    3. '	v' → logprob: -16.25009536743164
    4. '               ' → logprob: -17.62509536743164
    5. ',v' → logprob: -19.87509536743164
    6. '       ' → logprob: -20.75009536743164
    7. '                   ' → logprob: -22.00009536743164
    8. ')v' → logprob: -22.00009536743164
    9. '                ' → logprob: -22.37509536743164
    10. '_v' → logprob: -23.00009536743164

Token 542: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868728280067444
    2. ' =' → logprob: -1.1368727684020996
    3. ')' → logprob: -14.386873245239258
    4. '=v' → logprob: -14.761873245239258
    5. '=k' → logprob: -14.886873245239258
    6. ' ' → logprob: -15.011873245239258
    7. '=user' → logprob: -16.761873245239258
    8. ',' → logprob: -17.386873245239258
    9. ']' → logprob: -17.386873245239258
    10. '[' → logprob: -18.261873245239258

Token 543: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06197318062186241
    2. ' self' → logprob: -2.8119730949401855
    3. '[self' → logprob: -12.936973571777344
    4. 'parent' → logprob: -13.061973571777344
    5. '               ' → logprob: -14.936973571777344
    6. '	self' → logprob: -15.311973571777344
    7. '(self' → logprob: -15.811973571777344
    8. ' parent' → logprob: -16.686973571777344
    9. '           ' → logprob: -16.811973571777344
    10. ' ' → logprob: -16.811973571777344

Token 544: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.16023458540439606
    2. 'parent' → logprob: -1.9102345705032349
    3. '[parent' → logprob: -11.910234451293945
    4. ' parent' → logprob: -13.160234451293945
    5. '_parent' → logprob: -14.285234451293945
    6. '	parent' → logprob: -14.410234451293945
    7. '.' → logprob: -15.660234451293945
    8. ',parent' → logprob: -16.660234451293945
    9. 'paren' → logprob: -16.785234451293945
    10. 'Parent' → logprob: -16.785234451293945

Token 545: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.47495681833243e-05
    2. 'k' → logprob: -10.625024795532227
    3. '{k' → logprob: -15.625024795532227
    4. '[' → logprob: -17.000024795532227
    5. '	k' → logprob: -17.250024795532227
    6. '```' → logprob: -18.500024795532227
    7. '(k' → logprob: -19.000024795532227
    8. ',k' → logprob: -20.000024795532227
    9. ' k' → logprob: -20.250024795532227

Token 546: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.3889683783054352
    2. '][' → logprob: -1.1389683485031128
    3. '[v' → logprob: -6.263968467712402
    4. 'k' → logprob: -8.638968467712402
    5. ')[' → logprob: -12.138968467712402
    6. '[' → logprob: -12.513968467712402
    7. ']' → logprob: -13.513968467712402
    8. ' ][' → logprob: -14.263968467712402
    9. '[u' → logprob: -14.388968467712402
    10. ',k' → logprob: -15.013968467712402

Token 547: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.7372048862162046e-05
    2. 'k' → logprob: -11.000027656555176
    3. '[v' → logprob: -11.500027656555176
    4. ' v' → logprob: -15.000027656555176
    5. 'u' → logprob: -16.12502670288086
    6. '[k' → logprob: -16.87502670288086
    7. '```' → logprob: -17.37502670288086
    8. ')v' → logprob: -18.25002670288086
    9. '[u' → logprob: -18.75002670288086
    10. '	v' → logprob: -19.75002670288086

Token 548: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033997902646660805
    2. ']' → logprob: -5.878399848937988
    3. '               ' → logprob: -7.628399848937988
    4. '<|end|>' → logprob: -9.878399848937988
    5. ')
' → logprob: -10.378399848937988
    6. '）' → logprob: -12.128399848937988
    7. ')return' → logprob: -12.503399848937988
    8. '           ' → logprob: -12.628399848937988
    9. '}' → logprob: -12.878399848937988
    10. '```' → logprob: -13.128399848937988

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014616657281294465
    2. '
' → logprob: -6.751461505889893
    3. '        
' → logprob: -9.25146198272705
    4. '  
' → logprob: -10.62646198272705
    5. 'return' → logprob: -10.62646198272705
    6. '\n' → logprob: -10.87646198272705
    7. '	' → logprob: -10.87646198272705
    8. '\
' → logprob: -10.87646198272705
    9. '   ' → logprob: -11.25146198272705
    10. '\' → logprob: -11.62646198272705

Token 550: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31404241919517517
    2. '       ' → logprob: -1.5640424489974976
    3. ' return' → logprob: -2.814042329788208
    4. '               ' → logprob: -9.064042091369629
    5. '   ' → logprob: -9.439042091369629
    6. '        
' → logprob: -10.564042091369629
    7. 'self' → logprob: -11.439042091369629
    8. '	return' → logprob: -11.689042091369629
    9. '           ' → logprob: -12.439042091369629
    10. '        ' → logprob: -12.689042091369629

Token 551: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019287518225610256
    2. ' self' → logprob: -6.251928806304932
    3. '(self' → logprob: -16.751928329467773
    4. '[self' → logprob: -17.876928329467773
    5. '	self' → logprob: -19.126928329467773
    6. '=self' → logprob: -20.876928329467773
    7. ' ' → logprob: -21.751928329467773
    8. 's' → logprob: -22.126928329467773
    9. ' ' → logprob: -23.001928329467773
    10. '`' → logprob: -24.001928329467773

Token 552: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.8624639324116288e-06
    2. 'parent' → logprob: -13.250001907348633
    3. '.' → logprob: -17.500001907348633
    4. '[parent' → logprob: -18.375001907348633
    5. '	parent' → logprob: -18.875001907348633
    6. '.Parent' → logprob: -19.625001907348633
    7. '.parents' → logprob: -19.750001907348633
    8. ' .' → logprob: -19.750001907348633
    9. ' parent' → logprob: -20.375001907348633
    10. '_parent' → logprob: -21.125001907348633

Token 553: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.682846287731081e-05
    2. '0' → logprob: -9.750066757202148
    3. '[k' → logprob: -13.000066757202148
    4. ' [' → logprob: -13.125066757202148
    5. 'k' → logprob: -13.750066757202148
    6. '
' → logprob: -14.125066757202148
    7. '1' → logprob: -14.125066757202148
    8. '```' → logprob: -14.125066757202148
    9. ' ' → logprob: -14.500066757202148
    10. '`' → logprob: -16.00006675720215

Token 554: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.375001907348633
    3. '[' → logprob: -14.375001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '000' → logprob: -19.500001907348633
    6. '۰' → logprob: -19.500001907348633
    7. '```' → logprob: -19.750001907348633
    8. '０' → logprob: -20.000001907348633
    9. '00' → logprob: -20.125001907348633
    10. '  ' → logprob: -20.750001907348633

Token 555: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0002671768015716225
    2. '][' → logprob: -8.375267028808594
    3. '[' → logprob: -10.750267028808594
    4. 'u' → logprob: -11.250267028808594
    5. '}[' → logprob: -14.250267028808594
    6. ')[' → logprob: -14.500267028808594
    7. '[v' → logprob: -14.875267028808594
    8. '```' → logprob: -16.500267028808594
    9. '	u' → logprob: -16.625267028808594
    10. '[user' → logprob: -16.625267028808594

Token 556: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0280383548888494e-06
    2. ' u' → logprob: -13.875000953674316
    3. '	u' → logprob: -18.750001907348633
    4. '[u' → logprob: -20.750001907348633
    5. 'user' → logprob: -22.500001907348633
    6. '(u' → logprob: -22.875001907348633
    7. ''u' → logprob: -23.750001907348633
    8. '   ' → logprob: -24.250001907348633
    9. '<u' → logprob: -24.500001907348633
    10. ' ' → logprob: -24.750001907348633

Token 557: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005979396868497133
    2. ')' → logprob: -5.130979537963867
    3. ' ]' → logprob: -10.755979537963867
    4. '<|end|>' → logprob: -11.005979537963867
    5. '])' → logprob: -11.755979537963867
    6. ']
' → logprob: -13.380979537963867
    7. '}' → logprob: -13.630979537963867
    8. '[' → logprob: -14.005979537963867
    9. ' )' → logprob: -15.005979537963867
    10. '']' → logprob: -15.130979537963867

Token 558: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46515733003616333
    2. '   ' → logprob: -1.0901572704315186
    3. 'class' → logprob: -3.3401572704315186
    4. ' def' → logprob: -8.965157508850098
    5. 'from' → logprob: -9.840157508850098
    6. '    
' → logprob: -10.090157508850098
    7. 'import' → logprob: -10.215157508850098
    8. ' ' → logprob: -10.715157508850098
    9. '    ' → logprob: -11.090157508850098
    10. '```' → logprob: -11.090157508850098

Token 559: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015758060617372394
    2. ' def' → logprob: -7.001575946807861
    3. '   ' → logprob: -7.376575946807861
    4. '
' → logprob: -10.501575469970703
    5. '    
' → logprob: -11.751575469970703
    6. ' 
' → logprob: -13.876575469970703
    7. '	def' → logprob: -14.751575469970703
    8. ' ' → logprob: -14.876575469970703
    9. '```' → logprob: -15.126575469970703
    10. '        
' → logprob: -15.376575469970703

Token 560: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.5631040930747986
    2. 'distance' → logprob: -1.0631041526794434
    3. ' dist' → logprob: -2.9381041526794434
    4. 'dist' → logprob: -3.5631041526794434
    5. ' get' → logprob: -5.688104152679443
    6. 'get' → logprob: -8.438103675842285
    7. '_distance' → logprob: -8.688103675842285
    8. '_dist' → logprob: -10.313103675842285
    9. ' query' → logprob: -10.563103675842285
    10. 'def' → logprob: -11.313103675842285

Token 561: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02988424152135849
    2. '(' → logprob: -3.5298843383789062
    3. '(u' → logprob: -9.529884338378906
    4. '<|end|>' → logprob: -10.779884338378906
    5. ' (' → logprob: -10.904884338378906
    6. 'self' → logprob: -12.279884338378906
    7. '(
' → logprob: -12.779884338378906
    8. '<|end|>' → logprob: -13.029884338378906
    9. ' ' → logprob: -13.154884338378906
    10. 'def' → logprob: -13.404884338378906

Token 562: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11149153858423233
    2. ',' → logprob: -2.6114914417266846
    3. 'self' → logprob: -3.8614914417266846
    4. ')(' → logprob: -4.861491680145264
    5. ')' → logprob: -5.986491680145264
    6. '(' → logprob: -8.611491203308105
    7. ' (' → logprob: -8.861491203308105
    8. ',self' → logprob: -9.361491203308105
    9. 's' → logprob: -9.486491203308105
    10. 'def' → logprob: -9.736491203308105

Token 563: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0015030752401798964
    2. ' u' → logprob: -6.501502990722656
    3. 'self' → logprob: -14.251502990722656
    4. '	u' → logprob: -16.126502990722656
    5. '   ' → logprob: -17.626502990722656
    6. 'a' → logprob: -19.251502990722656
    7. ' self' → logprob: -20.001502990722656
    8. '_u' → logprob: -20.126502990722656
    9. ' ' → logprob: -20.251502990722656
    10. ')' → logprob: -20.376502990722656

Token 564: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.596781946020201e-05
    2. ' ,' → logprob: -10.000045776367188
    3. ',v' → logprob: -15.625045776367188
    4. ',u' → logprob: -16.000045776367188
    5. ':' → logprob: -17.125045776367188
    6. ' ' → logprob: -17.625045776367188
    7. ',
' → logprob: -17.750045776367188
    8. ',int' → logprob: -18.000045776367188
    9. 'u' → logprob: -18.500045776367188
    10. '   ' → logprob: -18.625045776367188

Token 565: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018398085609078407
    2. ' int' → logprob: -4.018398284912109
    3. 'u' → logprob: -9.01839828491211
    4. ':int' → logprob: -9.76839828491211
    5. ' u' → logprob: -10.14339828491211
    6. 'v' → logprob: -11.39339828491211
    7. '   ' → logprob: -12.01839828491211
    8. ',' → logprob: -12.14339828491211
    9. ',int' → logprob: -13.14339828491211
    10. ' ' → logprob: -13.51839828491211

Token 566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.583550642360933e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',v' → logprob: -14.875036239624023
    4. ',u' → logprob: -19.125036239624023
    5. ',
' → logprob: -19.625036239624023
    6. ')' → logprob: -20.875036239624023
    7. '   ' → logprob: -21.125036239624023
    8. 'v' → logprob: -21.250036239624023
    9. ' ' → logprob: -21.875036239624023
    10. ',

' → logprob: -22.625036239624023

Token 567: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01416350994259119
    2. ' v' → logprob: -4.264163494110107
    3. '	v' → logprob: -19.139163970947266
    4. '   ' → logprob: -20.014163970947266
    5. ' ' → logprob: -21.764163970947266
    6. '    ' → logprob: -22.764163970947266
    7. ')v' → logprob: -23.389163970947266
    8. 'vq' → logprob: -23.389163970947266
    9. '  ' → logprob: -23.639163970947266
    10. 'u' → logprob: -24.139163970947266

Token 568: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042527250945568085
    2. '):' → logprob: -3.292527198791504
    3. '):
' → logprob: -5.417527198791504
    4. ':' → logprob: -10.667527198791504
    5. ' )' → logprob: -12.042527198791504
    6. '):
' → logprob: -12.542527198791504
    7. ' ):' → logprob: -13.417527198791504
    8. '):

' → logprob: -13.417527198791504
    9. ',' → logprob: -14.417527198791504
    10. ')**' → logprob: -15.292527198791504

Token 569: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4104284644126892
    2. ')' → logprob: -1.160428524017334
    3. ' int' → logprob: -3.785428524017334
    4. ' )' → logprob: -7.785428524017334
    5. '1' → logprob: -9.660428047180176
    6. ' ' → logprob: -10.410428047180176
    7. 'u' → logprob: -10.660428047180176
    8. 'v' → logprob: -11.535428047180176
    9. '):
' → logprob: -11.785428047180176
    10. ' u' → logprob: -11.910428047180176

Token 570: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05043208971619606
    2. '):' → logprob: -3.0504322052001953
    3. '):
' → logprob: -6.300432205200195
    4. '):
' → logprob: -12.925432205200195
    5. ' )' → logprob: -13.050432205200195
    6. ' ):' → logprob: -13.925432205200195
    7. ':' → logprob: -14.925432205200195
    8. ')->' → logprob: -14.925432205200195
    9. '):

' → logprob: -14.925432205200195
    10. ')`' → logprob: -15.050432205200195

Token 571: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003948267549276352
    2. '):' → logprob: -5.878948211669922
    3. ')' → logprob: -7.503948211669922
    4. ' :' → logprob: -7.753948211669922
    5. ':return' → logprob: -9.753948211669922
    6. ':
' → logprob: -10.628948211669922
    7. '->' → logprob: -10.753948211669922
    8. '():' → logprob: -11.378948211669922
    9. ' ->' → logprob: -11.628948211669922
    10. ')->' → logprob: -12.003948211669922

Token 572: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7773653864860535
    2. 'int' → logprob: -1.4023654460906982
    3. ' self' → logprob: -1.6523654460906982
    4. 'self' → logprob: -2.2773654460906982
    5. ' ' → logprob: -9.152365684509277
    6. '(self' → logprob: -10.402365684509277
    7. ' (' → logprob: -11.027365684509277
    8. ' ' → logprob: -11.527365684509277
    9. '(int' → logprob: -11.652365684509277
    10. 's' → logprob: -11.902365684509277

Token 573: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003482351079583168
    2. '):' → logprob: -6.753482341766357
    3. ':
' → logprob: -7.128482341766357
    4. ')' → logprob: -7.253482341766357
    5. ',' → logprob: -8.753482818603516
    6. '<|end|>' → logprob: -8.753482818603516
    7. '=' → logprob: -9.128482818603516
    8. '(' → logprob: -9.878482818603516
    9. '):
' → logprob: -9.878482818603516
    10. '   ' → logprob: -10.503482818603516

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6671377420425415
    2. 'return' → logprob: -0.7921377420425415
    3. ' return' → logprob: -3.667137622833252
    4. 'dist' → logprob: -5.417137622833252
    5. 'd' → logprob: -5.667137622833252
    6. 'l' → logprob: -8.79213809967041
    7. ' dist' → logprob: -9.29213809967041
    8. 'u' → logprob: -10.04213809967041
    9. '   ' → logprob: -10.16713809967041
    10. 'ld' → logprob: -10.29213809967041

Token 575: ' l' (ID: 305)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16218645870685577
    2. 'l' (adapté à ' l') → logprob: -1.9121865034103394
    3. 'lu' → logprob: -6.662186622619629
    4. 'dist' → logprob: -8.537186622619629
    5. '   ' → logprob: -8.912186622619629
    6. 'd' → logprob: -8.912186622619629
    7. 'ld' → logprob: -9.037186622619629
    8. '       ' → logprob: -10.287186622619629
    9. ' return' → logprob: -10.662186622619629
    10. 'du' → logprob: -10.787186622619629

Token 576: ' =' (ID: 314)
  Prédit: 'ca'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.02607477456331253
    2. '=' → logprob: -4.2760748863220215
    3. ' =' → logprob: -4.5260748863220215
    4. 'c' → logprob: -6.9010748863220215
    5. '   ' → logprob: -12.151074409484863
    6. 'can' → logprob: -13.901074409484863
    7. 'a' → logprob: -14.776074409484863
    8. '_ca' → logprob: -14.776074409484863
    9. 'CA' → logprob: -15.026074409484863
    10. ' ' → logprob: -15.026074409484863

Token 577: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026264708139933646
    2. ' self' → logprob: -8.250262260437012
    3. 'elf' → logprob: -13.875262260437012
    4. '(self' → logprob: -15.375262260437012
    5. '	self' → logprob: -17.000263214111328
    6. '[self' → logprob: -17.000263214111328
    7. '   ' → logprob: -17.500263214111328
    8. 'u' → logprob: -17.750263214111328
    9. '=self' → logprob: -17.875263214111328
    10. 's' → logprob: -18.000263214111328

Token 578: '.l' (ID: 1000)
  Prédit: 'ca'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.21917502582073212
    2. '.l' → logprob: -1.7191749811172485
    3. 'l' → logprob: -4.094174861907959
    4. 'c' → logprob: -7.094174861907959
    5. '.c' → logprob: -10.219175338745117
    6. '.ca' → logprob: -10.469175338745117
    7. 'a' → logprob: -11.594175338745117
    8. '	l' → logprob: -11.969175338745117
    9. 'lc' → logprob: -12.219175338745117
    10. '[l' → logprob: -12.719175338745117

Token 579: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -1.0683535037969705e-05
    2. 'c' → logprob: -11.50001049041748
    3. 'a' → logprob: -15.87501049041748
    4. 'cal' → logprob: -16.625011444091797
    5. 'cap' → logprob: -17.625011444091797
    6. 'care' → logprob: -17.875011444091797
    7. 'cao' → logprob: -17.875011444091797
    8. ' ca' → logprob: -18.125011444091797
    9. 'cas' → logprob: -18.125011444091797
    10. 'can' → logprob: -18.500011444091797

Token 580: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -5.955703818472102e-05
    2. '(' → logprob: -9.750059127807617
    3. 'u' → logprob: -13.625059127807617
    4. '(
' → logprob: -18.125059127807617
    5. '[u' → logprob: -18.750059127807617
    6. ' (' → logprob: -20.000059127807617
    7. ',u' → logprob: -20.000059127807617
    8. '<u' → logprob: -20.750059127807617
    9. '(user' → logprob: -21.250059127807617
    10. ' u' → logprob: -21.375059127807617

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002342912630410865
    2. ',v' → logprob: -8.625234603881836
    3. ' ,' → logprob: -9.875234603881836
    4. ',u' → logprob: -13.250234603881836
    5. 'v' → logprob: -14.000234603881836
    6. ',
' → logprob: -14.875234603881836
    7. '<|end|>' → logprob: -16.125234603881836
    8. ')' → logprob: -16.750234603881836
    9. ' v' → logprob: -16.750234603881836
    10. 'u' → logprob: -17.375234603881836

Token 582: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001584850688232109
    2. ' v' → logprob: -8.750158309936523
    3. ')v' → logprob: -19.125158309936523
    4. 'u' → logprob: -19.375158309936523
    5. '	v' → logprob: -20.750158309936523
    6. ',v' → logprob: -22.250158309936523
    7. ')' → logprob: -22.375158309936523
    8. ' ' → logprob: -23.000158309936523
    9. 'vq' → logprob: -23.625158309936523
    10. 'vj' → logprob: -24.250158309936523

Token 583: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10020839422941208
    2. ')
' → logprob: -2.350208282470703
    3. ')
' → logprob: -13.475208282470703
    4. ')return' → logprob: -15.850208282470703
    5. ' )
' → logprob: -16.475208282470703
    6. ' )' → logprob: -16.850208282470703
    7. ')

' → logprob: -17.100208282470703
    8. '       ' → logprob: -17.975208282470703
    9. ')`
' → logprob: -18.225208282470703
    10. ')`' → logprob: -18.225208282470703

Token 584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5094709992408752
    2. 'return' → logprob: -1.0094709396362305
    3. ' return' → logprob: -3.3844709396362305
    4. '
' → logprob: -7.2594709396362305
    5. '   ' → logprob: -9.38447093963623
    6. '        
' → logprob: -9.75947093963623
    7. '        ' → logprob: -12.00947093963623
    8. 'ret' → logprob: -12.38447093963623
    9. ' ' → logprob: -12.88447093963623
    10. ' 
' → logprob: -12.88447093963623

Token 585: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.166338137816638e-05
    2. '       ' → logprob: -10.750031471252441
    3. ' return' → logprob: -11.500031471252441
    4. '
' → logprob: -17.125032424926758
    5. '	return' → logprob: -17.875032424926758
    6. '{return' → logprob: -18.125032424926758
    7. '```' → logprob: -19.250032424926758
    8. ')return' → logprob: -20.250032424926758
    9. ':return' → logprob: -20.250032424926758
    10. '   ' → logprob: -20.375032424926758

Token 586: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.661626634420827e-05
    2. ' self' → logprob: -9.750086784362793
    3. '(self' → logprob: -10.500086784362793
    4. '       ' → logprob: -14.500086784362793
    5. '[self' → logprob: -16.125085830688477
    6. '	self' → logprob: -16.750085830688477
    7. '   ' → logprob: -17.000085830688477
    8. '
' → logprob: -20.000085830688477
    9. '           ' → logprob: -20.000085830688477
    10. '=self' → logprob: -20.125085830688477

Token 587: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -3.500108141452074e-05
    2. '.depth' → logprob: -10.500035285949707
    3. '.distance' → logprob: -12.000035285949707
    4. 'dist' → logprob: -14.750035285949707
    5. '.' → logprob: -14.875035285949707
    6. ' .' → logprob: -16.12503433227539
    7. '.diff' → logprob: -16.25003433227539
    8. '	dist' → logprob: -16.50003433227539
    9. 'ist' → logprob: -17.00003433227539
    10. '.dep' → logprob: -17.12503433227539

Token 588: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '\' → logprob: -20.0
    3. 's' → logprob: -20.875
    4. '[_' → logprob: -21.0
    5. '_TO' → logprob: -21.0
    6. 'to' → logprob: -21.125
    7. ')_' → logprob: -21.625
    8. 'To' → logprob: -21.75
    9. ' _' → logprob: -22.0
    10. '_' → logprob: -22.375

Token 589: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.012512002140283585
    2. 'root' → logprob: -4.38751220703125
    3. ' root' → logprob: -13.76251220703125
    4. '[root' → logprob: -14.63751220703125
    5. '(root' → logprob: -16.13751220703125
    6. 's' → logprob: -16.13751220703125
    7. 'r' → logprob: -16.63751220703125
    8. 'self' → logprob: -16.63751220703125
    9. '_' → logprob: -16.76251220703125
    10. 'u' → logprob: -16.76251220703125

Token 590: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.896309739408025e-07
    2. 'u' → logprob: -14.125000953674316
    3. '[' → logprob: -20.125
    4. '	u' → logprob: -20.375
    5. '```' → logprob: -20.75
    6. '[
' → logprob: -21.0
    7. '<u' → logprob: -21.75
    8. '
' → logprob: -22.625
    9. '[v' → logprob: -22.875
    10. '(u' → logprob: -22.875

Token 591: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03805101290345192
    2. '+' → logprob: -3.288051128387451
    3. ']+' → logprob: -12.788050651550293
    4. ']' → logprob: -13.288050651550293
    5. ')' → logprob: -13.413050651550293
    6. '+self' → logprob: -13.538050651550293
    7. ')+' → logprob: -13.913050651550293
    8. ' ' → logprob: -14.413050651550293
    9. ' plus' → logprob: -14.913050651550293
    10. ' -' → logprob: -16.41305160522461

Token 592: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47412458062171936
    2. '+' → logprob: -0.974124550819397
    3. '+self' → logprob: -9.974124908447266
    4. ' ' → logprob: -14.974124908447266
    5. ' ' → logprob: -15.974124908447266
    6. ' plus' → logprob: -16.099124908447266
    7. '+b' → logprob: -16.349124908447266
    8. '+r' → logprob: -17.099124908447266
    9. '+
' → logprob: -17.224124908447266
    10. '+d' → logprob: -17.724124908447266

Token 593: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804183006286621
    2. ' self' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.913042068481445
    4. 's' → logprob: -16.413042068481445
    5. '(self' → logprob: -16.538042068481445
    6. '	self' → logprob: -17.163042068481445
    7. '[self' → logprob: -17.913042068481445
    8. '   ' → logprob: -18.288042068481445
    9. '`' → logprob: -18.413042068481445
    10. '       ' → logprob: -18.788042068481445

Token 594: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -1.259079363080673e-05
    2. '.' → logprob: -11.375012397766113
    3. 'dist' → logprob: -13.875012397766113
    4. '	dist' → logprob: -16.37501335144043
    5. ' .' → logprob: -17.00001335144043
    6. '.distance' → logprob: -18.50001335144043
    7. '`.' → logprob: -18.75001335144043
    8. '.dis' → logprob: -18.87501335144043
    9. '.diff' → logprob: -19.12501335144043
    10. '.div' → logprob: -19.37501335144043

Token 595: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.704273118884885e-07
    2. 'to' → logprob: -14.500000953674316
    3. 'To' → logprob: -17.125
    4. '_TO' → logprob: -18.25
    5. '-to' → logprob: -18.375
    6. ' to' → logprob: -18.375
    7. '+' → logprob: -18.5
    8. '_' → logprob: -19.0
    9. '_from' → logprob: -19.0
    10. 'ance' → logprob: -19.625

Token 596: '_root' (ID: 29989)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.03810954466462135
    2. '_root' → logprob: -3.288109540939331
    3. ' root' → logprob: -9.66310977935791
    4. '[root' → logprob: -12.91310977935791
    5. 'r' → logprob: -14.03810977935791
    6. 'Root' → logprob: -14.53810977935791
    7. '	root' → logprob: -15.91310977935791
    8. '(root' → logprob: -16.288108825683594
    9. '.root' → logprob: -16.538108825683594
    10. 'roo' → logprob: -16.788108825683594

Token 597: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.128163257315464e-07
    2. 'v' → logprob: -15.25
    3. '[' → logprob: -16.75
    4. '(v' → logprob: -21.25
    5. '[u' → logprob: -21.25
    6. ' [' → logprob: -22.0
    7. '[
' → logprob: -22.125
    8. '	v' → logprob: -22.375
    9. '<v' → logprob: -22.75
    10. ' v' → logprob: -23.5

Token 598: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01815134845674038
    2. '-' → logprob: -4.01815128326416
    3. ' ' → logprob: -13.51815128326416
    4. ' ' → logprob: -16.518152236938477
    5. '−' → logprob: -18.768152236938477
    6. ' −' → logprob: -19.143152236938477
    7. ' –' → logprob: -19.643152236938477
    8. '   ' → logprob: -19.893152236938477
    9. ' -
' → logprob: -20.018152236938477
    10. '       ' → logprob: -20.768152236938477

Token 599: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12692926824092865
    2. '-' → logprob: -2.12692928314209
    3. ' ' → logprob: -13.75192928314209
    4. '−' → logprob: -16.876928329467773
    5. ' ' → logprob: -17.001928329467773
    6. ' –' → logprob: -18.001928329467773
    7. '   ' → logprob: -18.251928329467773
    8. '`' → logprob: -18.376928329467773
    9. ' −' → logprob: -18.376928329467773
    10. '       ' → logprob: -18.876928329467773

Token 600: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.625139236450195
    4. '(' → logprob: -18.375139236450195
    5. '  ' → logprob: -19.125139236450195
    6. '۲' → logprob: -19.375139236450195
    7. '```' → logprob: -19.625139236450195
    8. ' ' → logprob: -19.625139236450195
    9. '２' → logprob: -20.125139236450195
    10. '\
' → logprob: -20.625139236450195

Token 601: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '(' → logprob: -17.37500762939453
    4. '   ' → logprob: -18.75000762939453
    5. '２' → logprob: -20.50000762939453
    6. '```' → logprob: -20.62500762939453
    7. '  ' → logprob: -20.75000762939453
    8. '۲' → logprob: -20.87500762939453
    9. ' (' → logprob: -21.25000762939453
    10. 'self' → logprob: -21.87500762939453

Token 602: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47528076171875
    2. ' *' → logprob: -0.97528076171875
    3. '*self' → logprob: -6.72528076171875
    4. '*object' → logprob: -13.10028076171875
    5. ' ' → logprob: -15.10028076171875
    6. 'self' → logprob: -15.60028076171875
    7. '*out' → logprob: -15.97528076171875
    8. ' ' → logprob: -16.10028076171875
    9. '*this' → logprob: -16.72528076171875
    10. '**' → logprob: -16.97528076171875

Token 603: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.15310683415737e-05
    2. ' self' → logprob: -10.750021934509277
    3. '(self' → logprob: -19.50002098083496
    4. '[self' → logprob: -20.75002098083496
    5. '	self' → logprob: -21.12502098083496
    6. '
' → logprob: -21.62502098083496
    7. '*self' → logprob: -22.00002098083496
    8. 's' → logprob: -22.37502098083496
    9. '```' → logprob: -24.00002098083496
    10. ' ' → logprob: -24.12502098083496

Token 604: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -1.5048530030981055e-06
    2. 'dist' → logprob: -13.875001907348633
    3. '.' → logprob: -15.125001907348633
    4. ' .' → logprob: -16.250001907348633
    5. '	dist' → logprob: -16.250001907348633
    6. '.distance' → logprob: -17.250001907348633
    7. '.depth' → logprob: -18.000001907348633
    8. '.diff' → logprob: -18.000001907348633
    9. '.div' → logprob: -18.500001907348633
    10. ' dist' → logprob: -19.500001907348633

Token 605: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.9361264946837764e-07
    2. 'to' → logprob: -15.75
    3. 'To' → logprob: -16.75
    4. '\' → logprob: -18.5
    5. '_TO' → logprob: -18.5
    6. '_' → logprob: -18.875
    7. ' _' → logprob: -20.25
    8. '   ' → logprob: -20.5
    9. '[_' → logprob: -20.875
    10. 'l' → logprob: -21.125

Token 606: '_root' (ID: 29989)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.16093406081199646
    2. '_root' → logprob: -1.9109340906143188
    3. 'oot' → logprob: -7.410933971405029
    4. ' root' → logprob: -9.660934448242188
    5. 'o' → logprob: -10.910934448242188
    6. 'roo' → logprob: -12.285934448242188
    7. '[root' → logprob: -12.410934448242188
    8. '(root' → logprob: -12.785934448242188
    9. 'r' → logprob: -12.910934448242188
    10. 'ot' → logprob: -13.035934448242188

Token 607: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.2664456789934775e-06
    2. 'l' → logprob: -14.000000953674316
    3. '[' → logprob: -14.750000953674316
    4. '[
' → logprob: -18.750001907348633
    5. '	l' → logprob: -19.500001907348633
    6. '(l' → logprob: -21.000001907348633
    7. '[L' → logprob: -21.125001907348633
    8. ' [' → logprob: -21.625001907348633
    9. '```' → logprob: -22.375001907348633
    10. ' l' → logprob: -22.875001907348633

Token 608: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12713231146335602
    2. '[l' → logprob: -2.1271324157714844
    3. '[' → logprob: -9.252132415771484
    4. 'l' → logprob: -9.877132415771484
    5. '[u' → logprob: -10.627132415771484
    6. ')' → logprob: -11.252132415771484
    7. ' ]' → logprob: -11.752132415771484
    8. '])' → logprob: -12.127132415771484
    9. '][' → logprob: -13.002132415771484
    10. ' l' → logprob: -13.627132415771484

Token 609: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0067478204146027565
    2. 'class' → logprob: -5.006747722625732
    3. '```' → logprob: -11.50674819946289
    4. 'from' → logprob: -11.63174819946289
    5. 'import' → logprob: -12.00674819946289
    6. ' def' → logprob: -12.50674819946289
    7. '#' → logprob: -13.13174819946289
    8. '   ' → logprob: -14.50674819946289
    9. ' class' → logprob: -15.38174819946289
    10. '.' → logprob: -15.88174819946289

Token 610: ' Meeting' (ID: 36677)
  Prédit: 'Cent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cent' → logprob: -1.4896676540374756
    2. ' Cent' → logprob: -1.8646676540374756
    3. ' Heavy' → logprob: -2.1146676540374756
    4. ' Tree' → logprob: -2.4896676540374756
    5. 'Tree' → logprob: -2.8646676540374756
    6. 'Heavy' → logprob: -2.9896676540374756
    7. ' H' → logprob: -3.2396676540374756
    8. ' Solution' → logprob: -3.2396676540374756
    9. 'Solution' → logprob: -3.7396676540374756
    10. 'Query' → logprob: -3.8646676540374756

Token 611: 'In' (ID: 637)
  Prédit: 'Planner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Planner' → logprob: -0.6092096567153931
    2. 'Point' → logprob: -1.484209656715393
    3. 'Scheduler' → logprob: -2.2342095375061035
    4. ':' → logprob: -2.2342095375061035
    5. 'Points' → logprob: -5.2342095375061035
    6. 'Manager' → logprob: -5.7342095375061035
    7. 'Place' → logprob: -6.2342095375061035
    8. 'Optimizer' → logprob: -6.4842095375061035
    9. ':
' → logprob: -6.7342095375061035
    10. 'Finder' → logprob: -7.6092095375061035

Token 612: 'City' (ID: 15764)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.3873099386692047
    2. 'The' → logprob: -1.2623099088668823
    3. 'Graph' → logprob: -3.637310028076172
    4. 'Forest' → logprob: -5.387310028076172
    5. 'Trees' → logprob: -6.512310028076172
    6. 'the' → logprob: -6.512310028076172
    7. 'A' → logprob: -7.137310028076172
    8. 'Node' → logprob: -7.762310028076172
    9. 'Tre' → logprob: -8.137310028076172
    10. 'a' → logprob: -8.262310028076172

Token 613: 'Solution' (ID: 44456)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007516168989241123
    2. ':
' → logprob: -7.250751495361328
    3. 'Problem' → logprob: -11.000751495361328
    4. '(' → logprob: -11.500751495361328
    5. 'Planner' → logprob: -12.625751495361328
    6. 's' → logprob: -13.500751495361328
    7. 'Scheduler' → logprob: -13.625751495361328
    8. ':

' → logprob: -13.750751495361328
    9. '():' → logprob: -13.875751495361328
    10. 'Planning' → logprob: -14.125751495361328

Token 614: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.682846287731081e-05
    2. ':
' → logprob: -10.125066757202148
    3. ':def' → logprob: -11.250066757202148
    4. '():' → logprob: -11.875066757202148
    5. '(' → logprob: -12.625066757202148
    6. ' :' → logprob: -13.500066757202148
    7. '(object' → logprob: -14.625066757202148
    8. ':

' → logprob: -14.875066757202148
    9. 'def' → logprob: -15.625066757202148
    10. ':**' → logprob: -15.750066757202148

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056523364037275314
    2. ':' → logprob: -3.681523323059082
    3. ':
' → logprob: -4.306523323059082
    4. ' def' → logprob: -4.306523323059082
    5. 'def' → logprob: -6.056523323059082
    6. ':def' → logprob: -8.431523323059082
    7. '	def' → logprob: -9.056523323059082
    8. '    
' → logprob: -9.431523323059082
    9. '```' → logprob: -10.806523323059082
    10. '
' → logprob: -12.681523323059082

Token 616: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1006491556763649
    2. 'def' (adapté à ' def') → logprob: -2.350649118423462
    3. '   ' → logprob: -7.725649356842041
    4. 'class' → logprob: -15.225648880004883
    5. '	def' → logprob: -15.600648880004883
    6. ':' → logprob: -15.850648880004883
    7. ':def' → logprob: -16.100648880004883
    8. 'de' → logprob: -16.350648880004883
    9. 'import' → logprob: -16.600648880004883
    10. ' __' → logprob: -17.225648880004883

Token 617: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11180595308542252
    2. '__' → logprob: -2.4868059158325195
    3. 'init' → logprob: -3.8618059158325195
    4. 'def' → logprob: -7.8618059158325195
    5. ' init' → logprob: -7.8618059158325195
    6. '_init' → logprob: -8.11180591583252
    7. ' def' → logprob: -8.36180591583252
    8. '_' → logprob: -8.73680591583252
    9. ' _' → logprob: -9.61180591583252
    10. 'int' → logprob: -12.11180591583252

Token 618: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'def' → logprob: -19.5
    3. '_init' → logprob: -20.5
    4. 'ini' → logprob: -20.875
    5. 'inite' → logprob: -21.375
    6. ' init' → logprob: -21.375
    7. 'int' → logprob: -22.625
    8. 'in' → logprob: -22.875
    9. '   ' → logprob: -23.5
    10. 'innit' → logprob: -23.5

Token 619: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.001564853941090405
    2. '__' → logprob: -6.501564979553223
    3. '__(
' → logprob: -9.751564979553223
    4. '__((' → logprob: -12.876564979553223
    5. '(self' → logprob: -14.376564979553223
    6. '(' → logprob: -14.626564979553223
    7. '__('' → logprob: -15.001564979553223
    8. '__[' → logprob: -15.751564979553223
    9. '_(' → logprob: -16.126564025878906
    10. '__("' → logprob: -16.626564025878906

Token 620: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.015305552864447e-05
    2. ' self' → logprob: -9.875060081481934
    3. '
' → logprob: -12.750060081481934
    4. '   ' → logprob: -12.875060081481934
    5. ')' → logprob: -13.750060081481934
    6. ',' → logprob: -14.125060081481934
    7. '(self' → logprob: -15.000060081481934
    8. '       ' → logprob: -15.125060081481934
    9. '__(' → logprob: -15.250060081481934
    10. ')(' → logprob: -15.500060081481934

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2723104848410003e-05
    2. 'self' → logprob: -11.000022888183594
    3. ' ,' → logprob: -12.500022888183594
    4. ')' → logprob: -14.250022888183594
    5. ',self' → logprob: -14.250022888183594
    6. '):' → logprob: -14.375022888183594
    7. '):
' → logprob: -15.625022888183594
    8. ',
' → logprob: -16.125022888183594
    9. '(self' → logprob: -16.875022888183594
    10. ' self' → logprob: -17.625022888183594

Token 622: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.30600276589393616
    2. 'graph' → logprob: -2.0560028553009033
    3. ' n' → logprob: -2.4310028553009033
    4. 'self' → logprob: -3.9310028553009033
    5. ' graph' → logprob: -4.306002616882324
    6. '):
' → logprob: -5.431002616882324
    7. ' self' → logprob: -6.306002616882324
    8. '   ' → logprob: -6.306002616882324
    9. 'city' → logprob: -6.431002616882324
    10. 'num' → logprob: -6.681002616882324

Token 623: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01125059463083744
    2. ',' → logprob: -5.1362504959106445
    3. '):' → logprob: -5.2612504959106445
    4. ')' → logprob: -10.261250495910645
    5. ' :' → logprob: -10.386250495910645
    6. '):
' → logprob: -10.761250495910645
    7. ' ):' → logprob: -11.011250495910645
    8. ':int' → logprob: -11.261250495910645
    9. ' ,' → logprob: -13.636250495910645
    10. '   ' → logprob: -15.261250495910645

Token 624: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00043126524542458355
    2. ' int' → logprob: -7.750431060791016
    3. ')' → logprob: -14.625431060791016
    4. '[int' → logprob: -17.375431060791016
    5. '(int' → logprob: -17.625431060791016
    6. '
' → logprob: -17.750431060791016
    7. '   ' → logprob: -17.875431060791016
    8. ':int' → logprob: -17.875431060791016
    9. '```' → logprob: -18.750431060791016
    10. ' ' → logprob: -19.000431060791016

Token 625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10137864202260971
    2. '):' → logprob: -2.3513786792755127
    3. ')' → logprob: -7.226378440856934
    4. '):
' → logprob: -7.726378440856934
    5. ' ):' → logprob: -13.976378440856934
    6. '   ' → logprob: -14.226378440856934
    7. ' ,' → logprob: -14.476378440856934
    8. ':' → logprob: -15.101378440856934
    9. '):
' → logprob: -15.351378440856934
    10. '),' → logprob: -15.351378440856934

Token 626: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.3680743873119354
    2. ' edges' → logprob: -1.2430744171142578
    3. 'm' → logprob: -4.493074417114258
    4. ' m' → logprob: -5.868074417114258
    5. 'graph' → logprob: -5.993074417114258
    6. ' graph' → logprob: -6.868074417114258
    7. 'k' → logprob: -6.993074417114258
    8. 'roads' → logprob: -8.493074417114258
    9. ' k' → logprob: -9.118074417114258
    10. 'q' → logprob: -9.118074417114258

Token 627: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012030890211462975
    2. '):' → logprob: -6.7512030601501465
    3. '):
' → logprob: -11.001203536987305
    4. ')' → logprob: -11.376203536987305
    5. '=' → logprob: -13.001203536987305
    6. ' :' → logprob: -14.626203536987305
    7. '}:' → logprob: -15.126203536987305
    8. '```' → logprob: -15.126203536987305
    9. '_:' → logprob: -15.626203536987305
    10. ' ):' → logprob: -15.751203536987305

Token 628: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -4.11996734328568e-05
    2. ' List' → logprob: -10.125041007995605
    3. '[List' → logprob: -14.500041007995605
    4. ')' → logprob: -15.375041007995605
    5. '	List' → logprob: -16.250041961669922
    6. 'list' → logprob: -16.375041961669922
    7. '   ' → logprob: -16.375041961669922
    8. ' ' → logprob: -18.000041961669922
    9. '```' → logprob: -18.000041961669922
    10. '  ' → logprob: -18.625041961669922

Token 629: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '[
' → logprob: -14.875000953674316
    3. '[List' → logprob: -16.125
    4. '<Tuple' → logprob: -16.625
    5. 'Tuple' → logprob: -17.0
    6. '[(' → logprob: -17.0
    7. '):
' → logprob: -17.375
    8. '```' → logprob: -17.75
    9. '[int' → logprob: -18.0
    10. '   ' → logprob: -18.375

Token 630: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -2.057743949990254e-05
    2. ' Tuple' → logprob: -11.000020980834961
    3. '[' → logprob: -12.625020980834961
    4. '   ' → logprob: -14.875020980834961
    5. 'Tu' → logprob: -16.62502098083496
    6. '<Tuple' → logprob: -16.87502098083496
    7. ' ' → logprob: -17.25002098083496
    8. 'List' → logprob: -17.50002098083496
    9. 'tuple' → logprob: -18.00002098083496
    10. '```' → logprob: -18.37502098083496

Token 631: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -5.848420551046729e-05
    2. 'int' → logprob: -9.7500581741333
    3. ']int' → logprob: -16.250059127807617
    4. '(int' → logprob: -17.250059127807617
    5. '<int' → logprob: -17.375059127807617
    6. ',int' → logprob: -17.500059127807617
    7. '	int' → logprob: -20.000059127807617
    8. ' int' → logprob: -20.125059127807617
    9. '])' → logprob: -20.500059127807617
    10. '
' → logprob: -20.500059127807617

Token 632: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023632561787962914
    2. ',int' → logprob: -3.773632526397705
    3. '[int' → logprob: -7.898632526397705
    4. ' ,' → logprob: -11.773633003234863
    5. 'int' → logprob: -12.023633003234863
    6. ',
' → logprob: -14.523633003234863
    7. ']int' → logprob: -15.023633003234863
    8. '<int' → logprob: -15.523633003234863
    9. '```' → logprob: -15.523633003234863
    10. ',Integer' → logprob: -15.523633003234863

Token 633: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5760839581489563
    2. ',int' → logprob: -0.8260839581489563
    3. ' ,' → logprob: -9.32608413696289
    4. 'int' → logprob: -9.95108413696289
    5. ']])' → logprob: -13.20108413696289
    6. ',float' → logprob: -13.70108413696289
    7. ',
' → logprob: -13.70108413696289
    8. ']int' → logprob: -14.32608413696289
    9. ',bool' → logprob: -14.70108413696289
    10. ' int' → logprob: -14.70108413696289

Token 634: ']],' (ID: 37171)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0023359241895377636
    2. ']])' → logprob: -6.627336025238037
    3. ']' → logprob: -7.752336025238037
    4. ')]' → logprob: -7.877336025238037
    5. ']],' → logprob: -8.877335548400879
    6. ']):' → logprob: -10.877335548400879
    7. ')' → logprob: -11.252335548400879
    8. ']]:
' → logprob: -11.502335548400879
    9. ']):
' → logprob: -11.877335548400879
    10. '])' → logprob: -12.252335548400879

Token 635: ' queries' (ID: 32122)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8589065670967102
    2. 'k' → logprob: -1.4839065074920654
    3. 'm' → logprob: -2.2339065074920654
    4. ' q' → logprob: -2.3589065074920654
    5. 'queries' → logprob: -3.3589065074920654
    6. ' queries' → logprob: -4.1089067459106445
    7. 'meet' → logprob: -4.1089067459106445
    8. ' k' → logprob: -4.2339067459106445
    9. ' m' → logprob: -4.2339067459106445
    10. 's' → logprob: -4.9839067459106445

Token 636: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008496518130414188
    2. '):' → logprob: -7.125849723815918
    3. ']:' → logprob: -10.250849723815918
    4. '):
' → logprob: -12.000849723815918
    5. ' :' → logprob: -13.500849723815918
    6. ')' → logprob: -14.375849723815918
    7. '=' → logprob: -14.500849723815918
    8. '}:' → logprob: -14.750849723815918
    9. ' ):' → logprob: -15.500849723815918
    10. ']' → logprob: -16.1258487701416

Token 637: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0001652796781854704
    2. ' List' → logprob: -8.750164985656738
    3. 'int' → logprob: -12.875164985656738
    4. '[List' → logprob: -12.875164985656738
    5. ')' → logprob: -14.125164985656738
    6. '   ' → logprob: -14.875164985656738
    7. '	List' → logprob: -15.125164985656738
    8. '       ' → logprob: -16.875165939331055
    9. '
' → logprob: -17.375165939331055
    10. '):
' → logprob: -17.500165939331055

Token 638: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.931863051955588e-05
    2. '[List' → logprob: -9.875059127807617
    3. '[int' → logprob: -12.000059127807617
    4. '[
' → logprob: -13.625059127807617
    5. '[str' → logprob: -15.375059127807617
    6. '<Tuple' → logprob: -17.000059127807617
    7. '   ' → logprob: -17.125059127807617
    8. ')' → logprob: -17.375059127807617
    9. '[(' → logprob: -17.875059127807617
    10. '	' → logprob: -17.875059127807617

Token 639: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.002373035065829754
    2. 'int' → logprob: -6.127373218536377
    3. 'List' → logprob: -8.627372741699219
    4. ' Tuple' → logprob: -12.252372741699219
    5. 'tuple' → logprob: -13.252372741699219
    6. '[int' → logprob: -14.377372741699219
    7. '[' → logprob: -14.752372741699219
    8. 'Tu' → logprob: -15.127372741699219
    9. '   ' → logprob: -15.502372741699219
    10. '```' → logprob: -15.752372741699219

Token 640: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.1875571544806007e-05
    2. 'int' → logprob: -11.375011444091797
    3. '<int' → logprob: -16.000011444091797
    4. '(int' → logprob: -16.750011444091797
    5. ',int' → logprob: -16.875011444091797
    6. '[List' → logprob: -17.250011444091797
    7. '[' → logprob: -17.625011444091797
    8. '[
' → logprob: -17.625011444091797
    9. ']int' → logprob: -18.250011444091797
    10. '
' → logprob: -18.625011444091797

Token 641: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.0028476715087890625
    2. 'int' → logprob: -6.627847671508789
    3. '[int' → logprob: -6.627847671508789
    4. ',' → logprob: -8.752847671508789
    5. ']int' → logprob: -10.502847671508789
    6. ',List' → logprob: -12.377847671508789
    7. ']])' → logprob: -13.002847671508789
    8. '(int' → logprob: -13.627847671508789
    9. '
' → logprob: -13.877847671508789
    10. '<int' → logprob: -14.627847671508789

Token 642: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.06282468885183334
    2. ']]' → logprob: -3.0628247261047363
    3. ',' → logprob: -4.687824726104736
    4. ']])' → logprob: -6.312824726104736
    5. ']],' → logprob: -6.437824726104736
    6. ']int' → logprob: -7.437824726104736
    7. 'int' → logprob: -7.687824726104736
    8. '[int' → logprob: -8.812824249267578
    9. ']' → logprob: -9.312824249267578
    10. ']]:
' → logprob: -9.687824249267578

Token 643: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.010148894973099232
    2. ')]' → logprob: -5.010149002075195
    3. ']' → logprob: -6.760149002075195
    4. ']])' → logprob: -6.760149002075195
    5. ',' → logprob: -7.760149002075195
    6. ']):
' → logprob: -8.010149002075195
    7. ']]:
' → logprob: -8.510149002075195
    8. ')' → logprob: -10.510149002075195
    9. '])' → logprob: -10.635149002075195
    10. ']):' → logprob: -10.885149002075195

Token 644: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03909260407090187
    2. '):
' → logprob: -3.289092540740967
    3. ')' → logprob: -6.914092540740967
    4. '):
' → logprob: -10.914093017578125
    5. ':' → logprob: -11.039093017578125
    6. ',' → logprob: -11.039093017578125
    7. '   ' → logprob: -12.539093017578125
    8. '       ' → logprob: -14.289093017578125
    9. ' ):' → logprob: -14.414093017578125
    10. '**' → logprob: -14.789093017578125

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015717383939772844
    2. '   ' → logprob: -10.000157356262207
    3. ':' → logprob: -10.500157356262207
    4. '        
' → logprob: -10.500157356262207
    5. '```' → logprob: -11.500157356262207
    6. 'self' → logprob: -11.625157356262207
    7. '
' → logprob: -11.750157356262207
    8. ':
' → logprob: -11.875157356262207
    9. '<|end|>' → logprob: -12.375157356262207
    10. ' self' → logprob: -12.500157356262207

Token 646: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0302873682230711
    2. ' self' → logprob: -3.530287265777588
    3. '       ' → logprob: -7.530287265777588
    4. '	self' → logprob: -16.03028678894043
    5. '   ' → logprob: -16.15528678894043
    6. ' ' → logprob: -17.65528678894043
    7. '```' → logprob: -19.28028678894043
    8. '(self' → logprob: -19.65528678894043
    9. '
' → logprob: -20.03028678894043
    10. 'import' → logprob: -20.40528678894043

Token 647: '.graph' (ID: 18104)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0014203533064574003
    2. '.' → logprob: -6.876420497894287
    3. 'n' → logprob: -8.626420021057129
    4. ' =' → logprob: -10.001420021057129
    5. '.graph' → logprob: -10.001420021057129
    6. '=' → logprob: -10.501420021057129
    7. ' .' → logprob: -10.751420021057129
    8. 'Graph' → logprob: -10.751420021057129
    9. 'self' → logprob: -12.001420021057129
    10. '       ' → logprob: -12.126420021057129

Token 648: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141403377056122
    2. '=' → logprob: -1.7014139890670776
    3. ' ' → logprob: -15.326414108276367
    4. '.' → logprob: -15.701414108276367
    5. '.add' → logprob: -15.951414108276367
    6. '.=' → logprob: -16.076414108276367
    7. '	' → logprob: -16.701414108276367
    8. ':' → logprob: -17.076414108276367
    9. 'import' → logprob: -17.451414108276367
    10. '   ' → logprob: -17.951414108276367

Token 649: ' Graph' (ID: 15559)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.00317783304490149
    2. ' Graph' → logprob: -5.753177642822266
    3. '(Graph' → logprob: -16.628177642822266
    4. 'graph' → logprob: -17.503177642822266
    5. 'Graphs' → logprob: -19.378177642822266
    6. '.Graph' → logprob: -20.253177642822266
    7. '_graph' → logprob: -21.378177642822266
    8. 'raph' → logprob: -21.378177642822266
    9. ' graph' → logprob: -21.628177642822266
    10. '   ' → logprob: -22.503177642822266

Token 650: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.4868770196917467e-05
    2. 'n' → logprob: -10.750024795532227
    3. '(' → logprob: -12.625024795532227
    4. '
' → logprob: -18.375024795532227
    5. '[n' → logprob: -18.375024795532227
    6. '(self' → logprob: -18.625024795532227
    7. ' n' → logprob: -19.375024795532227
    8. ' (' → logprob: -19.375024795532227
    9. '(
' → logprob: -19.375024795532227
    10. '(N' → logprob: -20.125024795532227

Token 651: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47408533096313477
    2. ')' → logprob: -0.9740853309631348
    3. ')
' → logprob: -12.224084854125977
    4. ')

' → logprob: -13.224084854125977
    5. '       ' → logprob: -14.099084854125977
    6. ' )
' → logprob: -14.599084854125977
    7. ' )' → logprob: -16.224084854125977
    8. '   ' → logprob: -16.724084854125977
    9. '),' → logprob: -17.099084854125977
    10. ')add' → logprob: -17.224084854125977

Token 652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020669952500611544
    2. ' for' → logprob: -6.3770670890808105
    3. 'for' → logprob: -8.002066612243652
    4. '<|end|>' → logprob: -10.627066612243652
    5. '	' → logprob: -13.627066612243652
    6. '<|end|>' → logprob: -13.877066612243652
    7. '   ' → logprob: -14.002066612243652
    8. '	for' → logprob: -14.252066612243652
    9. '
' → logprob: -14.502066612243652
    10. ',' → logprob: -14.752066612243652

Token 653: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003939728485420346
    2. ' for' → logprob: -8.000393867492676
    3. '       ' → logprob: -9.750393867492676
    4. '	for' → logprob: -15.875393867492676
    5. '```' → logprob: -16.375394821166992
    6. '   ' → logprob: -19.125394821166992
    7. 'self' → logprob: -19.625394821166992
    8. '               ' → logprob: -20.125394821166992
    9. ' ' → logprob: -20.750394821166992
    10. 'For' → logprob: -21.000394821166992

Token 654: ' (' (ID: 350)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.10680019110441208
    2. '(u' → logprob: -2.356800079345703
    3. ' u' → logprob: -5.106800079345703
    4. ' (' → logprob: -7.606800079345703
    5. '   ' → logprob: -10.981800079345703
    6. '	u' → logprob: -14.106800079345703
    7. '(' → logprob: -14.731800079345703
    8. ' ' → logprob: -14.856800079345703
    9. '_u' → logprob: -14.856800079345703
    10. '[u' → logprob: -15.106800079345703

Token 655: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.8670179997570813e-05
    2. '(u' → logprob: -11.250019073486328
    3. ' u' → logprob: -12.125019073486328
    4. '   ' → logprob: -15.375019073486328
    5. '	u' → logprob: -17.625019073486328
    6. '[u' → logprob: -18.250019073486328
    7. 'a' → logprob: -18.875019073486328
    8. '_u' → logprob: -19.125019073486328
    9. ')' → logprob: -19.125019073486328
    10. '```' → logprob: -19.375019073486328

Token 656: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023929782037157565
    2. ',v' → logprob: -8.750239372253418
    3. ' ,' → logprob: -9.500239372253418
    4. ',u' → logprob: -13.250239372253418
    5. '<|end|>' → logprob: -13.625239372253418
    6. ',w' → logprob: -13.625239372253418
    7. '‌,' → logprob: -14.250239372253418
    8. ',
' → logprob: -15.250239372253418
    9. ',user' → logprob: -15.250239372253418
    10. ',n' → logprob: -16.3752384185791

Token 657: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00863217655569315
    2. ',w' → logprob: -4.758632183074951
    3. ' ,' → logprob: -11.383631706237793
    4. ',u' → logprob: -13.383631706237793
    5. ')' → logprob: -13.508631706237793
    6. 'w' → logprob: -13.883631706237793
    7. ',v' → logprob: -14.383631706237793
    8. ',user' → logprob: -14.758631706237793
    9. ',
' → logprob: -14.883631706237793
    10. ',W' → logprob: -15.883631706237793

Token 658: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005669722449965775
    2. ',' → logprob: -7.6255669593811035
    3. '),' → logprob: -10.000567436218262
    4. ' )' → logprob: -11.000567436218262
    5. ' in' → logprob: -11.625567436218262
    6. ',)' → logprob: -12.125567436218262
    7. '):' → logprob: -13.750567436218262
    8. ')=' → logprob: -15.000567436218262
    9. ')
' → logprob: -15.500567436218262
    10. ' ,' → logprob: -15.875567436218262

Token 659: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055031344294548035
    2. 'in' → logprob: -2.9300312995910645
    3. ',' → logprob: -9.430031776428223
    4. ')' → logprob: -10.305031776428223
    5. '       ' → logprob: -11.430031776428223
    6. '   ' → logprob: -11.680031776428223
    7. '_in' → logprob: -13.180031776428223
    8. '	in' → logprob: -13.180031776428223
    9. '    ' → logprob: -13.305031776428223
    10. '        ' → logprob: -13.305031776428223

Token 660: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0009117019944824278
    2. ' edges' → logprob: -7.000911712646484
    3. 'edge' → logprob: -16.000911712646484
    4. '   ' → logprob: -17.125911712646484
    5. '(edges' → logprob: -17.500911712646484
    6. 'ed' → logprob: -17.625911712646484
    7. '.edges' → logprob: -17.750911712646484
    8. 'Edges' → logprob: -19.250911712646484
    9. ' ' → logprob: -19.875911712646484
    10. '_edges' → logprob: -20.000911712646484

Token 661: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008391400799155235
    2. ':
' → logprob: -4.883391380310059
    3. '       ' → logprob: -7.383391380310059
    4. ',' → logprob: -10.258391380310059
    5. '<|end|>' → logprob: -10.258391380310059
    6. '           ' → logprob: -10.883391380310059
    7. '.' → logprob: -10.883391380310059
    8. '   ' → logprob: -11.758391380310059
    9. ' :' → logprob: -11.758391380310059
    10. '):' → logprob: -11.883391380310059

Token 662: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030969043727964163
    2. ' self' → logprob: -6.253097057342529
    3. '	       ' → logprob: -8.378096580505371
    4. 'self' → logprob: -8.503096580505371
    5. '   ' → logprob: -9.003096580505371
    6. '       ' → logprob: -9.128096580505371
    7. '            
' → logprob: -9.503096580505371
    8. '	self' → logprob: -9.628096580505371
    9. '          ' → logprob: -9.753096580505371
    10. ' ' → logprob: -9.878096580505371

Token 663: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.061970487236976624
    2. ' self' → logprob: -2.8119704723358154
    3. '           ' → logprob: -12.936970710754395
    4. '       ' → logprob: -15.686970710754395
    5. '               ' → logprob: -16.311969757080078
    6. '	self' → logprob: -16.811969757080078
    7. '   ' → logprob: -17.061969757080078
    8. '        ' → logprob: -17.686969757080078
    9. '            ' → logprob: -17.936969757080078
    10. ' ' → logprob: -18.061969757080078

Token 664: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0001322639436693862
    2. '.' → logprob: -9.25013256072998
    3. 'graph' → logprob: -10.75013256072998
    4. '.add' → logprob: -11.50013256072998
    5. '	graph' → logprob: -12.87513256072998
    6. ' graph' → logprob: -14.12513256072998
    7. '_graph' → logprob: -14.75013256072998
    8. ' .' → logprob: -14.87513256072998
    9. '.g' → logprob: -15.75013256072998
    10. '.ad' → logprob: -16.625131607055664

Token 665: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0002084277366520837
    2. '.' → logprob: -8.500208854675293
    3. '.ad' → logprob: -12.375208854675293
    4. '.append' → logprob: -15.125208854675293
    5. ' .' → logprob: -15.500208854675293
    6. ').' → logprob: -16.125207901000977
    7. '   ' → logprob: -17.250207901000977
    8. 'add' → logprob: -17.250207901000977
    9. '.Add' → logprob: -18.125207901000977
    10. '].' → logprob: -18.500207901000977

Token 666: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.9361264946837764e-07
    2. 'edge' → logprob: -16.375
    3. '_' → logprob: -17.0
    4. '_edges' → logprob: -18.125
    5. '_ed' → logprob: -18.625
    6. '_EDGE' → logprob: -19.375
    7. '_e' → logprob: -19.5
    8. '_node' → logprob: -20.125
    9. ' edge' → logprob: -20.875
    10. '(edge' → logprob: -21.0

Token 667: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -3.893480243277736e-05
    2. '(' → logprob: -10.250039100646973
    3. 'u' → logprob: -12.625039100646973
    4. ' (' → logprob: -15.875039100646973
    5. ' u' → logprob: -16.500038146972656
    6. ',u' → logprob: -18.625038146972656
    7. '[u' → logprob: -19.500038146972656
    8. '(
' → logprob: -19.625038146972656
    9. '	u' → logprob: -20.500038146972656
    10. '((' → logprob: -20.625038146972656

Token 668: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022592139430344105
    2. ',v' → logprob: -6.252259254455566
    3. ',u' → logprob: -8.502259254455566
    4. ' ,' → logprob: -9.002259254455566
    5. ',
' → logprob: -13.377259254455566
    6. 'v' → logprob: -14.377259254455566
    7. ')' → logprob: -14.377259254455566
    8. 'u' → logprob: -14.502259254455566
    9. ',w' → logprob: -14.752259254455566
    10. '<|end|>' → logprob: -15.002259254455566

Token 669: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07028529793024063
    2. ',w' → logprob: -2.6952853202819824
    3. ' ,' → logprob: -8.070284843444824
    4. 'w' → logprob: -10.320284843444824
    5. ',
' → logprob: -13.570284843444824
    6. ' w' → logprob: -14.070284843444824
    7. ')' → logprob: -14.820284843444824
    8. ' ' → logprob: -16.44528579711914
    9. ',W' → logprob: -16.44528579711914
    10. ',v' → logprob: -16.57028579711914

Token 670: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.240481914370321e-05
    2. ')
' → logprob: -9.875052452087402
    3. ' )' → logprob: -14.875052452087402
    4. '       ' → logprob: -15.375052452087402
    5. ')return' → logprob: -16.625051498413086
    6. '<|end|>' → logprob: -16.625051498413086
    7. ')

' → logprob: -16.750051498413086
    8. ')#' → logprob: -16.875051498413086
    9. '),' → logprob: -16.875051498413086
    10. ')n' → logprob: -17.375051498413086

Token 671: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008889487362466753
    2. 'self' → logprob: -7.250888824462891
    3. '
' → logprob: -9.25088882446289
    4. ' self' → logprob: -9.50088882446289
    5. '   ' → logprob: -13.25088882446289
    6. '        
' → logprob: -13.25088882446289
    7. '<|end|>' → logprob: -13.50088882446289
    8. '```' → logprob: -13.50088882446289
    9. '           ' → logprob: -15.12588882446289
    10. 's' → logprob: -15.12588882446289

Token 672: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00015681622608099133
    2. ' self' → logprob: -9.50015640258789
    3. '       ' → logprob: -9.62515640258789
    4. '
' → logprob: -11.25015640258789
    5. '        
' → logprob: -13.00015640258789
    6. '   ' → logprob: -15.37515640258789
    7. 'for' → logprob: -16.62515640258789
    8. 's' → logprob: -16.87515640258789
    9. '```' → logprob: -17.25015640258789
    10. ' 
' → logprob: -17.75015640258789

Token 673: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.00013047587708570063
    2. 'l' → logprob: -9.125130653381348
    3. ' =' → logprob: -12.375130653381348
    4. ' .' → logprob: -12.750130653381348
    5. '.L' → logprob: -13.375130653381348
    6. ' l' → logprob: -13.500130653381348
    7. '_l' → logprob: -13.750130653381348
    8. 'L' → logprob: -13.875130653381348
    9. '
' → logprob: -14.000130653381348
    10. '.graph' → logprob: -14.000130653381348

Token 674: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.0013953534653410316
    2. 'CA' → logprob: -7.251395225524902
    3. 'c' → logprob: -7.626395225524902
    4. 'cal' → logprob: -10.251395225524902
    5. '   ' → logprob: -10.751395225524902
    6. ' =' → logprob: -11.251395225524902
    7. '_ca' → logprob: -11.251395225524902
    8. '=' → logprob: -11.376395225524902
    9. '
' → logprob: -11.501395225524902
    10. '```' → logprob: -11.876395225524902

Token 675: '_struct' (ID: 31345)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026302620768547058
    2. '=' → logprob: -3.6513025760650635
    3. ' ' → logprob: -14.526302337646484
    4. 'solver' → logprob: -14.776302337646484
    5. '_solver' → logprob: -14.776302337646484
    6. '=L' → logprob: -14.901302337646484
    7. 'Solver' → logprob: -15.651302337646484
    8. '   ' → logprob: -16.526302337646484
    9. '=new' → logprob: -16.776302337646484
    10. 's' → logprob: -17.276302337646484

Token 676: ' =' (ID: 314)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.002556519117206335
    2. ' =' → logprob: -6.252556324005127
    3. '=' → logprob: -7.377556324005127
    4. 'u' → logprob: -14.127556800842285
    5. 'e' → logprob: -14.127556800842285
    6. 'uture' → logprob: -15.627556800842285
    7. '   ' → logprob: -15.752556800842285
    8. 'ures' → logprob: -15.877556800842285
    9. 'ue' → logprob: -16.00255584716797
    10. '_' → logprob: -16.12755584716797

Token 677: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005233882926404476
    2. ' L' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.630233764648438
    4. '   ' → logprob: -17.755233764648438
    5. 'LC' → logprob: -18.505233764648438
    6. '
' → logprob: -19.255233764648438
    7. 'l' → logprob: -19.255233764648438
    8. '	L' → logprob: -19.505233764648438
    9. '=L' → logprob: -19.630233764648438
    10. '  ' → logprob: -20.630233764648438

Token 678: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.00033784625702537596
    2. 'C' → logprob: -8.000337600708008
    3. '   ' → logprob: -15.250337600708008
    4. 'self' → logprob: -15.375337600708008
    5. ' CA' → logprob: -15.375337600708008
    6. 'A' → logprob: -15.500337600708008
    7. 'ca' → logprob: -15.750337600708008
    8. ' C' → logprob: -16.000337600708008
    9. 'CAE' → logprob: -16.000337600708008
    10. 'CAA' → logprob: -16.250337600708008

Token 679: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. 'self' → logprob: -15.75
    3. '(' → logprob: -15.875
    4. '(
' → logprob: -16.5
    5. '(this' → logprob: -17.375
    6. '(graph' → logprob: -17.75
    7. '(Graph' → logprob: -19.0
    8. ' (' → logprob: -19.375
    9. '(s' → logprob: -19.5
    10. ' self' → logprob: -19.875

Token 680: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -5.200166469876422e-06
    2. 'graph' → logprob: -12.375004768371582
    3. '.' → logprob: -14.125004768371582
    4. '	graph' → logprob: -16.6250057220459
    5. ' .' → logprob: -17.0000057220459
    6. '(graph' → logprob: -17.3750057220459
    7. '.g' → logprob: -17.7500057220459
    8. ' graph' → logprob: -18.1250057220459
    9. '.grid' → logprob: -18.2500057220459
    10. ').' → logprob: -18.7500057220459

Token 681: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05490834265947342
    2. ',' → logprob: -2.929908275604248
    3. ' )' → logprob: -11.554908752441406
    4. '))' → logprob: -12.179908752441406
    5. ',)' → logprob: -12.679908752441406
    6. '<|end|>' → logprob: -13.429908752441406
    7. ' ' → logprob: -13.929908752441406
    8. '),' → logprob: -14.054908752441406
    9. '1' → logprob: -14.054908752441406
    10. ' ,' → logprob: -14.429908752441406

Token 682: ' root' (ID: 6577)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.913265239447355e-05
    2. ' ' → logprob: -9.750099182128906
    3. 'root' → logprob: -10.125099182128906
    4. ' root' → logprob: -15.125099182128906
    5. ')' → logprob: -15.375099182128906
    6. '   ' → logprob: -15.500099182128906
    7. '
' → logprob: -17.500099182128906
    8. '0' → logprob: -17.625099182128906
    9. 'u' → logprob: -18.562599182128906
    10. '```' → logprob: -18.562599182128906

Token 683: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.5107177862082608e-05
    2. '1' → logprob: -10.625024795532227
    3. ')' → logprob: -14.500024795532227
    4. ' =' → logprob: -15.625024795532227
    5. ')=' → logprob: -16.750024795532227
    6. '=
' → logprob: -17.625024795532227
    7. '=u' → logprob: -19.750024795532227
    8. ')
' → logprob: -19.875024795532227
    9. '=self' → logprob: -19.875024795532227
    10. '=sys' → logprob: -20.500024795532227

Token 684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '
' → logprob: -18.5
    4. ')' → logprob: -19.125
    5. '   ' → logprob: -20.125
    6. '۱' → logprob: -21.125
    7. '=' → logprob: -21.25
    8. '１' → logprob: -21.3125
    9. 's' → logprob: -21.375
    10. '(' → logprob: -21.5

Token 685: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.750000953674316
    4. '))' → logprob: -18.0
    5. '       ' → logprob: -18.0
    6. ')

' → logprob: -18.75
    7. ')}' → logprob: -18.875
    8. '<|end|>' → logprob: -19.125
    9. '),' → logprob: -19.25
    10. ')#' → logprob: -20.0

Token 686: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08585906773805618
    2. 'self' → logprob: -3.0858590602874756
    3. '   ' → logprob: -3.8358590602874756
    4. '
' → logprob: -4.585859298706055
    5. 'def' → logprob: -6.210859298706055
    6. ' self' → logprob: -6.960859298706055
    7. '```' → logprob: -7.210859298706055
    8. '<|end|>' → logprob: -7.335859298706055
    9. 's' → logprob: -9.085859298706055
    10. ' ' → logprob: -9.960859298706055

Token 687: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0013619012897834182
    2. '       ' → logprob: -6.751361846923828
    3. ' self' → logprob: -8.876361846923828
    4. 'def' → logprob: -10.376361846923828
    5. '   ' → logprob: -11.001361846923828
    6. 'import' → logprob: -13.626361846923828
    7. 'from' → logprob: -13.751361846923828
    8. '```' → logprob: -14.126361846923828
    9. '
' → logprob: -14.501361846923828
    10. 's' → logprob: -15.126361846923828

Token 688: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02767196297645569
    2. '.query' → logprob: -4.652671813964844
    3. '.questions' → logprob: -5.902671813964844
    4. '.answers' → logprob: -5.902671813964844
    5. '.n' → logprob: -6.152671813964844
    6. '.requests' → logprob: -6.402671813964844
    7. '.graph' → logprob: -6.652671813964844
    8. ' .' → logprob: -6.777671813964844
    9. '.results' → logprob: -7.277671813964844
    10. '.q' → logprob: -7.402671813964844

Token 689: 'queries' (ID: 63909)
  Prédit: 'queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.007413055747747421
    2. 'answers' → logprob: -5.632412910461426
    3. 'n' → logprob: -7.132412910461426
    4. 'query' → logprob: -7.632412910461426
    5. 'process' → logprob: -7.882412910461426
    6. 'answer' → logprob: -7.882412910461426
    7. 'edges' → logprob: -7.882412910461426
    8. 'results' → logprob: -8.382412910461426
    9. 'memo' → logprob: -8.632412910461426
    10. 'dist' → logprob: -9.007412910461426

Token 690: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14269478619098663
    2. '=' → logprob: -2.0176947116851807
    3. '.extend' → logprob: -12.267694473266602
    4. ' ' → logprob: -12.392694473266602
    5. '=[]' → logprob: -12.892694473266602
    6. '<|end|>' → logprob: -13.142694473266602
    7. '.append' → logprob: -13.392694473266602
    8. '.' → logprob: -13.642694473266602
    9. 's' → logprob: -14.642694473266602
    10. ':' → logprob: -14.642694473266602

Token 691: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.0004306692280806601
    2. ' queries' → logprob: -7.750430583953857
    3. 'questions' → logprob: -17.875431060791016
    4. 'query' → logprob: -18.125431060791016
    5. 'quests' → logprob: -20.750431060791016
    6. 'requests' → logprob: -20.875431060791016
    7. '[' → logprob: -21.125431060791016
    8. 'quer' → logprob: -21.625431060791016
    9. '[]' → logprob: -21.750431060791016
    10. '   ' → logprob: -22.125431060791016

Token 692: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024785920977592468
    2. '   ' → logprob: -4.024785995483398
    3. '    
' → logprob: -5.399785995483398
    4. '

' → logprob: -7.274785995483398
    5. '<|end|>' → logprob: -7.274785995483398
    6. 'def' → logprob: -7.524785995483398
    7. '<|end|>' → logprob: -9.274785995483398
    8. '  
' → logprob: -10.774785995483398
    9. ' def' → logprob: -11.024785995483398
    10. '        
' → logprob: -11.399785995483398

Token 693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47829335927963257
    2. '
' → logprob: -1.4782934188842773
    3. 'def' → logprob: -2.4782934188842773
    4. '<|end|>' → logprob: -2.8532934188842773
    5. ' def' → logprob: -5.603293418884277
    6. '    
' → logprob: -5.728293418884277
    7. '<|end|>' → logprob: -6.103293418884277
    8. '

' → logprob: -7.978293418884277
    9. '  
' → logprob: -8.228293418884277
    10. ' ' → logprob: -8.228293418884277

Token 694: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.36574100604048e-06
    2. ' def' → logprob: -12.375004768371582
    3. '
' → logprob: -16.625003814697266
    4. '   ' → logprob: -16.750003814697266
    5. 'from' → logprob: -17.500003814697266
    6. 'import' → logprob: -19.125003814697266
    7. '	def' → logprob: -21.250003814697266
    8. 'self' → logprob: -21.750003814697266
    9. 'class' → logprob: -21.875003814697266
    10. 'de' → logprob: -22.000003814697266

Token 695: ' _' (ID: 1175)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.10017076134681702
    2. ' process' → logprob: -2.850170850753784
    3. 'solve' → logprob: -4.475170612335205
    4. ' def' → logprob: -4.600170612335205
    5. ' run' → logprob: -4.725170612335205
    6. 'process' → logprob: -6.725170612335205
    7. 'def' → logprob: -6.725170612335205
    8. ' can' → logprob: -7.100170612335205
    9. ' answer' → logprob: -7.225170612335205
    10. ' _' → logprob: -7.350170612335205

Token 696: 'dist' (ID: 24126)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.8196164965629578
    2. 'dfs' → logprob: -1.5696165561676025
    3. 'solve' → logprob: -1.6946165561676025
    4. 'distance' → logprob: -2.4446165561676025
    5. 'answer' → logprob: -3.5696165561676025
    6. 'can' → logprob: -4.944616317749023
    7. 'run' → logprob: -4.944616317749023
    8. 'prepare' → logprob: -5.069616317749023
    9. 'build' → logprob: -5.069616317749023
    10. 'compute' → logprob: -5.444616317749023

Token 697: '(self' (ID: 2402)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.0015359314857050776
    2. '(self' → logprob: -7.126535892486572
    3. '_to' → logprob: -8.12653636932373
    4. '(' → logprob: -8.50153636932373
    5. 'ANCE' → logprob: -9.50153636932373
    6. 'anc' → logprob: -10.25153636932373
    7. 'ances' → logprob: -10.50153636932373
    8. '_from' → logprob: -10.75153636932373
    9. '<|end|>' → logprob: -11.50153636932373
    10. '   ' → logprob: -11.87653636932373

Token 698: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030703503638505936
    2. ')' → logprob: -3.905703544616699
    3. 'u' → logprob: -5.905703544616699
    4. ',u' → logprob: -5.905703544616699
    5. '(' → logprob: -6.280703544616699
    6. '(u' → logprob: -7.280703544616699
    7. 'self' → logprob: -7.530703544616699
    8. '(self' → logprob: -7.655703544616699
    9. '):' → logprob: -7.780703544616699
    10. ' ,' → logprob: -8.5307035446167

Token 699: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005125218303874135
    2. ',v' → logprob: -7.875512599945068
    3. ' ,' → logprob: -9.00051212310791
    4. ',u' → logprob: -11.75051212310791
    5. ',int' → logprob: -14.62551212310791
    6. ':' → logprob: -15.62551212310791
    7. ')' → logprob: -16.125513076782227
    8. ' ' → logprob: -16.375513076782227
    9. ',
' → logprob: -16.625513076782227
    10. ',w' → logprob: -16.750513076782227

Token 700: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38715532422065735
    2. '):' → logprob: -1.137155294418335
    3. '):
' → logprob: -8.262155532836914
    4. ':' → logprob: -11.637155532836914
    5. ')->' → logprob: -11.762155532836914
    6. ' )' → logprob: -12.762155532836914
    7. ' ):' → logprob: -12.762155532836914
    8. '):
' → logprob: -13.387155532836914
    9. '):

' → logprob: -14.137155532836914
    10. ')=' → logprob: -15.137155532836914

Token 701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40512987971305847
    2. ' return' → logprob: -1.2801299095153809
    3. 'return' → logprob: -3.030129909515381
    4. ':return' → logprob: -6.280129909515381
    5. ':' → logprob: -6.405129909515381
    6. '	return' → logprob: -7.030129909515381
    7. '   ' → logprob: -7.530129909515381
    8. '	' → logprob: -7.780129909515381
    9. ')' → logprob: -8.405129432678223
    10. ' =' → logprob: -8.655129432678223

Token 702: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2326880693435669
    2. ' return' → logprob: -1.732688069343567
    3. '       ' → logprob: -3.4826879501342773
    4. '	return' → logprob: -10.107687950134277
    5. '
' → logprob: -10.982687950134277
    6. '{return' → logprob: -12.482687950134277
    7. ':return' → logprob: -13.732687950134277
    8. '   ' → logprob: -13.857687950134277
    9. '	' → logprob: -14.482687950134277
    10. '```' → logprob: -14.607687950134277

Token 703: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029750484973192215
    2. ' self' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.90475082397461
    4. '(self' → logprob: -17.40475082397461
    5. '	self' → logprob: -19.15475082397461
    6. '   ' → logprob: -19.65475082397461
    7. '1' → logprob: -19.77975082397461
    8. '0' → logprob: -19.77975082397461
    9. ' ' → logprob: -19.90475082397461
    10. '
' → logprob: -20.02975082397461

Token 704: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0011746286181733012
    2. '.' → logprob: -6.751174449920654
    3. 'l' → logprob: -13.126174926757812
    4. ' .' → logprob: -13.876174926757812
    5. '.dist' → logprob: -14.251174926757812
    6. '`.' → logprob: -15.501174926757812
    7. '.distance' → logprob: -15.751174926757812
    8. '.d' → logprob: -17.126174926757812
    9. '._' → logprob: -17.126174926757812
    10. '.s' → logprob: -17.251174926757812

Token 705: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -2.3676733690081164e-05
    2. 'c' → logprob: -11.00002384185791
    3. 'a' → logprob: -12.25002384185791
    4. 'self' → logprob: -15.75002384185791
    5. '(self' → logprob: -15.75002384185791
    6. '```' → logprob: -15.75002384185791
    7. '`' → logprob: -15.87502384185791
    8. '   ' → logprob: -15.87502384185791
    9. 'case' → logprob: -16.000022888183594
    10. 'cal' → logprob: -16.000022888183594

Token 706: '_struct' (ID: 31345)
  Prédit: '_struct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_struct' → logprob: -0.003768493188545108
    2. '.' → logprob: -6.378768444061279
    3. '._' → logprob: -6.753768444061279
    4. '.distance' → logprob: -7.628768444061279
    5. '.struct' → logprob: -8.128768920898438
    6. '_.' → logprob: -10.503768920898438
    7. '_dist' → logprob: -10.753768920898438
    8. '_STRUCT' → logprob: -11.128768920898438
    9. 'struct' → logprob: -11.253768920898438
    10. '.dist' → logprob: -11.503768920898438

Token 707: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -14.375000953674316
    3. '.dist' → logprob: -15.125000953674316
    4. ' .' → logprob: -16.125001907348633
    5. 'distance' → logprob: -16.750001907348633
    6. '.Distance' → logprob: -17.000001907348633
    7. '(distance' → logprob: -19.375001907348633
    8. '.d' → logprob: -19.625001907348633
    9. '.degree' → logprob: -19.750001907348633
    10. '.frequency' → logprob: -19.875001907348633

Token 708: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.018153922632336617
    2. '(' → logprob: -4.018154144287109
    3. '(user' → logprob: -13.64315414428711
    4. '(
' → logprob: -13.64315414428711
    5. 'u' → logprob: -13.76815414428711
    6. '((' → logprob: -15.26815414428711
    7. ' (' → logprob: -15.76815414428711
    8. '(

' → logprob: -16.01815414428711
    9. '(None' → logprob: -17.76815414428711
    10. '(up' → logprob: -17.89315414428711

Token 709: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.4743466377258301
    2. ',' → logprob: -0.9743466377258301
    3. ' ,' → logprob: -8.224346160888672
    4. 'v' → logprob: -14.599346160888672
    5. ',u' → logprob: -15.224346160888672
    6. ',
' → logprob: -15.474346160888672
    7. ',w' → logprob: -15.849346160888672
    8. ')' → logprob: -15.974346160888672
    9. ',b' → logprob: -16.099346160888672
    10. ' ' → logprob: -16.474346160888672

Token 710: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -13.875000953674316
    3. ' )' → logprob: -16.500001907348633
    4. ')return' → logprob: -18.125001907348633
    5. '))' → logprob: -19.250001907348633
    6. '<|end|>' → logprob: -19.375001907348633
    7. ')

' → logprob: -19.625001907348633
    8. '),' → logprob: -19.750001907348633
    9. '}' → logprob: -19.750001907348633
    10. ')}' → logprob: -19.875001907348633

Token 711: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015579575672745705
    2. '<|end|>' → logprob: -4.390579700469971
    3. '   ' → logprob: -6.765579700469971
    4. 'def' → logprob: -7.140579700469971
    5. '

' → logprob: -7.890579700469971
    6. '    
' → logprob: -8.390579223632812
    7. '<|end|>' → logprob: -8.765579223632812
    8. ' def' → logprob: -8.765579223632812
    9. '  
' → logprob: -9.515579223632812
    10. ' 
' → logprob: -9.640579223632812

Token 712: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015121236210688949
    2. ' def' → logprob: -6.501512050628662
    3. '
' → logprob: -11.62651252746582
    4. '   ' → logprob: -14.12651252746582
    5. '	def' → logprob: -16.50151252746582
    6. 'de' → logprob: -17.12651252746582
    7. 'd' → logprob: -17.87651252746582
    8. ' 
' → logprob: -18.87651252746582
    9. '

' → logprob: -19.50151252746582
    10. '```' → logprob: -19.75151252746582

Token 713: ' _' (ID: 1175)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.32124701142311096
    2. ' process' → logprob: -1.9462469816207886
    3. ' def' → logprob: -2.946247100830078
    4. ' find' → logprob: -3.571247100830078
    5. ' _' → logprob: -4.321247100830078
    6. ' can' → logprob: -4.571247100830078
    7. ' answer' → logprob: -5.321247100830078
    8. ' meeting' → logprob: -5.446247100830078
    9. ' meet' → logprob: -5.696247100830078
    10. ' run' → logprob: -6.071247100830078

Token 714: 'cost' (ID: 33457)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.3319961130619049
    2. 'solve' → logprob: -2.706996202468872
    3. 'dfs' → logprob: -3.081996202468872
    4. 'can' → logprob: -3.456996202468872
    5. 'meet' → logprob: -3.456996202468872
    6. 'check' → logprob: -3.581996202468872
    7. 'answer' → logprob: -3.581996202468872
    8. 'find' → logprob: -4.456995964050293
    9. 'query' → logprob: -4.706995964050293
    10. 'get' → logprob: -5.581995964050293

Token 715: '_for' (ID: 11903)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004216824658215046
    2. '(' → logprob: -5.50421667098999
    3. '(u' → logprob: -9.629217147827148
    4. '(s' → logprob: -10.379217147827148
    5. ' (' → logprob: -10.879217147827148
    6. 'self' → logprob: -12.004217147827148
    7. '   ' → logprob: -12.879217147827148
    8. 's' → logprob: -13.254217147827148
    9. '(
' → logprob: -13.254217147827148
    10. ' ' → logprob: -13.879217147827148

Token 716: '_theme' (ID: 47076)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6407265663146973
    2. 'query' → logprob: -1.5157265663146973
    3. 'node' → logprob: -3.0157265663146973
    4. '_query' → logprob: -3.1407265663146973
    5. '(self' → logprob: -3.3907265663146973
    6. 'meeting' → logprob: -3.6407265663146973
    7. 'all' → logprob: -4.390726566314697
    8. '_node' → logprob: -4.390726566314697
    9. 'path' → logprob: -4.890726566314697
    10. 'each' → logprob: -5.015726566314697

Token 717: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009775519138202071
    2. '(' → logprob: -7.250977516174316
    3. '(s' → logprob: -9.250977516174316
    4. '_(' → logprob: -10.000977516174316
    5. 'self' → logprob: -10.125977516174316
    6. '_theme' → logprob: -10.250977516174316
    7. '_' → logprob: -11.000977516174316
    8. 's' → logprob: -11.250977516174316
    9. ' (' → logprob: -11.375977516174316
    10. '(
' → logprob: -13.875977516174316

Token 718: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026171403005719185
    2. ' ,' → logprob: -4.1511712074279785
    3. 'self' → logprob: -5.1511712074279785
    4. ',self' → logprob: -6.2761712074279785
    5. '(self' → logprob: -6.7761712074279785
    6. ',u' → logprob: -7.5261712074279785
    7. ')' → logprob: -8.276171684265137
    8. '_,' → logprob: -9.526171684265137
    9. 's' → logprob: -9.776171684265137
    10. ' (' → logprob: -9.776171684265137

Token 719: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6913959980010986
    2. ' self' → logprob: -1.6913959980010986
    3. ' theme' → logprob: -1.6913959980010986
    4. 'theme' → logprob: -2.4413959980010986
    5. 'u' → logprob: -4.4413957595825195
    6. ' u' → logprob: -4.5663957595825195
    7. '   ' → logprob: -4.9413957595825195
    8. 'user' → logprob: -6.5663957595825195
    9. 's' → logprob: -6.8788957595825195
    10. ' s' → logprob: -7.1288957595825195

Token 720: ':int' (ID: 30362)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016129737719893456
    2. ' ,' → logprob: -4.516129970550537
    3. ':' → logprob: -6.266129970550537
    4. ',u' → logprob: -6.516129970550537
    5. ',b' → logprob: -7.016129970550537
    6. ',a' → logprob: -9.141129493713379
    7. ',v' → logprob: -9.391129493713379
    8. ':int' → logprob: -9.391129493713379
    9. ',n' → logprob: -9.641129493713379
    10. ',int' → logprob: -9.766129493713379

Token 721: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041732576210051775
    2. ' ,' → logprob: -8.000417709350586
    3. ',b' → logprob: -10.125417709350586
    4. ',u' → logprob: -11.125417709350586
    5. ',int' → logprob: -12.000417709350586
    6. ',a' → logprob: -12.375417709350586
    7. ',
' → logprob: -12.375417709350586
    8. ',v' → logprob: -12.375417709350586
    9. ')' → logprob: -12.750417709350586
    10. '<|end|>' → logprob: -14.000417709350586

Token 722: ':int' (ID: 30362)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15515586733818054
    2. ':int' → logprob: -2.780155897140503
    3. ',int' → logprob: -2.905155897140503
    4. ':' → logprob: -3.780155897140503
    5. ',c' → logprob: -6.280155658721924
    6. ',b' → logprob: -7.280155658721924
    7. ' ,' → logprob: -7.280155658721924
    8. ',
' → logprob: -8.780156135559082
    9. ')' → logprob: -8.780156135559082
    10. ',a' → logprob: -9.405156135559082

Token 723: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.024494096636772156
    2. ',' → logprob: -3.774494171142578
    3. ',int' → logprob: -7.274494171142578
    4. ' ,' → logprob: -8.149494171142578
    5. ',k' → logprob: -9.274494171142578
    6. ')' → logprob: -10.274494171142578
    7. ',a' → logprob: -10.524494171142578
    8. ',x' → logprob: -11.149494171142578
    9. ',b' → logprob: -11.274494171142578
    10. 'c' → logprob: -11.649494171142578

Token 724: ':int' (ID: 30362)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5654382705688477
    2. ',' → logprob: -1.6904382705688477
    3. ':' → logprob: -1.6904382705688477
    4. ')' → logprob: -3.4404382705688477
    5. '):
' → logprob: -3.6904382705688477
    6. ':int' → logprob: -5.565438270568848
    7. ',int' → logprob: -7.190438270568848
    8. ',
' → logprob: -7.690438270568848
    9. '<|end|>' → logprob: -9.065438270568848
    10. '):

' → logprob: -9.190438270568848

Token 725: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6676740646362305
    2. ')' → logprob: -0.9176740646362305
    3. '):
' → logprob: -2.7926740646362305
    4. ',' → logprob: -3.6676740646362305
    5. ')->' → logprob: -8.29267406463623
    6. ' ):' → logprob: -8.66767406463623
    7. ' )' → logprob: -8.79267406463623
    8. '):
' → logprob: -9.16767406463623
    9. ':' → logprob: -9.66767406463623
    10. '   ' → logprob: -10.16767406463623

Token 726: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017553119687363505
    2. ' :' → logprob: -9.500175476074219
    3. '):' → logprob: -9.750175476074219
    4. ':
' → logprob: -10.875175476074219
    5. ' ->' → logprob: -11.750175476074219
    6. ':return' → logprob: -12.125175476074219
    7. '->' → logprob: -12.250175476074219
    8. ':def' → logprob: -13.125175476074219
    9. '():' → logprob: -14.125175476074219
    10. ',' → logprob: -14.250175476074219

Token 727: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011050770990550518
    2. ' int' → logprob: -4.511050701141357
    3. ' ' → logprob: -14.011051177978516
    4. '[int' → logprob: -14.386051177978516
    5. '   ' → logprob: -14.886051177978516
    6. '	int' → logprob: -15.011051177978516
    7. '(int' → logprob: -15.136051177978516
    8. 'List' → logprob: -15.261051177978516
    9. '  ' → logprob: -16.511051177978516
    10. ':int' → logprob: -16.761051177978516

Token 728: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002820736262947321
    2. ':
' → logprob: -8.875282287597656
    3. '):' → logprob: -9.000282287597656
    4. ')' → logprob: -12.125282287597656
    5. ',' → logprob: -12.625282287597656
    6. ':return' → logprob: -12.625282287597656
    7. '   ' → logprob: -13.250282287597656
    8. '):
' → logprob: -13.875282287597656
    9. ':def' → logprob: -14.000282287597656
    10. '():' → logprob: -14.125282287597656

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047726318007335067
    2. 'd' → logprob: -8.125476837158203
    3. '   ' → logprob: -9.500476837158203
    4. '```' → logprob: -10.750476837158203
    5. '        
' → logprob: -10.875476837158203
    6. 'dist' → logprob: -11.125476837158203
    7. 'cost' → logprob: -11.875476837158203
    8. 't' → logprob: -12.000476837158203
    9. 'x' → logprob: -12.125476837158203
    10. '    
' → logprob: -12.500476837158203

Token 730: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6931236982345581
    2. 'd' → logprob: -1.568123698234558
    3. 'res' → logprob: -2.3181238174438477
    4. 'min' → logprob: -2.6931238174438477
    5. 'ab' → logprob: -3.6931238174438477
    6. 'return' → logprob: -4.068123817443848
    7. '   ' → logprob: -4.318123817443848
    8. 'x' → logprob: -4.568123817443848
    9. 'best' → logprob: -4.568123817443848
    10. 'cost' → logprob: -4.693123817443848

Token 731: ' Candidates' (ID: 78386)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2020344734191895
    2. 'dist' → logprob: -1.2020344734191895
    3. 'dab' → logprob: -1.4520344734191895
    4. 'ab' → logprob: -2.9520344734191895
    5. '#' → logprob: -3.4520344734191895
    6. 'res' → logprob: -4.5770344734191895
    7. 'cost' → logprob: -4.5770344734191895
    8. 'x' → logprob: -4.7020344734191895
    9. 'def' → logprob: -5.2020344734191895
    10. 'da' → logprob: -5.4520344734191895

Token 732: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6871187090873718
    2. ' =' → logprob: -1.0621187686920166
    3. 'points' → logprob: -2.6871187686920166
    4. '
' → logprob: -3.0621187686920166
    5. '=' → logprob: -4.5621185302734375
    6. 'cost' → logprob: -5.4371185302734375
    7. 'dist' → logprob: -6.3121185302734375
    8. ':
' → logprob: -6.4371185302734375
    9. '   ' → logprob: -6.5621185302734375
    10. ' candidates' → logprob: -6.6871185302734375

Token 733: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8581200242042542
    2. 'cost' → logprob: -1.2331199645996094
    3. ' min' → logprob: -2.9831199645996094
    4. 'dist' → logprob: -3.1081199645996094
    5. 'self' → logprob: -3.8581199645996094
    6. 'd' → logprob: -3.8581199645996094
    7. 'paths' → logprob: -3.9831199645996094
    8. 'ans' → logprob: -4.108119964599609
    9. '[
' → logprob: -4.233119964599609
    10. ' cost' → logprob: -4.358119964599609

Token 734: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.19372788071632385
    2. ' cost' → logprob: -2.443727970123291
    3. 'dist' → logprob: -3.568727970123291
    4. 'return' → logprob: -3.693727970123291
    5. ' return' → logprob: -4.318727970123291
    6. '_cost' → logprob: -4.693727970123291
    7. 'distance' → logprob: -5.693727970123291
    8. ' dist' → logprob: -6.443727970123291
    9. ' =' → logprob: -6.943727970123291
    10. '   ' → logprob: -7.318727970123291

Token 735: ' meeting' (ID: 9176)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.632514238357544
    2. '       ' → logprob: -1.007514238357544
    3. '
' → logprob: -3.257514238357544
    4. ':' → logprob: -3.632514238357544
    5. '=' → logprob: -4.882513999938965
    6. '        
' → logprob: -4.882513999938965
    7. ',' → logprob: -5.007513999938965
    8. ':
' → logprob: -5.257513999938965
    9. ' candidates' → logprob: -6.257513999938965
    10. '[
' → logprob: -6.632513999938965

Token 736: ' city' (ID: 5030)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7595474123954773
    2. '=' → logprob: -1.384547472000122
    3. 'points' → logprob: -1.509547472000122
    4. 'point' → logprob: -4.009547233581543
    5. 'cost' → logprob: -5.134547233581543
    6. '_points' → logprob: -5.134547233581543
    7. ' points' → logprob: -5.259547233581543
    8. 'nodes' → logprob: -5.259547233581543
    9. 'dist' → logprob: -6.259547233581543
    10. '   ' → logprob: -6.259547233581543

Token 737: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45985180139541626
    2. '
' → logprob: -1.4598517417907715
    3. ' =' → logprob: -2.8348517417907715
    4. 'points' → logprob: -4.0848517417907715
    5. ':
' → logprob: -4.7098517417907715
    6. ':' → logprob: -4.8348517417907715
    7. 'cities' → logprob: -4.9598517417907715
    8. '=' → logprob: -5.3348517417907715
    9. ' candidates' → logprob: -5.4598517417907715
    10. ',' → logprob: -5.5848517417907715

Token 738: ' limited' (ID: 9913)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.2850896120071411
    2. '[
' → logprob: -1.7850896120071411
    3. '[' → logprob: -3.4100894927978516
    4. ' [' → logprob: -3.6600894927978516
    5. ' [
' → logprob: -4.660089492797852
    6. '[u' → logprob: -5.160089492797852
    7. '[self' → logprob: -5.910089492797852
    8. '[min' → logprob: -6.660089492797852
    9. '[b' → logprob: -7.410089492797852
    10. '[]
' → logprob: -7.785089492797852

Token 739: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8241739273071289
    2. 'cities' → logprob: -1.699173927307129
    3. ' cities' → logprob: -2.574173927307129
    4. ' to' → logprob: -2.699173927307129
    5. '[' → logprob: -2.949173927307129
    6. ' =' → logprob: -3.449173927307129
    7. '   ' → logprob: -3.824173927307129
    8. '=[' → logprob: -3.824173927307129
    9. ':' → logprob: -3.949173927307129
    10. ' [' → logprob: -4.199173927307129

Token 740: ' a' (ID: 261)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.040829602628946304
    2. 'a' → logprob: -3.790829658508301
    3. '{' → logprob: -5.165829658508301
    4. ' [' → logprob: -5.415829658508301
    5. '[u' → logprob: -5.415829658508301
    6. '[' → logprob: -6.415829658508301
    7. '[
' → logprob: -7.415829658508301
    8. ' {' → logprob: -8.2908296585083
    9. ' a' → logprob: -8.5408296585083
    10. 'set' → logprob: -9.9158296585083

Token 741: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5822674632072449
    2. ',b' → logprob: -1.0822675228118896
    3. '{' → logprob: -3.4572675228118896
    4. ',a' → logprob: -3.8322675228118896
    5. '[a' → logprob: -3.8322675228118896
    6. 'a' → logprob: -4.7072672843933105
    7. '[' → logprob: -4.9572672843933105
    8. ' {' → logprob: -5.7072672843933105
    9. ' [' → logprob: -6.2072672843933105
    10. 'b' → logprob: -6.4572672843933105

Token 742: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.6434748768806458
    2. ',' → logprob: -0.7684748768806458
    3. ' and' → logprob: -5.51847505569458
    4. ',v' → logprob: -6.01847505569458
    5. ' ,' → logprob: -6.14347505569458
    6. 'and' → logprob: -6.76847505569458
    7. 'c' → logprob: -8.143474578857422
    8. ' or' → logprob: -8.518474578857422
    9. ',b' → logprob: -8.893474578857422
    10. ',
' → logprob: -9.018474578857422

Token 743: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36048734188079834
    2. '
' → logprob: -1.4854873418807983
    3. ',' → logprob: -2.860487461090088
    4. ':' → logprob: -5.985487461090088
    5. ',
' → logprob: -5.985487461090088
    6. ':
' → logprob: -6.235487461090088
    7. '        
' → logprob: -6.360487461090088
    8. ' candidates' → logprob: -6.485487461090088
    9. 'tokens' → logprob: -6.485487461090088
    10. '   ' → logprob: -6.735487461090088

Token 744: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07195843756198883
    2. ' self' → logprob: -2.821958541870117
    3. '[
' → logprob: -5.821958541870117
    4. '[self' → logprob: -5.946958541870117
    5. ' their' → logprob: -6.446958541870117
    6. ' [' → logprob: -7.571958541870117
    7. 'l' → logprob: -7.821958541870117
    8. 'their' → logprob: -7.821958541870117
    9. ' the' → logprob: -8.071958541870117
    10. '[' → logprob: -8.196958541870117

Token 745: ' L' (ID: 451)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5201119780540466
    2. ' l' → logprob: -1.0201120376586914
    3. ' L' → logprob: -4.395112037658691
    4. '
' → logprob: -4.895112037658691
    5. '   ' → logprob: -5.020112037658691
    6. 'a' → logprob: -5.520112037658691
    7. 'L' → logprob: -5.520112037658691
    8. 'c' → logprob: -5.895112037658691
    9. 'self' → logprob: -6.270112037658691
    10. ' ' → logprob: -7.020112037658691

Token 746: 'CA' (ID: 6781)
  Prédit: 'ca'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.2862934470176697
    2. 'c' → logprob: -1.4112935066223145
    3. '   ' → logprob: -6.6612935066223145
    4. 'a' → logprob: -6.9112935066223145
    5. ' c' → logprob: -7.6612935066223145
    6. '
' → logprob: -7.7862935066223145
    7. '	c' → logprob: -8.036293029785156
    8. ' ca' → logprob: -8.536293029785156
    9. 'CA' → logprob: -8.786293029785156
    10. 'case' → logprob: -9.161293029785156

Token 747: ' nodes' (ID: 15749)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.8022804260253906
    2. '(' → logprob: -1.1772804260253906
    3. ' =' → logprob: -2.8022804260253906
    4. '(l' → logprob: -3.1772804260253906
    5. ' (' → logprob: -3.6772804260253906
    6. '
' → logprob: -3.8022804260253906
    7. '(self' → logprob: -4.427280426025391
    8. ',' → logprob: -4.677280426025391
    9. 's' → logprob: -4.927280426025391
    10. '   ' → logprob: -5.302280426025391

Token 748: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6192751526832581
    2. '
' → logprob: -1.1192750930786133
    3. ' =' → logprob: -2.9942750930786133
    4. '        
' → logprob: -3.8692750930786133
    5. 's' → logprob: -4.619275093078613
    6. '(' → logprob: -4.744275093078613
    7. ',' → logprob: -4.869275093078613
    8. '   ' → logprob: -5.619275093078613
    9. ' 
' → logprob: -5.619275093078613
    10. '(
' → logprob: -5.619275093078613

Token 749: ' pairs' (ID: 24702)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.291395366191864
    2. 'a' → logprob: -2.166395425796509
    3. ' (' → logprob: -2.916395425796509
    4. 'pairs' → logprob: -3.416395425796509
    5. ' pairs' → logprob: -3.666395425796509
    6. ' a' → logprob: -4.66639518737793
    7. 'ab' → logprob: -5.41639518737793
    8. 'the' → logprob: -5.41639518737793
    9. ' the' → logprob: -6.16639518737793
    10. '   ' → logprob: -7.16639518737793

Token 750: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.554096519947052
    2. '(
' → logprob: -1.6790964603424072
    3. ',' → logprob: -2.5540964603424072
    4. '(' → logprob: -2.6790964603424072
    5. '   ' → logprob: -4.054096698760986
    6. ':' → logprob: -4.304096698760986
    7. '
' → logprob: -4.304096698760986
    8. ' (' → logprob: -4.554096698760986
    9. '        
' → logprob: -4.804096698760986
    10. ',
' → logprob: -4.929096698760986

Token 751: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06776873767375946
    2. '(a' → logprob: -2.9427688121795654
    3. ' (' → logprob: -4.817768573760986
    4. ' a' → logprob: -5.692768573760986
    5. ')' → logprob: -8.067769050598145
    6. ',' → logprob: -8.442769050598145
    7. '   ' → logprob: -8.442769050598145
    8. '(u' → logprob: -9.067769050598145
    9. '(' → logprob: -9.192769050598145
    10. '),' → logprob: -9.567769050598145

Token 752: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2153051197528839
    2. ',a' → logprob: -2.4653050899505615
    3. '),' → logprob: -2.8403050899505615
    4. ' ,' → logprob: -4.215305328369141
    5. ',b' → logprob: -4.715305328369141
    6. '),(' → logprob: -4.840305328369141
    7. 'a' → logprob: -4.965305328369141
    8. ',),' → logprob: -5.465305328369141
    9. ')' → logprob: -5.965305328369141
    10. ',)' → logprob: -7.090305328369141

Token 753: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08167698234319687
    2. '),(' → logprob: -2.956676959991455
    3. ',' → logprob: -4.331676959991455
    4. ')' → logprob: -4.456676959991455
    5. ',c' → logprob: -6.831676959991455
    6. '),
' → logprob: -8.081677436828613
    7. ' ),' → logprob: -9.831677436828613
    8. ',),' → logprob: -10.081677436828613
    9. '   ' → logprob: -10.456677436828613
    10. '),

' → logprob: -10.706677436828613

Token 754: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10188477486371994
    2. ' (' → logprob: -2.3518848419189453
    3. '       ' → logprob: -7.476884841918945
    4. 'a' → logprob: -7.601884841918945
    5. '(b' → logprob: -8.101884841918945
    6. '   ' → logprob: -9.351884841918945
    7. '(' → logprob: -9.601884841918945
    8. '(c' → logprob: -10.476884841918945
    9. '#' → logprob: -10.726884841918945
    10. '           ' → logprob: -10.976884841918945

Token 755: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25292110443115234
    2. 'b' → logprob: -1.5029211044311523
    3. ' a' → logprob: -8.252921104431152
    4. ',' → logprob: -8.502921104431152
    5. ' b' → logprob: -8.627921104431152
    6. 'c' → logprob: -8.627921104431152
    7. '),' → logprob: -10.252921104431152
    8. ' ' → logprob: -10.502921104431152
    9. '```' → logprob: -10.502921104431152
    10. ',b' → logprob: -11.002921104431152

Token 756: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.009271367453038692
    2. ',' → logprob: -4.884271144866943
    3. ',a' → logprob: -6.884271144866943
    4. '),' → logprob: -7.759271144866943
    5. ' ,' → logprob: -9.759271621704102
    6. '),(' → logprob: -9.759271621704102
    7. ',
' → logprob: -11.259271621704102
    8. 'c' → logprob: -11.259271621704102
    9. ',),' → logprob: -11.259271621704102
    10. ')' → logprob: -11.384271621704102

Token 757: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06998534500598907
    2. ')' → logprob: -3.3199853897094727
    3. ',' → logprob: -3.6949853897094727
    4. '),(' → logprob: -5.069985389709473
    5. 'and' → logprob: -9.569985389709473
    6. ' ),' → logprob: -9.569985389709473
    7. ',),' → logprob: -10.069985389709473
    8. ' ,' → logprob: -10.819985389709473
    9. '),
' → logprob: -10.944985389709473
    10. ' and' → logprob: -11.194985389709473

Token 758: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4335240125656128
    2. '(a' → logprob: -1.0585240125656128
    3. ' and' → logprob: -6.058524131774902
    4. '       ' → logprob: -6.683524131774902
    5. 'and' → logprob: -7.808524131774902
    6. '(u' → logprob: -8.183524131774902
    7. '(' → logprob: -8.558524131774902
    8. '#' → logprob: -9.058524131774902
    9. '(c' → logprob: -9.808524131774902
    10. '   ' → logprob: -10.183524131774902

Token 759: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0064780451357364655
    2. 'c' → logprob: -5.1314778327941895
    3. ' a' → logprob: -7.6314778327941895
    4. ',a' → logprob: -10.506478309631348
    5. ' c' → logprob: -10.756478309631348
    6. ',' → logprob: -12.631478309631348
    7. '   ' → logprob: -12.756478309631348
    8. ',c' → logprob: -12.756478309631348
    9. '(a' → logprob: -13.881478309631348
    10. ' ' → logprob: -13.881478309631348

Token 760: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.10323110222816467
    2. ',a' → logprob: -2.603231191635132
    3. ',' → logprob: -4.103230953216553
    4. '),' → logprob: -5.228230953216553
    5. '),(' → logprob: -7.103230953216553
    6. 'c' → logprob: -7.853230953216553
    7. ')' → logprob: -7.853230953216553
    8. 'a' → logprob: -8.103231430053711
    9. ',b' → logprob: -9.228231430053711
    10. ' ,' → logprob: -9.853231430053711

Token 761: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.22870363295078278
    2. ')' → logprob: -1.6037036180496216
    3. '):
' → logprob: -6.353703498840332
    4. ')
' → logprob: -7.228703498840332
    5. '):' → logprob: -8.228703498840332
    6. ',' → logprob: -8.603703498840332
    7. '   ' → logprob: -9.478703498840332
    8. '       ' → logprob: -9.853703498840332
    9. ')`
' → logprob: -9.978703498840332
    10. ' )
' → logprob: -10.103703498840332

Token 762: '        ' (ID: 269)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5655834078788757
    2. '
' → logprob: -0.9405834078788757
    3. ',' → logprob: -4.690583229064941
    4. '        
' → logprob: -4.815583229064941
    5. ':' → logprob: -5.565583229064941
    6. '    
' → logprob: -5.815583229064941
    7. '   ' → logprob: -5.940583229064941
    8. '```' → logprob: -5.940583229064941
    9. '\' → logprob: -6.315583229064941
    10. ' candidates' → logprob: -6.440583229064941

Token 763: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13787083327770233
    2. '
' → logprob: -2.1378707885742188
    3. '        
' → logprob: -5.012870788574219
    4. '    
' → logprob: -7.262870788574219
    5. ' candidates' → logprob: -7.387870788574219
    6. '   ' → logprob: -7.762870788574219
    7. '  
' → logprob: -8.262870788574219
    8. '
' → logprob: -8.262870788574219
    9. ',' → logprob: -8.637870788574219
    10. '```' → logprob: -8.762870788574219

Token 764: ' because' (ID: 2236)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12373922765254974
    2. '
' → logprob: -3.248739242553711
    3. ' candidates' → logprob: -3.623739242553711
    4. '   ' → logprob: -4.873739242553711
    5. 'c' → logprob: -4.873739242553711
    6. 'l' → logprob: -4.998739242553711
    7. '        
' → logprob: -5.123739242553711
    8. 'cand' → logprob: -5.123739242553711
    9. ' l' → logprob: -5.373739242553711
    10. '    
' → logprob: -6.248739242553711

Token 765: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1074499636888504
    2. '        ' → logprob: -3.482450008392334
    3. ' there' → logprob: -4.232450008392334
    4. '       ' → logprob: -4.732450008392334
    5. 'the' → logprob: -4.857450008392334
    6. ' #' → logprob: -4.982450008392334
    7. ' l' → logprob: -5.357450008392334
    8. ' they' → logprob: -5.607450008392334
    9. ' any' → logprob: -5.732450008392334
    10. ' L' → logprob: -5.857450008392334

Token 766: ' minimal' (ID: 19957)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9058704972267151
    2. ' l' → logprob: -2.1558704376220703
    3. 'l' → logprob: -2.2808704376220703
    4. 'possible' → logprob: -2.6558704376220703
    5. '#' → logprob: -3.0308704376220703
    6. ' #' → logprob: -3.1558704376220703
    7. ' candidates' → logprob: -3.2808704376220703
    8. ' best' → logprob: -3.4058704376220703
    9. ' possible' → logprob: -3.5308704376220703
    10. ' minimal' → logprob: -4.03087043762207

Token 767: ' maximum' (ID: 10562)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.26985451579093933
    2. ' meeting' → logprob: -2.5198545455932617
    3. 'cost' → logprob: -2.6448545455932617
    4. ' distance' → logprob: -3.6448545455932617
    5. ' ' → logprob: -5.019854545593262
    6. '_cost' → logprob: -5.269854545593262
    7. ' set' → logprob: -5.269854545593262
    8. ' nodes' → logprob: -5.269854545593262
    9. 'distance' → logprob: -5.519854545593262
    10. ' candidates' → logprob: -5.644854545593262

Token 768: ' distances' (ID: 48294)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.2639516592025757
    2. ' cost' → logprob: -2.2639517784118652
    3. 'distance' → logprob: -2.3889517784118652
    4. 'cost' → logprob: -5.388951778411865
    5. ' path' → logprob: -5.388951778411865
    6. ' max' → logprob: -5.513951778411865
    7. '_distance' → logprob: -5.513951778411865
    8. ' meeting' → logprob: -5.638951778411865
    9. ' ' → logprob: -6.138951778411865
    10. 'max' → logprob: -6.763951778411865

Token 769: ' happen' (ID: 5659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16080984473228455
    2. '
' → logprob: -2.5358097553253174
    3. '        
' → logprob: -3.4108097553253174
    4. ',' → logprob: -5.0358099937438965
    5. '   ' → logprob: -5.0358099937438965
    6. ':' → logprob: -5.2858099937438965
    7. '        ' → logprob: -5.6608099937438965
    8. '    
' → logprob: -6.0358099937438965
    9. ')' → logprob: -6.7858099937438965
    10. ':
' → logprob: -6.9108099937438965

Token 770: ' around' (ID: 2846)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24578586220741272
    2. ' at' → logprob: -1.7457858324050903
    3. '        ' → logprob: -4.620785713195801
    4. '       ' → logprob: -4.870785713195801
    5. 'to' → logprob: -5.495785713195801
    6. '    ' → logprob: -5.620785713195801
    7. '   ' → logprob: -5.870785713195801
    8. ' between' → logprob: -5.995785713195801
    9. ' ' → logprob: -6.245785713195801
    10. ' around' → logprob: -6.245785713195801

Token 771: ' these' (ID: 1879)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7233714461326599
    2. ' these' → logprob: -1.4733715057373047
    3. 'the' → logprob: -1.9733715057373047
    4. ' those' → logprob: -2.8483715057373047
    5. '       ' → logprob: -3.7233715057373047
    6. ' L' → logprob: -3.9733715057373047
    7. 'these' → logprob: -3.9733715057373047
    8. '   ' → logprob: -4.598371505737305
    9. 'those' → logprob: -5.223371505737305
    10. ' l' → logprob: -5.848371505737305

Token 772: ' junction' (ID: 79550)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.7552208304405212
    2. 'nodes' → logprob: -1.755220890045166
    3. ' points' → logprob: -1.880220890045166
    4. '   ' → logprob: -3.005220890045166
    5. 'points' → logprob: -3.380220890045166
    6. '       ' → logprob: -3.755220890045166
    7. 'c' → logprob: -4.005220890045166
    8. '_nodes' → logprob: -4.130220890045166
    9. '
' → logprob: -4.380220890045166
    10. 'l' → logprob: -4.755220890045166

Token 773: ' points' (ID: 5571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6368464231491089
    2. 's' → logprob: -1.5118464231491089
    3. ' points' → logprob: -2.7618465423583984
    4. '   ' → logprob: -2.8868465423583984
    5. 'points' → logprob: -3.0118465423583984
    6. '_points' → logprob: -3.5118465423583984
    7. 'oints' → logprob: -4.511846542358398
    8. '           ' → logprob: -5.011846542358398
    9. '_nodes' → logprob: -5.261846542358398
    10. '        ' → logprob: -5.761846542358398

Token 774: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7385410666465759
    2. '       ' → logprob: -0.7385410666465759
    3. '        
' → logprob: -3.2385411262512207
    4. '    
' → logprob: -6.238541126251221
    5. '  
' → logprob: -7.363541126251221
    6. '
' → logprob: -7.863541126251221
    7. ' 
' → logprob: -8.113540649414062
    8. ',' → logprob: -8.238540649414062
    9. '   ' → logprob: -8.363540649414062
    10. '
        
' → logprob: -8.738540649414062

Token 775: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5565429329872131
    2. '       ' → logprob: -0.9315429329872131
    3. '        
' → logprob: -3.5565428733825684
    4. '    
' → logprob: -6.431542873382568
    5. '<|end|>' → logprob: -7.806542873382568
    6. ' 
' → logprob: -7.931542873382568
    7. '        ' → logprob: -8.181543350219727
    8. '  
' → logprob: -8.431543350219727
    9. '```' → logprob: -8.681543350219727
    10. '\' → logprob: -8.806543350219727

Token 776: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.101211778819561
    2. ' candidates' → logprob: -3.3512117862701416
    3. '
' → logprob: -3.7262117862701416
    4. 'c' → logprob: -4.2262115478515625
    5. '        
' → logprob: -5.6012115478515625
    6. ' l' → logprob: -5.6012115478515625
    7. 'candidate' → logprob: -5.8512115478515625
    8. 'l' → logprob: -6.1012115478515625
    9. 'cand' → logprob: -6.1012115478515625
    10. '        ' → logprob: -6.4762115478515625

Token 777: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011051828041672707
    2. '=' → logprob: -4.511051654815674
    3. ':' → logprob: -13.136052131652832
    4. ' =[' → logprob: -13.511052131652832
    5. ' ' → logprob: -14.761052131652832
    6. '=[' → logprob: -15.511052131652832
    7. 's' → logprob: -17.761051177978516
    8. ' :' → logprob: -19.011051177978516
    9. '[' → logprob: -19.136051177978516
    10. '  ' → logprob: -19.386051177978516

Token 778: ' {' (ID: 354)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.06273669004440308
    2. ' [' → logprob: -2.812736749649048
    3. '{' → logprob: -7.562736511230469
    4. ' {' → logprob: -8.562736511230469
    5. '[' → logprob: -9.937736511230469
    6. '[
' → logprob: -11.937736511230469
    7. '   ' → logprob: -13.562736511230469
    8. ' ' → logprob: -14.062736511230469
    9. '[self' → logprob: -15.437736511230469
    10. '[b' → logprob: -15.437736511230469

Token 779: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.584239938296378e-06
    2. ' a' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.500007629394531
    4. '	a' → logprob: -17.87500762939453
    5. '       ' → logprob: -18.00000762939453
    6. '           ' → logprob: -18.75000762939453
    7. '
' → logprob: -18.75000762939453
    8. '        ' → logprob: -18.87500762939453
    9. ' ' → logprob: -19.00000762939453
    10. '    ' → logprob: -19.12500762939453

Token 780: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47493064403533936
    2. ',b' → logprob: -0.9749306440353394
    3. ' ,' → logprob: -7.224930763244629
    4. ',a' → logprob: -9.974930763244629
    5. ',c' → logprob: -10.099930763244629
    6. ',
' → logprob: -10.474930763244629
    7. ',v' → logprob: -12.224930763244629
    8. 'b' → logprob: -13.224930763244629
    9. ',B' → logprob: -14.724930763244629
    10. ' ' → logprob: -15.099930763244629

Token 781: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.007506060414016247
    2. ',' → logprob: -5.007505893707275
    3. ' ,' → logprob: -7.257505893707275
    4. ',
' → logprob: -9.507506370544434
    5. ',b' → logprob: -12.632506370544434
    6. '       ' → logprob: -13.382506370544434
    7. 'c' → logprob: -13.757506370544434
    8. ',a' → logprob: -14.382506370544434
    9. '   ' → logprob: -14.632506370544434
    10. '```' → logprob: -14.632506370544434

Token 782: '}
' (ID: 739)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006112108938395977
    2. ',
' → logprob: -5.506112098693848
    3. ' ,' → logprob: -7.256112098693848
    4. ',c' → logprob: -7.506112098693848
    5. ',a' → logprob: -8.006112098693848
    6. '}' → logprob: -8.881112098693848
    7. '       ' → logprob: -10.006112098693848
    8. ',l' → logprob: -10.006112098693848
    9. ',u' → logprob: -10.131112098693848
    10. '   ' → logprob: -10.131112098693848

Token 783: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1578124612569809
    2. ',' → logprob: -2.6578123569488525
    3. '
' → logprob: -2.9078123569488525
    4. 'c' → logprob: -4.657812595367432
    5. ' candidates' → logprob: -6.157812595367432
    6. ',
' → logprob: -6.282812595367432
    7. ',c' → logprob: -6.282812595367432
    8. '        
' → logprob: -6.532812595367432
    9. '   ' → logprob: -7.032812595367432
    10. '  
' → logprob: -7.657812595367432

Token 784: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0062578353099524975
    2. '       ' → logprob: -5.256258010864258
    3. 'for' → logprob: -8.006258010864258
    4. 'abc' → logprob: -8.006258010864258
    5. ' candidates' → logprob: -8.631258010864258
    6. 'ab' → logprob: -9.756258010864258
    7. '   ' → logprob: -10.506258010864258
    8. '_candidates' → logprob: -10.631258010864258
    9. 'l' → logprob: -10.756258010864258
    10. 'abb' → logprob: -11.256258010864258

Token 785: '.add' (ID: 1950)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.01925407350063324
    2. '.' → logprob: -4.019254207611084
    3. '|' → logprob: -7.144254207611084
    4. '.add' → logprob: -8.769253730773926
    5. ' |=' → logprob: -9.394253730773926
    6. 'update' → logprob: -10.519253730773926
    7. ' .' → logprob: -10.894253730773926
    8. '.|' → logprob: -11.019253730773926
    9. '.union' → logprob: -12.144253730773926
    10. '.=' → logprob: -12.144253730773926

Token 786: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00017481597024016082
    2. '(' → logprob: -9.000174522399902
    3. ' (' → logprob: -10.875174522399902
    4. 'self' → logprob: -11.000174522399902
    5. '((' → logprob: -11.125174522399902
    6. ' self' → logprob: -14.375174522399902
    7. '(this' → logprob: -16.12517547607422
    8. '(s' → logprob: -16.25017547607422
    9. '(sel' → logprob: -16.87517547607422
    10. ' ' → logprob: -17.25017547607422

Token 787: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -1.6405310816480778e-05
    2. 'l' → logprob: -11.875016212463379
    3. '.' → logprob: -12.125016212463379
    4. ' .' → logprob: -13.125016212463379
    5. ').' → logprob: -15.000016212463379
    6. '	l' → logprob: -15.500016212463379
    7. ' ' → logprob: -15.625016212463379
    8. '   ' → logprob: -15.750016212463379
    9. '_l' → logprob: -15.750016212463379
    10. ',l' → logprob: -16.375017166137695

Token 788: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.0018693790771067142
    2. 'c' → logprob: -6.501869201660156
    3. 'a' → logprob: -8.251869201660156
    4. '   ' → logprob: -10.751869201660156
    5. 'cal' → logprob: -12.064369201660156
    6. 'CA' → logprob: -12.126869201660156
    7. '.ca' → logprob: -12.126869201660156
    8. '_ca' → logprob: -12.251869201660156
    9. '```' → logprob: -12.376869201660156
    10. '.c' → logprob: -12.501869201660156

Token 789: '_struct' (ID: 31345)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0069093103520572186
    2. '_struct' → logprob: -5.006909370422363
    3. 'a' → logprob: -8.881909370422363
    4. 'struct' → logprob: -11.006909370422363
    5. ')' → logprob: -11.756909370422363
    6. '[a' → logprob: -12.256909370422363
    7. ' (' → logprob: -12.256909370422363
    8. '(' → logprob: -13.006909370422363
    9. ' ' → logprob: -13.506909370422363
    10. ')a' → logprob: -13.756909370422363

Token 790: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.08912550657987595
    2. '(a' → logprob: -2.464125394821167
    3. '(l' → logprob: -9.964125633239746
    4. ').' → logprob: -10.464125633239746
    5. '.a' → logprob: -10.589125633239746
    6. '.' → logprob: -10.839125633239746
    7. ' .' → logprob: -10.839125633239746
    8. '.c' → logprob: -11.214125633239746
    9. ')' → logprob: -11.589125633239746
    10. 'l' → logprob: -12.214125633239746

Token 791: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -2.9875325708417222e-05
    2. 'c' → logprob: -10.625029563903809
    3. 'a' → logprob: -12.750029563903809
    4. 'с' → logprob: -15.000029563903809
    5. '(a' → logprob: -15.250029563903809
    6. 'cal' → logprob: -15.375029563903809
    7. ' ca' → logprob: -15.500029563903809
    8. '```' → logprob: -15.500029563903809
    9. 'cap' → logprob: -15.500029563903809
    10. '(' → logprob: -15.750029563903809

Token 792: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -12.125008583068848
    3. '(u' → logprob: -13.500008583068848
    4. 'a' → logprob: -14.000008583068848
    5. ')' → logprob: -14.500008583068848
    6. '(
' → logprob: -14.625008583068848
    7. ')(' → logprob: -15.500008583068848
    8. '((' → logprob: -16.625009536743164
    9. ' (' → logprob: -17.000009536743164
    10. ')a' → logprob: -17.500009536743164

Token 793: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.3631698191165924
    2. ',' → logprob: -1.23816978931427
    3. ',a' → logprob: -4.6131696701049805
    4. '(b' → logprob: -6.4881696701049805
    5. '(a' → logprob: -6.9881696701049805
    6. ' ,' → logprob: -7.1131696701049805
    7. '(' → logprob: -7.4881696701049805
    8. 'b' → logprob: -8.11316967010498
    9. ',c' → logprob: -9.11316967010498
    10. 'a' → logprob: -9.11316967010498

Token 794: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011361743323504925
    2. '))
' → logprob: -5.011361598968506
    3. ')' → logprob: -5.386361598968506
    4. ' ))' → logprob: -10.136362075805664
    5. ')
' → logprob: -12.386362075805664
    6. '       ' → logprob: -12.886362075805664
    7. '),' → logprob: -13.386362075805664
    8. '))
' → logprob: -13.511362075805664
    9. '))

' → logprob: -13.636362075805664
    10. '   ' → logprob: -13.636362075805664

Token 795: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007056696340441704
    2. 'c' → logprob: -5.007056713104248
    3. ' candidates' → logprob: -8.00705623626709
    4. ' c' → logprob: -12.13205623626709
    5. '   ' → logprob: -14.13205623626709
    6. '	c' → logprob: -14.75705623626709
    7. '_candidates' → logprob: -14.75705623626709
    8. ' ' → logprob: -15.38205623626709
    9. '
' → logprob: -15.63205623626709
    10. ',c' → logprob: -16.007057189941406

Token 796: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01917104609310627
    2. '       ' → logprob: -4.019171237945557
    3. ' candidates' → logprob: -6.894171237945557
    4. ' c' → logprob: -13.019170761108398
    5. '   ' → logprob: -13.019170761108398
    6. '	c' → logprob: -13.769170761108398
    7. '_candidates' → logprob: -15.144170761108398
    8. 'candidate' → logprob: -15.644170761108398
    9. ' candidats' → logprob: -15.894170761108398
    10. ' ' → logprob: -16.0191707611084

Token 797: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0032151418272405863
    2. '.' → logprob: -5.753215312957764
    3. '.update' → logprob: -11.378214836120605
    4. ' .' → logprob: -11.503214836120605
    5. ').' → logprob: -12.128214836120605
    6. '.setdefault' → logprob: -12.253214836120605
    7. '.append' → logprob: -13.628214836120605
    8. '>.' → logprob: -14.128214836120605
    9. '`.' → logprob: -14.503214836120605
    10. '   ' → logprob: -14.753214836120605

Token 798: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00022022522171027958
    2. 'self' → logprob: -9.00022029876709
    3. '(' → logprob: -9.25022029876709
    4. '(
' → logprob: -14.75022029876709
    5. ' self' → logprob: -15.50022029876709
    6. ' (' → logprob: -15.87522029876709
    7. '(s' → logprob: -16.875219345092773
    8. '(sel' → logprob: -18.625219345092773
    9. '	self' → logprob: -18.875219345092773
    10. '   ' → logprob: -19.500219345092773

Token 799: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0003349890175741166
    2. 'l' → logprob: -8.750334739685059
    3. '.' → logprob: -8.875334739685059
    4. ' .' → logprob: -10.875334739685059
    5. '_l' → logprob: -12.125334739685059
    6. '.c' → logprob: -13.250334739685059
    7. ' l' → logprob: -13.250334739685059
    8. ').' → logprob: -13.750334739685059
    9. ' ' → logprob: -13.875334739685059
    10. '	l' → logprob: -13.875334739685059

Token 800: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.0004797664878424257
    2. 'c' → logprob: -7.750479698181152
    3. 'a' → logprob: -10.250479698181152
    4. 'struct' → logprob: -13.250479698181152
    5. 'cl' → logprob: -13.375479698181152
    6. 'cal' → logprob: -13.875479698181152
    7. 'l' → logprob: -13.875479698181152
    8. '   ' → logprob: -14.000479698181152
    9. '_ca' → logprob: -14.125479698181152
    10. '```' → logprob: -14.250479698181152

Token 801: '_struct' (ID: 31345)
  Prédit: '_struct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_struct' → logprob: -1.3856492842023727e-06
    2. 'struct' → logprob: -14.250000953674316
    3. '_STRUCT' → logprob: -15.375000953674316
    4. '"struct' → logprob: -15.875000953674316
    5. '.struct' → logprob: -15.875000953674316
    6. '_c' → logprob: -16.875001907348633
    7. 'truct' → logprob: -17.375001907348633
    8. 'c' → logprob: -17.750001907348633
    9. '.c' → logprob: -17.875001907348633
    10. 'a' → logprob: -17.875001907348633

Token 802: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -2.641841820150148e-05
    2. ' .' → logprob: -11.00002670288086
    3. '.' → logprob: -12.50002670288086
    4. ').' → logprob: -12.75002670288086
    5. '```' → logprob: -14.12502670288086
    6. 'l' → logprob: -14.25002670288086
    7. '`.' → logprob: -14.75002670288086
    8. ' ' → logprob: -15.37502670288086
    9. '	l' → logprob: -15.87502670288086
    10. '(l' → logprob: -16.12502670288086

Token 803: 'ca' (ID: 3743)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.21058744192123413
    2. 'ca' → logprob: -1.710587501525879
    3. 'a' → logprob: -4.710587501525879
    4. 'l' → logprob: -10.335587501525879
    5. '(c' → logprob: -10.460587501525879
    6. '(a' → logprob: -10.835587501525879
    7. 'ac' → logprob: -11.835587501525879
    8. 'b' → logprob: -12.523087501525879
    9. '   ' → logprob: -12.960587501525879
    10. ' c' → logprob: -12.960587501525879

Token 804: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0004499765345826745
    2. 'b' → logprob: -8.250450134277344
    3. '(a' → logprob: -8.625450134277344
    4. '(' → logprob: -12.750450134277344
    5. ' (' → logprob: -13.125450134277344
    6. '(c' → logprob: -13.125450134277344
    7. 'a' → logprob: -13.500450134277344
    8. ' b' → logprob: -15.125450134277344
    9. '	b' → logprob: -15.875450134277344
    10. ')b' → logprob: -16.500450134277344

Token 805: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.08467705547809601
    2. ',' → logprob: -3.20967698097229
    3. 'c' → logprob: -3.20967698097229
    4. ',
' → logprob: -9.084676742553711
    5. ')' → logprob: -9.334676742553711
    6. ' ,' → logprob: -9.334676742553711
    7. ')c' → logprob: -9.584676742553711
    8. ' ' → logprob: -11.209676742553711
    9. '.c' → logprob: -11.709676742553711
    10. '),' → logprob: -11.834676742553711

Token 806: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3355569839477539
    2. ')' → logprob: -1.335556983947754
    3. '))
' → logprob: -3.835556983947754
    4. ')
' → logprob: -8.210556983947754
    5. '       ' → logprob: -9.210556983947754
    6. ')}' → logprob: -10.210556983947754
    7. '   ' → logprob: -11.960556983947754
    8. '()' → logprob: -12.210556983947754
    9. '))

' → logprob: -12.210556983947754
    10. '))
' → logprob: -12.210556983947754

Token 807: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014712453819811344
    2. 'c' → logprob: -4.514712333679199
    3. ' candidates' → logprob: -5.639712333679199
    4. ' c' → logprob: -10.1397123336792
    5. '(c' → logprob: -11.0147123336792
    6. 'self' → logprob: -11.6397123336792
    7. ')c' → logprob: -11.6397123336792
    8. '_candidates' → logprob: -12.2647123336792
    9. ')' → logprob: -12.6397123336792
    10. '	c' → logprob: -12.6397123336792

Token 808: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005399276851676404
    2. ' candidates' → logprob: -7.875539779663086
    3. '       ' → logprob: -8.750539779663086
    4. ' c' → logprob: -13.875539779663086
    5. 'self' → logprob: -16.625539779663086
    6. '   ' → logprob: -16.625539779663086
    7. '_candidates' → logprob: -17.000539779663086
    8. '	c' → logprob: -17.250539779663086
    9. ')c' → logprob: -17.375539779663086
    10. '           ' → logprob: -17.375539779663086

Token 809: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0001507405104348436
    2. '.' → logprob: -8.875150680541992
    3. ' .' → logprob: -12.375150680541992
    4. 'add' → logprob: -13.375150680541992
    5. '.setdefault' → logprob: -13.625150680541992
    6. ').' → logprob: -13.875150680541992
    7. '.Add' → logprob: -14.125150680541992
    8. '_add' → logprob: -14.500150680541992
    9. '.struct' → logprob: -15.000150680541992
    10. '.emplace' → logprob: -16.125150680541992

Token 810: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2723104848410003e-05
    2. '(' → logprob: -11.375022888183594
    3. 'self' → logprob: -11.500022888183594
    4. '(
' → logprob: -14.375022888183594
    5. ' self' → logprob: -15.375022888183594
    6. '(s' → logprob: -15.875022888183594
    7. ' (' → logprob: -15.875022888183594
    8. '((' → logprob: -17.875022888183594
    9. '(this' → logprob: -18.125022888183594
    10. '(sel' → logprob: -18.250022888183594

Token 811: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -9.150362166110426e-05
    2. '.' → logprob: -10.000091552734375
    3. ' .' → logprob: -10.250091552734375
    4. 'l' → logprob: -11.750091552734375
    5. ' l' → logprob: -13.625091552734375
    6. 'self' → logprob: -14.375091552734375
    7. ' ' → logprob: -15.750091552734375
    8. '	l' → logprob: -15.875091552734375
    9. '_l' → logprob: -16.125091552734375
    10. '```' → logprob: -16.375091552734375

Token 812: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.018758028745651245
    2. 'c' → logprob: -4.1437578201293945
    3. 'a' → logprob: -6.6437578201293945
    4. 'cl' → logprob: -7.3937578201293945
    5. 'struct' → logprob: -8.893757820129395
    6. 'l' → logprob: -9.018757820129395
    7. '.c' → logprob: -9.268757820129395
    8. '.struct' → logprob: -9.768757820129395
    9. '_ca' → logprob: -9.893757820129395
    10. '_struct' → logprob: -9.893757820129395

Token 813: '_struct' (ID: 31345)
  Prédit: '_struct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_struct' → logprob: -0.00010545044642640278
    2. 'struct' → logprob: -9.375105857849121
    3. 'a' → logprob: -11.875105857849121
    4. '(a' → logprob: -12.750105857849121
    5. '.struct' → logprob: -12.750105857849121
    6. 'truct' → logprob: -12.875105857849121
    7. '_STRUCT' → logprob: -13.625105857849121
    8. 'c' → logprob: -13.750105857849121
    9. '"struct' → logprob: -13.750105857849121
    10. '(c' → logprob: -14.875105857849121

Token 814: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -4.3822154111694545e-05
    2. ' .' → logprob: -11.500043869018555
    3. '.' → logprob: -11.750043869018555
    4. '(l' → logprob: -11.875043869018555
    5. '.c' → logprob: -12.000043869018555
    6. 'l' → logprob: -12.000043869018555
    7. '(' → logprob: -13.125043869018555
    8. '(.' → logprob: -13.375043869018555
    9. '```' → logprob: -13.500043869018555
    10. ').' → logprob: -14.250043869018555

Token 815: 'ca' (ID: 3743)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.32367444038391113
    2. 'ca' → logprob: -1.3236744403839111
    3. 'a' → logprob: -4.573674201965332
    4. 'l' → logprob: -11.323674201965332
    5. '(c' → logprob: -11.698674201965332
    6. '   ' → logprob: -12.323674201965332
    7. '(a' → logprob: -12.823674201965332
    8. 'ac' → logprob: -13.323674201965332
    9. 'struct' → logprob: -13.323674201965332
    10. '_ca' → logprob: -13.698674201965332

Token 816: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.002028327202424407
    2. 'a' → logprob: -6.252028465270996
    3. '(c' → logprob: -9.252028465270996
    4. 'c' → logprob: -13.127028465270996
    5. ' (' → logprob: -14.377028465270996
    6. ')' → logprob: -14.752028465270996
    7. '(' → logprob: -14.877028465270996
    8. ' a' → logprob: -16.00202751159668
    9. '(
' → logprob: -16.50202751159668
    10. ')(' → logprob: -16.62702751159668

Token 817: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.01859329082071781
    2. ',' → logprob: -4.0185933113098145
    3. 'c' → logprob: -7.8935933113098145
    4. ',
' → logprob: -11.018592834472656
    5. ',a' → logprob: -11.393592834472656
    6. ',b' → logprob: -11.643592834472656
    7. ' ,' → logprob: -11.768592834472656
    8. '[' → logprob: -11.893592834472656
    9. ')' → logprob: -11.893592834472656
    10. ')c' → logprob: -12.643592834472656

Token 818: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002070206217467785
    2. '))' → logprob: -6.252070426940918
    3. ')}' → logprob: -9.127070426940918
    4. ')
' → logprob: -10.752070426940918
    5. '})' → logprob: -12.377070426940918
    6. ' )' → logprob: -12.752070426940918
    7. '}' → logprob: -13.252070426940918
    8. '   ' → logprob: -14.252070426940918
    9. '       ' → logprob: -14.377070426940918
    10. '())' → logprob: -14.627070426940918

Token 819: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1493425965309143
    2. '
' → logprob: -2.0243425369262695
    3. '   ' → logprob: -5.5243425369262695
    4. '        
' → logprob: -6.8993425369262695
    5. 'result' → logprob: -7.3993425369262695
    6. '    
' → logprob: -8.14934253692627
    7. 'min' → logprob: -8.64934253692627
    8. '```' → logprob: -9.39934253692627
    9. '  
' → logprob: -9.89934253692627
    10. ' ' → logprob: -10.02434253692627

Token 820: ' min' (ID: 1349)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7788829207420349
    2. 'best' → logprob: -0.7788829207420349
    3. 'min' (adapté à ' min') → logprob: -2.5288829803466797
    4. 'ans' → logprob: -6.27888298034668
    5. 'result' → logprob: -8.40388298034668
    6. '       ' → logprob: -9.27888298034668
    7. 'cost' → logprob: -9.40388298034668
    8. '
' → logprob: -9.90388298034668
    9. 'def' → logprob: -10.77888298034668
    10. ' res' → logprob: -11.15388298034668

Token 821: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0018994826823472977
    2. '_' → logprob: -6.376899719238281
    3. ' _' → logprob: -9.251899719238281
    4. '_val' → logprob: -10.251899719238281
    5. '_max' → logprob: -11.626899719238281
    6. '_result' → logprob: -11.751899719238281
    7. '```' → logprob: -11.751899719238281
    8. '_c' → logprob: -12.251899719238281
    9. '_score' → logprob: -12.501899719238281
    10. '_space' → logprob: -12.626899719238281

Token 822: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002189756603911519
    2. '=' → logprob: -6.127189636230469
    3. ',' → logprob: -12.502189636230469
    4. ' ' → logprob: -14.627189636230469
    5. '=float' → logprob: -15.377189636230469
    6. ' =
' → logprob: -16.87718963623047
    7. ' ' → logprob: -16.87718963623047
    8. '_' → logprob: -17.37718963623047
    9. '	' → logprob: -17.75218963623047
    10. ' ,' → logprob: -18.00218963623047

Token 823: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.001202850602567196
    2. '10' → logprob: -6.7512030601501465
    3. 'sys' → logprob: -10.501202583312988
    4. ' float' → logprob: -13.126202583312988
    5. 'max' → logprob: -13.376202583312988
    6. 'int' → logprob: -13.501202583312988
    7. '1' → logprob: -16.251203536987305
    8. 'min' → logprob: -16.626203536987305
    9. '   ' → logprob: -19.251203536987305
    10. '(float' → logprob: -19.501203536987305

Token 824: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4373977482318878
    2. ''in' → logprob: -1.0623977184295654
    3. ''' → logprob: -4.9373979568481445
    4. ''s' → logprob: -7.3123979568481445
    5. 'inf' → logprob: -8.937397956848145
    6. ''inc' → logprob: -9.562397956848145
    7. ''op' → logprob: -9.687397956848145
    8. ''import' → logprob: -9.937397956848145
    9. ''ac' → logprob: -10.187397956848145
    10. ''ins' → logprob: -10.187397956848145

Token 825: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -3.054500666621607e-06
    2. ''in' → logprob: -13.37500286102295
    3. ''' → logprob: -13.50000286102295
    4. 'in' → logprob: -17.625003814697266
    5. ' inf' → logprob: -18.875003814697266
    6. ''s' → logprob: -19.625003814697266
    7. '('' → logprob: -20.250003814697266
    8. '.inf' → logprob: -20.375003814697266
    9. '_inf' → logprob: -20.500003814697266
    10. 'info' → logprob: -20.500003814697266

Token 826: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02645692601799965
    2. ')
' → logprob: -3.651456832885742
    3. '')' → logprob: -9.776456832885742
    4. '       ' → logprob: -10.276456832885742
    5. ' )' → logprob: -10.526456832885742
    6. '')
' → logprob: -11.151456832885742
    7. ')
' → logprob: -11.276456832885742
    8. ' )
' → logprob: -11.901456832885742
    9. '   ' → logprob: -13.026456832885742
    10. ')

' → logprob: -13.776456832885742

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3346179127693176
    2. ' for' → logprob: -1.8346178531646729
    3. 'for' → logprob: -2.334617853164673
    4. ' 
' → logprob: -4.209618091583252
    5. '
' → logprob: -5.709618091583252
    6. ' ' → logprob: -5.959618091583252
    7. '        
' → logprob: -5.959618091583252
    8. '  
' → logprob: -6.959618091583252
    9. '   ' → logprob: -7.084618091583252
    10. '    
' → logprob: -7.084618091583252

Token 828: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08317271620035172
    2. '       ' → logprob: -2.5831727981567383
    3. ' for' → logprob: -5.458172798156738
    4. '
' → logprob: -11.958172798156738
    5. '   ' → logprob: -12.458172798156738
    6. ' ' → logprob: -14.208172798156738
    7. '	for' → logprob: -14.333172798156738
    8. '        
' → logprob: -14.583172798156738
    9. '      ' → logprob: -16.333171844482422
    10. '	' → logprob: -16.333171844482422

Token 829: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.4639500677585602
    2. 'x' → logprob: -1.8389500379562378
    3. 'candidate' → logprob: -1.9639500379562378
    4. 'm' → logprob: -3.5889501571655273
    5. 'node' → logprob: -4.338950157165527
    6. 'meet' → logprob: -4.463950157165527
    7. 'meeting' → logprob: -4.713950157165527
    8. ' city' → logprob: -5.463950157165527
    9. 'cand' → logprob: -5.838950157165527
    10. 'c' → logprob: -6.588950157165527

Token 830: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038183555006980896
    2. 'in' → logprob: -3.2881834506988525
    3. ' ' → logprob: -10.163183212280273
    4. '	in' → logprob: -10.163183212280273
    5. '_in' → logprob: -10.913183212280273
    6. '<|end|>' → logprob: -11.413183212280273
    7. 's' → logprob: -11.788183212280273
    8. 'i' → logprob: -12.538183212280273
    9. ' i' → logprob: -12.913183212280273
    10. 'n' → logprob: -12.913183212280273

Token 831: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004306692280806601
    2. ' candidates' → logprob: -7.750430583953857
    3. 'candidate' → logprob: -17.750431060791016
    4. '   ' → logprob: -17.875431060791016
    5. '
' → logprob: -18.375431060791016
    6. 'cand' → logprob: -18.875431060791016
    7. '_candidates' → logprob: -19.000431060791016
    8. ' ' → logprob: -19.250431060791016
    9. ' c' → logprob: -19.375431060791016
    10. '	c' → logprob: -19.500431060791016

Token 832: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00047487911069765687
    2. ':
' → logprob: -7.75047492980957
    3. '):' → logprob: -10.87547492980957
    4. ' :' → logprob: -11.87547492980957
    5. ',' → logprob: -12.00047492980957
    6. '<|end|>' → logprob: -12.00047492980957
    7. '       ' → logprob: -13.62547492980957
    8. ')' → logprob: -13.62547492980957
    9. ':return' → logprob: -14.37547492980957
    10. '=' → logprob: -14.50047492980957

Token 833: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035261833108961582
    2. '            ' → logprob: -5.878526210784912
    3. '            
' → logprob: -7.753526210784912
    4. '<|end|>' → logprob: -9.753525733947754
    5. ',' → logprob: -10.128525733947754
    6. '          ' → logprob: -10.753525733947754
    7. '    ' → logprob: -11.003525733947754
    8. ' 
' → logprob: -11.128525733947754
    9. '        ' → logprob: -11.253525733947754
    10. '
' → logprob: -11.378525733947754

Token 834: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4705687463283539
    2. ' cost' → logprob: -1.3455687761306763
    3. '           ' → logprob: -3.2205686569213867
    4. 'max' → logprob: -3.4705686569213867
    5. 'dist' → logprob: -4.220568656921387
    6. ' max' → logprob: -4.595568656921387
    7. 'd' → logprob: -4.845568656921387
    8. ' dist' → logprob: -5.970568656921387
    9. '               ' → logprob: -6.220568656921387
    10. 'current' → logprob: -6.595568656921387

Token 835: ' max' (ID: 2999)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.30844566226005554
    2. 'dist' → logprob: -2.308445692062378
    3. 'max' → logprob: -2.433445692062378
    4. '           ' → logprob: -3.683445692062378
    5. 'd' → logprob: -4.183445453643799
    6. 'current' → logprob: -4.308445453643799
    7. 'curr' → logprob: -4.558445453643799
    8. ' cost' → logprob: -4.683445453643799
    9. 'distance' → logprob: -6.433445453643799
    10. '               ' → logprob: -7.433445453643799

Token 836: ' distance' (ID: 9324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004662353545427322
    2. '(self' → logprob: -5.62966251373291
    3. '(
' → logprob: -7.12966251373291
    4. '_distance' → logprob: -8.75466251373291
    5. '_' → logprob: -10.37966251373291
    6. '_dist' → logprob: -10.75466251373291
    7. '_cost' → logprob: -10.87966251373291
    8. '(max' → logprob: -12.00466251373291
    9. ' (' → logprob: -12.37966251373291
    10. '_max' → logprob: -12.50466251373291

Token 837: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20799748599529266
    2. '=' → logprob: -1.707997441291809
    3. '           ' → logprob: -5.4579973220825195
    4. '(' → logprob: -6.4579973220825195
    5. '=max' → logprob: -8.45799732208252
    6. '(
' → logprob: -8.70799732208252
    7. ')' → logprob: -8.95799732208252
    8. '            ' → logprob: -10.20799732208252
    9. ':' → logprob: -10.20799732208252
    10. '               ' → logprob: -10.33299732208252

Token 838: ' three' (ID: 3407)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.28549280762672424
    2. 'd' → logprob: -2.2854928970336914
    3. ' city' → logprob: -2.7854928970336914
    4. 'dist' → logprob: -2.7854928970336914
    5. ' d' → logprob: -5.160492897033691
    6. 'self' → logprob: -5.410492897033691
    7. ' dist' → logprob: -5.410492897033691
    8. 'x' → logprob: -6.285492897033691
    9. 'candidate' → logprob: -6.410492897033691
    10. 'node' → logprob: -7.035492897033691

Token 839: ' students' (ID: 4501)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -1.6419053077697754
    2. ' (' → logprob: -2.1419053077697754
    3. 'max' → logprob: -2.1419053077697754
    4. '(
' → logprob: -2.2669053077697754
    5. '(max' → logprob: -3.0169053077697754
    6. 'd' → logprob: -3.1419053077697754
    7. '(' → logprob: -3.2669053077697754
    8. 'city' → logprob: -3.2669053077697754
    9. ')' → logprob: -3.5169053077697754
    10. 'distance' → logprob: -3.6419053077697754

Token 840: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5013602375984192
    2. '           ' → logprob: -1.0013601779937744
    3. '=' → logprob: -3.8763601779937744
    4. ':' → logprob: -6.3763604164123535
    5. '<|end|>' → logprob: -6.7513604164123535
    6. '<|end|>' → logprob: -7.5013604164123535
    7. ')' → logprob: -7.7513604164123535
    8. '            ' → logprob: -7.8763604164123535
    9. ',' → logprob: -8.126359939575195
    10. '   ' → logprob: -8.501359939575195

Token 841: ' this' (ID: 495)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.12932853400707245
    2. ' city' → logprob: -2.129328489303589
    3. 'reach' → logprob: -6.754328727722168
    4. ' reach' → logprob: -7.504328727722168
    5. 'self' → logprob: -7.879328727722168
    6. 'meet' → logprob: -9.379328727722168
    7. 'visit' → logprob: -10.254328727722168
    8. ' self' → logprob: -10.379328727722168
    9. 'get' → logprob: -10.379328727722168
    10. '   ' → logprob: -11.004328727722168

Token 842: ' meeting' (ID: 9176)
  Prédit: ' city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.07895731180906296
    2. 'city' → logprob: -2.5789573192596436
    3. ' ' → logprob: -10.828957557678223
    4. ' meeting' → logprob: -11.453957557678223
    5. '   ' → logprob: -12.203957557678223
    6. '_city' → logprob: -12.203957557678223
    7. '(city' → logprob: -12.703957557678223
    8. 'meeting' → logprob: -12.828957557678223
    9. '
' → logprob: -13.078957557678223
    10. ' node' → logprob: -13.078957557678223

Token 843: ' city' (ID: 5030)
  Prédit: ' city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.3547591269016266
    2. 'city' → logprob: -1.6047590970993042
    3. '_city' → logprob: -2.8547592163085938
    4. ' point' → logprob: -4.229759216308594
    5. '           ' → logprob: -4.479759216308594
    6. 'point' → logprob: -4.604759216308594
    7. '_point' → logprob: -6.479759216308594
    8. ' =' → logprob: -7.479759216308594
    9. '       ' → logprob: -7.729759216308594
    10. '_' → logprob: -7.729759216308594

Token 844: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013166584074497223
    2. '<|end|>' → logprob: -5.513166427612305
    3. '<|end|>' → logprob: -5.763166427612305
    4. ' =' → logprob: -6.388166427612305
    5. ',' → logprob: -6.888166427612305
    6. ':' → logprob: -7.013166427612305
    7. ')' → logprob: -7.638166427612305
    8. '       ' → logprob: -8.388166427612305
    9. '   ' → logprob: -8.388166427612305
    10. '=' → logprob: -8.513166427612305

Token 845: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014804595848545432
    2. '       ' → logprob: -8.251480102539062
    3. '               ' → logprob: -8.626480102539062
    4. ' =' → logprob: -8.626480102539062
    5. '   ' → logprob: -9.126480102539062
    6. '<|end|>' → logprob: -9.126480102539062
    7. '{' → logprob: -9.501480102539062
    8. ',' → logprob: -9.626480102539062
    9. ' max' → logprob: -9.626480102539062
    10. ')' → logprob: -9.626480102539062

Token 846: ' dist' (ID: 3601)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.35898357629776
    2. 'dist' (adapté à ' dist') → logprob: -1.9839835166931152
    3. 'max' → logprob: -2.8589835166931152
    4. 'd' → logprob: -3.2339835166931152
    5. '           ' → logprob: -3.7339835166931152
    6. ' cost' → logprob: -3.8589835166931152
    7. 'curr' → logprob: -4.608983516693115
    8. 'current' → logprob: -5.108983516693115
    9. 'distance' → logprob: -6.358983516693115
    10. ' dist' → logprob: -6.358983516693115

Token 847: '_a' (ID: 10852)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13724322617053986
    2. 'ances' → logprob: -2.8872432708740234
    3. ' =' → logprob: -3.3872432708740234
    4. '=' → logprob: -3.3872432708740234
    5. '1' → logprob: -5.762243270874023
    6. '_' → logprob: -6.512243270874023
    7. '_max' → logprob: -9.012243270874023
    8. 'ance' → logprob: -10.512243270874023
    9. 'max' → logprob: -10.512243270874023
    10. '_s' → logprob: -11.262243270874023

Token 848: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47543099522590637
    2. '=' → logprob: -0.975430965423584
    3. ',' → logprob: -6.725430965423584
    4. ')' → logprob: -9.225431442260742
    5. '=max' → logprob: -10.850431442260742
    6. ' ' → logprob: -11.725431442260742
    7. ')=' → logprob: -11.725431442260742
    8. '   ' → logprob: -12.350431442260742
    9. 's' → logprob: -12.600431442260742
    10. '  ' → logprob: -13.350431442260742

Token 849: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007608755491673946
    2. ' self' → logprob: -4.882608890533447
    3. '(self' → logprob: -14.132608413696289
    4. ' ' → logprob: -14.382608413696289
    5. '
' → logprob: -14.882608413696289
    6. '       ' → logprob: -15.382608413696289
    7. '	self' → logprob: -15.632608413696289
    8. '   ' → logprob: -15.882608413696289
    9. '=self' → logprob: -16.13260841369629
    10. 'max' → logprob: -16.13260841369629

Token 850: '._' (ID: 2697)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.020363885909318924
    2. '._' → logprob: -4.020363807678223
    3. '.dist' → logprob: -6.270363807678223
    4. '_cost' → logprob: -8.395363807678223
    5. '.distance' → logprob: -10.020363807678223
    6. '_distance' → logprob: -10.770363807678223
    7. '.cost' → logprob: -12.395363807678223
    8. '.l' → logprob: -12.520363807678223
    9. '_l' → logprob: -12.520363807678223
    10. ' _' → logprob: -12.645363807678223

Token 851: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.7835754988482222e-05
    2. '_dist' → logprob: -11.125018119812012
    3. 'cost' → logprob: -12.750018119812012
    4. ' dist' → logprob: -16.750017166137695
    5. 'distance' → logprob: -18.375017166137695
    6. 'd' → logprob: -18.750017166137695
    7. '	dist' → logprob: -18.875017166137695
    8. 'dest' → logprob: -19.125017166137695
    9. 'Dist' → logprob: -19.375017166137695
    10. 'dis' → logprob: -19.625017166137695

Token 852: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0008240377064794302
    2. '(' → logprob: -7.750823974609375
    3. 'a' → logprob: -8.125823974609375
    4. '(city' → logprob: -9.375823974609375
    5. '(u' → logprob: -12.000823974609375
    6. '(
' → logprob: -12.625823974609375
    7. 'city' → logprob: -13.875823974609375
    8. '(c' → logprob: -14.250823974609375
    9. ',a' → logprob: -14.750823974609375
    10. ' (' → logprob: -14.875823974609375

Token 853: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.684157026233152e-05
    2. ' ,' → logprob: -9.750077247619629
    3. ',c' → logprob: -11.750077247619629
    4. ',
' → logprob: -12.375077247619629
    5. ')' → logprob: -13.375077247619629
    6. '<|end|>' → logprob: -13.375077247619629
    7. ',user' → logprob: -14.625077247619629
    8. ',b' → logprob: -15.125077247619629
    9. ',
' → logprob: -15.375077247619629
    10. '‌,' → logprob: -15.500077247619629

Token 854: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.00033558503491804004
    2. ' city' → logprob: -8.000335693359375
    3. ')' → logprob: -17.125335693359375
    4. '(city' → logprob: -17.250335693359375
    5. '
' → logprob: -18.375335693359375
    6. 'c' → logprob: -18.500335693359375
    7. '.city' → logprob: -18.625335693359375
    8. ' ' → logprob: -19.000335693359375
    9. '   ' → logprob: -19.375335693359375
    10. '```' → logprob: -20.375335693359375

Token 855: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07896877080202103
    2. ')
' → logprob: -2.5789687633514404
    3. '           ' → logprob: -9.82896900177002
    4. ')
' → logprob: -10.95396900177002
    5. '),' → logprob: -12.95396900177002
    6. ')

' → logprob: -13.32896900177002
    7. ' )' → logprob: -14.07896900177002
    8. ',' → logprob: -14.45396900177002
    9. '               ' → logprob: -14.45396900177002
    10. '       ' → logprob: -14.95396900177002

Token 856: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016268600011244416
    2. '<|end|>' → logprob: -7.376626968383789
    3. '            ' → logprob: -8.251626968383789
    4. '       ' → logprob: -8.626626968383789
    5. '               ' → logprob: -8.751626968383789
    6. '          ' → logprob: -9.126626968383789
    7. '            
' → logprob: -9.626626968383789
    8. ' ' → logprob: -10.126626968383789
    9. 'dist' → logprob: -10.751626968383789
    10. ' 
' → logprob: -10.751626968383789

Token 857: ' dist' (ID: 3601)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22855225205421448
    2. 'dist' (adapté à ' dist') → logprob: -1.603552222251892
    3. ' dist' → logprob: -5.978552341461182
    4. '            ' → logprob: -7.728552341461182
    5. ' ' → logprob: -10.228551864624023
    6. '          ' → logprob: -11.103551864624023
    7. '
' → logprob: -11.228551864624023
    8. '               ' → logprob: -11.353551864624023
    9. ' 
' → logprob: -11.353551864624023
    10. '            
' → logprob: -11.353551864624023

Token 858: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0003794336807914078
    2. '_' → logprob: -9.00037956237793
    3. '_c' → logprob: -9.12537956237793
    4. '=' → logprob: -9.62537956237793
    5. 'b' → logprob: -9.87537956237793
    6. ' =' → logprob: -11.25037956237793
    7. ',' → logprob: -12.37537956237793
    8. ' _' → logprob: -13.25037956237793
    9. '       ' → logprob: -13.50037956237793
    10. '_a' → logprob: -13.62537956237793

Token 859: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.225460946559906
    2. ' =' → logprob: -1.6004610061645508
    3. ',' → logprob: -11.10046100616455
    4. ')' → logprob: -11.35046100616455
    5. '           ' → logprob: -11.72546100616455
    6. ' ' → logprob: -12.60046100616455
    7. '<|end|>' → logprob: -13.22546100616455
    8. ' =
' → logprob: -13.60046100616455
    9. '=
' → logprob: -13.60046100616455
    10. '            ' → logprob: -13.97546100616455

Token 860: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00861681904643774
    2. ' self' → logprob: -4.758616924285889
    3. '(self' → logprob: -14.25861644744873
    4. '<|end|>' → logprob: -14.50861644744873
    5. '=self' → logprob: -15.25861644744873
    6. '[self' → logprob: -15.25861644744873
    7. '	self' → logprob: -16.133617401123047
    8. ')' → logprob: -16.258617401123047
    9. ' ' → logprob: -16.383617401123047
    10. 's' → logprob: -16.508617401123047

Token 861: '._' (ID: 2697)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00011129142512800172
    2. '_cost' → logprob: -9.75011157989502
    3. '._' → logprob: -10.37511157989502
    4. ' _' → logprob: -11.75011157989502
    5. '.dist' → logprob: -12.12511157989502
    6. '_d' → logprob: -13.25011157989502
    7. '```' → logprob: -13.50011157989502
    8. 'self' → logprob: -14.25011157989502
    9. 'dist' → logprob: -14.50011157989502
    10. '_c' → logprob: -14.75011157989502

Token 862: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.1318875446449965e-05
    2. '_dist' → logprob: -10.125041007995605
    3. 'cost' → logprob: -14.750041007995605
    4. ' dist' → logprob: -14.875041007995605
    5. 'Dist' → logprob: -15.750041007995605
    6. 'd' → logprob: -16.375041961669922
    7. '(dist' → logprob: -16.625041961669922
    8. '.dist' → logprob: -16.875041961669922
    9. '	dist' → logprob: -17.000041961669922
    10. '```' → logprob: -17.500041961669922

Token 863: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00029148702742531896
    2. 'b' → logprob: -8.62529182434082
    3. '(' → logprob: -9.62529182434082
    4. '(c' → logprob: -10.00029182434082
    5. '(
' → logprob: -15.37529182434082
    6. ' b' → logprob: -16.25029182434082
    7. ' (' → logprob: -16.50029182434082
    8. '	b' → logprob: -17.62529182434082
    9. ',b' → logprob: -18.12529182434082
    10. ')b' → logprob: -18.50029182434082

Token 864: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001114106344175525
    2. ' ,' → logprob: -9.25011157989502
    3. ',
' → logprob: -11.50011157989502
    4. ',c' → logprob: -13.00011157989502
    5. ')' → logprob: -13.50011157989502
    6. '),' → logprob: -15.12511157989502
    7. '[' → logprob: -15.62511157989502
    8. '',' → logprob: -16.125110626220703
    9. ' ' → logprob: -16.250110626220703
    10. ' city' → logprob: -16.250110626220703

Token 865: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.038042180240154266
    2. ' city' → logprob: -3.2880420684814453
    3. 'c' → logprob: -14.538042068481445
    4. '(city' → logprob: -15.913042068481445
    5. '_city' → logprob: -17.163042068481445
    6. ' ' → logprob: -17.538042068481445
    7. '
' → logprob: -18.038042068481445
    8. '.city' → logprob: -18.038042068481445
    9. ')' → logprob: -18.788042068481445
    10. 'City' → logprob: -18.913042068481445

Token 866: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026455074548721313
    2. ')
' → logprob: -3.6514551639556885
    3. '           ' → logprob: -8.90145492553711
    4. ')
' → logprob: -11.52645492553711
    5. ')

' → logprob: -12.77645492553711
    6. '),' → logprob: -13.65145492553711
    7. ' )' → logprob: -14.02645492553711
    8. '       ' → logprob: -14.27645492553711
    9. '```' → logprob: -14.52645492553711
    10. ',' → logprob: -14.77645492553711

Token 867: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022520761936903
    2. 'dist' → logprob: -4.022520542144775
    3. ' dist' → logprob: -5.522520542144775
    4. '            ' → logprob: -8.772521018981934
    5. ' ' → logprob: -8.772521018981934
    6. '	dist' → logprob: -11.397521018981934
    7. '          ' → logprob: -11.772521018981934
    8. '               ' → logprob: -12.022521018981934
    9. '(dist' → logprob: -12.272521018981934
    10. '.dist' → logprob: -12.272521018981934

Token 868: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.41359177231788635
    2. '           ' → logprob: -1.163591742515564
    3. ' dist' → logprob: -3.6635918617248535
    4. '            ' → logprob: -7.7885918617248535
    5. '	dist' → logprob: -9.288591384887695
    6. ' ' → logprob: -9.538591384887695
    7. '               ' → logprob: -9.788591384887695
    8. '          ' → logprob: -10.538591384887695
    9. '_dist' → logprob: -11.163591384887695
    10. '		' → logprob: -11.663591384887695

Token 869: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.022400813177227974
    2. '_' → logprob: -3.8974008560180664
    3. ',' → logprob: -7.147400856018066
    4. 'c' → logprob: -7.772400856018066
    5. '=' → logprob: -7.772400856018066
    6. ' =' → logprob: -9.147400856018066
    7. ')' → logprob: -10.272400856018066
    8. ',c' → logprob: -11.022400856018066
    9. '_,' → logprob: -11.147400856018066
    10. ' ' → logprob: -11.397400856018066

Token 870: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287537634372711
    2. '=' → logprob: -1.0537537336349487
    3. ')' → logprob: -10.428753852844238
    4. ' ' → logprob: -11.053753852844238
    5. '<|end|>' → logprob: -12.928753852844238
    6. ',' → logprob: -13.053753852844238
    7. '[' → logprob: -13.928753852844238
    8. '```' → logprob: -15.303753852844238
    9. '           ' → logprob: -15.553753852844238
    10. '<|end|>' → logprob: -15.678753852844238

Token 871: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03576583415269852
    2. ' self' → logprob: -3.7857658863067627
    3. 'c' → logprob: -4.410765647888184
    4. '(self' → logprob: -8.535765647888184
    5. ' c' → logprob: -9.410765647888184
    6. '	self' → logprob: -11.660765647888184
    7. '_c' → logprob: -12.660765647888184
    8. '   ' → logprob: -13.160765647888184
    9. '       ' → logprob: -13.660765647888184
    10. ' ' → logprob: -14.285765647888184

Token 872: '._' (ID: 2697)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.021499663591384888
    2. '._' → logprob: -4.3964996337890625
    3. '_c' → logprob: -5.7714996337890625
    4. '(city' → logprob: -6.0214996337890625
    5. 'dist' → logprob: -7.2714996337890625
    6. '.dist' → logprob: -8.021499633789062
    7. ' _' → logprob: -8.146499633789062
    8. 'c' → logprob: -8.146499633789062
    9. '(_' → logprob: -8.396499633789062
    10. '_' → logprob: -8.646499633789062

Token 873: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0010507925180718303
    2. '_dist' → logprob: -7.37605094909668
    3. 'c' → logprob: -8.00105094909668
    4. 'cost' → logprob: -9.37605094909668
    5. '_c' → logprob: -13.87605094909668
    6. '_cost' → logprob: -14.25105094909668
    7. ' dist' → logprob: -14.25105094909668
    8. 'Dist' → logprob: -14.62605094909668
    9. '.dist' → logprob: -15.12605094909668
    10. '(dist' → logprob: -15.25105094909668

Token 874: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0006401229766197503
    2. 'c' → logprob: -7.375639915466309
    3. '(' → logprob: -11.250639915466309
    4. '(
' → logprob: -15.250639915466309
    5. ' c' → logprob: -16.250640869140625
    6. '(city' → logprob: -16.375640869140625
    7. '	c' → logprob: -16.375640869140625
    8. ')c' → logprob: -16.875640869140625
    9. '(C' → logprob: -18.000640869140625
    10. ' (' → logprob: -18.000640869140625

Token 875: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8828707804204896e-05
    2. ' ,' → logprob: -10.000048637390137
    3. ')' → logprob: -13.500048637390137
    4. '[' → logprob: -14.125048637390137
    5. ',
' → logprob: -14.375048637390137
    6. ',c' → logprob: -15.000048637390137
    7. '```' → logprob: -15.875048637390137
    8. '),' → logprob: -16.250049591064453
    9. '`,' → logprob: -16.625049591064453
    10. ' ' → logprob: -16.625049591064453

Token 876: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.029808353632688522
    2. ' city' → logprob: -3.529808282852173
    3. 'c' → logprob: -9.779808044433594
    4. ' c' → logprob: -13.779808044433594
    5. '(city' → logprob: -15.904808044433594
    6. ' ' → logprob: -16.029808044433594
    7. ' ' → logprob: -17.779808044433594
    8. '
' → logprob: -18.154808044433594
    9. '.city' → logprob: -18.529808044433594
    10. 'City' → logprob: -18.779808044433594

Token 877: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38726943731307983
    2. ')
' → logprob: -1.1372694969177246
    3. '           ' → logprob: -7.887269496917725
    4. ')
' → logprob: -11.012269020080566
    5. ')

' → logprob: -12.887269020080566
    6. ' )
' → logprob: -13.512269020080566
    7. '       ' → logprob: -14.137269020080566
    8. ' )' → logprob: -14.387269020080566
    9. '               ' → logprob: -15.137269020080566
    10. ')\
' → logprob: -15.387269020080566

Token 878: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010000905022025108
    2. '
' → logprob: -4.635000705718994
    3. '            
' → logprob: -10.135001182556152
    4. '```' → logprob: -10.260001182556152
    5. 'max' → logprob: -10.385001182556152
    6. '       ' → logprob: -10.510001182556152
    7. ' max' → logprob: -10.885001182556152
    8. '               ' → logprob: -11.385001182556152
    9. '   ' → logprob: -11.635001182556152
    10. '
' → logprob: -11.760001182556152

Token 879: ' max' (ID: 2999)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15481047332286835
    2. 'cost' → logprob: -2.6548104286193848
    3. ' cost' → logprob: -3.4048104286193848
    4. 'max' (adapté à ' max') → logprob: -3.6548104286193848
    5. ' max' → logprob: -5.154810428619385
    6. 'current' → logprob: -5.279810428619385
    7. ' current' → logprob: -6.654810428619385
    8. 'curr' → logprob: -7.279810428619385
    9. '
' → logprob: -8.279810905456543
    10. '   ' → logprob: -8.654810905456543

Token 880: '_dist' (ID: 37968)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33973202109336853
    2. '_' → logprob: -1.839732050895691
    3. '_dist' → logprob: -2.0897319316864014
    4. '_distance' → logprob: -5.3397321701049805
    5. '_cost' → logprob: -7.8397321701049805
    6. '(
' → logprob: -8.96473217010498
    7. '_d' → logprob: -9.83973217010498
    8. '(dist' → logprob: -10.46473217010498
    9. 'dist' → logprob: -10.83973217010498
    10. '_val' → logprob: -11.08973217010498

Token 881: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931562423706055
    2. ' =' → logprob: -0.6931562423706055
    3. '=max' → logprob: -11.693156242370605
    4. ' ' → logprob: -15.068156242370605
    5. ',' → logprob: -15.068156242370605
    6. ')' → logprob: -16.443157196044922
    7. ' ' → logprob: -17.443157196044922
    8. '_' → logprob: -17.693157196044922
    9. ' =
' → logprob: -18.068157196044922
    10. ')=' → logprob: -18.568157196044922

Token 882: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3868713676929474
    2. ' max' → logprob: -1.136871337890625
    3. '	max' → logprob: -15.136871337890625
    4. '(max' → logprob: -16.761871337890625
    5. '[max' → logprob: -18.511871337890625
    6. ',max' → logprob: -18.636871337890625
    7. '   ' → logprob: -18.886871337890625
    8. '=max' → logprob: -18.886871337890625
    9. ' ' → logprob: -19.511871337890625
    10. '           ' → logprob: -19.636871337890625

Token 883: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.50000286102295
    3. 'dist' → logprob: -13.50000286102295
    4. '([' → logprob: -17.000003814697266
    5. '(
' → logprob: -19.250003814697266
    6. '((' → logprob: -20.000003814697266
    7. '	dist' → logprob: -20.125003814697266
    8. '(dis' → logprob: -20.375003814697266
    9. '(max' → logprob: -20.500003814697266
    10. '(d' → logprob: -20.875003814697266

Token 884: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.5451681974809617e-05
    2. ')' → logprob: -12.250015258789062
    3. '_' → logprob: -12.375015258789062
    4. '(' → logprob: -13.500015258789062
    5. '(a' → logprob: -13.750015258789062
    6. 'a' → logprob: -13.750015258789062
    7. '[' → logprob: -14.125015258789062
    8. '_)' → logprob: -14.625015258789062
    9. 's' → logprob: -14.875015258789062
    10. '_,' → logprob: -15.250015258789062

Token 885: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006520323222503066
    2. ' ,' → logprob: -7.625651836395264
    3. ',max' → logprob: -9.375652313232422
    4. ',
' → logprob: -10.250652313232422
    5. ',d' → logprob: -10.375652313232422
    6. ')' → logprob: -12.250652313232422
    7. 'dist' → logprob: -12.750652313232422
    8. '(dist' → logprob: -13.125652313232422
    9. '),' → logprob: -14.250652313232422
    10. ',

' → logprob: -14.750652313232422

Token 886: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06198740750551224
    2. ' dist' → logprob: -2.8119874000549316
    3. 'max' → logprob: -11.31198787689209
    4. '(dist' → logprob: -12.68698787689209
    5. ' max' → logprob: -12.93698787689209
    6. '	dist' → logprob: -13.56198787689209
    7. ' ' → logprob: -15.31198787689209
    8. '_dist' → logprob: -16.061986923217773
    9. '.dist' → logprob: -16.186986923217773
    10. '
' → logprob: -16.561986923217773

Token 887: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.10030058771371841
    2. '_c' → logprob: -2.3503005504608154
    3. 'b' → logprob: -9.475300788879395
    4. 'c' → logprob: -11.100300788879395
    5. ',' → logprob: -13.975300788879395
    6. '_a' → logprob: -14.100300788879395
    7. '_,' → logprob: -15.975300788879395
    8. ',b' → logprob: -16.350299835205078
    9. '_B' → logprob: -16.850299835205078
    10. '_d' → logprob: -17.100299835205078

Token 888: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018196819291915745
    2. ' ,' → logprob: -9.250182151794434
    3. ',
' → logprob: -10.250182151794434
    4. ')' → logprob: -10.375182151794434
    5. ',max' → logprob: -11.500182151794434
    6. ',d' → logprob: -12.500182151794434
    7. '),' → logprob: -13.250182151794434
    8. '<|end|>' → logprob: -13.750182151794434
    9. '           ' → logprob: -14.750182151794434
    10. ',)' → logprob: -15.250182151794434

Token 889: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.002476724097505212
    2. ' dist' → logprob: -6.002476692199707
    3. '(dist' → logprob: -14.752476692199707
    4. '_dist' → logprob: -15.377476692199707
    5. '	dist' → logprob: -15.502476692199707
    6. '
' → logprob: -16.377477645874023
    7. '.dist' → logprob: -17.377477645874023
    8. ' ' → logprob: -18.502477645874023
    9. '```' → logprob: -18.752477645874023
    10. 'd' → logprob: -18.752477645874023

Token 890: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.547789674485102e-05
    2. 'c' → logprob: -10.250035285949707
    3. ')' → logprob: -18.125036239624023
    4. 'C' → logprob: -18.125036239624023
    5. '	c' → logprob: -19.125036239624023
    6. '_C' → logprob: -19.250036239624023
    7. '_' → logprob: -19.500036239624023
    8. ')c' → logprob: -20.375036239624023
    9. '_a' → logprob: -21.000036239624023
    10. 'с' → logprob: -21.000036239624023

Token 891: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20487412810325623
    2. ')' → logprob: -1.7048741579055786
    3. '           ' → logprob: -5.829874038696289
    4. ')
' → logprob: -7.579874038696289
    5. ' )
' → logprob: -13.829874038696289
    6. ')

' → logprob: -13.954874038696289
    7. '       ' → logprob: -14.079874038696289
    8. '               ' → logprob: -14.329874038696289
    9. '<|end|>' → logprob: -14.579874038696289
    10. '):
' → logprob: -15.454874038696289

Token 892: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.2020991056924686e-05
    2. '
' → logprob: -11.000032424926758
    3. ' if' → logprob: -12.125032424926758
    4. '       ' → logprob: -12.500032424926758
    5. 'if' → logprob: -13.250032424926758
    6. '<|end|>' → logprob: -13.500032424926758
    7. '               ' → logprob: -14.375032424926758
    8. '            
' → logprob: -14.625032424926758
    9. '   ' → logprob: -14.750032424926758
    10. '		' → logprob: -15.125032424926758

Token 893: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049750637263059616
    2. 'if' (adapté à ' if') → logprob: -3.549750566482544
    3. ' if' → logprob: -3.924750566482544
    4. '
' → logprob: -10.049750328063965
    5. '               ' → logprob: -12.299750328063965
    6. '       ' → logprob: -12.674750328063965
    7. '            
' → logprob: -14.174750328063965
    8. '		' → logprob: -14.424750328063965
    9. '```' → logprob: -14.549750328063965
    10. '          ' → logprob: -15.049750328063965

Token 894: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5759400725364685
    2. ' max' → logprob: -0.8259400725364685
    3. '	max' → logprob: -14.700940132141113
    4. '           ' → logprob: -17.075939178466797
    5. '(max' → logprob: -17.075939178466797
    6. '   ' → logprob: -17.200939178466797
    7. '
' → logprob: -17.200939178466797
    8. ' ' → logprob: -17.700939178466797
    9. '_max' → logprob: -19.450939178466797
    10. 'min' → logprob: -19.825939178466797

Token 895: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.008745640516281128
    2. '_cost' → logprob: -4.7587456703186035
    3. 'dist' → logprob: -9.508745193481445
    4. 'cost' → logprob: -10.133745193481445
    5. 'max' → logprob: -13.258745193481445
    6. '_' → logprob: -13.258745193481445
    7. '[' → logprob: -13.633745193481445
    8. '_d' → logprob: -13.758745193481445
    9. '_max' → logprob: -14.008745193481445
    10. '```' → logprob: -14.133745193481445

Token 896: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16022604703903198
    2. '<' → logprob: -1.9102261066436768
    3. ' ' → logprob: -14.660225868225098
    4. '<size' → logprob: -15.535225868225098
    5. '<int' → logprob: -15.660225868225098
    6. '[' → logprob: -15.910225868225098
    7. '<|end|>' → logprob: -15.910225868225098
    8. 'min' → logprob: -16.160226821899414
    9. '<
' → logprob: -16.535226821899414
    10. ',' → logprob: -16.535226821899414

Token 897: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001584850688232109
    2. ' min' → logprob: -8.750158309936523
    3. '	min' → logprob: -21.125158309936523
    4. '_min' → logprob: -21.625158309936523
    5. '(min' → logprob: -23.125158309936523
    6. '=min' → logprob: -23.250158309936523
    7. '.min' → logprob: -24.750158309936523
    8. '   ' → logprob: -25.125158309936523
    9. '[min' → logprob: -25.250158309936523
    10. '
' → logprob: -25.250158309936523

Token 898: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.2664456789934775e-06
    2. 'cost' → logprob: -13.750000953674316
    3. '_code' → logprob: -16.250001907348633
    4. '_COST' → logprob: -17.375001907348633
    5. '_' → logprob: -17.500001907348633
    6. '-cost' → logprob: -17.625001907348633
    7. '_c' → logprob: -17.750001907348633
    8. 'Cost' → logprob: -18.000001907348633
    9. ' cost' → logprob: -18.625001907348633
    10. '_cos' → logprob: -19.125001907348633

Token 899: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3151112198829651
    2. ':
' → logprob: -1.5651111602783203
    3. '               ' → logprob: -2.8151111602783203
    4. '           ' → logprob: -6.69011116027832
    5. '):
' → logprob: -10.44011116027832
    6. ',' → logprob: -11.94011116027832
    7. ':
' → logprob: -11.94011116027832
    8. '                       ' → logprob: -12.19011116027832
    9. ' :
' → logprob: -12.19011116027832
    10. ')' → logprob: -12.31511116027832

Token 900: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008376232581213117
    2. 'min' → logprob: -7.375837802886963
    3. '           ' → logprob: -9.125837326049805
    4. ' min' → logprob: -9.250837326049805
    5. '                   ' → logprob: -12.750837326049805
    6. '              ' → logprob: -13.875837326049805
    7. '   ' → logprob: -14.125837326049805
    8. '                       ' → logprob: -15.250837326049805
    9. '	min' → logprob: -15.250837326049805
    10. '(min' → logprob: -15.625837326049805

Token 901: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.01442170049995184
    2. ' min' → logprob: -4.264421463012695
    3. '               ' → logprob: -8.264421463012695
    4. '                   ' → logprob: -15.389421463012695
    5. '	min' → logprob: -15.764421463012695
    6. '_min' → logprob: -15.889421463012695
    7. '           ' → logprob: -16.139421463012695
    8. '   ' → logprob: -17.514421463012695
    9. '(min' → logprob: -18.014421463012695
    10. ',min' → logprob: -18.764421463012695

Token 902: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.45848218582978e-06
    2. 'cost' → logprob: -13.12500286102295
    3. '_code' → logprob: -16.000001907348633
    4. '_city' → logprob: -16.250001907348633
    5. '_c' → logprob: -17.375001907348633
    6. '_' → logprob: -17.375001907348633
    7. '_cos' → logprob: -17.375001907348633
    8. '_COST' → logprob: -17.375001907348633
    9. ' cost' → logprob: -18.125001907348633
    10. '_token' → logprob: -18.125001907348633

Token 903: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484341621399
    2. ' =' → logprob: -0.6931484341621399
    3. ',' → logprob: -14.318148612976074
    4. ' =
' → logprob: -15.693148612976074
    5. ' ' → logprob: -15.943148612976074
    6. '=
' → logprob: -16.443147659301758
    7. '=min' → logprob: -16.568147659301758
    8. ')' → logprob: -17.193147659301758
    9. '=

' → logprob: -17.193147659301758
    10. '               ' → logprob: -17.443147659301758

Token 904: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0019286326132714748
    2. ' max' → logprob: -6.251928806304932
    3. '	max' → logprob: -19.751928329467773
    4. '(max' → logprob: -20.501928329467773
    5. '[max' → logprob: -20.751928329467773
    6. '=max' → logprob: -20.876928329467773
    7. '_max' → logprob: -21.001928329467773
    8. '
' → logprob: -21.626928329467773
    9. 'm' → logprob: -22.251928329467773
    10. 'ma' → logprob: -22.376928329467773

Token 905: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -6.194110756041482e-05
    2. 'dist' → logprob: -9.750061988830566
    3. '(dist' → logprob: -13.250061988830566
    4. '_cost' → logprob: -14.000061988830566
    5. '_max' → logprob: -15.250061988830566
    6. '_' → logprob: -15.500061988830566
    7. '	dist' → logprob: -15.750061988830566
    8. ' dist' → logprob: -15.875061988830566
    9. '_d' → logprob: -16.12506103515625
    10. 'max' → logprob: -17.37506103515625

Token 906: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011330148205161095
    2. '        
' → logprob: -5.2613301277160645
    3. '
' → logprob: -5.3863301277160645
    4. 'return' → logprob: -6.8863301277160645
    5. ' return' → logprob: -8.261330604553223
    6. '    
' → logprob: -9.386330604553223
    7. '       
' → logprob: -10.386330604553223
    8. '                
' → logprob: -10.636330604553223
    9. '               ' → logprob: -11.261330604553223
    10. '            
' → logprob: -11.386330604553223

Token 907: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015735192224383354
    2. '
' → logprob: -4.265735149383545
    3. 'return' → logprob: -6.765735149383545
    4. ' return' → logprob: -7.890735149383545
    5. '        
' → logprob: -10.265735626220703
    6. '
' → logprob: -12.640735626220703
    7. '               ' → logprob: -13.140735626220703
    8. '    
' → logprob: -13.890735626220703
    9. '      ' → logprob: -14.515735626220703
    10. '```' → logprob: -14.515735626220703

Token 908: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3889792263507843
    2. 'return' (adapté à ' return') → logprob: -1.138979196548462
    3. '
' → logprob: -6.888979434967041
    4. '   ' → logprob: -7.263979434967041
    5. ' return' → logprob: -8.013978958129883
    6. '	return' → logprob: -10.013978958129883
    7. '	' → logprob: -11.888978958129883
    8. '        
' → logprob: -13.513978958129883
    9. '    
' → logprob: -14.513978958129883
    10. '           ' → logprob: -14.763978958129883

Token 909: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0019289902411401272
    2. ' min' → logprob: -6.251928806304932
    3. 'int' → logprob: -15.00192928314209
    4. '	min' → logprob: -18.126928329467773
    5. '(min' → logprob: -18.251928329467773
    6. '_min' → logprob: -18.626928329467773
    7. '   ' → logprob: -19.126928329467773
    8. '[min' → logprob: -20.126928329467773
    9. 'max' → logprob: -21.001928329467773
    10. ' int' → logprob: -21.126928329467773

Token 910: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.6240566083070007e-06
    2. 'cost' → logprob: -13.375001907348633
    3. '_COST' → logprob: -17.500001907348633
    4. 'Cost' → logprob: -17.750001907348633
    5. '_code' → logprob: -18.875001907348633
    6. '_c' → logprob: -18.875001907348633
    7. '_' → logprob: -19.250001907348633
    8. ' cost' → logprob: -19.500001907348633
    9. '_token' → logprob: -19.625001907348633
    10. '-cost' → logprob: -20.125001907348633

Token 911: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2632049322128296
    2. '<|end|>' → logprob: -1.5132049322128296
    3. '   ' → logprob: -4.888205051422119
    4. '    
' → logprob: -6.263205051422119
    5. '<|end|>' → logprob: -7.263205051422119
    6. 'def' → logprob: -7.638205051422119
    7. '

' → logprob: -7.888205051422119
    8. '  
' → logprob: -9.513204574584961
    9. '```' → logprob: -10.388204574584961
    10. ' 
' → logprob: -10.763204574584961

Token 912: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7452201247215271
    2. '   ' → logprob: -0.8702201247215271
    3. 'def' → logprob: -2.745220184326172
    4. '<|end|>' → logprob: -3.370220184326172
    5. '    
' → logprob: -4.995220184326172
    6. '<|end|>' → logprob: -8.120220184326172
    7. '```' → logprob: -8.745220184326172
    8. '

' → logprob: -8.870220184326172
    9. ' def' → logprob: -9.120220184326172
    10. '  
' → logprob: -9.495220184326172

Token 913: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.56102097814437e-05
    2. ' def' → logprob: -10.250045776367188
    3. '   ' → logprob: -11.500045776367188
    4. '	def' → logprob: -17.500045776367188
    5. '
' → logprob: -17.625045776367188
    6. '```' → logprob: -18.250045776367188
    7. '    
' → logprob: -20.125045776367188
    8. ' ' → logprob: -20.625045776367188
    9. '  ' → logprob: -22.375045776367188
    10. '  
' → logprob: -23.625045776367188

Token 914: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.470059871673584
    2. 'def' → logprob: -2.220059871673584
    3. ' def' → logprob: -2.470059871673584
    4. ' process' → logprob: -2.720059871673584
    5. ' run' → logprob: -2.720059871673584
    6. 'solve' → logprob: -3.220059871673584
    7. 'process' → logprob: -5.345059871673584
    8. ' answer' → logprob: -5.720059871673584
    9. 'run' → logprob: -6.220059871673584
    10. 'answer' → logprob: -9.595060348510742

Token 915: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015443802112713456
    2. '(' → logprob: -6.50154447555542
    3. '_queries' → logprob: -11.126543998718262
    4. '_query' → logprob: -12.001543998718262
    5. '(s' → logprob: -12.251543998718262
    6. 'self' → logprob: -12.251543998718262
    7. ' (' → logprob: -12.751543998718262
    8. '()' → logprob: -13.126543998718262
    9. '(
' → logprob: -13.126543998718262
    10. '_' → logprob: -13.126543998718262

Token 916: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5661690831184387
    2. '):
' → logprob: -1.191169023513794
    3. '):' → logprob: -2.066169023513794
    4. 'self' → logprob: -6.691169261932373
    5. ',self' → logprob: -8.441168785095215
    6. ')' → logprob: -8.941168785095215
    7. '):
' → logprob: -9.816168785095215
    8. '   ' → logprob: -10.191168785095215
    9. ' ,' → logprob: -10.691168785095215
    10. '(self' → logprob: -11.066168785095215

Token 917: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017115899827331305
    2. 'self' → logprob: -7.126711368560791
    3. '   ' → logprob: -7.876711368560791
    4. ':' → logprob: -8.62671184539795
    5. '(' → logprob: -8.87671184539795
    6. '(
' → logprob: -9.87671184539795
    7. '       ' → logprob: -9.87671184539795
    8. ':
' → logprob: -10.00171184539795
    9. ' self' → logprob: -11.00171184539795
    10. '	self' → logprob: -11.25171184539795

Token 918: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -1.9266199160483666e-05
    2. '[List' → logprob: -11.250019073486328
    3. ' List' → logprob: -12.000019073486328
    4. 'list' → logprob: -16.250019073486328
    5. 'None' → logprob: -17.125019073486328
    6. '	List' → logprob: -20.750019073486328
    7. 'int' → logprob: -21.375019073486328
    8. '[' → logprob: -21.375019073486328
    9. '   ' → logprob: -21.500019073486328
    10. '_list' → logprob: -21.875019073486328

Token 919: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00033760786755010486
    2. '[List' → logprob: -8.375337600708008
    3. '[' → logprob: -9.375337600708008
    4. '[Int' → logprob: -10.875337600708008
    5. '[
' → logprob: -12.875337600708008
    6. '[in' → logprob: -14.875337600708008
    7. '<int' → logprob: -15.750337600708008
    8. 'int' → logprob: -16.250337600708008
    9. '```' → logprob: -17.250337600708008
    10. '[(' → logprob: -17.500337600708008

Token 920: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.31348809599876404
    2. ']:' → logprob: -1.3134881258010864
    3. ']' → logprob: -9.188488006591797
    4. ']:
' → logprob: -9.188488006591797
    5. '):
' → logprob: -11.313488006591797
    6. ']:

' → logprob: -12.063488006591797
    7. '   ' → logprob: -14.063488006591797
    8. ':' → logprob: -14.188488006591797
    9. '):' → logprob: -14.438488006591797
    10. '"]:
' → logprob: -14.688488006591797

Token 921: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005039428360760212
    2. '	' → logprob: -9.000503540039062
    3. 'result' → logprob: -9.125503540039062
    4. '   ' → logprob: -9.375503540039062
    5. 'results' → logprob: -9.875503540039062
    6. '[' → logprob: -9.875503540039062
    7. ' results' → logprob: -10.875503540039062
    8. '```' → logprob: -10.875503540039062
    9. ' result' → logprob: -11.375503540039062
    10. '
' → logprob: -11.375503540039062

Token 922: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.16118431091308594
    2. '       ' → logprob: -2.411184310913086
    3. 'result' → logprob: -2.911184310913086
    4. ' results' → logprob: -5.661184310913086
    5. 'res' → logprob: -6.911184310913086
    6. 'return' → logprob: -9.161184310913086
    7. ' result' → logprob: -9.661184310913086
    8. 'answers' → logprob: -9.661184310913086
    9. 'output' → logprob: -10.786184310913086
    10. '```' → logprob: -12.536184310913086

Token 923: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270374059677124
    2. '=' → logprob: -2.127037525177002
    3. '=[]' → logprob: -9.502037048339844
    4. '=[]
' → logprob: -11.252037048339844
    5. '[]' → logprob: -11.752037048339844
    6. ' ' → logprob: -12.377037048339844
    7. '.append' → logprob: -12.377037048339844
    8. '[' → logprob: -13.627037048339844
    9. ':' → logprob: -13.877037048339844
    10. ' =[' → logprob: -13.877037048339844

Token 924: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2519832253456116
    2. '[]
' → logprob: -1.5019831657409668
    3. ' []' → logprob: -10.251983642578125
    4. ' []
' → logprob: -11.501983642578125
    5. '[' → logprob: -11.751983642578125
    6. '[]

' → logprob: -14.376983642578125
    7. '[
' → logprob: -15.626983642578125
    8. '[])
' → logprob: -17.001983642578125
    9. '   ' → logprob: -17.626983642578125
    10. '[]"' → logprob: -19.001983642578125

Token 925: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005498529877513647
    2. ' for' → logprob: -5.88049840927124
    3. 'for' → logprob: -6.13049840927124
    4. '	' → logprob: -7.88049840927124
    5. '   ' → logprob: -9.880498886108398
    6. '	for' → logprob: -10.130498886108398
    7. '
' → logprob: -11.130498886108398
    8. '```' → logprob: -11.505498886108398
    9. '	   ' → logprob: -12.255498886108398
    10. '        
' → logprob: -12.380498886108398

Token 926: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018199224025011063
    2. '       ' → logprob: -4.018199443817139
    3. ' for' → logprob: -10.01819896697998
    4. '	for' → logprob: -12.64319896697998
    5. '   ' → logprob: -13.64319896697998
    6. '```' → logprob: -15.39319896697998
    7. '	' → logprob: -15.64319896697998
    8. ' ' → logprob: -18.893199920654297
    9. '_for' → logprob: -20.643199920654297
    10. 'For' → logprob: -20.768199920654297

Token 927: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.05424371734261513
    2. ' (' → logprob: -3.429243803024292
    3. 'a' → logprob: -3.929243803024292
    4. ' a' → logprob: -7.679243564605713
    5. '   ' → logprob: -8.804244041442871
    6. 'query' → logprob: -9.929244041442871
    7. '(u' → logprob: -10.804244041442871
    8. 'q' → logprob: -11.054244041442871
    9. '(q' → logprob: -11.804244041442871
    10. '(' → logprob: -12.179244041442871

Token 928: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.625
    3. '(a' → logprob: -16.0
    4. '   ' → logprob: -20.0
    5. 'u' → logprob: -21.125
    6. '	a' → logprob: -21.5
    7. ')a' → logprob: -21.5
    8. 'x' → logprob: -22.125
    9. '[a' → logprob: -22.25
    10. ')' → logprob: -23.125

Token 929: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029867926612496376
    2. ',b' → logprob: -3.5298678874969482
    3. ' ,' → logprob: -9.154868125915527
    4. ',
' → logprob: -11.529868125915527
    5. 'b' → logprob: -14.404868125915527
    6. ',v' → logprob: -14.904868125915527
    7. ',int' → logprob: -15.404868125915527
    8. '‌,' → logprob: -16.15486717224121
    9. ',\
' → logprob: -16.27986717224121
    10. ',a' → logprob: -16.52986717224121

Token 930: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.004085997585207224
    2. ',' → logprob: -5.504086017608643
    3. ' ,' → logprob: -12.004085540771484
    4. ',
' → logprob: -14.379085540771484
    5. ',int' → logprob: -15.004085540771484
    6. 'c' → logprob: -15.754085540771484
    7. ',w' → logprob: -16.129085540771484
    8. ',C' → logprob: -16.504085540771484
    9. ',k' → logprob: -16.504085540771484
    10. ',v' → logprob: -16.879085540771484

Token 931: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0171730425208807
    2. '):' → logprob: -4.142172813415527
    3. '):
' → logprob: -6.892172813415527
    4. ',' → logprob: -10.142172813415527
    5. ',)' → logprob: -10.642172813415527
    6. ')
' → logprob: -10.767172813415527
    7. '),' → logprob: -11.142172813415527
    8. ')>' → logprob: -12.392172813415527
    9. ')`' → logprob: -12.767172813415527
    10. ' )' → logprob: -12.892172813415527

Token 932: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602395623922348
    2. 'in' → logprob: -1.910239577293396
    3. ',' → logprob: -11.785239219665527
    4. ')' → logprob: -12.160239219665527
    5. '	in' → logprob: -14.035239219665527
    6. ' ' → logprob: -14.910239219665527
    7. '  ' → logprob: -15.160239219665527
    8. '_in' → logprob: -15.285239219665527
    9. ',in' → logprob: -15.410239219665527
    10. '_' → logprob: -15.910239219665527

Token 933: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.676292231422849e-05
    2. ' self' → logprob: -11.000017166137695
    3. '(self' → logprob: -18.375017166137695
    4. '   ' → logprob: -19.875017166137695
    5. '[self' → logprob: -21.000017166137695
    6. '       ' → logprob: -21.250017166137695
    7. '
' → logprob: -21.875017166137695
    8. '	self' → logprob: -21.875017166137695
    9. '           ' → logprob: -23.625017166137695
    10. ' ' → logprob: -24.125017166137695

Token 934: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.034592388459714e-06
    2. 'queries' → logprob: -12.250005722045898
    3. '.questions' → logprob: -14.250005722045898
    4. '.requests' → logprob: -15.250005722045898
    5. 'self' → logprob: -15.375005722045898
    6. '
' → logprob: -17.6250057220459
    7. ' .' → logprob: -18.1250057220459
    8. '.
' → logprob: -18.2500057220459
    9. ' queries' → logprob: -18.6250057220459
    10. '.self' → logprob: -18.7500057220459

Token 935: 'queries' (ID: 63909)
  Prédit: 'queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.00026217024424113333
    2. 'self' → logprob: -8.250262260437012
    3. 'questions' → logprob: -14.875262260437012
    4. 'requests' → logprob: -15.250262260437012
    5. 'quests' → logprob: -15.750262260437012
    6. ' queries' → logprob: -15.750262260437012
    7. 'queues' → logprob: -18.000261306762695
    8. '.' → logprob: -18.125261306762695
    9. 'solutions' → logprob: -18.125261306762695
    10. '
' → logprob: -18.500261306762695

Token 936: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028174780309200287
    2. ':
' → logprob: -5.877817630767822
    3. '       ' → logprob: -12.377817153930664
    4. '):' → logprob: -12.627817153930664
    5. '<|end|>' → logprob: -13.502817153930664
    6. ',' → logprob: -13.752817153930664
    7. '):
' → logprob: -14.127817153930664
    8. ':

' → logprob: -14.752817153930664
    9. ':
' → logprob: -14.877817153930664
    10. '<|end|>' → logprob: -15.377817153930664

Token 937: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1289307326078415
    2. '       ' → logprob: -2.1289308071136475
    3. '```' → logprob: -6.628930568695068
    4. 'results' → logprob: -8.378931045532227
    5. '
' → logprob: -8.753931045532227
    6. ' results' → logprob: -9.378931045532227
    7. '<|end|>' → logprob: -9.878931045532227
    8. 'result' → logprob: -10.253931045532227
    9. '[' → logprob: -10.378931045532227
    10. '`' → logprob: -11.503931045532227

Token 938: ' #' (ID: 1069)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.3261188268661499
    2. ' results' → logprob: -1.32611882686615
    3. '           ' → logprob: -4.5761189460754395
    4. 'result' → logprob: -6.4511189460754395
    5. 'res' → logprob: -7.8261189460754395
    6. ' result' → logprob: -8.326118469238281
    7. ' res' → logprob: -9.326118469238281
    8. ' cost' → logprob: -9.576118469238281
    9. 'cost' → logprob: -9.826118469238281
    10. '	results' → logprob: -11.201118469238281

Token 939: ' careful' (ID: 25120)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5050888061523438
    2. 'results' → logprob: -1.5050888061523438
    3. 'res' → logprob: -2.2550888061523438
    4. 'result' → logprob: -2.8800888061523438
    5. '           ' → logprob: -5.005088806152344
    6. ' cost' → logprob: -5.380088806152344
    7. 'answer' → logprob: -7.005088806152344
    8. ' results' → logprob: -7.505088806152344
    9. 'ans' → logprob: -8.255088806152344
    10. ' res' → logprob: -8.380088806152344

Token 940: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09903092682361603
    2. ' with' → logprob: -2.5990309715270996
    3. '            
' → logprob: -4.9740309715271
    4. '            ' → logprob: -5.3490309715271
    5. ' to' → logprob: -6.4740309715271
    6. 'with' → logprob: -6.9740309715271
    7. '
' → logprob: -7.0990309715271
    8. '               ' → logprob: -7.0990309715271
    9. ':' → logprob: -7.2240309715271
    10. ',' → logprob: -7.4740309715271

Token 941: ' input' (ID: 3422)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.7726081609725952
    2. ' cost' → logprob: -1.1476081609725952
    3. ' result' → logprob: -2.1476082801818848
    4. 'results' → logprob: -3.0226082801818848
    5. 'cost' → logprob: -4.022608280181885
    6. ' res' → logprob: -4.022608280181885
    7. 'res' → logprob: -4.647608280181885
    8. 'result' → logprob: -4.772608280181885
    9. ' ans' → logprob: -7.272608280181885
    10. '           ' → logprob: -7.522608280181885

Token 942: ' guarantees' (ID: 49460)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0437591075897217
    2. '.append' → logprob: -1.5437591075897217
    3. ',' → logprob: -2.4187591075897217
    4. '           ' → logprob: -2.6687591075897217
    5. '<|end|>' → logprob: -3.0437591075897217
    6. ')' → logprob: -3.4187591075897217
    7. '.' → logprob: -3.6687591075897217
    8. '       ' → logprob: -3.6687591075897217
    9. '<|end|>' → logprob: -4.043759346008301
    10. ':' → logprob: -4.168759346008301

Token 943: ' a' (ID: 261)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9209380149841309
    2. ' that' → logprob: -0.9209380149841309
    3. ' results' → logprob: -2.295938014984131
    4. 'that' → logprob: -3.295938014984131
    5. 'results' → logprob: -3.545938014984131
    6. 'a' → logprob: -4.170938014984131
    7. ' a' → logprob: -4.295938014984131
    8. '            ' → logprob: -5.545938014984131
    9. ' all' → logprob: -6.420938014984131
    10. ' the' → logprob: -7.420938014984131

Token 944: ' <' (ID: 464)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7552095055580139
    2. '!=' → logprob: -0.8802095055580139
    3. ',' → logprob: -2.255209445953369
    4. ',b' → logprob: -5.255209445953369
    5. ' in' → logprob: -5.880209445953369
    6. 'in' → logprob: -7.130209445953369
    7. '<=' → logprob: -7.630209445953369
    8. ' <=' → logprob: -7.880209445953369
    9. 'd' → logprob: -8.880209922790527
    10. 'a' → logprob: -9.005209922790527

Token 945: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0411364808678627
    2. ' b' → logprob: -3.2911365032196045
    3. '=' → logprob: -5.791136264801025
    4. ',' → logprob: -11.166136741638184
    5. ' ' → logprob: -11.666136741638184
    6. ',b' → logprob: -12.291136741638184
    7. '=b' → logprob: -12.416136741638184
    8. 'c' → logprob: -13.416136741638184
    9. '<|end|>' → logprob: -13.791136741638184
    10. ' =' → logprob: -13.916136741638184

Token 946: ' <' (ID: 464)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09913986176252365
    2. '<|end|>' → logprob: -3.099139928817749
    3. ',' → logprob: -3.349139928817749
    4. ' and' → logprob: -5.59913969039917
    5. '       ' → logprob: -6.22413969039917
    6. '<|end|>' → logprob: -6.34913969039917
    7. '            
' → logprob: -6.97413969039917
    8. '               ' → logprob: -7.34913969039917
    9. '            ' → logprob: -7.34913969039917
    10. '		' → logprob: -7.72413969039917

Token 947: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005929154809564352
    2. ' c' → logprob: -5.130928993225098
    3. '=' → logprob: -15.505928993225098
    4. '=c' → logprob: -16.380929946899414
    5. '	c' → logprob: -16.630929946899414
    6. ' ' → logprob: -17.130929946899414
    7. ')c' → logprob: -17.255929946899414
    8. '_c' → logprob: -17.505929946899414
    9. '<c' → logprob: -17.880929946899414
    10. '<|end|>' → logprob: -18.505929946899414

Token 948: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004259208217263222
    2. '
' → logprob: -6.25425910949707
    3. '       ' → logprob: -6.62925910949707
    4. '            
' → logprob: -8.00425910949707
    5. '        
' → logprob: -8.50425910949707
    6. ',' → logprob: -9.00425910949707
    7. '    
' → logprob: -9.25425910949707
    8. '  
' → logprob: -9.62925910949707
    9. '<|end|>' → logprob: -9.87925910949707
    10. '   ' → logprob: -11.00425910949707

Token 949: ' solution' (ID: 7578)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030811747536063194
    2. '#' → logprob: -4.655811786651611
    3. ' results' → logprob: -4.905811786651611
    4. 'results' → logprob: -5.030811786651611
    5. ' #' → logprob: -5.905811786651611
    6. '            
' → logprob: -7.155811786651611
    7. ' the' → logprob: -7.280811786651611
    8. '            ' → logprob: -7.405811786651611
    9. ' for' → logprob: -7.905811786651611
    10. '
' → logprob: -8.405811309814453

Token 950: ' does' (ID: 2226)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2720482051372528
    2. '           ' → logprob: -2.522048234939575
    3. '.append' → logprob: -2.772048234939575
    4. '.setdefault' → logprob: -3.897048234939575
    5. '<|end|>' → logprob: -4.147047996520996
    6. '[' → logprob: -4.897047996520996
    7. '            
' → logprob: -5.147047996520996
    8. '       ' → logprob: -5.272047996520996
    9. ':' → logprob: -5.397047996520996
    10. '<|end|>' → logprob: -5.647047996520996

Token 951: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11057876795530319
    2. '           ' → logprob: -2.610578775405884
    3. 'not' → logprob: -3.485578775405884
    4. 'n't' → logprob: -8.360578536987305
    5. '               ' → logprob: -9.360578536987305
    6. '(not' → logprob: -9.485578536987305
    7. '       ' → logprob: -10.735578536987305
    8. '_not' → logprob: -10.860578536987305
    9. '.append' → logprob: -10.985578536987305
    10. '            ' → logprob: -11.235578536987305

Token 952: ' rely' (ID: 25222)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009195583988912404
    2. '
' → logprob: -8.125919342041016
    3. '       ' → logprob: -8.500919342041016
    4. '<|end|>' → logprob: -8.625919342041016
    5. 'results' → logprob: -9.625919342041016
    6. '            
' → logprob: -10.125919342041016
    7. ' results' → logprob: -10.500919342041016
    8. '```' → logprob: -11.000919342041016
    9. '{
' → logprob: -11.125919342041016
    10. '               ' → logprob: -11.250919342041016

Token 953: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0185888409614563
    2. ' on' → logprob: -4.768589019775391
    3. '               ' → logprob: -5.393589019775391
    4. '            ' → logprob: -6.768589019775391
    5. ' only' → logprob: -7.143589019775391
    6. '             ' → logprob: -7.143589019775391
    7. '            
' → logprob: -7.143589019775391
    8. '       ' → logprob: -8.14358901977539
    9. 'on' → logprob: -8.39358901977539
    10. '          ' → logprob: -8.39358901977539

Token 954: ' that' (ID: 484)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.29757609963417053
    2. 'results' → logprob: -2.2975761890411377
    3. '           ' → logprob: -2.4225761890411377
    4. ' a' → logprob: -3.9225761890411377
    5. 'a' → logprob: -4.047575950622559
    6. '            ' → logprob: -4.672575950622559
    7. '_' → logprob: -5.547575950622559
    8. ' the' → logprob: -6.047575950622559
    9. ' for' → logprob: -6.672575950622559
    10. 'self' → logprob: -6.672575950622559

Token 955: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01818295195698738
    2. '
' → logprob: -4.393182754516602
    3. '<|end|>' → logprob: -5.893182754516602
    4. '       ' → logprob: -6.393182754516602
    5. '            
' → logprob: -8.018182754516602
    6. '<|end|>' → logprob: -8.393182754516602
    7. '  
' → logprob: -9.018182754516602
    8. '        
' → logprob: -9.393182754516602
    9. '{
' → logprob: -9.393182754516602
    10. '    
' → logprob: -9.393182754516602

Token 956: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012771383626386523
    2. '       ' → logprob: -6.751276969909668
    3. '
' → logprob: -10.376276969909668
    4. '<|end|>' → logprob: -11.001276969909668
    5. ' results' → logprob: -11.251276969909668
    6. 'result' → logprob: -11.501276969909668
    7. 'results' → logprob: -11.751276969909668
    8. '```' → logprob: -11.751276969909668
    9. '            
' → logprob: -12.126276969909668
    10. '        
' → logprob: -12.251276969909668

Token 957: ' results' (ID: 4376)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.9326928853988647
    2. 'results' (adapté à ' results') → logprob: -1.1826928853988647
    3. 'res' → logprob: -1.4326928853988647
    4. 'result' → logprob: -3.0576930046081543
    5. '           ' → logprob: -4.682693004608154
    6. 'answer' → logprob: -6.432693004608154
    7. ' cost' → logprob: -6.432693004608154
    8. 'ans' → logprob: -6.932693004608154
    9. ' results' → logprob: -7.432693004608154
    10. ' res' → logprob: -8.807692527770996

Token 958: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003963569179177284
    2. '.' → logprob: -7.875396251678467
    3. '.app' → logprob: -11.875396728515625
    4. '.extend' → logprob: -12.125396728515625
    5. '.ap' → logprob: -12.750396728515625
    6. '.push' → logprob: -15.000396728515625
    7. 'append' → logprob: -15.125396728515625
    8. ').' → logprob: -16.500396728515625
    9. '.add' → logprob: -17.000396728515625
    10. '.Append' → logprob: -17.250396728515625

Token 959: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.77627644513268e-06
    2. '(' → logprob: -11.750008583068848
    3. 'self' → logprob: -14.000008583068848
    4. '(
' → logprob: -17.375009536743164
    5. ' (' → logprob: -20.625009536743164
    6. '(this' → logprob: -20.750009536743164
    7. ' self' → logprob: -21.375009536743164
    8. '((' → logprob: -21.500009536743164
    9. '(sel' → logprob: -21.750009536743164
    10. '(str' → logprob: -22.125009536743164

Token 960: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.584239938296378e-06
    2. '_cost' → logprob: -12.000007629394531
    3. '.' → logprob: -13.875007629394531
    4. '   ' → logprob: -16.12500762939453
    5. ')._' → logprob: -16.12500762939453
    6. ' .' → logprob: -16.50000762939453
    7. '.cost' → logprob: -16.62500762939453
    8. ')_' → logprob: -17.12500762939453
    9. '.\' → logprob: -17.37500762939453
    10. '_code' → logprob: -18.12500762939453

Token 961: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: 0.0
    2. '_cost' → logprob: -17.125
    3. '(cost' → logprob: -20.625
    4. ' cost' → logprob: -21.125
    5. '
' → logprob: -21.625
    6. 'color' → logprob: -21.75
    7. '.cost' → logprob: -22.125
    8. '_' → logprob: -22.375
    9. '-cost' → logprob: -22.375
    10. '```' → logprob: -22.5

Token 962: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.9361264946837764e-07
    2. 'for' → logprob: -15.75
    3. ')_' → logprob: -18.25
    4. ')' → logprob: -18.625
    5. '_FOR' → logprob: -19.125
    6. 'For' → logprob: -19.75
    7. ' _' → logprob: -20.5
    8. '(_' → logprob: -21.125
    9. '_to' → logprob: -21.25
    10. ' for' → logprob: -21.75

Token 963: '_theme' (ID: 47076)
  Prédit: '_theme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_theme' → logprob: -0.0028776300605386496
    2. 'theme' → logprob: -5.877877712249756
    3. 'the' → logprob: -10.002877235412598
    4. 'them' → logprob: -11.502877235412598
    5. '_the' → logprob: -11.877877235412598
    6. '(theme' → logprob: -12.127877235412598
    7. '(a' → logprob: -13.627877235412598
    8. '(' → logprob: -14.252877235412598
    9. ' theme' → logprob: -14.752877235412598
    10. 'a' → logprob: -15.252877235412598

Token 964: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. ' (' → logprob: -15.125004768371582
    4. ')' → logprob: -16.2500057220459
    5. ')(' → logprob: -18.0000057220459
    6. '(
' → logprob: -18.0000057220459
    7. 'a' → logprob: -18.0000057220459
    8. '((' → logprob: -18.8750057220459
    9. ' ' → logprob: -19.6250057220459
    10. '```' → logprob: -20.0000057220459

Token 965: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.029888061806559563
    2. ',' → logprob: -3.529888153076172
    3. ' ,' → logprob: -9.029888153076172
    4. ',
' → logprob: -11.404888153076172
    5. 'b' → logprob: -12.779888153076172
    6. ',c' → logprob: -13.029888153076172
    7. ' ' → logprob: -15.154888153076172
    8. '   ' → logprob: -15.529888153076172
    9. '
' → logprob: -16.279888153076172
    10. ',

' → logprob: -16.404888153076172

Token 966: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0016113892197608948
    2. ',' → logprob: -6.501611232757568
    3. 'c' → logprob: -9.251611709594727
    4. ' ,' → logprob: -11.626611709594727
    5. ',
' → logprob: -13.376611709594727
    6. ')c' → logprob: -13.626611709594727
    7. ')' → logprob: -14.876611709594727
    8. ',b' → logprob: -16.126611709594727
    9. '```' → logprob: -16.126611709594727
    10. ',C' → logprob: -16.376611709594727

Token 967: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1329508125782013
    2. '))
' → logprob: -2.132950782775879
    3. ')' → logprob: -5.132950782775879
    4. ')
' → logprob: -9.632950782775879
    5. '))
' → logprob: -10.632950782775879
    6. '       ' → logprob: -12.257950782775879
    7. ')))' → logprob: -12.382950782775879
    8. '   ' → logprob: -13.507950782775879
    9. '))

' → logprob: -13.507950782775879
    10. ')c' → logprob: -13.632950782775879

Token 968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10580796748399734
    2. '
' → logprob: -3.1058080196380615
    3. '	' → logprob: -3.6058080196380615
    4. 'return' → logprob: -3.8558080196380615
    5. '	return' → logprob: -5.355807781219482
    6. '```' → logprob: -6.980807781219482
    7. ' return' → logprob: -7.355807781219482
    8. '<|end|>' → logprob: -7.855807781219482
    9. '   ' → logprob: -8.60580825805664
    10. '		
' → logprob: -8.85580825805664

Token 969: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4752609431743622
    2. 'return' (adapté à ' return') → logprob: -0.9752609729766846
    3. ' return' → logprob: -7.6002607345581055
    4. '	return' → logprob: -7.7252607345581055
    5. '   ' → logprob: -8.975260734558105
    6. '	' → logprob: -9.850260734558105
    7. '
' → logprob: -10.100260734558105
    8. '```' → logprob: -11.850260734558105
    9. '<|end|>' → logprob: -11.975260734558105
    10. 'eturn' → logprob: -13.350260734558105

Token 970: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0007099286303855479
    2. ' results' → logprob: -7.2507100105285645
    3. 'result' → logprob: -19.750709533691406
    4. '(results' → logprob: -20.750709533691406
    5. '	results' → logprob: -21.000709533691406
    6. '
' → logprob: -24.000709533691406
    7. '.results' → logprob: -24.625709533691406
    8. 'Results' → logprob: -25.000709533691406
    9. '[' → logprob: -25.250709533691406
    10. ' ' → logprob: -25.500709533691406

Token 971: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 972: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 973: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -4.8828707804204896e-05
    2. ' threading' → logprob: -10.875048637390137
    3. '_main' → logprob: -11.750048637390137
    4. ' run' → logprob: -12.125048637390137
    5. '	main' → logprob: -12.125048637390137
    6. 'main' → logprob: -12.750048637390137
    7. ' solve' → logprob: -12.875048637390137
    8. ' ' → logprob: -13.375048637390137
    9. ' _' → logprob: -13.375048637390137
    10. '_' → logprob: -14.375048637390137

Token 974: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0683535037969705e-05
    2. '():
' → logprob: -11.62501049041748
    3. ' ():' → logprob: -13.75001049041748
    4. '()' → logprob: -14.50001049041748
    5. '():
' → logprob: -16.875011444091797
    6. '(' → logprob: -18.250011444091797
    7. '():

' → logprob: -19.000011444091797
    8. ':' → logprob: -19.250011444091797
    9. '(argv' → logprob: -19.375011444091797
    10. '()>' → logprob: -19.625011444091797

Token 975: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.8939834833145142
    2. 'import' → logprob: -1.0189834833145142
    3. '   ' → logprob: -1.5189834833145142
    4. ' n' → logprob: -5.268983364105225
    5. 'n' → logprob: -5.268983364105225
    6. '	import' → logprob: -7.768983364105225
    7. ' threading' → logprob: -8.518983840942383
    8. '```' → logprob: -9.393983840942383
    9. ' input' → logprob: -10.393983840942383
    10. '	n' → logprob: -11.268983840942383

Token 976: ' input' (ID: 3422)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0402878113090992
    2. ' import' → logprob: -3.290287733078003
    3. 'n' → logprob: -6.290287971496582
    4. ' n' → logprob: -8.540287971496582
    5. 'input' (adapté à ' input') → logprob: -8.915287971496582
    6. '   ' → logprob: -10.290287971496582
    7. 't' → logprob: -11.165287971496582
    8. ' input' → logprob: -11.540287971496582
    9. ' t' → logprob: -13.540287971496582
    10. 'thread' → logprob: -14.665287971496582

Token 977: ' =' (ID: 314)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.6958491802215576
    2. '()' → logprob: -0.8208491802215576
    3. ' =' → logprob: -3.8208491802215576
    4. '_' → logprob: -4.320849418640137
    5. '=' → logprob: -4.445849418640137
    6. '_line' → logprob: -4.945849418640137
    7. '_lines' → logprob: -5.570849418640137
    8. '_str' → logprob: -6.945849418640137
    9. 'data' → logprob: -7.320849418640137
    10. '(' → logprob: -7.445849418640137

Token 978: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03804459050297737
    2. ' sys' → logprob: -3.2880446910858154
    3. '	sys' → logprob: -13.538044929504395
    4. 'lambda' → logprob: -14.038044929504395
    5. '=sys' → logprob: -14.413044929504395
    6. 'input' → logprob: -15.163044929504395
    7. '(sys' → logprob: -16.163043975830078
    8. 'iter' → logprob: -16.288043975830078
    9. 'stdin' → logprob: -17.288043975830078
    10. ' lambda' → logprob: -18.038043975830078

Token 979: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.023312333971261978
    2. '.' → logprob: -3.7733123302459717
    3. '.stdout' → logprob: -10.14831256866455
    4. '.readline' → logprob: -11.27331256866455
    5. '.std' → logprob: -11.64831256866455
    6. '.argv' → logprob: -13.14831256866455
    7. '.__' → logprob: -14.14831256866455
    8. 'stdin' → logprob: -14.27331256866455
    9. '._' → logprob: -14.77331256866455
    10. '.setdefault' → logprob: -14.77331256866455

Token 980: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.030252786353230476
    2. 'read' → logprob: -3.530252695083618
    3. 'rea' → logprob: -8.155252456665039
    4. ' readline' → logprob: -9.155252456665039
    5. '.read' → logprob: -10.530252456665039
    6. 'buffer' → logprob: -10.905252456665039
    7. '.' → logprob: -11.155252456665039
    8. '
' → logprob: -11.780252456665039
    9. '.readlines' → logprob: -12.405252456665039
    10. 'readonly' → logprob: -12.405252456665039

Token 981: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034968426916748285
    2. '()' → logprob: -5.8784966468811035
    3. '    
' → logprob: -8.753497123718262
    4. '
' → logprob: -9.003497123718262
    5. '()
' → logprob: -9.003497123718262
    6. '(n' → logprob: -9.253497123718262
    7. 'n' → logprob: -9.378497123718262
    8. '().' → logprob: -9.503497123718262
    9. '(' → logprob: -12.128497123718262
    10. 'def' → logprob: -12.128497123718262

Token 982: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06224999204277992
    2. 'n' → logprob: -2.8122498989105225
    3. '	n' → logprob: -8.812250137329102
    4. 't' → logprob: -9.562250137329102
    5. ' n' → logprob: -9.812250137329102
    6. '(n' → logprob: -12.562250137329102
    7. '    
' → logprob: -12.812250137329102
    8. '
' → logprob: -14.312250137329102
    9. '_n' → logprob: -14.312250137329102
    10. 'def' → logprob: -15.687250137329102

Token 983: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -3.1782583391759545e-05
    2. '   ' → logprob: -10.750031471252441
    3. 't' → logprob: -11.875031471252441
    4. ' n' → logprob: -13.000031471252441
    5. 'N' → logprob: -15.000031471252441
    6. '	n' → logprob: -15.000031471252441
    7. '    
' → logprob: -15.625031471252441
    8. 'nt' → logprob: -16.000032424926758
    9. '_n' → logprob: -17.750032424926758
    10. '```' → logprob: -18.000032424926758

Token 984: ',q' (ID: 86188)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6629745960235596
    2. '=' → logprob: -1.0379745960235596
    3. ' =' → logprob: -2.0379745960235596
    4. ' ,' → logprob: -9.16297435760498
    5. ' ' → logprob: -9.91297435760498
    6. '=int' → logprob: -9.91297435760498
    7. ',n' → logprob: -12.16297435760498
    8. '  ' → logprob: -12.91297435760498
    9. '.' → logprob: -13.28797435760498
    10. ' =
' → logprob: -13.78797435760498

Token 985: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6941170692443848
    2. ' =' → logprob: -0.6941170692443848
    3. ',' → logprob: -6.944117069244385
    4. ' ' → logprob: -13.194116592407227
    5. '   ' → logprob: -14.194116592407227
    6. '=int' → logprob: -14.319116592407227
    7. ' ,' → logprob: -14.444116592407227
    8. '    ' → logprob: -14.944116592407227
    9. '=input' → logprob: -14.944116592407227
    10. '  ' → logprob: -15.444116592407227

Token 986: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1602255403995514
    2. ' map' → logprob: -1.910225510597229
    3. '	map' → logprob: -14.285225868225098
    4. 'm' → logprob: -14.535225868225098
    5. '(map' → logprob: -16.78522491455078
    6. 'list' → logprob: -17.16022491455078
    7. 'ma' → logprob: -17.41022491455078
    8. '[' → logprob: -17.41022491455078
    9. ' ' → logprob: -17.66022491455078
    10. '
' → logprob: -18.16022491455078

Token 987: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01316317543387413
    2. '(' → logprob: -5.013163089752197
    3. '(lambda' → logprob: -5.388163089752197
    4. '(str' → logprob: -6.388163089752197
    5. '(input' → logprob: -8.888163566589355
    6. 'int' → logprob: -11.138163566589355
    7. '[int' → logprob: -11.388163566589355
    8. '(list' → logprob: -12.388163566589355
    9. '(in' → logprob: -13.513163566589355
    10. 'lambda' → logprob: -13.638163566589355

Token 988: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03403717651963234
    2. '(' → logprob: -3.5340371131896973
    3. ',input' → logprob: -6.659037113189697
    4. 'input' → logprob: -6.909037113189697
    5. '(sys' → logprob: -7.034037113189697
    6. ',' → logprob: -7.159037113189697
    7. ')' → logprob: -9.034037590026855
    8. '=input' → logprob: -9.159037590026855
    9. 'sys' → logprob: -10.659037590026855
    10. '(line' → logprob: -10.784037590026855

Token 989: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009221808286383748
    2. '()' → logprob: -7.000922203063965
    3. '())' → logprob: -11.500922203063965
    4. '()[' → logprob: -15.500922203063965
    5. '(' → logprob: -15.625922203063965
    6. '()
' → logprob: -16.00092124938965
    7. ')' → logprob: -17.50092124938965
    8. '().'' → logprob: -18.12592124938965
    9. '().
' → logprob: -18.37592124938965
    10. ' ().' → logprob: -18.62592124938965

Token 990: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07953427731990814
    2. 'strip' → logprob: -2.5795342922210693
    3. 'rstrip' → logprob: -7.82953405380249
    4. 'read' → logprob: -8.329534530639648
    5. '().' → logprob: -12.829534530639648
    6. ')' → logprob: -13.829534530639648
    7. 'decode' → logprob: -14.579534530639648
    8. '.readline' → logprob: -15.454534530639648
    9. ' split' → logprob: -15.579534530639648
    10. ' strip' → logprob: -15.704534530639648

Token 991: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14450477063655853
    2. ')' → logprob: -2.3945047855377197
    3. '()' → logprob: -3.1445047855377197
    4. '(' → logprob: -8.64450454711914
    5. '('' → logprob: -10.14450454711914
    6. '())
' → logprob: -11.64450454711914
    7. '().' → logprob: -11.76950454711914
    8. '(','' → logprob: -12.76950454711914
    9. ' ())' → logprob: -13.39450454711914
    10. '(),' → logprob: -13.76950454711914

Token 992: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5857356786727905
    2. 'graph' → logprob: -0.8357356786727905
    3. '   ' → logprob: -5.71073579788208
    4. 'n' → logprob: -6.08573579788208
    5. 'nodes' → logprob: -6.21073579788208
    6. ' edges' → logprob: -7.21073579788208
    7. '	graph' → logprob: -8.210735321044922
    8. '
' → logprob: -8.460735321044922
    9. '```' → logprob: -8.585735321044922
    10. '    
' → logprob: -8.585735321044922

Token 993: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.00020401719666551799
    2. ' edges' → logprob: -8.500204086303711
    3. 'graph' → logprob: -15.625204086303711
    4. '_edges' → logprob: -15.750204086303711
    5. '.edges' → logprob: -16.75020408630371
    6. 'e' → logprob: -16.87520408630371
    7. 'edge' → logprob: -17.00020408630371
    8. '(edges' → logprob: -17.50020408630371
    9. 'ed' → logprob: -18.12520408630371
    10. 'Edges' → logprob: -19.50020408630371

Token 994: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1627393364906311
    2. ' =' → logprob: -1.9127392768859863
    3. '=[]' → logprob: -6.037739276885986
    4. '[]' → logprob: -9.412739753723145
    5. ',' → logprob: -11.287739753723145
    6. '=[]
' → logprob: -11.912739753723145
    7. '[' → logprob: -11.912739753723145
    8. '.' → logprob: -12.287739753723145
    9. '.append' → logprob: -12.662739753723145
    10. '=[' → logprob: -13.287739753723145

Token 995: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004997378680855036
    2. '[]' → logprob: -5.504997253417969
    3. '[int' → logprob: -7.504997253417969
    4. '[]
' → logprob: -9.129997253417969
    5. '[n' → logprob: -9.254997253417969
    6. '[str' → logprob: -10.504997253417969
    7. '[List' → logprob: -11.504997253417969
    8. '[(' → logprob: -11.629997253417969
    9. '[array' → logprob: -11.629997253417969
    10. '[class' → logprob: -11.879997253417969

Token 996: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -5.347765181795694e-05
    2. ' tuple' → logprob: -10.250053405761719
    3. '(tuple' → logprob: -11.000053405761719
    4. '
' → logprob: -13.625053405761719
    5. 'list' → logprob: -16.50005340576172
    6. '   ' → logprob: -17.50005340576172
    7. ']' → logprob: -18.25005340576172
    8. 'map' → logprob: -18.50005340576172
    9. '0' → logprob: -18.50005340576172
    10. '

' → logprob: -18.87505340576172

Token 997: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.054500666621607e-06
    2. 'map' → logprob: -12.75000286102295
    3. '(int' → logprob: -16.500003814697266
    4. ' map' → logprob: -19.000003814697266
    5. '	map' → logprob: -19.250003814697266
    6. ',map' → logprob: -19.625003814697266
    7. '(
' → logprob: -19.750003814697266
    8. '(' → logprob: -20.000003814697266
    9. '.map' → logprob: -20.750003814697266
    10. '_map' → logprob: -21.000003814697266

Token 998: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018160592764616013
    2. 'int' → logprob: -4.018160820007324
    3. '[int' → logprob: -12.768160820007324
    4. ',int' → logprob: -13.018160820007324
    5. ' int' → logprob: -13.268160820007324
    6. 'input' → logprob: -13.643160820007324
    7. '<int' → logprob: -14.268160820007324
    8. '(' → logprob: -14.268160820007324
    9. '(input' → logprob: -14.518160820007324
    10. '=int' → logprob: -15.143160820007324

Token 999: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.007249749731272459
    2. ',' → logprob: -5.13224983215332
    3. '(input' → logprob: -7.00724983215332
    4. 'input' → logprob: -7.88224983215332
    5. ',(' → logprob: -10.63224983215332
    6. '(' → logprob: -12.13224983215332
    7. '   ' → logprob: -13.00724983215332
    8. ',int' → logprob: -13.13224983215332
    9. ' ,' → logprob: -13.88224983215332
    10. ',
' → logprob: -14.63224983215332

Token 1000: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '()' → logprob: -13.000003814697266
    3. '.readline' → logprob: -13.625003814697266
    4. '.split' → logprob: -15.750003814697266
    5. '(' → logprob: -15.875003814697266
    6. ' ().' → logprob: -17.000003814697266
    7. '()
' → logprob: -17.500003814697266
    8. '.' → logprob: -18.625003814697266
    9. 'split' → logprob: -19.250003814697266
    10. '().__' → logprob: -19.750003814697266

Token 1001: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.73446003627032e-05
    2. 'strip' → logprob: -9.250097274780273
    3. 'rstrip' → logprob: -13.875097274780273
    4. 'read' → logprob: -15.625097274780273
    5. ' split' → logprob: -15.750097274780273
    6. '(split' → logprob: -17.875097274780273
    7. '().' → logprob: -18.375097274780273
    8. 'sys' → logprob: -18.750097274780273
    9. '.split' → logprob: -19.000097274780273
    10. 'spl' → logprob: -19.625097274780273

Token 1002: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03819308429956436
    2. '))' → logprob: -3.2881929874420166
    3. '()' → logprob: -9.038192749023438
    4. '()))
' → logprob: -10.788192749023438
    5. '())' → logprob: -11.913192749023438
    6. '(' → logprob: -12.538192749023438
    7. '()
' → logprob: -14.663192749023438
    8. ' ' → logprob: -15.038192749023438
    9. '   ' → logprob: -15.288192749023438
    10. '().' → logprob: -15.788192749023438

Token 1003: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24500465393066406
    2. '()' → logprob: -2.245004653930664
    3. 'for' → logprob: -2.245004653930664
    4. ')' → logprob: -5.620004653930664
    5. '   ' → logprob: -6.495004653930664
    6. '	for' → logprob: -8.495004653930664
    7. '    ' → logprob: -10.620004653930664
    8. ']' → logprob: -11.245004653930664
    9. ' ()' → logprob: -11.370004653930664
    10. ' ' → logprob: -11.495004653930664

Token 1004: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.73314929776825e-05
    2. '_range' → logprob: -9.37508773803711
    3. '_in' → logprob: -14.12508773803711
    4. ' range' → logprob: -14.12508773803711
    5. ' _' → logprob: -14.87508773803711
    6. 'range' → logprob: -15.62508773803711
    7. '_i' → logprob: -16.00008773803711
    8. '_=' → logprob: -16.37508773803711
    9. '_
' → logprob: -16.87508773803711
    10. '_q' → logprob: -16.87508773803711

Token 1005: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06049726530909538
    2. ' in' → logprob: -3.310497283935547
    3. 'range' → logprob: -3.810497283935547
    4. ' range' → logprob: -10.810497283935547
    5. '(range' → logprob: -10.810497283935547
    6. '(q' → logprob: -10.935497283935547
    7. 'q' → logprob: -12.435497283935547
    8. '(' → logprob: -13.060497283935547
    9. '
' → logprob: -13.185497283935547
    10. ' ' → logprob: -14.810497283935547

Token 1006: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.704273118884885e-07
    2. ' range' → logprob: -14.500000953674316
    3. '(range' → logprob: -15.750000953674316
    4. '	range' → logprob: -19.25
    5. '   ' → logprob: -20.0
    6. '
' → logprob: -20.5
    7. '```' → logprob: -20.75
    8. 'r' → logprob: -22.125
    9. '.range' → logprob: -22.25
    10. 'rang' → logprob: -22.375

Token 1007: '(n' (ID: 2406)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.0921942703134846e-05
    2. 'q' → logprob: -11.50001049041748
    3. '(' → logprob: -14.62501049041748
    4. '(n' → logprob: -15.37501049041748
    5. ' (' → logprob: -19.375011444091797
    6. '	q' → logprob: -19.875011444091797
    7. '((' → logprob: -20.250011444091797
    8. '(
' → logprob: -20.500011444091797
    9. ' q' → logprob: -20.875011444091797
    10. '?q' → logprob: -21.375011444091797

Token 1008: '-' (ID: 12)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005272061098366976
    2. '-' → logprob: -5.755271911621094
    3. ')' → logprob: -6.880271911621094
    4. '+' → logprob: -7.380271911621094
    5. ' -' → logprob: -8.255271911621094
    6. ' )' → logprob: -9.630271911621094
    7. ')])' → logprob: -10.255271911621094
    8. ')],' → logprob: -10.630271911621094
    9. ')][' → logprob: -10.630271911621094
    10. ' +' → logprob: -11.130271911621094

Token 1009: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ')' → logprob: -12.625006675720215
    3. ' ' → logprob: -12.875006675720215
    4. '2' → logprob: -15.250006675720215
    5. '   ' → logprob: -15.875006675720215
    6. 'n' → logprob: -16.3750057220459
    7. '0' → logprob: -16.7500057220459
    8. 'edges' → logprob: -17.1250057220459
    9. '])' → logprob: -17.6250057220459
    10. 'q' → logprob: -17.6250057220459

Token 1010: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003479785518720746
    2. ')' → logprob: -8.250348091125488
    3. ']' → logprob: -9.375348091125488
    4. ')]
' → logprob: -13.500348091125488
    5. ')],' → logprob: -15.875348091125488
    6. '   ' → logprob: -16.625347137451172
    7. ' )' → logprob: -16.750347137451172
    8. ')
' → logprob: -17.000347137451172
    9. ']
' → logprob: -17.125347137451172
    10. ')])' → logprob: -17.250347137451172

Token 1011: '   ' (ID: 271)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.00283899181522429
    2. '   ' → logprob: -6.127839088439941
    3. ' queries' → logprob: -7.377839088439941
    4. '```' → logprob: -11.127839088439941
    5. 'questions' → logprob: -11.877839088439941
    6. '
' → logprob: -13.002839088439941
    7. 'quests' → logprob: -13.002839088439941
    8. 'query' → logprob: -14.127839088439941
    9. '_queries' → logprob: -14.252839088439941
    10. 'q' → logprob: -15.002839088439941

Token 1012: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' (adapté à ' queries') → logprob: -1.1472419600977446e-06
    2. ' queries' → logprob: -14.375000953674316
    3. '   ' → logprob: -14.875000953674316
    4. '
' → logprob: -16.000001907348633
    5. 'questions' → logprob: -17.375001907348633
    6. '    
' → logprob: -18.500001907348633
    7. 'query' → logprob: -18.750001907348633
    8. 'quests' → logprob: -19.125001907348633
    9. 'answers' → logprob: -19.375001907348633
    10. '```' → logprob: -19.875001907348633

Token 1013: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192946195602417
    2. '=' → logprob: -1.501929521560669
    3. '[' → logprob: -16.376930236816406
    4. ' =[' → logprob: -16.501930236816406
    5. '＝' → logprob: -16.876930236816406
    6. '=[]' → logprob: -17.001930236816406
    7. ',' → logprob: -17.626930236816406
    8. '=[' → logprob: -17.876930236816406
    9. ' =
' → logprob: -18.251930236816406
    10. ' ' → logprob: -18.251930236816406

Token 1014: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.639096970204264e-05
    2. ' [' → logprob: -9.250096321105957
    3. '[int' → logprob: -16.500097274780273
    4. '[t' → logprob: -16.750097274780273
    5. '   ' → logprob: -17.250097274780273
    6. '
' → logprob: -19.500097274780273
    7. ' ' → logprob: -19.750097274780273
    8. '[List' → logprob: -20.375097274780273
    9. '[(' → logprob: -20.625097274780273
    10. '[
' → logprob: -20.875097274780273

Token 1015: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -9.088346359931165e-07
    2. ' tuple' → logprob: -14.250000953674316
    3. '(tuple' → logprob: -15.500000953674316
    4. 'tu' → logprob: -21.5
    5. '   ' → logprob: -23.125
    6. '
' → logprob: -24.125
    7. '_tuple' → logprob: -24.75
    8. '       ' → logprob: -25.25
    9. '           ' → logprob: -25.375
    10. 'Tuple' → logprob: -26.75

Token 1016: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.7610454708337784e-05
    2. 'map' → logprob: -10.500027656555176
    3. ',map' → logprob: -18.00002670288086
    4. ' map' → logprob: -18.87502670288086
    5. '.map' → logprob: -19.25002670288086
    6. '(int' → logprob: -19.37502670288086
    7. '	map' → logprob: -19.37502670288086
    8. '_map' → logprob: -19.87502670288086
    9. '(
' → logprob: -21.87502670288086
    10. 'int' → logprob: -22.12502670288086

Token 1017: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03866857290267944
    2. 'int' → logprob: -3.288668632507324
    3. ',int' → logprob: -7.788668632507324
    4. '[int' → logprob: -9.288668632507324
    5. '=int' → logprob: -9.788668632507324
    6. '<int' → logprob: -9.913668632507324
    7. ']int' → logprob: -11.538668632507324
    8. ':int' → logprob: -13.163668632507324
    9. ' int' → logprob: -13.413668632507324
    10. '	int' → logprob: -14.913668632507324

Token 1018: ',input' (ID: 123014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3596358001232147
    2. ',int' → logprob: -1.359635829925537
    3. '(int' → logprob: -3.109635829925537
    4. 'input' → logprob: -8.234635353088379
    5. ',' → logprob: -8.859635353088379
    6. ',input' → logprob: -8.859635353088379
    7. '[int' → logprob: -9.484635353088379
    8. '<int' → logprob: -10.859635353088379
    9. '(input' → logprob: -11.359635353088379
    10. '=int' → logprob: -11.359635353088379

Token 1019: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.65707261255011e-06
    2. '()' → logprob: -12.625008583068848
    3. '(),' → logprob: -13.125008583068848
    4. '().__' → logprob: -14.250008583068848
    5. ' ().' → logprob: -14.250008583068848
    6. '(input' → logprob: -14.500008583068848
    7. '()[' → logprob: -14.500008583068848
    8. '(int' → logprob: -15.375008583068848
    9. '.readline' → logprob: -16.250009536743164
    10. '[].' → logprob: -16.375009536743164

Token 1020: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.584239938296378e-06
    2. 'read' → logprob: -12.375007629394531
    3. 'strip' → logprob: -12.875007629394531
    4. 'sys' → logprob: -14.875007629394531
    5. ' split' → logprob: -15.375007629394531
    6. '(split' → logprob: -16.00000762939453
    7. 'input' → logprob: -16.25000762939453
    8. 'skip' → logprob: -17.25000762939453
    9. 'spl' → logprob: -17.87500762939453
    10. '.split' → logprob: -18.37500762939453

Token 1021: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004193913657218218
    2. '))' → logprob: -5.5041937828063965
    3. '()' → logprob: -9.129194259643555
    4. '()))
' → logprob: -12.754194259643555
    5. '())' → logprob: -13.754194259643555
    6. '   ' → logprob: -14.129194259643555
    7. '())).' → logprob: -14.504194259643555
    8. '(' → logprob: -14.754194259643555
    9. '()[' → logprob: -14.879194259643555
    10. ' ' → logprob: -15.754194259643555

Token 1022: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25236254930496216
    2. 'for' → logprob: -1.5023624897003174
    3. '()' → logprob: -7.8773627281188965
    4. ')' → logprob: -9.877362251281738
    5. '	for' → logprob: -13.127362251281738
    6. '   ' → logprob: -14.502362251281738
    7. ' ()' → logprob: -16.502363204956055
    8. '(' → logprob: -16.627363204956055
    9. ' ' → logprob: -17.002363204956055
    10. '```' → logprob: -17.127363204956055

Token 1023: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1647738367319107
    2. 'in' → logprob: -2.539773941040039
    3. ' range' → logprob: -3.289773941040039
    4. 'range' → logprob: -3.414773941040039
    5. '_' → logprob: -5.914773941040039
    6. ' _' → logprob: -9.914773941040039
    7. '_range' → logprob: -9.914773941040039
    8. '(range' → logprob: -10.164773941040039
    9. 'int' → logprob: -10.664773941040039
    10. '_in' → logprob: -11.664773941040039

Token 1024: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02991444244980812
    2. ' range' → logprob: -3.529914379119873
    3. 'in' → logprob: -8.904914855957031
    4. '(range' → logprob: -10.904914855957031
    5. ' in' → logprob: -11.654914855957031
    6. '_range' → logprob: -14.029914855957031
    7. '	range' → logprob: -15.154914855957031
    8. '_' → logprob: -16.27991485595703
    9. '.range' → logprob: -18.27991485595703
    10. 'int' → logprob: -18.90491485595703

Token 1025: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018151700496673584
    2. ' range' → logprob: -4.018151760101318
    3. '(range' → logprob: -13.26815128326416
    4. 'q' → logprob: -18.143152236938477
    5. '	range' → logprob: -18.268152236938477
    6. '(q' → logprob: -19.018152236938477
    7. '_range' → logprob: -20.393152236938477
    8. '[q' → logprob: -21.018152236938477
    9. 'ran' → logprob: -21.393152236938477
    10. '.range' → logprob: -21.393152236938477

Token 1026: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -4.60414821645827e-06
    2. 'q' → logprob: -12.375004768371582
    3. '(' → logprob: -15.875004768371582
    4. ' (' → logprob: -16.375003814697266
    5. 'range' → logprob: -16.625003814697266
    6. '(range' → logprob: -17.125003814697266
    7. '(Q' → logprob: -18.375003814697266
    8. '[q' → logprob: -18.875003814697266
    9. ',q' → logprob: -20.250003814697266
    10. '   ' → logprob: -20.250003814697266

Token 1027: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013283335138112307
    2. ']' → logprob: -6.876328468322754
    3. ')' → logprob: -8.376328468322754
    4. '()]' → logprob: -9.876328468322754
    5. ')]
' → logprob: -11.626328468322754
    6. '())' → logprob: -14.126328468322754
    7. '])]' → logprob: -14.251328468322754
    8. ')])' → logprob: -14.376328468322754
    9. '()' → logprob: -14.501328468322754
    10. '   ' → logprob: -14.626328468322754

Token 1028: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4843962788581848
    2. 'solution' → logprob: -0.9843962788581848
    3. 's' → logprob: -5.234396457672119
    4. 'sol' → logprob: -6.109396457672119
    5. ' solution' → logprob: -6.109396457672119
    6. 'solver' → logprob: -8.859395980834961
    7. '_solution' → logprob: -9.234395980834961
    8. '
' → logprob: -9.859395980834961
    9. '(solution' → logprob: -9.984395980834961
    10. ' sol' → logprob: -9.984395980834961

Token 1029: ' sol' (ID: 1887)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.02240070514380932
    2. 'sol' (adapté à ' sol') → logprob: -4.022400856018066
    3. 'solver' → logprob: -5.522400856018066
    4. '   ' → logprob: -9.022400856018066
    5. ' solution' → logprob: -9.272400856018066
    6. 's' → logprob: -10.522400856018066
    7. 'solve' → logprob: -13.272400856018066
    8. '
' → logprob: -14.272400856018066
    9. ' sol' → logprob: -14.397400856018066
    10. '_solution' → logprob: -15.022400856018066

Token 1030: ' =' (ID: 314)
  Prédit: 'ution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ution' → logprob: -0.45738685131073
    2. ' =' → logprob: -1.08238685131073
    3. '=' → logprob: -3.5823869705200195
    4. 'vation' → logprob: -8.70738697052002
    5. ' ' → logprob: -9.58238697052002
    6. '   ' → logprob: -9.70738697052002
    7. 'ving' → logprob: -10.20738697052002
    8. 'UTION' → logprob: -10.95738697052002
    9. 'utions' → logprob: -11.08238697052002
    10. 'ut' → logprob: -11.08238697052002

Token 1031: ' Meeting' (ID: 36677)
  Prédit: 'Meeting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Meeting' → logprob: -0.0002613358374219388
    2. ' Meeting' → logprob: -8.250261306762695
    3. 'Meet' → logprob: -17.500261306762695
    4. '
' → logprob: -19.125261306762695
    5. 'Meal' → logprob: -19.125261306762695
    6. ' meeting' → logprob: -20.750261306762695
    7. '   ' → logprob: -21.250261306762695
    8. 'Me' → logprob: -21.750261306762695
    9. 'Message' → logprob: -21.750261306762695
    10. '```' → logprob: -21.875261306762695

Token 1032: 'In' (ID: 637)
  Prédit: 'In'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'In' → logprob: 0.0
    2. '_in' → logprob: -18.875
    3. ' In' → logprob: -19.875
    4. '
' → logprob: -21.125
    5. '_In' → logprob: -21.125
    6. 'I' → logprob: -21.375
    7. '	In' → logprob: -21.625
    8. 'The' → logprob: -21.75
    9. 'in' → logprob: -21.75
    10. '```' → logprob: -22.125

Token 1033: 'City' (ID: 15764)
  Prédit: 'City'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'City' → logprob: -1.7432603272027336e-06
    2. 'city' → logprob: -13.625001907348633
    3. '_city' → logprob: -15.250001907348633
    4. ' City' → logprob: -16.375001907348633
    5. 'Cit' → logprob: -16.625001907348633
    6. '
' → logprob: -17.125001907348633
    7. 'Meeting' → logprob: -17.625001907348633
    8. 'CITY' → logprob: -17.750001907348633
    9. 'C' → logprob: -18.500001907348633
    10. '_CITY' → logprob: -18.750001907348633

Token 1034: 'Solution' (ID: 44456)
  Prédit: 'Solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -2.2200749754119897e-06
    2. 'Sol' → logprob: -13.875001907348633
    3. 'solution' → logprob: -14.500001907348633
    4. 'Solver' → logprob: -14.750001907348633
    5. ' Solution' → logprob: -17.125001907348633
    6. '_solution' → logprob: -17.250001907348633
    7. 'S' → logprob: -17.500001907348633
    8. 'olution' → logprob: -17.500001907348633
    9. 'So' → logprob: -17.875001907348633
    10. ' solution' → logprob: -18.000001907348633

Token 1035: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00019710339256562293
    2. '(
' → logprob: -9.125197410583496
    3. '(' → logprob: -9.375197410583496
    4. 'n' → logprob: -13.000197410583496
    5. ' (' → logprob: -13.875197410583496
    6. '((' → logprob: -16.75019645690918
    7. '```' → logprob: -17.75019645690918
    8. '   ' → logprob: -18.00019645690918
    9. '(
' → logprob: -18.37519645690918
    10. ' =' → logprob: -18.37519645690918

Token 1036: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ' ,' → logprob: -12.375005722045898
    3. '(edges' → logprob: -14.000005722045898
    4. ',
' → logprob: -14.500005722045898
    5. 'edges' → logprob: -16.1250057220459
    6. '
' → logprob: -17.3750057220459
    7. '   ' → logprob: -17.3750057220459
    8. ')' → logprob: -17.6250057220459
    9. ' edges' → logprob: -17.8750057220459
    10. 'Edges' → logprob: -18.3750057220459

Token 1037: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0059316400438547134
    2. ' edges' → logprob: -5.130931854248047
    3. '   ' → logprob: -13.380931854248047
    4. '(edges' → logprob: -14.005931854248047
    5. '.edges' → logprob: -15.005931854248047
    6. '_edges' → logprob: -15.505931854248047
    7. 'ed' → logprob: -16.005931854248047
    8. 'edge' → logprob: -17.380931854248047
    9. '       ' → logprob: -17.880931854248047
    10. ' ' → logprob: -17.880931854248047

Token 1038: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -13.250001907348633
    3. ',
' → logprob: -16.500001907348633
    4. 'queries' → logprob: -18.000001907348633
    5. ',q' → logprob: -18.000001907348633
    6. ',exports' → logprob: -18.375001907348633
    7. '<|end|>' → logprob: -19.000001907348633
    8. ')' → logprob: -19.625001907348633
    9. '‌,' → logprob: -19.625001907348633
    10. '   ' → logprob: -19.750001907348633

Token 1039: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -3.5597102396423e-05
    2. ' queries' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.750036239624023
    4. 'query' → logprob: -17.625036239624023
    5. 'questions' → logprob: -18.250036239624023
    6. 'requests' → logprob: -19.125036239624023
    7. '           ' → logprob: -19.250036239624023
    8. '       ' → logprob: -19.500036239624023
    9. 'quests' → logprob: -20.125036239624023
    10. '_queries' → logprob: -20.500036239624023

Token 1040: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11505569517612457
    2. ')
' → logprob: -2.240055799484253
    3. '   ' → logprob: -6.115055561065674
    4. '()' → logprob: -12.490056037902832
    5. ')
' → logprob: -12.990056037902832
    6. '())
' → logprob: -13.115056037902832
    7. '()
' → logprob: -13.240056037902832
    8. '<|end|>' → logprob: -13.240056037902832
    9. '())' → logprob: -13.365056037902832
    10. ' ' → logprob: -13.490056037902832

Token 1041: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24406461417675018
    2. 'print' → logprob: -1.9940645694732666
    3. 'results' → logprob: -2.7440645694732666
    4. '
' → logprob: -4.994064807891846
    5. 'result' → logprob: -5.619064807891846
    6. 'for' → logprob: -5.994064807891846
    7. 'output' → logprob: -6.744064807891846
    8. 'outputs' → logprob: -7.369064807891846
    9. '```' → logprob: -7.619064807891846
    10. 'res' → logprob: -7.869064807891846

Token 1042: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.14044971764087677
    2. 'res' → logprob: -2.3904497623443604
    3. 'output' → logprob: -3.8904497623443604
    4. 'print' → logprob: -4.890449523925781
    5. 'outputs' → logprob: -5.390449523925781
    6. 'result' → logprob: -5.640449523925781
    7. 'for' → logprob: -6.265449523925781
    8. 'out' → logprob: -7.140449523925781
    9. 'ans' → logprob: -8.390449523925781
    10. '   ' → logprob: -8.640449523925781

Token 1043: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1034228727221489
    2. '.append' → logprob: -2.3534228801727295
    3. '.extend' → logprob: -6.10342264175415
    4. '<|end|>' → logprob: -7.47842264175415
    5. '.for' → logprob: -10.103423118591309
    6. '<|end|>' → logprob: -10.353423118591309
    7. '.setdefault' → logprob: -10.478423118591309
    8. ' =' → logprob: -10.603423118591309
    9. '.=' → logprob: -10.728423118591309
    10. '.write' → logprob: -10.728423118591309

Token 1044: ' sol' (ID: 1887)
  Prédit: 'sol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.01416350994259119
    2. ' sol' → logprob: -4.264163494110107
    3. '(sol' → logprob: -18.014163970947266
    4. '_sol' → logprob: -18.889163970947266
    5. 'solute' → logprob: -19.264163970947266
    6. 'sal' → logprob: -21.389163970947266
    7. 'Sol' → logprob: -21.514163970947266
    8. '.sol' → logprob: -21.639163970947266
    9. ' sols' → logprob: -22.264163970947266
    10. 'sel' → logprob: -22.639163970947266

Token 1045: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.2113979209971149e-05
    2. '.' → logprob: -11.375012397766113
    3. '.sol' → logprob: -14.500012397766113
    4. '.s' → logprob: -16.625011444091797
    5. ' .' → logprob: -18.000011444091797
    6. 'solve' → logprob: -18.250011444091797
    7. '.
' → logprob: -18.375011444091797
    8. '.findall' → logprob: -18.375011444091797
    9. '.resolve' → logprob: -18.875011444091797
    10. '.run' → logprob: -19.125011444091797

Token 1046: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011545089073479176
    2. 'for' → logprob: -7.00115442276001
    3. '
' → logprob: -8.376154899597168
    4. ' for' → logprob: -12.001154899597168
    5. '	for' → logprob: -12.501154899597168
    6. '    
' → logprob: -13.126154899597168
    7. '```' → logprob: -14.501154899597168
    8. '<|end|>' → logprob: -16.25115394592285
    9. '
' → logprob: -16.50115394592285
    10. '       ' → logprob: -17.62615394592285

Token 1047: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06260009109973907
    2. 'for' → logprob: -2.8126001358032227
    3. '
' → logprob: -7.562600135803223
    4. ' for' → logprob: -9.312600135803223
    5. '	for' → logprob: -11.187600135803223
    6. '    
' → logprob: -11.937600135803223
    7. '```' → logprob: -13.562600135803223
    8. '  
' → logprob: -15.562600135803223
    9. '  ' → logprob: -15.937600135803223
    10. '
' → logprob: -15.937600135803223

Token 1048: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12726540863513947
    2. '   ' → logprob: -2.127265453338623
    3. ' for' → logprob: -8.377264976501465
    4. '	for' → logprob: -9.502264976501465
    5. '
' → logprob: -10.752264976501465
    6. 'print' (adapté à ' print') → logprob: -12.127264976501465
    7. '```' → logprob: -12.252264976501465
    8. '    
' → logprob: -14.252264976501465
    9. '``' → logprob: -16.00226593017578
    10. 'import' → logprob: -16.12726593017578

Token 1049: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.22860735654830933
    2. '(*' → logprob: -1.728607416152954
    3. '(' → logprob: -4.353607177734375
    4. '("\' → logprob: -4.353607177734375
    5. '(
' → logprob: -7.103607177734375
    6. '('' → logprob: -9.103607177734375
    7. '(len' → logprob: -9.728607177734375
    8. '()' → logprob: -9.728607177734375
    9. '(*(' → logprob: -10.853607177734375
    10. ''\' → logprob: -11.478607177734375

Token 1050: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.339278580620885e-06
    2. '
' → logprob: -13.375001907348633
    3. '\n' → logprob: -14.250001907348633
    4. ''\' → logprob: -17.875001907348633
    5. 'nj' → logprob: -18.875001907348633
    6. '10' → logprob: -19.000001907348633
    7. 'join' → logprob: -19.500001907348633
    8. '``' → logprob: -19.625001907348633
    9. '```' → logprob: -20.000001907348633
    10. ' n' → logprob: -20.125001907348633

Token 1051: ''.' (ID: 6120)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.660112738609314
    2. ''.' → logprob: -1.160112738609314
    3. 'join' → logprob: -2.1601128578186035
    4. '.' → logprob: -3.0351128578186035
    5. ').' → logprob: -5.6601128578186035
    6. '".' → logprob: -6.1601128578186035
    7. ' .' → logprob: -8.535112380981445
    8. '.j' → logprob: -9.035112380981445
    9. '().' → logprob: -9.160112380981445
    10. ' join' → logprob: -9.535112380981445

Token 1052: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.512236498361744e-07
    2. 'jo' → logprob: -15.500000953674316
    3. 'print' → logprob: -15.625000953674316
    4. ' join' → logprob: -17.0
    5. 'j' → logprob: -17.625
    6. '```' → logprob: -18.75
    7. '.join' → logprob: -19.25
    8. '(join' → logprob: -20.0
    9. 'sep' → logprob: -20.875
    10. ').' → logprob: -21.125

Token 1053: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.05566094070672989
    2. '(str' → logprob: -3.0556609630584717
    3. 'map' → logprob: -5.055660724639893
    4. 'str' → logprob: -7.305660724639893
    5. '[str' → logprob: -13.05566120147705
    6. ' map' → logprob: -14.18066120147705
    7. '(' → logprob: -15.30566120147705
    8. '   ' → logprob: -15.30566120147705
    9. '	map' → logprob: -15.43066120147705
    10. '([' → logprob: -15.55566120147705

Token 1054: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.005246568005532026
    2. 'str' → logprob: -5.255246639251709
    3. '```' → logprob: -11.75524616241455
    4. '[str' → logprob: -13.25524616241455
    5. '=str' → logprob: -13.25524616241455
    6. '	str' → logprob: -14.38024616241455
    7. '(' → logprob: -15.50524616241455
    8. ' str' → logprob: -15.63024616241455
    9. '``' → logprob: -16.505247116088867
    10. '   ' → logprob: -16.505247116088867

Token 1055: ',' (ID: 11)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.0006056951242499053
    2. ',' → logprob: -7.750605583190918
    3. 'results' → logprob: -8.875605583190918
    4. ')' → logprob: -11.125605583190918
    5. '(' → logprob: -11.250605583190918
    6. ' results' → logprob: -12.375605583190918
    7. '	results' → logprob: -13.375605583190918
    8. ')(' → logprob: -14.750605583190918
    9. 'Results' → logprob: -14.750605583190918
    10. '),' → logprob: -15.375605583190918

Token 1056: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -3.292907877039397e-06
    2. '(results' → logprob: -13.25000286102295
    3. ' results' → logprob: -13.50000286102295
    4. '	results' → logprob: -19.750003814697266
    5. '.results' → logprob: -21.500003814697266
    6. 'Results' → logprob: -23.875003814697266
    7. '
' → logprob: -24.000003814697266
    8. '_results' → logprob: -25.250003814697266
    9. '   ' → logprob: -25.375003814697266
    10. ')' → logprob: -25.625003814697266

Token 1057: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.292907877039397e-06
    2. ')))' → logprob: -13.50000286102295
    3. ')' → logprob: -13.75000286102295
    4. '))
' → logprob: -14.25000286102295
    5. '()))' → logprob: -16.250003814697266
    6. ' ))' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.375003814697266
    8. ''))' → logprob: -19.375003814697266
    9. '));' → logprob: -20.125003814697266
    10. ' ' → logprob: -20.875003814697266

Token 1058: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007487560505978763
    2. '())' → logprob: -7.375748634338379
    3. ')
' → logprob: -9.500748634338379
    4. '()' → logprob: -10.375748634338379
    5. '))' → logprob: -11.625748634338379
    6. '   ' → logprob: -12.875748634338379
    7. ' )' → logprob: -13.875748634338379
    8. '(' → logprob: -14.375748634338379
    9. '```' → logprob: -14.375748634338379
    10. ')`' → logprob: -14.500748634338379

Token 1059: 'thread' (ID: 9817)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0025351173244416714
    2. 'thread' → logprob: -6.002535343170166
    3. '
' → logprob: -10.002534866333008
    4. '```' → logprob: -11.377534866333008
    5. ' if' → logprob: -13.252534866333008
    6. '    
' → logprob: -15.377534866333008
    7. '\
' → logprob: -15.627534866333008
    8. ' threading' → logprob: -15.752534866333008
    9. '  
' → logprob: -16.002534866333008
    10. '\' → logprob: -16.502534866333008

Token 1060: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -2.1888679839321412e-05
    2. 'ading' → logprob: -11.625021934509277
    3. 'reading' → logprob: -12.875021934509277
    4. '```' → logprob: -12.875021934509277
    5. '   ' → logprob: -13.250021934509277
    6. '_' → logprob: -13.375021934509277
    7. 'ed' → logprob: -13.375021934509277
    8. 'i' → logprob: -14.625021934509277
    9. 'ad' → logprob: -15.250021934509277
    10. 'in' → logprob: -15.375021934509277

Token 1061: '.Thread' (ID: 15531)
  Prédit: '.Thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Thread' → logprob: -0.016374867409467697
    2. '.' → logprob: -4.1413750648498535
    3. '.start' → logprob: -8.141374588012695
    4. '.thread' → logprob: -10.891374588012695
    5. '.Threading' → logprob: -12.016374588012695
    6. '.stack' → logprob: -12.141374588012695
    7. '(Thread' → logprob: -12.266374588012695
    8. '().' → logprob: -12.641374588012695
    9. '.Stack' → logprob: -12.766374588012695
    10. '.Start' → logprob: -12.891374588012695

Token 1062: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.001303926226682961
    2. '(' → logprob: -7.2513041496276855
    3. 'target' → logprob: -7.5013041496276855
    4. '().' → logprob: -10.501303672790527
    5. '(
' → logprob: -12.251303672790527
    6. '()' → logprob: -12.376303672790527
    7. '(start' → logprob: -13.751303672790527
    8. ',target' → logprob: -14.001303672790527
    9. ' target' → logprob: -14.501303672790527
    10. '.target' → logprob: -14.626303672790527

Token 1063: '=' (ID: 28)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0019595595076680183
    2. '(main' → logprob: -6.251959323883057
    3. ' main' → logprob: -10.751959800720215
    4. '=' → logprob: -11.626959800720215
    5. '	main' → logprob: -14.876959800720215
    6. ')' → logprob: -15.626959800720215
    7. '.main' → logprob: -17.2519588470459
    8. '(' → logprob: -17.5019588470459
    9. '_main' → logprob: -17.7519588470459
    10. 'Main' → logprob: -18.8769588470459

Token 1064: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -22.0
    4. '(main' → logprob: -24.25
    5. '.main' → logprob: -26.125
    6. '_main' → logprob: -26.875
    7. '
' → logprob: -27.125
    8. 'Main' → logprob: -27.125
    9. 'mainwindow' → logprob: -28.25
    10. '   ' → logprob: -30.125

Token 1065: ',' (ID: 11)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -1.8193366486229934e-05
    2. ')' → logprob: -11.000018119812012
    3. ',' → logprob: -14.625018119812012
    4. '()).' → logprob: -14.750018119812012
    5. '   ' → logprob: -15.750018119812012
    6. ' ).' → logprob: -16.000019073486328
    7. ',start' → logprob: -16.625019073486328
    8. ',args' → logprob: -16.750019073486328
    9. '().' → logprob: -17.250019073486328
    10. '()' → logprob: -18.000019073486328

Token 1066: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -5.908022285439074e-05
    2. 'daemon' → logprob: -10.625059127807617
    3. ')' → logprob: -10.875059127807617
    4. ' ).' → logprob: -11.250059127807617
    5. 'args' → logprob: -13.125059127807617
    6. ' daemon' → logprob: -14.625059127807617
    7. '   ' → logprob: -16.750059127807617
    8. ' ' → logprob: -17.000059127807617
    9. 'name' → logprob: -17.125059127807617
    10. 'kwargs' → logprob: -17.250059127807617

Token 1067: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.9361264946837764e-07
    2. ' start' → logprob: -16.75
    3. 'run' → logprob: -17.375
    4. '.start' → logprob: -20.375
    5. 'star' → logprob: -20.375
    6. '(start' → logprob: -21.625
    7. ',start' → logprob: -21.875
    8. '```' → logprob: -21.875
    9. ':start' → logprob: -22.25
    10. 'join' → logprob: -22.375

Token 1068: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1066
Tokens correctement prédits (1ère position, stricte): 513
Tokens correctement prédits (1ère position, avec adaptation): 556
Tokens correctement prédits (top 10): 970
Précision stricte (1ère position): 48.12%
Précision adaptée (1ère position): 52.16%
Précision (top 10): 90.99%
================================================================================
