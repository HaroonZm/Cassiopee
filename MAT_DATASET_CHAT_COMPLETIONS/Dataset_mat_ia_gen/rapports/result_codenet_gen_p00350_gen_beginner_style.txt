================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
U = list(input())
Q = int(input())

for _ in range(Q):
    query = input().split()
    if query[0] == 'set':
        x = int(query[1]) -1
        y = int(query[2]) -1
        z = query[3]
        for i in range(x, y+1):
            U[i] = z
    else:
        a = int(query[1]) -1
        b = int(query[2]) -1
        c = int(query[3]) -1
        d = int(query[4]) -1
        S = U[a:b+1]
        T = U[c:d+1]
        if S == T:
            print('e')
        elif S < T:
            print('s')
        else:
            print('t')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26427075266838074
    2. ')' → logprob: -1.5142707824707031
    3. '()' → logprob: -4.764270782470703
    4. '())' → logprob: -6.139270782470703
    5. '('' → logprob: -8.014270782470703
    6. '(
' → logprob: -8.514270782470703
    7. '```' → logprob: -8.889270782470703
    8. '("("' → logprob: -9.389270782470703
    9. '`' → logprob: -9.639270782470703
    10. '))' → logprob: -9.639270782470703

Token 5: 'U' (ID: 52)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46188557147979736
    2. 'if' → logprob: -1.2118855714797974
    3. 'i' → logprob: -3.461885452270508
    4. 's' → logprob: -4.336885452270508
    5. 'x' → logprob: -5.086885452270508
    6. 'f' → logprob: -5.336885452270508
    7. 'a' → logprob: -5.836885452270508
    8. 'result' → logprob: -6.336885452270508
    9. '\n' → logprob: -6.836885452270508
    10. 'sum' → logprob: -6.961885452270508

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9007728695869446
    2. 'n' → logprob: -1.5257728099822998
    3. '=' → logprob: -1.9007728099822998
    4. 'p' → logprob: -2.1507728099823
    5. '[' → logprob: -4.150773048400879
    6. 'pper' → logprob: -4.275773048400879
    7. 'N' → logprob: -4.525773048400879
    8. 's' → logprob: -4.775773048400879
    9. 'P' → logprob: -5.275773048400879
    10. 'I' → logprob: -5.275773048400879

Token 7: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9918214082717896
    2. 'input' → logprob: -1.4918214082717896
    3. ' int' → logprob: -1.4918214082717896
    4. ' input' → logprob: -2.4918212890625
    5. ' N' → logprob: -3.2418212890625
    6. 'N' → logprob: -3.6168212890625
    7. '0' → logprob: -4.2418212890625
    8. ' ' → logprob: -4.7418212890625
    9. '1' → logprob: -6.4918212890625
    10. 'list' → logprob: -6.7418212890625

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -4.894790981779806e-05
    2. '()' → logprob: -11.125048637390137
    3. '(range' → logprob: -12.000048637390137
    4. ' (' → logprob: -12.125048637390137
    5. '(
' → logprob: -12.250048637390137
    6. '[' → logprob: -13.000048637390137
    7. '(U' → logprob: -13.000048637390137
    8. '("("' → logprob: -13.250048637390137
    9. '('' → logprob: -13.375048637390137
    10. '(`' → logprob: -13.500048637390137

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05008041486144066
    2. '()' → logprob: -3.0500802993774414
    3. '().' → logprob: -6.550080299377441
    4. '()))' → logprob: -10.925080299377441
    5. ')' → logprob: -11.050080299377441
    6. '(' → logprob: -11.300080299377441
    7. ' ())' → logprob: -12.550080299377441
    8. '());' → logprob: -13.050080299377441
    9. '();)' → logprob: -13.300080299377441
    10. '()>' → logprob: -13.550080299377441

Token 10: 'Q' (ID: 48)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.410013347864151
    2. '[' → logprob: -1.6600133180618286
    3. 'for' → logprob: -2.535013437271118
    4. '#' → logprob: -3.410013437271118
    5. '.' → logprob: -4.910013198852539
    6. '+' → logprob: -5.785013198852539
    7. ' for' → logprob: -5.910013198852539
    8. '(' → logprob: -5.910013198852539
    9. '<|end|>' → logprob: -5.910013198852539
    10. 'a' → logprob: -6.660013198852539

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03930477425456047
    2. '=' → logprob: -3.289304733276367
    3. ' ' → logprob: -8.289304733276367
    4. '.' → logprob: -8.414304733276367
    5. 's' → logprob: -8.414304733276367
    6. 'u' → logprob: -8.539304733276367
    7. '[' → logprob: -9.164304733276367
    8. '_' → logprob: -9.164304733276367
    9. '=int' → logprob: -10.039304733276367
    10. ')' → logprob: -10.289304733276367

Token 12: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00019030878320336342
    2. '[]' → logprob: -9.250190734863281
    3. ' int' → logprob: -9.500190734863281
    4. '[int' → logprob: -11.000190734863281
    5. '=int' → logprob: -14.500190734863281
    6. '0' → logprob: -14.625190734863281
    7. ' []' → logprob: -14.625190734863281
    8. '(int' → logprob: -15.000190734863281
    9. 'in' → logprob: -15.500190734863281
    10. ' ' → logprob: -15.875190734863281

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02007918804883957
    2. '(input' → logprob: -4.270079135894775
    3. '()' → logprob: -5.270079135894775
    4. '('' → logprob: -8.145079612731934
    5. ' (' → logprob: -8.645079612731934
    6. '(
' → logprob: -9.020079612731934
    7. '("("' → logprob: -9.270079612731934
    8. '(int' → logprob: -11.770079612731934
    9. '```' → logprob: -11.770079612731934
    10. 'input' → logprob: -12.020079612731934

Token 14: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8832181692123413
    2. ')' → logprob: -1.0082181692123413
    3. '()' → logprob: -1.5082181692123413
    4. '`)' → logprob: -9.133217811584473
    5. '(' → logprob: -9.508217811584473
    6. ' ())' → logprob: -9.883217811584473
    7. '()
' → logprob: -10.008217811584473
    8. '())
' → logprob: -10.633217811584473
    9. ' )' → logprob: -10.633217811584473
    10. '）' → logprob: -11.133217811584473

Token 15: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010690123308449984
    2. 'f' → logprob: -6.876069068908691
    3. '```' → logprob: -11.126069068908691
    4. ' for' → logprob: -11.126069068908691
    5. 'q' → logprob: -13.251069068908691
    6. 'r' → logprob: -13.626069068908691
    7. 'i' → logprob: -14.001069068908691
    8. 'F' → logprob: -14.126069068908691
    9. '
' → logprob: -15.001069068908691
    10. 'n' → logprob: -15.126069068908691

Token 16: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4980597198009491
    2. ' i' → logprob: -0.9980597496032715
    3. ' _' → logprob: -4.1230597496032715
    4. '_' → logprob: -4.9980597496032715
    5. '  ' → logprob: -7.9980597496032715
    6. 'i' → logprob: -8.623059272766113
    7. ' ' → logprob: -9.248059272766113
    8. ' ‌' → logprob: -9.873059272766113
    9. ' )' → logprob: -10.873059272766113
    10. ' range' → logprob: -11.373059272766113

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7413210272789001
    2. ' ' → logprob: -0.8663210272789001
    3. 'in' → logprob: -2.866321086883545
    4. ' i' → logprob: -3.741321086883545
    5. '  ' → logprob: -4.991321086883545
    6. 'i' → logprob: -5.241321086883545
    7. '_' → logprob: -5.491321086883545
    8. ' _' → logprob: -6.116321086883545
    9. 'space' → logprob: -6.991321086883545
    10. '<|end|>' → logprob: -7.366321086883545

Token 18: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868861794471741
    2. ' range' → logprob: -1.1368861198425293
    3. '_' → logprob: -12.261886596679688
    4. '_range' → logprob: -12.636886596679688
    5. '	range' → logprob: -12.886886596679688
    6. ' xrange' → logprob: -13.261886596679688
    7. '(range' → logprob: -13.636886596679688
    8. 'ange' → logprob: -14.261886596679688
    9. ' ' → logprob: -15.511886596679688
    10. 'rang' → logprob: -15.761886596679688

Token 19: '(Q' (ID: 14437)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06195692718029022
    2. ' (' → logprob: -2.9369568824768066
    3. ' ' → logprob: -5.061956882476807
    4. ' )' → logprob: -8.186957359313965
    5. ' range' → logprob: -8.811957359313965
    6. '(range' → logprob: -9.436957359313965
    7. '  ' → logprob: -9.811957359313965
    8. ')' → logprob: -10.561957359313965
    9. 'range' → logprob: -10.811957359313965
    10. '(int' → logprob: -11.186957359313965

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31365546584129333
    2. ')' → logprob: -1.3136554956436157
    3. ':' → logprob: -8.313655853271484
    4. ' )' → logprob: -9.563655853271484
    5. ' ):' → logprob: -9.813655853271484
    6. '):
' → logprob: -11.938655853271484
    7. '+' → logprob: -12.938655853271484
    8. '>' → logprob: -13.063655853271484
    9. ',' → logprob: -13.063655853271484
    10. ' ' → logprob: -13.813655853271484

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05564876273274422
    2. '```' → logprob: -4.6806488037109375
    3. ' ' → logprob: -4.9306488037109375
    4. 'a' → logprob: -5.3056488037109375
    5. '_' → logprob: -5.3056488037109375
    6. ' query' → logprob: -5.6806488037109375
    7. ' ```' → logprob: -5.6806488037109375
    8. 'i' → logprob: -5.8056488037109375
    9. '    ' → logprob: -5.9306488037109375
    10. 't' → logprob: -6.6806488037109375

Token 22: ' query' (ID: 5703)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5504180192947388
    2. 'q' → logprob: -1.6754180192947388
    3. ' query' → logprob: -1.8004180192947388
    4. ' t' → logprob: -2.300417900085449
    5. 't' → logprob: -2.425417900085449
    6. ' q' → logprob: -2.550417900085449
    7. ' ' → logprob: -3.300417900085449
    8. ' l' → logprob: -3.550417900085449
    9. 'query' (adapté à ' query') → logprob: -3.925417900085449
    10. 'i' → logprob: -4.050417900085449

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2467893660068512
    2. '_' → logprob: -2.1217894554138184
    3. '[' → logprob: -2.9967894554138184
    4. '=' → logprob: -3.8717894554138184
    5. ' ' → logprob: -3.8717894554138184
    6. '_type' → logprob: -6.746789455413818
    7. ')' → logprob: -6.871789455413818
    8. 's' → logprob: -7.121789455413818
    9. '   ' → logprob: -7.371789455413818
    10. '_space' → logprob: -7.496789455413818

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.19833633303642273
    2. ' input' → logprob: -2.073336362838745
    3. 'list' → logprob: -3.198336362838745
    4. ' list' → logprob: -4.323336124420166
    5. 'int' → logprob: -10.323336601257324
    6. '=input' → logprob: -11.573336601257324
    7. ' ' → logprob: -12.823336601257324
    8. '(input' → logprob: -13.073336601257324
    9. ' int' → logprob: -13.198336601257324
    10. '[input' → logprob: -13.823336601257324

Token 25: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009170551202259958
    2. '(' → logprob: -7.625916957855225
    3. '().' → logprob: -7.875916957855225
    4. '())' → logprob: -11.125917434692383
    5. ')' → logprob: -11.750917434692383
    6. '()`' → logprob: -12.375917434692383
    7. '('' → logprob: -12.500917434692383
    8. '`()' → logprob: -12.500917434692383
    9. ' ()' → logprob: -12.875917434692383
    10. '()]' → logprob: -13.375917434692383

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011751054553315043
    2. 'strip' → logprob: -6.7511749267578125
    3. 'rstrip' → logprob: -13.126174926757812
    4. 'startswith' → logprob: -13.751174926757812
    5. ' split' → logprob: -14.001174926757812
    6. 'spl' → logprob: -14.126174926757812
    7. 's' → logprob: -15.876174926757812
    8. '(split' → logprob: -17.251174926757812
    9. 'sp' → logprob: -17.376174926757812
    10. 'replace' → logprob: -17.626174926757812

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5171001553535461
    2. '('' → logprob: -1.1421000957489014
    3. '(' → logprob: -2.7671000957489014
    4. '("("' → logprob: -3.8921000957489014
    5. '("' → logprob: -6.7671003341674805
    6. '(`' → logprob: -10.01710033416748
    7. '```' → logprob: -10.51710033416748
    8. '()`' → logprob: -10.89210033416748
    9. '`()' → logprob: -11.26710033416748
    10. '()]' → logprob: -11.26710033416748

Token 28: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1132272481918335
    2. '   ' → logprob: -1.1132272481918335
    3. '[' → logprob: -1.8632272481918335
    4. ' if' → logprob: -2.863227367401123
    5. ' ' → logprob: -2.863227367401123
    6. 'if' → logprob: -2.988227367401123
    7. '[i' → logprob: -4.113227367401123
    8. ' i' → logprob: -6.238227367401123
    9. '_' → logprob: -6.488227367401123
    10. '```' → logprob: -6.988227367401123

Token 29: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11017438024282455
    2. 'if' (adapté à ' if') → logprob: -3.3601744174957275
    3. '   ' → logprob: -3.3601744174957275
    4. ' ' → logprob: -4.235174179077148
    5. '[' → logprob: -4.735174179077148
    6. ' if' → logprob: -4.985174179077148
    7. '_' → logprob: -6.360174179077148
    8. '[i' → logprob: -6.610174179077148
    9. ' i' → logprob: -7.360174179077148
    10. '```' → logprob: -7.860174179077148

Token 30: ' query' (ID: 5703)
  Prédit: ' query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.010112546384334564
    2. 'query' → logprob: -4.635112762451172
    3. ' len' → logprob: -8.260112762451172
    4. ' ' → logprob: -10.385112762451172
    5. '(query' → logprob: -10.760112762451172
    6. 'len' → logprob: -10.885112762451172
    7. '	query' → logprob: -11.260112762451172
    8. '=query' → logprob: -12.385112762451172
    9. '"' → logprob: -12.885112762451172
    10. ' ' → logprob: -13.010112762451172

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.466968650580384e-05
    2. ' [' → logprob: -10.000054359436035
    3. ' ==' → logprob: -12.375054359436035
    4. ' ' → logprob: -13.625054359436035
    5. '```' → logprob: -13.875054359436035
    6. ' _' → logprob: -14.375054359436035
    7. '\[' → logprob: -14.375054359436035
    8. '==' → logprob: -15.000054359436035
    9. '[
' → logprob: -15.250054359436035
    10. '[_' → logprob: -15.625054359436035

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003029286628589034
    2. ' ' → logprob: -5.8780293464660645
    3. '[' → logprob: -8.503028869628906
    4. '1' → logprob: -11.503028869628906
    5. '(' → logprob: -12.503028869628906
    6. ''' → logprob: -13.003028869628906
    7. ' ==' → logprob: -13.503028869628906
    8. '_' → logprob: -14.253028869628906
    9. '2' → logprob: -14.253028869628906
    10. ']' → logprob: -14.378028869628906

Token 33: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23285998404026031
    2. '==' → logprob: -1.6078599691390991
    3. '[' → logprob: -5.982860088348389
    4. ']' → logprob: -6.482860088348389
    5. ')' → logprob: -6.732860088348389
    6. '=' → logprob: -7.482860088348389
    7. ' ' → logprob: -7.482860088348389
    8. ']==' → logprob: -7.607860088348389
    9. '=='' → logprob: -8.85785961151123
    10. ' =='' → logprob: -9.48285961151123

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.051665447652339935
    2. '==' → logprob: -3.0516655445098877
    3. '[' → logprob: -6.051665306091309
    4. ' ' → logprob: -8.051665306091309
    5. '=='' → logprob: -9.176665306091309
    6. ''' → logprob: -10.051665306091309
    7. '=' → logprob: -10.051665306091309
    8. ' =='' → logprob: -10.176665306091309
    9. '=="' → logprob: -10.301665306091309
    10. ' =' → logprob: -10.801665306091309

Token 35: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005307992920279503
    2. '"' → logprob: -5.755308151245117
    3. ' '' → logprob: -6.505308151245117
    4. ''a' → logprob: -9.255308151245117
    5. ''s' → logprob: -9.505308151245117
    6. ''U' → logprob: -9.505308151245117
    7. ''i' → logprob: -9.880308151245117
    8. ''"' → logprob: -9.880308151245117
    9. ''I' → logprob: -10.005308151245117
    10. ' ' → logprob: -10.005308151245117

Token 36: 'set' (ID: 977)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1563592404127121
    2. 'Q' → logprob: -3.6563591957092285
    3. '2' → logprob: -3.7813591957092285
    4. 's' → logprob: -4.0313591957092285
    5. 'r' → logprob: -4.6563591957092285
    6. 'R' → logprob: -4.6563591957092285
    7. 'C' → logprob: -5.0313591957092285
    8. 'c' → logprob: -5.0313591957092285
    9. 'f' → logprob: -5.1563591957092285
    10. 't' → logprob: -5.1563591957092285

Token 37: '':
' (ID: 7669)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.292069673538208
    2. ''' → logprob: -1.417069673538208
    3. ' ' → logprob: -1.667069673538208
    4. ' '' → logprob: -2.042069673538208
    5. 'a' → logprob: -3.542069673538208
    6. '[' → logprob: -4.042069435119629
    7. '('_' → logprob: -4.417069435119629
    8. '('' → logprob: -4.542069435119629
    9. '':' → logprob: -4.542069435119629
    10. '')' → logprob: -4.667069435119629

Token 38: '       ' (ID: 309)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9202818870544434
    2. ' U' → logprob: -1.2952818870544434
    3. ' ' → logprob: -2.1702818870544434
    4. '[' → logprob: -2.5452818870544434
    5. '   ' → logprob: -2.9202818870544434
    6. '    ' → logprob: -3.0452818870544434
    7. '(' → logprob: -3.7952818870544434
    8. '  ' → logprob: -5.670281887054443
    9. ' (' → logprob: -6.670281887054443
    10. '(U' → logprob: -6.670281887054443

Token 39: ' x' (ID: 1215)
  Prédit: ' U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.015836214646697044
    2. ' ' → logprob: -4.765836238861084
    3. 'U' → logprob: -5.140836238861084
    4. '_' → logprob: -7.515836238861084
    5. ' i' → logprob: -8.140835762023926
    6. 'i' → logprob: -8.390835762023926
    7. ' ' → logprob: -9.640835762023926
    8. '[' → logprob: -10.265835762023926
    9. ' space' → logprob: -10.890835762023926
    10. ' I' → logprob: -11.265835762023926

Token 40: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4823135435581207
    2. ' =' → logprob: -1.4823135137557983
    3. ' ' → logprob: -2.357313632965088
    4. ',' → logprob: -3.357313632965088
    5. '_' → logprob: -4.107313632965088
    6. ' _' → logprob: -5.982313632965088
    7. ' ,' → logprob: -6.107313632965088
    8. '[int' → logprob: -6.607313632965088
    9. '_idx' → logprob: -7.232313632965088
    10. 'x' → logprob: -8.35731315612793

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03806834667921066
    2. 'int' → logprob: -3.2880682945251465
    3. ' ' → logprob: -11.163068771362305
    4. ' x' → logprob: -12.163068771362305
    5. '[int' → logprob: -12.788068771362305
    6. '(int' → logprob: -13.538068771362305
    7. '	int' → logprob: -14.038068771362305
    8. '=int' → logprob: -14.288068771362305
    9. ' '' → logprob: -14.413068771362305
    10. 'x' → logprob: -15.163068771362305

Token 42: '(query' (ID: 19835)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932239532470703
    2. '(query' → logprob: -0.6932239532470703
    3. '(x' → logprob: -10.06822395324707
    4. '('' → logprob: -11.56822395324707
    5. '(
' → logprob: -12.31822395324707
    6. '(Query' → logprob: -12.31822395324707
    7. 'query' → logprob: -12.44322395324707
    8. '(

' → logprob: -12.56822395324707
    9. ')' → logprob: -13.19322395324707
    10. ' ' → logprob: -13.81822395324707

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.2994620242971e-06
    2. '1' → logprob: -12.375008583068848
    3. ')' → logprob: -14.375008583068848
    4. ' [' → logprob: -14.375008583068848
    5. '```' → logprob: -14.375008583068848
    6. '\[' → logprob: -14.375008583068848
    7. '[
' → logprob: -14.625008583068848
    8. '(' → logprob: -15.000008583068848
    9. ')[' → logprob: -15.250008583068848
    10. ''[' → logprob: -15.500008583068848

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '2' → logprob: -15.625001907348633
    4. '[' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '```' → logprob: -17.500001907348633
    7. ']' → logprob: -18.125001907348633
    8. ')' → logprob: -18.187501907348633
    9. '
' → logprob: -18.750001907348633
    10. '3' → logprob: -18.812501907348633

Token 45: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2862270176410675
    2. '])' → logprob: -1.4112269878387451
    3. ']' → logprob: -6.286227226257324
    4. ' )' → logprob: -6.911227226257324
    5. '-' → logprob: -7.161227226257324
    6. '])-' → logprob: -7.911227226257324
    7. ' ])' → logprob: -8.161227226257324
    8. ''])' → logprob: -8.786227226257324
    9. '[' → logprob: -9.036227226257324
    10. ')]' → logprob: -9.536227226257324

Token 46: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0272004883736372
    2. '<|end|>' → logprob: -5.027200698852539
    3. '1' → logprob: -5.277200698852539
    4. '  ' → logprob: -6.027200698852539
    5. '[' → logprob: -6.652200698852539
    6. '19' → logprob: -6.777200698852539
    7. '32' → logprob: -7.027200698852539
    8. '0' → logprob: -7.152200698852539
    9. '2' → logprob: -7.152200698852539
    10. '  
' → logprob: -7.152200698852539

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -16.875024795532227
    4. '```' → logprob: -18.750024795532227
    5. '１' → logprob: -19.750024795532227
    6. '>' → logprob: -20.125024795532227
    7. '۱' → logprob: -20.250024795532227
    8. '`' → logprob: -20.750024795532227
    9. '   ' → logprob: -20.750024795532227
    10. '১' → logprob: -20.750024795532227

Token 48: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' y' (ID: 342)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.02571920119225979
    2. ' U' → logprob: -4.150719165802002
    3. 'c' → logprob: -5.150719165802002
    4. 'y' (adapté à ' y') → logprob: -6.025719165802002
    5. '       ' → logprob: -7.275719165802002
    6. 'v' → logprob: -8.27571964263916
    7. ' c' → logprob: -9.15071964263916
    8. 'u' → logprob: -9.52571964263916
    9. ' ' → logprob: -9.65071964263916
    10. ' y' → logprob: -9.90071964263916

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14269694685935974
    2. '=' → logprob: -2.0176968574523926
    3. ' ' → logprob: -12.01769733428955
    4. '=int' → logprob: -12.39269733428955
    5. ']' → logprob: -12.51769733428955
    6. ')' → logprob: -12.89269733428955
    7. '[' → logprob: -13.76769733428955
    8. '_' → logprob: -14.01769733428955
    9. ',' → logprob: -14.14269733428955
    10. '  ' → logprob: -15.14269733428955

Token 52: ' int' (ID: 677)
  Prédit: ' query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.6672948002815247
    2. 'query' → logprob: -0.7922948002815247
    3. 'int' → logprob: -3.91729474067688
    4. ' int' → logprob: -4.292294979095459
    5. ' ' → logprob: -8.9172945022583
    6. '=query' → logprob: -9.9172945022583
    7. '1' → logprob: -10.0422945022583
    8. ''' → logprob: -10.1672945022583
    9. ' str' → logprob: -10.4172945022583
    10. ' '' → logprob: -10.5422945022583

Token 53: '(query' (ID: 19835)
  Prédit: '(query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.62501049041748
    3. ' (' → logprob: -14.37501049041748
    4. 'query' → logprob: -15.00001049041748
    5. '=query' → logprob: -15.12501049041748
    6. '	query' → logprob: -17.500009536743164
    7. '$query' → logprob: -17.500009536743164
    8. '(Query' → logprob: -17.625009536743164
    9. ')' → logprob: -17.750009536743164
    10. ' ' → logprob: -17.875009536743164

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.464347173576243e-05
    2. '2' → logprob: -10.50003433227539
    3. '])' → logprob: -13.50003433227539
    4. ')' → logprob: -13.75003433227539
    5. '1' → logprob: -13.75003433227539
    6. ']' → logprob: -14.37503433227539
    7. '(' → logprob: -14.50003433227539
    8. '][' → logprob: -14.62503433227539
    9. ' [' → logprob: -14.62503433227539
    10. '```' → logprob: -15.37503433227539

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.750012397766113
    3. '1' → logprob: -12.500012397766113
    4. '[' → logprob: -15.000012397766113
    5. '```' → logprob: -16.00001335144043
    6. '   ' → logprob: -16.25001335144043
    7. ']' → logprob: -16.25001335144043
    8. '])' → logprob: -16.62501335144043
    9. '  ' → logprob: -16.75001335144043
    10. '3' → logprob: -16.75001335144043

Token 56: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.011492913588881493
    2. ')' → logprob: -5.011492729187012
    3. ']' → logprob: -5.636492729187012
    4. '])-' → logprob: -7.511492729187012
    5. ' ])' → logprob: -8.011492729187012
    6. ''])' → logprob: -9.261492729187012
    7. ')])' → logprob: -9.761492729187012
    8. ')]' → logprob: -10.136492729187012
    9. '-' → logprob: -10.261492729187012
    10. '])]' → logprob: -10.511492729187012

Token 57: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4168004989624023
    2. '\n' → logprob: -1.7918004989624023
    3. ' ' → logprob: -1.9168004989624023
    4. ')' → logprob: -1.9168004989624023
    5. '<|end|>' → logprob: -2.1668004989624023
    6. '        ' → logprob: -3.0418004989624023
    7. '\' → logprob: -4.041800498962402
    8. ' U' → logprob: -4.166800498962402
    9. '  
' → logprob: -4.166800498962402
    10. '   ' → logprob: -4.291800498962402

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00042888117604888976
    2. ' ' → logprob: -7.875428676605225
    3. '0' → logprob: -10.000429153442383
    4. '<|end|>' → logprob: -12.750429153442383
    5. '2' → logprob: -15.375429153442383
    6. '<|end|>' → logprob: -16.750429153442383
    7. '```' → logprob: -17.187929153442383
    8. ' y' → logprob: -17.375429153442383
    9. ',' → logprob: -17.562929153442383
    10. '`' → logprob: -17.812929153442383

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0152729749679565
    2. '<|end|>' → logprob: -1.3902729749679565
    3. '
' → logprob: -2.265273094177246
    4. '       ' → logprob: -2.765273094177246
    5. ' ' → logprob: -2.890273094177246
    6. ']' → logprob: -3.140273094177246
    7. '   ' → logprob: -3.265273094177246
    8. '\n' → logprob: -3.890273094177246
    9. ':' → logprob: -4.640273094177246
    10. ' 
' → logprob: -4.765273094177246

Token 61: ' z' (ID: 579)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.5145350098609924
    2. ' U' → logprob: -1.3895349502563477
    3. '
' → logprob: -2.7645349502563477
    4. ' for' → logprob: -3.8895349502563477
    5. '       ' → logprob: -4.014534950256348
    6. '   ' → logprob: -4.264534950256348
    7. '        
' → logprob: -5.264534950256348
    8. ' 
' → logprob: -5.764534950256348
    9. ')' → logprob: -5.889534950256348
    10. ' ' → logprob: -6.139534950256348

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11712556332349777
    2. '=' → logprob: -2.3671255111694336
    3. ']' → logprob: -4.242125511169434
    4. '[' → logprob: -6.867125511169434
    5. ' ' → logprob: -7.742125511169434
    6. ')' → logprob: -8.367125511169434
    7. ',' → logprob: -8.617125511169434
    8. '_' → logprob: -9.492125511169434
    9. 's' → logprob: -9.992125511169434
    10. ']=' → logprob: -10.117125511169434

Token 63: ' query' (ID: 5703)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.20724022388458252
    2. ' U' → logprob: -2.082240104675293
    3. ''' → logprob: -3.707240104675293
    4. ''U' → logprob: -4.082240104675293
    5. ' '' → logprob: -4.707240104675293
    6. '1' → logprob: -5.457240104675293
    7. 'query' → logprob: -6.332240104675293
    8. '"' → logprob: -6.707240104675293
    9. ' ' → logprob: -6.707240104675293
    10. 'int' → logprob: -6.957240104675293

Token 64: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011766550596803427
    2. '3' → logprob: -6.751176834106445
    3. '```' → logprob: -12.876176834106445
    4. '`' → logprob: -13.251176834106445
    5. ' [' → logprob: -15.001176834106445
    6. '][' → logprob: -15.126176834106445
    7. '[-' → logprob: -15.251176834106445
    8. '\[' → logprob: -15.501176834106445
    9. ''[' → logprob: -15.751176834106445
    10. ' ' → logprob: -16.376176834106445

Token 65: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.0259150157216936e-05
    2. '1' → logprob: -11.00005054473877
    3. ' ' → logprob: -11.37505054473877
    4. '0' → logprob: -11.50005054473877
    5. '2' → logprob: -11.87505054473877
    6. '-' → logprob: -13.50005054473877
    7. ']' → logprob: -13.81255054473877
    8. '```' → logprob: -14.56255054473877
    9. '4' → logprob: -14.75005054473877
    10. '   ' → logprob: -15.12505054473877

Token 66: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007341580465435982
    2. '']' → logprob: -5.132341384887695
    3. '[' → logprob: -7.132341384887695
    4. ' ]' → logprob: -7.507341384887695
    5. ')' → logprob: -11.007341384887695
    6. '<|end|>' → logprob: -11.757341384887695
    7. ' ']' → logprob: -12.132341384887695
    8. '])' → logprob: -12.132341384887695
    9. '"]' → logprob: -12.382341384887695
    10. '][' → logprob: -12.757341384887695

Token 67: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17596089839935303
    2. '\n' → logprob: -2.9259610176086426
    3. '<|end|>' → logprob: -2.9259610176086426
    4. '       ' → logprob: -4.050961017608643
    5. ' 
' → logprob: -4.800961017608643
    6. '  
' → logprob: -4.800961017608643
    7. '   ' → logprob: -5.550961017608643
    8. ')' → logprob: -5.800961017608643
    9. '        
' → logprob: -5.925961017608643
    10. '    
' → logprob: -6.300961017608643

Token 68: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5655533075332642
    2. ' for' → logprob: -1.1905533075332642
    3. 'for' (adapté à ' for') → logprob: -3.5655531883239746
    4. ' 
' → logprob: -3.8155531883239746
    5. ' U' → logprob: -4.440553188323975
    6. '\n' → logprob: -4.565553188323975
    7. ' if' → logprob: -4.565553188323975
    8. '   ' → logprob: -4.815553188323975
    9. '    
' → logprob: -4.815553188323975
    10. 'if' → logprob: -5.065553188323975

Token 69: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.050978150218725204
    2. ' ' → logprob: -3.675978183746338
    3. ' _' → logprob: -3.800978183746338
    4. 'i' → logprob: -6.550978183746338
    5. '_' → logprob: -7.800978183746338
    6. ' j' → logprob: -9.05097770690918
    7. ' idx' → logprob: -10.92597770690918
    8. ' range' → logprob: -11.55097770690918
    9. ' in' → logprob: -12.05097770690918
    10. ' t' → logprob: -12.30097770690918

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013813918456435204
    2. 'in' → logprob: -4.3888139724731445
    3. 'range' → logprob: -7.3888139724731445
    4. ' ' → logprob: -7.8888139724731445
    5. ' range' → logprob: -8.638813972473145
    6. '   ' → logprob: -9.638813972473145
    7. '  ' → logprob: -11.513813972473145
    8. ' i' → logprob: -11.638813972473145
    9. '	in' → logprob: -11.763813972473145
    10. 'n' → logprob: -12.013813972473145

Token 71: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -7.44574936106801e-05
    2. 'range' → logprob: -9.75007438659668
    3. ' ' → logprob: -11.37507438659668
    4. ' xrange' → logprob: -13.50007438659668
    5. '	range' → logprob: -13.50007438659668
    6. ' ran' → logprob: -13.62507438659668
    7. ' rang' → logprob: -14.87507438659668
    8. '(range' → logprob: -15.12507438659668
    9. ' ' → logprob: -17.62507438659668
    10. ' rango' → logprob: -18.12507438659668

Token 72: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0023955097422003746
    2. '(' → logprob: -6.3773956298828125
    3. ' x' → logprob: -7.6273956298828125
    4. 'x' → logprob: -9.002395629882812
    5. ' (' → logprob: -9.627395629882812
    6. '(y' → logprob: -11.502395629882812
    7. ' ' → logprob: -13.377395629882812
    8. ')' → logprob: -13.377395629882812
    9. '(
' → logprob: -13.377395629882812
    10. '(i' → logprob: -13.752395629882812

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0052619799971580505
    2. ' ,' → logprob: -5.3802618980407715
    3. ',y' → logprob: -7.3802618980407715
    4. ',i' → logprob: -11.75526237487793
    5. ',x' → logprob: -12.13026237487793
    6. ' ' → logprob: -14.13026237487793
    7. ',len' → logprob: -14.25526237487793
    8. '   ' → logprob: -14.50526237487793
    9. ',z' → logprob: -14.50526237487793
    10. ',
' → logprob: -14.63026237487793

Token 74: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.007613494526594877
    2. ' y' → logprob: -4.882613658905029
    3. '(y' → logprob: -12.507613182067871
    4. '   ' → logprob: -13.507613182067871
    5. '	y' → logprob: -13.507613182067871
    6. '    ' → logprob: -15.132613182067871
    7. 'x' → logprob: -15.757613182067871
    8. ' ' → logprob: -16.632614135742188
    9. ',y' → logprob: -16.632614135742188
    10. ''y' → logprob: -16.632614135742188

Token 75: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011047935113310814
    2. ' +' → logprob: -4.511047840118408
    3. '+
' → logprob: -16.51104736328125
    4. ')' → logprob: -17.63604736328125
    5. ' ' → logprob: -17.63604736328125
    6. '＋' → logprob: -17.88604736328125
    7. '+)' → logprob: -18.26104736328125
    8. ')+' → logprob: -18.63604736328125
    9. '   ' → logprob: -18.76104736328125
    10. ' +
' → logprob: -19.13604736328125

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010819212911883369
    2. ' ' → logprob: -9.250107765197754
    3. ')' → logprob: -11.625107765197754
    4. '):' → logprob: -13.250107765197754
    5. '):
' → logprob: -14.125107765197754
    6. ',' → logprob: -15.125107765197754
    7. '```' → logprob: -16.12510871887207
    8. '   ' → logprob: -16.37510871887207
    9. '+' → logprob: -17.25010871887207
    10. '  ' → logprob: -17.50010871887207

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018439987674355507
    2. '):
' → logprob: -4.018439769744873
    3. '):
' → logprob: -8.518440246582031
    4. ' ):' → logprob: -9.893440246582031
    5. ')' → logprob: -10.518440246582031
    6. ':' → logprob: -11.893440246582031
    7. '):

' → logprob: -13.143440246582031
    8. ' ):
' → logprob: -13.768440246582031
    9. ',' → logprob: -14.018440246582031
    10. ' ' → logprob: -14.518440246582031

Token 78: '           ' (ID: 352)
  Prédit: ' U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.5950554013252258
    2. '           ' → logprob: -1.095055341720581
    3. 'U' → logprob: -2.970055341720581
    4. '       ' → logprob: -3.470055341720581
    5. '            
' → logprob: -4.84505558013916
    6. '<|end|>' → logprob: -5.22005558013916
    7. '   ' → logprob: -5.72005558013916
    8. ' 
' → logprob: -5.97005558013916
    9. '               ' → logprob: -6.09505558013916
    10. ' ' → logprob: -6.34505558013916

Token 79: ' U' (ID: 601)
  Prédit: ' U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.523597002029419
    2. 'U' (adapté à ' U') → logprob: -0.898597002029419
    3. ' ' → logprob: -7.89859676361084
    4. '<|end|>' → logprob: -10.64859676361084
    5. '	U' → logprob: -10.77359676361084
    6. '           ' → logprob: -11.14859676361084
    7. '   ' → logprob: -11.27359676361084
    8. ' 
' → logprob: -12.02359676361084
    9. '  ' → logprob: -12.77359676361084
    10. ' ' → logprob: -12.89859676361084

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.652451464906335e-05
    2. '[' → logprob: -11.125016212463379
    3. '[I' → logprob: -14.125016212463379
    4. '```' → logprob: -15.375016212463379
    5. '[x' → logprob: -15.500016212463379
    6. '[
' → logprob: -15.875016212463379
    7. '[u' → logprob: -16.000017166137695
    8. '[int' → logprob: -16.125017166137695
    9. '[idx' → logprob: -17.000017166137695
    10. ' [' → logprob: -17.250017166137695

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011062555946409702
    2. '=' → logprob: -5.7610626220703125
    3. ' =' → logprob: -5.7610626220703125
    4. ']=' → logprob: -6.0110626220703125
    5. ' ]' → logprob: -6.2610626220703125
    6. ')' → logprob: -8.011062622070312
    7. ' )' → logprob: -12.636062622070312
    8. ' ' → logprob: -13.011062622070312
    9. ')=' → logprob: -13.011062622070312
    10. ')]' → logprob: -13.511062622070312

Token 82: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575941264629364
    2. ' =' → logprob: -0.825941264629364
    3. '＝' → logprob: -15.07594108581543
    4. ' ' → logprob: -15.32594108581543
    5. '=s' → logprob: -16.20094108581543
    6. '=

' → logprob: -16.32594108581543
    7. '=user' → logprob: -16.32594108581543
    8. '+=' → logprob: -16.57594108581543
    9. '=end' → logprob: -16.57594108581543
    10. '=os' → logprob: -16.57594108581543

Token 83: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.054893676191568375
    2. ' z' → logprob: -2.929893732070923
    3. ''z' → logprob: -11.804893493652344
    4. '	z' → logprob: -13.054893493652344
    5. ' ' → logprob: -14.304893493652344
    6. 's' → logprob: -15.679893493652344
    7. '_z' → logprob: -15.929893493652344
    8. ''' → logprob: -15.929893493652344
    9. ' ' → logprob: -16.179893493652344
    10. ' '' → logprob: -16.179893493652344

Token 84: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6137081384658813
    2. 'else' (adapté à ' else') → logprob: -2.238708019256592
    3. '<|end|>' → logprob: -2.238708019256592
    4. '\n' → logprob: -2.488708019256592
    5. '```' → logprob: -2.863708019256592
    6. ' ' → logprob: -3.738708019256592
    7. ' elif' → logprob: -4.363708019256592
    8. '
' → logprob: -4.613708019256592
    9. '[' → logprob: -4.738708019256592
    10. 'e' → logprob: -4.988708019256592

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00044151677866466343
    2. ' :' → logprob: -8.125441551208496
    3. ':
' → logprob: -9.875441551208496
    4. '[' → logprob: -10.375441551208496
    5. 'if' → logprob: -10.375441551208496
    6. ' if' → logprob: -11.375441551208496
    7. '   ' → logprob: -12.000441551208496
    8. '_' → logprob: -13.500441551208496
    9. '[:]' → logprob: -13.500441551208496
    10. '<|end|>' → logprob: -13.875441551208496

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8228071928024292
    2. ' 
' → logprob: -2.0728073120117188
    3. '    ' → logprob: -2.4478073120117188
    4. '[' → logprob: -2.8228073120117188
    5. ' print' → logprob: -3.0728073120117188
    6. '    
' → logprob: -3.1978073120117188
    7. ' ' → logprob: -3.3228073120117188
    8. ' _' → logprob: -3.6978073120117188
    9. '_' → logprob: -3.9478073120117188
    10. 'print' → logprob: -4.197807312011719

Token 89: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7812861204147339
    2. ' x' → logprob: -1.2812861204147339
    3. ' l' → logprob: -2.1562862396240234
    4. 'l' → logprob: -2.6562862396240234
    5. 'print' → logprob: -3.5312862396240234
    6. ' print' → logprob: -4.406286239624023
    7. 'count' → logprob: -4.906286239624023
    8. 'a' (adapté à ' a') → logprob: -5.531286239624023
    9. ' a' → logprob: -5.906286239624023
    10. ' count' → logprob: -6.031286239624023

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04771431162953377
    2. ',' → logprob: -3.6727142333984375
    3. '=' → logprob: -4.7977142333984375
    4. ' ' → logprob: -5.0477142333984375
    5. ',b' → logprob: -5.4227142333984375
    6. 'b' → logprob: -7.5477142333984375
    7. 'r' → logprob: -7.6727142333984375
    8. 's' → logprob: -7.6727142333984375
    9. '   ' → logprob: -9.297714233398438
    10. '  ' → logprob: -9.672714233398438

Token 91: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00639240350574255
    2. ' int' → logprob: -5.131392478942871
    3. '[int' → logprob: -8.006392478942871
    4. '0' → logprob: -10.256392478942871
    5. '<int' → logprob: -10.631392478942871
    6. '(int' → logprob: -11.131392478942871
    7. '[]' → logprob: -11.381392478942871
    8. 'len' → logprob: -11.756392478942871
    9. ' ' → logprob: -11.881392478942871
    10. 'query' → logprob: -12.256392478942871

Token 92: '(query' (ID: 19835)
  Prédit: '(query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.00031377444975078106
    2. 'query' → logprob: -8.500313758850098
    3. '(' → logprob: -9.125313758850098
    4. '=query' → logprob: -15.000313758850098
    5. ' query' → logprob: -15.125313758850098
    6. '$query' → logprob: -15.500313758850098
    7. '	query' → logprob: -15.875313758850098
    8. ' (' → logprob: -16.000314712524414
    9. '(q' → logprob: -16.750314712524414
    10. '(Query' → logprob: -16.875314712524414

Token 93: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.078839502763003e-05
    2. '1' → logprob: -10.000090599060059
    3. ')' → logprob: -10.625090599060059
    4. '(' → logprob: -12.000090599060059
    5. ' [' → logprob: -12.125090599060059
    6. '   ' → logprob: -13.125090599060059
    7. ')[' → logprob: -13.250090599060059
    8. '[
' → logprob: -13.875090599060059
    9. ' ' → logprob: -14.125090599060059
    10. '2' → logprob: -14.250090599060059

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017610944341868162
    2. '2' → logprob: -6.376760959625244
    3. '[' → logprob: -10.001761436462402
    4. ' ' → logprob: -11.876761436462402
    5. '3' → logprob: -13.001761436462402
    6. '0' → logprob: -13.251761436462402
    7. '   ' → logprob: -13.751761436462402
    8. '```' → logprob: -14.251761436462402
    9. ']' → logprob: -15.626761436462402
    10. '-' → logprob: -15.876761436462402

Token 95: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025150546804070473
    2. '])' → logprob: -3.7751505374908447
    3. ']' → logprob: -6.650150775909424
    4. ')
' → logprob: -8.400150299072266
    5. '-' → logprob: -9.150150299072266
    6. ')]' → logprob: -9.275150299072266
    7. ' )' → logprob: -10.400150299072266
    8. ')])' → logprob: -10.900150299072266
    9. '[' → logprob: -11.025150299072266
    10. '）' → logprob: -11.150150299072266

Token 96: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0420068502426147
    2. '<|end|>' → logprob: -1.2920068502426147
    3. ' b' → logprob: -2.0420069694519043
    4. '   ' → logprob: -2.2920069694519043
    5. 'b' → logprob: -2.2920069694519043
    6. ' x' → logprob: -5.417006969451904
    7. 'print' → logprob: -5.542006969451904
    8. '  ' → logprob: -5.792006969451904
    9. ',' → logprob: -5.792006969451904
    10. '<|end|>' → logprob: -5.917006969451904

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003712085890583694
    2. ' ' → logprob: -8.375370979309082
    3. '0' → logprob: -8.875370979309082
    4. '<|end|>' → logprob: -14.250370979309082
    5. '2' → logprob: -16.3753719329834
    6. 'int' → logprob: -17.0003719329834
    7. ')' → logprob: -17.7503719329834
    8. '<|end|>' → logprob: -18.2503719329834
    9. '```' → logprob: -18.3753719329834
    10. 'a' → logprob: -19.3128719329834

Token 98: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03830965980887413
    2. '<|end|>' → logprob: -3.9133095741271973
    3. ' b' → logprob: -4.163309574127197
    4. ' 
' → logprob: -7.663309574127197
    5. '   ' → logprob: -7.788309574127197
    6. '
' → logprob: -7.913309574127197
    7. ' ' → logprob: -8.163310050964355
    8. '<|end|>' → logprob: -9.288310050964355
    9. ')' → logprob: -9.413310050964355
    10. '  
' → logprob: -10.288310050964355

Token 99: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05799538642168045
    2. ' b' → logprob: -3.682995319366455
    3. '<|end|>' → logprob: -4.057995319366455
    4. '   ' → logprob: -4.432995319366455
    5. ' 
' → logprob: -7.807995319366455
    6. '	b' → logprob: -7.932995319366455
    7. ' ' → logprob: -8.307995796203613
    8. '
' → logprob: -8.682995796203613
    9. '<|end|>' → logprob: -8.807995796203613
    10. '    
' → logprob: -8.932995796203613

Token 100: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.00024989593657664955
    2. 'print' → logprob: -8.375249862670898
    3. ' b' → logprob: -11.000249862670898
    4. 'p' → logprob: -14.125249862670898
    5. 'z' → logprob: -14.875249862670898
    6. 'a' → logprob: -15.250249862670898
    7. '   ' → logprob: -15.375249862670898
    8. ' print' → logprob: -15.625249862670898
    9. 'c' → logprob: -15.750249862670898
    10. 'n' → logprob: -15.875249862670898

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5318484306335449
    2. '<|end|>' → logprob: -1.031848430633545
    3. '+' → logprob: -3.531848430633545
    4. '=' → logprob: -3.906848430633545
    5. ' ' → logprob: -5.781848430633545
    6. ' +' → logprob: -6.156848430633545
    7. '<|end|>' → logprob: -6.906848430633545
    8. ' +=' → logprob: -8.531848907470703
    9. ')' → logprob: -8.531848907470703
    10. ' =
' → logprob: -10.406848907470703

Token 102: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.048590321093797684
    2. ' int' → logprob: -3.0485904216766357
    3. '<int' → logprob: -13.923590660095215
    4. '[int' → logprob: -14.173590660095215
    5. '=int' → logprob: -14.548590660095215
    6. '(int' → logprob: -14.548590660095215
    7. '	int' → logprob: -16.0485897064209
    8. ':int' → logprob: -16.5485897064209
    9. ' ' → logprob: -16.6735897064209
    10. ']int' → logprob: -17.0485897064209

Token 103: '(query' (ID: 19835)
  Prédit: '(query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -8.363617962459102e-05
    2. 'query' → logprob: -9.500083923339844
    3. '(' → logprob: -12.250083923339844
    4. '=query' → logprob: -12.875083923339844
    5. ' (' → logprob: -14.625083923339844
    6. 'int' → logprob: -15.125083923339844
    7. '(input' → logprob: -15.875083923339844
    8. ' query' → logprob: -15.875083923339844
    9. '$query' → logprob: -16.500083923339844
    10. '(int' → logprob: -16.500083923339844

Token 104: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002980432182084769
    2. '2' → logprob: -8.625298500061035
    3. ']' → logprob: -9.875298500061035
    4. '1' → logprob: -10.250298500061035
    5. ')' → logprob: -10.625298500061035
    6. '])' → logprob: -12.625298500061035
    7. '   ' → logprob: -13.500298500061035
    8. '][' → logprob: -14.250298500061035
    9. ' ' → logprob: -14.250298500061035
    10. '```' → logprob: -14.625298500061035

Token 105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000318065780447796
    2. '1' → logprob: -8.12531852722168
    3. ' ' → logprob: -11.12531852722168
    4. '[' → logprob: -12.37531852722168
    5. '   ' → logprob: -14.00031852722168
    6. '```' → logprob: -14.00031852722168
    7. '0' → logprob: -14.87531852722168
    8. ']' → logprob: -15.25031852722168
    9. '])' → logprob: -15.37531852722168
    10. ')' → logprob: -16.00031852722168

Token 106: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.020960014313459396
    2. ')' → logprob: -3.8959600925445557
    3. ']' → logprob: -8.020959854125977
    4. '])
' → logprob: -10.645959854125977
    5. ')]' → logprob: -10.895959854125977
    6. ' ])' → logprob: -11.645959854125977
    7. '])+' → logprob: -11.770959854125977
    8. ''])' → logprob: -11.895959854125977
    9. ')])' → logprob: -12.395959854125977
    10. '`)' → logprob: -12.770959854125977

Token 107: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2194363921880722
    2. ' -' → logprob: -2.0944364070892334
    3. ')' → logprob: -3.0944364070892334
    4. '<|end|>' → logprob: -4.719436168670654
    5. ' ' → logprob: -5.094436168670654
    6. '+' → logprob: -5.094436168670654
    7. '<|end|>' → logprob: -6.219436168670654
    8. '   ' → logprob: -6.469436168670654
    9. '[' → logprob: -6.844436168670654
    10. 'for' → logprob: -7.344436168670654

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -17.250001907348633
    4. '<|end|>' → logprob: -17.250001907348633
    5. '0' → logprob: -17.500001907348633
    6. '2' → logprob: -18.562501907348633
    7. 'b' → logprob: -18.875001907348633
    8. '-' → logprob: -19.312501907348633
    9. '<|end|>' → logprob: -19.437501907348633
    10. '۱' → logprob: -19.562501907348633

Token 109: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04048141464591026
    2. '   ' → logprob: -4.0404815673828125
    3. '<|end|>' → logprob: -5.1654815673828125
    4. '       ' → logprob: -5.2904815673828125
    5. ' 
' → logprob: -6.4154815673828125
    6. 'print' → logprob: -6.5404815673828125
    7. '\n' → logprob: -6.6654815673828125
    8. '  
' → logprob: -6.7904815673828125
    9. ')' → logprob: -7.1654815673828125
    10. 'newline' → logprob: -7.2904815673828125

Token 110: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13400904834270477
    2. 'print' → logprob: -3.2590091228485107
    3. '   ' → logprob: -3.3840091228485107
    4. ' 
' → logprob: -4.634008884429932
    5. ' print' → logprob: -4.884008884429932
    6. 'count' → logprob: -5.259008884429932
    7. '       ' → logprob: -5.384008884429932
    8. ')' → logprob: -5.759008884429932
    9. '    
' → logprob: -5.884008884429932
    10. '        
' → logprob: -6.134008884429932

Token 111: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2856639325618744
    2. 'sub' → logprob: -2.9106638431549072
    3. 'count' → logprob: -3.4106638431549072
    4. 'res' → logprob: -3.5356638431549072
    5. 'result' → logprob: -3.9106638431549072
    6. 'cnt' → logprob: -4.035664081573486
    7. 'ans' → logprob: -4.160664081573486
    8. 's' → logprob: -4.285664081573486
    9. 'substring' → logprob: -4.660664081573486
    10. 'subset' → logprob: -4.910664081573486

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10704261064529419
    2. '=' → logprob: -2.7320425510406494
    3. 'ount' → logprob: -3.3570425510406494
    4. ' ' → logprob: -7.3570427894592285
    5. '_' → logprob: -7.7320427894592285
    6. 'o' → logprob: -8.85704231262207
    7. ',' → logprob: -9.10704231262207
    8. '  ' → logprob: -9.85704231262207
    9. 'u' → logprob: -10.60704231262207
    10. 'nt' → logprob: -10.73204231262207

Token 113: ' int' (ID: 677)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.2665350139141083
    2. 'U' → logprob: -1.8915350437164307
    3. 'int' → logprob: -3.7665350437164307
    4. ' query' → logprob: -4.016534805297852
    5. ' U' → logprob: -4.141534805297852
    6. '0' → logprob: -4.641534805297852
    7. 'input' → logprob: -4.891534805297852
    8. ''U' → logprob: -6.391534805297852
    9. ''' → logprob: -6.766534805297852
    10. ' ' → logprob: -7.016534805297852

Token 114: '(query' (ID: 19835)
  Prédit: '(query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.004821107257157564
    2. 'query' → logprob: -5.754821300506592
    3. '(' → logprob: -6.504821300506592
    4. '(U' → logprob: -9.754820823669434
    5. '(
' → logprob: -10.879820823669434
    6. ' (' → logprob: -11.129820823669434
    7. '(b' → logprob: -11.129820823669434
    8. ' query' → logprob: -12.129820823669434
    9. '('' → logprob: -12.129820823669434
    10. '=query' → logprob: -12.129820823669434

Token 115: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3141239285469055
    2. '3' → logprob: -1.3141238689422607
    3. ']' → logprob: -8.68912410736084
    4. '[a' → logprob: -8.81412410736084
    5. '])' → logprob: -8.93912410736084
    6. '2' → logprob: -9.18912410736084
    7. '```' → logprob: -9.68912410736084
    8. ')' → logprob: -9.93912410736084
    9. '][' → logprob: -10.31412410736084
    10. 'a' → logprob: -10.31412410736084

Token 116: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0037585131358355284
    2. '2' → logprob: -6.003758430480957
    3. '1' → logprob: -6.753758430480957
    4. '0' → logprob: -9.753758430480957
    5. '[' → logprob: -11.003758430480957
    6. 'a' → logprob: -11.628758430480957
    7. '```' → logprob: -11.628758430480957
    8. ']' → logprob: -12.253758430480957
    9. ' ' → logprob: -12.378758430480957
    10. '   ' → logprob: -13.128758430480957

Token 117: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45226943492889404
    2. '])' → logprob: -1.202269434928894
    3. ')' → logprob: -3.4522695541381836
    4. ']
' → logprob: -3.7022695541381836
    5. '])
' → logprob: -5.452269554138184
    6. ')
' → logprob: -6.702269554138184
    7. ')]' → logprob: -7.952269554138184
    8. '])]' → logprob: -8.827269554138184
    9. ' ]' → logprob: -9.202269554138184
    10. ']

' → logprob: -9.452269554138184

Token 118: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0965049266815186
    2. '
' → logprob: -1.4715049266815186
    3. '[' → logprob: -1.9715049266815186
    4. 'count' → logprob: -2.8465049266815186
    5. ' ' → logprob: -2.9715049266815186
    6. '   ' → logprob: -3.4715049266815186
    7. ' for' → logprob: -3.5965049266815186
    8. ' =' → logprob: -3.7215049266815186
    9. 'if' → logprob: -4.471505165100098
    10. '<|end|>' → logprob: -4.596505165100098

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004499765345826745
    2. '3' → logprob: -8.500450134277344
    3. '2' → logprob: -8.625450134277344
    4. ' ' → logprob: -9.875450134277344
    5. '0' → logprob: -11.875450134277344
    6. 'int' → logprob: -12.500450134277344
    7. 'len' → logprob: -12.875450134277344
    8. '
' → logprob: -14.500450134277344
    9. '-' → logprob: -14.875450134277344
    10. 'c' → logprob: -15.937950134277344

Token 120: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.526220977306366
    2. '       ' → logprob: -1.6512210369110107
    3. '<|end|>' → logprob: -1.7762210369110107
    4. '   ' → logprob: -3.9012210369110107
    5. '        
' → logprob: -5.526220798492432
    6. '#' → logprob: -5.526220798492432
    7. 's' → logprob: -5.651220798492432
    8. ')' → logprob: -5.776220798492432
    9. '  
' → logprob: -6.526220798492432
    10. ' for' → logprob: -6.651220798492432

Token 121: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10518556833267212
    2. '       ' → logprob: -2.6051855087280273
    3. '<|end|>' → logprob: -4.480185508728027
    4. '   ' → logprob: -4.730185508728027
    5. '#' → logprob: -6.730185508728027
    6. ')' → logprob: -7.480185508728027
    7. '\n' → logprob: -7.605185508728027
    8. '        
' → logprob: -7.730185508728027
    9. '  
' → logprob: -7.730185508728027
    10. 's' → logprob: -7.855185508728027

Token 122: ' d' (ID: 272)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1754077672958374
    2. 'cnt' → logprob: -1.5504077672958374
    3. 'ans' → logprob: -2.175407886505127
    4. 'res' → logprob: -2.300407886505127
    5. 's' → logprob: -2.800407886505127
    6. 'print' → logprob: -3.050407886505127
    7. 'found' → logprob: -3.675407886505127
    8. 'result' → logprob: -4.175407886505127
    9. 'sub' → logprob: -4.175407886505127
    10. 'freq' → logprob: -4.300407886505127

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04316737875342369
    2. '=' → logprob: -3.1681673526763916
    3. ')' → logprob: -9.668167114257812
    4. '_' → logprob: -10.043167114257812
    5. ',' → logprob: -11.043167114257812
    6. '=int' → logprob: -11.418167114257812
    7. ' ' → logprob: -11.418167114257812
    8. ' ' → logprob: -12.668167114257812
    9. '```' → logprob: -12.793167114257812
    10. '<|end|>' → logprob: -12.793167114257812

Token 124: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25194215774536133
    2. ' int' → logprob: -1.5019421577453613
    3. '(int' → logprob: -12.626941680908203
    4. '	int' → logprob: -13.126941680908203
    5. 'b' → logprob: -13.251941680908203
    6. '<int' → logprob: -13.751941680908203
    7. '   ' → logprob: -13.876941680908203
    8. '[int' → logprob: -14.001941680908203
    9. '=int' → logprob: -14.126941680908203
    10. ' ' → logprob: -14.376941680908203

Token 125: '(query' (ID: 19835)
  Prédit: '(query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.5937950611114502
    2. 'query' → logprob: -0.8437950611114502
    3. 'int' → logprob: -4.093794822692871
    4. ' query' → logprob: -6.968794822692871
    5. ' int' → logprob: -10.593794822692871
    6. '(int' → logprob: -10.718794822692871
    7. '=query' → logprob: -11.093794822692871
    8. ' (' → logprob: -11.843794822692871
    9. 'c' → logprob: -12.843794822692871
    10. '$query' → logprob: -12.968794822692871

Token 126: '[' (ID: 58)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5717607140541077
    2. '[' → logprob: -0.9467607140541077
    3. '3' → logprob: -3.071760654449463
    4. '```' → logprob: -7.821760654449463
    5. ']' → logprob: -8.071761131286621
    6. '][' → logprob: -9.071761131286621
    7. '   ' → logprob: -9.321761131286621
    8. ' ' → logprob: -9.446761131286621
    9. ')' → logprob: -10.446761131286621
    10. '])' → logprob: -10.821761131286621

Token 127: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.12696537375450134
    2. '3' → logprob: -2.126965284347534
    3. ']' → logprob: -11.501965522766113
    4. '```' → logprob: -11.751965522766113
    5. '[' → logprob: -12.626965522766113
    6. ')' → logprob: -12.751965522766113
    7. '2' → logprob: -13.001965522766113
    8. '   ' → logprob: -13.251965522766113
    9. ' ' → logprob: -13.376965522766113
    10. '])' → logprob: -13.501965522766113

Token 128: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6466177105903625
    2. '])' → logprob: -1.0216176509857178
    3. ')' → logprob: -2.7716176509857178
    4. ']+' → logprob: -3.0216176509857178
    5. ')]' → logprob: -6.146617889404297
    6. '+' → logprob: -6.771617889404297
    7. '])+' → logprob: -6.771617889404297
    8. ')+' → logprob: -8.521617889404297
    9. '])]' → logprob: -9.521617889404297
    10. ')])' → logprob: -10.271617889404297

Token 129: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0544813871383667
    2. '<|end|>' → logprob: -1.4294813871383667
    3. 'for' → logprob: -2.4294815063476562
    4. ':' → logprob: -2.9294815063476562
    5. ' 
' → logprob: -3.0544815063476562
    6. ':
' → logprob: -3.4294815063476562
    7. '  
' → logprob: -3.5544815063476562
    8. ' ' → logprob: -3.8044815063476562
    9. 'if' → logprob: -3.9294815063476562
    10. '[' → logprob: -4.179481506347656

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8444881536415778e-05
    2. '0' → logprob: -11.250028610229492
    3. ' ' → logprob: -11.875028610229492
    4. '4' → logprob: -12.250028610229492
    5. 'd' → logprob: -12.750028610229492
    6. '```' → logprob: -15.125028610229492
    7. '+' → logprob: -15.750028610229492
    8. 'c' → logprob: -16.000028610229492
    9. '3' → logprob: -16.250028610229492
    10. ' d' → logprob: -16.625028610229492

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11586160957813263
    2. '<|end|>' → logprob: -2.365861654281616
    3. '   ' → logprob: -5.490861415863037
    4. '\n' → logprob: -6.240861415863037
    5. '       ' → logprob: -6.365861415863037
    6. ')' → logprob: -6.990861415863037
    7. '  
' → logprob: -6.990861415863037
    8. ' 
' → logprob: -7.115861415863037
    9. '        
' → logprob: -7.240861415863037
    10. '#' → logprob: -7.240861415863037

Token 132: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015361939556896687
    2. '<|end|>' → logprob: -5.140361785888672
    3. '\n' → logprob: -6.140361785888672
    4. ' 
' → logprob: -6.890361785888672
    5. '       ' → logprob: -6.890361785888672
    6. 'n' → logprob: -7.140361785888672
    7. '   ' → logprob: -7.140361785888672
    8. ' for' → logprob: -7.265361785888672
    9. 's' → logprob: -7.390361785888672
    10. '  
' → logprob: -8.140361785888672

Token 133: ' S' (ID: 336)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9727658033370972
    2. 'print' → logprob: -1.5977658033370972
    3. 'ans' → logprob: -1.9727658033370972
    4. 'cnt' → logprob: -2.5977659225463867
    5. 'flag' → logprob: -3.2227659225463867
    6. 'res' → logprob: -3.2227659225463867
    7. 'found' → logprob: -3.4727659225463867
    8. 'answer' → logprob: -3.9727659225463867
    9. 'result' → logprob: -4.097765922546387
    10. 's' → logprob: -4.097765922546387

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6126750111579895
    2. ' =' → logprob: -0.8626750111579895
    3. 'u' → logprob: -4.612675189971924
    4. '_' → logprob: -4.612675189971924
    5. '[' → logprob: -5.362675189971924
    6. 'e' → logprob: -6.487675189971924
    7. '1' → logprob: -6.612675189971924
    8. 'a' → logprob: -6.987675189971924
    9. ')' → logprob: -7.237675189971924
    10. ' ' → logprob: -7.362675189971924

Token 135: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.01656927913427353
    2. ' U' → logprob: -4.141569137573242
    3. '"' → logprob: -8.641569137573242
    4. '0' → logprob: -8.766569137573242
    5. '''.' → logprob: -10.141569137573242
    6. ''U' → logprob: -10.266569137573242
    7. '""' → logprob: -10.641569137573242
    8. ' ' → logprob: -10.891569137573242
    9. '[]' → logprob: -11.141569137573242
    10. '   ' → logprob: -11.141569137573242

Token 136: '[a' (ID: 32035)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00016444525681436062
    2. '[' → logprob: -9.125164031982422
    3. '[a' → logprob: -10.000164031982422
    4. '[b' → logprob: -11.875164031982422
    5. 'c' → logprob: -13.000164031982422
    6. '[
' → logprob: -14.875164031982422
    7. ' [' → logprob: -15.500164031982422
    8. '[s' → logprob: -16.875164031982422
    9. '```' → logprob: -16.875164031982422
    10. ' c' → logprob: -18.375164031982422

Token 137: ':b' (ID: 87246)
  Prédit: ':b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':b' → logprob: -0.1897762268781662
    2. ':c' → logprob: -1.8147761821746826
    3. ':' → logprob: -4.939776420593262
    4. 'b' → logprob: -6.064776420593262
    5. 'c' → logprob: -8.189776420593262
    6. ' :' → logprob: -9.064776420593262
    7. ']' → logprob: -10.064776420593262
    8. ':]' → logprob: -10.314776420593262
    9. '[b' → logprob: -11.439776420593262
    10. ':d' → logprob: -11.689776420593262

Token 138: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007860410842113197
    2. ' +' → logprob: -7.625785827636719
    3. ']+' → logprob: -9.000785827636719
    4. '+c' → logprob: -9.250785827636719
    5. '+d' → logprob: -10.375785827636719
    6. ']' → logprob: -10.500785827636719
    7. 'd' → logprob: -12.250785827636719
    8. '+]' → logprob: -12.375785827636719
    9. 'c' → logprob: -12.625785827636719
    10. '1' → logprob: -13.250785827636719

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008117707911878824
    2. 'd' → logprob: -7.125811576843262
    3. ']' → logprob: -12.875811576843262
    4. ' ' → logprob: -12.875811576843262
    5. 'c' → logprob: -13.500811576843262
    6. ' d' → logprob: -15.125811576843262
    7. '(d' → logprob: -15.500811576843262
    8. '```' → logprob: -15.500811576843262
    9. '+' → logprob: -17.250812530517578
    10. ')' → logprob: -17.500812530517578

Token 140: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006226073601283133
    2. ']
' → logprob: -8.000622749328613
    3. ']==' → logprob: -9.125622749328613
    4. '].' → logprob: -9.625622749328613
    5. ']

' → logprob: -9.875622749328613
    6. '][' → logprob: -10.625622749328613
    7. ' ]' → logprob: -10.750622749328613
    8. ']
' → logprob: -12.625622749328613
    9. ']+' → logprob: -12.625622749328613
    10. '];' → logprob: -13.375622749328613

Token 141: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17886517941951752
    2. 'if' → logprob: -2.9288651943206787
    3. ' if' → logprob: -3.1788651943206787
    4. '       ' → logprob: -3.1788651943206787
    5. '        
' → logprob: -4.8038649559021
    6. '<|end|>' → logprob: -4.9288649559021
    7. '[' → logprob: -6.3038649559021
    8. '\n' → logprob: -6.5538649559021
    9. '[::-' → logprob: -6.9288649559021
    10. 'count' → logprob: -6.9288649559021

Token 142: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -1.001654028892517
    2. 'if' → logprob: -1.251654028892517
    3. 'count' → logprob: -2.0016541481018066
    4. 'S' → logprob: -3.6266541481018066
    5. 'print' → logprob: -3.6266541481018066
    6. ' if' → logprob: -3.8766541481018066
    7. 't' → logprob: -3.8766541481018066
    8. 'found' → logprob: -4.001654148101807
    9. 'result' → logprob: -4.251654148101807
    10. 'U' → logprob: -4.376654148101807

Token 143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06994065642356873
    2. ' =' → logprob: -2.6949405670166016
    3. '[' → logprob: -12.819940567016602
    4. ')' → logprob: -14.694940567016602
    5. '＝' → logprob: -15.819940567016602
    6. '_' → logprob: -15.819940567016602
    7. 's' → logprob: -16.4449405670166
    8. ',' → logprob: -16.5699405670166
    9. '=

' → logprob: -16.5699405670166
    10. ']' → logprob: -16.5699405670166

Token 144: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.08894513547420502
    2. ' U' → logprob: -2.463945150375366
    3. '   ' → logprob: -13.213945388793945
    4. ' ' → logprob: -13.338945388793945
    5. '	U' → logprob: -13.713945388793945
    6. '[' → logprob: -14.838945388793945
    7. '       ' → logprob: -16.213945388793945
    8. 'u' → logprob: -16.338945388793945
    9. '    ' → logprob: -16.588945388793945
    10. ' ' → logprob: -16.713945388793945

Token 145: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -5.512236498361744e-07
    2. 'c' → logprob: -14.625000953674316
    3. '[' → logprob: -18.375
    4. '```' → logprob: -19.125
    5. '[d' → logprob: -19.75
    6. '	c' → logprob: -20.125
    7. '[
' → logprob: -20.875
    8. ' [' → logprob: -21.375
    9. '[k' → logprob: -21.75
    10. '(c' → logprob: -22.125

Token 146: ':d' (ID: 88567)
  Prédit: ':d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':d' → logprob: -0.0009966061916202307
    2. 'd' → logprob: -7.0009965896606445
    3. ':' → logprob: -9.750996589660645
    4. '[d' → logprob: -11.875996589660645
    5. ' :' → logprob: -12.000996589660645
    6. '(d' → logprob: -12.500996589660645
    7. '+d' → logprob: -13.375996589660645
    8. '	d' → logprob: -13.375996589660645
    9. ')d' → logprob: -13.500996589660645
    10. ' d' → logprob: -13.625996589660645

Token 147: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.4868770196917467e-05
    2. ']+' → logprob: -11.000024795532227
    3. ']' → logprob: -12.500024795532227
    4. ' +' → logprob: -12.750024795532227
    5. '+c' → logprob: -13.750024795532227
    6. '+d' → logprob: -15.750024795532227
    7. '1' → logprob: -16.000024795532227
    8. '+]' → logprob: -16.250024795532227
    9. 'c' → logprob: -16.375024795532227
    10. 'd' → logprob: -16.750024795532227

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014299227041192353
    2. '+' → logprob: -8.875143051147461
    3. ']+' → logprob: -13.625143051147461
    4. ']' → logprob: -14.000143051147461
    5. ' ' → logprob: -14.000143051147461
    6. 'd' → logprob: -15.500143051147461
    7. '])' → logprob: -18.12514305114746
    8. 'c' → logprob: -18.75014305114746
    9. '```' → logprob: -19.12514305114746
    10. '`' → logprob: -19.25014305114746

Token 149: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010129543021321297
    2. ']
' → logprob: -4.760129451751709
    3. ')' → logprob: -6.635129451751709
    4. '])' → logprob: -9.635129928588867
    5. ')
' → logprob: -10.135129928588867
    6. ']

' → logprob: -10.385129928588867
    7. ' ]' → logprob: -10.635129928588867
    8. ')]' → logprob: -11.385129928588867
    9. ']==' → logprob: -12.260129928588867
    10. ']
' → logprob: -12.760129928588867

Token 150: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08151262253522873
    2. '<|end|>' → logprob: -3.331512689590454
    3. '       ' → logprob: -3.581512689590454
    4. 'if' → logprob: -5.081512451171875
    5. ' if' → logprob: -5.706512451171875
    6. '\n' → logprob: -6.456512451171875
    7. '   ' → logprob: -6.456512451171875
    8. '        
' → logprob: -7.331512451171875
    9. ')' → logprob: -8.706512451171875
    10. '  
' → logprob: -8.831512451171875

Token 151: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.45354145765304565
    2. 'if' (adapté à ' if') → logprob: -1.3285415172576904
    3. 'S' → logprob: -2.7035415172576904
    4. 'U' → logprob: -4.453541278839111
    5. 'ans' → logprob: -4.953541278839111
    6. 'count' → logprob: -5.578541278839111
    7. 'result' → logprob: -5.703541278839111
    8. 'found' → logprob: -6.328541278839111
    9. 'res' → logprob: -6.703541278839111
    10. 'answer' → logprob: -6.828541278839111

Token 152: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.47510015964508057
    2. 'S' → logprob: -0.9751001596450806
    3. ' len' → logprob: -8.60010051727295
    4. ' all' → logprob: -8.85010051727295
    5. ' set' → logprob: -9.10010051727295
    6. ' ' → logprob: -9.35010051727295
    7. ' sorted' → logprob: -9.35010051727295
    8. ' U' → logprob: -9.60010051727295
    9. 'len' → logprob: -9.85010051727295
    10. 'sorted' → logprob: -9.97510051727295

Token 153: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31389063596725464
    2. ' ==' → logprob: -1.3138906955718994
    3. '[' → logprob: -8.68889045715332
    4. ' in' → logprob: -8.68889045715332
    5. '[:]' → logprob: -9.06389045715332
    6. '[:' → logprob: -9.81389045715332
    7. '=' → logprob: -10.93889045715332
    8. '!=' → logprob: -10.93889045715332
    9. '<=' → logprob: -11.18889045715332
    10. 'in' → logprob: -11.31389045715332

Token 154: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.10020839422941208
    2. ' T' → logprob: -2.350208282470703
    3. ' ' → logprob: -13.975208282470703
    4. ' ' → logprob: -14.100208282470703
    5. '	T' → logprob: -16.225208282470703
    6. '[' → logprob: -17.350208282470703
    7. '\
' → logprob: -18.475208282470703
    8. '​' → logprob: -18.537708282470703
    9. ''T' → logprob: -18.725208282470703
    10. '[T' → logprob: -18.725208282470703

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04312467202544212
    2. ':
' → logprob: -3.1681246757507324
    3. 'print' → logprob: -9.168124198913574
    4. '.' → logprob: -12.168124198913574
    5. ' print' → logprob: -12.668124198913574
    6. ' and' → logprob: -12.793124198913574
    7. ':
' → logprob: -13.418124198913574
    8. '):' → logprob: -13.668124198913574
    9. ' :' → logprob: -13.793124198913574
    10. 'and' → logprob: -13.918124198913574

Token 156: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.364013135433197
    2. '           ' → logprob: -2.114013195037842
    3. ' print' → logprob: -2.114013195037842
    4. '       ' → logprob: -2.989013195037842
    5. ':
' → logprob: -4.989013195037842
    6. '
' → logprob: -5.739013195037842
    7. '   ' → logprob: -6.489013195037842
    8. ':' → logprob: -6.989013195037842
    9. '\n' → logprob: -7.989013195037842
    10. '	print' → logprob: -8.864012718200684

Token 157: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.049762096256017685
    2. ' print' → logprob: -3.049762010574341
    3. '   ' → logprob: -7.42476224899292
    4. '       ' → logprob: -8.299761772155762
    5. '
' → logprob: -8.674761772155762
    6. '           ' → logprob: -9.049761772155762
    7. '	print' → logprob: -11.049761772155762
    8. ' 
' → logprob: -12.049761772155762
    9. '    
' → logprob: -12.924761772155762
    10. 'pr' → logprob: -13.049761772155762

Token 158: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.09391084313392639
    2. '('' → logprob: -2.5939109325408936
    3. '(' → logprob: -4.5939106941223145
    4. '(True' → logprob: -5.3439106941223145
    5. '("("' → logprob: -11.843911170959473
    6. '("(' → logprob: -12.468911170959473
    7. '(-' → logprob: -13.218911170959473
    8. '(true' → logprob: -13.718911170959473
    9. '("'' → logprob: -14.093911170959473
    10. '(False' → logprob: -14.218911170959473

Token 159: 'e' (ID: 68)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.23002341389656067
    2. 'yes' → logprob: -1.7300233840942383
    3. 'YES' → logprob: -3.7300233840942383
    4. 'equal' → logprob: -5.855023384094238
    5. 'same' → logprob: -7.730023384094238
    6. '"' → logprob: -8.730023384094238
    7. 'Equal' → logprob: -8.730023384094238
    8. '1' → logprob: -9.105023384094238
    9. ' yes' → logprob: -9.605023384094238
    10. '=yes' → logprob: -9.980023384094238

Token 160: '')
' (ID: 2515)
  Prédit: 'qual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qual' → logprob: -0.02271830476820469
    2. 'q' → logprob: -4.02271842956543
    3. 'qu' → logprob: -5.89771842956543
    4. 'quals' → logprob: -7.02271842956543
    5. 'quality' → logprob: -8.39771842956543
    6. 'qua' → logprob: -8.52271842956543
    7. 'qa' → logprob: -8.64771842956543
    8. 'qal' → logprob: -9.02271842956543
    9. 'QUAL' → logprob: -9.77271842956543
    10. 'x' → logprob: -10.27271842956543

Token 161: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02953512780368328
    2. '       ' → logprob: -3.6545350551605225
    3. ' else' → logprob: -6.529535293579102
    4. 'elif' → logprob: -6.529535293579102
    5. 'lse' → logprob: -8.404535293579102
    6. '	else' → logprob: -10.654535293579102
    7. 'l' → logprob: -11.029535293579102
    8. '   ' → logprob: -11.279535293579102
    9. 'el' → logprob: -11.654535293579102
    10. 'e' → logprob: -12.279535293579102

Token 162: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7700960040092468
    2. 'elif' (adapté à ' elif') → logprob: -0.7700960040092468
    3. '       ' → logprob: -2.6450960636138916
    4. ' else' → logprob: -6.3950958251953125
    5. ' elif' → logprob: -7.1450958251953125
    6. 'el' → logprob: -7.8950958251953125
    7. '   ' → logprob: -9.520095825195312
    8. 'l' → logprob: -10.020095825195312
    9. 'lse' → logprob: -10.145095825195312
    10. '           ' → logprob: -10.270095825195312

Token 163: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.461191862821579
    2. ' S' → logprob: -1.2111918926239014
    3. ' U' → logprob: -4.336191654205322
    4. ' set' → logprob: -4.336191654205322
    5. 'set' → logprob: -4.711191654205322
    6. 'U' → logprob: -4.836191654205322
    7. ' all' → logprob: -5.336191654205322
    8. ''' → logprob: -5.586191654205322
    9. 'len' → logprob: -5.836191654205322
    10. ''s' → logprob: -6.086191654205322

Token 164: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.41392216086387634
    2. ' in' → logprob: -1.2889221906661987
    3. '<' → logprob: -3.163922071456909
    4. ' >' → logprob: -4.413922309875488
    5. 'in' → logprob: -5.538922309875488
    6. '[' → logprob: -5.663922309875488
    7. '>' → logprob: -7.038922309875488
    8. ' not' → logprob: -8.788922309875488
    9. ' ' → logprob: -8.913922309875488
    10. ' ' → logprob: -9.163922309875488

Token 165: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.0889546200633049
    2. 'T' → logprob: -2.4639546871185303
    3. ' ' → logprob: -11.46395492553711
    4. ' ' → logprob: -12.58895492553711
    5. '	T' → logprob: -14.96395492553711
    6. '        ' → logprob: -15.71395492553711
    7. '    ' → logprob: -16.46395492553711
    8. '=' → logprob: -16.46395492553711
    9. '=T' → logprob: -16.96395492553711
    10. '_T' → logprob: -17.02645492553711

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048600319772958755
    2. ':
' → logprob: -3.048600435256958
    3. '           ' → logprob: -12.423600196838379
    4. '       ' → logprob: -13.048600196838379
    5. ':
' → logprob: -13.298600196838379
    6. ' :' → logprob: -13.923600196838379
    7. ':

' → logprob: -13.923600196838379
    8. '):' → logprob: -13.923600196838379
    9. '[' → logprob: -14.548600196838379
    10. '):
' → logprob: -14.673600196838379

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05271784961223602
    2. 'print' → logprob: -3.677717924118042
    3. ' print' → logprob: -3.677717924118042
    4. '               ' → logprob: -8.052718162536621
    5. ' ' → logprob: -9.052718162536621
    6. '       ' → logprob: -9.177718162536621
    7. ''' → logprob: -9.427718162536621
    8. '   ' → logprob: -10.052718162536621
    9. '	       ' → logprob: -10.552718162536621
    10. '	print' → logprob: -10.552718162536621

Token 168: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.3213025744771585e-05
    2. 'p' → logprob: -10.625033378601074
    3. ' print' → logprob: -11.875033378601074
    4. '	print' → logprob: -14.500033378601074
    5. '           ' → logprob: -14.750033378601074
    6. '   ' → logprob: -14.875033378601074
    7. 'pr' → logprob: -15.625033378601074
    8. '       ' → logprob: -16.000032424926758
    9. 'printf' → logprob: -16.125032424926758
    10. '```' → logprob: -17.000032424926758

Token 169: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0023751771077513695
    2. '(' → logprob: -6.75237512588501
    3. '('<' → logprob: -6.75237512588501
    4. '("' → logprob: -11.127375602722168
    5. ''' → logprob: -11.377375602722168
    6. '(<' → logprob: -13.252375602722168
    7. '('-' → logprob: -13.377375602722168
    8. '('(' → logprob: -14.127375602722168
    9. '(`' → logprob: -14.627375602722168
    10. '(('' → logprob: -14.627375602722168

Token 170: 's' (ID: 82)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0290663242340088
    2. ''<' → logprob: -1.2790663242340088
    3. ''a' → logprob: -2.404066324234009
    4. ''l' → logprob: -2.529066324234009
    5. '-' → logprob: -3.029066324234009
    6. ''s' → logprob: -3.279066324234009
    7. '-l' → logprob: -3.279066324234009
    8. '<' → logprob: -3.779066324234009
    9. '')' → logprob: -4.52906608581543
    10. 'l' → logprob: -5.15406608581543

Token 171: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0033061588183045387
    2. 'n' → logprob: -6.6283063888549805
    3. ''' → logprob: -7.2533063888549805
    4. 'm' → logprob: -7.7533063888549805
    5. '<' → logprob: -8.50330638885498
    6. '<|end|>' → logprob: -9.00330638885498
    7. '')
' → logprob: -9.75330638885498
    8. ''<' → logprob: -10.12830638885498
    9. 'u' → logprob: -10.25330638885498
    10. 'e' → logprob: -10.37830638885498

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16091053187847137
    2. 'else' → logprob: -1.9109104871749878
    3. ' else' → logprob: -7.410910606384277
    4. 'elif' → logprob: -9.535910606384277
    5. '	else' → logprob: -12.535910606384277
    6. '	' → logprob: -12.660910606384277
    7. '<|end|>' → logprob: -14.660910606384277
    8. '           ' → logprob: -15.160910606384277
    9. '_else' → logprob: -15.160910606384277
    10. '   ' → logprob: -15.535910606384277

Token 173: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -1.3306015716807451e-05
    2. ' else' → logprob: -11.37501335144043
    3. 'elif' → logprob: -13.62501335144043
    4. '       ' → logprob: -14.62501335144043
    5. 'e' → logprob: -16.87501335144043
    6. '	else' → logprob: -17.12501335144043
    7. '   ' → logprob: -19.00001335144043
    8. 'els' → logprob: -19.62501335144043
    9. '_else' → logprob: -20.25001335144043
    10. '#else' → logprob: -20.50001335144043

Token 174: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1858447641134262
    2. ':' → logprob: -1.8108447790145874
    3. ':
' → logprob: -6.060844898223877
    4. '               ' → logprob: -6.185844898223877
    5. ''' → logprob: -7.935844898223877
    6. '          ' → logprob: -8.185844421386719
    7. '(' → logprob: -8.685844421386719
    8. ' :' → logprob: -8.935844421386719
    9. '   ' → logprob: -9.185844421386719
    10. '('' → logprob: -9.435844421386719

Token 175: '           ' (ID: 352)
  Prédit: ''l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''l' → logprob: -0.7626823782920837
    2. ''t' → logprob: -1.0126824378967285
    3. ''g' → logprob: -2.5126824378967285
    4. ''b' → logprob: -3.7626824378967285
    5. ''d' → logprob: -4.0126824378967285
    6. ''' → logprob: -4.3876824378967285
    7. '   ' → logprob: -5.2626824378967285
    8. 't' → logprob: -5.3876824378967285
    9. ''r' → logprob: -5.3876824378967285
    10. ''i' → logprob: -5.7626824378967285

Token 176: ' print' (ID: 2123)
  Prédit: ''l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''l' → logprob: -0.5437943935394287
    2. ''g' → logprob: -1.0437943935394287
    3. ''t' → logprob: -3.1687943935394287
    4. ''b' → logprob: -4.293794631958008
    5. 'g' → logprob: -5.918794631958008
    6. ''d' → logprob: -5.918794631958008
    7. 'l' → logprob: -6.543794631958008
    8. 't' → logprob: -7.043794631958008
    9. ''m' → logprob: -7.168794631958008
    10. ''f' → logprob: -7.168794631958008

Token 177: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003334393841214478
    2. '(' → logprob: -8.625333786010742
    3. ''l' → logprob: -9.375333786010742
    4. ''t' → logprob: -10.375333786010742
    5. ''' → logprob: -11.250333786010742
    6. ''f' → logprob: -12.250333786010742
    7. ''g' → logprob: -12.250333786010742
    8. ''e' → logprob: -12.875333786010742
    9. ''w' → logprob: -13.125333786010742
    10. ''o' → logprob: -13.375333786010742

Token 178: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0600581057369709
    2. 'g' → logprob: -3.810058116912842
    3. 'b' → logprob: -4.060058116912842
    4. 'l' → logprob: -4.060058116912842
    5. 'm' → logprob: -7.810058116912842
    6. ''' → logprob: -7.935058116912842
    7. 'd' → logprob: -8.310057640075684
    8. 'w' → logprob: -8.310057640075684
    9. 'u' → logprob: -9.435057640075684
    10. 'h' → logprob: -9.935057640075684

Token 179: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.07889363914728165
    2. ')' → logprob: -2.5788936614990234
    3. '")' → logprob: -13.203893661499023
    4. '')
' → logprob: -13.453893661499023
    5. '}')' → logprob: -15.828893661499023
    6. ''' → logprob: -16.203893661499023
    7. '()' → logprob: -16.578893661499023
    8. ' ')' → logprob: -16.578893661499023
    9. ')')
' → logprob: -16.828893661499023
    10. '.')' → logprob: -17.203893661499023


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 177
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 140
Précision stricte (1ère position): 41.24%
Précision adaptée (1ère position): 44.07%
Précision (top 10): 79.10%
================================================================================
