================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())

# On cherche n entiers consécutifs à partir d'un x, tels que chacun ait au moins un diviseur autre que 1 et lui-même.

def diviseur(n):
    for i in range(2, n):
        if n % i == 0:
            return i
    return None

x = 2
while True:
    tous_ont_diviseur = True
    divs = []
    for i in range(n):
        d = diviseur(x + i)
        if d is None:
            tous_ont_diviseur = False
            break
        divs.append(d)
    if tous_ont_diviseur:
        print(x)
        for d in divs:
            print(d)
        break
    x += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00028266964363865554
    2. ''' → logprob: -9.000282287597656
    3. '(n' → logprob: -10.375282287597656
    4. '('' → logprob: -10.500282287597656
    5. '```' → logprob: -10.500282287597656
    6. '()' → logprob: -10.750282287597656
    7. '("("' → logprob: -11.500282287597656
    8. '(
' → logprob: -11.500282287597656
    9. '`' → logprob: -11.625282287597656
    10. ')' → logprob: -11.750282287597656

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1369263231754303
    2. ')' → logprob: -2.2619264125823975
    3. '()' → logprob: -4.011926174163818
    4. '())' → logprob: -5.511926174163818
    5. '(
' → logprob: -7.636926174163818
    6. '('' → logprob: -8.636926651000977
    7. '```' → logprob: -8.636926651000977
    8. '(()' → logprob: -9.011926651000977
    9. '("("' → logprob: -9.261926651000977
    10. '(

' → logprob: -9.636926651000977

Token 5: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4092439115047455
    2. 'i' → logprob: -1.9092439413070679
    3. 'for' → logprob: -1.9092439413070679
    4. 's' → logprob: -3.5342438220977783
    5. 'f' → logprob: -6.284244060516357
    6. 'x' → logprob: -6.284244060516357
    7. ' if' → logprob: -6.409244060516357
    8. 'total' → logprob: -7.034244060516357
    9. 'result' → logprob: -7.159244060516357
    10. 'sum' → logprob: -7.159244060516357

Token 6: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6062180399894714
    2. 'if' → logprob: -1.2312180995941162
    3. 'result' → logprob: -3.231218099594116
    4. 's' → logprob: -3.356218099594116
    5. ' for' → logprob: -3.481218099594116
    6. ' if' → logprob: -3.606218099594116
    7. 'factor' → logprob: -4.231217861175537
    8. 'sum' → logprob: -5.231217861175537
    9. ' result' → logprob: -6.106217861175537
    10. 'fact' → logprob: -6.356217861175537

Token 7: ' cherche' (ID: 52345)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03049355186522007
    2. ' the' → logprob: -4.65549373626709
    3. 'the' → logprob: -5.65549373626709
    4. ' e' → logprob: -5.78049373626709
    5. 't' → logprob: -5.90549373626709
    6. '_' → logprob: -5.90549373626709
    7. '=' → logprob: -6.53049373626709
    8. ' =' → logprob: -6.65549373626709
    9. 's' → logprob: -6.90549373626709
    10. ' n' → logprob: -7.28049373626709

Token 8: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6413953304290771
    2. ' à' → logprob: -1.1413953304290771
    3. ' a' → logprob: -2.641395330429077
    4. ''' → logprob: -3.891395330429077
    5. 'à' → logprob: -4.016395568847656
    6. '"' → logprob: -4.766395568847656
    7. ' "' → logprob: -5.516395568847656
    8. '_' → logprob: -5.641395568847656
    9. ' to' → logprob: -5.641395568847656
    10. 'a' → logprob: -6.016395568847656

Token 9: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7462546825408936
    2. '=' → logprob: -1.1212546825408936
    3. ' =' → logprob: -2.2462546825408936
    4. ',' → logprob: -3.8712546825408936
    5. '-' → logprob: -4.746254920959473
    6. '+' → logprob: -4.746254920959473
    7. '_' → logprob: -4.871254920959473
    8. '#' → logprob: -4.996254920959473
    9. ':' → logprob: -4.996254920959473
    10. '*' → logprob: -5.246254920959473

Token 10: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.02509043924510479
    2. 'i' → logprob: -4.025090217590332
    3. 'ières' → logprob: -5.150090217590332
    4. 'ier' → logprob: -7.150090217590332
    5. 'ié' → logprob: -9.025090217590332
    6. '```' → logprob: -9.400090217590332
    7. 'ière' → logprob: -10.525090217590332
    8. 'r' → logprob: -11.275090217590332
    9. 'er' → logprob: -11.400090217590332
    10. 'ieres' → logprob: -11.400090217590332

Token 11: ' cons' (ID: 1473)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6872206926345825
    2. 'for' → logprob: -1.1872206926345825
    3. 'n' → logprob: -3.062220573425293
    4. 'a' → logprob: -3.187220573425293
    5. ' for' → logprob: -3.812220573425293
    6. ' ' → logprob: -4.312220573425293
    7. '[' → logprob: -4.312220573425293
    8. ',' → logprob: -5.062220573425293
    9. 'i' → logprob: -5.187220573425293
    10. '```' → logprob: -5.187220573425293

Token 12: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0023277211003005505
    2. 'ecut' → logprob: -7.002327919006348
    3. 'éc' → logprob: -7.002327919006348
    4. 'é' → logprob: -8.002327919006348
    5. 'ec' → logprob: -9.877327919006348
    6. 'e' → logprob: -10.127327919006348
    7. '```' → logprob: -10.502327919006348
    8. 'écution' → logprob: -11.752327919006348
    9. '%C' → logprob: -11.752327919006348
    10. '�' → logprob: -12.127327919006348

Token 13: 'ifs' (ID: 14119)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.008851866237819195
    2. ' u' → logprob: -5.258852005004883
    3. 's' → logprob: -6.758852005004883
    4. 'ut' → logprob: -6.883852005004883
    5. 'uts' → logprob: -7.383852005004883
    6. 'a' → logprob: -8.883852005004883
    7. '   ' → logprob: -9.508852005004883
    8. 'us' → logprob: -9.758852005004883
    9. '```' → logprob: -9.758852005004883
    10. '	u' → logprob: -9.883852005004883

Token 14: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020344149321317673
    2. ',' → logprob: -5.145344257354736
    3. '_' → logprob: -5.645344257354736
    4. 'i' → logprob: -5.645344257354736
    5. 's' → logprob: -6.395344257354736
    6. ' ,' → logprob: -7.020344257354736
    7. 'x' → logprob: -7.145344257354736
    8. ':' → logprob: -7.645344257354736
    9. 'a' → logprob: -7.770344257354736
    10. 'for' → logprob: -7.895344257354736

Token 15: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -1.0169808864593506
    2. 's' → logprob: -1.1419808864593506
    3. 'part' → logprob: -2.1419808864593506
    4. '#' → logprob: -2.8919808864593506
    5. 'som' → logprob: -3.1419808864593506
    6. '<|end|>' → logprob: -3.6419808864593506
    7. 'sum' → logprob: -4.26698112487793
    8. 'l' → logprob: -4.64198112487793
    9. 'la' → logprob: -5.14198112487793
    10. ' ' → logprob: -5.14198112487793

Token 16: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6613547801971436
    2. 'de' → logprob: -1.2863547801971436
    3. 'd' → logprob: -1.6613547801971436
    4. ' d' → logprob: -4.411355018615723
    5. '#' → logprob: -5.411355018615723
    6. 'du' → logprob: -8.786355018615723
    7. ' #' → logprob: -9.036355018615723
    8. ')' → logprob: -9.161355018615723
    9. ' ' → logprob: -9.161355018615723
    10. '```' → logprob: -9.161355018615723

Token 17: ''un' (ID: 9788)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.33952608704566956
    2. 'e' → logprob: -2.4645261764526367
    3. ''un' → logprob: -2.4645261764526367
    4. ''une' → logprob: -2.8395261764526367
    5. 'u' → logprob: -3.8395261764526367
    6. ''u' → logprob: -4.214526176452637
    7. ''e' → logprob: -4.839526176452637
    8. '"' → logprob: -5.714526176452637
    9. ''i' → logprob: -6.589526176452637
    10. 'a' → logprob: -6.589526176452637

Token 18: ' x' (ID: 1215)
  Prédit: 'certain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'certain' → logprob: -0.8614305853843689
    2. 'nombre' → logprob: -1.4864306449890137
    3. ' given' → logprob: -3.2364306449890137
    4. 'e' → logprob: -3.2364306449890137
    5. 'a' → logprob: -3.4864306449890137
    6. '=' → logprob: -3.4864306449890137
    7. ' ' → logprob: -3.7364306449890137
    8. ' certain' → logprob: -3.7364306449890137
    9. 'n' → logprob: -4.111430644989014
    10. 'ent' → logprob: -4.111430644989014

Token 19: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10868312418460846
    2. ' ' → logprob: -2.7336831092834473
    3. ',' → logprob: -3.6086831092834473
    4. ' x' → logprob: -5.233683109283447
    5. '.' → logprob: -6.858683109283447
    6. '_' → logprob: -6.983683109283447
    7. '#' → logprob: -7.233683109283447
    8. 's' → logprob: -7.483683109283447
    9. '=' → logprob: -7.858683109283447
    10. 'i' → logprob: -8.108683586120605

Token 20: ' tels' (ID: 62007)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3408700227737427
    2. 'x' → logprob: -1.3408700227737427
    3. ' x' → logprob: -3.715869903564453
    4. 'i' → logprob: -7.965869903564453
    5. ' )' → logprob: -8.090869903564453
    6. 'n' → logprob: -8.215869903564453
    7. 's' → logprob: -8.465869903564453
    8. 'a' → logprob: -8.590869903564453
    9. ' =' → logprob: -8.715869903564453
    10. '=' → logprob: -8.840869903564453

Token 21: ' que' (ID: 661)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44472017884254456
    2. '_' → logprob: -1.8197201490402222
    3. ' =' → logprob: -2.3197202682495117
    4. 'x' → logprob: -2.6947202682495117
    5. ' x' → logprob: -3.6947202682495117
    6. ' ' → logprob: -6.069720268249512
    7. ''' → logprob: -6.194720268249512
    8. '#' → logprob: -7.944720268249512
    9. '`' → logprob: -8.569720268249512
    10. ',' → logprob: -8.944720268249512

Token 22: ' chacun' (ID: 52136)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14706408977508545
    2. ' x' → logprob: -2.522064208984375
    3. ' leur' → logprob: -3.772064208984375
    4. ' la' → logprob: -4.897064208984375
    5. 'leur' → logprob: -5.147064208984375
    6. 's' → logprob: -5.647064208984375
    7. 'la' → logprob: -5.897064208984375
    8. 'their' → logprob: -6.022064208984375
    9. 'le' → logprob: -6.272064208984375
    10. ' their' → logprob: -6.397064208984375

Token 23: ' ait' (ID: 43015)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0964370965957642
    2. '+' → logprob: -1.4714370965957642
    3. ' %' → logprob: -2.5964369773864746
    4. '*' → logprob: -2.8464369773864746
    5. ' des' → logprob: -3.0964369773864746
    6. ' +' → logprob: -3.2214369773864746
    7. ' x' → logprob: -3.2214369773864746
    8. ' *' → logprob: -3.5964369773864746
    9. ' <=' → logprob: -3.9714369773864746
    10. ' soit' → logprob: -4.471436977386475

Token 24: ' au' (ID: 2791)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.4343137741088867
    2. 'une' → logprob: -2.3093137741088867
    3. ' au' → logprob: -2.3093137741088867
    4. 'au' → logprob: -2.3093137741088867
    5. 's' → logprob: -2.4343137741088867
    6. '#' → logprob: -2.6843137741088867
    7. 'le' → logprob: -3.3093137741088867
    8. 'un' → logprob: -3.6843137741088867
    9. ' une' → logprob: -3.6843137741088867
    10. '```' → logprob: -3.6843137741088867

Token 25: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.007077651564031839
    2. 'mo' → logprob: -5.757077693939209
    3. ' moins' → logprob: -5.757077693939209
    4. 'minimum' → logprob: -8.63207721710205
    5. '-mo' → logprob: -8.75707721710205
    6. '```' → logprob: -9.13207721710205
    7. '<|end|>' → logprob: -9.50707721710205
    8. 'm' → logprob: -9.75707721710205
    9. 'menos' → logprob: -9.88207721710205
    10. 'less' → logprob: -10.25707721710205

Token 26: ' un' (ID: 537)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.795656144618988
    2. ' ' → logprob: -1.5456562042236328
    3. '2' → logprob: -2.045656204223633
    4. ' une' → logprob: -2.920656204223633
    5. '<|end|>' → logprob: -3.295656204223633
    6. ' un' → logprob: -3.795656204223633
    7. 'de' → logprob: -3.920656204223633
    8. 'div' → logprob: -4.295656204223633
    9. 'une' → logprob: -5.045656204223633
    10. '_' → logprob: -5.045656204223633

Token 27: ' div' (ID: 4223)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20478883385658264
    2. ' espace' → logprob: -2.82978892326355
    3. 'div' → logprob: -3.20478892326355
    4. ' facteur' → logprob: -3.45478892326355
    5. 'es' → logprob: -4.454788684844971
    6. '_' → logprob: -4.454788684844971
    7. '<|end|>' → logprob: -4.704788684844971
    8. ' divis' → logprob: -5.829788684844971
    9. ' divisible' → logprob: -5.829788684844971
    10. ''espace' → logprob: -6.079788684844971

Token 28: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.003118060529232025
    2. 'ise' → logprob: -6.00311803817749
    3. 'isible' → logprob: -8.378118515014648
    4. 'iser' → logprob: -9.628118515014648
    5. 'isor' → logprob: -9.878118515014648
    6. 'e' → logprob: -9.878118515014648
    7. '```' → logprob: -10.003118515014648
    8. 'isateur' → logprob: -10.378118515014648
    9. 'eur' → logprob: -10.878118515014648
    10. 'i' → logprob: -10.878118515014648

Token 29: ' autre' (ID: 20278)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0130767822265625
    2. 'strict' → logprob: -1.2630767822265625
    3. '>' → logprob: -2.7630767822265625
    4. '<|end|>' → logprob: -3.1380767822265625
    5. 'x' → logprob: -3.3880767822265625
    6. ' x' → logprob: -3.6380767822265625
    7. 's' → logprob: -4.0130767822265625
    8. '1' → logprob: -4.0130767822265625
    9. ' >' → logprob: -4.1380767822265625
    10. 'other' → logprob: -4.3880767822265625

Token 30: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.07544451951980591
    2. 'que' → logprob: -2.700444459915161
    3. ' qu' → logprob: -6.20044469833374
    4. ' than' → logprob: -6.32544469833374
    5. ' ' → logprob: -6.82544469833374
    6. '```' → logprob: -8.575444221496582
    7. ' ' → logprob: -8.825444221496582
    8. 'qu' → logprob: -9.325444221496582
    9. '=' → logprob: -10.200444221496582
    10. 'than' → logprob: -10.450444221496582

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17990246415138245
    2. '1' → logprob: -1.80490243434906
    3. ' ' → logprob: -9.804902076721191
    4. 'space' → logprob: -10.179902076721191
    5. '```' → logprob: -11.304902076721191
    6. '_' → logprob: -11.554902076721191
    7. ''' → logprob: -12.054902076721191
    8. ' ```' → logprob: -12.304902076721191
    9. '  ' → logprob: -12.679902076721191
    10. 's' → logprob: -12.929902076721191

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.250041007995605
    3. '```' → logprob: -13.125041007995605
    4. '0' → logprob: -14.000041007995605
    5. 'l' → logprob: -14.250041007995605
    6. '...' → logprob: -14.625041007995605
    7. 'the' → logprob: -14.750041007995605
    8. ',' → logprob: -15.125041007995605
    9. 'n' → logprob: -15.562541007995605
    10. '<|end|>' → logprob: -15.750041007995605

Token 33: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0531855933368206
    2. '_' → logprob: -3.6781857013702393
    3. ',' → logprob: -3.9281857013702393
    4. 'x' → logprob: -5.67818546295166
    5. ' ,' → logprob: -7.55318546295166
    6. '=' → logprob: -7.80318546295166
    7. ':' → logprob: -8.55318546295166
    8. 's' → logprob: -8.55318546295166
    9. ' 
' → logprob: -8.55318546295166
    10. ''' → logprob: -8.55318546295166

Token 34: ' lui' (ID: 10623)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5093622207641602
    2. ' lui' → logprob: -1.6343622207641602
    3. '```' → logprob: -2.00936222076416
    4. ' x' → logprob: -2.38436222076416
    5. ' ' → logprob: -2.75936222076416
    6. 'l' → logprob: -2.75936222076416
    7. ' ' → logprob: -3.13436222076416
    8. 'n' → logprob: -3.38436222076416
    9. ' n' → logprob: -3.75936222076416
    10. ' eux' → logprob: -4.00936222076416

Token 35: '-même' (ID: 41085)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3856985867023468
    2. 'x' → logprob: -1.6356985569000244
    3. '_' → logprob: -2.6356985569000244
    4. ',' → logprob: -3.7606985569000244
    5. ':' → logprob: -4.8856987953186035
    6. ' 
' → logprob: -5.0106987953186035
    7. ')' → logprob: -6.2606987953186035
    8. '
' → logprob: -6.3856987953186035
    9. ' x' → logprob: -6.5106987953186035
    10. 'i' → logprob: -6.6356987953186035

Token 36: '.

' (ID: 364)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0812661349773407
    2. ':' → logprob: -3.831266164779663
    3. ',' → logprob: -4.581265926361084
    4. '#' → logprob: -4.581265926361084
    5. '_' → logprob: -4.831265926361084
    6. ' ' → logprob: -5.081265926361084
    7. 'n' → logprob: -5.331265926361084
    8. 'i' → logprob: -5.581265926361084
    9. '```' → logprob: -5.956265926361084
    10. 'd' → logprob: -6.081265926361084

Token 37: 'def' (ID: 1314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04219427332282066
    2. 'f' → logprob: -3.917194366455078
    3. 'd' → logprob: -4.167194366455078
    4. 'for' → logprob: -5.417194366455078
    5. 'i' → logprob: -7.292194366455078
    6. '#' → logprob: -7.542194366455078
    7. '```' → logprob: -9.417194366455078
    8. '\' → logprob: -9.792194366455078
    9. '' → logprob: -10.292194366455078
    10. '
' → logprob: -10.292194366455078

Token 38: ' div' (ID: 4223)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5221771597862244
    2. ' trouver' → logprob: -1.1471772193908691
    3. ' trouve' → logprob: -3.772177219390869
    4. ' chercher' → logprob: -4.147177219390869
    5. ' f' → logprob: -4.522177219390869
    6. ' has' → logprob: -4.897177219390869
    7. ' def' → logprob: -5.397177219390869
    8. ' cherche' → logprob: -5.397177219390869
    9. ' divisor' → logprob: -6.147177219390869
    10. ' est' → logprob: -6.147177219390869

Token 39: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.37769606709480286
    2. 'ise' → logprob: -1.2526960372924805
    3. 'is' → logprob: -4.6276960372924805
    4. 'isible' → logprob: -4.7526960372924805
    5. '_' → logprob: -5.2526960372924805
    6. '```' → logprob: -6.1276960372924805
    7. 'i' → logprob: -6.5026960372924805
    8. 'isateur' → logprob: -8.12769603729248
    9. '>' → logprob: -8.62769603729248
    10. 'isor' → logprob: -8.62769603729248

Token 40: '(n' (ID: 2406)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21969039738178253
    2. '(' → logprob: -1.7196904420852661
    3. '_' → logprob: -4.094690322875977
    4. '(s' → logprob: -7.219690322875977
    5. '(n' → logprob: -8.219690322875977
    6. '_non' → logprob: -9.094690322875977
    7. '_s' → logprob: -9.344690322875977
    8. ' (' → logprob: -9.594690322875977
    9. '(x' → logprob: -10.344690322875977
    10. '_aut' → logprob: -10.719690322875977

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.645836353302002
    2. ')' → logprob: -0.770836353302002
    3. ',' → logprob: -4.395836353302002
    4. ' ):' → logprob: -8.020835876464844
    5. 's' → logprob: -8.895835876464844
    6. ' )' → logprob: -9.145835876464844
    7. '_' → logprob: -9.520835876464844
    8. 'e' → logprob: -9.770835876464844
    9. '):
' → logprob: -10.645835876464844
    10. ' ,' → logprob: -10.895835876464844

Token 42: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6671998500823975
    2. '(' → logprob: -1.5421998500823975
    3. ' ' → logprob: -2.1671998500823975
    4. ' :' → logprob: -2.5421998500823975
    5. '   ' → logprob: -3.0421998500823975
    6. '_' → logprob: -4.292200088500977
    7. ')' → logprob: -5.667200088500977
    8. 'def' → logprob: -5.667200088500977
    9. ' (' → logprob: -5.792200088500977
    10. ' for' → logprob: -5.917200088500977

Token 43: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1765333116054535
    2. '   ' → logprob: -1.9265333414077759
    3. 'for' (adapté à ' for') → logprob: -4.176533222198486
    4. ' ' → logprob: -7.926533222198486
    5. ' if' → logprob: -8.176533699035645
    6. ' import' → logprob: -10.426533699035645
    7. '  ' → logprob: -10.926533699035645
    8. '  ' → logprob: -10.926533699035645
    9. ' """' → logprob: -11.176533699035645
    10. ' i' → logprob: -11.301533699035645

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0013498765183612704
    2. 'i' → logprob: -6.626349925994873
    3. '	i' → logprob: -11.376349449157715
    4. ' ' → logprob: -11.501349449157715
    5. ' d' → logprob: -13.376349449157715
    6. 'd' → logprob: -15.001349449157715
    7. ' range' → logprob: -15.876349449157715
    8. '   ' → logprob: -16.25135040283203
    9. ' ' → logprob: -16.25135040283203
    10. '```' → logprob: -17.00135040283203

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007256254553794861
    2. 'in' → logprob: -5.007256031036377
    3. ' ' → logprob: -7.632256031036377
    4. '2' → logprob: -10.632256507873535
    5. '  ' → logprob: -11.632256507873535
    6. '   ' → logprob: -11.882256507873535
    7. 'range' → logprob: -12.757256507873535
    8. '1' → logprob: -13.132256507873535
    9. 'import' → logprob: -13.632256507873535
    10. ' i' → logprob: -13.882256507873535

Token 46: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026607966050505638
    2. 'range' → logprob: -3.6516079902648926
    3. '2' → logprob: -8.526607513427734
    4. ' ' → logprob: -9.151607513427734
    5. '	range' → logprob: -12.901607513427734
    6. ' xrange' → logprob: -14.526607513427734
    7. '(range' → logprob: -16.151607513427734
    8. '   ' → logprob: -16.401607513427734
    9. '```' → logprob: -16.526607513427734
    10. '3' → logprob: -16.776607513427734

Token 47: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005382099188864231
    2. '2' → logprob: -5.255382061004639
    3. ' ' → logprob: -9.255382537841797
    4. ' (' → logprob: -9.880382537841797
    5. ')' → logprob: -14.380382537841797
    6. '   ' → logprob: -14.880382537841797
    7. '[' → logprob: -15.755382537841797
    8. '<|end|>' → logprob: -16.505382537841797
    9. '```' → logprob: -16.630382537841797
    10. 's' → logprob: -16.755382537841797

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. ')' → logprob: -15.875001907348633
    4. '(' → logprob: -16.875001907348633
    5. '۲' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '٢' → logprob: -18.875001907348633
    8. '```' → logprob: -19.625001907348633
    9. '２' → logprob: -20.125001907348633
    10. '22' → logprob: -20.250001907348633

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3149075508117676
    2. ' ,' → logprob: -1.3149075508117676
    3. ',n' → logprob: -6.814907550811768
    4. ',int' → logprob: -7.564907550811768
    5. ' ' → logprob: -10.93990707397461
    6. ',i' → logprob: -11.81490707397461
    7. '   ' → logprob: -14.31490707397461
    8. ',len' → logprob: -14.56490707397461
    9. ' ,
' → logprob: -14.93990707397461
    10. ' n' → logprob: -15.06490707397461

Token 50: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7949613928794861
    2. 'n' → logprob: -1.2949614524841309
    3. ' int' → logprob: -1.5449614524841309
    4. ' n' → logprob: -2.794961452484131
    5. '   ' → logprob: -10.044960975646973
    6. '	int' → logprob: -12.169960975646973
    7. '(int' → logprob: -12.919960975646973
    8. '	n' → logprob: -13.419960975646973
    9. '    ' → logprob: -14.044960975646973
    10. '=int' → logprob: -14.419960975646973

Token 51: '):
' (ID: 1883)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3340109884738922
    2. ' //' → logprob: -1.5840109586715698
    3. '**' → logprob: -3.3340110778808594
    4. ' ' → logprob: -4.084011077880859
    5. '):' → logprob: -4.459011077880859
    6. ' ):' → logprob: -5.209011077880859
    7. ')' → logprob: -5.334011077880859
    8. '):
' → logprob: -6.584011077880859
    9. '   ' → logprob: -6.959011077880859
    10. ' **' → logprob: -7.209011077880859

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.273668497800827
    2. '   ' → logprob: -2.3986685276031494
    3. '    ' → logprob: -2.7736685276031494
    4. ' :' → logprob: -3.3986685276031494
    5. ':' → logprob: -3.6486685276031494
    6. ' ' → logprob: -4.39866828918457
    7. '<|end|>' → logprob: -4.77366828918457
    8. ' if' → logprob: -5.89866828918457
    9. '):' → logprob: -7.14866828918457
    10. ' ):' → logprob: -8.14866828918457

Token 53: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1540464609861374
    2. 'if' (adapté à ' if') → logprob: -2.1540465354919434
    3. '       ' → logprob: -3.6540465354919434
    4. '   ' → logprob: -7.404046535491943
    5. '    ' → logprob: -9.029046058654785
    6. ' ' → logprob: -9.654046058654785
    7. '<|end|>' → logprob: -10.154046058654785
    8. '	if' → logprob: -11.029046058654785
    9. '        ' → logprob: -12.154046058654785
    10. '  ' → logprob: -13.279046058654785

Token 54: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.011048882268369198
    2. 'n' → logprob: -4.511048793792725
    3. '	n' → logprob: -14.386049270629883
    4. '(n' → logprob: -15.511049270629883
    5. ' ' → logprob: -15.761049270629883
    6. '_n' → logprob: -17.511049270629883
    7. ' (' → logprob: -18.011049270629883
    8. ' н' → logprob: -18.886049270629883
    9. ' ' → logprob: -18.886049270629883
    10. '   ' → logprob: -19.386049270629883

Token 55: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.24622049927711487
    2. ' %' → logprob: -1.9962204694747925
    3. '%i' → logprob: -2.496220588684082
    4. '%d' → logprob: -13.121220588684082
    5. '%e' → logprob: -13.496220588684082
    6. '%x' → logprob: -13.871220588684082
    7. '%n' → logprob: -14.246220588684082
    8. '%s' → logprob: -14.621220588684082
    9. '%c' → logprob: -14.746220588684082
    10. ' ' → logprob: -14.871220588684082

Token 56: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038045622408390045
    2. ' i' → logprob: -3.288045644760132
    3. ' ' → logprob: -13.413045883178711
    4. '2' → logprob: -13.413045883178711
    5. '	i' → logprob: -13.913045883178711
    6. '0' → logprob: -16.03804588317871
    7. '   ' → logprob: -16.16304588317871
    8. '1' → logprob: -17.53804588317871
    9. ' ' → logprob: -17.66304588317871
    10. '  ' → logprob: -17.66304588317871

Token 57: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2523356080055237
    2. ' ==' → logprob: -1.502335548400879
    3. '=' → logprob: -8.252335548400879
    4. ')==' → logprob: -9.877335548400879
    5. '0' → logprob: -10.502335548400879
    6. '===' → logprob: -10.752335548400879
    7. ' ' → logprob: -10.877335548400879
    8. ')' → logprob: -11.502335548400879
    9. ']==' → logprob: -11.752335548400879
    10. ' ' → logprob: -12.877335548400879

Token 58: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.130233764648438
    4. '00' → logprob: -19.255233764648438
    5. '۰' → logprob: -19.380233764648438
    6. '```' → logprob: -19.630233764648438
    7. '   ' → logprob: -20.380233764648438
    8. '  ' → logprob: -20.505233764648438
    9. '٠' → logprob: -20.505233764648438
    10. '=' → logprob: -20.505233764648438

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '۰' → logprob: -19.5
    4. '```' → logprob: -21.25
    5. '٠' → logprob: -21.5
    6. '00' → logprob: -21.625
    7. '०' → logprob: -21.875
    8. '০' → logprob: -21.875
    9. '   ' → logprob: -22.3125
    10. '=' → logprob: -22.75

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006554440129548311
    2. ':return' → logprob: -5.13155460357666
    3. ':
' → logprob: -8.38155460357666
    4. ' :' → logprob: -8.50655460357666
    5. '):' → logprob: -9.63155460357666
    6. '       ' → logprob: -9.63155460357666
    7. ' return' → logprob: -10.38155460357666
    8. '           ' → logprob: -11.50655460357666
    9. '   ' → logprob: -11.88155460357666
    10. ' and' → logprob: -12.75655460357666

Token 61: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5879489183425903
    2. '       ' → logprob: -1.4629489183425903
    3. ' return' → logprob: -1.5879489183425903
    4. 'return' → logprob: -4.962948799133301
    5. ':return' → logprob: -7.962948799133301
    6. ' ' → logprob: -8.0879487991333
    7. '   ' → logprob: -8.5879487991333
    8. '<|end|>' → logprob: -8.7129487991333
    9. ' ' → logprob: -8.8379487991333
    10. '        ' → logprob: -9.2129487991333

Token 62: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03443828970193863
    2. 'return' (adapté à ' return') → logprob: -3.409438371658325
    3. '       ' → logprob: -7.909438133239746
    4. '           ' → logprob: -8.284438133239746
    5. '               ' → logprob: -8.784438133239746
    6. ':return' → logprob: -12.034438133239746
    7. '   ' → logprob: -12.409438133239746
    8. '	return' → logprob: -12.534438133239746
    9. ' ' → logprob: -12.659438133239746
    10. ' ' → logprob: -14.784438133239746

Token 63: ' i' (ID: 575)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.11850424855947495
    2. ' True' → logprob: -2.243504285812378
    3. 'i' → logprob: -5.368504047393799
    4. 'False' → logprob: -7.118504047393799
    5. ' i' → logprob: -8.868504524230957
    6. ' False' → logprob: -10.618504524230957
    7. ' ' → logprob: -11.493504524230957
    8. 'n' → logprob: -11.618504524230957
    9. ' ' → logprob: -12.868504524230957
    10. '(True' → logprob: -13.243504524230957

Token 64: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05968669801950455
    2. '<|end|>' → logprob: -4.059686660766602
    3. '
' → logprob: -4.184686660766602
    4. ' ' → logprob: -4.684686660766602
    5. 'n' → logprob: -5.059686660766602
    6. '  ' → logprob: -5.934686660766602
    7. '    
' → logprob: -6.434686660766602
    8. ' 
' → logprob: -6.684686660766602
    9. '\n' → logprob: -6.934686660766602
    10. '  
' → logprob: -7.059686660766602

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018494461255613714
    2. ' ' → logprob: -9.875185012817383
    3. '  ' → logprob: -10.750185012817383
    4. 'None' → logprob: -10.875185012817383
    5. '<|end|>' → logprob: -11.125185012817383
    6. ' None' → logprob: -11.250185012817383
    7. '       ' → logprob: -11.250185012817383
    8. ' return' → logprob: -11.625185012817383
    9. '    ' → logprob: -11.875185012817383
    10. '\n' → logprob: -11.875185012817383

Token 66: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1260998547077179
    2. ' ' → logprob: -2.8760998249053955
    3. 'None' → logprob: -3.6260998249053955
    4. ' None' → logprob: -4.001100063323975
    5. 'return' (adapté à ' return') → logprob: -4.876100063323975
    6. ' return' → logprob: -5.126100063323975
    7. '  ' → logprob: -6.376100063323975
    8. '    ' → logprob: -7.626100063323975
    9. 'n' → logprob: -7.626100063323975
    10. '0' → logprob: -8.626099586486816

Token 67: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10149560868740082
    2. ' None' → logprob: -2.3514955043792725
    3. 'False' → logprob: -6.726495742797852
    4. '0' → logprob: -10.226495742797852
    5. ' False' → logprob: -10.226495742797852
    6. '-' → logprob: -12.101495742797852
    7. ' ' → logprob: -12.476495742797852
    8. '_None' → logprob: -13.226495742797852
    9. 'True' → logprob: -13.351495742797852
    10. 'n' → logprob: -13.601495742797852

Token 68: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0145162343978882
    2. '

' → logprob: -1.1395162343978882
    3. 'def' → logprob: -1.2645162343978882
    4. '<|end|>' → logprob: -3.3895163536071777
    5. '<|end|>' → logprob: -7.639516353607178
    6. 'n' → logprob: -8.76451587677002
    7. '\' → logprob: -9.13951587677002
    8. '```' → logprob: -9.13951587677002
    9. '
' → logprob: -9.51451587677002
    10. '\n' → logprob: -9.63951587677002

Token 69: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07111367583274841
    2. 'def' → logprob: -2.9461135864257812
    3. 'for' → logprob: -4.196113586425781
    4. 'result' → logprob: -7.071113586425781
    5. '#' → logprob: -10.071113586425781
    6. '```' → logprob: -10.446113586425781
    7. '\' → logprob: -10.696113586425781
    8. 'print' → logprob: -10.821113586425781
    9. 'n' → logprob: -11.321113586425781
    10. 'm' → logprob: -11.321113586425781

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006762618198990822
    2. '=' → logprob: -5.006762504577637
    3. ' ' → logprob: -11.006762504577637
    4. ' +=' → logprob: -11.381762504577637
    5. 's' → logprob: -11.881762504577637
    6. '_' → logprob: -12.756762504577637
    7. ',' → logprob: -12.881762504577637
    8. ')' → logprob: -13.131762504577637
    9. 'x' → logprob: -13.631762504577637
    10. ' ' → logprob: -14.256762504577637

Token 71: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22868448495864868
    2. ' ' → logprob: -1.603684425354004
    3. '1' → logprob: -5.853684425354004
    4. 'n' → logprob: -8.728684425354004
    5. ' n' → logprob: -8.728684425354004
    6. '0' → logprob: -9.853684425354004
    7. '10' → logprob: -11.728684425354004
    8. 'div' → logprob: -12.103684425354004
    9. '100' → logprob: -13.478684425354004
    10. ' div' → logprob: -13.853684425354004

Token 72: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012905937619507313
    2. '1' → logprob: -6.751290798187256
    3. ' ' → logprob: -9.626290321350098
    4. 'n' → logprob: -10.876290321350098
    5. '4' → logprob: -11.876290321350098
    6. 'div' → logprob: -11.876290321350098
    7. '10' → logprob: -12.126290321350098
    8. 'm' → logprob: -12.251290321350098
    9. 'a' → logprob: -12.376290321350098
    10. '0' → logprob: -13.376290321350098

Token 73: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31581825017929077
    2. '<|end|>' → logprob: -1.5658183097839355
    3. 'while' → logprob: -4.3158183097839355
    4. ' 
' → logprob: -4.4408183097839355
    5. ' ' → logprob: -5.0658183097839355
    6. ':' → logprob: -5.1908183097839355
    7. 'x' → logprob: -5.8158183097839355
    8. '#' → logprob: -5.9408183097839355
    9. '  
' → logprob: -6.0658183097839355
    10. ' while' → logprob: -6.0658183097839355

Token 74: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.635862410068512
    2. ':' → logprob: -1.5108623504638672
    3. ' while' → logprob: -2.010862350463867
    4. '
' → logprob: -3.010862350463867
    5. ' 
' → logprob: -3.635862350463867
    6. '<|end|>' → logprob: -3.885862350463867
    7. ' ' → logprob: -5.385862350463867
    8. 'x' → logprob: -5.510862350463867
    9. ':
' → logprob: -6.010862350463867
    10. '```' → logprob: -6.260862350463867

Token 75: ' True' (ID: 6432)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.15213283896446228
    2. ' True' → logprob: -2.277132749557495
    3. ' n' → logprob: -4.152132987976074
    4. 'True' → logprob: -4.277132987976074
    5. 'x' → logprob: -4.777132987976074
    6. 'n' → logprob: -8.402132987976074
    7. ' ' → logprob: -8.902132987976074
    8. ' not' → logprob: -10.527132987976074
    9. '(True' → logprob: -10.652132987976074
    10. ' (' → logprob: -10.777132987976074

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.909333023941144e-05
    2. ' :' → logprob: -9.625068664550781
    3. ':
' → logprob: -13.000068664550781
    4. ':**' → logprob: -15.500068664550781
    5. '):' → logprob: -15.875068664550781
    6. '():' → logprob: -16.37506866455078
    7. ',' → logprob: -16.37506866455078
    8. '<|end|>' → logprob: -16.75006866455078
    9. '   ' → logprob: -17.75006866455078
    10. ':

' → logprob: -18.00006866455078

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020836615934967995
    2. '    ' → logprob: -4.39583683013916
    3. '<|end|>' → logprob: -5.39583683013916
    4. '    
' → logprob: -6.27083683013916
    5. ':' → logprob: -7.27083683013916
    6. ' 
' → logprob: -8.52083683013916
    7. '```' → logprob: -8.77083683013916
    8. '<|end|>' → logprob: -8.77083683013916
    9. 'n' → logprob: -9.02083683013916
    10. '       ' → logprob: -9.52083683013916

Token 78: ' tous' (ID: 10688)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4567723274230957
    2. 'for' → logprob: -1.5817723274230957
    3. 'found' → logprob: -1.8317723274230957
    4. '   ' → logprob: -2.0817723274230957
    5. ' found' → logprob: -2.7067723274230957
    6. ' all' → logprob: -2.7067723274230957
    7. 'all' → logprob: -3.3317723274230957
    8. 'count' → logprob: -3.4567723274230957
    9. ' if' → logprob: -3.9567723274230957
    10. 'if' → logprob: -4.331772327423096

Token 79: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.403972327709198
    2. '_con' → logprob: -2.1539723873138428
    3. ' =' → logprob: -2.4039723873138428
    4. '_div' → logprob: -3.0289723873138428
    5. '_present' → logprob: -3.6539723873138428
    6. '_cont' → logprob: -4.153972148895264
    7. '_tr' → logprob: -4.528972148895264
    8. '_valid' → logprob: -5.778972148895264
    9. '_t' → logprob: -6.028972148895264
    10. '_possible' → logprob: -6.153972148895264

Token 80: 'ont' (ID: 645)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.03222348541021347
    2. 'ont' → logprob: -4.407223701477051
    3. 'les' → logprob: -4.407223701477051
    4. '_div' → logprob: -5.782223701477051
    5. '_' → logprob: -7.157223701477051
    6. 'poss' → logprob: -7.407223701477051
    7. 's' → logprob: -7.407223701477051
    8. 'avaient' → logprob: -8.40722370147705
    9. 'faits' → logprob: -8.90722370147705
    10. 'avec' → logprob: -8.90722370147705

Token 81: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.04257681965827942
    2. '_' → logprob: -3.417576789855957
    3. '_un' → logprob: -5.042576789855957
    4. '_des' → logprob: -6.917576789855957
    5. ' div' → logprob: -8.417576789855957
    6. 'div' → logprob: -8.417576789855957
    7. ' divis' → logprob: -8.542576789855957
    8. '	div' → logprob: -9.542576789855957
    9. 'e' → logprob: -9.667576789855957
    10. ' =' → logprob: -9.667576789855957

Token 82: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.4831407368183136
    2. 'ise' → logprob: -0.9831407070159912
    3. '```' → logprob: -5.73314094543457
    4. '=' → logprob: -6.48314094543457
    5. '_' → logprob: -6.60814094543457
    6. ' =' → logprob: -6.85814094543457
    7. '   ' → logprob: -8.10814094543457
    8. '1' → logprob: -8.23314094543457
    9. '>' → logprob: -8.48314094543457
    10. '	' → logprob: -9.23314094543457

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010480545461177826
    2. '=' → logprob: -7.0010480880737305
    3. '_' → logprob: -9.37604808807373
    4. 's' → logprob: -10.50104808807373
    5. 'e' → logprob: -11.37604808807373
    6. 'es' → logprob: -12.12604808807373
    7. ' ' → logprob: -12.62604808807373
    8. '=True' → logprob: -12.87604808807373
    9. ' ' → logprob: -14.75104808807373
    10. '  ' → logprob: -15.00104808807373

Token 84: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2519463300704956
    2. 'True' → logprob: -1.5019463300704956
    3. ' all' → logprob: -11.251946449279785
    4. 'all' → logprob: -12.751946449279785
    5. '(True' → logprob: -13.751946449279785
    6. '=True' → logprob: -16.12694549560547
    7. 'False' → logprob: -16.87694549560547
    8. ' ' → logprob: -17.12694549560547
    9. '   ' → logprob: -17.25194549560547
    10. ' ' → logprob: -17.75194549560547

Token 85: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2438141256570816
    2. '<|end|>' → logprob: -2.11881422996521
    3. '   ' → logprob: -3.49381422996521
    4. '    
' → logprob: -3.74381422996521
    5. ' 
' → logprob: -3.99381422996521
    6. '  
' → logprob: -4.993813991546631
    7. '\n' → logprob: -4.993813991546631
    8. '<|end|>' → logprob: -5.493813991546631
    9. '\' → logprob: -6.118813991546631
    10. '   
' → logprob: -6.493813991546631

Token 87: ' div' (ID: 4223)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30880698561668396
    2. ' for' → logprob: -1.5588070154190063
    3. '   ' → logprob: -2.933806896209717
    4. '	for' → logprob: -6.183806896209717
    5. '
' → logprob: -11.308807373046875
    6. ' ' → logprob: -11.808807373046875
    7. '    
' → logprob: -11.933807373046875
    8. '  ' → logprob: -13.183807373046875
    9. '    ' → logprob: -13.558807373046875
    10. '```' → logprob: -14.058807373046875

Token 88: 's' (ID: 82)
  Prédit: 'iseur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.07784156501293182
    2. 'ise' → logprob: -3.2028415203094482
    3. ' =' → logprob: -4.327841758728027
    4. '=' → logprob: -4.577841758728027
    5. '```' → logprob: -5.577841758728027
    6. '_' → logprob: -6.327841758728027
    7. 'is' → logprob: -6.577841758728027
    8. 's' → logprob: -6.952841758728027
    9. '   ' → logprob: -7.577841758728027
    10. 'x' → logprob: -8.077841758728027

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10713503509759903
    2. 'eurs' → logprob: -3.357135057449341
    3. 'ise' → logprob: -4.232134819030762
    4. '=' → logprob: -4.732134819030762
    5. 'e' → logprob: -5.107134819030762
    6. 's' → logprob: -5.107134819030762
    7. '=[]' → logprob: -5.232134819030762
    8. 'ers' → logprob: -5.357134819030762
    9. 'esseurs' → logprob: -5.482134819030762
    10. 'er' → logprob: -5.607134819030762

Token 90: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.20572905242443085
    2. '[]' → logprob: -1.7057290077209473
    3. ' [' → logprob: -5.580729007720947
    4. '[' → logprob: -7.580729007720947
    5. '[]>' → logprob: -11.205729484558105
    6. '[]}' → logprob: -12.705729484558105
    7. '[int' → logprob: -12.830729484558105
    8. '[]
' → logprob: -14.205729484558105
    9. '[list' → logprob: -14.205729484558105
    10. ' []
' → logprob: -14.455729484558105

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10396218299865723
    2. '    
' → logprob: -3.4789621829986572
    3. ' for' → logprob: -3.7289621829986572
    4. '
' → logprob: -3.7289621829986572
    5. '<|end|>' → logprob: -4.728961944580078
    6. ' 
' → logprob: -5.478961944580078
    7. 'for' → logprob: -6.228961944580078
    8. '  
' → logprob: -6.478961944580078
    9. '    ' → logprob: -7.228961944580078
    10. '<|end|>' → logprob: -7.353961944580078

Token 92: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6592378616333008
    2. 'for' (adapté à ' for') → logprob: -0.9092378616333008
    3. ' for' → logprob: -2.534237861633301
    4. '    
' → logprob: -7.909237861633301
    5. '
' → logprob: -9.1592378616333
    6. '	for' → logprob: -9.4092378616333
    7. '  ' → logprob: -10.9092378616333
    8. ' ' → logprob: -11.7842378616333
    9. '  
' → logprob: -12.2842378616333
    10. '    ' → logprob: -12.4092378616333

Token 93: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.031172897666692734
    2. ' _' → logprob: -3.65617299079895
    3. 'i' → logprob: -6.031172752380371
    4. ' ' → logprob: -6.906172752380371
    5. ' j' → logprob: -6.906172752380371
    6. '_' → logprob: -8.406172752380371
    7. ' x' → logprob: -9.406172752380371
    8. ' y' → logprob: -10.531172752380371
    9. '	i' → logprob: -10.906172752380371
    10. ' range' → logprob: -11.281172752380371

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024382120463997126
    2. 'in' → logprob: -6.127438068389893
    3. 'range' → logprob: -9.37743854522705
    4. ' ' → logprob: -9.50243854522705
    5. '<|end|>' → logprob: -10.75243854522705
    6. ')' → logprob: -10.87743854522705
    7. ' range' → logprob: -11.87743854522705
    8. 'n' → logprob: -12.00243854522705
    9. '```' → logprob: -12.25243854522705
    10. 's' → logprob: -12.37743854522705

Token 95: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03365250304341316
    2. 'range' → logprob: -3.4086525440216064
    3. '	range' → logprob: -12.908652305603027
    4. ' xrange' → logprob: -13.658652305603027
    5. '(range' → logprob: -13.783652305603027
    6. ' ' → logprob: -13.908652305603027
    7. '```' → logprob: -15.158652305603027
    8. 'rang' → logprob: -15.283652305603027
    9. ' rang' → logprob: -15.408652305603027
    10. ' rango' → logprob: -15.908652305603027

Token 96: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16208752989768982
    2. '(x' → logprob: -1.9120875597000122
    3. '(' → logprob: -6.287087440490723
    4. ' (' → logprob: -14.287087440490723
    5. '(nx' → logprob: -15.412087440490723
    6. '(i' → logprob: -15.787087440490723
    7. 'n' → logprob: -16.03708839416504
    8. '(t' → logprob: -16.28708839416504
    9. '(s' → logprob: -16.66208839416504
    10. '(
' → logprob: -16.91208839416504

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0344439372420311
    2. ',' → logprob: -3.5344438552856445
    3. ' ):' → logprob: -5.9094438552856445
    4. '):
' → logprob: -6.7844438552856445
    5. ' ,' → logprob: -8.034443855285645
    6. ')' → logprob: -9.034443855285645
    7. '+' → logprob: -9.159443855285645
    8. '   ' → logprob: -9.284443855285645
    9. ' ' → logprob: -10.284443855285645
    10. ',x' → logprob: -10.534443855285645

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43159177899360657
    2. '   ' → logprob: -1.1815917491912842
    3. '<|end|>' → logprob: -4.306591987609863
    4. ':' → logprob: -4.681591987609863
    5. ' ' → logprob: -5.181591987609863
    6. ')' → logprob: -5.556591987609863
    7. '    ' → logprob: -6.056591987609863
    8. ',' → logprob: -6.181591987609863
    9. ' 
' → logprob: -6.681591987609863
    10. '#' → logprob: -6.931591987609863

Token 99: ' d' (ID: 272)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3805418312549591
    2. '
' → logprob: -2.8805418014526367
    3. ' if' → logprob: -2.8805418014526367
    4. ' d' → logprob: -3.2555418014526367
    5. '           ' → logprob: -3.5055418014526367
    6. ' div' → logprob: -3.5055418014526367
    7. '       ' → logprob: -4.005541801452637
    8. '            
' → logprob: -4.380541801452637
    9. ' x' → logprob: -4.755541801452637
    10. '  
' → logprob: -4.755541801452637

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18594948947429657
    2. '=' → logprob: -2.0609495639801025
    3. ')' → logprob: -3.5609495639801025
    4. 'iv' → logprob: -4.810949325561523
    5. '(' → logprob: -6.560949325561523
    6. ' ' → logprob: -6.935949325561523
    7. 'ivid' → logprob: -7.185949325561523
    8. ' )' → logprob: -7.560949325561523
    9. ',' → logprob: -8.310949325561523
    10. 'e' → logprob: -8.810949325561523

Token 101: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.1218508929014206
    2. 'div' → logprob: -2.6218509674072266
    3. ' x' → logprob: -3.3718509674072266
    4. 'x' → logprob: -4.871850967407227
    5. '	div' → logprob: -10.746850967407227
    6. '(x' → logprob: -11.496850967407227
    7. ' divis' → logprob: -11.746850967407227
    8. '(div' → logprob: -11.746850967407227
    9. ' ' → logprob: -11.871850967407227
    10. '   ' → logprob: -12.496850967407227

Token 102: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.005745456553995609
    2. 's' → logprob: -5.3807454109191895
    3. 'isseur' → logprob: -7.8807454109191895
    4. 'ise' → logprob: -9.130745887756348
    5. 'iseau' → logprob: -9.130745887756348
    6. 'isure' → logprob: -9.380745887756348
    7. '```' → logprob: -9.505745887756348
    8. 'is' → logprob: -9.505745887756348
    9. 'x' → logprob: -10.005745887756348
    10. 'enseur' → logprob: -10.130745887756348

Token 103: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0036119476426392794
    2. '(' → logprob: -5.628612041473389
    3. '(
' → logprob: -11.62861156463623
    4. 'x' → logprob: -13.25361156463623
    5. '(n' → logprob: -14.12861156463623
    6. '(i' → logprob: -15.75361156463623
    7. '((' → logprob: -16.128612518310547
    8. ' (' → logprob: -16.628612518310547
    9. '<|end|>' → logprob: -16.753612518310547
    10. '(s' → logprob: -17.128612518310547

Token 104: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3176041841506958
    2. '+' → logprob: -1.3176041841506958
    3. '+i' → logprob: -5.442604064941406
    4. ' ' → logprob: -13.067604064941406
    5. '+x' → logprob: -13.317604064941406
    6. ')' → logprob: -14.692604064941406
    7. '+)' → logprob: -15.817604064941406
    8. ' +
' → logprob: -16.067604064941406
    9. '+j' → logprob: -16.067604064941406
    10. '+
' → logprob: -16.192604064941406

Token 105: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00015860427811276168
    2. ' i' → logprob: -8.750158309936523
    3. '	i' → logprob: -17.000158309936523
    4. '   ' → logprob: -17.500158309936523
    5. ' ' → logprob: -17.875158309936523
    6. '1' → logprob: -19.250158309936523
    7. ')' → logprob: -20.125158309936523
    8. '```' → logprob: -20.375158309936523
    9. ')i' → logprob: -20.625158309936523
    10. '[i' → logprob: -20.875158309936523

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023357167840003967
    2. ')
' → logprob: -3.7733571529388428
    3. '       ' → logprob: -9.648357391357422
    4. ')
' → logprob: -10.023357391357422
    5. '):
' → logprob: -13.773357391357422
    6. ')

' → logprob: -14.523357391357422
    7. '   ' → logprob: -15.023357391357422
    8. '):' → logprob: -15.273357391357422
    9. ' )' → logprob: -15.648357391357422
    10. ')`' → logprob: -15.648357391357422

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12802444398403168
    2. '
' → logprob: -2.1280243396759033
    3. '<|end|>' → logprob: -7.503024578094482
    4. '        
' → logprob: -8.378024101257324
    5. '
' → logprob: -8.878024101257324
    6. ')' → logprob: -9.628024101257324
    7. '<|end|>' → logprob: -10.503024101257324
    8. '  
' → logprob: -11.253024101257324
    9. '   ' → logprob: -11.253024101257324
    10. ' 
' → logprob: -11.503024101257324

Token 108: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33151334524154663
    2. ' if' → logprob: -1.3315134048461914
    3. 'if' (adapté à ' if') → logprob: -4.456513404846191
    4. '   ' → logprob: -5.081513404846191
    5. ' ' → logprob: -9.081513404846191
    6. '        
' → logprob: -9.331513404846191
    7. ' 
' → logprob: -11.456513404846191
    8. '     ' → logprob: -11.456513404846191
    9. '  ' → logprob: -11.706513404846191
    10. '    ' → logprob: -11.706513404846191

Token 109: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.008724717423319817
    2. 'd' → logprob: -4.758724689483643
    3. ' not' → logprob: -9.1337251663208
    4. 'not' → logprob: -13.6337251663208
    5. ' ' → logprob: -14.6337251663208
    6. ' ' → logprob: -15.7587251663208
    7. '	d' → logprob: -16.008724212646484
    8. '_d' → logprob: -16.008724212646484
    9. '>d' → logprob: -16.758724212646484
    10. ' д' → logprob: -16.883724212646484

Token 110: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0003111519617959857
    2. 'is' → logprob: -8.750310897827148
    3. '==' → logprob: -9.500310897827148
    4. ')' → logprob: -10.250310897827148
    5. ' ==' → logprob: -10.750310897827148
    6. ' ' → logprob: -11.000310897827148
    7. ' None' → logprob: -13.375310897827148
    8. ' )' → logprob: -13.750310897827148
    9. '=' → logprob: -14.500310897827148
    10. 'None' → logprob: -15.125310897827148

Token 111: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.38687849044799805
    2. ' None' → logprob: -1.136878490447998
    3. '_None' → logprob: -12.386878967285156
    4. ' ' → logprob: -13.386878967285156
    5. '(None' → logprob: -13.761878967285156
    6. '=None' → logprob: -14.636878967285156
    7. '.None' → logprob: -16.386878967285156
    8. '   ' → logprob: -16.761878967285156
    9. 'No' → logprob: -17.011878967285156
    10. ' not' → logprob: -17.261878967285156

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009082729928195477
    2. ':
' → logprob: -4.759082794189453
    3. '       ' → logprob: -8.134082794189453
    4. '           ' → logprob: -8.884082794189453
    5. '):' → logprob: -11.134082794189453
    6. ' or' → logprob: -12.134082794189453
    7. '):
' → logprob: -12.134082794189453
    8. ' :' → logprob: -12.759082794189453
    9. ':

' → logprob: -13.009082794189453
    10. ')' → logprob: -13.634082794189453

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003178901970386505
    2. '
' → logprob: -6.50317907333374
    3. '       ' → logprob: -6.50317907333374
    4. 'n' → logprob: -9.503178596496582
    5. ':' → logprob: -10.503178596496582
    6. '            
' → logprob: -11.378178596496582
    7. '```' → logprob: -11.503178596496582
    8. '        
' → logprob: -11.753178596496582
    9. '               ' → logprob: -11.753178596496582
    10. '	       ' → logprob: -12.128178596496582

Token 114: ' tous' (ID: 10688)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5658060908317566
    2. '           ' → logprob: -1.3158061504364014
    3. 't' → logprob: -1.8158061504364014
    4. '   ' → logprob: -7.690805912017822
    5. '
' → logprob: -8.94080638885498
    6. 'n' → logprob: -8.94080638885498
    7. '        
' → logprob: -9.19080638885498
    8. ' tous' → logprob: -9.44080638885498
    9. '	t' → logprob: -9.81580638885498
    10. '               ' → logprob: -9.81580638885498

Token 115: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.5776860184123507e-06
    2. ''ont' → logprob: -13.62500286102295
    3. 'ont' → logprob: -14.00000286102295
    4. 's' → logprob: -16.250001907348633
    5. ' ont' → logprob: -16.250001907348633
    6. 'Ont' → logprob: -16.875001907348633
    7. '’ont' → logprob: -17.125001907348633
    8. '\' → logprob: -17.875001907348633
    9. '‌' → logprob: -17.875001907348633
    10. '_a' → logprob: -17.875001907348633

Token 116: 'ont' (ID: 645)
  Prédit: 'ont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.0014284518547356129
    2. '_' → logprob: -6.751428604125977
    3. ''ont' → logprob: -8.751428604125977
    4. ' ont' → logprob: -10.501428604125977
    5. 'a' → logprob: -10.501428604125977
    6. 'aient' → logprob: -10.626428604125977
    7. 's' → logprob: -12.126428604125977
    8. 'font' → logprob: -13.251428604125977
    9. '’ont' → logprob: -13.376428604125977
    10. 'avaient' → logprob: -13.376428604125977

Token 117: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.0005183627945370972
    2. 'div' → logprob: -7.625518321990967
    3. '_' → logprob: -10.500518798828125
    4. '	div' → logprob: -13.625518798828125
    5. '<div' → logprob: -14.750518798828125
    6. '_d' → logprob: -14.750518798828125
    7. '_di' → logprob: -15.750518798828125
    8. 'd' → logprob: -16.250518798828125
    9. ' ' → logprob: -16.250518798828125
    10. '(div' → logprob: -16.375518798828125

Token 118: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -7.85104202805087e-05
    2. 'isseur' → logprob: -10.250078201293945
    3. 'ise' → logprob: -10.625078201293945
    4. 'iseau' → logprob: -12.000078201293945
    5. 'is' → logprob: -12.375078201293945
    6. 's' → logprob: -12.750078201293945
    7. 'isateur' → logprob: -13.000078201293945
    8. 'enseur' → logprob: -14.375078201293945
    9. 'i' → logprob: -14.500078201293945
    10. '```' → logprob: -15.000078201293945

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10065153241157532
    2. '=' → logprob: -2.350651502609253
    3. '=False' → logprob: -7.850651741027832
    4. 's' → logprob: -10.600651741027832
    5. ' ' → logprob: -10.725651741027832
    6. '   ' → logprob: -12.725651741027832
    7. '=True' → logprob: -13.475651741027832
    8. ')' → logprob: -13.725651741027832
    9. '  ' → logprob: -14.725651741027832
    10. 'False' → logprob: -15.100651741027832

Token 120: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011048054322600365
    2. ' False' → logprob: -4.511047840118408
    3. 'F' → logprob: -15.886048316955566
    4. '(False' → logprob: -16.13604736328125
    5. '=False' → logprob: -17.13604736328125
    6. 'True' → logprob: -18.26104736328125
    7. '   ' → logprob: -19.63604736328125
    8. 'Fa' → logprob: -20.38604736328125
    9. '.False' → logprob: -20.63604736328125
    10. ' F' → logprob: -20.88604736328125

Token 121: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3795937522663735e-05
    2. '       ' → logprob: -11.37502384185791
    3. '               ' → logprob: -12.37502384185791
    4. '		' → logprob: -12.87502384185791
    5. '          ' → logprob: -13.37502384185791
    6. '            
' → logprob: -13.37502384185791
    7. '   ' → logprob: -14.62502384185791
    8. '<|end|>' → logprob: -14.62502384185791
    9. '	       ' → logprob: -14.75002384185791
    10. '     ' → logprob: -15.87502384185791

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.2994620242971e-06
    2. '       ' → logprob: -13.000008583068848
    3. '               ' → logprob: -13.125008583068848
    4. '            
' → logprob: -13.750008583068848
    5. '
' → logprob: -14.250008583068848
    6. '          ' → logprob: -14.375008583068848
    7. '		' → logprob: -15.000008583068848
    8. '   ' → logprob: -15.375008583068848
    9. '	       ' → logprob: -15.500008583068848
    10. '<|end|>' → logprob: -15.500008583068848

Token 123: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2701535224914551
    2. ' break' → logprob: -2.020153522491455
    3. 'break' (adapté à ' break') → logprob: -2.270153522491455
    4. '       ' → logprob: -7.270153522491455
    5. '	break' → logprob: -10.020153045654297
    6. '   ' → logprob: -10.645153045654297
    7. '
' → logprob: -11.270153045654297
    8. '               ' → logprob: -11.645153045654297
    9. '		' → logprob: -12.395153045654297
    10. 'b' → logprob: -12.895153045654297

Token 124: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3206046223640442
    2. '
' → logprob: -1.4456045627593994
    3. '    
' → logprob: -3.3206045627593994
    4. '       ' → logprob: -6.4456048011779785
    5. '        
' → logprob: -8.07060432434082
    6. '  
' → logprob: -8.44560432434082
    7. '   
' → logprob: -8.69560432434082
    8. ' 
' → logprob: -9.69560432434082
    9. '<|end|>' → logprob: -10.19560432434082
    10. '    ' → logprob: -10.44560432434082

Token 125: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012819811701774597
    2. '
' → logprob: -5.137819766998291
    3. '    
' → logprob: -5.137819766998291
    4. '       ' → logprob: -7.137819766998291
    5. '        
' → logprob: -9.38782024383545
    6. '  
' → logprob: -10.13782024383545
    7. '   
' → logprob: -10.26282024383545
    8. ' 
' → logprob: -11.38782024383545
    9. '  ' → logprob: -12.38782024383545
    10. '<|end|>' → logprob: -12.51282024383545

Token 126: ' div' (ID: 4223)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01746745966374874
    2. '   ' → logprob: -4.642467498779297
    3. 'else' → logprob: -5.142467498779297
    4. ' else' → logprob: -6.767467498779297
    5. '
' → logprob: -7.517467498779297
    6. '    
' → logprob: -10.267467498779297
    7. '        
' → logprob: -10.517467498779297
    8. '           ' → logprob: -10.642467498779297
    9. 's' → logprob: -10.892467498779297
    10. 'd' → logprob: -11.892467498779297

Token 127: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.512236498361744e-07
    2. 'rs' → logprob: -15.625000953674316
    3. 'is' → logprob: -16.125
    4. '(s' → logprob: -16.375
    5. ')s' → logprob: -17.0
    6. ''s' → logprob: -17.125
    7. '`s' → logprob: -17.5
    8. '   ' → logprob: -18.25
    9. '       ' → logprob: -18.375
    10. 'S' → logprob: -18.5

Token 128: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007129086880013347
    2. '.' → logprob: -7.250712871551514
    3. 'append' → logprob: -13.750713348388672
    4. '.app' → logprob: -14.500713348388672
    5. '.extend' → logprob: -14.750713348388672
    6. ' .' → logprob: -15.000713348388672
    7. '.Append' → logprob: -15.125713348388672
    8. '.ap' → logprob: -15.500713348388672
    9. '.push' → logprob: -16.250713348388672
    10. '_append' → logprob: -16.750713348388672

Token 129: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.02990587428212166
    2. '(' → logprob: -3.5299057960510254
    3. '((' → logprob: -9.154906272888184
    4. '(div' → logprob: -10.154906272888184
    5. '(
' → logprob: -12.279906272888184
    6. ' (' → logprob: -13.029906272888184
    7. 'd' → logprob: -13.279906272888184
    8. '(x' → logprob: -14.154906272888184
    9. '(i' → logprob: -15.029906272888184
    10. '(D' → logprob: -15.154906272888184

Token 130: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047285633627325296
    2. ')
' → logprob: -8.250473022460938
    3. '   ' → logprob: -8.500473022460938
    4. ' )' → logprob: -12.000473022460938
    5. '))' → logprob: -15.000473022460938
    6. ' ' → logprob: -15.375473022460938
    7. ')
' → logprob: -15.625473022460938
    8. '')' → logprob: -15.625473022460938
    9. '),' → logprob: -16.125473022460938
    10. ')

' → logprob: -16.250473022460938

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0046075377613306046
    2. '
' → logprob: -5.504607677459717
    3. '    
' → logprob: -7.754607677459717
    4. '<|end|>' → logprob: -10.879607200622559
    5. '  
' → logprob: -11.129607200622559
    6. ' 
' → logprob: -11.379607200622559
    7. 'if' → logprob: -11.629607200622559
    8. '   
' → logprob: -11.629607200622559
    9. ')' → logprob: -11.754607200622559
    10. ' if' → logprob: -11.754607200622559

Token 132: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05858803540468216
    2. 'if' (adapté à ' if') → logprob: -3.6835880279541016
    3. '
' → logprob: -3.8085880279541016
    4. ' if' → logprob: -5.308588027954102
    5. '    
' → logprob: -5.433588027954102
    6. ' 
' → logprob: -8.808588027954102
    7. '  
' → logprob: -10.058588027954102
    8. '   
' → logprob: -10.308588027954102
    9. '        
' → logprob: -11.308588027954102
    10. ' ' → logprob: -11.433588027954102

Token 133: ' tous' (ID: 10688)
  Prédit: ' tous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.020828094333410263
    2. 't' → logprob: -3.8958280086517334
    3. ' ' → logprob: -8.770828247070312
    4. ' ' → logprob: -9.770828247070312
    5. 'Tous' → logprob: -10.395828247070312
    6. ' t' → logprob: -11.520828247070312
    7. '	t' → logprob: -11.520828247070312
    8. 'n' → logprob: -12.145828247070312
    9. ' todos' → logprob: -12.520828247070312
    10. ' not' → logprob: -12.645828247070312

Token 134: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.704273118884885e-07
    2. ' _' → logprob: -14.750000953674316
    3. 'ont' → logprob: -17.0
    4. '‌' → logprob: -17.25
    5. '<|end|>' → logprob: -17.25
    6. ' ' → logprob: -18.375
    7. ''ont' → logprob: -18.625
    8. '```' → logprob: -18.75
    9. '_a' → logprob: -18.875
    10. '_
' → logprob: -18.875

Token 135: 'ont' (ID: 645)
  Prédit: 'ont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.026503128930926323
    2. '_' → logprob: -3.651503086090088
    3. ''ont' → logprob: -9.151503562927246
    4. ' ont' → logprob: -9.901503562927246
    5. 'aient' → logprob: -11.026503562927246
    6. '-' → logprob: -11.901503562927246
    7. '’ont' → logprob: -12.276503562927246
    8. '_cont' → logprob: -13.026503562927246
    9. '_font' → logprob: -13.276503562927246
    10. 's' → logprob: -13.276503562927246

Token 136: '_div' (ID: 36926)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.47412896156311035
    2. '_div' → logprob: -0.9741289615631104
    3. '_' → logprob: -10.349128723144531
    4. '	div' → logprob: -11.724128723144531
    5. '<div' → logprob: -12.849128723144531
    6. 'avoir' → logprob: -13.599128723144531
    7. 'd' → logprob: -13.724128723144531
    8. 'division' → logprob: -14.099128723144531
    9. '

' → logprob: -14.349128723144531
    10. ' div' → logprob: -14.474128723144531

Token 137: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.000205566844670102
    2. 'isseur' → logprob: -9.250205993652344
    3. 's' → logprob: -10.250205993652344
    4. 'is' → logprob: -10.500205993652344
    5. 'ise' → logprob: -10.875205993652344
    6. 'enseur' → logprob: -11.625205993652344
    7. 'iseau' → logprob: -12.000205993652344
    8. 'reur' → logprob: -12.750205993652344
    9. 'esseur' → logprob: -13.625205993652344
    10. 'isateur' → logprob: -13.625205993652344

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.3795937522663735e-05
    2. ' :' → logprob: -10.87502384185791
    3. ':
' → logprob: -13.37502384185791
    4. '==' → logprob: -14.25002384185791
    5. ' and' → logprob: -14.50002384185791
    6. '):' → logprob: -14.62502384185791
    7. ':**' → logprob: -14.75002384185791
    8. ':return' → logprob: -14.75002384185791
    9. '=' → logprob: -14.87502384185791
    10. 'and' → logprob: -15.37502384185791

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016917560249567032
    2. '   ' → logprob: -4.141917705535889
    3. ' print' → logprob: -8.14191722869873
    4. ' break' → logprob: -8.39191722869873
    5. ':' → logprob: -9.01691722869873
    6. '
' → logprob: -9.39191722869873
    7. '    
' → logprob: -9.64191722869873
    8. ',' → logprob: -10.76691722869873
    9. '        
' → logprob: -10.76691722869873
    10. ':
' → logprob: -11.26691722869873

Token 140: ' print' (ID: 2123)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.8738594055175781
    2. 'print' (adapté à ' print') → logprob: -1.6238594055175781
    3. ' print' → logprob: -1.7488594055175781
    4. 'break' → logprob: -2.248859405517578
    5. '   ' → logprob: -2.498859405517578
    6. ' for' → logprob: -3.998859405517578
    7. 'for' → logprob: -5.248859405517578
    8. '    ' → logprob: -9.748859405517578
    9. '       ' → logprob: -9.998859405517578
    10. ' ' → logprob: -10.373859405517578

Token 141: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12821204960346222
    2. '(' → logprob: -2.1282119750976562
    3. '((' → logprob: -7.503211975097656
    4. '(*' → logprob: -7.628211975097656
    5. '(div' → logprob: -9.253211975097656
    6. '('' → logprob: -9.378211975097656
    7. '(f' → logprob: -11.253211975097656
    8. '(
' → logprob: -11.378211975097656
    9. '("("' → logprob: -11.753211975097656
    10. '([' → logprob: -11.753211975097656

Token 142: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022729255259037018
    2. ')' → logprob: -4.022729396820068
    3. ' ,' → logprob: -6.397729396820068
    4. ',end' → logprob: -6.397729396820068
    5. ' )' → logprob: -7.772729396820068
    6. ',x' → logprob: -7.772729396820068
    7. ',*' → logprob: -8.77272891998291
    8. ',)' → logprob: -10.14772891998291
    9. '*' → logprob: -10.27272891998291
    10. '+' → logprob: -10.77272891998291

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.004696090007201e-05
    2. '   ' → logprob: -9.625069618225098
    3. ' break' → logprob: -14.125069618225098
    4. 'break' → logprob: -14.375069618225098
    5. '      ' → logprob: -14.750069618225098
    6. '	' → logprob: -14.750069618225098
    7. '	break' → logprob: -14.750069618225098
    8. '           ' → logprob: -15.125069618225098
    9. '
' → logprob: -15.125069618225098
    10. '        
' → logprob: -15.625069618225098

Token 144: ' for' (ID: 395)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.03128150850534439
    2. 'print' → logprob: -3.6562814712524414
    3. '       ' → logprob: -5.656281471252441
    4. 'for' (adapté à ' for') → logprob: -6.656281471252441
    5. ' break' → logprob: -9.031281471252441
    6. '   ' → logprob: -9.781281471252441
    7. '	break' → logprob: -12.781281471252441
    8. '#' → logprob: -13.531281471252441
    9. '        
' → logprob: -13.531281471252441
    10. 'exit' → logprob: -13.781281471252441

Token 145: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16426455974578857
    2. 'i' → logprob: -1.9142645597457886
    3. ' d' → logprob: -6.039264678955078
    4. ' i' → logprob: -7.164264678955078
    5. 'v' → logprob: -7.664264678955078
    6. 'div' → logprob: -8.039264678955078
    7. 'j' → logprob: -10.414264678955078
    8. 'k' → logprob: -10.539264678955078
    9. 't' → logprob: -12.039264678955078
    10. 'di' → logprob: -12.164264678955078

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008232106338255107
    2. 'in' → logprob: -7.125823020935059
    3. ' ' → logprob: -11.625823020935059
    4. 'd' → logprob: -12.500823020935059
    5. 's' → logprob: -13.250823020935059
    6. 'i' → logprob: -14.250823020935059
    7. ',' → logprob: -14.250823020935059
    8. 'e' → logprob: -14.625823020935059
    9. ' i' → logprob: -14.750823020935059
    10. 'dans' → logprob: -14.750823020935059

Token 147: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0011703446507453918
    2. ' div' → logprob: -6.7511701583862305
    3. '	div' → logprob: -16.251171112060547
    4. '(div' → logprob: -18.751171112060547
    5. '<div' → logprob: -19.876171112060547
    6. 'Div' → logprob: -20.001171112060547
    7. 'd' → logprob: -20.126171112060547
    8. ' ' → logprob: -20.501171112060547
    9. '_div' → logprob: -20.501171112060547
    10. 'dist' → logprob: -20.626171112060547

Token 148: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.704273118884885e-07
    2. 'div' → logprob: -15.000000953674316
    3. 'is' → logprob: -15.250000953674316
    4. 'ds' → logprob: -16.5
    5. '	s' → logprob: -19.75
    6. 'rs' → logprob: -19.75
    7. '`s' → logprob: -20.5
    8. 'ss' → logprob: -20.75
    9. '_s' → logprob: -20.875
    10. ' ' → logprob: -20.875

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022658745292574167
    2. ':
' → logprob: -6.627265930175781
    3. '   ' → logprob: -8.502265930175781
    4. ',' → logprob: -8.502265930175781
    5. 'print' → logprob: -8.627265930175781
    6. ' :' → logprob: -9.252265930175781
    7. '):' → logprob: -9.377265930175781
    8. ' print' → logprob: -9.627265930175781
    9. ')' → logprob: -10.752265930175781
    10. '       ' → logprob: -11.002265930175781

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20380963385105133
    2. ' print' → logprob: -1.9538096189498901
    3. ':' → logprob: -3.4538097381591797
    4. 'print' → logprob: -4.70380973815918
    5. '       ' → logprob: -6.82880973815918
    6. ':
' → logprob: -8.20380973815918
    7. '   ' → logprob: -8.20380973815918
    8. ' :' → logprob: -9.57880973815918
    9. '.print' → logprob: -10.45380973815918
    10. '          ' → logprob: -10.57880973815918

Token 151: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3869835138320923
    2. ' print' → logprob: -1.1369835138320923
    3. '   ' → logprob: -10.136983871459961
    4. '           ' → logprob: -10.136983871459961
    5. '       ' → logprob: -11.511983871459961
    6. '	print' → logprob: -11.636983871459961
    7. '.print' → logprob: -12.386983871459961
    8. ':' → logprob: -13.011983871459961
    9. '    ' → logprob: -13.261983871459961
    10. ' ' → logprob: -13.386983871459961

Token 152: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.02979550138115883
    2. '(' → logprob: -3.5297954082489014
    3. '("' → logprob: -11.02979564666748
    4. '('' → logprob: -11.15479564666748
    5. '(f' → logprob: -11.65479564666748
    6. 'd' → logprob: -12.90479564666748
    7. ' (' → logprob: -13.40479564666748
    8. '(
' → logprob: -13.77979564666748
    9. '((' → logprob: -15.52979564666748
    10. '(div' → logprob: -15.65479564666748

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008139163837768137
    2. ' )' → logprob: -7.375813961029053
    3. ',' → logprob: -8.625813484191895
    4. ')
' → logprob: -12.750813484191895
    5. ',)' → logprob: -13.625813484191895
    6. '   ' → logprob: -14.000813484191895
    7. '())' → logprob: -14.125813484191895
    8. ' ,' → logprob: -14.250813484191895
    9. '))' → logprob: -15.250813484191895
    10. '),' → logprob: -15.375813484191895

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.875
    3. '           ' → logprob: -17.125
    4. ',' → logprob: -17.625
    5. '      ' → logprob: -18.125
    6. '	' → logprob: -18.25
    7. ' break' → logprob: -18.375
    8. 'break' → logprob: -18.625
    9. '<|end|>' → logprob: -18.75
    10. '	break' → logprob: -18.75

Token 155: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0671764686703682
    2. '       ' → logprob: -3.067176580429077
    3. ' break' → logprob: -4.067176342010498
    4. '   ' → logprob: -6.692176342010498
    5. '	break' → logprob: -9.942176818847656
    6. '        
' → logprob: -14.317176818847656
    7. '           ' → logprob: -14.317176818847656
    8. ' ' → logprob: -14.942176818847656
    9. '
' → logprob: -15.692176818847656
    10. 'br' → logprob: -15.817176818847656

Token 156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4194875955581665
    2. '<|end|>' → logprob: -1.1694875955581665
    3. ' ' → logprob: -4.669487476348877
    4. '
' → logprob: -4.919487476348877
    5. '#' → logprob: -5.794487476348877
    6. '    
' → logprob: -5.919487476348877
    7. 'x' → logprob: -5.919487476348877
    8. '<|end|>' → logprob: -6.169487476348877
    9. ' 
' → logprob: -6.794487476348877
    10. '  ' → logprob: -7.044487476348877

Token 157: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.01510905846953392
    2. '   ' → logprob: -4.640109062194824
    3. ' x' → logprob: -5.265109062194824
    4. '    
' → logprob: -9.765109062194824
    5. ' 
' → logprob: -10.140109062194824
    6. '
' → logprob: -10.265109062194824
    7. ' ' → logprob: -11.640109062194824
    8. 'else' → logprob: -11.890109062194824
    9. '   
' → logprob: -11.890109062194824
    10. '  ' → logprob: -12.265109062194824

Token 159: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03895536810159683
    2. ' +=' → logprob: -3.2889554500579834
    3. '+' → logprob: -7.163955211639404
    4. '=' → logprob: -8.913955688476562
    5. '+='' → logprob: -13.163955688476562
    6. '+="' → logprob: -13.788955688476562
    7. ']+=' → logprob: -14.288955688476562
    8. '++' → logprob: -14.788955688476562
    9. ' ' → logprob: -15.163955688476562
    10. '<|end|>' → logprob: -15.413955688476562

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '2' → logprob: -14.875075340270996
    4. '3' → logprob: -18.00007438659668
    5. '```' → logprob: -18.18757438659668
    6. '4' → logprob: -18.75007438659668
    7. '10' → logprob: -18.93757438659668
    8. '   ' → logprob: -19.18757438659668
    9. 's' → logprob: -19.93757438659668
    10. '  ' → logprob: -20.06257438659668

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.000008583068848
    3. '2' → logprob: -13.250008583068848
    4. 'n' → logprob: -17.06250762939453
    5. '10' → logprob: -17.37500762939453
    6. '3' → logprob: -17.43750762939453
    7. '```' → logprob: -17.93750762939453
    8. '4' → logprob: -18.37500762939453
    9. '１' → logprob: -18.62500762939453
    10. 'x' → logprob: -18.62500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 159
Tokens correctement prédits (1ère position, stricte): 72
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 130
Précision stricte (1ère position): 45.28%
Précision adaptée (1ère position): 47.17%
Précision (top 10): 81.76%
================================================================================
