================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:27:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

N, M = map(int, input().split())
covered = [0]*(N+2)
events = [[] for _ in range(N+2)]

for _ in range(M):
    a, b, x = map(int, input().split())
    for i in range(x+1):
        start = b + i
        end = b + x + 1
        events[a+i].append((start, end))

count = 0
for row in range(1, N+1):
    line = [0]*(row+2)
    for s, e in events[row]:
        line[s] += 1
        if e <= row:
            line[e] -= 1
    c = 0
    for i in range(1, row+1):
        c += line[i]
        if c > 0:
            count += 1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3199642300605774
    2. '.' → logprob: -1.6949641704559326
    3. '<|end|>' → logprob: -2.9449641704559326
    4. '\' → logprob: -4.444964408874512
    5. 'newline' → logprob: -5.069964408874512
    6. 'import' → logprob: -5.069964408874512
    7. '' → logprob: -5.819964408874512
    8. '<|end|>' → logprob: -5.944964408874512
    9. '\r' → logprob: -6.069964408874512
    10. '
' → logprob: -6.319964408874512

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01346677727997303
    2. '.' → logprob: -4.388466835021973
    3. ' (' → logprob: -7.888466835021973
    4. ')' → logprob: -9.013466835021973
    5. '[' → logprob: -9.138466835021973
    6. '()' → logprob: -9.513466835021973
    7. '('' → logprob: -9.888466835021973
    8. '(
' → logprob: -9.888466835021973
    9. ''' → logprob: -10.388466835021973
    10. ''s' → logprob: -10.638466835021973

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00015002528380136937
    2. '.readline' → logprob: -10.375149726867676
    3. '.`' → logprob: -10.750149726867676
    4. '.import' → logprob: -10.750149726867676
    5. '.stdin' → logprob: -11.000149726867676
    6. ' .' → logprob: -11.375149726867676
    7. '.input' → logprob: -12.375149726867676
    8. '[' → logprob: -12.500149726867676
    9. '.
' → logprob: -12.750149726867676
    10. '."""' → logprob: -12.750149726867676

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.49064239859580994
    2. '.readline' → logprob: -0.9906424283981323
    3. '.read' → logprob: -4.115642547607422
    4. '```' → logprob: -10.615642547607422
    5. '.readlines' → logprob: -10.865642547607422
    6. 'read' → logprob: -10.990642547607422
    7. '.Read' → logprob: -11.115642547607422
    8. ' .' → logprob: -12.240642547607422
    9. ')' → logprob: -12.490642547607422
    10. '.write' → logprob: -12.615642547607422

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02483372390270233
    2. '(' → logprob: -4.149833679199219
    3. '()
' → logprob: -5.524833679199219
    4. '
' → logprob: -6.399833679199219
    5. '(
' → logprob: -6.649833679199219
    6. '\n' → logprob: -7.524833679199219
    7. '()\' → logprob: -7.649833679199219
    8. '\' → logprob: -8.274833679199219
    9. '().' → logprob: -8.274833679199219
    10. '()

' → logprob: -9.024833679199219

Token 9: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18130090832710266
    2. '(' → logprob: -1.8063008785247803
    3. '().' → logprob: -6.806301116943359
    4. '()
' → logprob: -8.80630111694336
    5. '(
' → logprob: -10.05630111694336
    6. '()

' → logprob: -10.30630111694336
    7. ')' → logprob: -10.43130111694336
    8. '#' → logprob: -10.43130111694336
    9. 'def' → logprob: -10.68130111694336
    10. 'a' → logprob: -10.68130111694336

Token 10: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3214009702205658
    2. ')' → logprob: -1.9464010000228882
    3. ' =' → logprob: -2.4464008808135986
    4. ' ' → logprob: -3.8214008808135986
    5. '[' → logprob: -5.196401119232178
    6. ',' → logprob: -5.446401119232178
    7. '.' → logprob: -6.196401119232178
    8. '+' → logprob: -6.196401119232178
    9. '(' → logprob: -6.321401119232178
    10. '>' → logprob: -6.446401119232178

Token 11: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.2713643014431
    2. ' ' → logprob: -2.021364212036133
    3. 'M' → logprob: -2.396364212036133
    4. 'space' → logprob: -5.771364212036133
    5. 'input' → logprob: -6.146364212036133
    6. '  ' → logprob: -6.271364212036133
    7. ' =' → logprob: -6.521364212036133
    8. ' K' → logprob: -6.521364212036133
    9. '=' → logprob: -6.646364212036133
    10. ')' → logprob: -7.646364212036133

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03361503779888153
    2. '=' → logprob: -3.7836151123046875
    3. ' ' → logprob: -5.4086151123046875
    4. ',' → logprob: -5.5336151123046875
    5. ' ,' → logprob: -6.5336151123046875
    6. '<|end|>' → logprob: -8.158615112304688
    7. ')' → logprob: -9.533615112304688
    8. ' =
' → logprob: -11.158615112304688
    9. ' =",' → logprob: -11.408615112304688
    10. '  ' → logprob: -11.533615112304688

Token 13: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.008625447750091553
    2. 'map' → logprob: -4.758625507354736
    3. ' input' → logprob: -11.508625030517578
    4. 'input' → logprob: -14.508625030517578
    5. ' list' → logprob: -15.383625030517578
    6. ' ' → logprob: -16.383625030517578
    7. ' tuple' → logprob: -17.258625030517578
    8. '	map' → logprob: -17.258625030517578
    9. ' mapa' → logprob: -18.133625030517578
    10. '(map' → logprob: -18.633625030517578

Token 14: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16270144283771515
    2. '(int' → logprob: -2.162701368331909
    3. '(str' → logprob: -3.662701368331909
    4. '(lambda' → logprob: -4.912701606750488
    5. '(input' → logprob: -6.537701606750488
    6. '(len' → logprob: -8.912701606750488
    7. '(tuple' → logprob: -9.287701606750488
    8. '(list' → logprob: -9.537701606750488
    9. '<|end|>' → logprob: -10.162701606750488
    10. '(
' → logprob: -10.412701606750488

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.604215681552887
    2. '(input' → logprob: -1.3542156219482422
    3. ',input' → logprob: -2.229215621948242
    4. '(' → logprob: -2.854215621948242
    5. ')' → logprob: -3.854215621948242
    6. 'input' → logprob: -5.479215621948242
    7. '(sys' → logprob: -5.854215621948242
    8. ' ,' → logprob: -7.854215621948242
    9. '=input' → logprob: -8.604215621948242
    10. '(str' → logprob: -8.604215621948242

Token 16: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759611129760742
    2. ' input' → logprob: -0.8259611129760742
    3. ')' → logprob: -11.450961112976074
    4. 'str' → logprob: -12.450961112976074
    5. ' str' → logprob: -12.950961112976074
    6. ' sys' → logprob: -13.450961112976074
    7. ',input' → logprob: -13.450961112976074
    8. '(input' → logprob: -14.325961112976074
    9. 'sys' → logprob: -14.825961112976074
    10. ' ' → logprob: -14.950961112976074

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08221352100372314
    2. '())' → logprob: -2.5822134017944336
    3. '()' → logprob: -5.832213401794434
    4. ')' → logprob: -8.082213401794434
    5. '()))' → logprob: -9.707213401794434
    6. '(' → logprob: -12.082213401794434
    7. '());' → logprob: -12.957213401794434
    8. '()),' → logprob: -13.207213401794434
    9. '('' → logprob: -13.832213401794434
    10. ' ())' → logprob: -14.082213401794434

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.024394284933805466
    2. 'strip' → logprob: -3.7743942737579346
    3. 'rstrip' → logprob: -6.774394512176514
    4. ')' → logprob: -12.899394035339355
    5. ' split' → logprob: -13.274394035339355
    6. '(split' → logprob: -14.149394035339355
    7. '```' → logprob: -15.149394035339355
    8. 'read' → logprob: -16.274394989013672
    9. '()' → logprob: -16.774394989013672
    10. 'spl' → logprob: -17.024394989013672

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3358446166384965e-05
    2. '))' → logprob: -10.250053405761719
    3. '()' → logprob: -12.250053405761719
    4. '`)' → logprob: -12.250053405761719
    5. '())' → logprob: -12.500053405761719
    6. '(' → logprob: -13.250053405761719
    7. '')' → logprob: -13.875053405761719
    8. ')`' → logprob: -14.250053405761719
    9. '")' → logprob: -15.125053405761719
    10. ' )' → logprob: -15.250053405761719

Token 20: 'covered' (ID: 32827)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.2554092407226562
    2. '\n' → logprob: -2.0054092407226562
    3. '[' → logprob: -2.1304092407226562
    4. '
' → logprob: -2.1304092407226562
    5. 'a' → logprob: -2.3804092407226562
    6. ' 
' → logprob: -3.0054092407226562
    7. 'd' → logprob: -3.5054092407226562
    8. 'array' → logprob: -3.7554092407226562
    9. '\' → logprob: -4.005409240722656
    10. '' → logprob: -4.005409240722656

Token 21: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.138987198472023
    2. '[' → logprob: -2.5139873027801514
    3. 's' → logprob: -3.3889873027801514
    4. ' =' → logprob: -5.263987064361572
    5. '[]' → logprob: -5.763987064361572
    6. '=' → logprob: -6.513987064361572
    7. '_spaces' → logprob: -7.013987064361572
    8. '_space' → logprob: -7.638987064361572
    9. '_positions' → logprob: -7.638987064361572
    10. '_ids' → logprob: -7.888987064361572

Token 22: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.38286298513412476
    2. '[' → logprob: -1.3828630447387695
    3. ' []' → logprob: -3.3828630447387695
    4. 'set' → logprob: -4.1328630447387695
    5. ' set' → logprob: -4.8828630447387695
    6. '[]' → logprob: -5.5078630447387695
    7. ' ' → logprob: -5.6328630447387695
    8. '0' → logprob: -6.7578630447387695
    9. ' [[' → logprob: -7.7578630447387695
    10. '[int' → logprob: -9.13286304473877

Token 23: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004165064077824354
    2. '0' → logprob: -5.504165172576904
    3. ' False' → logprob: -9.504164695739746
    4. ']' → logprob: -11.629164695739746
    5. '[' → logprob: -13.754164695739746
    6. 'True' → logprob: -13.879164695739746
    7. 'F' → logprob: -14.504164695739746
    8. '(False' → logprob: -15.004164695739746
    9. '[]' → logprob: -15.879164695739746
    10. '-F' → logprob: -15.879164695739746

Token 24: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003704235190525651
    2. ']*' → logprob: -6.503704071044922
    3. ' ]' → logprob: -6.628704071044922
    4. ' for' → logprob: -7.128704071044922
    5. ']*(' → logprob: -10.503704071044922
    6. ',' → logprob: -10.878704071044922
    7. 'for' → logprob: -11.253704071044922
    8. ')' → logprob: -11.753704071044922
    9. ')]' → logprob: -12.003704071044922
    10. ']+' → logprob: -14.128704071044922

Token 25: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10045693814754486
    2. 'M' → logprob: -2.350456953048706
    3. '100' → logprob: -8.600457191467285
    4. '101' → logprob: -10.100457191467285
    5. ' N' → logprob: -11.600457191467285
    6. '10' → logprob: -12.100457191467285
    7. ' M' → logprob: -12.975457191467285
    8. '2' → logprob: -13.725457191467285
    9. 'max' → logprob: -13.850457191467285
    10. '200' → logprob: -14.100457191467285

Token 26: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760955810546875
    2. ')' → logprob: -0.8260955810546875
    3. '+)' → logprob: -9.701095581054688
    4. ' +' → logprob: -9.951095581054688
    5. ' )' → logprob: -10.576095581054688
    6. '*' → logprob: -11.201095581054688
    7. '-' → logprob: -12.951095581054688
    8. '))' → logprob: -13.951095581054688
    9. ')+' → logprob: -14.076095581054688
    10. '<|end|>' → logprob: -14.326095581054688

Token 27: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.9424725148128346e-05
    2. ' ' → logprob: -10.375049591064453
    3. '2' → logprob: -11.000049591064453
    4. '10' → logprob: -14.250049591064453
    5. 'M' → logprob: -15.000049591064453
    6. '3' → logprob: -16.000049591064453
    7. '5' → logprob: -16.000049591064453
    8. '7' → logprob: -16.125049591064453
    9. ' M' → logprob: -17.437549591064453
    10. '```' → logprob: -17.437549591064453

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. ' )' → logprob: -11.250014305114746
    3. ')
' → logprob: -15.000014305114746
    4. ']' → logprob: -15.750014305114746
    5. '[' → logprob: -16.000015258789062
    6. '```' → logprob: -16.000015258789062
    7. '`)' → logprob: -16.250015258789062
    8. '),' → logprob: -16.375015258789062
    9. '}' → logprob: -16.500015258789062
    10. '+' → logprob: -16.750015258789062

Token 29: 'events' (ID: 25303)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.032475318759679794
    2. ' for' → logprob: -3.657475233078003
    3. ' 
' → logprob: -5.657475471496582
    4. '\n' → logprob: -7.032475471496582
    5. '
' → logprob: -7.407475471496582
    6. '```' → logprob: -8.157475471496582
    7. 'result' → logprob: -9.282475471496582
    8. '\' → logprob: -9.282475471496582
    9. '[' → logprob: -9.407475471496582
    10. 'covered' → logprob: -9.532475471496582

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010899257846176624
    2. '=' → logprob: -4.635899066925049
    3. '[' → logprob: -7.760899066925049
    4. ' ' → logprob: -8.635899543762207
    5. '[:]' → logprob: -8.635899543762207
    6. '[]' → logprob: -8.885899543762207
    7. '=[]' → logprob: -9.510899543762207
    8. '<|end|>' → logprob: -10.010899543762207
    9. '.' → logprob: -10.510899543762207
    10. '  ' → logprob: -10.760899543762207

Token 31: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0037405795883387327
    2. '[' → logprob: -5.8787407875061035
    3. ' []' → logprob: -7.0037407875061035
    4. '[]}' → logprob: -11.378740310668945
    5. '[]
' → logprob: -11.753740310668945
    6. '[]

' → logprob: -13.253740310668945
    7. '{}' → logprob: -13.878740310668945
    8. '[],' → logprob: -14.003740310668945
    9. '[]>' → logprob: -14.378740310668945
    10. '[int' → logprob: -14.378740310668945

Token 32: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.306790828704834
    2. ' for' → logprob: -2.181790828704834
    3. 'for' → logprob: -2.181790828704834
    4. ']' → logprob: -3.306790828704834
    5. ')]' → logprob: -6.806790828704834
    6. ',' → logprob: -7.306790828704834
    7. '<|end|>' → logprob: -10.556791305541992
    8. '	for' → logprob: -11.306791305541992
    9. ' ]' → logprob: -11.806791305541992
    10. ' ' → logprob: -11.931791305541992

Token 33: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28295618295669556
    2. ' _' → logprob: -2.157956123352051
    3. '(' → logprob: -2.282956123352051
    4. '<|end|>' → logprob: -4.532956123352051
    5. ' range' → logprob: -5.282956123352051
    6. ' ' → logprob: -5.657956123352051
    7. ' in' → logprob: -5.657956123352051
    8. ' (' → logprob: -6.532956123352051
    9. '<|end|>' → logprob: -7.032956123352051
    10. '()' → logprob: -7.282956123352051

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6622055172920227
    2. 'in' → logprob: -0.7872055172920227
    3. 'range' → logprob: -3.787205457687378
    4. '_' → logprob: -5.787205696105957
    5. ' range' → logprob: -5.912205696105957
    6. 'i' → logprob: -7.537205696105957
    7. ' i' → logprob: -9.037205696105957
    8. '(range' → logprob: -10.662205696105957
    9. ' ' → logprob: -11.037205696105957
    10. '(' → logprob: -11.287205696105957

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326544284820557
    2. ' range' → logprob: -1.3132654428482056
    3. '(range' → logprob: -12.563265800476074
    4. '(N' → logprob: -16.438264846801758
    5. '	range' → logprob: -16.813264846801758
    6. ')' → logprob: -17.563264846801758
    7. '   ' → logprob: -17.688264846801758
    8. '_range' → logprob: -18.188264846801758
    9. ' ' → logprob: -18.563264846801758
    10. 'rang' → logprob: -19.313264846801758

Token 36: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001116880914196372
    2. '(M' → logprob: -7.126116752624512
    3. '(' → logprob: -8.126116752624512
    4. '(n' → logprob: -11.626116752624512
    5. '((' → logprob: -12.626116752624512
    6. ' (' → logprob: -13.501116752624512
    7. 'N' → logprob: -13.626116752624512
    8. '(int' → logprob: -14.376116752624512
    9. ')' → logprob: -14.626116752624512
    10. '(i' → logprob: -15.876116752624512

Token 37: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.5716304410016164e-05
    2. ' +' → logprob: -10.375035285949707
    3. ')]' → logprob: -12.500035285949707
    4. '+
' → logprob: -14.750035285949707
    5. '2' → logprob: -16.000036239624023
    6. ')])' → logprob: -17.125036239624023
    7. ')' → logprob: -17.375036239624023
    8. '1' → logprob: -17.500036239624023
    9. '＋' → logprob: -17.625036239624023
    10. '+

' → logprob: -17.750036239624023

Token 38: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38724949955940247
    2. '2' → logprob: -1.13724946975708
    3. ' ' → logprob: -8.512249946594238
    4. '3' → logprob: -8.762249946594238
    5. '+' → logprob: -12.074749946594238
    6. ')' → logprob: -13.074749946594238
    7. '   ' → logprob: -13.137249946594238
    8. '(' → logprob: -13.324749946594238
    9. '])' → logprob: -13.512249946594238
    10. '5' → logprob: -13.637249946594238

Token 39: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12839406728744507
    2. ')' → logprob: -2.37839412689209
    3. ']' → logprob: -3.75339412689209
    4. '])' → logprob: -5.50339412689209
    5. ')])' → logprob: -8.62839412689209
    6. '])]' → logprob: -9.37839412689209
    7. ' )' → logprob: -11.62839412689209
    8. '）' → logprob: -12.87839412689209
    9. ' ]' → logprob: -13.62839412689209
    10. '))' → logprob: -13.87839412689209

Token 40: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27313485741615295
    2. '
' → logprob: -2.02313494682312
    3. ' for' → logprob: -2.89813494682312
    4. '\n' → logprob: -3.52313494682312
    5. ' 
' → logprob: -4.773134708404541
    6. '<|end|>' → logprob: -5.023134708404541
    7. ' ' → logprob: -6.273134708404541
    8. '\' → logprob: -6.398134708404541
    9. '[' → logprob: -7.398134708404541
    10. '```' → logprob: -7.523134708404541

Token 41: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6399781703948975
    2. ' _' → logprob: -0.7649781703948975
    3. '_' → logprob: -5.514978408813477
    4. ' ' → logprob: -5.764978408813477
    5. 'i' → logprob: -9.014978408813477
    6. ' range' → logprob: -10.514978408813477
    7. ' ' → logprob: -11.514978408813477
    8. ' ‌' → logprob: -11.514978408813477
    9. '_i' → logprob: -12.014978408813477
    10. ' space' → logprob: -12.389978408813477

Token 42: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3897806406021118
    2. ' in' → logprob: -1.1397806406021118
    3. ' ' → logprob: -6.139780521392822
    4. 'i' → logprob: -7.514780521392822
    5. ' i' → logprob: -9.51478099822998
    6. 'n' → logprob: -9.76478099822998
    7. '  ' → logprob: -10.38978099822998
    8. '	in' → logprob: -11.88978099822998
    9. '<|end|>' → logprob: -12.01478099822998
    10. 'range' → logprob: -12.26478099822998

Token 43: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141538977622986
    2. ' range' → logprob: -1.7014154195785522
    3. '(range' → logprob: -13.951415061950684
    4. 'ran' → logprob: -15.201415061950684
    5. '	range' → logprob: -15.451415061950684
    6. 'r' → logprob: -15.576415061950684
    7. 'rang' → logprob: -15.701415061950684
    8. ' ' → logprob: -16.201416015625
    9. ' ran' → logprob: -16.201416015625
    10. '```' → logprob: -16.826416015625

Token 44: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5919907689094543
    2. ' M' → logprob: -1.0919907093048096
    3. '(M' → logprob: -2.5919907093048096
    4. 'M' → logprob: -3.9669907093048096
    5. ' (' → logprob: -4.091990947723389
    6. ' ' → logprob: -7.466990947723389
    7. '()' → logprob: -10.34199047088623
    8. '(int' → logprob: -10.84199047088623
    9. 'range' → logprob: -10.96699047088623
    10. '(
' → logprob: -10.96699047088623

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02597907930612564
    2. ' ):' → logprob: -4.275979042053223
    3. ')' → logprob: -4.525979042053223
    4. ' )' → logprob: -7.650979042053223
    5. ',' → logprob: -7.900979042053223
    6. ' ,' → logprob: -10.400979042053223
    7. '):
' → logprob: -10.650979042053223
    8. ':' → logprob: -12.025979042053223
    9. '),' → logprob: -12.025979042053223
    10. ' ' → logprob: -12.650979042053223

Token 46: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.46270161867141724
    2. ' l' → logprob: -1.5877015590667725
    3. 'a' → logprob: -2.5877015590667725
    4. 'L' → logprob: -3.5877015590667725
    5. ' L' → logprob: -3.7127015590667725
    6. ' a' → logprob: -4.337701797485352
    7. 's' → logprob: -4.587701797485352
    8. 'start' → logprob: -5.212701797485352
    9. ' s' → logprob: -5.462701797485352
    10. ' start' → logprob: -6.087701797485352

Token 47: ' a' (ID: 261)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.21091823279857635
    2. 'a' (adapté à ' a') → logprob: -2.5859181880950928
    3. 'L' → logprob: -3.0859181880950928
    4. 's' → logprob: -3.4609181880950928
    5. 'u' → logprob: -4.585918426513672
    6. 'x' → logprob: -4.835918426513672
    7. 'start' → logprob: -4.835918426513672
    8. ' l' → logprob: -5.835918426513672
    9. 'line' → logprob: -5.960918426513672
    10. ' L' → logprob: -6.960918426513672

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0431257039308548
    2. ' ,' → logprob: -3.168125629425049
    3. ',b' → logprob: -9.543126106262207
    4. ' ' → logprob: -10.168126106262207
    5. ',a' → logprob: -12.418126106262207
    6. '<|end|>' → logprob: -13.293126106262207
    7. ',p' → logprob: -13.543126106262207
    8. ',user' → logprob: -13.668126106262207
    9. '  ' → logprob: -14.418126106262207
    10. ',i' → logprob: -14.543126106262207

Token 49: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16024382412433624
    2. ' b' → logprob: -1.9102438688278198
    3. ' ' → logprob: -10.91024398803711
    4. '_' → logprob: -14.16024398803711
    5. 'd' → logprob: -15.53524398803711
    6. 'space' → logprob: -16.28524398803711
    7. '_b' → logprob: -16.28524398803711
    8. '	b' → logprob: -16.28524398803711
    9. ' ' → logprob: -17.16024398803711
    10. '<|end|>' → logprob: -17.28524398803711

Token 50: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6343632340431213
    2. '=' → logprob: -0.7593632340431213
    3. ',' → logprob: -6.509363174438477
    4. ' ' → logprob: -8.384363174438477
    5. ' ,' → logprob: -10.759363174438477
    6. ')' → logprob: -12.009363174438477
    7. '<|end|>' → logprob: -12.509363174438477
    8. '=int' → logprob: -12.634363174438477
    9. '  ' → logprob: -12.759363174438477
    10. ' =
' → logprob: -13.759363174438477

Token 51: ' x' (ID: 1215)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.024239545688033104
    2. 'k' → logprob: -4.774239540100098
    3. '1' → logprob: -5.024239540100098
    4. ' c' → logprob: -5.024239540100098
    5. '=' → logprob: -7.274239540100098
    6. ' ' → logprob: -7.649239540100098
    7. 'd' → logprob: -8.399239540100098
    8. ' k' → logprob: -8.774239540100098
    9. 'v' → logprob: -9.274239540100098
    10. 'x' → logprob: -9.524239540100098

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931968331336975
    2. ' =' → logprob: -0.6931968331336975
    3. ',' → logprob: -10.318197250366211
    4. '=line' → logprob: -12.193197250366211
    5. '=int' → logprob: -13.068197250366211
    6. '=input' → logprob: -13.193197250366211
    7. ')' → logprob: -13.693197250366211
    8. ',y' → logprob: -14.068197250366211
    9. '=sys' → logprob: -14.068197250366211
    10. ')=' → logprob: -14.443197250366211

Token 53: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.012516011483967304
    2. 'map' → logprob: -4.387516021728516
    3. ' ' → logprob: -12.887516021728516
    4. '	map' → logprob: -12.887516021728516
    5. ' ' → logprob: -14.387516021728516
    6. ' input' → logprob: -15.512516021728516
    7. ' ma' → logprob: -15.637516021728516
    8. ' list' → logprob: -15.887516021728516
    9. '  ' → logprob: -16.012516021728516
    10. '(map' → logprob: -16.387516021728516

Token 54: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00038443657103925943
    2. '(' → logprob: -8.000384330749512
    3. '(str' → logprob: -10.875384330749512
    4. '(lambda' → logprob: -11.500384330749512
    5. '(input' → logprob: -11.875384330749512
    6. '(in' → logprob: -12.125384330749512
    7. ' (' → logprob: -13.000384330749512
    8. '<int' → logprob: -13.250384330749512
    9. '[int' → logprob: -13.875384330749512
    10. '=int' → logprob: -14.750384330749512

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016609374433755875
    2. ',input' → logprob: -4.141609191894531
    3. '(' → logprob: -8.141609191894531
    4. ' ,' → logprob: -9.141609191894531
    5. ',int' → logprob: -9.141609191894531
    6. '(input' → logprob: -9.891609191894531
    7. '(),' → logprob: -11.891609191894531
    8. '```' → logprob: -12.766609191894531
    9. ' (' → logprob: -13.516609191894531
    10. ',(' → logprob: -13.516609191894531

Token 56: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47407791018486023
    2. ' input' → logprob: -0.9740779399871826
    3. '(input' → logprob: -15.349078178405762
    4. '=input' → logprob: -15.349078178405762
    5. '	input' → logprob: -16.099077224731445
    6. ' ' → logprob: -16.349077224731445
    7. ',input' → logprob: -16.474077224731445
    8. '[input' → logprob: -16.724077224731445
    9. ')' → logprob: -16.849077224731445
    10. '_input' → logprob: -17.224077224731445

Token 57: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002777822664938867
    2. '()' → logprob: -8.250277519226074
    3. ')' → logprob: -11.625277519226074
    4. '(' → logprob: -13.125277519226074
    5. '.' → logprob: -13.375277519226074
    6. '())' → logprob: -13.750277519226074
    7. '.split' → logprob: -14.125277519226074
    8. ' ().' → logprob: -14.250277519226074
    9. '.readline' → logprob: -14.625277519226074
    10. '();' → logprob: -15.250277519226074

Token 58: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. ' split' → logprob: -14.500001907348633
    3. 'spl' → logprob: -14.625001907348633
    4. 'strip' → logprob: -15.500001907348633
    5. '(split' → logprob: -15.750001907348633
    6. ')' → logprob: -16.625001907348633
    7. 'rstrip' → logprob: -16.875001907348633
    8. 'plit' → logprob: -17.750001907348633
    9. ' ' → logprob: -18.750001907348633
    10. 's' → logprob: -18.750001907348633

Token 59: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.941161776310764e-05
    2. '()' → logprob: -10.875039100646973
    3. '())' → logprob: -11.750039100646973
    4. ')
' → logprob: -12.125039100646973
    5. ' )' → logprob: -13.250039100646973
    6. '(' → logprob: -13.625039100646973
    7. ')`' → logprob: -13.875039100646973
    8. '))' → logprob: -14.000039100646973
    9. '),' → logprob: -14.375039100646973
    10. '`)' → logprob: -14.625039100646973

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034595951437950134
    2. 'events' → logprob: -3.7845959663391113
    3. '<|end|>' → logprob: -5.409595966339111
    4. ' events' → logprob: -5.659595966339111
    5. '
' → logprob: -6.784595966339111
    6. ')' → logprob: -6.909595966339111
    7. ' ' → logprob: -8.409595489501953
    8. '    
' → logprob: -8.659595489501953
    9. '```' → logprob: -9.284595489501953
    10. '  ' → logprob: -9.284595489501953

Token 61: ' for' (ID: 395)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.1890706568956375
    2. ' events' → logprob: -1.939070701599121
    3. '
' → logprob: -3.814070701599121
    4. '   ' → logprob: -5.814070701599121
    5. '(events' → logprob: -6.314070701599121
    6. '_events' → logprob: -7.814070701599121
    7. '.events' → logprob: -8.439070701599121
    8. ')' → logprob: -8.814070701599121
    9. '[' → logprob: -8.939070701599121
    10. '```' → logprob: -9.064070701599121

Token 62: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.028894765302538872
    2. 'i' → logprob: -3.9038946628570557
    3. ' j' → logprob: -5.403894901275635
    4. ' d' → logprob: -7.028894901275635
    5. ' ' → logprob: -7.153894901275635
    6. ' _' → logprob: -7.528894901275635
    7. ' y' → logprob: -8.028894424438477
    8. ' k' → logprob: -8.278894424438477
    9. 'j' → logprob: -8.403894424438477
    10. ' v' → logprob: -8.528894424438477

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05900796130299568
    2. 'in' → logprob: -2.9340078830718994
    3. 'range' → logprob: -5.8090081214904785
    4. ' ' → logprob: -7.0590081214904785
    5. ' range' → logprob: -9.68400764465332
    6. 'a' → logprob: -9.93400764465332
    7. '	in' → logprob: -10.55900764465332
    8. 'space' → logprob: -10.93400764465332
    9. '   ' → logprob: -11.18400764465332
    10. ')' → logprob: -11.18400764465332

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003090963000431657
    2. 'range' → logprob: -5.878090858459473
    3. ' ' → logprob: -8.753090858459473
    4. ' ran' → logprob: -9.253090858459473
    5. '	range' → logprob: -10.878090858459473
    6. '(range' → logprob: -12.378090858459473
    7. ' xrange' → logprob: -12.378090858459473
    8. ' ra' → logprob: -13.253090858459473
    9. ' rang' → logprob: -13.628090858459473
    10. 'rang' → logprob: -14.878090858459473

Token 65: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0013982143718749285
    2. 'a' → logprob: -6.876398086547852
    3. '(' → logprob: -8.001398086547852
    4. ' a' → logprob: -10.626398086547852
    5. ' (' → logprob: -12.751398086547852
    6. '(i' → logprob: -14.001398086547852
    7. '(max' → logprob: -14.501398086547852
    8. '	a' → logprob: -14.626398086547852
    9. '(b' → logprob: -14.751398086547852
    10. '(x' → logprob: -15.251398086547852

Token 66: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09141950309276581
    2. ',a' → logprob: -3.2164194583892822
    3. ' ,' → logprob: -3.8414194583892822
    4. ',b' → logprob: -4.216419696807861
    5. '+' → logprob: -4.841419696807861
    6. ' +' → logprob: -6.591419696807861
    7. '):' → logprob: -6.966419696807861
    8. '+a' → logprob: -8.341419219970703
    9. 'a' → logprob: -8.591419219970703
    10. '+b' → logprob: -9.091419219970703

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014885544078424573
    2. ' ' → logprob: -7.00148868560791
    3. 'b' → logprob: -7.75148868560791
    4. '2' → logprob: -10.37648868560791
    5. ' b' → logprob: -10.37648868560791
    6. '(' → logprob: -11.00148868560791
    7. 'a' → logprob: -11.00148868560791
    8. '(b' → logprob: -11.37648868560791
    9. ' (' → logprob: -11.75148868560791
    10. '0' → logprob: -12.12648868560791

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07950477302074432
    2. ' ):' → logprob: -2.5795047283172607
    3. ' ,' → logprob: -8.45450496673584
    4. ')' → logprob: -9.07950496673584
    5. ',' → logprob: -9.07950496673584
    6. '):
' → logprob: -9.32950496673584
    7. ' )' → logprob: -9.82950496673584
    8. ' ' → logprob: -11.07950496673584
    9. ' ):
' → logprob: -11.82950496673584
    10. ':' → logprob: -12.82950496673584

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12154174596071243
    2. '   ' → logprob: -2.496541738510132
    3. '<|end|>' → logprob: -3.746541738510132
    4. ':' → logprob: -5.996541976928711
    5. ' events' → logprob: -7.121541976928711
    6. '
' → logprob: -7.246541976928711
    7. ' ' → logprob: -7.371541976928711
    8. 'events' → logprob: -7.496541976928711
    9. ':
' → logprob: -7.621541976928711
    10. '<|end|>' → logprob: -7.746541976928711

Token 70: ' start' (ID: 1604)
  Prédit: ' events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' events' → logprob: -0.655075192451477
    2. 'events' → logprob: -1.155075192451477
    3. ' covered' → logprob: -2.0300750732421875
    4. '   ' → logprob: -4.1550750732421875
    5. 'covered' → logprob: -4.7800750732421875
    6. ')' → logprob: -6.2800750732421875
    7. ' ' → logprob: -6.5300750732421875
    8. '<|end|>' → logprob: -6.6550750732421875
    9. '(events' → logprob: -6.9050750732421875
    10. '```' → logprob: -7.2800750732421875

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07045140117406845
    2. '=' → logprob: -2.695451498031616
    3. ',' → logprob: -7.820451259613037
    4. ' ' → logprob: -10.570451736450195
    5. '_idx' → logprob: -10.695451736450195
    6. '=start' → logprob: -11.195451736450195
    7. '   ' → logprob: -12.445451736450195
    8. '=a' → logprob: -12.445451736450195
    9. 's' → logprob: -12.570451736450195
    10. '_index' → logprob: -12.695451736450195

Token 72: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038205813616514206
    2. ' a' → logprob: -3.288205862045288
    3. 'b' → logprob: -9.288206100463867
    4. 'max' → logprob: -10.288206100463867
    5. ' max' → logprob: -10.538206100463867
    6. ' b' → logprob: -12.663206100463867
    7. '(a' → logprob: -13.038206100463867
    8. ' ' → logprob: -13.038206100463867
    9. '	a' → logprob: -14.038206100463867
    10. '   ' → logprob: -14.163206100463867

Token 73: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5012955665588379
    2. '-' → logprob: -1.126295566558838
    3. '-i' → logprob: -2.751295566558838
    4. '+i' → logprob: -5.376295566558838
    5. '+' → logprob: -7.001295566558838
    6. '-a' → logprob: -8.12629508972168
    7. '-x' → logprob: -9.00129508972168
    8. ' +' → logprob: -9.12629508972168
    9. '-s' → logprob: -10.12629508972168
    10. '-n' → logprob: -11.50129508972168

Token 74: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024019356351345778
    2. ' i' → logprob: -6.502401828765869
    3. '-' → logprob: -8.377402305603027
    4. 'a' → logprob: -8.502402305603027
    5. '(i' → logprob: -8.877402305603027
    6. '_i' → logprob: -9.002402305603027
    7. '-i' → logprob: -9.752402305603027
    8. ' -' → logprob: -10.377402305603027
    9. ' (' → logprob: -10.752402305603027
    10. '(' → logprob: -10.877402305603027

Token 75: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07014328241348267
    2. ' -' → logprob: -3.445143222808838
    3. '
' → logprob: -4.320143222808838
    4. '-a' → logprob: -4.570143222808838
    5. '<|end|>' → logprob: -5.320143222808838
    6. 'a' → logprob: -6.070143222808838
    7. '-N' → logprob: -6.195143222808838
    8. '-i' → logprob: -7.070143222808838
    9. 'N' → logprob: -7.445143222808838
    10. '-n' → logprob: -7.820143222808838

Token 76: '       ' (ID: 309)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06475429236888885
    2. '<|end|>' → logprob: -3.4397542476654053
    3. ' -' → logprob: -4.064754486083984
    4. '-a' → logprob: -5.314754486083984
    5. '
' → logprob: -5.689754486083984
    6. '-n' → logprob: -6.564754486083984
    7. ' ' → logprob: -7.189754486083984
    8. 'a' → logprob: -7.939754486083984
    9. '   ' → logprob: -8.314754486083984
    10. '+' → logprob: -8.314754486083984

Token 77: ' end' (ID: 1268)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47586897015571594
    2. 'a' → logprob: -1.3508689403533936
    3. '-a' → logprob: -2.8508689403533936
    4. 'if' → logprob: -4.100869178771973
    5. ' -' → logprob: -4.225869178771973
    6. 'start' → logprob: -4.350869178771973
    7. ' if' → logprob: -5.725869178771973
    8. ' a' → logprob: -6.350869178771973
    9. 's' → logprob: -6.475869178771973
    10. ' ' → logprob: -6.475869178771973

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04304760321974754
    2. '=' → logprob: -3.1680476665496826
    3. ' ' → logprob: -10.293047904968262
    4. '<|end|>' → logprob: -11.918047904968262
    5. ')' → logprob: -13.543047904968262
    6. ' =
' → logprob: -13.918047904968262
    7. ',' → logprob: -14.043047904968262
    8. '  ' → logprob: -14.543047904968262
    9. '```' → logprob: -14.543047904968262
    10. '+' → logprob: -14.543047904968262

Token 79: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7949702739715576
    2. ' a' → logprob: -1.0449702739715576
    3. 'b' → logprob: -2.4199702739715576
    4. ' b' → logprob: -2.6699702739715576
    5. 'start' → logprob: -4.419970512390137
    6. ' min' → logprob: -4.794970512390137
    7. 'N' → logprob: -5.169970512390137
    8. ' start' → logprob: -5.419970512390137
    9. ' ' → logprob: -5.794970512390137
    10. ' N' → logprob: -6.169970512390137

Token 80: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4924508035182953
    2. '-' → logprob: -1.6174508333206177
    3. ' +' → logprob: -1.9924508333206177
    4. ' -' → logprob: -3.117450714111328
    5. '+i' → logprob: -5.242450714111328
    6. '<|end|>' → logprob: -6.367450714111328
    7. ' ' → logprob: -6.742450714111328
    8. '+x' → logprob: -7.742450714111328
    9. '-i' → logprob: -7.742450714111328
    10. '+a' → logprob: -8.992450714111328

Token 81: ' x' (ID: 1215)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2734011709690094
    2. 'x' → logprob: -2.2734012603759766
    3. 'a' → logprob: -2.7734012603759766
    4. 'i' → logprob: -3.2734012603759766
    5. 'M' → logprob: -4.648401260375977
    6. '(N' → logprob: -4.898401260375977
    7. ' N' → logprob: -5.398401260375977
    8. '1' → logprob: -5.773401260375977
    9. ' (' → logprob: -5.898401260375977
    10. ' ' → logprob: -6.148401260375977

Token 82: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07262268662452698
    2. '<|end|>' → logprob: -3.447622776031494
    3. ' +' → logprob: -3.822622776031494
    4. '
' → logprob: -4.947622776031494
    5. ' ' → logprob: -5.947622776031494
    6. '+
' → logprob: -6.322622776031494
    7. '-' → logprob: -6.822622776031494
    8. 'i' → logprob: -7.072622776031494
    9. '+i' → logprob: -7.697622776031494
    10. ' -' → logprob: -7.947622776031494

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3965793550014496
    2. 'i' → logprob: -1.271579384803772
    3. ' ' → logprob: -3.6465792655944824
    4. ' i' → logprob: -5.021579265594482
    5. 'a' → logprob: -5.521579265594482
    6. 'N' → logprob: -5.646579265594482
    7. ' -' → logprob: -6.271579265594482
    8. 'x' → logprob: -6.271579265594482
    9. '+' → logprob: -7.271579265594482
    10. '-' → logprob: -7.771579265594482

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12050677090883255
    2. 'i' → logprob: -2.245506763458252
    3. 'x' → logprob: -5.745506763458252
    4. 'a' → logprob: -5.995506763458252
    5. 'N' → logprob: -6.870506763458252
    6. '2' → logprob: -7.745506763458252
    7. '+' → logprob: -8.99550724029541
    8. ' ' → logprob: -9.37050724029541
    9. 'M' → logprob: -9.62050724029541
    10. '0' → logprob: -9.74550724029541

Token 85: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11853432655334473
    2. '<|end|>' → logprob: -2.6185343265533447
    3. ']' → logprob: -3.6185343265533447
    4. '[' → logprob: -4.868534088134766
    5. ')' → logprob: -6.868534088134766
    6. '[]' → logprob: -7.368534088134766
    7. '        
' → logprob: -7.493534088134766
    8. '   ' → logprob: -7.743534088134766
    9. '<|end|>' → logprob: -8.118534088134766
    10. ' ' → logprob: -8.243534088134766

Token 87: ' events' (ID: 6124)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6458317637443542
    2. ']' → logprob: -1.895831823348999
    3. '<|end|>' → logprob: -2.145831823348999
    4. ')' → logprob: -2.895831823348999
    5. '[' → logprob: -3.395831823348999
    6. '   ' → logprob: -3.645831823348999
    7. 'events' (adapté à ' events') → logprob: -3.770831823348999
    8. '
' → logprob: -4.27083158493042
    9. ' events' → logprob: -4.77083158493042
    10. ')
' → logprob: -5.02083158493042

Token 88: '[a' (ID: 32035)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.004796899855136871
    2. '[' → logprob: -5.379796981811523
    3. '[end' → logprob: -8.754796981811523
    4. '[s' → logprob: -12.129796981811523
    5. '[a' → logprob: -12.254796981811523
    6. 'start' → logprob: -13.129796981811523
    7. '[i' → logprob: -13.504796981811523
    8. '[b' → logprob: -13.879796981811523
    9. '][' → logprob: -14.004796981811523
    10. ' [' → logprob: -14.129796981811523

Token 89: '+i' (ID: 49691)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05953564867377281
    2. '][' → logprob: -2.9345357418060303
    3. ']' → logprob: -5.809535503387451
    4. '[' → logprob: -7.184535503387451
    5. '[start' → logprob: -8.43453598022461
    6. '.append' → logprob: -9.05953598022461
    7. '+' → logprob: -9.05953598022461
    8. '-' → logprob: -9.05953598022461
    9. ''].' → logprob: -9.55953598022461
    10. '[i' → logprob: -10.05953598022461

Token 90: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00298328697681427
    2. ']' → logprob: -5.877983093261719
    3. '][' → logprob: -9.502983093261719
    4. '.append' → logprob: -10.002983093261719
    5. ' ].' → logprob: -10.377983093261719
    6. '[' → logprob: -11.502983093261719
    7. '.' → logprob: -12.377983093261719
    8. ' ' → logprob: -12.502983093261719
    9. 'append' → logprob: -13.377983093261719
    10. ').' → logprob: -13.502983093261719

Token 91: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.1008713702030946e-06
    2. '.append' → logprob: -13.875001907348633
    3. ' append' → logprob: -14.250001907348633
    4. 'appen' → logprob: -14.625001907348633
    5. 'Append' → logprob: -17.375001907348633
    6. '_append' → logprob: -18.125001907348633
    7. '	append' → logprob: -18.125001907348633
    8. 'insert' → logprob: -18.375001907348633
    9. 'extend' → logprob: -18.375001907348633
    10. 'app' → logprob: -18.750001907348633

Token 92: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0967877060174942
    2. '(' → logprob: -2.721787691116333
    3. '(end' → logprob: -3.721787691116333
    4. '(start' → logprob: -6.346787929534912
    5. '([' → logprob: -7.971787929534912
    6. '(b' → logprob: -9.971787452697754
    7. '(
' → logprob: -10.096787452697754
    8. ' (' → logprob: -10.596787452697754
    9. '(range' → logprob: -11.346787452697754
    10. '(s' → logprob: -11.471787452697754

Token 93: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0014625000767409801
    2. ' start' → logprob: -7.501462459564209
    3. 'b' → logprob: -7.751462459564209
    4. 'end' → logprob: -8.251462936401367
    5. '(start' → logprob: -8.751462936401367
    6. ')' → logprob: -11.251462936401367
    7. '   ' → logprob: -11.501462936401367
    8. '(' → logprob: -12.001462936401367
    9. '[start' → logprob: -12.376462936401367
    10. '1' → logprob: -12.626462936401367

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030349940061569214
    2. ',end' → logprob: -6.378035068511963
    3. ' ,' → logprob: -6.628035068511963
    4. ')' → logprob: -13.378034591674805
    5. 'end' → logprob: -13.503034591674805
    6. ' ' → logprob: -14.003034591674805
    7. '<|end|>' → logprob: -14.003034591674805
    8. ',b' → logprob: -14.503034591674805
    9. '),' → logprob: -14.503034591674805
    10. ',start' → logprob: -15.378034591674805

Token 95: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.07003168761730194
    2. ' end' → logprob: -2.6950316429138184
    3. ' ' → logprob: -10.945032119750977
    4. '1' → logprob: -11.070032119750977
    5. '+' → logprob: -11.695032119750977
    6. '(end' → logprob: -11.695032119750977
    7. ')' → logprob: -11.695032119750977
    8. '   ' → logprob: -12.070032119750977
    9. '-' → logprob: -12.070032119750977
    10. '-end' → logprob: -12.195032119750977

Token 96: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.012646201066672802
    2. ')' → logprob: -4.387646198272705
    3. '))
' → logprob: -9.512646675109863
    4. ' ))' → logprob: -10.512646675109863
    5. ')))' → logprob: -10.762646675109863
    6. ',' → logprob: -12.262646675109863
    7. '),' → logprob: -12.762646675109863
    8. ' ' → logprob: -13.137646675109863
    9. ' )' → logprob: -13.262646675109863
    10. '   ' → logprob: -14.387646675109863

Token 97: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012391914613544941
    2. ' for' → logprob: -4.637392044067383
    3. '```' → logprob: -7.137392044067383
    4. '   ' → logprob: -7.512392044067383
    5. '
' → logprob: -7.637392044067383
    6. ')' → logprob: -7.887392044067383
    7. '#' → logprob: -8.637392044067383
    8. '<|end|>' → logprob: -9.887392044067383
    9. ' 
' → logprob: -10.137392044067383
    10. '+' → logprob: -10.262392044067383

Token 98: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2098838090896606
    2. 's' → logprob: -1.2098838090896606
    3. '=' → logprob: -1.4598838090896606
    4. 'ed' → logprob: -2.084883689880371
    5. ' =' → logprob: -3.584883689880371
    6. '(' → logprob: -4.209883689880371
    7. ' ' → logprob: -7.209883689880371
    8. 'ing' → logprob: -7.709883689880371
    9. '[' → logprob: -7.959883689880371
    10. 'Covered' → logprob: -7.959883689880371

Token 99: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01820835843682289
    2. ' ' → logprob: -4.3932085037231445
    3. '[' → logprob: -5.6432085037231445
    4. ' [' → logprob: -6.2682085037231445
    5. '[N' → logprob: -8.643208503723145
    6. 'N' → logprob: -10.518208503723145
    7. ' N' → logprob: -10.643208503723145
    8. 'sum' → logprob: -12.643208503723145
    9. '1' → logprob: -12.768208503723145
    10. '[n' → logprob: -12.893208503723145

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015866482630372047
    2. '[' → logprob: -4.265866279602051
    3. '[N' → logprob: -7.140866279602051
    4. 'N' → logprob: -7.515866279602051
    5. 'covered' → logprob: -9.01586627960205
    6. 'sum' → logprob: -9.51586627960205
    7. ' ' → logprob: -9.51586627960205
    8. ' [' → logprob: -10.01586627960205
    9. 'len' → logprob: -10.89086627960205
    10. '[n' → logprob: -12.14086627960205

Token 101: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002172385808080435
    2. 'for' → logprob: -7.002172470092773
    3. '\n' → logprob: -7.252172470092773
    4. ' for' → logprob: -8.502172470092773
    5. '<|end|>' → logprob: -8.752172470092773
    6. '
' → logprob: -9.252172470092773
    7. '

' → logprob: -9.877172470092773
    8. ' 
' → logprob: -11.002172470092773
    9. '' → logprob: -11.127172470092773
    10. '  
' → logprob: -12.627172470092773

Token 102: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002432620618492365
    2. ' for' → logprob: -6.377432823181152
    3. '
' → logprob: -7.502432823181152
    4. '<|end|>' → logprob: -9.002432823181152
    5. 'range' → logprob: -10.002432823181152
    6. '```' → logprob: -12.502432823181152
    7. '[' → logprob: -13.627432823181152
    8. '0' → logprob: -13.877432823181152
    9. 'N' → logprob: -14.377432823181152
    10. 'def' → logprob: -14.752432823181152

Token 103: ' row' (ID: 5225)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.029475748538970947
    2. ' day' → logprob: -3.904475688934326
    3. 'i' → logprob: -5.029475688934326
    4. ' a' → logprob: -6.279475688934326
    5. 'a' → logprob: -8.779476165771484
    6. ' _' → logprob: -9.279476165771484
    7. 'day' → logprob: -10.154476165771484
    8. '_' → logprob: -10.279476165771484
    9. ' ' → logprob: -10.904476165771484
    10. ' x' → logprob: -11.029476165771484

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036323845852166414
    2. 'in' → logprob: -5.628632545471191
    3. ' ' → logprob: -10.878632545471191
    4. ',' → logprob: -11.753632545471191
    5. 'range' → logprob: -13.753632545471191
    6. '	in' → logprob: -13.878632545471191
    7. 'import' → logprob: -14.503632545471191
    8. ' ,' → logprob: -14.753632545471191
    9. ' i' → logprob: -14.878632545471191
    10. 's' → logprob: -15.128632545471191

Token 105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10040485858917236
    2. ' range' → logprob: -2.350404739379883
    3. 'events' → logprob: -8.850404739379883
    4. ' events' → logprob: -10.225404739379883
    5. 'covered' → logprob: -11.725404739379883
    6. '(range' → logprob: -12.600404739379883
    7. ' covered' → logprob: -12.725404739379883
    8. '	range' → logprob: -13.725404739379883
    9. 'coverage' → logprob: -14.350404739379883
    10. '```' → logprob: -14.725404739379883

Token 106: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000275040598353371
    2. '(N' → logprob: -8.250274658203125
    3. '1' → logprob: -11.250274658203125
    4. ' (' → logprob: -14.500274658203125
    5. '(len' → logprob: -16.375274658203125
    6. '(
' → logprob: -16.750274658203125
    7. ' ' → logprob: -17.125274658203125
    8. ',' → logprob: -17.625274658203125
    9. '   ' → logprob: -17.750274658203125
    10. 'N' → logprob: -18.000274658203125

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020038189832121134
    2. 'N' → logprob: -6.2520036697387695
    3. 'len' → logprob: -10.00200366973877
    4. ' ' → logprob: -10.87700366973877
    5. '   ' → logprob: -12.25200366973877
    6. ' N' → logprob: -13.25200366973877
    7. 'a' → logprob: -13.25200366973877
    8. '(' → logprob: -13.75200366973877
    9. '(N' → logprob: -14.50200366973877
    10. '2' → logprob: -15.25200366973877

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07057126611471176
    2. ' ,' → logprob: -2.695571184158325
    3. ',N' → logprob: -7.445571422576904
    4. ',n' → logprob: -10.945570945739746
    5. ' N' → logprob: -11.445570945739746
    6. 'N' → logprob: -11.695570945739746
    7. ',len' → logprob: -12.195570945739746
    8. '1' → logprob: -12.945570945739746
    9. ' ' → logprob: -13.195570945739746
    10. '```' → logprob: -13.820570945739746

Token 109: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009122979827225208
    2. ' N' → logprob: -7.000912189483643
    3. '   ' → logprob: -14.2509126663208
    4. 'len' → logprob: -16.250911712646484
    5. '  ' → logprob: -16.750911712646484
    6. '	N' → logprob: -17.375911712646484
    7. ' ' → logprob: -17.625911712646484
    8. '    ' → logprob: -17.875911712646484
    9. 'n' → logprob: -19.500911712646484
    10. '1' → logprob: -19.625911712646484

Token 110: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008617881685495377
    2. ' +' → logprob: -4.758617877960205
    3. '+
' → logprob: -12.883618354797363
    4. '
' → logprob: -15.133618354797363
    5. '＋' → logprob: -15.633618354797363
    6. '()+' → logprob: -16.383617401123047
    7. ' +
' → logprob: -16.508617401123047
    8. '1' → logprob: -16.633617401123047
    9. '```' → logprob: -16.633617401123047
    10. '<|end|>' → logprob: -17.258617401123047

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020807012333534658
    2. ' ' → logprob: -8.625207901000977
    3. '2' → logprob: -10.500207901000977
    4. '   ' → logprob: -15.000207901000977
    5. '```' → logprob: -16.062707901000977
    6. ')' → logprob: -16.875207901000977
    7. '

' → logprob: -16.875207901000977
    8. '  ' → logprob: -17.187707901000977
    9. '+' → logprob: -17.187707901000977
    10. '
' → logprob: -17.312707901000977

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016603630036115646
    2. ':' → logprob: -4.141603469848633
    3. ')' → logprob: -8.391603469848633
    4. ' ):' → logprob: -8.516603469848633
    5. '):
' → logprob: -9.016603469848633
    6. ',' → logprob: -12.391603469848633
    7. ']:' → logprob: -12.766603469848633
    8. ' :' → logprob: -12.766603469848633
    9. '>:' → logprob: -13.016603469848633
    10. '():' → logprob: -13.141603469848633

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017995169386267662
    2. ' for' → logprob: -4.267995357513428
    3. 'events' → logprob: -6.267995357513428
    4. ' events' → logprob: -6.892995357513428
    5. 'for' → logprob: -7.392995357513428
    6. '```' → logprob: -9.64299488067627
    7. ' covered' → logprob: -9.76799488067627
    8. '<|end|>' → logprob: -9.89299488067627
    9. '    ' → logprob: -10.76799488067627
    10. '    
' → logprob: -11.39299488067627

Token 114: ' line' (ID: 2543)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9033222198486328
    2. 'for' → logprob: -1.2783222198486328
    3. 'events' → logprob: -1.4033222198486328
    4. ' events' → logprob: -2.778322219848633
    5. '   ' → logprob: -5.278322219848633
    6. 'event' → logprob: -8.028322219848633
    7. 'covered' → logprob: -8.028322219848633
    8. 'current' → logprob: -8.403322219848633
    9. ' covered' → logprob: -8.653322219848633
    10. ' coverage' → logprob: -8.653322219848633

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08628278970718384
    2. '_events' → logprob: -3.211282730102539
    3. '=' → logprob: -4.086282730102539
    4. ',' → logprob: -4.461282730102539
    5. 'events' → logprob: -5.586282730102539
    6. '_' → logprob: -5.836282730102539
    7. ' in' → logprob: -5.961282730102539
    8. ' ' → logprob: -6.961282730102539
    9. ')' → logprob: -7.086282730102539
    10. ' events' → logprob: -7.336282730102539

Token 116: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.393140971660614
    2. ' [' → logprob: -2.018141031265259
    3. '['' → logprob: -2.268141031265259
    4. '[]' → logprob: -3.393141031265259
    5. 'events' → logprob: -4.26814079284668
    6. 'covered' → logprob: -4.39314079284668
    7. ' ['' → logprob: -5.14314079284668
    8. ' covered' → logprob: -5.26814079284668
    9. '["' → logprob: -5.51814079284668
    10. ' events' → logprob: -5.89314079284668

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04118990898132324
    2. 'False' → logprob: -3.2911899089813232
    3. 'covered' → logprob: -6.666190147399902
    4. ' False' → logprob: -7.541190147399902
    5. ' ' → logprob: -7.541190147399902
    6. ''' → logprob: -8.541190147399902
    7. 'True' → logprob: -8.791190147399902
    8. ' covered' → logprob: -9.041190147399902
    9. '1' → logprob: -9.166190147399902
    10. ']' → logprob: -9.791190147399902

Token 118: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021903635933995247
    2. ']*(' → logprob: -4.8969035148620605
    3. ' ]' → logprob: -5.0219035148620605
    4. ']*' → logprob: -5.7719035148620605
    5. ' for' → logprob: -6.5219035148620605
    6. ',' → logprob: -6.7719035148620605
    7. ']+' → logprob: -7.0219035148620605
    8. ')]' → logprob: -7.7719035148620605
    9. ')' → logprob: -8.646903991699219
    10. '<|end|>' → logprob: -9.021903991699219

Token 119: 'row' (ID: 843)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011418843641877174
    2. 'M' → logprob: -7.1261420249938965
    3. ' N' → logprob: -8.376141548156738
    4. '(N' → logprob: -9.501141548156738
    5. '   ' → logprob: -11.501141548156738
    6. ' ' → logprob: -12.001141548156738
    7. 'len' → logprob: -12.376141548156738
    8. '100' → logprob: -13.376141548156738
    9. '  ' → logprob: -13.376141548156738
    10. ' (' → logprob: -13.626141548156738

Token 120: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004673276096582413
    2. ' +' → logprob: -5.629673480987549
    3. ')' → logprob: -6.879673480987549
    4. '*' → logprob: -11.00467300415039
    5. ' )' → logprob: -11.37967300415039
    6. '-' → logprob: -12.12967300415039
    7. '+)' → logprob: -12.87967300415039
    8. '+
' → logprob: -13.12967300415039
    9. ')+' → logprob: -14.12967300415039
    10. '```' → logprob: -14.12967300415039

Token 121: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03818057104945183
    2. '2' → logprob: -3.2881805896759033
    3. ' ' → logprob: -8.913180351257324
    4. '3' → logprob: -13.413180351257324
    5. '10' → logprob: -14.163180351257324
    6. '   ' → logprob: -15.038180351257324
    7. '
' → logprob: -15.163180351257324
    8. '

' → logprob: -15.350680351257324
    9. '5' → logprob: -15.538180351257324
    10. 'N' → logprob: -15.788180351257324

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007267289329320192
    2. ' )' → logprob: -7.625726699829102
    3. ')
' → logprob: -8.375726699829102
    4. ' ' → logprob: -13.375726699829102
    5. ')

' → logprob: -13.750726699829102
    6. '   ' → logprob: -13.750726699829102
    7. '[' → logprob: -14.125726699829102
    8. '<|end|>' → logprob: -14.125726699829102
    9. ')
' → logprob: -14.250726699829102
    10. ' )
' → logprob: -14.250726699829102

Token 123: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8542006015777588
    2. 'for' → logprob: -0.9792006015777588
    3. '   ' → logprob: -1.9792006015777588
    4. '<|end|>' → logprob: -2.854200601577759
    5. '	for' → logprob: -6.47920036315918
    6. '
' → logprob: -7.47920036315918
    7. '    
' → logprob: -7.97920036315918
    8. ' ' → logprob: -8.85420036315918
    9. '<|end|>' → logprob: -9.60420036315918
    10. 'events' → logprob: -9.85420036315918

Token 124: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008243953343480825
    2. 'idx' → logprob: -8.375823974609375
    3. 'events' → logprob: -9.000823974609375
    4. ' for' → logprob: -9.000823974609375
    5. 'prev' → logprob: -9.000823974609375
    6. 'active' → logprob: -9.250823974609375
    7. '#' → logprob: -11.000823974609375
    8. 'event' → logprob: -11.375823974609375
    9. '   ' → logprob: -11.500823974609375
    10. 'current' → logprob: -11.500823974609375

Token 125: ' s' (ID: 265)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03225303441286087
    2. ' start' → logprob: -3.9072530269622803
    3. '(start' → logprob: -5.282253265380859
    4. 's' → logprob: -5.907253265380859
    5. 'interval' → logprob: -6.532253265380859
    6. 'event' → logprob: -7.532253265380859
    7. '(s' → logprob: -7.532253265380859
    8. 'st' → logprob: -7.782253265380859
    9. ' (' → logprob: -8.40725326538086
    10. 'l' → logprob: -8.65725326538086

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004141910932958126
    2. ' ,' → logprob: -6.129141807556152
    3. ',event' → logprob: -7.379141807556152
    4. ' in' → logprob: -7.754141807556152
    5. ',end' → logprob: -8.004141807556152
    6. ',(' → logprob: -9.129141807556152
    7. ',start' → logprob: -9.254141807556152
    8. '<|end|>' → logprob: -9.504141807556152
    9. ',row' → logprob: -10.129141807556152
    10. '_,' → logprob: -10.379141807556152

Token 127: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0002707529056351632
    2. ' e' → logprob: -8.25027084350586
    3. 't' → logprob: -11.62527084350586
    4. '   ' → logprob: -15.50027084350586
    5. '	e' → logprob: -16.12527084350586
    6. ' ' → logprob: -16.37527084350586
    7. 'd' → logprob: -17.00027084350586
    8. 'f' → logprob: -17.12527084350586
    9. '```' → logprob: -17.50027084350586
    10. '  ' → logprob: -17.50027084350586

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10030986368656158
    2. 'in' → logprob: -2.3503098487854004
    3. ',' → logprob: -9.600310325622559
    4. 's' → logprob: -10.850310325622559
    5. '<|end|>' → logprob: -12.725310325622559
    6. ' ' → logprob: -13.100310325622559
    7. 'In' → logprob: -13.225310325622559
    8. ')' → logprob: -13.225310325622559
    9. '	in' → logprob: -13.975310325622559
    10. 'n' → logprob: -14.100310325622559

Token 129: ' events' (ID: 6124)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.005964107811450958
    2. ' events' → logprob: -5.130964279174805
    3. '(events' → logprob: -10.380964279174805
    4. 'range' → logprob: -13.755964279174805
    5. 'sorted' → logprob: -14.380964279174805
    6. '_events' → logprob: -14.505964279174805
    7. ' ' → logprob: -14.755964279174805
    8. 'rows' → logprob: -15.005964279174805
    9. '
' → logprob: -15.130964279174805
    10. '.events' → logprob: -15.255964279174805

Token 130: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -6.153795766294934e-06
    2. '[line' → logprob: -12.625005722045898
    3. '[' → logprob: -13.000005722045898
    4. 'row' → logprob: -14.875005722045898
    5. '(row' → logprob: -16.2500057220459
    6. ' [' → logprob: -17.3750057220459
    7. '[column' → logprob: -17.6250057220459
    8. '[col' → logprob: -17.8750057220459
    9. '```' → logprob: -18.1250057220459
    10. '[
' → logprob: -18.8750057220459

Token 131: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.06698718667030334
    2. '):' → logprob: -2.9419872760772705
    3. ':' → logprob: -4.816987037658691
    4. ']:
' → logprob: -5.816987037658691
    5. '):
' → logprob: -7.191987037658691
    6. ']' → logprob: -9.566987037658691
    7. ']:
' → logprob: -10.191987037658691
    8. '}:' → logprob: -10.941987037658691
    9. ']):' → logprob: -11.191987037658691
    10. '   ' → logprob: -11.316987037658691

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005333751323632896
    2. '        
' → logprob: -8.375533103942871
    3. ',' → logprob: -9.875533103942871
    4. '<|end|>' → logprob: -10.125533103942871
    5. '    ' → logprob: -10.375533103942871
    6. '	   ' → logprob: -10.875533103942871
    7. ' for' → logprob: -10.875533103942871
    8. '     ' → logprob: -10.875533103942871
    9. '   ' → logprob: -11.000533103942871
    10. '           ' → logprob: -11.125533103942871

Token 133: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034448202699422836
    2. 'for' → logprob: -3.7844481468200684
    3. ' for' → logprob: -4.784448146820068
    4. '   ' → logprob: -6.284448146820068
    5. '           ' → logprob: -7.409448146820068
    6. ' line' → logprob: -9.159448623657227
    7. '
' → logprob: -9.659448623657227
    8. 'line' (adapté à ' line') → logprob: -9.659448623657227
    9. '```' → logprob: -10.659448623657227
    10. ')' → logprob: -11.659448623657227

Token 134: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.003637488465756178
    2. '[' → logprob: -5.628637313842773
    3. '[e' → logprob: -10.753637313842773
    4. ' [' → logprob: -12.628637313842773
    5. '[start' → logprob: -12.878637313842773
    6. '[
' → logprob: -13.753637313842773
    7. 's' → logprob: -14.003637313842773
    8. '```' → logprob: -14.378637313842773
    9. '[int' → logprob: -14.503637313842773
    10. '

' → logprob: -14.878637313842773

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09198571741580963
    2. ']+=' → logprob: -2.4669857025146484
    3. ' ]' → logprob: -6.091985702514648
    4. '[' → logprob: -8.466985702514648
    5. ':' → logprob: -9.216985702514648
    6. '-' → logprob: -9.341985702514648
    7. ':end' → logprob: -9.966985702514648
    8. '<|end|>' → logprob: -10.091985702514648
    9. ':e' → logprob: -10.216985702514648
    10. '   ' → logprob: -10.341985702514648

Token 136: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.30494898557662964
    2. '=' → logprob: -1.4299490451812744
    3. ']+=' → logprob: -3.9299490451812744
    4. ' +=' → logprob: -5.679948806762695
    5. ']' → logprob: -8.679948806762695
    6. ' =' → logprob: -9.304948806762695
    7. ']=' → logprob: -9.554948806762695
    8. '+' → logprob: -9.804948806762695
    9. '[' → logprob: -10.179948806762695
    10. '>=' → logprob: -12.554948806762695

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. ' ' → logprob: -10.875020980834961
    3. '   ' → logprob: -13.750020980834961
    4. '+' → logprob: -15.000020980834961
    5. '  ' → logprob: -16.81252098083496
    6. '    ' → logprob: -18.00002098083496
    7. '>' → logprob: -18.18752098083496
    8. ' +' → logprob: -18.18752098083496
    9. '```' → logprob: -18.25002098083496
    10. '-' → logprob: -18.62502098083496

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.500031471252441
    3. '   ' → logprob: -13.125031471252441
    4. '+' → logprob: -13.750031471252441
    5. '  ' → logprob: -15.312531471252441
    6. '>' → logprob: -16.625032424926758
    7. '    ' → logprob: -16.750032424926758
    8. ' +' → logprob: -16.812532424926758
    9. '<|end|>' → logprob: -16.937532424926758
    10. '```' → logprob: -17.125032424926758

Token 139: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10975552350282669
    2. '   ' → logprob: -3.234755516052246
    3. '
' → logprob: -3.734755516052246
    4. ' 
' → logprob: -3.734755516052246
    5. ' line' → logprob: -5.359755516052246
    6. '        
' → logprob: -5.609755516052246
    7. ' ' → logprob: -6.359755516052246
    8. '           ' → logprob: -6.484755516052246
    9. '  
' → logprob: -6.609755516052246
    10. '    
' → logprob: -7.109755516052246

Token 141: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.050211600959300995
    2. ' line' → logprob: -3.6752116680145264
    3. 'e' → logprob: -3.8002116680145264
    4. ' e' → logprob: -6.800211429595947
    5. '       ' → logprob: -9.925211906433105
    6. '   ' → logprob: -10.925211906433105
    7. '	line' → logprob: -11.175211906433105
    8. '    ' → logprob: -11.800211906433105
    9. '```' → logprob: -11.800211906433105
    10. '-' → logprob: -11.925211906433105

Token 142: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.5759687423706055
    2. 'e' → logprob: -0.8259687423706055
    3. 'line' → logprob: -10.825968742370605
    4. ' line' → logprob: -11.950968742370605
    5. '(e' → logprob: -13.950968742370605
    6. '   ' → logprob: -14.075968742370605
    7. ' ' → logprob: -14.825968742370605
    8. ' (' → logprob: -15.575968742370605
    9. '	e' → logprob: -15.825968742370605
    10. ')e' → logprob: -16.200969696044922

Token 143: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16478939354419708
    2. '<' → logprob: -2.0397894382476807
    3. ']' → logprob: -4.414789199829102
    4. '<len' → logprob: -5.664789199829102
    5. '[' → logprob: -6.039789199829102
    6. ' <=' → logprob: -7.164789199829102
    7. ']<' → logprob: -7.164789199829102
    8. '<|end|>' → logprob: -7.664789199829102
    9. '<=' → logprob: -8.039789199829102
    10. ' ' → logprob: -8.164789199829102

Token 144: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0009181279456242919
    2. ' row' → logprob: -7.000917911529541
    3. 'len' → logprob: -12.1259183883667
    4. '(row' → logprob: -13.7509183883667
    5. '	row' → logprob: -16.750917434692383
    6. ' len' → logprob: -18.250917434692383
    7. 'line' → logprob: -18.625917434692383
    8. '   ' → logprob: -19.125917434692383
    9. ' ' → logprob: -19.500917434692383
    10. '[row' → logprob: -19.625917434692383

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20819884538650513
    2. ':
' → logprob: -1.7081987857818604
    3. '           ' → logprob: -5.7081990242004395
    4. '[line' → logprob: -6.7081990242004395
    5. ' line' → logprob: -7.4581990242004395
    6. ' :' → logprob: -8.208198547363281
    7. ' :
' → logprob: -8.333198547363281
    8. '):
' → logprob: -8.708198547363281
    9. '):' → logprob: -8.833198547363281
    10. ']' → logprob: -8.958198547363281

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27248793840408325
    2. ' line' → logprob: -1.6474878787994385
    3. 'line' → logprob: -3.7724878787994385
    4. '[line' → logprob: -5.647488117218018
    5. ':' → logprob: -5.772488117218018
    6. ' ' → logprob: -6.147488117218018
    7. ' :' → logprob: -6.272488117218018
    8. '       ' → logprob: -6.522488117218018
    9. ':
' → logprob: -6.522488117218018
    10. '[' → logprob: -6.897488117218018

Token 147: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.038674186915159225
    2. ' line' → logprob: -3.2886741161346436
    3. '           ' → logprob: -7.413674354553223
    4. '       ' → logprob: -11.413674354553223
    5. '               ' → logprob: -11.913674354553223
    6. '   ' → logprob: -12.788674354553223
    7. '	line' → logprob: -13.038674354553223
    8. '```' → logprob: -13.038674354553223
    9. ' ' → logprob: -13.663674354553223
    10. '[line' → logprob: -14.038674354553223

Token 148: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -5.200166469876422e-06
    2. 'e' → logprob: -13.125004768371582
    3. '[' → logprob: -13.375004768371582
    4. '[s' → logprob: -13.500004768371582
    5. ' e' → logprob: -16.1250057220459
    6. '[end' → logprob: -17.0000057220459
    7. '(e' → logprob: -18.5000057220459
    8. '	e' → logprob: -18.6250057220459
    9. '```' → logprob: -18.8750057220459
    10. ' [' → logprob: -19.1250057220459

Token 149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003565575461834669
    2. ']-' → logprob: -8.375356674194336
    3. ' ]' → logprob: -9.750356674194336
    4. '-' → logprob: -10.250356674194336
    5. '[' → logprob: -11.125356674194336
    6. ' -=' → logprob: -12.125356674194336
    7. '   ' → logprob: -12.250356674194336
    8. '       ' → logprob: -13.125356674194336
    9. '-=' → logprob: -13.375356674194336
    10. '[-' → logprob: -14.125356674194336

Token 150: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.008040360175073147
    2. ' -=' → logprob: -5.258040428161621
    3. '-' → logprob: -5.883040428161621
    4. '[' → logprob: -12.258040428161621
    5. '[-' → logprob: -12.383040428161621
    6. '+=' → logprob: -12.508040428161621
    7. '   ' → logprob: -13.633040428161621
    8. '```' → logprob: -14.008040428161621
    9. ']' → logprob: -15.258040428161621
    10. ' -' → logprob: -15.508040428161621

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.125139236450195
    4. '```' → logprob: -17.750139236450195
    5. '0' → logprob: -18.750139236450195
    6. ' ' → logprob: -19.562639236450195
    7. '<|end|>' → logprob: -19.625139236450195
    8. '       ' → logprob: -19.687639236450195
    9. '１' → logprob: -19.875139236450195
    10. '`' → logprob: -20.000139236450195

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.500009536743164
    4. '```' → logprob: -18.125009536743164
    5. '<|end|>' → logprob: -19.125009536743164
    6. '       ' → logprob: -19.125009536743164
    7. '0' → logprob: -19.750009536743164
    8. '           ' → logprob: -20.125009536743164
    9. '`' → logprob: -21.000009536743164
    10. '-' → logprob: -21.125009536743164

Token 153: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015409015119075775
    2. '<|end|>' → logprob: -5.015408992767334
    3. '
' → logprob: -5.765408992767334
    4. '    
' → logprob: -6.140408992767334
    5. '  
' → logprob: -6.890408992767334
    6. ' for' → logprob: -7.265408992767334
    7. ' ' → logprob: -7.765408992767334
    8. ' 
' → logprob: -7.765408992767334
    9. '  ' → logprob: -8.890409469604492
    10. '\n' → logprob: -9.015409469604492

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059393443167209625
    2. '<|end|>' → logprob: -3.4343934059143066
    3. '
' → logprob: -4.934393405914307
    4. ' ' → logprob: -5.184393405914307
    5. ' 
' → logprob: -5.434393405914307
    6. '  
' → logprob: -5.934393405914307
    7. '    
' → logprob: -6.184393405914307
    8. ' for' → logprob: -6.309393405914307
    9. '  ' → logprob: -7.309393405914307
    10. '   
' → logprob: -8.434393882751465

Token 155: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7265278100967407
    2. 'for' → logprob: -0.9765278100967407
    3. '   ' → logprob: -1.9765278100967407
    4. ' ' → logprob: -7.851527690887451
    5. '
' → logprob: -8.35152816772461
    6. '```' → logprob: -8.35152816772461
    7. '	for' → logprob: -9.47652816772461
    8. 'sum' → logprob: -9.72652816772461
    9. '    
' → logprob: -9.72652816772461
    10. '  ' → logprob: -10.47652816772461

Token 156: ' =' (ID: 314)
  Prédit: 'urrent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urrent' → logprob: -0.17665769159793854
    2. 'urr' → logprob: -2.5516576766967773
    3. 'ount' → logprob: -3.8016576766967773
    4. 'over' → logprob: -4.051657676696777
    5. 'umulative' → logprob: -4.051657676696777
    6. 'ur' → logprob: -4.801657676696777
    7. 'umsum' → logprob: -4.801657676696777
    8. 'um' → logprob: -4.926657676696777
    9. '=' → logprob: -7.301657676696777
    10. 'umul' → logprob: -7.426657676696777

Token 157: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0381530337035656
    2. ' ' → logprob: -3.2881529331207275
    3. 'line' → logprob: -9.788152694702148
    4. ' line' → logprob: -10.038152694702148
    5. '   ' → logprob: -11.788152694702148
    6. 'covered' → logprob: -14.350652694702148
    7. '1' → logprob: -14.350652694702148
    8. '  ' → logprob: -14.538152694702148
    9. '```' → logprob: -14.850652694702148
    10. 'cover' → logprob: -15.038152694702148

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022439735766965896
    2. ' ' → logprob: -8.625224113464355
    3. 'line' → logprob: -10.125224113464355
    4. ' line' → logprob: -13.625224113464355
    5. '[' → logprob: -13.750224113464355
    6. 'covered' → logprob: -14.375224113464355
    7. '1' → logprob: -14.500224113464355
    8. '   ' → logprob: -14.625224113464355
    9. '```' → logprob: -15.500224113464355
    10. '[line' → logprob: -15.625224113464355

Token 159: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10459371656179428
    2. '   ' → logprob: -2.9795937538146973
    3. 'for' → logprob: -3.2295937538146973
    4. '<|end|>' → logprob: -5.229593753814697
    5. ' ' → logprob: -5.979593753814697
    6. ' 
' → logprob: -7.729593753814697
    7. '	for' → logprob: -8.604593276977539
    8. '    ' → logprob: -9.354593276977539
    9. '
' → logprob: -9.479593276977539
    10. '  ' → logprob: -9.854593276977539

Token 161: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1676274687051773
    2. ' for' → logprob: -1.9176274538040161
    3. '   ' → logprob: -4.917627334594727
    4. '	for' → logprob: -10.667627334594727
    5. '
' → logprob: -10.917627334594727
    6. ' ' → logprob: -11.542627334594727
    7. '```' → logprob: -12.792627334594727
    8. ' 
' → logprob: -13.292627334594727
    9. '  ' → logprob: -13.917627334594727
    10. '    
' → logprob: -14.167627334594727

Token 162: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07488290965557098
    2. 'j' → logprob: -3.324882984161377
    3. ' i' → logprob: -4.324882984161377
    4. 'idx' → logprob: -4.449882984161377
    5. 'col' → logprob: -5.074882984161377
    6. 'k' → logprob: -6.699882984161377
    7. 'pos' → logprob: -6.699882984161377
    8. ' col' → logprob: -6.949882984161377
    9. ' j' → logprob: -7.074882984161377
    10. ' idx' → logprob: -7.449882984161377

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01261030975729227
    2. 'in' → logprob: -4.38761043548584
    3. ',' → logprob: -10.38761043548584
    4. ' ' → logprob: -10.51261043548584
    5. '1' → logprob: -11.01261043548584
    6. ' ,' → logprob: -12.13761043548584
    7. '0' → logprob: -12.38761043548584
    8. '	in' → logprob: -12.63761043548584
    9. '   ' → logprob: -13.26261043548584
    10. '    ' → logprob: -13.26261043548584

Token 164: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.062185924500226974
    2. ' range' → logprob: -2.8121860027313232
    3. '1' → logprob: -8.437186241149902
    4. ' ' → logprob: -14.187186241149902
    5. '(range' → logprob: -14.812186241149902
    6. '   ' → logprob: -15.062186241149902
    7. '	range' → logprob: -15.937186241149902
    8. '(' → logprob: -17.187185287475586
    9. '0' → logprob: -17.562185287475586
    10. ',' → logprob: -17.687185287475586

Token 165: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016960684210062027
    2. '(' → logprob: -4.141960620880127
    3. '   ' → logprob: -7.641960620880127
    4. ' ' → logprob: -7.766960620880127
    5. '(row' → logprob: -11.891961097717285
    6. '(len' → logprob: -12.516961097717285
    7. 'len' → logprob: -12.766961097717285
    8. '2' → logprob: -13.141961097717285
    9. ' (' → logprob: -13.391961097717285
    10. 'row' → logprob: -13.516961097717285

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13643136620521545
    2. 'len' → logprob: -2.6364314556121826
    3. 'row' → logprob: -2.8864314556121826
    4. ' len' → logprob: -10.261431694030762
    5. ' row' → logprob: -10.511431694030762
    6. 'line' → logprob: -10.636431694030762
    7. ' ' → logprob: -10.761431694030762
    8. '(row' → logprob: -11.011431694030762
    9. '(len' → logprob: -11.886431694030762
    10. '(' → logprob: -12.761431694030762

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003868712577968836
    2. ' ,' → logprob: -5.628868579864502
    3. ',len' → logprob: -8.75386905670166
    4. ',row' → logprob: -9.25386905670166
    5. ',line' → logprob: -12.00386905670166
    6. '   ' → logprob: -12.12886905670166
    7. ',i' → logprob: -13.62886905670166
    8. ',
' → logprob: -14.00386905670166
    9. ' ' → logprob: -15.12886905670166
    10. '    ' → logprob: -15.25386905670166

Token 168: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.12773354351520538
    2. 'len' → logprob: -2.1277334690093994
    3. ' row' → logprob: -7.3777337074279785
    4. ' len' → logprob: -8.62773323059082
    5. '	row' → logprob: -14.75273323059082
    6. '   ' → logprob: -15.25273323059082
    7. 'line' → logprob: -15.62773323059082
    8. '(row' → logprob: -16.25273323059082
    9. ' ' → logprob: -17.37773323059082
    10. '	len' → logprob: -17.50273323059082

Token 169: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008058178937062621
    2. ' +' → logprob: -7.125805854797363
    3. '+
' → logprob: -14.000805854797363
    4. ',' → logprob: -15.875805854797363
    5. ')+' → logprob: -16.250804901123047
    6. '()+' → logprob: -16.625804901123047
    7. '+i' → logprob: -16.625804901123047
    8. '   ' → logprob: -16.750804901123047
    9. '```' → logprob: -17.250804901123047
    10. '):
' → logprob: -17.500804901123047

Token 170: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6779245138168335
    2. '1' → logprob: -1.0529245138168335
    3. 'len' → logprob: -2.302924633026123
    4. '2' → logprob: -3.177924633026123
    5. 'row' → logprob: -6.552924633026123
    6. ' +' → logprob: -9.177924156188965
    7. '   ' → logprob: -9.302924156188965
    8. ' ' → logprob: -9.802924156188965
    9. ' len' → logprob: -10.302924156188965
    10. '```' → logprob: -10.927924156188965

Token 171: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05894625931978226
    2. '):' → logprob: -3.183946371078491
    3. ':
' → logprob: -4.933946132659912
    4. ':' → logprob: -5.058946132659912
    5. '   ' → logprob: -6.558946132659912
    6. '       ' → logprob: -7.933946132659912
    7. '+' → logprob: -8.05894660949707
    8. ',' → logprob: -10.43394660949707
    9. ' ):
' → logprob: -10.68394660949707
    10. '```' → logprob: -10.68394660949707

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007011005654931068
    2. 'c' → logprob: -6.3820109367370605
    3. ' ' → logprob: -6.3820109367370605
    4. ' c' → logprob: -6.5070109367370605
    5. '        
' → logprob: -7.5070109367370605
    6. ' 
' → logprob: -7.7570109367370605
    7. '    ' → logprob: -8.132011413574219
    8. '   ' → logprob: -8.257011413574219
    9. '  
' → logprob: -9.382011413574219
    10. '      ' → logprob: -9.757011413574219

Token 173: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.05905740335583687
    2. ' c' → logprob: -2.9340574741363525
    3. '       ' → logprob: -5.684057235717773
    4. '	c' → logprob: -7.309057235717773
    5. '   ' → logprob: -10.309057235717773
    6. '```' → logprob: -11.059057235717773
    7. ' ' → logprob: -11.309057235717773
    8. '
' → logprob: -11.934057235717773
    9. '        
' → logprob: -12.434057235717773
    10. '           ' → logprob: -12.434057235717773

Token 174: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2519468665122986
    2. '+=' → logprob: -1.5019469261169434
    3. '+' → logprob: -11.501946449279785
    4. ']+=' → logprob: -12.501946449279785
    5. '=' → logprob: -13.876946449279785
    6. '   ' → logprob: -14.376946449279785
    7. '+=(' → logprob: -14.376946449279785
    8. '+='' → logprob: -14.501946449279785
    9. '    ' → logprob: -14.751946449279785
    10. ' =' → logprob: -15.251946449279785

Token 175: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00671584764495492
    2. ' line' → logprob: -5.006715774536133
    3. '	line' → logprob: -14.881715774536133
    4. '   ' → logprob: -16.381715774536133
    5. '(line' → logprob: -17.006715774536133
    6. '[line' → logprob: -17.381715774536133
    7. ' ' → logprob: -17.881715774536133
    8. '#line' → logprob: -18.006715774536133
    9. '```' → logprob: -18.756715774536133
    10. '=line' → logprob: -18.756715774536133

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.061676347395405e-05
    2. 'i' → logprob: -10.37505054473877
    3. '[' → logprob: -10.87505054473877
    4. '[s' → logprob: -15.87505054473877
    5. '```' → logprob: -15.87505054473877
    6. ' i' → logprob: -16.500051498413086
    7. '[
' → logprob: -17.875051498413086
    8. ' [' → logprob: -19.000051498413086
    9. '	i' → logprob: -19.250051498413086
    10. '\[' → logprob: -19.500051498413086

Token 177: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.7638606429100037
    2. ')
' → logprob: -1.2638607025146484
    3. ']' → logprob: -1.6388607025146484
    4. ')' → logprob: -2.8888607025146484
    5. '
' → logprob: -7.388860702514648
    6. '       ' → logprob: -8.013860702514648
    7. ')]' → logprob: -8.763860702514648
    8. '   ' → logprob: -9.388860702514648
    9. ' ]
' → logprob: -9.638860702514648
    10. '>' → logprob: -9.763860702514648

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045628003776073456
    2. '   ' → logprob: -3.670628070831299
    3. ' if' → logprob: -4.045628070831299
    4. 'if' → logprob: -6.920628070831299
    5. '        
' → logprob: -8.17062759399414
    6. ' ' → logprob: -9.54562759399414
    7. '```' → logprob: -9.67062759399414
    8. '    
' → logprob: -10.17062759399414
    9. ' 
' → logprob: -10.29562759399414
    10. '  
' → logprob: -10.67062759399414

Token 179: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15219222009181976
    2. ' if' → logprob: -2.2771921157836914
    3. 'covered' → logprob: -3.6521921157836914
    4. ' covered' → logprob: -4.777192115783691
    5. '       ' → logprob: -5.902192115783691
    6. '   ' → logprob: -7.152192115783691
    7. 'line' → logprob: -8.027192115783691
    8. ' line' → logprob: -8.527192115783691
    9. '```' → logprob: -9.652192115783691
    10. '
' → logprob: -10.152192115783691

Token 180: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.634321391582489
    2. 'c' → logprob: -0.759321391582489
    3. ' covered' → logprob: -6.759321212768555
    4. 'covered' → logprob: -8.134321212768555
    5. ' not' → logprob: -9.759321212768555
    6. 'line' → logprob: -9.759321212768555
    7. '           ' → logprob: -9.884321212768555
    8. ' line' → logprob: -10.384321212768555
    9. 'not' → logprob: -11.134321212768555
    10. 'coverage' → logprob: -11.384321212768555

Token 181: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7520373463630676
    2. ' >' → logprob: -0.8770373463630676
    3. ' ==' → logprob: -2.502037286758423
    4. '==' → logprob: -3.502037286758423
    5. ' >=' → logprob: -9.127037048339844
    6. '>=' → logprob: -9.377037048339844
    7. ')' → logprob: -9.627037048339844
    8. ' <' → logprob: -10.127037048339844
    9. ' ' → logprob: -10.252037048339844
    10. ')>' → logprob: -10.627037048339844

Token 182: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06201440095901489
    2. ' ' → logprob: -2.81201434135437
    3. '1' → logprob: -10.93701457977295
    4. 'covered' → logprob: -10.93701457977295
    5. ' covered' → logprob: -12.31201457977295
    6. 'count' → logprob: -13.43701457977295
    7. 'cover' → logprob: -13.99951457977295
    8. ' ' → logprob: -14.24951457977295
    9. '
' → logprob: -14.37451457977295
    10. '=' → logprob: -14.56201457977295

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011761783389374614
    2. ' ' → logprob: -7.251176357269287
    3. '1' → logprob: -8.501175880432129
    4. 'covered' → logprob: -8.501175880432129
    5. 'count' → logprob: -11.001175880432129
    6. 'cover' → logprob: -11.376175880432129
    7. 'N' → logprob: -12.376175880432129
    8. '100' → logprob: -12.563675880432129
    9. '2' → logprob: -12.938675880432129
    10. ' covered' → logprob: -13.063675880432129

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2907875180244446
    2. ':
' → logprob: -1.6657874584197998
    3. '           ' → logprob: -3.0407874584198
    4. ' and' → logprob: -4.290787696838379
    5. '       ' → logprob: -7.040787696838379
    6. ',' → logprob: -7.665787696838379
    7. '):
' → logprob: -9.415787696838379
    8. '               ' → logprob: -9.790787696838379
    9. '<|end|>' → logprob: -9.790787696838379
    10. '   ' → logprob: -10.290787696838379

Token 185: '           ' (ID: 352)
  Prédit: ' covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' covered' → logprob: -0.7916536927223206
    2. '           ' → logprob: -1.0416536331176758
    3. 'covered' → logprob: -2.041653633117676
    4. 'count' → logprob: -3.416653633117676
    5. ' count' → logprob: -4.291653633117676
    6. ' line' → logprob: -4.291653633117676
    7. 'line' → logprob: -5.916653633117676
    8. 'cover' → logprob: -7.916653633117676
    9. '               ' → logprob: -8.166653633117676
    10. '```' → logprob: -8.791653633117676

Token 186: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.45473140478134155
    2. 'covered' → logprob: -1.0797314643859863
    3. ' covered' → logprob: -3.9547314643859863
    4. ' count' → logprob: -5.204731464385986
    5. 'cover' → logprob: -7.579731464385986
    6. '           ' → logprob: -8.454730987548828
    7. 'line' → logprob: -8.579730987548828
    8. '       ' → logprob: -10.079730987548828
    9. 'coverage' → logprob: -10.829730987548828
    10. ' line' → logprob: -11.079730987548828

Token 187: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14273467659950256
    2. '+=' → logprob: -2.0177347660064697
    3. '<|end|>' → logprob: -10.51773452758789
    4. ']+=' → logprob: -11.51773452758789
    5. '+' → logprob: -11.64273452758789
    6. ' ' → logprob: -11.89273452758789
    7. '```' → logprob: -14.01773452758789
    8. ' +' → logprob: -14.14273452758789
    9. '=' → logprob: -14.26773452758789
    10. ' -=' → logprob: -14.39273452758789

Token 188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '0' → logprob: -16.250335693359375
    4. '   ' → logprob: -17.625335693359375
    5. '
' → logprob: -17.750335693359375
    6. 'covered' → logprob: -18.125335693359375
    7. '           ' → logprob: -19.625335693359375
    8. ' covered' → logprob: -19.875335693359375
    9. '       ' → logprob: -19.875335693359375
    10. '2' → logprob: -20.000335693359375

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.7292167184641585e-05
    2. ' ' → logprob: -9.875057220458984
    3. '0' → logprob: -12.875057220458984
    4. 'covered' → logprob: -13.000057220458984
    5. '   ' → logprob: -15.375057220458984
    6. 'cover' → logprob: -15.750057220458984
    7. 'coverage' → logprob: -15.750057220458984
    8. ' covered' → logprob: -16.562557220458984
    9. 'row' → logprob: -16.937557220458984
    10. 'i' → logprob: -17.125057220458984

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13686664402484894
    2. '<|end|>' → logprob: -2.136866569519043
    3. '\n' → logprob: -4.886866569519043
    4. 'print' → logprob: -6.886866569519043
    5. ')' → logprob: -7.886866569519043
    6. 'newline' → logprob: -8.261866569519043
    7. '```' → logprob: -8.386866569519043
    8. ' 
' → logprob: -9.261866569519043
    9. '  
' → logprob: -9.386866569519043
    10. '
' → logprob: -9.761866569519043

Token 191: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.06197687238454819
    2. '(' → logprob: -2.811976909637451
    3. '()' → logprob: -12.436976432800293
    4. ' (' → logprob: -13.436976432800293
    5. 'count' → logprob: -13.436976432800293
    6. '('' → logprob: -14.186976432800293
    7. '(
' → logprob: -14.936976432800293
    8. '(len' → logprob: -15.686976432800293
    9. '(sum' → logprob: -15.686976432800293
    10. '(cnt' → logprob: -15.686976432800293

Token 193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ' )' → logprob: -12.875003814697266
    3. ')
' → logprob: -13.750003814697266
    4. '+' → logprob: -15.500003814697266
    5. ')`' → logprob: -16.375003814697266
    6. '))' → logprob: -17.625003814697266
    7. '`)' → logprob: -17.875003814697266
    8. '')' → logprob: -18.000003814697266
    9. ')#' → logprob: -18.125003814697266
    10. '```' → logprob: -18.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 191
Tokens correctement prédits (1ère position, stricte): 81
Tokens correctement prédits (1ère position, avec adaptation): 87
Tokens correctement prédits (top 10): 160
Précision stricte (1ère position): 42.41%
Précision adaptée (1ère position): 45.55%
Précision (top 10): 83.77%
================================================================================
