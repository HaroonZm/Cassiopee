================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 18:01:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def solve_food_stack(foods):
    n = len(foods)
    # dp[mask] = (total_weight, total_weighted_position, list_order) or None if impossible
    dp = [None] * (1 << n)
    dp[0] = (0, 0, [])

    for mask in range(1 << n):
        if dp[mask] is None:
            continue
        total_w, total_wp, order = dp[mask]
        # Position of next food from bottom is len(order)+1
        pos = len(order) + 1
        for i in range(n):
            if (mask >> i) & 1 == 0:
                # Check stability condition: s_i >= sum of weights above
                # sum of weights above = total weight of newly placed foods above current i
                # The foods placed above this i are those already in order (order) plus this one
                # But building from bottom, so the foods in dp[mask] are those placed below
                # Actually order is bottom->top, the next added food is placed above those in order.
                # But actually in problem, stacking from bottom to top:
                # So we add the next food on top of the stack represented by order.
                # The foods on top of food i are those added after it.
                # Because we add new food on top, when adding i at top, no food is above it.
                # But that means the order builds from bottom up, so next food will be top.
                #
                # So to check s_i >= sum of weights above, we need the weights of all foods placed above i.
                # When we add i as next food (top),
                # the foods already in order are below it, so no food above i except those added later.
                # Hence, for the order, when adding a new food on top (pos-th),
                # no food is above it, so s_i is always >= 0 for the top food.
                #
                # But problem is the order is bottom to top: f1,...fn
                # The dp builds bottom to top: order is bottom to top stack.
                # So when adding next food i on top, we check if the food i can bear weights of foods above it (that is none).
                # So s_i >= 0 always true for top food.
                #
                # Where is the problem?
                # Actually, check stability for all stack:
                # For each food f_j at position j (starting from 1 bottom), s_f_j >= sum of weights of foods above j.
                # So when adding new food on top, only the foods below may be compressed by the new food.
                #
                # We must check that the new top food i does NOT crush the foods below.
                # crush constraint only needed on the foods under new food, not the new food itself.
                #
                # But the problem states the crushing condition applies to every food f_i:
                # s_f_i >= weight of all foods above it.
                #
                # So when adding a new food on top:
                # The new food has no food above it, so constraint ok.
                # But we must check no previously placed food is crushed by this new food.
                #
                # Actually we must check the dp mask represents stack bottom->top order, and that for all foods,
                # s_f_i >= total weight of foods above it.
                # So after adding i on top, the order is order + [i].
                #
                # For a candidate new order, verify the crushing condition:
                # For each food in order+[i] at pos j, sum weights above = sum weights elements from j+1..end
                # s_f_j >= that sum for all j
                #
                # To avoid repeated checks, we can rely on the DP state+transitions that ensure partial stack is stable.
                #
                # But here, to know if we can add food i on top of dp[mask], we must check crushing conditions for all foods including the new one:
                # The dp[mask] is stable.
                # When adding i on top, crushing condition applies:
                # For food i (top), s_i >= 0 always true.
                # For the previous foods: s_f_j >= weight of above foods = old sum + w_i.
                # So the +w_i must not break crushing of previous foods.
                #
                # But we don't store s_f_j and w_f_j for previous foods in dp.
                #
                # Hence we must store in dp state the minimal "strength minus weights above" for every food, or do it differently.
                #
                # A simpler approach:
                # When we add i on top, the weights above previous foods increases by w_i.
                # So for every previous food k, check s_k >= weights of foods above it + w_i.
                # weights of foods above it currently is sum of weights above it in dp[mask].
                #
                # We can store in dp for every mask the minimum "remaining strength" for each food in order.
                #
                # But to solve this problem efficiently, we use the approach from the sample editorial:
                # In the given problem constraints (n ≤ 10), we can do complete search with pruning.
                #
                # So let's try all permutations and keep only those stable stacks.
                # Then select the one with minimal center of gravity.
                pass # We'll implement a permutation based solution below.

    # Because the problem says the solution is unique, we can try all permutations and pick the one stable with minimal G.

def main():
    import sys
    input = sys.stdin.readline

    while True:
        n = int(input())
        if n == 0:
            break
        foods = []
        for _ in range(n):
            f, w, s = input().split()
            w = int(w)
            s = int(s)
            foods.append((f, w, s))

        from itertools import permutations

        best_order = None
        best_G = float('inf')

        # Check stability function
        def is_stable(order):
            # order: list of (f,w,s) from bottom to top
            total_w = [fw[1] for fw in order]
            for i in range(len(order)):
                upper_weights = sum(total_w[i+1:])
                if order[i][2] < upper_weights:
                    return False
            return True

        # Calculate center of gravity
        def center_of_gravity(order):
            total_weight = sum(fw[1] for fw in order)
            weighted_sum = sum((i+1)*fw[1] for i,fw in enumerate(order))
            return weighted_sum / total_weight

        for perm in permutations(foods):
            if is_stable(perm):
                G = center_of_gravity(perm)
                if G < best_G:
                    best_G = G
                    best_order = perm

        for f,_,_ in best_order:
            print(f)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.288149118423462
    2. 't' → logprob: -1.413149118423462
    3. 'default' → logprob: -2.038149118423462
    4. '_' → logprob: -2.538149118423462
    5. 's' → logprob: -2.913149118423462
    6. 'encoding' → logprob: -3.663149118423462
    7. 'limit' → logprob: -4.038148880004883
    8. '_version' → logprob: -4.288148880004883
    9. 'rl' → logprob: -4.538148880004883
    10. 'sys' → logprob: -4.538148880004883

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00019209683523513377
    2. 'ursive' → logprob: -8.875191688537598
    3. 'urs' → logprob: -11.000191688537598
    4. 'ur' → logprob: -11.750191688537598
    5. 'limit' → logprob: -12.000191688537598
    6. 'urf' → logprob: -12.125191688537598
    7. '_limit' → logprob: -12.625191688537598
    8. 'urse' → logprob: -13.000191688537598
    9. 'ursor' → logprob: -13.000191688537598
    10. 'ursively' → logprob: -13.250191688537598

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '(
' → logprob: -11.37502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(

' → logprob: -12.75002384185791
    5. '((' → logprob: -14.50002384185791
    6. '```' → logprob: -14.75002384185791
    7. '("("' → logprob: -14.75002384185791
    8. '('' → logprob: -15.50002384185791
    9. '(.' → logprob: -15.62502384185791
    10. '(
' → logprob: -15.75002384185791

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6933186650276184
    2. '100' → logprob: -0.6933186650276184
    3. ' ' → logprob: -9.318318367004395
    4. '500' → logprob: -9.818318367004395
    5. '300' → logprob: -11.568318367004395
    6. '999' → logprob: -12.693318367004395
    7. '1' → logprob: -12.818318367004395
    8. '250' → logprob: -12.818318367004395
    9. '150' → logprob: -12.943318367004395
    10. '200' → logprob: -13.318318367004395

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026859356090426445
    2. '000' → logprob: -4.026859283447266
    3. '00' → logprob: -5.151859283447266
    4. '4' → logprob: -6.526859283447266
    5. '6' → logprob: -6.651859283447266
    6. '5' → logprob: -10.151859283447266
    7. '**' → logprob: -10.401859283447266
    8. '3' → logprob: -11.026859283447266
    9. '7' → logprob: -11.526859283447266
    10. ''' → logprob: -11.526859283447266

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0028600357472896576
    2. '6' → logprob: -6.252860069274902
    3. '9' → logprob: -7.002860069274902
    4. '8' → logprob: -10.752860069274902
    5. ' ' → logprob: -15.502860069274902
    6. '(' → logprob: -16.502859115600586
    7. '```' → logprob: -17.377859115600586
    8. '3' → logprob: -18.377859115600586
    9. ')' → logprob: -19.002859115600586
    10. '0' → logprob: -19.502859115600586

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -16.750003814697266
    5. ')))' → logprob: -18.000003814697266
    6. ' ' → logprob: -18.125003814697266
    7. '）' → logprob: -18.625003814697266
    8. '),' → logprob: -18.750003814697266
    9. ')`' → logprob: -18.750003814697266
    10. '')' → logprob: -19.000003814697266

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47371506690979004
    2. '\' → logprob: -1.22371506690979
    3. '\n' → logprob: -3.72371506690979
    4. '```' → logprob: -4.098714828491211
    5. '
' → logprob: -4.223714828491211
    6. ')' → logprob: -5.098714828491211
    7. '`' → logprob: -5.473714828491211
    8. 'import' → logprob: -5.473714828491211
    9. '#' → logprob: -5.598714828491211
    10. '

' → logprob: -6.598714828491211

Token 14: ' solve' (ID: 17722)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.8242061138153076
    2. ' dfs' → logprob: -1.0742061138153076
    3. ' ' → logprob: -1.6992061138153076
    4. ' factor' → logprob: -4.699206352233887
    5. ' f' → logprob: -4.949206352233887
    6. ' fibonacci' → logprob: -5.199206352233887
    7. ' space' → logprob: -6.449206352233887
    8. ' foo' → logprob: -6.449206352233887
    9. ' process' → logprob: -6.574206352233887
    10. ' main' → logprob: -6.699206352233887

Token 15: '_food' (ID: 130692)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05109177529811859
    2. '_' → logprob: -3.4260916709899902
    3. '():' → logprob: -4.42609167098999
    4. ':' → logprob: -6.55109167098999
    5. '(:' → logprob: -6.55109167098999
    6. '(_' → logprob: -7.55109167098999
    7. '_:' → logprob: -8.051092147827148
    8. '```' → logprob: -8.551092147827148
    9. '(_:' → logprob: -8.801092147827148
    10. '):' → logprob: -9.301092147827148

Token 16: '_stack' (ID: 35650)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18989039957523346
    2. '_s' → logprob: -2.0648903846740723
    3. 's' → logprob: -4.564890384674072
    4. '_source' → logprob: -5.064890384674072
    5. '(' → logprob: -5.314890384674072
    6. '_sur' → logprob: -5.564890384674072
    7. '_problem' → logprob: -6.564890384674072
    8. '_chain' → logprob: -6.564890384674072
    9. '_p' → logprob: -6.689890384674072
    10. '_distribution' → logprob: -6.689890384674072

Token 17: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.579832911491394
    2. '():' → logprob: -0.829832911491394
    3. '(:' → logprob: -6.079833030700684
    4. '_' → logprob: -7.329833030700684
    5. ':' → logprob: -7.954833030700684
    6. '(":' → logprob: -9.829833030700684
    7. '(user' → logprob: -10.329833030700684
    8. '):' → logprob: -10.329833030700684
    9. '(line' → logprob: -10.329833030700684
    10. ' ():' → logprob: -10.579833030700684

Token 18: 'foods' (ID: 144120)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06927338242530823
    2. 'n' → logprob: -3.3192734718322754
    3. 'stack' → logprob: -4.444273471832275
    4. ')' → logprob: -4.694273471832275
    5. 'N' → logprob: -5.069273471832275
    6. 'depth' → logprob: -7.694273471832275
    7. 'food' → logprob: -7.694273471832275
    8. 'input' → logprob: -8.444272994995117
    9. 'size' → logprob: -8.569272994995117
    10. 'capacity' → logprob: -8.694272994995117

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004943408537656069
    2. ')' → logprob: -5.504943370819092
    3. ':' → logprob: -7.504943370819092
    4. '[' → logprob: -8.50494384765625
    5. ',' → logprob: -10.00494384765625
    6. '):
' → logprob: -10.75494384765625
    7. '_list' → logprob: -11.25494384765625
    8. '[]):' → logprob: -11.75494384765625
    9. ' ):' → logprob: -12.00494384765625
    10. '_' → logprob: -13.12994384765625

Token 20: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4867715835571289
    2. '   ' → logprob: -0.9867715835571289
    3. ':
' → logprob: -4.861771583557129
    4. '    ' → logprob: -6.111771583557129
    5. '```' → logprob: -6.861771583557129
    6. '    
' → logprob: -8.111771583557129
    7. '\' → logprob: -8.611771583557129
    8. ' ' → logprob: -8.611771583557129
    9. ':return' → logprob: -8.736771583557129
    10. ' :' → logprob: -8.736771583557129

Token 21: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07073666900396347
    2. ' if' → logprob: -3.8207366466522217
    3. ' stack' → logprob: -4.695736885070801
    4. 'n' (adapté à ' n') → logprob: -4.945736885070801
    5. '    ' → logprob: -4.945736885070801
    6. ' n' → logprob: -5.070736885070801
    7. 'stack' → logprob: -5.945736885070801
    8. '```' → logprob: -5.945736885070801
    9. '    
' → logprob: -6.070736885070801
    10. '\n' → logprob: -6.695736885070801

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016262158751487732
    2. '=' → logprob: -4.141262054443359
    3. ' ' → logprob: -8.76626205444336
    4. ',' → logprob: -10.64126205444336
    5. ')' → logprob: -11.14126205444336
    6. '   ' → logprob: -11.64126205444336
    7. '  ' → logprob: -12.14126205444336
    8. '_' → logprob: -12.39126205444336
    9. '=int' → logprob: -12.51626205444336
    10. ' ,' → logprob: -12.89126205444336

Token 23: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.06196948140859604
    2. 'len' → logprob: -2.811969518661499
    3. ' int' → logprob: -13.686969757080078
    4. '(len' → logprob: -15.311969757080078
    5. 'int' → logprob: -15.686969757080078
    6. '=len' → logprob: -15.811969757080078
    7. '[len' → logprob: -16.311969757080078
    8. '	len' → logprob: -17.311969757080078
    9. '   ' → logprob: -18.561969757080078
    10. ',len' → logprob: -18.936969757080078

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '(food' → logprob: -14.750000953674316
    3. ' (' → logprob: -15.250000953674316
    4. 'foods' → logprob: -15.875000953674316
    5. ' foods' → logprob: -17.5
    6. '(
' → logprob: -19.25
    7. '```' → logprob: -20.125
    8. 's' → logprob: -20.375
    9. '(s' → logprob: -20.75
    10. '()' → logprob: -20.875

Token 25: 'foods' (ID: 144120)
  Prédit: 'foods'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' → logprob: -0.0013558330247178674
    2. ' foods' → logprob: -6.6263556480407715
    3. 'food' → logprob: -11.12635612487793
    4. '(' → logprob: -11.62635612487793
    5. ')' → logprob: -12.75135612487793
    6. ' ' → logprob: -14.37635612487793
    7. '   ' → logprob: -14.50135612487793
    8. 'Foods' → logprob: -15.00135612487793
    9. 'n' → logprob: -15.25135612487793
    10. '(food' → logprob: -15.37635612487793

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1054253011243418e-05
    2. ')
' → logprob: -11.375020980834961
    3. '   ' → logprob: -11.875020980834961
    4. ' )' → logprob: -14.250020980834961
    5. ')n' → logprob: -14.500020980834961
    6. '#' → logprob: -14.875020980834961
    7. ' ' → logprob: -15.125020980834961
    8. ')#' → logprob: -15.250020980834961
    9. ')return' → logprob: -15.500020980834961
    10. ']' → logprob: -16.87502098083496

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09301771968603134
    2. 'dp' → logprob: -3.343017816543579
    3. ' dp' → logprob: -4.093017578125
    4. '
' → logprob: -4.093017578125
    5. '    
' → logprob: -4.843017578125
    6. '```' → logprob: -5.593017578125
    7. ' stack' → logprob: -6.093017578125
    8. 'stack' → logprob: -6.843017578125
    9. ' DP' → logprob: -7.468017578125
    10. 'DP' → logprob: -7.718017578125

Token 28: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3006150722503662
    2. ' stack' → logprob: -1.8006150722503662
    3. 'dp' → logprob: -3.175615072250366
    4. ' max' → logprob: -4.175615310668945
    5. 'stack' → logprob: -4.675615310668945
    6. ' result' → logprob: -5.300615310668945
    7. ' prefix' → logprob: -5.425615310668945
    8. ' left' → logprob: -5.550615310668945
    9. ' prev' → logprob: -6.925615310668945
    10. ' next' → logprob: -6.925615310668945

Token 29: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3836055397987366
    2. ' dp' → logprob: -1.7586054801940918
    3. ' stack' → logprob: -2.633605480194092
    4. 'stack' → logprob: -3.008605480194092
    5. 'max' → logprob: -5.508605480194092
    6. ' max' → logprob: -5.508605480194092
    7. '   ' → logprob: -6.133605480194092
    8. 'prefix' → logprob: -6.633605480194092
    9. 'prev' → logprob: -6.758605480194092
    10. ' left' → logprob: -6.883605480194092

Token 30: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -4.7994282795116305e-05
    2. '=' → logprob: -11.00004768371582
    3. '[' → logprob: -11.12504768371582
    4. ' ' → logprob: -11.87504768371582
    5. '_' → logprob: -12.37504768371582
    6. ' =[' → logprob: -14.25004768371582
    7. '```' → logprob: -14.37504768371582
    8. '[]' → logprob: -14.50004768371582
    9. ',' → logprob: -14.62504768371582
    10. '<|end|>' → logprob: -14.75004768371582

Token 31: 'mask' (ID: 22527)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8492444753646851
    2. '][' → logprob: -0.9742444753646851
    3. ']' → logprob: -2.2242445945739746
    4. 'n' → logprob: -2.9742445945739746
    5. '[i' → logprob: -4.724244594573975
    6. ',' → logprob: -4.974244594573975
    7. ')' → logprob: -5.349244594573975
    8. ' i' → logprob: -5.724244594573975
    9. '])' → logprob: -6.474244594573975
    10. ' ][' → logprob: -6.724244594573975

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014002361334860325
    2. '][' → logprob: -4.389002323150635
    3. ' ]' → logprob: -6.639002323150635
    4. ' ][' → logprob: -9.139002799987793
    5. ']=' → logprob: -10.264002799987793
    6. '][]' → logprob: -11.264002799987793
    7. ',' → logprob: -12.139002799987793
    8. ')' → logprob: -12.389002799987793
    9. '   ' → logprob: -12.514002799987793
    10. ']:' → logprob: -12.764002799987793

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004808414727449417
    2. '=' → logprob: -5.37980842590332
    3. '[' → logprob: -9.12980842590332
    4. ' ' → logprob: -10.12980842590332
    5. ']' → logprob: -10.62980842590332
    6. ' =[' → logprob: -12.62980842590332
    7. ',' → logprob: -12.75480842590332
    8. ')' → logprob: -12.87980842590332
    9. ' ]' → logprob: -13.25480842590332
    10. '[]' → logprob: -14.12980842590332

Token 34: ' (' (ID: 350)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -1.1150436401367188
    2. '0' → logprob: -1.3650436401367188
    3. 'float' → logprob: -2.2400436401367188
    4. ' ' → logprob: -2.6150436401367188
    5. ' max' → logprob: -2.7400436401367188
    6. ' -' → logprob: -3.1150436401367188
    7. '-' → logprob: -3.7400436401367188
    8. ' [' → logprob: -3.8650436401367188
    9. 'max' → logprob: -3.8650436401367188
    10. ' maximum' → logprob: -4.365043640136719

Token 35: 'total' (ID: 9577)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7568476796150208
    2. '0' → logprob: -2.006847620010376
    3. ' max' → logprob: -2.631847620010376
    4. 'min' → logprob: -3.006847620010376
    5. 'length' → logprob: -3.131847620010376
    6. 'number' → logprob: -3.631847620010376
    7. ')' → logprob: -3.756847620010376
    8. ' length' → logprob: -3.756847620010376
    9. 'minimum' → logprob: -3.756847620010376
    10. 'int' → logprob: -3.881847620010376

Token 36: '_weight' (ID: 34711)
  Prédit: '_cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cal' → logprob: -1.1472259759902954
    2. '_del' → logprob: -1.7722259759902954
    3. '_value' → logprob: -1.8972259759902954
    4. '_score' → logprob: -2.772225856781006
    5. '_t' → logprob: -3.022225856781006
    6. '_s' → logprob: -3.272225856781006
    7. ',' → logprob: -3.522225856781006
    8. '_points' → logprob: -3.522225856781006
    9. '_' → logprob: -4.022225856781006
    10. ' _' → logprob: -4.147225856781006

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.828512363834307e-05
    2. ')' → logprob: -10.250088691711426
    3. ' ,' → logprob: -10.375088691711426
    4. ',
' → logprob: -11.375088691711426
    5. '<|end|>' → logprob: -13.000088691711426
    6. '),' → logprob: -13.750088691711426
    7. ' ' → logprob: -14.125088691711426
    8. ',)' → logprob: -14.250088691711426
    9. '‌,' → logprob: -14.375088691711426
    10. '   ' → logprob: -14.500088691711426

Token 38: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5745099782943726
    2. ' count' → logprob: -1.8245099782943726
    3. ' max' → logprob: -2.574510097503662
    4. 'total' → logprob: -3.324510097503662
    5. ' min' → logprob: -3.824510097503662
    6. ' stack' → logprob: -3.949510097503662
    7. 'count' → logprob: -4.324510097503662
    8. ')' → logprob: -4.574510097503662
    9. ' mask' → logprob: -4.574510097503662
    10. 'max' → logprob: -4.824510097503662

Token 39: '_weight' (ID: 34711)
  Prédit: '_del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_del' → logprob: -1.1327800750732422
    2. '_value' → logprob: -1.6327800750732422
    3. '_t' → logprob: -2.132780075073242
    4. '_cal' → logprob: -2.382780075073242
    5. '_s' → logprob: -2.882780075073242
    6. '_' → logprob: -3.632780075073242
    7. '_count' → logprob: -3.632780075073242
    8. '_pro' → logprob: -3.882780075073242
    9. '_price' → logprob: -4.007780075073242
    10. '_h' → logprob: -4.257780075073242

Token 40: 'ed' (ID: 295)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11487302929162979
    2. ',' → logprob: -2.239872932434082
    3. '_sum' → logprob: -8.114872932434082
    4. '_stack' → logprob: -8.114872932434082
    5. '),' → logprob: -8.739872932434082
    6. '_max' → logprob: -9.114872932434082
    7. ')_' → logprob: -9.239872932434082
    8. '_' → logprob: -9.364872932434082
    9. ' )' → logprob: -9.489872932434082
    10. '_count' → logprob: -9.864872932434082

Token 41: '_position' (ID: 23739)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.06949393451213837
    2. '_sum' → logprob: -3.1944940090179443
    3. '_cost' → logprob: -5.069493770599365
    4. '_time' → logprob: -5.694493770599365
    5. '_' → logprob: -6.319493770599365
    6. '_depth' → logprob: -6.319493770599365
    7. '_score' → logprob: -6.444493770599365
    8. '_count' → logprob: -6.444493770599365
    9. '_d' → logprob: -7.069493770599365
    10. 'value' → logprob: -7.194493770599365

Token 42: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023500638082623482
    2. ',' → logprob: -4.398500442504883
    3. 's' → logprob: -4.523500442504883
    4. ' )' → logprob: -11.023500442504883
    5. '),' → logprob: -11.023500442504883
    6. ',)' → logprob: -11.398500442504883
    7. ')s' → logprob: -11.523500442504883
    8. '_list' → logprob: -11.773500442504883
    9. ')`' → logprob: -13.273500442504883
    10. '_,' → logprob: -13.523500442504883

Token 43: ' list' (ID: 1562)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.7414056062698364
    2. ' count' → logprob: -1.8664056062698364
    3. ' None' → logprob: -2.116405487060547
    4. ' mask' → logprob: -2.241405487060547
    5. ' best' → logprob: -2.866405487060547
    6. ')' → logprob: -3.116405487060547
    7. ' dp' → logprob: -3.241405487060547
    8. ' max' → logprob: -3.366405487060547
    9. ' prev' → logprob: -3.491405487060547
    10. ' min' → logprob: -3.491405487060547

Token 44: '_order' (ID: 17446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17056916654109955
    2. '[int' → logprob: -2.2955691814422607
    3. '[' → logprob: -3.2955691814422607
    4. ' of' → logprob: -4.920568943023682
    5. '_of' → logprob: -5.545568943023682
    6. '())' → logprob: -5.920568943023682
    7. '<int' → logprob: -6.545568943023682
    8. '(' → logprob: -7.420568943023682
    9. '[])' → logprob: -7.545568943023682
    10. 'of' → logprob: -7.670568943023682

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002537728985771537
    2. 's' → logprob: -6.127537727355957
    3. ',' → logprob: -8.377537727355957
    4. '_)' → logprob: -10.627537727355957
    5. '_list' → logprob: -10.752537727355957
    6. ')_' → logprob: -11.002537727355957
    7. '_of' → logprob: -11.502537727355957
    8. '_' → logprob: -11.502537727355957
    9. ' )' → logprob: -11.877537727355957
    10. '),' → logprob: -12.377537727355957

Token 46: ' or' (ID: 503)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.737678587436676
    2. '   ' → logprob: -1.1126785278320312
    3. '[' → logprob: -2.8626785278320312
    4. '_' → logprob: -3.1126785278320312
    5. ' ' → logprob: -3.6126785278320312
    6. ')' → logprob: -3.8626785278320312
    7. '=' → logprob: -3.9876785278320312
    8. ',' → logprob: -5.237678527832031
    9. '
' → logprob: -5.612678527832031
    10. ']' → logprob: -5.612678527832031

Token 47: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.048598501831293106
    2. 'None' → logprob: -3.048598527908325
    3. '(None' → logprob: -11.548598289489746
    4. '_None' → logprob: -14.298598289489746
    5. ' ' → logprob: -15.923598289489746
    6. ')' → logprob: -16.048599243164062
    7. '   ' → logprob: -16.048599243164062
    8. ' ' → logprob: -16.298599243164062
    9. '_none' → logprob: -16.423599243164062
    10. '[]' → logprob: -16.673599243164062

Token 48: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2435250282287598
    2. '   ' → logprob: -1.3685250282287598
    3. '\n' → logprob: -1.6185250282287598
    4. '\' → logprob: -2.7435250282287598
    5. ' 
' → logprob: -2.8685250282287598
    6. '```' → logprob: -3.2435250282287598
    7. '    
' → logprob: -4.11852502822876
    8. ',' → logprob: -4.61852502822876
    9. ' ' → logprob: -4.61852502822876
    10. '  
' → logprob: -4.74352502822876

Token 49: ' impossible' (ID: 19786)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.2004360854625702
    2. 'None' → logprob: -2.9504361152648926
    3. ' None' → logprob: -2.9504361152648926
    4. ' impossible' → logprob: -3.3254361152648926
    5. ' not' → logprob: -3.9504361152648926
    6. ' the' → logprob: -5.200436115264893
    7. 'no' → logprob: -5.325436115264893
    8. ' dp' → logprob: -5.825436115264893
    9. 'dp' → logprob: -6.075436115264893
    10. ' mask' → logprob: -6.700436115264893

Token 50: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48177599906921387
    2. '   ' → logprob: -1.9817759990692139
    3. ')' → logprob: -2.231775999069214
    4. '```' → logprob: -2.856775999069214
    5. '
' → logprob: -3.856775999069214
    6. ',' → logprob: -4.231776237487793
    7. '=' → logprob: -4.731776237487793
    8. '_' → logprob: -5.356776237487793
    9. '[' → logprob: -5.606776237487793
    10. ')
' → logprob: -5.731776237487793

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07182663679122925
    2. '```' → logprob: -4.321826457977295
    3. '
' → logprob: -4.446826457977295
    4. '_' → logprob: -4.571826457977295
    5. ' ' → logprob: -4.946826457977295
    6. '[' → logprob: -5.321826457977295
    7. ' 
' → logprob: -5.446826457977295
    8. ',' → logprob: -5.821826457977295
    9. '    
' → logprob: -5.946826457977295
    10. ')' → logprob: -6.196826457977295

Token 52: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.2025379091501236
    2. 'dp' (adapté à ' dp') → logprob: -1.7025378942489624
    3. 'd' → logprob: -7.452538013458252
    4. '	dp' → logprob: -8.577537536621094
    5. '_dp' → logprob: -8.952537536621094
    6. '\' → logprob: -9.952537536621094
    7. ' ' → logprob: -10.452537536621094
    8. '   ' → logprob: -10.452537536621094
    9. '```' → logprob: -10.702537536621094
    10. ' d' → logprob: -10.952537536621094

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017763269133865833
    2. '=' → logprob: -6.876776218414307
    3. '[' → logprob: -7.251776218414307
    4. ' =[' → logprob: -11.251776695251465
    5. '=[' → logprob: -11.751776695251465
    6. ' ' → logprob: -12.501776695251465
    7. ']' → logprob: -13.126776695251465
    8. '```' → logprob: -13.501776695251465
    9. '[:]' → logprob: -13.751776695251465
    10. '=[]' → logprob: -13.876776695251465

Token 54: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.018602296710014343
    2. '[' → logprob: -4.39360237121582
    3. '{}' → logprob: -6.26860237121582
    4. ' {' → logprob: -6.39360237121582
    5. ' {}' → logprob: -6.51860237121582
    6. '{' → logprob: -6.89360237121582
    7. '[n' → logprob: -12.51860237121582
    8. ' ' → logprob: -12.64360237121582
    9. ' dict' → logprob: -13.01860237121582
    10. '[int' → logprob: -14.01860237121582

Token 55: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.002477200934663415
    2. ' None' → logprob: -6.002477169036865
    3. '(None' → logprob: -14.127477645874023
    4. '   ' → logprob: -15.502477645874023
    5. '_None' → logprob: -15.627477645874023
    6. ',None' → logprob: -16.002477645874023
    7. '.None' → logprob: -16.752477645874023
    8. ' ' → logprob: -16.877477645874023
    9. ')' → logprob: -17.002477645874023
    10. '-' → logprob: -17.002477645874023

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007194612408056855
    2. ' ]' → logprob: -7.7507195472717285
    3. ']*(' → logprob: -9.00071907043457
    4. ' for' → logprob: -9.37571907043457
    5. ']*' → logprob: -9.62571907043457
    6. ')' → logprob: -12.12571907043457
    7. '   ' → logprob: -12.62571907043457
    8. ')]' → logprob: -13.75071907043457
    9. '](' → logprob: -13.87571907043457
    10. ']+' → logprob: -14.12571907043457

Token 57: ' *' (ID: 425)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48269137740135193
    2. '*(' → logprob: -1.7326914072036743
    3. ' *' → logprob: -2.8576912879943848
    4. '(n' → logprob: -3.4826912879943848
    5. ']' → logprob: -3.4826912879943848
    6. '[' → logprob: -3.7326912879943848
    7. '*' → logprob: -3.9826912879943848
    8. ']*(' → logprob: -4.232691287994385
    9. ' for' → logprob: -4.482691287994385
    10. ' +' → logprob: -5.607691287994385

Token 58: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001038883114233613
    2. ' (' → logprob: -6.876039028167725
    3. '   ' → logprob: -12.251038551330566
    4. '(n' → logprob: -14.626038551330566
    5. '\(' → logprob: -14.751038551330566
    6. '((' → logprob: -15.126038551330566
    7. ' ' → logprob: -16.251039505004883
    8. '```' → logprob: -16.876039505004883
    9. 'n' → logprob: -17.251039505004883
    10. '1' → logprob: -17.251039505004883

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000916935910936445
    2. '(' → logprob: -7.000916957855225
    3. ' ' → logprob: -12.750916481018066
    4. '   ' → logprob: -13.375916481018066
    5. '2' → logprob: -14.375916481018066
    6. '```' → logprob: -16.375917434692383
    7. ' (' → logprob: -16.500917434692383
    8. ')' → logprob: -16.750917434692383
    9. '`' → logprob: -17.250917434692383
    10. '
' → logprob: -17.875917434692383

Token 60: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.038044363260269165
    2. ' <<' → logprob: -3.2880444526672363
    3. '1' → logprob: -13.288043975830078
    4. '<<(' → logprob: -14.913043975830078
    5. '<<<' → logprob: -15.163043975830078
    6. '<' → logprob: -15.788043975830078
    7. '2' → logprob: -16.038043975830078
    8. '>>' → logprob: -16.163043975830078
    9. '```' → logprob: -16.163043975830078
    10. '   ' → logprob: -16.663043975830078

Token 61: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.610702363715973e-06
    2. ' n' → logprob: -11.625009536743164
    3. '	n' → logprob: -15.125009536743164
    4. ')n' → logprob: -15.375009536743164
    5. '   ' → logprob: -18.375009536743164
    6. '_n' → logprob: -18.750009536743164
    7. '```' → logprob: -18.750009536743164
    8. '(n' → logprob: -19.250009536743164
    9. '<n' → logprob: -19.750009536743164
    10. '
' → logprob: -20.250009536743164

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ' )' → logprob: -11.500020027160645
    3. ')
' → logprob: -11.875020027160645
    4. '`)' → logprob: -14.125020027160645
    5. '))' → logprob: -14.625020027160645
    6. ')`' → logprob: -14.750020027160645
    7. ')

' → logprob: -15.250020027160645
    8. '   ' → logprob: -15.750020027160645
    9. '')' → logprob: -15.875020027160645
    10. ')
' → logprob: -16.625019073486328

Token 63: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07098653167486191
    2. '
' → logprob: -3.57098650932312
    3. '   ' → logprob: -4.195986747741699
    4. ' dp' → logprob: -4.695986747741699
    5. '  
' → logprob: -5.195986747741699
    6. '```' → logprob: -5.445986747741699
    7. '    
' → logprob: -5.945986747741699
    8. ' 
' → logprob: -6.695986747741699
    9. '	dp' → logprob: -7.195986747741699
    10. ' ' → logprob: -7.445986747741699

Token 64: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.47437065839767456
    2. ' dp' → logprob: -0.9743706583976746
    3. '   ' → logprob: -8.974370956420898
    4. '	dp' → logprob: -9.349370956420898
    5. '_dp' → logprob: -10.849370956420898
    6. '
' → logprob: -10.974370956420898
    7. ' ' → logprob: -11.099370956420898
    8. ' 
' → logprob: -11.724370956420898
    9. '```' → logprob: -11.974370956420898
    10. '(dp' → logprob: -12.224370956420898

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -14.625000953674316
    3. '```' → logprob: -16.25
    4. '0' → logprob: -17.125
    5. '\[' → logprob: -17.125
    6. ')[' → logprob: -18.25
    7. '][' → logprob: -18.375
    8. ' ' → logprob: -18.5
    9. '`' → logprob: -19.875
    10. '[(' → logprob: -20.0

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. '(' → logprob: -15.500001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '1' → logprob: -16.312501907348633
    6. '000' → logprob: -16.625001907348633
    7. '00' → logprob: -17.125001907348633
    8. '[' → logprob: -17.187501907348633
    9. '```' → logprob: -17.875001907348633
    10. ')' → logprob: -18.062501907348633

Token 67: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033880260307341814
    2. ']' → logprob: -6.128387928009033
    3. ' )' → logprob: -7.003387928009033
    4. ')=' → logprob: -8.253388404846191
    5. '=' → logprob: -11.378388404846191
    6. '])' → logprob: -12.128388404846191
    7. ')]' → logprob: -12.253388404846191
    8. '）' → logprob: -12.378388404846191
    9. ']=' → logprob: -12.878388404846191
    10. ' ]' → logprob: -13.003388404846191

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687896728515625
    2. '=' → logprob: -1.1368789672851562
    3. '=(' → logprob: -12.636878967285156
    4. ' =(' → logprob: -13.011878967285156
    5. ')' → logprob: -14.386878967285156
    6. '=True' → logprob: -15.011878967285156
    7. ' ' → logprob: -15.136878967285156
    8. ')=' → logprob: -15.636878967285156
    9. '=None' → logprob: -15.886878967285156
    10. '(' → logprob: -16.261878967285156

Token 69: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019288709154352546
    2. ' (' → logprob: -6.251928806304932
    3. '((' → logprob: -15.37692928314209
    4. '0' → logprob: -17.376928329467773
    5. ' ' → logprob: -17.376928329467773
    6. '(True' → logprob: -18.251928329467773
    7. '   ' → logprob: -18.876928329467773
    8. '(None' → logprob: -18.876928329467773
    9. '(False' → logprob: -19.376928329467773
    10. '  ' → logprob: -20.501928329467773

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025864813942462206
    2. '(' → logprob: -6.002586364746094
    3. ' ' → logprob: -9.127586364746094
    4. ' (' → logprob: -13.127586364746094
    5. '   ' → logprob: -16.127586364746094
    6. '  ' → logprob: -16.752586364746094
    7. ')' → logprob: -16.877586364746094
    8. '(
' → logprob: -18.002586364746094
    9. '    ' → logprob: -18.502586364746094
    10. '[' → logprob: -18.752586364746094

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2378600735682994e-05
    2. ' ,' → logprob: -10.625032424926758
    3. '0' → logprob: -12.500032424926758
    4. ')' → logprob: -13.000032424926758
    5. ',
' → logprob: -13.750032424926758
    6. ',None' → logprob: -14.875032424926758
    7. ',,' → logprob: -15.250032424926758
    8. ',,,' → logprob: -16.125032424926758
    9. '),' → logprob: -16.250032424926758
    10. ',)' → logprob: -16.625032424926758

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009756323881447315
    2. ' ' → logprob: -4.634756088256836
    3. '   ' → logprob: -15.634756088256836
    4. '  ' → logprob: -16.259756088256836
    5. ')' → logprob: -17.509756088256836
    6. '    ' → logprob: -17.884756088256836
    7. ' ' → logprob: -17.947256088256836
    8. '00' → logprob: -18.072256088256836
    9. '000' → logprob: -18.072256088256836
    10. '۰' → logprob: -18.572256088256836

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005541055579669774
    2. ' ' → logprob: -7.500554084777832
    3. '   ' → logprob: -15.375554084777832
    4. '  ' → logprob: -15.500554084777832
    5. '000' → logprob: -16.25055503845215
    6. '00' → logprob: -16.43805503845215
    7. ')' → logprob: -16.43805503845215
    8. '-' → logprob: -17.00055503845215
    9. ',' → logprob: -17.06305503845215
    10. '    ' → logprob: -17.37555503845215

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013524403038900346
    2. ' ,' → logprob: -9.50013542175293
    3. ')' → logprob: -9.87513542175293
    4. '   ' → logprob: -13.25013542175293
    5. '[],' → logprob: -13.37513542175293
    6. ',)' → logprob: -13.37513542175293
    7. '),' → logprob: -14.00013542175293
    8. ',None' → logprob: -14.50013542175293
    9. '[]' → logprob: -14.62513542175293
    10. ',
' → logprob: -14.62513542175293

Token 75: ' [])

' (ID: 124233)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.028304068371653557
    2. '[]' → logprob: -3.653304100036621
    3. ' [])' → logprob: -6.278304100036621
    4. '[])
' → logprob: -9.903304100036621
    5. ')' → logprob: -10.403304100036621
    6. '[]
' → logprob: -11.028304100036621
    7. '[]

' → logprob: -11.153304100036621
    8. ' []' → logprob: -12.153304100036621
    9. '[' → logprob: -12.778304100036621
    10. '[]}' → logprob: -13.278304100036621

Token 76: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.1900230050086975
    2. ' for' → logprob: -1.9400229454040527
    3. ' ' → logprob: -4.440022945404053
    4. '   ' → logprob: -5.440022945404053
    5. '
' → logprob: -5.690022945404053
    6. 'for' → logprob: -5.690022945404053
    7. '  
' → logprob: -6.315022945404053
    8. '<|end|>' → logprob: -6.565022945404053
    9. '    
' → logprob: -6.815022945404053
    10. ')' → logprob: -7.815022945404053

Token 77: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.47606199979782104
    2. ' for' → logprob: -0.976061999797821
    3. '   ' → logprob: -6.226061820983887
    4. '```' → logprob: -12.226061820983887
    5. '	for' → logprob: -14.601061820983887
    6. '    
' → logprob: -15.851061820983887
    7. ' 
' → logprob: -16.101062774658203
    8. ' ' → logprob: -16.351062774658203
    9. '
' → logprob: -16.726062774658203
    10. ' ```' → logprob: -16.976062774658203

Token 78: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.009962421841919422
    2. 'mask' → logprob: -4.634962558746338
    3. ' i' → logprob: -8.88496208190918
    4. 'i' → logprob: -11.25996208190918
    5. '   ' → logprob: -11.38496208190918
    6. '	mask' → logprob: -11.75996208190918
    7. ' m' → logprob: -11.88496208190918
    8. ' subset' → logprob: -12.00996208190918
    9. 'm' → logprob: -12.25996208190918
    10. ' s' → logprob: -12.75996208190918

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026503711938858032
    2. 'in' → logprob: -3.651503801345825
    3. '+' → logprob: -9.401503562927246
    4. ' ' → logprob: -9.401503562927246
    5. '1' → logprob: -11.776503562927246
    6. '	in' → logprob: -12.276503562927246
    7. ',' → logprob: -12.526503562927246
    8. '   ' → logprob: -12.651503562927246
    9. '_in' → logprob: -12.901503562927246
    10. 'In' → logprob: -12.901503562927246

Token 80: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931899785995483
    2. 'range' → logprob: -0.6931899785995483
    3. ' ' → logprob: -10.81818962097168
    4. '   ' → logprob: -10.94318962097168
    5. '  ' → logprob: -13.44318962097168
    6. '	range' → logprob: -13.44318962097168
    7. '(range' → logprob: -13.69318962097168
    8. ')' → logprob: -14.69318962097168
    9. '    ' → logprob: -15.19318962097168
    10. '```' → logprob: -16.19318962097168

Token 81: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.983476436696947e-05
    2. ' (' → logprob: -10.500089645385742
    3. '(n' → logprob: -10.625089645385742
    4. '(len' → logprob: -10.625089645385742
    5. '(mask' → logprob: -11.750089645385742
    6. '((' → logprob: -12.500089645385742
    7. '1' → logprob: -14.000089645385742
    8. '   ' → logprob: -14.250089645385742
    9. ' ' → logprob: -15.375089645385742
    10. '(
' → logprob: -16.375089645385742

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011321206111460924
    2. '(' → logprob: -6.876132011413574
    3. ' ' → logprob: -10.001132011413574
    4. 'n' → logprob: -10.001132011413574
    5. '   ' → logprob: -12.501132011413574
    6. ' (' → logprob: -13.126132011413574
    7. '0' → logprob: -13.251132011413574
    8. ')' → logprob: -14.751132011413574
    9. 'len' → logprob: -14.876132011413574
    10. '(n' → logprob: -16.12613296508789

Token 83: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.10339438915252686
    2. '<<' → logprob: -2.8533945083618164
    3. ',' → logprob: -3.2283945083618164
    4. ' ,' → logprob: -7.478394508361816
    5. '(' → logprob: -8.228394508361816
    6. '1' → logprob: -9.978394508361816
    7. ' (' → logprob: -10.353394508361816
    8. '   ' → logprob: -11.228394508361816
    9. ')' → logprob: -11.353394508361816
    10. ' ' → logprob: -11.478394508361816

Token 84: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012515541166067123
    2. ' n' → logprob: -4.387515544891357
    3. '	n' → logprob: -12.5125150680542
    4. ' ' → logprob: -14.0125150680542
    5. ')n' → logprob: -14.2625150680542
    6. '   ' → logprob: -14.7625150680542
    7. '
' → logprob: -16.137516021728516
    8. '1' → logprob: -16.262516021728516
    9. '(n' → logprob: -16.512516021728516
    10. '_n' → logprob: -16.887516021728516

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04323211684823036
    2. '):
' → logprob: -3.1682322025299072
    3. ')' → logprob: -8.918231964111328
    4. ' ):' → logprob: -9.793231964111328
    5. '):
' → logprob: -10.418231964111328
    6. ':' → logprob: -11.918231964111328
    7. '):

' → logprob: -12.918231964111328
    8. ' ' → logprob: -13.668231964111328
    9. '   ' → logprob: -14.418231964111328
    10. ' ):
' → logprob: -14.543231964111328

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14437395334243774
    2. '   ' → logprob: -2.519373893737793
    3. ' ' → logprob: -4.394373893737793
    4. '        
' → logprob: -4.394373893737793
    5. ':' → logprob: -4.644373893737793
    6. '    ' → logprob: -5.019373893737793
    7. ' 
' → logprob: -5.644373893737793
    8. ':
' → logprob: -6.519373893737793
    9. '    
' → logprob: -6.769373893737793
    10. ' ' → logprob: -7.144373893737793

Token 87: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15069614350795746
    2. 'for' → logprob: -2.400696039199829
    3. '       ' → logprob: -3.900696039199829
    4. ' if' → logprob: -4.025696277618408
    5. 'if' (adapté à ' if') → logprob: -5.525696277618408
    6. '   ' → logprob: -5.525696277618408
    7. '    ' → logprob: -6.150696277618408
    8. '        
' → logprob: -8.02569580078125
    9. ' ' → logprob: -8.27569580078125
    10. '        ' → logprob: -9.02569580078125

Token 88: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.0789194256067276
    2. 'dp' → logprob: -2.5789194107055664
    3. '	dp' → logprob: -11.578919410705566
    4. '   ' → logprob: -11.703919410705566
    5. ' not' → logprob: -11.953919410705566
    6. '(dp' → logprob: -12.578919410705566
    7. '_dp' → logprob: -14.328919410705566
    8. '    ' → logprob: -14.453919410705566
    9. 'not' → logprob: -14.953919410705566
    10. '       ' → logprob: -15.203919410705566

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0564331205387134e-05
    2. '[m' → logprob: -11.87501049041748
    3. ' [' → logprob: -12.87501049041748
    4. '```' → logprob: -15.00001049041748
    5. '   ' → logprob: -15.37501049041748
    6. 'mask' → logprob: -16.000011444091797
    7. '\[' → logprob: -16.375011444091797
    8. '[mem' → logprob: -16.500011444091797
    9. ' ' → logprob: -17.000011444091797
    10. ')[' → logprob: -17.250011444091797

Token 90: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -2.816093228830141e-06
    2. ' mask' → logprob: -13.25000286102295
    3. 'm' → logprob: -14.75000286102295
    4. '	mask' → logprob: -15.00000286102295
    5. '(mask' → logprob: -16.250001907348633
    6. '_mask' → logprob: -16.500001907348633
    7. '```' → logprob: -17.750001907348633
    8. 'None' → logprob: -18.250001907348633
    9. 'masked' → logprob: -18.500001907348633
    10. 'max' → logprob: -18.875001907348633

Token 91: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012963043991476297
    2. ' is' → logprob: -7.376296520233154
    3. ')is' → logprob: -8.251296043395996
    4. 'is' → logprob: -8.376296043395996
    5. ' )' → logprob: -8.751296043395996
    6. ' ' → logprob: -12.001296043395996
    7. ']' → logprob: -12.126296043395996
    8. '   ' → logprob: -13.376296043395996
    9. '）' → logprob: -13.501296043395996
    10. ')==' → logprob: -13.626296043395996

Token 92: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014169269241392612
    2. 'is' → logprob: -4.264169216156006
    3. ' ' → logprob: -12.389169692993164
    4. ')' → logprob: -14.389169692993164
    5. '==' → logprob: -14.514169692993164
    6. ' )' → logprob: -15.764169692993164
    7. '    ' → logprob: -16.014169692993164
    8. ')is' → logprob: -16.264169692993164
    9. ' ' → logprob: -16.514169692993164
    10. '	is' → logprob: -16.639169692993164

Token 93: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.48736366629600525
    2. ' not' → logprob: -0.9873636960983276
    3. 'None' → logprob: -4.612363815307617
    4. 'not' → logprob: -5.737363815307617
    5. ' ' → logprob: -9.987363815307617
    6. '_None' → logprob: -14.987363815307617
    7. '   ' → logprob: -15.237363815307617
    8. '(None' → logprob: -15.362363815307617
    9. '  ' → logprob: -15.862363815307617
    10. '=None' → logprob: -16.362363815307617

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024907607585191727
    2. ':
' → logprob: -6.002490997314453
    3. '       ' → logprob: -11.502490997314453
    4. '           ' → logprob: -13.377490997314453
    5. ':return' → logprob: -13.377490997314453
    6. ' :' → logprob: -15.002490997314453
    7. ' continue' → logprob: -15.127490997314453
    8. '):' → logprob: -15.252490997314453
    9. '   ' → logprob: -15.377490997314453
    10. '):
' → logprob: -15.752490997314453

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015303362160921097
    2. ' continue' → logprob: -6.876530170440674
    3. 'continue' → logprob: -8.251530647277832
    4. '       ' → logprob: -10.001530647277832
    5. '               ' → logprob: -10.001530647277832
    6. '
' → logprob: -10.251530647277832
    7. '```' → logprob: -10.501530647277832
    8. '		' → logprob: -11.001530647277832
    9. '	       ' → logprob: -11.126530647277832
    10. '\n' → logprob: -11.251530647277832

Token 96: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7095221877098083
    2. ' continue' → logprob: -1.0845222473144531
    3. 'continue' (adapté à ' continue') → logprob: -1.9595222473144531
    4. '               ' → logprob: -3.584522247314453
    5. '       ' → logprob: -7.334522247314453
    6. '	continue' → logprob: -7.709522247314453
    7. '```' → logprob: -8.959522247314453
    8. '
' → logprob: -10.084522247314453
    9. '_continue' → logprob: -10.459522247314453
    10. '   ' → logprob: -10.584522247314453

Token 97: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33452484011650085
    2. '
' → logprob: -2.5845248699188232
    3. '        
' → logprob: -2.5845248699188232
    4. '   ' → logprob: -3.0845248699188232
    5. '    
' → logprob: -3.0845248699188232
    6. '  
' → logprob: -4.459524631500244
    7. '<|end|>' → logprob: -4.459524631500244
    8. ' 
' → logprob: -4.834524631500244
    9. '\' → logprob: -6.459524631500244
    10. ' for' → logprob: -6.709524631500244

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3089739978313446
    2. '   ' → logprob: -1.433974027633667
    3. '
' → logprob: -4.808973789215088
    4. '        
' → logprob: -5.308973789215088
    5. ' for' → logprob: -5.433973789215088
    6. '    
' → logprob: -5.558973789215088
    7. '```' → logprob: -5.808973789215088
    8. 'for' → logprob: -7.058973789215088
    9. '<|end|>' → logprob: -7.308973789215088
    10. '  
' → logprob: -7.933973789215088

Token 99: ' total' (ID: 3609)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6315470933914185
    2. 'for' → logprob: -0.8815470933914185
    3. '       ' → logprob: -3.006546974182129
    4. '   ' → logprob: -5.506546974182129
    5. 'weight' → logprob: -8.756546974182129
    6. '        
' → logprob: -9.256546974182129
    7. 'current' → logprob: -9.631546974182129
    8. ' weight' → logprob: -10.006546974182129
    9. '```' → logprob: -10.006546974182129
    10. 'total' (adapté à ' total') → logprob: -10.256546974182129

Token 100: '_w' (ID: 3567)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0017163509037345648
    2. '_' → logprob: -7.376716136932373
    3. '_w' → logprob: -7.501716136932373
    4. '_weights' → logprob: -8.501716613769531
    5. ',' → logprob: -8.626716613769531
    6. ' _' → logprob: -9.251716613769531
    7. '_mask' → logprob: -10.751716613769531
    8. '_,' → logprob: -11.501716613769531
    9. ',_' → logprob: -11.751716613769531
    10. 'weight' → logprob: -12.501716613769531

Token 101: ',' (ID: 11)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.017504828050732613
    2. ',' → logprob: -4.642504692077637
    3. 'e' → logprob: -4.892504692077637
    4. 'ight' → logprob: -9.767504692077637
    5. ' eight' → logprob: -9.892504692077637
    6. ',e' → logprob: -10.017504692077637
    7. 'eig' → logprob: -10.767504692077637
    8. 'eit' → logprob: -11.142504692077637
    9. 'ei' → logprob: -11.392504692077637
    10. 'eid' → logprob: -12.642504692077637

Token 102: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.356942743062973
    2. 'total' → logprob: -1.2319427728652954
    3. ' weighted' → logprob: -4.981942653656006
    4. 'weighted' → logprob: -6.606942653656006
    5. ' tot' → logprob: -9.231943130493164
    6. ' w' → logprob: -10.606943130493164
    7. ' pos' → logprob: -10.731943130493164
    8. 'w' → logprob: -11.106943130493164
    9. ' ' → logprob: -11.356943130493164
    10. 'weight' → logprob: -11.481943130493164

Token 103: '_wp' (ID: 115141)
  Prédit: '_wp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wp' → logprob: -0.24272942543029785
    2. '_w' → logprob: -1.7427294254302979
    3. '_pos' → logprob: -3.992729425430298
    4. '_p' → logprob: -3.992729425430298
    5. '_weight' → logprob: -5.742729187011719
    6. 'wp' → logprob: -8.617729187011719
    7. '_' → logprob: -10.367729187011719
    8. 'pos' → logprob: -10.617729187011719
    9. 'p' → logprob: -10.992729187011719
    10. '_position' → logprob: -11.117729187011719

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05684788152575493
    2. '=' → logprob: -2.9318478107452393
    3. ' =' → logprob: -6.431848049163818
    4. ' ,' → logprob: -9.05684757232666
    5. '_weight' → logprob: -9.68184757232666
    6. 'osition' → logprob: -10.18184757232666
    7. 'os' → logprob: -10.30684757232666
    8. 'ight' → logprob: -10.93184757232666
    9. 'w' → logprob: -11.18184757232666
    10. ')' → logprob: -11.18184757232666

Token 105: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.10257957875728607
    2. ' order' → logprob: -2.3525795936584473
    3. 'list' → logprob: -7.477579593658447
    4. 'lst' → logprob: -7.602579593658447
    5. '_order' → logprob: -7.727579593658447
    6. 'orders' → logprob: -8.852579116821289
    7. 'stack' → logprob: -8.977579116821289
    8. 'ordered' → logprob: -8.977579116821289
    9. ' lst' → logprob: -9.477579116821289
    10. '_list' → logprob: -10.102579116821289

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326373219490051
    2. ' =' → logprob: -0.7576373219490051
    3. ')' → logprob: -11.132637023925781
    4. 's' → logprob: -11.882637023925781
    5. ')=' → logprob: -12.257637023925781
    6. '<|end|>' → logprob: -12.507637023925781
    7. '<|end|>' → logprob: -13.132637023925781
    8. ',' → logprob: -14.132637023925781
    9. '```' → logprob: -14.382637023925781
    10. ']=' → logprob: -14.632637023925781

Token 107: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02637333609163761
    2. ' dp' → logprob: -3.6513733863830566
    3. '   ' → logprob: -9.651372909545898
    4. '	dp' → logprob: -12.401372909545898
    5. '       ' → logprob: -13.526372909545898
    6. '    ' → logprob: -14.151372909545898
    7. ' ' → logprob: -14.401372909545898
    8. '_dp' → logprob: -14.901372909545898
    9. 'd' → logprob: -15.026372909545898
    10. '
' → logprob: -15.151372909545898

Token 108: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. 'mask' → logprob: -15.250000953674316
    3. '[m' → logprob: -15.500000953674316
    4. '```' → logprob: -15.750000953674316
    5. ' [' → logprob: -16.0
    6. '[mem' → logprob: -17.375
    7. '	mask' → logprob: -17.75
    8. '\[' → logprob: -18.5
    9. '][' → logprob: -18.625
    10. '[token' → logprob: -18.875

Token 109: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.6240566083070007e-06
    2. ' mask' → logprob: -13.375001907348633
    3. '	mask' → logprob: -18.125001907348633
    4. '(mask' → logprob: -19.375001907348633
    5. '_mask' → logprob: -19.625001907348633
    6. 'm' → logprob: -20.000001907348633
    7. '   ' → logprob: -21.500001907348633
    8. ' ' → logprob: -22.000001907348633
    9. '[' → logprob: -22.125001907348633
    10. 'masked' → logprob: -22.625001907348633

Token 110: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020799139514565468
    2. ')
' → logprob: -3.895799160003662
    3. ']' → logprob: -9.520798683166504
    4. ')

' → logprob: -9.770798683166504
    5. ')]' → logprob: -9.895798683166504
    6. ')
' → logprob: -10.770798683166504
    7. '   ' → logprob: -10.895798683166504
    8. ' )' → logprob: -11.020798683166504
    9. ']
' → logprob: -11.770798683166504
    10. '])' → logprob: -12.645798683166504

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022515632212162018
    2. ' for' → logprob: -3.8975155353546143
    3. 'for' → logprob: -6.522515773773193
    4. '   ' → logprob: -8.022515296936035
    5. '```' → logprob: -9.272515296936035
    6. '        
' → logprob: -9.772515296936035
    7. '<|end|>' → logprob: -11.647515296936035
    8. '	for' → logprob: -12.647515296936035
    9. ' ' → logprob: -13.147515296936035
    10. '    
' → logprob: -13.772515296936035

Token 112: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1269807070493698
    2. ' for' → logprob: -2.126980781555176
    3. '   ' → logprob: -10.501980781555176
    4. '       ' → logprob: -10.751980781555176
    5. 'next' → logprob: -13.876980781555176
    6. '	for' → logprob: -13.876980781555176
    7. '    ' → logprob: -15.001980781555176
    8. 'length' → logprob: -15.251980781555176
    9. '
' → logprob: -15.501980781555176
    10. '```' → logprob: -15.501980781555176

Token 113: ' Position' (ID: 21829)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4741595387458801
    2. 'for' → logprob: -0.9741595387458801
    3. '       ' → logprob: -9.974159240722656
    4. '   ' → logprob: -10.599159240722656
    5. ' next' → logprob: -12.849159240722656
    6. '    ' → logprob: -12.974159240722656
    7. 'next' → logprob: -13.974159240722656
    8. ' ' → logprob: -14.099159240722656
    9. '```' → logprob: -14.099159240722656
    10. 'n' → logprob: -14.224159240722656

Token 114: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005777581129223108
    2. '=' → logprob: -5.755777359008789
    3. ' for' → logprob: -6.630777359008789
    4. 's' → logprob: -7.255777359008789
    5. 'for' → logprob: -7.880777359008789
    6. ' in' → logprob: -9.380777359008789
    7. ' ' → logprob: -10.380777359008789
    8. '_' → logprob: -11.380777359008789
    9. ' of' → logprob: -11.630777359008789
    10. ')' → logprob: -11.880777359008789

Token 115: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.15903589129447937
    2. 'next' → logprob: -2.0340359210968018
    3. ' the' → logprob: -4.534035682678223
    4. 'the' → logprob: -5.409035682678223
    5. 'len' → logprob: -8.534035682678223
    6. ' new' → logprob: -8.534035682678223
    7. 'new' → logprob: -8.909035682678223
    8. '_next' → logprob: -9.284035682678223
    9. ' last' → logprob: -9.409035682678223
    10. 'last' → logprob: -9.659035682678223

Token 116: ' food' (ID: 4232)
  Prédit: '_food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_food' → logprob: -1.058408260345459
    2. ' food' → logprob: -1.308408260345459
    3. 'food' → logprob: -1.308408260345459
    4. ' =' → logprob: -2.433408260345459
    5. ' item' → logprob: -5.183408260345459
    6. '_item' → logprob: -5.433408260345459
    7. '=' → logprob: -5.808408260345459
    8. 'item' → logprob: -6.433408260345459
    9. '_token' → logprob: -6.433408260345459
    10. ' dish' → logprob: -6.933408260345459

Token 117: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07279826700687408
    2. '=' → logprob: -2.697798252105713
    3. ' next' → logprob: -6.072798252105713
    4. 'next' → logprob: -7.947798252105713
    5. ' is' → logprob: -9.197798728942871
    6. ' for' → logprob: -10.822798728942871
    7. ':' → logprob: -11.197798728942871
    8. 'for' → logprob: -11.447798728942871
    9. '       ' → logprob: -11.697798728942871
    10. '_next' → logprob: -11.947798728942871

Token 118: ' bottom' (ID: 8725)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6052462458610535
    2. 'bin' → logprob: -1.9802463054656982
    3. ' bin' → logprob: -2.2302463054656982
    4. '1' → logprob: -2.8552463054656982
    5. ' ' → logprob: -2.8552463054656982
    6. ' len' → logprob: -3.1052463054656982
    7. '0' → logprob: -3.3552463054656982
    8. ' the' → logprob: -5.605246067047119
    9. 'bottom' → logprob: -6.230246067047119
    10. 'the' → logprob: -6.980246067047119

Token 119: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3528270423412323
    2. ' next' → logprob: -1.3528270721435547
    3. ' pos' → logprob: -4.477827072143555
    4. ' is' → logprob: -4.602827072143555
    5. '=' → logprob: -4.727827072143555
    6. 'next' → logprob: -5.477827072143555
    7. 'pos' → logprob: -6.352827072143555
    8. ' position' → logprob: -7.852827072143555
    9. ' len' → logprob: -7.852827072143555
    10. ' p' → logprob: -8.102827072143555

Token 120: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.22700227797031403
    2. ' len' → logprob: -1.6020022630691528
    3. 'n' → logprob: -7.477002143859863
    4. ' n' → logprob: -7.977002143859863
    5. '(len' → logprob: -7.977002143859863
    6. '   ' → logprob: -8.602002143859863
    7. '	len' → logprob: -10.227002143859863
    8. '=len' → logprob: -10.227002143859863
    9. '[len' → logprob: -10.352002143859863
    10. '       ' → logprob: -10.852002143859863

Token 121: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -0.0032707606442272663
    2. 'order' → logprob: -6.253270626068115
    3. '(' → logprob: -6.753270626068115
    4. ' order' → logprob: -8.878271102905273
    5. ' (' → logprob: -10.503271102905273
    6. '$order' → logprob: -13.628271102905273
    7. '   ' → logprob: -13.628271102905273
    8. '	order' → logprob: -13.628271102905273
    9. ')' → logprob: -14.003271102905273
    10. '(
' → logprob: -14.253271102905273

Token 122: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26580527424812317
    2. ' +' → logprob: -1.7658052444458008
    3. ' )' → logprob: -3.390805244445801
    4. '+' → logprob: -3.765805244445801
    5. ')+' → logprob: -5.265805244445801
    6. '   ' → logprob: -8.6408052444458
    7. ' ' → logprob: -9.5158052444458
    8. '),' → logprob: -11.1408052444458
    9. ' +
' → logprob: -11.5158052444458
    10. '()' → logprob: -11.6408052444458

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.868328920158092e-05
    2. ' ' → logprob: -10.500028610229492
    3. '0' → logprob: -13.875028610229492
    4. '   ' → logprob: -16.750028610229492
    5. '```' → logprob: -16.750028610229492
    6. '+' → logprob: -17.375028610229492
    7. '
' → logprob: -17.375028610229492
    8. '[' → logprob: -19.500028610229492
    9. '(' → logprob: -19.625028610229492
    10. '

' → logprob: -19.750028610229492

Token 124: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5879043340682983
    2. '
' → logprob: -2.087904453277588
    3. '        
' → logprob: -2.212904453277588
    4. '    
' → logprob: -2.837904453277588
    5. ' 
' → logprob: -3.212904453277588
    6. '   ' → logprob: -3.462904453277588
    7. '  
' → logprob: -3.837904453277588
    8. ' for' → logprob: -4.087904453277588
    9. '<|end|>' → logprob: -4.087904453277588
    10. 'for' → logprob: -5.462904453277588

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34805479645729065
    2. '   ' → logprob: -1.4730547666549683
    3. ' for' → logprob: -3.723054885864258
    4. '    
' → logprob: -4.848054885864258
    5. '<|end|>' → logprob: -4.848054885864258
    6. '        
' → logprob: -4.973054885864258
    7. ' 
' → logprob: -5.973054885864258
    8. '
' → logprob: -5.973054885864258
    9. '  
' → logprob: -5.973054885864258
    10. '	' → logprob: -6.223054885864258

Token 126: ' pos' (ID: 1253)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15521138906478882
    2. 'for' → logprob: -2.0302114486694336
    3. '       ' → logprob: -4.405211448669434
    4. '
' → logprob: -9.905211448669434
    5. '   ' → logprob: -10.155211448669434
    6. '	for' → logprob: -10.530211448669434
    7. ' next' → logprob: -10.780211448669434
    8. ' 
' → logprob: -10.905211448669434
    9. '        ' → logprob: -11.030211448669434
    10. '    ' → logprob: -11.030211448669434

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05494784563779831
    2. '=' → logprob: -2.929947853088379
    3. ')' → logprob: -10.554947853088379
    4. '+' → logprob: -11.554947853088379
    5. '_' → logprob: -12.054947853088379
    6. '_space' → logprob: -12.429947853088379
    7. '_weight' → logprob: -12.679947853088379
    8. '_next' → logprob: -13.179947853088379
    9. '   ' → logprob: -13.304947853088379
    10. '_pos' → logprob: -13.679947853088379

Token 128: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.12694847583770752
    2. 'len' → logprob: -2.126948356628418
    3. '(len' → logprob: -10.876948356628418
    4. '[len' → logprob: -14.501948356628418
    5. '	len' → logprob: -15.001948356628418
    6. ' n' → logprob: -15.501948356628418
    7. '=len' → logprob: -16.001949310302734
    8. '   ' → logprob: -16.626949310302734
    9. ' ' → logprob: -16.751949310302734
    10. ' ' → logprob: -16.751949310302734

Token 129: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -3.380904672667384e-05
    2. '(' → logprob: -10.875033378601074
    3. 'order' → logprob: -11.250033378601074
    4. ' (' → logprob: -13.625033378601074
    5. '$order' → logprob: -15.500033378601074
    6. ' order' → logprob: -15.875033378601074
    7. '	order' → logprob: -16.00003433227539
    8. '(position' → logprob: -17.12503433227539
    9. '```' → logprob: -17.50003433227539
    10. '(ord' → logprob: -17.50003433227539

Token 130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007451152894645929
    2. ')+' → logprob: -5.007451057434082
    3. '+' → logprob: -7.882451057434082
    4. ' )' → logprob: -8.382451057434082
    5. ' +' → logprob: -9.132451057434082
    6. '   ' → logprob: -11.632451057434082
    7. ')
' → logprob: -12.632451057434082
    8. '+)' → logprob: -13.257451057434082
    9. '<|end|>' → logprob: -13.757451057434082
    10. '()' → logprob: -13.882451057434082

Token 131: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42910099029541016
    2. ' +' → logprob: -1.0541009902954102
    3. '   ' → logprob: -8.55410099029541
    4. '+
' → logprob: -9.42910099029541
    5. ' +
' → logprob: -9.80410099029541
    6. '<|end|>' → logprob: -10.92910099029541
    7. ' ' → logprob: -11.30410099029541
    8. '
' → logprob: -11.42910099029541
    9. '<|end|>' → logprob: -11.55410099029541
    10. ')' → logprob: -11.80410099029541

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038074489566497505
    2. ' ' → logprob: -7.875380516052246
    3. '```' → logprob: -14.375380516052246
    4. '   ' → logprob: -17.625381469726562
    5. '(' → logprob: -18.000381469726562
    6. '`' → logprob: -19.000381469726562
    7. '<|end|>' → logprob: -19.125381469726562
    8. '  ' → logprob: -19.375381469726562
    9. ')' → logprob: -19.437881469726562
    10. '[' → logprob: -20.062881469726562

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -16.500001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '
' → logprob: -19.000001907348633
    6. '0' → logprob: -19.125001907348633
    7. '(' → logprob: -19.937501907348633
    8. '2' → logprob: -20.000001907348633
    9. '`' → logprob: -20.187501907348633
    10. '``' → logprob: -20.687501907348633

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.814969539642334
    2. '<|end|>' → logprob: -0.939969539642334
    3. '
' → logprob: -2.314969539642334
    4. '       ' → logprob: -4.189969539642334
    5. '<|end|>' → logprob: -4.314969539642334
    6. ' for' → logprob: -4.439969539642334
    7. ':' → logprob: -5.314969539642334
    8. '    
' → logprob: -5.439969539642334
    9. '  
' → logprob: -5.564969539642334
    10. ')' → logprob: -5.564969539642334

Token 135: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.779661238193512
    2. '<|end|>' → logprob: -0.904661238193512
    3. ' for' → logprob: -3.404661178588867
    4. '<|end|>' → logprob: -4.279661178588867
    5. '       ' → logprob: -4.404661178588867
    6. ' 
' → logprob: -4.404661178588867
    7. ':' → logprob: -4.529661178588867
    8. '  
' → logprob: -4.654661178588867
    9. '    
' → logprob: -4.779661178588867
    10. '
' → logprob: -4.904661178588867

Token 136: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4296123683452606
    2. ' for' → logprob: -1.054612398147583
    3. '	for' → logprob: -8.179612159729004
    4. '   ' → logprob: -8.429612159729004
    5. '       ' → logprob: -8.679612159729004
    6. '```' → logprob: -9.679612159729004
    7. '
' → logprob: -9.804612159729004
    8. '        
' → logprob: -10.179612159729004
    9. '    
' → logprob: -10.304612159729004
    10. ' 
' → logprob: -10.429612159729004

Token 137: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.001979072345420718
    2. 'i' → logprob: -6.376978874206543
    3. ' j' → logprob: -8.626978874206543
    4. ' next' → logprob: -9.876978874206543
    5. ' food' → logprob: -11.001978874206543
    6. ' nxt' → logprob: -11.126978874206543
    7. '```' → logprob: -12.251978874206543
    8. '	i' → logprob: -13.376978874206543
    9. '   ' → logprob: -13.376978874206543
    10. 'food' → logprob: -13.501978874206543

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007261329446919262
    2. 'in' → logprob: -7.250726222991943
    3. '	in' → logprob: -12.125725746154785
    4. '<|end|>' → logprob: -12.125725746154785
    5. ' ' → logprob: -12.250725746154785
    6. '_in' → logprob: -15.875725746154785
    7. '    ' → logprob: -16.6257266998291
    8. '<|end|>' → logprob: -16.6882266998291
    9. '  ' → logprob: -16.8132266998291
    10. ' not' → logprob: -16.8757266998291

Token 139: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008616226725280285
    2. 'range' → logprob: -4.7586164474487305
    3. ' ' → logprob: -14.38361644744873
    4. '(range' → logprob: -14.88361644744873
    5. '	range' → logprob: -15.13361644744873
    6. ')' → logprob: -15.75861644744873
    7. '[' → logprob: -16.008615493774414
    8. '   ' → logprob: -16.383615493774414
    9. '```' → logprob: -16.383615493774414
    10. 'n' → logprob: -17.383615493774414

Token 140: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03341088071465492
    2. ' n' → logprob: -3.6584107875823975
    3. 'n' → logprob: -5.033411026000977
    4. '(' → logprob: -8.033411026000977
    5. '	n' → logprob: -8.783411026000977
    6. ' (' → logprob: -9.533411026000977
    7. '<n' → logprob: -12.283411026000977
    8. ' ' → logprob: -13.033411026000977
    9. ',n' → logprob: -13.283411026000977
    10. '   ' → logprob: -13.283411026000977

Token 141: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16056855022907257
    2. '):' → logprob: -1.9105685949325562
    3. ' ):
' → logprob: -8.535568237304688
    4. ' ):' → logprob: -9.785568237304688
    5. '):
' → logprob: -10.535568237304688
    6. '   ' → logprob: -11.160568237304688
    7. '):

' → logprob: -11.160568237304688
    8. '       ' → logprob: -11.285568237304688
    9. '():
' → logprob: -12.035568237304688
    10. ')' → logprob: -12.285568237304688

Token 142: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7116072773933411
    2. ' ' → logprob: -0.9616072773933411
    3. '<|end|>' → logprob: -2.0866072177886963
    4. ' 
' → logprob: -7.086607456207275
    5. 'if' (adapté à ' if') → logprob: -7.211607456207275
    6. '<|end|>' → logprob: -8.086606979370117
    7. '```' → logprob: -8.336606979370117
    8. ' ' → logprob: -9.211606979370117
    9. '           ' → logprob: -9.586606979370117
    10. '       ' → logprob: -9.711606979370117

Token 144: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4360806941986084
    2. ' (' → logprob: -1.3110806941986084
    3. '(mask' → logprob: -2.5610806941986084
    4. ' mask' → logprob: -6.0610809326171875
    5. 'not' → logprob: -6.5610809326171875
    6. ' ((' → logprob: -6.8110809326171875
    7. '((' → logprob: -6.9360809326171875
    8. '(not' → logprob: -7.6860809326171875
    9. '(' → logprob: -8.561080932617188
    10. 'mask' → logprob: -9.436080932617188

Token 145: 'mask' (ID: 22527)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.7389547228813171
    2. 'mask' → logprob: -0.9889547228813171
    3. ' mask' → logprob: -2.363954782485962
    4. ' (' → logprob: -3.113954782485962
    5. ' not' → logprob: -4.738954544067383
    6. 'not' → logprob: -5.863954544067383
    7. ')' → logprob: -9.113954544067383
    8. '((' → logprob: -9.863954544067383
    9. '_mask' → logprob: -9.988954544067383
    10. ' ' → logprob: -10.738954544067383

Token 146: ' >>' (ID: 6832)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.006777542643249035
    2. '&' → logprob: -5.631777763366699
    3. '>>' → logprob: -5.881777763366699
    4. ' >>' → logprob: -8.2567777633667
    5. '&(' → logprob: -9.1317777633667
    6. ' &(' → logprob: -12.0067777633667
    7. '>>(' → logprob: -13.1317777633667
    8. ' &
' → logprob: -13.2567777633667
    9. '&p' → logprob: -14.2567777633667
    10. ' ' → logprob: -14.5067777633667

Token 147: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033546582562848926
    2. ' i' → logprob: -8.000335693359375
    3. ')i' → logprob: -17.875335693359375
    4. '	i' → logprob: -18.500335693359375
    5. ')' → logprob: -19.125335693359375
    6. '```' → logprob: -19.750335693359375
    7. ' ' → logprob: -20.375335693359375
    8. '<|end|>' → logprob: -20.875335693359375
    9. '_i' → logprob: -22.000335693359375
    10. '‌' → logprob: -22.250335693359375

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013985719997435808
    2. ')&' → logprob: -6.62639856338501
    3. ' )' → logprob: -10.126399040222168
    4. '&' → logprob: -10.376399040222168
    5. ' &' → logprob: -13.501399040222168
    6. '1' → logprob: -16.75139808654785
    7. '0' → logprob: -16.87639808654785
    8. '&amp' → logprob: -17.12639808654785
    9. '&)' → logprob: -17.37639808654785
    10. '```' → logprob: -18.12639808654785

Token 149: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.6865591406822205
    2. ' &' → logprob: -0.8115591406822205
    3. ')' → logprob: -3.0615592002868652
    4. ')&' → logprob: -5.186559200286865
    5. '&amp' → logprob: -9.561558723449707
    6. ' )' → logprob: -10.061558723449707
    7. '&
' → logprob: -12.811558723449707
    8. ' &)' → logprob: -13.811558723449707
    9. '&)' → logprob: -13.936558723449707
    10. '&p' → logprob: -14.061558723449707

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003454753023106605
    2. ' ' → logprob: -8.000345230102539
    3. '0' → logprob: -11.625345230102539
    4. '```' → logprob: -14.750345230102539
    5. '

' → logprob: -15.375345230102539
    6. '   ' → logprob: -15.750345230102539
    7. '
' → logprob: -15.875345230102539
    8. '' → logprob: -16.62534523010254
    9. ' ' → logprob: -17.06284523010254
    10. '&' → logprob: -17.87534523010254

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00976305641233921
    2. '0' → logprob: -4.634763240814209
    3. ' ' → logprob: -12.25976276397705
    4. '

' → logprob: -14.25976276397705
    5. '```' → logprob: -14.63476276397705
    6. '
' → logprob: -14.88476276397705
    7. '01' → logprob: -15.57226276397705
    8. '' → logprob: -16.072263717651367
    9. '   ' → logprob: -16.197263717651367
    10. '{' → logprob: -16.322263717651367

Token 152: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15384022891521454
    2. '==' → logprob: -2.0288403034210205
    3. ')==' → logprob: -5.153840065002441
    4. ')' → logprob: -5.278840065002441
    5. ']==' → logprob: -9.153840065002441
    6. ':' → logprob: -10.028840065002441
    7. ' ' → logprob: -10.778840065002441
    8. ' )' → logprob: -10.903840065002441
    9. '==
' → logprob: -11.653840065002441
    10. '0' → logprob: -12.028840065002441

Token 153: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005930693820118904
    2. ' ' → logprob: -5.1309309005737305
    3. '1' → logprob: -13.13093090057373
    4. '   ' → logprob: -16.505929946899414
    5. '۰' → logprob: -16.880929946899414
    6. '  ' → logprob: -18.005929946899414
    7. ' ' → logprob: -18.318429946899414
    8. '
' → logprob: -18.505929946899414
    9. '	' → logprob: -18.568429946899414
    10. ')' → logprob: -18.630929946899414

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018506382184568793
    2. ' ' → logprob: -8.625185012817383
    3. '1' → logprob: -12.125185012817383
    4. '۰' → logprob: -17.750185012817383
    5. '   ' → logprob: -18.062685012817383
    6. '```' → logprob: -18.562685012817383
    7. '  ' → logprob: -19.437685012817383
    8. ')' → logprob: -19.687685012817383
    9. ' ' → logprob: -19.937685012817383
    10. '

' → logprob: -20.125185012817383

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007129970006644726
    2. ' and' → logprob: -5.257130146026611
    3. ':
' → logprob: -6.382130146026611
    4. '):' → logprob: -9.382129669189453
    5. ' :' → logprob: -9.882129669189453
    6. ',' → logprob: -10.632129669189453
    7. 'and' → logprob: -11.132129669189453
    8. ')' → logprob: -11.757129669189453
    9. '):
' → logprob: -11.757129669189453
    10. ':

' → logprob: -12.632129669189453

Token 156: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1824938803911209
    2. ' ' → logprob: -2.0574939250946045
    3. '           ' → logprob: -4.182493686676025
    4. '            ' → logprob: -4.807493686676025
    5. '                ' → logprob: -5.807493686676025
    6. '                
' → logprob: -5.807493686676025
    7. ':' → logprob: -6.057493686676025
    8. ' :' → logprob: -7.057493686676025
    9. '<|end|>' → logprob: -7.057493686676025
    10. ' ' → logprob: -7.432493686676025

Token 157: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7034699320793152
    2. ' w' → logprob: -1.57846999168396
    3. ' next' → logprob: -1.95346999168396
    4. ' weight' → logprob: -2.07846999168396
    5. ' candidate' → logprob: -4.453469753265381
    6. ' total' → logprob: -4.953469753265381
    7. ' nxt' → logprob: -5.953469753265381
    8. ' food' → logprob: -6.328469753265381
    9. '                   ' → logprob: -6.953469753265381
    10. ' ' → logprob: -7.328469753265381

Token 158: ' Check' (ID: 6208)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6667923927307129
    2. ' w' → logprob: -1.541792392730713
    3. 'w' → logprob: -2.166792392730713
    4. 'new' → logprob: -2.291792392730713
    5. ' next' → logprob: -4.166792392730713
    6. 'weight' → logprob: -4.416792392730713
    7. ' weight' → logprob: -4.416792392730713
    8. 'next' → logprob: -5.291792392730713
    9. ' food' → logprob: -5.416792392730713
    10. 'food' → logprob: -5.666792392730713

Token 159: ' stability' (ID: 27827)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05890534818172455
    2. 'if' → logprob: -3.6839053630828857
    3. ' foods' → logprob: -4.058905124664307
    4. 'foods' → logprob: -5.433905124664307
    5. 'abs' → logprob: -6.433905124664307
    6. ' abs' → logprob: -6.933905124664307
    7. '               ' → logprob: -7.058905124664307
    8. ' weights' → logprob: -7.058905124664307
    9. ' (' → logprob: -7.183905124664307
    10. ' next' → logprob: -7.308905124664307

Token 160: ' condition' (ID: 7060)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3593605160713196
    2. ' if' → logprob: -2.359360456466675
    3. '               ' → logprob: -2.484360456466675
    4. ':
' → logprob: -3.859360456466675
    5. '                   ' → logprob: -3.984360456466675
    6. ',' → logprob: -4.234360694885254
    7. '                ' → logprob: -4.359360694885254
    8. '<|end|>' → logprob: -4.359360694885254
    9. ' :' → logprob: -5.109360694885254
    10. ' =' → logprob: -5.109360694885254

Token 161: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06541477143764496
    2. '               ' → logprob: -3.6904146671295166
    3. ':
' → logprob: -4.190414905548096
    4. ' :' → logprob: -4.565414905548096
    5. ' if' → logprob: -5.690414905548096
    6. '                   ' → logprob: -6.440414905548096
    7. '```' → logprob: -6.815414905548096
    8. '<|end|>' → logprob: -7.065414905548096
    9. '                ' → logprob: -7.190414905548096
    10. ' :
' → logprob: -7.190414905548096

Token 162: ' s' (ID: 265)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6259222030639648
    2. ' if' → logprob: -1.5009222030639648
    3. ' weight' → logprob: -3.125922203063965
    4. ' w' → logprob: -3.125922203063965
    5. '                   ' → logprob: -3.500922203063965
    6. ' next' → logprob: -3.500922203063965
    7. ' new' → logprob: -3.750922203063965
    8. 'total' → logprob: -3.875922203063965
    9. '               ' → logprob: -4.500922203063965
    10. 'if' → logprob: -4.875922203063965

Token 163: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.46165817975997925
    2. 't' → logprob: -2.461658239364624
    3. '[' → logprob: -2.586658239364624
    4. '=' → logprob: -2.836658239364624
    5. ' =' → logprob: -2.961658239364624
    6. '_i' → logprob: -3.961658239364624
    7. 'i' → logprob: -4.836658000946045
    8. 'o' → logprob: -5.086658000946045
    9. 'um' → logprob: -5.336658000946045
    10. 'w' → logprob: -5.336658000946045

Token 164: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1622689664363861
    2. '>=' → logprob: -2.537268877029419
    3. ' <=' → logprob: -2.912268877029419
    4. '[i' → logprob: -5.037269115447998
    5. '<=' → logprob: -5.662269115447998
    6. ' *' → logprob: -5.787269115447998
    7. '[' → logprob: -6.787269115447998
    8. '*' → logprob: -7.412269115447998
    9. ' >' → logprob: -8.03726863861084
    10. '>' → logprob: -8.53726863861084

Token 165: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.24426762759685516
    2. 'pos' → logprob: -1.7442675828933716
    3. ' total' → logprob: -3.494267702102661
    4. ' pos' → logprob: -5.494267463684082
    5. '(total' → logprob: -6.119267463684082
    6. '(pos' → logprob: -6.244267463684082
    7. 'abs' → logprob: -6.869267463684082
    8. '(' → logprob: -7.369267463684082
    9. '2' → logprob: -8.119267463684082
    10. ' (' → logprob: -8.494267463684082

Token 166: ' of' (ID: 328)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.9463338255882263
    2. '_' → logprob: -1.571333885192871
    3. '_w' → logprob: -1.946333885192871
    4. '_weights' → logprob: -2.321333885192871
    5. 'of' → logprob: -3.321333885192871
    6. '(' → logprob: -3.821333885192871
    7. 'weight' → logprob: -3.946333885192871
    8. ' +' → logprob: -4.571333885192871
    9. '+' → logprob: -4.696333885192871
    10. ' of' → logprob: -4.821333885192871

Token 167: ' weights' (ID: 28460)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7416940331459045
    2. '[w' → logprob: -1.2416939735412598
    3. '[' → logprob: -2.8666939735412598
    4. ' w' → logprob: -3.3666939735412598
    5. 'dp' → logprob: -3.3666939735412598
    6. 'weight' → logprob: -3.6166939735412598
    7. '(w' → logprob: -3.8666939735412598
    8. 'weights' → logprob: -4.74169397354126
    9. 'total' → logprob: -4.74169397354126
    10. '(dp' → logprob: -5.49169397354126

Token 168: ' above' (ID: 5151)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.240525484085083
    2. ' and' → logprob: -2.490525484085083
    3. ' of' → logprob: -3.490525484085083
    4. ' if' → logprob: -4.365525245666504
    5. ' +' → logprob: -4.615525245666504
    6. '<|end|>' → logprob: -4.615525245666504
    7. ',' → logprob: -4.740525245666504
    8. ' or' → logprob: -4.740525245666504
    9. '                   ' → logprob: -4.740525245666504
    10. ':' → logprob: -5.365525245666504

Token 169: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08934421837329865
    2. ' and' → logprob: -3.2143442630767822
    3. '                ' → logprob: -4.839344024658203
    4. ':' → logprob: -5.089344024658203
    5. ',' → logprob: -5.214344024658203
    6. '<|end|>' → logprob: -5.214344024658203
    7. '<|end|>' → logprob: -5.589344024658203
    8. '                   ' → logprob: -6.089344024658203
    9. '                
' → logprob: -6.089344024658203
    10. ' if' → logprob: -6.714344024658203

Token 170: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004843884147703648
    2. '                ' → logprob: -6.129843711853027
    3. '<|end|>' → logprob: -6.879843711853027
    4. ',' → logprob: -8.004843711853027
    5. '                
' → logprob: -8.379843711853027
    6. ' ' → logprob: -8.629843711853027
    7. '              ' → logprob: -9.004843711853027
    8. '                   ' → logprob: -9.379843711853027
    9. ' and' → logprob: -9.504843711853027
    10. ' (' → logprob: -9.504843711853027

Token 171: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8369099497795105
    2. '               ' → logprob: -1.0869100093841553
    3. ' total' → logprob: -2.8369100093841553
    4. '                ' → logprob: -3.2119100093841553
    5. ' ' → logprob: -3.4619100093841553
    6. ' w' → logprob: -3.5869100093841553
    7. ' s' → logprob: -3.8369100093841553
    8. ' 
' → logprob: -4.086909770965576
    9. '                   ' → logprob: -5.211909770965576
    10. ' weight' → logprob: -5.586909770965576

Token 172: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.2458348274230957
    2. ' w' → logprob: -2.3708348274230957
    3. ' sum' → logprob: -2.4958348274230957
    4. ' if' → logprob: -2.6208348274230957
    5. 'above' → logprob: -2.6208348274230957
    6. 'w' → logprob: -2.7458348274230957
    7. ' next' → logprob: -2.8708348274230957
    8. 'weight' → logprob: -2.9958348274230957
    9. ' above' → logprob: -3.1208348274230957
    10. 'if' → logprob: -3.3708348274230957

Token 173: ' of' (ID: 328)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.5588381886482239
    2. '_ab' → logprob: -1.558838129043579
    3. '_' → logprob: -2.183838129043579
    4. '_weights' → logprob: -3.433838129043579
    5. '_weight' → logprob: -3.433838129043579
    6. ' =' → logprob: -3.933838129043579
    7. '(' → logprob: -4.808838367462158
    8. '_of' → logprob: -5.933838367462158
    9. '=' → logprob: -6.308838367462158
    10. '_wp' → logprob: -6.308838367462158

Token 174: ' weights' (ID: 28460)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.573820173740387
    2. ' w' → logprob: -2.198820114135742
    3. ' total' → logprob: -2.448820114135742
    4. 'total' → logprob: -2.448820114135742
    5. '_w' → logprob: -2.948820114135742
    6. ' order' → logprob: -4.198820114135742
    7. 'order' → logprob: -4.323820114135742
    8. '[w' → logprob: -4.448820114135742
    9. ' weights' → logprob: -4.948820114135742
    10. 'weights' → logprob: -4.948820114135742

Token 175: ' above' (ID: 5151)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31061476469039917
    2. '=' → logprob: -1.810614824295044
    3. '_ab' → logprob: -2.935614824295044
    4. 'above' → logprob: -3.810614824295044
    5. ' +' → logprob: -5.185614585876465
    6. ' above' → logprob: -5.435614585876465
    7. ' +=' → logprob: -5.685614585876465
    8. '+' → logprob: -5.810614585876465
    9. '[' → logprob: -5.935614585876465
    10. ' -' → logprob: -6.310614585876465

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015114724636078
    2. '=' → logprob: -1.7015115022659302
    3. ',' → logprob: -10.32651138305664
    4. '               ' → logprob: -10.82651138305664
    5. ' +' → logprob: -12.20151138305664
    6. ' ' → logprob: -12.32651138305664
    7. ' =
' → logprob: -12.57651138305664
    8. ' ' → logprob: -12.70151138305664
    9. '                   ' → logprob: -12.70151138305664
    10. 'w' → logprob: -12.82651138305664

Token 177: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.018157554790377617
    2. ' total' → logprob: -4.018157482147217
    3. '0' → logprob: -12.268157958984375
    4. '(total' → logprob: -13.643157958984375
    5. 'pos' → logprob: -14.893157958984375
    6. ' ' → logprob: -15.143157958984375
    7. '               ' → logprob: -15.268157958984375
    8. '                   ' → logprob: -15.768157958984375
    9. '	total' → logprob: -16.143157958984375
    10. '$total' → logprob: -16.268157958984375

Token 178: ' weight' (ID: 6049)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.00029828163678757846
    2. 'w' → logprob: -8.500298500061035
    3. '_weight' → logprob: -10.000298500061035
    4. '_' → logprob: -10.750298500061035
    5. 'weight' → logprob: -11.625298500061035
    6. '_weights' → logprob: -12.375298500061035
    7. '_wp' → logprob: -13.437798500061035
    8. '_i' → logprob: -13.500298500061035
    9. '```' → logprob: -13.500298500061035
    10. '+' → logprob: -13.625298500061035

Token 179: ' of' (ID: 328)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.028296537697315216
    2. ' +' → logprob: -4.65329647064209
    3. '<|end|>' → logprob: -5.15329647064209
    4. '-' → logprob: -5.65329647064209
    5. '<|end|>' → logprob: -6.02829647064209
    6. '+' → logprob: -6.27829647064209
    7. ')' → logprob: -6.65329647064209
    8. '_w' → logprob: -6.65329647064209
    9. ' of' → logprob: -8.02829647064209
    10. ',' → logprob: -8.02829647064209

Token 180: ' newly' (ID: 21834)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.11574960500001907
    2. ' order' → logprob: -2.4907495975494385
    3. 'dp' → logprob: -4.115749835968018
    4. 'total' → logprob: -5.240749835968018
    5. 'foods' → logprob: -6.740749835968018
    6. '[' → logprob: -7.115749835968018
    7. '(order' → logprob: -7.365749835968018
    8. ' dp' → logprob: -7.490749835968018
    9. ' total' → logprob: -7.615749835968018
    10. 'mask' → logprob: -8.61574935913086

Token 181: ' placed' (ID: 12989)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.10542236268520355
    2. 'w' → logprob: -3.855422258377075
    3. ' added' → logprob: -3.855422258377075
    4. '_added' → logprob: -4.355422496795654
    5. 'added' → logprob: -4.480422496795654
    6. '_order' → logprob: -4.980422496795654
    7. 'chosen' → logprob: -5.480422496795654
    8. ' order' → logprob: -5.980422496795654
    9. 'order' → logprob: -6.230422496795654
    10. 'selected' → logprob: -6.230422496795654

Token 182: ' foods' (ID: 18747)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' → logprob: -1.3149843215942383
    2. '_food' → logprob: -1.5649843215942383
    3. '_w' → logprob: -2.3149843215942383
    4. ' -' → logprob: -2.6899843215942383
    5. 'food' → logprob: -2.6899843215942383
    6. 'w' → logprob: -3.3149843215942383
    7. ' foods' → logprob: -3.4399843215942383
    8. 'order' → logprob: -3.4399843215942383
    9. ' order' → logprob: -3.5649843215942383
    10. '[' → logprob: -3.9399843215942383

Token 183: ' above' (ID: 5151)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03063182719051838
    2. ' -' → logprob: -4.155632019042969
    3. '+' → logprob: -4.530632019042969
    4. '<|end|>' → logprob: -6.905632019042969
    5. '<|end|>' → logprob: -7.280632019042969
    6. '               ' → logprob: -7.780632019042969
    7. '                ' → logprob: -8.030632019042969
    8. ' ' → logprob: -8.280632019042969
    9. ')' → logprob: -8.655632019042969
    10. ',' → logprob: -9.155632019042969

Token 184: ' current' (ID: 2208)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.09229817241430283
    2. ' -' → logprob: -3.0922982692718506
    3. '+' → logprob: -4.2172980308532715
    4. '               ' → logprob: -4.8422980308532715
    5. '                ' → logprob: -5.8422980308532715
    6. ')' → logprob: -5.8422980308532715
    7. ' ' → logprob: -5.8422980308532715
    8. '<|end|>' → logprob: -5.9672980308532715
    9. '<|end|>' → logprob: -6.2172980308532715
    10. ',' → logprob: -6.7172980308532715

Token 185: ' i' (ID: 575)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10709401220083237
    2. '+' → logprob: -3.4820940494537354
    3. ' -' → logprob: -4.107093811035156
    4. ')' → logprob: -4.357093811035156
    5. '_food' → logprob: -4.732093811035156
    6. '[' → logprob: -5.482093811035156
    7. 's' → logprob: -5.982093811035156
    8. '               ' → logprob: -6.107093811035156
    9. 'food' → logprob: -6.232093811035156
    10. ',' → logprob: -6.357093811035156

Token 186: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0345265194773674
    2. '+' → logprob: -3.9095265865325928
    3. ' -' → logprob: -5.159526348114014
    4. ' ' → logprob: -5.909526348114014
    5. '               ' → logprob: -6.409526348114014
    6. '                ' → logprob: -7.034526348114014
    7. '<|end|>' → logprob: -7.909526348114014
    8. ',' → logprob: -8.034526824951172
    9. '<|end|>' → logprob: -8.034526824951172
    10. ')' → logprob: -8.159526824951172

Token 187: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08071545511484146
    2. ' +' → logprob: -3.0807154178619385
    3. '+' → logprob: -4.580715656280518
    4. '                ' → logprob: -4.580715656280518
    5. ',' → logprob: -5.955715656280518
    6. ' =' → logprob: -6.330715656280518
    7. '                
' → logprob: -6.580715656280518
    8. ' ' → logprob: -7.330715656280518
    9. '<|end|>' → logprob: -7.455715656280518
    10. '<|end|>' → logprob: -7.455715656280518

Token 188: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9217474460601807
    2. '               ' → logprob: -1.5467474460601807
    3. '                ' → logprob: -2.0467474460601807
    4. ' if' → logprob: -2.1717474460601807
    5. ' total' → logprob: -3.5467474460601807
    6. ' 
' → logprob: -4.171747207641602
    7. ' +' → logprob: -4.421747207641602
    8. '+' → logprob: -4.546747207641602
    9. ')' → logprob: -4.921747207641602
    10. ',' → logprob: -5.046747207641602

Token 189: ' The' (ID: 623)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5770939588546753
    2. ' total' → logprob: -2.577094078063965
    3. '                ' → logprob: -2.952094078063965
    4. ' w' → logprob: -3.077094078063965
    5. ' ' → logprob: -3.202094078063965
    6. ' new' → logprob: -3.327094078063965
    7. ' next' → logprob: -3.327094078063965
    8. ' current' → logprob: -3.452094078063965
    9. '               ' → logprob: -4.202094078063965
    10. ' #' → logprob: -4.702094078063965

Token 190: ' foods' (ID: 18747)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.4807373583316803
    2. ' total' → logprob: -3.1057374477386475
    3. 'next' → logprob: -3.1057374477386475
    4. ' above' → logprob: -3.2307374477386475
    5. ' weight' → logprob: -3.3557374477386475
    6. 'weight' → logprob: -3.7307374477386475
    7. ' new' → logprob: -3.8557374477386475
    8. ' current' → logprob: -3.9807374477386475
    9. ' sum' → logprob: -4.355737209320068
    10. 'sum' → logprob: -4.355737209320068

Token 191: ' placed' (ID: 12989)
  Prédit: ' above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' above' → logprob: -0.5380903482437134
    2. ' placed' → logprob: -1.5380903482437134
    3. 'above' → logprob: -2.788090229034424
    4. ' already' → logprob: -3.038090229034424
    5. 'placed' → logprob: -3.163090229034424
    6. 'already' → logprob: -4.288090229034424
    7. ' on' → logprob: -4.663090229034424
    8. '[' → logprob: -4.913090229034424
    9. '[i' → logprob: -6.038090229034424
    10. ' stacked' → logprob: -6.163090229034424

Token 192: ' above' (ID: 5151)
  Prédit: ' above'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' above' → logprob: -0.24921303987503052
    2. 'above' → logprob: -2.4992129802703857
    3. ' on' → logprob: -2.9992129802703857
    4. ' after' → logprob: -3.6242129802703857
    5. ' so' → logprob: -4.124213218688965
    6. ' before' → logprob: -4.124213218688965
    7. 'before' → logprob: -4.874213218688965
    8. ' are' → logprob: -5.249213218688965
    9. 'after' → logprob: -5.374213218688965
    10. ' below' → logprob: -5.999213218688965

Token 193: ' this' (ID: 495)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.24609284102916718
    2. ' the' → logprob: -2.9960927963256836
    3. ' is' → logprob: -3.3710927963256836
    4. ' in' → logprob: -3.6210927963256836
    5. ' =' → logprob: -4.246092796325684
    6. ',' → logprob: -4.496092796325684
    7. ' have' → logprob: -4.746092796325684
    8. ')' → logprob: -4.746092796325684
    9. ' currently' → logprob: -4.871092796325684
    10. ' current' → logprob: -5.121092796325684

Token 194: ' i' (ID: 575)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5994796752929688
    2. ' is' → logprob: -2.3494796752929688
    3. ')' → logprob: -2.8494796752929688
    4. ' token' → logprob: -2.8494796752929688
    5. ' i' → logprob: -3.0994796752929688
    6. ' )' → logprob: -3.7244796752929688
    7. 'token' → logprob: -3.9744796752929688
    8. '[i' → logprob: -3.9744796752929688
    9. ' will' → logprob: -4.349479675292969
    10. ' =' → logprob: -4.349479675292969

Token 195: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6676278710365295
    2. ')' → logprob: -1.7926278114318848
    3. ' is' → logprob: -2.4176278114318848
    4. ' must' → logprob: -2.6676278114318848
    5. ' have' → logprob: -3.2926278114318848
    6. ',' → logprob: -3.6676278114318848
    7. ' ,' → logprob: -4.417627811431885
    8. '<|end|>' → logprob: -4.417627811431885
    9. ' )' → logprob: -4.542627811431885
    10. ' will' → logprob: -4.792627811431885

Token 196: ' those' (ID: 2617)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.8987019658088684
    2. 'order' → logprob: -1.3987019062042236
    3. 'total' → logprob: -1.8987019062042236
    4. ' total' → logprob: -2.0237019062042236
    5. '[' → logprob: -4.023702144622803
    6. 'pos' → logprob: -4.273702144622803
    7. ' [' → logprob: -4.898702144622803
    8. '0' → logprob: -5.148702144622803
    9. ' pos' → logprob: -5.148702144622803
    10. ' sum' → logprob: -5.773702144622803

Token 197: ' already' (ID: 4279)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18682895600795746
    2. ' that' → logprob: -3.311828851699829
    3. ' already' → logprob: -3.436828851699829
    4. 'already' → logprob: -4.561829090118408
    5. 'in' → logprob: -4.686829090118408
    6. '[' → logprob: -4.811829090118408
    7. '[i' → logprob: -4.936829090118408
    8. ' if' → logprob: -4.936829090118408
    9. ' whose' → logprob: -4.936829090118408
    10. ':' → logprob: -4.936829090118408

Token 198: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.28357023000717163
    2. 'placed' → logprob: -2.0335702896118164
    3. ' in' → logprob: -2.2835702896118164
    4. ' placed' → logprob: -4.908570289611816
    5. 'chosen' → logprob: -6.158570289611816
    6. 'above' → logprob: -6.783570289611816
    7. 'on' → logprob: -7.283570289611816
    8. '```' → logprob: -7.408570289611816
    9. 'picked' → logprob: -7.533570289611816
    10. 'stack' → logprob: -7.783570289611816

Token 199: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.2546572983264923
    2. ' order' → logprob: -1.50465726852417
    3. 'the' → logprob: -6.37965726852417
    4. ' the' → logprob: -7.25465726852417
    5. 'reverse' → logprob: -9.504657745361328
    6. '[' → logprob: -9.879657745361328
    7. 'mask' → logprob: -9.879657745361328
    8. '(order' → logprob: -10.254657745361328
    9. '```' → logprob: -11.129657745361328
    10. '	order' → logprob: -11.379657745361328

Token 200: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49019694328308105
    2. ' and' → logprob: -1.740196943283081
    3. '               ' → logprob: -2.490196943283081
    4. '<|end|>' → logprob: -3.240196943283081
    5. '):' → logprob: -3.615196943283081
    6. '<|end|>' → logprob: -3.990196943283081
    7. ',' → logprob: -4.11519718170166
    8. ')' → logprob: -4.86519718170166
    9. ' if' → logprob: -5.99019718170166
    10. '                ' → logprob: -5.99019718170166

Token 201: 'order' (ID: 2143)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9992110133171082
    2. '[::-' → logprob: -0.9992110133171082
    3. ' order' → logprob: -2.999211072921753
    4. 'order' → logprob: -3.124211072921753
    5. 'reverse' → logprob: -3.249211072921753
    6. '[' → logprob: -3.624211072921753
    7. '),' → logprob: -3.874211072921753
    8. '[pos' → logprob: -4.124210834503174
    9. ' reversed' → logprob: -5.249210834503174
    10. 'the' → logprob: -5.249210834503174

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4300229847431183
    2. '[::-' → logprob: -1.180022954940796
    3. ')+' → logprob: -4.680023193359375
    4. ' +' → logprob: -4.680023193359375
    5. '),' → logprob: -4.805023193359375
    6. ' )' → logprob: -5.680023193359375
    7. '+' → logprob: -5.805023193359375
    8. ')[' → logprob: -5.930023193359375
    9. '+[' → logprob: -6.805023193359375
    10. ',' → logprob: -7.055023193359375

Token 203: ' plus' (ID: 2932)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18900059163570404
    2. ' and' → logprob: -3.0640006065368652
    3. ':' → logprob: -3.5640006065368652
    4. '<|end|>' → logprob: -3.6890006065368652
    5. ')' → logprob: -3.9390006065368652
    6. ',' → logprob: -4.439000606536865
    7. '<|end|>' → logprob: -4.439000606536865
    8. '                ' → logprob: -4.814000606536865
    9. '):' → logprob: -5.564000606536865
    10. ' if' → logprob: -6.064000606536865

Token 204: ' this' (ID: 495)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5162618160247803
    2. ' [' → logprob: -1.1412618160247803
    3. '[i' → logprob: -3.0162618160247803
    4. ' foods' → logprob: -4.391262054443359
    5. 'foods' → logprob: -4.766262054443359
    6. ' the' → logprob: -5.891262054443359
    7. ' i' → logprob: -5.891262054443359
    8. ' ' → logprob: -6.141262054443359
    9. '1' → logprob: -6.891262054443359
    10. '[pos' → logprob: -7.266262054443359

Token 205: ' one' (ID: 1001)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8999353051185608
    2. '[i' → logprob: -1.274935245513916
    3. ' ' → logprob: -2.774935245513916
    4. ')' → logprob: -3.524935245513916
    5. '[' → logprob: -3.774935245513916
    6. 'i' → logprob: -3.899935245513916
    7. '
' → logprob: -4.024935245513916
    8. ' +' → logprob: -4.149935245513916
    9. '_i' → logprob: -4.399935245513916
    10. ' if' → logprob: -4.649935245513916

Token 206: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11551003158092499
    2. '                ' → logprob: -3.7405099868774414
    3. ':' → logprob: -3.9905099868774414
    4. '<|end|>' → logprob: -3.9905099868774414
    5. ' ' → logprob: -4.240509986877441
    6. ',' → logprob: -4.615509986877441
    7. '                
' → logprob: -5.490509986877441
    8. '<|end|>' → logprob: -5.490509986877441
    9. ')' → logprob: -5.865509986877441
    10. '):' → logprob: -6.365509986877441

Token 208: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21898093819618225
    2. '                ' → logprob: -2.9689810276031494
    3. '<|end|>' → logprob: -2.9689810276031494
    4. ' ' → logprob: -3.2189810276031494
    5. '<|end|>' → logprob: -4.59398078918457
    6. ',' → logprob: -4.96898078918457
    7. ' if' → logprob: -4.96898078918457
    8. ':' → logprob: -5.21898078918457
    9. ')' → logprob: -5.21898078918457
    10. '                   ' → logprob: -5.34398078918457

Token 209: ' But' (ID: 3072)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5504934191703796
    2. ' ' → logprob: -1.3004934787750244
    3. '                ' → logprob: -2.3004934787750244
    4. ' if' → logprob: -4.925493240356445
    5. '<|end|>' → logprob: -4.925493240356445
    6. ' 
' → logprob: -5.300493240356445
    7. '                
' → logprob: -5.300493240356445
    8. '                   ' → logprob: -5.425493240356445
    9. ' continue' → logprob: -5.550493240356445
    10. ')' → logprob: -5.675493240356445

Token 210: ' building' (ID: 6282)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.45773208141326904
    2. ' we' → logprob: -2.2077322006225586
    3. ' here' → logprob: -2.7077322006225586
    4. 'the' → logprob: -3.3327322006225586
    5. ' in' → logprob: -3.5827322006225586
    6. ' for' → logprob: -3.9577322006225586
    7. ' since' → logprob: -4.082732200622559
    8. 'we' → logprob: -4.457732200622559
    9. ' before' → logprob: -4.457732200622559
    10. ' placing' → logprob: -4.582732200622559

Token 211: ' from' (ID: 591)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.199378103017807
    2. 'the' → logprob: -2.82437801361084
    3. ' a' → logprob: -3.07437801361084
    4. ' from' → logprob: -3.57437801361084
    5. '<|end|>' → logprob: -4.19937801361084
    6. 'from' → logprob: -4.44937801361084
    7. ' on' → logprob: -5.32437801361084
    8. ' up' → logprob: -6.07437801361084
    9. ' next' → logprob: -6.69937801361084
    10. ' here' → logprob: -7.07437801361084

Token 212: ' bottom' (ID: 8725)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.4019644856452942
    2. ' top' → logprob: -1.7769644260406494
    3. 'bottom' → logprob: -2.2769644260406494
    4. 'the' → logprob: -3.7769644260406494
    5. ' the' → logprob: -4.1519646644592285
    6. ' bottom' → logprob: -4.1519646644592285
    7. 'above' → logprob: -6.1519646644592285
    8. 'below' → logprob: -6.6519646644592285
    9. ' above' → logprob: -6.9019646644592285
    10. ' below' → logprob: -8.90196418762207

Token 213: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1567437648773193
    2. ',' → logprob: -1.5317437648773193
    3. '<|end|>' → logprob: -1.5317437648773193
    4. '<|end|>' → logprob: -2.5317437648773193
    5. ')' → logprob: -2.7817437648773193
    6. '               ' → logprob: -3.4067437648773193
    7. '):' → logprob: -3.9067437648773193
    8. ' to' → logprob: -4.531744003295898
    9. ' ,' → logprob: -4.656744003295898
    10. '                ' → logprob: -4.906744003295898

Token 214: ' so' (ID: 813)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7427414655685425
    2. '                ' → logprob: -1.9927414655685425
    3. ' we' → logprob: -2.117741584777832
    4. 'the' → logprob: -2.742741584777832
    5. ' ' → logprob: -3.367741584777832
    6. ' )' → logprob: -3.367741584777832
    7. ' #' → logprob: -3.992741584777832
    8. ')' → logprob: -4.117741584777832
    9. ' i' → logprob: -4.367741584777832
    10. ' placing' → logprob: -4.617741584777832

Token 215: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9170812964439392
    2. ' the' → logprob: -1.042081356048584
    3. 'we' → logprob: -2.417081356048584
    4. ' we' → logprob: -2.917081356048584
    5. 'placing' → logprob: -3.417081356048584
    6. ' placing' → logprob: -4.042081356048584
    7. ' adding' → logprob: -4.542081356048584
    8. ' when' → logprob: -4.792081356048584
    9. ' next' → logprob: -5.167081356048584
    10. ' current' → logprob: -5.542081356048584

Token 216: ' foods' (ID: 18747)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.6083457469940186
    2. ' new' → logprob: -1.1083457469940186
    3. ' current' → logprob: -2.4833457469940186
    4. ' i' → logprob: -4.608345985412598
    5. ' newly' → logprob: -4.858345985412598
    6. 'new' → logprob: -5.858345985412598
    7. ' previous' → logprob: -6.108345985412598
    8. 'next' → logprob: -6.233345985412598
    9. ' top' → logprob: -6.358345985412598
    10. 'current' → logprob: -6.733345985412598

Token 217: ' in' (ID: 306)
  Prédit: ' placed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -1.2328616380691528
    2. ' already' → logprob: -1.3578616380691528
    3. ' above' → logprob: -1.4828616380691528
    4. 'already' → logprob: -2.6078615188598633
    5. 'placed' → logprob: -2.7328615188598633
    6. ' are' → logprob: -4.232861518859863
    7. ' that' → logprob: -4.357861518859863
    8. ' previously' → logprob: -4.482861518859863
    9. 'above' → logprob: -4.482861518859863
    10. ' in' → logprob: -4.607861518859863

Token 218: ' dp' (ID: 21546)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.28752923011779785
    2. ' order' → logprob: -1.4125292301177979
    3. 'the' → logprob: -5.662528991699219
    4. ' the' → logprob: -6.412528991699219
    5. 'reverse' → logprob: -7.412528991699219
    6. 'front' → logprob: -8.162528991699219
    7. ' front' → logprob: -9.162528991699219
    8. 'dp' → logprob: -9.787528991699219
    9. ' reverse' → logprob: -9.912528991699219
    10. 'mask' → logprob: -10.912528991699219

Token 219: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005828899331390858
    2. ')[' → logprob: -6.255828857421875
    3. ')' → logprob: -6.880828857421875
    4. '][' → logprob: -7.755828857421875
    5. 'mask' → logprob: -8.130828857421875
    6. '_mask' → logprob: -8.255828857421875
    7. '[current' → logprob: -8.380828857421875
    8. ' [' → logprob: -8.630828857421875
    9. ' mask' → logprob: -9.005828857421875
    10. '[next' → logprob: -9.005828857421875

Token 220: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.08696512877941132
    2. 'order' → logprob: -2.5869650840759277
    3. ' mask' → logprob: -5.961965084075928
    4. ' order' → logprob: -6.211965084075928
    5. ']' → logprob: -6.336965084075928
    6. '])' → logprob: -7.211965084075928
    7. '[' → logprob: -8.586965560913086
    8. '][' → logprob: -8.711965560913086
    9. '
' → logprob: -9.336965560913086
    10. ')' → logprob: -9.586965560913086

Token 221: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12678803503513336
    2. ' ]' → logprob: -3.3767881393432617
    3. '])' → logprob: -3.8767881393432617
    4. ')' → logprob: -4.126788139343262
    5. '][' → logprob: -4.126788139343262
    6. ' are' → logprob: -5.126788139343262
    7. '])[' → logprob: -5.251788139343262
    8. '],' → logprob: -5.251788139343262
    9. ' ][' → logprob: -6.126788139343262
    10. ' )' → logprob: -6.251788139343262

Token 222: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5772371888160706
    2. ',' → logprob: -2.077237129211426
    3. '<|end|>' → logprob: -2.827237129211426
    4. ')' → logprob: -3.077237129211426
    5. ' must' → logprob: -3.327237129211426
    6. ' continue' → logprob: -3.827237129211426
    7. '<|end|>' → logprob: -4.202237129211426
    8. ' can' → logprob: -4.327237129211426
    9. ' will' → logprob: -4.452237129211426
    10. ' should' → logprob: -4.702237129211426

Token 223: ' those' (ID: 2617)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.7142694592475891
    2. 'above' → logprob: -1.5892693996429443
    3. 'already' → logprob: -2.3392693996429443
    4. 'the' → logprob: -3.2142693996429443
    5. ' the' → logprob: -3.4642693996429443
    6. ' below' → logprob: -3.8392693996429443
    7. 'actually' → logprob: -3.8392693996429443
    8. ' above' → logprob: -3.8392693996429443
    9. 'placed' → logprob: -3.9642693996429443
    10. 'on' → logprob: -4.339269638061523

Token 224: ' placed' (ID: 12989)
  Prédit: ' already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' already' → logprob: -0.8191498517990112
    2. 'already' → logprob: -1.8191498517990112
    3. ' above' → logprob: -2.194149971008301
    4. ' below' → logprob: -2.444149971008301
    5. ' that' → logprob: -2.694149971008301
    6. 'above' → logprob: -3.319149971008301
    7. 'below' → logprob: -3.569149971008301
    8. ' placed' → logprob: -3.819149971008301
    9. 'placed' → logprob: -4.694149971008301
    10. ' are' → logprob: -4.819149971008301

Token 225: ' below' (ID: 4895)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.26424914598464966
    2. ' above' → logprob: -2.014249086380005
    3. 'on' → logprob: -3.139249086380005
    4. 'below' → logprob: -3.514249086380005
    5. ' on' → logprob: -4.389249324798584
    6. 'after' → logprob: -4.764249324798584
    7. ' below' → logprob: -5.764249324798584
    8. ' after' → logprob: -7.264249324798584
    9. 'before' → logprob: -8.514248847961426
    10. '```' → logprob: -8.639248847961426

Token 226: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21585091948509216
    2. ',' → logprob: -1.9658509492874146
    3. '<|end|>' → logprob: -3.965850830078125
    4. ' ,' → logprob: -4.590850830078125
    5. '<|end|>' → logprob: -5.090850830078125
    6. ')' → logprob: -5.590850830078125
    7. '                
' → logprob: -6.090850830078125
    8. '),' → logprob: -6.340850830078125
    9. ' and' → logprob: -6.465850830078125
    10. '.' → logprob: -6.590850830078125

Token 227: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03037525899708271
    2. '                ' → logprob: -4.0303754806518555
    3. ',' → logprob: -5.5303754806518555
    4. '<|end|>' → logprob: -6.1553754806518555
    5. '                
' → logprob: -7.1553754806518555
    6. ' and' → logprob: -7.1553754806518555
    7. ' ' → logprob: -7.4053754806518555
    8. ':' → logprob: -7.6553754806518555
    9. '<|end|>' → logprob: -7.6553754806518555
    10. ')' → logprob: -8.030375480651855

Token 228: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42681580781936646
    2. '                ' → logprob: -1.6768157482147217
    3. ' ' → logprob: -2.6768157482147217
    4. ' 
' → logprob: -3.1768157482147217
    5. '                
' → logprob: -3.9268157482147217
    6. '                   ' → logprob: -5.176815986633301
    7. '                 
' → logprob: -5.676815986633301
    8. '<|end|>' → logprob: -5.926815986633301
    9. ' if' → logprob: -6.426815986633301
    10. '                               ' → logprob: -6.551815986633301

Token 229: ' Actually' (ID: 50557)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.416178822517395
    2. ' next' → logprob: -1.916178822517395
    3. ' if' → logprob: -2.4161787033081055
    4. ' continue' → logprob: -3.2911787033081055
    5. ' #' → logprob: -4.1661787033081055
    6. '                ' → logprob: -4.2911787033081055
    7. '                
' → logprob: -5.1661787033081055
    8. 'next' → logprob: -5.2911787033081055
    9. ' weight' → logprob: -5.4161787033081055
    10. ' new' → logprob: -5.7911787033081055

Token 230: ' order' (ID: 2569)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5685485005378723
    2. ',' → logprob: -1.3185484409332275
    3. 'the' → logprob: -2.0685484409332275
    4. ' we' → logprob: -4.193548679351807
    5. 'we' → logprob: -5.193548679351807
    6. ' for' → logprob: -6.193548679351807
    7. ' next' → logprob: -6.443548679351807
    8. '               ' → logprob: -6.443548679351807
    9. ' ,' → logprob: -6.568548679351807
    10. 'for' → logprob: -6.818548679351807

Token 231: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: ' bottom' (ID: 8725)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20200692117214203
    2. 'the' → logprob: -2.3270068168640137
    3. ' the' → logprob: -2.9520068168640137
    4. 'from' → logprob: -5.077006816864014
    5. 'a' → logprob: -5.327006816864014
    6. ' a' → logprob: -5.452006816864014
    7. ' []' → logprob: -5.827006816864014
    8. 'built' → logprob: -5.827006816864014
    9. '[' → logprob: -6.077006816864014
    10. '[]
' → logprob: -6.952006816864014

Token 233: '->' (ID: 609)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3222721815109253
    2. ':' → logprob: -1.5722721815109253
    3. ']:' → logprob: -1.5722721815109253
    4. '               ' → logprob: -2.572272300720215
    5. '[i' → logprob: -3.197272300720215
    6. '[' → logprob: -3.572272300720215
    7. '           ' → logprob: -3.947272300720215
    8. '][' → logprob: -3.947272300720215
    9. '):' → logprob: -4.072272300720215
    10. '_' → logprob: -4.072272300720215

Token 234: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.13570815324783325
    2. ' top' → logprob: -2.1357080936431885
    3. 'up' → logprob: -5.135708332061768
    4. ' up' → logprob: -6.510708332061768
    5. 'to' → logprob: -7.010708332061768
    6. ' to' → logprob: -8.63570785522461
    7. 'placed' → logprob: -9.51070785522461
    8. ' ' → logprob: -10.26070785522461
    9. ' i' → logprob: -11.01070785522461
    10. ' placed' → logprob: -11.13570785522461

Token 235: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.058235641568899155
    2. ':' → logprob: -3.6832356452941895
    3. ',' → logprob: -4.5582356452941895
    4. '                ' → logprob: -5.5582356452941895
    5. '                
' → logprob: -5.6832356452941895
    6. ' 
' → logprob: -6.1832356452941895
    7. '<|end|>' → logprob: -6.1832356452941895
    8. ' :' → logprob: -6.3082356452941895
    9. '):' → logprob: -6.5582356452941895
    10. ':
' → logprob: -6.9332356452941895

Token 236: ' the' (ID: 290)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -1.2751314640045166
    2. ' continue' → logprob: -1.6501314640045166
    3. '               ' → logprob: -1.9001314640045166
    4. ' 
' → logprob: -2.2751314640045166
    5. ' ' → logprob: -2.4001314640045166
    6. ' so' → logprob: -2.5251314640045166
    7. '                   ' → logprob: -4.0251312255859375
    8. '<|end|>' → logprob: -4.4001312255859375
    9. ' if' → logprob: -4.5251312255859375
    10. '                               ' → logprob: -4.6501312255859375

Token 237: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.042460862547159195
    2. ' current' → logprob: -4.542460918426514
    3. ' code' → logprob: -5.042460918426514
    4. ' previous' → logprob: -5.042460918426514
    5. ' first' → logprob: -5.542460918426514
    6. ' last' → logprob: -5.792460918426514
    7. ' new' → logprob: -6.667460918426514
    8. ' space' → logprob: -6.792460918426514
    9. ' rest' → logprob: -6.792460918426514
    10. ')' → logprob: -7.042460918426514

Token 238: ' added' (ID: 5768)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.30428212881088257
    2. '_token' → logprob: -1.9292821884155273
    3. 'token' → logprob: -2.9292821884155273
    4. '_' → logprob: -3.8042821884155273
    5. ' line' → logprob: -5.304282188415527
    6. ' _' → logprob: -5.554282188415527
    7. '_food' → logprob: -5.554282188415527
    8. '_i' → logprob: -5.804282188415527
    9. ' food' → logprob: -5.804282188415527
    10. '               ' → logprob: -6.054282188415527

Token 239: ' food' (ID: 4232)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.4163295328617096
    2. ' food' → logprob: -2.5413296222686768
    3. 'token' → logprob: -2.6663296222686768
    4. '_token' → logprob: -2.6663296222686768
    5. '_' → logprob: -3.1663296222686768
    6. '_food' → logprob: -3.2913296222686768
    7. 'food' → logprob: -4.416329383850098
    8. ' _' → logprob: -4.916329383850098
    9. ' item' → logprob: -5.291329383850098
    10. ' is' → logprob: -6.041329383850098

Token 240: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3705011308193207
    2. ' must' → logprob: -1.870501160621643
    3. ' will' → logprob: -3.3705010414123535
    4. ' should' → logprob: -3.3705010414123535
    5. 'must' → logprob: -3.7455010414123535
    6. ' would' → logprob: -4.4955010414123535
    7. '<|end|>' → logprob: -4.6205010414123535
    8. '<|end|>' → logprob: -4.6205010414123535
    9. '               ' → logprob: -4.9955010414123535
    10. ')' → logprob: -5.2455010414123535

Token 241: ' placed' (ID: 12989)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8025962710380554
    2. ' placed' → logprob: -2.1775963306427
    3. 'placed' → logprob: -2.5525963306427
    4. ' added' → logprob: -2.6775963306427
    5. ' at' → logprob: -2.8025963306427
    6. ' the' → logprob: -2.8025963306427
    7. 'on' → logprob: -3.0525963306427
    8. ' top' → logprob: -3.3025963306427
    9. 'top' → logprob: -4.052596092224121
    10. 'the' → logprob: -4.177596092224121

Token 242: ' above' (ID: 5151)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.018580298870801926
    2. 'on' → logprob: -4.143580436706543
    3. ' above' → logprob: -6.393580436706543
    4. ' at' → logprob: -7.518580436706543
    5. '	on' → logprob: -9.143580436706543
    6. ' atop' → logprob: -9.393580436706543
    7. 'above' → logprob: -9.893580436706543
    8. 'at' → logprob: -10.143580436706543
    9. '_on' → logprob: -10.643580436706543
    10. ')' → logprob: -11.893580436706543

Token 243: ' those' (ID: 2617)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3824034333229065
    2. '                ' → logprob: -1.5074033737182617
    3. '<|end|>' → logprob: -3.2574033737182617
    4. ' ' → logprob: -3.5074033737182617
    5. ')' → logprob: -5.257403373718262
    6. ',' → logprob: -5.382403373718262
    7. ' )' → logprob: -5.382403373718262
    8. '<|end|>' → logprob: -5.382403373718262
    9. '              ' → logprob: -6.757403373718262
    10. ' ' → logprob: -7.007403373718262

Token 244: ' in' (ID: 306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.048514921218156815
    2. ',' → logprob: -3.5485148429870605
    3. ':' → logprob: -5.4235148429870605
    4. '                
' → logprob: -5.7985148429870605
    5. '<|end|>' → logprob: -6.5485148429870605
    6. ')' → logprob: -6.7985148429870605
    7. '.' → logprob: -6.9235148429870605
    8. ' ,' → logprob: -7.0485148429870605
    9. '):' → logprob: -7.0485148429870605
    10. '):
' → logprob: -7.1735148429870605

Token 245: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.07995839416980743
    2. ' order' → logprob: -2.579958438873291
    3. 'dp' → logprob: -7.204958438873291
    4. 'the' → logprob: -8.454957962036133
    5. 'mask' → logprob: -9.954957962036133
    6. ' dp' → logprob: -10.329957962036133
    7. ' the' → logprob: -11.454957962036133
    8. '```' → logprob: -11.579957962036133
    9. ' mask' → logprob: -12.954957962036133
    10. 'code' → logprob: -13.329957962036133

Token 246: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030840648338198662
    2. ',' → logprob: -4.905840873718262
    3. '                
' → logprob: -4.905840873718262
    4. ' 
' → logprob: -6.155840873718262
    5. ')' → logprob: -6.280840873718262
    6. '                ' → logprob: -6.280840873718262
    7. '<|end|>' → logprob: -6.280840873718262
    8. '):
' → logprob: -7.030840873718262
    9. '                   ' → logprob: -7.030840873718262
    10. ':' → logprob: -7.280840873718262

Token 247: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02343985065817833
    2. '                ' → logprob: -4.273439884185791
    3. '<|end|>' → logprob: -5.898439884185791
    4. ' ' → logprob: -6.273439884185791
    5. '                
' → logprob: -6.273439884185791
    6. '                   ' → logprob: -7.023439884185791
    7. ' 
' → logprob: -7.898439884185791
    8. ')' → logprob: -8.773439407348633
    9. ' )' → logprob: -8.898439407348633
    10. '                               ' → logprob: -8.898439407348633

Token 248: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2577376067638397
    2. '                ' → logprob: -2.382737636566162
    3. ' 
' → logprob: -3.007737636566162
    4. '                
' → logprob: -3.632737636566162
    5. '                   ' → logprob: -4.007737636566162
    6. ' ' → logprob: -4.007737636566162
    7. '                 
' → logprob: -5.257737636566162
    8. ' if' → logprob: -5.632737636566162
    9. '<|end|>' → logprob: -6.257737636566162
    10. '                               ' → logprob: -6.507737636566162

Token 249: ' But' (ID: 3072)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7643352746963501
    2. '               ' → logprob: -0.8893352746963501
    3. '                ' → logprob: -2.8893351554870605
    4. ' next' → logprob: -3.2643351554870605
    5. '                   ' → logprob: -5.0143351554870605
    6. ' new' → logprob: -5.2643351554870605
    7. 'if' → logprob: -5.3893351554870605
    8. '                
' → logprob: -6.1393351554870605
    9. ' #' → logprob: -6.2643351554870605
    10. ' continue' → logprob: -6.5143351554870605

Token 250: ' actually' (ID: 4771)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.455707848072052
    2. 'the' → logprob: -2.5807077884674072
    3. ' we' → logprob: -2.7057077884674072
    4. ' adding' → logprob: -3.4557077884674072
    5. 'we' → logprob: -3.7057077884674072
    6. ' since' → logprob: -3.9557077884674072
    7. ' placing' → logprob: -3.9557077884674072
    8. ' when' → logprob: -4.080708026885986
    9. ' in' → logprob: -4.705708026885986
    10. ' if' → logprob: -4.705708026885986

Token 251: ' in' (ID: 306)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.09413415938615799
    2. ' we' → logprob: -3.4691340923309326
    3. ' next' → logprob: -3.9691340923309326
    4. 'the' → logprob: -4.219134330749512
    5. ',' → logprob: -4.719134330749512
    6. ' placing' → logprob: -5.969134330749512
    7. ' adding' → logprob: -5.969134330749512
    8. ' you' → logprob: -6.094134330749512
    9. 'we' → logprob: -6.719134330749512
    10. ' in' → logprob: -6.969134330749512

Token 252: ' problem' (ID: 4792)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -1.1790742874145508
    2. 'the' → logprob: -1.1790742874145508
    3. ' this' → logprob: -1.9290742874145508
    4. ' the' → logprob: -2.554074287414551
    5. ' code' → logprob: -3.054074287414551
    6. 'code' → logprob: -3.679074287414551
    7. 'dp' → logprob: -3.929074287414551
    8. 'stack' → logprob: -4.429074287414551
    9. ' dp' → logprob: -4.929074287414551
    10. 'a' → logprob: -5.179074287414551

Token 253: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7986960411071777
    2. ',' → logprob: -1.2986960411071777
    3. '<|end|>' → logprob: -2.2986960411071777
    4. '<|end|>' → logprob: -2.6736960411071777
    5. ')' → logprob: -3.2986960411071777
    6. '):' → logprob: -3.4236960411071777
    7. '_' → logprob: -5.173696041107178
    8. '),' → logprob: -5.798696041107178
    9. '               ' → logprob: -6.173696041107178
    10. ' :' → logprob: -6.298696041107178

Token 254: ' stacking' (ID: 140997)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.134776309132576
    2. 'the' → logprob: -2.8847763538360596
    3. ' s' → logprob: -3.3847763538360596
    4. ' stability' → logprob: -4.7597761154174805
    5. ' we' → logprob: -5.1347761154174805
    6. ' stacking' → logprob: -6.2597761154174805
    7. ' placing' → logprob: -6.2597761154174805
    8. 's' → logprob: -6.5097761154174805
    9. 'we' → logprob: -6.5097761154174805
    10. '#' → logprob: -6.5097761154174805

Token 255: ' from' (ID: 591)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.975486159324646
    2. ' a' → logprob: -1.100486159324646
    3. ' is' → logprob: -1.725486159324646
    4. ',' → logprob: -3.4754862785339355
    5. 'the' → logprob: -3.6004862785339355
    6. 'a' → logprob: -4.6004862785339355
    7. 'is' → logprob: -5.3504862785339355
    8. ' one' → logprob: -5.4754862785339355
    9. ' continues' → logprob: -5.6004862785339355
    10. ' an' → logprob: -5.7254862785339355

Token 256: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.96518874168396
    2. 'top' → logprob: -1.21518874168396
    3. ' top' → logprob: -1.84018874168396
    4. ' bottom' → logprob: -1.84018874168396
    5. 'the' → logprob: -5.965188980102539
    6. ' the' → logprob: -6.465188980102539
    7. 'above' → logprob: -8.465188980102539
    8. 'below' → logprob: -8.840188980102539
    9. ' above' → logprob: -8.965188980102539
    10. '```' → logprob: -10.715188980102539

Token 257: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16741099953651428
    2. ',' → logprob: -2.5424110889434814
    3. ':' → logprob: -3.4174110889434814
    4. '):' → logprob: -4.417410850524902
    5. ' to' → logprob: -5.667410850524902
    6. ')' → logprob: -5.792410850524902
    7. ' is' → logprob: -5.792410850524902
    8. '<|end|>' → logprob: -5.917410850524902
    9. '):
' → logprob: -6.417410850524902
    10. ' ,' → logprob: -6.417410850524902

Token 258: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.01605912297964096
    2. ' top' → logprob: -4.141058921813965
    3. 'up' → logprob: -10.891058921813965
    4. '	top' → logprob: -13.016058921813965
    5. ' up' → logprob: -13.766058921813965
    6. 'the' → logprob: -14.016058921813965
    7. ' ' → logprob: -14.391058921813965
    8. '(top' → logprob: -14.891058921813965
    9. '[top' → logprob: -15.141058921813965
    10. '```' → logprob: -15.266058921813965

Token 259: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39708447456359863
    2. ':' → logprob: -1.6470844745635986
    3. ',' → logprob: -2.8970844745635986
    4. '):' → logprob: -3.6470844745635986
    5. '):
' → logprob: -4.2720842361450195
    6. ':
' → logprob: -4.2720842361450195
    7. '<|end|>' → logprob: -5.1470842361450195
    8. ' :' → logprob: -5.3970842361450195
    9. ')' → logprob: -5.5220842361450195
    10. ' and' → logprob: -6.7720842361450195

Token 260: '               ' (ID: 506)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.5396501421928406
    2. '               ' → logprob: -1.0396502017974854
    3. ' 
' → logprob: -3.9146502017974854
    4. ' ' → logprob: -4.664649963378906
    5. '                
' → logprob: -4.789649963378906
    6. '                   ' → logprob: -4.914649963378906
    7. '                 
' → logprob: -5.414649963378906
    8. '<|end|>' → logprob: -5.539649963378906
    9. '                               ' → logprob: -6.164649963378906
    10. ',' → logprob: -6.914649963378906

Token 261: ' #' (ID: 1069)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.16844694316387177
    2. '               ' → logprob: -3.0434470176696777
    3. ' 
' → logprob: -3.5434470176696777
    4. ' ' → logprob: -3.7934470176696777
    5. '                 
' → logprob: -4.043447017669678
    6. ' if' → logprob: -4.793447017669678
    7. '                
' → logprob: -5.293447017669678
    8. '#' (adapté à ' #') → logprob: -5.543447017669678
    9. '                   ' → logprob: -5.668447017669678
    10. ')' → logprob: -5.668447017669678

Token 262: ' So' (ID: 2632)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.07158320397138596
    2. '               ' → logprob: -3.3215832710266113
    3. ' ' → logprob: -4.696583271026611
    4. ' if' → logprob: -4.946583271026611
    5. ' ' → logprob: -6.071583271026611
    6. '                
' → logprob: -6.196583271026611
    7. '#' → logprob: -6.446583271026611
    8. '                 
' → logprob: -6.446583271026611
    9. ' #' → logprob: -6.571583271026611
    10. ')' → logprob: -7.321583271026611

Token 263: ' we' (ID: 581)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8766690492630005
    2. ' next' → logprob: -2.126668930053711
    3. ' new' → logprob: -2.126668930053711
    4. ' if' → logprob: -2.251668930053711
    5. ' #' → logprob: -2.376668930053711
    6. '                ' → logprob: -2.876668930053711
    7. ' total' → logprob: -4.626668930053711
    8. ' current' → logprob: -4.751668930053711
    9. ' place' → logprob: -4.876668930053711
    10. '               ' → logprob: -4.876668930053711

Token 264: ' add' (ID: 1147)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1263103187084198
    2. ' place' → logprob: -3.626310348510742
    3. ' add' → logprob: -3.751310348510742
    4. 'continue' → logprob: -4.001310348510742
    5. ' _' → logprob: -4.751310348510742
    6. '                ' → logprob: -5.126310348510742
    7. '_' → logprob: -5.376310348510742
    8. '               ' → logprob: -5.751310348510742
    9. ' =' → logprob: -5.876310348510742
    10. ' need' → logprob: -6.001310348510742

Token 265: ' the' (ID: 290)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23166176676750183
    2. ' the' → logprob: -2.356661796569824
    3. ' a' → logprob: -2.981661796569824
    4. '"' → logprob: -4.106661796569824
    5. '                ' → logprob: -4.856661796569824
    6. 'i' → logprob: -5.606661796569824
    7. ' code' → logprob: -5.856661796569824
    8. ''' → logprob: -5.981661796569824
    9. ' '' → logprob: -5.981661796569824
    10. ' ' → logprob: -5.981661796569824

Token 266: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.36779576539993286
    2. 'i' → logprob: -2.367795705795288
    3. ' i' → logprob: -2.367795705795288
    4. 'next' → logprob: -3.367795705795288
    5. ' current' → logprob: -3.867795705795288
    6. 'foods' → logprob: -3.992795705795288
    7. ' new' → logprob: -4.242795944213867
    8. 'food' → logprob: -4.867795944213867
    9. ' foods' → logprob: -5.492795944213867
    10. 'current' → logprob: -5.492795944213867

Token 267: ' food' (ID: 4232)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4712895154953003
    2. ' token' → logprob: -1.4712895154953003
    3. '_token' → logprob: -2.97128963470459
    4. ' i' → logprob: -3.22128963470459
    5. '_' → logprob: -4.09628963470459
    6. ' food' → logprob: -4.97128963470459
    7. '_food' → logprob: -4.97128963470459
    8. ' _' → logprob: -5.09628963470459
    9. 'token' → logprob: -5.34628963470459
    10. '                ' → logprob: -5.34628963470459

Token 268: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6813699007034302
    2. ' above' → logprob: -2.5563697814941406
    3. ' =' → logprob: -2.6813697814941406
    4. ')' → logprob: -3.0563697814941406
    5. '                ' → logprob: -3.1813697814941406
    6. ',' → logprob: -3.3063697814941406
    7. '<|end|>' → logprob: -4.056369781494141
    8. '<|end|>' → logprob: -4.056369781494141
    9. '_token' → logprob: -4.056369781494141
    10. '[i' → logprob: -4.181369781494141

Token 269: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.08987780660390854
    2. 'top' → logprob: -2.4648778438568115
    3. ' the' → logprob: -7.339877605438232
    4. '_top' → logprob: -8.83987808227539
    5. 'the' → logprob: -9.08987808227539
    6. '[top' → logprob: -11.71487808227539
    7. '	top' → logprob: -12.08987808227539
    8. '(top' → logprob: -12.83987808227539
    9. '-top' → logprob: -12.96487808227539
    10. '               ' → logprob: -13.71487808227539

Token 270: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017563045024871826
    2. '                ' → logprob: -5.3925628662109375
    3. ',' → logprob: -5.5175628662109375
    4. '<|end|>' → logprob: -5.8925628662109375
    5. '                
' → logprob: -6.5175628662109375
    6. ')' → logprob: -6.7675628662109375
    7. '<|end|>' → logprob: -7.1425628662109375
    8. ':' → logprob: -7.3925628662109375
    9. '):
' → logprob: -8.392562866210938
    10. '              ' → logprob: -8.642562866210938

Token 271: ' the' (ID: 290)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.2275250405073166
    2. ' order' → logprob: -1.602524995803833
    3. 'the' → logprob: -6.852525234222412
    4. ' the' → logprob: -7.602525234222412
    5. 'dp' → logprob: -7.727525234222412
    6. ' dp' → logprob: -10.227524757385254
    7. ' ' → logprob: -10.602524757385254
    8. 'existing' → logprob: -11.977524757385254
    9. ' existing' → logprob: -12.102524757385254
    10. 'current' → logprob: -12.352524757385254

Token 272: ' stack' (ID: 10825)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.7562284469604492
    2. ' order' → logprob: -0.7562284469604492
    3. ' stack' → logprob: -3.756228446960449
    4. ' current' → logprob: -3.881228446960449
    5. 'stack' → logprob: -4.631228446960449
    6. 'current' → logprob: -5.506228446960449
    7. ' previous' → logprob: -7.631228446960449
    8. 'mask' → logprob: -7.881228446960449
    9. ' dp' → logprob: -8.13122844696045
    10. ' existing' → logprob: -8.13122844696045

Token 273: ' represented' (ID: 27328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013836836442351341
    2. ',' → logprob: -5.638836860656738
    3. '<|end|>' → logprob: -5.763836860656738
    4. '                
' → logprob: -6.013836860656738
    5. ':' → logprob: -6.763836860656738
    6. '                ' → logprob: -7.138836860656738
    7. ')' → logprob: -7.263836860656738
    8. '<|end|>' → logprob: -7.513836860656738
    9. ':
' → logprob: -8.638836860656738
    10. '):
' → logprob: -9.138836860656738

Token 274: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.19018632173538208
    2. '               ' → logprob: -2.5651862621307373
    3. 'by' → logprob: -2.5651862621307373
    4. '                ' → logprob: -4.315186500549316
    5. ')' → logprob: -7.190186500549316
    6. '+' → logprob: -7.315186500549316
    7. 'mask' → logprob: -7.315186500549316
    8. ' mask' → logprob: -7.815186500549316
    9. '(mask' → logprob: -7.815186500549316
    10. '=' → logprob: -7.815186500549316

Token 275: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.2889742851257324
    2. ' order' → logprob: -1.5389742851257324
    3. 'dp' → logprob: -4.163974285125732
    4. 'mask' → logprob: -4.163974285125732
    5. ' dp' → logprob: -5.913974285125732
    6. ' mask' → logprob: -6.038974285125732
    7. 'the' → logprob: -9.91397476196289
    8. '`' → logprob: -10.03897476196289
    9. '```' → logprob: -10.16397476196289
    10. ' the' → logprob: -11.41397476196289

Token 276: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06138252839446068
    2. '                
' → logprob: -3.561382532119751
    3. '<|end|>' → logprob: -4.311382293701172
    4. '                ' → logprob: -5.186382293701172
    5. '<|end|>' → logprob: -5.561382293701172
    6. ')' → logprob: -6.311382293701172
    7. ' 
' → logprob: -6.561382293701172
    8. ',' → logprob: -6.561382293701172
    9. '                
                
' → logprob: -7.186382293701172
    10. '               
' → logprob: -8.311382293701172

Token 277: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013689394108951092
    2. '                
' → logprob: -5.0136895179748535
    3. '<|end|>' → logprob: -5.8886895179748535
    4. ' 
' → logprob: -6.3886895179748535
    5. '                ' → logprob: -7.1386895179748535
    6. ',' → logprob: -8.263689041137695
    7. ' if' → logprob: -8.638689041137695
    8. '                   ' → logprob: -8.888689041137695
    9. '<|end|>' → logprob: -9.138689041137695
    10. '```' → logprob: -9.388689041137695

Token 278: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09801711142063141
    2. '                ' → logprob: -2.9730172157287598
    3. '                
' → logprob: -3.7230172157287598
    4. ' ' → logprob: -5.22301721572876
    5. ' 
' → logprob: -5.47301721572876
    6. ' if' → logprob: -5.84801721572876
    7. '                 
' → logprob: -6.72301721572876
    8. '<|end|>' → logprob: -6.97301721572876
    9. ' s' → logprob: -7.72301721572876
    10. ' ' → logprob: -7.84801721572876

Token 279: ' The' (ID: 623)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14795196056365967
    2. '                ' → logprob: -3.022952079772949
    3. ' if' → logprob: -3.272952079772949
    4. '                
' → logprob: -3.522952079772949
    5. ' ' → logprob: -5.397952079772949
    6. ' 
' → logprob: -5.647952079772949
    7. '                 
' → logprob: -5.772952079772949
    8. '                   ' → logprob: -6.397952079772949
    9. ' ' → logprob: -6.897952079772949
    10. ' new' → logprob: -7.022952079772949

Token 280: ' foods' (ID: 18747)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.674913763999939
    2. ' if' → logprob: -2.5499138832092285
    3. 'next' → logprob: -2.6749138832092285
    4. 's' → logprob: -2.9249138832092285
    5. 'if' → logprob: -3.0499138832092285
    6. '               ' → logprob: -3.1749138832092285
    7. 'stack' → logprob: -3.1749138832092285
    8. 'st' → logprob: -3.2999138832092285
    9. ' stack' → logprob: -3.6749138832092285
    10. ' stability' → logprob: -3.9249138832092285

Token 281: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.194950819015503
    2. 'placed' → logprob: -1.944950819015503
    3. ' above' → logprob: -2.069950819015503
    4. 'above' → logprob: -2.194950819015503
    5. ' placed' → logprob: -2.444950819015503
    6. ' on' → logprob: -3.194950819015503
    7. 'already' → logprob: -3.194950819015503
    8. ' already' → logprob: -3.694950819015503
    9. '[i' → logprob: -3.944950819015503
    10. ' in' → logprob: -4.194951057434082

Token 282: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.4825136661529541
    2. 'top' → logprob: -0.9825136661529541
    3. 'the' → logprob: -5.607513427734375
    4. ' the' → logprob: -6.357513427734375
    5. '_top' → logprob: -6.982513427734375
    6. 'i' → logprob: -7.732513427734375
    7. ' i' → logprob: -7.982513427734375
    8. ' ' → logprob: -8.232513427734375
    9. '```' → logprob: -8.357513427734375
    10. '   ' → logprob: -8.607513427734375

Token 283: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09576835483312607
    2. ' of' → logprob: -3.345768451690674
    3. '                ' → logprob: -4.845768451690674
    4. ' are' → logprob: -4.970768451690674
    5. '[i' → logprob: -5.095768451690674
    6. ' =' → logprob: -5.095768451690674
    7. ' is' → logprob: -5.845768451690674
    8. '[' → logprob: -6.095768451690674
    9. '<|end|>' → logprob: -6.095768451690674
    10. 'of' → logprob: -6.345768451690674

Token 284: ' food' (ID: 4232)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3374711573123932
    2. ' i' → logprob: -1.3374711275100708
    3. ' the' → logprob: -4.712471008300781
    4. 'the' → logprob: -5.212471008300781
    5. ' order' → logprob: -5.337471008300781
    6. 'order' → logprob: -5.587471008300781
    7. ' ' → logprob: -7.962471008300781
    8. ' current' → logprob: -9.212471008300781
    9. 'current' → logprob: -9.212471008300781
    10. ')' → logprob: -9.837471008300781

Token 285: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.19238604605197906
    2. '[' → logprob: -2.6923861503601074
    3. '_i' → logprob: -3.6923861503601074
    4. ' [' → logprob: -3.9423861503601074
    5. ' i' → logprob: -4.192386150360107
    6. '_' → logprob: -4.192386150360107
    7. ' _' → logprob: -4.692386150360107
    8. '               ' → logprob: -5.692386150360107
    9. '```' → logprob: -5.942386150360107
    10. '[
' → logprob: -6.192386150360107

Token 286: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.3246343731880188
    2. '               ' → logprob: -1.574634313583374
    3. ' must' → logprob: -4.699634552001953
    4. '<|end|>' → logprob: -4.699634552001953
    5. ')' → logprob: -4.824634552001953
    6. ' is' → logprob: -4.949634552001953
    7. ' in' → logprob: -5.574634552001953
    8. '<|end|>' → logprob: -5.699634552001953
    9. '                   ' → logprob: -5.824634552001953
    10. ',' → logprob: -5.949634552001953

Token 287: ' those' (ID: 2617)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.4948129653930664
    2. 'total' → logprob: -1.7448129653930664
    3. ' order' → logprob: -2.2448129653930664
    4. '0' → logprob: -3.4948129653930664
    5. ' sum' → logprob: -3.7448129653930664
    6. 'order' → logprob: -4.244812965393066
    7. ' ' → logprob: -4.494812965393066
    8. ')' → logprob: -4.744812965393066
    9. 'sum' → logprob: -5.119812965393066
    10. ' dp' → logprob: -5.494812965393066

Token 288: ' added' (ID: 5768)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9151746034622192
    2. ' in' → logprob: -1.7901746034622192
    3. '               ' → logprob: -1.9151746034622192
    4. ' that' → logprob: -3.0401744842529297
    5. ':' → logprob: -3.2901744842529297
    6. ' not' → logprob: -3.9151744842529297
    7. ' on' → logprob: -4.04017448425293
    8. '                   ' → logprob: -4.04017448425293
    9. ' below' → logprob: -4.41517448425293
    10. '[i' → logprob: -4.41517448425293

Token 289: ' after' (ID: 1934)
  Prédit: ' after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.6064517498016357
    2. ' next' → logprob: -1.4814517498016357
    3. ' in' → logprob: -2.7314517498016357
    4. ' before' → logprob: -2.7314517498016357
    5. ' on' → logprob: -4.356451988220215
    6. 'after' → logprob: -4.481451988220215
    7. '               ' → logprob: -4.731451988220215
    8. '[next' → logprob: -4.856451988220215
    9. ' earlier' → logprob: -4.981451988220215
    10. '[' → logprob: -4.981451988220215

Token 290: ' it' (ID: 480)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38715922832489014
    2. ' i' → logprob: -1.1371592283248901
    3. ' the' → logprob: -9.38715934753418
    4. 'the' → logprob: -10.01215934753418
    5. '_i' → logprob: -10.63715934753418
    6. '(i' → logprob: -10.63715934753418
    7. ' ' → logprob: -10.63715934753418
    8. ')' → logprob: -11.26215934753418
    9. ' (' → logprob: -11.38715934753418
    10. '[i' → logprob: -11.63715934753418

Token 291: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3816843032836914
    2. '               ' → logprob: -1.5066843032836914
    3. '<|end|>' → logprob: -3.8816843032836914
    4. ' :' → logprob: -4.006684303283691
    5. ',' → logprob: -4.381684303283691
    6. '<|end|>' → logprob: -4.506684303283691
    7. '                               ' → logprob: -5.131684303283691
    8. '):' → logprob: -5.256684303283691
    9. ':
' → logprob: -5.881684303283691
    10. '                ' → logprob: -6.006684303283691

Token 292: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020415522158145905
    2. '                ' → logprob: -4.770415306091309
    3. '                
' → logprob: -5.020415306091309
    4. '<|end|>' → logprob: -6.395415306091309
    5. ' ' → logprob: -7.145415306091309
    6. ' 
' → logprob: -7.395415306091309
    7. '                 
' → logprob: -8.145415306091309
    8. ',' → logprob: -8.270415306091309
    9. '<|end|>' → logprob: -8.895415306091309
    10. '                   ' → logprob: -9.020415306091309

Token 293: ' #' (ID: 1069)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -1.107251763343811
    2. '               ' → logprob: -1.107251763343811
    3. ' ' → logprob: -1.857251763343811
    4. ' 
' → logprob: -2.7322516441345215
    5. '                
' → logprob: -3.1072516441345215
    6. '                 
' → logprob: -3.6072516441345215
    7. ')' → logprob: -4.9822516441345215
    8. '                   ' → logprob: -5.2322516441345215
    9. ' )' → logprob: -5.7322516441345215
    10. '<|end|>' → logprob: -6.1072516441345215

Token 294: ' Because' (ID: 13602)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.224551722407341
    2. ' ' → logprob: -2.0995516777038574
    3. '               ' → logprob: -3.2245516777038574
    4. ' 
' → logprob: -4.349551677703857
    5. '                 
' → logprob: -4.724551677703857
    6. '                
' → logprob: -5.724551677703857
    7. ' if' → logprob: -5.974551677703857
    8. '<|end|>' → logprob: -6.599551677703857
    9. '                   ' → logprob: -6.849551677703857
    10. '                               ' → logprob: -7.099551677703857

Token 295: ' we' (ID: 581)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0796005725860596
    2. ' order' → logprob: -1.0796005725860596
    3. ' the' → logprob: -1.7046005725860596
    4. ' we' → logprob: -3.4546005725860596
    5. ' you' → logprob: -3.5796005725860596
    6. 'the' → logprob: -4.0796003341674805
    7. 'i' → logprob: -4.0796003341674805
    8. 'order' → logprob: -4.2046003341674805
    9. ' not' → logprob: -5.2046003341674805
    10. ' pos' → logprob: -5.3296003341674805

Token 296: ' add' (ID: 1147)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.2269055843353271
    2. ' are' → logprob: -1.3519055843353271
    3. ' need' → logprob: -1.6019055843353271
    4. ' want' → logprob: -2.726905584335327
    5. ' cannot' → logprob: -3.226905584335327
    6. ' have' → logprob: -3.476905584335327
    7. ' must' → logprob: -3.976905584335327
    8. ' know' → logprob: -3.976905584335327
    9. ' add' → logprob: -4.351905822753906
    10. ' can' → logprob: -4.351905822753906

Token 297: ' new' (ID: 620)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1081585884094238
    2. ' i' → logprob: -1.1081585884094238
    3. ' a' → logprob: -1.3581585884094238
    4. 'i' → logprob: -3.733158588409424
    5. ' one' → logprob: -3.983158588409424
    6. ' ' → logprob: -4.233158588409424
    7. 'the' → logprob: -5.358158588409424
    8. ' an' → logprob: -5.483158588409424
    9. '                ' → logprob: -5.483158588409424
    10. ' this' → logprob: -6.358158588409424

Token 298: ' food' (ID: 4232)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.2549436390399933
    2. ' ' → logprob: -2.004943609237671
    3. ' )' → logprob: -3.504943609237671
    4. ')' → logprob: -4.00494384765625
    5. '_token' → logprob: -4.00494384765625
    6. 'token' → logprob: -4.87994384765625
    7. ' tokens' → logprob: -5.37994384765625
    8. ' food' → logprob: -5.75494384765625
    9. ' i' → logprob: -7.12994384765625
    10. '_' → logprob: -7.12994384765625

Token 299: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.07638733834028244
    2. '               ' → logprob: -3.451387405395508
    3. '                               ' → logprob: -5.201387405395508
    4. '[i' → logprob: -5.326387405395508
    5. ' in' → logprob: -5.826387405395508
    6. ')' → logprob: -6.076387405395508
    7. ',' → logprob: -6.201387405395508
    8. '                ' → logprob: -6.451387405395508
    9. '[' → logprob: -6.451387405395508
    10. '_token' → logprob: -6.451387405395508

Token 300: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.04779624938964844
    2. 'top' → logprob: -3.1727962493896484
    3. ' the' → logprob: -6.047796249389648
    4. 'the' → logprob: -6.297796249389648
    5. '_top' → logprob: -8.547796249389648
    6. ' ' → logprob: -8.672796249389648
    7. ' mask' → logprob: -10.047796249389648
    8. ' i' → logprob: -10.172796249389648
    9. 'i' → logprob: -10.297796249389648
    10. '-top' → logprob: -10.547796249389648

Token 301: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07125421613454819
    2. ',' → logprob: -3.196254253387451
    3. '                ' → logprob: -4.696254253387451
    4. ' of' → logprob: -5.196254253387451
    5. '<|end|>' → logprob: -6.196254253387451
    6. '                               ' → logprob: -6.446254253387451
    7. ')' → logprob: -6.446254253387451
    8. '<|end|>' → logprob: -6.571254253387451
    9. '              ' → logprob: -7.446254253387451
    10. '                   ' → logprob: -7.571254253387451

Token 302: ' when' (ID: 1261)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.4170960783958435
    2. ' ' → logprob: -1.7920961380004883
    3. '               ' → logprob: -2.2920961380004883
    4. ' 
' → logprob: -4.167096138000488
    5. '<|end|>' → logprob: -4.167096138000488
    6. '                 
' → logprob: -4.792096138000488
    7. '                
' → logprob: -5.042096138000488
    8. ' continue' → logprob: -5.792096138000488
    9. '                                ' → logprob: -6.042096138000488
    10. '                               ' → logprob: -6.042096138000488

Token 303: ' adding' (ID: 12673)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5082411766052246
    2. 'i' → logprob: -1.2582411766052246
    3. ' adding' → logprob: -3.0082411766052246
    4. ' we' → logprob: -3.8832411766052246
    5. 'placing' → logprob: -4.258241176605225
    6. ' placing' → logprob: -5.008241176605225
    7. 'adding' → logprob: -5.508241176605225
    8. ' the' → logprob: -5.508241176605225
    9. '               ' → logprob: -6.133241176605225
    10. 'we' → logprob: -6.133241176605225

Token 304: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.361098974943161
    2. 'i' → logprob: -1.2360990047454834
    3. ' the' → logprob: -5.611098766326904
    4. ' food' → logprob: -6.361098766326904
    5. 'the' → logprob: -6.611098766326904
    6. 'food' → logprob: -6.736098766326904
    7. ' a' → logprob: -6.861098766326904
    8. '               ' → logprob: -7.486098766326904
    9. ' next' → logprob: -7.986098766326904
    10. '                ' → logprob: -7.986098766326904

Token 305: ' at' (ID: 540)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9561869502067566
    2. ':' → logprob: -1.4561870098114014
    3. '):' → logprob: -1.9561870098114014
    4. '               ' → logprob: -2.5811870098114014
    5. '):
' → logprob: -3.4561870098114014
    6. ')' → logprob: -3.7061870098114014
    7. '                               ' → logprob: -3.8311870098114014
    8. '<|end|>' → logprob: -4.456186771392822
    9. ' ,' → logprob: -4.581186771392822
    10. '                           ' → logprob: -4.706186771392822

Token 306: ' top' (ID: 2344)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2804624140262604
    2. 'the' → logprob: -2.6554625034332275
    3. ' position' → logprob: -2.9054625034332275
    4. ' order' → logprob: -3.4054625034332275
    5. ' top' → logprob: -4.030462265014648
    6. 'pos' → logprob: -4.280462265014648
    7. ' mask' → logprob: -4.405462265014648
    8. 'top' → logprob: -5.155462265014648
    9. ' a' → logprob: -5.280462265014648
    10. ' dp' → logprob: -5.280462265014648

Token 307: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46308672428131104
    2. '               ' → logprob: -1.338086724281311
    3. ',' → logprob: -2.7130866050720215
    4. ' :' → logprob: -3.9630866050720215
    5. '):' → logprob: -4.7130866050720215
    6. ':
' → logprob: -5.2130866050720215
    7. '                               ' → logprob: -6.2130866050720215
    8. ' ,' → logprob: -6.5880866050720215
    9. '                ' → logprob: -6.5880866050720215
    10. '):
' → logprob: -7.0880866050720215

Token 308: ' no' (ID: 860)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.4602336287498474
    2. '               ' → logprob: -1.8352336883544922
    3. ' ' → logprob: -2.210233688354492
    4. ' continue' → logprob: -4.460233688354492
    5. ' 
' → logprob: -4.585233688354492
    6. ')' → logprob: -4.710233688354492
    7. ' ' → logprob: -4.710233688354492
    8. '                   ' → logprob: -4.835233688354492
    9. 'token' → logprob: -4.835233688354492
    10. ' token' → logprob: -5.085233688354492

Token 309: ' food' (ID: 4232)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.3357810974121094
    2. ')' → logprob: -1.5857810974121094
    3. ' problem' → logprob: -2.8357810974121094
    4. 'token' → logprob: -2.8357810974121094
    5. 'food' → logprob: -2.9607810974121094
    6. ' other' → logprob: -3.2107810974121094
    7. ' token' → logprob: -3.5857810974121094
    8. ' food' → logprob: -3.5857810974121094
    9. 'i' → logprob: -3.7107810974121094
    10. 'need' → logprob: -3.9607810974121094

Token 310: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.4916107654571533
    2. '               ' → logprob: -1.4916107654571533
    3. ' else' → logprob: -1.8666107654571533
    4. ' on' → logprob: -1.9916107654571533
    5. ')' → logprob: -2.2416107654571533
    6. '<|end|>' → logprob: -3.3666107654571533
    7. ' above' → logprob: -3.8666107654571533
    8. ' at' → logprob: -4.741610527038574
    9. ' to' → logprob: -4.741610527038574
    10. '<|end|>' → logprob: -4.866610527038574

Token 311: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.2677278518676758
    2. ' above' → logprob: -2.392727851867676
    3. 'on' → logprob: -2.767727851867676
    4. 'placed' → logprob: -3.017727851867676
    5. ' placed' → logprob: -4.392727851867676
    6. ' on' → logprob: -5.392727851867676
    7. 'below' → logprob: -5.767727851867676
    8. ' ' → logprob: -6.017727851867676
    9. '```' → logprob: -6.267727851867676
    10. 'under' → logprob: -6.517727851867676

Token 312: ' it' (ID: 480)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026875954121351242
    2. '):' → logprob: -4.776875972747803
    3. '               ' → logprob: -4.901875972747803
    4. ' :' → logprob: -5.151875972747803
    5. ':
' → logprob: -6.276875972747803
    6. ')' → logprob: -6.901875972747803
    7. ',' → logprob: -7.276875972747803
    8. '                               ' → logprob: -8.526875495910645
    9. '):
' → logprob: -8.776875495910645
    10. '.' → logprob: -8.901875495910645

Token 313: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10734620690345764
    2. '               ' → logprob: -2.857346296310425
    3. ' :' → logprob: -3.607346296310425
    4. ':
' → logprob: -5.232346057891846
    5. ',' → logprob: -5.982346057891846
    6. '                ' → logprob: -6.107346057891846
    7. '):' → logprob: -6.732346057891846
    8. '                   ' → logprob: -6.857346057891846
    9. '.' → logprob: -7.107346057891846
    10. '                               ' → logprob: -7.482346057891846

Token 314: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03168049082159996
    2. '                ' → logprob: -4.281680583953857
    3. '                
' → logprob: -4.656680583953857
    4. ' 
' → logprob: -6.281680583953857
    5. ' ' → logprob: -6.281680583953857
    6. '                 
' → logprob: -7.156680583953857
    7. ')' → logprob: -7.281680583953857
    8. '<|end|>' → logprob: -7.281680583953857
    9. ' )' → logprob: -8.2816801071167
    10. ' ' → logprob: -8.4066801071167

Token 315: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1051899716258049
    2. '                ' → logprob: -3.1051900386810303
    3. '                
' → logprob: -3.7301900386810303
    4. ' ' → logprob: -4.605189800262451
    5. ' 
' → logprob: -5.105189800262451
    6. ')' → logprob: -5.605189800262451
    7. '                 
' → logprob: -5.730189800262451
    8. ' )' → logprob: -5.855189800262451
    9. '                   ' → logprob: -6.730189800262451
    10. ' ' → logprob: -7.355189800262451

Token 316: ' But' (ID: 3072)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.34409603476524353
    2. '               ' → logprob: -1.594096064567566
    3. ')' → logprob: -3.8440959453582764
    4. ' ' → logprob: -4.3440961837768555
    5. ' )' → logprob: -4.4690961837768555
    6. '                 
' → logprob: -4.4690961837768555
    7. ' if' → logprob: -5.2190961837768555
    8. 'if' → logprob: -5.3440961837768555
    9. ' ' → logprob: -5.4690961837768555
    10. ' 
' → logprob: -5.9690961837768555

Token 317: ' that' (ID: 484)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -1.0135672092437744
    2. ' not' → logprob: -1.8885672092437744
    3. ' ' → logprob: -2.0135672092437744
    4. ' i' → logprob: -2.1385672092437744
    5. ' (' → logprob: -2.2635672092437744
    6. '               ' → logprob: -3.3885672092437744
    7. ')' → logprob: -3.7635672092437744
    8. ' the' → logprob: -4.388566970825195
    9. ' )' → logprob: -5.013566970825195
    10. ' if' → logprob: -5.263566970825195

Token 318: ' means' (ID: 4748)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12398989498615265
    2. ''s' → logprob: -2.3739898204803467
    3. 'is' → logprob: -4.123990058898926
    4. ' seems' → logprob: -5.498990058898926
    5. ' was' → logprob: -7.248990058898926
    6. ' are' → logprob: -7.998990058898926
    7. ' means' → logprob: -8.373990058898926
    8. ' will' → logprob: -8.748990058898926
    9. '#' → logprob: -9.123990058898926
    10. ' continues' → logprob: -9.123990058898926

Token 319: ' the' (ID: 290)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.09661358594894409
    2. ' ' → logprob: -3.096613645553589
    3. ' the' → logprob: -3.846613645553589
    4. '                 
' → logprob: -5.34661340713501
    5. '               ' → logprob: -5.72161340713501
    6. ' ' → logprob: -6.09661340713501
    7. ',' → logprob: -6.22161340713501
    8. ' )' → logprob: -6.34661340713501
    9. ')' → logprob: -6.34661340713501
    10. ' (' → logprob: -6.47161340713501

Token 320: ' order' (ID: 2569)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3047623336315155
    2. ' code' → logprob: -2.304762363433838
    3. 'next' → logprob: -2.804762363433838
    4. ' stability' → logprob: -3.179762363433838
    5. 'if' → logprob: -5.179762363433838
    6. ' previous' → logprob: -5.554762363433838
    7. ' condition' → logprob: -5.554762363433838
    8. ' for' → logprob: -5.554762363433838
    9. '#' → logprob: -5.679762363433838
    10. ' if' → logprob: -5.679762363433838

Token 321: ' builds' (ID: 40340)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3378203809261322
    2. '[i' → logprob: -2.087820291519165
    3. ' is' → logprob: -2.587820291519165
    4. ' =' → logprob: -3.462820291519165
    5. ')' → logprob: -4.087820529937744
    6. '.append' → logprob: -4.962820529937744
    7. ' continues' → logprob: -5.212820529937744
    8. '=' → logprob: -5.837820529937744
    9. ' [' → logprob: -6.087820529937744
    10. '_' → logprob: -6.337820529937744

Token 322: ' from' (ID: 591)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -1.731705904006958
    2. ' from' → logprob: -1.856705904006958
    3. 'from' → logprob: -2.356705904006958
    4. ' i' → logprob: -2.606705904006958
    5. ' with' → logprob: -2.856705904006958
    6. ' one' → logprob: -2.856705904006958
    7. ' the' → logprob: -3.106705904006958
    8. ' on' → logprob: -3.231705904006958
    9. ' ' → logprob: -3.356705904006958
    10. ' as' → logprob: -3.606705904006958

Token 323: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.6723340153694153
    2. 'top' → logprob: -1.1723339557647705
    3. ' top' → logprob: -2.4223339557647705
    4. ' bottom' → logprob: -2.4223339557647705
    5. 'the' → logprob: -6.54733419418335
    6. ' the' → logprob: -7.04733419418335
    7. '```' → logprob: -10.797333717346191
    8. '0' → logprob: -11.172333717346191
    9. 'below' → logprob: -11.672333717346191
    10. '_top' → logprob: -11.797333717346191

Token 324: ' up' (ID: 869)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20648075640201569
    2. ' to' → logprob: -3.4564807415008545
    3. '           ' → logprob: -3.5814807415008545
    4. ')' → logprob: -3.7064807415008545
    5. ',' → logprob: -3.8314807415008545
    6. 'to' → logprob: -4.331480979919434
    7. '_' → logprob: -4.956480979919434
    8. '                ' → logprob: -4.956480979919434
    9. '[i' → logprob: -5.206480979919434
    10. '+' → logprob: -5.456480979919434

Token 325: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21522639691829681
    2. ':' → logprob: -1.965226411819458
    3. ',' → logprob: -4.340226173400879
    4. '                ' → logprob: -5.090226173400879
    5. ' :' → logprob: -5.215226173400879
    6. ')' → logprob: -5.340226173400879
    7. ':
' → logprob: -5.590226173400879
    8. '):' → logprob: -5.715226173400879
    9. '                   ' → logprob: -6.090226173400879
    10. '<|end|>' → logprob: -6.215226173400879

Token 326: ' so' (ID: 813)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.5724495053291321
    2. ' ' → logprob: -1.8224494457244873
    3. '               ' → logprob: -2.0724494457244873
    4. '                               ' → logprob: -3.3224494457244873
    5. '                                ' → logprob: -3.5724494457244873
    6. ' 
' → logprob: -3.8224494457244873
    7. '                 
' → logprob: -4.697449684143066
    8. '                   ' → logprob: -5.072449684143066
    9. '<|end|>' → logprob: -5.072449684143066
    10. '                
' → logprob: -5.072449684143066

Token 327: ' next' (ID: 2613)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.33491578698158264
    2. 'the' → logprob: -2.33491587638855
    3. ' we' → logprob: -2.95991587638855
    4. ' adding' → logprob: -2.95991587638855
    5. ' when' → logprob: -3.58491587638855
    6. 'we' → logprob: -4.834915637969971
    7. ' i' → logprob: -5.084915637969971
    8. ' you' → logprob: -5.334915637969971
    9. 'adding' → logprob: -5.334915637969971
    10. ' placing' → logprob: -5.584915637969971

Token 328: ' food' (ID: 4232)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.30810442566871643
    2. '_' → logprob: -1.808104395866394
    3. '_food' → logprob: -3.3081045150756836
    4. ' token' → logprob: -3.5581045150756836
    5. ' _' → logprob: -3.8081045150756836
    6. 'token' → logprob: -5.808104515075684
    7. ')' → logprob: -6.058104515075684
    8. ' i' → logprob: -6.058104515075684
    9. ' ' → logprob: -6.808104515075684
    10. '_space' → logprob: -6.808104515075684

Token 329: ' will' (ID: 738)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.02362079918384552
    2. 'be' → logprob: -4.14862060546875
    3. ' always' → logprob: -5.14862060546875
    4. ' go' → logprob: -6.77362060546875
    5. 'always' → logprob: -8.02362060546875
    6. ' have' → logprob: -9.89862060546875
    7. 'go' → logprob: -10.02362060546875
    8. '<|end|>' → logprob: -10.14862060546875
    9. ' appear' → logprob: -10.64862060546875
    10. '	be' → logprob: -10.89862060546875

Token 331: ' top' (ID: 2344)
  Prédit: 'placed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placed' → logprob: -1.2193684577941895
    2. ' on' → logprob: -1.4693684577941895
    3. ' placed' → logprob: -1.8443684577941895
    4. ' added' → logprob: -2.2193684577941895
    5. 'added' → logprob: -2.7193684577941895
    6. 'on' → logprob: -2.8443684577941895
    7. ' at' → logprob: -3.7193684577941895
    8. ' appended' → logprob: -4.3443684577941895
    9. 'at' → logprob: -4.4693684577941895
    10. ' the' → logprob: -5.0943684577941895

Token 332: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7435241341590881
    2. '               ' → logprob: -1.3685240745544434
    3. ' )' → logprob: -2.8685240745544434
    4. '_token' → logprob: -3.1185240745544434
    5. '-level' → logprob: -3.4935240745544434
    6. '```' → logprob: -3.4935240745544434
    7. '                ' → logprob: -3.8685240745544434
    8. '<|end|>' → logprob: -4.118524074554443
    9. '_' → logprob: -4.243524074554443
    10. '             ' → logprob: -4.868524074554443

Token 333: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03679647296667099
    2. '                ' → logprob: -3.7867965698242188
    3. '                
' → logprob: -5.161796569824219
    4. ' 
' → logprob: -6.536796569824219
    5. ' ' → logprob: -6.536796569824219
    6. '                   ' → logprob: -6.786796569824219
    7. '                 
' → logprob: -7.411796569824219
    8. '<|end|>' → logprob: -7.411796569824219
    9. ')' → logprob: -7.536796569824219
    10. '                               ' → logprob: -7.911796569824219

Token 334: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12381169945001602
    2. '                ' → logprob: -2.498811721801758
    3. ' ' → logprob: -4.373811721801758
    4. '                
' → logprob: -4.623811721801758
    5. ' 
' → logprob: -5.748811721801758
    6. '                 
' → logprob: -6.123811721801758
    7. ')' → logprob: -6.498811721801758
    8. ' )' → logprob: -6.498811721801758
    9. '                   ' → logprob: -6.998811721801758
    10. ' ' → logprob: -8.123811721801758

Token 335: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19421501457691193
    2. '                ' → logprob: -1.8192150592803955
    3. ' ' → logprob: -5.319214820861816
    4. '                   ' → logprob: -5.944214820861816
    5. '                
' → logprob: -6.194214820861816
    6. '                               ' → logprob: -6.694214820861816
    7. '                 
' → logprob: -7.444214820861816
    8. ' 
' → logprob: -7.944214820861816
    9. ')' → logprob: -8.319214820861816
    10. '              ' → logprob: -8.444214820861816

Token 336: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7532800436019897
    2. '               ' → logprob: -0.8782800436019897
    3. 'if' → logprob: -2.7532801628112793
    4. ' continue' → logprob: -4.503280162811279
    5. ' next' → logprob: -5.003280162811279
    6. ' s' → logprob: -5.253280162811279
    7. ' for' → logprob: -5.628280162811279
    8. '#' (adapté à ' #') → logprob: -6.128280162811279
    9. ' #' → logprob: -6.128280162811279
    10. 'weight' → logprob: -6.128280162811279

Token 337: ' So' (ID: 2632)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9991433620452881
    2. '               ' → logprob: -1.249143362045288
    3. 'if' → logprob: -2.124143362045288
    4. ' s' → logprob: -3.124143362045288
    5. 's' → logprob: -3.249143362045288
    6. ' stability' → logprob: -3.874143362045288
    7. ' next' → logprob: -3.999143362045288
    8. ' required' → logprob: -4.249143600463867
    9. 'st' → logprob: -4.624143600463867
    10. ' stack' → logprob: -4.749143600463867

Token 338: ' to' (ID: 316)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5785391330718994
    2. ' if' → logprob: -2.4535391330718994
    3. 'the' → logprob: -2.8285391330718994
    4. ' total' → logprob: -2.9535391330718994
    5. '               ' → logprob: -3.2035391330718994
    6. '#' → logprob: -3.7035391330718994
    7. ' #' → logprob: -3.8285391330718994
    8. ' we' → logprob: -4.07853889465332
    9. 'if' → logprob: -4.20353889465332
    10. ' next' → logprob: -4.20353889465332

Token 339: ' check' (ID: 2371)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -1.4286788702011108
    2. ' place' → logprob: -1.8036788702011108
    3. 'continue' → logprob: -1.9286788702011108
    4. 'check' → logprob: -2.3036789894104004
    5. 'add' → logprob: -2.6786789894104004
    6. ' check' → logprob: -2.8036789894104004
    7. ' add' → logprob: -2.9286789894104004
    8. ' continue' → logprob: -3.0536789894104004
    9. 's' → logprob: -4.0536789894104
    10. '               ' → logprob: -4.0536789894104

Token 340: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5502330660820007
    2. ' the' → logprob: -1.6752331256866455
    3. ' whether' → logprob: -2.6752331256866455
    4. ' i' → logprob: -2.9252331256866455
    5. 'the' → logprob: -3.4252331256866455
    6. ' (' → logprob: -3.5502331256866455
    7. ' stability' → logprob: -4.300232887268066
    8. 'if' → logprob: -4.300232887268066
    9. ' that' → logprob: -5.550232887268066
    10. 'whether' → logprob: -5.550232887268066

Token 341: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.29562076926231384
    2. '[i' → logprob: -1.4206207990646362
    3. '_' → logprob: -5.170620918273926
    4. ' _' → logprob: -5.670620918273926
    5. '[_' → logprob: -5.920620918273926
    6. '[' → logprob: -6.545620918273926
    7. 'i' → logprob: -7.920620918273926
    8. '_[' → logprob: -8.670620918273926
    9. '```' → logprob: -9.420620918273926
    10. 'ize' → logprob: -9.545620918273926

Token 342: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.010880863294005394
    2. '>=' → logprob: -5.260880947113037
    3. '[' → logprob: -6.385880947113037
    4. ',' → logprob: -7.135880947113037
    5. '[i' → logprob: -7.260880947113037
    6. ' >' → logprob: -7.510880947113037
    7. ' ' → logprob: -8.260880470275879
    8. ')' → logprob: -8.510880470275879
    9. '               ' → logprob: -8.635880470275879
    10. ')>=' → logprob: -8.635880470275879

Token 343: ' sum' (ID: 4215)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.45599663257598877
    2. 'total' → logprob: -1.0809966325759888
    3. 'dp' → logprob: -4.205996513366699
    4. ' dp' → logprob: -4.580996513366699
    5. ' (' → logprob: -7.705996513366699
    6. '(total' → logprob: -7.830996513366699
    7. '0' → logprob: -8.4559965133667
    8. '(' → logprob: -9.3309965133667
    9. ' foods' → logprob: -9.3309965133667
    10. 'pos' → logprob: -9.5809965133667

Token 344: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.297152578830719
    2. 'of' → logprob: -2.672152519226074
    3. '(' → logprob: -2.797152519226074
    4. '               ' → logprob: -3.297152519226074
    5. '                ' → logprob: -3.797152519226074
    6. ' +' → logprob: -4.547152519226074
    7. '_' → logprob: -4.672152519226074
    8. '_of' → logprob: -4.797152519226074
    9. '+' → logprob: -5.422152519226074
    10. '(weights' → logprob: -5.672152519226074

Token 345: ' weights' (ID: 28460)
  Prédit: ' weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.5347588062286377
    2. 'weights' → logprob: -1.0347588062286377
    3. ' dp' → logprob: -4.034758567810059
    4. ' w' → logprob: -4.409758567810059
    5. 'w' → logprob: -4.534758567810059
    6. 'dp' → logprob: -4.659758567810059
    7. '(weights' → logprob: -6.159758567810059
    8. ' total' → logprob: -6.659758567810059
    9. '_weights' → logprob: -6.784758567810059
    10. 'weight' → logprob: -6.784758567810059

Token 346: ' above' (ID: 5151)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7615970373153687
    2. '+' → logprob: -2.386597156524658
    3. ' of' → logprob: -2.386597156524658
    4. ' +' → logprob: -2.761597156524658
    5. 'of' → logprob: -2.761597156524658
    6. 'above' → logprob: -3.011597156524658
    7. ' above' → logprob: -3.261597156524658
    8. '_of' → logprob: -3.261597156524658
    9. '                ' → logprob: -4.136597156524658
    10. ')' → logprob: -4.261597156524658

Token 347: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18568596243858337
    2. '               ' → logprob: -2.435685873031616
    3. ',' → logprob: -3.310685873031616
    4. ' :' → logprob: -3.685685873031616
    5. '):' → logprob: -5.060686111450195
    6. '(' → logprob: -5.935686111450195
    7. '+' → logprob: -6.435686111450195
    8. ' (' → logprob: -6.560686111450195
    9. '                ' → logprob: -7.060686111450195
    10. ' ,' → logprob: -7.060686111450195

Token 348: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.943898618221283
    2. '                   ' → logprob: -1.8188986778259277
    3. ' sum' → logprob: -2.6938986778259277
    4. ' next' → logprob: -2.8188986778259277
    5. ' continue' → logprob: -2.8188986778259277
    6. 'sum' → logprob: -2.9438986778259277
    7. '               ' → logprob: -3.3188986778259277
    8. 'if' → logprob: -3.5688986778259277
    9. ' we' → logprob: -3.6938986778259277
    10. ' above' → logprob: -3.6938986778259277

Token 349: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.3870536983013153
    2. 'need' → logprob: -1.7620537281036377
    3. ' should' → logprob: -3.0120537281036377
    4. 'should' → logprob: -3.5120537281036377
    5. ' must' → logprob: -3.8870537281036377
    6. 'continue' → logprob: -4.262053489685059
    7. '               ' → logprob: -4.387053489685059
    8. ' continue' → logprob: -4.512053489685059
    9. 'must' → logprob: -4.887053489685059
    10. ' have' → logprob: -7.137053489685059

Token 350: ' the' (ID: 290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5929877161979675
    2. '                ' → logprob: -1.4679877758026123
    3. 'to' → logprob: -2.7179877758026123
    4. ' to' → logprob: -2.7179877758026123
    5. '                   ' → logprob: -3.8429877758026123
    6. '            ' → logprob: -4.592987537384033
    7. '                    ' → logprob: -4.592987537384033
    8. '                        ' → logprob: -4.967987537384033
    9. '                       ' → logprob: -5.092987537384033
    10. 'continue' → logprob: -5.342987537384033

Token 351: ' weights' (ID: 28460)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.954062819480896
    2. ' sum' → logprob: -1.454062819480896
    3. 'sum' → logprob: -3.0790629386901855
    4. 'total' → logprob: -3.2040629386901855
    5. ')' → logprob: -3.3290629386901855
    6. ' weights' → logprob: -3.4540629386901855
    7. ' s' → logprob: -3.7040629386901855
    8. 'weights' → logprob: -3.8290629386901855
    9. ' current' → logprob: -4.0790629386901855
    10. ' dp' → logprob: -4.2040629386901855

Token 352: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7017167806625366
    2. ' above' → logprob: -2.076716899871826
    3. 'of' → logprob: -2.326716899871826
    4. 'above' → logprob: -2.576716899871826
    5. '<|end|>' → logprob: -2.951716899871826
    6. '<|end|>' → logprob: -3.076716899871826
    7. '               ' → logprob: -3.701716899871826
    8. ')' → logprob: -4.701716899871826
    9. '=' → logprob: -5.201716899871826
    10. ' ' → logprob: -5.326716899871826

Token 353: ' all' (ID: 722)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.3796224892139435
    2. ' order' → logprob: -1.629622459411621
    3. 'dp' → logprob: -3.004622459411621
    4. 'foods' → logprob: -4.504622459411621
    5. ')' → logprob: -4.629622459411621
    6. ']' → logprob: -5.129622459411621
    7. '[]' → logprob: -5.254622459411621
    8. ' ' → logprob: -5.504622459411621
    9. ' dp' → logprob: -5.504622459411621
    10. 'total' → logprob: -5.504622459411621

Token 354: ' foods' (ID: 18747)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' → logprob: -1.1922404766082764
    2. ' foods' → logprob: -1.4422404766082764
    3. ' previous' → logprob: -2.4422404766082764
    4. ' above' → logprob: -2.6922404766082764
    5. '               ' → logprob: -3.1922404766082764
    6. '```' → logprob: -3.5672404766082764
    7. ')' → logprob: -3.9422404766082764
    8. ' previously' → logprob: -3.9422404766082764
    9. 'previous' → logprob: -3.9422404766082764
    10. 'above' → logprob: -4.1922407150268555

Token 355: ' placed' (ID: 12989)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.613585352897644
    2. ' above' → logprob: -1.363585352897644
    3. '               ' → logprob: -2.8635854721069336
    4. ' that' → logprob: -3.2385854721069336
    5. ' after' → logprob: -3.7385854721069336
    6. 'after' → logprob: -4.363585472106934
    7. 'already' → logprob: -4.363585472106934
    8. 'that' → logprob: -4.988585472106934
    9. 'placed' → logprob: -5.113585472106934
    10. '<|end|>' → logprob: -5.238585472106934

Token 356: ' above' (ID: 5151)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'after' → logprob: -1.117680311203003
    2. 'above' → logprob: -1.367680311203003
    3. ' after' → logprob: -1.742680311203003
    4. ' above' → logprob: -2.367680311203003
    5. 'on' → logprob: -2.867680311203003
    6. 'below' → logprob: -3.617680311203003
    7. ' on' → logprob: -4.117680549621582
    8. '               ' → logprob: -4.117680549621582
    9. 'before' → logprob: -4.742680549621582
    10. '[i' → logprob: -5.242680549621582

Token 357: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33499839901924133
    2. '<|end|>' → logprob: -2.959998369216919
    3. '                ' → logprob: -3.459998369216919
    4. ',' → logprob: -3.459998369216919
    5. 'i' → logprob: -3.709998369216919
    6. ':' → logprob: -3.834998369216919
    7. ')' → logprob: -4.209998607635498
    8. '<|end|>' → logprob: -4.334998607635498
    9. ' ' → logprob: -4.459998607635498
    10. '(i' → logprob: -4.709998607635498

Token 358: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03926832973957062
    2. ',' → logprob: -4.289268493652344
    3. '<|end|>' → logprob: -4.914268493652344
    4. '<|end|>' → logprob: -5.164268493652344
    5. '                ' → logprob: -5.414268493652344
    6. '                
' → logprob: -6.539268493652344
    7. '                   ' → logprob: -7.039268493652344
    8. ':' → logprob: -7.164268493652344
    9. ')' → logprob: -7.289268493652344
    10. '.' → logprob: -7.289268493652344

Token 359: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1734195202589035
    2. '                ' → logprob: -2.04841947555542
    3. ' ' → logprob: -3.92341947555542
    4. '<|end|>' → logprob: -5.29841947555542
    5. '                
' → logprob: -6.29841947555542
    6. '<|end|>' → logprob: -7.92341947555542
    7. '                               ' → logprob: -8.048419952392578
    8. ',' → logprob: -8.048419952392578
    9. '              ' → logprob: -8.298419952392578
    10. ')' → logprob: -8.548419952392578

Token 360: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05390062555670738
    2. '                ' → logprob: -4.053900718688965
    3. '                
' → logprob: -4.178900718688965
    4. ' ' → logprob: -4.678900718688965
    5. ' 
' → logprob: -6.178900718688965
    6. '<|end|>' → logprob: -6.303900718688965
    7. '                 
' → logprob: -7.178900718688965
    8. ',' → logprob: -7.428900718688965
    9. '                
                
' → logprob: -7.428900718688965
    10. ')' → logprob: -7.553900718688965

Token 361: ' When' (ID: 4296)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4470084011554718
    2. '                ' → logprob: -1.1970083713531494
    3. ' ' → logprob: -3.6970083713531494
    4. '                
' → logprob: -4.5720086097717285
    5. '<|end|>' → logprob: -5.4470086097717285
    6. ' if' → logprob: -5.5720086097717285
    7. ' 
' → logprob: -5.6970086097717285
    8. '                 
' → logprob: -6.1970086097717285
    9. ' total' → logprob: -6.6970086097717285
    10. ' continue' → logprob: -6.9470086097717285

Token 362: ' we' (ID: 581)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.49664515256881714
    2. ' i' → logprob: -1.746645212173462
    3. ' adding' → logprob: -2.496645212173462
    4. 'adding' → logprob: -3.246645212173462
    5. ' the' → logprob: -4.121644973754883
    6. ' we' → logprob: -4.246644973754883
    7. 'placing' → logprob: -4.246644973754883
    8. 'the' → logprob: -4.621644973754883
    9. 'we' → logprob: -4.996644973754883
    10. '               ' → logprob: -4.996644973754883

Token 363: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.28093963861465454
    2. 'add' → logprob: -1.9059395790100098
    3. ' place' → logprob: -2.6559395790100098
    4. 'place' → logprob: -4.65593957901001
    5. ' try' → logprob: -5.03093957901001
    6. 'continue' → logprob: -6.40593957901001
    7. ' continue' → logprob: -6.78093957901001
    8. 'try' → logprob: -6.90593957901001
    9. '               ' → logprob: -7.28093957901001
    10. 'choose' → logprob: -7.40593957901001

Token 364: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3114146888256073
    2. 'i' → logprob: -2.1864147186279297
    3. ' a' → logprob: -2.6864147186279297
    4. ' the' → logprob: -2.8114147186279297
    5. '                ' → logprob: -4.43641471862793
    6. ' ' → logprob: -5.81141471862793
    7. ' an' → logprob: -6.18641471862793
    8. ')' → logprob: -6.18641471862793
    9. ' (' → logprob: -6.68641471862793
    10. 'the' → logprob: -6.81141471862793

Token 365: ' as' (ID: 472)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.45454728603363037
    2. ',' → logprob: -1.3295472860336304
    3. ' ,' → logprob: -4.32954740524292
    4. ')' → logprob: -4.32954740524292
    5. ':' → logprob: -4.45454740524292
    6. '),' → logprob: -4.45454740524292
    7. ' on' → logprob: -4.82954740524292
    8. ' here' → logprob: -4.95454740524292
    9. '):' → logprob: -5.32954740524292
    10. ' in' → logprob: -5.70454740524292

Token 366: ' next' (ID: 2613)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -1.183534860610962
    2. 'top' → logprob: -1.433534860610962
    3. ' the' → logprob: -1.558534860610962
    4. 'the' → logprob: -1.683534860610962
    5. ' next' → logprob: -4.058534622192383
    6. ' mask' → logprob: -4.683534622192383
    7. ' a' → logprob: -4.933534622192383
    8. 'next' → logprob: -5.183534622192383
    9. 'dp' → logprob: -5.683534622192383
    10. ' dp' → logprob: -5.808534622192383

Token 367: ' food' (ID: 4232)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.1381918042898178
    2. '_token' → logprob: -2.6381916999816895
    3. 'token' → logprob: -3.3881916999816895
    4. '               ' → logprob: -5.0131916999816895
    5. '                ' → logprob: -5.3881916999816895
    6. ' food' → logprob: -5.7631916999816895
    7. '_' → logprob: -6.0131916999816895
    8. '_food' → logprob: -6.5131916999816895
    9. ')' → logprob: -7.0131916999816895
    10. ' ' → logprob: -7.5131916999816895

Token 368: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5162724256515503
    2. ' on' → logprob: -1.8912724256515503
    3. '               ' → logprob: -2.89127254486084
    4. ' at' → logprob: -3.14127254486084
    5. ')' → logprob: -3.39127254486084
    6. '_token' → logprob: -4.14127254486084
    7. ' ,' → logprob: -4.76627254486084
    8. 'token' → logprob: -4.76627254486084
    9. ' in' → logprob: -4.89127254486084
    10. '):
' → logprob: -5.14127254486084

Token 369: 'top' (ID: 8169)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.912449836730957
    2. ')' → logprob: -1.412449836730957
    3. ' ),' → logprob: -1.412449836730957
    4. ' )' → logprob: -2.412449836730957
    5. '               ' → logprob: -5.162449836730957
    6. '):
' → logprob: -5.787449836730957
    7. ' i' → logprob: -5.912449836730957
    8. '                ' → logprob: -6.162449836730957
    9. '):' → logprob: -6.412449836730957
    10. ' ):
' → logprob: -7.412449836730957

Token 370: '),
' (ID: 2313)
  Prédit: ' ),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ),' → logprob: -0.7432740926742554
    2. '),' → logprob: -0.8682740926742554
    3. ' )' → logprob: -3.618274211883545
    4. ' token' → logprob: -4.118274211883545
    5. ')' → logprob: -4.368274211883545
    6. '):
' → logprob: -4.493274211883545
    7. '               ' → logprob: -4.743274211883545
    8. '_token' → logprob: -4.868274211883545
    9. '_food' → logprob: -5.618274211883545
    10. '_' → logprob: -5.743274211883545

Token 371: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6576027274131775
    2. '                ' → logprob: -0.7826027274131775
    3. '                   ' → logprob: -4.907602787017822
    4. ' a' → logprob: -5.657602787017822
    5. ' ' → logprob: -5.907602787017822
    6. ' the' → logprob: -6.157602787017822
    7. ' ' → logprob: -6.657602787017822
    8. '<|end|>' → logprob: -7.407602787017822
    9. '                 
' → logprob: -7.532602787017822
    10. '                
' → logprob: -7.782602787017822

Token 372: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1274857074022293
    2. '                ' → logprob: -2.752485752105713
    3. ' the' → logprob: -3.752485752105713
    4. 'the' → logprob: -5.002485752105713
    5. '#' (adapté à ' #') → logprob: -5.627485752105713
    6. ' we' → logprob: -5.752485752105713
    7. ' then' → logprob: -6.002485752105713
    8. ' i' → logprob: -6.377485752105713
    9. ' #' → logprob: -6.377485752105713
    10. ' it' → logprob: -6.752485752105713

Token 373: ' the' (ID: 290)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.7088027596473694
    2. ' the' → logprob: -2.2088027000427246
    3. ' ' → logprob: -2.4588027000427246
    4. '               ' → logprob: -2.5838027000427246
    5. ' total' → logprob: -2.7088027000427246
    6. ' i' → logprob: -3.5838027000427246
    7. ')' → logprob: -3.9588027000427246
    8. ' #' → logprob: -3.9588027000427246
    9. 'the' → logprob: -4.083802700042725
    10. '#' → logprob: -4.583802700042725

Token 374: ' foods' (ID: 18747)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.8611981272697449
    2. ' above' → logprob: -1.2361981868743896
    3. ' sum' → logprob: -2.4861981868743896
    4. ' total' → logprob: -3.1111981868743896
    5. 'above' → logprob: -3.3611981868743896
    6. 'sum' → logprob: -3.7361981868743896
    7. ')' → logprob: -3.8611981868743896
    8. ' code' → logprob: -4.7361979484558105
    9. 'next' → logprob: -4.9861979484558105
    10. '               ' → logprob: -4.9861979484558105

Token 375: ' already' (ID: 4279)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3888093829154968
    2. ' above' → logprob: -2.1388094425201416
    3. ' are' → logprob: -2.8888094425201416
    4. ' already' → logprob: -3.6388094425201416
    5. ' placed' → logprob: -3.7638094425201416
    6. 'above' → logprob: -4.0138092041015625
    7. 'placed' → logprob: -4.3888092041015625
    8. '[' → logprob: -4.7638092041015625
    9. 'already' → logprob: -4.7638092041015625
    10. '[i' → logprob: -5.2638092041015625

Token 376: ' in' (ID: 306)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.1087156534194946
    2. 'placed' → logprob: -1.3587156534194946
    3. ' above' → logprob: -1.8587156534194946
    4. 'above' → logprob: -2.483715534210205
    5. ' placed' → logprob: -2.608715534210205
    6. ' in' → logprob: -3.233715534210205
    7. 'are' → logprob: -4.233715534210205
    8. ' have' → logprob: -4.608715534210205
    9. ' on' → logprob: -4.733715534210205
    10. 'in' → logprob: -4.858715534210205

Token 377: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.07144758850336075
    2. ' order' → logprob: -2.6964476108551025
    3. 'dp' → logprob: -6.946447372436523
    4. 'the' → logprob: -8.321447372436523
    5. ' dp' → logprob: -9.321447372436523
    6. 'mask' → logprob: -9.321447372436523
    7. ' the' → logprob: -9.696447372436523
    8. ' ' → logprob: -11.446447372436523
    9. ' mask' → logprob: -11.696447372436523
    10. '```' → logprob: -11.696447372436523

Token 378: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.1195533350110054
    2. ')' → logprob: -3.994553327560425
    3. '               ' → logprob: -4.244553565979004
    4. '[i' → logprob: -4.369553565979004
    5. ' have' → logprob: -4.494553565979004
    6. ':' → logprob: -4.744553565979004
    7. ' continue' → logprob: -4.994553565979004
    8. ' will' → logprob: -5.494553565979004
    9. ' above' → logprob: -5.494553565979004
    10. 'are' → logprob: -5.744553565979004

Token 379: ' below' (ID: 4895)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.7996713519096375
    2. ' all' → logprob: -1.4246714115142822
    3. ' below' → logprob: -2.2996714115142822
    4. 'all' → logprob: -2.5496714115142822
    5. 'the' → logprob: -3.4246714115142822
    6. ' the' → logprob: -3.5496714115142822
    7. 'above' → logprob: -3.5496714115142822
    8. 'under' → logprob: -4.674671173095703
    9. 'placed' → logprob: -5.049671173095703
    10. 'already' → logprob: -5.174671173095703

Token 380: ' it' (ID: 480)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010557357221841812
    2. ',' → logprob: -5.010557174682617
    3. ' and' → logprob: -7.260557174682617
    4. '<|end|>' → logprob: -7.385557174682617
    5. ')' → logprob: -7.760557174682617
    6. '                
' → logprob: -7.885557174682617
    7. '.' → logprob: -8.260557174682617
    8. '           ' → logprob: -8.510557174682617
    9. '                ' → logprob: -8.635557174682617
    10. '<|end|>' → logprob: -8.635557174682617

Token 381: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03299320861697197
    2. ',' → logprob: -4.157993316650391
    3. ':' → logprob: -5.282993316650391
    4. ')' → logprob: -5.657993316650391
    5. '                
' → logprob: -6.407993316650391
    6. '<|end|>' → logprob: -6.657993316650391
    7. '.' → logprob: -6.782993316650391
    8. '):' → logprob: -7.282993316650391
    9. '                ' → logprob: -7.532993316650391
    10. ' and' → logprob: -7.782993316650391

Token 382: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.4891085922718048
    2. '                ' → logprob: -1.4891085624694824
    3. '               ' → logprob: -2.4891085624694824
    4. ' ' → logprob: -3.2391085624694824
    5. ' and' → logprob: -4.364108562469482
    6. ' but' → logprob: -5.614108562469482
    7. ' not' → logprob: -5.739108562469482
    8. ',' → logprob: -5.864108562469482
    9. '                   ' → logprob: -6.239108562469482
    10. '                 
' → logprob: -6.239108562469482

Token 383: ' no' (ID: 860)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1062331199645996
    2. ' the' → logprob: -1.7312331199645996
    3. '                ' → logprob: -1.9812331199645996
    4. ' ' → logprob: -2.2312331199645996
    5. '               ' → logprob: -2.7312331199645996
    6. ' i' → logprob: -2.9812331199645996
    7. 'the' → logprob: -3.4812331199645996
    8. 'continue' → logprob: -3.7312331199645996
    9. ' total' → logprob: -4.7312331199646
    10. '0' → logprob: -4.9812331199646

Token 384: ' food' (ID: 4232)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.6784822940826416
    2. ')' → logprob: -1.9284822940826416
    3. 'weight' → logprob: -1.9284822940826416
    4. ' need' → logprob: -2.3034822940826416
    5. ' weight' → logprob: -2.5534822940826416
    6. ' #' → logprob: -2.8034822940826416
    7. '                ' → logprob: -2.9284822940826416
    8. ' ' → logprob: -3.0534822940826416
    9. ' weights' → logprob: -3.4284822940826416
    10. '#' → logprob: -3.5534822940826416

Token 385: ' above' (ID: 5151)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4379613995552063
    2. '               ' → logprob: -1.9379613399505615
    3. ' above' → logprob: -2.1879613399505615
    4. 'is' → logprob: -3.4379613399505615
    5. 'above' → logprob: -4.062961578369141
    6. ')' → logprob: -4.312961578369141
    7. ' are' → logprob: -4.937961578369141
    8. '	           ' → logprob: -5.812961578369141
    9. ' will' → logprob: -6.187961578369141
    10. '<|end|>' → logprob: -6.312961578369141

Token 386: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3642274737358093
    2. ':' → logprob: -1.739227533340454
    3. ')' → logprob: -2.739227533340454
    4. '.' → logprob: -3.489227533340454
    5. '):' → logprob: -4.614227294921875
    6. ',' → logprob: -5.239227294921875
    7. '<|end|>' → logprob: -5.614227294921875
    8. ' :' → logprob: -6.239227294921875
    9. '                ' → logprob: -6.239227294921875
    10. '                               ' → logprob: -6.489227294921875

Token 387: ' except' (ID: 6384)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.740785539150238
    2. '               ' → logprob: -0.740785539150238
    3. ')' → logprob: -4.490785598754883
    4. ',' → logprob: -5.115785598754883
    5. '                ' → logprob: -5.115785598754883
    6. ' ' → logprob: -5.115785598754883
    7. '):' → logprob: -5.615785598754883
    8. '.' → logprob: -5.865785598754883
    9. ' :' → logprob: -5.865785598754883
    10. '<|end|>' → logprob: -6.740785598754883

Token 388: ' those' (ID: 2617)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4294605255126953
    2. 'i' → logprob: -1.8044605255126953
    3. ' i' → logprob: -2.5544605255126953
    4. ' the' → logprob: -3.4294605255126953
    5. 'the' → logprob: -3.5544605255126953
    6. ' ' → logprob: -3.8044605255126953
    7. ')' → logprob: -4.679460525512695
    8. '[]' → logprob: -5.929460525512695
    9. '[i' → logprob: -6.179460525512695
    10. '               ' → logprob: -6.554460525512695

Token 389: ' added' (ID: 5768)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'already' → logprob: -0.8333951234817505
    2. ' already' → logprob: -1.3333951234817505
    3. ' that' → logprob: -2.583395004272461
    4. ' in' → logprob: -3.083395004272461
    5. '               ' → logprob: -3.833395004272461
    6. ' after' → logprob: -3.958395004272461
    7. 'placed' → logprob: -4.083395004272461
    8. ' above' → logprob: -4.458395004272461
    9. 'that' → logprob: -4.583395004272461
    10. ' on' → logprob: -4.708395004272461

Token 390: ' later' (ID: 4849)
  Prédit: ' after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.11443327367305756
    2. 'after' → logprob: -2.6144332885742188
    3. ' before' → logprob: -4.739433288574219
    4. ' afterwards' → logprob: -4.989433288574219
    5. '               ' → logprob: -5.614433288574219
    6. ' afterward' → logprob: -5.739433288574219
    7. ' next' → logprob: -6.114433288574219
    8. 'before' → logprob: -6.239433288574219
    9. ' on' → logprob: -6.489433288574219
    10. ' in' → logprob: -6.739433288574219

Token 391: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4234422743320465
    2. '               ' → logprob: -1.1734422445297241
    3. ' :' → logprob: -4.173442363739014
    4. '):' → logprob: -4.673442363739014
    5. ',' → logprob: -5.798442363739014
    6. '.' → logprob: -6.548442363739014
    7. '                ' → logprob: -6.548442363739014
    8. ')' → logprob: -7.173442363739014
    9. ':
' → logprob: -7.173442363739014
    10. '                               ' → logprob: -7.298442363739014

Token 392: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007006624713540077
    2. '                ' → logprob: -5.632006645202637
    3. '<|end|>' → logprob: -6.757006645202637
    4. '                
' → logprob: -7.257006645202637
    5. ' ' → logprob: -8.007006645202637
    6. '                   ' → logprob: -8.757006645202637
    7. ')' → logprob: -9.132006645202637
    8. ' )' → logprob: -9.132006645202637
    9. '<|end|>' → logprob: -9.257006645202637
    10. '                               ' → logprob: -9.382006645202637

Token 393: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015148154459893703
    2. '                ' → logprob: -5.140148162841797
    3. ' ' → logprob: -5.515148162841797
    4. '                
' → logprob: -6.015148162841797
    5. ' 
' → logprob: -6.765148162841797
    6. ' )' → logprob: -8.390148162841797
    7. '<|end|>' → logprob: -8.515148162841797
    8. '                 
' → logprob: -8.640148162841797
    9. '                   ' → logprob: -8.640148162841797
    10. ')' → logprob: -8.890148162841797

Token 394: ' Hence' (ID: 47682)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21955057978630066
    2. '                ' → logprob: -1.844550609588623
    3. ' ' → logprob: -4.594550609588623
    4. ' continue' → logprob: -5.094550609588623
    5. ' 
' → logprob: -5.469550609588623
    6. '                
' → logprob: -5.594550609588623
    7. ' ' → logprob: -6.094550609588623
    8. '                 
' → logprob: -6.219550609588623
    9. ' )' → logprob: -6.219550609588623
    10. ')' → logprob: -6.594550609588623

Token 395: ',' (ID: 11)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.0870656669139862
    2. ' continue' → logprob: -3.3370656967163086
    3. ' ' → logprob: -3.9620656967163086
    4. '               ' → logprob: -4.212065696716309
    5. ' ' → logprob: -5.087065696716309
    6. 'continue' → logprob: -6.337065696716309
    7. ' the' → logprob: -6.712065696716309
    8. ' if' → logprob: -7.337065696716309
    9. '                 
' → logprob: -7.587065696716309
    10. ',' → logprob: -8.212065696716309

Token 396: ' for' (ID: 395)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.39417898654937744
    2. 'continue' → logprob: -2.269178867340088
    3. ' pass' → logprob: -2.769178867340088
    4. '                ' → logprob: -3.269178867340088
    5. '               ' → logprob: -3.394178867340088
    6. ' #' → logprob: -3.769178867340088
    7. ' total' → logprob: -4.394178867340088
    8. '#' → logprob: -4.519178867340088
    9. 'pass' → logprob: -4.519178867340088
    10. ' dp' → logprob: -4.894178867340088

Token 397: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5401005148887634
    2. ' i' → logprob: -1.4151005744934082
    3. ' the' → logprob: -2.415100574493408
    4. 'the' → logprob: -2.790100574493408
    5. ' ' → logprob: -5.290100574493408
    6. 's' → logprob: -5.665100574493408
    7. ' adding' → logprob: -6.415100574493408
    8. ' this' → logprob: -6.540100574493408
    9. ' next' → logprob: -6.540100574493408
    10. '(i' → logprob: -6.665100574493408

Token 398: ' order' (ID: 2569)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.1518183946609497
    2. 'i' → logprob: -1.5268183946609497
    3. 'next' → logprob: -1.5268183946609497
    4. 'current' → logprob: -2.15181827545166
    5. ' current' → logprob: -2.65181827545166
    6. ' i' → logprob: -3.40181827545166
    7. 'new' → logprob: -5.40181827545166
    8. ' new' → logprob: -5.65181827545166
    9. 'if' → logprob: -5.90181827545166
    10. 'for' → logprob: -6.02681827545166

Token 399: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5773401260375977
    2. ',' → logprob: -1.9523401260375977
    3. '[i' → logprob: -2.0773401260375977
    4. '[' → logprob: -2.4523401260375977
    5. ' =' → logprob: -2.7023401260375977
    6. '=' → logprob: -2.7023401260375977
    7. ')' → logprob: -2.9523401260375977
    8. '               ' → logprob: -3.7023401260375977
    9. ' ' → logprob: -4.077340126037598
    10. ' of' → logprob: -4.452340126037598

Token 400: ' when' (ID: 1261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0501972436904907
    2. ' continue' → logprob: -2.050197124481201
    3. ' if' → logprob: -2.175197124481201
    4. '                ' → logprob: -2.425197124481201
    5. ' ' → logprob: -2.800197124481201
    6. ' we' → logprob: -3.425197124481201
    7. ')' → logprob: -3.800197124481201
    8. ' i' → logprob: -3.800197124481201
    9. 'the' → logprob: -4.050197124481201
    10. ' ' → logprob: -4.300197124481201

Token 401: ' adding' (ID: 12673)
  Prédit: 'adding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adding' → logprob: -0.5963634848594666
    2. 'i' → logprob: -1.5963635444641113
    3. ' adding' → logprob: -1.8463635444641113
    4. 'we' → logprob: -2.9713635444641113
    5. ' we' → logprob: -4.596363544464111
    6. ' i' → logprob: -4.721363544464111
    7. 'placing' → logprob: -4.721363544464111
    8. '(i' → logprob: -6.096363544464111
    9. 'you' → logprob: -6.346363544464111
    10. 'the' → logprob: -7.096363544464111

Token 402: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3896251320838928
    2. 'i' → logprob: -1.139625072479248
    3. ' the' → logprob: -7.139625072479248
    4. ' a' → logprob: -7.389625072479248
    5. 'the' → logprob: -8.389625549316406
    6. ' next' → logprob: -8.764625549316406
    7. '`' → logprob: -9.389625549316406
    8. '```' → logprob: -9.389625549316406
    9. 'token' → logprob: -9.514625549316406
    10. ' food' → logprob: -9.639625549316406

Token 403: ' new' (ID: 620)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7194715738296509
    2. ' i' → logprob: -1.3444715738296509
    3. ' new' → logprob: -2.2194714546203613
    4. ' ' → logprob: -2.5944714546203613
    5. 'space' → logprob: -4.219471454620361
    6. ' token' → logprob: -4.469471454620361
    7. 'token' → logprob: -4.469471454620361
    8. ' next' → logprob: -4.594471454620361
    9. 'new' → logprob: -5.219471454620361
    10. ' space' → logprob: -5.344471454620361

Token 404: ' food' (ID: 4232)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.6519198417663574
    2. ' ' → logprob: -1.2769198417663574
    3. ' i' → logprob: -2.1519198417663574
    4. ' food' → logprob: -2.7769198417663574
    5. ')' → logprob: -5.776919841766357
    6. ' )' → logprob: -5.776919841766357
    7. 'token' → logprob: -5.901919841766357
    8. '_food' → logprob: -5.901919841766357
    9. '_' → logprob: -6.026919841766357
    10. '_token' → logprob: -6.276919841766357

Token 405: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6756932735443115
    2. ' on' → logprob: -1.3006932735443115
    3. ' at' → logprob: -2.6756932735443115
    4. ')' → logprob: -3.6756932735443115
    5. ' ,' → logprob: -3.8006932735443115
    6. '_token' → logprob: -4.425693511962891
    7. ' token' → logprob: -5.050693511962891
    8. ' as' → logprob: -5.050693511962891
    9. ' i' → logprob: -5.175693511962891
    10. '               ' → logprob: -5.175693511962891

Token 406: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.639879047870636
    2. ' top' → logprob: -0.764879047870636
    3. 'the' → logprob: -5.63987922668457
    4. ' the' → logprob: -6.76487922668457
    5. 'i' → logprob: -7.13987922668457
    6. '_top' → logprob: -7.51487922668457
    7. ' i' → logprob: -7.76487922668457
    8. 'mask' → logprob: -7.76487922668457
    9. ' mask' → logprob: -9.01487922668457
    10. '_mask' → logprob: -9.63987922668457

Token 407: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5614822506904602
    2. '               ' → logprob: -1.6864821910858154
    3. ',' → logprob: -1.9364821910858154
    4. '):' → logprob: -2.6864821910858154
    5. ')' → logprob: -4.4364824295043945
    6. '                               ' → logprob: -4.8114824295043945
    7. ' :' → logprob: -6.5614824295043945
    8. '                ' → logprob: -6.5614824295043945
    9. '<|end|>' → logprob: -6.8114824295043945
    10. '                           ' → logprob: -6.9364824295043945

Token 408: 'pos' (ID: 1103)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6117582321166992
    2. ')' → logprob: -1.1117582321166992
    3. ' ),' → logprob: -2.611758232116699
    4. ' )' → logprob: -3.486758232116699
    5. '):' → logprob: -4.361758232116699
    6. '               ' → logprob: -5.736758232116699
    7. 'i' → logprob: -6.111758232116699
    8. ' i' → logprob: -6.236758232116699
    9. '):
' → logprob: -6.986758232116699
    10. '                ' → logprob: -7.736758232116699

Token 409: '-th' (ID: 14928)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7634719610214233
    2. '+' → logprob: -1.2634719610214233
    3. ')' → logprob: -2.013472080230713
    4. '               ' → logprob: -3.263472080230713
    5. ' +' → logprob: -3.638472080230713
    6. '):
' → logprob: -3.763472080230713
    7. '):' → logprob: -4.763472080230713
    8. ' ),' → logprob: -5.263472080230713
    9. '=' → logprob: -5.513472080230713
    10. '),
' → logprob: -6.013472080230713

Token 410: '),
' (ID: 2313)
  Prédit: ' ),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ),' → logprob: -0.8188818097114563
    2. ' )' → logprob: -1.1938817501068115
    3. ' token' → logprob: -2.5688817501068115
    4. ')' → logprob: -2.6938817501068115
    5. '),' → logprob: -3.0688817501068115
    6. ' food' → logprob: -3.1938817501068115
    7. 'token' → logprob: -5.193881988525391
    8. 'food' → logprob: -5.693881988525391
    9. '_token' → logprob: -5.818881988525391
    10. ' ' → logprob: -6.068881988525391

Token 411: '               ' (ID: 506)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.3525092601776123
    2. ' ' → logprob: -2.4775092601776123
    3. '               ' → logprob: -2.8525092601776123
    4. ' the' → logprob: -2.9775092601776123
    5. 'the' → logprob: -4.227509498596191
    6. '<|end|>' → logprob: -4.352509498596191
    7. ')' → logprob: -4.602509498596191
    8. ' there' → logprob: -4.977509498596191
    9. ' ' → logprob: -5.102509498596191
    10. ''' → logprob: -5.102509498596191

Token 412: ' #' (ID: 1069)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.4202377498149872
    2. '               ' → logprob: -1.4202377796173096
    3. '                   ' → logprob: -3.4202377796173096
    4. ' ' → logprob: -4.5452375411987305
    5. ' the' → logprob: -4.6702375411987305
    6. ' ' → logprob: -4.7952375411987305
    7. ')' → logprob: -4.9202375411987305
    8. 'the' → logprob: -5.5452375411987305
    9. ' there' → logprob: -6.1702375411987305
    10. '                 ' → logprob: -6.1702375411987305

Token 413: ' no' (ID: 860)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.8040848970413208
    2. '               ' → logprob: -1.3040848970413208
    3. ' continue' → logprob: -2.6790847778320312
    4. '#' → logprob: -3.3040847778320312
    5. ' ' → logprob: -3.3040847778320312
    6. ' #' → logprob: -3.8040847778320312
    7. '<|end|>' → logprob: -3.9290847778320312
    8. ' if' → logprob: -4.304084777832031
    9. ')' → logprob: -4.429084777832031
    10. 'continue' → logprob: -4.679084777832031

Token 414: ' food' (ID: 4232)
  Prédit: ' food'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' food' → logprob: -0.864829957485199
    2. ')' → logprob: -2.3648300170898438
    3. ' ' → logprob: -2.3648300170898438
    4. ' need' → logprob: -2.6148300170898438
    5. '_' → logprob: -2.8648300170898438
    6. ' token' → logprob: -3.6148300170898438
    7. 'food' → logprob: -3.7398300170898438
    8. ' additional' → logprob: -3.9898300170898438
    9. ' tokens' → logprob: -3.9898300170898438
    10. 'w' → logprob: -4.114830017089844

Token 415: ' is' (ID: 382)
  Prédit: ' above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' above' → logprob: -0.3769429326057434
    2. ' is' → logprob: -2.3769428730010986
    3. '<|end|>' → logprob: -2.5019428730010986
    4. 'above' → logprob: -3.2519428730010986
    5. '_' → logprob: -3.3769428730010986
    6. '<|end|>' → logprob: -4.251943111419678
    7. 's' → logprob: -4.751943111419678
    8. ' on' → logprob: -4.751943111419678
    9. ')' → logprob: -4.876943111419678
    10. ' ' → logprob: -5.001943111419678

Token 416: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.09100806713104248
    2. ' above' → logprob: -2.591008186340332
    3. 'placed' → logprob: -4.841008186340332
    4. ' placed' → logprob: -5.716008186340332
    5. '```' → logprob: -8.591008186340332
    6. ' ' → logprob: -8.716008186340332
    7. 'added' → logprob: -9.091008186340332
    8. 'actually' → logprob: -9.341008186340332
    9. 'already' → logprob: -9.716008186340332
    10. 'below' → logprob: -10.216008186340332

Token 417: ' it' (ID: 480)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43615034222602844
    2. ':' → logprob: -2.061150312423706
    3. '.' → logprob: -2.811150312423706
    4. '               ' → logprob: -3.061150312423706
    5. ' ' → logprob: -3.311150312423706
    6. ',' → logprob: -3.686150312423706
    7. '_' → logprob: -4.686150550842285
    8. '):' → logprob: -4.811150550842285
    9. ' )' → logprob: -5.061150550842285
    10. '<|end|>' → logprob: -5.186150550842285

Token 418: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022207651287317276
    2. ' :' → logprob: -5.022207736968994
    3. ')' → logprob: -5.522207736968994
    4. '               ' → logprob: -5.647207736968994
    5. ' ' → logprob: -6.147207736968994
    6. ',' → logprob: -6.522207736968994
    7. '):' → logprob: -6.522207736968994
    8. '.' → logprob: -7.022207736968994
    9. '                               ' → logprob: -8.147207260131836
    10. ':
' → logprob: -8.147207260131836

Token 419: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.7976951003074646
    2. '               ' → logprob: -1.1726951599121094
    3. '                ' → logprob: -2.5476951599121094
    4. ' ' → logprob: -2.6726951599121094
    5. '                               ' → logprob: -4.422695159912109
    6. ' and' → logprob: -4.422695159912109
    7. ' continue' → logprob: -4.547695159912109
    8. ' continuing' → logprob: -4.922695159912109
    9. ' but' → logprob: -5.047695159912109
    10. ')' → logprob: -5.047695159912109

Token 420: ' s' (ID: 265)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8379705548286438
    2. '                ' → logprob: -1.212970495223999
    3. ' ' → logprob: -2.712970495223999
    4. '               ' → logprob: -2.837970495223999
    5. ' dp' → logprob: -2.837970495223999
    6. 'continue' → logprob: -3.212970495223999
    7. 'dp' → logprob: -4.337970733642578
    8. ' pass' → logprob: -5.212970733642578
    9. ' if' → logprob: -5.712970733642578
    10. ' #' → logprob: -6.087970733642578

Token 421: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.677400529384613
    2. '_i' → logprob: -1.1774005889892578
    3. '[' → logprob: -1.9274005889892578
    4. '_' → logprob: -4.052400588989258
    5. ' _' → logprob: -4.927400588989258
    6. '[_' → logprob: -5.302400588989258
    7. '               ' → logprob: -5.802400588989258
    8. '[pos' → logprob: -6.677400588989258
    9. ')' → logprob: -6.927400588989258
    10. ' [' → logprob: -7.677400588989258

Token 422: ' is' (ID: 382)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.049456484615802765
    2. '>=' → logprob: -3.4244565963745117
    3. ')' → logprob: -5.924456596374512
    4. ')>=' → logprob: -5.924456596374512
    5. '<|end|>' → logprob: -6.049456596374512
    6. ' >' → logprob: -6.174456596374512
    7. ' ' → logprob: -6.674456596374512
    8. '[' → logprob: -6.799456596374512
    9. '">' → logprob: -7.299456596374512
    10. '>' → logprob: -7.549456596374512

Token 423: ' always' (ID: 3324)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.1048252582550049
    2. '               ' → logprob: -2.104825258255005
    3. ' >=' → logprob: -2.104825258255005
    4. ' ' → logprob: -2.479825258255005
    5. '                   ' → logprob: -2.729825258255005
    6. '                ' → logprob: -2.979825258255005
    7. '            ' → logprob: -3.354825258255005
    8. '                    ' → logprob: -3.479825258255005
    9. 'inf' → logprob: -3.604825258255005
    10. 's' → logprob: -4.479825019836426

Token 424: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.0452746152877808
    2. ' ' → logprob: -1.2952746152877808
    3. '>=' → logprob: -2.1702747344970703
    4. '               ' → logprob: -2.7952747344970703
    5. '1' → logprob: -3.0452747344970703
    6. 's' → logprob: -3.4202747344970703
    7. ''' → logprob: -3.9202747344970703
    8. '                   ' → logprob: -4.29527473449707
    9. ' sufficient' → logprob: -4.42027473449707
    10. '                ' → logprob: -4.67027473449707

Token 425: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14079637825489044
    2. ' ' → logprob: -2.390796422958374
    3. ' total' → logprob: -3.640796422958374
    4. 'total' → logprob: -4.765796184539795
    5. '1' → logprob: -5.890796184539795
    6. '               ' → logprob: -7.390796184539795
    7. ' the' → logprob: -8.390796661376953
    8. ' ' → logprob: -8.640796661376953
    9. 'sum' → logprob: -9.265796661376953
    10. ' sum' → logprob: -9.453296661376953

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02593156509101391
    2. ' ' → logprob: -4.400931358337402
    3. 'total' → logprob: -4.525931358337402
    4. ' total' → logprob: -6.025931358337402
    5. '1' → logprob: -10.900931358337402
    6. '   ' → logprob: -11.150931358337402
    7. '               ' → logprob: -11.213431358337402
    8. ' ' → logprob: -12.650931358337402
    9. '                   ' → logprob: -12.713431358337402
    10. '           ' → logprob: -12.900931358337402

Token 427: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09529433399438858
    2. ':' → logprob: -2.720294237136841
    3. ')' → logprob: -5.22029447555542
    4. '                ' → logprob: -5.47029447555542
    5. '):' → logprob: -5.97029447555542
    6. ' :' → logprob: -6.22029447555542
    7. '                
' → logprob: -6.34529447555542
    8. '                   ' → logprob: -6.72029447555542
    9. '                               ' → logprob: -6.84529447555542
    10. ':
' → logprob: -6.97029447555542

Token 428: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2898752689361572
    2. ' i' → logprob: -1.4148752689361572
    3. 'i' → logprob: -1.9148752689361572
    4. ' this' → logprob: -2.4148752689361572
    5. ' next' → logprob: -2.4148752689361572
    6. 'the' → logprob: -2.7898752689361572
    7. ' that' → logprob: -3.9148752689361572
    8. ' all' → logprob: -3.9148752689361572
    9. 'next' → logprob: -4.414875030517578
    10. ' adding' → logprob: -4.664875030517578

Token 429: ' top' (ID: 2344)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.13474047183990479
    2. 'next' → logprob: -2.1347403526306152
    3. 'continue' → logprob: -6.509740352630615
    4. '               ' → logprob: -6.884740352630615
    5. 'for' → logprob: -7.009740352630615
    6. ' new' → logprob: -7.134740352630615
    7. ' for' → logprob: -7.634740352630615
    8. ' i' → logprob: -7.884740352630615
    9. 'i' → logprob: -7.884740352630615
    10. ' continue' → logprob: -8.134740829467773

Token 430: ' food' (ID: 4232)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35727936029434204
    2. ':' → logprob: -1.7322793006896973
    3. ')' → logprob: -3.4822793006896973
    4. ' ' → logprob: -3.7322793006896973
    5. '                ' → logprob: -4.607279300689697
    6. '                
' → logprob: -4.607279300689697
    7. '<|end|>' → logprob: -4.732279300689697
    8. '.' → logprob: -4.982279300689697
    9. ' 
' → logprob: -5.357279300689697
    10. '                               ' → logprob: -5.607279300689697

Token 431: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17063216865062714
    2. ':' → logprob: -2.1706321239471436
    3. ' ' → logprob: -4.795632362365723
    4. '                ' → logprob: -5.170632362365723
    5. '                
' → logprob: -5.170632362365723
    6. ')' → logprob: -5.295632362365723
    7. ':
' → logprob: -5.920632362365723
    8. ' :' → logprob: -6.045632362365723
    9. '.' → logprob: -6.420632362365723
    10. '                               ' → logprob: -6.545632362365723

Token 432: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008439874276518822
    2. '                
' → logprob: -5.508440017700195
    3. '                ' → logprob: -6.258440017700195
    4. '                   ' → logprob: -7.758440017700195
    5. '                               ' → logprob: -7.758440017700195
    6. ' 
' → logprob: -8.258440017700195
    7. ')' → logprob: -8.633440017700195
    8. '                 
' → logprob: -8.633440017700195
    9. ' ' → logprob: -9.383440017700195
    10. ' ' → logprob: -9.758440017700195

Token 433: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011799386702477932
    2. '                ' → logprob: -5.386799335479736
    3. '                
' → logprob: -6.011799335479736
    4. ' 
' → logprob: -6.511799335479736
    5. ' ' → logprob: -7.261799335479736
    6. ' ' → logprob: -7.386799335479736
    7. ' if' → logprob: -7.886799335479736
    8. '                 
' → logprob: -8.011799812316895
    9. '                   ' → logprob: -8.261799812316895
    10. ' continue' → logprob: -9.011799812316895

Token 434: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001767170149832964
    2. '                ' → logprob: -7.001767158508301
    3. '                
' → logprob: -8.3767671585083
    4. '                   ' → logprob: -8.5017671585083
    5. ' continue' → logprob: -8.7517671585083
    6. ' ' → logprob: -10.3767671585083
    7. ' ' → logprob: -10.3767671585083
    8. '              ' → logprob: -10.8767671585083
    9. '```' → logprob: -10.8767671585083
    10. 'continue' → logprob: -11.0017671585083

Token 435: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5435495972633362
    2. ' if' → logprob: -1.2935495376586914
    3. '               ' → logprob: -2.0435495376586914
    4. '#' (adapté à ' #') → logprob: -5.418549537658691
    5. 'continue' → logprob: -5.418549537658691
    6. 'next' → logprob: -6.293549537658691
    7. ' continue' → logprob: -6.918549537658691
    8. ' #' → logprob: -7.043549537658691
    9. ' next' → logprob: -7.043549537658691
    10. 's' → logprob: -7.168549537658691

Token 436: ' But' (ID: 3072)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.492270827293396
    2. ' if' → logprob: -1.867270827293396
    3. '#' → logprob: -2.1172709465026855
    4. '               ' → logprob: -2.4922709465026855
    5. ' #' → logprob: -4.7422709465026855
    6. 'dp' → logprob: -4.7422709465026855
    7. 'continue' → logprob: -5.4922709465026855
    8. 's' → logprob: -5.9922709465026855
    9. 'next' → logprob: -6.1172709465026855
    10. '```' → logprob: -7.1172709465026855

Token 437: ' problem' (ID: 4792)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5980536937713623
    2. ' dp' → logprob: -2.3480536937713623
    3. ' i' → logprob: -2.4730536937713623
    4. ' not' → logprob: -2.7230536937713623
    5. '               ' → logprob: -3.2230536937713623
    6. ' total' → logprob: -3.5980536937713623
    7. 'dp' → logprob: -3.5980536937713623
    8. ' the' → logprob: -4.223053932189941
    9. ' if' → logprob: -4.223053932189941
    10. 's' → logprob: -4.598053932189941

Token 438: ' is' (ID: 382)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.8568549752235413
    2. ':' → logprob: -1.3568549156188965
    3. '               ' → logprob: -2.1068549156188965
    4. '<|end|>' → logprob: -3.3568549156188965
    5. ' ' → logprob: -3.6068549156188965
    6. '           ' → logprob: -4.2318549156188965
    7. ' is' → logprob: -4.4818549156188965
    8. ' if' → logprob: -4.6068549156188965
    9. '#' → logprob: -4.6068549156188965
    10. '<|end|>' → logprob: -4.6068549156188965

Token 439: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1172776222229004
    2. ' ' → logprob: -1.8672776222229004
    3. '                ' → logprob: -1.9922776222229004
    4. ' the' → logprob: -2.3672776222229004
    5. ' not' → logprob: -2.4922776222229004
    6. ' that' → logprob: -2.9922776222229004
    7. '               ' → logprob: -3.3672776222229004
    8. ' s' → logprob: -4.4922776222229
    9. 'the' → logprob: -4.4922776222229
    10. ',' → logprob: -4.4922776222229

Token 440: ' order' (ID: 2569)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5810340046882629
    2. ' previous' → logprob: -1.9560339450836182
    3. ' code' → logprob: -3.331033945083618
    4. ' above' → logprob: -3.581033945083618
    5. ' current' → logprob: -3.581033945083618
    6. 'next' → logprob: -3.706033945083618
    7. ' stability' → logprob: -4.081034183502197
    8. ' if' → logprob: -4.331034183502197
    9. '#' → logprob: -4.581034183502197
    10. ' last' → logprob: -4.706034183502197

Token 441: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33277344703674316
    2. '               ' → logprob: -2.707773447036743
    3. ' :' → logprob: -2.707773447036743
    4. '<|end|>' → logprob: -2.957773447036743
    5. '):' → logprob: -4.082773208618164
    6. '<|end|>' → logprob: -4.082773208618164
    7. '[i' → logprob: -4.707773208618164
    8. '                ' → logprob: -4.832773208618164
    9. '                               ' → logprob: -4.832773208618164
    10. ')' → logprob: -5.082773208618164

Token 442: ' bottom' (ID: 8725)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.1167042255401611
    2. ' not' → logprob: -1.7417042255401611
    3. ' incomplete' → logprob: -2.616704225540161
    4. 'actually' → logprob: -2.991704225540161
    5. 'from' → logprob: -3.116704225540161
    6. ' reversed' → logprob: -3.491704225540161
    7. 'bottom' → logprob: -3.491704225540161
    8. 'in' → logprob: -3.741704225540161
    9. ' actually' → logprob: -4.241703987121582
    10. 'stack' → logprob: -4.241703987121582

Token 443: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4329625368118286
    2. '):' → logprob: -2.057962417602539
    3. '+' → logprob: -2.182962417602539
    4. ' +' → logprob: -2.432962417602539
    5. ')' → logprob: -2.432962417602539
    6. ':' → logprob: -2.557962417602539
    7. '           ' → logprob: -2.807962417602539
    8. '_' → logprob: -3.307962417602539
    9. '>>' → logprob: -3.807962417602539
    10. ',' → logprob: -4.432962417602539

Token 444: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.03808647021651268
    2. ' top' → logprob: -3.288086414337158
    3. '_top' → logprob: -10.413086891174316
    4. 'up' → logprob: -11.788086891174316
    5. 'bottom' → logprob: -12.163086891174316
    6. '	top' → logprob: -14.288086891174316
    7. ' up' → logprob: -14.663086891174316
    8. '-top' → logprob: -15.288086891174316
    9. ' ' → logprob: -15.413086891174316
    10. '1' → logprob: -15.663086891174316

Token 445: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1578449308872223
    2. '               ' → logprob: -2.4078450202941895
    3. ' :' → logprob: -4.1578450202941895
    4. '):' → logprob: -4.5328450202941895
    5. ')' → logprob: -4.9078450202941895
    6. ':
' → logprob: -5.5328450202941895
    7. '<|end|>' → logprob: -5.6578450202941895
    8. '                               ' → logprob: -5.7828450202941895
    9. '                ' → logprob: -6.1578450202941895
    10. ',' → logprob: -6.5328450202941895

Token 446: ' f' (ID: 285)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6988903284072876
    2. '                ' → logprob: -0.8238903284072876
    3. ' ' → logprob: -3.823890209197998
    4. ' ' → logprob: -4.573890209197998
    5. ' if' → logprob: -4.948890209197998
    6. '                
' → logprob: -5.198890209197998
    7. '                 
' → logprob: -5.823890209197998
    8. '```' → logprob: -6.073890209197998
    9. '                               ' → logprob: -6.323890209197998
    10. '                   ' → logprob: -6.323890209197998

Token 447: '1' (ID: 16)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.3479533791542053
    2. 'oods' → logprob: -1.4729533195495605
    3. 'ood' → logprob: -3.9729533195495605
    4. 'rom' → logprob: -4.0979533195495605
    5. 'i' → logprob: -5.3479533195495605
    6. 'orm' → logprob: -5.4729533195495605
    7. 'irst' → logprob: -5.4729533195495605
    8. 'o' → logprob: -6.0979533195495605
    9. '[i' → logprob: -6.0979533195495605
    10. '[' → logprob: -6.2229533195495605

Token 448: ',...' (ID: 35229)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6207443475723267
    2. ',' → logprob: -1.6207443475723267
    3. '<|end|>' → logprob: -1.6207443475723267
    4. '[' → logprob: -4.495744228363037
    5. '   ' → logprob: -4.870744228363037
    6. '),' → logprob: -4.995744228363037
    7. 's' → logprob: -5.620744228363037
    8. ',
' → logprob: -5.620744228363037
    9. 'irst' → logprob: -5.870744228363037
    10. ' ' → logprob: -5.995744228363037

Token 449: 'fn' (ID: 13682)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36815986037254333
    2. ',' → logprob: -2.118159770965576
    3. '<|end|>' → logprob: -2.493159770965576
    4. '...' → logprob: -2.993159770965576
    5. '[' → logprob: -4.243159770965576
    6. '[i' → logprob: -4.993159770965576
    7. '<|end|>' → logprob: -4.993159770965576
    8. '),' → logprob: -5.368159770965576
    9. ']' → logprob: -6.118159770965576
    10. ' )' → logprob: -6.118159770965576

Token 450: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8639289736747742
    2. '<|end|>' → logprob: -1.613929033279419
    3. ')' → logprob: -1.863929033279419
    4. ':' → logprob: -2.988929033279419
    5. '<|end|>' → logprob: -3.113929033279419
    6. ' ' → logprob: -3.488929033279419
    7. '):' → logprob: -3.488929033279419
    8. ',' → logprob: -3.738929033279419
    9. '                               ' → logprob: -4.73892879486084
    10. '                ' → logprob: -4.73892879486084

Token 451: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01747436821460724
    2. '<|end|>' → logprob: -5.392474174499512
    3. '                ' → logprob: -5.642474174499512
    4. ')' → logprob: -6.142474174499512
    5. '                
' → logprob: -6.267474174499512
    6. ',' → logprob: -7.267474174499512
    7. '                               ' → logprob: -7.267474174499512
    8. '<|end|>' → logprob: -7.392474174499512
    9. ' if' → logprob: -8.017474174499512
    10. ' ' → logprob: -8.017474174499512

Token 452: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01673750951886177
    2. '                
' → logprob: -5.766737461090088
    3. ' if' → logprob: -5.766737461090088
    4. ',' → logprob: -6.141737461090088
    5. ')' → logprob: -6.266737461090088
    6. '<|end|>' → logprob: -7.016737461090088
    7. '                ' → logprob: -7.141737461090088
    8. ' and' → logprob: -7.391737461090088
    9. ' 
' → logprob: -7.516737461090088
    10. '<|end|>' → logprob: -7.641737461090088

Token 453: ' The' (ID: 623)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05047231912612915
    2. '                ' → logprob: -3.6754722595214844
    3. ' if' → logprob: -4.675472259521484
    4. '<|end|>' → logprob: -5.425472259521484
    5. ' ' → logprob: -5.800472259521484
    6. '                
' → logprob: -6.675472259521484
    7. ',' → logprob: -7.425472259521484
    8. ' #' → logprob: -7.800472259521484
    9. ')' → logprob: -7.925472259521484
    10. ' continue' → logprob: -7.925472259521484

Token 454: ' dp' (ID: 21546)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5732371211051941
    2. ' next' → logprob: -2.073237180709839
    3. ' ' → logprob: -2.448237180709839
    4. '               ' → logprob: -2.948237180709839
    5. ')' → logprob: -3.323237180709839
    6. 'if' → logprob: -3.823237180709839
    7. ' #' → logprob: -3.948237180709839
    8. '                ' → logprob: -4.07323694229126
    9. ' for' → logprob: -4.57323694229126
    10. '_' → logprob: -4.69823694229126

Token 455: ' builds' (ID: 40340)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01898590289056301
    2. '               ' → logprob: -5.518985748291016
    3. 'mask' → logprob: -5.768985748291016
    4. '[state' → logprob: -6.643985748291016
    5. '[i' → logprob: -6.768985748291016
    6. '[next' → logprob: -6.768985748291016
    7. ')' → logprob: -6.893985748291016
    8. ' mask' → logprob: -7.018985748291016
    9. '[(' → logprob: -7.268985748291016
    10. '_mask' → logprob: -7.268985748291016

Token 456: ' bottom' (ID: 8725)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.599648654460907
    2. 'from' → logprob: -2.4746487140655518
    3. ' from' → logprob: -2.9746487140655518
    4. '                ' → logprob: -3.0996487140655518
    5. ')' → logprob: -3.2246487140655518
    6. ' on' → logprob: -3.4746487140655518
    7. ' up' → logprob: -3.8496487140655518
    8. ' the' → logprob: -3.8496487140655518
    9. ' next' → logprob: -4.349648475646973
    10. 'the' → logprob: -4.849648475646973

Token 457: ' to' (ID: 316)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.7356773614883423
    2. ' up' → logprob: -1.9856773614883423
    3. '               ' → logprob: -2.2356772422790527
    4. '+' → logprob: -2.6106772422790527
    5. '>>' → logprob: -3.1106772422790527
    6. 'to' → logprob: -3.6106772422790527
    7. '           ' → logprob: -3.9856772422790527
    8. '<<' → logprob: -4.235677242279053
    9. ')' → logprob: -4.360677242279053
    10. ' to' → logprob: -4.735677242279053

Token 458: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0008371464791707695
    2. 'bottom' → logprob: -7.375837326049805
    3. ' top' → logprob: -8.500837326049805
    4. 'up' → logprob: -12.000837326049805
    5. 'end' → logprob: -15.250837326049805
    6. '```' → logprob: -15.750837326049805
    7. '_top' → logprob: -16.125837326049805
    8. '-top' → logprob: -16.250837326049805
    9. ' bottom' → logprob: -16.250837326049805
    10. '1' → logprob: -16.250837326049805

Token 459: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45845693349838257
    2. ':' → logprob: -1.2084569931030273
    3. '):' → logprob: -3.7084569931030273
    4. ')' → logprob: -4.583456993103027
    5. '                ' → logprob: -5.083456993103027
    6. ',' → logprob: -5.333456993103027
    7. ' :' → logprob: -5.583456993103027
    8. '<|end|>' → logprob: -5.708456993103027
    9. '                               ' → logprob: -5.833456993103027
    10. ':
' → logprob: -5.833456993103027

Token 460: ' order' (ID: 2569)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21691562235355377
    2. '                ' → logprob: -1.8419156074523926
    3. '                
' → logprob: -5.091915607452393
    4. ' ' → logprob: -5.216915607452393
    5. ' ' → logprob: -5.591915607452393
    6. ')' → logprob: -5.841915607452393
    7. ' 
' → logprob: -5.841915607452393
    8. '<|end|>' → logprob: -6.216915607452393
    9. '                   ' → logprob: -6.341915607452393
    10. ' )' → logprob: -6.591915607452393

Token 461: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6398050785064697
    2. '[i' → logprob: -1.0148050785064697
    3. ' =' → logprob: -3.8898050785064697
    4. ')' → logprob: -4.014804840087891
    5. ':' → logprob: -4.014804840087891
    6. ' +' → logprob: -4.764804840087891
    7. '[' → logprob: -5.014804840087891
    8. '):' → logprob: -5.139804840087891
    9. '                   ' → logprob: -5.389804840087891
    10. '                ' → logprob: -5.764804840087891

Token 462: ' bottom' (ID: 8725)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -1.0063765048980713
    2. '[]' → logprob: -1.6313765048980713
    3. ' []' → logprob: -2.2563765048980713
    4. '[' → logprob: -2.3813765048980713
    5. ' [' → logprob: -2.3813765048980713
    6. ' a' → logprob: -3.6313765048980713
    7. ' ['' → logprob: -3.6313765048980713
    8. ' bottom' → logprob: -4.131376266479492
    9. ' the' → logprob: -4.631376266479492
    10. 'order' → logprob: -5.006376266479492

Token 463: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0685599148273468
    2. ' +' → logprob: -3.8185598850250244
    3. '+' → logprob: -4.3185601234436035
    4. '[i' → logprob: -4.9435601234436035
    5. ')' → logprob: -5.5685601234436035
    6. '```' → logprob: -5.5685601234436035
    7. '           ' → logprob: -5.8185601234436035
    8. '):' → logprob: -6.0685601234436035
    9. '):
' → logprob: -6.1935601234436035
    10. '                ' → logprob: -6.4435601234436035

Token 464: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.00014740281039848924
    2. ' top' → logprob: -8.875147819519043
    3. 'up' → logprob: -13.375147819519043
    4. 'bottom' → logprob: -13.875147819519043
    5. ' ' → logprob: -14.000147819519043
    6. '[top' → logprob: -14.125147819519043
    7. 't' → logprob: -14.500147819519043
    8. 'token' → logprob: -14.625147819519043
    9. 'end' → logprob: -15.250147819519043
    10. '1' → logprob: -15.375147819519043

Token 465: ' stack' (ID: 10825)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15144753456115723
    2. ':' → logprob: -2.4014475345611572
    3. '<|end|>' → logprob: -4.526447296142578
    4. ',' → logprob: -5.026447296142578
    5. ')' → logprob: -5.026447296142578
    6. '):' → logprob: -5.151447296142578
    7. '                ' → logprob: -5.651447296142578
    8. '                               ' → logprob: -5.901447296142578
    9. ':
' → logprob: -6.276447296142578
    10. '<|end|>' → logprob: -6.526447296142578

Token 466: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.043402884155511856
    2. ':' → logprob: -4.418402671813965
    3. '                ' → logprob: -4.543402671813965
    4. '<|end|>' → logprob: -5.793402671813965
    5. '                
' → logprob: -6.168402671813965
    6. ')' → logprob: -6.168402671813965
    7. ',' → logprob: -6.668402671813965
    8. '                               ' → logprob: -6.668402671813965
    9. '):' → logprob: -6.793402671813965
    10. ' 
' → logprob: -6.793402671813965

Token 467: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008902549743652344
    2. '                ' → logprob: -6.008902549743652
    3. '                
' → logprob: -6.258902549743652
    4. '<|end|>' → logprob: -6.508902549743652
    5. ')' → logprob: -7.383902549743652
    6. ' 
' → logprob: -7.633902549743652
    7. ' ' → logprob: -7.883902549743652
    8. ' ' → logprob: -7.883902549743652
    9. ' )' → logprob: -8.008902549743652
    10. ',' → logprob: -9.383902549743652

Token 468: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003698773914948106
    2. '                
' → logprob: -6.753698825836182
    3. '                ' → logprob: -7.878698825836182
    4. ')' → logprob: -7.878698825836182
    5. '<|end|>' → logprob: -7.878698825836182
    6. ' if' → logprob: -8.128698348999023
    7. ' 
' → logprob: -8.753698348999023
    8. ',' → logprob: -9.003698348999023
    9. ' ' → logprob: -9.253698348999023
    10. ' ' → logprob: -9.253698348999023

Token 469: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04381851106882095
    2. ' if' → logprob: -4.043818473815918
    3. '                ' → logprob: -4.418818473815918
    4. '                
' → logprob: -5.418818473815918
    5. '```' → logprob: -5.668818473815918
    6. 'if' → logprob: -6.918818473815918
    7. ' 
' → logprob: -6.918818473815918
    8. ' ' → logprob: -7.043818473815918
    9. ' ' → logprob: -7.793818473815918
    10. '                   ' → logprob: -7.918818473815918

Token 470: ' when' (ID: 1261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4567965865135193
    2. '               ' → logprob: -1.706796646118164
    3. ' the' → logprob: -2.706796646118164
    4. ' for' → logprob: -3.206796646118164
    5. ' continue' → logprob: -4.081796646118164
    6. 'if' → logprob: -4.206796646118164
    7. '                ' → logprob: -4.706796646118164
    8. 'for' → logprob: -4.956796646118164
    9. ' we' → logprob: -4.956796646118164
    10. '```' → logprob: -5.206796646118164

Token 471: ' adding' (ID: 12673)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44345271587371826
    2. ' i' → logprob: -1.5684527158737183
    3. ' adding' → logprob: -2.693452835083008
    4. 'adding' → logprob: -3.068452835083008
    5. '               ' → logprob: -4.693452835083008
    6. 'placing' → logprob: -4.693452835083008
    7. ' we' → logprob: -5.568452835083008
    8. 'we' → logprob: -5.943452835083008
    9. ' you' → logprob: -6.693452835083008
    10. 'you' → logprob: -6.943452835083008

Token 472: ' next' (ID: 2613)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2304612547159195
    2. 'i' → logprob: -1.7304612398147583
    3. ' ' → logprob: -4.230461120605469
    4. '_' → logprob: -5.480461120605469
    5. '_i' → logprob: -5.730461120605469
    6. ' a' → logprob: -5.855461120605469
    7. ' the' → logprob: -7.355461120605469
    8. '	i' → logprob: -7.855461120605469
    9. '(i' → logprob: -7.980461120605469
    10. ')' → logprob: -8.105461120605469

Token 473: ' food' (ID: 4232)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5689237117767334
    2. '_' → logprob: -1.8189237117767334
    3. '_token' → logprob: -2.4439237117767334
    4. ' token' → logprob: -2.8189237117767334
    5. '_food' → logprob: -3.0689237117767334
    6. '_i' → logprob: -4.3189239501953125
    7. ' i' → logprob: -4.5689239501953125
    8. ' food' → logprob: -4.8189239501953125
    9. '```' → logprob: -4.8189239501953125
    10. ')' → logprob: -4.8189239501953125

Token 474: ' i' (ID: 575)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.4400396347045898
    2. ',' → logprob: -1.5650396347045898
    3. '[i' → logprob: -2.06503963470459
    4. '[' → logprob: -2.31503963470459
    5. ' (' → logprob: -2.44003963470459
    6. ' at' → logprob: -3.19003963470459
    7. ')' → logprob: -3.81503963470459
    8. ' ,' → logprob: -4.06503963470459
    9. '               ' → logprob: -4.19003963470459
    10. ' [' → logprob: -4.44003963470459

Token 475: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5997344851493835
    2. '):
' → logprob: -1.7247345447540283
    3. ':' → logprob: -2.2247345447540283
    4. '):' → logprob: -3.2247345447540283
    5. ' at' → logprob: -3.4747345447540283
    6. ':
' → logprob: -3.5997345447540283
    7. '),' → logprob: -4.224734306335449
    8. '               ' → logprob: -4.349734306335449
    9. ' ,' → logprob: -4.724734306335449
    10. ' =' → logprob: -5.349734306335449

Token 476: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.12809155881404877
    2. 'top' → logprob: -2.12809157371521
    3. '_top' → logprob: -7.128091335296631
    4. ' the' → logprob: -8.753091812133789
    5. 'the' → logprob: -9.128091812133789
    6. ' ' → logprob: -10.253091812133789
    7. '	top' → logprob: -11.253091812133789
    8. '_' → logprob: -11.628091812133789
    9. '_mask' → logprob: -11.753091812133789
    10. 'mask' → logprob: -11.878091812133789

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3774712383747101
    2. '               ' → logprob: -1.6274712085723877
    3. ':' → logprob: -2.5024712085723877
    4. '):' → logprob: -3.7524712085723877
    5. '),' → logprob: -5.877471446990967
    6. '):
' → logprob: -6.002471446990967
    7. ' (' → logprob: -6.877471446990967
    8. ' ,' → logprob: -6.877471446990967
    9. ':
' → logprob: -7.002471446990967
    10. ')' → logprob: -7.377471446990967

Token 478: ' we' (ID: 581)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.17654769122600555
    2. ' ' → logprob: -2.3015477657318115
    3. '               ' → logprob: -4.301547527313232
    4. ' ' → logprob: -4.676547527313232
    5. '                 
' → logprob: -4.926547527313232
    6. ')' → logprob: -5.426547527313232
    7. '                                ' → logprob: -5.926547527313232
    8. '                 ' → logprob: -6.051547527313232
    9. ' continue' → logprob: -6.176547527313232
    10. ' 
' → logprob: -6.176547527313232

Token 479: ' check' (ID: 2371)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.270474910736084
    2. '               ' → logprob: -1.645474910736084
    3. ' add' → logprob: -1.770474910736084
    4. ' need' → logprob: -1.770474910736084
    5. ' have' → logprob: -3.395474910736084
    6. ' always' → logprob: -3.520474910736084
    7. ' check' → logprob: -3.895474910736084
    8. ' must' → logprob: -4.270474910736084
    9. ' know' → logprob: -4.270474910736084
    10. ' can' → logprob: -4.520474910736084

Token 480: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7122316360473633
    2. 'if' → logprob: -1.2122316360473633
    3. '               ' → logprob: -1.7122316360473633
    4. 's' → logprob: -4.712231636047363
    5. ' s' → logprob: -4.962231636047363
    6. '```' → logprob: -5.212231636047363
    7. '                   ' → logprob: -5.712231636047363
    8. '                ' → logprob: -6.462231636047363
    9. '(s' → logprob: -6.837231636047363
    10. '                       ' → logprob: -7.962231636047363

Token 481: ' the' (ID: 290)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foods' → logprob: -0.0020242815371602774
    2. '               ' → logprob: -7.377024173736572
    3. ' foods' → logprob: -7.627024173736572
    4. 's' → logprob: -7.877024173736572
    5. '                   ' → logprob: -8.62702465057373
    6. '           ' → logprob: -9.62702465057373
    7. 'pos' → logprob: -9.75202465057373
    8. '```' → logprob: -10.25202465057373
    9. '                       ' → logprob: -10.37702465057373
    10. 'food' → logprob: -10.37702465057373

Token 482: ' food' (ID: 4232)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43558672070503235
    2. ' s' → logprob: -1.43558669090271
    3. 'dp' → logprob: -3.18558669090271
    4. 'i' → logprob: -4.185586929321289
    5. '_s' → logprob: -4.185586929321289
    6. 'foods' → logprob: -4.685586929321289
    7. '_i' → logprob: -5.185586929321289
    8. ' dp' → logprob: -5.435586929321289
    9. '```' → logprob: -5.935586929321289
    10. ' i' → logprob: -6.060586929321289

Token 483: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.40027129650115967
    2. ' i' → logprob: -2.025271415710449
    3. '_i' → logprob: -3.025271415710449
    4. ' is' → logprob: -3.275271415710449
    5. ' [' → logprob: -4.025271415710449
    6. ')' → logprob: -4.150271415710449
    7. '[' → logprob: -4.150271415710449
    8. '               ' → logprob: -4.650271415710449
    9. ''s' → logprob: -4.650271415710449
    10. ' ' → logprob: -5.025271415710449

Token 484: ' can' (ID: 665)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -1.4732420444488525
    2. '.' → logprob: -1.7232420444488525
    3. ' has' → logprob: -1.7232420444488525
    4. ' can' → logprob: -2.3482420444488525
    5. '.s' → logprob: -2.7232420444488525
    6. 's' → logprob: -2.7232420444488525
    7. '               ' → logprob: -3.7232420444488525
    8. ' is' → logprob: -3.7232420444488525
    9. ').' → logprob: -3.7232420444488525
    10. '].' → logprob: -3.9732420444488525

Token 485: ' bear' (ID: 16387)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0651950016617775
    2. 'be' → logprob: -3.940195083618164
    3. ' have' → logprob: -4.565195083618164
    4. '               ' → logprob: -4.940195083618164
    5. '_be' → logprob: -5.065195083618164
    6. 's' → logprob: -5.815195083618164
    7. '_s' → logprob: -6.315195083618164
    8. ''s' → logprob: -6.440195083618164
    9. ' ' → logprob: -6.440195083618164
    10. ' withstand' → logprob: -6.440195083618164

Token 486: ' weights' (ID: 28460)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.010038434527814388
    2. 'the' → logprob: -4.885038375854492
    3. '               ' → logprob: -6.510038375854492
    4. ' its' → logprob: -8.010038375854492
    5. ' weight' → logprob: -9.260038375854492
    6. '           ' → logprob: -9.260038375854492
    7. 'weight' → logprob: -9.885038375854492
    8. ' ' → logprob: -10.385038375854492
    9. ' all' → logprob: -10.385038375854492
    10. '                   ' → logprob: -10.635038375854492

Token 487: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7444392442703247
    2. ' of' → logprob: -2.119439125061035
    3. '               ' → logprob: -2.244439125061035
    4. ' _' → logprob: -2.369439125061035
    5. '_' → logprob: -2.869439125061035
    6. ' above' → logprob: -2.994439125061035
    7. ' >' → logprob: -2.994439125061035
    8. ' )' → logprob: -3.119439125061035
    9. '>' → logprob: -3.369439125061035
    10. '=' → logprob: -3.619439125061035

Token 488: ' foods' (ID: 18747)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2458209991455078
    2. 'total' → logprob: -1.3708209991455078
    3. ' total' → logprob: -2.120820999145508
    4. 'the' → logprob: -2.245820999145508
    5. ' the' → logprob: -2.870820999145508
    6. ' all' → logprob: -3.120820999145508
    7. 'all' → logprob: -3.245820999145508
    8. ' dp' → logprob: -3.620820999145508
    9. 'sum' → logprob: -4.245820999145508
    10. '0' → logprob: -4.620820999145508

Token 489: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.40396636724472046
    2. ' above' → logprob: -1.7789664268493652
    3. 'already' → logprob: -2.6539664268493652
    4. '[' → logprob: -3.7789664268493652
    5. '_ab' → logprob: -4.028966426849365
    6. ' already' → logprob: -4.278966426849365
    7. '               ' → logprob: -4.653966426849365
    8. 'below' → logprob: -5.403966426849365
    9. ' that' → logprob: -5.778966426849365
    10. '           ' → logprob: -5.903966426849365

Token 490: ' it' (ID: 480)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7048932909965515
    2. '               ' → logprob: -1.2048933506011963
    3. '[i' → logprob: -2.0798933506011963
    4. '[' → logprob: -3.5798933506011963
    5. ' :' → logprob: -4.954893112182617
    6. '):' → logprob: -5.079893112182617
    7. ',' → logprob: -5.454893112182617
    8. '   ' → logprob: -5.829893112182617
    9. ':
' → logprob: -5.954893112182617
    10. '           ' → logprob: -5.954893112182617

Token 491: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08758115768432617
    2. ':' → logprob: -2.712581157684326
    3. ',' → logprob: -5.337581157684326
    4. ' and' → logprob: -5.837581157684326
    5. ' :' → logprob: -6.337581157684326
    6. ':
' → logprob: -6.837581157684326
    7. ' if' → logprob: -6.962581157684326
    8. '.' → logprob: -7.212581157684326
    9. '                ' → logprob: -7.212581157684326
    10. '[' → logprob: -7.587581157684326

Token 492: 'that' (ID: 14116)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.49243268370628357
    2. ')' → logprob: -1.242432713508606
    3. ' (' → logprob: -4.242432594299316
    4. ' i' → logprob: -4.492432594299316
    5. '               ' → logprob: -4.492432594299316
    6. ' ' → logprob: -5.367432594299316
    7. '0' → logprob: -5.367432594299316
    8. '```' → logprob: -5.367432594299316
    9. ' ),' → logprob: -5.617432594299316
    10. 'total' → logprob: -5.617432594299316

Token 493: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6065903902053833
    2. ' are' → logprob: -0.9815903902053833
    3. ' )' → logprob: -2.9815902709960938
    4. 'are' → logprob: -4.856590270996094
    5. ' is' → logprob: -5.856590270996094
    6. '),' → logprob: -6.731590270996094
    7. '               ' → logprob: -6.731590270996094
    8. ' have' → logprob: -6.856590270996094
    9. ' were' → logprob: -6.981590270996094
    10. ' i' → logprob: -7.231590270996094

Token 494: ' none' (ID: 12698)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7564210891723633
    2. ' total' → logprob: -1.8814210891723633
    3. ' sum' → logprob: -2.2564210891723633
    4. ')' → logprob: -3.1314210891723633
    5. ' (' → logprob: -3.2564210891723633
    6. ' ' → logprob: -3.3814210891723633
    7. '0' → logprob: -3.8814210891723633
    8. 'the' → logprob: -4.256421089172363
    9. ' all' → logprob: -4.381421089172363
    10. ' )' → logprob: -4.506421089172363

Token 495: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08191238343715668
    2. '               ' → logprob: -2.9569122791290283
    3. '):' → logprob: -4.331912517547607
    4. ').' → logprob: -4.956912517547607
    5. ' )' → logprob: -5.456912517547607
    6. '),' → logprob: -6.706912517547607
    7. '):
' → logprob: -7.956912517547607
    8. ',' → logprob: -8.70691204071045
    9. '.' → logprob: -9.70691204071045
    10. ' if' → logprob: -10.45691204071045

Token 496: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008042014203965664
    2. '                ' → logprob: -6.383041858673096
    3. '                
' → logprob: -6.383041858673096
    4. ')' → logprob: -6.758041858673096
    5. '<|end|>' → logprob: -7.008041858673096
    6. '                   ' → logprob: -8.133042335510254
    7. ':' → logprob: -8.133042335510254
    8. '):' → logprob: -8.383042335510254
    9. ' )' → logprob: -8.633042335510254
    10. ',' → logprob: -8.883042335510254

Token 497: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016382133588194847
    2. '                ' → logprob: -5.016382217407227
    3. ')' → logprob: -5.891382217407227
    4. '                
' → logprob: -6.016382217407227
    5. ' )' → logprob: -6.266382217407227
    6. ' ' → logprob: -7.391382217407227
    7. '                 
' → logprob: -8.141382217407227
    8. ' 
' → logprob: -8.266382217407227
    9. ' ' → logprob: -8.516382217407227
    10. '                   ' → logprob: -8.766382217407227

Token 498: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15784575045108795
    2. '                ' → logprob: -2.4078457355499268
    3. '                   ' → logprob: -4.407845973968506
    4. 'if' → logprob: -4.657845973968506
    5. ' if' → logprob: -4.907845973968506
    6. '                 
' → logprob: -6.032845973968506
    7. 'continue' → logprob: -6.032845973968506
    8. '                               ' → logprob: -6.157845973968506
    9. ')' → logprob: -6.157845973968506
    10. '                
' → logprob: -6.532845973968506

Token 499: ' s' (ID: 265)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8428021669387817
    2. 'continue' → logprob: -1.7178021669387817
    3. ' if' → logprob: -2.342802047729492
    4. '               ' → logprob: -2.467802047729492
    5. 'if' → logprob: -2.592802047729492
    6. ' pass' → logprob: -3.592802047729492
    7. 'dp' → logprob: -3.842802047729492
    8. '#' → logprob: -3.967802047729492
    9. 'pass' → logprob: -4.092802047729492
    10. ' dp' → logprob: -4.092802047729492

Token 500: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.003294632537290454
    2. '[i' → logprob: -5.878294467926025
    3. '[' → logprob: -9.128294944763184
    4. '[_' → logprob: -9.128294944763184
    5. '_' → logprob: -9.378294944763184
    6. ' _' → logprob: -9.628294944763184
    7. 'i' → logprob: -10.378294944763184
    8. 'ub' → logprob: -11.503294944763184
    9. '```' → logprob: -11.628294944763184
    10. '>' → logprob: -11.753294944763184

Token 501: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6514270901679993
    2. '>=' → logprob: -1.0264270305633545
    3. '[' → logprob: -3.0264270305633545
    4. ' is' → logprob: -4.026427268981934
    5. '[i' → logprob: -4.526427268981934
    6. '<|end|>' → logprob: -4.776427268981934
    7. ',' → logprob: -4.901427268981934
    8. ')' → logprob: -5.026427268981934
    9. ')>=' → logprob: -5.151427268981934
    10. '=' → logprob: -6.151427268981934

Token 502: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018211284652352333
    2. ' ' → logprob: -4.018211364746094
    3. '               ' → logprob: -10.643211364746094
    4. ' ' → logprob: -11.518211364746094
    5. '                   ' → logprob: -11.518211364746094
    6. '   ' → logprob: -11.643211364746094
    7. '           ' → logprob: -13.268211364746094
    8. '1' → logprob: -14.080711364746094
    9. '       ' → logprob: -14.330711364746094
    10. '                       ' → logprob: -14.455711364746094

Token 503: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022887103259563446
    2. ' ' → logprob: -6.127288818359375
    3. 'total' → logprob: -9.377288818359375
    4. ' total' → logprob: -12.127288818359375
    5. ' ' → logprob: -12.252288818359375
    6. '   ' → logprob: -13.189788818359375
    7. '```' → logprob: -14.502288818359375
    8. '  ' → logprob: -14.627288818359375
    9. 'sum' → logprob: -14.814788818359375
    10. '1' → logprob: -14.814788818359375

Token 504: ' always' (ID: 3324)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41926053166389465
    2. '               ' → logprob: -1.4192605018615723
    3. ' :' → logprob: -3.9192605018615723
    4. '<|end|>' → logprob: -4.544260501861572
    5. ':
' → logprob: -4.669260501861572
    6. '                ' → logprob: -4.669260501861572
    7. ' and' → logprob: -4.794260501861572
    8. ' ' → logprob: -5.044260501861572
    9. ' if' → logprob: -5.169260501861572
    10. '):' → logprob: -5.169260501861572

Token 505: ' true' (ID: 1343)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0902707502245903
    2. ' :' → logprob: -3.340270757675171
    3. '               ' → logprob: -3.715270757675171
    4. ':
' → logprob: -5.340270519256592
    5. '<|end|>' → logprob: -5.340270519256592
    6. ')' → logprob: -5.465270519256592
    7. '):' → logprob: -5.715270519256592
    8. ' ' → logprob: -6.215270519256592
    9. '                               ' → logprob: -6.715270519256592
    10. '                ' → logprob: -6.715270519256592

Token 506: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20273950695991516
    2. ':' → logprob: -2.0777394771575928
    3. '<|end|>' → logprob: -4.327739715576172
    4. '                ' → logprob: -4.702739715576172
    5. ' :' → logprob: -5.202739715576172
    6. '):' → logprob: -5.202739715576172
    7. ',' → logprob: -5.327739715576172
    8. ')' → logprob: -5.452739715576172
    9. ':
' → logprob: -6.202739715576172
    10. '                               ' → logprob: -6.577739715576172

Token 507: ' top' (ID: 2344)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0496406555175781
    2. 'i' → logprob: -1.4246406555175781
    3. 'the' → logprob: -1.6746406555175781
    4. ' i' → logprob: -2.174640655517578
    5. ' next' → logprob: -3.174640655517578
    6. 'top' → logprob: -3.424640655517578
    7. 'next' → logprob: -4.424640655517578
    8. ' top' → logprob: -4.424640655517578
    9. ' this' → logprob: -5.924640655517578
    10. ' new' → logprob: -5.924640655517578

Token 508: ' food' (ID: 4232)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7867714762687683
    2. ':' → logprob: -1.411771535873413
    3. ')' → logprob: -1.911771535873413
    4. '):' → logprob: -2.411771535873413
    5. ' :' → logprob: -4.036771297454834
    6. ' )' → logprob: -5.036771297454834
    7. '_token' → logprob: -5.286771297454834
    8. ' ' → logprob: -5.786771297454834
    9. '              ' → logprob: -5.786771297454834
    10. '                ' → logprob: -5.911771297454834

Token 509: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03691791743040085
    2. ':' → logprob: -4.161917686462402
    3. '                ' → logprob: -5.161917686462402
    4. '<|end|>' → logprob: -5.536917686462402
    5. ')' → logprob: -6.411917686462402
    6. '                
' → logprob: -6.536917686462402
    7. ',' → logprob: -6.661917686462402
    8. ' ' → logprob: -7.036917686462402
    9. ' :' → logprob: -7.036917686462402
    10. '<|end|>' → logprob: -7.536917686462402

Token 510: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012189850211143494
    2. '                ' → logprob: -5.012189865112305
    3. '                
' → logprob: -6.137189865112305
    4. ')' → logprob: -7.262189865112305
    5. '<|end|>' → logprob: -7.762189865112305
    6. ' ' → logprob: -7.887189865112305
    7. '                   ' → logprob: -8.512189865112305
    8. ',' → logprob: -8.762189865112305
    9. ' )' → logprob: -8.887189865112305
    10. '                 
' → logprob: -8.887189865112305

Token 511: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04113693907856941
    2. ' if' → logprob: -3.5411369800567627
    3. '                
' → logprob: -5.666136741638184
    4. 'if' → logprob: -5.916136741638184
    5. '                ' → logprob: -6.416136741638184
    6. '                   ' → logprob: -7.791136741638184
    7. 's' → logprob: -8.041136741638184
    8. '#' → logprob: -8.041136741638184
    9. ' s' → logprob: -8.166136741638184
    10. ',' → logprob: -8.166136741638184

Token 512: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020105987787246704
    2. '                   ' → logprob: -7.002010822296143
    3. '                ' → logprob: -8.002010345458984
    4. '                
' → logprob: -8.627010345458984
    5. '           ' → logprob: -9.127010345458984
    6. ' continue' → logprob: -9.502010345458984
    7. '```' → logprob: -9.502010345458984
    8. ',' → logprob: -10.252010345458984
    9. '+' → logprob: -10.377010345458984
    10. '                       ' → logprob: -10.627010345458984

Token 513: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.823241114616394
    2. '               ' → logprob: -0.948241114616394
    3. 's' → logprob: -2.6982412338256836
    4. ' if' → logprob: -3.6982412338256836
    5. 'continue' → logprob: -3.6982412338256836
    6. '#' (adapté à ' #') → logprob: -4.073241233825684
    7. 'next' → logprob: -4.073241233825684
    8. 'weight' → logprob: -5.073241233825684
    9. 'w' → logprob: -5.448241233825684
    10. ' s' → logprob: -6.323241233825684

Token 514: ' Where' (ID: 16349)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0797609090805054
    2. 'w' → logprob: -1.3297609090805054
    3. 'weight' → logprob: -2.329761028289795
    4. '               ' → logprob: -2.454761028289795
    5. 'st' → logprob: -2.704761028289795
    6. 'if' → logprob: -3.079761028289795
    7. '#' → logprob: -3.454761028289795
    8. 'food' → logprob: -3.954761028289795
    9. 'next' → logprob: -4.829761028289795
    10. 'continue' → logprob: -5.579761028289795

Token 515: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2609148025512695
    2. 'is' → logprob: -1.2609148025512695
    3. ''s' → logprob: -1.6359148025512695
    4. ' is' → logprob: -2.1359148025512695
    5. 'from' → logprob: -3.0109148025512695
    6. ':' → logprob: -4.5109148025512695
    7. '_is' → logprob: -4.7609148025512695
    8. '_i' → logprob: -4.8859148025512695
    9. '_' → logprob: -5.1359148025512695
    10. '=' → logprob: -5.2609148025512695

Token 516: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.22924058139324188
    2. 'the' → logprob: -1.6042405366897583
    3. '"' → logprob: -6.479240417480469
    4. ' a' → logprob: -7.479240417480469
    5. ' ' → logprob: -8.229240417480469
    6. ' missing' → logprob: -8.479240417480469
    7. 'i' → logprob: -8.729240417480469
    8. 's' → logprob: -8.854240417480469
    9. ' i' → logprob: -8.979240417480469
    10. ' an' → logprob: -9.604240417480469

Token 517: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.5944768190383911
    2. 'check' → logprob: -1.8444768190383911
    3. 'weight' → logprob: -2.4694766998291016
    4. 'bug' → logprob: -2.7194766998291016
    5. 'break' → logprob: -3.4694766998291016
    6. ' problem' → logprob: -3.5944766998291016
    7. 'constraint' → logprob: -4.094476699829102
    8. '#' → logprob: -4.844476699829102
    9. 'next' → logprob: -4.969476699829102
    10. 'issue' → logprob: -5.094476699829102

Token 518: '?
' (ID: 3901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08046019822359085
    2. ':' → logprob: -4.080460071563721
    3. '```' → logprob: -4.580460071563721
    4. ',' → logprob: -4.705460071563721
    5. ':
' → logprob: -4.955460071563721
    6. ' if' → logprob: -5.205460071563721
    7. '                ' → logprob: -5.580460071563721
    8. ' ' → logprob: -6.080460071563721
    9. '                
' → logprob: -6.205460071563721
    10. '                   ' → logprob: -6.705460071563721

Token 519: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008251667954027653
    2. '                ' → logprob: -6.508251667022705
    3. ' if' → logprob: -6.883251667022705
    4. '```' → logprob: -6.883251667022705
    5. ' ' → logprob: -7.258251667022705
    6. '                
' → logprob: -7.258251667022705
    7. '<|end|>' → logprob: -7.383251667022705
    8. ',' → logprob: -8.008252143859863
    9. ' 
' → logprob: -8.133252143859863
    10. 'Let's' → logprob: -8.383252143859863

Token 520: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20639784634113312
    2. ' if' → logprob: -2.456397771835327
    3. ' s' → logprob: -3.956397771835327
    4. 'if' → logprob: -4.081398010253906
    5. ' continue' → logprob: -4.081398010253906
    6. '#' (adapté à ' #') → logprob: -4.331398010253906
    7. 's' → logprob: -4.956398010253906
    8. ' #' → logprob: -4.956398010253906
    9. 'continue' → logprob: -5.956398010253906
    10. '                
' → logprob: -6.081398010253906

Token 521: ' Actually' (ID: 50557)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11457329243421555
    2. ' if' → logprob: -2.8645732402801514
    3. '```' → logprob: -4.7395734786987305
    4. 'if' → logprob: -4.8645734786987305
    5. ' #' → logprob: -5.2395734786987305
    6. ' s' → logprob: -5.2395734786987305
    7. '                ' → logprob: -5.3645734786987305
    8. 's' → logprob: -5.6145734786987305
    9. ' continue' → logprob: -5.8645734786987305
    10. '#' → logprob: -5.9895734786987305

Token 522: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46164974570274353
    2. '                ' → logprob: -1.711649775505066
    3. ' ' → logprob: -2.7116496562957764
    4. ' if' → logprob: -3.8366496562957764
    5. ' continue' → logprob: -4.2116498947143555
    6. '<|end|>' → logprob: -4.3366498947143555
    7. ' #' → logprob: -4.4616498947143555
    8. ' for' → logprob: -4.7116498947143555
    9. ' the' → logprob: -4.9616498947143555
    10. '#' → logprob: -5.3366498947143555

Token 523: ' check' (ID: 2371)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.6683598756790161
    2. ' ' → logprob: -1.2933598756790161
    3. '               ' → logprob: -2.6683597564697266
    4. ' continue' → logprob: -3.2933597564697266
    5. ' ' → logprob: -3.4183597564697266
    6. ' if' → logprob: -4.293359756469727
    7. '#' → logprob: -4.918359756469727
    8. ' the' → logprob: -5.043359756469727
    9. ' s' → logprob: -5.168359756469727
    10. ' for' → logprob: -5.293359756469727

Token 524: ' stability' (ID: 27827)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5856761336326599
    2. '                ' → logprob: -2.2106761932373047
    3. '               ' → logprob: -2.4606761932373047
    4. 'if' → logprob: -2.5856761932373047
    5. 's' → logprob: -3.9606761932373047
    6. ' s' → logprob: -4.460676193237305
    7. '```' → logprob: -4.460676193237305
    8. ' #' → logprob: -4.585676193237305
    9. 'the' → logprob: -4.585676193237305
    10. ' for' → logprob: -4.710676193237305

Token 525: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.057291168719530106
    2. ' if' → logprob: -3.557291269302368
    3. ':' → logprob: -4.682291030883789
    4. '                ' → logprob: -6.307291030883789
    5. 'if' → logprob: -6.432291030883789
    6. '_i' → logprob: -6.432291030883789
    7. ':
' → logprob: -6.932291030883789
    8. 's' → logprob: -7.057291030883789
    9. ' for' → logprob: -7.182291030883789
    10. '                
' → logprob: -7.307291030883789

Token 526: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0563291311264038
    2. 'i' → logprob: -1.5563291311264038
    3. 'the' → logprob: -1.6813291311264038
    4. ' i' → logprob: -2.1813292503356934
    5. ' each' → logprob: -3.6813292503356934
    6. 'each' → logprob: -3.9313292503356934
    7. ' next' → logprob: -4.556329250335693
    8. ' all' → logprob: -4.556329250335693
    9. 'food' → logprob: -4.681329250335693
    10. 'all' → logprob: -4.806329250335693

Token 527: ' stack' (ID: 10825)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3687233924865723
    2. ' i' → logprob: -1.8687233924865723
    3. '_i' → logprob: -2.2437233924865723
    4. '               ' → logprob: -2.3687233924865723
    5. 'weights' → logprob: -2.6187233924865723
    6. 'i' → logprob: -3.1187233924865723
    7. '                ' → logprob: -3.9937233924865723
    8. '_weights' → logprob: -3.9937233924865723
    9. '_' → logprob: -4.118723392486572
    10. 'positions' → logprob: -4.368723392486572

Token 528: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4885879456996918
    2. '<|end|>' → logprob: -2.3635878562927246
    3. '<|end|>' → logprob: -3.3635878562927246
    4. '[' → logprob: -3.6135878562927246
    5. ')' → logprob: -3.7385878562927246
    6. '[i' → logprob: -3.8635878562927246
    7. 's' → logprob: -3.8635878562927246
    8. '               ' → logprob: -3.9885878562927246
    9. ',' → logprob: -4.238587856292725
    10. ' :' → logprob: -4.363587856292725

Token 529: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8381962180137634
    2. '                ' → logprob: -1.2131962776184082
    3. ' ' → logprob: -1.8381962776184082
    4. '<|end|>' → logprob: -2.713196277618408
    5. '                               ' → logprob: -4.963196277618408
    6. '                
' → logprob: -5.588196277618408
    7. '                                ' → logprob: -5.838196277618408
    8. ' ' → logprob: -5.838196277618408
    9. ' 
' → logprob: -6.338196277618408
    10. '                   ' → logprob: -6.463196277618408

Token 530: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17918752133846283
    2. '                ' → logprob: -2.804187536239624
    3. '<|end|>' → logprob: -2.804187536239624
    4. ' ' → logprob: -4.304187297821045
    5. ' continue' → logprob: -5.179187297821045
    6. ' if' → logprob: -5.929187297821045
    7. '<|end|>' → logprob: -6.179187297821045
    8. ' for' → logprob: -6.554187297821045
    9. '                
' → logprob: -6.554187297821045
    10. ' #' → logprob: -6.929187297821045

Token 531: ' For' (ID: 2214)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025176240131258965
    2. ' for' → logprob: -5.150176048278809
    3. ' if' → logprob: -5.525176048278809
    4. ' #' → logprob: -5.525176048278809
    5. '                ' → logprob: -6.275176048278809
    6. '#' → logprob: -6.275176048278809
    7. '```' → logprob: -6.275176048278809
    8. ' continue' → logprob: -6.400176048278809
    9. '<|end|>' → logprob: -7.650176048278809
    10. 'for' → logprob: -7.775176048278809

Token 532: ' each' (ID: 2454)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.182280421257019
    2. ' j' → logprob: -1.432280421257019
    3. 'i' → logprob: -1.932280421257019
    4. ' i' → logprob: -2.6822805404663086
    5. 'all' → logprob: -2.9322805404663086
    6. 'j' → logprob: -3.0572805404663086
    7. ' the' → logprob: -3.9322805404663086
    8. ' ' → logprob: -4.057280540466309
    9. ' each' → logprob: -4.307280540466309
    10. ' every' → logprob: -4.307280540466309

Token 533: ' food' (ID: 4232)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8819455504417419
    2. ')' → logprob: -2.0069456100463867
    3. '               ' → logprob: -2.6319456100463867
    4. '                ' → logprob: -2.7569456100463867
    5. ' ' → logprob: -2.8819456100463867
    6. '_' → logprob: -3.2569456100463867
    7. ' food' → logprob: -3.6319456100463867
    8. '_food' → logprob: -3.8819456100463867
    9. 'token' → logprob: -4.131945610046387
    10. ' token' → logprob: -4.131945610046387

Token 534: ' f' (ID: 285)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: '_j' (ID: 12021)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.9538900256156921
    2. '_' → logprob: -1.453890085220337
    3. ')' → logprob: -2.453890085220337
    4. '_i' → logprob: -2.578890085220337
    5. ' ' → logprob: -2.828890085220337
    6. '[' → logprob: -3.703890085220337
    7. ',' → logprob: -4.078889846801758
    8. '       ' → logprob: -4.203889846801758
    9. '           ' → logprob: -4.703889846801758
    10. '   ' → logprob: -4.703889846801758

Token 536: ' at' (ID: 540)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 537: ' position' (ID: 4010)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.4119362831115723
    2. ' j' → logprob: -1.4119362831115723
    3. 'the' → logprob: -2.2869362831115723
    4. 'i' → logprob: -3.0369362831115723
    5. 'position' → logprob: -3.0369362831115723
    6. ' position' → logprob: -3.0369362831115723
    7. ' i' → logprob: -3.1619362831115723
    8. 'j' → logprob: -3.5369362831115723
    9. ')' → logprob: -3.9119362831115723
    10. 'top' → logprob: -3.9119362831115723

Token 538: ' j' (ID: 441)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5376497507095337
    2. '+' → logprob: -2.037649631500244
    3. ' +' → logprob: -2.162649631500244
    4. '<|end|>' → logprob: -2.662649631500244
    5. ' ' → logprob: -2.912649631500244
    6. ')' → logprob: -3.037649631500244
    7. ' _' → logprob: -3.287649631500244
    8. '[' → logprob: -3.287649631500244
    9. ' (' → logprob: -3.287649631500244
    10. ',' → logprob: -3.412649631500244

Token 539: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2435128688812256
    2. '               ' → logprob: -1.3685128688812256
    3. ',' → logprob: -2.2435128688812256
    4. '           ' → logprob: -2.3685128688812256
    5. ' in' → logprob: -2.9935128688812256
    6. ' (' → logprob: -3.3685128688812256
    7. '+' → logprob: -3.4935128688812256
    8. '<|end|>' → logprob: -4.243513107299805
    9. ' +' → logprob: -4.368513107299805
    10. '                   ' → logprob: -4.493513107299805

Token 540: 'starting' (ID: 78149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07980243116617203
    2. ' )' → logprob: -4.079802513122559
    3. '),' → logprob: -4.579802513122559
    4. '+' → logprob: -4.579802513122559
    5. ' j' → logprob: -4.954802513122559
    6. '...' → logprob: -5.704802513122559
    7. 'j' → logprob: -5.704802513122559
    8. '0' → logprob: -6.079802513122559
    9. '):
' → logprob: -6.079802513122559
    10. '<|end|>' → logprob: -6.329802513122559

Token 541: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.14634011685848236
    2. ' from' → logprob: -2.1463401317596436
    3. '=' → logprob: -4.2713398933410645
    4. ' at' → logprob: -5.7713398933410645
    5. ')' → logprob: -7.2713398933410645
    6. 'at' → logprob: -7.8963398933410645
    7. '               ' → logprob: -8.271340370178223
    8. '           ' → logprob: -8.771340370178223
    9. '_from' → logprob: -9.021340370178223
    10. 'with' → logprob: -9.146340370178223

Token 542: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015943100675940514
    2. '1' → logprob: -4.2659430503845215
    3. 'bottom' → logprob: -7.1409430503845215
    4. ' ' → logprob: -7.7659430503845215
    5. 'j' → logprob: -8.51594352722168
    6. ' j' → logprob: -8.89094352722168
    7. '               ' → logprob: -10.26594352722168
    8. ' bottom' → logprob: -10.39094352722168
    9. '                   ' → logprob: -10.51594352722168
    10. '                           ' → logprob: -10.89094352722168

Token 543: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007613136898726225
    2. '1' → logprob: -5.382613182067871
    3. 'bottom' → logprob: -6.382613182067871
    4. ' ' → logprob: -7.757613182067871
    5. ' j' → logprob: -7.757613182067871
    6. 'j' → logprob: -8.382613182067871
    7. ' bottom' → logprob: -9.382613182067871
    8. '           ' → logprob: -10.382613182067871
    9. '   ' → logprob: -11.007613182067871
    10. 'def' → logprob: -11.132613182067871

Token 544: ' bottom' (ID: 8725)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9126678705215454
    2. '):
' → logprob: -1.4126678705215454
    3. ')' → logprob: -2.287667751312256
    4. '               ' → logprob: -2.537667751312256
    5. ',' → logprob: -3.162667751312256
    6. ':' → logprob: -3.287667751312256
    7. '           ' → logprob: -4.287667751312256
    8. '                               ' → logprob: -4.412667751312256
    9. '<|end|>' → logprob: -4.912667751312256
    10. '[' → logprob: -5.037667751312256

Token 545: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.499649316072464
    2. '):
' → logprob: -1.1246492862701416
    3. '               ' → logprob: -4.124649524688721
    4. '),' → logprob: -4.374649524688721
    5. ')' → logprob: -4.749649524688721
    6. '+' → logprob: -5.124649524688721
    7. 'to' → logprob: -5.374649524688721
    8. '           ' → logprob: -5.374649524688721
    9. '_to' → logprob: -6.124649524688721
    10. ',' → logprob: -6.624649524688721

Token 546: ' s' (ID: 265)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: '_f' (ID: 1337)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6722825765609741
    2. '_' → logprob: -1.4222825765609741
    3. '_j' → logprob: -2.5472826957702637
    4. '[i' → logprob: -2.7972826957702637
    5. '[' → logprob: -3.1722826957702637
    6. '[j' → logprob: -3.5472826957702637
    7. '   ' → logprob: -4.547282695770264
    8. ' _' → logprob: -5.047282695770264
    9. ')' → logprob: -5.672282695770264
    10. '[_' → logprob: -5.922282695770264

Token 548: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.19793550670146942
    2. '_j' → logprob: -1.8229354619979858
    3. '_' → logprob: -4.697935581207275
    4. '   ' → logprob: -6.697935581207275
    5. '"_' → logprob: -6.822935581207275
    6. ')' → logprob: -7.197935581207275
    7. '```' → logprob: -7.197935581207275
    8. '_idx' → logprob: -7.572935581207275
    9. '[i' → logprob: -7.697935581207275
    10. ')_' → logprob: -7.697935581207275

Token 549: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.08323962986469269
    2. '>=' → logprob: -2.8332395553588867
    3. ')' → logprob: -5.708239555358887
    4. ']>=' → logprob: -5.958239555358887
    5. '>' → logprob: -6.208239555358887
    6. ')>=' → logprob: -6.333239555358887
    7. '               ' → logprob: -6.708239555358887
    8. ',' → logprob: -7.083239555358887
    9. '<|end|>' → logprob: -7.333239555358887
    10. '   ' → logprob: -7.333239555358887

Token 550: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.4098687171936035
    2. ' sum' → logprob: -1.5348687171936035
    3. 'sum' → logprob: -1.5348687171936035
    4. ' total' → logprob: -1.6598687171936035
    5. 'dp' → logprob: -2.2848687171936035
    6. ' dp' → logprob: -3.9098687171936035
    7. '0' → logprob: -5.7848687171936035
    8. '               ' → logprob: -6.4098687171936035
    9. '           ' → logprob: -6.7848687171936035
    10. '   ' → logprob: -6.7848687171936035

Token 551: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3999479115009308
    2. '               ' → logprob: -2.2749478816986084
    3. '                ' → logprob: -2.7749478816986084
    4. 'of' → logprob: -2.8999478816986084
    5. '_' → logprob: -3.2749478816986084
    6. '_of' → logprob: -4.1499481201171875
    7. ')' → logprob: -4.5249481201171875
    8. '(' → logprob: -5.2749481201171875
    9. '                   ' → logprob: -5.5249481201171875
    10. '              ' → logprob: -5.6499481201171875

Token 552: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.19255833327770233
    2. ' weights' → logprob: -1.8175582885742188
    3. 'w' → logprob: -5.192558288574219
    4. '(weights' → logprob: -5.942558288574219
    5. ' w' → logprob: -6.067558288574219
    6. 'weight' → logprob: -6.692558288574219
    7. '_weights' → logprob: -8.567558288574219
    8. 'dp' → logprob: -8.942558288574219
    9. '(' → logprob: -9.192558288574219
    10. '```' → logprob: -9.692558288574219

Token 553: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: ' foods' (ID: 18747)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' → logprob: -0.4679246246814728
    2. ' all' → logprob: -2.2179245948791504
    3. ' foods' → logprob: -2.2179245948791504
    4. 'all' → logprob: -2.5929245948791504
    5. 'the' → logprob: -3.8429245948791504
    6. ' the' → logprob: -3.8429245948791504
    7. ' j' → logprob: -4.09292459487915
    8. 'above' → logprob: -4.96792459487915
    9. ' above' → logprob: -5.59292459487915
    10. 'j' → logprob: -6.34292459487915

Token 555: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.7248873710632324
    2. '[j' → logprob: -1.5998873710632324
    3. '[' → logprob: -2.7248873710632324
    4. '[i' → logprob: -2.8498873710632324
    5. ' above' → logprob: -3.3498873710632324
    6. '_ab' → logprob: -3.5998873710632324
    7. '           ' → logprob: -3.8498873710632324
    8. '               ' → logprob: -3.8498873710632324
    9. '_j' → logprob: -4.349887371063232
    10. '                   ' → logprob: -4.724887371063232

Token 556: ' j' (ID: 441)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0747566968202591
    2. '<|end|>' → logprob: -3.949756622314453
    3. '                ' → logprob: -4.574756622314453
    4. ':' → logprob: -4.574756622314453
    5. '                
' → logprob: -5.074756622314453
    6. '<|end|>' → logprob: -5.074756622314453
    7. ',' → logprob: -6.074756622314453
    8. ')' → logprob: -6.199756622314453
    9. '                               ' → logprob: -6.199756622314453
    10. '.' → logprob: -6.574756622314453

Token 557: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014336848631501198
    2. ')' → logprob: -6.139337062835693
    3. '<|end|>' → logprob: -6.264337062835693
    4. '                
' → logprob: -6.389337062835693
    5. ':' → logprob: -6.639337062835693
    6. ',' → logprob: -6.764337062835693
    7. ':
' → logprob: -7.014337062835693
    8. '                ' → logprob: -7.389337062835693
    9. '<|end|>' → logprob: -7.514337062835693
    10. '.' → logprob: -7.639337062835693

Token 558: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025120090693235397
    2. '<|end|>' → logprob: -4.275120258331299
    3. '                ' → logprob: -5.525120258331299
    4. '                
' → logprob: -7.025120258331299
    5. '       ' → logprob: -7.150120258331299
    6. '           ' → logprob: -7.150120258331299
    7. ' ' → logprob: -7.275120258331299
    8. '<|end|>' → logprob: -7.275120258331299
    9. '                               ' → logprob: -8.27511978149414
    10. ' 
' → logprob: -8.40011978149414

Token 559: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00454226927831769
    2. '                
' → logprob: -6.379542350769043
    3. ' 
' → logprob: -7.004542350769043
    4. '<|end|>' → logprob: -7.754542350769043
    5. '                ' → logprob: -7.879542350769043
    6. '  
' → logprob: -9.254542350769043
    7. ' ' → logprob: -9.379542350769043
    8. '           ' → logprob: -9.504542350769043
    9. '                   ' → logprob: -9.629542350769043
    10. ' if' → logprob: -9.754542350769043

Token 560: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008332294411957264
    2. ' if' → logprob: -5.883332252502441
    3. ' for' → logprob: -7.133332252502441
    4. ' continue' → logprob: -7.383332252502441
    5. '                ' → logprob: -7.758332252502441
    6. '                
' → logprob: -8.008332252502441
    7. ' #' → logprob: -8.008332252502441
    8. ' next' → logprob: -8.383332252502441
    9. '<|end|>' → logprob: -8.383332252502441
    10. '           ' → logprob: -8.508332252502441

Token 561: ' when' (ID: 1261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2836078405380249
    2. 'for' → logprob: -2.1586079597473145
    3. ' total' → logprob: -3.2836079597473145
    4. '               ' → logprob: -3.2836079597473145
    5. '#' → logprob: -4.1586079597473145
    6. ' #' → logprob: -4.4086079597473145
    7. ' continue' → logprob: -5.2836079597473145
    8. ' if' → logprob: -5.2836079597473145
    9. 'total' → logprob: -5.5336079597473145
    10. ' sum' → logprob: -6.0336079597473145

Token 562: ' adding' (ID: 12673)
  Prédit: 'adding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adding' → logprob: -0.8599615097045898
    2. ' adding' → logprob: -1.1099615097045898
    3. 'checking' → logprob: -1.7349615097045898
    4. 'placing' → logprob: -3.98496150970459
    5. ' checking' → logprob: -4.23496150970459
    6. '               ' → logprob: -4.85996150970459
    7. 'i' → logprob: -5.35996150970459
    8. 'we' → logprob: -5.73496150970459
    9. 'j' → logprob: -6.10996150970459
    10. ' we' → logprob: -6.23496150970459

Token 563: ' new' (ID: 620)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0808490589261055
    2. 'i' → logprob: -2.5808491706848145
    3. ' ' → logprob: -7.4558491706848145
    4. ' a' → logprob: -7.9558491706848145
    5. '               ' → logprob: -8.705848693847656
    6. '                ' → logprob: -9.080848693847656
    7. ' the' → logprob: -9.205848693847656
    8. '_i' → logprob: -9.205848693847656
    9. ' next' → logprob: -9.455848693847656
    10. '                   ' → logprob: -9.830848693847656

Token 564: ' food' (ID: 4232)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7929597496986389
    2. '_' → logprob: -1.5429596900939941
    3. ' _' → logprob: -1.6679596900939941
    4. ' ' → logprob: -2.292959690093994
    5. '_food' → logprob: -4.167959690093994
    6. ' food' → logprob: -4.542959690093994
    7. '_i' → logprob: -5.167959690093994
    8. ' token' → logprob: -5.292959690093994
    9. '_token' → logprob: -6.417959690093994
    10. ')' → logprob: -7.167959690093994

Token 565: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.2790631651878357
    2. ' i' → logprob: -2.4040632247924805
    3. ' at' → logprob: -2.6540632247924805
    4. '_i' → logprob: -3.6540632247924805
    5. ' _' → logprob: -4.6540632247924805
    6. ',' → logprob: -4.9040632247924805
    7. ' ' → logprob: -4.9040632247924805
    8. ' (' → logprob: -5.1540632247924805
    9. ')' → logprob: -5.5290632247924805
    10. '_' → logprob: -5.7790632247924805

Token 566: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.05563680827617645
    2. ' top' → logprob: -2.9306368827819824
    3. '_top' → logprob: -7.555636882781982
    4. 'the' → logprob: -8.805636405944824
    5. 'i' → logprob: -10.180636405944824
    6. '	top' → logprob: -11.680636405944824
    7. ' the' → logprob: -11.930636405944824
    8. ' ' → logprob: -11.930636405944824
    9. ' i' → logprob: -12.055636405944824
    10. 'mask' → logprob: -12.305636405944824

Token 567: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22937904298305511
    2. ',' → logprob: -2.1043789386749268
    3. ':' → logprob: -3.3543789386749268
    4. ' i' → logprob: -4.854379177093506
    5. ' (' → logprob: -5.229379177093506
    6. ' ,' → logprob: -5.604379177093506
    7. ' =' → logprob: -5.604379177093506
    8. '                               ' → logprob: -5.729379177093506
    9. '                ' → logprob: -5.979379177093506
    10. '):' → logprob: -5.979379177093506

Token 568: ' only' (ID: 1606)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.771904468536377
    2. ' continue' → logprob: -1.021904468536377
    3. '                ' → logprob: -2.396904468536377
    4. ' ' → logprob: -4.271904468536377
    5. ' if' → logprob: -4.896904468536377
    6. '                   ' → logprob: -4.896904468536377
    7. ' continues' → logprob: -4.896904468536377
    8. 'continue' → logprob: -5.021904468536377
    9. ' ' → logprob: -5.146904468536377
    10. ' new' → logprob: -5.271904468536377

Token 569: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8469835519790649
    2. ' if' → logprob: -1.721983551979065
    3. 'the' → logprob: -1.846983551979065
    4. '                ' → logprob: -2.0969834327697754
    5. 'if' → logprob: -3.4719834327697754
    6. '               ' → logprob: -3.9719834327697754
    7. ' i' → logprob: -4.221983432769775
    8. ' #' → logprob: -4.721983432769775
    9. ' ' → logprob: -4.971983432769775
    10. ')' → logprob: -5.596983432769775

Token 570: ' foods' (ID: 18747)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7777770757675171
    2. ' #' → logprob: -2.0277771949768066
    3. '#' → logprob: -2.9027771949768066
    4. '               ' → logprob: -3.1527771949768066
    5. ' new' → logprob: -3.2777771949768066
    6. ' rest' → logprob: -3.2777771949768066
    7. ' previous' → logprob: -3.5277771949768066
    8. ')' → logprob: -3.7777771949768066
    9. ' i' → logprob: -3.9027771949768066
    10. ' current' → logprob: -4.152777194976807

Token 571: ' below' (ID: 4895)
  Prédit: ' above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' above' → logprob: -0.8349642753601074
    2. ' on' → logprob: -1.0849642753601074
    3. ' placed' → logprob: -2.2099642753601074
    4. ' are' → logprob: -3.3349642753601074
    5. 'above' → logprob: -3.5849642753601074
    6. '               ' → logprob: -4.334964275360107
    7. 'placed' → logprob: -4.459964275360107
    8. '[i' → logprob: -5.584964275360107
    9. ' at' → logprob: -5.959964275360107
    10. '           ' → logprob: -5.959964275360107

Token 572: ' may' (ID: 1340)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6776270270347595
    2. ' are' → logprob: -1.5526270866394043
    3. ')' → logprob: -2.6776270866394043
    4. ' (' → logprob: -3.8026270866394043
    5. '[i' → logprob: -3.8026270866394043
    6. '```' → logprob: -4.052627086639404
    7. '                ' → logprob: -4.177627086639404
    8. ' )' → logprob: -4.552627086639404
    9. ' continue' → logprob: -4.677627086639404
    10. ' and' → logprob: -4.802627086639404

Token 573: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6484338045120239
    2. ' have' → logprob: -1.023433804512024
    3. '               ' → logprob: -2.6484336853027344
    4. 'have' → logprob: -4.023433685302734
    5. 'be' → logprob: -4.023433685302734
    6. ' continue' → logprob: -6.648433685302734
    7. '                ' → logprob: -6.773433685302734
    8. '           ' → logprob: -7.023433685302734
    9. ' need' → logprob: -7.023433685302734
    10. ' are' → logprob: -7.398433685302734

Token 574: ' compressed' (ID: 58419)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.8299058079719543
    2. ' above' → logprob: -1.4549057483673096
    3. 'placed' → logprob: -1.8299057483673096
    4. ' placed' → logprob: -2.5799057483673096
    5. 'below' → logprob: -4.204905986785889
    6. ')' → logprob: -4.454905986785889
    7. 'added' → logprob: -4.454905986785889
    8. ' added' → logprob: -5.329905986785889
    9. ' below' → logprob: -5.579905986785889
    10. 'needed' → logprob: -5.829905986785889

Token 575: ' by' (ID: 656)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03180428221821785
    2. ':' → logprob: -5.031804084777832
    3. '                ' → logprob: -5.281804084777832
    4. '<|end|>' → logprob: -5.281804084777832
    5. ')' → logprob: -6.156804084777832
    6. '                               ' → logprob: -6.656804084777832
    7. '<|end|>' → logprob: -6.906804084777832
    8. ',' → logprob: -7.031804084777832
    9. '.' → logprob: -7.156804084777832
    10. ' =' → logprob: -7.281804084777832

Token 576: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7423933148384094
    2. ' the' → logprob: -1.2423932552337646
    3. 'i' → logprob: -2.3673932552337646
    4. ' i' → logprob: -2.4923932552337646
    5. ' a' → logprob: -3.9923932552337646
    6. 'a' → logprob: -4.742393493652344
    7. ' that' → logprob: -5.742393493652344
    8. ' this' → logprob: -5.867393493652344
    9. '```' → logprob: -5.867393493652344
    10. 'weight' → logprob: -6.242393493652344

Token 577: ' new' (ID: 620)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.9384393692016602
    2. ' new' → logprob: -1.1884393692016602
    3. 'new' → logprob: -2.81343936920166
    4. ' current' → logprob: -3.06343936920166
    5. 'next' → logprob: -3.06343936920166
    6. 'i' → logprob: -3.18843936920166
    7. 'current' → logprob: -3.68843936920166
    8. ' i' → logprob: -3.68843936920166
    9. ' previous' → logprob: -5.31343936920166
    10. ' rest' → logprob: -5.43843936920166

Token 578: ' food' (ID: 4232)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -1.3779174089431763
    2. ' food' → logprob: -1.7529174089431763
    3. ' _' → logprob: -2.0029172897338867
    4. '_' → logprob: -2.5029172897338867
    5. '_food' → logprob: -2.6279172897338867
    6. 'token' → logprob: -3.0029172897338867
    7. '_token' → logprob: -3.0029172897338867
    8. ' ' → logprob: -3.5029172897338867
    9. 'food' → logprob: -3.5029172897338867
    10. ' i' → logprob: -3.6279172897338867

Token 579: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01084265299141407
    2. '<|end|>' → logprob: -5.510842800140381
    3. '                ' → logprob: -6.635842800140381
    4. '                
' → logprob: -7.135842800140381
    5. '<|end|>' → logprob: -7.635842800140381
    6. ')' → logprob: -7.760842800140381
    7. ' =' → logprob: -7.885842800140381
    8. ' 
' → logprob: -8.260842323303223
    9. ',' → logprob: -8.260842323303223
    10. ' ' → logprob: -8.385842323303223

Token 580: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0064863343723118305
    2. '                ' → logprob: -5.506486415863037
    3. '                
' → logprob: -7.131486415863037
    4. ')' → logprob: -8.131485939025879
    5. '<|end|>' → logprob: -8.256485939025879
    6. ' ' → logprob: -8.881485939025879
    7. '                   ' → logprob: -9.256485939025879
    8. '           ' → logprob: -9.256485939025879
    9. ' ' → logprob: -9.256485939025879
    10. '              ' → logprob: -9.381485939025879

Token 581: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004091224167495966
    2. '                
' → logprob: -6.129091262817383
    3. '                ' → logprob: -7.379091262817383
    4. ' 
' → logprob: -8.379091262817383
    5. '<|end|>' → logprob: -8.379091262817383
    6. '```' → logprob: -9.129091262817383
    7. ' ' → logprob: -9.254091262817383
    8. ' ' → logprob: -9.379091262817383
    9. ')' → logprob: -10.004091262817383
    10. '<|end|>' → logprob: -10.004091262817383

Token 582: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001946725882589817
    2. '                
' → logprob: -6.751946926116943
    3. '<|end|>' → logprob: -8.251946449279785
    4. '                ' → logprob: -9.126946449279785
    5. ' 
' → logprob: -9.626946449279785
    6. '<|end|>' → logprob: -9.876946449279785
    7. '```' → logprob: -10.001946449279785
    8. ' ' → logprob: -10.376946449279785
    9. ' ' → logprob: -10.376946449279785
    10. '                
                
' → logprob: -10.751946449279785

Token 583: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0131956422701478
    2. ' for' → logprob: -5.638195514678955
    3. ' if' → logprob: -5.638195514678955
    4. 'for' → logprob: -6.263195514678955
    5. '           ' → logprob: -7.263195514678955
    6. 'if' → logprob: -7.263195514678955
    7. '       ' → logprob: -7.763195514678955
    8. '#' (adapté à ' #') → logprob: -8.138195991516113
    9. ' continue' → logprob: -8.138195991516113
    10. 'weight' → logprob: -8.138195991516113

Token 584: ' We' (ID: 1416)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019108010455965996
    2. '#' → logprob: -5.519107818603516
    3. ' for' → logprob: -5.894107818603516
    4. ' continue' → logprob: -6.269107818603516
    5. '```' → logprob: -6.269107818603516
    6. ' if' → logprob: -6.394107818603516
    7. ' #' → logprob: -6.394107818603516
    8. 'for' → logprob: -7.144107818603516
    9. '           ' → logprob: -7.269107818603516
    10. 'continue' → logprob: -7.519107818603516

Token 585: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.03335519880056381
    2. ' continue' → logprob: -4.033355236053467
    3. 'need' → logprob: -4.783355236053467
    4. ' want' → logprob: -6.283355236053467
    5. ' can' → logprob: -6.658355236053467
    6. ' have' → logprob: -7.158355236053467
    7. 'continue' → logprob: -8.033354759216309
    8. ' ' → logprob: -8.033354759216309
    9. ' should' → logprob: -8.158354759216309
    10. '_need' → logprob: -8.158354759216309

Token 586: ' check' (ID: 2371)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1514936685562134
    2. 'check' → logprob: -1.2764936685562134
    3. 'calculate' → logprob: -2.151493549346924
    4. ' check' → logprob: -2.651493549346924
    5. 'continue' → logprob: -3.026493549346924
    6. 'compute' → logprob: -3.401493549346924
    7. 'sum' → logprob: -3.526493549346924
    8. 'know' → logprob: -4.026493549346924
    9. '           ' → logprob: -4.526493549346924
    10. '                   ' → logprob: -4.901493549346924

Token 587: ' that' (ID: 484)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20639163255691528
    2. ' if' → logprob: -1.9563915729522705
    3. ' for' → logprob: -4.70639181137085
    4. '                ' → logprob: -4.95639181137085
    5. ' the' → logprob: -5.08139181137085
    6. 'if' → logprob: -5.20639181137085
    7. 'for' → logprob: -5.70639181137085
    8. ' that' → logprob: -6.33139181137085
    9. 'the' → logprob: -6.33139181137085
    10. ' all' → logprob: -6.33139181137085

Token 588: ' the' (ID: 290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42031893134117126
    2. ' the' → logprob: -2.295318841934204
    3. ' if' → logprob: -2.420318841934204
    4. ' for' → logprob: -2.420318841934204
    5. 'for' → logprob: -4.170319080352783
    6. ' all' → logprob: -4.545319080352783
    7. 'the' → logprob: -4.920319080352783
    8. 'if' → logprob: -5.170319080352783
    9. ' total' → logprob: -5.795319080352783
    10. '                ' → logprob: -5.920319080352783

Token 589: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.6779171228408813
    2. 'if' → logprob: -1.8029171228408813
    3. ' if' → logprob: -1.9279171228408813
    4. ' for' → logprob: -2.177917003631592
    5. 'for' → logprob: -2.427917003631592
    6. ' new' → logprob: -2.802917003631592
    7. '#' → logprob: -3.177917003631592
    8. ' total' → logprob: -3.802917003631592
    9. ' #' → logprob: -3.802917003631592
    10. 'new' → logprob: -4.177917003631592

Token 590: ' top' (ID: 2344)
  Prédit: ' food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' food' → logprob: -0.9555404782295227
    2. '_food' → logprob: -2.080540418624878
    3. '               ' → logprob: -2.205540418624878
    4. 'food' → logprob: -2.955540418624878
    5. ' _' → logprob: -2.955540418624878
    6. '_' → logprob: -3.205540418624878
    7. ' weight' → logprob: -3.455540418624878
    8. '_i' → logprob: -3.705540418624878
    9. ' ' → logprob: -3.955540418624878
    10. '```' → logprob: -4.080540657043457

Token 591: ' food' (ID: 4232)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8250923156738281
    2. '               ' → logprob: -1.3250923156738281
    3. '_food' → logprob: -1.8250923156738281
    4. '_' → logprob: -3.575092315673828
    5. ')' → logprob: -3.700092315673828
    6. ' food' → logprob: -3.950092315673828
    7. ' ' → logprob: -4.325092315673828
    8. '                ' → logprob: -4.700092315673828
    9. ' )' → logprob: -5.325092315673828
    10. '_token' → logprob: -5.700092315673828

Token 592: ' i' (ID: 575)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.060584545135498
    2. '.' → logprob: -2.310584545135498
    3. '[i' → logprob: -2.310584545135498
    4. ' .' → logprob: -2.685584545135498
    5. ' is' → logprob: -2.810584545135498
    6. ' ' → logprob: -3.185584545135498
    7. '<|end|>' → logprob: -3.185584545135498
    8. ')' → logprob: -3.310584545135498
    9. ''s' → logprob: -3.560584545135498
    10. 's' → logprob: -3.685584545135498

Token 593: ' does' (ID: 2226)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.6451409459114075
    2. ' can' → logprob: -2.2701408863067627
    3. '               ' → logprob: -2.3951408863067627
    4. ''s' → logprob: -2.3951408863067627
    5. ' is' → logprob: -3.6451408863067627
    6. 's' → logprob: -3.7701408863067627
    7. ')' → logprob: -3.8951408863067627
    8. '.' → logprob: -4.520141124725342
    9. ' ' → logprob: -4.520141124725342
    10. '   ' → logprob: -4.770141124725342

Token 594: ' NOT' (ID: 7116)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04312809929251671
    2. 'not' → logprob: -3.29312801361084
    3. 'n't' → logprob: -5.29312801361084
    4. '_not' → logprob: -11.16812801361084
    5. 'n' → logprob: -11.66812801361084
    6. '               ' → logprob: -12.54312801361084
    7. '	not' → logprob: -12.54312801361084
    8. ' have' → logprob: -12.79312801361084
    9. '                   ' → logprob: -13.04312801361084
    10. '```' → logprob: -13.16812801361084

Token 595: ' crush' (ID: 24854)
  Prédit: ' violate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' violate' → logprob: -0.9605759978294373
    2. 'break' → logprob: -2.460576057434082
    3. 'compress' → logprob: -2.585576057434082
    4. 'cause' → logprob: -2.585576057434082
    5. ' break' → logprob: -3.085576057434082
    6. ' cause' → logprob: -3.210576057434082
    7. ' have' → logprob: -3.210576057434082
    8. 'vi' → logprob: -3.335576057434082
    9. ' compress' → logprob: -3.460576057434082
    10. ' exceed' → logprob: -3.460576057434082

Token 596: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4629206657409668
    2. ' ' → logprob: -1.8379206657409668
    3. 'the' → logprob: -2.587920665740967
    4. '_' → logprob: -3.212920665740967
    5. '               ' → logprob: -3.837920665740967
    6. '<|end|>' → logprob: -3.837920665740967
    7. ')' → logprob: -4.462920665740967
    8. 's' → logprob: -4.712920665740967
    9. ' i' → logprob: -5.962920665740967
    10. 'ing' → logprob: -6.087920665740967

Token 597: ' foods' (ID: 18747)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'previous' → logprob: -0.8735060691833496
    2. ' previous' → logprob: -1.9985060691833496
    3. 'stack' → logprob: -2.3735060691833496
    4. 'foods' → logprob: -2.7485060691833496
    5. 'current' → logprob: -2.8735060691833496
    6. 'existing' → logprob: -3.2485060691833496
    7. ' next' → logprob: -3.2485060691833496
    8. 'next' → logprob: -3.4985060691833496
    9. ' current' → logprob: -3.8735060691833496
    10. ' stack' → logprob: -3.9985060691833496

Token 598: ' below' (ID: 4895)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 599: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1672990769147873
    2. ':' → logprob: -2.4172990322113037
    3. ')' → logprob: -4.792299270629883
    4. '                
' → logprob: -5.042299270629883
    5. ':
' → logprob: -5.292299270629883
    6. '                ' → logprob: -5.292299270629883
    7. '<|end|>' → logprob: -5.292299270629883
    8. ',' → logprob: -5.542299270629883
    9. '           ' → logprob: -5.792299270629883
    10. '       ' → logprob: -5.792299270629883

Token 600: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006108908914029598
    2. '                
' → logprob: -5.88110876083374
    3. '<|end|>' → logprob: -6.75610876083374
    4. '                ' → logprob: -6.88110876083374
    5. ' 
' → logprob: -8.381109237670898
    6. ')' → logprob: -9.256109237670898
    7. ' ' → logprob: -9.381109237670898
    8. '           ' → logprob: -9.506109237670898
    9. ' ' → logprob: -9.631109237670898
    10. '              ' → logprob: -9.756109237670898

Token 601: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003140401327982545
    2. '                
' → logprob: -6.128140449523926
    3. '<|end|>' → logprob: -8.128140449523926
    4. ' 
' → logprob: -9.003140449523926
    5. '                ' → logprob: -9.128140449523926
    6. '                
                
' → logprob: -9.753140449523926
    7. ' ' → logprob: -9.878140449523926
    8. ',' → logprob: -10.378140449523926
    9. '<|end|>' → logprob: -10.503140449523926
    10. '```' → logprob: -10.753140449523926

Token 602: ' crush' (ID: 24854)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005903553683310747
    2. '                
' → logprob: -5.755903720855713
    3. ' 
' → logprob: -7.505903720855713
    4. '                ' → logprob: -7.755903720855713
    5. ' continue' → logprob: -8.755903244018555
    6. ' if' → logprob: -8.880903244018555
    7. '<|end|>' → logprob: -8.880903244018555
    8. ' ' → logprob: -9.005903244018555
    9. ' ' → logprob: -9.380903244018555
    10. '```' → logprob: -9.505903244018555

Token 603: ' constraint' (ID: 44762)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.2550825774669647
    2. 'ed' → logprob: -2.630082607269287
    3. 's' → logprob: -4.130082607269287
    4. ' ' → logprob: -4.130082607269287
    5. '<|end|>' → logprob: -4.255082607269287
    6. '_' → logprob: -4.755082607269287
    7. '_condition' → logprob: -4.755082607269287
    8. '_i' → logprob: -5.005082607269287
    9. '<|end|>' → logprob: -5.005082607269287
    10. '   ' → logprob: -5.130082607269287

Token 604: ' only' (ID: 1606)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 605: ' needed' (ID: 6118)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44290629029273987
    2. '               ' → logprob: -1.9429062604904175
    3. '<|end|>' → logprob: -2.817906379699707
    4. '<|end|>' → logprob: -3.317906379699707
    5. '                ' → logprob: -4.192906379699707
    6. ' if' → logprob: -4.567906379699707
    7. ' is' → logprob: -4.817906379699707
    8. '=' → logprob: -4.942906379699707
    9. '                               ' → logprob: -4.942906379699707
    10. ' ' → logprob: -5.067906379699707

Token 606: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4609353840351105
    2. '<|end|>' → logprob: -1.960935354232788
    3. '               ' → logprob: -2.835935354232788
    4. ' ' → logprob: -3.210935354232788
    5. '                ' → logprob: -3.835935354232788
    6. '<|end|>' → logprob: -4.460935592651367
    7. ' for' → logprob: -4.710935592651367
    8. ' :' → logprob: -4.835935592651367
    9. ' if' → logprob: -5.210935592651367
    10. ')' → logprob: -5.210935592651367

Token 607: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2882740795612335
    2. ' the' → logprob: -1.6632740497589111
    3. 'foods' → logprob: -4.41327428817749
    4. 'i' → logprob: -4.53827428817749
    5. '           ' → logprob: -5.28827428817749
    6. 'lower' → logprob: -5.66327428817749
    7. 'bottom' → logprob: -5.66327428817749
    8. '               ' → logprob: -6.03827428817749
    9. 'previous' → logprob: -6.03827428817749
    10. ' i' → logprob: -6.16327428817749

Token 608: ' foods' (ID: 18747)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foods' → logprob: -0.9990838170051575
    2. 'previous' → logprob: -1.7490837574005127
    3. ' next' → logprob: -2.4990837574005127
    4. 'next' → logprob: -2.8740837574005127
    5. ' previous' → logprob: -3.2490837574005127
    6. 'lower' → logprob: -3.2490837574005127
    7. 'new' → logprob: -3.2490837574005127
    8. 'bottom' → logprob: -3.3740837574005127
    9. 'existing' → logprob: -3.8740837574005127
    10. 'below' → logprob: -3.8740837574005127

Token 609: ' under' (ID: 1641)
  Prédit: ' below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' below' → logprob: -0.2452421635389328
    2. '<|end|>' → logprob: -2.495242118835449
    3. 'below' → logprob: -2.620242118835449
    4. ' that' → logprob: -4.745242118835449
    5. ' above' → logprob: -5.120242118835449
    6. ' placed' → logprob: -5.245242118835449
    7. 's' → logprob: -5.620242118835449
    8. ' on' → logprob: -5.870242118835449
    9. ')' → logprob: -5.995242118835449
    10. ' ' → logprob: -5.995242118835449

Token 610: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5592410564422607
    2. ' i' → logprob: -1.5592410564422607
    3. ')' → logprob: -2.0592410564422607
    4. '<|end|>' → logprob: -2.8092410564422607
    5. '   ' → logprob: -3.3092410564422607
    6. '<|end|>' → logprob: -3.5592410564422607
    7. '           ' → logprob: -3.6842410564422607
    8. ',' → logprob: -3.8092410564422607
    9. ' )' → logprob: -4.05924129486084
    10. ' (' → logprob: -4.05924129486084

Token 611: ' food' (ID: 4232)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2893173694610596
    2. ' ' → logprob: -1.4143173694610596
    3. '<|end|>' → logprob: -1.7893173694610596
    4. '   ' → logprob: -2.4143173694610596
    5. '               ' → logprob: -3.0393173694610596
    6. ' 
' → logprob: -3.9143173694610596
    7. '<|end|>' → logprob: -4.1643171310424805
    8. '  ' → logprob: -4.2893171310424805
    9. ',' → logprob: -4.2893171310424805
    10. ' )' → logprob: -4.4143171310424805

Token 612: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007437781896442175
    2. '                
' → logprob: -5.757437705993652
    3. '<|end|>' → logprob: -5.882437705993652
    4. '                ' → logprob: -8.132437705993652
    5. ' 
' → logprob: -8.257437705993652
    6. '<|end|>' → logprob: -8.882437705993652
    7. ',' → logprob: -9.007437705993652
    8. '           ' → logprob: -9.882437705993652
    9. '```' → logprob: -9.882437705993652
    10. '  
' → logprob: -10.007437705993652

Token 613: ' not' (ID: 625)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0946810245513916
    2. '                ' → logprob: -1.4696810245513916
    3. '<|end|>' → logprob: -1.4696810245513916
    4. '               ' → logprob: -1.9696810245513916
    5. '<|end|>' → logprob: -4.8446807861328125
    6. ' not' → logprob: -5.0946807861328125
    7. ' and' → logprob: -5.2196807861328125
    8. ')' → logprob: -5.3446807861328125
    9. ' but' → logprob: -5.4696807861328125
    10. '...' → logprob: -5.4696807861328125

Token 614: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8076544404029846
    2. ' the' → logprob: -1.6826543807983398
    3. 'i' → logprob: -1.8076543807983398
    4. 'for' → logprob: -3.05765438079834
    5. '<|end|>' → logprob: -3.05765438079834
    6. ' i' → logprob: -3.80765438079834
    7. ' for' → logprob: -4.05765438079834
    8. ' on' → logprob: -4.43265438079834
    9. ' above' → logprob: -5.55765438079834
    10. 'above' → logprob: -5.55765438079834

Token 615: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6047978401184082
    2. 'top' → logprob: -1.9797978401184082
    3. ' new' → logprob: -2.104797840118408
    4. 'current' → logprob: -2.979797840118408
    5. ' ones' → logprob: -3.479797840118408
    6. 'next' → logprob: -4.104797840118408
    7. '#' → logprob: -4.104797840118408
    8. ' current' → logprob: -4.604797840118408
    9. 'above' → logprob: -4.604797840118408
    10. ' next' → logprob: -4.854797840118408

Token 616: ' food' (ID: 4232)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8373540639877319
    2. '_food' → logprob: -1.837354063987732
    3. ' )' → logprob: -2.4623541831970215
    4. ' food' → logprob: -2.7123541831970215
    5. '_token' → logprob: -3.2123541831970215
    6. ' _' → logprob: -3.3373541831970215
    7. '_' → logprob: -3.3373541831970215
    8. ' token' → logprob: -3.5873541831970215
    9. 'token' → logprob: -3.7123541831970215
    10. ' ' → logprob: -3.8373541831970215

Token 617: ' itself' (ID: 8807)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02002626471221447
    2. '                ' → logprob: -4.895026206970215
    3. '<|end|>' → logprob: -5.145026206970215
    4. '                
' → logprob: -5.770026206970215
    5. '<|end|>' → logprob: -7.395026206970215
    6. ' ' → logprob: -7.520026206970215
    7. '              ' → logprob: -7.895026206970215
    8. '                               ' → logprob: -8.395026206970215
    9. '                   ' → logprob: -8.645026206970215
    10. '           ' → logprob: -8.895026206970215

Token 618: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005777930840849876
    2. '                
' → logprob: -5.880777835845947
    3. '                ' → logprob: -6.880777835845947
    4. '<|end|>' → logprob: -6.880777835845947
    5. ' 
' → logprob: -9.255778312683105
    6. ')' → logprob: -9.255778312683105
    7. '<|end|>' → logprob: -9.380778312683105
    8. '           ' → logprob: -9.630778312683105
    9. '              ' → logprob: -9.755778312683105
    10. '                
                
' → logprob: -10.130778312683105

Token 619: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004755496047437191
    2. '                
' → logprob: -5.87975549697876
    3. '<|end|>' → logprob: -7.12975549697876
    4. '                ' → logprob: -7.37975549697876
    5. '              ' → logprob: -9.754755020141602
    6. '                
                
' → logprob: -9.754755020141602
    7. ' 
' → logprob: -9.879755020141602
    8. ' ' → logprob: -10.254755020141602
    9. '<|end|>' → logprob: -10.379755020141602
    10. ' ' → logprob: -10.379755020141602

Token 620: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022759849671274424
    2. '                
' → logprob: -6.8772759437561035
    3. '                ' → logprob: -8.377276420593262
    4. ' if' → logprob: -8.752276420593262
    5. '<|end|>' → logprob: -8.877276420593262
    6. ' ' → logprob: -9.127276420593262
    7. ' ' → logprob: -9.627276420593262
    8. '                   ' → logprob: -10.002276420593262
    9. ' 
' → logprob: -10.002276420593262
    10. ' for' → logprob: -10.252276420593262

Token 621: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002847909927368164
    2. '                
' → logprob: -6.002847671508789
    3. '<|end|>' → logprob: -9.252847671508789
    4. '                
                
' → logprob: -9.627847671508789
    5. '                ' → logprob: -10.127847671508789
    6. '                

' → logprob: -10.502847671508789
    7. '			' → logprob: -10.752847671508789
    8. ' 
' → logprob: -10.877847671508789
    9. '<|end|>' → logprob: -11.002847671508789
    10. '           ' → logprob: -11.502847671508789

Token 622: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.033931635320186615
    2. ' if' → logprob: -4.283931732177734
    3. ' continue' → logprob: -5.283931732177734
    4. 'if' → logprob: -5.908931732177734
    5. 'continue' → logprob: -6.283931732177734
    6. '           ' → logprob: -6.783931732177734
    7. '#' (adapté à ' #') → logprob: -6.783931732177734
    8. ' #' → logprob: -7.033931732177734
    9. ' for' → logprob: -7.033931732177734
    10. 'weight' → logprob: -7.158931732177734

Token 623: ' But' (ID: 3072)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22195221483707428
    2. '#' → logprob: -2.346952199935913
    3. 'if' → logprob: -3.846952199935913
    4. 'continue' → logprob: -4.221952438354492
    5. 'total' → logprob: -4.596952438354492
    6. ' #' → logprob: -4.721952438354492
    7. ' if' → logprob: -4.846952438354492
    8. 'weight' → logprob: -5.221952438354492
    9. 'sum' → logprob: -5.221952438354492
    10. 'new' → logprob: -5.346952438354492

Token 624: ' the' (ID: 290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6803231835365295
    2. ' continue' → logprob: -0.9303231835365295
    3. 'continue' → logprob: -3.5553231239318848
    4. ' the' → logprob: -3.8053231239318848
    5. ' for' → logprob: -4.305323123931885
    6. ' if' → logprob: -4.805323123931885
    7. '                ' → logprob: -5.305323123931885
    8. '<|end|>' → logprob: -5.430323123931885
    9. 'the' → logprob: -5.805323123931885
    10. ' continues' → logprob: -6.055323123931885

Token 625: ' problem' (ID: 4792)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8792470097541809
    2. ' for' → logprob: -1.8792469501495361
    3. '               ' → logprob: -1.8792469501495361
    4. '#' → logprob: -2.504246950149536
    5. 'if' → logprob: -3.004246950149536
    6. ' if' → logprob: -3.379246950149536
    7. ' next' → logprob: -4.004247188568115
    8. ' new' → logprob: -4.254247188568115
    9. ' #' → logprob: -4.504247188568115
    10. 'continue' → logprob: -5.004247188568115

Token 626: ' states' (ID: 9407)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3861937522888184
    2. '               ' → logprob: -1.3861937522888184
    3. ' continues' → logprob: -1.6361937522888184
    4. '<|end|>' → logprob: -2.3861937522888184
    5. ' is' → logprob: -2.5111937522888184
    6. '<|end|>' → logprob: -3.5111937522888184
    7. ')' → logprob: -4.761193752288818
    8. '...' → logprob: -4.886193752288818
    9. '                ' → logprob: -4.886193752288818
    10. ' ' → logprob: -5.011193752288818

Token 627: ' the' (ID: 290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1767309159040451
    2. '<|end|>' → logprob: -3.4267308712005615
    3. ' that' → logprob: -3.5517308712005615
    4. '                ' → logprob: -4.051731109619141
    5. ':' → logprob: -4.426731109619141
    6. ' for' → logprob: -4.551731109619141
    7. '<|end|>' → logprob: -4.801731109619141
    8. ' the' → logprob: -4.926731109619141
    9. ',' → logprob: -5.051731109619141
    10. '#' → logprob: -5.051731109619141

Token 628: ' crushing' (ID: 21287)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8803102374076843
    2. 'for' → logprob: -1.255310297012329
    3. '               ' → logprob: -2.755310297012329
    4. ' for' → logprob: -3.130310297012329
    5. 'cr' → logprob: -3.630310297012329
    6. 'if' → logprob: -3.630310297012329
    7. ' next' → logprob: -4.25531005859375
    8. '           ' → logprob: -4.63031005859375
    9. 'next' → logprob: -4.63031005859375
    10. ' if' → logprob: -4.88031005859375

Token 629: ' condition' (ID: 7060)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9168319702148438
    2. 'weight' → logprob: -1.9168319702148438
    3. ' condition' → logprob: -2.5418319702148438
    4. '   ' → logprob: -2.7918319702148438
    5. ':' → logprob: -2.9168319702148438
    6. ' weight' → logprob: -3.1668319702148438
    7. '           ' → logprob: -3.2918319702148438
    8. '               ' → logprob: -3.4168319702148438
    9. 'constraint' → logprob: -3.4168319702148438
    10. 'weights' → logprob: -3.5418319702148438

Token 630: ' applies' (ID: 28134)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31098833680152893
    2. '               ' → logprob: -1.8109883069992065
    3. '<|end|>' → logprob: -3.685988426208496
    4. ' :' → logprob: -4.685988426208496
    5. ':
' → logprob: -5.060988426208496
    6. '                               ' → logprob: -5.185988426208496
    7. '                ' → logprob: -5.435988426208496
    8. ',' → logprob: -5.435988426208496
    9. '<|end|>' → logprob: -5.435988426208496
    10. ' ' → logprob: -5.560988426208496

Token 631: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7998207211494446
    2. '<|end|>' → logprob: -1.2998206615447998
    3. ' to' → logprob: -2.7998206615448
    4. '               ' → logprob: -3.1748206615448
    5. ' :' → logprob: -3.4248206615448
    6. '<|end|>' → logprob: -3.5498206615448
    7. ' for' → logprob: -4.299820899963379
    8. '                ' → logprob: -4.549820899963379
    9. ' ' → logprob: -4.799820899963379
    10. ',' → logprob: -4.924820899963379

Token 632: ' every' (ID: 1753)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6135582327842712
    2. ' all' → logprob: -1.363558292388916
    3. 'the' → logprob: -2.238558292388916
    4. ' the' → logprob: -3.113558292388916
    5. 'each' → logprob: -3.613558292388916
    6. 'foods' → logprob: -5.113558292388916
    7. ' each' → logprob: -5.238558292388916
    8. 'every' → logprob: -5.488558292388916
    9. ' every' → logprob: -6.363558292388916
    10. 'food' → logprob: -6.613558292388916

Token 633: ' food' (ID: 4232)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.07246991991996765
    2. ' food' → logprob: -2.82246994972229
    3. 'stack' → logprob: -5.947469711303711
    4. '#' → logprob: -6.197469711303711
    5. '   ' → logprob: -6.822469711303711
    6. '```' → logprob: -7.447469711303711
    7. ' ' → logprob: -7.822469711303711
    8. ' stack' → logprob: -7.947469711303711
    9. 'placed' → logprob: -8.197469711303711
    10. '       ' → logprob: -8.197469711303711

Token 634: ' f' (ID: 285)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3650948107242584
    2. '<|end|>' → logprob: -1.490094780921936
    3. ':' → logprob: -3.8650949001312256
    4. '                ' → logprob: -4.2400946617126465
    5. '<|end|>' → logprob: -4.3650946617126465
    6. ',' → logprob: -5.3650946617126465
    7. '       ' → logprob: -5.8650946617126465
    8. '                               ' → logprob: -6.1150946617126465
    9. '...' → logprob: -6.1150946617126465
    10. '           ' → logprob: -6.4900946617126465

Token 635: '_i' (ID: 10853)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.6037243604660034
    2. ')' → logprob: -1.3537243604660034
    3. '_' → logprob: -1.7287243604660034
    4. '_i' → logprob: -5.103724479675293
    5. ' _' → logprob: -6.103724479675293
    6. '[' → logprob: -6.353724479675293
    7. ')_' → logprob: -6.853724479675293
    8. '   ' → logprob: -6.978724479675293
    9. '#' → logprob: -7.353724479675293
    10. ',' → logprob: -7.853724479675293

Token 636: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014630694873631
    2. '<|end|>' → logprob: -5.2646307945251465
    3. '                
' → logprob: -6.0146307945251465
    4. ')' → logprob: -6.6396307945251465
    5. ',' → logprob: -6.7646307945251465
    6. ' 
' → logprob: -7.6396307945251465
    7. '                ' → logprob: -7.6396307945251465
    8. '<|end|>' → logprob: -7.7646307945251465
    9. ':' → logprob: -7.8896307945251465
    10. '                               ' → logprob: -8.264630317687988

Token 637: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3559522032737732
    2. '<|end|>' → logprob: -1.480952262878418
    3. '                ' → logprob: -3.480952262878418
    4. ' ' → logprob: -3.730952262878418
    5. '                               ' → logprob: -5.855952262878418
    6. '                   ' → logprob: -6.230952262878418
    7. '<|end|>' → logprob: -6.355952262878418
    8. '...' → logprob: -6.605952262878418
    9. '           ' → logprob: -6.730952262878418
    10. ' ' → logprob: -6.855952262878418

Token 638: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12398525327444077
    2. '<|end|>' → logprob: -2.7489852905273438
    3. ' if' → logprob: -4.373985290527344
    4. ' continue' → logprob: -4.498985290527344
    5. ' for' → logprob: -5.123985290527344
    6. '#' (adapté à ' #') → logprob: -5.498985290527344
    7. 'continue' → logprob: -5.998985290527344
    8. '           ' → logprob: -6.248985290527344
    9. ' #' → logprob: -6.373985290527344
    10. '                ' → logprob: -6.498985290527344

Token 639: ' s' (ID: 265)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4977686107158661
    2. '<|end|>' → logprob: -1.6227686405181885
    3. '                ' → logprob: -2.4977686405181885
    4. ' ' → logprob: -3.2477686405181885
    5. ' continue' → logprob: -4.372768402099609
    6. ' i' → logprob: -4.747768402099609
    7. ' s' → logprob: -5.497768402099609
    8. '                               ' → logprob: -5.497768402099609
    9. ' ' → logprob: -5.747768402099609
    10. '...' → logprob: -5.872768402099609

Token 640: '_f' (ID: 1337)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6887964606285095
    2. '_' → logprob: -1.1887965202331543
    3. ' _' → logprob: -2.5637965202331543
    4. '[' → logprob: -3.3137965202331543
    5. '[i' → logprob: -3.3137965202331543
    6. ')' → logprob: -4.563796520233154
    7. '_j' → logprob: -4.813796520233154
    8. '   ' → logprob: -5.188796520233154
    9. ')_' → logprob: -6.188796520233154
    10. '[_' → logprob: -6.313796520233154

Token 641: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6464652419090271
    2. '_j' → logprob: -0.7714652419090271
    3. '[' → logprob: -6.146465301513672
    4. '[i' → logprob: -6.396465301513672
    5. '_' → logprob: -6.521465301513672
    6. ')' → logprob: -6.646465301513672
    7. '[_' → logprob: -6.771465301513672
    8. ')_' → logprob: -6.896465301513672
    9. ' _' → logprob: -7.021465301513672
    10. '```' → logprob: -7.021465301513672

Token 642: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.16544784605503082
    2. '>=' → logprob: -2.665447950363159
    3. ')' → logprob: -3.790447950363159
    4. '>' → logprob: -4.54044771194458
    5. '           ' → logprob: -5.16544771194458
    6. ' >' → logprob: -5.16544771194458
    7. '   ' → logprob: -5.29044771194458
    8. '[i' → logprob: -5.41544771194458
    9. '[' → logprob: -5.66544771194458
    10. ']>=' → logprob: -5.66544771194458

Token 643: ' weight' (ID: 6049)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.3520208597183228
    2. ' sum' → logprob: -1.4770208597183228
    3. 'total' → logprob: -1.4770208597183228
    4. 'sum' → logprob: -1.6020208597183228
    5. 'dp' → logprob: -3.102020740509033
    6. ' dp' → logprob: -4.227020740509033
    7. '0' → logprob: -4.477020740509033
    8. 'weights' → logprob: -5.602020740509033
    9. ' weights' → logprob: -6.477020740509033
    10. '(sum' → logprob: -6.602020740509033

Token 644: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 645: ' all' (ID: 722)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -1.5777639150619507
    2. 'foods' → logprob: -1.9527639150619507
    3. ' above' → logprob: -2.2027640342712402
    4. ' the' → logprob: -2.5777640342712402
    5. 'the' → logprob: -2.5777640342712402
    6. ' foods' → logprob: -2.8277640342712402
    7. ' all' → logprob: -2.8277640342712402
    8. 'sum' → logprob: -3.2027640342712402
    9. ' sum' → logprob: -3.2027640342712402
    10. 'all' → logprob: -3.3277640342712402

Token 646: ' foods' (ID: 18747)
  Prédit: ' above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' above' → logprob: -0.8198321461677551
    2. ' foods' → logprob: -1.6948320865631104
    3. 'above' → logprob: -2.3198320865631104
    4. 'foods' → logprob: -2.3198320865631104
    5. ' the' → logprob: -3.0698320865631104
    6. ')' → logprob: -3.6948320865631104
    7. '_food' → logprob: -3.9448320865631104
    8. ' (' → logprob: -4.5698323249816895
    9. 'the' → logprob: -4.6948323249816895
    10. ' of' → logprob: -4.8198323249816895

Token 647: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -1.2704787254333496
    2. ')' → logprob: -1.8954787254333496
    3. '[i' → logprob: -1.8954787254333496
    4. ' above' → logprob: -2.1454787254333496
    5. '<|end|>' → logprob: -3.0204787254333496
    6. '[' → logprob: -3.0204787254333496
    7. '   ' → logprob: -3.1454787254333496
    8. '_ab' → logprob: -3.3954787254333496
    9. '_i' → logprob: -4.02047872543335
    10. '_' → logprob: -4.27047872543335

Token 648: ' it' (ID: 480)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06292789429426193
    2. '<|end|>' → logprob: -3.5629279613494873
    3. ')' → logprob: -4.437927722930908
    4. '                
' → logprob: -4.812927722930908
    5. '<|end|>' → logprob: -6.312927722930908
    6. ' 
' → logprob: -6.437927722930908
    7. '                ' → logprob: -6.812927722930908
    8. ',' → logprob: -7.062927722930908
    9. '                               ' → logprob: -7.437927722930908
    10. '                   ' → logprob: -7.562927722930908

Token 649: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21030941605567932
    2. ':' → logprob: -2.0853095054626465
    3. ')' → logprob: -4.5853095054626465
    4. '<|end|>' → logprob: -4.7103095054626465
    5. '                               ' → logprob: -4.9603095054626465
    6. '                ' → logprob: -4.9603095054626465
    7. '):' → logprob: -4.9603095054626465
    8. ':
' → logprob: -5.5853095054626465
    9. ',' → logprob: -5.7103095054626465
    10. ' :' → logprob: -6.5853095054626465

Token 650: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01411731168627739
    2. '<|end|>' → logprob: -5.014117240905762
    3. ')' → logprob: -6.014117240905762
    4. '                ' → logprob: -6.389117240905762
    5. '                
' → logprob: -7.014117240905762
    6. '<|end|>' → logprob: -8.139117240905762
    7. '                               ' → logprob: -8.139117240905762
    8. ' )' → logprob: -8.389117240905762
    9. '                   ' → logprob: -8.639117240905762
    10. ' 
' → logprob: -8.764117240905762

Token 651: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007452698890119791
    2. '<|end|>' → logprob: -5.257452487945557
    3. '                
' → logprob: -7.132452487945557
    4. '```' → logprob: -7.757452487945557
    5. '<|end|>' → logprob: -8.757452964782715
    6. ' ' → logprob: -9.507452964782715
    7. ',' → logprob: -9.507452964782715
    8. ' 
' → logprob: -9.632452964782715
    9. '                ' → logprob: -9.632452964782715
    10. ' for' → logprob: -9.757452964782715

Token 652: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014396385522559285
    2. '                
' → logprob: -7.626439571380615
    3. '<|end|>' → logprob: -8.376440048217773
    4. '                ' → logprob: -8.501440048217773
    5. '                   ' → logprob: -9.626440048217773
    6. '```' → logprob: -10.001440048217773
    7. ',' → logprob: -10.126440048217773
    8. '                               ' → logprob: -10.376440048217773
    9. ' ' → logprob: -10.376440048217773
    10. '           ' → logprob: -10.376440048217773

Token 653: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10548244416713715
    2. ' if' → logprob: -3.105482339859009
    3. 'if' → logprob: -3.730482339859009
    4. '#' (adapté à ' #') → logprob: -4.480482578277588
    5. ' for' → logprob: -5.355482578277588
    6. '           ' → logprob: -5.730482578277588
    7. 'for' → logprob: -5.730482578277588
    8. ' #' → logprob: -5.855482578277588
    9. 'weight' → logprob: -6.980482578277588
    10. '       ' → logprob: -7.480482578277588

Token 654: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1742057055234909
    2. ' if' → logprob: -3.299205780029297
    3. 'if' → logprob: -4.049205780029297
    4. '#' → logprob: -4.299205780029297
    5. ' s' → logprob: -4.424205780029297
    6. 's' → logprob: -4.424205780029297
    7. '```' → logprob: -4.799205780029297
    8. ' #' → logprob: -5.174205780029297
    9. 'w' → logprob: -5.174205780029297
    10. 'weight' → logprob: -5.299205780029297

Token 655: ' when' (ID: 1261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8970766663551331
    2. '               ' → logprob: -1.0220766067504883
    3. 'for' → logprob: -1.8970766067504883
    4. ' if' → logprob: -3.5220766067504883
    5. ' continue' → logprob: -4.022076606750488
    6. 'if' → logprob: -5.022076606750488
    7. '#' → logprob: -5.147076606750488
    8. 'continue' → logprob: -5.647076606750488
    9. ' #' → logprob: -5.772076606750488
    10. ' new' → logprob: -5.772076606750488

Token 656: ' adding' (ID: 12673)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1885849237442017
    2. ' i' → logprob: -1.6885849237442017
    3. ' adding' → logprob: -2.313584804534912
    4. 'checking' → logprob: -2.563584804534912
    5. 'i' → logprob: -2.688584804534912
    6. ' checking' → logprob: -3.063584804534912
    7. 'for' → logprob: -3.188584804534912
    8. ' for' → logprob: -3.438584804534912
    9. ' the' → logprob: -3.688584804534912
    10. 'adding' → logprob: -3.688584804534912

Token 657: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05391078442335129
    2. 'i' → logprob: -3.553910732269287
    3. ' the' → logprob: -4.553910732269287
    4. 'the' → logprob: -5.553910732269287
    5. '               ' → logprob: -6.053910732269287
    6. ' a' → logprob: -6.053910732269287
    7. '                ' → logprob: -6.303910732269287
    8. ' ' → logprob: -7.678910732269287
    9. ' new' → logprob: -7.928910732269287
    10. ')' → logprob: -8.303911209106445

Token 658: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6080849170684814
    2. ' i' → logprob: -1.9830849170684814
    3. 'i' → logprob: -2.3580849170684814
    4. ' ' → logprob: -2.4830849170684814
    5. '_i' → logprob: -2.9830849170684814
    6. 'new' → logprob: -4.108084678649902
    7. ' food' → logprob: -4.608084678649902
    8. 'food' → logprob: -4.733084678649902
    9. ' space' → logprob: -4.858084678649902
    10. 'space' → logprob: -5.108084678649902

Token 659: ' food' (ID: 4232)
  Prédit: ' food'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' food' → logprob: -0.9160242080688477
    2. '_food' → logprob: -1.6660242080688477
    3. ' _' → logprob: -1.9160242080688477
    4. ' i' → logprob: -2.2910242080688477
    5. 'food' → logprob: -2.7910242080688477
    6. ' token' → logprob: -3.6660242080688477
    7. '_i' → logprob: -4.041024208068848
    8. '_' → logprob: -4.291024208068848
    9. ' ' → logprob: -4.541024208068848
    10. '_token' → logprob: -5.166024208068848

Token 660: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3009009063243866
    2. ' i' → logprob: -2.050900936126709
    3. ',' → logprob: -2.550900936126709
    4. ' ' → logprob: -4.925900936126709
    5. ' to' → logprob: -5.050900936126709
    6. 'on' → logprob: -5.050900936126709
    7. '_i' → logprob: -5.050900936126709
    8. ' at' → logprob: -5.175900936126709
    9. ' ,' → logprob: -5.550900936126709
    10. 'i' → logprob: -5.800900936126709

Token 661: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.4796423017978668
    2. 'top' → logprob: -0.9796422719955444
    3. '_top' → logprob: -5.229642391204834
    4. ' i' → logprob: -9.354641914367676
    5. ' ' → logprob: -10.479641914367676
    6. 'i' → logprob: -10.479641914367676
    7. '	top' → logprob: -10.979641914367676
    8. '[top' → logprob: -11.479641914367676
    9. 'the' → logprob: -12.854641914367676
    10. '   ' → logprob: -12.854641914367676

Token 662: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8064287900924683
    2. ',' → logprob: -1.1814287900924683
    3. ':' → logprob: -1.5564287900924683
    4. '<|end|>' → logprob: -5.056428909301758
    5. '):' → logprob: -5.431428909301758
    6. ')' → logprob: -5.431428909301758
    7. ' ,' → logprob: -5.681428909301758
    8. '<|end|>' → logprob: -5.931428909301758
    9. '                ' → logprob: -6.306428909301758
    10. '           ' → logprob: -6.556428909301758

Token 663: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00425623869523406
    2. '                ' → logprob: -6.129256248474121
    3. '                
' → logprob: -7.629256248474121
    4. '                   ' → logprob: -8.004256248474121
    5. ' ' → logprob: -8.504256248474121
    6. ' if' → logprob: -8.629256248474121
    7. ' ' → logprob: -8.754256248474121
    8. '<|end|>' → logprob: -9.004256248474121
    9. ' 
' → logprob: -9.504256248474121
    10. ' continue' → logprob: -9.879256248474121

Token 664: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011570100672543049
    2. '                ' → logprob: -5.386569976806641
    3. ' ' → logprob: -6.761569976806641
    4. '                
' → logprob: -7.136569976806641
    5. ' continue' → logprob: -7.136569976806641
    6. ' if' → logprob: -7.261569976806641
    7. ' ' → logprob: -7.511569976806641
    8. '                   ' → logprob: -7.636569976806641
    9. ')' → logprob: -8.13656997680664
    10. '           ' → logprob: -8.38656997680664

Token 665: ' The' (ID: 623)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07888824492692947
    2. ' if' → logprob: -3.953888177871704
    3. ' new' → logprob: -4.203888416290283
    4. ' #' → logprob: -4.703888416290283
    5. ' total' → logprob: -4.828888416290283
    6. ' for' → logprob: -5.703888416290283
    7. ' continue' → logprob: -5.953888416290283
    8. '#' → logprob: -6.078888416290283
    9. ' next' → logprob: -6.078888416290283
    10. ' weight' → logprob: -6.453888416290283

Token 666: ' new' (ID: 620)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3359562158584595
    2. ' new' → logprob: -1.7109562158584595
    3. ' above' → logprob: -2.21095609664917
    4. 'above' → logprob: -2.83595609664917
    5. 'for' → logprob: -2.83595609664917
    6. ' for' → logprob: -2.96095609664917
    7. ' #' → logprob: -3.46095609664917
    8. ')' → logprob: -3.46095609664917
    9. 'new' → logprob: -3.46095609664917
    10. 's' → logprob: -4.08595609664917

Token 667: ' food' (ID: 4232)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.08574768155813217
    2. '_' → logprob: -3.335747718811035
    3. '_i' → logprob: -4.835747718811035
    4. '_food' → logprob: -5.085747718811035
    5. '_token' → logprob: -5.210747718811035
    6. ')' → logprob: -5.585747718811035
    7. ' i' → logprob: -5.835747718811035
    8. ' ' → logprob: -5.960747718811035
    9. '```' → logprob: -6.085747718811035
    10. '               ' → logprob: -6.085747718811035

Token 668: ' has' (ID: 853)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2800836563110352
    2. ')' → logprob: -1.6550836563110352
    3. ' ' → logprob: -1.6550836563110352
    4. ' _' → logprob: -2.780083656311035
    5. '_i' → logprob: -2.780083656311035
    6. '[' → logprob: -3.405083656311035
    7. ',' → logprob: -3.405083656311035
    8. ' )' → logprob: -3.530083656311035
    9. ' (' → logprob: -4.530083656311035
    10. '_' → logprob: -4.655083656311035

Token 669: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -1.0579586029052734
    2. ' no' → logprob: -1.6829586029052734
    3. ' to' → logprob: -2.0579586029052734
    4. '0' → logprob: -2.6829586029052734
    5. 'to' → logprob: -2.6829586029052734
    6. 's' → logprob: -3.1829586029052734
    7. 'weight' → logprob: -3.1829586029052734
    8. 'zero' → logprob: -3.3079586029052734
    9. ' zero' → logprob: -3.5579586029052734
    10. ' s' → logprob: -4.182958602905273

Token 670: ' food' (ID: 4232)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -1.0699269771575928
    2. 'weight' → logprob: -1.6949269771575928
    3. ' food' → logprob: -2.3199269771575928
    4. 'food' → logprob: -2.6949269771575928
    5. ' above' → logprob: -3.1949269771575928
    6. ' weights' → logprob: -3.1949269771575928
    7. '_ab' → logprob: -3.3199269771575928
    8. '_weight' → logprob: -3.6949269771575928
    9. 'weights' → logprob: -3.9449269771575928
    10. 'above' → logprob: -3.9449269771575928

Token 671: ' above' (ID: 5151)
  Prédit: ' above'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' above' → logprob: -0.12426703423261642
    2. ' on' → logprob: -3.124267101287842
    3. '_' → logprob: -3.749267101287842
    4. 'above' → logprob: -4.249267101287842
    5. ')' → logprob: -4.874267101287842
    6. ' _' → logprob: -5.124267101287842
    7. ' ' → logprob: -5.499267101287842
    8. 's' → logprob: -5.874267101287842
    9. '_ab' → logprob: -5.874267101287842
    10. '<|end|>' → logprob: -6.124267101287842

Token 672: ' it' (ID: 480)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7456550002098083
    2. '               ' → logprob: -1.3706550598144531
    3. '):' → logprob: -2.745655059814453
    4. ',' → logprob: -2.745655059814453
    5. ':' → logprob: -3.245655059814453
    6. '),' → logprob: -3.745655059814453
    7. '           ' → logprob: -4.245655059814453
    8. '.' → logprob: -4.370655059814453
    9. '_token' → logprob: -4.745655059814453
    10. '```' → logprob: -4.745655059814453

Token 673: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3969154953956604
    2. '               ' → logprob: -2.1469154357910156
    3. '):' → logprob: -2.3969154357910156
    4. '<|end|>' → logprob: -3.0219154357910156
    5. ')' → logprob: -3.8969154357910156
    6. ' :' → logprob: -4.396915435791016
    7. '                               ' → logprob: -4.521915435791016
    8. '<|end|>' → logprob: -5.146915435791016
    9. ',' → logprob: -5.771915435791016
    10. ':
' → logprob: -5.771915435791016

Token 674: ' so' (ID: 813)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.41566261649131775
    2. ' so' → logprob: -1.7906626462936401
    3. '                ' → logprob: -3.0406625270843506
    4. ')' → logprob: -3.1656625270843506
    5. ' ' → logprob: -3.6656625270843506
    6. '                   ' → logprob: -4.66566276550293
    7. '                               ' → logprob: -4.66566276550293
    8. '<|end|>' → logprob: -5.41566276550293
    9. ' continue' → logprob: -5.54066276550293
    10. '                       ' → logprob: -5.91566276550293

Token 675: ' constraint' (ID: 44762)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3275556564331055
    2. ' continue' → logprob: -1.3275556564331055
    3. 'continue' → logprob: -2.4525556564331055
    4. ' pass' → logprob: -2.9525556564331055
    5. ' s' → logprob: -2.9525556564331055
    6. ' #' → logprob: -3.2025556564331055
    7. ' True' → logprob: -3.3275556564331055
    8. 'pass' → logprob: -3.3275556564331055
    9. 'True' → logprob: -3.3275556564331055
    10. '                ' → logprob: -3.7025556564331055

Token 676: ' ok' (ID: 4763)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8971395492553711
    2. ')' → logprob: -1.522139549255371
    3. '               ' → logprob: -2.147139549255371
    4. ' continues' → logprob: -2.522139549255371
    5. '                ' → logprob: -3.647139549255371
    6. ':' → logprob: -4.022139549255371
    7. ' )' → logprob: -4.022139549255371
    8. ' always' → logprob: -4.147139549255371
    9. ' ==' → logprob: -4.272139549255371
    10. '<|end|>' → logprob: -4.647139549255371

Token 677: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3902696371078491
    2. ')' → logprob: -2.3902697563171387
    3. ':' → logprob: -2.8902697563171387
    4. '                ' → logprob: -3.0152697563171387
    5. '<|end|>' → logprob: -3.5152697563171387
    6. '):' → logprob: -3.7652697563171387
    7. ' )' → logprob: -4.015269756317139
    8. ' ' → logprob: -4.765269756317139
    9. '                               ' → logprob: -4.765269756317139
    10. ' :' → logprob: -5.140269756317139

Token 678: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007565810810774565
    2. '                ' → logprob: -5.882565975189209
    3. '<|end|>' → logprob: -6.507565975189209
    4. ' ' → logprob: -7.132565975189209
    5. '                
' → logprob: -7.132565975189209
    6. ')' → logprob: -8.13256549835205
    7. '                   ' → logprob: -8.25756549835205
    8. '           ' → logprob: -8.88256549835205
    9. '              ' → logprob: -9.25756549835205
    10. '<|end|>' → logprob: -9.38256549835205

Token 679: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009437421103939414
    2. '                
' → logprob: -7.750943660736084
    3. '                ' → logprob: -9.000944137573242
    4. '                   ' → logprob: -9.875944137573242
    5. ' ' → logprob: -10.000944137573242
    6. '           ' → logprob: -10.000944137573242
    7. ' ' → logprob: -10.250944137573242
    8. '<|end|>' → logprob: -10.500944137573242
    9. '```' → logprob: -10.750944137573242
    10. '              ' → logprob: -11.000944137573242

Token 680: ' But' (ID: 3072)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022815022617578506
    2. ' if' → logprob: -4.397815227508545
    3. '                
' → logprob: -6.022815227508545
    4. ' new' → logprob: -6.522815227508545
    5. '                ' → logprob: -6.897815227508545
    6. ' 
' → logprob: -6.897815227508545
    7. '                   ' → logprob: -7.522815227508545
    8. '```' → logprob: -7.647815227508545
    9. '           ' → logprob: -8.022814750671387
    10. ' for' → logprob: -8.272814750671387

Token 681: ' we' (ID: 581)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37514859437942505
    2. ' for' → logprob: -1.3751485347747803
    3. 'for' → logprob: -3.2501485347747803
    4. ' the' → logprob: -4.875148773193359
    5. '#' → logprob: -5.250148773193359
    6. ' continue' → logprob: -5.750148773193359
    7. ' #' → logprob: -6.125148773193359
    8. ' ' → logprob: -7.625148773193359
    9. 'continue' → logprob: -7.875148773193359
    10. 'the' → logprob: -8.00014877319336

Token 682: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.1982618123292923
    2. ' must' → logprob: -2.4482617378234863
    3. 'need' → logprob: -3.0732617378234863
    4. 'must' → logprob: -3.6982617378234863
    5. ' continue' → logprob: -4.573261737823486
    6. 'continue' → logprob: -5.698261737823486
    7. '               ' → logprob: -6.073261737823486
    8. ' have' → logprob: -6.198261737823486
    9. ' should' → logprob: -6.823261737823486
    10. 'should' → logprob: -7.448261737823486

Token 683: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.423968642950058
    2. '               ' → logprob: -1.9239686727523804
    3. ' check' → logprob: -2.048968553543091
    4. 'continue' → logprob: -3.548968553543091
    5. '                ' → logprob: -4.04896879196167
    6. '                   ' → logprob: -4.92396879196167
    7. ' continue' → logprob: -5.17396879196167
    8. '           ' → logprob: -6.42396879196167
    9. '              ' → logprob: -6.42396879196167
    10. '#' → logprob: -6.92396879196167

Token 684: ' no' (ID: 860)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19561292231082916
    2. ' if' → logprob: -2.445612907409668
    3. ' that' → logprob: -3.570612907409668
    4. ' for' → logprob: -4.070612907409668
    5. 'for' → logprob: -4.570612907409668
    6. 'that' → logprob: -4.570612907409668
    7. ' the' → logprob: -4.945612907409668
    8. 'if' → logprob: -5.195612907409668
    9. 'the' → logprob: -5.445612907409668
    10. ' ' → logprob: -6.820612907409668

Token 685: ' previously' (ID: 14380)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0023132150527089834
    2. 'w' → logprob: -7.502313137054443
    3. '               ' → logprob: -7.752313137054443
    4. 'b' → logprob: -8.627313613891602
    5. ' t' → logprob: -8.627313613891602
    6. 'r' → logprob: -8.752313613891602
    7. 'n' → logprob: -9.002313613891602
    8. ')' → logprob: -9.377313613891602
    9. 'thing' → logprob: -9.377313613891602
    10. ' ' → logprob: -9.502313613891602

Token 686: ' placed' (ID: 12989)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'food' → logprob: -1.6157742738723755
    2. ' food' → logprob: -1.7407742738723755
    3. 'placed' → logprob: -1.7407742738723755
    4. '               ' → logprob: -1.8657742738723755
    5. ' placed' → logprob: -1.9907742738723755
    6. '_mask' → logprob: -3.365774154663086
    7. '_food' → logprob: -3.865774154663086
    8. ' mask' → logprob: -3.990774154663086
    9. '           ' → logprob: -3.990774154663086
    10. 'mask' → logprob: -4.115774154663086

Token 687: ' food' (ID: 4232)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.7764826416969299
    2. '_food' → logprob: -1.1514825820922852
    3. '               ' → logprob: -2.026482582092285
    4. ' food' → logprob: -3.026482582092285
    5. 'foods' → logprob: -4.276482582092285
    6. '_' → logprob: -5.151482582092285
    7. ' _' → logprob: -5.401482582092285
    8. 'weight' → logprob: -5.901482582092285
    9. '(food' → logprob: -6.276482582092285
    10. 'for' → logprob: -6.401482582092285

Token 688: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5358290672302246
    2. ' above' → logprob: -2.2858290672302246
    3. '               ' → logprob: -2.4108290672302246
    4. 's' → logprob: -2.4108290672302246
    5. '<|end|>' → logprob: -2.5358290672302246
    6. ' ' → logprob: -2.7858290672302246
    7. ' if' → logprob: -3.2858290672302246
    8. ' that' → logprob: -3.7858290672302246
    9. '           ' → logprob: -4.035829067230225
    10. ',' → logprob: -4.035829067230225

Token 689: ' crushed' (ID: 52894)
  Prédit: ' crushed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crushed' → logprob: -0.08050782233476639
    2. 'cr' → logprob: -2.955507755279541
    3. '               ' → logprob: -4.330507755279541
    4. ' violated' → logprob: -5.330507755279541
    5. '                   ' → logprob: -6.330507755279541
    6. '#' → logprob: -6.705507755279541
    7. '           ' → logprob: -6.955507755279541
    8. ' crushing' → logprob: -7.080507755279541
    9. ' cr' → logprob: -7.955507755279541
    10. '                       ' → logprob: -7.955507755279541

Token 690: ' by' (ID: 656)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05634377896785736
    2. ':' → logprob: -3.1813437938690186
    3. '<|end|>' → logprob: -5.9313435554504395
    4. ')' → logprob: -6.0563435554504395
    5. '                ' → logprob: -6.5563435554504395
    6. '):' → logprob: -6.8063435554504395
    7. ',' → logprob: -6.9313435554504395
    8. '                
' → logprob: -7.4313435554504395
    9. ':
' → logprob: -7.6813435554504395
    10. ' :' → logprob: -8.181344032287598

Token 691: ' this' (ID: 495)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1924723386764526
    2. ' i' → logprob: -1.4424723386764526
    3. 'i' → logprob: -1.6924723386764526
    4. ' the' → logprob: -1.6924723386764526
    5. ' new' → logprob: -3.067472457885742
    6. 'new' → logprob: -4.067472457885742
    7. ' ' → logprob: -5.317472457885742
    8. ' adding' → logprob: -5.442472457885742
    9. '               ' → logprob: -5.567472457885742
    10. 'adding' → logprob: -6.067472457885742

Token 692: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3381057381629944
    2. ':' → logprob: -2.7131056785583496
    3. ')' → logprob: -2.9631056785583496
    4. '           ' → logprob: -3.3381056785583496
    5. ' by' → logprob: -4.21310567855835
    6. ',' → logprob: -4.21310567855835
    7. '                ' → logprob: -5.08810567855835
    8. '_i' → logprob: -5.21310567855835
    9. '<|end|>' → logprob: -5.21310567855835
    10. '):' → logprob: -5.33810567855835

Token 693: ' food' (ID: 4232)
  Prédit: '_food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_food' → logprob: -0.3581196665763855
    2. ' food' → logprob: -2.4831197261810303
    3. 'food' → logprob: -2.7331197261810303
    4. '_' → logprob: -2.8581197261810303
    5. ' _' → logprob: -3.6081197261810303
    6. '               ' → logprob: -4.108119487762451
    7. '_weight' → logprob: -4.483119487762451
    8. '_token' → logprob: -4.608119487762451
    9. ')' → logprob: -5.358119487762451
    10. 'token' → logprob: -5.358119487762451

Token 694: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028447283431887627
    2. ':' → logprob: -3.903447389602661
    3. ':
' → logprob: -6.778447151184082
    4. ')' → logprob: -6.903447151184082
    5. ',' → logprob: -7.028447151184082
    6. '<|end|>' → logprob: -7.028447151184082
    7. '                
' → logprob: -7.153447151184082
    8. '                ' → logprob: -7.778447151184082
    9. '                               ' → logprob: -8.403447151184082
    10. '.' → logprob: -8.528447151184082

Token 695: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017179005080834031
    2. '                
' → logprob: -7.376718044281006
    3. '<|end|>' → logprob: -7.376718044281006
    4. '<|end|>' → logprob: -9.751717567443848
    5. '                ' → logprob: -10.001717567443848
    6. '```' → logprob: -10.001717567443848
    7. ')' → logprob: -10.001717567443848
    8. ',' → logprob: -10.251717567443848
    9. '                   ' → logprob: -10.751717567443848
    10. ' ' → logprob: -10.751717567443848

Token 696: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031943509820848703
    2. '                
' → logprob: -6.503194332122803
    3. '<|end|>' → logprob: -7.253194332122803
    4. '                ' → logprob: -8.878194808959961
    5. ',' → logprob: -9.628194808959961
    6. '                   ' → logprob: -9.878194808959961
    7. '           ' → logprob: -9.878194808959961
    8. ' 
' → logprob: -9.878194808959961
    9. ' ' → logprob: -10.003194808959961
    10. ' for' → logprob: -10.003194808959961

Token 697: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010247035970678553
    2. '                
' → logprob: -9.500102043151855
    3. '<|end|>' → logprob: -11.875102043151855
    4. '```' → logprob: -12.375102043151855
    5. '                
                
' → logprob: -13.500102043151855
    6. ' for' → logprob: -13.625102043151855
    7. 'for' → logprob: -13.625102043151855
    8. '                ' → logprob: -13.750102043151855
    9. '           ' → logprob: -13.875102043151855
    10. '#' → logprob: -13.875102043151855

Token 698: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018038490787148476
    2. ' if' → logprob: -4.643038272857666
    3. 'if' → logprob: -5.518038272857666
    4. ' for' → logprob: -7.143038272857666
    5. 'for' → logprob: -7.143038272857666
    6. '#' (adapté à ' #') → logprob: -8.018038749694824
    7. ' new' → logprob: -8.268038749694824
    8. 'next' → logprob: -8.393038749694824
    9. 'weight' → logprob: -8.643038749694824
    10. 'new' → logprob: -8.643038749694824

Token 699: ' Actually' (ID: 50557)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020538395270705223
    2. 'for' → logprob: -5.020538330078125
    3. 'if' → logprob: -5.395538330078125
    4. ' for' → logprob: -5.770538330078125
    5. ' if' → logprob: -6.020538330078125
    6. '#' → logprob: -7.020538330078125
    7. 'continue' → logprob: -7.645538330078125
    8. '       ' → logprob: -8.020538330078125
    9. '           ' → logprob: -8.145538330078125
    10. '```' → logprob: -8.270538330078125

Token 700: ' we' (ID: 581)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2696913778781891
    2. ' for' → logprob: -2.3946914672851562
    3. ' continue' → logprob: -2.8946914672851562
    4. ' if' → logprob: -3.1446914672851562
    5. '                ' → logprob: -4.144691467285156
    6. 'for' → logprob: -5.144691467285156
    7. '<|end|>' → logprob: -5.519691467285156
    8. 'continue' → logprob: -5.769691467285156
    9. ',' → logprob: -6.394691467285156
    10. ' total' → logprob: -6.394691467285156

Token 701: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.8463163375854492
    2. ' must' → logprob: -1.8463163375854492
    3. '               ' → logprob: -1.9713163375854492
    4. ' continue' → logprob: -2.471316337585449
    5. '       ' → logprob: -3.596316337585449
    6. '   ' → logprob: -3.721316337585449
    7. '           ' → logprob: -3.846316337585449
    8. ' have' → logprob: -4.096316337585449
    9. 'continue' → logprob: -4.221316337585449
    10. 'need' → logprob: -4.471316337585449

Token 702: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.09301804006099701
    2. ' check' → logprob: -2.593018054962158
    3. 'continue' → logprob: -5.468018054962158
    4. '           ' → logprob: -5.843018054962158
    5. 'for' → logprob: -6.093018054962158
    6. '               ' → logprob: -6.468018054962158
    7. '       ' → logprob: -6.968018054962158
    8. 're' → logprob: -8.343017578125
    9. 'verify' → logprob: -8.343017578125
    10. 'validate' → logprob: -8.593017578125

Token 703: ' the' (ID: 290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4077177941799164
    2. ' if' → logprob: -1.4077178239822388
    3. ' all' → logprob: -3.532717704772949
    4. ' for' → logprob: -4.032717704772949
    5. 'if' → logprob: -4.532717704772949
    6. 'for' → logprob: -4.782717704772949
    7. ' that' → logprob: -5.157717704772949
    8. '           ' → logprob: -5.407717704772949
    9. 'all' → logprob: -5.407717704772949
    10. '                   ' → logprob: -6.032717704772949

Token 704: ' dp' (ID: 21546)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46372824907302856
    2. '#' → logprob: -2.088728189468384
    3. 'for' → logprob: -2.463728189468384
    4. '           ' → logprob: -3.838728189468384
    5. ' for' → logprob: -3.838728189468384
    6. ' new' → logprob: -4.213728427886963
    7. 'new' → logprob: -4.213728427886963
    8. 'weights' → logprob: -4.588728427886963
    9. 'below' → logprob: -4.838728427886963
    10. ' all' → logprob: -4.963728427886963

Token 705: ' mask' (ID: 10910)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4012988805770874
    2. ' ' → logprob: -1.6512988805770874
    3. '<|end|>' → logprob: -1.9012988805770874
    4. ')' → logprob: -2.276298999786377
    5. '[' → logprob: -2.901298999786377
    6. ' :' → logprob: -3.401298999786377
    7. '<|end|>' → logprob: -3.901298999786377
    8. '_' → logprob: -4.276298999786377
    9. ',' → logprob: -4.276298999786377
    10. '   ' → logprob: -4.401298999786377

Token 706: ' represents' (ID: 18627)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23055830597877502
    2. '               ' → logprob: -2.480558395385742
    3. '[i' → logprob: -4.230558395385742
    4. ' :' → logprob: -4.230558395385742
    5. '[' → logprob: -4.480558395385742
    6. ':
' → logprob: -4.605558395385742
    7. ')' → logprob: -4.980558395385742
    8. '           ' → logprob: -4.980558395385742
    9. '                ' → logprob: -5.480558395385742
    10. '                               ' → logprob: -5.480558395385742

Token 707: ' stack' (ID: 10825)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1770349740982056
    2. ' that' → logprob: -1.1770349740982056
    3. '<|end|>' → logprob: -2.302034854888916
    4. ' if' → logprob: -2.677034854888916
    5. ' all' → logprob: -2.927034854888916
    6. 'the' → logprob: -3.177034854888916
    7. ')' → logprob: -3.177034854888916
    8. ' whether' → logprob: -4.177034854888916
    9. 'that' → logprob: -4.302034854888916
    10. '           ' → logprob: -5.552034854888916

Token 708: ' bottom' (ID: 8725)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3028072118759155
    2. '[' → logprob: -1.4278072118759155
    3. ')' → logprob: -2.177807331085205
    4. '[i' → logprob: -2.802807331085205
    5. '               ' → logprob: -2.802807331085205
    6. '<|end|>' → logprob: -3.177807331085205
    7. ' ' → logprob: -3.927807331085205
    8. '   ' → logprob: -4.052807331085205
    9. ' :' → logprob: -4.177807331085205
    10. '       ' → logprob: -4.552807331085205

Token 709: '->' (ID: 609)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6867864727973938
    2. ' +' → logprob: -2.186786413192749
    3. '+' → logprob: -2.436786413192749
    4. ')' → logprob: -2.936786413192749
    5. ' >>' → logprob: -3.061786413192749
    6. '           ' → logprob: -3.311786413192749
    7. '                ' → logprob: -3.561786413192749
    8. ' |' → logprob: -4.561786651611328
    9. ' <<' → logprob: -4.561786651611328
    10. '[i' → logprob: -4.686786651611328

Token 710: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.03007603995501995
    2. ' top' → logprob: -3.530076026916504
    3. 'up' → logprob: -9.155076026916504
    4. '_top' → logprob: -9.530076026916504
    5. '```' → logprob: -10.530076026916504
    6. '1' → logprob: -10.905076026916504
    7. '(top' → logprob: -11.030076026916504
    8. 'to' → logprob: -11.030076026916504
    9. ' ' → logprob: -11.655076026916504
    10. '[top' → logprob: -11.905076026916504

Token 711: ' order' (ID: 2569)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29375791549682617
    2. ':' → logprob: -2.168757915496826
    3. '<|end|>' → logprob: -2.793757915496826
    4. '                ' → logprob: -4.168757915496826
    5. '                               ' → logprob: -4.418757915496826
    6. ')' → logprob: -4.793757915496826
    7. '<|end|>' → logprob: -4.918757915496826
    8. '):' → logprob: -5.793757915496826
    9. '       ' → logprob: -5.918757915496826
    10. ' ' → logprob: -5.918757915496826

Token 712: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4783470332622528
    2. ':' → logprob: -1.6033470630645752
    3. '<|end|>' → logprob: -2.603347063064575
    4. '       ' → logprob: -3.978347063064575
    5. '                ' → logprob: -4.478346824645996
    6. ')' → logprob: -4.478346824645996
    7. '<|end|>' → logprob: -4.728346824645996
    8. '                               ' → logprob: -4.728346824645996
    9. ',' → logprob: -4.978346824645996
    10. '):' → logprob: -5.228346824645996

Token 713: ' and' (ID: 326)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -1.0297092199325562
    2. '               ' → logprob: -1.1547092199325562
    3. '<|end|>' → logprob: -2.7797093391418457
    4. ')' → logprob: -3.1547093391418457
    5. '                               ' → logprob: -3.2797093391418457
    6. '                                ' → logprob: -3.9047093391418457
    7. ' ' → logprob: -4.029709339141846
    8. ' )' → logprob: -4.029709339141846
    9. '                                        ' → logprob: -4.279709339141846
    10. ' 
' → logprob: -4.404709339141846

Token 714: ' that' (ID: 484)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3261791169643402
    2. ' the' → logprob: -2.451179027557373
    3. ' for' → logprob: -2.451179027557373
    4. '#' → logprob: -3.576179027557373
    5. 'the' → logprob: -3.826179027557373
    6. 'for' → logprob: -4.451179027557373
    7. '<|end|>' → logprob: -4.826179027557373
    8. ' that' → logprob: -4.951179027557373
    9. '```' → logprob: -5.201179027557373
    10. ' if' → logprob: -5.701179027557373

Token 715: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1433100700378418
    2. '               ' → logprob: -1.2683100700378418
    3. ' the' → logprob: -1.8933100700378418
    4. 'for' → logprob: -2.018310070037842
    5. ' all' → logprob: -2.768310070037842
    6. 'the' → logprob: -3.518310070037842
    7. '                   ' → logprob: -4.768310070037842
    8. 'all' → logprob: -6.268310070037842
    9. '#' → logprob: -6.393310070037842
    10. '           ' → logprob: -6.643310070037842

Token 716: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.249092936515808
    2. ' j' → logprob: -1.499092936515808
    3. 'all' → logprob: -1.624092936515808
    4. 'j' → logprob: -2.2490930557250977
    5. ' the' → logprob: -3.4990930557250977
    6. '   ' → logprob: -3.4990930557250977
    7. 'each' → logprob: -3.7490930557250977
    8. 'the' → logprob: -3.8740930557250977
    9. ' each' → logprob: -4.124093055725098
    10. 'mask' → logprob: -4.874093055725098

Token 717: ' foods' (ID: 18747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6875321865081787
    2. '               ' → logprob: -2.0625321865081787
    3. 'foods' → logprob: -2.0625321865081787
    4. ' j' → logprob: -2.1875321865081787
    5. '           ' → logprob: -2.6875321865081787
    6. 'mask' → logprob: -3.3125321865081787
    7. '_mask' → logprob: -3.4375321865081787
    8. 'j' → logprob: -3.5625321865081787
    9. ' previous' → logprob: -4.312532424926758
    10. 'prev' → logprob: -4.312532424926758

Token 718: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7609898447990417
    2. '<|end|>' → logprob: -2.6359899044036865
    3. '[i' → logprob: -2.7609899044036865
    4. ' in' → logprob: -2.8859899044036865
    5. '               ' → logprob: -2.8859899044036865
    6. ',' → logprob: -3.1359899044036865
    7. ')' → logprob: -3.6359899044036865
    8. '[' → logprob: -4.010989665985107
    9. '<|end|>' → logprob: -4.135989665985107
    10. ' if' → logprob: -4.510989665985107

Token 719: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 720: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 721: ' s' (ID: 265)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6831704378128052
    2. ' the' → logprob: -2.0581703186035156
    3. ' for' → logprob: -2.1831703186035156
    4. '#' → logprob: -2.8081703186035156
    5. '<|end|>' → logprob: -3.1831703186035156
    6. ' if' → logprob: -3.4331703186035156
    7. ' #' → logprob: -3.9331703186035156
    8. 'the' → logprob: -4.183170318603516
    9. 'for' → logprob: -4.308170318603516
    10. ' all' → logprob: -4.808170318603516

Token 722: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.05214330554008484
    2. '_' → logprob: -3.1771433353424072
    3. '_i' → logprob: -5.052143096923828
    4. 'f' → logprob: -7.427143096923828
    5. 'for' → logprob: -7.802143096923828
    6. ' _' → logprob: -8.427143096923828
    7. '_j' → logprob: -8.927143096923828
    8. '_all' → logprob: -9.052143096923828
    9. '           ' → logprob: -9.302143096923828
    10. 'the' → logprob: -9.302143096923828

Token 723: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.03166535869240761
    2. '_' → logprob: -3.656665325164795
    3. '_j' → logprob: -5.906665325164795
    4. '_mask' → logprob: -6.531665325164795
    5. '[' → logprob: -8.656665802001953
    6. '"_' → logprob: -8.656665802001953
    7. '[i' → logprob: -8.906665802001953
    8. '[_' → logprob: -9.156665802001953
    9. ''_' → logprob: -9.406665802001953
    10. '_f' → logprob: -9.406665802001953

Token 724: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6152666807174683
    2. '>=' → logprob: -0.9902666807174683
    3. ')>=' → logprob: -4.115266799926758
    4. ')' → logprob: -4.115266799926758
    5. ']>=' → logprob: -4.490266799926758
    6. '<|end|>' → logprob: -4.740266799926758
    7. '[' → logprob: -4.865266799926758
    8. 's' → logprob: -5.990266799926758
    9. ' must' → logprob: -5.990266799926758
    10. '>' → logprob: -5.990266799926758

Token 725: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.31769415736198425
    2. ' sum' → logprob: -1.9426941871643066
    3. 'total' → logprob: -2.5676941871643066
    4. 'sum' → logprob: -3.5676941871643066
    5. ' weights' → logprob: -5.692694187164307
    6. ' dp' → logprob: -5.817694187164307
    7. '0' → logprob: -5.817694187164307
    8. ' (' → logprob: -5.817694187164307
    9. '(total' → logprob: -5.942694187164307
    10. ' weight' → logprob: -6.692694187164307

Token 726: ' weight' (ID: 6049)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0553902387619019
    2. ' _' → logprob: -1.0553902387619019
    3. '_weight' → logprob: -1.5553902387619019
    4. '_weights' → logprob: -2.8053903579711914
    5. '_ab' → logprob: -3.6803903579711914
    6. '_w' → logprob: -5.930390357971191
    7. '_mask' → logprob: -6.430390357971191
    8. ' +' → logprob: -7.805390357971191
    9. ')' → logprob: -7.930390357971191
    10. ' `_' → logprob: -8.430390357971191

Token 727: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 728: ' foods' (ID: 18747)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' → logprob: -0.2398785799741745
    2. ' foods' → logprob: -2.4898786544799805
    3. ' all' → logprob: -3.6148786544799805
    4. ' the' → logprob: -3.8648786544799805
    5. 'all' → logprob: -3.8648786544799805
    6. 'the' → logprob: -3.9898786544799805
    7. 'above' → logprob: -4.1148786544799805
    8. ' above' → logprob: -4.9898786544799805
    9. '```' → logprob: -5.6148786544799805
    10. '   ' → logprob: -6.4898786544799805

Token 729: ' above' (ID: 5151)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.34802237153053284
    2. 'above' → logprob: -2.2230224609375
    3. '_' → logprob: -2.9730224609375
    4. '[' → logprob: -3.0980224609375
    5. ' above' → logprob: -3.2230224609375
    6. '[i' → logprob: -4.5980224609375
    7. ')' → logprob: -4.9730224609375
    8. ' +' → logprob: -5.0980224609375
    9. ' _' → logprob: -5.3480224609375
    10. '               ' → logprob: -5.5980224609375

Token 730: ' it' (ID: 480)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29891514778137207
    2. '               ' → logprob: -2.423915147781372
    3. '<|end|>' → logprob: -2.548915147781372
    4. ' :' → logprob: -4.298914909362793
    5. '):' → logprob: -4.423914909362793
    6. ')' → logprob: -4.548914909362793
    7. '<|end|>' → logprob: -4.673914909362793
    8. '       ' → logprob: -4.798914909362793
    9. '                               ' → logprob: -5.423914909362793
    10. '                ' → logprob: -5.798914909362793

Token 731: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1899719387292862
    2. ':' → logprob: -2.189971923828125
    3. '<|end|>' → logprob: -4.189971923828125
    4. '       ' → logprob: -4.439971923828125
    5. ')' → logprob: -5.064971923828125
    6. ',' → logprob: -5.189971923828125
    7. '<|end|>' → logprob: -5.939971923828125
    8. '):' → logprob: -6.064971923828125
    9. '                ' → logprob: -6.189971923828125
    10. '           ' → logprob: -6.314971923828125

Token 732: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028585389256477356
    2. '<|end|>' → logprob: -3.903585433959961
    3. ')' → logprob: -6.153585433959961
    4. '                ' → logprob: -6.778585433959961
    5. '<|end|>' → logprob: -6.778585433959961
    6. '                
' → logprob: -7.903585433959961
    7. '                   ' → logprob: -7.903585433959961
    8. '           ' → logprob: -8.028585433959961
    9. '                               ' → logprob: -8.153585433959961
    10. ' ' → logprob: -8.153585433959961

Token 733: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004472370259463787
    2. '<|end|>' → logprob: -6.004472255706787
    3. '                
' → logprob: -7.129472255706787
    4. '<|end|>' → logprob: -8.379472732543945
    5. ' 
' → logprob: -9.129472732543945
    6. ' if' → logprob: -9.254472732543945
    7. ',' → logprob: -9.379472732543945
    8. ' for' → logprob: -9.629472732543945
    9. '                   ' → logprob: -9.754472732543945
    10. ' ' → logprob: -9.754472732543945

Token 734: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005671726074069738
    2. '                
' → logprob: -6.005671501159668
    3. '                ' → logprob: -7.005671501159668
    4. ' 
' → logprob: -7.505671501159668
    5. ' if' → logprob: -8.380671501159668
    6. '<|end|>' → logprob: -8.505671501159668
    7. '                   ' → logprob: -8.630671501159668
    8. ' continue' → logprob: -8.880671501159668
    9. ',' → logprob: -9.005671501159668
    10. '           ' → logprob: -9.130671501159668

Token 735: ' after' (ID: 1934)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8109340071678162
    2. ' if' → logprob: -1.310934066772461
    3. ' continue' → logprob: -1.935934066772461
    4. ' total' → logprob: -3.185934066772461
    5. ' for' → logprob: -3.935934066772461
    6. 'continue' → logprob: -4.185934066772461
    7. '           ' → logprob: -4.310934066772461
    8. ' all' → logprob: -4.560934066772461
    9. '                   ' → logprob: -5.310934066772461
    10. '       ' → logprob: -5.310934066772461

Token 736: ' adding' (ID: 12673)
  Prédit: 'adding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adding' → logprob: -0.19619277119636536
    2. ' adding' → logprob: -1.946192741394043
    3. 'app' → logprob: -4.446192741394043
    4. '           ' → logprob: -5.196192741394043
    5. '               ' → logprob: -5.196192741394043
    6. 'checking' → logprob: -5.946192741394043
    7. '   ' → logprob: -6.196192741394043
    8. 'placing' → logprob: -6.196192741394043
    9. 'new' → logprob: -6.946192741394043
    10. ' app' → logprob: -7.071192741394043

Token 737: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11721272766590118
    2. 'i' → logprob: -2.3672127723693848
    3. '_i' → logprob: -5.242212772369385
    4. ' _' → logprob: -5.367212772369385
    5. ' ' → logprob: -6.492212772369385
    6. '_' → logprob: -6.742212772369385
    7. '   ' → logprob: -6.742212772369385
    8. '[i' → logprob: -7.367212772369385
    9. ')' → logprob: -7.617212772369385
    10. '`' → logprob: -7.867212772369385

Token 738: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7066340446472168
    2. '):' → logprob: -2.081634044647217
    3. '):
' → logprob: -2.206634044647217
    4. '_mask' → logprob: -2.456634044647217
    5. ':
' → logprob: -2.456634044647217
    6. '               ' → logprob: -2.956634044647217
    7. ')' → logprob: -4.456634044647217
    8. '_' → logprob: -4.956634044647217
    9. '           ' → logprob: -5.081634044647217
    10. ',' → logprob: -5.456634044647217

Token 739: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.7964981198310852
    2. 'top' → logprob: -0.7964981198310852
    3. 'mask' → logprob: -3.5464980602264404
    4. '_top' → logprob: -3.5464980602264404
    5. 'the' → logprob: -4.4214982986450195
    6. ' mask' → logprob: -4.5464982986450195
    7. '_mask' → logprob: -4.6714982986450195
    8. ' the' → logprob: -5.0464982986450195
    9. ' i' → logprob: -8.29649829864502
    10. '_' → logprob: -8.29649829864502

Token 740: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5100091099739075
    2. ':' → logprob: -1.2600090503692627
    3. ',' → logprob: -2.8850090503692627
    4. ':
' → logprob: -3.6350090503692627
    5. '):' → logprob: -4.385009288787842
    6. '):
' → logprob: -4.885009288787842
    7. '           ' → logprob: -5.010009288787842
    8. '                   ' → logprob: -6.635009288787842
    9. ' =' → logprob: -6.635009288787842
    10. ',
' → logprob: -6.760009288787842

Token 741: ' the' (ID: 290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6700311303138733
    2. ' new' → logprob: -1.4200310707092285
    3. 'new' → logprob: -2.6700310707092285
    4. ' total' → logprob: -3.0450310707092285
    5. ' if' → logprob: -3.4200310707092285
    6. '#' → logprob: -3.7950310707092285
    7. 'total' → logprob: -3.9200310707092285
    8. ' all' → logprob: -4.2950310707092285
    9. '           ' → logprob: -4.7950310707092285
    10. 'if' → logprob: -5.0450310707092285

Token 742: ' order' (ID: 2569)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5162882208824158
    2. ' next' → logprob: -1.0162882804870605
    3. ' total' → logprob: -3.7662882804870605
    4. ' if' → logprob: -5.6412882804870605
    5. ' for' → logprob: -5.7662882804870605
    6. 'new' → logprob: -6.1412882804870605
    7. ' previous' → logprob: -7.0162882804870605
    8. ' weights' → logprob: -7.0162882804870605
    9. 'next' → logprob: -7.0162882804870605
    10. ')' → logprob: -7.2662882804870605

Token 743: ' is' (ID: 382)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07056549936532974
    2. '+' → logprob: -3.5705654621124268
    3. '               ' → logprob: -4.320565700531006
    4. ' =' → logprob: -4.820565700531006
    5. '.append' → logprob: -4.820565700531006
    6. '           ' → logprob: -6.195565700531006
    7. '_' → logprob: -6.570565700531006
    8. '_new' → logprob: -6.945565700531006
    9. '                   ' → logprob: -7.195565700531006
    10. ')' → logprob: -7.195565700531006

Token 744: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.2843138575553894
    2. 'order' → logprob: -1.6593139171600342
    3. ' +' → logprob: -2.909313917160034
    4. '+' → logprob: -6.409313678741455
    5. '           ' → logprob: -7.784313678741455
    6. '               ' → logprob: -8.159314155578613
    7. '(order' → logprob: -9.534314155578613
    8. '```' → logprob: -10.034314155578613
    9. '       ' → logprob: -10.284314155578613
    10. '[' → logprob: -10.284314155578613

Token 745: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07004313915967941
    2. '+' → logprob: -2.6950430870056152
    3. '+[' → logprob: -9.695043563842773
    4. '               ' → logprob: -11.570043563842773
    5. '           ' → logprob: -11.570043563842773
    6. '                   ' → logprob: -11.695043563842773
    7. '＋' → logprob: -12.820043563842773
    8. '```' → logprob: -13.195043563842773
    9. '                ' → logprob: -13.445043563842773
    10. '            ' → logprob: -13.445043563842773

Token 746: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00038717821007594466
    2. ' [' → logprob: -8.500387191772461
    3. '[f' → logprob: -9.000387191772461
    4. '[' → logprob: -9.750387191772461
    5. '[int' → logprob: -14.875387191772461
    6. '[first' → logprob: -15.625387191772461
    7. '[index' → logprob: -15.750387191772461
    8. '[I' → logprob: -15.750387191772461
    9. '[str' → logprob: -15.875387191772461
    10. '[id' → logprob: -16.00038719177246

Token 747: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002203547628596425
    2. ' i' → logprob: -6.127203464508057
    3. ''i' → logprob: -11.877203941345215
    4. '   ' → logprob: -12.627203941345215
    5. '`' → logprob: -13.002203941345215
    6. ''' → logprob: -13.377203941345215
    7. '[i' → logprob: -13.752203941345215
    8. '(i' → logprob: -14.252203941345215
    9. ' ' → logprob: -14.627203941345215
    10. '     ' → logprob: -15.127203941345215

Token 748: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002736138121690601
    2. '],' → logprob: -9.250273704528809
    3. '[i' → logprob: -9.375273704528809
    4. ' ]' → logprob: -10.375273704528809
    5. ']
' → logprob: -11.000273704528809
    6. '               ' → logprob: -11.125273704528809
    7. '[' → logprob: -12.000273704528809
    8. '].' → logprob: -12.000273704528809
    9. '`]' → logprob: -12.500273704528809
    10. '])' → logprob: -13.250273704528809

Token 749: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016904157819226384
    2. '                
' → logprob: -7.62669038772583
    3. '<|end|>' → logprob: -7.87669038772583
    4. ')' → logprob: -9.001690864562988
    5. '                   ' → logprob: -9.501690864562988
    6. '                ' → logprob: -9.501690864562988
    7. ' ' → logprob: -9.626690864562988
    8. '           ' → logprob: -9.751690864562988
    9. '<|end|>' → logprob: -9.876690864562988
    10. ',' → logprob: -10.126690864562988

Token 750: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002661266131326556
    2. '                
' → logprob: -6.252661228179932
    3. ' 
' → logprob: -8.62766170501709
    4. ' if' → logprob: -8.62766170501709
    5. '                ' → logprob: -9.75266170501709
    6. '           ' → logprob: -10.00266170501709
    7. '                   ' → logprob: -10.00266170501709
    8. '<|end|>' → logprob: -10.25266170501709
    9. '  
' → logprob: -11.12766170501709
    10. ' ' → logprob: -11.12766170501709

Token 751: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00104305159766227
    2. '                
' → logprob: -7.37604284286499
    3. '           ' → logprob: -8.876043319702148
    4. '<|end|>' → logprob: -9.501043319702148
    5. '                ' → logprob: -10.001043319702148
    6. '                   ' → logprob: -10.376043319702148
    7. ' 
' → logprob: -10.376043319702148
    8. '<|end|>' → logprob: -11.501043319702148
    9. '              ' → logprob: -11.751043319702148
    10. '```' → logprob: -11.751043319702148

Token 752: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03550044074654579
    2. '           ' → logprob: -3.7855005264282227
    3. '       ' → logprob: -5.035500526428223
    4. ' if' → logprob: -5.910500526428223
    5. ' total' → logprob: -7.535500526428223
    6. '                
' → logprob: -8.035500526428223
    7. 'total' → logprob: -8.285500526428223
    8. 'if' → logprob: -8.285500526428223
    9. '#' (adapté à ' #') → logprob: -8.410500526428223
    10. ' for' → logprob: -8.535500526428223

Token 753: ' For' (ID: 2214)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23152700066566467
    2. 'total' → logprob: -3.106527090072632
    3. 'if' → logprob: -3.231527090072632
    4. '#' → logprob: -3.356527090072632
    5. ' if' → logprob: -3.856527090072632
    6. ' total' → logprob: -4.356526851654053
    7. 'valid' → logprob: -4.731526851654053
    8. 'for' → logprob: -4.856526851654053
    9. 'sum' → logprob: -4.981526851654053
    10. ' can' → logprob: -5.481526851654053

Token 754: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1702340841293335
    2. ' j' → logprob: -2.045234203338623
    3. 'i' → logprob: -3.920234203338623
    4. ' i' → logprob: -6.170234203338623
    5. 'the' → logprob: -7.045234203338623
    6. 'food' → logprob: -7.545234203338623
    7. 'all' → logprob: -7.920234203338623
    8. 'new' → logprob: -8.170233726501465
    9. ' all' → logprob: -8.295233726501465
    10. ' the' → logprob: -8.295233726501465

Token 755: ' candidate' (ID: 17098)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.14139793813228607
    2. 'i' → logprob: -3.1413979530334473
    3. 'n' → logprob: -4.016397953033447
    4. 'def' → logprob: -4.141397953033447
    5. '_i' → logprob: -4.641397953033447
    6. 'l' → logprob: -5.016397953033447
    7. '       ' → logprob: -5.641397953033447
    8. '           ' → logprob: -5.766397953033447
    9. '_' → logprob: -5.766397953033447
    10. 'd' → logprob: -6.016397953033447

Token 756: ' new' (ID: 620)
  Prédit: ' food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' food' → logprob: -0.5430933833122253
    2. ' i' → logprob: -2.16809344291687
    3. 'food' → logprob: -2.29309344291687
    4. '_food' → logprob: -2.54309344291687
    5. '               ' → logprob: -3.91809344291687
    6. ' new' → logprob: -4.043093204498291
    7. ' token' → logprob: -4.918093204498291
    8. '_' → logprob: -4.918093204498291
    9. '_i' → logprob: -5.043093204498291
    10. '           ' → logprob: -5.293093204498291

Token 757: ' order' (ID: 2569)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.0624452829360962
    2. '_food' → logprob: -1.6874452829360962
    3. '_' → logprob: -1.9374452829360962
    4. '_i' → logprob: -2.0624451637268066
    5. ' i' → logprob: -2.5624451637268066
    6. 'food' → logprob: -3.4374451637268066
    7. '_mask' → logprob: -3.4374451637268066
    8. ' food' → logprob: -4.437445163726807
    9. 'i' → logprob: -4.437445163726807
    10. '_token' → logprob: -5.562445163726807

Token 758: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.238420769572258
    2. ' =' → logprob: -2.2384207248687744
    3. '               ' → logprob: -3.1134207248687744
    4. '           ' → logprob: -4.3634209632873535
    5. ':' → logprob: -4.7384209632873535
    6. '                   ' → logprob: -4.8634209632873535
    7. '[i' → logprob: -4.8634209632873535
    8. '+' → logprob: -5.2384209632873535
    9. ' +=' → logprob: -5.3634209632873535
    10. '[' → logprob: -5.7384209632873535

Token 759: ' verify' (ID: 14866)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5260921716690063
    2. ' total' → logprob: -1.1510921716690063
    3. ' if' → logprob: -3.401092052459717
    4. 'total' → logprob: -4.276092052459717
    5. '                   ' → logprob: -4.651092052459717
    6. ' new' → logprob: -5.151092052459717
    7. ' for' → logprob: -5.276092052459717
    8. ' sum' → logprob: -5.776092052459717
    9. ' #' → logprob: -6.151092052459717
    10. '#' → logprob: -6.276092052459717

Token 760: ' the' (ID: 290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26064395904541016
    2. ' all' → logprob: -2.63564395904541
    3. 'for' → logprob: -2.88564395904541
    4. ' for' → logprob: -3.51064395904541
    5. ' if' → logprob: -3.63564395904541
    6. 'all' → logprob: -4.51064395904541
    7. 'if' → logprob: -4.63564395904541
    8. '                   ' → logprob: -4.88564395904541
    9. '           ' → logprob: -5.26064395904541
    10. ' that' → logprob: -5.63564395904541

Token 761: ' crushing' (ID: 21287)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -1.460135817527771
    2. '#' → logprob: -2.2101359367370605
    3. ' crushing' → logprob: -2.4601359367370605
    4. 'all' → logprob: -2.7101359367370605
    5. '           ' → logprob: -2.9601359367370605
    6. ' new' → logprob: -3.3351359367370605
    7. ' crushed' → logprob: -3.3351359367370605
    8. ' crush' → logprob: -3.4601359367370605
    9. 'new' → logprob: -3.5851359367370605
    10. ' all' → logprob: -3.5851359367370605

Token 762: ' condition' (ID: 7060)
  Prédit: ' condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.9338522553443909
    2. '           ' → logprob: -1.683852195739746
    3. '_condition' → logprob: -1.683852195739746
    4. '               ' → logprob: -2.183852195739746
    5. 'condition' → logprob: -3.808852195739746
    6. '       ' → logprob: -3.933852195739746
    7. '_weight' → logprob: -4.183852195739746
    8. '                   ' → logprob: -4.683852195739746
    9. '_' → logprob: -5.058852195739746
    10. '_constraint' → logprob: -5.058852195739746

Token 763: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00733802979812026
    2. '       ' → logprob: -6.382338047027588
    3. '<|end|>' → logprob: -6.882338047027588
    4. '           ' → logprob: -7.132338047027588
    5. ',' → logprob: -7.132338047027588
    6. '                
' → logprob: -7.632338047027588
    7. ' if' → logprob: -8.25733757019043
    8. ':' → logprob: -8.38233757019043
    9. '<|end|>' → logprob: -8.38233757019043
    10. '                ' → logprob: -8.63233757019043

Token 764: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020938136731274426
    2. ' if' → logprob: -9.87520980834961
    3. '           ' → logprob: -10.25020980834961
    4. '```' → logprob: -10.25020980834961
    5. '                   ' → logprob: -10.62520980834961
    6. ' for' → logprob: -11.00020980834961
    7. '                
' → logprob: -11.25020980834961
    8. 'for' → logprob: -12.12520980834961
    9. '<|end|>' → logprob: -12.12520980834961
    10. '                ' → logprob: -12.62520980834961

Token 765: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016179708763957024
    2. ' for' → logprob: -5.76617956161499
    3. 'for' → logprob: -5.89117956161499
    4. 'valid' → logprob: -6.01617956161499
    5. ' if' → logprob: -6.14117956161499
    6. ' valid' → logprob: -6.89117956161499
    7. 'if' → logprob: -7.01617956161499
    8. 'total' → logprob: -7.01617956161499
    9. ' total' → logprob: -7.64117956161499
    10. 'check' → logprob: -8.141180038452148

Token 766: ' For' (ID: 2214)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13695074617862701
    2. 'valid' → logprob: -2.386950731277466
    3. ' valid' → logprob: -4.636950969696045
    4. 'for' → logprob: -4.761950969696045
    5. '           ' → logprob: -5.636950969696045
    6. 'check' → logprob: -5.886950969696045
    7. 'total' → logprob: -6.511950969696045
    8. 'if' → logprob: -6.761950969696045
    9. ' for' → logprob: -6.886950969696045
    10. 'all' → logprob: -6.886950969696045

Token 767: ' each' (ID: 2454)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.32279229164123535
    2. ' j' → logprob: -2.0727922916412354
    3. 'all' → logprob: -3.0727922916412354
    4. '   ' → logprob: -3.1977922916412354
    5. ' all' → logprob: -3.4477922916412354
    6. 'k' → logprob: -4.322792053222656
    7. ' ' → logprob: -5.572792053222656
    8. 'new' → logprob: -5.822792053222656
    9. ' new' → logprob: -5.947792053222656
    10. 'idx' → logprob: -6.947792053222656

Token 768: ' food' (ID: 4232)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5108518600463867
    2. 'j' → logprob: -1.5108518600463867
    3. ' food' → logprob: -3.1358518600463867
    4. 'food' → logprob: -3.1358518600463867
    5. 'f' → logprob: -4.260851860046387
    6. '_j' → logprob: -4.385851860046387
    7. ' f' → logprob: -4.385851860046387
    8. '_food' → logprob: -4.635851860046387
    9. ' idx' → logprob: -5.010851860046387
    10. 'k' → logprob: -5.260851860046387

Token 769: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0763723850250244
    2. ' in' → logprob: -2.0763723850250244
    3. ' _' → logprob: -2.3263723850250244
    4. ',' → logprob: -2.7013723850250244
    5. ')' → logprob: -3.4513723850250244
    6. ' =' → logprob: -3.4513723850250244
    7. '[' → logprob: -3.7013723850250244
    8. '_j' → logprob: -3.7013723850250244
    9. '_f' → logprob: -3.8263723850250244
    10. '       ' → logprob: -3.9513723850250244

Token 770: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.06385219097137451
    2. ' order' → logprob: -3.313852310180664
    3. 'range' → logprob: -3.813852310180664
    4. ' range' → logprob: -5.938852310180664
    5. '   ' → logprob: -8.188852310180664
    6. '(order' → logprob: -8.438852310180664
    7. '[' → logprob: -8.813852310180664
    8. ' ' → logprob: -10.563852310180664
    9. '       ' → logprob: -11.313852310180664
    10. '           ' → logprob: -11.313852310180664

Token 771: '+[' (ID: 166077)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6543598771095276
    2. ':' → logprob: -1.7793598175048828
    3. '           ' → logprob: -2.279359817504883
    4. ':
' → logprob: -2.654359817504883
    5. ' +' → logprob: -3.404359817504883
    6. '       ' → logprob: -3.904359817504883
    7. '                   ' → logprob: -4.404359817504883
    8. ',' → logprob: -4.654359817504883
    9. '                       ' → logprob: -4.654359817504883
    10. ')' → logprob: -5.029359817504883

Token 772: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2579944431781769
    2. '[i' → logprob: -2.1329944133758545
    3. '[' → logprob: -2.6329944133758545
    4. ' [' → logprob: -3.3829944133758545
    5. ' i' → logprob: -7.257994651794434
    6. ']' → logprob: -7.632994651794434
    7. '   ' → logprob: -8.132994651794434
    8. '[new' → logprob: -8.257994651794434
    9. '(i' → logprob: -8.507994651794434
    10. '{i' → logprob: -9.007994651794434

Token 773: ']' (ID: 60)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.6302608847618103
    2. ']' → logprob: -1.505260944366455
    3. ']:' → logprob: -2.380260944366455
    4. ']+' → logprob: -3.005260944366455
    5. '],' → logprob: -3.130260944366455
    6. '+' → logprob: -3.380260944366455
    7. ' +' → logprob: -4.505260944366455
    8. '           ' → logprob: -6.130260944366455
    9. '):
' → logprob: -6.505260944366455
    10. '_' → logprob: -7.005260944366455

Token 774: ' at' (ID: 540)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5966715812683105
    2. '               ' → logprob: -1.0966715812683105
    3. ':
' → logprob: -3.2216715812683105
    4. ',' → logprob: -4.0966715812683105
    5. '[' → logprob: -4.7216715812683105
    6. '           ' → logprob: -4.8466715812683105
    7. '       ' → logprob: -4.8466715812683105
    8. '                       ' → logprob: -5.2216715812683105
    9. '                   ' → logprob: -5.8466715812683105
    10. '<|end|>' → logprob: -5.8466715812683105

Token 775: ' pos' (ID: 1253)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9100481271743774
    2. 'position' → logprob: -1.7850481271743774
    3. ' position' → logprob: -2.035048007965088
    4. 'positions' → logprob: -2.535048007965088
    5. 'j' → logprob: -2.785048007965088
    6. 'pos' → logprob: -2.910048007965088
    7. 'bottom' → logprob: -4.160048007965088
    8. 'range' → logprob: -4.285048007965088
    9. 'index' → logprob: -4.285048007965088
    10. ' positions' → logprob: -4.660048007965088

Token 776: ' j' (ID: 441)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ion' → logprob: -1.8013105392456055
    2. '               ' → logprob: -2.0513105392456055
    3. ' +' → logprob: -2.5513105392456055
    4. ']' → logprob: -2.6763105392456055
    5. '                   ' → logprob: -2.8013105392456055
    6. 's' → logprob: -2.9263105392456055
    7. '       ' → logprob: -3.1763105392456055
    8. '+' → logprob: -3.1763105392456055
    9. '           ' → logprob: -3.3013105392456055
    10. 'ition' → logprob: -3.3013105392456055

Token 777: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28372660279273987
    2. '               ' → logprob: -1.7837265729904175
    3. ':
' → logprob: -3.908726692199707
    4. '           ' → logprob: -5.033726692199707
    5. '[i' → logprob: -5.033726692199707
    6. '                   ' → logprob: -5.283726692199707
    7. '[' → logprob: -5.408726692199707
    8. 's' → logprob: -5.408726692199707
    9. ',' → logprob: -5.658726692199707
    10. '[j' → logprob: -5.783726692199707

Token 778: ' sum' (ID: 4215)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14856691658496857
    2. ' for' → logprob: -3.273566961288452
    3. ' if' → logprob: -3.773566961288452
    4. '           ' → logprob: -3.773566961288452
    5. '                   ' → logprob: -4.648566722869873
    6. '<|end|>' → logprob: -4.773566722869873
    7. ',' → logprob: -5.398566722869873
    8. '                       ' → logprob: -5.523566722869873
    9. '```' → logprob: -5.523566722869873
    10. 'for' → logprob: -5.773566722869873

Token 779: ' weights' (ID: 28460)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9122606515884399
    2. '_' → logprob: -1.16226065158844
    3. '_of' → logprob: -2.1622605323791504
    4. 'of' → logprob: -3.0372605323791504
    5. ' _' → logprob: -3.5372605323791504
    6. '                ' → logprob: -3.9122605323791504
    7. '               ' → logprob: -4.41226053237915
    8. ' =' → logprob: -4.41226053237915
    9. '_j' → logprob: -5.28726053237915
    10. ')' → logprob: -5.53726053237915

Token 780: ' above' (ID: 5151)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0436378717422485
    2. ' =' → logprob: -1.2936378717422485
    3. 'of' → logprob: -2.793637752532959
    4. ' of' → logprob: -3.168637752532959
    5. '_of' → logprob: -3.168637752532959
    6. 'above' → logprob: -3.168637752532959
    7. '           ' → logprob: -3.543637752532959
    8. '               ' → logprob: -3.668637752532959
    9. ' +' → logprob: -3.793637752532959
    10. '_ab' → logprob: -4.043637752532959

Token 781: ' =' (ID: 314)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8047119975090027
    2. ':' → logprob: -1.3047120571136475
    3. ' =' → logprob: -2.3047120571136475
    4. ')' → logprob: -3.6797120571136475
    5. '):' → logprob: -3.9297120571136475
    6. ':
' → logprob: -4.054711818695068
    7. '=' → logprob: -4.179711818695068
    8. 's' → logprob: -4.304711818695068
    9. '):
' → logprob: -4.429711818695068
    10. '           ' → logprob: -4.554711818695068

Token 782: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7699166536331177
    2. ' sum' → logprob: -0.8949166536331177
    3. 'total' → logprob: -2.769916534423828
    4. ' total' → logprob: -2.894916534423828
    5. ' n' → logprob: -5.644916534423828
    6. 'dp' → logprob: -6.519916534423828
    7. 'n' → logprob: -6.894916534423828
    8. '(sum' → logprob: -7.019916534423828
    9. ' dp' → logprob: -7.394916534423828
    10. '   ' → logprob: -7.394916534423828

Token 783: ' weights' (ID: 28460)
  Prédit: '(order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(order' → logprob: -0.5240199565887451
    2. '(' → logprob: -1.3990199565887451
    3. 'of' → logprob: -2.649019956588745
    4. '(weights' → logprob: -3.399019956588745
    5. '([' → logprob: -4.149020195007324
    6. '_of' → logprob: -5.149020195007324
    7. '           ' → logprob: -5.399020195007324
    8. '               ' → logprob: -5.524020195007324
    9. ' of' → logprob: -5.774020195007324
    10. '   ' → logprob: -6.024020195007324

Token 784: ' elements' (ID: 8632)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.7330864667892456
    2. '[' → logprob: -1.2330864667892456
    3. '[len' → logprob: -1.9830864667892456
    4. '           ' → logprob: -3.733086585998535
    5. '=' → logprob: -3.858086585998535
    6. '               ' → logprob: -4.608086585998535
    7. '[i' → logprob: -4.983086585998535
    8. '[pos' → logprob: -4.983086585998535
    9. '                   ' → logprob: -5.608086585998535
    10. 'above' → logprob: -5.733086585998535

Token 785: ' from' (ID: 591)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.018192552030086517
    2. '[' → logprob: -5.143192768096924
    3. '[len' → logprob: -5.518192768096924
    4. '[:' → logprob: -6.268192768096924
    5. '[pos' → logprob: -6.393192768096924
    6. '[i' → logprob: -6.643192768096924
    7. ')' → logprob: -7.143192768096924
    8. '(order' → logprob: -8.143192291259766
    9. '               ' → logprob: -8.643192291259766
    10. '[::-' → logprob: -8.643192291259766

Token 786: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007799440994858742
    2. '(j' → logprob: -5.2577996253967285
    3. ' j' → logprob: -6.2577996253967285
    4. ' (' → logprob: -9.25779914855957
    5. '   ' → logprob: -9.38279914855957
    6. 'order' → logprob: -9.50779914855957
    7. 'index' → logprob: -9.50779914855957
    8. '       ' → logprob: -9.75779914855957
    9. '[j' → logprob: -9.75779914855957
    10. '```' → logprob: -9.88279914855957

Token 787: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9500975608825684
    2. 'j' → logprob: -1.2000975608825684
    3. '[j' → logprob: -2.4500975608825684
    4. '           ' → logprob: -3.9500975608825684
    5. ' j' → logprob: -3.9500975608825684
    6. '(pos' → logprob: -4.200097560882568
    7. 'pos' → logprob: -4.325097560882568
    8. '               ' → logprob: -4.325097560882568
    9. '[pos' → logprob: -4.325097560882568
    10. '                   ' → logprob: -4.325097560882568

Token 788: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044890373828820884
    2. '```' → logprob: -7.750448703765869
    3. ' ' → logprob: -11.750449180603027
    4. '+' → logprob: -12.875449180603027
    5. '``' → logprob: -13.125449180603027
    6. 'pos' → logprob: -13.500449180603027
    7. '           ' → logprob: -13.625449180603027
    8. '`' → logprob: -14.125449180603027
    9. 'j' → logprob: -14.625449180603027
    10. ')' → logprob: -15.125449180603027

Token 789: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028034262359142303
    2. ':]' → logprob: -4.403034210205078
    3. '               ' → logprob: -5.528034210205078
    4. ':j' → logprob: -5.653034210205078
    5. '+' → logprob: -6.278034210205078
    6. '[j' → logprob: -6.278034210205078
    7. ' :' → logprob: -7.528034210205078
    8. '           ' → logprob: -7.778034210205078
    9. 'to' → logprob: -8.028034210205078
    10. ']' → logprob: -8.403034210205078

Token 790: 'end' (ID: 419)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2281595766544342
    2. 'len' → logprob: -2.4781596660614014
    3. ']' → logprob: -3.9781596660614014
    4. ')' → logprob: -3.9781596660614014
    5. '```' → logprob: -3.9781596660614014
    6. 'j' → logprob: -4.103159427642822
    7. '1' → logprob: -4.353159427642822
    8. '+' → logprob: -4.853159427642822
    9. 'pos' → logprob: -5.103159427642822
    10. '(len' → logprob: -5.103159427642822

Token 791: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08014369010925293
    2. '       ' → logprob: -4.205143928527832
    3. '<|end|>' → logprob: -4.330143928527832
    4. ':' → logprob: -4.455143928527832
    5. '           ' → logprob: -5.080143928527832
    6. ',' → logprob: -5.705143928527832
    7. '<|end|>' → logprob: -5.830143928527832
    8. '+' → logprob: -5.955143928527832
    9. ')' → logprob: -6.080143928527832
    10. '                       ' → logprob: -6.330143928527832

Token 792: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013159511145204306
    2. '           ' → logprob: -8.25131607055664
    3. '                   ' → logprob: -8.37631607055664
    4. '                       ' → logprob: -8.87631607055664
    5. ',' → logprob: -9.12631607055664
    6. '                
' → logprob: -9.12631607055664
    7. '                               ' → logprob: -9.87631607055664
    8. '       ' → logprob: -10.00131607055664
    9. '                ' → logprob: -10.37631607055664
    10. ' for' → logprob: -10.37631607055664

Token 793: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019438649760559201
    2. '                
' → logprob: -7.626944065093994
    3. ',' → logprob: -8.126943588256836
    4. ')' → logprob: -9.126943588256836
    5. '           ' → logprob: -9.126943588256836
    6. '                   ' → logprob: -9.126943588256836
    7. '       ' → logprob: -9.376943588256836
    8. '<|end|>' → logprob: -9.376943588256836
    9. '```' → logprob: -9.501943588256836
    10. '                ' → logprob: -9.501943588256836

Token 794: ' s' (ID: 265)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028587706387043
    2. 'total' → logprob: -4.653587818145752
    3. ' total' → logprob: -5.403587818145752
    4. '           ' → logprob: -5.778587818145752
    5. ' if' → logprob: -6.528587818145752
    6. 'sum' → logprob: -6.778587818145752
    7. '                
' → logprob: -7.028587818145752
    8. '       ' → logprob: -7.028587818145752
    9. ',' → logprob: -7.153587818145752
    10. 'weight' → logprob: -7.403587818145752

Token 795: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.3405936062335968
    2. '_' → logprob: -1.3405935764312744
    3. '_i' → logprob: -4.2155938148498535
    4. 'um' → logprob: -4.7155938148498535
    5. ' =' → logprob: -7.3405938148498535
    6. 'f' → logprob: -7.4655938148498535
    7. ' _' → logprob: -7.9655938148498535
    8. '_j' → logprob: -8.840593338012695
    9. '=' → logprob: -8.965593338012695
    10. 'ums' → logprob: -9.090593338012695

Token 796: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.31726375222206116
    2. '_f' → logprob: -1.5672637224197388
    3. '_' → logprob: -2.9422638416290283
    4. '[i' → logprob: -5.567263603210449
    5. '_j' → logprob: -6.567263603210449
    6. '_[' → logprob: -7.067263603210449
    7. '[_' → logprob: -7.067263603210449
    8. '```' → logprob: -8.06726360321045
    9. '[' → logprob: -8.19226360321045
    10. '_weights' → logprob: -8.31726360321045

Token 797: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.04142177477478981
    2. '>=' → logprob: -3.291421890258789
    3. ' =' → logprob: -7.166421890258789
    4. ')' → logprob: -7.416421890258789
    5. '=' → logprob: -7.666421890258789
    6. ')>=' → logprob: -7.666421890258789
    7. ']>=' → logprob: -7.916421890258789
    8. '   ' → logprob: -9.291421890258789
    9. ']' → logprob: -9.541421890258789
    10. ' ' → logprob: -9.791421890258789

Token 798: ' that' (ID: 484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1588003784418106
    2. ' sum' → logprob: -2.0338003635406494
    3. 'total' → logprob: -4.4088006019592285
    4. ' total' → logprob: -6.0338006019592285
    5. '(sum' → logprob: -7.1588006019592285
    6. 'weights' → logprob: -8.53380012512207
    7. '   ' → logprob: -9.40880012512207
    8. '0' → logprob: -9.65880012512207
    9. 'dp' → logprob: -9.78380012512207
    10. '               ' → logprob: -10.15880012512207

Token 799: ' sum' (ID: 4215)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00967971608042717
    2. ':' → logprob: -6.384679794311523
    3. '           ' → logprob: -6.759679794311523
    4. ':
' → logprob: -7.009679794311523
    5. '                   ' → logprob: -7.134679794311523
    6. '                       ' → logprob: -7.384679794311523
    7. ',' → logprob: -7.509679794311523
    8. '       ' → logprob: -7.634679794311523
    9. '                
' → logprob: -7.634679794311523
    10. ')' → logprob: -8.384679794311523

Token 800: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18785376846790314
    2. ':' → logprob: -2.0628538131713867
    3. '       ' → logprob: -5.437853813171387
    4. '           ' → logprob: -5.437853813171387
    5. '                ' → logprob: -5.562853813171387
    6. ':
' → logprob: -5.687853813171387
    7. '                   ' → logprob: -5.812853813171387
    8. '                       ' → logprob: -5.812853813171387
    9. '<|end|>' → logprob: -5.937853813171387
    10. ',' → logprob: -6.062853813171387

Token 801: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7015430331230164
    2. 'all' → logprob: -0.9515430331230164
    3. ' j' → logprob: -2.451543092727661
    4. 'j' → logprob: -3.701543092727661
    5. ' ' → logprob: -6.451542854309082
    6. 'each' → logprob: -6.576542854309082
    7. 'range' → logprob: -7.326542854309082
    8. '   ' → logprob: -7.326542854309082
    9. ' range' → logprob: -7.451542854309082
    10. ' each' → logprob: -7.576542854309082

Token 802: ' j' (ID: 441)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04727165028452873
    2. ':
' → logprob: -3.672271728515625
    3. '
' → logprob: -5.547271728515625
    4. ':' → logprob: -5.797271728515625
    5. '           ' → logprob: -6.047271728515625
    6. '                   ' → logprob: -6.672271728515625
    7. '       ' → logprob: -7.047271728515625
    8. ')' → logprob: -7.047271728515625
    9. '[' → logprob: -7.422271728515625
    10. '                       ' → logprob: -7.547271728515625

Token 803: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012209989130496979
    2. ':' → logprob: -5.262209892272949
    3. '                
' → logprob: -6.637209892272949
    4. ':
' → logprob: -7.012209892272949
    5. '                   ' → logprob: -7.387209892272949
    6. '                       ' → logprob: -7.512209892272949
    7. ',' → logprob: -8.01220989227295
    8. '                               ' → logprob: -8.13720989227295
    9. '                ' → logprob: -8.13720989227295
    10. '```' → logprob: -8.38720989227295

Token 804: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016119851497933269
    2. '                
' → logprob: -7.376612186431885
    3. '                ' → logprob: -7.876612186431885
    4. '<|end|>' → logprob: -8.501611709594727
    5. '                   ' → logprob: -10.001611709594727
    6. ',' → logprob: -10.251611709594727
    7. '<|end|>' → logprob: -10.251611709594727
    8. ' 
' → logprob: -10.751611709594727
    9. '           ' → logprob: -10.751611709594727
    10. '```' → logprob: -10.876611709594727

Token 805: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017371822614222765
    2. '                
' → logprob: -7.251737117767334
    3. '                   ' → logprob: -8.626737594604492
    4. '           ' → logprob: -9.251737594604492
    5. '                ' → logprob: -9.251737594604492
    6. ' for' → logprob: -9.751737594604492
    7. '                       ' → logprob: -9.751737594604492
    8. ' if' → logprob: -9.876737594604492
    9. '                               ' → logprob: -10.126737594604492
    10. 'for' → logprob: -10.501737594604492

Token 806: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004273315134923905
    2. '                
' → logprob: -8.50042724609375
    3. '```' → logprob: -9.62542724609375
    4. '           ' → logprob: -10.25042724609375
    5. '                ' → logprob: -10.50042724609375
    6. '                   ' → logprob: -10.75042724609375
    7. '<|end|>' → logprob: -10.75042724609375
    8. '<|end|>' → logprob: -12.00042724609375
    9. '
' → logprob: -12.12542724609375
    10. '                
                
' → logprob: -12.25042724609375

Token 807: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02266271971166134
    2. '           ' → logprob: -4.64766263961792
    3. 'total' → logprob: -5.27266263961792
    4. 'if' → logprob: -5.77266263961792
    5. 'sum' → logprob: -7.14766263961792
    6. '                   ' → logprob: -7.27266263961792
    7. '
' → logprob: -7.52266263961792
    8. '       ' → logprob: -7.89766263961792
    9. '                
' → logprob: -8.147663116455078
    10. '```' → logprob: -8.147663116455078

Token 808: ' To' (ID: 2514)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18019211292266846
    2. 'total' → logprob: -2.555191993713379
    3. 'new' → logprob: -4.055191993713379
    4. 'sum' → logprob: -4.305191993713379
    5. 'next' → logprob: -4.305191993713379
    6. '#' → logprob: -4.555191993713379
    7. 'suffix' → logprob: -4.805191993713379
    8. '
' → logprob: -5.430191993713379
    9. 'weights' → logprob: -5.555191993713379
    10. '                   ' → logprob: -6.305191993713379

Token 809: ' avoid' (ID: 8397)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7028694748878479
    2. '               ' → logprob: -2.202869415283203
    3. ' continue' → logprob: -2.202869415283203
    4. '           ' → logprob: -3.327869415283203
    5. '#' → logprob: -3.577869415283203
    6. '                   ' → logprob: -3.702869415283203
    7. 'sum' → logprob: -3.827869415283203
    8. '       ' → logprob: -4.452869415283203
    9. '                ' → logprob: -4.452869415283203
    10. 'for' → logprob: -4.452869415283203

Token 810: ' repeated' (ID: 24161)
  Prédit: ' recom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recom' → logprob: -0.3931956887245178
    2. 're' → logprob: -2.018195629119873
    3. ' recal' → logprob: -2.143195629119873
    4. 'checking' → logprob: -3.643195629119873
    5. ' checking' → logprob: -3.768195629119873
    6. 'ex' → logprob: -5.143195629119873
    7. ' re' → logprob: -5.393195629119873
    8. ' exponential' → logprob: -5.518195629119873
    9. ' iter' → logprob: -5.893195629119873
    10. ' computing' → logprob: -7.268195629119873

Token 811: ' checks' (ID: 22097)
  Prédit: ' calculation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculation' → logprob: -1.4465845823287964
    2. ' computation' → logprob: -1.4465845823287964
    3. ' calculations' → logprob: -1.6965845823287964
    4. ' checks' → logprob: -2.321584701538086
    5. ' checking' → logprob: -2.946584701538086
    6. ' computations' → logprob: -3.696584701538086
    7. ' recal' → logprob: -3.696584701538086
    8. 'calcul' → logprob: -3.821584701538086
    9. 'checking' → logprob: -3.946584701538086
    10. ' recom' → logprob: -4.571584701538086

Token 812: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5834685564041138
    2. 'for' → logprob: -2.083468437194824
    3. ' for' → logprob: -2.083468437194824
    4. ',' → logprob: -2.833468437194824
    5. ':' → logprob: -3.583468437194824
    6. '                   ' → logprob: -4.083468437194824
    7. '           ' → logprob: -4.708468437194824
    8. '                ' → logprob: -4.708468437194824
    9. '_' → logprob: -4.958468437194824
    10. 'import' → logprob: -5.083468437194824

Token 813: ' we' (ID: 581)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48019716143608093
    2. ' continue' → logprob: -1.1051971912384033
    3. 'continue' → logprob: -3.7301971912384033
    4. ' for' → logprob: -5.105196952819824
    5. '                ' → logprob: -5.480196952819824
    6. '                   ' → logprob: -5.730196952819824
    7. ' if' → logprob: -6.230196952819824
    8. '                       ' → logprob: -6.855196952819824
    9. 'for' → logprob: -6.980196952819824
    10. '                
' → logprob: -7.105196952819824

Token 814: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7655632495880127
    2. ' continue' → logprob: -1.6405632495880127
    3. '               ' → logprob: -2.2655632495880127
    4. 'continue' → logprob: -2.3905632495880127
    5. '#' → logprob: -3.1405632495880127
    6. ' need' → logprob: -3.5155632495880127
    7. 'can' → logprob: -4.265563011169434
    8. ' #' → logprob: -4.515563011169434
    9. '           ' → logprob: -4.890563011169434
    10. 'need' → logprob: -5.015563011169434

Token 815: ' rely' (ID: 25222)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.298101782798767
    2. ' pre' → logprob: -1.798101782798767
    3. 'store' → logprob: -2.1731019020080566
    4. 'calculate' → logprob: -2.5481019020080566
    5. 'continue' → logprob: -2.7981019020080566
    6. '               ' → logprob: -2.9231019020080566
    7. '           ' → logprob: -3.2981019020080566
    8. 'sum' → logprob: -3.5481019020080566
    9. 'compute' → logprob: -3.5481019020080566
    10. '#' → logprob: -3.7981019020080566

Token 816: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.10096310824155807
    2. 'on' → logprob: -2.3509631156921387
    3. 'import' → logprob: -8.47596263885498
    4. '   ' → logprob: -8.60096263885498
    5. '    ' → logprob: -9.47596263885498
    6. '_' → logprob: -9.60096263885498
    7. '=' → logprob: -9.97596263885498
    8. '            ' → logprob: -10.72596263885498
    9. '           ' → logprob: -10.85096263885498
    10. '        ' → logprob: -11.22596263885498

Token 817: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.741338849067688
    2. 'prefix' → logprob: -1.741338849067688
    3. 'dp' → logprob: -1.741338849067688
    4. ' the' → logprob: -2.8663387298583984
    5. 'c' → logprob: -3.7413387298583984
    6. ' prefix' → logprob: -3.8663387298583984
    7. '       ' → logprob: -4.116338729858398
    8. 'partial' → logprob: -4.491338729858398
    9. 'pre' → logprob: -4.741338729858398
    10. '           ' → logprob: -4.866338729858398

Token 818: ' DP' (ID: 51992)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.4723933935165405
    2. 'next' → logprob: -1.5973933935165405
    3. 'dp' → logprob: -1.9723933935165405
    4. 'if' → logprob: -2.47239351272583
    5. 'import' → logprob: -2.97239351272583
    6. 'for' → logprob: -3.09739351272583
    7. 'weights' → logprob: -3.47239351272583
    8. 'total' → logprob: -3.84739351272583
    9. 'sum' → logprob: -3.84739351272583
    10. ' for' → logprob: -3.97239351272583

Token 819: ' state' (ID: 2608)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05267181992530823
    2. '<|end|>' → logprob: -3.4276719093322754
    3. '<|end|>' → logprob: -5.052671909332275
    4. '                
' → logprob: -5.302671909332275
    5. '                ' → logprob: -5.802671909332275
    6. '           ' → logprob: -7.177671909332275
    7. ',' → logprob: -8.302671432495117
    8. '                   ' → logprob: -8.427671432495117
    9. '              ' → logprob: -8.427671432495117
    10. ' 
' → logprob: -8.427671432495117

Token 820: '+' (ID: 10)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17309081554412842
    2. '<|end|>' → logprob: -2.548090934753418
    3. '                ' → logprob: -3.298090934753418
    4. '                
' → logprob: -4.423090934753418
    5. '<|end|>' → logprob: -4.673090934753418
    6. ':' → logprob: -5.173090934753418
    7. ',' → logprob: -6.298090934753418
    8. '        ' → logprob: -6.923090934753418
    9. '           ' → logprob: -6.923090934753418
    10. '              ' → logprob: -7.048090934753418

Token 821: 'trans' (ID: 2623)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -2.6136550903320312
    2. '#' → logprob: -2.7386550903320312
    3. ' total' → logprob: -2.8636550903320312
    4. ' for' → logprob: -3.1136550903320312
    5. 'for' → logprob: -3.1136550903320312
    6. 'weights' → logprob: -3.4886550903320312
    7. '        ' → logprob: -3.4886550903320312
    8. '1' → logprob: -3.4886550903320312
    9. ' cumulative' → logprob: -3.4886550903320312
    10. '```' → logprob: -3.4886550903320312

Token 822: 'itions' (ID: 5500)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.12055273354053497
    2. 'action' → logprob: -2.2455527782440186
    3. 'fer' → logprob: -5.7455525398254395
    4. '   ' → logprob: -6.6205525398254395
    5. 'it' → logprob: -6.8705525398254395
    6. '#' → logprob: -8.495553016662598
    7. 'itions' → logprob: -8.495553016662598
    8. 'ction' → logprob: -8.870553016662598
    9. 'port' → logprob: -8.995553016662598
    10. ')' → logprob: -9.120553016662598

Token 823: ' that' (ID: 484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7190332412719727
    2. '               ' → logprob: -1.3440332412719727
    3. '                ' → logprob: -2.3440332412719727
    4. ' :' → logprob: -2.9690332412719727
    5. ':
' → logprob: -4.094033241271973
    6. ' :
' → logprob: -4.594033241271973
    7. '                               ' → logprob: -4.844033241271973
    8. ',' → logprob: -4.969033241271973
    9. '                                ' → logprob: -5.219033241271973
    10. ')' → logprob: -5.344033241271973

Token 824: ' ensure' (ID: 6757)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.33161500096321106
    2. 'continue' → logprob: -2.3316149711608887
    3. '               ' → logprob: -2.4566149711608887
    4. ' if' → logprob: -3.7066149711608887
    5. ' pass' → logprob: -3.7066149711608887
    6. '                   ' → logprob: -4.206614971160889
    7. 'pass' → logprob: -5.331614971160889
    8. 'if' → logprob: -5.581614971160889
    9. ' #' → logprob: -5.956614971160889
    10. ' for' → logprob: -6.081614971160889

Token 825: ' partial' (ID: 13664)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.740716278553009
    2. '               ' → logprob: -1.6157162189483643
    3. ')' → logprob: -3.1157162189483643
    4. '<|end|>' → logprob: -3.3657162189483643
    5. '                    ' → logprob: -3.6157162189483643
    6. '                        ' → logprob: -3.7407162189483643
    7. '                   ' → logprob: -3.7407162189483643
    8. 'the' → logprob: -3.7407162189483643
    9. ' ' → logprob: -3.8657162189483643
    10. ' the' → logprob: -4.115716457366943

Token 826: ' stack' (ID: 10825)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.1721611022949219
    2. '_mask' → logprob: -1.7971611022949219
    3. ')' → logprob: -1.9221611022949219
    4. '_' → logprob: -2.172161102294922
    5. '_weights' → logprob: -2.922161102294922
    6. '_weight' → logprob: -3.172161102294922
    7. 'weights' → logprob: -3.672161102294922
    8. '_masks' → logprob: -4.172161102294922
    9. '               ' → logprob: -4.422161102294922
    10. ')_' → logprob: -4.547161102294922

Token 827: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16511912643909454
    2. '[i' → logprob: -3.665119171142578
    3. '):' → logprob: -4.040119171142578
    4. '               ' → logprob: -4.040119171142578
    5. '   ' → logprob: -4.165119171142578
    6. ' :' → logprob: -4.665119171142578
    7. '[' → logprob: -4.790119171142578
    8. ')' → logprob: -4.915119171142578
    9. '                               ' → logprob: -5.415119171142578
    10. ',' → logprob: -5.540119171142578

Token 828: ' stable' (ID: 22105)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.4628221392631531
    2. 'stable' → logprob: -1.4628221988677979
    3. ' valid' → logprob: -2.337822198867798
    4. ' stable' → logprob: -3.462822198867798
    5. 'always' → logprob: -5.962821960449219
    6. 'fe' → logprob: -6.587821960449219
    7. ' safe' → logprob: -6.712821960449219
    8. 'safe' → logprob: -6.837821960449219
    9. ' always' → logprob: -6.962821960449219
    10. '```' → logprob: -6.962821960449219

Token 829: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02532235160470009
    2. ':' → logprob: -5.400322437286377
    3. '                
' → logprob: -5.400322437286377
    4. '                ' → logprob: -6.025322437286377
    5. '<|end|>' → logprob: -6.525322437286377
    6. ':
' → logprob: -6.775322437286377
    7. '                   ' → logprob: -6.900322437286377
    8. ',' → logprob: -6.900322437286377
    9. '```' → logprob: -7.275322437286377
    10. ' if' → logprob: -7.275322437286377

Token 830: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028633661568164825
    2. '                ' → logprob: -6.75286340713501
    3. '                   ' → logprob: -8.002862930297852
    4. '                
' → logprob: -8.127862930297852
    5. '                               ' → logprob: -8.377862930297852
    6. '           ' → logprob: -8.752862930297852
    7. '```' → logprob: -8.877862930297852
    8. '<|end|>' → logprob: -9.252862930297852
    9. '                       ' → logprob: -10.002862930297852
    10. ' ' → logprob: -10.127862930297852

Token 831: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004073651507496834
    2. '                
' → logprob: -6.129073619842529
    3. '                ' → logprob: -6.879073619842529
    4. '                   ' → logprob: -8.629074096679688
    5. ' 
' → logprob: -9.254074096679688
    6. '                               ' → logprob: -9.754074096679688
    7. '           ' → logprob: -9.754074096679688
    8. '                 
' → logprob: -9.879074096679688
    9. '```' → logprob: -10.504074096679688
    10. '               
' → logprob: -10.629074096679688

Token 832: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009220616775564849
    2. '                
' → logprob: -7.750922203063965
    3. '           ' → logprob: -9.000922203063965
    4. '                   ' → logprob: -9.250922203063965
    5. '                ' → logprob: -9.500922203063965
    6. '```' → logprob: -9.625922203063965
    7. ' 
' → logprob: -10.375922203063965
    8. ' continue' → logprob: -10.875922203063965
    9. '       ' → logprob: -11.625922203063965
    10. '              ' → logprob: -11.750922203063965

Token 833: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005735859740525484
    2. ' if' → logprob: -6.255735874176025
    3. '       ' → logprob: -7.255735874176025
    4. ' for' → logprob: -7.380735874176025
    5. '           ' → logprob: -7.380735874176025
    6. '                   ' → logprob: -7.880735874176025
    7. ' next' → logprob: -8.505735397338867
    8. '                
' → logprob: -8.505735397338867
    9. ' weight' → logprob: -9.005735397338867
    10. '```' → logprob: -9.130735397338867

Token 834: ' But' (ID: 3072)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15921524167060852
    2. ' if' → logprob: -2.659215211868286
    3. 'if' → logprob: -3.409215211868286
    4. ' total' → logprob: -5.409215450286865
    5. 'weight' → logprob: -5.534215450286865
    6. '                   ' → logprob: -5.534215450286865
    7. 'total' → logprob: -5.534215450286865
    8. ' next' → logprob: -5.534215450286865
    9. 'w' → logprob: -5.909215450286865
    10. 'next' → logprob: -6.034215450286865

Token 835: ' here' (ID: 2105)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23082788288593292
    2. ' if' → logprob: -2.480827808380127
    3. ' continue' → logprob: -3.105827808380127
    4. ' for' → logprob: -3.855827808380127
    5. 'for' → logprob: -4.480827808380127
    6. ' total' → logprob: -4.730827808380127
    7. 'if' → logprob: -4.980827808380127
    8. '                   ' → logprob: -5.480827808380127
    9. 'continue' → logprob: -5.480827808380127
    10. '```' → logprob: -5.855827808380127

Token 836: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1397220343351364
    2. ':' → logprob: -3.1397221088409424
    3. '                ' → logprob: -3.2647221088409424
    4. ' if' → logprob: -4.514721870422363
    5. '<|end|>' → logprob: -4.514721870422363
    6. ',' → logprob: -5.014721870422363
    7. '<|end|>' → logprob: -5.514721870422363
    8. '                
' → logprob: -6.139721870422363
    9. '                   ' → logprob: -6.389721870422363
    10. ' continue' → logprob: -6.514721870422363

Token 837: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19038039445877075
    2. 'for' → logprob: -2.940380334854126
    3. ' if' → logprob: -3.440380334854126
    4. ' for' → logprob: -3.690380334854126
    5. 'if' → logprob: -4.065380573272705
    6. '#' → logprob: -4.315380573272705
    7. '```' → logprob: -4.690380573272705
    8. ' #' → logprob: -5.190380573272705
    9. '                   ' → logprob: -5.440380573272705
    10. ' continue' → logprob: -5.940380573272705

Token 838: ' know' (ID: 1761)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32725903391838074
    2. 'for' → logprob: -2.702259063720703
    3. '                   ' → logprob: -2.827259063720703
    4. 'sum' → logprob: -3.452259063720703
    5. 'check' → logprob: -4.202259063720703
    6. '#' → logprob: -4.202259063720703
    7. '           ' → logprob: -4.577259063720703
    8. '                ' → logprob: -4.702259063720703
    9. 'continue' → logprob: -4.702259063720703
    10. ' sum' → logprob: -4.827259063720703

Token 839: ' if' (ID: 538)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7706353068351746
    2. 'the' → logprob: -0.8956353068351746
    3. ' how' → logprob: -3.6456353664398193
    4. '               ' → logprob: -4.02063512802124
    5. ' total' → logprob: -5.02063512802124
    6. ' all' → logprob: -5.02063512802124
    7. ' what' → logprob: -5.27063512802124
    8. 'total' → logprob: -5.27063512802124
    9. '#' → logprob: -5.39563512802124
    10. 'for' → logprob: -5.52063512802124

Token 840: ' we' (ID: 581)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4044265151023865
    2. 'the' → logprob: -2.1544265747070312
    3. ' i' → logprob: -2.5294265747070312
    4. ' all' → logprob: -3.1544265747070312
    5. 'i' → logprob: -3.7794265747070312
    6. '               ' → logprob: -3.9044265747070312
    7. ' not' → logprob: -4.654426574707031
    8. ' we' → logprob: -4.904426574707031
    9. ')' → logprob: -5.154426574707031
    10. '                ' → logprob: -5.654426574707031

Token 841: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4978768229484558
    2. ' need' → logprob: -1.9978768825531006
    3. 'can' → logprob: -2.2478768825531006
    4. ' want' → logprob: -2.8728768825531006
    5. 'need' → logprob: -2.9978768825531006
    6. ' continue' → logprob: -4.1228766441345215
    7. 'continue' → logprob: -5.2478766441345215
    8. ' have' → logprob: -5.4978766441345215
    9. 'have' → logprob: -5.8728766441345215
    10. 'want' → logprob: -5.9978766441345215

Token 842: ' add' (ID: 1147)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15076503157615662
    2. ' check' → logprob: -3.2757649421691895
    3. ' continue' → logprob: -3.7757649421691895
    4. '                ' → logprob: -4.0257649421691895
    5. 'check' → logprob: -4.1507649421691895
    6. 'continue' → logprob: -4.2757649421691895
    7. 't' → logprob: -5.5257649421691895
    8. ' add' → logprob: -5.5257649421691895
    9. '                   ' → logprob: -5.6507649421691895
    10. '#' → logprob: -6.0257649421691895

Token 843: ' food' (ID: 4232)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10248811542987823
    2. 'i' → logprob: -2.8524880409240723
    3. '                ' → logprob: -4.602488040924072
    4. '               ' → logprob: -4.602488040924072
    5. ' the' → logprob: -4.977488040924072
    6. 'the' → logprob: -5.102488040924072
    7. '_i' → logprob: -6.602488040924072
    8. '                   ' → logprob: -6.977488040924072
    9. ' ' → logprob: -7.352488040924072
    10. ')' → logprob: -7.727488040924072

Token 844: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2777319848537445
    2. '_i' → logprob: -2.0277318954467773
    3. ' i' → logprob: -3.4027318954467773
    4. ' [' → logprob: -3.7777318954467773
    5. '[' → logprob: -4.027731895446777
    6. '               ' → logprob: -4.402731895446777
    7. ' _' → logprob: -5.027731895446777
    8. ',' → logprob: -6.152731895446777
    9. ')' → logprob: -6.277731895446777
    10. 's' → logprob: -6.402731895446777

Token 845: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3490391969680786
    2. ':' → logprob: -1.4740391969680786
    3. ' at' → logprob: -2.224039077758789
    4. '):
' → logprob: -2.599039077758789
    5. ',' → logprob: -2.724039077758789
    6. '):' → logprob: -3.474039077758789
    7. '[' → logprob: -3.724039077758789
    8. ':
' → logprob: -3.724039077758789
    9. '[i' → logprob: -3.974039077758789
    10. ' to' → logprob: -3.974039077758789

Token 846: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.43082284927368164
    2. 'top' → logprob: -1.4308228492736816
    3. ' the' → logprob: -2.9308228492736816
    4. 'the' → logprob: -3.1808228492736816
    5. 'i' → logprob: -4.930822849273682
    6. '_top' → logprob: -5.680822849273682
    7. ' i' → logprob: -5.930822849273682
    8. 'e' → logprob: -6.930822849273682
    9. '   ' → logprob: -7.930822849273682
    10. ' ' → logprob: -7.930822849273682

Token 847: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7646701335906982
    2. ',' → logprob: -1.3896701335906982
    3. ':' → logprob: -1.3896701335906982
    4. ':
' → logprob: -4.139670372009277
    5. '                   ' → logprob: -6.014670372009277
    6. ' ,' → logprob: -6.514670372009277
    7. '                ' → logprob: -6.514670372009277
    8. ' :' → logprob: -6.639670372009277
    9. ',
' → logprob: -6.639670372009277
    10. '           ' → logprob: -6.889670372009277

Token 848: ' dp' (ID: 21546)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.19558760523796082
    2. ' the' → logprob: -2.070587635040283
    3. 'order' → logprob: -4.320587635040283
    4. 'the' → logprob: -4.570587635040283
    5. ' dp' → logprob: -5.070587635040283
    6. ' i' → logprob: -5.195587635040283
    7. ' mask' → logprob: -5.570587635040283
    8. 'dp' → logprob: -6.195587635040283
    9. 'i' → logprob: -6.570587635040283
    10. ' ' → logprob: -6.695587635040283

Token 849: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006055355537682772
    2. '_mask' → logprob: -5.7560553550720215
    3. 'mask' → logprob: -6.0060553550720215
    4. '[i' → logprob: -9.00605583190918
    5. '[_' → logprob: -9.38105583190918
    6. ' [' → logprob: -10.25605583190918
    7. '_' → logprob: -10.38105583190918
    8. '[(' → logprob: -11.13105583190918
    9. '```' → logprob: -11.25605583190918
    10. ',' → logprob: -11.38105583190918

Token 850: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0017509841127321124
    2. ' mask' → logprob: -6.376750946044922
    3. '[' → logprob: -11.626750946044922
    4. ']' → logprob: -11.751750946044922
    5. '	mask' → logprob: -12.126750946044922
    6. ')' → logprob: -12.251750946044922
    7. '(mask' → logprob: -12.251750946044922
    8. '_mask' → logprob: -12.501750946044922
    9. '
' → logprob: -13.126750946044922
    10. '   ' → logprob: -13.251750946044922

Token 851: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.087073802947998
    2. '):
' → logprob: -1.462073802947998
    3. '[' → logprob: -2.087073802947998
    4. '):' → logprob: -2.212073802947998
    5. ']' → logprob: -3.212073802947998
    6. ':' → logprob: -3.837073802947998
    7. ')' → logprob: -3.837073802947998
    8. ']:
' → logprob: -4.087073802947998
    9. ']:' → logprob: -4.462073802947998
    10. ',' → logprob: -4.587073802947998

Token 852: ' we' (ID: 581)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9581927061080933
    2. '                ' → logprob: -1.0831927061080933
    3. '               ' → logprob: -2.708192825317383
    4. ')' → logprob: -3.333192825317383
    5. '                               ' → logprob: -4.208192825317383
    6. '                                ' → logprob: -4.333192825317383
    7. ' if' → logprob: -4.583192825317383
    8. '<|end|>' → logprob: -4.583192825317383
    9. '                   ' → logprob: -4.708192825317383
    10. ':' → logprob: -4.708192825317383

Token 853: ' must' (ID: 2804)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.30394262075424194
    2. ' need' → logprob: -1.8039426803588867
    3. ' must' → logprob: -3.1789426803588867
    4. 'continue' → logprob: -3.9289426803588867
    5. '               ' → logprob: -5.428942680358887
    6. 'must' → logprob: -5.553942680358887
    7. ' ' → logprob: -5.803942680358887
    8. ')' → logprob: -5.803942680358887
    9. ' have' → logprob: -6.053942680358887
    10. '[' → logprob: -6.053942680358887

Token 854: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.47104331851005554
    2. '               ' → logprob: -1.721043348312378
    3. 'check' → logprob: -2.221043348312378
    4. 'sum' → logprob: -4.096043109893799
    5. ' compute' → logprob: -4.471043109893799
    6. 'calculate' → logprob: -4.471043109893799
    7. '#' → logprob: -4.721043109893799
    8. ' sum' → logprob: -4.971043109893799
    9. '                   ' → logprob: -5.096043109893799
    10. ' rec' → logprob: -5.096043109893799

Token 855: ' crushing' (ID: 21287)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05476074293255806
    2. ' for' → logprob: -4.554760932922363
    3. ' total' → logprob: -4.554760932922363
    4. ' weights' → logprob: -4.679760932922363
    5. ' all' → logprob: -5.179760932922363
    6. ' if' → logprob: -5.554760932922363
    7. 'for' → logprob: -6.054760932922363
    8. '                   ' → logprob: -6.429760932922363
    9. ' the' → logprob: -6.804760932922363
    10. 'total' → logprob: -6.929760932922363

Token 856: ' conditions' (ID: 6409)
  Prédit: '_condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_condition' → logprob: -0.6544981598854065
    2. ' condition' → logprob: -1.7794981002807617
    3. '               ' → logprob: -2.0294981002807617
    4. ' _' → logprob: -3.1544981002807617
    5. '           ' → logprob: -4.279498100280762
    6. '       ' → logprob: -4.279498100280762
    7. '_' → logprob: -4.279498100280762
    8. ')' → logprob: -4.404498100280762
    9. 'condition' → logprob: -4.404498100280762
    10. '   ' → logprob: -4.529498100280762

Token 857: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011948170140385628
    2. ' for' → logprob: -5.886948108673096
    3. ':' → logprob: -6.011948108673096
    4. ',' → logprob: -6.386948108673096
    5. '                
' → logprob: -7.136948108673096
    6. '                   ' → logprob: -7.511948108673096
    7. '                ' → logprob: -7.511948108673096
    8. '           ' → logprob: -8.136948585510254
    9. '```' → logprob: -8.136948585510254
    10. 'for' → logprob: -8.261948585510254

Token 858: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5454959869384766
    2. 'all' → logprob: -1.9204959869384766
    3. ' the' → logprob: -2.1704959869384766
    4. '               ' → logprob: -2.4204959869384766
    5. 'the' → logprob: -2.9204959869384766
    6. '                   ' → logprob: -6.295495986938477
    7. ' order' → logprob: -6.545495986938477
    8. '           ' → logprob: -6.545495986938477
    9. ' new' → logprob: -6.670495986938477
    10. ')' → logprob: -6.795495986938477

Token 859: ' foods' (ID: 18747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.392392635345459
    2. '               ' → logprob: -2.017392635345459
    3. ' i' → logprob: -2.767392635345459
    4. ']' → logprob: -2.767392635345459
    5. 'foods' → logprob: -3.017392635345459
    6. '           ' → logprob: -3.142392635345459
    7. '_food' → logprob: -3.142392635345459
    8. ' j' → logprob: -3.142392635345459
    9. ' _' → logprob: -3.267392635345459
    10. '[' → logprob: -3.767392635345459

Token 860: ' including' (ID: 3463)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37304991483688354
    2. ':' → logprob: -1.3730499744415283
    3. ',' → logprob: -4.873049736022949
    4. '.' → logprob: -4.998049736022949
    5. ':
' → logprob: -4.998049736022949
    6. ' :' → logprob: -5.498049736022949
    7. '                ' → logprob: -5.623049736022949
    8. ' in' → logprob: -5.623049736022949
    9. '[' → logprob: -6.123049736022949
    10. '                   ' → logprob: -6.123049736022949

Token 861: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6254726648330688
    2. ' order' → logprob: -1.1254726648330688
    3. 'the' → logprob: -2.7504725456237793
    4. 'order' → logprob: -3.7504725456237793
    5. 'dp' → logprob: -4.500472545623779
    6. ' i' → logprob: -4.500472545623779
    7. ' dp' → logprob: -4.500472545623779
    8. '               ' → logprob: -5.375472545623779
    9. ' new' → logprob: -5.500472545623779
    10. 'i' → logprob: -5.875472545623779

Token 862: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.20541107654571533
    2. ' i' → logprob: -1.9554110765457153
    3. 'i' → logprob: -4.705410957336426
    4. ' next' → logprob: -4.955410957336426
    5. ' previous' → logprob: -5.080410957336426
    6. ' newly' → logprob: -5.330410957336426
    7. ' current' → logprob: -5.455410957336426
    8. 'new' → logprob: -5.580410957336426
    9. ' rest' → logprob: -6.080410957336426
    10. ' added' → logprob: -6.455410957336426

Token 863: ' one' (ID: 1001)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3644440174102783
    2. '_' → logprob: -2.6144440174102783
    3. '_food' → logprob: -2.7394440174102783
    4. '_i' → logprob: -3.1144440174102783
    5. ' i' → logprob: -3.1144440174102783
    6. ' ' → logprob: -4.239443778991699
    7. ')' → logprob: -4.614443778991699
    8. '_token' → logprob: -4.739443778991699
    9. '[i' → logprob: -4.989443778991699
    10. 'food' → logprob: -5.364443778991699

Token 864: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01058884710073471
    2. '                ' → logprob: -5.760588645935059
    3. ':' → logprob: -6.010588645935059
    4. '                
' → logprob: -7.010588645935059
    5. ',' → logprob: -7.635588645935059
    6. '                   ' → logprob: -7.760588645935059
    7. '                               ' → logprob: -8.010588645935059
    8. '           ' → logprob: -8.385588645935059
    9. ':
' → logprob: -8.635588645935059
    10. '			' → logprob: -8.760588645935059

Token 865: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00956765841692686
    2. '                
' → logprob: -6.259567737579346
    3. '                ' → logprob: -6.634567737579346
    4. '                   ' → logprob: -6.884567737579346
    5. ' 
' → logprob: -7.009567737579346
    6. '                               ' → logprob: -7.259567737579346
    7. ' if' → logprob: -7.884567737579346
    8. '```' → logprob: -8.134567260742188
    9. ',' → logprob: -8.259567260742188
    10. ' for' → logprob: -8.259567260742188

Token 866: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026650674641132355
    2. '                ' → logprob: -5.151650905609131
    3. ' total' → logprob: -6.151650905609131
    4. ' if' → logprob: -6.151650905609131
    5. ' for' → logprob: -6.276650905609131
    6. '                
' → logprob: -6.776650905609131
    7. ')' → logprob: -7.026650905609131
    8. '           ' → logprob: -7.026650905609131
    9. '                   ' → logprob: -7.026650905609131
    10. ',' → logprob: -7.026650905609131

Token 867: ' The' (ID: 623)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1762493997812271
    2. ' if' → logprob: -3.0512495040893555
    3. ' new' → logprob: -3.3012495040893555
    4. ' total' → logprob: -4.0512495040893555
    5. 'if' → logprob: -4.6762495040893555
    6. '                   ' → logprob: -4.8012495040893555
    7. ' next' → logprob: -5.1762495040893555
    8. 'new' → logprob: -5.3012495040893555
    9. 'total' → logprob: -5.4262495040893555
    10. ' sum' → logprob: -5.8012495040893555

Token 868: ' dp' (ID: 21546)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -2.1023755073547363
    2. ')' → logprob: -2.4773755073547363
    3. '_' → logprob: -2.4773755073547363
    4. ' rest' → logprob: -2.4773755073547363
    5. 'for' → logprob: -2.4773755073547363
    6. ' for' → logprob: -2.6023755073547363
    7. ' next' → logprob: -2.7273755073547363
    8. ' total' → logprob: -3.4773755073547363
    9. ' weights' → logprob: -3.6023755073547363
    10. ' if' → logprob: -3.7273755073547363

Token 869: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004526365548372269
    2. '[i' → logprob: -6.504526138305664
    3. '_mask' → logprob: -7.254526138305664
    4. '[state' → logprob: -7.629526138305664
    5. ' [' → logprob: -8.004526138305664
    6. 'mask' → logprob: -8.379526138305664
    7. '[_' → logprob: -8.504526138305664
    8. '_' → logprob: -8.629526138305664
    9. '   ' → logprob: -9.129526138305664
    10. '_state' → logprob: -9.254526138305664

Token 870: 'mask' (ID: 22527)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7492086887359619
    2. 'mask' → logprob: -0.7492086887359619
    3. 'i' → logprob: -3.749208688735962
    4. '[i' → logprob: -4.749208450317383
    5. ']' → logprob: -4.999208450317383
    6. '(mask' → logprob: -5.249208450317383
    7. '][' → logprob: -6.624208450317383
    8. ' [' → logprob: -6.624208450317383
    9. ')' → logprob: -6.624208450317383
    10. ' mask' → logprob: -7.124208450317383

Token 871: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9349973797798157
    2. '[' → logprob: -1.184997320175171
    3. '               ' → logprob: -2.184997320175171
    4. '][' → logprob: -2.809997320175171
    5. ']' → logprob: -3.309997320175171
    6. ')' → logprob: -4.30999755859375
    7. '):
' → logprob: -4.93499755859375
    8. '       ' → logprob: -4.93499755859375
    9. '           ' → logprob: -5.05999755859375
    10. ')[' → logprob: -5.18499755859375

Token 872: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1958208978176117
    2. '[i' → logprob: -1.945820927619934
    3. '[next' → logprob: -4.6958208084106445
    4. '[token' → logprob: -4.6958208084106445
    5. '               ' → logprob: -5.5708208084106445
    6. ' [' → logprob: -6.1958208084106445
    7. '[(' → logprob: -6.9458208084106445
    8. '   ' → logprob: -7.0708208084106445
    9. '```' → logprob: -7.1958208084106445
    10. ')' → logprob: -7.4458208084106445

Token 873: ' stable' (ID: 22105)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.7224406003952026
    2. ' not' → logprob: -1.4724406003952026
    3. 'None' → logprob: -1.5974406003952026
    4. 'not' → logprob: -3.222440719604492
    5. '               ' → logprob: -4.472440719604492
    6. '[' → logprob: -5.347440719604492
    7. '                   ' → logprob: -5.347440719604492
    8. ' stable' → logprob: -5.347440719604492
    9. 'dp' → logprob: -6.097440719604492
    10. '   ' → logprob: -6.347440719604492

Token 874: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24483883380889893
    2. '               ' → logprob: -2.4948387145996094
    3. '                               ' → logprob: -3.7448387145996094
    4. ' :' → logprob: -3.8698387145996094
    5. '):' → logprob: -3.9948387145996094
    6. ')' → logprob: -4.244838714599609
    7. ',' → logprob: -4.244838714599609
    8. ':
' → logprob: -5.369838714599609
    9. '                ' → logprob: -5.494838714599609
    10. '[' → logprob: -5.869838714599609

Token 875: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003834398463368416
    2. ')' → logprob: -7.128834247589111
    3. '                
' → logprob: -7.253834247589111
    4. '<|end|>' → logprob: -7.503834247589111
    5. '                ' → logprob: -8.00383472442627
    6. ',' → logprob: -8.25383472442627
    7. '```' → logprob: -8.62883472442627
    8. '           ' → logprob: -9.00383472442627
    9. ' )' → logprob: -9.00383472442627
    10. ' ' → logprob: -9.25383472442627

Token 876: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003776215948164463
    2. '                ' → logprob: -6.8787760734558105
    3. '                
' → logprob: -7.3787760734558105
    4. ')' → logprob: -8.003776550292969
    5. '           ' → logprob: -8.253776550292969
    6. ',' → logprob: -8.753776550292969
    7. '                   ' → logprob: -8.753776550292969
    8. '+' → logprob: -9.253776550292969
    9. '                               ' → logprob: -9.253776550292969
    10. '```' → logprob: -9.253776550292969

Token 877: ' When' (ID: 4296)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00861102994531393
    2. ' if' → logprob: -5.25861120223999
    3. '                
' → logprob: -7.38361120223999
    4. '                   ' → logprob: -7.50861120223999
    5. '           ' → logprob: -7.63361120223999
    6. '                ' → logprob: -8.258610725402832
    7. ' for' → logprob: -8.758610725402832
    8. 'if' → logprob: -8.883610725402832
    9. '                               ' → logprob: -8.883610725402832
    10. ' 
' → logprob: -9.008610725402832

Token 878: ' adding' (ID: 12673)
  Prédit: ' adding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adding' → logprob: -0.6594222784042358
    2. 'i' → logprob: -1.5344222784042358
    3. 'adding' → logprob: -1.5344222784042358
    4. ' i' → logprob: -3.4094223976135254
    5. '               ' → logprob: -5.659422397613525
    6. ' we' → logprob: -5.784422397613525
    7. 'checking' → logprob: -5.909422397613525
    8. '           ' → logprob: -6.409422397613525
    9. 'we' → logprob: -6.534422397613525
    10. ' checking' → logprob: -7.034422397613525

Token 879: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01699959859251976
    2. 'i' → logprob: -4.1419997215271
    3. '_i' → logprob: -8.266999244689941
    4. ' _' → logprob: -8.391999244689941
    5. ' ' → logprob: -9.516999244689941
    6. '`' → logprob: -9.766999244689941
    7. ' a' → logprob: -10.016999244689941
    8. '_' → logprob: -10.266999244689941
    9. ' ' → logprob: -10.391999244689941
    10. ' food' → logprob: -10.391999244689941

Token 880: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.828380823135376
    2. ':' → logprob: -1.203380823135376
    3. ',' → logprob: -2.953380823135376
    4. '               ' → logprob: -3.328380823135376
    5. '):
' → logprob: -3.703380823135376
    6. '):' → logprob: -3.703380823135376
    7. ')' → logprob: -4.203380584716797
    8. '                           ' → logprob: -4.578380584716797
    9. ':
' → logprob: -4.703380584716797
    10. ' at' → logprob: -4.828380584716797

Token 881: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.546305775642395
    2. 'top' → logprob: -1.046305775642395
    3. '_top' → logprob: -2.6713056564331055
    4. '[top' → logprob: -8.546305656433105
    5. '(top' → logprob: -9.671305656433105
    6. 'the' → logprob: -9.671305656433105
    7. '	top' → logprob: -9.796305656433105
    8. 'Top' → logprob: -10.671305656433105
    9. '-top' → logprob: -10.671305656433105
    10. 'i' → logprob: -11.421305656433105

Token 882: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6308113932609558
    2. ':' → logprob: -1.0058114528656006
    3. ':
' → logprob: -3.1308114528656006
    4. ',' → logprob: -3.2558114528656006
    5. '):' → logprob: -5.0058112144470215
    6. '):
' → logprob: -5.3808112144470215
    7. ' :' → logprob: -6.5058112144470215
    8. '                   ' → logprob: -7.0058112144470215
    9. ')' → logprob: -7.3808112144470215
    10. '           ' → logprob: -7.3808112144470215

Token 883: ' crushing' (ID: 21287)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17483684420585632
    2. ' total' → logprob: -2.5498368740081787
    3. 'total' → logprob: -3.2998368740081787
    4. 'sum' → logprob: -4.6748366355896
    5. '#' → logprob: -5.0498366355896
    6. ' new' → logprob: -5.2998366355896
    7. ' sum' → logprob: -5.4248366355896
    8. 'new' → logprob: -6.4248366355896
    9. ' #' → logprob: -6.4248366355896
    10. 'weights' → logprob: -6.4248366355896

Token 884: ' condition' (ID: 7060)
  Prédit: '_condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -0.2416478544473648
    2. ' _' → logprob: -1.9916478395462036
    3. ' condition' → logprob: -3.366647958755493
    4. '_' → logprob: -3.991647958755493
    5. '_conditions' → logprob: -4.241647720336914
    6. 'condition' → logprob: -5.991647720336914
    7. ' ' → logprob: -6.241647720336914
    8. ')' → logprob: -6.866647720336914
    9. '   ' → logprob: -6.991647720336914
    10. '_cond' → logprob: -7.116647720336914

Token 885: ' applies' (ID: 28134)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8376768231391907
    2. ' must' → logprob: -1.837676763534546
    3. ' for' → logprob: -2.837676763534546
    4. ' requires' → logprob: -3.087676763534546
    5. '                   ' → logprob: -3.212676763534546
    6. 'must' → logprob: -3.212676763534546
    7. ' =' → logprob: -3.337676763534546
    8. ')' → logprob: -3.962676763534546
    9. '=' → logprob: -3.962676763534546
    10. ':' → logprob: -3.962676763534546

Token 886: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12630443274974823
    2. ':' → logprob: -2.3763043880462646
    3. ',' → logprob: -5.876304626464844
    4. '                   ' → logprob: -6.001304626464844
    5. ' for' → logprob: -6.126304626464844
    6. ':
' → logprob: -6.251304626464844
    7. ')' → logprob: -6.251304626464844
    8. ' =' → logprob: -6.376304626464844
    9. ' to' → logprob: -6.501304626464844
    10. ' :' → logprob: -6.501304626464844

Token 887: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008738245232962072
    2. '                
' → logprob: -8.125873565673828
    3. '                   ' → logprob: -9.000873565673828
    4. '                ' → logprob: -9.125873565673828
    5. '           ' → logprob: -9.875873565673828
    6. ' if' → logprob: -10.250873565673828
    7. ' for' → logprob: -10.375873565673828
    8. ',' → logprob: -10.500873565673828
    9. ' 
' → logprob: -10.750873565673828
    10. ' ' → logprob: -11.000873565673828

Token 888: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009340347722172737
    2. ' total' → logprob: -5.259340286254883
    3. 'total' → logprob: -6.259340286254883
    4. 'sum' → logprob: -8.134340286254883
    5. ' sum' → logprob: -8.259340286254883
    6. ' weight' → logprob: -8.634340286254883
    7. 'weight' → logprob: -8.759340286254883
    8. '           ' → logprob: -8.884340286254883
    9. ' if' → logprob: -8.884340286254883
    10. ' cumulative' → logprob: -8.884340286254883

Token 889: ' For' (ID: 2214)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8455051183700562
    2. '               ' → logprob: -0.9705051183700562
    3. 'total' → logprob: -2.7205052375793457
    4. ' sum' → logprob: -3.8455052375793457
    5. 'sum' → logprob: -4.470505237579346
    6. ' if' → logprob: -4.595505237579346
    7. '                   ' → logprob: -4.595505237579346
    8. ' weights' → logprob: -4.845505237579346
    9. ' stack' → logprob: -4.970505237579346
    10. ' new' → logprob: -4.970505237579346

Token 890: ' food' (ID: 4232)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3079336881637573
    2. ' j' → logprob: -1.4329336881637573
    3. ' order' → logprob: -1.9329336881637573
    4. 'order' → logprob: -2.432933807373047
    5. ' all' → logprob: -2.807933807373047
    6. 'all' → logprob: -2.932933807373047
    7. 'the' → logprob: -3.432933807373047
    8. ' the' → logprob: -3.557933807373047
    9. 'dp' → logprob: -4.432933807373047
    10. '   ' → logprob: -4.807933807373047

Token 891: ' i' (ID: 575)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.112004041671753
    2. '[i' → logprob: -1.237004041671753
    3. ' i' → logprob: -2.237004041671753
    4. ' _' → logprob: -2.612004041671753
    5. '_' → logprob: -2.737004041671753
    6. '[' → logprob: -2.862004041671753
    7. 's' → logprob: -3.237004041671753
    8. ')' → logprob: -5.237004280090332
    9. '           ' → logprob: -5.362004280090332
    10. ' [' → logprob: -5.487004280090332

Token 892: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8284595012664795
    2. '[' → logprob: -2.0784595012664795
    3. ' _' → logprob: -2.0784595012664795
    4. ' ==' → logprob: -2.4534595012664795
    5. 's' → logprob: -2.5784595012664795
    6. ')' → logprob: -2.7034595012664795
    7. '_' → logprob: -3.3284595012664795
    8. '[i' → logprob: -3.5784595012664795
    9. ',
' → logprob: -3.7034595012664795
    10. ':' → logprob: -3.9534595012664795

Token 893: 'top' (ID: 8169)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.4273570775985718
    2. 's' → logprob: -1.8023570775985718
    3. ')' → logprob: -2.1773571968078613
    4. ',' → logprob: -2.6773571968078613
    5. '),' → logprob: -3.3023571968078613
    6. 'i' → logprob: -3.6773571968078613
    7. ' i' → logprob: -3.6773571968078613
    8. 'weights' → logprob: -3.6773571968078613
    9. ''s' → logprob: -3.9273571968078613
    10. ' )' → logprob: -4.177357196807861

Token 894: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27816975116729736
    2. ')_' → logprob: -2.903169631958008
    3. '[' → logprob: -3.278169631958008
    4. ',' → logprob: -3.528169631958008
    5. '_i' → logprob: -4.028169631958008
    6. '[i' → logprob: -4.528169631958008
    7. '_' → logprob: -4.653169631958008
    8. '           ' → logprob: -5.028169631958008
    9. '):' → logprob: -5.028169631958008
    10. '):
' → logprob: -5.028169631958008

Token 895: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7772346138954163
    2. '0' → logprob: -1.1522345542907715
    3. ' s' → logprob: -2.2772345542907715
    4. '               ' → logprob: -2.7772345542907715
    5. 's' → logprob: -4.5272345542907715
    6. ' #' → logprob: -4.7772345542907715
    7. '"' → logprob: -5.2772345542907715
    8. '                   ' → logprob: -5.5272345542907715
    9. ' ==' → logprob: -5.7772345542907715
    10. ''' → logprob: -5.9022345542907715

Token 896: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.01120013277977705
    2. '_f' → logprob: -5.636199951171875
    3. '[i' → logprob: -5.636199951171875
    4. '_' → logprob: -6.636199951171875
    5. ' _' → logprob: -7.386199951171875
    6. '_[' → logprob: -7.886199951171875
    7. '[_' → logprob: -8.011199951171875
    8. 'i' → logprob: -8.636199951171875
    9. '```' → logprob: -8.761199951171875
    10. '               ' → logprob: -8.761199951171875

Token 897: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.05292715132236481
    2. '>=' → logprob: -3.052927255630493
    3. ')' → logprob: -6.427927017211914
    4. ')>=' → logprob: -7.052927017211914
    5. '>' → logprob: -8.052927017211914
    6. ' >' → logprob: -8.677927017211914
    7. '```' → logprob: -8.677927017211914
    8. ']>=' → logprob: -8.677927017211914
    9. ' ' → logprob: -8.802927017211914
    10. '           ' → logprob: -9.177927017211914

Token 898: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019161459058523178
    2. ' ' → logprob: -4.019161224365234
    3. 'total' → logprob: -7.269161224365234
    4. ' total' → logprob: -8.269161224365234
    5. 'weights' → logprob: -11.269161224365234
    6. 'weight' → logprob: -12.019161224365234
    7. '```' → logprob: -12.206661224365234
    8. '               ' → logprob: -12.644161224365234
    9. ' weights' → logprob: -12.956661224365234
    10. ' ' → logprob: -12.956661224365234

Token 899: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035846480750478804
    2. ' ' → logprob: -8.000358581542969
    3. 'total' → logprob: -10.875358581542969
    4. ' total' → logprob: -14.312858581542969
    5. '
' → logprob: -14.437858581542969
    6. '```' → logprob: -14.875358581542969
    7. '   ' → logprob: -15.312858581542969
    8. '00' → logprob: -15.500358581542969
    9. '000' → logprob: -15.562858581542969
    10. 'weight' → logprob: -15.562858581542969

Token 900: ' always' (ID: 3324)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03718947991728783
    2. '                               ' → logprob: -4.412189483642578
    3. '                ' → logprob: -5.537189483642578
    4. ')' → logprob: -5.537189483642578
    5. ':' → logprob: -6.162189483642578
    6. ',' → logprob: -6.162189483642578
    7. '                   ' → logprob: -6.162189483642578
    8. '                           ' → logprob: -6.287189483642578
    9. '<|end|>' → logprob: -6.662189483642578
    10. '           ' → logprob: -7.037189483642578

Token 901: ' true' (ID: 1343)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05140877515077591
    2. '                ' → logprob: -4.176408767700195
    3. ')' → logprob: -4.801408767700195
    4. '                               ' → logprob: -5.301408767700195
    5. '<|end|>' → logprob: -5.301408767700195
    6. ',' → logprob: -6.051408767700195
    7. '           ' → logprob: -6.426408767700195
    8. '                   ' → logprob: -6.551408767700195
    9. ':' → logprob: -6.676408767700195
    10. ' if' → logprob: -7.301408767700195

Token 902: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013357268646359444
    2. ')' → logprob: -5.388357162475586
    3. '                ' → logprob: -6.013357162475586
    4. '<|end|>' → logprob: -6.763357162475586
    5. '                               ' → logprob: -7.388357162475586
    6. '                
' → logprob: -7.388357162475586
    7. ',' → logprob: -7.513357162475586
    8. ' )' → logprob: -8.013357162475586
    9. '                   ' → logprob: -8.263357162475586
    10. '           ' → logprob: -8.263357162475586

Token 903: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002897117054089904
    2. '                
' → logprob: -7.002897262573242
    3. '                ' → logprob: -7.877897262573242
    4. '```' → logprob: -8.127897262573242
    5. ')' → logprob: -8.502897262573242
    6. ' 
' → logprob: -8.752897262573242
    7. ',' → logprob: -8.877897262573242
    8. '                   ' → logprob: -9.002897262573242
    9. '                               ' → logprob: -9.252897262573242
    10. '           ' → logprob: -9.252897262573242

Token 904: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015412846114486456
    2. '                
' → logprob: -7.6265411376953125
    3. '```' → logprob: -8.501541137695312
    4. '                ' → logprob: -8.876541137695312
    5. ')' → logprob: -9.001541137695312
    6. ' 
' → logprob: -9.126541137695312
    7. '                   ' → logprob: -9.626541137695312
    8. '                               ' → logprob: -9.876541137695312
    9. '           ' → logprob: -9.876541137695312
    10. ',' → logprob: -9.876541137695312

Token 905: ' For' (ID: 2214)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006358166225254536
    2. ' if' → logprob: -5.7563581466674805
    3. '```' → logprob: -7.0063581466674805
    4. '           ' → logprob: -7.3813581466674805
    5. '                   ' → logprob: -7.5063581466674805
    6. 'if' → logprob: -8.25635814666748
    7. '                
' → logprob: -8.50635814666748
    8. ' for' → logprob: -8.88135814666748
    9. '                       ' → logprob: -9.38135814666748
    10. '                ' → logprob: -9.63135814666748

Token 906: ' the' (ID: 290)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.9370114803314209
    2. ' all' → logprob: -2.062011480331421
    3. 'all' → logprob: -2.312011480331421
    4. ' food' → logprob: -2.437011480331421
    5. ' j' → logprob: -3.062011480331421
    6. 'previous' → logprob: -3.187011480331421
    7. 'prev' → logprob: -3.312011480331421
    8. 'f' → logprob: -3.562011480331421
    9. ' previous' → logprob: -3.812011480331421
    10. 'order' → logprob: -4.18701171875

Token 907: ' previous' (ID: 5880)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' → logprob: -0.23175905644893646
    2. ' previous' → logprob: -1.9817590713500977
    3. ' rest' → logprob: -4.481759071350098
    4. 'foods' → logprob: -4.481759071350098
    5. 'prev' → logprob: -4.606759071350098
    6. '#' → logprob: -4.731759071350098
    7. 'rest' → logprob: -5.481759071350098
    8. 'order' → logprob: -5.606759071350098
    9. 'other' → logprob: -5.856759071350098
    10. 'dp' → logprob: -6.481759071350098

Token 908: ' foods' (ID: 18747)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' → logprob: -0.12982699275016785
    2. ' foods' → logprob: -3.0048270225524902
    3. 'food' → logprob: -3.8798270225524902
    4. 'order' → logprob: -4.25482702255249
    5. ' order' → logprob: -4.75482702255249
    6. '           ' → logprob: -5.50482702255249
    7. '               ' → logprob: -5.62982702255249
    8. '_food' → logprob: -5.62982702255249
    9. '       ' → logprob: -5.75482702255249
    10. ' food' → logprob: -5.75482702255249

Token 909: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0937124490737915
    2. '[i' → logprob: -2.093712329864502
    3. '[' → logprob: -2.218712329864502
    4. ' _' → logprob: -2.843712329864502
    5. '[j' → logprob: -2.843712329864502
    6. ',' → logprob: -2.968712329864502
    7. '           ' → logprob: -3.093712329864502
    8. '       ' → logprob: -3.468712329864502
    9. ' in' → logprob: -3.593712329864502
    10. '```' → logprob: -3.718712329864502

Token 910: ' s' (ID: 265)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11335685104131699
    2. ' for' → logprob: -3.113356828689575
    3. '           ' → logprob: -3.738356828689575
    4. ' if' → logprob: -4.238357067108154
    5. ' total' → logprob: -4.488357067108154
    6. 'for' → logprob: -5.863357067108154
    7. '       ' → logprob: -6.238357067108154
    8. '                   ' → logprob: -6.863357067108154
    9. 'total' → logprob: -7.363357067108154
    10. '```' → logprob: -7.488357067108154

Token 911: '_f' (ID: 1337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9046381115913391
    2. '_f' → logprob: -1.0296380519866943
    3. '_i' → logprob: -1.6546380519866943
    4. '_j' → logprob: -4.029638290405273
    5. ' _' → logprob: -5.904638290405273
    6. 'f' → logprob: -6.029638290405273
    7. '>' → logprob: -6.279638290405273
    8. ')' → logprob: -6.404638290405273
    9. 'for' → logprob: -6.404638290405273
    10. '```' → logprob: -6.529638290405273

Token 912: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.20469141006469727
    2. '_i' → logprob: -1.7046914100646973
    3. '_' → logprob: -6.829691410064697
    4. '[i' → logprob: -7.954691410064697
    5. '```' → logprob: -8.079690933227539
    6. '"_' → logprob: -8.704690933227539
    7. '_mask' → logprob: -8.829690933227539
    8. '[' → logprob: -8.954690933227539
    9. '`' → logprob: -8.954690933227539
    10. '[j' → logprob: -9.079690933227539

Token 913: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.19033938646316528
    2. '<|end|>' → logprob: -2.6903393268585205
    3. '>=' → logprob: -3.3153393268585205
    4. '[' → logprob: -4.5653395652771
    5. ')' → logprob: -4.6903395652771
    6. '               ' → logprob: -5.0653395652771
    7. '           ' → logprob: -5.3153395652771
    8. ',' → logprob: -5.4403395652771
    9. ')>=' → logprob: -5.8153395652771
    10. '<|end|>' → logprob: -5.9403395652771

Token 914: ' weight' (ID: 6049)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.24352100491523743
    2. 'total' → logprob: -2.118520975112915
    3. ' sum' → logprob: -2.868520975112915
    4. ' weights' → logprob: -4.368521213531494
    5. 'weights' → logprob: -4.993521213531494
    6. 'sum' → logprob: -5.118521213531494
    7. ' (' → logprob: -5.743521213531494
    8. ' dp' → logprob: -6.368521213531494
    9. '(total' → logprob: -6.493521213531494
    10. ' order' → logprob: -6.618521213531494

Token 915: ' of' (ID: 328)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.4604018032550812
    2. 's' → logprob: -1.7104017734527588
    3. ' +' → logprob: -2.460401773452759
    4. 'above' → logprob: -3.585401773452759
    5. '+' → logprob: -3.835401773452759
    6. ' above' → logprob: -4.585402011871338
    7. '_' → logprob: -4.960402011871338
    8. '>' → logprob: -5.210402011871338
    9. '_of' → logprob: -5.335402011871338
    10. '               ' → logprob: -5.460402011871338

Token 916: ' above' (ID: 5151)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' → logprob: -1.3172601461410522
    2. 'above' → logprob: -1.9422601461410522
    3. 'dp' → logprob: -2.442260265350342
    4. 'all' → logprob: -2.567260265350342
    5. ' foods' → logprob: -3.317260265350342
    6. ']' → logprob: -3.317260265350342
    7. ' all' → logprob: -3.442260265350342
    8. ' dp' → logprob: -3.442260265350342
    9. ' above' → logprob: -3.692260265350342
    10. '[i' → logprob: -3.692260265350342

Token 917: ' foods' (ID: 18747)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3958912789821625
    2. '[i' → logprob: -2.2708911895751953
    3. ' +' → logprob: -2.6458911895751953
    4. '_i' → logprob: -3.2708911895751953
    5. '               ' → logprob: -3.8958911895751953
    6. '_sum' → logprob: -4.145891189575195
    7. 'es' → logprob: -4.270891189575195
    8. '```' → logprob: -4.395891189575195
    9. '_j' → logprob: -4.895891189575195
    10. ')' → logprob: -5.270891189575195

Token 918: ' =' (ID: 314)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31158581376075745
    2. ':' → logprob: -2.8115859031677246
    3. ' +' → logprob: -3.1865859031677246
    4. '                               ' → logprob: -3.3115859031677246
    5. '                   ' → logprob: -3.8115859031677246
    6. '                           ' → logprob: -4.436585903167725
    7. '+' → logprob: -4.811585903167725
    8. ')' → logprob: -4.811585903167725
    9. '                ' → logprob: -4.936585903167725
    10. '           ' → logprob: -5.061585903167725

Token 919: ' old' (ID: 2890)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.48612070083618164
    2. ' total' → logprob: -1.2361207008361816
    3. 'sum' → logprob: -2.8611207008361816
    4. ' sum' → logprob: -3.4861207008361816
    5. 'dp' → logprob: -5.861120700836182
    6. '(total' → logprob: -6.611120700836182
    7. ' dp' → logprob: -7.236120700836182
    8. '(sum' → logprob: -8.236120223999023
    9. '0' → logprob: -8.486120223999023
    10. '```' → logprob: -8.736120223999023

Token 920: ' sum' (ID: 4215)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.3800346553325653
    2. '_' → logprob: -2.7550346851348877
    3. 'order' → logprob: -2.8800346851348877
    4. ' +' → logprob: -3.0050346851348877
    5. '[' → logprob: -3.6300346851348877
    6. ' _' → logprob: -3.8800346851348877
    7. ' order' → logprob: -4.005034446716309
    8. '_total' → logprob: -4.130034446716309
    9. '_mask' → logprob: -4.630034446716309
    10. '_weight' → logprob: -4.755034446716309

Token 921: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16194650530815125
    2. '+' → logprob: -2.0369465351104736
    3. '               ' → logprob: -4.9119462966918945
    4. '[i' → logprob: -6.4119462966918945
    5. ')' → logprob: -6.6619462966918945
    6. '[' → logprob: -6.9119462966918945
    7. '                ' → logprob: -7.2869462966918945
    8. ' >>' → logprob: -7.5369462966918945
    9. '_' → logprob: -7.6619462966918945
    10. ' +=' → logprob: -7.7869462966918945

Token 922: ' w' (ID: 286)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foods' → logprob: -0.040313806384801865
    2. ' foods' → logprob: -3.415313720703125
    3. 'total' → logprob: -5.540313720703125
    4. ' total' → logprob: -6.790313720703125
    5. '(' → logprob: -8.040313720703125
    6. 'weights' → logprob: -8.290313720703125
    7. 'i' → logprob: -8.415313720703125
    8. '```' → logprob: -8.665313720703125
    9. 'food' → logprob: -9.040313720703125
    10. '``' → logprob: -9.915313720703125

Token 923: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5488240122795105
    2. '_i' → logprob: -1.6738240718841553
    3. ' +' → logprob: -2.2988240718841553
    4. '               ' → logprob: -3.5488240718841553
    5. '[' → logprob: -3.9238240718841553
    6. '+' → logprob: -4.048823833465576
    7. ' _' → logprob: -4.673823833465576
    8. '_j' → logprob: -4.798823833465576
    9. ')' → logprob: -5.173823833465576
    10. '           ' → logprob: -5.298823833465576

Token 924: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04984216392040253
    2. ':' → logprob: -4.049842357635498
    3. ':
' → logprob: -4.299842357635498
    4. '                               ' → logprob: -6.049842357635498
    5. '                   ' → logprob: -6.174842357635498
    6. ' +' → logprob: -6.549842357635498
    7. ')' → logprob: -6.674842357635498
    8. ',' → logprob: -7.049842357635498
    9. '                
' → logprob: -7.049842357635498
    10. '                           ' → logprob: -7.174842357635498

Token 925: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002425240818411112
    2. '                   ' → logprob: -7.127425193786621
    3. '                ' → logprob: -7.877425193786621
    4. '                               ' → logprob: -8.002425193786621
    5. '           ' → logprob: -8.502425193786621
    6. ' +' → logprob: -9.252425193786621
    7. '+' → logprob: -9.502425193786621
    8. '                       ' → logprob: -9.627425193786621
    9. ' ' → logprob: -9.877425193786621
    10. '                           ' → logprob: -9.877425193786621

Token 926: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010741343721747398
    2. '                
' → logprob: -7.876074314117432
    3. '                ' → logprob: -8.376073837280273
    4. '                   ' → logprob: -9.501073837280273
    5. '```' → logprob: -9.501073837280273
    6. ' +' → logprob: -9.876073837280273
    7. '           ' → logprob: -10.251073837280273
    8. '+' → logprob: -10.376073837280273
    9. '                               ' → logprob: -10.501073837280273
    10. '              ' → logprob: -10.876073837280273

Token 927: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005188697017729282
    2. '                   ' → logprob: -6.880188465118408
    3. '                               ' → logprob: -7.130188465118408
    4. '                
' → logprob: -7.630188465118408
    5. '                ' → logprob: -8.005188941955566
    6. '           ' → logprob: -8.130188941955566
    7. '                       ' → logprob: -8.130188941955566
    8. ' if' → logprob: -8.505188941955566
    9. ' for' → logprob: -8.505188941955566
    10. ' continue' → logprob: -8.880188941955566

Token 928: ' the' (ID: 290)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.8837315440177917
    2. 'valid' → logprob: -1.7587316036224365
    3. 'for' → logprob: -2.1337316036224365
    4. '               ' → logprob: -2.5087316036224365
    5. 'if' → logprob: -2.6337316036224365
    6. ' can' → logprob: -2.7587316036224365
    7. '   ' → logprob: -4.508731365203857
    8. '                   ' → logprob: -4.508731365203857
    9. 'possible' → logprob: -4.633731365203857
    10. '           ' → logprob: -4.883731365203857

Token 929: ' +' (ID: 659)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5399270057678223
    2. ' if' → logprob: -1.6649270057678223
    3. 'w' → logprob: -2.2899270057678223
    4. 'prev' → logprob: -3.4149270057678223
    5. 'for' → logprob: -3.9149270057678223
    6. ' for' → logprob: -4.164927005767822
    7. ' new' → logprob: -4.539927005767822
    8. ' w' → logprob: -4.914927005767822
    9. '#' → logprob: -5.039927005767822
    10. '               ' → logprob: -5.664927005767822

Token 930: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5283390879631042
    2. '1' → logprob: -1.653339147567749
    3. 'total' → logprob: -2.778339147567749
    4. 'i' → logprob: -3.153339147567749
    5. ' total' → logprob: -3.153339147567749
    6. 'weight' → logprob: -3.653339147567749
    7. 'weights' → logprob: -4.52833890914917
    8. ' w' → logprob: -5.02833890914917
    9. 'dp' → logprob: -5.52833890914917
    10. ' for' → logprob: -5.90333890914917

Token 931: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.001105683040805161
    2. '_' → logprob: -7.126105785369873
    3. ' _' → logprob: -9.376105308532715
    4. '[i' → logprob: -9.501105308532715
    5. 'i' → logprob: -10.001105308532715
    6. '_j' → logprob: -10.501105308532715
    7. '_f' → logprob: -10.876105308532715
    8. ')' → logprob: -11.626105308532715
    9. ')_' → logprob: -12.251105308532715
    10. '[_' → logprob: -12.376105308532715

Token 932: ' must' (ID: 2804)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.759579062461853
    2. ')' → logprob: -2.1345791816711426
    3. '>' → logprob: -2.2595791816711426
    4. ' >>' → logprob: -3.2595791816711426
    5. ' )' → logprob: -3.3845791816711426
    6. ' +' → logprob: -3.5095791816711426
    7. ' must' → logprob: -3.7595791816711426
    8. '               ' → logprob: -4.009579181671143
    9. ' +=' → logprob: -4.134579181671143
    10. ' is' → logprob: -4.509579181671143

Token 933: ' not' (ID: 625)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.10363075137138367
    2. 'be' → logprob: -2.603630781173706
    3. '=' → logprob: -4.103630542755127
    4. '<=' → logprob: -6.103630542755127
    5. ' <=' → logprob: -6.603630542755127
    6. ' not' → logprob: -7.478630542755127
    7. ' =' → logprob: -7.603630542755127
    8. 's' → logprob: -7.853630542755127
    9. 'not' → logprob: -8.603631019592285
    10. ' go' → logprob: -8.603631019592285

Token 934: ' break' (ID: 2338)
  Prédit: ' violate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' violate' → logprob: -1.2350870370864868
    2. ' exceed' → logprob: -1.4850870370864868
    3. 'break' → logprob: -1.6100870370864868
    4. ' break' → logprob: -1.8600870370864868
    5. 'ex' → logprob: -2.9850869178771973
    6. 'vi' → logprob: -4.235086917877197
    7. ' cause' → logprob: -4.360086917877197
    8. '>' → logprob: -4.485086917877197
    9. 'cause' → logprob: -4.985086917877197
    10. ' breach' → logprob: -5.110086917877197

Token 935: ' crushing' (ID: 21287)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.24536669254302979
    2. 'the' → logprob: -2.1203665733337402
    3. ' previous' → logprob: -3.3703665733337402
    4. '_dp' → logprob: -4.49536657333374
    5. 'dp' → logprob: -4.74536657333374
    6. ' dp' → logprob: -4.74536657333374
    7. ')' → logprob: -5.74536657333374
    8. ' f' → logprob: -5.74536657333374
    9. ' j' → logprob: -5.99536657333374
    10. 'f' → logprob: -6.24536657333374

Token 936: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30000385642051697
    2. ')' → logprob: -2.30000376701355
    3. ':' → logprob: -3.67500376701355
    4. ' )' → logprob: -4.300004005432129
    5. ' +' → logprob: -4.675004005432129
    6. '                   ' → logprob: -4.675004005432129
    7. '           ' → logprob: -4.800004005432129
    8. '_i' → logprob: -4.800004005432129
    9. '   ' → logprob: -4.925004005432129
    10. '):' → logprob: -5.050004005432129

Token 937: ' previous' (ID: 5880)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.4938225746154785
    2. 'all' → logprob: -2.3688225746154785
    3. ' previous' → logprob: -2.3688225746154785
    4. 'each' → logprob: -2.4938225746154785
    5. 'previous' → logprob: -2.4938225746154785
    6. ' each' → logprob: -2.6188225746154785
    7. ' the' → logprob: -2.8688225746154785
    8. 'the' → logprob: -2.9938225746154785
    9. '_f' → logprob: -2.9938225746154785
    10. 'f' → logprob: -3.3688225746154785

Token 938: ' foods' (ID: 18747)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.2650896310806274
    2. ')' → logprob: -1.7650896310806274
    3. '_' → logprob: -1.8900896310806274
    4. '_mask' → logprob: -2.765089511871338
    5. '[' → logprob: -3.140089511871338
    6. '_f' → logprob: -3.140089511871338
    7. ' )' → logprob: -3.515089511871338
    8. '[j' → logprob: -3.765089511871338
    9. '               ' → logprob: -4.015089511871338
    10. 'mask' → logprob: -4.015089511871338

Token 939: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007878291653469205
    2. ' ' → logprob: -9.000787734985352
    3. '                   ' → logprob: -9.250787734985352
    4. '                               ' → logprob: -9.500787734985352
    5. '                
' → logprob: -9.500787734985352
    6. '			' → logprob: -9.875787734985352
    7. '```' → logprob: -10.000787734985352
    8. '           ' → logprob: -10.125787734985352
    9. ' for' → logprob: -10.375787734985352
    10. ')' → logprob: -10.500787734985352

Token 940: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000865487614646554
    2. ')' → logprob: -8.625865936279297
    3. '                
' → logprob: -9.000865936279297
    4. ' ' → logprob: -9.375865936279297
    5. '<|end|>' → logprob: -9.875865936279297
    6. '                   ' → logprob: -10.000865936279297
    7. '                               ' → logprob: -10.000865936279297
    8. '           ' → logprob: -10.125865936279297
    9. '                ' → logprob: -10.250865936279297
    10. ',' → logprob: -10.625865936279297

Token 941: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007064753444865346
    2. '                
' → logprob: -8.500706672668457
    3. ' ' → logprob: -9.375706672668457
    4. '+' → logprob: -9.625706672668457
    5. '```' → logprob: -9.625706672668457
    6. ')' → logprob: -9.750706672668457
    7. '                ' → logprob: -10.625706672668457
    8. ' +' → logprob: -11.000706672668457
    9. '                   ' → logprob: -11.125706672668457
    10. '           ' → logprob: -11.125706672668457

Token 942: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00037490393151529133
    2. '                
' → logprob: -9.000374794006348
    3. '                ' → logprob: -9.500374794006348
    4. '```' → logprob: -10.125374794006348
    5. '+' → logprob: -10.625374794006348
    6. ' +' → logprob: -10.875374794006348
    7. ' ' → logprob: -11.000374794006348
    8. '                   ' → logprob: -11.000374794006348
    9. '           ' → logprob: -11.625374794006348
    10. ',' → logprob: -12.250374794006348

Token 943: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004994890186935663
    2. ' ' → logprob: -7.254994869232178
    3. ' w' → logprob: -7.379994869232178
    4. ' if' → logprob: -7.504994869232178
    5. ' +' → logprob: -7.879994869232178
    6. ' for' → logprob: -7.879994869232178
    7. '                
' → logprob: -8.004995346069336
    8. ' new' → logprob: -8.254995346069336
    9. '                ' → logprob: -8.379995346069336
    10. ' 
' → logprob: -8.629995346069336

Token 944: ' But' (ID: 3072)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018625955563038588
    2. ' w' → logprob: -8.001862525939941
    3. ' if' → logprob: -8.001862525939941
    4. 'w' → logprob: -8.126862525939941
    5. ' for' → logprob: -8.251862525939941
    6. 'for' → logprob: -9.126862525939941
    7. '           ' → logprob: -9.126862525939941
    8. 'weight' → logprob: -9.626862525939941
    9. '       ' → logprob: -9.751862525939941
    10. 'if' → logprob: -9.751862525939941

Token 945: ' we' (ID: 581)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0193407535552979
    2. ' for' → logprob: -1.8943407535552979
    3. 'for' → logprob: -1.8943407535552979
    4. ' w' → logprob: -2.019340753555298
    5. 'w' → logprob: -2.269340753555298
    6. ' if' → logprob: -3.519340753555298
    7. 'if' → logprob: -3.894340753555298
    8. '#' → logprob: -4.519340515136719
    9. ' #' → logprob: -5.519340515136719
    10. ' the' → logprob: -5.894340515136719

Token 946: ' don't' (ID: 4128)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8151485323905945
    2. ' continue' → logprob: -1.0651485919952393
    3. ' need' → logprob: -2.4401485919952393
    4. ' must' → logprob: -2.9401485919952393
    5. 'continue' → logprob: -3.3151485919952393
    6. 'must' → logprob: -4.94014835357666
    7. '                ' → logprob: -5.19014835357666
    8. 'need' → logprob: -5.44014835357666
    9. '                   ' → logprob: -5.81514835357666
    10. ' have' → logprob: -6.19014835357666

Token 947: ' store' (ID: 4897)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.8485966324806213
    2. ' have' → logprob: -1.2235965728759766
    3. ' need' → logprob: -2.0985965728759766
    4. 'need' → logprob: -2.0985965728759766
    5. 'know' → logprob: -4.598596572875977
    6. '_have' → logprob: -5.973596572875977
    7. '               ' → logprob: -6.098596572875977
    8. '           ' → logprob: -6.098596572875977
    9. 'continue' → logprob: -6.098596572875977
    10. '       ' → logprob: -6.348596572875977

Token 948: ' s' (ID: 265)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.5183145999908447
    2. 'the' → logprob: -1.5183145999908447
    3. 'w' → logprob: -1.6433145999908447
    4. 'total' → logprob: -2.5183145999908447
    5. 'weights' → logprob: -2.8933145999908447
    6. '_' → logprob: -3.2683145999908447
    7. ' total' → logprob: -3.3933145999908447
    8. ' w' → logprob: -3.3933145999908447
    9. ')' → logprob: -4.018314361572266
    10. ' weights' → logprob: -4.143314361572266

Token 949: '_f' (ID: 1337)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5106578469276428
    2. '_' → logprob: -1.635657787322998
    3. '[_' → logprob: -3.135657787322998
    4. '[i' → logprob: -3.135657787322998
    5. '_weights' → logprob: -3.260657787322998
    6. '_f' → logprob: -3.510657787322998
    7. '_w' → logprob: -4.760657787322998
    8. ' _' → logprob: -5.135657787322998
    9. '[' → logprob: -5.260657787322998
    10. ')_' → logprob: -5.760657787322998

Token 950: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.777268648147583
    2. ' _' → logprob: -1.652268648147583
    3. '_' → logprob: -2.402268648147583
    4. ')' → logprob: -2.527268648147583
    5. '[' → logprob: -2.902268648147583
    6. '   ' → logprob: -3.652268648147583
    7. '_weights' → logprob: -3.902268648147583
    8. '[i' → logprob: -4.152268409729004
    9. 'weights' → logprob: -4.652268409729004
    10. 's' → logprob: -4.777268409729004

Token 951: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9571856260299683
    2. ':' → logprob: -1.4571856260299683
    3. '                ' → logprob: -1.9571856260299683
    4. ')' → logprob: -2.707185745239258
    5. ',' → logprob: -3.082185745239258
    6. ' :' → logprob: -3.832185745239258
    7. '                               ' → logprob: -4.457185745239258
    8. '):' → logprob: -4.457185745239258
    9. '                                ' → logprob: -5.082185745239258
    10. '<|end|>' → logprob: -5.207185745239258

Token 952: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.0042188167572021
    2. 'w' → logprob: -1.2542188167572021
    3. ' weights' → logprob: -1.8792188167572021
    4. 'weights' → logprob: -2.629218816757202
    5. ' total' → logprob: -2.879218816757202
    6. 'total' → logprob: -4.629219055175781
    7. 'dp' → logprob: -4.754219055175781
    8. ' the' → logprob: -5.254219055175781
    9. ' dp' → logprob: -5.254219055175781
    10. ' their' → logprob: -5.379219055175781

Token 953: '_f' (ID: 1337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5115984082221985
    2. '_i' → logprob: -1.7615983486175537
    3. ')' → logprob: -2.8865983486175537
    4. '[i' → logprob: -3.1365983486175537
    5. ' _' → logprob: -3.3865983486175537
    6. 's' → logprob: -3.3865983486175537
    7. '[' → logprob: -4.011598587036133
    8. '   ' → logprob: -4.886598587036133
    9. ']' → logprob: -5.386598587036133
    10. 'i' → logprob: -5.761598587036133

Token 954: '_j' (ID: 12021)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259639859199524
    2. '[' → logprob: -2.0096397399902344
    3. 's' → logprob: -2.7596397399902344
    4. '   ' → logprob: -2.7596397399902344
    5. '[i' → logprob: -2.8846397399902344
    6. '_' → logprob: -2.8846397399902344
    7. '_i' → logprob: -3.0096397399902344
    8. ']' → logprob: -3.1346397399902344
    9. '               ' → logprob: -3.3846397399902344
    10. ' _' → logprob: -3.6346397399902344

Token 955: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13909922540187836
    2. '                ' → logprob: -3.01409912109375
    3. ':' → logprob: -3.76409912109375
    4. ',' → logprob: -5.13909912109375
    5. '                
' → logprob: -5.13909912109375
    6. '                               ' → logprob: -5.26409912109375
    7. ')' → logprob: -5.63909912109375
    8. '                   ' → logprob: -5.63909912109375
    9. '```' → logprob: -5.76409912109375
    10. ':
' → logprob: -5.88909912109375

Token 956: ' previous' (ID: 5880)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8764020800590515
    2. ' previous' → logprob: -1.6264021396636963
    3. 'the' → logprob: -1.8764021396636963
    4. 'previous' → logprob: -2.7514021396636963
    5. ' order' → logprob: -3.1264021396636963
    6. ' each' → logprob: -3.8764021396636963
    7. ' all' → logprob: -4.001401901245117
    8. ' j' → logprob: -4.376401901245117
    9. 'each' → logprob: -4.501401901245117
    10. 'all' → logprob: -4.501401901245117

Token 957: ' foods' (ID: 18747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.236889362335205
    2. '[' → logprob: -2.486889362335205
    3. ' _' → logprob: -2.611889362335205
    4. '_i' → logprob: -2.611889362335205
    5. '[i' → logprob: -2.611889362335205
    6. 'weights' → logprob: -2.736889362335205
    7. '_' → logprob: -2.861889362335205
    8. '_mask' → logprob: -2.986889362335205
    9. '_weights' → logprob: -2.986889362335205
    10. '[
' → logprob: -3.861889362335205

Token 958: ' in' (ID: 306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31879493594169617
    2. '                ' → logprob: -2.1937949657440186
    3. ':' → logprob: -2.3187949657440186
    4. ',' → logprob: -4.3187947273254395
    5. '                   ' → logprob: -5.3187947273254395
    6. '                               ' → logprob: -5.3187947273254395
    7. ' :' → logprob: -5.3187947273254395
    8. ')' → logprob: -5.4437947273254395
    9. '                
' → logprob: -5.5687947273254395
    10. ':
' → logprob: -6.1937947273254395

Token 959: ' dp' (ID: 21546)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0917186737060547
    2. 'dp' → logprob: -1.2167186737060547
    3. ' the' → logprob: -1.5917186737060547
    4. ' dp' → logprob: -3.4667186737060547
    5. ' memory' → logprob: -3.5917186737060547
    6. ' order' → logprob: -3.7167186737060547
    7. ' previous' → logprob: -4.091718673706055
    8. 'order' → logprob: -4.591718673706055
    9. 'mask' → logprob: -4.591718673706055
    10. 'memory' → logprob: -4.591718673706055

Token 960: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21051785349845886
    2. '                ' → logprob: -1.8355178833007812
    3. ')' → logprob: -5.335517883300781
    4. '                
' → logprob: -6.210517883300781
    5. '                               ' → logprob: -6.335517883300781
    6. ',' → logprob: -6.585517883300781
    7. '                   ' → logprob: -6.710517883300781
    8. ' ' → logprob: -7.085517883300781
    9. '<|end|>' → logprob: -7.085517883300781
    10. ' )' → logprob: -7.210517883300781

Token 961: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42605334520339966
    2. '                ' → logprob: -1.4260532855987549
    3. '```' → logprob: -4.176053524017334
    4. 'w' → logprob: -4.301053524017334
    5. ' w' → logprob: -4.926053524017334
    6. '                   ' → logprob: -5.051053524017334
    7. ')' → logprob: -5.176053524017334
    8. ',' → logprob: -5.301053524017334
    9. ' ' → logprob: -5.551053524017334
    10. '                               ' → logprob: -5.676053524017334

Token 962: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.057042475789785385
    2. '                ' → logprob: -3.182042360305786
    3. '                               ' → logprob: -6.057042598724365
    4. ')' → logprob: -6.182042598724365
    5. '                
' → logprob: -6.807042598724365
    6. '                   ' → logprob: -6.807042598724365
    7. ',' → logprob: -6.932042598724365
    8. '...' → logprob: -7.432042598724365
    9. '           ' → logprob: -7.682042598724365
    10. '```' → logprob: -7.682042598724365

Token 963: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012413106858730316
    2. '                ' → logprob: -4.637413024902344
    3. '                               ' → logprob: -7.887413024902344
    4. ' continue' → logprob: -8.387413024902344
    5. '                
' → logprob: -8.387413024902344
    6. '           ' → logprob: -8.637413024902344
    7. '                   ' → logprob: -8.637413024902344
    8. '       ' → logprob: -8.762413024902344
    9. ' ' → logprob: -8.762413024902344
    10. '              ' → logprob: -9.012413024902344

Token 964: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033060393761843443
    2. '                ' → logprob: -6.128305912017822
    3. '                
' → logprob: -8.00330638885498
    4. ' continue' → logprob: -8.50330638885498
    5. '                   ' → logprob: -9.50330638885498
    6. '           ' → logprob: -10.12830638885498
    7. '                               ' → logprob: -10.12830638885498
    8. '              ' → logprob: -10.12830638885498
    9. ' ' → logprob: -10.37830638885498
    10. '       ' → logprob: -10.37830638885498

Token 965: ' Hence' (ID: 47682)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04856863245368004
    2. ' if' → logprob: -3.5485687255859375
    3. ' w' → logprob: -4.9235687255859375
    4. 'w' → logprob: -6.2985687255859375
    5. ' for' → logprob: -6.4235687255859375
    6. ' continue' → logprob: -6.7985687255859375
    7. 'if' → logprob: -6.7985687255859375
    8. '       ' → logprob: -6.9235687255859375
    9. '```' → logprob: -7.0485687255859375
    10. ' next' → logprob: -7.9235687255859375

Token 966: ' we' (ID: 581)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3115898072719574
    2. ' continue' → logprob: -1.8115898370742798
    3. '                ' → logprob: -3.3115897178649902
    4. ' for' → logprob: -3.9365897178649902
    5. ' if' → logprob: -4.56158971786499
    6. 'continue' → logprob: -5.06158971786499
    7. ' w' → logprob: -5.81158971786499
    8. '        ' → logprob: -6.06158971786499
    9. '           ' → logprob: -6.18658971786499
    10. '       ' → logprob: -6.31158971786499

Token 967: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.08491513878107071
    2. ' continue' → logprob: -2.9599151611328125
    3. 'need' → logprob: -4.4599151611328125
    4. '[' → logprob: -5.4599151611328125
    5. 'continue' → logprob: -5.8349151611328125
    6. '   ' → logprob: -6.2099151611328125
    7. ' can' → logprob: -6.7099151611328125
    8. ' must' → logprob: -6.8349151611328125
    9. '_need' → logprob: -6.8349151611328125
    10. 'import' → logprob: -7.0849151611328125

Token 968: ' store' (ID: 4897)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.4418918490409851
    2. ' store' → logprob: -1.1918919086456299
    3. '       ' → logprob: -3.94189190864563
    4. 'calculate' → logprob: -4.691891670227051
    5. '               ' → logprob: -5.316891670227051
    6. '           ' → logprob: -5.566891670227051
    7. 'continue' → logprob: -5.816891670227051
    8. 'import' → logprob: -6.566891670227051
    9. 'maint' → logprob: -6.566891670227051
    10. '                   ' → logprob: -6.941891670227051

Token 969: ' in' (ID: 306)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.7891186475753784
    2. ' w' → logprob: -1.9141186475753784
    3. ' the' → logprob: -2.039118766784668
    4. ',' → logprob: -2.789118766784668
    5. 'dp' → logprob: -3.039118766784668
    6. ' weights' → logprob: -3.164118766784668
    7. 'w' → logprob: -3.414118766784668
    8. ' (' → logprob: -3.414118766784668
    9. ' s' → logprob: -3.539118766784668
    10. ')' → logprob: -3.664118766784668

Token 970: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1887633353471756
    2. 'the' → logprob: -2.063763380050659
    3. ' the' → logprob: -4.31376314163208
    4. ' dp' → logprob: -4.68876314163208
    5. 'each' → logprob: -5.18876314163208
    6. 'additional' → logprob: -6.18876314163208
    7. 'order' → logprob: -6.31376314163208
    8. 'mask' → logprob: -6.43876314163208
    9. ' each' → logprob: -6.68876314163208
    10. 'w' → logprob: -6.81376314163208

Token 971: ' state' (ID: 2608)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.222364068031311
    2. '[' → logprob: -1.472364068031311
    3. '_weights' → logprob: -1.472364068031311
    4. '_weight' → logprob: -3.0973639488220215
    5. ')' → logprob: -3.5973639488220215
    6. '   ' → logprob: -3.7223639488220215
    7. '_mask' → logprob: -3.7223639488220215
    8. ' _' → logprob: -3.9723639488220215
    9. '[
' → logprob: -3.9723639488220215
    10. '[i' → logprob: -4.3473639488220215

Token 972: ' the' (ID: 290)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6337339878082275
    2. '_' → logprob: -1.8837339878082275
    3. '   ' → logprob: -2.6337339878082275
    4. ')' → logprob: -2.7587339878082275
    5. ':' → logprob: -3.1337339878082275
    6. ',' → logprob: -3.8837339878082275
    7. '[i' → logprob: -3.8837339878082275
    8. '[
' → logprob: -3.8837339878082275
    9. ' _' → logprob: -4.758733749389648
    10. '<|end|>' → logprob: -5.008733749389648

Token 973: ' minimal' (ID: 19957)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9571237564086914
    2. ' total' → logprob: -1.3321237564086914
    3. 'max' → logprob: -2.7071237564086914
    4. ' min' → logprob: -2.8321237564086914
    5. ' minimal' → logprob: -2.9571237564086914
    6. 'total' → logprob: -3.4571237564086914
    7. 'weights' → logprob: -3.4571237564086914
    8. ' weights' → logprob: -3.8321237564086914
    9. ' w' → logprob: -3.9571237564086914
    10. 'w' → logprob: -4.707123756408691

Token 974: ' "' (ID: 392)
  Prédit: ' required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' required' → logprob: -0.47743120789527893
    2. ' s' → logprob: -2.727431297302246
    3. ' stable' → logprob: -3.352431297302246
    4. ' stability' → logprob: -3.352431297302246
    5. ' crushing' → logprob: -4.102431297302246
    6. ' weight' → logprob: -4.227431297302246
    7. 's' → logprob: -4.227431297302246
    8. '_s' → logprob: -4.352431297302246
    9. ' crush' → logprob: -4.352431297302246
    10. ' safe' → logprob: -4.352431297302246

Token 975: 'strength' (ID: 146921)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0331320762634277
    2. 'extra' → logprob: -2.2831320762634277
    3. 'weight' → logprob: -2.2831320762634277
    4. 'cr' → logprob: -2.5331320762634277
    5. ' max' → logprob: -2.7831320762634277
    6. 'additional' → logprob: -2.7831320762634277
    7. 'above' → logprob: -3.1581320762634277
    8. 'required' → logprob: -3.4081320762634277
    9. ' required' → logprob: -3.9081320762634277
    10. 'ex' → logprob: -4.408132076263428

Token 976: ' minus' (ID: 40335)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9068102836608887
    2. '_threshold' → logprob: -2.2818102836608887
    3. '_required' → logprob: -2.5318102836608887
    4. '_' → logprob: -2.5318102836608887
    5. ',' → logprob: -2.9068102836608887
    6. ' )' → logprob: -3.6568102836608887
    7. ' _' → logprob: -3.6568102836608887
    8. '_requirement' → logprob: -3.7818102836608887
    9. ')_' → logprob: -3.9068102836608887
    10. '_require' → logprob: -3.9068102836608887

Token 977: ' weights' (ID: 28460)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -1.0638141632080078
    2. ' weight' → logprob: -1.6888141632080078
    3. ' total' → logprob: -1.8138141632080078
    4. '1' → logprob: -2.938814163208008
    5. 'total' → logprob: -3.313814163208008
    6. ' w' → logprob: -3.438814163208008
    7. 'w' → logprob: -3.563814163208008
    8. ' ' → logprob: -3.688814163208008
    9. ' max' → logprob: -3.688814163208008
    10. ' sum' → logprob: -3.688814163208008

Token 978: ' above' (ID: 5151)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40960970520973206
    2. '_diff' → logprob: -2.534609794616699
    3. '_difference' → logprob: -2.659609794616699
    4. ')' → logprob: -2.784609794616699
    5. ' _' → logprob: -3.409609794616699
    6. 'difference' → logprob: -4.159609794616699
    7. ' difference' → logprob: -4.409609794616699
    8. '_sur' → logprob: -5.159609794616699
    9. ' )' → logprob: -5.284609794616699
    10. ')_' → logprob: -5.409609794616699

Token 979: '"' (ID: 1)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4293452203273773
    2. ')' → logprob: -1.3043452501296997
    3. '_difference' → logprob: -3.92934513092041
    4. '_diff' → logprob: -4.42934513092041
    5. ')_' → logprob: -4.80434513092041
    6. ' _' → logprob: -5.05434513092041
    7. 'difference' → logprob: -5.42934513092041
    8. ' difference' → logprob: -5.55434513092041
    9. '_)' → logprob: -6.05434513092041
    10. '[' → logprob: -6.05434513092041

Token 980: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7655792832374573
    2. ')' → logprob: -2.0155792236328125
    3. '[' → logprob: -2.6405792236328125
    4. '       ' → logprob: -3.0155792236328125
    5. '_' → logprob: -3.2655792236328125
    6. ',' → logprob: -3.6405792236328125
    7. '   ' → logprob: -3.6405792236328125
    8. '):' → logprob: -3.6405792236328125
    9. ' :' → logprob: -4.0155792236328125
    10. '<|end|>' → logprob: -4.3905792236328125

Token 981: ' every' (ID: 1753)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.2465869188308716
    2. 'each' → logprob: -1.3715869188308716
    3. ' all' → logprob: -1.8715869188308716
    4. 'all' → logprob: -2.371586799621582
    5. ' previous' → logprob: -2.996586799621582
    6. ' the' → logprob: -3.121586799621582
    7. 'the' → logprob: -3.121586799621582
    8. 'previous' → logprob: -3.621586799621582
    9. ')' → logprob: -3.996586799621582
    10. 'dp' → logprob: -5.121586799621582

Token 982: ' food' (ID: 4232)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.19941435754299164
    2. ' food' → logprob: -3.0744142532348633
    3. 'mask' → logprob: -4.074414253234863
    4. ')' → logprob: -4.324414253234863
    5. '_food' → logprob: -4.449414253234863
    6. ' j' → logprob: -4.699414253234863
    7. 'previous' → logprob: -4.699414253234863
    8. 'stack' → logprob: -4.949414253234863
    9. 'dp' → logprob: -5.199414253234863
    10. '_j' → logprob: -5.199414253234863

Token 983: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3131874799728394
    2. ':' → logprob: -1.5631874799728394
    3. '<|end|>' → logprob: -1.5631874799728394
    4. ')' → logprob: -2.188187599182129
    5. '[' → logprob: -3.063187599182129
    6. ' :' → logprob: -3.313187599182129
    7. '_' → logprob: -3.563187599182129
    8. ' )' → logprob: -4.313187599182129
    9. '<|end|>' → logprob: -4.313187599182129
    10. '    ' → logprob: -5.188187599182129

Token 984: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 985: ' do' (ID: 621)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.059706345200538635
    2. '...' → logprob: -3.559706449508667
    3. 'the' → logprob: -4.809706211090088
    4. 'continue' → logprob: -5.059706211090088
    5. 'import' → logprob: -5.684706211090088
    6. '<|end|>' → logprob: -6.059706211090088
    7. ' #' → logprob: -6.559706211090088
    8. 'not' → logprob: -7.184706211090088
    9. 'None' → logprob: -7.309706211090088
    10. 'w' → logprob: -7.309706211090088

Token 986: ' it' (ID: 480)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.564925491809845
    2. 'not' → logprob: -1.0649254322052002
    3. 'n't' → logprob: -2.8149254322052
    4. ' the' → logprob: -5.439925670623779
    5. '_not' → logprob: -5.814925670623779
    6. '           ' → logprob: -5.939925670623779
    7. 'n' → logprob: -5.939925670623779
    8. 'the' → logprob: -6.064925670623779
    9. '   ' → logprob: -6.439925670623779
    10. '               ' → logprob: -6.564925670623779

Token 987: ' differently' (ID: 36490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5719122886657715
    2. '               ' → logprob: -1.8219122886657715
    3. '[' → logprob: -2.1969122886657715
    4. ' )' → logprob: -3.0719122886657715
    5. '   ' → logprob: -3.3219122886657715
    6. '           ' → logprob: -3.3219122886657715
    7. ' ' → logprob: -3.5719122886657715
    8. ',' → logprob: -3.5719122886657715
    9. '                ' → logprob: -3.8219122886657715
    10. '       ' → logprob: -3.8219122886657715

Token 988: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14015299081802368
    2. '                ' → logprob: -2.515152931213379
    3. '<|end|>' → logprob: -4.390152931213379
    4. ')' → logprob: -5.390152931213379
    5. '       ' → logprob: -5.515152931213379
    6. ':' → logprob: -5.515152931213379
    7. '<|end|>' → logprob: -6.015152931213379
    8. ',' → logprob: -6.265152931213379
    9. '        ' → logprob: -6.265152931213379
    10. '                               ' → logprob: -6.390152931213379

Token 989: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010985808447003365
    2. '                ' → logprob: -5.760985851287842
    3. '<|end|>' → logprob: -6.010985851287842
    4. '       ' → logprob: -6.510985851287842
    5. '```' → logprob: -7.385985851287842
    6. '                
' → logprob: -7.760985851287842
    7. ' continue' → logprob: -8.010985374450684
    8. ')' → logprob: -8.135985374450684
    9. '           ' → logprob: -8.135985374450684
    10. ' continues' → logprob: -8.635985374450684

Token 990: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023292528465390205
    2. '       ' → logprob: -5.523292541503906
    3. '<|end|>' → logprob: -5.523292541503906
    4. '                ' → logprob: -5.773292541503906
    5. ' if' → logprob: -6.148292541503906
    6. ' continue' → logprob: -6.398292541503906
    7. '           ' → logprob: -7.023292541503906
    8. '        ' → logprob: -7.023292541503906
    9. ' for' → logprob: -7.148292541503906
    10. '...' → logprob: -7.273292541503906

Token 991: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001938750152476132
    2. '                ' → logprob: -7.626938819885254
    3. '                
' → logprob: -7.876938819885254
    4. '       ' → logprob: -8.126938819885254
    5. '<|end|>' → logprob: -8.626938819885254
    6. ' continue' → logprob: -9.126938819885254
    7. '           ' → logprob: -9.876938819885254
    8. '                   ' → logprob: -10.001938819885254
    9. ' ' → logprob: -10.001938819885254
    10. '```' → logprob: -10.376938819885254

Token 992: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0456872284412384
    2. ' if' → logprob: -4.295687198638916
    3. ' continue' → logprob: -4.795687198638916
    4. '                ' → logprob: -5.295687198638916
    5. '       ' → logprob: -5.795687198638916
    6. '           ' → logprob: -5.920687198638916
    7. ' for' → logprob: -6.170687198638916
    8. 'continue' → logprob: -6.545687198638916
    9. '                   ' → logprob: -6.795687198638916
    10. 'if' → logprob: -7.170687198638916

Token 993: ' A' (ID: 355)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21500501036643982
    2. ' if' → logprob: -2.4650049209594727
    3. ' w' → logprob: -3.2150049209594727
    4. 'w' → logprob: -4.215004920959473
    5. ' next' → logprob: -4.715004920959473
    6. ' for' → logprob: -5.090004920959473
    7. 'if' → logprob: -5.215004920959473
    8. ' continue' → logprob: -5.715004920959473
    9. '       ' → logprob: -5.840004920959473
    10. ' total' → logprob: -5.965004920959473

Token 994: ' simpler' (ID: 48697)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.6140114068984985
    2. '       ' → logprob: -1.6140114068984985
    3. '           ' → logprob: -2.614011287689209
    4. '               ' → logprob: -3.364011287689209
    5. 'dding' → logprob: -3.364011287689209
    6. 'cc' → logprob: -4.114011287689209
    7. ' better' → logprob: -4.864011287689209
    8. '                   ' → logprob: -4.989011287689209
    9. ' possible' → logprob: -5.114011287689209
    10. '        ' → logprob: -5.114011287689209

Token 995: ' approach' (ID: 7139)
  Prédit: ' approach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.1036304160952568
    2. ' way' → logprob: -2.853630304336548
    3. 'appro' → logprob: -3.603630304336548
    4. ' solution' → logprob: -5.353630542755127
    5. ' alternative' → logprob: -6.978630542755127
    6. ' and' → logprob: -6.978630542755127
    7. 'token' → logprob: -7.103630542755127
    8. 'way' → logprob: -7.478630542755127
    9. 'solution' → logprob: -7.478630542755127
    10. 'and' → logprob: -7.728630542755127

Token 996: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4490089416503906
    2. '               ' → logprob: -1.1990089416503906
    3. '                ' → logprob: -3.9490089416503906
    4. ':
' → logprob: -5.074008941650391
    5. '                   ' → logprob: -5.074008941650391
    6. '           ' → logprob: -5.699008941650391
    7. ' :' → logprob: -6.199008941650391
    8. 'import' → logprob: -6.324008941650391
    9. ' for' → logprob: -6.449008941650391
    10. ',' → logprob: -6.449008941650391

Token 997: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010329904966056347
    2. '                ' → logprob: -5.385329723358154
    3. '       ' → logprob: -7.260329723358154
    4. ' for' → logprob: -7.260329723358154
    5. '```' → logprob: -7.385329723358154
    6. ' continue' → logprob: -7.510329723358154
    7. '                   ' → logprob: -7.760329723358154
    8. ' if' → logprob: -7.760329723358154
    9. '                
' → logprob: -8.010330200195312
    10. '           ' → logprob: -8.385330200195312

Token 998: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11486006528139114
    2. ' for' → logprob: -3.3648600578308105
    3. ' continue' → logprob: -3.8648600578308105
    4. ' if' → logprob: -4.2398600578308105
    5. '       ' → logprob: -4.7398600578308105
    6. 'for' → logprob: -4.9898600578308105
    7. '```' → logprob: -5.4898600578308105
    8. '           ' → logprob: -5.6148600578308105
    9. 'continue' → logprob: -5.7398600578308105
    10. ' #' → logprob: -6.3648600578308105

Token 999: ' When' (ID: 4296)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40341389179229736
    2. ' if' → logprob: -2.653413772583008
    3. 'for' → logprob: -3.278413772583008
    4. ' for' → logprob: -3.528413772583008
    5. 'if' → logprob: -3.528413772583008
    6. ' w' → logprob: -3.778413772583008
    7. '       ' → logprob: -3.903413772583008
    8. ' #' → logprob: -3.903413772583008
    9. 'dp' → logprob: -4.278413772583008
    10. ' continue' → logprob: -4.528413772583008

Token 1000: ' we' (ID: 581)
  Prédit: 'adding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adding' → logprob: -0.3228250741958618
    2. ' adding' → logprob: -2.5728249549865723
    3. 'checking' → logprob: -2.9478249549865723
    4. 'i' → logprob: -3.3228249549865723
    5. 'placing' → logprob: -3.5728249549865723
    6. 'trying' → logprob: -4.197824954986572
    7. 'len' → logprob: -4.572824954986572
    8. '               ' → logprob: -4.822824954986572
    9. 'we' → logprob: -4.947824954986572
    10. 'consider' → logprob: -5.072824954986572

Token 1001: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -1.149187684059143
    2. 'add' → logprob: -1.274187684059143
    3. 'try' → logprob: -2.3991875648498535
    4. 'check' → logprob: -2.8991875648498535
    5. 'continue' → logprob: -2.8991875648498535
    6. ' try' → logprob: -3.3991875648498535
    7. 'consider' → logprob: -3.6491875648498535
    8. ' check' → logprob: -3.7741875648498535
    9. 'append' → logprob: -4.0241875648498535
    10. ' continue' → logprob: -4.1491875648498535

Token 1002: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5837579965591431
    2. ' i' → logprob: -1.083757996559143
    3. '_i' → logprob: -3.5837578773498535
    4. ' the' → logprob: -3.7087578773498535
    5. ' a' → logprob: -3.9587578773498535
    6. 'the' → logprob: -4.4587578773498535
    7. ')' → logprob: -4.7087578773498535
    8. '_' → logprob: -5.7087578773498535
    9. ' _' → logprob: -5.8337578773498535
    10. ' ' → logprob: -6.8337578773498535

Token 1003: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4894505739212036
    2. ' on' → logprob: -1.4894505739212036
    3. '_' → logprob: -2.114450454711914
    4. ',' → logprob: -2.114450454711914
    5. '<|end|>' → logprob: -2.364450454711914
    6. ' _' → logprob: -2.864450454711914
    7. 'on' → logprob: -3.864450454711914
    8. '[' → logprob: -4.114450454711914
    9. '_on' → logprob: -4.239450454711914
    10. ' ,' → logprob: -4.364450454711914

Token 1004: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.4397212862968445
    2. 'top' → logprob: -1.1897213459014893
    3. '_top' → logprob: -3.0647213459014893
    4. 'the' → logprob: -5.43972110748291
    5. ' the' → logprob: -8.68972110748291
    6. 'Top' → logprob: -9.68972110748291
    7. '[top' → logprob: -10.06472110748291
    8. '(top' → logprob: -10.18972110748291
    9. '-top' → logprob: -10.31472110748291
    10. '	top' → logprob: -10.43972110748291

Token 1005: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4453558921813965
    2. ':' → logprob: -1.8203558921813965
    3. ',' → logprob: -2.0703558921813965
    4. '                   ' → logprob: -3.4453558921813965
    5. '                ' → logprob: -5.4453558921813965
    6. ' :' → logprob: -5.4453558921813965
    7. '                       ' → logprob: -5.4453558921813965
    8. ':
' → logprob: -5.6953558921813965
    9. '                           ' → logprob: -5.6953558921813965
    10. '                               ' → logprob: -5.8203558921813965

Token 1006: ' the' (ID: 290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3655282258987427
    2. ' total' → logprob: -2.365528106689453
    3. ' if' → logprob: -2.740528106689453
    4. ' new' → logprob: -3.865528106689453
    5. '                   ' → logprob: -3.865528106689453
    6. ' w' → logprob: -4.490528106689453
    7. ' continue' → logprob: -4.490528106689453
    8. ' dp' → logprob: -4.490528106689453
    9. ' for' → logprob: -4.740528106689453
    10. ' #' → logprob: -4.990528106689453

Token 1007: ' weights' (ID: 28460)
  Prédit: ' previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' previous' → logprob: -1.4226444959640503
    2. ' new' → logprob: -1.6726444959640503
    3. ' total' → logprob: -1.6726444959640503
    4. 'w' → logprob: -2.67264461517334
    5. 'total' → logprob: -3.04764461517334
    6. 'prev' → logprob: -3.54764461517334
    7. ' next' → logprob: -3.54764461517334
    8. 'previous' → logprob: -3.54764461517334
    9. 'dp' → logprob: -4.04764461517334
    10. 'new' → logprob: -4.17264461517334

Token 1008: ' above' (ID: 5151)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.008939418941736221
    2. '_of' → logprob: -5.508939266204834
    3. '_' → logprob: -6.383939266204834
    4. 'above' → logprob: -6.633939266204834
    5. ' of' → logprob: -8.383939743041992
    6. '_added' → logprob: -8.508939743041992
    7. ' above' → logprob: -8.508939743041992
    8. ' _' → logprob: -8.508939743041992
    9. '_b' → logprob: -9.008939743041992
    10. 'of' → logprob: -9.258939743041992

Token 1009: ' previous' (ID: 5880)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5365158915519714
    2. ' =' → logprob: -1.2865159511566162
    3. '_i' → logprob: -3.036515951156616
    4. '[' → logprob: -3.661515951156616
    5. ' [' → logprob: -4.286515712738037
    6. '_of' → logprob: -4.411515712738037
    7. '[_' → logprob: -4.786515712738037
    8. '=' → logprob: -5.161515712738037
    9. ' _' → logprob: -5.161515712738037
    10. '_mask' → logprob: -5.786515712738037

Token 1010: ' foods' (ID: 18747)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2723878622055054
    2. '_mask' → logprob: -1.3973878622055054
    3. '_food' → logprob: -1.3973878622055054
    4. '_' → logprob: -2.647387981414795
    5. ' _' → logprob: -3.522387981414795
    6. '[_' → logprob: -3.522387981414795
    7. '_f' → logprob: -4.272387981414795
    8. '[i' → logprob: -4.522387981414795
    9. ' [' → logprob: -5.022387981414795
    10. '_i' → logprob: -5.022387981414795

Token 1011: ' increases' (ID: 21073)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.571601152420044
    2. '[i' → logprob: -2.196601152420044
    3. '[' → logprob: -2.321601152420044
    4. ' +' → logprob: -2.446601152420044
    5. ' =' → logprob: -3.071601152420044
    6. '+' → logprob: -4.321600914001465
    7. ' +=' → logprob: -4.696600914001465
    8. ' are' → logprob: -4.821600914001465
    9. '```' → logprob: -4.946600914001465
    10. '=' → logprob: -5.571600914001465

Token 1012: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.47999468445777893
    2. ' by' → logprob: -0.9799946546554565
    3. '               ' → logprob: -5.729994773864746
    4. '+' → logprob: -6.604994773864746
    5. ' +' → logprob: -7.604994773864746
    6. '```' → logprob: -8.104994773864746
    7. '=' → logprob: -9.229994773864746
    8. '                   ' → logprob: -9.354994773864746
    9. ' +=' → logprob: -9.354994773864746
    10. '[' → logprob: -10.354994773864746

Token 1013: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.3533390462398529
    2. 'w' → logprob: -1.2283390760421753
    3. '1' → logprob: -6.353339195251465
    4. ' +' → logprob: -7.728339195251465
    5. ' ' → logprob: -7.853339195251465
    6. '```' → logprob: -8.353339195251465
    7. ' foods' → logprob: -8.478339195251465
    8. ' total' → logprob: -8.478339195251465
    9. 'foods' → logprob: -8.478339195251465
    10. '    ' → logprob: -8.603339195251465

Token 1014: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.40315696597099304
    2. '[i' → logprob: -1.6531569957733154
    3. '_' → logprob: -2.2781569957733154
    4. '[_' → logprob: -3.4031569957733154
    5. '_[' → logprob: -6.528156757354736
    6. ' _' → logprob: -6.528156757354736
    7. '[' → logprob: -7.278156757354736
    8. 'i' → logprob: -7.778156757354736
    9. '   ' → logprob: -9.153157234191895
    10. '```' → logprob: -9.903157234191895

Token 1015: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05233665928244591
    2. '                ' → logprob: -3.5523366928100586
    3. '                   ' → logprob: -5.927336692810059
    4. ',' → logprob: -6.052336692810059
    5. '                
' → logprob: -6.052336692810059
    6. '                               ' → logprob: -6.177336692810059
    7. ')' → logprob: -6.302336692810059
    8. ' +' → logprob: -6.552336692810059
    9. ':' → logprob: -6.802336692810059
    10. '           ' → logprob: -6.802336692810059

Token 1016: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005994563456624746
    2. '                ' → logprob: -6.00599479675293
    3. '                   ' → logprob: -7.25599479675293
    4. ' ' → logprob: -7.38099479675293
    5. '           ' → logprob: -7.88099479675293
    6. '                               ' → logprob: -8.13099479675293
    7. '                
' → logprob: -8.13099479675293
    8. '       ' → logprob: -9.00599479675293
    9. '                       ' → logprob: -9.00599479675293
    10. '              ' → logprob: -9.38099479675293

Token 1017: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006946959998458624
    2. '                ' → logprob: -5.506947040557861
    3. '                   ' → logprob: -7.006947040557861
    4. '                
' → logprob: -7.256947040557861
    5. '           ' → logprob: -8.756946563720703
    6. ' ' → logprob: -8.756946563720703
    7. '                               ' → logprob: -9.131946563720703
    8. ')' → logprob: -9.506946563720703
    9. '                       ' → logprob: -9.631946563720703
    10. '```' → logprob: -9.756946563720703

Token 1018: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026406539604067802
    2. '                ' → logprob: -4.776406764984131
    3. ' +' → logprob: -5.276406764984131
    4. '+' → logprob: -5.401406764984131
    5. '                   ' → logprob: -6.151406764984131
    6. '                
' → logprob: -6.651406764984131
    7. '                               ' → logprob: -6.901406764984131
    8. ' ' → logprob: -7.651406764984131
    9. '                       ' → logprob: -8.026406288146973
    10. '           ' → logprob: -8.276406288146973

Token 1019: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7827617526054382
    2. '               ' → logprob: -1.032761812210083
    3. 'for' → logprob: -2.907761812210083
    4. ' if' → logprob: -3.157761812210083
    5. ' w' → logprob: -3.907761812210083
    6. ' new' → logprob: -4.157761573791504
    7. '                   ' → logprob: -4.282761573791504
    8. 'w' → logprob: -5.032761573791504
    9. ' total' → logprob: -5.282761573791504
    10. '           ' → logprob: -5.407761573791504

Token 1020: ' every' (ID: 1753)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6468967795372009
    2. ' j' → logprob: -1.1468968391418457
    3. 'prev' → logprob: -2.5218968391418457
    4. ' prev' → logprob: -3.7718968391418457
    5. '_j' → logprob: -4.396896839141846
    6. 'w' → logprob: -4.646896839141846
    7. ' previous' → logprob: -4.646896839141846
    8. 'previous' → logprob: -5.146896839141846
    9. '   ' → logprob: -5.646896839141846
    10. ' w' → logprob: -5.896896839141846

Token 1021: ' previous' (ID: 5880)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.7894048094749451
    2. ' _' → logprob: -1.9144048690795898
    3. '_j' → logprob: -2.03940486907959
    4. 'previous' → logprob: -2.66440486907959
    5. 'f' → logprob: -3.03940486907959
    6. 'food' → logprob: -3.66440486907959
    7. ' previous' → logprob: -3.78940486907959
    8. 'prev' → logprob: -3.91440486907959
    9. '_prev' → logprob: -4.16440486907959
    10. ' f' → logprob: -4.28940486907959

Token 1022: ' food' (ID: 4232)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.9854914546012878
    2. '_food' → logprob: -1.2354915142059326
    3. '_' → logprob: -2.6104915142059326
    4. ' _' → logprob: -2.7354915142059326
    5. 'food' → logprob: -3.4854915142059326
    6. '[' → logprob: -3.4854915142059326
    7. '               ' → logprob: -3.6104915142059326
    8. '_mask' → logprob: -3.7354915142059326
    9. '           ' → logprob: -4.3604912757873535
    10. '[_' → logprob: -4.4854912757873535

Token 1023: ' k' (ID: 372)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.934354543685913
    2. '[' → logprob: -1.934354543685913
    3. '               ' → logprob: -1.934354543685913
    4. '           ' → logprob: -2.184354543685913
    5. '[i' → logprob: -2.434354543685913
    6. ' _' → logprob: -2.809354543685913
    7. '_' → logprob: -3.184354543685913
    8. '   ' → logprob: -3.434354543685913
    9. ':' → logprob: -3.559354543685913
    10. ' +' → logprob: -4.059354782104492

Token 1024: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3104206323623657
    2. ':' → logprob: -1.4354206323623657
    3. ',' → logprob: -1.8104206323623657
    4. '                   ' → logprob: -2.560420513153076
    5. ' in' → logprob: -2.810420513153076
    6. ':
' → logprob: -3.310420513153076
    7. '                ' → logprob: -4.185420513153076
    8. '                           ' → logprob: -4.560420513153076
    9. '):
' → logprob: -4.685420513153076
    10. ' =' → logprob: -4.810420513153076

Token 1025: ' check' (ID: 2371)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6855915188789368
    2. '               ' → logprob: -1.310591459274292
    3. ' w' → logprob: -3.560591459274292
    4. ' we' → logprob: -3.560591459274292
    5. ' for' → logprob: -3.560591459274292
    6. 'if' → logprob: -3.685591459274292
    7. ' s' → logprob: -4.185591697692871
    8. '#' → logprob: -4.560591697692871
    9. '                   ' → logprob: -4.560591697692871
    10. ' k' → logprob: -4.685591697692871

Token 1026: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42986756563186646
    2. '               ' → logprob: -1.8048675060272217
    3. 'if' → logprob: -2.4298675060272217
    4. ' k' → logprob: -4.054867744445801
    5. '                   ' → logprob: -4.429867744445801
    6. ' for' → logprob: -4.679867744445801
    7. '           ' → logprob: -4.929867744445801
    8. 'for' → logprob: -5.054867744445801
    9. ')' → logprob: -5.304867744445801
    10. 'k' → logprob: -5.304867744445801

Token 1027: '_k' (ID: 11637)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.2913808822631836
    2. '_i' → logprob: -1.9163808822631836
    3. '_' → logprob: -3.0413808822631836
    4. '_k' → logprob: -3.7913808822631836
    5. ')' → logprob: -4.916380882263184
    6. '               ' → logprob: -5.666380882263184
    7. '[_' → logprob: -5.791380882263184
    8. ' _' → logprob: -6.041380882263184
    9. '_j' → logprob: -6.041380882263184
    10. ')_' → logprob: -6.041380882263184

Token 1028: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.24913108348846436
    2. ' -' → logprob: -2.249131202697754
    3. '>=' → logprob: -2.499131202697754
    4. '[' → logprob: -5.249131202697754
    5. '_k' → logprob: -5.999131202697754
    6. ' >' → logprob: -5.999131202697754
    7. '-' → logprob: -5.999131202697754
    8. ')>=' → logprob: -6.249131202697754
    9. ')' → logprob: -6.374131202697754
    10. '[k' → logprob: -6.374131202697754

Token 1029: ' weights' (ID: 28460)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.4858703017234802
    2. 'w' → logprob: -1.235870361328125
    3. ' total' → logprob: -3.235870361328125
    4. ' weights' → logprob: -4.360870361328125
    5. ' dp' → logprob: -4.485870361328125
    6. 'total' → logprob: -4.610870361328125
    7. 'dp' → logprob: -4.735870361328125
    8. 'weights' → logprob: -5.110870361328125
    9. 'weight' → logprob: -6.735870361328125
    10. ' weight' → logprob: -7.110870361328125

Token 1030: ' of' (ID: 328)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.5674841403961182
    2. '[i' → logprob: -1.9424841403961182
    3. '_i' → logprob: -2.442484140396118
    4. ' _' → logprob: -3.442484140396118
    5. '_k' → logprob: -3.567484140396118
    6. '_of' → logprob: -3.692484140396118
    7. ' +' → logprob: -3.817484140396118
    8. '_' → logprob: -4.067483901977539
    9. 'above' → logprob: -4.567483901977539
    10. '[k' → logprob: -4.567483901977539

Token 1031: ' foods' (ID: 18747)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' → logprob: -1.2283464670181274
    2. 'above' → logprob: -1.3533464670181274
    3. ' above' → logprob: -1.9783464670181274
    4. ' k' → logprob: -2.853346347808838
    5. 'k' → logprob: -2.978346347808838
    6. ' foods' → logprob: -3.103346347808838
    7. 'the' → logprob: -3.478346347808838
    8. 'i' → logprob: -3.603346347808838
    9. ' the' → logprob: -3.728346347808838
    10. ' i' → logprob: -3.853346347808838

Token 1032: ' above' (ID: 5151)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.1178969219326973
    2. 'above' → logprob: -2.2428970336914062
    3. ' above' → logprob: -5.617897033691406
    4. '[' → logprob: -7.867897033691406
    5. '
' → logprob: -8.742897033691406
    6. '```' → logprob: -8.992897033691406
    7. '               ' → logprob: -9.367897033691406
    8. ' ' → logprob: -9.617897033691406
    9. '           ' → logprob: -9.867897033691406
    10. '_' → logprob: -10.117897033691406

Token 1033: ' it' (ID: 480)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13669562339782715
    2. '[i' → logprob: -4.136695861816406
    3. '[' → logprob: -4.261695861816406
    4. '                   ' → logprob: -4.386695861816406
    5. '                ' → logprob: -4.636695861816406
    6. '                               ' → logprob: -4.761695861816406
    7. '                           ' → logprob: -5.136695861816406
    8. ' +' → logprob: -5.136695861816406
    9. '           ' → logprob: -5.386695861816406
    10. '			' → logprob: -5.511695861816406

Token 1034: ' +' (ID: 659)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23211385309696198
    2. '                ' → logprob: -3.232113838195801
    3. ' +' → logprob: -3.482113838195801
    4. '                               ' → logprob: -4.232113838195801
    5. '<|end|>' → logprob: -4.357113838195801
    6. ')' → logprob: -4.482113838195801
    7. '[' → logprob: -4.482113838195801
    8. '+' → logprob: -4.857113838195801
    9. '                   ' → logprob: -4.982113838195801
    10. ':' → logprob: -4.982113838195801

Token 1035: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.19021175801753998
    2. ' w' → logprob: -1.8152117729187012
    3. 'foods' → logprob: -5.065211772918701
    4. ' foods' → logprob: -5.690211772918701
    5. '               ' → logprob: -9.190211296081543
    6. ' k' → logprob: -9.315211296081543
    7. '                   ' → logprob: -9.690211296081543
    8. '```' → logprob: -9.690211296081543
    9. 'k' → logprob: -10.190211296081543
    10. 'weights' → logprob: -10.315211296081543

Token 1036: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0037645704578608274
    2. '_k' → logprob: -5.878764629364014
    3. '_' → logprob: -8.003764152526855
    4. '[i' → logprob: -8.253764152526855
    5. '[_' → logprob: -8.378764152526855
    6. '[' → logprob: -10.503764152526855
    7. ' _' → logprob: -10.753764152526855
    8. '[k' → logprob: -11.128764152526855
    9. ')_' → logprob: -11.503764152526855
    10. '_j' → logprob: -11.753764152526855

Token 1037: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09713036566972733
    2. '                ' → logprob: -3.097130298614502
    3. '<|end|>' → logprob: -4.347130298614502
    4. '			' → logprob: -4.972130298614502
    5. '                               ' → logprob: -5.722130298614502
    6. '<|end|>' → logprob: -5.847130298614502
    7. '                   ' → logprob: -5.972130298614502
    8. '           ' → logprob: -6.097130298614502
    9. '                
' → logprob: -6.347130298614502
    10. '                           ' → logprob: -6.972130298614502

Token 1038: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006774812005460262
    2. '                               ' → logprob: -6.50677490234375
    3. '                   ' → logprob: -6.75677490234375
    4. '                
' → logprob: -6.88177490234375
    5. '                ' → logprob: -7.00677490234375
    6. '                       ' → logprob: -8.13177490234375
    7. '```' → logprob: -8.13177490234375
    8. ' for' → logprob: -8.63177490234375
    9. '                           ' → logprob: -8.75677490234375
    10. '           ' → logprob: -9.25677490234375

Token 1039: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017836278304457664
    2. '                ' → logprob: -5.017836093902588
    3. '                
' → logprob: -6.142836093902588
    4. '<|end|>' → logprob: -6.392836093902588
    5. ' ' → logprob: -6.892836093902588
    6. '                               ' → logprob: -7.017836093902588
    7. '                   ' → logprob: -7.267836093902588
    8. '			' → logprob: -7.517836093902588
    9. ')' → logprob: -8.142836570739746
    10. '```' → logprob: -8.392836570739746

Token 1040: ' weights' (ID: 28460)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01470834482461214
    2. ' if' → logprob: -5.014708518981934
    3. ' for' → logprob: -6.139708518981934
    4. '                
' → logprob: -6.639708518981934
    5. ' 
' → logprob: -6.764708518981934
    6. '           ' → logprob: -7.639708518981934
    7. '                   ' → logprob: -7.889708518981934
    8. '```' → logprob: -8.139708518981934
    9. '                ' → logprob: -8.389708518981934
    10. 'if' → logprob: -8.389708518981934

Token 1041: ' of' (ID: 328)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.05964728444814682
    2. '_of' → logprob: -3.43464732170105
    3. '_' → logprob: -4.559647083282471
    4. ' of' → logprob: -5.684647083282471
    5. 'above' → logprob: -5.934647083282471
    6. ' _' → logprob: -6.309647083282471
    7. ' above' → logprob: -6.684647083282471
    8. '_i' → logprob: -7.059647083282471
    9. '   ' → logprob: -7.184647083282471
    10. 'of' → logprob: -7.309647083282471

Token 1042: ' foods' (ID: 18747)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' → logprob: -0.2184620350599289
    2. ' foods' → logprob: -2.8434619903564453
    3. 'previous' → logprob: -2.9684619903564453
    4. ' previous' → logprob: -3.0934619903564453
    5. ' k' → logprob: -5.093461990356445
    6. 'k' → logprob: -5.093461990356445
    7. 'order' → logprob: -5.218461990356445
    8. 'above' → logprob: -5.218461990356445
    9. 'the' → logprob: -5.593461990356445
    10. ' order' → logprob: -6.093461990356445

Token 1043: ' above' (ID: 5151)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.6292494535446167
    2. ' above' → logprob: -1.3792494535446167
    3. 'above' → logprob: -1.6292494535446167
    4. ' of' → logprob: -5.504249572753906
    5. '_' → logprob: -5.629249572753906
    6. '_of' → logprob: -6.254249572753906
    7. ' _' → logprob: -6.379249572753906
    8. 'Above' → logprob: -6.504249572753906
    9. ' ' → logprob: -6.879249572753906
    10. '   ' → logprob: -6.879249572753906

Token 1044: ' it' (ID: 480)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.13607186079025269
    2. 'above' → logprob: -2.8860719203948975
    3. ' _' → logprob: -4.511071681976318
    4. '_of' → logprob: -4.636071681976318
    5. ' above' → logprob: -4.761071681976318
    6. ' +' → logprob: -4.761071681976318
    7. ' =' → logprob: -5.011071681976318
    8. '=' → logprob: -5.261071681976318
    9. ' +=' → logprob: -5.636071681976318
    10. '_' → logprob: -6.011071681976318

Token 1045: ' currently' (ID: 6821)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.09749160706996918
    2. '+' → logprob: -3.347491502761841
    3. ' +=' → logprob: -3.847491502761841
    4. ' =' → logprob: -4.59749174118042
    5. '               ' → logprob: -4.59749174118042
    6. '=' → logprob: -5.72249174118042
    7. ' must' → logprob: -6.84749174118042
    8. '[' → logprob: -6.84749174118042
    9. 'import' → logprob: -6.84749174118042
    10. '           ' → logprob: -6.97249174118042

Token 1046: ' is' (ID: 382)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.943332314491272
    2. '+' → logprob: -1.068332314491272
    3. '=' → logprob: -1.943332314491272
    4. ' +=' → logprob: -3.6933321952819824
    5. ' =' → logprob: -3.9433321952819824
    6. '               ' → logprob: -4.443332195281982
    7. 'in' → logprob: -4.443332195281982
    8. '+=' → logprob: -4.568332195281982
    9. '```' → logprob: -4.943332195281982
    10. '[' → logprob: -5.068332195281982

Token 1047: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8469412326812744
    2. 'dp' → logprob: -1.9719412326812744
    3. ' total' → logprob: -2.0969412326812744
    4. '0' → logprob: -2.4719412326812744
    5. 'sum' → logprob: -2.4719412326812744
    6. ' sum' → logprob: -3.7219412326812744
    7. '+' → logprob: -3.9719412326812744
    8. 'w' → logprob: -4.096940994262695
    9. ' +' → logprob: -4.221940994262695
    10. ' dp' → logprob: -4.221940994262695

Token 1048: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.1293885707855225
    2. '_' → logprob: -1.8793885707855225
    3. ' +' → logprob: -2.0043885707855225
    4. ' of' → logprob: -2.5043885707855225
    5. '_ab' → logprob: -2.7543885707855225
    6. '               ' → logprob: -3.1293885707855225
    7. 'of' → logprob: -3.2543885707855225
    8. '+' → logprob: -3.7543885707855225
    9. '                   ' → logprob: -3.8793885707855225
    10. 'above' → logprob: -4.004388809204102

Token 1049: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.7702912092208862
    2. 'w' → logprob: -1.5202912092208862
    3. 'order' → logprob: -1.5202912092208862
    4. 'dp' → logprob: -2.770291328430176
    5. ' w' → logprob: -4.395291328430176
    6. 'previous' → logprob: -5.020291328430176
    7. ' weights' → logprob: -5.395291328430176
    8. ' order' → logprob: -5.395291328430176
    9. ' dp' → logprob: -6.770291328430176
    10. 'above' → logprob: -6.895291328430176

Token 1050: ' above' (ID: 5151)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3818857669830322
    2. ' +' → logprob: -1.5068857669830322
    3. 'above' → logprob: -1.6318857669830322
    4. '               ' → logprob: -2.0068857669830322
    5. 'of' → logprob: -3.5068857669830322
    6. ' above' → logprob: -3.5068857669830322
    7. '                   ' → logprob: -3.6318857669830322
    8. '[i' → logprob: -3.8818857669830322
    9. '[' → logprob: -4.256885528564453
    10. '```' → logprob: -4.381885528564453

Token 1051: ' it' (ID: 480)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6912859082221985
    2. ')' → logprob: -1.3162858486175537
    3. '<|end|>' → logprob: -3.3162858486175537
    4. ' +' → logprob: -3.5662858486175537
    5. ' )' → logprob: -4.191286087036133
    6. '                ' → logprob: -4.191286087036133
    7. '                               ' → logprob: -4.316286087036133
    8. '                           ' → logprob: -4.566286087036133
    9. '                       ' → logprob: -5.066286087036133
    10. '<|end|>' → logprob: -5.066286087036133

Token 1052: ' in' (ID: 306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46620675921440125
    2. ')' → logprob: -1.9662067890167236
    3. ':' → logprob: -2.4662067890167236
    4. '<|end|>' → logprob: -4.2162065505981445
    5. '                               ' → logprob: -4.3412065505981445
    6. '.' → logprob: -4.3412065505981445
    7. '[' → logprob: -4.5912065505981445
    8. '):' → logprob: -4.8412065505981445
    9. '                   ' → logprob: -5.0912065505981445
    10. '                           ' → logprob: -5.2162065505981445

Token 1053: ' dp' (ID: 21546)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.12237145751714706
    2. 'dp' → logprob: -2.7473714351654053
    3. ' order' → logprob: -3.9973714351654053
    4. 'previous' → logprob: -3.9973714351654053
    5. 'current' → logprob: -5.372371673583984
    6. 'the' → logprob: -5.372371673583984
    7. 'mask' → logprob: -6.622371673583984
    8. ' dp' → logprob: -7.247371673583984
    9. ' previous' → logprob: -7.247371673583984
    10. 'weight' → logprob: -7.872371673583984

Token 1054: '[' (ID: 58)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22461560368537903
    2. '                ' → logprob: -1.9746155738830566
    3. ')' → logprob: -3.9746155738830566
    4. '<|end|>' → logprob: -4.849615573883057
    5. '			' → logprob: -5.849615573883057
    6. '                               ' → logprob: -5.974615573883057
    7. ':' → logprob: -6.099615573883057
    8. '            ' → logprob: -6.349615573883057
    9. '```' → logprob: -6.349615573883057
    10. '<|end|>' → logprob: -6.349615573883057

Token 1055: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0002533528604544699
    2. '[' → logprob: -9.250253677368164
    3. ']' → logprob: -9.750253677368164
    4. ' mask' → logprob: -9.875253677368164
    5. ')' → logprob: -11.250253677368164
    6. '(mask' → logprob: -12.125253677368164
    7. '][' → logprob: -12.250253677368164
    8. '_mask' → logprob: -12.250253677368164
    9. '```' → logprob: -12.750253677368164
    10. '])' → logprob: -12.750253677368164

Token 1056: '].
' (ID: 49887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27540358901023865
    2. '               ' → logprob: -2.2754034996032715
    3. ']' → logprob: -2.5254034996032715
    4. '[' → logprob: -4.6504034996032715
    5. '[i' → logprob: -4.6504034996032715
    6. ')
' → logprob: -5.2754034996032715
    7. ' )' → logprob: -5.4004034996032715
    8. '           ' → logprob: -5.6504034996032715
    9. '])' → logprob: -5.6504034996032715
    10. ')]' → logprob: -5.9004034996032715

Token 1057: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012164883315563202
    2. '                ' → logprob: -5.262165069580078
    3. '                
' → logprob: -6.512165069580078
    4. '                   ' → logprob: -7.137165069580078
    5. '           ' → logprob: -7.512165069580078
    6. ')' → logprob: -7.637165069580078
    7. '                               ' → logprob: -7.637165069580078
    8. '<|end|>' → logprob: -7.762165069580078
    9. '                       ' → logprob: -8.512165069580078
    10. ',' → logprob: -8.512165069580078

Token 1058: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026856349781155586
    2. '                ' → logprob: -4.151856422424316
    3. '                   ' → logprob: -6.151856422424316
    4. '                               ' → logprob: -6.651856422424316
    5. ' +' → logprob: -7.026856422424316
    6. '(' → logprob: -7.526856422424316
    7. '                
' → logprob: -7.526856422424316
    8. ' ' → logprob: -7.651856422424316
    9. '                       ' → logprob: -7.651856422424316
    10. '+' → logprob: -7.776856422424316

Token 1059: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004928641719743609
    2. '                
' → logprob: -9.000493049621582
    3. '                ' → logprob: -9.250493049621582
    4. '                               ' → logprob: -9.375493049621582
    5. '                   ' → logprob: -9.750493049621582
    6. '           ' → logprob: -10.750493049621582
    7. '                       ' → logprob: -11.125493049621582
    8. '              ' → logprob: -11.250493049621582
    9. '                           ' → logprob: -11.500493049621582
    10. '...' → logprob: -11.500493049621582

Token 1060: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006253215949982405
    2. '           ' → logprob: -6.381253242492676
    3. '                   ' → logprob: -6.756253242492676
    4. 'for' → logprob: -7.631253242492676
    5. ' for' → logprob: -7.756253242492676
    6. '                ' → logprob: -8.131253242492676
    7. '                       ' → logprob: -8.256253242492676
    8. '                
' → logprob: -8.756253242492676
    9. '       ' → logprob: -8.881253242492676
    10. '#' (adapté à ' #') → logprob: -9.006253242492676

Token 1061: ' We' (ID: 1416)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014784805476665497
    2. ' w' → logprob: -6.014784812927246
    3. 'w' → logprob: -6.514784812927246
    4. ' if' → logprob: -6.639784812927246
    5. 'total' → logprob: -6.764784812927246
    6. '#' → logprob: -6.764784812927246
    7. ' total' → logprob: -6.889784812927246
    8. '                   ' → logprob: -7.014784812927246
    9. '           ' → logprob: -7.264784812927246
    10. 'for' → logprob: -7.514784812927246

Token 1062: ' can' (ID: 665)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7674699425697327
    2. ' need' → logprob: -1.517469882965088
    3. '[' → logprob: -2.267469882965088
    4. '_' → logprob: -2.392469882965088
    5. ' _' → logprob: -4.142469882965088
    6. ' can' → logprob: -4.142469882965088
    7. 'continue' → logprob: -4.142469882965088
    8. '_i' → logprob: -4.267469882965088
    9. 'for' → logprob: -4.517469882965088
    10. '[i' → logprob: -4.892469882965088

Token 1063: ' store' (ID: 4897)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4066064953804016
    2. ' continue' → logprob: -2.156606435775757
    3. 'calculate' → logprob: -2.906606435775757
    4. '               ' → logprob: -3.656606435775757
    5. '       ' → logprob: -3.781606435775757
    6. '           ' → logprob: -4.156606674194336
    7. 'store' → logprob: -4.406606674194336
    8. ' store' → logprob: -4.656606674194336
    9. '                   ' → logprob: -4.656606674194336
    10. 'import' → logprob: -5.031606674194336

Token 1064: ' in' (ID: 306)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.5916036367416382
    2. ' the' → logprob: -2.0916037559509277
    3. ' (' → logprob: -2.2166037559509277
    4. 'total' → logprob: -2.4666037559509277
    5. 'w' → logprob: -2.8416037559509277
    6. 'weights' → logprob: -3.0916037559509277
    7. 'prev' → logprob: -3.0916037559509277
    8. '   ' → logprob: -3.0916037559509277
    9. ' total' → logprob: -3.4666037559509277
    10. 'weight' → logprob: -3.9666037559509277

Token 1065: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06511212140321732
    2. 'the' → logprob: -3.1901121139526367
    3. ' dp' → logprob: -4.690112113952637
    4. 'each' → logprob: -5.815112113952637
    5. ' the' → logprob: -6.315112113952637
    6. 'a' → logprob: -6.565112113952637
    7. 'state' → logprob: -6.815112113952637
    8. 'additional' → logprob: -7.065112113952637
    9. 'mask' → logprob: -7.815112113952637
    10. 'weights' → logprob: -7.815112113952637

Token 1066: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9759851694107056
    2. '_weights' → logprob: -1.4759851694107056
    3. '_mask' → logprob: -1.4759851694107056
    4. '_weight' → logprob: -2.600985050201416
    5. '[i' → logprob: -4.225985050201416
    6. '_state' → logprob: -4.725985050201416
    7. '_i' → logprob: -4.850985050201416
    8. '_states' → logprob: -4.975985050201416
    9. '_sum' → logprob: -5.100985050201416
    10. '_masks' → logprob: -5.100985050201416

Token 1067: ' every' (ID: 1753)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.7607405185699463
    2. ' the' → logprob: -2.1357405185699463
    3. 'the' → logprob: -2.1357405185699463
    4. ' mask' → logprob: -2.5107405185699463
    5. 'each' → logprob: -2.6357405185699463
    6. ' each' → logprob: -2.6357405185699463
    7. ' i' → logprob: -4.010740280151367
    8. 'i' → logprob: -4.010740280151367
    9. '   ' → logprob: -4.885740280151367
    10. ' ' → logprob: -5.635740280151367

Token 1068: ' mask' (ID: 10910)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.6348035335540771
    2. 'mask' → logprob: -1.2598035335540771
    3. ' mask' → logprob: -3.009803533554077
    4. 'state' → logprob: -3.384803533554077
    5. ' food' → logprob: -3.509803533554077
    6. 'previous' → logprob: -3.634803533554077
    7. ' previous' → logprob: -4.009803771972656
    8. '   ' → logprob: -5.759803771972656
    9. '_mask' → logprob: -5.759803771972656
    10. 'subset' → logprob: -5.759803771972656

Token 1069: ' the' (ID: 290)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26295384764671326
    2. '[i' → logprob: -2.262953758239746
    3. '_' → logprob: -3.262953758239746
    4. '[
' → logprob: -3.887953758239746
    5. '[k' → logprob: -3.887953758239746
    6. '```' → logprob: -4.387953758239746
    7. '[_' → logprob: -5.137953758239746
    8. '   ' → logprob: -5.762953758239746
    9. '`' → logprob: -6.262953758239746
    10. ')' → logprob: -6.262953758239746

Token 1070: ' minimum' (ID: 11085)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -1.0279799699783325
    2. ' min' → logprob: -1.9029799699783325
    3. ' max' → logprob: -2.277979850769043
    4. '_min' → logprob: -2.402979850769043
    5. 'weights' → logprob: -2.777979850769043
    6. 'max' → logprob: -2.902979850769043
    7. 'min' → logprob: -3.277979850769043
    8. ' weights' → logprob: -4.152979850769043
    9. ' minimum' → logprob: -4.277979850769043
    10. '_max' → logprob: -4.402979850769043

Token 1071: ' "' (ID: 392)
  Prédit: '_remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -1.0248700380325317
    2. '_res' → logprob: -1.6498700380325317
    3. '_' → logprob: -2.024869918823242
    4. '_strength' → logprob: -2.399869918823242
    5. '_s' → logprob: -2.899869918823242
    6. '_rem' → logprob: -3.399869918823242
    7. '_sur' → logprob: -3.524869918823242
    8. '_cr' → logprob: -4.774869918823242
    9. 'res' → logprob: -4.774869918823242
    10. '_ab' → logprob: -5.024869918823242

Token 1072: 'remaining' (ID: 83570)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.9024767875671387
    2. 'remaining' → logprob: -2.1524767875671387
    3. 'weight' → logprob: -2.1524767875671387
    4. 'strength' → logprob: -2.4024767875671387
    5. '_w' → logprob: -2.6524767875671387
    6. '_s' → logprob: -2.6524767875671387
    7. 'weights' → logprob: -2.9024767875671387
    8. '(s' → logprob: -3.4024767875671387
    9. 'res' → logprob: -3.5274767875671387
    10. 'required' → logprob: -3.6524767875671387

Token 1073: ' strength' (ID: 9386)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.1452280580997467
    2. '_' → logprob: -2.395228147506714
    3. '_res' → logprob: -4.395227909088135
    4. ' _' → logprob: -4.770227909088135
    5. '_s' → logprob: -4.895227909088135
    6. '_capacity' → logprob: -5.645227909088135
    7. '_remaining' → logprob: -6.145227909088135
    8. '_weight' → logprob: -6.520227909088135
    9. '_sur' → logprob: -6.770227909088135
    10. '_str' → logprob: -7.145227909088135

Token 1074: '"' (ID: 1)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5345645546913147
    2. ')' → logprob: -2.03456449508667
    3. '_diff' → logprob: -2.90956449508667
    4. '_rem' → logprob: -3.53456449508667
    5. '_difference' → logprob: -3.65956449508667
    6. '_remaining' → logprob: -3.78456449508667
    7. 's' → logprob: -3.90956449508667
    8. ' _' → logprob: -3.90956449508667
    9. '_minus' → logprob: -3.90956449508667
    10. '"' → logprob: -4.40956449508667

Token 1075: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3418329954147339
    2. ')' → logprob: -1.5918329954147339
    3. '_remaining' → logprob: -2.2168331146240234
    4. '   ' → logprob: -2.5918331146240234
    5. ' -' → logprob: -2.7168331146240234
    6. 's' → logprob: -2.8418331146240234
    7. '[' → logprob: -3.4668331146240234
    8. ',' → logprob: -3.8418331146240234
    9. ' _' → logprob: -4.091833114624023
    10. ':' → logprob: -4.341833114624023

Token 1076: ' each' (ID: 2454)
  Prédit: ' previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' previous' → logprob: -1.630196452140808
    2. ' the' → logprob: -2.0051965713500977
    3. 'previous' → logprob: -2.3801965713500977
    4. ' each' → logprob: -2.5051965713500977
    5. 'foods' → logprob: -2.5051965713500977
    6. ' all' → logprob: -2.6301965713500977
    7. 'the' → logprob: -2.6301965713500977
    8. 'each' → logprob: -3.0051965713500977
    9. 'all' → logprob: -3.0051965713500977
    10. ' every' → logprob: -3.6301965713500977

Token 1077: ' food' (ID: 4232)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2702980041503906
    2. ' _' → logprob: -2.1452980041503906
    3. '_food' → logprob: -2.8952980041503906
    4. ')' → logprob: -3.8952980041503906
    5. '[' → logprob: -4.145298004150391
    6. '_mask' → logprob: -4.770298004150391
    7. '_f' → logprob: -5.895298004150391
    8. 'food' → logprob: -6.520298004150391
    9. ' )' → logprob: -6.645298004150391
    10. '```' → logprob: -6.895298004150391

Token 1078: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45036953687667847
    2. '<|end|>' → logprob: -2.4503695964813232
    3. '_' → logprob: -2.8253695964813232
    4. ')' → logprob: -2.8253695964813232
    5. ',' → logprob: -3.3253695964813232
    6. '   ' → logprob: -3.8253695964813232
    7. '.' → logprob: -3.9503695964813232
    8. '<|end|>' → logprob: -4.450369358062744
    9. '[
' → logprob: -4.575369358062744
    10. '[i' → logprob: -4.825369358062744

Token 1079: ' order' (ID: 2569)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4813131093978882
    2. 'the' → logprob: -2.1063132286071777
    3. ' dp' → logprob: -2.2313132286071777
    4. ' the' → logprob: -2.4813132286071777
    5. 'mask' → logprob: -3.3563132286071777
    6. ' previous' → logprob: -5.231313228607178
    7. 'each' → logprob: -5.231313228607178
    8. 'previous' → logprob: -5.731313228607178
    9. ' each' → logprob: -5.856313228607178
    10. ' mask' → logprob: -5.856313228607178

Token 1080: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.529854416847229
    2. '   ' → logprob: -2.5298542976379395
    3. ',' → logprob: -2.6548542976379395
    4. '       ' → logprob: -2.7798542976379395
    5. '_' → logprob: -3.5298542976379395
    6. ')' → logprob: -3.7798542976379395
    7. '.' → logprob: -4.1548542976379395
    8. ']' → logprob: -4.1548542976379395
    9. ':' → logprob: -4.2798542976379395
    10. '[
' → logprob: -4.2798542976379395

Token 1081: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3229362368583679
    2. ',' → logprob: -2.9479362964630127
    3. '[' → logprob: -3.1979362964630127
    4. '                   ' → logprob: -3.5729362964630127
    5. '                ' → logprob: -3.8229362964630127
    6. '_' → logprob: -4.072936058044434
    7. ')' → logprob: -4.197936058044434
    8. ']' → logprob: -4.322936058044434
    9. '       ' → logprob: -4.447936058044434
    10. '           ' → logprob: -4.447936058044434

Token 1082: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054287299513816833
    2. '                ' → logprob: -3.8042871952056885
    3. ')' → logprob: -5.554287433624268
    4. '[' → logprob: -5.679287433624268
    5. '                   ' → logprob: -5.679287433624268
    6. '_' → logprob: -6.054287433624268
    7. ',' → logprob: -6.304287433624268
    8. '                               ' → logprob: -6.429287433624268
    9. '                       ' → logprob: -6.679287433624268
    10. '           ' → logprob: -6.804287433624268

Token 1083: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02217569574713707
    2. '                ' → logprob: -4.2721757888793945
    3. '<|end|>' → logprob: -6.1471757888793945
    4. '                
' → logprob: -6.6471757888793945
    5. '                               ' → logprob: -7.0221757888793945
    6. '           ' → logprob: -7.6471757888793945
    7. '                   ' → logprob: -7.7721757888793945
    8. ' ' → logprob: -7.7721757888793945
    9. '              ' → logprob: -8.022175788879395
    10. '...' → logprob: -8.647175788879395

Token 1084: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017445435747504234
    2. '                ' → logprob: -5.5174455642700195
    3. '                   ' → logprob: -5.5174455642700195
    4. '                               ' → logprob: -6.1424455642700195
    5. '           ' → logprob: -6.3924455642700195
    6. '                       ' → logprob: -6.8924455642700195
    7. '                           ' → logprob: -7.6424455642700195
    8. '       ' → logprob: -7.7674455642700195
    9. '...' → logprob: -8.01744556427002
    10. ' continue' → logprob: -8.01744556427002

Token 1085: ' But' (ID: 3072)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07736625522375107
    2. ' if' → logprob: -3.327366352081299
    3. 'if' → logprob: -5.077366352081299
    4. ' #' → logprob: -5.452366352081299
    5. '#' → logprob: -5.577366352081299
    6. 'continue' → logprob: -5.702366352081299
    7. ' continue' → logprob: -5.827366352081299
    8. ' for' → logprob: -6.077366352081299
    9. '                   ' → logprob: -6.077366352081299
    10. '       ' → logprob: -6.702366352081299

Token 1086: ' to' (ID: 316)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0293867588043213
    2. '               ' → logprob: -1.5293867588043213
    3. 'continue' → logprob: -2.0293867588043213
    4. '                ' → logprob: -3.0293867588043213
    5. '...' → logprob: -3.4043867588043213
    6. '#' → logprob: -3.5293867588043213
    7. '       ' → logprob: -3.7793867588043213
    8. '                   ' → logprob: -4.154386520385742
    9. '<|end|>' → logprob: -4.279386520385742
    10. ' #' → logprob: -4.529386520385742

Token 1087: ' solve' (ID: 17722)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.32481181621551514
    2. 'store' → logprob: -2.9498119354248047
    3. 'pass' → logprob: -3.4498119354248047
    4. ' continue' → logprob: -3.5748119354248047
    5. ']' → logprob: -3.6998119354248047
    6. '
' → logprob: -3.6998119354248047
    7. 'def' → logprob: -3.9498119354248047
    8. 'keep' → logprob: -4.074811935424805
    9. '[' → logprob: -4.949811935424805
    10. ' store' → logprob: -4.949811935424805

Token 1088: ' this' (ID: 495)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.383019208908081
    2. '_' → logprob: -1.633019208908081
    3. ' _' → logprob: -2.508019208908081
    4. 'the' → logprob: -2.633019208908081
    5. '_i' → logprob: -3.008019208908081
    6. '[' → logprob: -3.008019208908081
    7. '[
' → logprob: -3.258019208908081
    8. '               ' → logprob: -3.383019208908081
    9. ' the' → logprob: -3.758019208908081
    10. '``' → logprob: -3.758019208908081

Token 1089: ' problem' (ID: 4792)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7604564428329468
    2. '[' → logprob: -2.0104565620422363
    3. ':' → logprob: -2.2604565620422363
    4. ')' → logprob: -2.6354565620422363
    5. '               ' → logprob: -3.0104565620422363
    6. '       ' → logprob: -3.1354565620422363
    7. ' _' → logprob: -3.2604565620422363
    8. '```' → logprob: -3.5104565620422363
    9. '   ' → logprob: -3.6354565620422363
    10. ']' → logprob: -3.6354565620422363

Token 1090: ' efficiently' (ID: 34229)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6592894196510315
    2. '[' → logprob: -1.4092893600463867
    3. ')' → logprob: -2.7842893600463867
    4. ',' → logprob: -3.1592893600463867
    5. ':' → logprob: -3.2842893600463867
    6. '<|end|>' → logprob: -4.159289360046387
    7. '[i' → logprob: -4.534289360046387
    8. ']' → logprob: -4.659289360046387
    9. '   ' → logprob: -4.909289360046387
    10. '#' → logprob: -5.034289360046387

Token 1091: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26964667439460754
    2. '               ' → logprob: -3.269646644592285
    3. ',' → logprob: -3.394646644592285
    4. '[' → logprob: -3.769646644592285
    5. '<|end|>' → logprob: -3.894646644592285
    6. ')' → logprob: -4.019646644592285
    7. '<|end|>' → logprob: -4.269646644592285
    8. '                               ' → logprob: -4.644646644592285
    9. '...' → logprob: -4.894646644592285
    10. '_' → logprob: -5.019646644592285

Token 1092: ' we' (ID: 581)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5950537323951721
    2. '                ' → logprob: -1.3450536727905273
    3. '               ' → logprob: -2.5950536727905273
    4. 'continue' → logprob: -3.0950536727905273
    5. '...' → logprob: -4.720053672790527
    6. ')' → logprob: -4.970053672790527
    7. ' we' → logprob: -5.345053672790527
    8. '                                        ' → logprob: -5.595053672790527
    9. ' if' → logprob: -5.970053672790527
    10. ' ' → logprob: -5.970053672790527

Token 1093: ' use' (ID: 1199)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1625961065292358
    2. ' need' → logprob: -1.4125961065292358
    3. 'continue' → logprob: -1.5375961065292358
    4. ' can' → logprob: -3.2875962257385254
    5. 'need' → logprob: -3.5375962257385254
    6. '[' → logprob: -3.6625962257385254
    7. 'cannot' → logprob: -3.7875962257385254
    8. ' cannot' → logprob: -4.162596225738525
    9. ' must' → logprob: -4.537596225738525
    10. ' =' → logprob: -4.787596225738525

Token 1094: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5698962211608887
    2. 'the' → logprob: -2.1948962211608887
    3. ' the' → logprob: -2.6948962211608887
    4. 'bit' → logprob: -2.6948962211608887
    5. ' a' → logprob: -3.3198962211608887
    6. 'a' → logprob: -3.6948962211608887
    7. ' dp' → logprob: -4.444896221160889
    8. '```' → logprob: -4.569896221160889
    9. '   ' → logprob: -4.819896221160889
    10. ' bit' → logprob: -4.819896221160889

Token 1095: ' approach' (ID: 7139)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8498370051383972
    2. 'dp' → logprob: -2.224837064743042
    3. 'weight' → logprob: -2.599837064743042
    4. 'for' → logprob: -2.724837064743042
    5. 'from' → logprob: -3.099837064743042
    6. 'import' → logprob: -3.724837064743042
    7. 'weights' → logprob: -3.724837064743042
    8. '               ' → logprob: -3.974837064743042
    9. '```' → logprob: -4.224836826324463
    10. '           ' → logprob: -4.349836826324463

Token 1096: ' from' (ID: 591)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5654913783073425
    2. ':' → logprob: -1.6904914379119873
    3. '                ' → logprob: -2.8154914379119873
    4. ')' → logprob: -3.4404914379119873
    5. '```' → logprob: -3.5654914379119873
    6. '                   ' → logprob: -3.9404914379119873
    7. '_' → logprob: -4.065491199493408
    8. '           ' → logprob: -4.690491199493408
    9. '[' → logprob: -5.065491199493408
    10. ' of' → logprob: -5.190491199493408

Token 1097: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5948524475097656
    2. 'dp' → logprob: -1.5948524475097656
    3. 'previous' → logprob: -2.8448524475097656
    4. 'fun' → logprob: -3.7198524475097656
    5. '   ' → logprob: -4.219852447509766
    6. 'bit' → logprob: -4.469852447509766
    7. 'prev' → logprob: -4.469852447509766
    8. 'collections' → logprob: -4.469852447509766
    9. 'code' → logprob: -4.594852447509766
    10. 'it' → logprob: -5.094852447509766

Token 1098: ' sample' (ID: 10176)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.343493103981018
    2. 'dp' → logprob: -1.343493103981018
    3. 'previous' → logprob: -1.343493103981018
    4. 'problem' → logprob: -3.0934929847717285
    5. 'next' → logprob: -4.2184929847717285
    6. ' previous' → logprob: -4.3434929847717285
    7. 'code' → logprob: -4.4684929847717285
    8. '```' → logprob: -4.4684929847717285
    9. 'prev' → logprob: -4.5934929847717285
    10. ' code' → logprob: -4.8434929847717285

Token 1099: ' editorial' (ID: 37857)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8469575047492981
    2. ':' → logprob: -1.0969574451446533
    3. '       ' → logprob: -2.7219574451446533
    4. '                ' → logprob: -3.4719574451446533
    5. '           ' → logprob: -3.8469574451446533
    6. '                   ' → logprob: -4.221957683563232
    7. '[i' → logprob: -4.346957683563232
    8. '        ' → logprob: -4.596957683563232
    9. ')' → logprob: -4.721957683563232
    10. ':
' → logprob: -4.971957683563232

Token 1100: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14662490785121918
    2. ':' → logprob: -2.396624803543091
    3. '       ' → logprob: -4.89662504196167
    4. '                ' → logprob: -5.14662504196167
    5. '           ' → logprob: -5.52162504196167
    6. ')' → logprob: -5.89662504196167
    7. '<|end|>' → logprob: -5.89662504196167
    8. ':
' → logprob: -6.02162504196167
    9. ',' → logprob: -6.02162504196167
    10. '                   ' → logprob: -6.39662504196167

Token 1101: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09642599523067474
    2. '                ' → logprob: -2.721426010131836
    3. '                   ' → logprob: -4.846426010131836
    4. '           ' → logprob: -5.846426010131836
    5. '```' → logprob: -5.846426010131836
    6. ' ' → logprob: -6.596426010131836
    7. '       ' → logprob: -6.721426010131836
    8. '        ' → logprob: -6.846426010131836
    9. ' i' → logprob: -7.221426010131836
    10. ' for' → logprob: -7.471426010131836

Token 1102: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05171504244208336
    2. '```' → logprob: -4.176714897155762
    3. '                   ' → logprob: -4.426714897155762
    4. '                ' → logprob: -4.676714897155762
    5. '           ' → logprob: -5.676714897155762
    6. ' for' → logprob: -5.801714897155762
    7. '                       ' → logprob: -6.926714897155762
    8. 'for' → logprob: -7.176714897155762
    9. ' if' → logprob: -7.301714897155762
    10. ' w' → logprob: -7.426714897155762

Token 1103: ' In' (ID: 730)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11321698874235153
    2. '       ' → logprob: -3.6132168769836426
    3. '```' → logprob: -3.6132168769836426
    4. ' w' → logprob: -3.8632168769836426
    5. ' if' → logprob: -4.988216876983643
    6. ' for' → logprob: -5.238216876983643
    7. 'w' → logprob: -5.363216876983643
    8. '           ' → logprob: -5.863216876983643
    9. '                   ' → logprob: -6.238216876983643
    10. 'for' → logprob: -6.238216876983643

Token 1104: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6013126373291016
    2. '#' → logprob: -1.8513126373291016
    3. ' the' → logprob: -2.4763126373291016
    4. 'for' → logprob: -3.3513126373291016
    5. 'dp' → logprob: -3.8513126373291016
    6. 'range' → logprob: -3.8513126373291016
    7. '   ' → logprob: -4.101312637329102
    8. ' range' → logprob: -4.101312637329102
    9. 'stead' → logprob: -4.351312637329102
    10. '       ' → logprob: -4.476312637329102

Token 1105: ' given' (ID: 4335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4296016693115234
    2. ' next' → logprob: -2.1796016693115234
    3. '#' → logprob: -2.3046016693115234
    4. 'next' → logprob: -2.5546016693115234
    5. 'code' → logprob: -2.6796016693115234
    6. 'if' → logprob: -2.8046016693115234
    7. ' code' → logprob: -2.8046016693115234
    8. ' for' → logprob: -3.0546016693115234
    9. 'dp' → logprob: -3.3046016693115234
    10. 'same' → logprob: -3.8046016693115234

Token 1106: ' problem' (ID: 4792)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.8635931015014648
    2. 'for' → logprob: -1.9885931015014648
    3. 'code' → logprob: -2.238593101501465
    4. '_code' → logprob: -2.988593101501465
    5. ' problem' → logprob: -2.988593101501465
    6. ' for' → logprob: -3.863593101501465
    7. '```' → logprob: -3.988593101501465
    8. 'problem' → logprob: -4.113593101501465
    9. '`' → logprob: -4.363593101501465
    10. 'food' → logprob: -4.363593101501465

Token 1107: ' constraints' (ID: 31060)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26112812757492065
    2. ':' → logprob: -2.8861281871795654
    3. '_' → logprob: -3.6361281871795654
    4. '       ' → logprob: -4.136127948760986
    5. '                   ' → logprob: -4.386127948760986
    6. '           ' → logprob: -4.511127948760986
    7. '[' → logprob: -4.636127948760986
    8. ')' → logprob: -4.761127948760986
    9. ',' → logprob: -4.761127948760986
    10. '#' → logprob: -4.886127948760986

Token 1108: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15123870968818665
    2. ':' → logprob: -2.9012386798858643
    3. '                ' → logprob: -4.276238918304443
    4. ',' → logprob: -4.526238918304443
    5. '                
' → logprob: -5.026238918304443
    6. '```' → logprob: -5.151238918304443
    7. ':
' → logprob: -5.276238918304443
    8. '<|end|>' → logprob: -5.401238918304443
    9. '[' → logprob: -5.651238918304443
    10. '<|end|>' → logprob: -5.651238918304443

Token 1109: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14555707573890686
    2. '```' → logprob: -3.770557165145874
    3. 'i' → logprob: -3.895557165145874
    4. ' )' → logprob: -4.270556926727295
    5. '               ' → logprob: -4.395556926727295
    6. '):
' → logprob: -4.645556926727295
    7. ' i' → logprob: -5.145556926727295
    8. '):' → logprob: -5.520556926727295
    9. 'w' → logprob: -5.895556926727295
    10. '),' → logprob: -6.145556926727295

Token 1110: ' ≤' (ID: 72554)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44013512134552
    2. '[i' → logprob: -1.94013512134552
    3. '[' → logprob: -2.3151350021362305
    4. '[n' → logprob: -3.4401350021362305
    5. '```' → logprob: -4.1901350021362305
    6. ':' → logprob: -4.4401350021362305
    7. '   ' → logprob: -4.8151350021362305
    8. '[
' → logprob: -4.8151350021362305
    9. '):' → logprob: -4.9401350021362305
    10. '**' → logprob: -5.4401350021362305

Token 1111: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.6446892619132996
    2. '10' → logprob: -1.6446893215179443
    3. '15' → logprob: -2.2696893215179443
    4. '7' → logprob: -3.3946893215179443
    5. '8' → logprob: -3.5196893215179443
    6. '9' → logprob: -3.5196893215179443
    7. '12' → logprob: -4.019689083099365
    8. '5' → logprob: -4.519689083099365
    9. ' ' → logprob: -4.769689083099365
    10. '6' → logprob: -5.019689083099365

Token 1112: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.3118475675582886
    2. '20' → logprob: -1.4368475675582886
    3. '7' → logprob: -2.186847686767578
    4. '15' → logprob: -2.186847686767578
    5. '8' → logprob: -2.686847686767578
    6. '9' → logprob: -2.686847686767578
    7. '6' → logprob: -3.811847686767578
    8. '5' → logprob: -3.811847686767578
    9. '12' → logprob: -3.811847686767578
    10. '14' → logprob: -4.686847686767578

Token 1113: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.2067601680755615
    2. '               ' → logprob: -1.3317601680755615
    3. '):
' → logprob: -1.5817601680755615
    4. ')' → logprob: -2.0817601680755615
    5. ':' → logprob: -3.0817601680755615
    6. ',' → logprob: -4.081760406494141
    7. ':
' → logprob: -4.206760406494141
    8. '           ' → logprob: -5.706760406494141
    9. '                   ' → logprob: -5.831760406494141
    10. '                               ' → logprob: -5.831760406494141

Token 1114: ' we' (ID: 581)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2526760399341583
    2. '                   ' → logprob: -2.877676010131836
    3. '                ' → logprob: -3.252676010131836
    4. '                               ' → logprob: -3.627676010131836
    5. ' for' → logprob: -3.877676010131836
    6. '                       ' → logprob: -4.377676010131836
    7. ' continue' → logprob: -4.502676010131836
    8. '```' → logprob: -4.627676010131836
    9. ')' → logprob: -5.252676010131836
    10. ' if' → logprob: -5.502676010131836

Token 1115: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6059191226959229
    2. ' continue' → logprob: -0.9809191226959229
    3. 'continue' → logprob: -3.355919122695923
    4. 'can' → logprob: -4.230918884277344
    5. ' must' → logprob: -5.355918884277344
    6. '               ' → logprob: -5.605918884277344
    7. ' check' → logprob: -5.980918884277344
    8. ' proceed' → logprob: -6.230918884277344
    9. ')' → logprob: -6.605918884277344
    10. '   ' → logprob: -6.605918884277344

Token 1116: ' do' (ID: 621)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -1.1996244192123413
    2. '               ' → logprob: -1.4496244192123413
    3. 'check' → logprob: -2.324624538421631
    4. 'continue' → logprob: -2.449624538421631
    5. 'iterate' → logprob: -3.074624538421631
    6. '                   ' → logprob: -3.199624538421631
    7. '           ' → logprob: -3.449624538421631
    8. ' try' → logprob: -3.449624538421631
    9. ' check' → logprob: -3.824624538421631
    10. 'enumer' → logprob: -3.824624538421631

Token 1117: ' complete' (ID: 5533)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7844586372375488
    2. '```' → logprob: -2.284458637237549
    3. '                   ' → logprob: -2.409458637237549
    4. ' the' → logprob: -2.659458637237549
    5. 'for' → logprob: -2.784458637237549
    6. ' for' → logprob: -3.034458637237549
    7. 'the' → logprob: -3.784458637237549
    8. '                       ' → logprob: -3.909458637237549
    9. '           ' → logprob: -4.159458637237549
    10. ')' → logprob: -4.409458637237549

Token 1118: ' search' (ID: 3684)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0216460227966309
    2. '_' → logprob: -1.5216460227966309
    3. '_search' → logprob: -1.5216460227966309
    4. 'the' → logprob: -2.896646022796631
    5. ' search' → logprob: -2.896646022796631
    6. '_mask' → logprob: -3.896646022796631
    7. '
' → logprob: -4.271646022796631
    8. 'search' → logprob: -4.646646022796631
    9. '_the' → logprob: -4.896646022796631
    10. '```' → logprob: -5.521646022796631

Token 1119: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7097314596176147
    2. ':' → logprob: -0.9597314596176147
    3. ' :' → logprob: -3.9597315788269043
    4. '                ' → logprob: -4.084731578826904
    5. '                               ' → logprob: -4.209731578826904
    6. ':
' → logprob: -4.584731578826904
    7. ')' → logprob: -4.709731578826904
    8. '```' → logprob: -4.709731578826904
    9. '):' → logprob: -4.709731578826904
    10. '                   ' → logprob: -5.209731578826904

Token 1120: ' pruning' (ID: 135775)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8903798460960388
    2. 'i' → logprob: -2.5153799057006836
    3. ' n' → logprob: -2.7653799057006836
    4. 'dp' → logprob: -2.7653799057006836
    5. '1' → logprob: -2.8903799057006836
    6. '```' → logprob: -2.8903799057006836
    7. ')' → logprob: -3.2653799057006836
    8. ' range' → logprob: -3.3903799057006836
    9. 'range' → logprob: -3.7653799057006836
    10. ' i' → logprob: -3.8903799057006836

Token 1121: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02871686778962612
    2. ':' → logprob: -4.528717041015625
    3. '       ' → logprob: -4.903717041015625
    4. '           ' → logprob: -6.278717041015625
    5. '                   ' → logprob: -6.528717041015625
    6. '                ' → logprob: -6.778717041015625
    7. '                               ' → logprob: -7.153717041015625
    8. '                       ' → logprob: -7.278717041015625
    9. ',' → logprob: -7.403717041015625
    10. ':
' → logprob: -8.028717041015625

Token 1122: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01825799234211445
    2. '                ' → logprob: -4.393258094787598
    3. '                
' → logprob: -6.393258094787598
    4. '                   ' → logprob: -6.643258094787598
    5. '           ' → logprob: -7.393258094787598
    6. '			' → logprob: -8.268258094787598
    7. '                               ' → logprob: -8.518258094787598
    8. '                       ' → logprob: -8.643258094787598
    9. '<|end|>' → logprob: -8.643258094787598
    10. ' ' → logprob: -8.768258094787598

Token 1123: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06202224642038345
    2. '                ' → logprob: -3.0620222091674805
    3. '                   ' → logprob: -5.6870222091674805
    4. '                       ' → logprob: -6.5620222091674805
    5. '                               ' → logprob: -6.5620222091674805
    6. '                
' → logprob: -6.6870222091674805
    7. '                           ' → logprob: -6.8120222091674805
    8. '			' → logprob: -7.4370222091674805
    9. '           ' → logprob: -7.5620222091674805
    10. ')' → logprob: -7.8120222091674805

Token 1124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012357031228020787
    2. '                ' → logprob: -7.876235485076904
    3. '                   ' → logprob: -8.126235961914062
    4. '                
' → logprob: -8.376235961914062
    5. '           ' → logprob: -8.501235961914062
    6. '              ' → logprob: -10.751235961914062
    7. '       ' → logprob: -11.001235961914062
    8. '                       ' → logprob: -11.376235961914062
    9. '<|end|>' → logprob: -11.751235961914062
    10. '			' → logprob: -11.876235961914062

Token 1125: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03442205861210823
    2. '                ' → logprob: -4.409421920776367
    3. '           ' → logprob: -5.159421920776367
    4. '                   ' → logprob: -5.159421920776367
    5. '                       ' → logprob: -6.409421920776367
    6. ' i' → logprob: -7.034421920776367
    7. '			' → logprob: -7.159421920776367
    8. '                               ' → logprob: -7.534421920776367
    9. '       ' → logprob: -7.659421920776367
    10. '            ' → logprob: -7.659421920776367

Token 1126: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08649928122758865
    2. '           ' → logprob: -2.9614992141723633
    3. ' if' → logprob: -4.086499214172363
    4. 'if' → logprob: -5.336499214172363
    5. '                   ' → logprob: -6.211499214172363
    6. ' w' → logprob: -6.461499214172363
    7. 'w' → logprob: -6.586499214172363
    8. ' for' → logprob: -6.961499214172363
    9. '       ' → logprob: -7.211499214172363
    10. 'for' → logprob: -7.211499214172363

Token 1127: ' let's' (ID: 35717)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.052722714841365814
    2. ' if' → logprob: -3.927722692489624
    3. '                   ' → logprob: -4.302722930908203
    4. '           ' → logprob: -5.302722930908203
    5. '                ' → logprob: -5.802722930908203
    6. 'if' → logprob: -6.427722930908203
    7. '                
' → logprob: -6.927722930908203
    8. '                       ' → logprob: -7.302722930908203
    9. '			' → logprob: -7.302722930908203
    10. ' for' → logprob: -7.427722930908203

Token 1128: ' try' (ID: 2075)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16575613617897034
    2. '                   ' → logprob: -3.1657562255859375
    3. 'continue' → logprob: -3.2907562255859375
    4. ' continue' → logprob: -3.4157562255859375
    5. '           ' → logprob: -4.5407562255859375
    6. '                ' → logprob: -4.7907562255859375
    7. ' if' → logprob: -5.4157562255859375
    8. 'if' → logprob: -5.4157562255859375
    9. 'for' → logprob: -5.9157562255859375
    10. '                       ' → logprob: -6.0407562255859375

Token 1129: ' all' (ID: 722)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.6831007599830627
    2. '               ' → logprob: -0.8081007599830627
    3. '                 
' → logprob: -4.808100700378418
    4. '                
' → logprob: -4.933100700378418
    5. '                   ' → logprob: -5.183100700378418
    6. ' i' → logprob: -6.058100700378418
    7. ':' → logprob: -6.183100700378418
    8. '            ' → logprob: -6.308100700378418
    9. '           ' → logprob: -6.558100700378418
    10. '                        ' → logprob: -6.683100700378418

Token 1130: ' permutations' (ID: 174595)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14742131531238556
    2. 'i' → logprob: -2.397421360015869
    3. '               ' → logprob: -3.647421360015869
    4. '                ' → logprob: -4.772421360015869
    5. '                   ' → logprob: -5.022421360015869
    6. ' for' → logprob: -7.397421360015869
    7. 'for' → logprob: -7.897421360015869
    8. '                    ' → logprob: -7.897421360015869
    9. ' foods' → logprob: -7.897421360015869
    10. '_food' → logprob: -7.897421360015869

Token 1131: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06143779680132866
    2. '                ' → logprob: -3.4364378452301025
    3. '                   ' → logprob: -5.186437606811523
    4. '           ' → logprob: -5.561437606811523
    5. '                               ' → logprob: -5.686437606811523
    6. '                       ' → logprob: -5.811437606811523
    7. '                           ' → logprob: -6.936437606811523
    8. ':' → logprob: -7.186437606811523
    9. '       ' → logprob: -7.311437606811523
    10. '                        ' → logprob: -7.436437606811523

Token 1132: ' keep' (ID: 3357)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.39162755012512207
    2. '               ' → logprob: -1.766627550125122
    3. 'continue' → logprob: -2.391627550125122
    4. '                   ' → logprob: -3.641627550125122
    5. '           ' → logprob: -4.891627311706543
    6. ' pass' → logprob: -5.391627311706543
    7. '       ' → logprob: -5.641627311706543
    8. '                       ' → logprob: -6.266627311706543
    9. 'import' → logprob: -6.266627311706543
    10. ' for' → logprob: -6.516627311706543

Token 1133: ' only' (ID: 1606)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.115990400314331
    2. ' going' → logprob: -1.990990400314331
    3. 'the' → logprob: -2.365990400314331
    4. ' the' → logprob: -2.615990400314331
    5. '                   ' → logprob: -3.115990400314331
    6. ' exploring' → logprob: -3.240990400314331
    7. '                ' → logprob: -3.615990400314331
    8. ' trying' → logprob: -4.11599063873291
    9. ' iter' → logprob: -4.24099063873291
    10. ' adding' → logprob: -4.24099063873291

Token 1134: ' those' (ID: 2617)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.22464731335639954
    2. 'the' → logprob: -2.724647283554077
    3. ' going' → logprob: -3.724647283554077
    4. ' next' → logprob: -3.974647283554077
    5. ' a' → logprob: -4.349647521972656
    6. ' adding' → logprob: -4.474647521972656
    7. ' one' → logprob: -5.224647521972656
    8. '<|end|>' → logprob: -5.474647521972656
    9. 'next' → logprob: -5.599647521972656
    10. ' that' → logprob: -5.974647521972656

Token 1135: ' stable' (ID: 22105)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4488550424575806
    2. ')' → logprob: -1.5738550424575806
    3. '<|end|>' → logprob: -1.8238550424575806
    4. '                ' → logprob: -2.073854923248291
    5. ':' → logprob: -2.073854923248291
    6. '<|end|>' → logprob: -3.573854923248291
    7. '                               ' → logprob: -4.698854923248291
    8. ',' → logprob: -4.823854923248291
    9. ' )' → logprob: -4.948854923248291
    10. '                                ' → logprob: -5.198854923248291

Token 1136: ' stacks' (ID: 83944)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13971789181232452
    2. '<|end|>' → logprob: -2.3897178173065186
    3. '                ' → logprob: -4.889718055725098
    4. '<|end|>' → logprob: -5.014718055725098
    5. ':' → logprob: -5.514718055725098
    6. '.' → logprob: -5.639718055725098
    7. '...' → logprob: -5.764718055725098
    8. '           ' → logprob: -6.514718055725098
    9. '                               ' → logprob: -6.639718055725098
    10. '#' → logprob: -6.639718055725098

Token 1137: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15904270112514496
    2. '                ' → logprob: -2.7840425968170166
    3. '<|end|>' → logprob: -3.0340425968170166
    4. '           ' → logprob: -5.784042835235596
    5. '                
' → logprob: -5.784042835235596
    6. '<|end|>' → logprob: -5.784042835235596
    7. '                               ' → logprob: -5.909042835235596
    8. '            ' → logprob: -5.909042835235596
    9. '.' → logprob: -6.409042835235596
    10. '                   ' → logprob: -6.534042835235596

Token 1138: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004002891946583986
    2. '                ' → logprob: -6.629003047943115
    3. '                   ' → logprob: -6.754003047943115
    4. '           ' → logprob: -7.504003047943115
    5. '                               ' → logprob: -8.379002571105957
    6. '                       ' → logprob: -8.379002571105957
    7. '              ' → logprob: -9.754002571105957
    8. '...' → logprob: -9.754002571105957
    9. '<|end|>' → logprob: -9.754002571105957
    10. '                           ' → logprob: -10.129002571105957

Token 1139: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01143187377601862
    2. '                ' → logprob: -5.011431694030762
    3. '                   ' → logprob: -6.511431694030762
    4. '           ' → logprob: -6.761431694030762
    5. '                       ' → logprob: -7.761431694030762
    6. '              ' → logprob: -8.636431694030762
    7. '                               ' → logprob: -8.761431694030762
    8. '...' → logprob: -8.761431694030762
    9. '                
' → logprob: -9.011431694030762
    10. '       ' → logprob: -9.136431694030762

Token 1140: ' Then' (ID: 7801)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026956256479024887
    2. '#' → logprob: -4.776956081390381
    3. '                ' → logprob: -5.026956081390381
    4. '...' → logprob: -6.151956081390381
    5. '           ' → logprob: -6.651956081390381
    6. '       ' → logprob: -7.026956081390381
    7. 'for' → logprob: -7.026956081390381
    8. '                   ' → logprob: -7.151956081390381
    9. '                
' → logprob: -7.151956081390381
    10. '```' → logprob: -7.776956081390381

Token 1141: ' select' (ID: 4736)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12808725237846375
    2. '                   ' → logprob: -3.128087282180786
    3. ' continue' → logprob: -4.253087043762207
    4. '           ' → logprob: -4.378087043762207
    5. 'for' → logprob: -4.503087043762207
    6. ' for' → logprob: -4.503087043762207
    7. 'continue' → logprob: -5.128087043762207
    8. '                ' → logprob: -5.503087043762207
    9. '                       ' → logprob: -5.628087043762207
    10. '       ' → logprob: -6.003087043762207

Token 1142: ' the' (ID: 290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1464474201202393
    2. '                   ' → logprob: -1.8964474201202393
    3. '                ' → logprob: -2.2714474201202393
    4. ' the' → logprob: -2.3964474201202393
    5. 'the' → logprob: -2.7714474201202393
    6. 'for' → logprob: -3.1464474201202393
    7. ' i' → logprob: -3.2714474201202393
    8. '                       ' → logprob: -3.3964474201202393
    9. 'i' → logprob: -3.6464474201202393
    10. '                    ' → logprob: -4.14644718170166

Token 1143: ' one' (ID: 1001)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.1645642518997192
    2. ' next' → logprob: -1.2895642518997192
    3. 'next' → logprob: -1.6645642518997192
    4. ' best' → logprob: -2.5395641326904297
    5. '   ' → logprob: -5.03956413269043
    6. '       ' → logprob: -5.03956413269043
    7. 'first' → logprob: -5.03956413269043
    8. 'food' → logprob: -5.03956413269043
    9. '               ' → logprob: -5.16456413269043
    10. 'new' → logprob: -5.28956413269043

Token 1144: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5207184553146362
    2. ' +' → logprob: -2.145718574523926
    3. 'import' → logprob: -2.270718574523926
    4. ' of' → logprob: -2.895718574523926
    5. 'from' → logprob: -2.895718574523926
    6. '           ' → logprob: -3.020718574523926
    7. '_' → logprob: -3.270718574523926
    8. ' =' → logprob: -3.645718574523926
    9. ']' → logprob: -3.770718574523926
    10. '       ' → logprob: -3.895718574523926

Token 1145: ' minimal' (ID: 19957)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.8197866082191467
    2. ' best' → logprob: -1.944786548614502
    3. ' next' → logprob: -2.944786548614502
    4. 'next' → logprob: -3.069786548614502
    5. 'the' → logprob: -3.069786548614502
    6. 'max' → logprob: -3.069786548614502
    7. 'n' → logprob: -3.444786548614502
    8. ' the' → logprob: -3.569786548614502
    9. '```' → logprob: -3.694786548614502
    10. 'len' → logprob: -3.944786548614502

Token 1146: ' center' (ID: 6170)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7051158547401428
    2. '_weight' → logprob: -1.830115795135498
    3. ' sum' → logprob: -2.705115795135498
    4. ' w' → logprob: -3.455115795135498
    5. ' weight' → logprob: -3.455115795135498
    6. ' _' → logprob: -3.455115795135498
    7. '_total' → logprob: -3.830115795135498
    8. 'total' → logprob: -3.955115795135498
    9. 'w' → logprob: -4.330115795135498
    10. 'weight' → logprob: -4.455115795135498

Token 1147: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6755039691925049
    2. ')' → logprob: -1.6755039691925049
    3. '                ' → logprob: -2.050503969192505
    4. '_' → logprob: -3.800503969192505
    5. '           ' → logprob: -3.925503969192505
    6. ':' → logprob: -4.175503730773926
    7. '            ' → logprob: -4.175503730773926
    8. '        ' → logprob: -4.425503730773926
    9. '       ' → logprob: -4.675503730773926
    10. ' )' → logprob: -4.800503730773926

Token 1148: ' gravity' (ID: 44967)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mass' → logprob: -0.0043311333283782005
    2. 'gravity' → logprob: -5.504331111907959
    3. ' mass' → logprob: -8.379331588745117
    4. '-m' → logprob: -11.629331588745117
    5. '_mass' → logprob: -11.754331588745117
    6. ' gravity' → logprob: -12.879331588745117
    7. '
' → logprob: -13.379331588745117
    8. 'weight' → logprob: -13.754331588745117
    9. 'm' → logprob: -14.254331588745117
    10. '-gr' → logprob: -15.629331588745117

Token 1149: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4654969274997711
    2. '                ' → logprob: -1.2154968976974487
    3. '                
' → logprob: -3.4654970169067383
    4. '<|end|>' → logprob: -4.965497016906738
    5. '            ' → logprob: -5.715497016906738
    6. '           ' → logprob: -5.965497016906738
    7. '        ' → logprob: -6.090497016906738
    8. ':' → logprob: -6.340497016906738
    9. ',' → logprob: -6.340497016906738
    10. '.' → logprob: -6.465497016906738

Token 1150: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006142680533230305
    2. '                ' → logprob: -5.881142616271973
    3. '...' → logprob: -7.381142616271973
    4. '           ' → logprob: -7.506142616271973
    5. '                   ' → logprob: -7.756142616271973
    6. '<|end|>' → logprob: -8.381142616271973
    7. '                               ' → logprob: -8.506142616271973
    8. '#' → logprob: -8.506142616271973
    9. '                       ' → logprob: -8.631142616271973
    10. '              ' → logprob: -8.756142616271973

Token 1151: ' pass' (ID: 1853)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06315387040376663
    2. '                ' → logprob: -3.0631539821624756
    3. '                   ' → logprob: -5.6881537437438965
    4. '           ' → logprob: -5.8131537437438965
    5. '                               ' → logprob: -6.3131537437438965
    6. '                       ' → logprob: -6.9381537437438965
    7. '            ' → logprob: -7.4381537437438965
    8. '...' → logprob: -7.4381537437438965
    9. '                           ' → logprob: -7.4381537437438965
    10. '                        ' → logprob: -8.063154220581055

Token 1152: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08232913166284561
    2. '                ' → logprob: -3.332329034805298
    3. '<|end|>' → logprob: -3.957329034805298
    4. '                               ' → logprob: -5.457329273223877
    5. '...' → logprob: -5.582329273223877
    6. '           ' → logprob: -6.457329273223877
    7. '                   ' → logprob: -6.582329273223877
    8. '\' → logprob: -6.957329273223877
    9. '              ' → logprob: -6.957329273223877
    10. '<|end|>' → logprob: -7.082329273223877

Token 1153: ' We'll' (ID: 46830)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034172557294368744
    2. '                ' → logprob: -4.534172534942627
    3. '                   ' → logprob: -5.159172534942627
    4. '                               ' → logprob: -5.284172534942627
    5. '                       ' → logprob: -6.284172534942627
    6. ')' → logprob: -6.409172534942627
    7. '           ' → logprob: -6.534172534942627
    8. '<|end|>' → logprob: -6.659172534942627
    9. '                           ' → logprob: -7.659172534942627
    10. '              ' → logprob: -7.784172534942627

Token 1154: ' implement' (ID: 6365)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5390896797180176
    2. ' continue' → logprob: -0.9140896797180176
    3. 'replace' → logprob: -5.164089679718018
    4. '           ' → logprob: -5.789089679718018
    5. '       ' → logprob: -6.414089679718018
    6. '_continue' → logprob: -6.539089679718018
    7. '                   ' → logprob: -6.539089679718018
    8. '               ' → logprob: -7.289089679718018
    9. '   ' → logprob: -7.914089679718018
    10. 'try' → logprob: -8.66408920288086

Token 1155: ' a' (ID: 261)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021596604492515326
    2. '           ' → logprob: -7.752159595489502
    3. '                   ' → logprob: -8.12716007232666
    4. '                ' → logprob: -8.25216007232666
    5. ' for' → logprob: -8.50216007232666
    6. '                
' → logprob: -8.50216007232666
    7. '       ' → logprob: -9.00216007232666
    8. '```' → logprob: -9.12716007232666
    9. 'for' → logprob: -9.37716007232666
    10. ' if' → logprob: -9.75216007232666

Token 1156: ' permutation' (ID: 135200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.49087008833885193
    2. ' ' → logprob: -1.6158701181411743
    3. 'b' → logprob: -3.3658699989318848
    4. '                ' → logprob: -3.3658699989318848
    5. '            ' → logprob: -3.7408699989318848
    6. '        ' → logprob: -3.7408699989318848
    7. 'ny' → logprob: -4.115869998931885
    8. 'nd' → logprob: -5.240869998931885
    9. '               ' → logprob: -5.240869998931885
    10. '    ' → logprob: -5.365869998931885

Token 1157: ' based' (ID: 4122)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5210998058319092
    2. '<|end|>' → logprob: -1.6460998058319092
    3. '   ' → logprob: -2.646099805831909
    4. 'import' → logprob: -3.021099805831909
    5. '               ' → logprob: -3.771099805831909
    6. 'from' → logprob: -3.896099805831909
    7. '        ' → logprob: -4.271100044250488
    8. '           ' → logprob: -5.021100044250488
    9. '<|end|>' → logprob: -5.396100044250488
    10. 'for' → logprob: -5.396100044250488

Token 1158: ' solution' (ID: 7578)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.7556238770484924
    2. '<|end|>' → logprob: -1.3806238174438477
    3. '_' → logprob: -3.0056238174438477
    4. '<|end|>' → logprob: -3.0056238174438477
    5. '   ' → logprob: -3.1306238174438477
    6. 'from' → logprob: -3.1306238174438477
    7. ')' → logprob: -3.8806238174438477
    8. 'import' → logprob: -4.005623817443848
    9. '#' → logprob: -4.630623817443848
    10. 'for' → logprob: -4.755623817443848

Token 1159: ' below' (ID: 4895)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1580251008272171
    2. 'import' → logprob: -2.158025026321411
    3. '
' → logprob: -4.40802526473999
    4. 'from' → logprob: -5.03302526473999
    5. '    
' → logprob: -5.40802526473999
    6. '<|end|>' → logprob: -5.53302526473999
    7. 'def' → logprob: -6.65802526473999
    8. '  
' → logprob: -7.78302526473999
    9. '       ' → logprob: -8.158024787902832
    10. '<|end|>' → logprob: -8.283024787902832

Token 1160: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0462857484817505
    2. 'import' → logprob: -1.0462857484817505
    3. '
' → logprob: -1.4212857484817505
    4. 'from' → logprob: -3.671285629272461
    5. 'def' → logprob: -4.921285629272461
    6. '    
' → logprob: -5.046285629272461
    7. '<|end|>' → logprob: -5.421285629272461
    8. '  
' → logprob: -5.796285629272461
    9. '```' → logprob: -6.171285629272461
    10. ' 
' → logprob: -6.421285629272461

Token 1161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6846354007720947
    2. 'import' → logprob: -1.4346354007720947
    3. 'from' → logprob: -2.1846354007720947
    4. '```' → logprob: -3.5596354007720947
    5. '<|end|>' → logprob: -3.5596354007720947
    6. 'def' → logprob: -3.6846354007720947
    7. '
' → logprob: -4.559635162353516
    8. '(' → logprob: -4.934635162353516
    9. '(n' → logprob: -5.184635162353516
    10. ' from' → logprob: -5.184635162353516

Token 1162: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07477650046348572
    2. 'import' → logprob: -3.3247764110565186
    3. 'from' → logprob: -3.8247764110565186
    4. '<|end|>' → logprob: -5.824776649475098
    5. ' from' → logprob: -6.449776649475098
    6. '    ' → logprob: -6.949776649475098
    7. '       ' → logprob: -7.074776649475098
    8. 'for' → logprob: -7.324776649475098
    9. ' for' → logprob: -7.324776649475098
    10. '
' → logprob: -7.449776649475098

Token 1163: ' Because' (ID: 13602)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17292988300323486
    2. '   ' → logprob: -2.2979297637939453
    3. 'import' → logprob: -3.0479297637939453
    4. ' from' → logprob: -5.047929763793945
    5. '#' → logprob: -6.547929763793945
    6. 'pass' → logprob: -7.172929763793945
    7. 'return' → logprob: -7.297929763793945
    8. 'foods' → logprob: -7.422929763793945
    9. '```' → logprob: -8.047929763793945
    10. 'def' → logprob: -8.922929763793945

Token 1164: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.934658408164978
    2. ' n' → logprob: -0.934658408164978
    3. 'from' → logprob: -2.9346585273742676
    4. 'import' → logprob: -3.0596585273742676
    5. ' True' → logprob: -3.0596585273742676
    6. ' the' → logprob: -3.5596585273742676
    7. ' from' → logprob: -5.059658527374268
    8. 'True' → logprob: -5.184658527374268
    9. ' ' → logprob: -5.309658527374268
    10. ' we' → logprob: -5.309658527374268

Token 1165: ' problem' (ID: 4792)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2687610685825348
    2. 'import' → logprob: -2.143761157989502
    3. ' from' → logprob: -3.143761157989502
    4. 'n' → logprob: -3.268761157989502
    5. '#' → logprob: -4.393761157989502
    6. '```' → logprob: -4.643761157989502
    7. '   ' → logprob: -5.268761157989502
    8. ' n' → logprob: -5.643761157989502
    9. 'def' → logprob: -6.268761157989502
    10. ' import' → logprob: -7.143761157989502

Token 1166: ' says' (ID: 5003)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2557624578475952
    2. ':' → logprob: -3.0057625770568848
    3. '#' → logprob: -3.3807625770568848
    4. '   ' → logprob: -3.5057625770568848
    5. 'from' → logprob: -3.5057625770568848
    6. '<|end|>' → logprob: -3.6307625770568848
    7. '<|end|>' → logprob: -4.505762577056885
    8. '
' → logprob: -5.005762577056885
    9. 'def' → logprob: -5.130762577056885
    10. '=' → logprob: -5.505762577056885

Token 1167: ' the' (ID: 290)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8295072317123413
    2. '   ' → logprob: -1.3295072317123413
    3. ' from' → logprob: -1.8295072317123413
    4. 'import' → logprob: -2.079507350921631
    5. '```' → logprob: -5.704507350921631
    6. ' n' → logprob: -6.079507350921631
    7. ' import' → logprob: -6.079507350921631
    8. 'n' → logprob: -6.579507350921631
    9. ' pass' → logprob: -7.454507350921631
    10. '...' → logprob: -7.579507350921631

Token 1168: ' solution' (ID: 7578)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.06104210391640663
    2. 'import' → logprob: -3.186042070388794
    3. ' from' → logprob: -4.186042308807373
    4. '#' → logprob: -6.686042308807373
    5. '   ' → logprob: -7.436042308807373
    6. 'def' → logprob: -8.061041831970215
    7. ' import' → logprob: -8.561041831970215
    8. '
' → logprob: -9.686041831970215
    9. '```' → logprob: -9.686041831970215
    10. 'n' → logprob: -9.811041831970215

Token 1169: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8195658326148987
    2. 'import' → logprob: -1.069565773010254
    3. ':' → logprob: -2.319565773010254
    4. '
' → logprob: -3.444565773010254
    5. 'from' → logprob: -3.819565773010254
    6. '<|end|>' → logprob: -4.319565773010254
    7. '```' → logprob: -5.194565773010254
    8. 'def' → logprob: -5.194565773010254
    9. '<|end|>' → logprob: -5.319565773010254
    10. 'for' → logprob: -5.444565773010254

Token 1170: ' unique' (ID: 5746)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1478089094161987
    2. 'from' → logprob: -1.1478089094161987
    3. 'import' → logprob: -2.5228090286254883
    4. ' pass' → logprob: -3.3978090286254883
    5. '```' → logprob: -3.3978090286254883
    6. 'n' → logprob: -3.5228090286254883
    7. ' from' → logprob: -3.5228090286254883
    8. '...' → logprob: -3.7728090286254883
    9. 'def' → logprob: -3.7728090286254883
    10. 'pass' → logprob: -4.397809028625488

Token 1171: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11660545319318771
    2. '
' → logprob: -2.741605520248413
    3. '    
' → logprob: -4.241605281829834
    4. '<|end|>' → logprob: -4.616605281829834
    5. 'import' → logprob: -5.116605281829834
    6. ' 
' → logprob: -5.616605281829834
    7. ')' → logprob: -6.116605281829834
    8. '  
' → logprob: -6.241605281829834
    9. '```' → logprob: -6.366605281829834
    10. 'def' → logprob: -7.116605281829834

Token 1172: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03248593956232071
    2. 'from' → logprob: -4.6574859619140625
    3. ' from' → logprob: -4.7824859619140625
    4. 'import' → logprob: -5.2824859619140625
    5. ' return' → logprob: -6.0324859619140625
    6. '
' → logprob: -6.1574859619140625
    7. '    
' → logprob: -7.1574859619140625
    8. '    ' → logprob: -7.2824859619140625
    9. '```' → logprob: -7.4074859619140625
    10. ')' → logprob: -7.9074859619140625

Token 1173: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8017460107803345
    2. 'import' → logprob: -1.0517460107803345
    3. ' return' → logprob: -2.551745891571045
    4. 'return' → logprob: -2.926745891571045
    5. ' continue' → logprob: -4.176745891571045
    6. 'continue' → logprob: -4.301745891571045
    7. ' import' → logprob: -5.051745891571045
    8. ' will' → logprob: -5.176745891571045
    9. ' =' → logprob: -5.301745891571045
    10. 'def' → logprob: -5.301745891571045

Token 1174: ' try' (ID: 2075)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8963397741317749
    2. 'import' → logprob: -1.396339774131775
    3. '   ' → logprob: -1.646339774131775
    4. 'return' → logprob: -2.6463398933410645
    5. '```' → logprob: -2.6463398933410645
    6. '
' → logprob: -6.0213398933410645
    7. ' from' → logprob: -6.1463398933410645
    8. 'def' → logprob: -6.3963398933410645
    9. 'continue' → logprob: -6.6463398933410645
    10. '``' → logprob: -7.3963398933410645

Token 1175: ' all' (ID: 722)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12690269947052002
    2. ' from' → logprob: -2.3769025802612305
    3. 'import' → logprob: -4.1269025802612305
    4. '   ' → logprob: -4.7519025802612305
    5. '    ' → logprob: -7.6269025802612305
    6. '```' → logprob: -8.37690258026123
    7. 'n' → logprob: -8.87690258026123
    8. ' import' → logprob: -9.00190258026123
    9. ')' → logprob: -9.00190258026123
    10. 'for' → logprob: -9.37690258026123

Token 1176: ' permutations' (ID: 174595)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08397010713815689
    2. 'import' → logprob: -3.583970069885254
    3. ' permutations' → logprob: -3.583970069885254
    4. ' from' → logprob: -3.958970069885254
    5. '   ' → logprob: -5.708970069885254
    6. 'per' → logprob: -6.708970069885254
    7. '_food' → logprob: -8.333970069885254
    8. '_per' → logprob: -8.708970069885254
    9. '_from' → logprob: -8.708970069885254
    10. ')' → logprob: -9.083970069885254

Token 1177: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4443055987358093
    2. 'import' → logprob: -1.319305658340454
    3. 'from' → logprob: -2.444305658340454
    4. '
' → logprob: -6.319305419921875
    5. ' from' → logprob: -6.569305419921875
    6. '    
' → logprob: -6.944305419921875
    7. '<|end|>' → logprob: -8.569305419921875
    8. ' import' → logprob: -9.569305419921875
    9. '<|end|>' → logprob: -10.444305419921875
    10. ',' → logprob: -10.694305419921875

Token 1178: ' pick' (ID: 5230)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.25158655643463135
    2. 'from' → logprob: -1.6265865564346313
    3. ' from' → logprob: -4.376586437225342
    4. '```' → logprob: -4.751586437225342
    5. ' import' → logprob: -5.751586437225342
    6. '   ' → logprob: -6.626586437225342
    7. '``' → logprob: -10.3765869140625
    8. 'return' → logprob: -11.1265869140625
    9. 'find' → logprob: -11.2515869140625
    10. 'try' → logprob: -11.5015869140625

Token 1179: ' the' (ID: 290)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08206318318843842
    2. 'import' → logprob: -3.2070631980895996
    3. ' from' → logprob: -3.5820631980895996
    4. '   ' → logprob: -4.5820631980896
    5. ' the' → logprob: -9.457062721252441
    6. 'the' → logprob: -9.957062721252441
    7. '```' → logprob: -10.582062721252441
    8. ' import' → logprob: -10.707062721252441
    9. ' itertools' → logprob: -10.832062721252441
    10. '	from' → logprob: -11.207062721252441

Token 1180: ' one' (ID: 1001)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.32416507601737976
    2. 'import' → logprob: -1.6991651058197021
    3. ' from' → logprob: -2.949165105819702
    4. ' next' → logprob: -3.324165105819702
    5. 'next' → logprob: -5.824164867401123
    6. ' best' → logprob: -6.574164867401123
    7. 'best' → logprob: -7.824164867401123
    8. '   ' → logprob: -8.074165344238281
    9. ' import' → logprob: -8.324165344238281
    10. '```' → logprob: -9.574165344238281

Token 1181: ' stable' (ID: 22105)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5867989659309387
    2. 'from' → logprob: -1.086798906326294
    3. ' from' → logprob: -2.336798906326294
    4. '   ' → logprob: -5.086799144744873
    5. '
' → logprob: -6.211799144744873
    6. '```' → logprob: -7.336799144744873
    7. ' import' → logprob: -7.586799144744873
    8. ' of' → logprob: -8.586798667907715
    9. '<|end|>' → logprob: -9.711798667907715
    10. ':' → logprob: -9.711798667907715

Token 1182: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6737579107284546
    2. 'import' → logprob: -0.9237579107284546
    3. 'from' → logprob: -3.173758029937744
    4. '
' → logprob: -3.673758029937744
    5. '    
' → logprob: -5.173758029937744
    6. '<|end|>' → logprob: -5.298758029937744
    7. ',' → logprob: -6.048758029937744
    8. ' from' → logprob: -6.298758029937744
    9. '<|end|>' → logprob: -6.548758029937744
    10. '  
' → logprob: -6.673758029937744

Token 1183: ' minimal' (ID: 19957)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4315877854824066
    2. 'from' → logprob: -1.056587815284729
    3. ' from' → logprob: -6.4315876960754395
    4. ' import' → logprob: -7.3065876960754395
    5. '```' → logprob: -7.5565876960754395
    6. ' minimal' → logprob: -10.931588172912598
    7. 'the' → logprob: -11.056588172912598
    8. '   ' → logprob: -11.681588172912598
    9. ' itertools' → logprob: -11.931588172912598
    10. ' the' → logprob: -11.931588172912598

Token 1184: ' G' (ID: 499)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.42735156416893005
    2. 'import' → logprob: -2.177351474761963
    3. '_center' → logprob: -2.427351474761963
    4. 'center' → logprob: -2.802351474761963
    5. ' center' → logprob: -3.927351474761963
    6. ' from' → logprob: -3.927351474761963
    7. '```' → logprob: -4.552351474761963
    8. 'cost' → logprob: -5.052351474761963
    9. '
' → logprob: -5.302351474761963
    10. '_cost' → logprob: -5.552351474761963

Token 1185: '.

' (ID: 364)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.660987913608551
    2. 'from' → logprob: -1.5359878540039062
    3. '_' → logprob: -2.4109878540039062
    4. '
' → logprob: -2.5359878540039062
    5. '   ' → logprob: -3.1609878540039062
    6. ')' → logprob: -4.535987854003906
    7. ' ' → logprob: -4.785987854003906
    8. 'for' → logprob: -5.160987854003906
    9. '  
' → logprob: -5.535987854003906
    10. '    
' → logprob: -5.535987854003906

Token 1186: 'def' (ID: 1314)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8077701926231384
    2. 'from' → logprob: -1.0577702522277832
    3. '   ' → logprob: -1.6827702522277832
    4. ' from' → logprob: -4.307770252227783
    5. '
' → logprob: -5.432770252227783
    6. '```' → logprob: -6.432770252227783
    7. 'for' → logprob: -7.807770252227783
    8. '    
' → logprob: -8.057769775390625
    9. ' for' → logprob: -8.807769775390625
    10. ' import' → logprob: -8.932769775390625

Token 1187: ' main' (ID: 2758)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.0007562621613033116
    2. 'solve' → logprob: -7.25075626373291
    3. '```' → logprob: -11.12575626373291
    4. ' _' → logprob: -11.62575626373291
    5. ' find' → logprob: -11.62575626373291
    6. ' solution' → logprob: -12.62575626373291
    7. '_s' → logprob: -13.00075626373291
    8. '_' → logprob: -13.25075626373291
    9. ' ' → logprob: -13.87575626373291
    10. ' solver' → logprob: -14.12575626373291

Token 1188: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0032153804786503315
    2. '():
' → logprob: -5.753215312957764
    3. '_' → logprob: -11.628215789794922
    4. ' ():' → logprob: -11.628215789794922
    5. '(' → logprob: -11.878215789794922
    6. '()' → logprob: -12.003215789794922
    7. ':' → logprob: -12.878215789794922
    8. '():
' → logprob: -13.128215789794922
    9. 'def' → logprob: -14.628215789794922
    10. '_:' → logprob: -14.878215789794922

Token 1189: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.46555420756340027
    2. '   ' → logprob: -1.4655542373657227
    3. 'import' → logprob: -2.2155542373657227
    4. ' from' → logprob: -4.090554237365723
    5. '```' → logprob: -5.215554237365723
    6. 'from' → logprob: -5.340554237365723
    7. '	import' → logprob: -6.465554237365723
    8. '<|end|>' → logprob: -6.715554237365723
    9. '    ' → logprob: -7.090554237365723
    10. ' n' → logprob: -8.090554237365723

Token 1190: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.19011487066745758
    2. 'from' → logprob: -2.315114974975586
    3. '   ' → logprob: -3.065114974975586
    4. '```' → logprob: -4.315114974975586
    5. ' import' → logprob: -4.565114974975586
    6. ' from' → logprob: -5.940114974975586
    7. 'def' → logprob: -7.565114974975586
    8. 'foods' → logprob: -7.815114974975586
    9. 'n' → logprob: -9.065114974975586
    10. ' foods' → logprob: -9.315114974975586

Token 1191: ' sys' (ID: 12228)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.641459047794342
    2. 'sys' → logprob: -1.3914589881896973
    3. 'math' → logprob: -1.8914589881896973
    4. ' itertools' → logprob: -2.6414589881896973
    5. ' math' → logprob: -6.516458988189697
    6. ' sys' → logprob: -6.891458988189697
    7. 'heap' → logprob: -9.016459465026855
    8. '   ' → logprob: -11.266459465026855
    9. 'cmath' → logprob: -12.016459465026855
    10. '```' → logprob: -12.016459465026855

Token 1192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11136410385370255
    2. 'def' → logprob: -3.1113641262054443
    3. 'import' → logprob: -3.4863641262054443
    4. '```' → logprob: -4.736363887786865
    5. '
' → logprob: -4.986363887786865
    6. '    
' → logprob: -5.486363887786865
    7. 'input' → logprob: -5.861363887786865
    8. 'for' → logprob: -5.861363887786865
    9. ' for' → logprob: -7.611363887786865
    10. '(stdin' → logprob: -7.736363887786865

Token 1193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014895922504365444
    2. '```' → logprob: -5.014895915985107
    3. 'import' → logprob: -5.389895915985107
    4. '    
' → logprob: -6.764895915985107
    5. 'def' → logprob: -7.389895915985107
    6. 'from' → logprob: -7.389895915985107
    7. '
' → logprob: -7.514895915985107
    8. 'input' → logprob: -8.264896392822266
    9. ' input' → logprob: -9.514896392822266
    10. ' import' → logprob: -9.764896392822266

Token 1194: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4089854955673218
    2. 'from' → logprob: -1.5339854955673218
    3. 'import' → logprob: -2.6589856147766113
    4. '```' → logprob: -3.4089856147766113
    5. 'def' → logprob: -4.533985614776611
    6. ' from' → logprob: -5.533985614776611
    7. 'input' (adapté à ' input') → logprob: -7.658985614776611
    8. 'for' → logprob: -7.658985614776611
    9. ' import' → logprob: -8.283985137939453
    10. '    
' → logprob: -8.408985137939453

Token 1195: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9353345036506653
    2. '().' → logprob: -0.9353345036506653
    3. '=' → logprob: -1.8103344440460205
    4. '.readline' → logprob: -3.9353344440460205
    5. ' =' → logprob: -4.4353346824646
    6. '.' → logprob: -5.0603346824646
    7. '_lines' → logprob: -5.6853346824646
    8. '   ' → logprob: -6.6853346824646
    9. '_data' → logprob: -6.6853346824646
    10. '=sys' → logprob: -6.6853346824646

Token 1196: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2522018551826477
    2. 'sys' → logprob: -1.502201795578003
    3. '=sys' → logprob: -8.377202033996582
    4. '(sys' → logprob: -10.502202033996582
    5. '	sys' → logprob: -11.627202033996582
    6. '   ' → logprob: -12.127202033996582
    7. 'input' → logprob: -14.502202033996582
    8. ' input' → logprob: -15.752202033996582
    9. 'lambda' → logprob: -16.377201080322266
    10. ' lambda' → logprob: -16.502201080322266

Token 1197: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16403916478157043
    2. '.readline' → logprob: -1.914039134979248
    3. '().' → logprob: -6.039039134979248
    4. ' .' → logprob: -7.164039134979248
    5. '.stdin' → logprob: -8.289039611816406
    6. '```' → logprob: -9.164039611816406
    7. '.readlines' → logprob: -9.664039611816406
    8. ').' → logprob: -9.914039611816406
    9. '​.' → logprob: -10.539039611816406
    10. '.read' → logprob: -10.914039611816406

Token 1198: '.readline' (ID: 74673)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5909014940261841
    2. '.readline' → logprob: -1.215901494026184
    3. '   ' → logprob: -3.3409013748168945
    4. '().' → logprob: -3.5909013748168945
    5. '    
' → logprob: -4.2159013748168945
    6. '.readlines' → logprob: -4.2159013748168945
    7. '()' → logprob: -4.5909013748168945
    8. '``' → logprob: -4.7159013748168945
    9. ' =' → logprob: -5.0909013748168945
    10. '.' → logprob: -5.3409013748168945

Token 1199: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6905609965324402
    2. '
' → logprob: -0.9405609965324402
    3. 'def' → logprob: -3.065561056137085
    4. '    
' → logprob: -3.440561056137085
    5. '```' → logprob: -4.315560817718506
    6. 'n' → logprob: -5.065560817718506
    7. '(n' → logprob: -5.940560817718506
    8. 'for' → logprob: -6.690560817718506
    9. '``' → logprob: -6.690560817718506
    10. '(' → logprob: -7.190560817718506

Token 1200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28807276487350464
    2. 'n' → logprob: -1.4130728244781494
    3. 'def' → logprob: -5.91307258605957
    4. '```' → logprob: -6.03807258605957
    5. 't' → logprob: -7.66307258605957
    6. ' n' → logprob: -7.66307258605957
    7. '	n' → logprob: -8.03807258605957
    8. '(n' → logprob: -8.53807258605957
    9. 'foods' → logprob: -9.03807258605957
    10. '
' → logprob: -9.91307258605957

Token 1201: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2099536955356598
    2. 't' → logprob: -1.7099536657333374
    3. '   ' → logprob: -4.959953784942627
    4. 'T' → logprob: -6.709953784942627
    5. 'N' → logprob: -9.084953308105469
    6. 'def' → logprob: -9.584953308105469
    7. 'num' → logprob: -10.584953308105469
    8. 'k' → logprob: -10.834953308105469
    9. ' t' → logprob: -11.209953308105469
    10. ' n' → logprob: -11.209953308105469

Token 1202: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4854576289653778
    2. 'True' → logprob: -0.9854576587677002
    3. '(True' → logprob: -4.485457420349121
    4. '   ' → logprob: -10.485457420349121
    5. '=True' → logprob: -11.860457420349121
    6. '1' → logprob: -13.485457420349121
    7. ' ' → logprob: -13.735457420349121
    8. '(' → logprob: -13.985457420349121
    9. '```' → logprob: -13.985457420349121
    10. '_TRUE' → logprob: -14.110457420349121

Token 1203: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.7089567184448242
    2. '():' → logprob: -0.7089567184448242
    3. ':' → logprob: -4.833956718444824
    4. ':
' → logprob: -5.458956718444824
    5. '   ' → logprob: -6.208956718444824
    6. '()' → logprob: -7.458956718444824
    7. '       ' → logprob: -8.583956718444824
    8. '(' → logprob: -9.208956718444824
    9. '().' → logprob: -9.333956718444824
    10. '(),' → logprob: -9.458956718444824

Token 1204: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17891831696033478
    2. ' line' → logprob: -1.9289183616638184
    3. 'line' → logprob: -4.428918361663818
    4. '```' → logprob: -5.553918361663818
    5. '       ' → logprob: -6.303918361663818
    6. '	line' → logprob: -7.428918361663818
    7. '(line' → logprob: -9.05391788482666
    8. '#line' → logprob: -10.17891788482666
    9. 'try' → logprob: -10.42891788482666
    10. '``' → logprob: -10.67891788482666

Token 1205: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.019767995923757553
    2. ' line' → logprob: -4.144767761230469
    3. '   ' → logprob: -5.644767761230469
    4. 'n' (adapté à ' n') → logprob: -9.519767761230469
    5. '	line' → logprob: -10.144767761230469
    6. 's' → logprob: -10.394767761230469
    7. '```' → logprob: -10.519767761230469
    8. '       ' → logprob: -12.019767761230469
    9. 'l' → logprob: -12.394767761230469
    10. '(line' → logprob: -12.894767761230469

Token 1206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22761541604995728
    2. '=' → logprob: -1.6026153564453125
    3. '   ' → logprob: -6.6026153564453125
    4. ',' → logprob: -8.852615356445312
    5. ' ==' → logprob: -9.102615356445312
    6. '<|end|>' → logprob: -9.852615356445312
    7. '>' → logprob: -9.977615356445312
    8. '    ' → logprob: -9.977615356445312
    9. ' >' → logprob: -10.102615356445312
    10. '==' → logprob: -10.102615356445312

Token 1207: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16025123000144958
    2. ' int' → logprob: -1.910251259803772
    3. '=int' → logprob: -11.53525161743164
    4. '   ' → logprob: -11.78525161743164
    5. 'input' → logprob: -12.03525161743164
    6. ' input' → logprob: -13.66025161743164
    7. '<int' → logprob: -14.28525161743164
    8. '(int' → logprob: -14.41025161743164
    9. 'map' → logprob: -15.03525161743164
    10. '[int' → logprob: -15.03525161743164

Token 1208: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.18173418939113617
    2. '(' → logprob: -2.556734085083008
    3. '()' → logprob: -2.556734085083008
    4. '(sys' → logprob: -5.181734085083008
    5. 'input' → logprob: -5.556734085083008
    6. '(
' → logprob: -6.931734085083008
    7. '()
' → logprob: -8.681734085083008
    8. '('' → logprob: -8.806734085083008
    9. ' (' → logprob: -8.931734085083008
    10. ' ()' → logprob: -10.056734085083008

Token 1209: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.12812931835651398
    2. '())' → logprob: -2.128129243850708
    3. '().' → logprob: -7.003129482269287
    4. '()' → logprob: -8.378129005432129
    5. '()
' → logprob: -9.878129005432129
    6. '())
' → logprob: -11.878129005432129
    7. '())

' → logprob: -13.378129005432129
    8. '   ' → logprob: -15.128129005432129
    9. ' ())
' → logprob: -15.128129005432129
    10. '()))
' → logprob: -15.378129005432129

Token 1210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008166544139385223
    2. '   ' → logprob: -8.375816345214844
    3. ' if' → logprob: -8.375816345214844
    4. '<|end|>' → logprob: -8.625816345214844
    5. '        
' → logprob: -10.000816345214844
    6. 'if' → logprob: -10.375816345214844
    7. '```' → logprob: -10.500816345214844
    8. ',' → logprob: -11.375816345214844
    9. '[' → logprob: -11.625816345214844
    10. '	' → logprob: -11.750816345214844

Token 1211: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15275822579860687
    2. ' if' → logprob: -2.2777581214904785
    3. 'if' (adapté à ' if') → logprob: -3.2777581214904785
    4. '   ' → logprob: -7.6527581214904785
    5. '	if' → logprob: -7.6527581214904785
    6. '	' → logprob: -8.152758598327637
    7. '<|end|>' → logprob: -8.902758598327637
    8. '        
' → logprob: -11.527758598327637
    9. '	   ' → logprob: -11.902758598327637
    10. ' ' → logprob: -12.277758598327637

Token 1212: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.009336566552519798
    2. 'n' → logprob: -4.759336471557617
    3. ' not' → logprob: -7.259336471557617
    4. 'not' → logprob: -11.384336471557617
    5. '(n' → logprob: -12.384336471557617
    6. '=n' → logprob: -14.009336471557617
    7. '	n' → logprob: -14.009336471557617
    8. ' ' → logprob: -15.259336471557617
    9. ')n' → logprob: -15.759336471557617
    10. '_n' → logprob: -16.009336471557617

Token 1213: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3493753969669342
    2. '==' → logprob: -1.2243753671646118
    3. '```' → logprob: -8.22437572479248
    4. '=' → logprob: -8.84937572479248
    5. '<' → logprob: -9.09937572479248
    6. ')' → logprob: -9.47437572479248
    7. '[' → logprob: -10.34937572479248
    8. ')==' → logprob: -10.34937572479248
    9. '()==' → logprob: -10.47437572479248
    10. '**' → logprob: -10.59937572479248

Token 1214: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.250075340270996
    4. '       ' → logprob: -16.75007438659668
    5. ')' → logprob: -18.87507438659668
    6. '=' → logprob: -19.12507438659668
    7. '۰' → logprob: -19.75007438659668
    8. '    ' → logprob: -20.12507438659668
    9. '  ' → logprob: -20.25007438659668
    10. '           ' → logprob: -20.37507438659668

Token 1215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -19.250003814697266
    4. '       ' → logprob: -20.375003814697266
    5. '０' → logprob: -21.625003814697266
    6. '    ' → logprob: -22.000003814697266
    7. '۰' → logprob: -22.000003814697266
    8. '  ' → logprob: -22.125003814697266
    9. '
' → logprob: -22.750003814697266
    10. '```' → logprob: -22.750003814697266

Token 1216: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5362275838851929
    2. ':
' → logprob: -0.9112275838851929
    3. '           ' → logprob: -4.536227703094482
    4. '       ' → logprob: -6.411227703094482
    5. '):
' → logprob: -8.536227226257324
    6. '():
' → logprob: -9.161227226257324
    7. ':return' → logprob: -9.661227226257324
    8. '   ' → logprob: -9.786227226257324
    9. '<|end|>' → logprob: -9.786227226257324
    10. '<|end|>' → logprob: -10.161227226257324

Token 1217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005660186288878322
    2. '       ' → logprob: -7.625566005706787
    3. '		' → logprob: -9.750566482543945
    4. '   ' → logprob: -11.750566482543945
    5. '	       ' → logprob: -12.750566482543945
    6. '	   ' → logprob: -13.250566482543945
    7. '		   ' → logprob: -13.625566482543945
    8. ':' → logprob: -14.000566482543945
    9. '          ' → logprob: -14.125566482543945
    10. ':
' → logprob: -14.375566482543945

Token 1218: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.022054893895983696
    2. ' break' → logprob: -4.272054672241211
    3. 'return' → logprob: -5.022054672241211
    4. '	break' → logprob: -6.897054672241211
    5. '       ' → logprob: -8.397054672241211
    6. ' return' → logprob: -10.897054672241211
    7. '   ' → logprob: -11.772054672241211
    8. '```' → logprob: -12.897054672241211
    9. '_break' → logprob: -13.522054672241211
    10. '	return' → logprob: -13.772054672241211

Token 1219: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02028481848537922
    2. '<|end|>' → logprob: -4.020284652709961
    3. '        
' → logprob: -6.895284652709961
    4. '   ' → logprob: -7.520284652709961
    5. '
' → logprob: -8.020284652709961
    6. '<|end|>' → logprob: -9.270284652709961
    7. '```' → logprob: -10.270284652709961
    8. '    
' → logprob: -10.645284652709961
    9. ',' → logprob: -10.645284652709961
    10. '	' → logprob: -11.520284652709961

Token 1220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016533629968762398
    2. '<|end|>' → logprob: -4.891533851623535
    3. '   ' → logprob: -5.391533851623535
    4. '```' → logprob: -5.766533851623535
    5. '        
' → logprob: -7.016533851623535
    6. '<|end|>' → logprob: -9.641533851623535
    7. '    
' → logprob: -9.891533851623535
    8. '	' → logprob: -10.391533851623535
    9. '
' → logprob: -10.516533851623535
    10. ' ' → logprob: -10.641533851623535

Token 1221: ' foods' (ID: 18747)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' (adapté à ' foods') → logprob: -0.525866687297821
    2. '       ' → logprob: -0.900866687297821
    3. ' foods' → logprob: -6.025866508483887
    4. 'food' → logprob: -8.775866508483887
    5. '```' → logprob: -9.275866508483887
    6. '	' → logprob: -11.025866508483887
    7. '        
' → logprob: -11.400866508483887
    8. '   ' → logprob: -11.525866508483887
    9. 'Foods' → logprob: -11.525866508483887
    10. '_food' → logprob: -11.900866508483887

Token 1222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20250694453716278
    2. '=' → logprob: -1.7025068998336792
    3. '   ' → logprob: -7.702507019042969
    4. ',' → logprob: -7.702507019042969
    5. ')' → logprob: -8.952507019042969
    6. '.' → logprob: -11.327507019042969
    7. '_' → logprob: -11.827507019042969
    8. '.append' → logprob: -11.827507019042969
    9. '       ' → logprob: -11.952507019042969
    10. '    ' → logprob: -12.577507019042969

Token 1223: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17451561987400055
    2. '[int' → logprob: -2.674515724182129
    3. '[list' → logprob: -3.174515724182129
    4. '[]' → logprob: -3.674515724182129
    5. '[]
' → logprob: -4.174515724182129
    6. '[List' → logprob: -5.924515724182129
    7. '[n' → logprob: -6.424515724182129
    8. '[ind' → logprob: -7.049515724182129
    9. '[input' → logprob: -7.924515724182129
    10. '[i' → logprob: -8.049515724182129

Token 1224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000680861237924546
    2. ' for' → logprob: -8.250680923461914
    3. 'for' → logprob: -8.500680923461914
    4. '<|end|>' → logprob: -9.375680923461914
    5. '	' → logprob: -10.125680923461914
    6. '```' → logprob: -10.500680923461914
    7. '        
' → logprob: -11.125680923461914
    8. '<|end|>' → logprob: -11.875680923461914
    9. '[' → logprob: -12.125680923461914
    10. '	       ' → logprob: -12.250680923461914

Token 1225: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3725523352622986
    2. 'for' (adapté à ' for') → logprob: -1.3725523948669434
    3. ' for' → logprob: -2.8725523948669434
    4. '	' → logprob: -7.872552394866943
    5. '```' → logprob: -8.247551918029785
    6. '	for' → logprob: -9.122551918029785
    7. '
' → logprob: -10.247551918029785
    8. '           ' → logprob: -10.247551918029785
    9. '   ' → logprob: -10.497551918029785
    10. '{
' → logprob: -10.747551918029785

Token 1226: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02369135059416294
    2. ' _' → logprob: -3.773691415786743
    3. '   ' → logprob: -8.023691177368164
    4. ' range' → logprob: -9.898691177368164
    5. 'i' → logprob: -10.898691177368164
    6. ' i' → logprob: -11.023691177368164
    7. '    ' → logprob: -11.148691177368164
    8. 'range' → logprob: -12.023691177368164
    9. '_range' → logprob: -12.523691177368164
    10. '_i' → logprob: -12.898691177368164

Token 1227: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18993674218654633
    2. ' range' → logprob: -1.8149367570877075
    3. ' in' → logprob: -5.189936637878418
    4. 'in' → logprob: -5.439936637878418
    5. 'i' → logprob: -9.064936637878418
    6. '(range' → logprob: -9.814936637878418
    7. '   ' → logprob: -11.439936637878418
    8. ' ' → logprob: -11.564936637878418
    9. '_' → logprob: -11.939936637878418
    10. '_range' → logprob: -12.189936637878418

Token 1228: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -18.75002670288086
    4. '```' → logprob: -18.87502670288086
    5. '   ' → logprob: -19.50002670288086
    6. '	range' → logprob: -19.50002670288086
    7. '
' → logprob: -20.25002670288086
    8. 'input' → logprob: -20.37502670288086
    9. '``' → logprob: -20.62502670288086
    10. '  ' → logprob: -21.50002670288086

Token 1229: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4764825701713562
    2. '(n' → logprob: -0.9764825701713562
    3. ' n' → logprob: -6.226482391357422
    4. 'range' → logprob: -8.726482391357422
    5. 'int' → logprob: -9.226482391357422
    6. '       ' → logprob: -9.476482391357422
    7. '   ' → logprob: -10.226482391357422
    8. ' range' → logprob: -10.851482391357422
    9. ' (' → logprob: -11.226482391357422
    10. '(int' → logprob: -11.726482391357422

Token 1230: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35122478008270264
    2. '():
' → logprob: -1.4762247800827026
    3. '       ' → logprob: -3.226224899291992
    4. ':
' → logprob: -4.726224899291992
    5. '           ' → logprob: -4.976224899291992
    6. '):' → logprob: -5.601224899291992
    7. '()):
' → logprob: -5.851224899291992
    8. ',' → logprob: -6.351224899291992
    9. ':' → logprob: -6.351224899291992
    10. '   ' → logprob: -7.601224899291992

Token 1231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017846230417490005
    2. '       ' → logprob: -4.26784610748291
    3. '```' → logprob: -6.26784610748291
    4. '	       ' → logprob: -7.51784610748291
    5. ':
' → logprob: -8.39284610748291
    6. '<|end|>' → logprob: -8.64284610748291
    7. '(' → logprob: -9.01784610748291
    8. '<|end|>' → logprob: -9.26784610748291
    9. ',' → logprob: -9.76784610748291
    10. '{' → logprob: -9.76784610748291

Token 1232: ' f' (ID: 285)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6398743391036987
    2. 'weight' → logprob: -1.5148743391036987
    3. ' w' → logprob: -1.6398743391036987
    4. ' weight' → logprob: -3.7648744583129883
    5. ' line' → logprob: -4.639874458312988
    6. 'line' → logprob: -4.764874458312988
    7. 'weights' → logprob: -5.139874458312988
    8. 'x' → logprob: -5.639874458312988
    9. 'name' → logprob: -6.264874458312988
    10. 'data' → logprob: -6.764874458312988

Token 1233: ',' (ID: 11)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.40089869499206543
    2. ' =' → logprob: -2.2758986949920654
    3. '_w' → logprob: -2.5258986949920654
    4. 'or' → logprob: -3.0258986949920654
    5. ',' → logprob: -3.9008986949920654
    6. '_i' → logprob: -4.4008989334106445
    7. '=' → logprob: -4.7758989334106445
    8. 's' → logprob: -4.9008989334106445
    9. 'weight' → logprob: -4.9008989334106445
    10. '_id' → logprob: -5.0258989334106445

Token 1234: ' w' (ID: 286)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5470623970031738
    2. 'w' → logprob: -0.9220623970031738
    3. ' s' → logprob: -4.297062397003174
    4. ' w' → logprob: -5.172062397003174
    5. 't' → logprob: -6.422062397003174
    6. 'c' → logprob: -7.672062397003174
    7. 'l' → logprob: -7.672062397003174
    8. 'p' → logprob: -7.922062397003174
    9. 'g' → logprob: -8.047061920166016
    10. 'd' → logprob: -8.422061920166016

Token 1235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6659241914749146
    2. '=' → logprob: -1.4159241914749146
    3. ' =' → logprob: -1.4159241914749146
    4. ')' → logprob: -8.165924072265625
    5. ' ,' → logprob: -9.040924072265625
    6. '   ' → logprob: -10.165924072265625
    7. '<|end|>' → logprob: -10.165924072265625
    8. ' ' → logprob: -10.290924072265625
    9. '           ' → logprob: -10.415924072265625
    10. ' ' → logprob: -10.915924072265625

Token 1236: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.033750586211681366
    2. ' s' → logprob: -3.408750534057617
    3. 'c' → logprob: -10.533750534057617
    4. 'p' → logprob: -10.658750534057617
    5. 't' → logprob: -12.033750534057617
    6. '_s' → logprob: -12.283750534057617
    7. 'l' → logprob: -12.408750534057617
    8. '           ' → logprob: -12.533750534057617
    9. 'S' → logprob: -12.783750534057617
    10. 'f' → logprob: -12.908750534057617

Token 1237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28117257356643677
    2. '=' → logprob: -1.406172513961792
    3. ',' → logprob: -11.531172752380371
    4. ')' → logprob: -12.406172752380371
    5. ' ' → logprob: -13.031172752380371
    6. ' ' → logprob: -14.031172752380371
    7. ')=' → logprob: -14.281172752380371
    8. '	' → logprob: -14.406172752380371
    9. '=line' → logprob: -14.406172752380371
    10. '		' → logprob: -14.656172752380371

Token 1238: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3132675588130951
    2. 'map' → logprob: -1.3132675886154175
    3. '           ' → logprob: -13.063267707824707
    4. '	map' → logprob: -13.438267707824707
    5. 'input' → logprob: -13.688267707824707
    6. ' input' → logprob: -15.188267707824707
    7. 'list' → logprob: -15.438267707824707
    8. '[' → logprob: -15.688267707824707
    9. '   ' → logprob: -15.938267707824707
    10. ' list' → logprob: -16.31326675415039

Token 1239: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0038954415358603
    2. '()' → logprob: -5.628895282745361
    3. '.readline' → logprob: -9.75389575958252
    4. '()).' → logprob: -10.12889575958252
    5. '.' → logprob: -10.50389575958252
    6. ')' → logprob: -10.75389575958252
    7. '()='' → logprob: -10.75389575958252
    8. ').' → logprob: -11.00389575958252
    9. '())' → logprob: -11.00389575958252
    10. '.split' → logprob: -11.25389575958252

Token 1240: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.31378141045570374
    2. 'split' → logprob: -1.3137813806533813
    3. 'rstrip' → logprob: -7.563781261444092
    4. ' strip' → logprob: -15.06378173828125
    5. ' split' → logprob: -16.31378173828125
    6. '(strip' → logprob: -16.68878173828125
    7. 'replace' → logprob: -16.81378173828125
    8. '(split' → logprob: -16.81378173828125
    9. '```' → logprob: -17.06378173828125
    10. '.strip' → logprob: -17.31378173828125

Token 1241: '()
' (ID: 1234)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32997581362724304
    2. '=' → logprob: -1.9549758434295654
    3. '           ' → logprob: -3.0799758434295654
    4. ',' → logprob: -3.2049758434295654
    5. '
' → logprob: -4.204975605010986
    6. '            
' → logprob: -4.704975605010986
    7. '		' → logprob: -4.954975605010986
    8. ')' → logprob: -5.704975605010986
    9. '()' → logprob: -5.829975605010986
    10. '()
' → logprob: -6.079975605010986

Token 1242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03975808992981911
    2. ',' → logprob: -4.164758205413818
    3. ' =' → logprob: -4.789758205413818
    4. '       ' → logprob: -5.039758205413818
    5. '<|end|>' → logprob: -5.789758205413818
    6. '		' → logprob: -6.914758205413818
    7. '<|end|>' → logprob: -7.414758205413818
    8. '   ' → logprob: -7.539758205413818
    9. '	       ' → logprob: -7.664758205413818
    10. '            
' → logprob: -7.789758205413818

Token 1243: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.25743043422698975
    2. 'f' → logprob: -2.3824305534362793
    3. ' w' → logprob: -2.3824305534362793
    4. ' f' → logprob: -3.8824305534362793
    5. '           ' → logprob: -3.8824305534362793
    6. ' foods' → logprob: -8.257430076599121
    7. 'foods' → logprob: -8.507430076599121
    8. '   ' → logprob: -9.007430076599121
    9. 'food' → logprob: -9.132430076599121
    10. '       ' → logprob: -9.507430076599121

Token 1244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00617941003292799
    2. '=int' → logprob: -5.631179332733154
    3. ' =' → logprob: -6.006179332733154
    4. ',' → logprob: -9.256179809570312
    5. 'int' → logprob: -12.131179809570312
    6. '_=' → logprob: -12.131179809570312
    7. ')' → logprob: -13.881179809570312
    8. '```' → logprob: -14.006179809570312
    9. '_int' → logprob: -14.256179809570312
    10. '=float' → logprob: -14.381179809570312

Token 1245: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.4121114822482923e-06
    2. ' int' → logprob: -12.750003814697266
    3. 'float' → logprob: -14.750003814697266
    4. '[int' → logprob: -18.750003814697266
    5. '=int' → logprob: -19.500003814697266
    6. '	int' → logprob: -21.125003814697266
    7. '<int' → logprob: -21.375003814697266
    8. '(int' → logprob: -21.625003814697266
    9. '   ' → logprob: -21.750003814697266
    10. '
' → logprob: -22.750003814697266

Token 1246: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -6.0629870858974755e-05
    2. 'w' → logprob: -9.75006103515625
    3. '(' → logprob: -13.12506103515625
    4. '(
' → logprob: -17.00006103515625
    5. ' w' → logprob: -17.62506103515625
    6. ' (' → logprob: -17.75006103515625
    7. '	w' → logprob: -18.00006103515625
    8. ')' → logprob: -18.25006103515625
    9. '_w' → logprob: -18.62506103515625
    10. '(s' → logprob: -18.75006103515625

Token 1247: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.020592691376805305
    2. ')' → logprob: -4.77059268951416
    3. ',' → logprob: -4.77059268951416
    4. '           ' → logprob: -6.02059268951416
    5. '),' → logprob: -7.52059268951416
    6. '
' → logprob: -8.89559268951416
    7. ',
' → logprob: -8.89559268951416
    8. ');' → logprob: -10.14559268951416
    9. '),
' → logprob: -10.27059268951416
    10. ' )
' → logprob: -10.52059268951416

Token 1248: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14411741495132446
    2. 's' → logprob: -2.1441173553466797
    3. 'w' → logprob: -5.01911735534668
    4. ',' → logprob: -5.26911735534668
    5. ' s' → logprob: -5.51911735534668
    6. ' w' → logprob: -7.26911735534668
    7. '       ' → logprob: -8.89411735534668
    8. '```' → logprob: -9.14411735534668
    9. '   ' → logprob: -9.39411735534668
    10. ',s' → logprob: -10.39411735534668

Token 1249: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0012761884136125445
    2. ' s' → logprob: -6.876276016235352
    3. '           ' → logprob: -8.376276016235352
    4. 'w' → logprob: -11.876276016235352
    5. '               ' → logprob: -13.126276016235352
    6. '       ' → logprob: -13.376276016235352
    7. '   ' → logprob: -14.626276016235352
    8. 'int' → logprob: -14.751276016235352
    9. '          ' → logprob: -15.251276016235352
    10. '                   ' → logprob: -15.376276016235352

Token 1250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25516995787620544
    2. ' =' → logprob: -1.5051699876785278
    3. '=int' → logprob: -6.630169868469238
    4. '<|end|>' → logprob: -7.130169868469238
    5. ',' → logprob: -7.380169868469238
    6. ')' → logprob: -8.755169868469238
    7. '<|end|>' → logprob: -9.005169868469238
    8. '=
' → logprob: -9.255169868469238
    9. ' =
' → logprob: -10.755169868469238
    10. 'w' → logprob: -10.880169868469238

Token 1251: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.107425062713446e-06
    2. ' int' → logprob: -11.875006675720215
    3. 's' → logprob: -17.00000762939453
    4. '[int' → logprob: -17.37500762939453
    5. '=int' → logprob: -17.50000762939453
    6. 'w' → logprob: -18.00000762939453
    7. '           ' → logprob: -19.37500762939453
    8. '(int' → logprob: -19.62500762939453
    9. '```' → logprob: -19.62500762939453
    10. '
' → logprob: -19.62500762939453

Token 1252: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.18221306800842285
    2. 's' → logprob: -2.557213068008423
    3. ')' → logprob: -3.057213068008423
    4. 'w' → logprob: -3.557213068008423
    5. '(w' → logprob: -4.432212829589844
    6. ')
' → logprob: -7.307212829589844
    7. ')s' → logprob: -8.182212829589844
    8. '),' → logprob: -8.932212829589844
    9. '(' → logprob: -8.932212829589844
    10. '           ' → logprob: -10.057212829589844

Token 1253: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.21010760962963104
    2. ')' → logprob: -1.7101075649261475
    3. '               ' → logprob: -5.335107803344727
    4. '           ' → logprob: -5.710107803344727
    5. '                   ' → logprob: -9.085107803344727
    6. '       ' → logprob: -9.460107803344727
    7. '):
' → logprob: -10.210107803344727
    8. '
' → logprob: -10.210107803344727
    9. ',
' → logprob: -10.585107803344727
    10. ')

' → logprob: -10.710107803344727

Token 1254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.060094818472862244
    2. 'w' → logprob: -2.9350948333740234
    3. ' w' → logprob: -5.560094833374023
    4. '		' → logprob: -7.685094833374023
    5. '<|end|>' → logprob: -7.685094833374023
    6. '       ' → logprob: -9.435094833374023
    7. '<|end|>' → logprob: -9.935094833374023
    8. '	w' → logprob: -10.060094833374023
    9. '   ' → logprob: -10.060094833374023
    10. '	       ' → logprob: -10.685094833374023

Token 1255: ' foods' (ID: 18747)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1954195648431778
    2. 'foods' (adapté à ' foods') → logprob: -2.3204195499420166
    3. '       ' → logprob: -2.5704195499420166
    4. 'food' → logprob: -6.570419788360596
    5. ' foods' → logprob: -7.320419788360596
    6. '   ' → logprob: -7.695419788360596
    7. '```' → logprob: -9.945419311523438
    8. 'f' → logprob: -10.695419311523438
    9. 'def' → logprob: -10.945419311523438
    10. '_food' → logprob: -11.070419311523438

Token 1256: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000822495436295867
    2. '.' → logprob: -7.2508225440979
    3. ' =' → logprob: -10.125822067260742
    4. ' .' → logprob: -10.125822067260742
    5. '   ' → logprob: -10.750822067260742
    6. ').' → logprob: -12.875822067260742
    7. ',' → logprob: -13.000822067260742
    8. '.app' → logprob: -13.500822067260742
    9. '=' → logprob: -14.000822067260742
    10. 'append' → logprob: -14.000822067260742

Token 1257: '((' (ID: 2054)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.2612455189228058
    2. ' (' → logprob: -1.5112454891204834
    3. '(' → logprob: -5.2612457275390625
    4. '((' → logprob: -5.6362457275390625
    5. '(tuple' → logprob: -8.261245727539062
    6. '   ' → logprob: -8.511245727539062
    7. '(food' → logprob: -11.511245727539062
    8. '(F' → logprob: -11.761245727539062
    9. '(int' → logprob: -12.011245727539062
    10. '(w' → logprob: -12.386245727539062

Token 1258: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0014904579147696495
    2. ' f' → logprob: -6.626490592956543
    3. 'w' → logprob: -9.126490592956543
    4. '0' → logprob: -10.876490592956543
    5. '_f' → logprob: -11.626490592956543
    6. '   ' → logprob: -12.001490592956543
    7. ''f' → logprob: -12.501490592956543
    8. ' ' → logprob: -12.751490592956543
    9. ')' → logprob: -12.876490592956543
    10. '_' → logprob: -13.501490592956543

Token 1259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006618033512495458
    2. ',w' → logprob: -7.750661849975586
    3. ' ,' → logprob: -8.750661849975586
    4. '[' → logprob: -10.875661849975586
    5. ',
' → logprob: -11.125661849975586
    6. ')' → logprob: -11.375661849975586
    7. '<|end|>' → logprob: -11.875661849975586
    8. '`,' → logprob: -12.375661849975586
    9. '),' → logprob: -12.375661849975586
    10. '',' → logprob: -13.000661849975586

Token 1260: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12693335115909576
    2. ' w' → logprob: -2.1269333362579346
    3. ' ' → logprob: -13.501933097839355
    4. ' ' → logprob: -14.126933097839355
    5. '	w' → logprob: -14.126933097839355
    6. '0' → logprob: -14.751933097839355
    7. ')' → logprob: -15.001933097839355
    8. ',w' → logprob: -15.251933097839355
    9. ''w' → logprob: -15.501933097839355
    10. ' 
' → logprob: -15.626933097839355

Token 1261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022415895364247262
    2. ')' → logprob: -9.625224113464355
    3. '```' → logprob: -10.000224113464355
    4. ' ,' → logprob: -10.750224113464355
    5. ',
' → logprob: -10.875224113464355
    6. '`,' → logprob: -11.125224113464355
    7. '),' → logprob: -11.375224113464355
    8. '           ' → logprob: -11.625224113464355
    9. '<|end|>' → logprob: -12.125224113464355
    10. '   ' → logprob: -12.125224113464355

Token 1262: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0034438574220985174
    2. ' s' → logprob: -5.753443717956543
    3. 'int' → logprob: -8.503443717956543
    4. '           ' → logprob: -9.753443717956543
    5. '   ' → logprob: -13.753443717956543
    6. ' int' → logprob: -13.878443717956543
    7. '               ' → logprob: -14.253443717956543
    8. ' ' → logprob: -14.628443717956543
    9. '          ' → logprob: -14.878443717956543
    10. '            ' → logprob: -15.003443717956543

Token 1263: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2638784945011139
    2. '))
' → logprob: -1.5138784646987915
    3. ')' → logprob: -4.513878345489502
    4. '           ' → logprob: -7.513878345489502
    5. '       ' → logprob: -8.51387882232666
    6. '   ' → logprob: -9.88887882232666
    7. ')
' → logprob: -10.13887882232666
    8. '))

' → logprob: -10.76387882232666
    9. '               ' → logprob: -10.88887882232666
    10. ')))' → logprob: -11.51387882232666

Token 1264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020431634038686752
    2. '   ' → logprob: -4.3954315185546875
    3. 'import' → logprob: -5.8954315185546875
    4. '<|end|>' → logprob: -6.2704315185546875
    5. '```' → logprob: -6.5204315185546875
    6. '
' → logprob: -7.0204315185546875
    7. '        
' → logprob: -7.8954315185546875
    8. 'from' → logprob: -8.145431518554688
    9. '<|end|>' → logprob: -9.770431518554688
    10. ' from' → logprob: -9.895431518554688

Token 1265: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20995542407035828
    2. 'from' (adapté à ' from') → logprob: -1.9599554538726807
    3. 'import' → logprob: -3.2099554538726807
    4. 'best' → logprob: -5.959955215454102
    5. '```' → logprob: -6.084955215454102
    6. 'foods' → logprob: -6.209955215454102
    7. ' from' → logprob: -7.709955215454102
    8. 'order' → logprob: -8.209955215454102
    9. 'possible' → logprob: -9.459955215454102
    10. 'stack' → logprob: -9.584955215454102

Token 1266: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.018368134275078773
    2. ' itertools' → logprob: -4.018368244171143
    3. 'math' → logprob: -8.518367767333984
    4. 'import' → logprob: -11.643367767333984
    5. 'sys' → logprob: -12.643367767333984
    6. 'heap' → logprob: -13.143367767333984
    7. '_it' → logprob: -13.643367767333984
    8. 'iter' → logprob: -14.143367767333984
    9. ' math' → logprob: -14.268367767333984
    10. 'collections' → logprob: -14.768367767333984

Token 1267: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14548039436340332
    2. ' import' → logprob: -2.1454803943634033
    3. '_import' → logprob: -4.770480155944824
    4. '<|end|>' → logprob: -5.895480155944824
    5. '```' → logprob: -6.020480155944824
    6. '	import' → logprob: -6.020480155944824
    7. 'ertools' → logprob: -7.020480155944824
    8. ' ' → logprob: -8.770480155944824
    9. '-import' → logprob: -9.145480155944824
    10. '(import' → logprob: -9.270480155944824

Token 1268: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.048599522560834885
    2. ' permutations' → logprob: -3.0485994815826416
    3. '	per' → logprob: -12.173599243164062
    4. '.per' → logprob: -12.548599243164062
    5. '_per' → logprob: -13.423599243164062
    6. 'perm' → logprob: -13.798599243164062
    7. '(per' → logprob: -14.548599243164062
    8. '```' → logprob: -15.173599243164062
    9. '-per' → logprob: -16.173599243164062
    10. 'import' → logprob: -17.048599243164062

Token 1269: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01611061580479145
    2. '
' → logprob: -4.641110420227051
    3. ',' → logprob: -6.016110420227051
    4. ' for' → logprob: -6.766110420227051
    5. '        
' → logprob: -6.891110420227051
    6. '<|end|>' → logprob: -7.016110420227051
    7. 'for' → logprob: -7.641110420227051
    8. ',
' → logprob: -9.14111042022705
    9. '<|end|>' → logprob: -9.39111042022705
    10. '```' → logprob: -10.51611042022705

Token 1270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022833107504993677
    2. 'for' → logprob: -9.250227928161621
    3. ' for' → logprob: -9.500227928161621
    4. '
' → logprob: -10.625227928161621
    5. '        
' → logprob: -10.750227928161621
    6. '```' → logprob: -12.250227928161621
    7. ',' → logprob: -13.250227928161621
    8. '   ' → logprob: -13.375227928161621
    9. 'import' → logprob: -14.000227928161621
    10. '<|end|>' → logprob: -14.500227928161621

Token 1271: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.01977909915149212
    2. 'min' → logprob: -4.269779205322266
    3. '       ' → logprob: -6.269779205322266
    4. 'for' → logprob: -6.519779205322266
    5. 'res' → logprob: -7.144779205322266
    6. 'ans' → logprob: -7.519779205322266
    7. 'answer' → logprob: -7.894779205322266
    8. ' best' → logprob: -8.519779205322266
    9. 'result' → logprob: -8.894779205322266
    10. 'valid' → logprob: -9.519779205322266

Token 1272: '_order' (ID: 17446)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1008118391036987
    2. '_score' → logprob: -1.6008118391036987
    3. '_weight' → logprob: -1.6008118391036987
    4. '_token' → logprob: -2.7258119583129883
    5. '_best' → logprob: -2.9758119583129883
    6. '_order' → logprob: -3.2258119583129883
    7. '_per' → logprob: -3.9758119583129883
    8. '_cost' → logprob: -4.475811958312988
    9. '_solution' → logprob: -4.850811958312988
    10. '_val' → logprob: -4.850811958312988

Token 1273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231491327285767
    2. '=' → logprob: -0.8981491327285767
    3. '=None' → logprob: -11.523149490356445
    4. ',' → logprob: -11.773149490356445
    5. ')' → logprob: -13.523149490356445
    6. '   ' → logprob: -13.898149490356445
    7. '=[]' → logprob: -14.273149490356445
    8. '_' → logprob: -14.273149490356445
    9. '<|end|>' → logprob: -14.273149490356445
    10. '    ' → logprob: -14.523149490356445

Token 1274: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03808647021651268
    2. ' None' → logprob: -3.288086414337158
    3. '(None' → logprob: -10.538086891174316
    4. '   ' → logprob: -11.163086891174316
    5. '[]' → logprob: -12.538086891174316
    6. 'none' → logprob: -15.788086891174316
    7. '```' → logprob: -15.913086891174316
    8. 'min' → logprob: -16.2880859375
    9. '[]
' → logprob: -16.5380859375
    10. '[' → logprob: -16.5380859375

Token 1275: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1650691032409668
    2. ' best' → logprob: -3.415069103240967
    3. '<|end|>' → logprob: -3.415069103240967
    4. 'best' → logprob: -3.790069103240967
    5. ' for' → logprob: -3.915069103240967
    6. 'for' → logprob: -4.540069103240967
    7. ',' → logprob: -4.665069103240967
    8. '
' → logprob: -4.915069103240967
    9. '        
' → logprob: -5.415069103240967
    10. '	best' → logprob: -6.040069103240967

Token 1276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2678820490837097
    2. 'best' → logprob: -1.5178821086883545
    3. 'for' → logprob: -5.142881870269775
    4. ' best' → logprob: -5.517881870269775
    5. '```' → logprob: -5.892881870269775
    6. '
' → logprob: -6.892881870269775
    7. ' for' → logprob: -7.767881870269775
    8. 'min' → logprob: -8.142882347106934
    9. '        
' → logprob: -8.392882347106934
    10. 'possible' → logprob: -8.517882347106934

Token 1277: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.00030066570616327226
    2. 'min' → logprob: -8.500300407409668
    3. 'for' → logprob: -9.500300407409668
    4. ' best' → logprob: -10.750300407409668
    5. 'max' → logprob: -14.625300407409668
    6. '   ' → logprob: -15.625300407409668
    7. '       ' → logprob: -16.375301361083984
    8. '
' → logprob: -17.500301361083984
    9. ' min' → logprob: -17.625301361083984
    10. 'float' → logprob: -17.625301361083984

Token 1278: '_G' (ID: 5459)
  Prédit: '_G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_G' → logprob: -0.9693262577056885
    2. '_g' → logprob: -1.0943262577056885
    3. '_center' → logprob: -1.3443262577056885
    4. '_value' → logprob: -5.094326019287109
    5. '_cost' → logprob: -5.469326019287109
    6. '_' → logprob: -5.469326019287109
    7. '_weight' → logprob: -6.094326019287109
    8. '_c' → logprob: -6.594326019287109
    9. '_val' → logprob: -6.969326019287109
    10. '_gr' → logprob: -6.969326019287109

Token 1279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01604481041431427
    2. ' =' → logprob: -4.141044616699219
    3. ',' → logprob: -12.516044616699219
    4. '_' → logprob: -13.141044616699219
    5. '_=' → logprob: -13.516044616699219
    6. ')' → logprob: -14.016044616699219
    7. '=None' → logprob: -14.016044616699219
    8. '=
' → logprob: -14.016044616699219
    9. '<|end|>' → logprob: -15.266044616699219
    10. '```' → logprob: -16.14104461669922

Token 1280: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.01434637326747179
    2. ' float' → logprob: -4.264346599578857
    3. '10' → logprob: -8.7643461227417
    4. 'None' → logprob: -11.0143461227417
    5. ' None' → logprob: -12.1393461227417
    6. '1' → logprob: -12.3893461227417
    7. ' ' → logprob: -14.8893461227417
    8. '   ' → logprob: -15.7643461227417
    9. '	float' → logprob: -16.764347076416016
    10. '(float' → logprob: -16.764347076416016

Token 1281: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0008934747893363237
    2. ''in' → logprob: -7.875893592834473
    3. ''' → logprob: -8.375893592834473
    4. ''s' → logprob: -9.000893592834473
    5. '='' → logprob: -9.875893592834473
    6. ''op' → logprob: -11.500893592834473
    7. ''import' → logprob: -11.500893592834473
    8. ''inc' → logprob: -11.625893592834473
    9. 'inf' → logprob: -12.125893592834473
    10. ''r' → logprob: -12.125893592834473

Token 1282: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.5082851648330688
    2. ''' → logprob: -1.2582851648330688
    3. 'inf' → logprob: -2.2582850456237793
    4. ''s' → logprob: -5.508285045623779
    5. ''ins' → logprob: -6.508285045623779
    6. ''im' → logprob: -7.133285045623779
    7. ''un' → logprob: -7.883285045623779
    8. ''ex' → logprob: -8.133285522460938
    9. ''inc' → logprob: -8.258285522460938
    10. ''y' → logprob: -8.383285522460938

Token 1283: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034410073421895504
    2. ')
' → logprob: -5.753440856933594
    3. '   ' → logprob: -9.128440856933594
    4. '')' → logprob: -9.628440856933594
    5. '       ' → logprob: -10.503440856933594
    6. ' )' → logprob: -10.878440856933594
    7. '<|end|>' → logprob: -11.628440856933594
    8. '):
' → logprob: -11.753440856933594
    9. '
' → logprob: -12.878440856933594
    10. ',' → logprob: -12.878440856933594

Token 1284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03776395693421364
    2. 'for' → logprob: -3.412764072418213
    3. ' for' → logprob: -5.537764072418213
    4. '   ' → logprob: -9.162763595581055
    5. '        
' → logprob: -10.412763595581055
    6. '```' → logprob: -10.662763595581055
    7. '<|end|>' → logprob: -11.787763595581055
    8. '
' → logprob: -12.412763595581055
    9. ',' → logprob: -13.787763595581055
    10. '	for' → logprob: -14.287763595581055

Token 1285: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0087516784551553e-05
    2. ' for' → logprob: -12.00001049041748
    3. '       ' → logprob: -12.50001049041748
    4. '```' → logprob: -16.500009536743164
    5. '   ' → logprob: -17.625009536743164
    6. '
' → logprob: -18.125009536743164
    7. 'per' → logprob: -18.500009536743164
    8. '        
' → logprob: -20.125009536743164
    9. 'perm' → logprob: -20.375009536743164
    10. '	for' → logprob: -20.875009536743164

Token 1286: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08188800513744354
    2. ' for' → logprob: -2.58188796043396
    3. '       ' → logprob: -5.831888198852539
    4. '   ' → logprob: -9.706888198852539
    5. '           ' → logprob: -15.831888198852539
    6. '	for' → logprob: -16.83188819885254
    7. '```' → logprob: -16.95688819885254
    8. ' ' → logprob: -17.20688819885254
    9. '
' → logprob: -17.45688819885254
    10. ' ' → logprob: -17.58188819885254

Token 1287: ' stability' (ID: 27827)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11883857846260071
    2. ' for' → logprob: -2.3688385486602783
    3. '       ' → logprob: -4.368838787078857
    4. '```' → logprob: -5.743838787078857
    5. '   ' → logprob: -7.493838787078857
    6. ' permutations' → logprob: -7.743838787078857
    7. 'foods' → logprob: -7.868838787078857
    8. 'per' → logprob: -7.993838787078857
    9. ' foods' → logprob: -8.7438383102417
    10. ' all' → logprob: -9.1188383102417

Token 1288: ' function' (ID: 1114)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09976625442504883
    2. 'for' → logprob: -2.974766254425049
    3. ' for' → logprob: -3.224766254425049
    4. '        
' → logprob: -5.974766254425049
    5. '
' → logprob: -6.974766254425049
    6. ':' → logprob: -8.84976577758789
    7. '```' → logprob: -8.97476577758789
    8. '   ' → logprob: -9.22476577758789
    9. '<|end|>' → logprob: -10.47476577758789
    10. '           ' → logprob: -10.59976577758789

Token 1289: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.684931218624115
    2. '
' → logprob: -1.3099312782287598
    3. 'def' → logprob: -1.5599312782287598
    4. '        
' → logprob: -4.55993127822876
    5. '```' → logprob: -5.93493127822876
    6. '   ' → logprob: -6.55993127822876
    7. ' def' → logprob: -7.80993127822876
    8. '    
' → logprob: -8.559930801391602
    9. '``' → logprob: -9.059930801391602
    10. '\' → logprob: -9.434930801391602

Token 1290: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7787255644798279
    2. '
' → logprob: -1.2787256240844727
    3. '```' → logprob: -1.4037256240844727
    4. '       ' → logprob: -5.153725624084473
    5. '``' → logprob: -5.403725624084473
    6. '   ' → logprob: -6.153725624084473
    7. '        
' → logprob: -6.528725624084473
    8. ' 
' → logprob: -7.153725624084473
    9. ' def' → logprob: -7.403725624084473
    10. '    
' → logprob: -7.653725624084473

Token 1291: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25981199741363525
    2. '       ' → logprob: -1.6348119974136353
    3. '
' → logprob: -3.5098118782043457
    4. '   ' → logprob: -6.509811878204346
    5. ' def' → logprob: -6.634811878204346
    6. '        
' → logprob: -7.634811878204346
    7. '```' → logprob: -7.884811878204346
    8. '    
' → logprob: -9.634812355041504
    9. ' 
' → logprob: -9.884812355041504
    10. '           ' → logprob: -10.509812355041504

Token 1292: ' is' (ID: 382)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.4940915107727051
    2. 'is' → logprob: -0.9940915107727051
    3. ' check' → logprob: -4.619091510772705
    4. ' is' → logprob: -4.869091510772705
    5. 'stable' → logprob: -6.494091510772705
    6. 'can' → logprob: -7.619091510772705
    7. 'st' → logprob: -8.869091033935547
    8. ' stable' → logprob: -9.244091033935547
    9. ' stability' → logprob: -11.369091033935547
    10. ' can' → logprob: -11.619091033935547

Token 1293: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.00030161935137584805
    2. 'stable' → logprob: -8.750301361083984
    3. '_stack' → logprob: -8.875301361083984
    4. '_valid' → logprob: -13.750301361083984
    5. '_safe' → logprob: -14.000301361083984
    6. ' stable' → logprob: -15.125301361083984
    7. 'st' → logprob: -15.125301361083984
    8. '_' → logprob: -15.375301361083984
    9. '_food' → logprob: -16.125301361083984
    10. '_possible' → logprob: -16.250301361083984

Token 1294: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -2.696889623621246e-06
    2. 'a' → logprob: -13.12500286102295
    3. '_' → logprob: -15.37500286102295
    4. 'ab' → logprob: -16.250001907348633
    5. 'abl' → logprob: -16.625001907348633
    6. '```' → logprob: -16.750001907348633
    7. '_a' → logprob: -16.875001907348633
    8. 'abile' → logprob: -17.250001907348633
    9. 'ability' → logprob: -17.625001907348633
    10. '(' → logprob: -17.875001907348633

Token 1295: '(order' (ID: 33050)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006971932947635651
    2. '(tokens' → logprob: -5.756971836090088
    3. '(mask' → logprob: -7.256971836090088
    4. '(stack' → logprob: -7.381971836090088
    5. '(food' → logprob: -7.506971836090088
    6. '(f' → logprob: -7.881971836090088
    7. '(token' → logprob: -8.131972312927246
    8. '((' → logprob: -8.381972312927246
    9. '_' → logprob: -9.256972312927246
    10. ' (' → logprob: -9.381972312927246

Token 1296: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.728855311870575
    2. '):' → logprob: -0.728855311870575
    3. '(order' → logprob: -4.603855133056641
    4. '[' → logprob: -4.728855133056641
    5. '   ' → logprob: -5.853855133056641
    6. ')' → logprob: -5.978855133056641
    7. ',' → logprob: -6.228855133056641
    8. '(' → logprob: -6.228855133056641
    9. '(tokens' → logprob: -6.228855133056641
    10. '(token' → logprob: -7.103855133056641

Token 1297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6215419769287109
    2. '       ' → logprob: -1.371541976928711
    3. '(' → logprob: -1.746541976928711
    4. '        
' → logprob: -4.496541976928711
    5. '        ' → logprob: -5.121541976928711
    6. '   ' → logprob: -5.996541976928711
    7. '(
' → logprob: -6.246541976928711
    8. '               ' → logprob: -6.371541976928711
    9. '    
' → logprob: -6.371541976928711
    10. '	       ' → logprob: -6.496541976928711

Token 1298: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6934666037559509
    2. '           ' → logprob: -1.5684666633605957
    3. ' total' → logprob: -2.4434666633605957
    4. '               ' → logprob: -2.5684666633605957
    5. 'sum' → logprob: -3.0684666633605957
    6. 'weights' → logprob: -3.3184666633605957
    7. 'weight' → logprob: -4.318466663360596
    8. '   ' → logprob: -4.443466663360596
    9. ' sum' → logprob: -5.193466663360596
    10. ' weights' → logprob: -5.193466663360596

Token 1299: ' order' (ID: 2569)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.1100847721099854
    2. '           ' → logprob: -1.3600847721099854
    3. 'total' → logprob: -1.3600847721099854
    4. 'weight' → logprob: -3.4850847721099854
    5. 'sum' → logprob: -3.6100847721099854
    6. ' sum' → logprob: -3.8600847721099854
    7. 'weights' → logprob: -3.9850847721099854
    8. ' w' → logprob: -4.110084533691406
    9. ' weight' → logprob: -4.485084533691406
    10. ' weights' → logprob: -4.610084533691406

Token 1300: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.439412385225296
    2. ' =' → logprob: -2.0644123554229736
    3. '):
' → logprob: -2.3144123554229736
    4. ')' → logprob: -3.5644123554229736
    5. '           ' → logprob: -3.9394123554229736
    6. '=' → logprob: -4.064412593841553
    7. ':' → logprob: -4.439412593841553
    8. '_tokens' → logprob: -4.564412593841553
    9. '_weights' → logprob: -4.689412593841553
    10. 'def' → logprob: -4.814412593841553

Token 1301: ' list' (ID: 1562)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.8240628242492676
    2. ')' → logprob: -2.0740628242492676
    3. '[' → logprob: -2.3240628242492676
    4. ' order' → logprob: -2.4490628242492676
    5. '[(' → logprob: -3.3240628242492676
    6. ' [
' → logprob: -3.4490628242492676
    7. ' [' → logprob: -3.5740628242492676
    8. ' [(' → logprob: -3.8240628242492676
    9. '           ' → logprob: -4.074062824249268
    10. ' foods' → logprob: -4.199062824249268

Token 1302: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7903109192848206
    2. '):
' → logprob: -1.2903108596801758
    3. ',' → logprob: -3.165310859680176
    4. ' of' → logprob: -3.540310859680176
    5. '[
' → logprob: -3.540310859680176
    6. '<|end|>' → logprob: -3.540310859680176
    7. '           ' → logprob: -4.040310859680176
    8. '```' → logprob: -4.290310859680176
    9. 'of' → logprob: -4.540310859680176
    10. '[::-' → logprob: -4.540310859680176

Token 1303: ' (' (ID: 350)
  Prédit: 'foods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foods' → logprob: -0.34449684619903564
    2. 'range' → logprob: -1.7194968461990356
    3. 'int' → logprob: -3.969496726989746
    4. 'food' → logprob: -4.219496726989746
    5. '(range' → logprob: -4.469496726989746
    6. 'indices' → logprob: -4.594496726989746
    7. 'tuple' → logprob: -4.844496726989746
    8. '(int' → logprob: -4.969496726989746
    9. '
' → logprob: -5.344496726989746
    10. 'tokens' → logprob: -5.469496726989746

Token 1304: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6480355858802795
    2. 'w' → logprob: -0.8980355858802795
    3. '0' → logprob: -3.3980355262756348
    4. 'food' → logprob: -4.148035526275635
    5. 'name' → logprob: -5.398035526275635
    6. '_,' → logprob: -5.648035526275635
    7. 'str' → logprob: -6.273035526275635
    8. ')' → logprob: -6.398035526275635
    9. '   ' → logprob: -6.398035526275635
    10. '
' → logprob: -6.898035526275635

Token 1305: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2515837848186493
    2. '[' → logprob: -2.1265838146209717
    3. '_name' → logprob: -2.7515838146209717
    4. '_,' → logprob: -4.126583576202393
    5. '_w' → logprob: -5.001583576202393
    6. ')' → logprob: -5.376583576202393
    7. 'name' → logprob: -5.626583576202393
    8. 'w' → logprob: -6.876583576202393
    9. ',_' → logprob: -6.876583576202393
    10. '_' → logprob: -7.126583576202393

Token 1306: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006662319879978895
    2. ',i' → logprob: -6.256662368774414
    3. ',s' → logprob: -6.256662368774414
    4. ')' → logprob: -7.506662368774414
    5. ',f' → logprob: -7.756662368774414
    6. ',
' → logprob: -8.381662368774414
    7. ',t' → logprob: -8.506662368774414
    8. ',w' → logprob: -8.506662368774414
    9. ',_' → logprob: -8.631662368774414
    10. ',name' → logprob: -9.256662368774414

Token 1307: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026587532833218575
    2. ')
' → logprob: -4.40158748626709
    3. ',' → logprob: -4.77658748626709
    4. '):
' → logprob: -5.52658748626709
    5. '           ' → logprob: -6.77658748626709
    6. '   ' → logprob: -9.40158748626709
    7. '               ' → logprob: -9.65158748626709
    8. '),' → logprob: -9.65158748626709
    9. '       ' → logprob: -10.15158748626709
    10. '):' → logprob: -10.40158748626709

Token 1308: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2398109436035156
    2. '           ' → logprob: -1.6148109436035156
    3. '):
' → logprob: -2.2398109436035156
    4. ':' → logprob: -2.6148109436035156
    5. ':
' → logprob: -2.6148109436035156
    6. '       ' → logprob: -2.6148109436035156
    7. '```' → logprob: -3.6148109436035156
    8. '):' → logprob: -3.8648109436035156
    9. '        
' → logprob: -3.9898109436035156
    10. '            
' → logprob: -4.114810943603516

Token 1309: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.03867315500974655
    2. '0' → logprob: -3.538673162460327
    3. ' bottom' → logprob: -4.788672924041748
    4. 'top' → logprob: -8.288673400878906
    5. ' ' → logprob: -8.913673400878906
    6. 'down' → logprob: -9.663673400878906
    7. '```' → logprob: -10.538673400878906
    8. ')' → logprob: -10.663673400878906
    9. 'lowest' → logprob: -11.038673400878906
    10. '_bottom' → logprob: -11.913673400878906

Token 1310: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42792895436286926
    2. ')' → logprob: -2.427928924560547
    3. ':' → logprob: -3.302928924560547
    4. '):
' → logprob: -3.302928924560547
    5. '       ' → logprob: -3.427928924560547
    6. ',' → logprob: -3.552928924560547
    7. '):' → logprob: -3.552928924560547
    8. '           ' → logprob: -3.677928924560547
    9. '```' → logprob: -3.927928924560547
    10. '_' → logprob: -5.052928924560547

Token 1311: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0015029559144750237
    2. ' top' → logprob: -6.501502990722656
    3. '_top' → logprob: -14.626502990722656
    4. '	top' → logprob: -16.626502990722656
    5. '[top' → logprob: -17.001502990722656
    6. '1' → logprob: -18.001502990722656
    7. '-top' → logprob: -18.251502990722656
    8. ')' → logprob: -19.126502990722656
    9. 'Top' → logprob: -19.251502990722656
    10. 't' → logprob: -19.501502990722656

Token 1312: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06126727536320686
    2. '
' → logprob: -3.311267375946045
    3. '       ' → logprob: -5.186267375946045
    4. '            
' → logprob: -5.311267375946045
    5. '```' → logprob: -6.061267375946045
    6. '    
' → logprob: -6.061267375946045
    7. '        
' → logprob: -6.936267375946045
    8. ',' → logprob: -7.061267375946045
    9. '\n' → logprob: -7.186267375946045
    10. '<|end|>' → logprob: -7.186267375946045

Token 1313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03116781637072563
    2. '```' → logprob: -3.78116774559021
    3. ':' → logprob: -6.406167984008789
    4. '):
' → logprob: -6.781167984008789
    5. ':
' → logprob: -6.906167984008789
    6. '   ' → logprob: -7.406167984008789
    7. '               ' → logprob: -7.656167984008789
    8. '       ' → logprob: -7.781167984008789
    9. '            
' → logprob: -7.781167984008789
    10. '
' → logprob: -7.906167984008789

Token 1314: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09073986113071442
    2. 'total' (adapté à ' total') → logprob: -3.4657399654388428
    3. ' total' → logprob: -3.7157399654388428
    4. '   ' → logprob: -4.465739727020264
    5. '       ' → logprob: -4.590739727020264
    6. 'sum' → logprob: -5.965739727020264
    7. ' sum' → logprob: -6.090739727020264
    8. '
' → logprob: -6.090739727020264
    9. 'pos' → logprob: -6.840739727020264
    10. 'weight' → logprob: -8.215740203857422

Token 1315: '_w' (ID: 3567)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.02443406917154789
    2. '_w' → logprob: -3.7744340896606445
    3. '=' → logprob: -7.6494340896606445
    4. '_ab' → logprob: -8.274434089660645
    5. '_weights' → logprob: -8.399434089660645
    6. ' =' → logprob: -8.899434089660645
    7. 'weight' → logprob: -10.524434089660645
    8. '_we' → logprob: -11.024434089660645
    9. '_' → logprob: -11.149434089660645
    10. 'w' → logprob: -11.399434089660645

Token 1316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29751741886138916
    2. '=' → logprob: -1.4225174188613892
    3. '           ' → logprob: -4.9225172996521
    4. '   ' → logprob: -6.0475172996521
    5. ')' → logprob: -6.4225172996521
    6. '_sum' → logprob: -6.6725172996521
    7. '_' → logprob: -7.0475172996521
    8. ',' → logprob: -7.9225172996521
    9. '          ' → logprob: -8.047517776489258
    10. '       ' → logprob: -8.047517776489258

Token 1317: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038562860572710633
    2. ' ' → logprob: -7.875385761260986
    3. '   ' → logprob: -13.000385284423828
    4. 'order' → logprob: -13.625385284423828
    5. '           ' → logprob: -14.125385284423828
    6. 'sum' → logprob: -15.125385284423828
    7. ' ' → logprob: -15.625385284423828
    8. '[' → logprob: -16.250385284423828
    9. '  ' → logprob: -16.250385284423828
    10. '
' → logprob: -16.375385284423828

Token 1318: 'fw' (ID: 36972)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001777960715116933
    2. 'order' → logprob: -8.750177383422852
    3. ' ' → logprob: -11.750177383422852
    4. '   ' → logprob: -12.125177383422852
    5. ']' → logprob: -13.750177383422852
    6. 'w' → logprob: -14.125177383422852
    7. ' order' → logprob: -14.375177383422852
    8. '
' → logprob: -14.500177383422852
    9. 'sum' → logprob: -14.625177383422852
    10. '(' → logprob: -14.875177383422852

Token 1319: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10886040329933167
    2. '][' → logprob: -3.233860492706299
    3. ']' → logprob: -4.108860492706299
    4. 'for' → logprob: -4.358860492706299
    5. '-' → logprob: -4.608860492706299
    6. ' for' → logprob: -4.858860492706299
    7. '   ' → logprob: -4.983860492706299
    8. '0' → logprob: -5.858860492706299
    9. '=' → logprob: -6.233860492706299
    10. ',' → logprob: -6.483860492706299

Token 1320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02426234632730484
    2. '0' → logprob: -4.649262428283691
    3. '2' → logprob: -5.149262428283691
    4. '][' → logprob: -5.399262428283691
    5. '[' → logprob: -5.774262428283691
    6. '   ' → logprob: -8.399262428283691
    7. '3' → logprob: -8.524262428283691
    8. '-' → logprob: -8.899262428283691
    9. ' ' → logprob: -10.024262428283691
    10. ':' → logprob: -10.024262428283691

Token 1321: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5365973711013794
    2. ']' → logprob: -1.6615973711013794
    3. 'for' → logprob: -1.7865973711013794
    4. ']
' → logprob: -2.91159725189209
    5. '           ' → logprob: -6.78659725189209
    6. '+' → logprob: -7.53659725189209
    7. ']+' → logprob: -8.16159725189209
    8. '
' → logprob: -8.41159725189209
    9. ' +' → logprob: -8.41159725189209
    10. ',' → logprob: -9.03659725189209

Token 1322: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6401903629302979
    2. 'for' → logprob: -0.7651903629302979
    3. ']' → logprob: -5.640190124511719
    4. '
' → logprob: -6.890190124511719
    5. ']
' → logprob: -7.015190124511719
    6. '-' → logprob: -7.640190124511719
    7. '           ' → logprob: -7.890190124511719
    8. '+' → logprob: -8.515190124511719
    9. '[' → logprob: -8.515190124511719
    10. ' -' → logprob: -8.640190124511719

Token 1323: ' fw' (ID: 60172)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.00011117222311440855
    2. ' fw' → logprob: -9.87511157989502
    3. '_fw' → logprob: -9.87511157989502
    4. 'f' → logprob: -12.25011157989502
    5. '_' → logprob: -13.25011157989502
    6. 'food' → logprob: -14.87511157989502
    7. '/fw' → logprob: -15.37511157989502
    8. '-fw' → logprob: -15.75011157989502
    9. '_f' → logprob: -16.000110626220703
    10. '   ' → logprob: -16.000110626220703

Token 1324: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5234122276306152
    2. ' in' → logprob: -0.8984122276306152
    3. ']' → logprob: -9.023412704467773
    4. 'order' → logprob: -10.273412704467773
    5. ' ' → logprob: -10.523412704467773
    6. 'fw' → logprob: -10.648412704467773
    7. ' order' → logprob: -11.648412704467773
    8. 'w' → logprob: -11.898412704467773
    9. 'f' → logprob: -12.148412704467773
    10. '_in' → logprob: -12.273412704467773

Token 1325: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -3.054500666621607e-06
    2. ' order' → logprob: -12.87500286102295
    3. 'range' → logprob: -15.12500286102295
    4. ']' → logprob: -16.500003814697266
    5. '(order' → logprob: -17.375003814697266
    6. '[' → logprob: -18.500003814697266
    7. '	order' → logprob: -19.000003814697266
    8. '
' → logprob: -19.750003814697266
    9. '```' → logprob: -20.000003814697266
    10. '$order' → logprob: -20.250003814697266

Token 1326: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8068644404411316
    2. '
' → logprob: -1.4318645000457764
    3. ']
' → logprob: -1.6818645000457764
    4. '           ' → logprob: -2.9318645000457764
    5. '[' → logprob: -3.4318645000457764
    6. ')' → logprob: -4.056864261627197
    7. ')
' → logprob: -4.556864261627197
    8. '       ' → logprob: -5.806864261627197
    9. ',' → logprob: -6.181864261627197
    10. ',
' → logprob: -6.306864261627197

Token 1327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06810932606458664
    2. '[' → logprob: -2.8181092739105225
    3. '
' → logprob: -6.068109512329102
    4. ',' → logprob: -7.193109512329102
    5. '       ' → logprob: -7.568109512329102
    6. ' =' → logprob: -7.818109512329102
    7. '            
' → logprob: -7.943109512329102
    8. ')' → logprob: -8.068109512329102
    9. '[
' → logprob: -8.443109512329102
    10. '=' → logprob: -8.818109512329102

Token 1328: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23932650685310364
    2. 'acc' → logprob: -2.4893264770507812
    3. 'prefix' → logprob: -3.1143264770507812
    4. 'for' (adapté à ' for') → logprob: -3.8643264770507812
    5. ' for' → logprob: -4.114326477050781
    6. 'sum' → logprob: -4.364326477050781
    7. '[' → logprob: -4.364326477050781
    8. 'total' → logprob: -5.864326477050781
    9. '       ' → logprob: -5.989326477050781
    10. ' prefix' → logprob: -6.114326477050781

Token 1329: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.48171356320381165
    2. 'i' → logprob: -0.9817135334014893
    3. ' j' → logprob: -5.606713771820068
    4. ' i' → logprob: -5.606713771820068
    5. 'pos' → logprob: -8.48171329498291
    6. '   ' → logprob: -11.10671329498291
    7. 'idx' → logprob: -11.23171329498291
    8. '```' → logprob: -11.35671329498291
    9. ' pos' → logprob: -11.85671329498291
    10. ' ' → logprob: -12.73171329498291

Token 1330: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5232496857643127
    2. 'in' → logprob: -0.8982496857643127
    3. ',' → logprob: -9.398249626159668
    4. '   ' → logprob: -11.773249626159668
    5. '```' → logprob: -11.773249626159668
    6. ')' → logprob: -12.023249626159668
    7. '	in' → logprob: -12.273249626159668
    8. ' ' → logprob: -13.273249626159668
    9. '<|end|>' → logprob: -13.523249626159668
    10. '_in' → logprob: -13.523249626159668

Token 1331: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006716317031532526
    2. ' range' → logprob: -5.006716251373291
    3. ' ' → logprob: -15.00671672821045
    4. '   ' → logprob: -15.13171672821045
    5. '  ' → logprob: -15.88171672821045
    6. '	range' → logprob: -16.881715774536133
    7. 're' → logprob: -17.131715774536133
    8. '
' → logprob: -17.256715774536133
    9. 'reverse' → logprob: -17.381715774536133
    10. 'len' → logprob: -17.756715774536133

Token 1332: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.21094177663326263
    2. '(len' → logprob: -1.7109417915344238
    3. 'range' → logprob: -4.960941791534424
    4. 'n' → logprob: -6.210941791534424
    5. ' len' → logprob: -8.585941314697266
    6. '(n' → logprob: -8.585941314697266
    7. '(' → logprob: -10.585941314697266
    8. ' range' → logprob: -10.835941314697266
    9. '(range' → logprob: -11.585941314697266
    10. 'i' → logprob: -11.710941314697266

Token 1333: '(order' (ID: 33050)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.2067982703447342
    2. '(order' → logprob: -1.7067983150482178
    3. 'total' → logprob: -5.831798076629639
    4. 'order' → logprob: -6.456798076629639
    5. '(' → logprob: -7.331798076629639
    6. '(best' → logprob: -8.831798553466797
    7. '_order' → logprob: -10.206798553466797
    8. '-' → logprob: -11.831798553466797
    9. ')' → logprob: -12.081798553466797
    10. ' order' → logprob: -12.831798553466797

Token 1334: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2914455235004425
    2. '):' → logprob: -1.5414454936981201
    3. '-' → logprob: -3.66644549369812
    4. '           ' → logprob: -5.416445732116699
    5. ' -' → logprob: -5.666445732116699
    6. ')' → logprob: -6.166445732116699
    7. '+' → logprob: -6.541445732116699
    8. '       ' → logprob: -7.666445732116699
    9. '[' → logprob: -8.2914457321167
    10. '               ' → logprob: -8.7914457321167

Token 1335: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03371370583772659
    2. '           ' → logprob: -3.6587138175964355
    3. ',' → logprob: -6.2837138175964355
    4. '```' → logprob: -6.2837138175964355
    5. '<|end|>' → logprob: -7.0337138175964355
    6. ':' → logprob: -7.5337138175964355
    7. '):
' → logprob: -8.033713340759277
    8. '	           ' → logprob: -8.283713340759277
    9. '[' → logprob: -8.533713340759277
    10. ':
' → logprob: -8.658713340759277

Token 1336: ' upper' (ID: 13057)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23144160211086273
    2. ' sum' → logprob: -2.9814414978027344
    3. ' total' → logprob: -3.4814414978027344
    4. ' if' → logprob: -3.6064414978027344
    5. 'sum' → logprob: -3.6064414978027344
    6. ' for' → logprob: -4.106441497802734
    7. 'total' → logprob: -4.481441497802734
    8. '           ' → logprob: -4.731441497802734
    9. 'if' → logprob: -5.606441497802734
    10. ' above' → logprob: -5.606441497802734

Token 1337: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.5030083060264587
    2. '_w' → logprob: -1.0030083656311035
    3. '_sum' → logprob: -4.6280083656311035
    4. '_weight' → logprob: -5.5030083656311035
    5. 'weights' → logprob: -5.7530083656311035
    6. '_' → logprob: -6.3780083656311035
    7. 'sum' → logprob: -6.6280083656311035
    8. ' =' → logprob: -6.6280083656311035
    9. 's' → logprob: -6.7530083656311035
    10. '```' → logprob: -6.8780083656311035

Token 1338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35277560353279114
    2. ' =' → logprob: -1.2277755737304688
    3. '=sum' → logprob: -5.477775573730469
    4. 'sum' → logprob: -9.477775573730469
    5. '_sum' → logprob: -10.852775573730469
    6. '               ' → logprob: -11.227775573730469
    7. ')' → logprob: -11.852775573730469
    8. '           ' → logprob: -12.227775573730469
    9. '                   ' → logprob: -12.602775573730469
    10. '=
' → logprob: -12.727775573730469

Token 1339: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0011729635298252106
    2. ' sum' → logprob: -6.75117301940918
    3. '(sum' → logprob: -13.75117301940918
    4. '0' → logprob: -14.62617301940918
    5. '   ' → logprob: -14.75117301940918
    6. '           ' → logprob: -15.87617301940918
    7. '
' → logprob: -15.87617301940918
    8. 'total' → logprob: -15.87617301940918
    9. '	sum' → logprob: -15.87617301940918
    10. '=sum' → logprob: -16.12617301940918

Token 1340: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.10201632231473923
    2. 'total' → logprob: -2.3520162105560303
    3. '(order' → logprob: -7.227016448974609
    4. ' total' → logprob: -7.352016448974609
    5. '(' → logprob: -8.10201644897461
    6. '(f' → logprob: -10.10201644897461
    7. '([' → logprob: -10.35201644897461
    8. '(food' → logprob: -11.10201644897461
    9. '           ' → logprob: -11.60201644897461
    10. 'order' → logprob: -11.85201644897461

Token 1341: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.00014585316239390522
    2. '_weights' → logprob: -9.62514591217041
    3. '[' → logprob: -9.87514591217041
    4. 'w' → logprob: -11.87514591217041
    5. 'weights' → logprob: -12.50014591217041
    6. ')' → logprob: -13.00014591217041
    7. '[i' → logprob: -13.12514591217041
    8. '[_' → logprob: -13.12514591217041
    9. 'total' → logprob: -13.37514591217041
    10. '_' → logprob: -13.75014591217041

Token 1342: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004169575870037079
    2. '[j' → logprob: -5.504169464111328
    3. '[' → logprob: -10.129169464111328
    4. '[:' → logprob: -10.504169464111328
    5. '[(' → logprob: -11.879169464111328
    6. ')' → logprob: -12.004169464111328
    7. '           ' → logprob: -12.754169464111328
    8. '                   ' → logprob: -13.254169464111328
    9. '               ' → logprob: -13.504169464111328
    10. 'from' → logprob: -14.129169464111328

Token 1343: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015046248445287347
    2. ' +' → logprob: -6.501504421234131
    3. '+i' → logprob: -13.376504898071289
    4. '[' → logprob: -14.501504898071289
    5. '[i' → logprob: -16.12650489807129
    6. '1' → logprob: -17.00150489807129
    7. '＋' → logprob: -17.62650489807129
    8. ']' → logprob: -18.00150489807129
    9. '+j' → logprob: -18.12650489807129
    10. 'i' → logprob: -18.12650489807129

Token 1344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.480199954239652e-05
    2. '+' → logprob: -9.875064849853516
    3. '```' → logprob: -11.250064849853516
    4. ')' → logprob: -16.875064849853516
    5. ' +' → logprob: -16.875064849853516
    6. '...' → logprob: -17.125064849853516
    7. '``' → logprob: -17.500064849853516
    8. ' ' → logprob: -17.625064849853516
    9. '   ' → logprob: -17.875064849853516
    10. '`' → logprob: -18.375064849853516

Token 1345: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019581327214837074
    2. ':])
' → logprob: -6.25195837020874
    3. '])' → logprob: -10.751957893371582
    4. '+' → logprob: -12.876957893371582
    5. ':],' → logprob: -13.251957893371582
    6. ':]' → logprob: -13.501957893371582
    7. ':)' → logprob: -14.376957893371582
    8. ':].' → logprob: -14.501957893371582
    9. ' :' → logprob: -15.251957893371582
    10. ':i' → logprob: -15.876957893371582

Token 1346: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26330891251564026
    2. ')' → logprob: -1.7633088827133179
    3. '<|end|>' → logprob: -3.6383090019226074
    4. '           ' → logprob: -4.638309001922607
    5. '                   ' → logprob: -5.013309001922607
    6. '<|end|>' → logprob: -5.388309001922607
    7. '):
' → logprob: -5.763309001922607
    8. '```' → logprob: -5.763309001922607
    9. ':' → logprob: -6.263309001922607
    10. '):' → logprob: -7.513309001922607

Token 1347: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5815916061401367
    2. ' if' → logprob: -0.9565916061401367
    3. 'if' (adapté à ' if') → logprob: -2.9565916061401367
    4. '                   ' → logprob: -5.956591606140137
    5. ')' → logprob: -6.956591606140137
    6. ':
' → logprob: -8.706591606140137
    7. ' for' → logprob: -8.706591606140137
    8. '                ' → logprob: -9.081591606140137
    9. '):
' → logprob: -9.081591606140137
    10. '```' → logprob: -9.456591606140137

Token 1348: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.024212434887886047
    2. ' order' → logprob: -3.77421236038208
    3. 'total' → logprob: -7.89921236038208
    4. '           ' → logprob: -8.524212837219238
    5. '               ' → logprob: -9.149212837219238
    6. ' total' → logprob: -9.399212837219238
    7. '   ' → logprob: -9.899212837219238
    8. '	order' → logprob: -10.149212837219238
    9. '(order' → logprob: -10.399212837219238
    10. '                   ' → logprob: -11.274212837219238

Token 1349: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017342021455988288
    2. '```' → logprob: -7.001734256744385
    3. '[' → logprob: -7.251734256744385
    4. '][' → logprob: -10.251733779907227
    5. ' [' → logprob: -10.501733779907227
    6. '``' → logprob: -11.751733779907227
    7. '\[' → logprob: -12.251733779907227
    8. ')[' → logprob: -12.251733779907227
    9. '`' → logprob: -12.501733779907227
    10. '               ' → logprob: -12.626733779907227

Token 1350: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03457176685333252
    2. '[' → logprob: -3.409571647644043
    3. ')[' → logprob: -7.659571647644043
    4. '```' → logprob: -8.784571647644043
    5. ']' → logprob: -9.784571647644043
    6. ')][' → logprob: -10.284571647644043
    7. ''[' → logprob: -10.534571647644043
    8. '   ' → logprob: -10.659571647644043
    9. '[i' → logprob: -10.909571647644043
    10. ' ][' → logprob: -11.034571647644043

Token 1351: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010407903464511037
    2. '1' → logprob: -7.751040935516357
    3. '][' → logprob: -8.6260404586792
    4. '-' → logprob: -9.0010404586792
    5. '```' → logprob: -9.0010404586792
    6. '
' → logprob: -9.5010404586792
    7. '[' → logprob: -9.7510404586792
    8. ']' → logprob: -11.2510404586792
    9. ' ' → logprob: -12.3135404586792
    10. '``' → logprob: -12.6260404586792

Token 1352: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12189479917287827
    2. '<' → logprob: -2.7468948364257812
    3. ' >=' → logprob: -3.7468948364257812
    4. ']' → logprob: -5.121894836425781
    5. '>=' → logprob: -5.246894836425781
    6. ')' → logprob: -5.371894836425781
    7. ']>=' → logprob: -5.746894836425781
    8. '<|end|>' → logprob: -5.996894836425781
    9. '[' → logprob: -6.871894836425781
    10. ' <=' → logprob: -7.246894836425781

Token 1353: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5854278206825256
    2. ' <' → logprob: -0.8354278206825256
    3. '>=' → logprob: -5.335427761077881
    4. ' >=' → logprob: -5.460427761077881
    5. '[' → logprob: -9.085428237915039
    6. '<int' → logprob: -10.085428237915039
    7. '```' → logprob: -10.960428237915039
    8. '                   ' → logprob: -11.210428237915039
    9. ' ' → logprob: -11.210428237915039
    10. '           ' → logprob: -11.335428237915039

Token 1354: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.04867514222860336
    2. ' upper' → logprob: -3.048675060272217
    3. '           ' → logprob: -9.548675537109375
    4. '               ' → logprob: -11.673675537109375
    5. '   ' → logprob: -13.173675537109375
    6. '       ' → logprob: -13.423675537109375
    7. '            ' → logprob: -14.173675537109375
    8. '             ' → logprob: -14.548675537109375
    9. '          ' → logprob: -14.548675537109375
    10. '         ' → logprob: -14.548675537109375

Token 1355: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.0015384310390800238
    2. '_w' → logprob: -6.626538276672363
    3. 'weights' → logprob: -9.626538276672363
    4. '_weight' → logprob: -9.751538276672363
    5. '_we' → logprob: -11.126538276672363
    6. 'Weights' → logprob: -11.501538276672363
    7. '```' → logprob: -11.501538276672363
    8. '_' → logprob: -11.626538276672363
    9. '[i' → logprob: -11.626538276672363
    10. 's' → logprob: -11.751538276672363

Token 1356: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9285019040107727
    2. ':
' → logprob: -1.553501844406128
    3. '                   ' → logprob: -1.553501844406128
    4. '               ' → logprob: -1.803501844406128
    5. '                       ' → logprob: -4.803502082824707
    6. '           ' → logprob: -6.178502082824707
    7. '):' → logprob: -6.428502082824707
    8. '):
' → logprob: -6.803502082824707
    9. '                           ' → logprob: -7.553502082824707
    10. ':return' → logprob: -7.678502082824707

Token 1357: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010264533571898937
    2. '               ' → logprob: -5.6352643966674805
    3. ':
' → logprob: -5.7602643966674805
    4. '                       ' → logprob: -6.2602643966674805
    5. ':' → logprob: -6.7602643966674805
    6. '                  ' → logprob: -9.76026439666748
    7. '                    ' → logprob: -10.13526439666748
    8. '):
' → logprob: -10.26026439666748
    9. '                           ' → logprob: -10.26026439666748
    10. '                 ' → logprob: -10.51026439666748

Token 1358: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7336894869804382
    2. '                       ' → logprob: -0.8586894869804382
    3. 'return' (adapté à ' return') → logprob: -2.858689546585083
    4. ' return' → logprob: -3.858689546585083
    5. 'continue' → logprob: -4.608689308166504
    6. ' continue' → logprob: -5.358689308166504
    7. '               ' → logprob: -6.608689308166504
    8. '       ' → logprob: -7.733689308166504
    9. '           ' → logprob: -7.858689308166504
    10. '                           ' → logprob: -8.608689308166504

Token 1359: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -8.2994620242971e-06
    2. ' False' → logprob: -11.750008583068848
    3. 'True' → logprob: -15.000008583068848
    4. '           ' → logprob: -18.75000762939453
    5. '               ' → logprob: -18.87500762939453
    6. '(False' → logprob: -19.50000762939453
    7. 'false' → logprob: -20.50000762939453
    8. '                   ' → logprob: -20.62500762939453
    9. '```' → logprob: -21.50000762939453
    10. '
' → logprob: -21.75000762939453

Token 1360: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8966584205627441
    2. ')' → logprob: -1.0216584205627441
    3. '<|end|>' → logprob: -2.396658420562744
    4. '       ' → logprob: -3.021658420562744
    5. '           ' → logprob: -3.021658420562744
    6. '\n' → logprob: -4.521658420562744
    7. '.' → logprob: -4.771658420562744
    8. '```' → logprob: -6.021658420562744
    9. '<|end|>' → logprob: -6.146658420562744
    10. '        
' → logprob: -6.271658420562744

Token 1361: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10194473713636398
    2. '           ' → logprob: -2.8519446849823
    3. ')' → logprob: -3.9769446849823
    4. '       ' → logprob: -4.476944923400879
    5. '                   ' → logprob: -5.726944923400879
    6. '<|end|>' → logprob: -6.226944923400879
    7. '```' → logprob: -7.226944923400879
    8. '\n' → logprob: -8.226944923400879
    9. ')
' → logprob: -8.226944923400879
    10. ',' → logprob: -8.226944923400879

Token 1362: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39160385727882385
    2. '           ' → logprob: -1.2666038274765015
    3. ')' → logprob: -3.266603946685791
    4. '   ' → logprob: -6.766603946685791
    5. '<|end|>' → logprob: -7.016603946685791
    6. '        
' → logprob: -7.641603946685791
    7. '               ' → logprob: -8.141603469848633
    8. '    
' → logprob: -9.016603469848633
    9. '            
' → logprob: -9.391603469848633
    10. '{' → logprob: -9.641603469848633

Token 1363: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10020710527896881
    2. ' True' → logprob: -2.3502070903778076
    3. 'False' → logprob: -14.975207328796387
    4. '(True' → logprob: -15.975207328796387
    5. '   ' → logprob: -17.72520637512207
    6. ' ' → logprob: -18.47520637512207
    7. '=True' → logprob: -18.72520637512207
    8. ' ' → logprob: -19.60020637512207
    9. ' False' → logprob: -19.72520637512207
    10. '```' → logprob: -21.85020637512207

Token 1364: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022495118901133537
    2. '```' → logprob: -4.397495269775391
    3. '        
' → logprob: -5.772495269775391
    4. '<|end|>' → logprob: -6.022495269775391
    5. ')' → logprob: -6.397495269775391
    6. ',' → logprob: -7.397495269775391
    7. '`' → logprob: -8.02249526977539
    8. '[' → logprob: -8.27249526977539
    9. '           ' → logprob: -8.52249526977539
    10. '<|end|>' → logprob: -8.52249526977539

Token 1365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006686006207019091
    2. 'for' → logprob: -6.006686210632324
    3. ' for' → logprob: -6.131686210632324
    4. '```' → logprob: -6.506686210632324
    5. '        
' → logprob: -8.756686210632324
    6. '
' → logprob: -9.256686210632324
    7. ',' → logprob: -9.381686210632324
    8. '<|end|>' → logprob: -9.881686210632324
    9. 'from' → logprob: -10.256686210632324
    10. '   ' → logprob: -10.756686210632324

Token 1366: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.576379656791687
    2. '       ' → logprob: -0.826379656791687
    3. ' for' → logprob: -7.826379776000977
    4. '
' → logprob: -10.951379776000977
    5. '   ' → logprob: -11.076379776000977
    6. '        
' → logprob: -12.576379776000977
    7. '```' → logprob: -13.701379776000977
    8. '	for' → logprob: -13.951379776000977
    9. 'def' → logprob: -14.076379776000977
    10. 'For' → logprob: -14.076379776000977

Token 1367: ' Calculate' (ID: 38942)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00156152353156358
    2. '       ' → logprob: -6.501561641693115
    3. ' for' → logprob: -9.751561164855957
    4. '   ' → logprob: -14.376561164855957
    5. '
' → logprob: -15.126561164855957
    6. '```' → logprob: -16.376562118530273
    7. '	for' → logprob: -16.876562118530273
    8. 'def' → logprob: -17.501562118530273
    9. '        
' → logprob: -17.876562118530273
    10. 'from' → logprob: -18.001562118530273

Token 1368: ' center' (ID: 6170)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.3970046639442444
    2. '_G' → logprob: -1.6470046043395996
    3. ' G' → logprob: -2.6470046043395996
    4. 'center' → logprob: -3.3970046043395996
    5. '_center' → logprob: -4.1470046043396
    6. ' center' → logprob: -4.5220046043396
    7. 'best' → logprob: -7.2720046043396
    8. ' best' → logprob: -7.7720046043396
    9. '       ' → logprob: -7.8970046043396
    10. '_g' → logprob: -8.022005081176758

Token 1369: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.1404595673084259
    2. 'of' → logprob: -2.2654595375061035
    3. ' of' → logprob: -3.7654595375061035
    4. '       ' → logprob: -6.0154595375061035
    5. '_' → logprob: -7.0154595375061035
    6. ')' → logprob: -9.015460014343262
    7. 'Of' → logprob: -9.390460014343262
    8. '        ' → logprob: -9.390460014343262
    9. '   ' → logprob: -9.765460014343262
    10. ' =' → logprob: -9.765460014343262

Token 1370: ' gravity' (ID: 44967)
  Prédit: 'gravity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gravity' → logprob: -0.0009132515988312662
    2. 'mass' → logprob: -7.000913143157959
    3. ' gravity' → logprob: -13.625913619995117
    4. 'Gravity' → logprob: -16.250913619995117
    5. 'grav' → logprob: -16.250913619995117
    6. 'gr' → logprob: -16.375913619995117
    7. '.gravity' → logprob: -16.375913619995117
    8. '-gr' → logprob: -17.125913619995117
    9. '_gr' → logprob: -17.750913619995117
    10. 'g' → logprob: -17.750913619995117

Token 1371: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09292148053646088
    2. '       ' → logprob: -2.592921495437622
    3. '
' → logprob: -4.342921257019043
    4. '```' → logprob: -7.717921257019043
    5. '        
' → logprob: -9.092921257019043
    6. '(' → logprob: -9.467921257019043
    7. '   ' → logprob: -9.592921257019043
    8. ' def' → logprob: -10.092921257019043
    9. ' =' → logprob: -10.217921257019043
    10. '=' → logprob: -10.342921257019043

Token 1372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09298405051231384
    2. 'def' → logprob: -3.0929839611053467
    3. '(' → logprob: -3.3429839611053467
    4. '```' → logprob: -5.967984199523926
    5. '=' → logprob: -6.842984199523926
    6. ' =' → logprob: -7.217984199523926
    7. '(n' → logprob: -7.217984199523926
    8. '(
' → logprob: -7.217984199523926
    9. ' (' → logprob: -7.467984199523926
    10. ')' → logprob: -8.342984199523926

Token 1373: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02559138834476471
    2. ' def' → logprob: -4.2755913734436035
    3. '       ' → logprob: -4.5255913734436035
    4. '```' → logprob: -8.275591850280762
    5. 'total' → logprob: -9.275591850280762
    6. '   ' → logprob: -10.400591850280762
    7. '
' → logprob: -10.525591850280762
    8. 'weight' → logprob: -10.525591850280762
    9. '           ' → logprob: -10.525591850280762
    10. 'pos' → logprob: -11.025591850280762

Token 1374: ' center' (ID: 6170)
  Prédit: ' center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' center' → logprob: -0.7159131169319153
    2. 'center' → logprob: -1.0909130573272705
    3. 'calculate' → logprob: -2.8409130573272705
    4. ' calculate' → logprob: -2.9659130573272705
    5. 'calc' → logprob: -3.5909130573272705
    6. ' calc' → logprob: -3.7159130573272705
    7. 'G' → logprob: -5.34091329574585
    8. ' G' → logprob: -5.71591329574585
    9. ' compute' → logprob: -6.96591329574585
    10. 'get' → logprob: -6.96591329574585

Token 1375: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0028148628771305084
    2. ' of' → logprob: -6.877814769744873
    3. 'of' → logprob: -6.877814769744873
    4. 'Of' → logprob: -9.002815246582031
    5. '_' → logprob: -9.127815246582031
    6. ' =' → logprob: -9.502815246582031
    7. '(' → logprob: -9.627815246582031
    8. '```' → logprob: -9.752815246582031
    9. '=' → logprob: -9.877815246582031
    10. '_gr' → logprob: -10.127815246582031

Token 1376: '_gr' (ID: 30286)
  Prédit: 'gravity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gravity' → logprob: -0.005244072061032057
    2. 'mass' → logprob: -5.255244255065918
    3. '_gr' → logprob: -12.255244255065918
    4. '_mass' → logprob: -13.505244255065918
    5. ' gravity' → logprob: -13.505244255065918
    6. 'gr' → logprob: -13.630244255065918
    7. 'grav' → logprob: -14.880244255065918
    8. '```' → logprob: -14.880244255065918
    9. '.gravity' → logprob: -15.380244255065918
    10. '
' → logprob: -15.380244255065918

Token 1377: 'avity' (ID: 25292)
  Prédit: 'avity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avity' → logprob: -1.6240566083070007e-06
    2. 'v' → logprob: -13.875001907348633
    3. 'av' → logprob: -14.875001907348633
    4. 'a' → logprob: -16.125001907348633
    5. 'avy' → logprob: -16.625001907348633
    6. 'avit' → logprob: -17.250001907348633
    7. 'gravity' → logprob: -17.500001907348633
    8. 'aviti' → logprob: -17.750001907348633
    9. 'avi' → logprob: -18.500001907348633
    10. 'avedad' → logprob: -18.625001907348633

Token 1378: '(order' (ID: 33050)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09351605176925659
    2. '(order' → logprob: -3.4685161113739014
    3. '(
' → logprob: -4.468515872955322
    4. '=' → logprob: -4.593515872955322
    5. '():' → logprob: -4.718515872955322
    6. '_' → logprob: -4.968515872955322
    7. ' =' → logprob: -4.968515872955322
    8. ':' → logprob: -6.093515872955322
    9. '):' → logprob: -6.343515872955322
    10. ' (' → logprob: -6.718515872955322

Token 1379: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.26924440264701843
    2. '):' → logprob: -1.6442444324493408
    3. '[' → logprob: -3.894244432449341
    4. ')' → logprob: -5.269244194030762
    5. '   ' → logprob: -5.394244194030762
    6. '```' → logprob: -6.269244194030762
    7. '(' → logprob: -6.769244194030762
    8. '(
' → logprob: -6.769244194030762
    9. '[
' → logprob: -7.019244194030762
    10. ':' → logprob: -7.144244194030762

Token 1380: '           ' (ID: 352)
  Prédit: '(order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -0.922307550907135
    2. '           ' → logprob: -1.2973074913024902
    3. '(' → logprob: -1.5473074913024902
    4. '       ' → logprob: -2.4223074913024902
    5. '```' → logprob: -5.17230749130249
    6. 'order' → logprob: -5.29730749130249
    7. '(
' → logprob: -5.92230749130249
    8. '[' → logprob: -6.17230749130249
    9. ' (' → logprob: -6.29730749130249
    10. 'return' → logprob: -6.67230749130249

Token 1381: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1482609510421753
    2. '   ' → logprob: -1.8982609510421753
    3. ' sum' → logprob: -2.023261070251465
    4. ' total' → logprob: -2.398261070251465
    5. ' return' → logprob: -2.398261070251465
    6. '           ' → logprob: -2.648261070251465
    7. 'sum' → logprob: -3.398261070251465
    8. 'return' → logprob: -3.523261070251465
    9. ' w' → logprob: -3.898261070251465
    10. '               ' → logprob: -4.023261070251465

Token 1382: '_weight' (ID: 34711)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1831740289926529
    2. '_weight' → logprob: -2.4331741333007812
    3. '_w' → logprob: -2.6831741333007812
    4. '_weights' → logprob: -5.433174133300781
    5. '```' → logprob: -6.433174133300781
    6. '`' → logprob: -6.683174133300781
    7. ' _' → logprob: -7.183174133300781
    8. 'weight' → logprob: -7.558174133300781
    9. '
' → logprob: -7.683174133300781
    10. ''_' → logprob: -7.683174133300781

Token 1383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2319447547197342
    2. '=' → logprob: -1.7319447994232178
    3. '   ' → logprob: -4.106944561004639
    4. ')' → logprob: -5.356944561004639
    5. '           ' → logprob: -6.356944561004639
    6. ' *' → logprob: -6.606944561004639
    7. '[' → logprob: -6.731944561004639
    8. 's' → logprob: -6.856944561004639
    9. '=sum' → logprob: -7.356944561004639
    10. '```' → logprob: -7.731944561004639

Token 1384: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5763400793075562
    2. ' sum' → logprob: -0.8263400793075562
    3. '0' → logprob: -8.076339721679688
    4. '   ' → logprob: -10.076339721679688
    5. '(sum' → logprob: -10.576339721679688
    6. '=sum' → logprob: -11.451339721679688
    7. '           ' → logprob: -12.076339721679688
    8. ' ' → logprob: -13.576339721679688
    9. '       ' → logprob: -13.951339721679688
    10. '1' → logprob: -14.576339721679688

Token 1385: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3531206548213959
    2. '(food' → logprob: -1.4781206846237183
    3. '([' → logprob: -3.1031205654144287
    4. '(' → logprob: -4.603120803833008
    5. '(w' → logprob: -5.228120803833008
    6. '(order' → logprob: -5.353120803833008
    7. '(item' → logprob: -6.228120803833008
    8. '(o' → logprob: -6.978120803833008
    9. '((' → logprob: -8.103120803833008
    10. '(x' → logprob: -8.478120803833008

Token 1386: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.18844209611415863
    2. '[' → logprob: -1.8134421110153198
    3. '_w' → logprob: -4.938442230224609
    4. '_[' → logprob: -7.938442230224609
    5. '_' → logprob: -8.06344223022461
    6. '(' → logprob: -9.18844223022461
    7. '(w' → logprob: -9.43844223022461
    8. 'o' → logprob: -9.56344223022461
    9. '[i' → logprob: -9.81344223022461
    10. '[w' → logprob: -9.81344223022461

Token 1387: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14665620028972626
    2. '[i' → logprob: -2.0216562747955322
    3. '[w' → logprob: -6.646656036376953
    4. ')[' → logprob: -7.771656036376953
    5. '```' → logprob: -7.771656036376953
    6. '[f' → logprob: -8.021656036376953
    7. '[idx' → logprob: -8.396656036376953
    8. ')' → logprob: -8.521656036376953
    9. '   ' → logprob: -8.896656036376953
    10. '[j' → logprob: -9.146656036376953

Token 1388: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024490375071763992
    2. '1' → logprob: -4.1494903564453125
    3. 'w' → logprob: -5.3994903564453125
    4. ' [' → logprob: -6.0244903564453125
    5. 'i' → logprob: -8.274490356445312
    6. '   ' → logprob: -8.524490356445312
    7. '[i' → logprob: -8.774490356445312
    8. ' w' → logprob: -8.899490356445312
    9. ')' → logprob: -9.149490356445312
    10. ' ' → logprob: -9.149490356445312

Token 1389: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7248835563659668
    2. 'for' → logprob: -0.7248835563659668
    3. ')' → logprob: -3.849883556365967
    4. '           ' → logprob: -4.974883556365967
    5. '[' → logprob: -6.974883556365967
    6. ']' → logprob: -7.224883556365967
    7. '[i' → logprob: -8.349884033203125
    8. '```' → logprob: -8.599884033203125
    9. ')
' → logprob: -8.849884033203125
    10. '])' → logprob: -8.974884033203125

Token 1390: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041401624679565
    2. 'for' → logprob: -1.1041401624679565
    3. ' for' → logprob: -1.1041401624679565
    4. '           ' → logprob: -6.479140281677246
    5. '*' → logprob: -7.229140281677246
    6. '```' → logprob: -7.354140281677246
    7. '[' → logprob: -7.729140281677246
    8. ')
' → logprob: -7.854140281677246
    9. '
' → logprob: -7.854140281677246
    10. ',' → logprob: -8.229140281677246

Token 1391: ' fw' (ID: 60172)
  Prédit: ' fw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fw' → logprob: -0.3558826744556427
    2. 'fw' → logprob: -1.4808826446533203
    3. ' order' → logprob: -2.9808826446533203
    4. '_' → logprob: -4.60588264465332
    5. 'order' → logprob: -4.98088264465332
    6. '_fw' → logprob: -5.98088264465332
    7. 'f' → logprob: -7.60588264465332
    8. ' ' → logprob: -7.85588264465332
    9. ' _' → logprob: -8.23088264465332
    10. ')' → logprob: -8.23088264465332

Token 1392: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2525371313095093
    2. 'in' → logprob: -1.5025371313095093
    3. ')' → logprob: -8.00253677368164
    4. '[' → logprob: -8.87753677368164
    5. 'order' → logprob: -10.50253677368164
    6. ',' → logprob: -10.87753677368164
    7. ' ' → logprob: -10.87753677368164
    8. '_' → logprob: -11.12753677368164
    9. '_in' → logprob: -11.87753677368164
    10. ']' → logprob: -12.12753677368164

Token 1393: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0009120595059357584
    2. ' order' → logprob: -7.000912189483643
    3. '	order' → logprob: -15.375911712646484
    4. '
' → logprob: -17.000911712646484
    5. ' ' → logprob: -17.875911712646484
    6. '$order' → logprob: -17.875911712646484
    7. '(order' → logprob: -18.125911712646484
    8. '   ' → logprob: -18.125911712646484
    9. 'range' → logprob: -18.750911712646484
    10. 'orde' → logprob: -18.750911712646484

Token 1394: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04053957015275955
    2. '           ' → logprob: -3.290539503097534
    3. ')
' → logprob: -7.040539741516113
    4. '[' → logprob: -7.915539741516113
    5. '):
' → logprob: -8.290539741516113
    6. '       ' → logprob: -9.165539741516113
    7. ')*' → logprob: -9.165539741516113
    8. ',' → logprob: -9.290539741516113
    9. ')+' → logprob: -9.415539741516113
    10. '```' → logprob: -9.665539741516113

Token 1395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01094500720500946
    2. '(' → logprob: -5.510944843292236
    3. ':' → logprob: -6.885944843292236
    4. '(
' → logprob: -7.135944843292236
    5. '[' → logprob: -7.635944843292236
    6. '*' → logprob: -7.635944843292236
    7. '<|end|>' → logprob: -7.760944843292236
    8. ')' → logprob: -7.885944843292236
    9. '```' → logprob: -7.885944843292236
    10. '            
' → logprob: -8.260945320129395

Token 1396: ' weighted' (ID: 70288)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19006429612636566
    2. '   ' → logprob: -2.1900641918182373
    3. ' numerator' → logprob: -4.065064430236816
    4. '
' → logprob: -4.690064430236816
    5. ' return' → logprob: -5.065064430236816
    6. ' sum' → logprob: -5.440064430236816
    7. ' pos' → logprob: -5.815064430236816
    8. ' G' → logprob: -5.940064430236816
    9. ' total' → logprob: -6.065064430236816
    10. ' x' → logprob: -6.065064430236816

Token 1397: '_sum' (ID: 29859)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.6243178844451904
    2. '_positions' → logprob: -1.3743178844451904
    3. '_sum' → logprob: -1.9993178844451904
    4. '_weight' → logprob: -3.8743178844451904
    5. '_center' → logprob: -3.9993178844451904
    6. '_pos' → logprob: -4.3743181228637695
    7. '_' → logprob: -4.6243181228637695
    8. '_height' → logprob: -4.9993181228637695
    9. '_weights' → logprob: -6.3743181228637695
    10. '_mass' → logprob: -6.7493181228637695

Token 1398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2950478196144104
    2. ' =' → logprob: -1.5450477600097656
    3. '(f' → logprob: -4.170047760009766
    4. '=sum' → logprob: -4.920047760009766
    5. '(' → logprob: -5.670047760009766
    6. '           ' → logprob: -5.920047760009766
    7. '(sum' → logprob: -5.920047760009766
    8. '(token' → logprob: -6.170047760009766
    9. '(order' → logprob: -6.420047760009766
    10. '_tokens' → logprob: -6.545047760009766

Token 1399: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07443076372146606
    2. ' sum' → logprob: -2.6994307041168213
    3. '0' → logprob: -5.9494309425354
    4. '           ' → logprob: -6.4494309425354
    5. '   ' → logprob: -9.199430465698242
    6. '               ' → logprob: -9.574430465698242
    7. '(sum' → logprob: -9.574430465698242
    8. '       ' → logprob: -10.949430465698242
    9. ' ' → logprob: -10.949430465698242
    10. '=sum' → logprob: -12.074430465698242

Token 1400: '((' (ID: 2054)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.4068126976490021
    2. 'fw' → logprob: -1.4068126678466797
    3. ' fw' → logprob: -3.0318126678466797
    4. ' (' → logprob: -3.4068126678466797
    5. '((' → logprob: -6.03181266784668
    6. ' f' → logprob: -6.15681266784668
    7. 'f' → logprob: -6.28181266784668
    8. '(i' → logprob: -7.65681266784668
    9. '   ' → logprob: -8.78181266784668
    10. ' ((' → logprob: -9.03181266784668

Token 1401: 'i' (ID: 72)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.29004693031311035
    2. 'i' → logprob: -1.7900469303131104
    3. '(i' → logprob: -3.4150469303131104
    4. 'pos' → logprob: -4.290046691894531
    5. 'idx' → logprob: -4.665046691894531
    6. '(f' → logprob: -4.790046691894531
    7. 'order' → logprob: -5.665046691894531
    8. ' fw' → logprob: -5.915046691894531
    9. 'w' → logprob: -6.415046691894531
    10. ' (' → logprob: -6.415046691894531

Token 1402: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3536679744720459
    2. '+' → logprob: -1.228667974472046
    3. ' *' → logprob: -5.853668212890625
    4. ')' → logprob: -6.353668212890625
    5. '*' → logprob: -8.353668212890625
    6. '   ' → logprob: -9.353668212890625
    7. ')*' → logprob: -9.603668212890625
    8. '           ' → logprob: -10.603668212890625
    9. ' ' → logprob: -10.603668212890625
    10. 'for' → logprob: -11.228668212890625

Token 1403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002534720697440207
    2. ' ' → logprob: -8.625253677368164
    3. ')' → logprob: -10.250253677368164
    4. '+' → logprob: -10.750253677368164
    5. '0' → logprob: -12.125253677368164
    6. '   ' → logprob: -12.500253677368164
    7. '```' → logprob: -12.875253677368164
    8. ' +' → logprob: -13.500253677368164
    9. 'w' → logprob: -14.250253677368164
    10. '           ' → logprob: -14.500253677368164

Token 1404: ')*' (ID: 11043)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4285758435726166
    2. '*' → logprob: -1.178575873374939
    3. ')' → logprob: -3.3035757541656494
    4. ')*' → logprob: -5.5535759925842285
    5. '```' → logprob: -9.67857551574707
    6. '           ' → logprob: -9.80357551574707
    7. '   ' → logprob: -10.42857551574707
    8. ' ' → logprob: -11.30357551574707
    9. '*(' → logprob: -11.80357551574707
    10. ')*(' → logprob: -11.92857551574707

Token 1405: 'fw' (ID: 36972)
  Prédit: 'fw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.28376322984695435
    2. 'order' → logprob: -1.4087631702423096
    3. ' fw' → logprob: -6.658763408660889
    4. ' order' → logprob: -6.658763408660889
    5. '_fw' → logprob: -11.40876293182373
    6. 'food' → logprob: -12.28376293182373
    7. '(order' → logprob: -12.40876293182373
    8. 'orders' → logprob: -12.53376293182373
    9. 'ord' → logprob: -12.78376293182373
    10. 'foods' → logprob: -13.03376293182373

Token 1406: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. ' [' → logprob: -12.750004768371582
    3. '```' → logprob: -13.500004768371582
    4. '   ' → logprob: -15.000004768371582
    5. '           ' → logprob: -15.750004768371582
    6. '][' → logprob: -16.8750057220459
    7. '               ' → logprob: -17.0000057220459
    8. '       ' → logprob: -17.2500057220459
    9. ')[' → logprob: -17.2500057220459
    10. '	' → logprob: -17.7500057220459

Token 1407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002532617887482047
    2. '[' → logprob: -6.002532482147217
    3. '   ' → logprob: -11.002532958984375
    4. '```' → logprob: -11.127532958984375
    5. ' ' → logprob: -12.002532958984375
    6. '
' → logprob: -12.377532958984375
    7. '][' → logprob: -12.502532958984375
    8. ']' → logprob: -13.502532958984375
    9. '`' → logprob: -14.002532958984375
    10. '``' → logprob: -14.002532958984375

Token 1408: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1032574400305748
    2. 'for' → logprob: -2.353257417678833
    3. ')' → logprob: -6.103257656097412
    4. '[' → logprob: -8.353257179260254
    5. '           ' → logprob: -8.478257179260254
    6. '
' → logprob: -8.978257179260254
    7. ']' → logprob: -9.728257179260254
    8. '```' → logprob: -10.478257179260254
    9. '               ' → logprob: -10.728257179260254
    10. ' *' → logprob: -10.978257179260254

Token 1409: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5764790773391724
    2. 'for' → logprob: -0.8264790773391724
    3. '           ' → logprob: -8.201478958129883
    4. '               ' → logprob: -9.076478958129883
    5. '            ' → logprob: -9.951478958129883
    6. '	for' → logprob: -10.576478958129883
    7. ')' → logprob: -11.326478958129883
    8. '                ' → logprob: -11.576478958129883
    9. '                   ' → logprob: -11.576478958129883
    10. '          ' → logprob: -11.951478958129883

Token 1410: ' i' (ID: 575)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.2216787040233612
    2. ' fw' → logprob: -2.0966787338256836
    3. ' order' → logprob: -3.7216787338256836
    4. 'order' → logprob: -3.7216787338256836
    5. 'i' → logprob: -4.221678733825684
    6. ' i' → logprob: -4.596678733825684
    7. 'range' → logprob: -7.596678733825684
    8. ' range' → logprob: -7.721678733825684
    9. '   ' → logprob: -7.721678733825684
    10. ')' → logprob: -8.471678733825684

Token 1411: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009840729646384716
    2. 'in' → logprob: -4.634840965270996
    3. ')' → logprob: -10.134840965270996
    4. ',' → logprob: -10.134840965270996
    5. ' ' → logprob: -13.509840965270996
    6. ' i' → logprob: -13.759840965270996
    7. ' ,' → logprob: -14.259840965270996
    8. ' order' → logprob: -14.759840965270996
    9. ' )' → logprob: -14.759840965270996
    10. '<|end|>' → logprob: -15.134840965270996

Token 1412: 'fw' (ID: 36972)
  Prédit: 'fw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.0009061029995791614
    2. ' fw' → logprob: -7.625905990600586
    3. '_fw' → logprob: -8.000905990600586
    4. '(_,' → logprob: -9.500905990600586
    5. '(f' → logprob: -12.875905990600586
    6. '(' → logprob: -13.875905990600586
    7. '/fw' → logprob: -14.500905990600586
    8. '_,' → logprob: -14.625905990600586
    9. '
' → logprob: -14.750905990600586
    10. '-fw' → logprob: -14.875905990600586

Token 1413: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42917194962501526
    2. 'in' → logprob: -1.0541719198226929
    3. ')' → logprob: -8.179171562194824
    4. '<|end|>' → logprob: -9.179171562194824
    5. '	in' → logprob: -10.679171562194824
    6. '(order' → logprob: -10.804171562194824
    7. '<|end|>' → logprob: -11.179171562194824
    8. ',' → logprob: -11.554171562194824
    9. ' ' → logprob: -12.554171562194824
    10. '),' → logprob: -13.054171562194824

Token 1414: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.029775023460388184
    2. ' enumerate' → logprob: -3.5297751426696777
    3. '```' → logprob: -11.02977466583252
    4. '
' → logprob: -12.90477466583252
    5. ')' → logprob: -13.15477466583252
    6. 'order' → logprob: -13.27977466583252
    7. '`' → logprob: -14.52977466583252
    8. 'en' → logprob: -15.40477466583252
    9. '[(' → logprob: -15.40477466583252
    10. 'in' → logprob: -15.40477466583252

Token 1415: '(order' (ID: 33050)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.00013655527436640114
    2. '(order' → logprob: -9.250136375427246
    3. ' order' → logprob: -10.125136375427246
    4. ')' → logprob: -15.500136375427246
    5. '$order' → logprob: -17.375137329101562
    6. '	order' → logprob: -17.500137329101562
    7. '```' → logprob: -18.250137329101562
    8. '
' → logprob: -18.625137329101562
    9. '   ' → logprob: -19.250137329101562
    10. '`' → logprob: -19.375137329101562

Token 1416: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005330175044946373
    2. ')
' → logprob: -8.125533103942871
    3. '])' → logprob: -9.625533103942871
    4. ')])' → logprob: -10.000533103942871
    5. '))' → logprob: -10.500533103942871
    6. '           ' → logprob: -10.500533103942871
    7. ' )' → logprob: -10.750533103942871
    8. '       ' → logprob: -10.875533103942871
    9. ')`' → logprob: -11.500533103942871
    10. ')]' → logprob: -12.125533103942871

Token 1417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46832194924354553
    2. ')' → logprob: -1.2183219194412231
    3. '
' → logprob: -3.8433220386505127
    4. ')
' → logprob: -3.8433220386505127
    5. '```' → logprob: -5.093321800231934
    6. '<|end|>' → logprob: -5.093321800231934
    7. '       ' → logprob: -5.218321800231934
    8. '(' → logprob: -5.343321800231934
    9. '+' → logprob: -6.468321800231934
    10. ')(
' → logprob: -6.718321800231934

Token 1418: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2708468735218048
    2. 'return' (adapté à ' return') → logprob: -1.6458468437194824
    3. ' return' → logprob: -3.2708468437194824
    4. '   ' → logprob: -6.645846843719482
    5. ')' → logprob: -6.770846843719482
    6. '
' → logprob: -6.895846843719482
    7. '       ' → logprob: -7.270846843719482
    8. '```' → logprob: -7.645846843719482
    9. ' /' → logprob: -7.770846843719482
    10. '          ' → logprob: -8.64584732055664

Token 1419: ' weighted' (ID: 70288)
  Prédit: 'weighted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weighted' → logprob: -0.008782736957073212
    2. ' weighted' → logprob: -4.758782863616943
    3. '(weight' → logprob: -9.133782386779785
    4. '   ' → logprob: -10.008782386779785
    5. '(' → logprob: -12.633782386779785
    6. ' (' → logprob: -12.883782386779785
    7. '           ' → logprob: -13.008782386779785
    8. 'weight' → logprob: -13.133782386779785
    9. 'total' → logprob: -13.258782386779785
    10. '       ' → logprob: -13.383782386779785

Token 1420: '_sum' (ID: 29859)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0029363406356424093
    2. '_sum' → logprob: -5.877936363220215
    3. 'weight' → logprob: -10.002936363220215
    4. 'sum' → logprob: -10.627936363220215
    5. 'weighted' → logprob: -11.377936363220215
    6. ' /' → logprob: -11.502936363220215
    7. '_weights' → logprob: -11.627936363220215
    8. '/' → logprob: -11.752936363220215
    9. 't' → logprob: -12.127936363220215
    10. 's' → logprob: -13.127936363220215

Token 1421: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.41257885098457336
    2. '/' → logprob: -1.162578821182251
    3. '<|end|>' → logprob: -3.912578821182251
    4. '**' → logprob: -5.91257905960083
    5. ' /
' → logprob: -7.28757905960083
    6. '<|end|>' → logprob: -7.53757905960083
    7. ')' → logprob: -8.537578582763672
    8. '           ' → logprob: -8.787578582763672
    9. '/
' → logprob: -8.912578582763672
    10. '[' → logprob: -9.037578582763672

Token 1422: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00015872348740231246
    2. ' total' → logprob: -8.750158309936523
    3. '(total' → logprob: -15.625158309936523
    4. 'float' → logprob: -17.125158309936523
    5. '   ' → logprob: -18.125158309936523
    6. '           ' → logprob: -19.375158309936523
    7. '
' → logprob: -19.625158309936523
    8. ' ' → logprob: -20.125158309936523
    9. 'sum' → logprob: -20.500158309936523
    10. 'tot' → logprob: -20.875158309936523

Token 1423: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -8.578184497309849e-05
    2. 'weight' → logprob: -9.625085830688477
    3. '_w' → logprob: -11.250085830688477
    4. '_weights' → logprob: -12.125085830688477
    5. '_WEIGHT' → logprob: -14.875085830688477
    6. '.weight' → logprob: -15.250085830688477
    7. '_total' → logprob: -15.875085830688477
    8. 't' → logprob: -16.250085830688477
    9. '```' → logprob: -16.375085830688477
    10. '._' → logprob: -16.500085830688477

Token 1424: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0815570056438446
    2. '<|end|>' → logprob: -2.831557035446167
    3. ')' → logprob: -4.331556797027588
    4. '   ' → logprob: -6.081556797027588
    5. '        
' → logprob: -6.581556797027588
    6. '<|end|>' → logprob: -7.331556797027588
    7. ',' → logprob: -7.831556797027588
    8. ':' → logprob: -7.831556797027588
    9. '```' → logprob: -8.456557273864746
    10. ' for' → logprob: -8.706557273864746

Token 1425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0676613450050354
    2. '
' → logprob: -2.8176612854003906
    3. '        
' → logprob: -5.942661285400391
    4. '```' → logprob: -6.067661285400391
    5. 'for' → logprob: -8.06766128540039
    6. ' for' → logprob: -8.44266128540039
    7. '<|end|>' → logprob: -9.81766128540039
    8. '``' → logprob: -10.31766128540039
    9. '    
' → logprob: -10.31766128540039
    10. '   ' → logprob: -10.56766128540039

Token 1426: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02100706659257412
    2. 'for' (adapté à ' for') → logprob: -3.8960070610046387
    3. ' for' → logprob: -7.896007061004639
    4. '```' → logprob: -10.271007537841797
    5. '   ' → logprob: -10.396007537841797
    6. '
' → logprob: -10.896007537841797
    7. '        
' → logprob: -11.896007537841797
    8. '	for' → logprob: -14.646007537841797
    9. '           ' → logprob: -14.771007537841797
    10. 'For' → logprob: -14.896007537841797

Token 1427: ' perm' (ID: 5961)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.051651861518621445
    2. ' food' → logprob: -3.676651954650879
    3. ' perm' → logprob: -4.426651954650879
    4. 'order' → logprob: -4.676651954650879
    5. ' permutation' → logprob: -6.801651954650879
    6. ' foods' → logprob: -7.051651954650879
    7. 'perm' → logprob: -7.426651954650879
    8. 'food' → logprob: -7.551651954650879
    9. ' ordering' → logprob: -8.301651954650879
    10. ' ' → logprob: -9.301651954650879

Token 1428: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13739131391048431
    2. ' =' → logprob: -2.8873913288116455
    3. '_' → logprob: -3.5123913288116455
    4. ' ' → logprob: -4.637391090393066
    5. 'in' → logprob: -5.137391090393066
    6. '[' → logprob: -5.887391090393066
    7. '   ' → logprob: -6.012391090393066
    8. '<|end|>' → logprob: -6.137391090393066
    9. 's' → logprob: -6.387391090393066
    10. '(' → logprob: -6.387391090393066

Token 1429: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.2519615888595581
    2. 'per' → logprob: -1.501961588859558
    3. '(per' → logprob: -11.001961708068848
    4. 'perm' → logprob: -12.126961708068848
    5. ' per' → logprob: -12.126961708068848
    6. ' perm' → logprob: -13.126961708068848
    7. '_per' → logprob: -14.001961708068848
    8. '	per' → logprob: -14.751961708068848
    9. ' itertools' → logprob: -14.876961708068848
    10. ' perms' → logprob: -15.001961708068848

Token 1430: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010914575977949426
    2. '(food' → logprob: -9.37510871887207
    3. '((' → logprob: -11.75010871887207
    4. '```' → logprob: -12.50010871887207
    5. '       ' → logprob: -12.75010871887207
    6. ' (' → logprob: -12.75010871887207
    7. '(
' → logprob: -12.87510871887207
    8. '   ' → logprob: -13.75010871887207
    9. ')' → logprob: -14.62510871887207
    10. '([' → logprob: -15.00010871887207

Token 1431: 'foods' (ID: 144120)
  Prédit: 'foods'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' → logprob: -7.896309739408025e-07
    2. ' foods' → logprob: -14.875000953674316
    3. 'range' → logprob: -15.250000953674316
    4. '(' → logprob: -16.25
    5. '   ' → logprob: -17.0
    6. 'food' → logprob: -17.375
    7. '[' → logprob: -18.25
    8. ')' → logprob: -19.125
    9. '           ' → logprob: -19.5
    10. '```' → logprob: -19.625

Token 1432: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1301526427268982
    2. '):' → logprob: -2.255152702331543
    3. '           ' → logprob: -4.380152702331543
    4. '       ' → logprob: -6.380152702331543
    5. ',' → logprob: -7.380152702331543
    6. '[' → logprob: -7.505152702331543
    7. ':' → logprob: -7.880152702331543
    8. ')' → logprob: -8.130152702331543
    9. '<|end|>' → logprob: -8.630152702331543
    10. '():
' → logprob: -9.005152702331543

Token 1433: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014122584834694862
    2. ' if' → logprob: -7.376412391662598
    3. ':' → logprob: -7.751412391662598
    4. ':
' → logprob: -8.876412391662598
    5. '```' → logprob: -10.376412391662598
    6. '<|end|>' → logprob: -10.376412391662598
    7. 'if' → logprob: -10.501412391662598
    8. '            
' → logprob: -10.876412391662598
    9. '<|end|>' → logprob: -11.001412391662598
    10. '	       ' → logprob: -11.501412391662598

Token 1434: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40009912848472595
    2. ' if' → logprob: -1.4000991582870483
    3. 'if' (adapté à ' if') → logprob: -2.525099039077759
    4. '               ' → logprob: -5.775099277496338
    5. '```' → logprob: -11.65009880065918
    6. '#' → logprob: -12.65009880065918
    7. '   ' → logprob: -13.52509880065918
    8. '                   ' → logprob: -13.65009880065918
    9. '            
' → logprob: -14.02509880065918
    10. ',' → logprob: -14.52509880065918

Token 1435: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4741058647632599
    2. 'is' → logprob: -0.9741058349609375
    3. ' not' → logprob: -10.849105834960938
    4. 'not' → logprob: -12.099105834960938
    5. '           ' → logprob: -13.474105834960938
    6. '(is' → logprob: -13.974105834960938
    7. '       ' → logprob: -15.099105834960938
    8. '               ' → logprob: -15.724105834960938
    9. '         ' → logprob: -15.974105834960938
    10. '_is' → logprob: -15.974105834960938

Token 1436: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.1472419600977446e-06
    2. ' _' → logprob: -14.750000953674316
    3. '_' → logprob: -15.125000953674316
    4. 'stable' → logprob: -15.125000953674316
    5. '_safe' → logprob: -16.875001907348633
    6. '\' → logprob: -17.375001907348633
    7. '_s' → logprob: -18.000001907348633
    8. '_static' → logprob: -18.875001907348633
    9. '_sta' → logprob: -18.875001907348633
    10. '```' → logprob: -19.000001907348633

Token 1437: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.1313745081424713
    2. 'table' → logprob: -2.2563745975494385
    3. 't' → logprob: -4.256374359130859
    4. '_table' → logprob: -5.631374359130859
    5. '_t' → logprob: -8.50637435913086
    6. '_' → logprob: -9.25637435913086
    7. 'tab' → logprob: -9.25637435913086
    8. 'a' → logprob: -10.00637435913086
    9. 'abla' → logprob: -10.63137435913086
    10. '```' → logprob: -10.63137435913086

Token 1438: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033268341794610023
    2. '[' → logprob: -6.128326892852783
    3. '(
' → logprob: -7.378326892852783
    4. '(permission' → logprob: -8.253326416015625
    5. '```' → logprob: -9.378326416015625
    6. '((' → logprob: -10.378326416015625
    7. '(prev' → logprob: -11.253326416015625
    8. 'perm' → logprob: -11.253326416015625
    9. '(per' → logprob: -11.253326416015625
    10. ' (' → logprob: -11.753326416015625

Token 1439: 'perm' (ID: 34794)
  Prédit: 'perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -9.014684110297821e-06
    2. ' perm' → logprob: -12.375008583068848
    3. '(' → logprob: -12.625008583068848
    4. 'order' → logprob: -14.250008583068848
    5. 'per' → logprob: -14.750008583068848
    6. ')' → logprob: -15.250008583068848
    7. '           ' → logprob: -16.625009536743164
    8. '   ' → logprob: -16.625009536743164
    9. '               ' → logprob: -16.625009536743164
    10. '       ' → logprob: -17.750009536743164

Token 1440: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7159188389778137
    2. '):' → logprob: -1.465918779373169
    3. ')' → logprob: -1.590918779373169
    4. '               ' → logprob: -3.090918779373169
    5. '[' → logprob: -3.715918779373169
    6. '           ' → logprob: -6.340919017791748
    7. ' and' → logprob: -6.715919017791748
    8. ':' → logprob: -7.215919017791748
    9. ')==' → logprob: -7.840919017791748
    10. ':
' → logprob: -8.21591854095459

Token 1441: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00046439285506494343
    2. '                
' → logprob: -8.37546443939209
    3. '                ' → logprob: -10.00046443939209
    4. '           ' → logprob: -10.50046443939209
    5. '                               ' → logprob: -10.50046443939209
    6. '                   ' → logprob: -10.50046443939209
    7. '[' → logprob: -10.75046443939209
    8. '                       ' → logprob: -11.12546443939209
    9. '```' → logprob: -11.37546443939209
    10. '              ' → logprob: -11.50046443939209

Token 1442: ' G' (ID: 499)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -1.3815113306045532
    2. 'current' → logprob: -1.6315113306045532
    3. 'curr' → logprob: -1.8815113306045532
    4. 'g' → logprob: -2.1315112113952637
    5. 'G' (adapté à ' G') → logprob: -2.2565112113952637
    6. 'total' → logprob: -3.0065112113952637
    7. 'cur' → logprob: -3.1315112113952637
    8. 'w' → logprob: -3.5065112113952637
    9. 'if' → logprob: -3.7565112113952637
    10. '               ' → logprob: -4.756511211395264

Token 1443: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4763890504837036
    2. ' =' → logprob: -1.3513890504837036
    3. '<|end|>' → logprob: -2.351388931274414
    4. ' <' → logprob: -5.101388931274414
    5. '<' → logprob: -5.101388931274414
    6. '<|end|>' → logprob: -6.351388931274414
    7. ')' → logprob: -6.476388931274414
    8. '_token' → logprob: -6.851388931274414
    9. '_tokens' → logprob: -7.101388931274414
    10. ' <=' → logprob: -7.476388931274414

Token 1444: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.062109965831041336
    2. ' center' → logprob: -2.81210994720459
    3. '(center' → logprob: -8.93710994720459
    4. 'sum' → logprob: -11.81210994720459
    5. 'round' → logprob: -13.93710994720459
    6. 'float' → logprob: -13.93710994720459
    7. ' sum' → logprob: -15.68710994720459
    8. '
' → logprob: -15.68710994720459
    9. '=center' → logprob: -15.68710994720459
    10. '           ' → logprob: -15.81210994720459

Token 1445: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -2.9875325708417222e-05
    2. '_' → logprob: -12.125029563903809
    3. 'Of' → logprob: -12.625029563903809
    4. ' of' → logprob: -12.750029563903809
    5. '_OF' → logprob: -12.750029563903809
    6. 'of' → logprob: -12.875029563903809
    7. '\' → logprob: -13.000029563903809
    8. ' _' → logprob: -13.125029563903809
    9. '
' → logprob: -13.375029563903809
    10. ')_' → logprob: -13.375029563903809

Token 1446: '_gr' (ID: 30286)
  Prédit: 'gravity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gravity' → logprob: -0.38906407356262207
    2. '_gr' → logprob: -1.139064073562622
    3. 'gr' → logprob: -6.139063835144043
    4. 'grav' → logprob: -11.514063835144043
    5. ' gravity' → logprob: -12.014063835144043
    6. 'mass' → logprob: -12.389063835144043
    7. '_g' → logprob: -12.389063835144043
    8. '\' → logprob: -12.639063835144043
    9. 'g' → logprob: -13.764063835144043
    10. '
' → logprob: -13.889063835144043

Token 1447: 'avity' (ID: 25292)
  Prédit: 'avity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avity' → logprob: -0.00014251544780563563
    2. 'r' → logprob: -9.125142097473145
    3. 'gravity' → logprob: -11.125142097473145
    4. 'a' → logprob: -11.875142097473145
    5. 'av' → logprob: -12.500142097473145
    6. 'rav' → logprob: -12.875142097473145
    7. 'v' → logprob: -14.125142097473145
    8. '_' → logprob: -14.375142097473145
    9. '_r' → logprob: -15.000142097473145
    10. 'avior' → logprob: -15.250142097473145

Token 1448: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.173704271830502e-06
    2. '```' → logprob: -13.25000286102295
    3. '(
' → logprob: -14.12500286102295
    4. '               ' → logprob: -15.50000286102295
    5. '`' → logprob: -16.500003814697266
    6. ' (' → logprob: -16.625003814697266
    7. '                   ' → logprob: -16.750003814697266
    8. ')' → logprob: -16.750003814697266
    9. '(permission' → logprob: -17.250003814697266
    10. '``' → logprob: -17.625003814697266

Token 1449: 'perm' (ID: 34794)
  Prédit: 'perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -1.9361264946837764e-07
    2. ' perm' → logprob: -15.75
    3. 'per' → logprob: -17.125
    4. 'order' → logprob: -19.25
    5. '```' → logprob: -19.375
    6. 'list' → logprob: -19.625
    7. 'perf' → logprob: -19.625
    8. ')' → logprob: -20.125
    9. '   ' → logprob: -20.125
    10. '(' → logprob: -20.375

Token 1450: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07908234000205994
    2. '               ' → logprob: -2.8290822505950928
    3. ')
' → logprob: -4.454082489013672
    4. '):
' → logprob: -5.329082489013672
    5. '                   ' → logprob: -8.954082489013672
    6. '           ' → logprob: -9.829082489013672
    7. ')>
' → logprob: -10.204082489013672
    8. ')**' → logprob: -10.454082489013672
    9. '```' → logprob: -10.704082489013672
    10. '):' → logprob: -11.079082489013672

Token 1451: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4267014265060425
    2. '                   ' → logprob: -1.1767014265060425
    3. '```' → logprob: -3.551701545715332
    4. '<|end|>' → logprob: -5.676701545715332
    5. '                       ' → logprob: -6.301701545715332
    6. '``' → logprob: -7.051701545715332
    7. ' if' → logprob: -7.051701545715332
    8. '                               ' → logprob: -7.176701545715332
    9. '                           ' → logprob: -7.676701545715332
    10. ' token' → logprob: -8.426701545715332

Token 1452: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.35280975699424744
    2. '               ' → logprob: -1.6028097867965698
    3. ' if' → logprob: -2.3528096675872803
    4. '           ' → logprob: -7.477809906005859
    5. '                   ' → logprob: -8.97780990600586
    6. '```' → logprob: -9.10280990600586
    7. '              ' → logprob: -11.22780990600586
    8. '	if' → logprob: -11.35280990600586
    9. '	           ' → logprob: -12.35280990600586
    10. '                ' → logprob: -12.47780990600586

Token 1453: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.05521567538380623
    2. ' G' → logprob: -2.93021559715271
    3. 'best' → logprob: -8.305215835571289
    4. ' best' → logprob: -9.430215835571289
    5. '(G' → logprob: -12.930215835571289
    6. '   ' → logprob: -14.055215835571289
    7. ' (' → logprob: -14.055215835571289
    8. '               ' → logprob: -14.680215835571289
    9. '(' → logprob: -14.930215835571289
    10. ' ' → logprob: -15.305215835571289

Token 1454: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1211983859539032
    2. '<' → logprob: -2.2461984157562256
    3. ' <=' → logprob: -4.8711981773376465
    4. '<=' → logprob: -8.371198654174805
    5. '[' → logprob: -9.246198654174805
    6. ')' → logprob: -9.246198654174805
    7. '<|end|>' → logprob: -9.621198654174805
    8. ' ==' → logprob: -10.371198654174805
    9. '```' → logprob: -11.121198654174805
    10. '               ' → logprob: -11.496198654174805

Token 1455: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.12693031132221222
    2. ' best' → logprob: -2.1269302368164062
    3. '_best' → logprob: -14.126930236816406
    4. '=' → logprob: -14.501930236816406
    5. '(best' → logprob: -14.626930236816406
    6. '	best' → logprob: -15.751930236816406
    7. 'Best' → logprob: -15.876930236816406
    8. '.best' → logprob: -16.751930236816406
    9. '                   ' → logprob: -17.126930236816406
    10. '               ' → logprob: -17.251930236816406

Token 1456: '_G' (ID: 5459)
  Prédit: '_G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_G' → logprob: -0.0030461661517620087
    2. '_order' → logprob: -6.003046035766602
    3. '_token' → logprob: -8.753046035766602
    4. '_ORDER' → logprob: -9.128046035766602
    5. '_tokens' → logprob: -9.628046035766602
    6. '```' → logprob: -9.878046035766602
    7. '_TOKEN' → logprob: -10.003046035766602
    8. 'G' → logprob: -10.378046035766602
    9. '_Order' → logprob: -10.753046035766602
    10. 'Order' → logprob: -11.628046035766602

Token 1457: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8324883580207825
    2. ':' → logprob: -0.9574883580207825
    3. ':
' → logprob: -2.0824882984161377
    4. '               ' → logprob: -3.5824882984161377
    5. '                       ' → logprob: -4.457488536834717
    6. '                           ' → logprob: -5.207488536834717
    7. ' and' → logprob: -6.582488536834717
    8. '```' → logprob: -6.957488536834717
    9. '<|end|>' → logprob: -7.082488536834717
    10. '                        ' → logprob: -7.332488536834717

Token 1458: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016100063920021057
    2. '                       ' → logprob: -4.89109992980957
    3. ' best' → logprob: -5.76609992980957
    4. '               ' → logprob: -6.51609992980957
    5. 'best' → logprob: -6.51609992980957
    6. '                           ' → logprob: -6.64109992980957
    7. '```' → logprob: -8.14109992980957
    8. '                    ' → logprob: -8.89109992980957
    9. '(best' → logprob: -9.14109992980957
    10. '                               ' → logprob: -9.64109992980957

Token 1459: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.0003397535183466971
    2. ' best' → logprob: -8.00033950805664
    3. '```' → logprob: -12.87533950805664
    4. '                   ' → logprob: -13.62533950805664
    5. '(best' → logprob: -15.00033950805664
    6. '	best' → logprob: -15.87533950805664
    7. '_best' → logprob: -17.25033950805664
    8. '``' → logprob: -17.62533950805664
    9. '               ' → logprob: -17.87533950805664
    10. '                       ' → logprob: -18.50033950805664

Token 1460: '_G' (ID: 5459)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.8624639324116288e-06
    2. '_token' → logprob: -13.750001907348633
    3. '_ORDER' → logprob: -15.250001907348633
    4. 'order' → logprob: -15.500001907348633
    5. '_Order' → logprob: -16.625001907348633
    6. 'Order' → logprob: -16.750001907348633
    7. '_G' → logprob: -16.875001907348633
    8. '_' → logprob: -17.375001907348633
    9. '_orders' → logprob: -17.625001907348633
    10. '_code' → logprob: -18.625001907348633

Token 1461: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011780819622799754
    2. ' =' → logprob: -6.75117826461792
    3. '_=' → logprob: -13.001177787780762
    4. '=
' → logprob: -13.376177787780762
    5. '<|end|>' → logprob: -13.626177787780762
    6. '```' → logprob: -14.001177787780762
    7. '＝' → logprob: -14.751177787780762
    8. '=_' → logprob: -15.251177787780762
    9. '_' → logprob: -15.376177787780762
    10. ')' → logprob: -15.876177787780762

Token 1462: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0006651374278590083
    2. ' G' → logprob: -7.375665187835693
    3. '                   ' → logprob: -10.750664710998535
    4. '               ' → logprob: -11.750664710998535
    5. 'perm' → logprob: -12.625664710998535
    6. '           ' → logprob: -13.625664710998535
    7. '   ' → logprob: -13.625664710998535
    8. '                ' → logprob: -13.750664710998535
    9. '             ' → logprob: -15.250664710998535
    10. '                 ' → logprob: -15.250664710998535

Token 1463: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2036396563053131
    2. '```' → logprob: -1.9536396265029907
    3. '                       ' → logprob: -3.8286397457122803
    4. '                           ' → logprob: -5.453639507293701
    5. '<|end|>' → logprob: -5.578639507293701
    6. '               ' → logprob: -5.953639507293701
    7. '``' → logprob: -6.453639507293701
    8. ' best' → logprob: -6.453639507293701
    9. ',' → logprob: -6.453639507293701
    10. '                    ' → logprob: -7.078639507293701

Token 1464: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0036111166700720787
    2. '```' → logprob: -6.003611087799072
    3. '               ' → logprob: -7.378611087799072
    4. '           ' → logprob: -8.75361156463623
    5. '                       ' → logprob: -8.75361156463623
    6. '                           ' → logprob: -9.62861156463623
    7. '                  ' → logprob: -10.12861156463623
    8. '                    ' → logprob: -10.75361156463623
    9. '``' → logprob: -11.00361156463623
    10. '<|end|>' → logprob: -11.50361156463623

Token 1465: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -4.572941179503687e-05
    2. ' best' → logprob: -10.000045776367188
    3. '```' → logprob: -16.375045776367188
    4. '                   ' → logprob: -16.500045776367188
    5. '	best' → logprob: -17.500045776367188
    6. '_best' → logprob: -18.500045776367188
    7. '(best' → logprob: -19.000045776367188
    8. '-best' → logprob: -20.125045776367188
    9. '.best' → logprob: -20.250045776367188
    10. '``' → logprob: -21.125045776367188

Token 1466: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -2.0100624169572257e-05
    2. '_token' → logprob: -12.000020027160645
    3. 'Order' → logprob: -12.375020027160645
    4. '_answer' → logprob: -12.875020027160645
    5. '_ORDER' → logprob: -12.875020027160645
    6. '_' → logprob: -13.500020027160645
    7. 'order' → logprob: -13.500020027160645
    8. '_orders' → logprob: -14.500020027160645
    9. '_Order' → logprob: -15.000020027160645
    10. '```' → logprob: -15.000020027160645

Token 1467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.53050296427682e-05
    2. ' =' → logprob: -9.37508487701416
    3. '＝' → logprob: -15.87508487701416
    4. '=
' → logprob: -16.125085830688477
    5. '<|end|>' → logprob: -16.250085830688477
    6. '=

' → logprob: -17.750085830688477
    7. '=True' → logprob: -18.250085830688477
    8. ')=' → logprob: -18.500085830688477
    9. '=}' → logprob: -18.625085830688477
    10. '```' → logprob: -18.875085830688477

Token 1468: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.02195168472826481
    2. ' perm' → logprob: -4.396951675415039
    3. 'list' → logprob: -4.771951675415039
    4. ' list' → logprob: -7.021951675415039
    5. '[' → logprob: -10.396951675415039
    6. 'per' → logprob: -12.521951675415039
    7. '   ' → logprob: -12.896951675415039
    8. ' [' → logprob: -13.646951675415039
    9. '[list' → logprob: -13.771951675415039
    10. '[]' → logprob: -14.146951675415039

Token 1469: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04871715232729912
    2. '<|end|>' → logprob: -3.6737172603607178
    3. '```' → logprob: -4.798717021942139
    4. '           ' → logprob: -5.798717021942139
    5. ')' → logprob: -6.423717021942139
    6. '   ' → logprob: -6.423717021942139
    7. '.' → logprob: -6.798717021942139
    8. ' if' → logprob: -6.798717021942139
    9. '               ' → logprob: -7.048717021942139
    10. '
' → logprob: -7.048717021942139

Token 1470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06489741802215576
    2. '
' → logprob: -3.4398975372314453
    3. '```' → logprob: -3.6898975372314453
    4. '   ' → logprob: -6.564897537231445
    5. '        
' → logprob: -6.814897537231445
    6. '<|end|>' → logprob: -7.189897537231445
    7. 'for' → logprob: -7.314897537231445
    8. ' for' → logprob: -7.939897537231445
    9. '``' → logprob: -8.564897537231445
    10. '    
' → logprob: -8.814897537231445

Token 1471: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8621417880058289
    2. 'if' → logprob: -1.6121418476104736
    3. 'for' (adapté à ' for') → logprob: -1.6121418476104736
    4. '       ' → logprob: -2.1121418476104736
    5. '```' → logprob: -2.8621418476104736
    6. '``' → logprob: -8.487141609191895
    7. ' if' → logprob: -8.737141609191895
    8. '   ' → logprob: -8.862141609191895
    9. ' for' → logprob: -9.237141609191895
    10. '
' → logprob: -10.112141609191895

Token 1472: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.8458643555641174
    2. 'f' → logprob: -1.2208642959594727
    3. ' food' → logprob: -2.3458642959594727
    4. ' line' → logprob: -2.4708642959594727
    5. 'food' → logprob: -2.7208642959594727
    6. 'name' → logprob: -4.720864295959473
    7. ' name' → logprob: -4.720864295959473
    8. 'line' → logprob: -5.220864295959473
    9. ' item' → logprob: -6.595864295959473
    10. 'item' → logprob: -6.845864295959473

Token 1473: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5265241861343384
    2. 'in' → logprob: -0.9015241861343384
    3. 'ile' → logprob: -7.026524066925049
    4. 'i' → logprob: -7.651524066925049
    5. 'inal' → logprob: -7.776524066925049
    6. '_in' → logprob: -8.026524543762207
    7. 'ood' → logprob: -8.526524543762207
    8. '_name' → logprob: -8.776524543762207
    9. ')' → logprob: -9.151524543762207
    10. 'o' → logprob: -9.276524543762207

Token 1474: '_,' (ID: 14152)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12277715653181076
    2. ' w' → logprob: -2.372777223587036
    3. '(w' → logprob: -4.247776985168457
    4. 'name' → logprob: -5.747776985168457
    5. 'f' → logprob: -6.497776985168457
    6. ' name' → logprob: -6.997776985168457
    7. 'fw' → logprob: -7.872776985168457
    8. ' f' → logprob: -7.997776985168457
    9. ' (' → logprob: -8.247776985168457
    10. '_w' → logprob: -8.247776985168457

Token 1475: '_' (ID: 62)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005287122912704945
    2. 'print' → logprob: -5.255287170410156
    3. '```' → logprob: -10.630287170410156
    4. ' f' → logprob: -11.005287170410156
    5. '`' → logprob: -12.505287170410156
    6. '_' → logprob: -12.505287170410156
    7. '_f' → logprob: -12.880287170410156
    8. '
' → logprob: -14.005287170410156
    9. ' print' → logprob: -14.755287170410156
    10. '=f' → logprob: -15.505287170410156

Token 1476: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3868895173072815
    2. ' in' → logprob: -1.1368894577026367
    3. '```' → logprob: -11.136889457702637
    4. 'print' → logprob: -13.136889457702637
    5. 'n' → logprob: -14.886889457702637
    6. 'f' → logprob: -15.136889457702637
    7. ' ' → logprob: -15.261889457702637
    8. '   ' → logprob: -15.511889457702637
    9. '_in' → logprob: -16.011890411376953
    10. '       ' → logprob: -16.011890411376953

Token 1477: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -9.088346359931165e-07
    2. ' best' → logprob: -14.000000953674316
    3. '(best' → logprob: -20.0
    4. '	best' → logprob: -22.75
    5. '```' → logprob: -24.25
    6. '   ' → logprob: -24.25
    7. '_best' → logprob: -24.875
    8. '.best' → logprob: -26.25
    9. 'better' → logprob: -26.875
    10. 'print' → logprob: -27.125

Token 1478: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -2.15310683415737e-05
    2. 'order' → logprob: -10.750021934509277
    3. 'Order' → logprob: -18.00002098083496
    4. '_orders' → logprob: -18.50002098083496
    5. '_ORDER' → logprob: -18.50002098083496
    6. '	order' → logprob: -18.75002098083496
    7. '_food' → logprob: -18.87502098083496
    8. '_' → logprob: -19.00002098083496
    9. '$order' → logprob: -19.12502098083496
    10. ' order' → logprob: -19.12502098083496

Token 1479: ':
' (ID: 734)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1348295360803604
    2. '```' → logprob: -3.134829521179199
    3. ':
' → logprob: -3.634829521179199
    4. '       ' → logprob: -3.884829521179199
    5. ' print' → logprob: -4.509829521179199
    6. ':' → logprob: -4.509829521179199
    7. '   ' → logprob: -5.134829521179199
    8. '           ' → logprob: -5.259829521179199
    9. '<|end|>' → logprob: -7.134829521179199
    10. '``' → logprob: -8.3848295211792

Token 1480: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05239051952958107
    2. 'print' → logprob: -3.1773905754089355
    3. '```' → logprob: -5.3023905754089355
    4. '   ' → logprob: -5.9273905754089355
    5. ' print' → logprob: -6.9273905754089355
    6. '       ' → logprob: -7.5523905754089355
    7. '<|end|>' → logprob: -9.302390098571777
    8. '               ' → logprob: -10.302390098571777
    9. '``' → logprob: -10.552390098571777
    10. '`' → logprob: -11.302390098571777

Token 1481: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.074907287256792e-05
    2. '```' → logprob: -9.75006103515625
    3. ' print' → logprob: -13.37506103515625
    4. '           ' → logprob: -14.50006103515625
    5. '``' → logprob: -15.75006103515625
    6. '       ' → logprob: -15.75006103515625
    7. '   ' → logprob: -17.37506103515625
    8. '	print' → logprob: -17.75006103515625
    9. '`' → logprob: -18.00006103515625
    10. '#print' → logprob: -19.62506103515625

Token 1482: '(f' (ID: 1526)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003181994194164872
    2. '(f' → logprob: -5.7531819343566895
    3. ' f' → logprob: -12.503182411193848
    4. '```' → logprob: -14.503182411193848
    5. '(' → logprob: -17.50318145751953
    6. '	f' → logprob: -18.00318145751953
    7. '
' → logprob: -18.75318145751953
    8. '{' → logprob: -18.87818145751953
    9. '_f' → logprob: -19.37818145751953
    10. '*f' → logprob: -19.50318145751953

Token 1483: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.274932143744081e-05
    2. '<|end|>' → logprob: -10.375042915344238
    3. '())' → logprob: -12.000042915344238
    4. ')
' → logprob: -12.625042915344238
    5. '()' → logprob: -15.000042915344238
    6. ')}' → logprob: -15.250042915344238
    7. '```' → logprob: -15.250042915344238
    8. '")' → logprob: -15.750042915344238
    9. ' )' → logprob: -15.875042915344238
    10. '`)' → logprob: -16.000041961669922

Token 1484: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1485: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002831745892763138
    2. ' __' → logprob: -5.877831935882568
    3. '```' → logprob: -10.87783145904541
    4. 'name' → logprob: -12.37783145904541
    5. '_name' → logprob: -14.00283145904541
    6. '___' → logprob: -14.12783145904541
    7. '`' → logprob: -14.50283145904541
    8. '(__' → logprob: -14.50283145904541
    9. ''' → logprob: -14.87783145904541
    10. '.__' → logprob: -15.75283145904541

Token 1486: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09849990904331207
    2. '```' → logprob: -2.4735000133514404
    3. '==' → logprob: -5.473499774932861
    4. ' ==' → logprob: -6.098499774932861
    5. '__":
' → logprob: -6.848499774932861
    6. '``' → logprob: -7.598499774932861
    7. '<|end|>' → logprob: -8.59850025177002
    8. '__':
' → logprob: -8.59850025177002
    9. '=="' → logprob: -8.84850025177002
    10. ' __' → logprob: -9.09850025177002

Token 1487: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07902804017066956
    2. '```' → logprob: -3.2040281295776367
    3. '==' → logprob: -3.7040281295776367
    4. ' ==' → logprob: -5.579028129577637
    5. '=='' → logprob: -6.079028129577637
    6. '=="' → logprob: -6.454028129577637
    7. '__":
' → logprob: -7.579028129577637
    8. '__.__' → logprob: -7.704028129577637
    9. '<|end|>' → logprob: -7.704028129577637
    10. '__':
' → logprob: -8.079028129577637

Token 1488: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5066957473754883
    2. '__' → logprob: -1.7566957473754883
    3. '```' → logprob: -1.8816957473754883
    4. ' ==' → logprob: -3.0066957473754883
    5. '=="' → logprob: -4.631695747375488
    6. '__":
' → logprob: -6.131695747375488
    7. '_' → logprob: -6.256695747375488
    8. '``' → logprob: -6.506695747375488
    9. '=='' → logprob: -6.756695747375488
    10. '()==' → logprob: -6.881695747375488

Token 1489: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4246469736099243
    2. '"' → logprob: -1.1746469736099243
    3. '__' → logprob: -3.2996468544006348
    4. '`' → logprob: -9.549647331237793
    5. '```' → logprob: -10.174647331237793
    6. ''m' → logprob: -10.299647331237793
    7. 'main' → logprob: -10.549647331237793
    8. ''s' → logprob: -13.549647331237793
    9. '   ' → logprob: -14.299647331237793
    10. '___' → logprob: -14.674647331237793

Token 1490: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011049824766814709
    2. '__' → logprob: -4.511049747467041
    3. 'name' → logprob: -13.7610502243042
    4. '__':
' → logprob: -15.1360502243042
    5. '```' → logprob: -15.5110502243042
    6. '____' → logprob: -16.261049270629883
    7. 'python' → logprob: -16.511049270629883
    8. '_main' → logprob: -16.636049270629883
    9. '___' → logprob: -16.761049270629883
    10. ' main' → logprob: -16.761049270629883

Token 1491: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.015086272731423378
    2. '__' → logprob: -4.3900861740112305
    3. '__":
' → logprob: -6.0150861740112305
    4. '():
' → logprob: -10.01508617401123
    5. '__()
' → logprob: -10.14008617401123
    6. '__('' → logprob: -12.01508617401123
    7. '('__' → logprob: -12.01508617401123
    8. '__((' → logprob: -12.14008617401123
    9. '```' → logprob: -12.51508617401123
    10. ''>
' → logprob: -12.89008617401123

Token 1492: '   ' (ID: 271)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.046546418219804764
    2. '   ' → logprob: -3.171546459197998
    3. '```' → logprob: -6.296546459197998
    4. ' solve' → logprob: -6.671546459197998
    5. '.solve' → logprob: -8.54654598236084
    6. 'main' → logprob: -8.79654598236084
    7. '``' → logprob: -10.67154598236084
    8. '    
' → logprob: -11.29654598236084
    9. '`s' → logprob: -11.42154598236084
    10. '`' → logprob: -11.79654598236084

Token 1493: ' main' (ID: 2758)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.00020818933262489736
    2. 'main' (adapté à ' main') → logprob: -8.500207901000977
    3. ' solve' → logprob: -12.625207901000977
    4. '   ' → logprob: -14.125207901000977
    5. '```' → logprob: -14.375207901000977
    6. '.solve' → logprob: -17.625207901000977
    7. '`' → logprob: -17.625207901000977
    8. '``' → logprob: -18.750207901000977
    9. 'resolve' → logprob: -19.375207901000977
    10. 'save' → logprob: -19.500207901000977

Token 1494: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1492
Tokens correctement prédits (1ère position, stricte): 372
Tokens correctement prédits (1ère position, avec adaptation): 388
Tokens correctement prédits (top 10): 861
Précision stricte (1ère position): 24.93%
Précision adaptée (1ère position): 26.01%
Précision (top 10): 57.71%
================================================================================
