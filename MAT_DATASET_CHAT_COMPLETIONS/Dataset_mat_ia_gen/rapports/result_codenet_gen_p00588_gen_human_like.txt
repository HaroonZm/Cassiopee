================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve():
    import sys
    input = sys.stdin.readline

    T = int(input())
    for _ in range(T):
        N = int(input())
        books = input().strip()

        # shelves are numbered 1 to 4N
        # We want to find minimal cost path starting from position 0,
        # to putting all books with ID = shelf number that have Y.

        # Model:
        # There are N+1 sub passages numbered 0 to N (vertical)
        # There are 4 horizontal shelves arranged in 4 rows:
        # shelf number s corresponds to (row, col):
        # row = (s-1)//N (0..3)
        # col = (s-1)%N (0..N-1)
        #
        # Positions she can stop:
        # - intersections of passages: (row, col) where row in 0..3, col in 0..N
        #   but walking allowed only forward on main passages:
        #   Main passages: horizontal rows 0..3 have directional edges from col to col+1
        # - middle of shelves, which are positions between intersections:
        #   At (row, col+0.5) between (row, col) and (row, col+1)
        #
        # Start position: intersection at (0,0) (white circle)
        # End position: intersection at (3,N) (black circle)

        # She can move on main passages only forward (left to right) intersections
        # Walking from intersection to adjacent intersection cost =1
        # Walking from intersection to middle of shelf or vice versa =0.5

        # She must put books at shelves with Y.
        # Putting a book at shelf s means stopping at middle of shelf s at least once.
        #
        # Objective: minimal total cost to put all books and move from start to end.

        # Observation:
        # Since moving backward is forbidden on main passages, path is essentially from col=0 to col=N.
        #
        # She can move up/down between main passages only at shelves middle?
        # No vertical movement between rows is not allowed directly.
        #
        # But problem mentions only forward walking on main passages.
        # Vertical movement allowed only at intersections or shelves middle?
        #
        # Actually, problem states she can only stop at intersections or shelf middles.
        # The vertical movement is not described explicitly,
        # but because shelves are stacked vertically and passages horizontal and vertical,
        # we can represent as a grid with edges:
        #
        # Vertical edges: moves between rows at same col position (intersection to intersection or middle to middle).
        #
        # At intersection, she can move vertically up/down with cost 1.
        #
        # At shelf middle, vertical movement is not explicitly forbidden, so maybe also cost 1?
        #
        # Because it's not stated forbidden, we assume vertical edges between same col intersection rows exist with cost 1.
        #
        # So model the grid nodes as:
        # For each col (0 to N)
        # For each row (0 to 3)
        # nodes:
        #   intersection (r,c)
        #
        # For each col (0 to N-1)
        # For each row (0 to 3)
        # nodes:
        #   middle (r, c+0.5)

        # Moves allowed:
        # - intersection(r,c) <-> middle(r, c+0.5) cost 0.5
        # - intersection(r,c) <-> intersection(r,c+1) cost 1 (only forward)
        # - intersection(r,c) <-> intersection(r+1,c) cost 1 if 0 <= r+1 <= 3 (vertical movement)
        # Similar vertical at intersection up/down allowed.

        # We want to find minimal cost path from start = intersection(0,0)
        # to end = intersection(3,N)
        # passing through all shelf middles where books exist.

        # The best way is to find minimal path visiting required nodes (all shelf middles with books).
        # Since N can be large, no TSP approach possible.

        # Note: Because forward walking only on main passages,
        # horizontal movement only allowed left->right on intersections

        # Plan:
        # Since shelves are divided in 4 rows and N columns,
        # and movement only forward horizontally (from col to col+1),
        # and vertical movement between rows allowed at each col with cost 1,
        #
        # The problem reduces to:
        #
        # At each column c (0..N):
        #    She can move vertically along intersections between rows (cost 1 each step)
        #
        # Moving from col c to c+1 on same row cost 1
        #
        # To put a book at shelf s = (r, c), she must stop at middle(r, c+0.5)
        #
        # She can move at middle nodes only between intersections to put books,
        # cost 0.5 step to/from middle.

        # So to put required books, at each column c, some set of rows (0..3) will have shelves with books.
        # To put those, she must at that column stop at middle of shelf.
        #
        # So the minimal cost is:
        #
        # Walking from start intersection(0,0),
        # For each column from 0 to N-1:
        #   Move in current column intersection rows to visits all required middles.
        #   Put books at these middles (cost 0.5 + 0.5 per shelf for going to and from middle)
        #   Then move right to next column intersections (cost 1) on some row.
        #
        # Finally, reach intersection(3,N)

        # Because vertical movement on intersections costs 1 per row visited,
        # to visit all required books in that column, best is to walk minimal vertical path covering all rows with books.

        # So at each column c, find minimal cost to cover all rows with books at column c:
        # That means:
        # - Start at some row at column c (the row chosen by previous step)
        # - visit all rows that have books (put books in their middle)
        # - end at some row at column c to move to next column

        # We can do DP over columns and possible rows at intersection:
        # dp[c][r] = minimal cost to be at intersection (r,c) after handling column c

        # Initialization: dp[0][0] = 0 (start at intersection(0,0))
        # others dp[0][r] = INF

        # Transition from dp[c][r1] to dp[c+1][r2]:
        # At column c, must visit all book rows:
        # - Cost to vertically move from r1 to cover all book rows at col c and end at temp row r3
        #   plus cost of putting books (0.5 * 2 per book) = 1 per book.
        #
        # vertical path to cover rows with books at col c:
        #
        # As vertical movement costs 1 per step,
        # minimal path covering rows = minimal vertical path starting at r1, visiting all book rows to end at r3.

        # Because rows are line 0..3,
        # minimal vertical path visiting all rows in set S of rows with books is:
        #
        # The vertical path must start at r1, visit all rows in S, and end at r3.
        #
        # The minimal cost vertical path visiting all rows in S starting at r1 and ending at r3 will be:
        #
        # med = min(S), mid = max(S)
        # The path covers from med to mid inclusive
        #
        # vertical distance is abs(r1 - med) + (mid - med) + abs(r3 - mid)
        #
        # But we can swap med and mid depending on order.
        #
        # We try both orders:
        # 1) up to med first then down to mid:
        # cost1 = abs(r1 - med) + (mid - med) + abs(r3 - mid)
        # 2) up to mid first then down to med:
        # cost2 = abs(r1 - mid) + (mid - med) + abs(r3 - med)
        #
        # minimal vertical cost = min(cost1, cost2)
        #
        # Adding putting books cost: number of books at col c
        #
        # Then moving horizontally from col c intersection r3 to col c+1 intersection r2 cost=1 if r3 == r2 else infinite
        #
        # Because horizontal move allowed only forward along main passages:
        # on same row only (move from (r, c) to (r, c+1)) cost 1
        #
        # So dp transition only possible if r3 == r2, so let's rename r3 to r2, intersection at col c+1.

        # So:
        # dp[c+1][r2] = min over r1 dp[c][r1] + vertical_path_cost(r1, r2, rows_with_books_c) + num_books_c + 1

        INF = 10**9

        # Extract rows with books at each column:
        rows_with_books_cols = [[] for _ in range(N)]
        for s in range(4 * N):
            if books[s] == 'Y':
                r = s // N
                c = s % N
                rows_with_books_cols[c].append(r)

        dp = [INF] * 4
        dp[0] = 0  # start at intersection (0,0)

        for c in range(N):
            next_dp = [INF] * 4
            b_rows = sorted(rows_with_books_cols[c])
            if not b_rows:
                # no books at this column, just move horizontally to next column
                for r in range(4):
                    if dp[r] == INF:
                        continue
                    # move horizontally on same row
                    # cost horizontal = 1
                    next_dp[r] = min(next_dp[r], dp[r] + 1)
            else:
                med = b_rows[0]
                mid = b_rows[-1]
                num_books = len(b_rows)
                for r1 in range(4):  # start row at col c intersection
                    if dp[r1] == INF:
                        continue
                    for r2 in range(4):  # end row at col c intersection (must match next col start)
                        # two possible vertical path costs
                        cost1 = abs(r1 - med) + (mid - med) + abs(r2 - mid)
                        cost2 = abs(r1 - mid) + (mid - med) + abs(r2 - med)
                        vertical = min(cost1, cost2)
                        # plus putting books cost = 1 per book (0.5 to middle, 0.5 back)
                        total_col_cost = vertical + num_books
                        # plus horizontal move to next col on same row r2 cost 1
                        total_cost = dp[r1] + total_col_cost + 1
                        if next_dp[r2] > total_cost:
                            next_dp[r2] = total_cost
            dp = next_dp

        # end position is intersection (3,N)
        print(int(dp[3]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.460660845041275
    2. '```' → logprob: -1.8356608152389526
    3. '\n' → logprob: -2.085660934448242
    4. '   ' → logprob: -3.085660934448242
    5. ':' → logprob: -3.585660934448242
    6. '    
' → logprob: -5.585660934448242
    7. 'newline' → logprob: -7.210660934448242
    8. ' 
' → logprob: -7.460660934448242
    9. '    ' → logprob: -7.460660934448242
    10. ''' → logprob: -7.585660934448242

Token 4: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1526806354522705
    2. 'n' → logprob: -1.5276806354522705
    3. '\n' → logprob: -2.0276806354522705
    4. 'x' → logprob: -2.6526806354522705
    5. '\' → logprob: -2.7776806354522705
    6. '```' → logprob: -2.9026806354522705
    7. 'a' → logprob: -3.1526806354522705
    8. ' ' → logprob: -3.6526806354522705
    9. '    ' → logprob: -3.7776806354522705
    10. 'i' → logprob: -5.027680397033691

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0032283368054777384
    2. ' math' → logprob: -5.753228187561035
    3. 'sys' → logprob: -10.503228187561035
    4. ' itertools' → logprob: -11.253228187561035
    5. '=sys' → logprob: -12.753228187561035
    6. ' collections' → logprob: -13.253228187561035
    7. ' os' → logprob: -13.378228187561035
    8. ' numpy' → logprob: -13.753228187561035
    9. ' ' → logprob: -14.003228187561035
    10. ' sym' → logprob: -14.003228187561035

Token 6: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20832671225070953
    2. '.readline' → logprob: -2.708326816558838
    3. '\' → logprob: -2.833326816558838
    4. 'newline' → logprob: -4.083326816558838
    5. '```' → logprob: -4.958326816558838
    6. '.' → logprob: -4.958326816558838
    7. '<|end|>' → logprob: -5.083326816558838
    8. '
' → logprob: -5.208326816558838
    9. '[' → logprob: -5.708326816558838
    10. 'import' → logprob: -5.833326816558838

Token 7: '   ' (ID: 271)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.3551108837127686
    2. '```' → logprob: -1.6051108837127686
    3. '\n' → logprob: -1.8551108837127686
    4. '   ' → logprob: -1.8551108837127686
    5. '.' → logprob: -2.3551108837127686
    6. '\' → logprob: -2.8551108837127686
    7. '.stdin' → logprob: -4.230111122131348
    8. 'newline' → logprob: -4.355111122131348
    9. 'import' → logprob: -5.105111122131348
    10. '.stdout' → logprob: -5.230111122131348

Token 8: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1267334222793579
    2. '\n' → logprob: -3.1267333030700684
    3. 'n' → logprob: -4.501733303070068
    4. 'input' (adapté à ' input') → logprob: -4.626733303070068
    5. '```' → logprob: -4.751733303070068
    6. '    ' → logprob: -5.001733303070068
    7. 'newline' → logprob: -5.126733303070068
    8. '.readline' → logprob: -5.251733303070068
    9. 'data' → logprob: -5.501733303070068
    10. '[' → logprob: -5.626733303070068

Token 9: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16353517770767212
    2. '(' → logprob: -1.9135351181030273
    3. '.readline' → logprob: -6.663535118103027
    4. ')' → logprob: -7.038535118103027
    5. '()' → logprob: -7.788535118103027
    6. '<|end|>' → logprob: -8.788535118103027
    7. '[' → logprob: -9.288535118103027
    8. '<|end|>' → logprob: -9.538535118103027
    9. '```' → logprob: -10.038535118103027
    10. '(.)' → logprob: -10.163535118103027

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.006721298210322857
    2. 'sys' → logprob: -5.006721496582031
    3. '	sys' → logprob: -12.631721496582031
    4. '=sys' → logprob: -13.006721496582031
    5. '(sys' → logprob: -15.006721496582031
    6. ' input' → logprob: -17.13172149658203
    7. ' ' → logprob: -17.38172149658203
    8. 'input' → logprob: -17.38172149658203
    9. '_sys' → logprob: -19.38172149658203
    10. '.sys' → logprob: -19.50672149658203

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016324084252119064
    2. '.readline' → logprob: -4.141324043273926
    3. '[' → logprob: -9.266324043273926
    4. '.read' → logprob: -9.516324043273926
    5. ' .' → logprob: -11.016324043273926
    6. '.get' → logprob: -11.516324043273926
    7. '.stdin' → logprob: -11.516324043273926
    8. '.setdefault' → logprob: -11.516324043273926
    9. '.​' → logprob: -11.766324043273926
    10. '.[' → logprob: -12.266324043273926

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001183204003609717
    2. '.read' → logprob: -6.751183032989502
    3. 'read' → logprob: -11.75118350982666
    4. '.' → logprob: -12.75118350982666
    5. '.readlines' → logprob: -13.12618350982666
    6. '.buffer' → logprob: -16.001182556152344
    7. ' readline' → logprob: -17.126182556152344
    8. '.Read' → logprob: -17.251182556152344
    9. '```' → logprob: -18.001182556152344
    10. '_read' → logprob: -18.001182556152344

Token 13: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04727131128311157
    2. '()
' → logprob: -3.547271251678467
    3. '(' → logprob: -4.172271251678467
    4. '()\' → logprob: -7.547271251678467
    5. '   ' → logprob: -7.797271251678467
    6. '(
' → logprob: -8.047271728515625
    7. '\n' → logprob: -8.422271728515625
    8. '()

' → logprob: -8.922271728515625
    9. ' ()' → logprob: -9.172271728515625
    10. '
' → logprob: -9.922271728515625

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6231455206871033
    2. 'n' → logprob: -0.8731455206871033
    3. '(' → logprob: -3.498145580291748
    4. '(n' → logprob: -5.123145580291748
    5. 'x' → logprob: -5.373145580291748
    6. ' n' → logprob: -6.998145580291748
    7. 'a' → logprob: -6.998145580291748
    8. 'd' → logprob: -7.248145580291748
    9. '()' → logprob: -7.498145580291748
    10. 't' → logprob: -7.498145580291748

Token 15: ' T' (ID: 353)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004193198401480913
    2. 't' → logprob: -5.504193305969238
    3. 'N' → logprob: -10.004193305969238
    4. 'x' → logprob: -10.504193305969238
    5. 'T' (adapté à ' T') → logprob: -10.879193305969238
    6. '   ' → logprob: -11.754193305969238
    7. 'a' → logprob: -12.129193305969238
    8. 'd' → logprob: -12.379193305969238
    9. 'q' → logprob: -13.129193305969238
    10. 'data' → logprob: -13.379193305969238

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.550597608089447
    2. '=' → logprob: -1.0505976676940918
    3. ' ' → logprob: -3.425597667694092
    4. '[' → logprob: -3.925597667694092
    5. '  ' → logprob: -4.550597667694092
    6. ')' → logprob: -6.050597667694092
    7. '<|end|>' → logprob: -6.675597667694092
    8. '(' → logprob: -6.800597667694092
    9. '   ' → logprob: -7.175597667694092
    10. '    ' → logprob: -7.175597667694092

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.002572448458522558
    2. 'int' → logprob: -6.002572536468506
    3. ' ' → logprob: -9.252572059631348
    4. '=int' → logprob: -14.127572059631348
    5. '  ' → logprob: -16.627573013305664
    6. '(int' → logprob: -16.752573013305664
    7. ' input' → logprob: -17.002573013305664
    8. '	int' → logprob: -17.377573013305664
    9. '<int' → logprob: -18.127573013305664
    10. ' i' → logprob: -18.377573013305664

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.313311904668808
    2. '(input' → logprob: -1.3133119344711304
    3. 'input' → logprob: -11.188311576843262
    4. ' (' → logprob: -11.438311576843262
    5. '('' → logprob: -11.438311576843262
    6. '(user' → logprob: -12.813311576843262
    7. '(
' → logprob: -12.938311576843262
    8. '(sys' → logprob: -12.938311576843262
    9. '()' → logprob: -13.688311576843262
    10. '(in' → logprob: -14.313311576843262

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12705452740192413
    2. '()' → logprob: -2.127054452896118
    3. ')' → logprob: -9.252054214477539
    4. ' ())' → logprob: -11.502054214477539
    5. '(' → logprob: -11.752054214477539
    6. '()))' → logprob: -12.252054214477539
    7. '().' → logprob: -12.627054214477539
    8. '();)' → logprob: -13.377054214477539
    9. '())
' → logprob: -14.002054214477539
    10. '()
' → logprob: -14.252054214477539

Token 20: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1067004203796387
    2. '<|end|>' → logprob: -1.3567004203796387
    3. '
' → logprob: -1.8567004203796387
    4. '   ' → logprob: -2.6067004203796387
    5. '\' → logprob: -2.7317004203796387
    6. 'for' → logprob: -3.3567004203796387
    7. ' for' → logprob: -4.106700420379639
    8. '    
' → logprob: -4.356700420379639
    9. ' 
' → logprob: -4.606700420379639
    10. '\r' → logprob: -4.606700420379639

Token 21: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3646613657474518
    2. '\n' → logprob: -1.6146613359451294
    3. ' for' → logprob: -3.239661455154419
    4. '
' → logprob: -3.739661455154419
    5. '\' → logprob: -3.989661455154419
    6. '   ' → logprob: -4.23966121673584
    7. '\r' → logprob: -5.73966121673584
    8. '<|end|>' → logprob: -6.23966121673584
    9. '```' → logprob: -6.73966121673584
    10. '' → logprob: -7.23966121673584

Token 22: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007519907783716917
    2. ' i' → logprob: -5.507519721984863
    3. '  ' → logprob: -5.882519721984863
    4. ' T' → logprob: -7.757519721984863
    5. ' _' → logprob: -9.507519721984863
    6. ' ' → logprob: -10.257519721984863
    7. ' ‌' → logprob: -10.507519721984863
    8. ' ​' → logprob: -10.757519721984863
    9. ' space' → logprob: -11.257519721984863
    10. ' ▁' → logprob: -11.257519721984863

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14272858202457428
    2. 'in' → logprob: -2.017728567123413
    3. '	in' → logprob: -10.767728805541992
    4. 'range' → logprob: -11.642728805541992
    5. ' ' → logprob: -12.267728805541992
    6. '  ' → logprob: -12.517728805541992
    7. 'import' → logprob: -12.642728805541992
    8. ' i' → logprob: -12.892728805541992
    9. 'i' → logprob: -13.142728805541992
    10. '```' → logprob: -13.267728805541992

Token 24: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47407984733581543
    2. 'range' → logprob: -0.9740798473358154
    3. '(range' → logprob: -13.974080085754395
    4. ' xrange' → logprob: -13.974080085754395
    5. 'rang' → logprob: -15.349080085754395
    6. '	range' → logprob: -15.349080085754395
    7. ' ' → logprob: -15.599080085754395
    8. 'ran' → logprob: -15.974080085754395
    9. ' ran' → logprob: -16.224079132080078
    10. 'put' → logprob: -16.974079132080078

Token 25: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07009248435497284
    2. ' (' → logprob: -2.6950924396514893
    3. ' T' → logprob: -10.07009220123291
    4. ' )' → logprob: -10.07009220123291
    5. '(T' → logprob: -10.19509220123291
    6. ' ' → logprob: -11.69509220123291
    7. '(range' → logprob: -11.69509220123291
    8. ')' → logprob: -12.19509220123291
    9. ' ()' → logprob: -12.82009220123291
    10. '(n' → logprob: -13.07009220123291

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005444585811346769
    2. ')' → logprob: -5.255444526672363
    3. ':' → logprob: -8.505444526672363
    4. ' ):' → logprob: -12.505444526672363
    5. '):
' → logprob: -12.880444526672363
    6. '():' → logprob: -14.005444526672363
    7. '   ' → logprob: -14.005444526672363
    8. ' )' → logprob: -15.880444526672363
    9. ' ' → logprob: -16.25544548034668
    10. ',' → logprob: -16.63044548034668

Token 27: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.730728030204773
    2. '       ' → logprob: -1.105728030204773
    3. '   ' → logprob: -1.980728030204773
    4. ' ' → logprob: -4.3557281494140625
    5. '    
' → logprob: -4.4807281494140625
    6. '        
' → logprob: -4.8557281494140625
    7. ' 
' → logprob: -4.9807281494140625
    8. '<|end|>' → logprob: -5.2307281494140625
    9. '     
' → logprob: -6.8557281494140625
    10. 'input' → logprob: -7.2307281494140625

Token 28: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.39695316553115845
    2. 'n' → logprob: -1.1469531059265137
    3. '   ' → logprob: -5.646953105926514
    4. '    ' → logprob: -6.271953105926514
    5. ' N' → logprob: -6.521953105926514
    6. 's' → logprob: -7.521953105926514
    7. ' s' → logprob: -7.771953105926514
    8. 'a' → logprob: -7.896953105926514
    9. ' line' → logprob: -8.271953582763672
    10. 'data' → logprob: -8.396953582763672

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025012439116835594
    2. '=' → logprob: -4.150012493133545
    3. ',' → logprob: -5.025012493133545
    4. ' ,' → logprob: -6.400012493133545
    5. ' ' → logprob: -8.025012016296387
    6. ')' → logprob: -8.400012016296387
    7. '<|end|>' → logprob: -10.525012016296387
    8. ' )' → logprob: -10.775012016296387
    9. '    ' → logprob: -10.900012016296387
    10. ' =)' → logprob: -11.150012016296387

Token 30: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.023247340694069862
    2. 'int' → logprob: -3.773247241973877
    3. '=int' → logprob: -13.398247718811035
    4. '<int' → logprob: -16.02324676513672
    5. '(int' → logprob: -16.89824676513672
    6. ' ' → logprob: -17.02324676513672
    7. '[int' → logprob: -17.14824676513672
    8. ' input' → logprob: -17.89824676513672
    9. '	int' → logprob: -18.27324676513672
    10. ',int' → logprob: -18.77324676513672

Token 31: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0009122979827225208
    2. '(' → logprob: -7.000912189483643
    3. ' (' → logprob: -14.7509126663208
    4. 'input' → logprob: -15.2509126663208
    5. ',input' → logprob: -17.125911712646484
    6. '=input' → logprob: -17.250911712646484
    7. '(
' → logprob: -17.625911712646484
    8. ' input' → logprob: -18.500911712646484
    9. '(inp' → logprob: -18.625911712646484
    10. '<input' → logprob: -18.625911712646484

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20372503995895386
    2. '()' → logprob: -1.7037250995635986
    3. ')' → logprob: -6.0787248611450195
    4. ' ())' → logprob: -12.07872486114502
    5. '())
' → logprob: -12.32872486114502
    6. '(' → logprob: -12.70372486114502
    7. '();)' → logprob: -13.70372486114502
    8. '().' → logprob: -13.70372486114502
    9. '()
' → logprob: -14.07872486114502
    10. '()))' → logprob: -14.82872486114502

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016946998657658696
    2. '        ' → logprob: -7.376694679260254
    3. ')' → logprob: -8.251694679260254
    4. '        
' → logprob: -8.751694679260254
    5. '<|end|>' → logprob: -8.751694679260254
    6. ' ' → logprob: -9.126694679260254
    7. '   ' → logprob: -9.626694679260254
    8. '    ' → logprob: -10.376694679260254
    9. 's' → logprob: -10.501694679260254
    10. '[' → logprob: -10.626694679260254

Token 34: ' books' (ID: 7187)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9275200366973877
    2. ' arr' → logprob: -1.6775200366973877
    3. ' numbers' → logprob: -1.9275200366973877
    4. '       ' → logprob: -2.3025200366973877
    5. ' A' → logprob: -2.9275200366973877
    6. 'A' → logprob: -3.6775200366973877
    7. 'a' → logprob: -3.9275200366973877
    8. ' a' → logprob: -4.177519798278809
    9. 'numbers' → logprob: -4.302519798278809
    10. ' data' → logprob: -4.802519798278809

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032805022783577442
    2. '=' → logprob: -6.1282806396484375
    3. '[' → logprob: -7.6282806396484375
    4. '.' → logprob: -8.628280639648438
    5. '_count' → logprob: -9.378280639648438
    6. '_' → logprob: -9.878280639648438
    7. ' ' → logprob: -10.128280639648438
    8. '    ' → logprob: -10.503280639648438
    9. '[:]' → logprob: -10.503280639648438
    10. ')' → logprob: -10.628280639648438

Token 36: ' input' (ID: 3422)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.44207218289375305
    2. ' []' → logprob: -1.1920721530914307
    3. '[]' → logprob: -3.8170721530914307
    4. 'list' → logprob: -3.8170721530914307
    5. ' [' → logprob: -4.69207239151001
    6. '[' → logprob: -8.317071914672852
    7. '[list' → logprob: -8.442071914672852
    8. ' ' → logprob: -10.317071914672852
    9. '[input' → logprob: -10.692071914672852
    10. ' input' → logprob: -11.067071914672852

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.38689881563186646
    2. '()' → logprob: -1.1368987560272217
    3. '(' → logprob: -11.3868989944458
    4. '())' → logprob: -11.5118989944458
    5. '()]' → logprob: -13.3868989944458
    6. ' ()' → logprob: -13.5118989944458
    7. '.strip' → logprob: -14.5118989944458
    8. ')' → logprob: -14.7618989944458
    9. '()

' → logprob: -14.7618989944458
    10. '()
' → logprob: -15.1368989944458

Token 38: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.38903287053108215
    2. 'split' → logprob: -1.1390328407287598
    3. 'rstrip' → logprob: -6.13903284072876
    4. 'rs' → logprob: -13.014033317565918
    5. ' split' → logprob: -15.639033317565918
    6. ' strip' → logprob: -16.3890323638916
    7. '```' → logprob: -18.2640323638916
    8. '(split' → logprob: -18.7640323638916
    9. 'spl' → logprob: -18.8890323638916
    10. '.strip' → logprob: -19.1390323638916

Token 39: '()

' (ID: 5874)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006745447404682636
    2. '()' → logprob: -5.006745338439941
    3. '(' → logprob: -11.006745338439941
    4. '('' → logprob: -11.631745338439941
    5. 'split' → logprob: -13.131745338439941
    6. '().'' → logprob: -13.631745338439941
    7. '()['' → logprob: -15.506745338439941
    8. '())' → logprob: -16.006746292114258
    9. '("("' → logprob: -16.381746292114258
    10. '('').' → logprob: -16.381746292114258

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038063984364271164
    2. '<|end|>' → logprob: -4.163064002990723
    3. '        
' → logprob: -5.038064002990723
    4. ')' → logprob: -5.538064002990723
    5. ' ' → logprob: -5.913064002990723
    6. '   ' → logprob: -6.163064002990723
    7. '.split' → logprob: -6.913064002990723
    8. '
' → logprob: -7.163064002990723
    9. '        ' → logprob: -7.288064002990723
    10. '[' → logprob: -7.413064002990723

Token 41: ' #' (ID: 1069)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.9624354243278503
    2. 'count' → logprob: -1.7124354839324951
    3. 'dp' → logprob: -1.8374354839324951
    4. 'counts' → logprob: -1.9624354839324951
    5. 'counter' → logprob: -3.587435483932495
    6. 'if' → logprob: -3.962435483932495
    7. 'pages' → logprob: -4.212435245513916
    8. '       ' → logprob: -4.587435245513916
    9. 'from' → logprob: -4.712435245513916
    10. 'cnt' → logprob: -4.962435245513916

Token 42: ' shelves' (ID: 52049)
  Prédit: ' freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' freq' → logprob: -1.5175729990005493
    2. 'count' → logprob: -2.1425728797912598
    3. 'freq' → logprob: -2.1425728797912598
    4. ' count' → logprob: -2.8925728797912598
    5. 'counts' → logprob: -2.8925728797912598
    6. ' #' → logprob: -3.0175728797912598
    7. 'c' → logprob: -3.1425728797912598
    8. '#' → logprob: -3.5175728797912598
    9. ' counts' → logprob: -3.6425728797912598
    10. ' frequency' → logprob: -3.7675728797912598

Token 43: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08175597339868546
    2. '=' → logprob: -2.5817558765411377
    3. '_' → logprob: -6.831756114959717
    4. '_count' → logprob: -7.081756114959717
    5. '_counts' → logprob: -7.956756114959717
    6. '=[]' → logprob: -8.831755638122559
    7. 's' → logprob: -8.956755638122559
    8. '_lengths' → logprob: -9.956755638122559
    9. '_s' → logprob: -10.206755638122559
    10. '_sizes' → logprob: -10.206755638122559

Token 44: ' numbered' (ID: 93194)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5548833608627319
    2. '[]' → logprob: -1.804883360862732
    3. ' [' → logprob: -1.929883360862732
    4. ' ['' → logprob: -2.8048834800720215
    5. '[' → logprob: -3.5548834800720215
    6. ' ' → logprob: -5.1798834800720215
    7. ' ["' → logprob: -5.3048834800720215
    8. '['' → logprob: -5.6798834800720215
    9. ' [[]' → logprob: -5.6798834800720215
    10. ' "' → logprob: -5.8048834800720215

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6078852415084839
    2. ' ' → logprob: -0.8578852415084839
    3. '[' → logprob: -4.232885360717773
    4. ' =' → logprob: -5.232885360717773
    5. ' from' → logprob: -5.732885360717773
    6. 'from' → logprob: -6.107885360717773
    7. '_' → logprob: -6.857885360717773
    8. ',' → logprob: -6.982885360717773
    9. '1' → logprob: -7.107885360717773
    10. ' ,' → logprob: -7.232885360717773

Token 46: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9973074793815613
    2. 'from' → logprob: -1.122307538986206
    3. ' from' → logprob: -1.747307538986206
    4. '1' → logprob: -2.622307538986206
    5. ' ' → logprob: -2.872307538986206
    6. 'starting' → logprob: -7.122307300567627
    7. ' starting' → logprob: -7.247307300567627
    8. ''' → logprob: -8.497307777404785
    9. '[' → logprob: -8.872307777404785
    10. '"' → logprob: -9.997307777404785

Token 47: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08416387438774109
    2. ',' → logprob: -3.4591639041900635
    3. '<|end|>' → logprob: -3.5841639041900635
    4. ' ,' → logprob: -4.709163665771484
    5. '-' → logprob: -5.959163665771484
    6. '0' → logprob: -6.084163665771484
    7. ' to' → logprob: -7.084163665771484
    8. '  ' → logprob: -7.334163665771484
    9. '    ' → logprob: -7.459163665771484
    10. '        ' → logprob: -7.459163665771484

Token 48: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01545749418437481
    2. ' N' → logprob: -4.515457630157471
    3. '3' → logprob: -6.015457630157471
    4. '2' → logprob: -7.390457630157471
    5. '10' → logprob: -8.140457153320312
    6. '4' → logprob: -8.765457153320312
    7. '5' → logprob: -8.765457153320312
    8. ' ' → logprob: -9.140457153320312
    9. '9' → logprob: -9.265457153320312
    10. '6' → logprob: -9.390457153320312

Token 49: '4' (ID: 19)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0020680641755461693
    2. '3' → logprob: -7.002068042755127
    3. '2' → logprob: -8.252068519592285
    4. ' N' → logprob: -8.377068519592285
    5. '10' → logprob: -8.502068519592285
    6. '5' → logprob: -9.252068519592285
    7. '4' → logprob: -9.377068519592285
    8. '9' → logprob: -9.627068519592285
    9. '6' → logprob: -10.127068519592285
    10. '7' → logprob: -10.127068519592285

Token 50: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.812370240688324
    2. '       ' → logprob: -1.1873703002929688
    3. '<|end|>' → logprob: -1.8123703002929688
    4. 's' → logprob: -3.6873703002929688
    5. '   ' → logprob: -4.687370300292969
    6. '        
' → logprob: -4.937370300292969
    7. ',' → logprob: -4.937370300292969
    8. ' ' → logprob: -5.312370300292969
    9. 'count' → logprob: -5.437370300292969
    10. '_' → logprob: -5.562370300292969

Token 51: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5873013138771057
    2. '<|end|>' → logprob: -0.9623013138771057
    3. '       ' → logprob: -4.087301254272461
    4. '<|end|>' → logprob: -4.712301254272461
    5. ',' → logprob: -5.212301254272461
    6. ' ' → logprob: -5.212301254272461
    7. '\n' → logprob: -5.462301254272461
    8. '   ' → logprob: -5.712301254272461
    9. '_' → logprob: -6.087301254272461
    10. '\' → logprob: -6.212301254272461

Token 52: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33879780769348145
    2. '<|end|>' → logprob: -2.0887978076934814
    3. '       ' → logprob: -2.7137978076934814
    4. ',' → logprob: -3.7137978076934814
    5. '   ' → logprob: -3.9637978076934814
    6. ' ' → logprob: -4.838797569274902
    7. ')' → logprob: -4.963797569274902
    8. '\n' → logprob: -5.213797569274902
    9. 's' → logprob: -5.588797569274902
    10. '.' → logprob: -5.713797569274902

Token 53: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9759896397590637
    2. 'dp' → logprob: -2.350989580154419
    3. ' shelves' → logprob: -2.600989580154419
    4. 'count' → logprob: -2.850989580154419
    5. 'positions' → logprob: -3.100989580154419
    6. '_' → logprob: -3.475989580154419
    7. '   ' → logprob: -3.475989580154419
    8. ' counts' → logprob: -3.475989580154419
    9. ' positions' → logprob: -3.600989580154419
    10. ' dp' → logprob: -3.725989580154419

Token 54: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.06190824508667
    2. 's' → logprob: -1.56190824508667
    3. ' dp' → logprob: -2.56190824508667
    4. ' shelves' → logprob: -2.56190824508667
    5. 'counts' → logprob: -3.43690824508667
    6. 'count' → logprob: -3.56190824508667
    7. ' counts' → logprob: -3.81190824508667
    8. 'positions' → logprob: -3.93690824508667
    9. ' positions' → logprob: -4.31190824508667
    10. ' shelf' → logprob: -4.68690824508667

Token 55: ' want' (ID: 1682)
  Prédit: ' want'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.35360193252563477
    2. ' need' → logprob: -2.8536019325256348
    3. ''ll' → logprob: -2.8536019325256348
    4. ''' → logprob: -3.1036019325256348
    5. ' ' → logprob: -3.4786019325256348
    6. ''re' → logprob: -3.4786019325256348
    7. 'need' → logprob: -4.353601932525635
    8. ' =' → logprob: -4.728601932525635
    9. 'want' → logprob: -4.978601932525635
    10. '.' → logprob: -5.103601932525635

Token 56: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06255730986595154
    2. 'to' → logprob: -2.8125572204589844
    3. '   ' → logprob: -8.687557220458984
    4. ' a' → logprob: -9.062557220458984
    5. '    ' → logprob: -9.187557220458984
    6. ' ' → logprob: -9.437557220458984
    7. ' the' → logprob: -9.937557220458984
    8. 's' → logprob: -11.312557220458984
    9. '  ' → logprob: -11.562557220458984
    10. ' books' → logprob: -11.687557220458984

Token 57: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5801974534988403
    2. ' find' → logprob: -2.330197334289551
    3. 'place' → logprob: -2.330197334289551
    4. 'count' → logprob: -2.955197334289551
    5. ' place' → logprob: -3.205197334289551
    6. 'maximize' → logprob: -3.580197334289551
    7. 'min' → logprob: -3.705197334289551
    8. ' minimize' → logprob: -4.455197334289551
    9. ' count' → logprob: -4.580197334289551
    10. 'assign' → logprob: -4.830197334289551

Token 58: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.037984106689691544
    2. 'the' → logprob: -3.9129841327667236
    3. ' a' → logprob: -4.2879838943481445
    4. ' ' → logprob: -6.9129838943481445
    5. ' an' → logprob: -7.9129838943481445
    6. 'a' → logprob: -8.037983894348145
    7. ' four' → logprob: -8.037983894348145
    8. '"' → logprob: -8.662983894348145
    9. ''' → logprob: -8.912983894348145
    10. '<|end|>' → logprob: -8.912983894348145

Token 59: ' cost' (ID: 3097)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0561497211456299
    2. ' ' → logprob: -1.3061497211456299
    3. ' number' → logprob: -2.05614972114563
    4. ' distance' → logprob: -2.30614972114563
    5. ' _' → logprob: -2.93114972114563
    6. 'distance' → logprob: -3.30614972114563
    7. ' space' → logprob: -4.431149482727051
    8. '_distance' → logprob: -4.431149482727051
    9. ' cost' → logprob: -4.806149482727051
    10. ' "' → logprob: -5.431149482727051

Token 60: ' path' (ID: 3104)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1988517045974731
    2. ' ' → logprob: -1.4488517045974731
    3. ' =' → logprob: -1.9488517045974731
    4. '<|end|>' → logprob: -2.4488515853881836
    5. '       ' → logprob: -2.9488515853881836
    6. ' for' → logprob: -3.1988515853881836
    7. '(' → logprob: -3.5738515853881836
    8. '    ' → logprob: -4.198851585388184
    9. 'def' → logprob: -4.573851585388184
    10. ',' → logprob: -4.698851585388184

Token 61: ' starting' (ID: 8601)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.501861572265625
    2. 'from' → logprob: -1.001861572265625
    3. ' at' → logprob: -3.751861572265625
    4. ' with' → logprob: -6.501861572265625
    5. ' and' → logprob: -6.626861572265625
    6. 'at' → logprob: -7.626861572265625
    7. 'with' → logprob: -8.376861572265625
    8. 'and' → logprob: -9.126861572265625
    9. '<|end|>' → logprob: -9.626861572265625
    10. ' in' → logprob: -10.126861572265625

Token 63: ' position' (ID: 4010)
  Prédit: ' shelf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -0.19005247950553894
    2. ' ' → logprob: -2.3150525093078613
    3. 's' → logprob: -3.4400525093078613
    4. ' bookshelf' → logprob: -4.065052509307861
    5. '1' → logprob: -4.565052509307861
    6. ' the' → logprob: -5.440052509307861
    7. ' position' → logprob: -5.690052509307861
    8. '0' → logprob: -5.940052509307861
    9. ' shelves' → logprob: -7.315052509307861
    10. ' shel' → logprob: -7.440052509307861

Token 64: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26255062222480774
    2. '1' → logprob: -1.6375505924224854
    3. '0' → logprob: -3.3875505924224854
    4. '4' → logprob: -6.8875508308410645
    5. 's' → logprob: -7.0125508308410645
    6. '`' → logprob: -8.262550354003906
    7. ' `' → logprob: -8.762550354003906
    8. '2' → logprob: -9.387550354003906
    9. ' s' → logprob: -10.512550354003906
    10. ' =' → logprob: -10.512550354003906

Token 65: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12525226175785065
    2. ' ' → logprob: -2.6252522468566895
    3. '0' → logprob: -3.1252522468566895
    4. '4' → logprob: -7.3752522468566895
    5. ''' → logprob: -8.625252723693848
    6. '`' → logprob: -8.875252723693848
    7. '2' → logprob: -8.875252723693848
    8. 's' → logprob: -9.750252723693848
    9. '(' → logprob: -9.875252723693848
    10. ' '' → logprob: -10.000252723693848

Token 66: ',
' (ID: 412)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8383166193962097
    2. ',' → logprob: -1.5883166790008545
    3. '       ' → logprob: -1.8383166790008545
    4. ':' → logprob: -2.8383166790008545
    5. '   ' → logprob: -2.8383166790008545
    6. '<|end|>' → logprob: -3.4633166790008545
    7. '    ' → logprob: -4.088316440582275
    8. ' ,' → logprob: -4.588316440582275
    9. '.' → logprob: -4.838316440582275
    10. ' :' → logprob: -5.838316440582275

Token 67: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05183038115501404
    2. '<|end|>' → logprob: -3.551830291748047
    3. '0' → logprob: -5.301830291748047
    4. ' and' → logprob: -5.551830291748047
    5. ' ,' → logprob: -6.051830291748047
    6. ',' → logprob: -6.176830291748047
    7. ' to' → logprob: -6.676830291748047
    8. ' going' → logprob: -6.926830291748047
    9. ' with' → logprob: -7.051830291748047
    10. 's' → logprob: -7.051830291748047

Token 68: ' #' (ID: 1069)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.185707688331604
    2. ' ' → logprob: -1.685707688331604
    3. '0' → logprob: -2.3107075691223145
    4. ' with' → logprob: -2.4357075691223145
    5. ' going' → logprob: -3.1857075691223145
    6. ' ending' → logprob: -3.1857075691223145
    7. ' to' → logprob: -3.3107075691223145
    8. '       ' → logprob: -3.6857075691223145
    9. '1' → logprob: -3.9357075691223145
    10. 'and' → logprob: -4.1857075691223145

Token 69: ' to' (ID: 316)
  Prédit: ' moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moving' → logprob: -0.7373496890068054
    2. ' ending' → logprob: -1.9873497486114502
    3. ' visiting' → logprob: -2.11234974861145
    4. ' going' → logprob: -2.48734974861145
    5. ' and' → logprob: -3.36234974861145
    6. ' travers' → logprob: -3.86234974861145
    7. ' then' → logprob: -4.237349510192871
    8. '0' → logprob: -4.237349510192871
    9. ' traveling' → logprob: -4.612349510192871
    10. ' to' → logprob: -4.612349510192871

Token 70: ' putting' (ID: 16019)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -1.141814112663269
    2. ' reach' → logprob: -1.141814112663269
    3. ' visit' → logprob: -2.0168142318725586
    4. ' collect' → logprob: -2.6418142318725586
    5. ' cover' → logprob: -3.1418142318725586
    6. ' the' → logprob: -3.7668142318725586
    7. ' ' → logprob: -4.641814231872559
    8. 'position' → logprob: -4.766814231872559
    9. 'reach' → logprob: -4.891814231872559
    10. ' a' → logprob: -5.016814231872559

Token 71: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.1655595749616623
    2. 'all' → logprob: -2.9155595302581787
    3. ' the' → logprob: -3.6655595302581787
    4. ' books' → logprob: -3.7905595302581787
    5. ' each' → logprob: -3.9155595302581787
    6. 'each' → logprob: -5.165559768676758
    7. 'the' → logprob: -5.290559768676758
    8. ' a' → logprob: -5.415559768676758
    9. ' down' → logprob: -5.790559768676758
    10. 'books' → logprob: -5.790559768676758

Token 72: ' books' (ID: 7187)
  Prédit: ' books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' books' → logprob: -0.13198748230934143
    2. 'books' → logprob: -2.5069875717163086
    3. ' the' → logprob: -3.5069875717163086
    4. ' shelves' → logprob: -5.381987571716309
    5. ' four' → logprob: -6.131987571716309
    6. ' ' → logprob: -6.256987571716309
    7. ' book' → logprob: -7.131987571716309
    8. 'the' → logprob: -7.256987571716309
    9. ' unique' → logprob: -8.256987571716309
    10. 'book' → logprob: -9.006987571716309

Token 73: ' with' (ID: 483)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10494796931743622
    2. '<|end|>' → logprob: -3.479948043823242
    3. ',' → logprob: -3.604948043823242
    4. ' ,' → logprob: -3.979948043823242
    5. '.' → logprob: -5.104948043823242
    6. ')' → logprob: -5.729948043823242
    7. ' in' → logprob: -6.229948043823242
    8. ' .' → logprob: -6.479948043823242
    9. ' )' → logprob: -6.604948043823242
    10. '  ' → logprob: -6.604948043823242

Token 74: ' ID' (ID: 4170)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -1.1472787857055664
    2. ' all' → logprob: -2.5222787857055664
    3. 'in' → logprob: -2.6472787857055664
    4. ' the' → logprob: -2.7722787857055664
    5. ' positions' → logprob: -2.7722787857055664
    6. ' minimal' → logprob: -3.3972787857055664
    7. ' indices' → logprob: -3.6472787857055664
    8. ' types' → logprob: -3.7722787857055664
    9. ' each' → logprob: -3.8972787857055664
    10. ' type' → logprob: -4.209778785705566

Token 75: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9319635629653931
    2. ' ' → logprob: -1.056963562965393
    3. ' in' → logprob: -2.3069634437561035
    4. '1' → logprob: -3.0569634437561035
    5. ' from' → logprob: -3.3069634437561035
    6. ' '' → logprob: -3.4319634437561035
    7. ''' → logprob: -4.8069634437561035
    8. 'from' → logprob: -4.8069634437561035
    9. '0' → logprob: -5.3069634437561035
    10. ''s' → logprob: -5.6819634437561035

Token 76: ' shelf' (ID: 40978)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14823724329471588
    2. '1' → logprob: -2.8982372283935547
    3. ' '' → logprob: -3.0232372283935547
    4. ' ' → logprob: -4.273237228393555
    5. '0' → logprob: -4.773237228393555
    6. '"' → logprob: -6.148237228393555
    7. ''A' → logprob: -6.273237228393555
    8. ''i' → logprob: -6.898237228393555
    9. '4' → logprob: -7.148237228393555
    10. ''a' → logprob: -7.148237228393555

Token 77: ' number' (ID: 2086)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4748404026031494
    2. '
' → logprob: -1.7248404026031494
    3. ':' → logprob: -3.0998404026031494
    4. '<|end|>' → logprob: -3.2248404026031494
    5. 's' → logprob: -3.5998404026031494
    6. '_' → logprob: -3.5998404026031494
    7. ',' → logprob: -4.47484016418457
    8. ' 
' → logprob: -4.72484016418457
    9. '\' → logprob: -5.22484016418457
    10. '.' → logprob: -5.34984016418457

Token 78: ' that' (ID: 484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22020837664604187
    2. '
' → logprob: -2.4702084064483643
    3. '<|end|>' → logprob: -2.9702084064483643
    4. 's' → logprob: -3.4702084064483643
    5. ')' → logprob: -5.095208168029785
    6. ' 
' → logprob: -5.345208168029785
    7. '4' → logprob: -5.845208168029785
    8. ':' → logprob: -5.970208168029785
    9. '   ' → logprob: -6.470208168029785
    10. ',' → logprob: -6.470208168029785

Token 79: ' have' (ID: 679)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0924452543258667
    2. ' appears' → logprob: -1.7174452543258667
    3. 'matches' → logprob: -2.0924453735351562
    4. ' matches' → logprob: -2.4674453735351562
    5. 's' → logprob: -3.0924453735351562
    6. 'is' → logprob: -3.2174453735351562
    7. ''s' → logprob: -4.092445373535156
    8. ' are' → logprob: -4.217445373535156
    9. 'appear' → logprob: -4.342445373535156
    10. ' match' → logprob: -4.342445373535156

Token 80: ' Y' (ID: 865)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4400973916053772
    2. ' been' → logprob: -1.9400973320007324
    3. ' to' → logprob: -2.5650973320007324
    4. 'not' → logprob: -2.6900973320007324
    5. 'to' → logprob: -4.065097332000732
    6. ' a' → logprob: -4.315097332000732
    7. 'been' → logprob: -4.315097332000732
    8. 'a' → logprob: -5.690097332000732
    9. ' the' → logprob: -5.940097332000732
    10. 'space' → logprob: -6.190097332000732

Token 81: '.

' (ID: 364)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.4631667137145996
    2. ' and' → logprob: -2.4631667137145996
    3. ' or' → logprob: -3.0881667137145996
    4. ' ' → logprob: -3.5881667137145996
    5. ' in' → logprob: -3.5881667137145996
    6. '=' → logprob: -3.8381667137145996
    7. ' =' → logprob: -3.8381667137145996
    8. ',' → logprob: -4.5881667137146
    9. 's' → logprob: -4.5881667137146
    10. ''' → logprob: -4.5881667137146

Token 82: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6858126521110535
    2. 's' → logprob: -1.6858127117156982
    3. '   ' → logprob: -2.8108127117156982
    4. ' 
' → logprob: -3.5608127117156982
    5. '    ' → logprob: -3.6858127117156982
    6. '#' (adapté à ' #') → logprob: -3.6858127117156982
    7. 'count' → logprob: -3.9358127117156982
    8. '        
' → logprob: -4.185812473297119
    9. ' #' → logprob: -4.185812473297119
    10. 'visited' → logprob: -4.435812473297119

Token 84: ' Model' (ID: 8186)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8956772685050964
    2. ' #' → logprob: -1.2706773281097412
    3. ' ' → logprob: -1.6456773281097412
    4. 's' → logprob: -3.395677328109741
    5. ' 
' → logprob: -4.145677089691162
    6. 'd' → logprob: -4.270677089691162
    7. '    ' → logprob: -4.895677089691162
    8. '   ' → logprob: -5.020677089691162
    9. 'n' → logprob: -5.395677089691162
    10. '       ' → logprob: -5.895677089691162

Token 85: ':
' (ID: 734)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0643789768218994
    2. ' =' → logprob: -1.3143789768218994
    3. 'ing' → logprob: -2.3143789768218994
    4. '<|end|>' → logprob: -2.5643789768218994
    5. '<|end|>' → logprob: -2.8143789768218994
    6. ':' → logprob: -3.0643789768218994
    7. ' ' → logprob: -4.18937873840332
    8. '#' → logprob: -4.31437873840332
    9. ' a' → logprob: -4.43937873840332
    10. 'the' → logprob: -4.68937873840332

Token 86: '       ' (ID: 309)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6129968166351318
    2. '       ' → logprob: -1.9879968166351318
    3. 'dp' → logprob: -2.362996816635132
    4. ' #' → logprob: -2.737996816635132
    5. ' graph' → logprob: -3.987996816635132
    6. ' distances' → logprob: -3.987996816635132
    7. ' from' → logprob: -4.112997055053711
    8. 'from' → logprob: -4.487997055053711
    9. '#' → logprob: -4.612997055053711
    10. ' distance' → logprob: -4.862997055053711

Token 87: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.5768585205078125
    2. ' dp' → logprob: -1.5768585205078125
    3. ' shelves' → logprob: -1.8268585205078125
    4. ' positions' → logprob: -2.4518585205078125
    5. ' cost' → logprob: -3.0768585205078125
    6. 'from' → logprob: -3.3268585205078125
    7. 's' → logprob: -3.4518585205078125
    8. ' #' → logprob: -3.4518585205078125
    9. 'positions' → logprob: -3.9518585205078125
    10. ' graph' → logprob: -4.0768585205078125

Token 88: ' There' (ID: 3274)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3958030939102173
    2. ' dp' → logprob: -1.6458030939102173
    3. 'from' → logprob: -2.1458029747009277
    4. ' shelves' → logprob: -2.3958029747009277
    5. '#' → logprob: -2.6458029747009277
    6. ' positions' → logprob: -3.0208029747009277
    7. ' #' → logprob: -3.3958029747009277
    8. ' from' → logprob: -3.3958029747009277
    9. 's' → logprob: -3.5208029747009277
    10. ' pass' → logprob: -4.145802974700928

Token 89: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4293222427368164
    2. ''s' → logprob: -1.3043222427368164
    3. ' is' → logprob: -2.8043222427368164
    4. ''' → logprob: -4.804322242736816
    5. ' ' → logprob: -5.304322242736816
    6. ' '' → logprob: -6.304322242736816
    7. 'are' → logprob: -7.554322242736816
    8. ' was' → logprob: -7.929322242736816
    9. '#' → logprob: -8.304322242736816
    10. 'is' → logprob: -8.929322242736816

Token 90: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04366983100771904
    2. '4' → logprob: -3.7936699390411377
    3. ' four' → logprob: -4.418669700622559
    4. ' multiple' → logprob: -6.168669700622559
    5. ' no' → logprob: -6.293669700622559
    6. ' at' → logprob: -6.918669700622559
    7. ' a' → logprob: -7.918669700622559
    8. ' positions' → logprob: -8.043669700622559
    9. ' two' → logprob: -8.168669700622559
    10. ' N' → logprob: -8.668669700622559

Token 91: '+' (ID: 10)
  Prédit: ' shelves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shelves' → logprob: -0.2984360456466675
    2. ' books' → logprob: -2.298436164855957
    3. ' *' → logprob: -3.298436164855957
    4. '*' → logprob: -3.423436164855957
    5. 's' → logprob: -4.173436164855957
    6. 'books' → logprob: -4.798436164855957
    7. ' positions' → logprob: -5.173436164855957
    8. ' levels' → logprob: -5.298436164855957
    9. ' ' → logprob: -5.423436164855957
    10. ' states' → logprob: -5.548436164855957

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11551417410373688
    2. '4' → logprob: -2.6155142784118652
    3. ' ' → logprob: -3.4905142784118652
    4. 'N' → logprob: -6.240514278411865
    5. '2' → logprob: -6.365514278411865
    6. ' N' → logprob: -7.365514278411865
    7. '3' → logprob: -8.365513801574707
    8. '0' → logprob: -8.740513801574707
    9. '5' → logprob: -8.740513801574707
    10. '   ' → logprob: -8.865513801574707

Token 93: ' sub' (ID: 1543)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -1.0916111469268799
    2. ' positions' → logprob: -1.0916111469268799
    3. ' shelves' → logprob: -1.3416111469268799
    4. 's' → logprob: -3.84161114692688
    5. 'states' → logprob: -4.591610908508301
    6. ' levels' → logprob: -5.216610908508301
    7. 'positions' → logprob: -5.216610908508301
    8. ' nodes' → logprob: -5.591610908508301
    9. ' layers' → logprob: -5.716610908508301
    10. ' shelf' → logprob: -6.091610908508301

Token 94: ' passages' (ID: 69047)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.9915531873703003
    2. 'sets' → logprob: -1.6165531873703003
    3. 's' → logprob: -1.9915531873703003
    4. 'graphs' → logprob: -2.36655330657959
    5. 'tasks' → logprob: -2.61655330657959
    6. 'pro' → logprob: -3.74155330657959
    7. 'se' → logprob: -3.99155330657959
    8. 'arrays' → logprob: -3.99155330657959
    9. ' states' → logprob: -4.36655330657959
    10. 'sections' → logprob: -4.61655330657959

Token 95: ' numbered' (ID: 93194)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5727118849754333
    2. '<|end|>' → logprob: -2.197711944580078
    3. ',' → logprob: -2.572711944580078
    4. '_' → logprob: -2.822711944580078
    5. 's' → logprob: -3.322711944580078
    6. ' ' → logprob: -3.447711944580078
    7. '[' → logprob: -3.697711944580078
    8. ')' → logprob: -3.822711944580078
    9. '<|end|>' → logprob: -3.822711944580078
    10. '       ' → logprob: -4.697711944580078

Token 96: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24343709647655487
    2. '0' → logprob: -1.6184370517730713
    3. ' from' → logprob: -4.11843729019165
    4. 'from' → logprob: -7.36843729019165
    5. '1' → logprob: -7.86843729019165
    6. '    ' → logprob: -9.368436813354492
    7. '  ' → logprob: -9.618436813354492
    8. ' to' → logprob: -9.868436813354492
    9. '   ' → logprob: -9.868436813354492
    10. ':' → logprob: -10.118436813354492

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048815932124853134
    2. ' ' → logprob: -3.548815965652466
    3. 'from' → logprob: -4.173815727233887
    4. ' from' → logprob: -5.673815727233887
    5. '1' → logprob: -10.548815727233887
    6. '```' → logprob: -11.298815727233887
    7. '[' → logprob: -12.673815727233887
    8. '   ' → logprob: -13.048815727233887
    9. '(' → logprob: -13.423815727233887
    10. '`' → logprob: -13.798815727233887

Token 98: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2354774922132492
    2. ' through' → logprob: -2.4854774475097656
    3. ',' → logprob: -2.9854774475097656
    4. ' ' → logprob: -3.7354774475097656
    5. '   ' → logprob: -4.485477447509766
    6. '<|end|>' → logprob: -4.485477447509766
    7. '0' → logprob: -5.110477447509766
    8. '...' → logprob: -5.235477447509766
    9. '<|end|>' → logprob: -5.735477447509766
    10. ' ,' → logprob: -5.860477447509766

Token 99: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04879208654165268
    2. ' N' → logprob: -3.0487921237945557
    3. '4' → logprob: -8.548791885375977
    4. ' ' → logprob: -11.548791885375977
    5. '2' → logprob: -14.173791885375977
    6. '	N' → logprob: -15.673791885375977
    7. '   ' → logprob: -16.298791885375977
    8. '1' → logprob: -16.423791885375977
    9. '
' → logprob: -16.548791885375977
    10. '3' → logprob: -16.798791885375977

Token 100: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7354480624198914
    2. '<|end|>' → logprob: -2.110448122024536
    3. ')' → logprob: -2.235448122024536
    4. '
' → logprob: -2.485448122024536
    5. '   ' → logprob: -2.860448122024536
    6. ' ' → logprob: -3.485448122024536
    7. ':' → logprob: -4.110447883605957
    8. '    ' → logprob: -4.110447883605957
    9. '<|end|>' → logprob: -4.110447883605957
    10. '        ' → logprob: -4.360447883605957

Token 101: 'vertical' (ID: 29475)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03682577237486839
    2. ' )' → logprob: -3.911825656890869
    3. ')
' → logprob: -4.286825656890869
    4. '),' → logprob: -6.536825656890869
    5. ' )
' → logprob: -7.786825656890869
    6. ').' → logprob: -9.411826133728027
    7. ',' → logprob: -9.536826133728027
    8. '   ' → logprob: -9.786826133728027
    9. ')

' → logprob: -10.161826133728027
    10. '):' → logprob: -10.286826133728027

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39181092381477356
    2. ' passages' → logprob: -1.8918108940124512
    3. ' )' → logprob: -2.141810894012451
    4. '   ' → logprob: -4.266810894012451
    5. 's' → logprob: -4.891810894012451
    6. ' positions' → logprob: -5.141810894012451
    7. ' lines' → logprob: -5.141810894012451
    8. ' and' → logprob: -5.266810894012451
    9. ',' → logprob: -5.641810894012451
    10. ' layers' → logprob: -5.766810894012451

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2612532377243042
    2. '<|end|>' → logprob: -1.8862532377243042
    3. ')' → logprob: -3.7612533569335938
    4. ' ' → logprob: -4.136253356933594
    5. ',' → logprob: -4.136253356933594
    6. '
' → logprob: -5.386253356933594
    7. '        
' → logprob: -5.386253356933594
    8. '        ' → logprob: -6.011253356933594
    9. '   ' → logprob: -6.011253356933594
    10. '    ' → logprob: -6.386253356933594

Token 104: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18654973804950714
    2. '<|end|>' → logprob: -2.561549663543701
    3. ' ' → logprob: -3.311549663543701
    4. '
' → logprob: -4.436549663543701
    5. ')' → logprob: -4.561549663543701
    6. '        ' → logprob: -4.811549663543701
    7. '        
' → logprob: -5.186549663543701
    8. ',' → logprob: -5.311549663543701
    9. '   ' → logprob: -5.436549663543701
    10. ' 
' → logprob: -6.186549663543701

Token 105: ' There' (ID: 3274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025162290781736374
    2. '   ' → logprob: -5.025162220001221
    3. ' for' → logprob: -5.150162220001221
    4. ' #' → logprob: -6.025162220001221
    5. '#' → logprob: -6.400162220001221
    6. '        ' → logprob: -6.775162220001221
    7. '
' → logprob: -7.025162220001221
    8. '        
' → logprob: -7.150162220001221
    9. 'for' → logprob: -7.275162220001221
    10. ' ' → logprob: -7.400162220001221

Token 106: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.10998088121414185
    2. ' =' → logprob: -2.984980821609497
    3. 'are' → logprob: -3.734980821609497
    4. '=' → logprob: -4.234981060028076
    5. ''s' → logprob: -4.984981060028076
    6. ' is' → logprob: -5.109981060028076
    7. ' ' → logprob: -7.109981060028076
    8. '   ' → logprob: -7.859981060028076
    9. ')' → logprob: -8.484980583190918
    10. 'is' → logprob: -8.984980583190918

Token 107: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2551731765270233
    2. '4' → logprob: -1.5051732063293457
    3. '2' → logprob: -6.130173206329346
    4. '3' → logprob: -8.005172729492188
    5. ' four' → logprob: -8.005172729492188
    6. '   ' → logprob: -8.255172729492188
    7. ' N' → logprob: -10.505172729492188
    8. ' ' → logprob: -10.755172729492188
    9. '    ' → logprob: -11.005172729492188
    10. '  ' → logprob: -11.005172729492188

Token 108: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6817135214805603
    2. '4' → logprob: -0.8067135214805603
    3. ' ' → logprob: -3.181713581085205
    4. 'N' → logprob: -5.556713581085205
    5. '(' → logprob: -6.806713581085205
    6. ' N' → logprob: -7.181713581085205
    7. '3' → logprob: -8.431713104248047
    8. ' (' → logprob: -9.056713104248047
    9. '1' → logprob: -9.181713104248047
    10. 'two' → logprob: -10.056713104248047

Token 109: ' horizontal' (ID: 25511)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.7546516060829163
    2. ' *' → logprob: -0.8796516060829163
    3. 'N' → logprob: -2.7546515464782715
    4. '*' → logprob: -3.6296515464782715
    5. ' passages' → logprob: -4.0046515464782715
    6. 's' → logprob: -6.3796515464782715
    7. ' ' → logprob: -6.8796515464782715
    8. ' N' → logprob: -7.0046515464782715
    9. '*s' → logprob: -7.0046515464782715
    10. '*n' → logprob: -7.7546515464782715

Token 110: ' shelves' (ID: 52049)
  Prédit: ' passages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passages' → logprob: -0.4030182659626007
    2. ' lines' → logprob: -1.5280182361602783
    3. 'pass' → logprob: -3.6530182361602783
    4. 's' → logprob: -3.7780182361602783
    5. ' passage' → logprob: -3.9030182361602783
    6. 'lines' → logprob: -4.528018474578857
    7. ' spaces' → logprob: -4.653018474578857
    8. ' corridors' → logprob: -5.153018474578857
    9. ' pass' → logprob: -5.653018474578857
    10. ' levels' → logprob: -5.903018474578857

Token 111: ' arranged' (ID: 36276)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3806464374065399
    2. 'in' → logprob: -1.3806464672088623
    3. ' horizontally' → logprob: -3.6306464672088623
    4. ' as' → logprob: -4.630646228790283
    5. ' vertically' → logprob: -4.880646228790283
    6. 'as' → logprob: -5.005646228790283
    7. 'vert' → logprob: -5.005646228790283
    8. 'h' → logprob: -5.880646228790283
    9. ' ' → logprob: -6.880646228790283
    10. ' around' → logprob: -6.880646228790283

Token 113: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.514098048210144
    2. ' a' → logprob: -1.139098048210144
    3. ' layers' → logprob: -4.139098167419434
    4. 'layers' → logprob: -4.264098167419434
    5. 'two' → logprob: -4.389098167419434
    6. '2' → logprob: -5.014098167419434
    7. ' two' → logprob: -5.139098167419434
    8. 'the' → logprob: -5.514098167419434
    9. ' ' → logprob: -5.514098167419434
    10. 'rows' → logprob: -5.639098167419434

Token 114: '4' (ID: 19)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5831040740013123
    2. ' a' → logprob: -1.708104133605957
    3. 'layers' → logprob: -2.458104133605957
    4. 'two' → logprob: -2.958104133605957
    5. ' layers' → logprob: -3.083104133605957
    6. '2' → logprob: -3.458104133605957
    7. ' two' → logprob: -4.083104133605957
    8. ' ' → logprob: -5.083104133605957
    9. 'rows' → logprob: -5.083104133605957
    10. 'lines' → logprob: -5.708104133605957

Token 115: ' rows' (ID: 13585)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.10927429795265198
    2. ' rows' → logprob: -3.109274387359619
    3. 'lines' → logprob: -3.359274387359619
    4. ' layers' → logprob: -4.234274387359619
    5. 'rows' → logprob: -5.609274387359619
    6. 'layers' → logprob: -5.859274387359619
    7. ' levels' → logprob: -6.234274387359619
    8. 'levels' → logprob: -7.234274387359619
    9. ' line' → logprob: -9.484273910522461
    10. ' arrays' → logprob: -9.859273910522461

Token 116: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10327871888875961
    2. '<|end|>' → logprob: -2.728278636932373
    3. '
' → logprob: -4.103278636932373
    4. '   ' → logprob: -5.353278636932373
    5. '        
' → logprob: -5.603278636932373
    6. '<|end|>' → logprob: -6.228278636932373
    7. ' ' → logprob: -6.353278636932373
    8. ')' → logprob: -7.103278636932373
    9. '        ' → logprob: -7.228278636932373
    10. ',' → logprob: -7.603278636932373

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36964505910873413
    2. ' ' → logprob: -1.869645118713379
    3. '    ' → logprob: -2.994645118713379
    4. '        ' → logprob: -3.244645118713379
    5. '   ' → logprob: -3.369645118713379
    6. '<|end|>' → logprob: -4.994645118713379
    7. '        
' → logprob: -5.244645118713379
    8. '4' → logprob: -5.619645118713379
    9. ' 
' → logprob: -5.744645118713379
    10. ')' → logprob: -5.994645118713379

Token 118: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28545811772346497
    2. '   ' → logprob: -2.5354580879211426
    3. '    ' → logprob: -2.7854580879211426
    4. ' ' → logprob: -3.0354580879211426
    5. '        ' → logprob: -3.1604580879211426
    6. '4' → logprob: -5.160458087921143
    7. '        
' → logprob: -6.535458087921143
    8. ')' → logprob: -6.910458087921143
    9. '0' → logprob: -6.910458087921143
    10. ' rows' → logprob: -7.035458087921143

Token 119: ' shelf' (ID: 40978)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rows' → logprob: -1.4364590644836426
    2. '    ' → logprob: -1.9364590644836426
    3. ' for' → logprob: -2.4364590644836426
    4. '   ' → logprob: -2.5614590644836426
    5. ' #' → logprob: -2.6864590644836426
    6. '       ' → logprob: -2.8114590644836426
    7. ' pass' → logprob: -3.1864590644836426
    8. '#' → logprob: -3.1864590644836426
    9. ' shelves' → logprob: -3.1864590644836426
    10. '        ' → logprob: -3.5614590644836426

Token 120: ' number' (ID: 2086)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05502671003341675
    2. ' =' → logprob: -3.6800267696380615
    3. '_' → logprob: -4.055026531219482
    4. '_positions' → logprob: -4.930026531219482
    5. '_num' → logprob: -7.680026531219482
    6. '_number' → logprob: -7.930026531219482
    7. '[' → logprob: -8.05502700805664
    8. '_rows' → logprob: -8.18002700805664
    9. ' ' → logprob: -8.30502700805664
    10. '0' → logprob: -8.30502700805664

Token 121: ' s' (ID: 265)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2002152055501938
    2. 's' → logprob: -1.950215220451355
    3. ' ' → logprob: -3.9502151012420654
    4. '=' → logprob: -4.0752153396606445
    5. '1' → logprob: -7.2002153396606445
    6. ',' → logprob: -7.9502153396606445
    7. '0' → logprob: -8.200215339660645
    8. ' s' → logprob: -8.325215339660645
    9. '<|end|>' → logprob: -8.450215339660645
    10. ')' → logprob: -9.075215339660645

Token 122: ' corresponds' (ID: 66938)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4113427400588989
    2. ' ' → logprob: -1.536342740058899
    3. '=' → logprob: -2.2863426208496094
    4. 's' → logprob: -4.411342620849609
    5. ')' → logprob: -6.411342620849609
    6. ' s' → logprob: -6.536342620849609
    7. ',' → logprob: -6.786342620849609
    8. ' //' → logprob: -7.536342620849609
    9. ':' → logprob: -7.786342620849609
    10. ' #' → logprob: -7.911342620849609

Token 123: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.189632847905159
    2. 'to' → logprob: -2.5646328926086426
    3. '<|end|>' → logprob: -2.5646328926086426
    4. '<|end|>' → logprob: -5.189632892608643
    5. '    ' → logprob: -5.814632892608643
    6. ' ' → logprob: -5.939632892608643
    7. 's' → logprob: -6.314632892608643
    8. ' =' → logprob: -6.689632892608643
    9. '_to' → logprob: -6.814632892608643
    10. '_' → logprob: -7.064632892608643

Token 124: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6277740597724915
    2. '4' → logprob: -1.7527740001678467
    3. ' s' → logprob: -2.5027740001678467
    4. 's' → logprob: -2.8777740001678467
    5. ' ' → logprob: -2.8777740001678467
    6. '(s' → logprob: -2.8777740001678467
    7. '(' → logprob: -3.5027740001678467
    8. '((' → logprob: -5.627774238586426
    9. '2' → logprob: -6.752774238586426
    10. ' ((' → logprob: -7.252774238586426

Token 125: 'row' (ID: 843)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6456870436668396
    2. ' (' → logprob: -1.5206871032714844
    3. '(s' → logprob: -1.7706871032714844
    4. ' s' → logprob: -2.6456871032714844
    5. '(' → logprob: -5.145687103271484
    6. '((' → logprob: -6.145687103271484
    7. '0' → logprob: -6.520687103271484
    8. '4' → logprob: -6.520687103271484
    9. '   ' → logprob: -6.645687103271484
    10. ' ' → logprob: -6.645687103271484

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061680134385824203
    2. ' ,' → logprob: -3.9366800785064697
    3. ' =' → logprob: -4.436680316925049
    4. '=' → logprob: -4.936680316925049
    5. 's' → logprob: -4.936680316925049
    6. '   ' → logprob: -6.061680316925049
    7. ' -' → logprob: -6.186680316925049
    8. ' ' → logprob: -6.561680316925049
    9. ')' → logprob: -6.561680316925049
    10. ' //' → logprob: -6.686680316925049

Token 127: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.9143739938735962
    2. ' s' → logprob: -1.5393739938735962
    3. ' column' → logprob: -2.0393738746643066
    4. 's' → logprob: -2.1643738746643066
    5. 'column' → logprob: -2.6643738746643066
    6. 'col' → logprob: -2.7893738746643066
    7. ' (' → logprob: -5.414373874664307
    8. '(s' → logprob: -6.289373874664307
    9. ' shelf' → logprob: -6.914373874664307
    10. ')' → logprob: -7.914373874664307

Token 128: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006276909727603197
    2. 's' → logprob: -6.256277084350586
    3. '[' → logprob: -6.256277084350586
    4. '   ' → logprob: -7.131277084350586
    5. '//' → logprob: -7.881277084350586
    6. ')
' → logprob: -8.006277084350586
    7. ' //' → logprob: -8.256277084350586
    8. ',' → logprob: -8.256277084350586
    9. ' ' → logprob: -9.881277084350586
    10. '[row' → logprob: -9.881277084350586

Token 129: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.084480419754982
    2. '(' → logprob: -3.2094805240631104
    3. '   ' → logprob: -4.709480285644531
    4. '(s' → logprob: -5.084480285644531
    5. ' ' → logprob: -5.209480285644531
    6. '<|end|>' → logprob: -5.584480285644531
    7. ' (
' → logprob: -5.834480285644531
    8. '(
' → logprob: -5.834480285644531
    9. '0' → logprob: -6.459480285644531
    10. '       ' → logprob: -6.709480285644531

Token 130: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.190574511885643
    2. '(' → logprob: -1.9405745267868042
    3. '(s' → logprob: -4.690574645996094
    4. ' ' → logprob: -5.565574645996094
    5. 's' → logprob: -6.190574645996094
    6. '0' → logprob: -6.315574645996094
    7. '   ' → logprob: -6.440574645996094
    8. ' s' → logprob: -6.565574645996094
    9. '(
' → logprob: -6.690574645996094
    10. '[' → logprob: -6.690574645996094

Token 131: ' row' (ID: 5225)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7265037298202515
    2. '(' → logprob: -1.3515037298202515
    3. 's' → logprob: -2.726503849029541
    4. '(s' → logprob: -2.976503849029541
    5. '((' → logprob: -3.101503849029541
    6. ' s' → logprob: -3.851503849029541
    7. '(row' → logprob: -3.976503849029541
    8. '[(' → logprob: -4.476503849029541
    9. '0' → logprob: -4.601503849029541
    10. '   ' → logprob: -4.601503849029541

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04460899531841278
    2. '=' → logprob: -3.6696090698242188
    3. ',' → logprob: -4.669609069824219
    4. 's' → logprob: -4.794609069824219
    5. '0' → logprob: -8.794609069824219
    6. ')' → logprob: -9.169609069824219
    7. ' ' → logprob: -9.919609069824219
    8. '   ' → logprob: -10.169609069824219
    9. ' ,' → logprob: -10.419609069824219
    10. ':' → logprob: -10.544609069824219

Token 133: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.41765278577804565
    2. '(s' → logprob: -2.0426528453826904
    3. ' (' → logprob: -2.6676528453826904
    4. ' s' → logprob: -2.9176528453826904
    5. 'int' → logprob: -3.0426528453826904
    6. ' int' → logprob: -4.792652606964111
    7. '(' → logprob: -4.917652606964111
    8. '(int' → logprob: -4.917652606964111
    9. 'books' → logprob: -5.042652606964111
    10. '0' → logprob: -5.917652606964111

Token 134: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016566229984164238
    2. '(s' → logprob: -4.266566276550293
    3. ' s' → logprob: -6.391566276550293
    4. ' (' → logprob: -7.891566276550293
    5. '(' → logprob: -9.266566276550293
    6. '   ' → logprob: -9.766566276550293
    7. 'int' → logprob: -10.016566276550293
    8. '4' → logprob: -10.766566276550293
    9. 'N' → logprob: -11.516566276550293
    10. ')' → logprob: -11.641566276550293

Token 135: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31588613986968994
    2. '-' → logprob: -1.31588613986969
    3. ' ' → logprob: -6.3158860206604
    4. 's' → logprob: -7.8158860206604
    5. ')' → logprob: -8.940886497497559
    6. ' //' → logprob: -9.065886497497559
    7. '   ' → logprob: -9.315886497497559
    8. '0' → logprob: -11.065886497497559
    9. '1' → logprob: -11.065886497497559
    10. '  ' → logprob: -11.565886497497559

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009440997382625937
    2. '(s' → logprob: -7.375944137573242
    3. 's' → logprob: -8.750944137573242
    4. ' (' → logprob: -9.625944137573242
    5. ' ' → logprob: -10.000944137573242
    6. '(' → logprob: -11.000944137573242
    7. ')' → logprob: -11.000944137573242
    8. '-' → logprob: -12.125944137573242
    9. '   ' → logprob: -13.000944137573242
    10. '((' → logprob: -13.375944137573242

Token 137: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009904473088681698
    2. ' //' → logprob: -4.884904384613037
    3. ')//' → logprob: -6.759904384613037
    4. '   ' → logprob: -7.884904384613037
    5. ' )' → logprob: -8.384904861450195
    6. ' ' → logprob: -8.884904861450195
    7. ' %' → logprob: -9.009904861450195
    8. '//' → logprob: -9.009904861450195
    9. '%' → logprob: -9.634904861450195
    10. ')%' → logprob: -10.509904861450195

Token 138: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07157076895236969
    2. '4' → logprob: -2.696570873260498
    3. '(' → logprob: -6.696570873260498
    4. ' N' → logprob: -8.07157039642334
    5. '   ' → logprob: -10.19657039642334
    6. ' ' → logprob: -11.07157039642334
    7. '(N' → logprob: -11.57157039642334
    8. '2' → logprob: -11.82157039642334
    9. '1' → logprob: -12.32157039642334
    10. ' (' → logprob: -12.44657039642334

Token 139: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7627416253089905
    2. ' +' → logprob: -1.2627415657043457
    3. ',' → logprob: -2.1377415657043457
    4. '
' → logprob: -2.5127415657043457
    5. '+' → logprob: -3.5127415657043457
    6. ' col' → logprob: -5.012741565704346
    7. ' ,' → logprob: -5.512741565704346
    8. '   ' → logprob: -5.887741565704346
    9. ',
' → logprob: -6.387741565704346
    10. ')' → logprob: -6.512741565704346

Token 140: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2228318452835083
    2. ',' → logprob: -2.8478317260742188
    3. '),' → logprob: -2.9728317260742188
    4. ')*' → logprob: -3.2228317260742188
    5. '*' → logprob: -4.847831726074219
    6. ')+' → logprob: -5.097831726074219
    7. ' ,' → logprob: -5.222831726074219
    8. ' *' → logprob: -5.347831726074219
    9. '+' → logprob: -5.597831726074219
    10. ')
' → logprob: -5.847831726074219

Token 141: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0472424253821373
    2. ',' → logprob: -4.672242641448975
    3. '*' → logprob: -5.172242641448975
    4. ' *' → logprob: -5.172242641448975
    5. ')*' → logprob: -5.172242641448975
    6. ')
' → logprob: -5.797242641448975
    7. '   ' → logprob: -6.047242641448975
    8. '+' → logprob: -6.047242641448975
    9. '),' → logprob: -6.297242641448975
    10. '
' → logprob: -6.422242641448975

Token 142: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06324665248394012
    2. '4' → logprob: -2.938246726989746
    3. ' ' → logprob: -5.063246726989746
    4. '   ' → logprob: -6.938246726989746
    5. 'N' → logprob: -7.313246726989746
    6. '1' → logprob: -8.813246726989746
    7. ' N' → logprob: -9.688246726989746
    8. '       ' → logprob: -10.313246726989746
    9. ')' → logprob: -10.313246726989746
    10. '    ' → logprob: -10.438246726989746

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07379230856895447
    2. ')
' → logprob: -2.6987922191619873
    3. ',' → logprob: -6.823792457580566
    4. '),' → logprob: -6.948792457580566
    5. '       ' → logprob: -7.323792457580566
    6. ' )' → logprob: -7.823792457580566
    7. '   ' → logprob: -8.198792457580566
    8. ')*' → logprob: -9.573792457580566
    9. ' )
' → logprob: -9.698792457580566
    10. ')+' → logprob: -9.948792457580566

Token 144: '       ' (ID: 309)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.40433430671691895
    2. '       ' → logprob: -1.279334306716919
    3. ',' → logprob: -3.154334306716919
    4. 'col' → logprob: -5.40433406829834
    5. ')' → logprob: -6.15433406829834
    6. ' ,' → logprob: -6.52933406829834
    7. '   ' → logprob: -6.77933406829834
    8. ',col' → logprob: -7.90433406829834
    9. '[col' → logprob: -8.02933406829834
    10. '        ' → logprob: -8.52933406829834

Token 145: ' #' (ID: 1069)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.3607006072998047
    2. '       ' → logprob: -1.9857006072998047
    3. ',' → logprob: -2.1107006072998047
    4. ' ,' → logprob: -3.8607006072998047
    5. ')' → logprob: -4.360700607299805
    6. 'col' → logprob: -4.860700607299805
    7. ' ' → logprob: -7.485700607299805
    8. '        ' → logprob: -7.735700607299805
    9. ',col' → logprob: -7.985700607299805
    10. '),' → logprob: -8.360700607299805

Token 146: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.34860673546791077
    2. 'col' → logprob: -1.2236067056655884
    3. '       ' → logprob: -9.723607063293457
    4. '   ' → logprob: -10.848607063293457
    5. ' ' → logprob: -11.723607063293457
    6. 'colm' → logprob: -11.848607063293457
    7. 'row' → logprob: -12.098607063293457
    8. ' row' → logprob: -12.223607063293457
    9. '	col' → logprob: -12.348607063293457
    10. 's' → logprob: -12.348607063293457

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05491793900728226
    2. '=' → logprob: -2.929918050765991
    3. ')' → logprob: -11.05491828918457
    4. '   ' → logprob: -11.92991828918457
    5. ' ' → logprob: -12.17991828918457
    6. 's' → logprob: -12.55491828918457
    7. '=s' → logprob: -14.05491828918457
    8. '=int' → logprob: -14.30491828918457
    9. ',' → logprob: -14.55491828918457
    10. '```' → logprob: -14.55491828918457

Token 148: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6349870562553406
    2. ' (' → logprob: -0.7599870562553406
    3. 's' → logprob: -6.509986877441406
    4. '(' → logprob: -7.509986877441406
    5. ' s' → logprob: -9.384986877441406
    6. '((' → logprob: -9.509986877441406
    7. 'N' → logprob: -10.259986877441406
    8. ' N' → logprob: -10.759986877441406
    9. ' ' → logprob: -10.884986877441406
    10. ' ((' → logprob: -11.009986877441406

Token 149: 's' (ID: 82)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0184358898550272
    2. ' (' → logprob: -4.268435955047607
    3. 's' → logprob: -5.518435955047607
    4. 'N' → logprob: -9.01843547821045
    5. '(' → logprob: -10.89343547821045
    6. '((' → logprob: -10.89343547821045
    7. ' s' → logprob: -11.01843547821045
    8. '   ' → logprob: -11.26843547821045
    9. ')' → logprob: -11.39343547821045
    10. ' N' → logprob: -12.01843547821045

Token 150: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08062022924423218
    2. ' -' → logprob: -2.705620288848877
    3. ')' → logprob: -4.830620288848877
    4. '   ' → logprob: -7.205620288848877
    5. ')-' → logprob: -7.830620288848877
    6. '//' → logprob: -7.955620288848877
    7. ')%' → logprob: -8.705619812011719
    8. ')//' → logprob: -8.705619812011719
    9. ' //' → logprob: -8.830619812011719
    10. '       ' → logprob: -8.830619812011719

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.62501049041748
    3. ')' → logprob: -14.00001049041748
    4. '   ' → logprob: -14.50001049041748
    5. '0' → logprob: -15.62501049041748
    6. 'N' → logprob: -16.375011444091797
    7. '
' → logprob: -16.625011444091797
    8. '  ' → logprob: -17.125011444091797
    9. 's' → logprob: -17.750011444091797
    10. '`' → logprob: -18.000011444091797

Token 152: ')%' (ID: 57656)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.04941098764538765
    2. ')' → logprob: -3.0494110584259033
    3. ')%' → logprob: -7.299410820007324
    4. ')#' → logprob: -9.799410820007324
    5. ' )' → logprob: -10.424410820007324
    6. '//' → logprob: -10.424410820007324
    7. '())' → logprob: -11.299410820007324
    8. '   ' → logprob: -11.799410820007324
    9. '()' → logprob: -12.424410820007324
    10. ')
' → logprob: -13.049410820007324

Token 153: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006717267446219921
    2. ' N' → logprob: -5.006717205047607
    3. '(N' → logprob: -13.631717681884766
    4. '   ' → logprob: -14.631717681884766
    5. ' ' → logprob: -15.506717681884766
    6. ' (' → logprob: -16.756717681884766
    7. '  ' → logprob: -17.881717681884766
    8. '(' → logprob: -18.506717681884766
    9. '	N' → logprob: -18.756717681884766
    10. '
' → logprob: -20.131717681884766

Token 154: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5666247010231018
    2. '       ' → logprob: -1.566624641418457
    3. '<|end|>' → logprob: -1.691624641418457
    4. '        
' → logprob: -4.066624641418457
    5. ')' → logprob: -4.566624641418457
    6. '<|end|>' → logprob: -5.316624641418457
    7. ',' → logprob: -6.566624641418457
    8. ' 
' → logprob: -7.316624641418457
    9. ')
' → logprob: -7.566624641418457
    10. '

' → logprob: -7.566624641418457

Token 155: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.23178818821907043
    2. ')' → logprob: -1.606788158416748
    3. ' N' → logprob: -5.356788158416748
    4. ' )' → logprob: -6.981788158416748
    5. '4' → logprob: -8.356788635253906
    6. '   ' → logprob: -9.481788635253906
    7. ')+' → logprob: -9.981788635253906
    8. 'n' → logprob: -10.356788635253906
    9. ')
' → logprob: -10.481788635253906
    10. 's' → logprob: -10.481788635253906

Token 156: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1700342744588852
    2. '+' → logprob: -1.9200342893600464
    3. ')+' → logprob: -5.420034408569336
    4. ' )' → logprob: -6.295034408569336
    5. '+)' → logprob: -6.420034408569336
    6. ' +' → logprob: -7.420034408569336
    7. ')
' → logprob: -8.170034408569336
    8. '+
' → logprob: -8.170034408569336
    9. '4' → logprob: -8.420034408569336
    10. '1' → logprob: -9.045034408569336

Token 157: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.662937372922897e-05
    2. ' N' → logprob: -9.750096321105957
    3. ')' → logprob: -10.375096321105957
    4. '1' → logprob: -12.250096321105957
    5. 'n' → logprob: -14.500096321105957
    6. '   ' → logprob: -14.625096321105957
    7. '(' → logprob: -14.875096321105957
    8. ' ' → logprob: -15.250096321105957
    9. '```' → logprob: -15.500096321105957
    10. '(N' → logprob: -15.750096321105957

Token 158: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011112819192931056
    2. ')
' → logprob: -7.5011115074157715
    3. ')\' → logprob: -8.251111030578613
    4. ' )' → logprob: -9.001111030578613
    5. '   ' → logprob: -9.626111030578613
    6. ')`' → logprob: -10.626111030578613
    7. '+' → logprob: -10.876111030578613
    8. '       ' → logprob: -11.376111030578613
    9. '\n' → logprob: -11.376111030578613
    10. ')

' → logprob: -12.001111030578613

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '9' → logprob: -14.875000953674316
    3. '(' → logprob: -16.5
    4. ' ' → logprob: -16.625
    5. '-' → logprob: -17.125
    6. '2' → logprob: -17.625
    7. ')' → logprob: -18.0
    8. '4' → logprob: -18.25
    9. '```' → logprob: -18.625
    10. '0' → logprob: -18.75

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005605389014817774
    2. ')
' → logprob: -8.375560760498047
    3. '   ' → logprob: -8.625560760498047
    4. ' )' → logprob: -9.125560760498047
    5. '       ' → logprob: -10.500560760498047
    6. ')

' → logprob: -12.250560760498047
    7. '```' → logprob: -13.375560760498047
    8. '`)' → logprob: -13.625560760498047
    9. '
' → logprob: -13.875560760498047
    10. ')`' → logprob: -14.000560760498047

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8680775761604309
    2. '<|end|>' → logprob: -0.9930775761604309
    3. '
' → logprob: -1.9930775165557861
    4. '        
' → logprob: -2.868077516555786
    5. '        

' → logprob: -5.368077754974365
    6. '<|end|>' → logprob: -6.118077754974365
    7. '

' → logprob: -6.243077754974365
    8. ')' → logprob: -6.618077754974365
    9. '        
        
' → logprob: -6.743077754974365
    10. '
        
' → logprob: -7.493077754974365

Token 162: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042514339089393616
    2. '<|end|>' → logprob: -4.292514324188232
    3. '        
' → logprob: -5.042514324188232
    4. '
' → logprob: -5.042514324188232
    5. 'dp' → logprob: -5.167514324188232
    6. 'def' → logprob: -6.542514324188232
    7. '#' → logprob: -6.667514324188232
    8. '   ' → logprob: -7.167514324188232
    9. '<|end|>' → logprob: -7.542514324188232
    10. 's' → logprob: -7.667514324188232

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03339646756649017
    2. '<|end|>' → logprob: -4.033396244049072
    3. '
' → logprob: -4.783396244049072
    4. '        
' → logprob: -5.658396244049072
    5. '#' → logprob: -6.408396244049072
    6. '<|end|>' → logprob: -8.03339672088623
    7. '        ' → logprob: -8.15839672088623
    8. '   ' → logprob: -9.03339672088623
    9. ' #' → logprob: -9.03339672088623
    10. '        

' → logprob: -9.03339672088623

Token 164: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30407828092575073
    2. '       ' → logprob: -1.9290783405303955
    3. '#' (adapté à ' #') → logprob: -2.5540783405303955
    4. 'def' → logprob: -5.179078102111816
    5. 'cost' → logprob: -5.179078102111816
    6. 'dist' → logprob: -5.804078102111816
    7. 'rows' → logprob: -6.054078102111816
    8. 'prev' → logprob: -6.054078102111816
    9. 's' → logprob: -6.304078102111816
    10. 'from' → logprob: -6.429078102111816

Token 165: ' Positions' (ID: 138312)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5915590524673462
    2. '#' → logprob: -1.5915590524673462
    3. 'def' → logprob: -2.8415589332580566
    4. 'dist' → logprob: -2.9665589332580566
    5. 'cost' → logprob: -3.2165589332580566
    6. 'prev' → logprob: -3.9665589332580566
    7. 'res' → logprob: -4.466558933258057
    8. 'pos' → logprob: -4.466558933258057
    9. 'row' → logprob: -4.716558933258057
    10. 'ans' → logprob: -4.841558933258057

Token 166: ' she' (ID: 1770)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003147535026073456
    2. '=' → logprob: -6.003147602081299
    3. '   ' → logprob: -8.25314712524414
    4. 's' → logprob: -8.62814712524414
    5. '0' → logprob: -9.12814712524414
    6. ',' → logprob: -10.87814712524414
    7. ' =
' → logprob: -11.00314712524414
    8. '_' → logprob: -11.25314712524414
    9. ' ' → logprob: -11.25314712524414
    10. ')' → logprob: -11.50314712524414

Token 167: ' can' (ID: 665)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.034538377076387405
    2. 'l' → logprob: -3.4095382690429688
    3. '   ' → logprob: -8.409538269042969
    4. 'lp' → logprob: -9.034538269042969
    5. 'elf' → logprob: -9.534538269042969
    6. 'lv' → logprob: -10.034538269042969
    7. 'f' → logprob: -10.159538269042969
    8. 'LF' → logprob: -10.159538269042969
    9. '_l' → logprob: -10.284538269042969
    10. 'Lf' → logprob: -10.534538269042969

Token 168: ' stop' (ID: 5666)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.21439427137374878
    2. ' move' → logprob: -2.3393943309783936
    3. '   ' → logprob: -4.2143940925598145
    4. 'go' → logprob: -4.2143940925598145
    5. 'take' → logprob: -4.3393940925598145
    6. 'stand' → logprob: -4.4643940925598145
    7. 'start' → logprob: -4.9643940925598145
    8. '_move' → logprob: -5.0893940925598145
    9. 'visit' → logprob: -5.3393940925598145
    10. 'occup' → logprob: -5.9643940925598145

Token 169: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1406564712524414
    2. '=' → logprob: -3.0156564712524414
    3. ' at' → logprob: -3.1406564712524414
    4. ':' → logprob: -3.7656564712524414
    5. 's' → logprob: -4.890656471252441
    6. ' are' → logprob: -5.640656471252441
    7. 'at' → logprob: -6.765656471252441
    8. ' ' → logprob: -8.015656471252441
    9. '   ' → logprob: -8.265656471252441
    10. '<|end|>' → logprob: -8.265656471252441

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.636932373046875
    2. ' positions' → logprob: -1.636932373046875
    3. ' [' → logprob: -1.886932373046875
    4. '0' → logprob: -2.011932373046875
    5. ' ' → logprob: -2.261932373046875
    6. ' (' → logprob: -2.886932373046875
    7. '[' → logprob: -3.011932373046875
    8. '   ' → logprob: -3.636932373046875
    9. 'positions' → logprob: -4.261932373046875
    10. ' []' → logprob: -4.511932373046875

Token 171: ' #' (ID: 1069)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.177726149559021
    2. '       ' → logprob: -1.427726149559021
    3. ' 
' → logprob: -2.0527262687683105
    4. ' ' → logprob: -2.3027262687683105
    5. '        
' → logprob: -3.0527262687683105
    6. '   ' → logprob: -3.6777262687683105
    7. 'positions' → logprob: -3.8027262687683105
    8. ' \' → logprob: -3.9277262687683105
    9. '    ' → logprob: -4.1777262687683105
    10. ' (' → logprob: -4.1777262687683105

Token 172: ' -' (ID: 533)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.4186534881591797
    2. 'positions' → logprob: -1.5436534881591797
    3. '#' → logprob: -4.16865348815918
    4. '0' → logprob: -4.54365348815918
    5. ' possible' → logprob: -4.54365348815918
    6. ' shelves' → logprob: -4.66865348815918
    7. ' for' → logprob: -4.66865348815918
    8. ' (' → logprob: -4.91865348815918
    9. 'for' → logprob: -5.29365348815918
    10. 'possible' → logprob: -5.41865348815918

Token 173: ' intersections' (ID: 143513)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08370449393987656
    2. ' ' → logprob: -3.4587044715881348
    3. ' positions' → logprob: -4.708704471588135
    4. 'positions' → logprob: -4.833704471588135
    5. '(' → logprob: -4.958704471588135
    6. 's' → logprob: -5.833704471588135
    7. ' at' → logprob: -5.833704471588135
    8. ' (' → logprob: -5.958704471588135
    9. ' col' → logprob: -6.333704471588135
    10. ' shelves' → logprob: -6.458704471588135

Token 174: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ' passages' (ID: 69047)
  Prédit: ' vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -1.0548508167266846
    2. 'vertical' → logprob: -1.8048508167266846
    3. ' passages' → logprob: -2.0548508167266846
    4. ' rows' → logprob: -2.3048508167266846
    5. 'horizontal' → logprob: -2.8048508167266846
    6. 'rows' → logprob: -2.9298508167266846
    7. ' horizontal' → logprob: -2.9298508167266846
    8. ' the' → logprob: -3.8048508167266846
    9. ' passage' → logprob: -4.0548505783081055
    10. 'pass' → logprob: -4.4298505783081055

Token 176: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4606132507324219
    2. '<|end|>' → logprob: -2.335613250732422
    3. '0' → logprob: -2.460613250732422
    4. '(' → logprob: -2.585613250732422
    5. ' ' → logprob: -2.835613250732422
    6. ' positions' → logprob: -4.835613250732422
    7. ')' → logprob: -5.210613250732422
    8. ' 
' → logprob: -5.210613250732422
    9. '#' → logprob: -5.710613250732422
    10. ' \' → logprob: -5.835613250732422

Token 178: 'row' (ID: 843)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2400083690881729
    2. 'row' → logprob: -1.8650083541870117
    3. ' row' → logprob: -3.8650083541870117
    4. ' ' → logprob: -4.240008354187012
    5. ',' → logprob: -4.740008354187012
    6. ')' → logprob: -5.115008354187012
    7. 'x' → logprob: -5.990008354187012
    8. '4' → logprob: -6.740008354187012
    9. '(row' → logprob: -6.740008354187012
    10. ' (' → logprob: -7.615008354187012

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006283664144575596
    2. ' ,' → logprob: -6.131283760070801
    3. ')' → logprob: -6.506283760070801
    4. ' +' → logprob: -7.756283760070801
    5. ',row' → logprob: -7.756283760070801
    6. '   ' → logprob: -8.2562837600708
    7. '+' → logprob: -8.3812837600708
    8. '0' → logprob: -8.6312837600708
    9. '<|end|>' → logprob: -8.7562837600708
    10. '=' → logprob: -8.7562837600708

Token 180: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.636754035949707
    2. 'col' → logprob: -0.761754035949707
    3. '0' → logprob: -5.636754035949707
    4. ' ' → logprob: -8.261754035949707
    5. ',' → logprob: -9.261754035949707
    6. ',col' → logprob: -9.636754035949707
    7. ')' → logprob: -9.886754035949707
    8. '   ' → logprob: -10.761754035949707
    9. 'column' → logprob: -10.886754035949707
    10. ' column' → logprob: -11.386754035949707

Token 181: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032296369317919016
    2. ')
' → logprob: -6.00322961807251
    3. '),' → logprob: -7.62822961807251
    4. ',' → logprob: -9.628230094909668
    5. '   ' → logprob: -9.753230094909668
    6. '):' → logprob: -10.503230094909668
    7. '```' → logprob: -10.753230094909668
    8. '),
' → logprob: -11.253230094909668
    9. 's' → logprob: -11.378230094909668
    10. '0' → logprob: -11.503230094909668

Token 182: ' where' (ID: 1919)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3070752620697021
    2. '       ' → logprob: -1.4320752620697021
    3. '
' → logprob: -1.4320752620697021
    4. '<|end|>' → logprob: -1.5570752620697021
    5. ',' → logprob: -4.807075500488281
    6. '   ' → logprob: -4.932075500488281
    7. '<|end|>' → logprob: -4.932075500488281
    8. ':' → logprob: -5.807075500488281
    9. ')
' → logprob: -6.182075500488281
    10. '        
' → logprob: -6.182075500488281

Token 183: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5938733816146851
    2. ' row' → logprob: -1.093873381614685
    3. ' col' → logprob: -2.7188735008239746
    4. 'col' → logprob: -3.0938735008239746
    5. '0' → logprob: -6.843873500823975
    6. ' ' → logprob: -8.343873023986816
    7. '(row' → logprob: -8.343873023986816
    8. ' (' → logprob: -10.468873023986816
    9. '	row' → logprob: -11.093873023986816
    10. '   ' → logprob: -11.968873023986816

Token 184: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7420552372932434
    2. ' ==' → logprob: -1.4920551776885986
    3. ' =' → logprob: -1.7420551776885986
    4. '==' → logprob: -3.2420551776885986
    5. ')' → logprob: -3.4920551776885986
    6. ',' → logprob: -3.6170551776885986
    7. ' in' → logprob: -4.367055416107178
    8. ' <=' → logprob: -5.367055416107178
    9. ' ,' → logprob: -5.367055416107178
    10. '<|end|>' → logprob: -6.867055416107178

Token 185: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.46339404582977295
    2. ' range' → logprob: -1.338394045829773
    3. '[' → logprob: -2.4633941650390625
    4. '0' → logprob: -3.8383941650390625
    5. ' [' → logprob: -6.9633941650390625
    6. '{' → logprob: -7.3383941650390625
    7. ' ' → logprob: -8.713394165039062
    8. '4' → logprob: -10.088394165039062
    9. '   ' → logprob: -10.338394165039062
    10. ' {' → logprob: -10.713394165039062

Token 186: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13860535621643066
    2. '[' → logprob: -2.2636053562164307
    3. '0' → logprob: -3.7636053562164307
    4. ' range' → logprob: -6.763605117797852
    5. '{' → logprob: -6.888605117797852
    6. '(' → logprob: -10.888605117797852
    7. '[-' → logprob: -11.013605117797852
    8. '(range' → logprob: -11.638605117797852
    9. '4' → logprob: -12.013605117797852
    10. 'list' → logprob: -12.013605117797852

Token 187: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.010477138683199883
    2. ',' → logprob: -4.760477066040039
    3. '...' → logprob: -6.510477066040039
    4. ' ..' → logprob: -9.385477066040039
    5. ',
' → logprob: -9.760477066040039
    6. ' ' → logprob: -10.135477066040039
    7. ' to' → logprob: -10.385477066040039
    8. '.' → logprob: -10.385477066040039
    9. ' ,' → logprob: -10.385477066040039
    10. '   ' → logprob: -10.510477066040039

Token 188: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.577476441860199
    2. 'N' → logprob: -1.2024765014648438
    3. '3' → logprob: -2.2024765014648438
    4. ' N' → logprob: -4.202476501464844
    5. ' ' → logprob: -4.827476501464844
    6. '0' → logprob: -5.452476501464844
    7. '1' → logprob: -8.452476501464844
    8. '   ' → logprob: -9.077476501464844
    9. '5' → logprob: -10.014976501464844
    10. '  ' → logprob: -11.077476501464844

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5062130689620972
    2. ' and' → logprob: -1.3812130689620972
    3. '       ' → logprob: -2.2562131881713867
    4. '<|end|>' → logprob: -4.256213188171387
    5. ')' → logprob: -4.506213188171387
    6. '   ' → logprob: -5.506213188171387
    7. ' col' → logprob: -5.631213188171387
    8. ' ,' → logprob: -6.131213188171387
    9. '```' → logprob: -6.256213188171387
    10. 'and' → logprob: -7.631213188171387

Token 190: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.03828222677111626
    2. 'col' → logprob: -3.2882821559906006
    3. '       ' → logprob: -9.53828239440918
    4. ' ' → logprob: -10.28828239440918
    5. '```' → logprob: -10.28828239440918
    6. '        ' → logprob: -10.41328239440918
    7. '	col' → logprob: -11.03828239440918
    8. ' ' → logprob: -11.16328239440918
    9. '    ' → logprob: -11.66328239440918
    10. ' column' → logprob: -12.28828239440918

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08157140016555786
    2. 'in' → logprob: -2.706571340560913
    3. '=' → logprob: -5.456571578979492
    4. '+' → logprob: -6.456571578979492
    5. ' =' → logprob: -6.831571578979492
    6. '0' → logprob: -7.081571578979492
    7. ',' → logprob: -7.206571578979492
    8. ')' → logprob: -7.331571578979492
    9. ' ' → logprob: -7.706571578979492
    10. '```' → logprob: -7.706571578979492

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01760135032236576
    2. 'range' → logprob: -4.767601490020752
    3. ' ' → logprob: -5.142601490020752
    4. ' range' → logprob: -5.892601490020752
    5. 'N' → logprob: -8.267601013183594
    6. '[' → logprob: -10.517601013183594
    7. ' N' → logprob: -10.892601013183594
    8. '-' → logprob: -11.642601013183594
    9. '   ' → logprob: -12.017601013183594
    10. '{' → logprob: -12.142601013183594

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18626637756824493
    2. 'N' → logprob: -2.0612664222717285
    3. 'range' → logprob: -3.3112664222717285
    4. ' range' → logprob: -5.5612664222717285
    5. ' ' → logprob: -6.4362664222717285
    6. ' N' → logprob: -7.5612664222717285
    7. '[' → logprob: -9.43626594543457
    8. '4' → logprob: -10.06126594543457
    9. '   ' → logprob: -10.68626594543457
    10. '1' → logprob: -10.93626594543457

Token 194: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.015692824497818947
    2. ')' → logprob: -5.265692710876465
    3. '...' → logprob: -5.390692710876465
    4. ',' → logprob: -5.765692710876465
    5. ':' → logprob: -7.390692710876465
    6. '.' → logprob: -7.640692710876465
    7. '```' → logprob: -7.890692710876465
    8. '
' → logprob: -8.765692710876465
    9. '0' → logprob: -9.140692710876465
    10. '):' → logprob: -9.390692710876465

Token 195: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019862097688019276
    2. '4' → logprob: -6.876986026763916
    3. '3' → logprob: -7.501986026763916
    4. '0' → logprob: -8.501986503601074
    5. ' N' → logprob: -8.876986503601074
    6. 'range' → logprob: -11.251986503601074
    7. '   ' → logprob: -11.501986503601074
    8. ' ' → logprob: -11.876986503601074
    9. '
' → logprob: -12.001986503601074
    10. '(N' → logprob: -12.126986503601074

Token 196: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18975788354873657
    2. ')' → logprob: -2.439757823944092
    3. '
' → logprob: -3.689757823944092
    4. '   ' → logprob: -4.314757823944092
    5. '<|end|>' → logprob: -4.314757823944092
    6. '        
' → logprob: -4.564757823944092
    7. ':' → logprob: -4.689757823944092
    8. ',' → logprob: -6.064757823944092
    9. '    
' → logprob: -6.689757823944092
    10. ':
' → logprob: -6.814757823944092

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006078110076487064
    2. '        
' → logprob: -5.381078243255615
    3. '<|end|>' → logprob: -7.631078243255615
    4. '   ' → logprob: -7.881078243255615
    5. '
' → logprob: -9.381077766418457
    6. '    
' → logprob: -9.506077766418457
    7. '        ' → logprob: -9.631077766418457
    8. '```' → logprob: -9.756077766418457
    9. '           ' → logprob: -9.881077766418457
    10. '<|end|>' → logprob: -10.131077766418457

Token 198: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009179589338600636
    2. ')' → logprob: -6.134179592132568
    3. '<|end|>' → logprob: -6.134179592132568
    4. '        
' → logprob: -6.259179592132568
    5. '   ' → logprob: -6.509179592132568
    6. '           ' → logprob: -8.25917911529541
    7. ',' → logprob: -8.75917911529541
    8. '        ' → logprob: -8.75917911529541
    9. '
' → logprob: -9.00917911529541
    10. '```' → logprob: -9.13417911529541

Token 199: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07856562733650208
    2. '        
' → logprob: -3.0785655975341797
    3. '
' → logprob: -3.9535655975341797
    4. '<|end|>' → logprob: -6.20356559753418
    5. '   ' → logprob: -6.45356559753418
    6. 'def' → logprob: -6.95356559753418
    7. '```' → logprob: -7.07856559753418
    8. '        ' → logprob: -7.45356559753418
    9. ',' → logprob: -7.70356559753418
    10. '        

' → logprob: -7.82856559753418

Token 200: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07785369455814362
    2. '<|end|>' → logprob: -2.9528536796569824
    3. '        
' → logprob: -5.327853679656982
    4. ')' → logprob: -5.327853679656982
    5. '   ' → logprob: -5.327853679656982
    6. '
' → logprob: -6.202853679656982
    7. '<|end|>' → logprob: -6.202853679656982
    8. '           ' → logprob: -7.452853679656982
    9. '        ' → logprob: -7.452853679656982
    10. ',' → logprob: -7.702853679656982

Token 201: ' walking' (ID: 15015)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.4045870900154114
    2. ' only' → logprob: -1.9045870304107666
    3. ' the' → logprob: -2.7795870304107666
    4. 'col' → logprob: -3.4045870304107666
    5. ' there' → logprob: -3.6545870304107666
    6. 'the' → logprob: -4.154587268829346
    7. ' not' → logprob: -4.404587268829346
    8. 'only' → logprob: -4.779587268829346
    9. '   ' → logprob: -5.404587268829346
    10. 'there' → logprob: -5.779587268829346

Token 202: ' allowed' (ID: 9279)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.5321040153503418
    2. '_' → logprob: -1.6571040153503418
    3. ' through' → logprob: -1.6571040153503418
    4. ' down' → logprob: -2.532104015350342
    5. ' continues' → logprob: -3.032104015350342
    6. 'through' → logprob: -3.032104015350342
    7. '<|end|>' → logprob: -3.532104015350342
    8. 'down' → logprob: -3.657104015350342
    9. ' ' → logprob: -3.907104015350342
    10. ' up' → logprob: -4.032104015350342

Token 203: ' only' (ID: 1606)
  Prédit: ' only'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -1.0620495080947876
    2. '<|end|>' → logprob: -1.0620495080947876
    3. ' in' → logprob: -2.187049388885498
    4. ',' → logprob: -3.437049388885498
    5. '   ' → logprob: -3.687049388885498
    6. ' through' → logprob: -4.062049388885498
    7. ')' → logprob: -4.062049388885498
    8. ' to' → logprob: -4.312049388885498
    9. ' between' → logprob: -4.562049388885498
    10. '<|end|>' → logprob: -4.812049388885498

Token 204: ' forward' (ID: 6687)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.774395763874054
    2. ' on' → logprob: -1.2743957042694092
    3. 'in' → logprob: -3.024395704269409
    4. ' between' → logprob: -3.274395704269409
    5. ' horizontally' → logprob: -3.399395704269409
    6. 'on' → logprob: -3.774395704269409
    7. ' along' → logprob: -3.899395704269409
    8. 'h' → logprob: -3.899395704269409
    9. ' to' → logprob: -4.024395942687988
    10. ' at' → logprob: -4.899395942687988

Token 205: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0273805856704712
    2. '<|end|>' → logprob: -1.6523805856704712
    3. ')' → logprob: -2.0273804664611816
    4. '   ' → logprob: -2.1523804664611816
    5. ',' → logprob: -2.1523804664611816
    6. '
' → logprob: -3.4023804664611816
    7. ':' → logprob: -4.527380466461182
    8. '<|end|>' → logprob: -5.152380466461182
    9. '        
' → logprob: -5.527380466461182
    10. '#' → logprob: -5.902380466461182

Token 206: ' main' (ID: 2758)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.0485683679580688
    2. ' col' → logprob: -1.5485683679580688
    3. ' passages' → logprob: -2.0485682487487793
    4. 'the' → logprob: -2.2985682487487793
    5. ' the' → logprob: -2.4235682487487793
    6. ' columns' → logprob: -3.5485682487487793
    7. ' rows' → logprob: -4.048568248748779
    8. 'columns' → logprob: -4.048568248748779
    9. ' passage' → logprob: -4.298568248748779
    10. 'rows' → logprob: -4.798568248748779

Token 207: ' passages' (ID: 69047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018360057845711708
    2. ' _' → logprob: -4.518360137939453
    3. '_s' → logprob: -6.143360137939453
    4. '<|end|>' → logprob: -6.643360137939453
    5. 'ly' → logprob: -6.768360137939453
    6. ')' → logprob: -6.893360137939453
    7. ' passage' → logprob: -7.768360137939453
    8. 's' → logprob: -8.518360137939453
    9. ' passages' → logprob: -8.643360137939453
    10. '_pass' → logprob: -9.143360137939453

Token 208: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15158656239509583
    2. '        
' → logprob: -3.1515865325927734
    3. '
' → logprob: -3.5265865325927734
    4. ')' → logprob: -4.026586532592773
    5. '   ' → logprob: -4.151586532592773
    6. ',' → logprob: -4.776586532592773
    7. '<|end|>' → logprob: -4.776586532592773
    8. '```' → logprob: -5.901586532592773
    9. '    
' → logprob: -6.026586532592773
    10. '\n' → logprob: -6.276586532592773

Token 209: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6726880669593811
    2. '       ' → logprob: -1.1726880073547363
    3. '    ' → logprob: -2.7976880073547363
    4. '<|end|>' → logprob: -3.1726880073547363
    5. '        ' → logprob: -3.9226880073547363
    6. '   ' → logprob: -4.297688007354736
    7. ')' → logprob: -4.672688007354736
    8. ' 
' → logprob: -5.047688007354736
    9. ' )' → logprob: -5.047688007354736
    10. '        
' → logprob: -5.547688007354736

Token 210: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10110296308994293
    2. '        ' → logprob: -4.226102828979492
    3. '           ' → logprob: -4.226102828979492
    4. ' ' → logprob: -4.351102828979492
    5. '#' (adapté à ' #') → logprob: -4.476102828979492
    6. '   ' → logprob: -4.726102828979492
    7. ' and' → logprob: -5.351102828979492
    8. ' (' → logprob: -5.476102828979492
    9. ' for' → logprob: -5.601102828979492
    10. '    ' → logprob: -6.101102828979492

Token 211: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08921394497156143
    2. '   ' → logprob: -3.7142138481140137
    3. '        
' → logprob: -4.464213848114014
    4. '        ' → logprob: -4.589213848114014
    5. ' ' → logprob: -5.214213848114014
    6. '    ' → logprob: -5.214213848114014
    7. '           ' → logprob: -5.464213848114014
    8. '<|end|>' → logprob: -5.464213848114014
    9. '#' → logprob: -5.589213848114014
    10. '\n' → logprob: -6.214213848114014

Token 212: ' Main' (ID: 7956)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' col' → logprob: -1.8481875658035278
    2. '#' → logprob: -1.9731875658035278
    3. ' ' → logprob: -1.9731875658035278
    4. 'row' → logprob: -2.2231874465942383
    5. ' (' → logprob: -2.4731874465942383
    6. '   ' → logprob: -3.0981874465942383
    7. 'col' → logprob: -3.3481874465942383
    8. '       ' → logprob: -3.5981874465942383
    9. '0' → logprob: -3.7231874465942383
    10. '    ' → logprob: -3.8481874465942383

Token 213: ' passages' (ID: 69047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7510443925857544
    2. '_pass' → logprob: -1.5010443925857544
    3. ' passages' → logprob: -1.6260443925857544
    4. ' passage' → logprob: -2.626044273376465
    5. 'pass' → logprob: -4.251044273376465
    6. ' _' → logprob: -4.626044273376465
    7. '_p' → logprob: -5.376044273376465
    8. 'ly' → logprob: -6.251044273376465
    9. '_row' → logprob: -6.626044273376465
    10. ' pass' → logprob: -7.501044273376465

Token 214: ':' (ID: 25)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5952085852622986
    2. ' =' → logprob: -1.5952086448669434
    3. '   ' → logprob: -3.0952086448669434
    4. ':' → logprob: -3.3452086448669434
    5. ' only' → logprob: -3.3452086448669434
    6. '<|end|>' → logprob: -3.7202086448669434
    7. '[' → logprob: -4.095208644866943
    8. ')' → logprob: -4.470208644866943
    9. ' in' → logprob: -4.595208644866943
    10. ' and' → logprob: -4.720208644866943

Token 215: ' horizontal' (ID: 25511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1620771884918213
    2. ' ' → logprob: -2.0370771884918213
    3. '       ' → logprob: -2.2870771884918213
    4. ' for' → logprob: -2.9120771884918213
    5. ' (' → logprob: -2.9120771884918213
    6. '    ' → logprob: -3.1620771884918213
    7. '```' → logprob: -3.1620771884918213
    8. '[' → logprob: -3.5370771884918213
    9. ' rows' → logprob: -3.5370771884918213
    10. ' #' → logprob: -3.9120771884918213

Token 216: ' rows' (ID: 13585)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0107920169830322
    2. ')' → logprob: -1.7607920169830322
    3. ' passages' → logprob: -2.2607920169830322
    4. '<|end|>' → logprob: -2.2607920169830322
    5. 's' → logprob: -2.6357920169830322
    6. ',' → logprob: -3.0107920169830322
    7. '   ' → logprob: -3.2607920169830322
    8. '_s' → logprob: -3.3857920169830322
    9. ' and' → logprob: -3.8857920169830322
    10. '<|end|>' → logprob: -4.885791778564453

Token 217: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8219968676567078
    2. ')' → logprob: -1.4469969272613525
    3. '<|end|>' → logprob: -1.6969969272613525
    4. ',' → logprob: -2.8219969272613525
    5. ' and' → logprob: -3.9469969272613525
    6. '       ' → logprob: -4.196996688842773
    7. 's' → logprob: -4.821996688842773
    8. '[' → logprob: -5.196996688842773
    9. ' (' → logprob: -5.946996688842773
    10. ':' → logprob: -5.946996688842773

Token 218: '0' (ID: 15)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.705306351184845
    2. ' and' → logprob: -1.4553062915802002
    3. ' ' → logprob: -3.2053062915802
    4. ',' → logprob: -3.3303062915802
    5. ' =' → logprob: -3.3303062915802
    6. '=' → logprob: -3.4553062915802
    7. 'and' → logprob: -3.5803062915802
    8. '0' → logprob: -3.7053062915802
    9. ' (' → logprob: -4.205306529998779
    10. ' in' → logprob: -4.330306529998779

Token 219: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.433644413948059
    2. '<|end|>' → logprob: -1.433644413948059
    3. ' and' → logprob: -1.808644413948059
    4. '..' → logprob: -1.933644413948059
    5. ' to' → logprob: -2.8086442947387695
    6. '...' → logprob: -3.3086442947387695
    7. ' through' → logprob: -3.4336442947387695
    8. '```' → logprob: -3.5586442947387695
    9. '   ' → logprob: -3.8086442947387695
    10. '-' → logprob: -5.4336442947387695

Token 220: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002690628869459033
    2. '4' → logprob: -6.12769079208374
    3. ' ' → logprob: -7.75269079208374
    4. '```' → logprob: -10.627690315246582
    5. '   ' → logprob: -10.752690315246582
    6. '0' → logprob: -11.127690315246582
    7. '1' → logprob: -12.502690315246582
    8. ',' → logprob: -13.252690315246582
    9. '
' → logprob: -13.252690315246582
    10. '  ' → logprob: -13.377690315246582

Token 221: ' have' (ID: 679)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6532136797904968
    2. '       ' → logprob: -1.5282137393951416
    3. ')' → logprob: -1.9032137393951416
    4. '
' → logprob: -3.1532137393951416
    5. '<|end|>' → logprob: -3.4032137393951416
    6. ',' → logprob: -3.9032137393951416
    7. '```' → logprob: -5.6532135009765625
    8. '    
' → logprob: -6.4032135009765625
    9. '_' → logprob: -6.5282135009765625
    10. '        
' → logprob: -7.0282135009765625

Token 222: ' directional' (ID: 134050)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'only' → logprob: -1.7345072031021118
    2. 'edges' → logprob: -1.9845072031021118
    3. ' only' → logprob: -2.4845070838928223
    4. 'columns' → logprob: -2.6095070838928223
    5. 'cols' → logprob: -2.8595070838928223
    6. 'col' → logprob: -3.1095070838928223
    7. ' edges' → logprob: -3.1095070838928223
    8. 'horizontal' → logprob: -3.3595070838928223
    9. 'N' → logprob: -3.4845070838928223
    10. ' col' → logprob: -3.7345070838928223

Token 223: ' edges' (ID: 22569)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.573143482208252
    2. ' arrows' → logprob: -2.073143482208252
    3. ' movement' → logprob: -2.448143482208252
    4. 'edges' → logprob: -2.573143482208252
    5. 'walk' → logprob: -2.698143482208252
    6. ' moves' → logprob: -2.948143482208252
    7. ' edges' → logprob: -3.198143482208252
    8. 'right' → logprob: -3.323143482208252
    9. ' constraints' → logprob: -3.323143482208252
    10. 'ar' → logprob: -3.448143482208252

Token 224: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: ' col' (ID: 996)
  Prédit: '(col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(col' → logprob: -0.7094160914421082
    2. 'col' → logprob: -1.084416151046753
    3. ' col' → logprob: -1.959416151046753
    4. ' (' → logprob: -3.834416151046753
    5. '(' → logprob: -5.459415912628174
    6. 'left' → logprob: -6.709415912628174
    7. '(row' → logprob: -6.834415912628174
    8. '(prev' → logprob: -8.584416389465332
    9. '[col' → logprob: -8.959416389465332
    10. '(i' → logprob: -9.084416389465332

Token 226: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.01705855131149292
    2. 'to' → logprob: -4.767058372497559
    3. ' ' → logprob: -5.142058372497559
    4. '+' → logprob: -6.767058372497559
    5. ' +' → logprob: -6.892058372497559
    6. '```' → logprob: -9.142058372497559
    7. '=' → logprob: -9.392058372497559
    8. ' ->' → logprob: -9.767058372497559
    9. '   ' → logprob: -10.142058372497559
    10. '0' → logprob: -10.267058372497559

Token 227: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.47407761216163635
    2. ' col' → logprob: -0.974077582359314
    3. '	col' → logprob: -15.349077224731445
    4. '(col' → logprob: -15.849077224731445
    5. '   ' → logprob: -16.474077224731445
    6. ' ' → logprob: -16.974077224731445
    7. '```' → logprob: -17.599077224731445
    8. 'cols' → logprob: -17.849077224731445
    9. ' (' → logprob: -18.224077224731445
    10. '[col' → logprob: -18.724077224731445

Token 228: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3525611460208893
    2. ' +' → logprob: -1.227561116218567
    3. '   ' → logprob: -6.602560997009277
    4. 's' → logprob: -7.227560997009277
    5. '```' → logprob: -7.477560997009277
    6. '+
' → logprob: -7.727560997009277
    7. ' +
' → logprob: -8.477560997009277
    8. ' to' → logprob: -9.227560997009277
    9. ' for' → logprob: -9.227560997009277
    10. ')' → logprob: -9.352560997009277

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003380846756044775
    2. ' ' → logprob: -8.000338554382324
    3. ' col' → logprob: -13.750338554382324
    4. '```' → logprob: -14.000338554382324
    5. 'col' → logprob: -14.250338554382324
    6. 's' → logprob: -17.000337600708008
    7. '`' → logprob: -17.500337600708008
    8. ')' → logprob: -17.750337600708008
    9. '+' → logprob: -19.125337600708008
    10. '``' → logprob: -19.250337600708008

Token 230: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46397656202316284
    2. '   ' → logprob: -1.7139766216278076
    3. '<|end|>' → logprob: -2.0889766216278076
    4. ',' → logprob: -3.9639766216278076
    5. ')' → logprob: -3.9639766216278076
    6. '
' → logprob: -4.0889763832092285
    7. '<|end|>' → logprob: -6.0889763832092285
    8. '        
' → logprob: -6.3389763832092285
    9. '```' → logprob: -6.3389763832092285
    10. '\n' → logprob: -6.7139763832092285

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3510221242904663
    2. '<|end|>' → logprob: -1.9760221242904663
    3. '   ' → logprob: -2.601022243499756
    4. ')' → logprob: -3.351022243499756
    5. ',' → logprob: -3.601022243499756
    6. '\n' → logprob: -5.476022243499756
    7. '.' → logprob: -6.226022243499756
    8. '        
' → logprob: -6.351022243499756
    9. '<|end|>' → logprob: -6.476022243499756
    10. ' and' → logprob: -6.726022243499756

Token 232: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07741854339838028
    2. '<|end|>' → logprob: -2.827418565750122
    3. ',' → logprob: -5.452418327331543
    4. '   ' → logprob: -5.577418327331543
    5. ')' → logprob: -5.702418327331543
    6. '<|end|>' → logprob: -6.827418327331543
    7. '           ' → logprob: -7.202418327331543
    8. ' and' → logprob: -7.577418327331543
    9. '.' → logprob: -8.327418327331543
    10. '        
' → logprob: -8.827418327331543

Token 233: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3087036907672882
    2. '<|end|>' → logprob: -1.4337036609649658
    3. '   ' → logprob: -4.558703899383545
    4. ')' → logprob: -5.558703899383545
    5. ',' → logprob: -5.808703899383545
    6. '<|end|>' → logprob: -6.308703899383545
    7. ' and' → logprob: -6.558703899383545
    8. '        ' → logprob: -6.683703899383545
    9. '           ' → logprob: -6.933703899383545
    10. '
' → logprob: -7.183703899383545

Token 234: ' middle' (ID: 10006)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.20239587128162384
    2. ' vertical' → logprob: -1.8273959159851074
    3. '#' → logprob: -4.952395915985107
    4. '       ' → logprob: -4.952395915985107
    5. 'Vertical' → logprob: -5.577395915985107
    6. '   ' → logprob: -6.452395915985107
    7. 'vert' → logprob: -7.577395915985107
    8. ' #' → logprob: -7.702395915985107
    9. '
' → logprob: -8.07739543914795
    10. 'for' → logprob: -8.57739543914795

Token 235: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17073559761047363
    2. ' _' → logprob: -3.2957355976104736
    3. 's' → logprob: -4.0457353591918945
    4. '_s' → logprob: -4.1707353591918945
    5. '_positions' → logprob: -4.1707353591918945
    6. ')' → logprob: -4.6707353591918945
    7. '   ' → logprob: -5.0457353591918945
    8. 'point' → logprob: -5.0457353591918945
    9. ' =' → logprob: -5.0457353591918945
    10. ' ' → logprob: -5.2957353591918945

Token 236: ' shelves' (ID: 52049)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3353617191314697
    2. ' edges' → logprob: -2.0853617191314697
    3. 'edges' → logprob: -2.2103617191314697
    4. 'the' → logprob: -2.2103617191314697
    5. ' each' → logprob: -2.5853617191314697
    6. ' horizontal' → logprob: -2.7103617191314697
    7. ' passages' → logprob: -2.8353617191314697
    8. ' shelves' → logprob: -3.7103617191314697
    9. ' passage' → logprob: -3.7103617191314697
    10. 's' → logprob: -3.7103617191314697

Token 237: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31217557191848755
    2. '
' → logprob: -2.6871755123138428
    3. '<|end|>' → logprob: -2.6871755123138428
    4. '        
' → logprob: -3.3121755123138428
    5. ')' → logprob: -3.5621755123138428
    6. ':' → logprob: -4.062175750732422
    7. '   ' → logprob: -4.937175750732422
    8. ',' → logprob: -5.062175750732422
    9. '\n' → logprob: -5.312175750732422
    10. ' 
' → logprob: -5.437175750732422

Token 238: ' which' (ID: 1118)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1728332042694092
    2. '       ' → logprob: -1.4228332042694092
    3. '<|end|>' → logprob: -1.4228332042694092
    4. '        ' → logprob: -3.172833204269409
    5. ' (' → logprob: -3.672833204269409
    6. '    ' → logprob: -3.672833204269409
    7. ' 
' → logprob: -4.297833442687988
    8. '   ' → logprob: -4.422833442687988
    9. ' #' → logprob: -4.797833442687988
    10. '(' → logprob: -4.922833442687988

Token 239: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.04657440632581711
    2. ' can' → logprob: -3.296574354171753
    3. ' is' → logprob: -5.421574592590332
    4. 'are' → logprob: -7.171574592590332
    5. ' have' → logprob: -7.171574592590332
    6. ' =' → logprob: -7.296574592590332
    7. ' represent' → logprob: -8.046574592590332
    8. ' ' → logprob: -8.171574592590332
    9. 's' → logprob: -8.671574592590332
    10. ' correspond' → logprob: -9.296574592590332

Token 240: ' positions' (ID: 15897)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6853870153427124
    2. '(' → logprob: -1.9353870153427124
    3. '(row' → logprob: -2.310387134552002
    4. ' col' → logprob: -2.810387134552002
    5. ' positions' → logprob: -2.810387134552002
    6. ' at' → logprob: -3.685387134552002
    7. ' represented' → logprob: -4.185387134552002
    8. '(col' → logprob: -4.185387134552002
    9. 'positions' → logprob: -4.185387134552002
    10. 'col' → logprob: -4.685387134552002

Token 241: ' between' (ID: 2870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3230842649936676
    2. 's' → logprob: -2.8230843544006348
    3. ' (' → logprob: -3.1980843544006348
    4. ')' → logprob: -3.3230843544006348
    5. '<|end|>' → logprob: -3.8230843544006348
    6. ' ' → logprob: -4.073084354400635
    7. ',' → logprob: -4.198084354400635
    8. '=' → logprob: -4.448084354400635
    9. ' at' → logprob: -4.698084354400635
    10. ' )' → logprob: -4.698084354400635

Token 242: ' intersections' (ID: 143513)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.685825765132904
    2. ' col' → logprob: -0.810825765132904
    3. 'cols' → logprob: -4.060825824737549
    4. ' shelves' → logprob: -4.435825824737549
    5. '(col' → logprob: -4.810825824737549
    6. ' cols' → logprob: -5.185825824737549
    7. 's' → logprob: -5.685825824737549
    8. ' columns' → logprob: -6.185825824737549
    9. ' (' → logprob: -6.810825824737549
    10. 'columns' → logprob: -7.060825824737549

Token 243: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.318329393863678
    2. '   ' → logprob: -2.943329334259033
    3. ')' → logprob: -3.568329334259033
    4. '<|end|>' → logprob: -3.568329334259033
    5. '_' → logprob: -3.693329334259033
    6. ',' → logprob: -3.693329334259033
    7. '        
' → logprob: -4.068329334259033
    8. '\n' → logprob: -4.068329334259033
    9. '\' → logprob: -4.193329334259033
    10. '
' → logprob: -4.318329334259033

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9267885088920593
    2. ' ' → logprob: -1.676788568496704
    3. ' (' → logprob: -2.176788568496704
    4. '<|end|>' → logprob: -2.301788568496704
    5. '   ' → logprob: -2.926788568496704
    6. '        ' → logprob: -3.176788568496704
    7. '(' → logprob: -3.551788568496704
    8. '    ' → logprob: -3.926788568496704
    9. ')' → logprob: -4.176788330078125
    10. '[' → logprob: -5.176788330078125

Token 245: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7818218469619751
    2. ' ' → logprob: -1.656821846961975
    3. '       ' → logprob: -1.781821846961975
    4. '(' → logprob: -2.5318217277526855
    5. ' \' → logprob: -3.5318217277526855
    6. ''' → logprob: -4.0318217277526855
    7. '   ' → logprob: -4.0318217277526855
    8. '        ' → logprob: -4.7818217277526855
    9. '    ' → logprob: -5.2818217277526855
    10. ' 
' → logprob: -6.0318217277526855

Token 246: '  ' (ID: 256)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5593847036361694
    2. ' (' → logprob: -1.4343847036361694
    3. '        ' → logprob: -2.809384822845459
    4. '       ' → logprob: -2.934384822845459
    5. '(' → logprob: -3.934384822845459
    6. ' \' → logprob: -4.434384822845459
    7. '   ' → logprob: -5.059384822845459
    8. '    ' → logprob: -5.184384822845459
    9. ' ' → logprob: -5.434384822845459
    10. '_' → logprob: -5.559384822845459

Token 247: ' At' (ID: 3604)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.3738012909889221
    2. ' (' → logprob: -1.4988012313842773
    3. ' col' → logprob: -3.4988012313842773
    4. '(' → logprob: -3.7488012313842773
    5. ' row' → logprob: -4.873801231384277
    6. 'col' → logprob: -4.998801231384277
    7. '(col' → logprob: -4.998801231384277
    8. 'row' → logprob: -5.873801231384277
    9. '       ' → logprob: -5.998801231384277
    10. '   ' → logprob: -6.123801231384277

Token 248: ' (' (ID: 350)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.1490790992975235
    2. ' (' → logprob: -2.3990790843963623
    3. 'col' → logprob: -4.399079322814941
    4. ' row' → logprob: -4.774079322814941
    5. ' each' → logprob: -4.899079322814941
    6. '(col' → logprob: -5.274079322814941
    7. ' ' → logprob: -5.524079322814941
    8. '(' → logprob: -5.774079322814941
    9. '(row' → logprob: -6.024079322814941
    10. ' positions' → logprob: -6.649079322814941

Token 249: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.07134024798870087
    2. ' row' → logprob: -2.696340322494507
    3. ' col' → logprob: -7.321340084075928
    4. 'col' → logprob: -7.821340084075928
    5. '(row' → logprob: -8.196340560913086
    6. '0' → logprob: -10.946340560913086
    7. ')' → logprob: -11.321340560913086
    8. '   ' → logprob: -11.571340560913086
    9. '	row' → logprob: -12.196340560913086
    10. '4' → logprob: -12.446340560913086

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011762039735913277
    2. ' ,' → logprob: -4.5117621421813965
    3. '   ' → logprob: -7.8867621421813965
    4. ',col' → logprob: -8.761761665344238
    5. ')' → logprob: -10.636761665344238
    6. ' +' → logprob: -10.886761665344238
    7. '	' → logprob: -11.011761665344238
    8. '+' → logprob: -11.136761665344238
    9. ' ' → logprob: -11.136761665344238
    10. '[' → logprob: -11.136761665344238

Token 251: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.02060542069375515
    2. 'col' → logprob: -3.8956053256988525
    3. ',' → logprob: -10.770605087280273
    4. ',col' → logprob: -11.270605087280273
    5. ' ' → logprob: -11.520605087280273
    6. ')' → logprob: -12.145605087280273
    7. '    ' → logprob: -12.770605087280273
    8. '	col' → logprob: -13.020605087280273
    9. '   ' → logprob: -13.645605087280273
    10. '0' → logprob: -14.020605087280273

Token 252: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.804831862449646
    2. '+' → logprob: -1.054831862449646
    3. ' +' → logprob: -1.929831862449646
    4. ',' → logprob: -3.4298319816589355
    5. '),' → logprob: -4.0548319816589355
    6. '   ' → logprob: -5.6798319816589355
    7. ' )' → logprob: -6.1798319816589355
    8. ' ,' → logprob: -7.0548319816589355
    9. '-' → logprob: -7.5548319816589355
    10. '):
' → logprob: -7.6798319816589355

Token 253: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015453149564564228
    2. '0' → logprob: -4.265453338623047
    3. ')' → logprob: -6.890453338623047
    4. ' ' → logprob: -8.640453338623047
    5. '   ' → logprob: -10.015453338623047
    6. ' )' → logprob: -11.140453338623047
    7. '4' → logprob: -12.015453338623047
    8. '           ' → logprob: -12.140453338623047
    9. '       ' → logprob: -12.515453338623047
    10. '  ' → logprob: -12.765453338623047

Token 254: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.961759259458631e-06
    2. ')' → logprob: -13.750004768371582
    3. '.
' → logprob: -13.750004768371582
    4. '0' → logprob: -14.125004768371582
    5. ' .' → logprob: -14.625004768371582
    6. '5' → logprob: -14.875004768371582
    7. '   ' → logprob: -15.250004768371582
    8. ').' → logprob: -15.500004768371582
    9. '```' → logprob: -15.500004768371582
    10. '
' → logprob: -16.2500057220459

Token 255: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.176947600673884e-05
    2. '.' → logprob: -11.250021934509277
    3. '0' → logprob: -12.750021934509277
    4. '   ' → logprob: -13.375021934509277
    5. ' ' → logprob: -13.625021934509277
    6. '```' → logprob: -14.312521934509277
    7. ')' → logprob: -15.062521934509277
    8. '
' → logprob: -15.187521934509277
    9. '25' → logprob: -15.250021934509277
    10. ',' → logprob: -15.500021934509277

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016265720478259027
    2. ')
' → logprob: -9.250163078308105
    3. '   ' → logprob: -10.375163078308105
    4. ' )' → logprob: -11.625163078308105
    5. '),' → logprob: -11.625163078308105
    6. '       ' → logprob: -11.750163078308105
    7. '):
' → logprob: -13.125163078308105
    8. '):' → logprob: -13.125163078308105
    9. '```' → logprob: -13.750163078308105
    10. ',' → logprob: -14.375163078308105

Token 257: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19270579516887665
    2. '
' → logprob: -2.4427058696746826
    3. '        
' → logprob: -3.4427058696746826
    4. '   ' → logprob: -4.4427056312561035
    5. '<|end|>' → logprob: -4.5677056312561035
    6. ')' → logprob: -4.8177056312561035
    7. ',' → logprob: -5.0677056312561035
    8. ':' → logprob: -5.6927056312561035
    9. '    
' → logprob: -5.9427056312561035
    10. '\n' → logprob: -6.0677056312561035

Token 258: ' (' (ID: 350)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.4824542999267578
    2. ' col' → logprob: -0.9824542999267578
    3. '(col' → logprob: -5.357454299926758
    4. ' (' → logprob: -5.857454299926758
    5. ' intersections' → logprob: -7.732454299926758
    6. 'cols' → logprob: -8.732454299926758
    7. ' cols' → logprob: -9.357454299926758
    8. '[col' → logprob: -10.107454299926758
    9. ' columns' → logprob: -11.732454299926758
    10. '(' → logprob: -12.357454299926758

Token 259: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0025484352372586727
    2. ' row' → logprob: -6.0025482177734375
    3. 'col' → logprob: -9.752548217773438
    4. '(row' → logprob: -11.752548217773438
    5. ' col' → logprob: -12.127548217773438
    6. ',row' → logprob: -14.127548217773438
    7. '[row' → logprob: -15.127548217773438
    8. '=row' → logprob: -15.502548217773438
    9. ' ' → logprob: -16.627548217773438
    10. '	row' → logprob: -17.252548217773438

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015693542081862688
    2. ' ,' → logprob: -8.875157356262207
    3. '   ' → logprob: -11.750157356262207
    4. ',col' → logprob: -11.875157356262207
    5. ' ' → logprob: -14.125157356262207
    6. ')' → logprob: -14.750157356262207
    7. '),' → logprob: -14.875157356262207
    8. ',
' → logprob: -15.875157356262207
    9. ' col' → logprob: -16.25015640258789
    10. '	' → logprob: -16.62515640258789

Token 261: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.474077969789505
    2. 'col' → logprob: -0.9740779399871826
    3. ' ' → logprob: -14.974078178405762
    4. ',col' → logprob: -15.849078178405762
    5. '	col' → logprob: -16.224077224731445
    6. '   ' → logprob: -16.349077224731445
    7. ',' → logprob: -16.599077224731445
    8. 'cols' → logprob: -16.974077224731445
    9. ' ' → logprob: -16.974077224731445
    10. '    ' → logprob: -16.974077224731445

Token 262: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002515969565138221
    2. '+' → logprob: -6.25251579284668
    3. ')+' → logprob: -8.50251579284668
    4. ' )' → logprob: -8.87751579284668
    5. '   ' → logprob: -9.75251579284668
    6. ' and' → logprob: -9.75251579284668
    7. 'and' → logprob: -10.37751579284668
    8. ')+(' → logprob: -10.75251579284668
    9. ')
' → logprob: -10.87751579284668
    10. ' ' → logprob: -11.50251579284668

Token 263: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6281349658966064
    2. ')' → logprob: -1.6281349658966064
    3. '   ' → logprob: -2.2531349658966064
    4. '<|end|>' → logprob: -2.8781349658966064
    5. ',' → logprob: -3.1281349658966064
    6. ':' → logprob: -3.7531349658966064
    7. '
' → logprob: -4.378134727478027
    8. '_' → logprob: -5.128134727478027
    9. '\n' → logprob: -5.628134727478027
    10. '        
' → logprob: -5.753134727478027

Token 264: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2519606053829193
    2. '(row' → logprob: -1.5019606351852417
    3. '(col' → logprob: -11.001960754394531
    4. ' ' → logprob: -12.501960754394531
    5. ' row' → logprob: -12.626960754394531
    6. ' ' → logprob: -13.001960754394531
    7. ' col' → logprob: -13.751960754394531
    8. '[row' → logprob: -14.001960754394531
    9. 'col' → logprob: -14.376960754394531
    10. '=row' → logprob: -14.376960754394531

Token 265: 'row' (ID: 843)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.5536068677902222
    2. 'row' → logprob: -1.3036068677902222
    3. ' col' → logprob: -2.0536069869995117
    4. ' row' → logprob: -3.6786069869995117
    5. '(row' → logprob: -10.553606986999512
    6. '0' → logprob: -11.928606986999512
    7. ' ' → logprob: -11.928606986999512
    8. ',row' → logprob: -13.553606986999512
    9. ')' → logprob: -13.928606986999512
    10. '   ' → logprob: -14.178606986999512

Token 266: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031191270798444748
    2. ',' → logprob: -3.656191349029541
    3. ')' → logprob: -5.656191349029541
    4. ' +' → logprob: -7.281191349029541
    5. ')+' → logprob: -7.781191349029541
    6. '.' → logprob: -9.281190872192383
    7. '   ' → logprob: -9.406190872192383
    8. '```' → logprob: -10.281190872192383
    9. ' ' → logprob: -10.656190872192383
    10. '),' → logprob: -11.281190872192383

Token 267: ' col' (ID: 996)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00818426813930273
    2. ' ' → logprob: -4.883184432983398
    3. '0' → logprob: -7.883184432983398
    4. ' col' → logprob: -8.883184432983398
    5. 'col' → logprob: -10.133184432983398
    6. ')' → logprob: -11.133184432983398
    7. '+' → logprob: -12.758184432983398
    8. '```' → logprob: -13.758184432983398
    9. '.' → logprob: -14.008184432983398
    10. '   ' → logprob: -14.008184432983398

Token 268: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00039063513395376503
    2. ')+' → logprob: -8.625391006469727
    3. ')' → logprob: -9.125391006469727
    4. ' +' → logprob: -9.500391006469727
    5. '+)' → logprob: -11.750391006469727
    6. '+.' → logprob: -12.250391006469727
    7. '1' → logprob: -12.375391006469727
    8. '+
' → logprob: -12.750391006469727
    9. '```' → logprob: -13.125391006469727
    10. '0' → logprob: -13.375391006469727

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.875014305114746
    3. '0' → logprob: -12.000014305114746
    4. ')' → logprob: -14.875014305114746
    5. '```' → logprob: -15.625014305114746
    6. '5' → logprob: -16.25001335144043
    7. '  ' → logprob: -17.12501335144043
    8. '   ' → logprob: -17.12501335144043
    9. 's' → logprob: -17.12501335144043
    10. '2' → logprob: -17.50001335144043

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.623244553338736e-05
    2. ' )' → logprob: -11.000065803527832
    3. '+' → logprob: -11.625065803527832
    4. '0' → logprob: -11.875065803527832
    5. ')
' → logprob: -11.875065803527832
    6. '),' → logprob: -12.250065803527832
    7. '1' → logprob: -12.250065803527832
    8. '.' → logprob: -12.625065803527832
    9. '   ' → logprob: -13.125065803527832
    10. ')`' → logprob: -13.125065803527832

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15964151918888092
    2. '<|end|>' → logprob: -2.2846415042877197
    3. ')' → logprob: -4.159641742706299
    4. '   ' → logprob: -4.409641742706299
    5. '        
' → logprob: -5.034641742706299
    6. '
' → logprob: -6.159641742706299
    7. ',' → logprob: -6.284641742706299
    8. ':' → logprob: -6.784641742706299
    9. '<|end|>' → logprob: -6.784641742706299
    10. '    
' → logprob: -7.409641742706299

Token 272: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05908245965838432
    2. '<|end|>' → logprob: -3.684082508087158
    3. '        
' → logprob: -4.059082508087158
    4. ')' → logprob: -5.184082508087158
    5. ',' → logprob: -6.059082508087158
    6. '
' → logprob: -6.559082508087158
    7. '   ' → logprob: -6.684082508087158
    8. '<|end|>' → logprob: -7.309082508087158
    9. '           ' → logprob: -7.684082508087158
    10. '        ' → logprob: -8.18408203125

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06270455569028854
    2. '<|end|>' → logprob: -3.812704563140869
    3. '        
' → logprob: -3.937704563140869
    4. '   ' → logprob: -4.812704563140869
    5. '
' → logprob: -5.812704563140869
    6. '\n' → logprob: -6.687704563140869
    7. ' ' → logprob: -6.937704563140869
    8. '        
        
' → logprob: -7.062704563140869
    9. ' 
' → logprob: -7.312704563140869
    10. '<|end|>' → logprob: -7.562704563140869

Token 274: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15458232164382935
    2. '
' → logprob: -3.1545822620391846
    3. '        
' → logprob: -3.1545822620391846
    4. '   ' → logprob: -4.154582500457764
    5. ' 
' → logprob: -4.529582500457764
    6. '        ' → logprob: -5.029582500457764
    7. '    ' → logprob: -5.404582500457764
    8. ' ' → logprob: -5.404582500457764
    9. '    
' → logprob: -6.654582500457764
    10. '     
' → logprob: -6.779582500457764

Token 275: ' Start' (ID: 7972)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09907810389995575
    2. '   ' → logprob: -3.2240781784057617
    3. ' 
' → logprob: -4.349078178405762
    4. '_' → logprob: -4.849078178405762
    5. '        
' → logprob: -5.099078178405762
    6. '#' → logprob: -5.724078178405762
    7. ' ' → logprob: -5.849078178405762
    8. ' ' → logprob: -6.099078178405762
    9. 'dp' → logprob: -6.224078178405762
    10. '
' → logprob: -6.224078178405762

Token 276: ' position' (ID: 4010)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.053947944194078445
    2. '=' → logprob: -3.053947925567627
    3. 'from' → logprob: -5.928947925567627
    4. ' from' → logprob: -6.428947925567627
    5. ' at' → logprob: -8.428948402404785
    6. '<|end|>' → logprob: -8.678948402404785
    7. 'position' → logprob: -9.178948402404785
    8. ' ' → logprob: -9.303948402404785
    9. '_position' → logprob: -9.428948402404785
    10. ':' → logprob: -9.553948402404785

Token 277: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02064279280602932
    2. '=' → logprob: -3.8956427574157715
    3. '0' → logprob: -10.27064323425293
    4. ' ' → logprob: -10.77064323425293
    5. ':' → logprob: -11.64564323425293
    6. ',' → logprob: -12.14564323425293
    7. 'pos' → logprob: -12.27064323425293
    8. ' at' → logprob: -12.39564323425293
    9. ' =
' → logprob: -12.52064323425293
    10. ' is' → logprob: -12.77064323425293

Token 278: ' intersection' (ID: 42002)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5622985363006592
    2. '0' → logprob: -1.6872985363006592
    3. '(' → logprob: -1.9372985363006592
    4. ' ' → logprob: -2.312298536300659
    5. ' pos' → logprob: -6.812298774719238
    6. 'pos' → logprob: -8.562298774719238
    7. ' row' → logprob: -8.562298774719238
    8. ' position' → logprob: -8.937298774719238
    9. ' start' → logprob: -9.437298774719238
    10. ' s' → logprob: -9.812298774719238

Token 279: ' at' (ID: 540)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.589708149433136
    2. ' =' → logprob: -1.3397080898284912
    3. '   ' → logprob: -2.839708089828491
    4. ' ' → logprob: -2.964708089828491
    5. ' at' → logprob: -3.714708089828491
    6. ' (' → logprob: -4.33970832824707
    7. ',' → logprob: -4.46470832824707
    8. '(' → logprob: -4.83970832824707
    9. '[' → logprob: -5.96470832824707
    10. '```' → logprob: -5.96470832824707

Token 280: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5171759724617004
    2. ' ' → logprob: -1.3921759128570557
    3. ' (' → logprob: -2.2671759128570557
    4. ' row' → logprob: -3.3921759128570557
    5. '(' → logprob: -4.142176151275635
    6. 'row' → logprob: -6.392176151275635
    7. '(row' → logprob: -7.892176151275635
    8. '```' → logprob: -10.017175674438477
    9. ' col' → logprob: -11.267175674438477
    10. '`' → logprob: -12.142175674438477

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011212044395506382
    2. ' ' → logprob: -4.51121187210083
    3. ',' → logprob: -9.511212348937988
    4. '4' → logprob: -9.761212348937988
    5. '3' → logprob: -11.511212348937988
    6. '   ' → logprob: -11.761212348937988
    7. ' ,' → logprob: -11.886212348937988
    8. ')' → logprob: -12.761212348937988
    9. 'row' → logprob: -13.386212348937988
    10. '1' → logprob: -14.011212348937988

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007772310636937618
    2. '0' → logprob: -7.250777244567871
    3. ' ,' → logprob: -10.250777244567871
    4. ')' → logprob: -10.750777244567871
    5. '```' → logprob: -12.375777244567871
    6. ',
' → logprob: -13.125777244567871
    7. '<|end|>' → logprob: -14.125777244567871
    8. ' ' → logprob: -14.500777244567871
    9. '),' → logprob: -14.625777244567871
    10. '   ' → logprob: -14.750777244567871

Token 283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014378011226654
    2. ' ' → logprob: -1.7014378309249878
    3. ',' → logprob: -11.201437950134277
    4. ' col' → logprob: -12.326437950134277
    5. 'col' → logprob: -13.201437950134277
    6. ')' → logprob: -14.076437950134277
    7. '  ' → logprob: -14.451437950134277
    8. '   ' → logprob: -14.451437950134277
    9. ' ,' → logprob: -14.576437950134277
    10. ' ' → logprob: -14.576437950134277

Token 284: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005742399953305721
    2. ')
' → logprob: -7.625574111938477
    3. '),' → logprob: -10.000574111938477
    4. ',' → logprob: -11.125574111938477
    5. '```' → logprob: -11.625574111938477
    6. '0' → logprob: -12.375574111938477
    7. ' )' → logprob: -12.375574111938477
    8. '   ' → logprob: -12.875574111938477
    9. ')

' → logprob: -13.500574111938477
    10. ')`' → logprob: -14.500574111938477

Token 285: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9216457605361938
    2. '
' → logprob: -1.2966457605361938
    3. '<|end|>' → logprob: -1.6716457605361938
    4. '       ' → logprob: -2.9216456413269043
    5. ')' → logprob: -3.4216456413269043
    6. '    
' → logprob: -4.296645641326904
    7. ':' → logprob: -4.671645641326904
    8. '<|end|>' → logprob: -4.921645641326904
    9. ',' → logprob: -5.046645641326904
    10. '        
' → logprob: -5.796645641326904

Token 286: 'white' (ID: 9988)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009193291887640953
    2. ')
' → logprob: -5.134193420410156
    3. '0' → logprob: -5.759193420410156
    4. ' )' → logprob: -10.134193420410156
    5. ',' → logprob: -10.884193420410156
    6. ')
' → logprob: -11.384193420410156
    7. '   ' → logprob: -12.009193420410156
    8. ' ' → logprob: -12.259193420410156
    9. '```' → logprob: -12.384193420410156
    10. ')

' → logprob: -12.759193420410156

Token 287: ' circle' (ID: 22005)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052996013313531876
    2. 'space' → logprob: -3.8029959201812744
    3. '_space' → logprob: -4.4279961585998535
    4. '_' → logprob: -4.9279961585998535
    5. ' space' → logprob: -5.1779961585998535
    6. ' )' → logprob: -5.9279961585998535
    7. ')_' → logprob: -7.4279961585998535
    8. '_)' → logprob: -7.4279961585998535
    9. '_s' → logprob: -8.802995681762695
    10. ' ' → logprob: -9.677995681762695

Token 288: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.024604277219623e-05
    2. '):' → logprob: -11.250040054321289
    3. ')
' → logprob: -11.500040054321289
    4. ',' → logprob: -12.000040054321289
    5. '   ' → logprob: -13.125040054321289
    6. ' )' → logprob: -13.250040054321289
    7. ':' → logprob: -13.250040054321289
    8. '),' → logprob: -14.000040054321289
    9. '.' → logprob: -14.125040054321289
    10. '```' → logprob: -14.250040054321289

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8218539953231812
    2. '<|end|>' → logprob: -1.5718539953231812
    3. '   ' → logprob: -2.0718541145324707
    4. ')' → logprob: -2.0718541145324707
    5. ':' → logprob: -3.8218541145324707
    6. ',' → logprob: -3.9468541145324707
    7. '
' → logprob: -4.196854114532471
    8. '        
' → logprob: -4.446854114532471
    9. '    
' → logprob: -4.821854114532471
    10. '<|end|>' → logprob: -5.571854114532471

Token 290: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1295028179883957
    2. '        
' → logprob: -3.004502773284912
    3. '<|end|>' → logprob: -4.004502773284912
    4. ')' → logprob: -4.629502773284912
    5. '   ' → logprob: -4.629502773284912
    6. ' ' → logprob: -4.879502773284912
    7. '        ' → logprob: -5.379502773284912
    8. ' 
' → logprob: -5.629502773284912
    9. '    ' → logprob: -5.629502773284912
    10. '\n' → logprob: -6.379502773284912

Token 291: ' End' (ID: 6437)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34325480461120605
    2. '        
' → logprob: -2.468254804611206
    3. ' 
' → logprob: -2.843254804611206
    4. '
' → logprob: -2.843254804611206
    5. '   ' → logprob: -3.593254804611206
    6. '    ' → logprob: -4.468255043029785
    7. ' ' → logprob: -4.593255043029785
    8. '    
' → logprob: -4.718255043029785
    9. '        ' → logprob: -4.843255043029785
    10. '     
' → logprob: -5.843255043029785

Token 292: ' position' (ID: 4010)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.6574201583862305
    2. ' position' → logprob: -1.5324201583862305
    3. '_' → logprob: -2.6574201583862305
    4. ' =' → logprob: -2.7824201583862305
    5. 'position' → logprob: -2.9074201583862305
    6. '   ' → logprob: -4.0324201583862305
    7. '_position' → logprob: -4.0324201583862305
    8. ':' → logprob: -4.9074201583862305
    9. 'pos' → logprob: -5.0324201583862305
    10. '=' → logprob: -5.2824201583862305

Token 293: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2527412176132202
    2. ' at' → logprob: -2.1277413368225098
    3. ':' → logprob: -2.5027413368225098
    4. '=' → logprob: -4.50274133682251
    5. '   ' → logprob: -5.12774133682251
    6. 's' → logprob: -6.00274133682251
    7. ' (' → logprob: -7.50274133682251
    8. ' :' → logprob: -7.50274133682251
    9. ' ' → logprob: -8.502740859985352
    10. 'at' → logprob: -8.502740859985352

Token 294: ' intersection' (ID: 42002)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04308197647333145
    2. '(' → logprob: -3.1680819988250732
    3. ' ' → logprob: -9.543082237243652
    4. ' None' → logprob: -12.918082237243652
    5. '   ' → logprob: -13.168082237243652
    6. '0' → logprob: -13.793082237243652
    7. ' (-' → logprob: -13.918082237243652
    8. ' ' → logprob: -13.918082237243652
    9. ' at' → logprob: -14.168082237243652
    10. '  ' → logprob: -14.543082237243652

Token 295: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.002993982285261154
    2. ' (' → logprob: -6.627994060516357
    3. '   ' → logprob: -7.127994060516357
    4. '(' → logprob: -7.627994060516357
    5. 'at' → logprob: -8.1279935836792
    6. ' =' → logprob: -10.3779935836792
    7. ' ' → logprob: -10.7529935836792
    8. '    ' → logprob: -12.1279935836792
    9. '[' → logprob: -12.2529935836792
    10. '```' → logprob: -12.2529935836792

Token 296: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25303393602371216
    2. '(' → logprob: -1.5030338764190674
    3. '0' → logprob: -7.3780341148376465
    4. '4' → logprob: -8.378033638000488
    5. ' ' → logprob: -8.378033638000488
    6. '```' → logprob: -12.128033638000488
    7. '   ' → logprob: -12.378033638000488
    8. '3' → logprob: -13.003033638000488
    9. ' ' → logprob: -13.878033638000488
    10. ' four' → logprob: -14.003033638000488

Token 297: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17291784286499023
    2. '3' → logprob: -2.0479178428649902
    3. '4' → logprob: -3.5479178428649902
    4. ' ' → logprob: -7.04791784286499
    5. '1' → logprob: -9.672918319702148
    6. 'N' → logprob: -10.797918319702148
    7. '```' → logprob: -11.297918319702148
    8. '(' → logprob: -11.422918319702148
    9. '   ' → logprob: -11.547918319702148
    10. ',' → logprob: -12.047918319702148

Token 298: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035095500061288476
    2. ' ,' → logprob: -8.875350952148438
    3. ',
' → logprob: -9.500350952148438
    4. ')' → logprob: -9.875350952148438
    5. '+' → logprob: -10.125350952148438
    6. '0' → logprob: -10.500350952148438
    7. '```' → logprob: -12.375350952148438
    8. '-' → logprob: -12.875350952148438
    9. '<|end|>' → logprob: -12.875350952148438
    10. '4' → logprob: -13.500350952148438

Token 299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001923352392623201
    2. ')
' → logprob: -9.875192642211914
    3. '0' → logprob: -10.375192642211914
    4. '-' → logprob: -10.500192642211914
    5. '```' → logprob: -10.625192642211914
    6. '+' → logprob: -11.500192642211914
    7. ')`' → logprob: -11.750192642211914
    8. '()' → logprob: -11.875192642211914
    9. '))' → logprob: -11.875192642211914
    10. ' )' → logprob: -12.000192642211914

Token 300: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8793678283691406
    2. '
' → logprob: -1.1293678283691406
    3. '<|end|>' → logprob: -1.8793678283691406
    4. '   ' → logprob: -2.8793678283691406
    5. ':' → logprob: -3.7543678283691406
    6. ')' → logprob: -4.879367828369141
    7. '<|end|>' → logprob: -5.129367828369141
    8. '        
' → logprob: -5.254367828369141
    9. '```' → logprob: -5.879367828369141
    10. '    
' → logprob: -6.254367828369141

Token 301: 'black' (ID: 18474)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006770434323698282
    2. '4' → logprob: -6.006770610809326
    3. '3' → logprob: -6.631770610809326
    4. '0' → logprob: -6.881770610809326
    5. 'white' → logprob: -7.381770610809326
    6. ' white' → logprob: -7.881770610809326
    7. ' )' → logprob: -8.256770133972168
    8. '#' → logprob: -8.506770133972168
    9. ')
' → logprob: -8.506770133972168
    10. ' ' → logprob: -9.881770133972168

Token 302: ' circle' (ID: 22005)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009673687629401684
    2. ')_' → logprob: -4.884673595428467
    3. '_' → logprob: -6.759673595428467
    4. '_circle' → logprob: -8.259674072265625
    5. ',' → logprob: -9.134674072265625
    6. ' )' → logprob: -9.509674072265625
    7. '```' → logprob: -10.009674072265625
    8. '')' → logprob: -10.134674072265625
    9. 'space' → logprob: -10.259674072265625
    10. '")' → logprob: -10.509674072265625

Token 303: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003852574387565255
    2. '   ' → logprob: -6.753852367401123
    3. '```' → logprob: -6.753852367401123
    4. '):' → logprob: -7.003852367401123
    5. ')
' → logprob: -8.003852844238281
    6. ':' → logprob: -9.253852844238281
    7. '):
' → logprob: -10.378852844238281
    8. '`)' → logprob: -10.628852844238281
    9. '``' → logprob: -10.753852844238281
    10. '       ' → logprob: -11.253852844238281

Token 304: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3644533157348633
    2. '       ' → logprob: -1.4894533157348633
    3. '        
' → logprob: -2.8644533157348633
    4. '    
' → logprob: -4.864453315734863
    5. '   ' → logprob: -5.239453315734863
    6. '<|end|>' → logprob: -5.614453315734863
    7. ' 
' → logprob: -6.739453315734863
    8. '\n' → logprob: -6.864453315734863
    9. '  
' → logprob: -7.239453315734863
    10. '        ' → logprob: -7.364453315734863

Token 305: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7127488851547241
    2. 'dp' → logprob: -1.3377488851547241
    3. ' dp' → logprob: -1.5877488851547241
    4. '
' → logprob: -4.212749004364014
    5. '   ' → logprob: -4.587749004364014
    6. '        
' → logprob: -4.712749004364014
    7. ' DP' → logprob: -6.337749004364014
    8. ' 
' → logprob: -6.962749004364014
    9. '    
' → logprob: -7.212749004364014
    10. 'dist' → logprob: -7.212749004364014

Token 306: ' She' (ID: 3627)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3970366418361664
    2. '       ' → logprob: -1.8970366716384888
    3. ' dp' → logprob: -1.8970366716384888
    4. '   ' → logprob: -4.772036552429199
    5. 'dist' → logprob: -5.397036552429199
    6. 'from' → logprob: -5.522036552429199
    7. ' dist' → logprob: -6.272036552429199
    8. ' DP' → logprob: -6.272036552429199
    9. ' from' → logprob: -6.397036552429199
    10. 'import' → logprob: -6.897036552429199

Token 307: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4310314655303955
    2. ' can' → logprob: -1.5560314655303955
    3. ' wants' → logprob: -1.5560314655303955
    4. '_' → logprob: -2.5560314655303955
    5. ''s' → logprob: -2.9310314655303955
    6. ' has' → logprob: -3.5560314655303955
    7. ' needs' → logprob: -3.6810314655303955
    8. '_can' → logprob: -3.8060314655303955
    9. ' ' → logprob: -3.9310314655303955
    10. ' must' → logprob: -4.306031227111816

Token 308: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.03600642830133438
    2. 'move' → logprob: -3.661006450653076
    3. ' walk' → logprob: -5.411006450653076
    4. ' go' → logprob: -5.911006450653076
    5. '   ' → logprob: -6.911006450653076
    6. 'walk' → logprob: -7.536006450653076
    7. '_move' → logprob: -8.536005973815918
    8. '	move' → logprob: -9.161005973815918
    9. 'go' → logprob: -9.286005973815918
    10. ' only' → logprob: -9.411005973815918

Token 309: ' on' (ID: 402)
  Prédit: ' forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' forward' → logprob: -1.1656824350357056
    2. ' only' → logprob: -1.6656824350357056
    3. ' either' → logprob: -1.9156824350357056
    4. ' right' → logprob: -2.165682315826416
    5. ' up' → logprob: -2.665682315826416
    6. ' along' → logprob: -3.290682315826416
    7. ' down' → logprob: -3.790682315826416
    8. ' in' → logprob: -4.040682315826416
    9. 'down' → logprob: -4.415682315826416
    10. 'right' → logprob: -4.540682315826416

Token 310: ' main' (ID: 2758)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3189648389816284
    2. ' horizontal' → logprob: -1.4439648389816284
    3. 'horizontal' → logprob: -1.6939648389816284
    4. 'the' → logprob: -2.443964958190918
    5. ' intersections' → logprob: -3.068964958190918
    6. ' main' → logprob: -3.568964958190918
    7. ' shelves' → logprob: -3.693964958190918
    8. ' any' → logprob: -4.068964958190918
    9. ' each' → logprob: -4.318964958190918
    10. '   ' → logprob: -4.318964958190918

Token 311: ' passages' (ID: 69047)
  Prédit: ' passages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passages' → logprob: -0.04474761337041855
    2. '_' → logprob: -4.044747829437256
    3. '_pass' → logprob: -4.044747829437256
    4. ' passage' → logprob: -5.419747829437256
    5. ' _' → logprob: -6.044747829437256
    6. 'pass' → logprob: -6.419747829437256
    7. ' pass' → logprob: -8.919747352600098
    8. '   ' → logprob: -9.544747352600098
    9. ' ' → logprob: -9.919747352600098
    10. '_s' → logprob: -10.794747352600098

Token 312: ' only' (ID: 1606)
  Prédit: ' only'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -1.0598853826522827
    2. '   ' → logprob: -1.3098853826522827
    3. ' in' → logprob: -1.9348853826522827
    4. ',' → logprob: -2.1848855018615723
    5. '       ' → logprob: -3.3098855018615723
    6. ' from' → logprob: -3.9348855018615723
    7. ' (' → logprob: -4.559885501861572
    8. ' or' → logprob: -4.559885501861572
    9. ' to' → logprob: -4.934885501861572
    10. ' and' → logprob: -4.934885501861572

Token 313: ' forward' (ID: 6687)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6684517860412598
    2. '   ' → logprob: -1.2934517860412598
    3. '<|end|>' → logprob: -2.9184517860412598
    4. ' on' → logprob: -3.7934517860412598
    5. '.' → logprob: -3.9184517860412598
    6. ' and' → logprob: -4.66845178604126
    7. ' or' → logprob: -4.66845178604126
    8. ' (' → logprob: -4.66845178604126
    9. 'from' → logprob: -4.79345178604126
    10. ' in' → logprob: -4.79345178604126

Token 314: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0385111570358276
    2. ' (' → logprob: -1.1635111570358276
    3. ',' → logprob: -1.2885111570358276
    4. ' in' → logprob: -4.788511276245117
    5. ' or' → logprob: -4.913511276245117
    6. ' ,' → logprob: -4.913511276245117
    7. ' and' → logprob: -5.038511276245117
    8. ' on' → logprob: -5.163511276245117
    9. '.' → logprob: -5.663511276245117
    10. ' from' → logprob: -5.788511276245117

Token 315: 'left' (ID: 4530)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6158157587051392
    2. ')' → logprob: -1.1158157587051392
    3. ' col' → logprob: -2.3658156394958496
    4. 'col' → logprob: -3.7408156394958496
    5. ' in' → logprob: -5.86581563949585
    6. ' row' → logprob: -5.99081563949585
    7. 'row' → logprob: -6.36581563949585
    8. ' right' → logprob: -6.36581563949585
    9. ' ' → logprob: -6.74081563949585
    10. '1' → logprob: -6.86581563949585

Token 316: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4257999062538147
    2. ' to' → logprob: -1.55079984664917
    3. ' )' → logprob: -2.55079984664917
    4. 'to' → logprob: -3.67579984664917
    5. ' ->' → logprob: -5.17579984664917
    6. 'wards' → logprob: -5.55079984664917
    7. ',' → logprob: -5.67579984664917
    8. ' ' → logprob: -5.67579984664917
    9. '->' → logprob: -6.05079984664917
    10. '   ' → logprob: -6.17579984664917

Token 317: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.023273898288607597
    2. ' right' → logprob: -3.7732739448547363
    3. '```' → logprob: -11.523273468017578
    4. '>' → logprob: -12.273273468017578
    5. 'Right' → logprob: -12.273273468017578
    6. '_right' → logprob: -12.648273468017578
    7. '	right' → logprob: -13.523273468017578
    8. '
' → logprob: -14.273273468017578
    9. ' ' → logprob: -14.398273468017578
    10. 'ight' → logprob: -14.398273468017578

Token 318: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043524209409952164
    2. ' )' → logprob: -3.1685242652893066
    3. ',' → logprob: -8.293523788452148
    4. '<|end|>' → logprob: -9.418523788452148
    5. '),' → logprob: -9.918523788452148
    6. ' and' → logprob: -10.793523788452148
    7. ').' → logprob: -10.793523788452148
    8. '   ' → logprob: -11.043523788452148
    9. ' on' → logprob: -11.293523788452148
    10. '):' → logprob: -11.668523788452148

Token 319: ' intersections' (ID: 143513)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18346548080444336
    2. '<|end|>' → logprob: -2.4334654808044434
    3. ',' → logprob: -3.6834654808044434
    4. '
' → logprob: -3.8084654808044434
    5. '        
' → logprob: -4.433465480804443
    6. '   ' → logprob: -4.933465480804443
    7. ')' → logprob: -5.558465480804443
    8. '<|end|>' → logprob: -6.183465480804443
    9. '\n' → logprob: -6.933465480804443
    10. '.' → logprob: -6.933465480804443

Token 320: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6603594422340393
    2. ',' → logprob: -1.1603593826293945
    3. '   ' → logprob: -2.2853593826293945
    4. ' and' → logprob: -4.0353593826293945
    5. '<|end|>' → logprob: -4.1603593826293945
    6. ')' → logprob: -4.5353593826293945
    7. ' or' → logprob: -5.0353593826293945
    8. '.' → logprob: -5.6603593826293945
    9. '        
' → logprob: -6.0353593826293945
    10. '    ' → logprob: -6.4103593826293945

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3997730016708374
    2. '   ' → logprob: -1.8997730016708374
    3. ')' → logprob: -2.649773120880127
    4. ',' → logprob: -2.774773120880127
    5. '<|end|>' → logprob: -4.274773120880127
    6. ' and' → logprob: -4.649773120880127
    7. '
' → logprob: -5.524773120880127
    8. '        
' → logprob: -6.024773120880127
    9. '```' → logprob: -6.149773120880127
    10. '    ' → logprob: -6.774773120880127

Token 322: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19105766713619232
    2. ',' → logprob: -2.3160576820373535
    3. '   ' → logprob: -3.4410576820373535
    4. ')' → logprob: -3.6910576820373535
    5. '        
' → logprob: -5.5660576820373535
    6. ':' → logprob: -6.5660576820373535
    7. ' and' → logprob: -6.5660576820373535
    8. '<|end|>' → logprob: -6.8160576820373535
    9. '        ' → logprob: -6.9410576820373535
    10. '           ' → logprob: -7.0660576820373535

Token 323: ' Walking' (ID: 49024)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14434298872947693
    2. '   ' → logprob: -3.5193428993225098
    3. ',' → logprob: -3.6443428993225098
    4. '        
' → logprob: -4.26934289932251
    5. '
' → logprob: -4.51934289932251
    6. '_' → logprob: -4.51934289932251
    7. ')' → logprob: -4.64434289932251
    8. ' ' → logprob: -5.14434289932251
    9. '<|end|>' → logprob: -5.26934289932251
    10. '    ' → logprob: -5.89434289932251

Token 324: ' from' (ID: 591)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.15560203790664673
    2. '<|end|>' → logprob: -2.280601978302002
    3. 'on' → logprob: -4.530601978302002
    4. '<|end|>' → logprob: -5.155601978302002
    5. ' forward' → logprob: -5.780601978302002
    6. 'down' → logprob: -5.780601978302002
    7. ' =' → logprob: -6.155601978302002
    8. ' down' → logprob: -6.405601978302002
    9. ' further' → logprob: -6.655601978302002
    10. '_forward' → logprob: -6.655601978302002

Token 325: ' intersection' (ID: 42002)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10570039600133896
    2. '(row' → logprob: -2.3557004928588867
    3. '(col' → logprob: -5.730700492858887
    4. '(' → logprob: -6.855700492858887
    5. ' col' → logprob: -8.105700492858887
    6. '(prev' → logprob: -8.230700492858887
    7. 'col' → logprob: -8.855700492858887
    8. '(node' → logprob: -9.230700492858887
    9. ' ' → logprob: -9.480700492858887
    10. ' intersection' → logprob: -10.105700492858887

Token 326: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10985252261161804
    2. ' (' → logprob: -3.1098525524139404
    3. 's' → logprob: -3.9848525524139404
    4. ' ' → logprob: -4.734852313995361
    5. ' ->' → logprob: -4.859852313995361
    6. 'to' → logprob: -4.984852313995361
    7. ',' → logprob: -4.984852313995361
    8. ' at' → logprob: -6.234852313995361
    9. ' ,' → logprob: -6.234852313995361
    10. '_to' → logprob: -6.234852313995361

Token 327: ' adjacent' (ID: 39069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3376918137073517
    2. ' intersection' → logprob: -1.7126917839050293
    3. ' next' → logprob: -2.9626917839050293
    4. 'intersection' → logprob: -3.8376917839050293
    5. '(inter' → logprob: -4.837691783905029
    6. '(col' → logprob: -5.462691783905029
    7. 'col' → logprob: -5.712691783905029
    8. ' the' → logprob: -5.712691783905029
    9. ' col' → logprob: -5.712691783905029
    10. 'next' → logprob: -5.712691783905029

Token 328: ' intersection' (ID: 42002)
  Prédit: ' intersection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersection' → logprob: -0.372068852186203
    2. 'intersection' → logprob: -2.4970688819885254
    3. ' intersections' → logprob: -2.6220688819885254
    4. '_inter' → logprob: -3.1220688819885254
    5. ' ' → logprob: -3.3720688819885254
    6. '_' → logprob: -4.497068881988525
    7. 'inter' → logprob: -4.497068881988525
    8. ' positions' → logprob: -4.872068881988525
    9. ' token' → logprob: -4.872068881988525
    10. ' ' → logprob: -4.997068881988525

Token 329: ' cost' (ID: 3097)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40547046065330505
    2. '   ' → logprob: -2.530470371246338
    3. ')' → logprob: -2.655470371246338
    4. '<|end|>' → logprob: -2.905470371246338
    5. ',' → logprob: -3.280470371246338
    6. '_' → logprob: -3.905470371246338
    7. '       ' → logprob: -4.280470371246338
    8. ' ' → logprob: -4.655470371246338
    9. '(s' → logprob: -4.655470371246338
    10. ' =' → logprob: -5.280470371246338

Token 330: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7923481464385986
    2. ' +' → logprob: -1.6673481464385986
    3. ' ' → logprob: -2.1673481464385986
    4. '=' → logprob: -2.1673481464385986
    5. '1' → logprob: -2.2923481464385986
    6. '+' → logprob: -5.0423479080200195
    7. ' (' → logprob: -5.2923479080200195
    8. '   ' → logprob: -5.2923479080200195
    9. ':' → logprob: -6.0423479080200195
    10. 's' → logprob: -6.1673479080200195

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010347125120460987
    2. ' ' → logprob: -4.63534688949585
    3. '2' → logprob: -8.510347366333008
    4. '0' → logprob: -9.135347366333008
    5. ' col' → logprob: -9.760347366333008
    6. '10' → logprob: -9.885347366333008
    7. 'col' → logprob: -10.260347366333008
    8. '3' → logprob: -10.635347366333008
    9. '+' → logprob: -10.885347366333008
    10. '5' → logprob: -11.135347366333008

Token 332: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8253545761108398
    2. '
' → logprob: -0.9503545761108398
    3. '       ' → logprob: -2.82535457611084
    4. ',' → logprob: -3.57535457611084
    5. '    
' → logprob: -3.82535457611084
    6. '<|end|>' → logprob: -4.20035457611084
    7. '\n' → logprob: -4.70035457611084
    8. ')' → logprob: -4.82535457611084
    9. '_' → logprob: -5.32535457611084
    10. ' 
' → logprob: -5.45035457611084

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07933244854211807
    2. '
' → logprob: -3.9543323516845703
    3. '        
' → logprob: -4.20433235168457
    4. '<|end|>' → logprob: -4.20433235168457
    5. '\n' → logprob: -4.95433235168457
    6. '#' → logprob: -5.82933235168457
    7. '\' → logprob: -5.95433235168457
    8. '   ' → logprob: -5.95433235168457
    9. ',' → logprob: -6.20433235168457
    10. '```' → logprob: -6.45433235168457

Token 334: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02813243493437767
    2. '        
' → logprob: -4.153132438659668
    3. '\n' → logprob: -5.903132438659668
    4. '
' → logprob: -6.153132438659668
    5. ',' → logprob: -6.403132438659668
    6. '           ' → logprob: -6.903132438659668
    7. '   ' → logprob: -7.028132438659668
    8. '#' (adapté à ' #') → logprob: -7.278132438659668
    9. '    
' → logprob: -7.528132438659668
    10. ')' → logprob: -7.778132438659668

Token 335: ' Walking' (ID: 49024)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014054559171199799
    2. '   ' → logprob: -5.764054775238037
    3. '        
' → logprob: -6.014054775238037
    4. '
' → logprob: -6.139054775238037
    5. ' ' → logprob: -6.639054775238037
    6. '#' → logprob: -7.514054775238037
    7. '           ' → logprob: -8.014054298400879
    8. ' 
' → logprob: -8.014054298400879
    9. ' #' → logprob: -8.264054298400879
    10. 'cost' → logprob: -8.264054298400879

Token 336: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.6098560094833374
    2. 'from' → logprob: -0.9848560094833374
    3. ' on' → logprob: -2.609856128692627
    4. ' to' → logprob: -5.234856128692627
    5. ' between' → logprob: -6.359856128692627
    6. 'on' → logprob: -6.984856128692627
    7. ' =' → logprob: -7.484856128692627
    8. 'to' → logprob: -7.859856128692627
    9. '   ' → logprob: -8.484855651855469
    10. ' ' → logprob: -8.859855651855469

Token 337: ' intersection' (ID: 42002)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0276682376861572
    2. ' intersection' → logprob: -1.0276682376861572
    3. 'intersection' → logprob: -1.9026682376861572
    4. '(row' → logprob: -2.0276682376861572
    5. '(inter' → logprob: -6.277667999267578
    6. 'inter' → logprob: -7.152667999267578
    7. 's' → logprob: -8.402667999267578
    8. '(col' → logprob: -9.152667999267578
    9. '(position' → logprob: -9.402667999267578
    10. ' row' → logprob: -9.652667999267578

Token 338: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.062046781182289124
    2. 'to' → logprob: -2.812046766281128
    3. '_to' → logprob: -9.812047004699707
    4. ' ' → logprob: -11.062047004699707
    5. '	to' → logprob: -13.312047004699707
    6. '<|end|>' → logprob: -13.562047004699707
    7. '   ' → logprob: -13.812047004699707
    8. '_' → logprob: -14.187047004699707
    9. ',' → logprob: -14.437047004699707
    10. ')' → logprob: -14.562047004699707

Token 339: ' middle' (ID: 10006)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.33523690700531006
    2. ' adjacent' → logprob: -1.46023690700531
    3. ' middle' → logprob: -3.3352370262145996
    4. ' midpoint' → logprob: -5.5852370262146
    5. '(inter' → logprob: -5.9602370262146
    6. ' ' → logprob: -6.7102370262146
    7. 'adj' → logprob: -6.7102370262146
    8. ' shelf' → logprob: -6.8352370262146
    9. 'middle' → logprob: -6.9602370262146
    10. 's' → logprob: -6.9602370262146

Token 340: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012034863233566284
    2. ' of' → logprob: -5.387034893035889
    3. ' ,' → logprob: -6.012034893035889
    4. ' point' → logprob: -6.262034893035889
    5. 'point' → logprob: -6.762034893035889
    6. 'of' → logprob: -7.012034893035889
    7. '   ' → logprob: -8.63703441619873
    8. ')' → logprob: -9.01203441619873
    9. ' ' → logprob: -9.26203441619873
    10. '+' → logprob: -9.51203441619873

Token 341: ' shelf' (ID: 40978)
  Prédit: ' shelf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -0.1274014264345169
    2. 's' → logprob: -2.252401351928711
    3. ' the' → logprob: -5.502401351928711
    4. 'the' → logprob: -5.627401351928711
    5. ' shelves' → logprob: -5.877401351928711
    6. ' passage' → logprob: -6.252401351928711
    7. ' bookshelf' → logprob: -7.627401351928711
    8. ' ' → logprob: -7.752401351928711
    9. ' a' → logprob: -8.252401351928711
    10. 'a' → logprob: -8.752401351928711

Token 342: ' or' (ID: 503)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25772997736930847
    2. '=' → logprob: -2.507730007171631
    3. ' (' → logprob: -2.507730007171631
    4. ' at' → logprob: -3.382730007171631
    5. ',' → logprob: -4.507730007171631
    6. ' between' → logprob: -5.257730007171631
    7. ' ' → logprob: -5.507730007171631
    8. '(' → logprob: -6.507730007171631
    9. ' or' → logprob: -6.632730007171631
    10. ' cost' → logprob: -7.007730007171631

Token 343: ' vice' (ID: 22625)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.8223998546600342
    2. ' middle' → logprob: -0.9473998546600342
    3. ' shelf' → logprob: -3.197399854660034
    4. ' from' → logprob: -3.572399854660034
    5. ' back' → logprob: -3.572399854660034
    6. 'from' → logprob: -3.697399854660034
    7. 's' → logprob: -4.322400093078613
    8. ' vice' → logprob: -4.322400093078613
    9. 'back' → logprob: -5.072400093078613
    10. ' intersection' → logprob: -6.072400093078613

Token 344: ' versa' (ID: 74153)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14272910356521606
    2. ' =' → logprob: -2.0177290439605713
    3. '=
' → logprob: -10.767728805541992
    4. '==' → logprob: -12.392728805541992
    5. ',' → logprob: -12.392728805541992
    6. '```' → logprob: -12.642728805541992
    7. ' (' → logprob: -13.017728805541992
    8. '   ' → logprob: -13.142728805541992
    9. 'space' → logprob: -13.517728805541992
    10. '+=' → logprob: -13.517728805541992

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11434407532215118
    2. '=' → logprob: -2.2393441200256348
    3. ' cost' → logprob: -6.989344120025635
    4. ' is' → logprob: -7.989344120025635
    5. ' ' → logprob: -9.114343643188477
    6. 'cost' → logprob: -9.364343643188477
    7. ' costs' → logprob: -11.114343643188477
    8. ',' → logprob: -11.489343643188477
    9. '   ' → logprob: -11.739343643188477
    10. ':' → logprob: -11.739343643188477

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.988601803779602
    2. '1' → logprob: -0.988601803779602
    3. ' ' → logprob: -1.363601803779602
    4. '.' → logprob: -10.613601684570312
    5. ' .' → logprob: -11.113601684570312
    6. '2' → logprob: -11.488601684570312
    7. ' ' → logprob: -12.551101684570312
    8. '5' → logprob: -12.863601684570312
    9. '½' → logprob: -13.301101684570312
    10. '   ' → logprob: -13.613601684570312

Token 347: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5548381209373474
    2. '<|end|>' → logprob: -1.8048381805419922
    3. '        
' → logprob: -2.054838180541992
    4. '
' → logprob: -2.179838180541992
    5. '<|end|>' → logprob: -4.554838180541992
    6. '        

' → logprob: -6.429838180541992
    7. '        
        
' → logprob: -6.929838180541992
    8. '    
' → logprob: -6.929838180541992
    9. '   ' → logprob: -6.929838180541992
    10. ',' → logprob: -6.929838180541992

Token 348: '5' (ID: 20)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7764126658439636
    2. '<|end|>' → logprob: -1.1514127254486084
    3. '        
' → logprob: -1.9014127254486084
    4. '
' → logprob: -3.2764127254486084
    5. '   ' → logprob: -4.776412487030029
    6. '<|end|>' → logprob: -5.151412487030029
    7. '    
' → logprob: -5.276412487030029
    8. ' 
' → logprob: -5.776412487030029
    9. '        
        
' → logprob: -6.026412487030029
    10. '        

' → logprob: -6.276412487030029

Token 349: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4065876305103302
    2. '
' → logprob: -1.9065876007080078
    3. '<|end|>' → logprob: -2.031587600708008
    4. '        
' → logprob: -3.156587600708008
    5. '<|end|>' → logprob: -5.031587600708008
    6. '   ' → logprob: -7.031587600708008
    7. '    
' → logprob: -7.531587600708008
    8. ',' → logprob: -7.781587600708008
    9. '\n' → logprob: -7.781587600708008
    10. '        

' → logprob: -8.281587600708008

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11647007614374161
    2. '        
' → logprob: -2.4914700984954834
    3. '
' → logprob: -4.241469860076904
    4. '<|end|>' → logprob: -5.491469860076904
    5. '    
' → logprob: -6.616469860076904
    6. '   ' → logprob: -6.616469860076904
    7. '        
        
' → logprob: -6.991469860076904
    8. '  
' → logprob: -7.116469860076904
    9. '           ' → logprob: -7.616469860076904
    10. '        

' → logprob: -7.616469860076904

Token 351: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08299663662910461
    2. 'dp' → logprob: -3.3329966068267822
    3. '        
' → logprob: -5.332996845245361
    4. ' dp' → logprob: -5.457996845245361
    5. 'visited' → logprob: -5.457996845245361
    6. '
' → logprob: -5.582996845245361
    7. 'dist' → logprob: -5.707996845245361
    8. 'distance' → logprob: -5.707996845245361
    9. '   ' → logprob: -5.957996845245361
    10. '#' (adapté à ' #') → logprob: -6.082996845245361

Token 352: ' She' (ID: 3627)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.33166050910949707
    2. '       ' → logprob: -1.956660509109497
    3. ' dp' → logprob: -3.581660509109497
    4. 'needed' → logprob: -3.831660509109497
    5. 'required' → logprob: -4.331660270690918
    6. '#' → logprob: -4.456660270690918
    7. 'visited' → logprob: -4.706660270690918
    8. '   ' → logprob: -4.706660270690918
    9. 'cost' → logprob: -5.081660270690918
    10. 'need' → logprob: -5.331660270690918

Token 353: ' must' (ID: 2804)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.16251187026500702
    2. '.' → logprob: -2.6625118255615234
    3. 'can' → logprob: -3.5375118255615234
    4. '.can' → logprob: -4.287511825561523
    5. '_can' → logprob: -4.412511825561523
    6. '   ' → logprob: -5.037511825561523
    7. ' .' → logprob: -5.287511825561523
    8. ' ' → logprob: -5.662511825561523
    9. '#' → logprob: -6.037511825561523
    10. ' =' → logprob: -6.037511825561523

Token 354: ' put' (ID: 3006)
  Prédit: ' visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visit' → logprob: -1.3424346446990967
    2. 'collect' → logprob: -1.4674346446990967
    3. 'visit' → logprob: -1.4674346446990967
    4. ' collect' → logprob: -2.5924346446990967
    5. 'put' → logprob: -3.0924346446990967
    6. 'pick' → logprob: -3.3424346446990967
    7. ' pick' → logprob: -3.5924346446990967
    8. ' put' → logprob: -3.8424346446990967
    9. 'place' → logprob: -4.342434883117676
    10. ' place' → logprob: -4.342434883117676

Token 355: ' books' (ID: 7187)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.06330618262290955
    2. 'all' → logprob: -3.1883060932159424
    3. ' each' → logprob: -4.6883063316345215
    4. ' books' → logprob: -5.4383063316345215
    5. ' the' → logprob: -6.1883063316345215
    6. 'each' → logprob: -6.6883063316345215
    7. ' ' → logprob: -6.8133063316345215
    8. ' every' → logprob: -7.4383063316345215
    9. 'books' → logprob: -7.9383063316345215
    10. 'the' → logprob: -8.313305854797363

Token 356: ' at' (ID: 540)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.8379523754119873
    2. ' ' → logprob: -2.0879523754119873
    3. 'with' → logprob: -2.2129523754119873
    4. 's' → logprob: -2.4629523754119873
    5. '<|end|>' → logprob: -2.5879523754119873
    6. ' on' → logprob: -2.5879523754119873
    7. ' s' → logprob: -3.8379523754119873
    8. ' =' → logprob: -4.087952613830566
    9. ' in' → logprob: -4.212952613830566
    10. ',' → logprob: -5.212952613830566

Token 357: ' shelves' (ID: 52049)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.6301112174987793
    2. 'positions' → logprob: -2.0051112174987793
    3. ' shelves' → logprob: -2.1301112174987793
    4. ' all' → logprob: -2.1301112174987793
    5. 'all' → logprob: -2.7551112174987793
    6. 's' → logprob: -4.005111217498779
    7. ' shelf' → logprob: -5.505111217498779
    8. ' the' → logprob: -5.880111217498779
    9. ' each' → logprob: -6.755111217498779
    10. 'the' → logprob: -7.505111217498779

Token 358: ' with' (ID: 483)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5780285596847534
    2. ' with' → logprob: -1.5780285596847534
    3. ',' → logprob: -1.7030285596847534
    4. ' s' → logprob: -2.453028678894043
    5. '       ' → logprob: -2.578028678894043
    6. ' ,' → logprob: -2.828028678894043
    7. '<|end|>' → logprob: -3.453028678894043
    8. ' (' → logprob: -3.703028678894043
    9. '(s' → logprob: -4.328028678894043
    10. 'with' → logprob: -4.328028678894043

Token 359: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.6105164885520935
    2. ' Y' → logprob: -1.1105165481567383
    3. ' '' → logprob: -2.4855165481567383
    4. ''' → logprob: -3.6105165481567383
    5. 'ID' → logprob: -5.610516548156738
    6. 'books' → logprob: -6.110516548156738
    7. ' books' → logprob: -6.360516548156738
    8. ''s' → logprob: -6.485516548156738
    9. ' IDs' → logprob: -7.235516548156738
    10. 'id' → logprob: -7.235516548156738

Token 360: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5518410801887512
    2. '
' → logprob: -1.6768410205841064
    3. '        
' → logprob: -2.0518410205841064
    4. '<|end|>' → logprob: -2.5518410205841064
    5. 's' → logprob: -5.1768412590026855
    6. '<|end|>' → logprob: -5.3018412590026855
    7. '#' → logprob: -5.6768412590026855
    8. '        

' → logprob: -6.8018412590026855
    9. '_' → logprob: -6.8018412590026855
    10. ',' → logprob: -6.8018412590026855

Token 361: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6640043258666992
    2. '       ' → logprob: -0.9140043258666992
    3. '        
' → logprob: -3.039004325866699
    4. '   ' → logprob: -4.664004325866699
    5. ' 
' → logprob: -4.664004325866699
    6. ' ' → logprob: -6.164004325866699
    7. '<|end|>' → logprob: -6.289004325866699
    8. '```' → logprob: -6.539004325866699
    9. '    
' → logprob: -6.664004325866699
    10. '_' → logprob: -6.664004325866699

Token 362: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10615944117307663
    2. '
' → logprob: -3.2311594486236572
    3. '        
' → logprob: -3.3561594486236572
    4. ' 
' → logprob: -4.731159210205078
    5. 'dp' → logprob: -4.981159210205078
    6. ' dp' → logprob: -5.981159210205078
    7. '   ' → logprob: -6.231159210205078
    8. '    
' → logprob: -7.481159210205078
    9. '        ' → logprob: -7.481159210205078
    10. '  
' → logprob: -7.731159210205078

Token 363: ' Putting' (ID: 130061)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6245724558830261
    2. '       ' → logprob: -1.874572515487671
    3. ' dp' → logprob: -2.749572515487671
    4. 'visited' → logprob: -3.624572515487671
    5. ' positions' → logprob: -3.749572515487671
    6. ' DP' → logprob: -3.749572515487671
    7. '#' → logprob: -3.749572515487671
    8. 'needed' → logprob: -3.999572515487671
    9. 'positions' → logprob: -4.374572277069092
    10. 'targets' → logprob: -4.374572277069092

Token 364: ' a' (ID: 261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39111581444740295
    2. ' a' → logprob: -2.14111590385437
    3. ' books' → logprob: -3.14111590385437
    4. ' ' → logprob: -3.26611590385437
    5. ' _' → logprob: -3.64111590385437
    6. ' =' → logprob: -3.76611590385437
    7. ' all' → logprob: -4.141115665435791
    8. ' the' → logprob: -4.141115665435791
    9. ' at' → logprob: -4.516115665435791
    10. '<|end|>' → logprob: -4.766115665435791

Token 365: ' book' (ID: 2392)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6141785383224487
    2. 'll' → logprob: -1.9891785383224487
    3. ' book' → logprob: -2.3641786575317383
    4. ' ' → logprob: -2.6141786575317383
    5. ' space' → logprob: -3.2391786575317383
    6. ' ll' → logprob: -3.6141786575317383
    7. 't' → logprob: -3.9891786575317383
    8. ' _' → logprob: -4.239178657531738
    9. ' at' → logprob: -4.489178657531738
    10. '_book' → logprob: -4.864178657531738

Token 366: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.2635068893432617
    2. ' =' → logprob: -2.3885068893432617
    3. ' on' → logprob: -2.5135068893432617
    4. '=' → logprob: -3.7635068893432617
    5. ' is' → logprob: -4.388506889343262
    6. ' in' → logprob: -4.638506889343262
    7. '<|end|>' → logprob: -5.763506889343262
    8. ' ' → logprob: -6.013506889343262
    9. ' into' → logprob: -6.138506889343262
    10. 'at' → logprob: -7.388506889343262

Token 367: ' shelf' (ID: 40978)
  Prédit: ' shelf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -0.4472154378890991
    2. ' the' → logprob: -1.8222154378890991
    3. ' position' → logprob: -2.6972155570983887
    4. ' (' → logprob: -2.8222155570983887
    5. ' a' → logprob: -3.0722155570983887
    6. ' ' → logprob: -4.822215557098389
    7. ' shelves' → logprob: -5.572215557098389
    8. ' middle' → logprob: -5.572215557098389
    9. ' positions' → logprob: -6.072215557098389
    10. ' each' → logprob: -6.447215557098389

Token 368: ' s' (ID: 265)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.8015348315238953
    2. ' s' → logprob: -1.17653489112854
    3. 's' → logprob: -2.92653489112854
    4. ' =' → logprob: -2.92653489112854
    5. ' number' → logprob: -3.30153489112854
    6. 'with' → logprob: -3.42653489112854
    7. '[s' → logprob: -4.301534652709961
    8. ' ' → logprob: -4.426534652709961
    9. 'number' → logprob: -4.551534652709961
    10. ' ==' → logprob: -4.926534652709961

Token 369: ' means' (ID: 4748)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40940237045288086
    2. ' ==' → logprob: -2.284402370452881
    3. '=' → logprob: -2.409402370452881
    4. ' requires' → logprob: -3.159402370452881
    5. ' s' → logprob: -4.284402370452881
    6. ')' → logprob: -4.284402370452881
    7. '==' → logprob: -4.534402370452881
    8. ' with' → logprob: -4.784402370452881
    9. 's' → logprob: -4.784402370452881
    10. ' is' → logprob: -5.034402370452881

Token 370: ' stopping' (ID: 36616)
  Prédit: ' moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' moving' → logprob: -0.2724829614162445
    2. ' visiting' → logprob: -2.5224828720092773
    3. ' paying' → logprob: -2.6474828720092773
    4. ' she' → logprob: -4.147482872009277
    5. ' completing' → logprob: -4.272482872009277
    6. ' adding' → logprob: -4.522482872009277
    7. 'moving' → logprob: -5.022482872009277
    8. ' increment' → logprob: -5.397482872009277
    9. ' walking' → logprob: -5.522482872009277
    10. ' placing' → logprob: -5.897482872009277

Token 371: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.023380812257528305
    2. '_' → logprob: -5.273380756378174
    3. '   ' → logprob: -5.773380756378174
    4. 'at' → logprob: -5.898380756378174
    5. ' ' → logprob: -6.148380756378174
    6. ' on' → logprob: -6.273380756378174
    7. '=' → logprob: -6.398380756378174
    8. ' (' → logprob: -6.898380756378174
    9. '    ' → logprob: -7.148380756378174
    10. ' =' → logprob: -7.398380756378174

Token 372: ' middle' (ID: 10006)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.022043466567993164
    2. '(row' → logprob: -5.147043228149414
    3. ' the' → logprob: -5.772043228149414
    4. 's' → logprob: -5.772043228149414
    5. '(s' → logprob: -5.897043228149414
    6. ' shelf' → logprob: -6.272043228149414
    7. '(' → logprob: -6.397043228149414
    8. ' position' → logprob: -6.897043228149414
    9. ' s' → logprob: -7.397043228149414
    10. ' ' → logprob: -7.772043228149414

Token 373: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5856058597564697
    2. ')' → logprob: -1.2106058597564697
    3. ' of' → logprob: -3.3356058597564697
    4. '       ' → logprob: -3.7106058597564697
    5. ',' → logprob: -3.8356058597564697
    6. '   ' → logprob: -4.210605621337891
    7. 'of' → logprob: -4.835605621337891
    8. '<|end|>' → logprob: -5.085605621337891
    9. '_of' → logprob: -5.460605621337891
    10. '```' → logprob: -5.460605621337891

Token 374: ' shelf' (ID: 40978)
  Prédit: ' shelf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -0.23410475254058838
    2. 's' → logprob: -1.6091047525405884
    3. 'the' → logprob: -5.109104633331299
    4. ' the' → logprob: -6.234104633331299
    5. ' row' → logprob: -9.109105110168457
    6. 'row' → logprob: -9.109105110168457
    7. ' shelves' → logprob: -9.484105110168457
    8. ' (' → logprob: -9.734105110168457
    9. ' bookshelf' → logprob: -9.984105110168457
    10. ' shel' → logprob: -10.109105110168457

Token 375: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1421571969985962
    2. ' s' → logprob: -1.7671571969985962
    3. ' (' → logprob: -2.1421570777893066
    4. 's' → logprob: -2.3921570777893066
    5. ' ' → logprob: -2.3921570777893066
    6. '_' → logprob: -2.8921570777893066
    7. ',' → logprob: -3.7671570777893066
    8. ')' → logprob: -3.7671570777893066
    9. '   ' → logprob: -3.8921570777893066
    10. ' _' → logprob: -4.017157077789307

Token 376: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09861288219690323
    2. '        
' → logprob: -3.0986127853393555
    3. '<|end|>' → logprob: -3.8486127853393555
    4. '   ' → logprob: -4.9736127853393555
    5. ' 
' → logprob: -5.3486127853393555
    6. ' ' → logprob: -5.3486127853393555
    7. '
' → logprob: -5.8486127853393555
    8. '    
' → logprob: -6.5986127853393555
    9. ')' → logprob: -6.8486127853393555
    10. '        ' → logprob: -7.0986127853393555

Token 377: ' least' (ID: 5153)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.7411296963691711
    2. ' (' → logprob: -1.2411296367645264
    3. ' row' → logprob: -1.8661296367645264
    4. ' s' → logprob: -3.2411296367645264
    5. 's' → logprob: -4.3661298751831055
    6. ' col' → logprob: -4.7411298751831055
    7. ' ' → logprob: -5.3661298751831055
    8. '0' → logprob: -5.6161298751831055
    9. 'row' → logprob: -5.7411298751831055
    10. ' position' → logprob: -6.3661298751831055

Token 378: ' once' (ID: 4730)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12438872456550598
    2. '<|end|>' → logprob: -3.2493886947631836
    3. '       ' → logprob: -3.9993886947631836
    4. '0' → logprob: -4.624388694763184
    5. ' )' → logprob: -4.749388694763184
    6. ' s' → logprob: -4.874388694763184
    7. ')' → logprob: -4.999388694763184
    8. '_' → logprob: -4.999388694763184
    9. '        ' → logprob: -5.499388694763184
    10. ' 
' → logprob: -5.749388694763184

Token 379: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3030122220516205
    2. '<|end|>' → logprob: -1.6780122518539429
    3. '        
' → logprob: -2.9280121326446533
    4. '
' → logprob: -4.553012371063232
    5. '<|end|>' → logprob: -5.678012371063232
    6. ' ' → logprob: -6.803012371063232
    7. '   ' → logprob: -7.178012371063232
    8. ' 
' → logprob: -7.303012371063232
    9. '        ' → logprob: -7.428012371063232
    10. '        

' → logprob: -7.803012371063232

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20290924608707428
    2. '<|end|>' → logprob: -3.202909231185913
    3. '_' → logprob: -3.327909231185913
    4. '        
' → logprob: -3.577909231185913
    5. ' 
' → logprob: -3.702909231185913
    6. ' ' → logprob: -4.202909469604492
    7. ')' → logprob: -4.327909469604492
    8. '        ' → logprob: -5.577909469604492
    9. '   ' → logprob: -5.702909469604492
    10. ',' → logprob: -5.702909469604492

Token 381: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060951605439186096
    2. '        
' → logprob: -3.9359517097473145
    3. ' 
' → logprob: -3.9359517097473145
    4. ' ' → logprob: -5.0609517097473145
    5. '   ' → logprob: -6.0609517097473145
    6. '
' → logprob: -6.0609517097473145
    7. '\' → logprob: -6.6859517097473145
    8. '  
' → logprob: -6.9359517097473145
    9. '        ' → logprob: -7.0609517097473145
    10. '           ' → logprob: -7.4359517097473145

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007709077559411526
    2. '        
' → logprob: -5.75770902633667
    3. '<|end|>' → logprob: -7.13270902633667
    4. '   ' → logprob: -7.25770902633667
    5. '        ' → logprob: -7.63270902633667
    6. '
' → logprob: -7.63270902633667
    7. ' next' → logprob: -8.257709503173828
    8. '    ' → logprob: -8.257709503173828
    9. '           ' → logprob: -8.757709503173828
    10. ' 
' → logprob: -8.882709503173828

Token 383: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12027552723884583
    2. ' for' → logprob: -3.4952754974365234
    3. '   ' → logprob: -4.620275497436523
    4. ' #' → logprob: -4.995275497436523
    5. 'pos' → logprob: -4.995275497436523
    6. 'for' → logprob: -4.995275497436523
    7. '        ' → logprob: -5.370275497436523
    8. '        
' → logprob: -5.620275497436523
    9. ' next' → logprob: -5.620275497436523
    10. ' cost' → logprob: -5.995275497436523

Token 384: ' Objective' (ID: 95517)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009880632162094116
    2. 'from' → logprob: -5.884880542755127
    3. '#' → logprob: -6.134880542755127
    4. 'dist' → logprob: -6.634880542755127
    5. 'INF' → logprob: -6.759880542755127
    6. '       ' → logprob: -7.009880542755127
    7. 'pos' → logprob: -8.259881019592285
    8. '   ' → logprob: -8.259881019592285
    9. 'import' → logprob: -8.509881019592285
    10. 'DP' → logprob: -8.884881019592285

Token 385: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45192837715148926
    2. ':' → logprob: -1.0769283771514893
    3. ' is' → logprob: -4.07692813873291
    4. '=' → logprob: -5.82692813873291
    5. ' :' → logprob: -5.95192813873291
    6. ':
' → logprob: -8.32692813873291
    7. '   ' → logprob: -9.82692813873291
    8. 'is' → logprob: -10.57692813873291
    9. 's' → logprob: -10.82692813873291
    10. ' ' → logprob: -10.95192813873291

Token 386: ' minimal' (ID: 19957)
  Prédit: ' minimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimize' → logprob: -0.6584802865982056
    2. ' return' → logprob: -1.5334802865982056
    3. ' min' → logprob: -1.9084802865982056
    4. ' continue' → logprob: -3.158480167388916
    5. '       ' → logprob: -4.033480167388916
    6. ' find' → logprob: -4.408480167388916
    7. ' complete' → logprob: -4.908480167388916
    8. ' Min' → logprob: -4.908480167388916
    9. ' pass' → logprob: -5.033480167388916
    10. ' #' → logprob: -5.158480167388916

Token 387: ' total' (ID: 3609)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.8428430557250977
    2. '_' → logprob: -1.4678430557250977
    3. '_cost' → logprob: -1.8428430557250977
    4. ' _' → logprob: -1.9678430557250977
    5. 'cost' → logprob: -3.2178430557250977
    6. ' distance' → logprob: -8.717843055725098
    7. ' ' → logprob: -8.842843055725098
    8. '   ' → logprob: -9.342843055725098
    9. '_distance' → logprob: -9.342843055725098
    10. ' code' → logprob: -9.592843055725098

Token 388: ' cost' (ID: 3097)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0917869433760643
    2. '_' → logprob: -3.0917868614196777
    3. ' _' → logprob: -3.4667868614196777
    4. ' cost' → logprob: -4.591786861419678
    5. 'cost' → logprob: -7.341786861419678
    6. '_distance' → logprob: -8.466787338256836
    7. ' ' → logprob: -11.091787338256836
    8. '_c' → logprob: -11.216787338256836
    9. '_space' → logprob: -11.966787338256836
    10. '_
' → logprob: -12.466787338256836

Token 389: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0546923875808716
    2. '
' → logprob: -1.3046923875808716
    3. '        
' → logprob: -2.179692268371582
    4. '   ' → logprob: -2.679692268371582
    5. '<|end|>' → logprob: -2.929692268371582
    6. ' 
' → logprob: -3.929692268371582
    7. ' ' → logprob: -3.929692268371582
    8. '    ' → logprob: -3.929692268371582
    9. '    
' → logprob: -4.054692268371582
    10. '_' → logprob: -4.054692268371582

Token 390: ' put' (ID: 3006)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.9834255576133728
    2. ' visit' → logprob: -1.4834256172180176
    3. ' cover' → logprob: -2.7334256172180176
    4. 'put' → logprob: -2.7334256172180176
    5. 'collect' → logprob: -2.7334256172180176
    6. 'stop' → logprob: -3.2334256172180176
    7. ' collect' → logprob: -3.2334256172180176
    8. ' complete' → logprob: -3.4834256172180176
    9. ' stop' → logprob: -3.8584256172180176
    10. 'complete' → logprob: -4.233425617218018

Token 391: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.00163662014529109
    2. 'all' → logprob: -7.251636505126953
    3. ' books' → logprob: -8.126636505126953
    4. ' the' → logprob: -8.251636505126953
    5. ' a' → logprob: -8.376636505126953
    6. ' down' → logprob: -9.626636505126953
    7. ' ' → logprob: -9.876636505126953
    8. '   ' → logprob: -11.626636505126953
    9. '    ' → logprob: -13.251636505126953
    10. '  ' → logprob: -13.251636505126953

Token 392: ' books' (ID: 7187)
  Prédit: ' books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' books' → logprob: -0.042284443974494934
    2. ' the' → logprob: -4.0422844886779785
    3. 'books' → logprob: -4.7922844886779785
    4. ' required' → logprob: -4.7922844886779785
    5. '_' → logprob: -5.5422844886779785
    6. '_books' → logprob: -6.5422844886779785
    7. ' needed' → logprob: -7.9172844886779785
    8. ' ' → logprob: -8.16728401184082
    9. ' shelves' → logprob: -8.41728401184082
    10. '_s' → logprob: -8.91728401184082

Token 393: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1404268741607666
    2. '   ' → logprob: -1.5154268741607666
    3. ':' → logprob: -1.8904268741607666
    4. '_' → logprob: -2.7654268741607666
    5. ' ' → logprob: -2.7654268741607666
    6. '
' → logprob: -3.0154268741607666
    7. ',' → logprob: -3.3904268741607666
    8. '=' → logprob: -3.6404268741607666
    9. ')' → logprob: -4.0154266357421875
    10. '       ' → logprob: -4.1404266357421875

Token 394: ' move' (ID: 5275)
  Prédit: ' reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.9646303057670593
    2. ' finish' → logprob: -1.839630365371704
    3. 'end' → logprob: -1.964630365371704
    4. ' end' → logprob: -1.964630365371704
    5. 'finish' → logprob: -2.839630365371704
    6. 'reach' → logprob: -2.964630365371704
    7. 'return' → logprob: -3.339630365371704
    8. ' return' → logprob: -3.589630365371704
    9. '   ' → logprob: -6.464630126953125
    10. 'print' → logprob: -7.464630126953125

Token 395: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1904464960098267
    2. ' =' → logprob: -1.9404464960098267
    3. '       ' → logprob: -2.190446376800537
    4. ' ' → logprob: -2.440446376800537
    5. '_' → logprob: -2.565446376800537
    6. '
' → logprob: -3.190446376800537
    7. ',' → logprob: -3.315446376800537
    8. ' 
' → logprob: -3.690446376800537
    9. '    ' → logprob: -3.690446376800537
    10. ' ,' → logprob: -4.190446376800537

Token 396: ' start' (ID: 1604)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6049724817276001
    2. '(' → logprob: -0.8549724817276001
    3. ' start' → logprob: -4.3549723625183105
    4. 'start' → logprob: -4.9799723625183105
    5. ' position' → logprob: -5.3549723625183105
    6. 'position' → logprob: -5.8549723625183105
    7. ' ' → logprob: -7.2299723625183105
    8. '0' → logprob: -7.8549723625183105
    9. 'intersection' → logprob: -9.854972839355469
    10. ' intersection' → logprob: -10.354972839355469

Token 397: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47908058762550354
    2. ' ,' → logprob: -2.1040806770324707
    3. ',' → logprob: -2.6040806770324707
    4. '    ' → logprob: -3.3540806770324707
    5. ' ' → logprob: -3.4790806770324707
    6. '=' → logprob: -3.7290806770324707
    7. '   ' → logprob: -3.7290806770324707
    8. ' )' → logprob: -4.479080677032471
    9. ')' → logprob: -4.604080677032471
    10. ' tokens' → logprob: -4.604080677032471

Token 398: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.39005377888679504
    2. 'end' → logprob: -1.1400537490844727
    3. ' (' → logprob: -6.015053749084473
    4. '(' → logprob: -7.640053749084473
    5. ' ' → logprob: -8.890053749084473
    6. ' finish' → logprob: -10.015053749084473
    7. ' the' → logprob: -10.140053749084473
    8. '(end' → logprob: -11.890053749084473
    9. 'finish' → logprob: -11.890053749084473
    10. '_end' → logprob: -12.265053749084473

Token 399: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.790586531162262
    2. '
' → logprob: -1.4155864715576172
    3. ':' → logprob: -1.7905864715576172
    4. ' =' → logprob: -3.665586471557617
    5. '       ' → logprob: -4.165586471557617
    6. '_' → logprob: -4.290586471557617
    7. ' ' → logprob: -4.415586471557617
    8. ' 
' → logprob: -4.415586471557617
    9. '    
' → logprob: -4.665586471557617
    10. '\' → logprob: -4.915586471557617

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5554536581039429
    2. '
' → logprob: -1.9304536581039429
    3. '        
' → logprob: -1.9304536581039429
    4. ' 
' → logprob: -3.6804537773132324
    5. '   ' → logprob: -3.8054537773132324
    6. 'dp' → logprob: -3.9304537773132324
    7. '        
        
' → logprob: -4.305453777313232
    8. '    
' → logprob: -4.930453777313232
    9. '        

' → logprob: -4.930453777313232
    10. ' ' → logprob: -5.305453777313232

Token 401: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3143547475337982
    2. 'dp' → logprob: -2.064354658126831
    3. ' dp' → logprob: -2.564354658126831
    4. ' #' → logprob: -4.06435489654541
    5. '#' (adapté à ' #') → logprob: -4.68935489654541
    6. 'from' → logprob: -5.43935489654541
    7. ' from' → logprob: -5.68935489654541
    8. ' DP' → logprob: -5.68935489654541
    9. 'visited' → logprob: -5.81435489654541
    10. '   ' → logprob: -5.81435489654541

Token 402: ' Observation' (ID: 143762)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.9599220752716064
    2. 'dp' → logprob: -1.0849220752716064
    3. '       ' → logprob: -1.8349220752716064
    4. 'from' → logprob: -3.4599220752716064
    5. '   ' → logprob: -3.9599220752716064
    6. 'import' → logprob: -4.084921836853027
    7. ' from' → logprob: -4.084921836853027
    8. ' DP' → logprob: -4.709921836853027
    9. ' import' → logprob: -5.084921836853027
    10. '        
' → logprob: -6.459921836853027

Token 403: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34807533025741577
    2. ' =' → logprob: -1.8480753898620605
    3. '   ' → logprob: -2.8480753898620605
    4. ' :' → logprob: -3.2230753898620605
    5. 's' → logprob: -3.9730753898620605
    6. ' s' → logprob: -5.2230753898620605
    7. '       ' → logprob: -6.0980753898620605
    8. '#' → logprob: -6.2230753898620605
    9. '=' → logprob: -6.4730753898620605
    10. ':
' → logprob: -6.5980753898620605

Token 404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3086988031864166
    2. '        ' → logprob: -1.8086987733840942
    3. '    ' → logprob: -3.308698892593384
    4. ' dp' → logprob: -3.808698892593384
    5. '        
' → logprob: -4.308698654174805
    6. ' #' → logprob: -4.808698654174805
    7. '   ' → logprob: -5.683698654174805
    8. ' for' → logprob: -5.933698654174805
    9. 'dp' → logprob: -6.183698654174805
    10. '#' → logprob: -6.433698654174805

Token 405: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1401253193616867
    2. '#' (adapté à ' #') → logprob: -2.265125274658203
    3. ' #' → logprob: -3.890125274658203
    4. '
' → logprob: -6.015125274658203
    5. '        ' → logprob: -6.390125274658203
    6. '        
' → logprob: -7.140125274658203
    7. '   ' → logprob: -7.640125274658203
    8. 'import' → logprob: -7.890125274658203
    9. 'def' → logprob: -9.015125274658203
    10. ' ' → logprob: -9.515125274658203

Token 406: ' Since' (ID: 12265)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5948997139930725
    2. ' dp' → logprob: -1.5948996543884277
    3. '#' → logprob: -1.7198996543884277
    4. 'from' → logprob: -3.5948996543884277
    5. ' #' → logprob: -4.719899654388428
    6. ' from' → logprob: -4.969899654388428
    7. 'import' → logprob: -5.844899654388428
    8. '   ' → logprob: -5.844899654388428
    9. ' DP' → logprob: -6.094899654388428
    10. 'We' → logprob: -6.219899654388428

Token 407: ' moving' (ID: 10067)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7160478234291077
    2. ' all' → logprob: -2.216047763824463
    3. ' books' → logprob: -2.591047763824463
    4. ' she' → logprob: -2.716047763824463
    5. 'the' → logprob: -3.216047763824463
    6. ' moving' → logprob: -3.716047763824463
    7. ' we' → logprob: -3.841047763824463
    8. 'books' → logprob: -3.966047763824463
    9. ' movement' → logprob: -4.091047763824463
    10. ' there' → logprob: -4.216047763824463

Token 408: ' backward' (ID: 58986)
  Prédit: ' forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' forward' → logprob: -0.08714532107114792
    2. ' on' → logprob: -2.8371453285217285
    3. ' only' → logprob: -4.9621453285217285
    4. 'forward' → logprob: -4.9621453285217285
    5. ' along' → logprob: -5.3371453285217285
    6. 'on' → logprob: -6.5871453285217285
    7. ' is' → logprob: -7.2121453285217285
    8. ' from' → logprob: -7.7121453285217285
    9. 'along' → logprob: -7.9621453285217285
    10. 'only' → logprob: -7.9621453285217285

Token 409: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2005606889724731
    2. '<|end|>' → logprob: -1.2005606889724731
    3. ' on' → logprob: -1.9505606889724731
    4. 's' → logprob: -2.9505605697631836
    5. ',' → logprob: -3.3255605697631836
    6. ' ' → logprob: -3.5755605697631836
    7. '<|end|>' → logprob: -3.8255605697631836
    8. ')' → logprob: -4.200560569763184
    9. 'on' → logprob: -4.200560569763184
    10. ' and' → logprob: -4.450560569763184

Token 410: ' forbidden' (ID: 74435)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2534720003604889
    2. ' not' → logprob: -1.5034719705581665
    3. ' forbidden' → logprob: -7.753471851348877
    4. 'dis' → logprob: -7.878471851348877
    5. 'for' → logprob: -8.503472328186035
    6. ' dis' → logprob: -8.878472328186035
    7. ' prohibited' → logprob: -9.003472328186035
    8. 'blocked' → logprob: -9.503472328186035
    9. 'allowed' → logprob: -9.628472328186035
    10. 'disabled' → logprob: -10.503472328186035

Token 411: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02440626733005047
    2. ' ,' → logprob: -4.774406433105469
    3. ' on' → logprob: -5.024406433105469
    4. ',
' → logprob: -5.399406433105469
    5. ' and' → logprob: -6.899406433105469
    6. ' to' → logprob: -7.024406433105469
    7. ' in' → logprob: -7.274406433105469
    8. ' the' → logprob: -7.899406433105469
    9. '   ' → logprob: -8.274406433105469
    10. ' for' → logprob: -8.649406433105469

Token 412: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.9247750043869019
    2. ' main' → logprob: -1.1747750043869019
    3. 'the' → logprob: -2.1747751235961914
    4. 'horizontal' → logprob: -2.4247751235961914
    5. ' horizontal' → logprob: -3.4247751235961914
    6. ' the' → logprob: -3.5497751235961914
    7. ' passages' → logprob: -4.049775123596191
    8. 'pass' → logprob: -4.674775123596191
    9. ' passage' → logprob: -6.924775123596191
    10. ' intersections' → logprob: -7.424775123596191

Token 413: ' passages' (ID: 69047)
  Prédit: ' passages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passages' → logprob: -0.02636498026549816
    2. 'pass' → logprob: -4.651364803314209
    3. '_pass' → logprob: -4.901364803314209
    4. ' passage' → logprob: -5.026364803314209
    5. '_' → logprob: -6.901364803314209
    6. ' _' → logprob: -7.276364803314209
    7. ' pass' → logprob: -7.276364803314209
    8. ' ' → logprob: -10.526365280151367
    9. '   ' → logprob: -11.276365280151367
    10. ' ' → logprob: -11.651365280151367

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0776011198759079
    2. '<|end|>' → logprob: -2.702601194381714
    3. '<|end|>' → logprob: -6.202600955963135
    4. ',
' → logprob: -6.202600955963135
    5. ')' → logprob: -6.702600955963135
    6. ' ,' → logprob: -7.202600955963135
    7. '   ' → logprob: -7.702600955963135
    8. 's' → logprob: -7.952600955963135
    9. '#' → logprob: -8.952601432800293
    10. '_' → logprob: -9.202601432800293

Token 415: ' path' (ID: 3104)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5634279251098633
    2. '#' → logprob: -2.3134279251098633
    3. ' the' → logprob: -2.4384279251098633
    4. '        ' → logprob: -2.4384279251098633
    5. '<|end|>' → logprob: -3.4384279251098633
    6. ' ' → logprob: -3.8134279251098633
    7. ' #' → logprob: -4.438427925109863
    8. 'the' → logprob: -4.688427925109863
    9. '    ' → logprob: -4.813427925109863
    10. ' we' → logprob: -4.938427925109863

Token 416: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8586263656616211
    2. 's' → logprob: -1.233626365661621
    3. '<|end|>' → logprob: -2.608626365661621
    4. ' can' → logprob: -2.983626365661621
    5. ' continues' → logprob: -3.233626365661621
    6. ' must' → logprob: -3.858626365661621
    7. '<|end|>' → logprob: -4.358626365661621
    8. ' s' → logprob: -4.358626365661621
    9. ' tokens' → logprob: -4.483626365661621
    10. ' is' → logprob: -4.858626365661621

Token 417: ' essentially' (ID: 29212)
  Prédit: ' always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' always' → logprob: -0.9665544033050537
    2. 'mon' → logprob: -1.7165544033050537
    3. ' monot' → logprob: -1.7165544033050537
    4. ' monoton' → logprob: -2.5915544033050537
    5. ' strictly' → logprob: -2.8415544033050537
    6. 'always' → logprob: -2.8415544033050537
    7. '   ' → logprob: -4.091554641723633
    8. 'strict' → logprob: -4.466554641723633
    9. ' non' → logprob: -4.716554641723633
    10. 'non' → logprob: -4.841554641723633

Token 418: ' from' (ID: 591)
  Prédit: ' linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' linear' → logprob: -1.2004427909851074
    2. 'mon' → logprob: -1.4504427909851074
    3. 'linear' → logprob: -1.9504427909851074
    4. ' monot' → logprob: -2.2004427909851074
    5. ' increasing' → logprob: -3.5754427909851074
    6. 'in' → logprob: -3.7004427909851074
    7. ' a' → logprob: -3.9504427909851074
    8. '   ' → logprob: -4.325442790985107
    9. ' monoton' → logprob: -4.325442790985107
    10. 'a' → logprob: -4.450442790985107

Token 419: ' col' (ID: 996)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.8973065614700317
    2. '(' → logprob: -1.3973065614700317
    3. '0' → logprob: -2.022306442260742
    4. ' left' → logprob: -2.522306442260742
    5. 'col' → logprob: -2.897306442260742
    6. ' (' → logprob: -3.022306442260742
    7. ' col' → logprob: -4.647306442260742
    8. ' ' → logprob: -5.022306442260742
    9. 'row' → logprob: -5.397306442260742
    10. ' row' → logprob: -6.022306442260742

Token 420: '=' (ID: 28)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.30664634704589844
    2. ' to' → logprob: -1.8066463470458984
    3. '+' → logprob: -2.9316463470458984
    4. ' ' → logprob: -3.8066463470458984
    5. '=' → logprob: -4.556646347045898
    6. ' +=' → logprob: -5.431646347045898
    7. '0' → logprob: -5.556646347045898
    8. ' =' → logprob: -5.681646347045898
    9. 'to' → logprob: -7.556646347045898
    10. '_to' → logprob: -8.056646347045898

Token 421: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020592691376805305
    2. ' ' → logprob: -3.89559268951416
    3. '```' → logprob: -10.77059268951416
    4. '   ' → logprob: -12.52059268951416
    5. '1' → logprob: -12.52059268951416
    6. ' col' → logprob: -12.77059268951416
    7. 'col' → logprob: -13.02059268951416
    8. '    ' → logprob: -13.27059268951416
    9. ' to' → logprob: -13.39559268951416
    10. ' N' → logprob: -13.52059268951416

Token 422: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0023528109304606915
    2. ' ' → logprob: -6.502352714538574
    3. 'to' → logprob: -7.127352714538574
    4. ',' → logprob: -11.752352714538574
    5. ' through' → logprob: -12.002352714538574
    6. '   ' → logprob: -12.252352714538574
    7. ' ' → logprob: -12.752352714538574
    8. ' onward' → logprob: -12.877352714538574
    9. ' onwards' → logprob: -12.877352714538574
    10. ')' → logprob: -13.002352714538574

Token 423: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.09118001908063889
    2. 'col' → logprob: -2.5911800861358643
    3. ' N' → logprob: -4.966179847717285
    4. 'N' → logprob: -5.716179847717285
    5. '4' → logprob: -6.341179847717285
    6. ' ' → logprob: -8.716179847717285
    7. '3' → logprob: -11.591179847717285
    8. ' ' → logprob: -12.966179847717285
    9. '1' → logprob: -13.216179847717285
    10. '```' → logprob: -13.216179847717285

Token 424: '=N' (ID: 143132)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007168562617152929
    2. '=N' → logprob: -5.632168769836426
    3. '+' → logprob: -6.132168769836426
    4. ' =' → logprob: -7.007168769836426
    5. '+=' → logprob: -8.882168769836426
    6. '1' → logprob: -9.382168769836426
    7. '```' → logprob: -10.132168769836426
    8. ' +' → logprob: -10.382168769836426
    9. ' ' → logprob: -10.507168769836426
    10. '0' → logprob: -10.507168769836426

Token 425: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6617431640625
    2. '       ' → logprob: -0.9117431640625
    3. ')' → logprob: -3.4117431640625
    4. ',' → logprob: -3.7867431640625
    5. '
' → logprob: -4.7867431640625
    6. ':' → logprob: -5.6617431640625
    7. '<|end|>' → logprob: -6.1617431640625
    8. ' for' → logprob: -6.5367431640625
    9. '    ' → logprob: -6.9117431640625
    10. ' ' → logprob: -7.0367431640625

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055287089198827744
    2. '   ' → logprob: -3.5552871227264404
    3. '
' → logprob: -4.805286884307861
    4. '        
' → logprob: -5.680286884307861
    5. ' ' → logprob: -5.930286884307861
    6. '<|end|>' → logprob: -6.055286884307861
    7. ')' → logprob: -6.305286884307861
    8. '        ' → logprob: -6.805286884307861
    9. ',' → logprob: -6.805286884307861
    10. '    ' → logprob: -7.430286884307861

Token 427: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02711706981062889
    2. '        
' → logprob: -4.7771172523498535
    3. '        ' → logprob: -5.4021172523498535
    4. ' ' → logprob: -5.6521172523498535
    5. '   ' → logprob: -5.7771172523498535
    6. '<|end|>' → logprob: -6.1521172523498535
    7. '
' → logprob: -6.6521172523498535
    8. '    ' → logprob: -6.9021172523498535
    9. ' 
' → logprob: -8.027116775512695
    10. ')' → logprob: -8.527116775512695

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019786816090345383
    2. '
' → logprob: -4.519786834716797
    3. '        
' → logprob: -5.144786834716797
    4. '   ' → logprob: -6.269786834716797
    5. ' for' → logprob: -9.019786834716797
    6. '    
' → logprob: -9.019786834716797
    7. '    ' → logprob: -9.644786834716797
    8. '        ' → logprob: -9.644786834716797
    9. '<|end|>' → logprob: -9.644786834716797
    10. '  
' → logprob: -9.769786834716797

Token 429: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1369466930627823
    2. ' dp' → logprob: -3.136946678161621
    3. 'dp' → logprob: -3.261946678161621
    4. '#' (adapté à ' #') → logprob: -4.261946678161621
    5. ' #' → logprob: -4.261946678161621
    6. ' for' → logprob: -5.636946678161621
    7. 'prev' → logprob: -6.386946678161621
    8. '   ' → logprob: -6.511946678161621
    9. ' prev' → logprob: -6.511946678161621
    10. 'for' → logprob: -6.636946678161621

Token 430: ' She' (ID: 3627)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05093441903591156
    2. '   ' → logprob: -4.050934314727783
    3. '       ' → logprob: -4.175934314727783
    4. ' dp' → logprob: -4.550934314727783
    5. 'for' → logprob: -6.425934314727783
    6. '#' → logprob: -7.175934314727783
    7. 'from' → logprob: -7.550934314727783
    8. 'DP' → logprob: -7.800934314727783
    9. 'd' → logprob: -7.925934314727783
    10. 'dist' → logprob: -7.925934314727783

Token 431: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.48482415080070496
    2. ' .' → logprob: -2.1098241806030273
    3. ' =' → logprob: -2.7348241806030273
    4. '   ' → logprob: -2.9848241806030273
    5. ' ' → logprob: -3.1098241806030273
    6. '.' → logprob: -3.3598241806030273
    7. '_' → logprob: -3.8598241806030273
    8. ' has' → logprob: -4.609824180603027
    9. ' _' → logprob: -5.234824180603027
    10. ' is' → logprob: -5.484824180603027

Token 432: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.8811708092689514
    2. ' either' → logprob: -2.0061707496643066
    3. 'move' → logprob: -2.3811707496643066
    4. ' stay' → logprob: -2.8811707496643066
    5. 'stop' → logprob: -2.8811707496643066
    6. ' stop' → logprob: -3.0061707496643066
    7. 'stay' → logprob: -3.3811707496643066
    8. ' only' → logprob: -3.6311707496643066
    9. ' go' → logprob: -3.6311707496643066
    10. 'wait' → logprob: -4.756170749664307

Token 433: ' up' (ID: 869)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.9590923190116882
    2. ' either' → logprob: -2.084092378616333
    3. 'down' → logprob: -2.334092378616333
    4. 'only' → logprob: -2.459092378616333
    5. ' down' → logprob: -3.084092378616333
    6. ' on' → logprob: -3.084092378616333
    7. ' right' → logprob: -3.459092378616333
    8. 'right' → logprob: -3.584092378616333
    9. '   ' → logprob: -3.709092378616333
    10. 'vert' → logprob: -3.834092378616333

Token 434: '/down' (ID: 170878)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.18006478250026703
    2. 'or' → logprob: -2.1800646781921387
    3. ' and' → logprob: -3.8050646781921387
    4. 'and' → logprob: -3.9300646781921387
    5. '   ' → logprob: -5.055064678192139
    6. ',' → logprob: -6.555064678192139
    7. '/down' → logprob: -7.930064678192139
    8. 'down' → logprob: -8.055065155029297
    9. 'ward' → logprob: -8.180065155029297
    10. '       ' → logprob: -8.680065155029297

Token 435: ' between' (ID: 2870)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.6478837728500366
    2. ' or' → logprob: -1.7728837728500366
    3. ' on' → logprob: -2.272883892059326
    4. ' between' → logprob: -2.522883892059326
    5. ' one' → logprob: -3.397883892059326
    6. ' and' → logprob: -4.147883892059326
    7. '   ' → logprob: -4.272883892059326
    8. ' in' → logprob: -4.522883892059326
    9. ' to' → logprob: -4.897883892059326
    10. ',' → logprob: -5.147883892059326

Token 436: ' main' (ID: 2758)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.7105381488800049
    2. 'rows' → logprob: -1.2105381488800049
    3. 'adj' → logprob: -2.460538148880005
    4. ' adjacent' → logprob: -3.085538148880005
    5. ' intersections' → logprob: -3.585538148880005
    6. 'inter' → logprob: -3.960538148880005
    7. 'row' → logprob: -4.210537910461426
    8. ' row' → logprob: -5.085537910461426
    9. 's' → logprob: -6.335537910461426
    10. ' shelves' → logprob: -6.460537910461426

Token 437: ' passages' (ID: 69047)
  Prédit: ' passages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passages' → logprob: -0.09993012994527817
    2. 'pass' → logprob: -2.7249300479888916
    3. '_pass' → logprob: -4.349930286407471
    4. ' passage' → logprob: -4.474930286407471
    5. ' pass' → logprob: -6.099930286407471
    6. '   ' → logprob: -6.599930286407471
    7. ' ' → logprob: -8.099929809570312
    8. ' row' → logprob: -8.349929809570312
    9. '_' → logprob: -8.349929809570312
    10. '    ' → logprob: -8.849929809570312

Token 438: ' only' (ID: 1606)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.1156310960650444
    2. ' only' → logprob: -3.615631103515625
    3. ' on' → logprob: -3.615631103515625
    4. '   ' → logprob: -4.490631103515625
    5. ',' → logprob: -4.740631103515625
    6. ' in' → logprob: -4.990631103515625
    7. ' (' → logprob: -5.240631103515625
    8. ' vertically' → logprob: -5.240631103515625
    9. ' between' → logprob: -5.740631103515625
    10. '       ' → logprob: -5.865631103515625

Token 439: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.03472745418548584
    2. 'at' → logprob: -3.6597275733947754
    3. ' when' → logprob: -6.284727573394775
    4. ' in' → logprob: -6.284727573394775
    5. ' between' → logprob: -7.159727573394775
    6. ' on' → logprob: -7.284727573394775
    7. ' by' → logprob: -7.284727573394775
    8. '   ' → logprob: -7.534727573394775
    9. ' via' → logprob: -8.034727096557617
    10. ' to' → logprob: -8.284727096557617

Token 440: ' shelves' (ID: 52049)
  Prédit: ' intersections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intersections' → logprob: -0.29247644543647766
    2. ' intersection' → logprob: -2.7924764156341553
    3. 'intersection' → logprob: -2.7924764156341553
    4. ' col' → logprob: -3.0424764156341553
    5. 'col' → logprob: -3.2924764156341553
    6. 'inter' → logprob: -3.6674764156341553
    7. 'integer' → logprob: -5.417476654052734
    8. ' integer' → logprob: -5.792476654052734
    9. ' the' → logprob: -6.042476654052734
    10. ' (' → logprob: -6.292476654052734

Token 441: ' middle' (ID: 10006)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7361803650856018
    2. ' at' → logprob: -1.486180305480957
    3. ',' → logprob: -2.361180305480957
    4. '       ' → logprob: -3.236180305480957
    5. '<|end|>' → logprob: -3.611180305480957
    6. ' between' → logprob: -3.736180305480957
    7. '[row' → logprob: -3.861180305480957
    8. '   ' → logprob: -4.236180305480957
    9. ' with' → logprob: -4.611180305480957
    10. '[' → logprob: -4.736180305480957

Token 442: '?
' (ID: 3901)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 444: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6251320838928223
    2. '<|end|>' → logprob: -1.2501320838928223
    3. '   ' → logprob: -2.7501320838928223
    4. ' ' → logprob: -3.8751320838928223
    5. ' 
' → logprob: -4.625132083892822
    6. ')' → logprob: -4.750132083892822
    7. '        ' → logprob: -4.750132083892822
    8. ':' → logprob: -4.750132083892822
    9. '        
' → logprob: -4.750132083892822
    10. '    ' → logprob: -4.750132083892822

Token 445: ' No' (ID: 3004)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7369941473007202
    2. ' ' → logprob: -1.7369941473007202
    3. '<|end|>' → logprob: -2.3619942665100098
    4. ' 
' → logprob: -2.6119942665100098
    5. '   ' → logprob: -2.9869942665100098
    6. '\n' → logprob: -3.7369942665100098
    7. '        ' → logprob: -3.8619942665100098
    8. ' \' → logprob: -4.61199426651001
    9. '    ' → logprob: -4.61199426651001
    10. '        
' → logprob: -4.73699426651001

Token 446: ' vertical' (ID: 17679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2773369550704956
    2. '<|end|>' → logprob: -1.6523369550704956
    3. '   ' → logprob: -4.277337074279785
    4. '        
' → logprob: -4.777337074279785
    5. '
' → logprob: -5.277337074279785
    6. '<|end|>' → logprob: -5.402337074279785
    7. ',' → logprob: -5.527337074279785
    8. '#' → logprob: -6.277337074279785
    9. ')' → logprob: -6.277337074279785
    10. '\n' → logprob: -6.402337074279785

Token 447: ' movement' (ID: 12772)
  Prédit: ' movement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movement' → logprob: -1.456437349319458
    2. 'moves' → logprob: -1.956437349319458
    3. '   ' → logprob: -2.206437349319458
    4. ' moves' → logprob: -2.456437349319458
    5. 'movement' → logprob: -2.456437349319458
    6. ')' → logprob: -3.081437349319458
    7. '.' → logprob: -3.081437349319458
    8. ' edges' → logprob: -3.206437349319458
    9. ',' → logprob: -3.331437349319458
    10. '#' → logprob: -3.456437349319458

Token 448: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27781498432159424
    2. '<|end|>' → logprob: -1.7778149843215942
    3. '   ' → logprob: -3.2778148651123047
    4. ':' → logprob: -4.902814865112305
    5. '<|end|>' → logprob: -4.902814865112305
    6. '        
' → logprob: -5.027814865112305
    7. '
' → logprob: -5.652814865112305
    8. ')' → logprob: -5.902814865112305
    9. '\n' → logprob: -6.402814865112305
    10. ',' → logprob: -6.777814865112305

Token 449: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.8957323431968689
    2. 'main' → logprob: -0.8957323431968689
    3. ' main' → logprob: -3.0207324028015137
    4. 's' → logprob: -3.5207324028015137
    5. ' rows' → logprob: -3.6457324028015137
    6. ' shelves' → logprob: -3.6457324028015137
    7. 'horizontal' → logprob: -4.395732402801514
    8. 'row' → logprob: -5.020732402801514
    9. 'adj' → logprob: -5.020732402801514
    10. 'middle' → logprob: -5.020732402801514

Token 450: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24595236778259277
    2. '<|end|>' → logprob: -2.3709523677825928
    3. '        
' → logprob: -2.7459523677825928
    4. '
' → logprob: -3.8709523677825928
    5. '   ' → logprob: -4.245952606201172
    6. '\' → logprob: -5.745952606201172
    7. '<|end|>' → logprob: -5.870952606201172
    8. ')' → logprob: -5.995952606201172
    9. '\n' → logprob: -6.120952606201172
    10. '        
        
' → logprob: -6.245952606201172

Token 451: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.0085406303405762
    2. 'allowed' → logprob: -1.0085406303405762
    3. 'for' → logprob: -1.8835406303405762
    4. 'possible' → logprob: -2.633540630340576
    5. ' allowed' → logprob: -3.883540630340576
    6. ' not' → logprob: -4.633540630340576
    7. ' forbidden' → logprob: -5.133540630340576
    8. ' possible' → logprob: -5.883540630340576
    9. ' for' → logprob: -6.008540630340576
    10. 'blocked' → logprob: -6.758540630340576

Token 452: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.022542444989085197
    2. ' allowed' → logprob: -3.8975424766540527
    3. 'possible' → logprob: -6.772542476654053
    4. 'implemented' → logprob: -7.897542476654053
    5. '_allowed' → logprob: -9.272541999816895
    6. '```' → logprob: -9.397541999816895
    7. 'available' → logprob: -9.772541999816895
    8. ' possible' → logprob: -10.522541999816895
    9. 'for' → logprob: -10.522541999816895
    10. 'per' → logprob: -10.522541999816895

Token 453: ' directly' (ID: 8516)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4228464365005493
    2. '<|end|>' → logprob: -1.5478464365005493
    3. '   ' → logprob: -1.6728464365005493
    4. ':' → logprob: -1.9228464365005493
    5. ')' → logprob: -2.4228463172912598
    6. ',' → logprob: -3.1728463172912598
    7. '.' → logprob: -4.04784631729126
    8. '\' → logprob: -4.17284631729126
    9. '<|end|>' → logprob: -4.79784631729126
    10. '
' → logprob: -4.79784631729126

Token 454: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21843838691711426
    2. '   ' → logprob: -2.7184383869171143
    3. '<|end|>' → logprob: -2.8434383869171143
    4. '
' → logprob: -3.7184383869171143
    5. '        
' → logprob: -4.093438148498535
    6. ',' → logprob: -4.343438148498535
    7. '<|end|>' → logprob: -5.843438148498535
    8. '    
' → logprob: -5.843438148498535
    9. '.' → logprob: -5.968438148498535
    10. ')' → logprob: -5.968438148498535

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15507398545742035
    2. '<|end|>' → logprob: -2.655073881149292
    3. '   ' → logprob: -3.405073881149292
    4. '        
' → logprob: -4.280074119567871
    5. '\' → logprob: -4.780074119567871
    6. '<|end|>' → logprob: -5.530074119567871
    7. '\n' → logprob: -5.905074119567871
    8. '    
' → logprob: -6.405074119567871
    9. '_' → logprob: -6.780074119567871
    10. ')' → logprob: -6.780074119567871

Token 456: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0581187829375267
    2. '<|end|>' → logprob: -3.6831188201904297
    3. '   ' → logprob: -4.68311882019043
    4. '        
' → logprob: -5.05811882019043
    5. '        ' → logprob: -6.05811882019043
    6. '<|end|>' → logprob: -6.18311882019043
    7. '\' → logprob: -6.43311882019043
    8. ')' → logprob: -6.55811882019043
    9. ' ' → logprob: -6.68311882019043
    10. '
' → logprob: -7.05811882019043

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12578663229942322
    2. '<|end|>' → logprob: -2.500786542892456
    3. '<|end|>' → logprob: -4.500786781311035
    4. '        
' → logprob: -4.625786781311035
    5. '
' → logprob: -4.875786781311035
    6. '   ' → logprob: -5.875786781311035
    7. '\n' → logprob: -7.750786781311035
    8. '\' → logprob: -7.875786781311035
    9. '        
        
' → logprob: -7.875786781311035
    10. '[' → logprob: -8.000786781311035

Token 458: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12105929851531982
    2. '        
' → logprob: -3.3710594177246094
    3. '
' → logprob: -3.4960594177246094
    4. '        ' → logprob: -4.371059417724609
    5. ' 
' → logprob: -4.371059417724609
    6. ' next' → logprob: -5.746059417724609
    7. '   ' → logprob: -5.746059417724609
    8. ' ' → logprob: -5.871059417724609
    9. '    ' → logprob: -5.996059417724609
    10. 'next' → logprob: -6.996059417724609

Token 459: ' But' (ID: 3072)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23987051844596863
    2. '       ' → logprob: -1.989870548248291
    3. '#' → logprob: -3.114870548248291
    4. 'from' → logprob: -4.864870548248291
    5. '   ' → logprob: -5.364870548248291
    6. 'for' → logprob: -5.364870548248291
    7. 'def' → logprob: -5.364870548248291
    8. 'distance' → logprob: -6.364870548248291
    9. 'dist' → logprob: -6.364870548248291
    10. 'import' → logprob: -6.614870548248291

Token 460: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2329539060592651
    2. 'she' → logprob: -1.2329539060592651
    3. ' she' → logprob: -2.8579540252685547
    4. 'the' → logprob: -3.1079540252685547
    5. ' the' → logprob: -3.1079540252685547
    6. ' at' → logprob: -3.2329540252685547
    7. ' for' → logprob: -3.7329540252685547
    8. ' vertical' → logprob: -3.7329540252685547
    9. 'there' → logprob: -3.7329540252685547
    10. '   ' → logprob: -3.8579540252685547

Token 461: ' mentions' (ID: 66396)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.752766489982605
    2. '<|end|>' → logprob: -1.002766489982605
    3. '<|end|>' → logprob: -2.7527666091918945
    4. ' is' → logprob: -3.3777666091918945
    5. '.' → logprob: -4.0027666091918945
    6. ':' → logprob: -4.6277666091918945
    7. '...' → logprob: -4.6277666091918945
    8. '   ' → logprob: -5.0027666091918945
    9. ' remains' → logprob: -5.8777666091918945
    10. ' continued' → logprob: -6.2527666091918945

Token 462: ' only' (ID: 1606)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4852485656738281
    2. ' that' → logprob: -1.6102485656738281
    3. '<|end|>' → logprob: -1.7352485656738281
    4. 'that' → logprob: -1.8602485656738281
    5. 'vertical' → logprob: -2.860248565673828
    6. ' vertical' → logprob: -3.235248565673828
    7. '<|end|>' → logprob: -3.860248565673828
    8. 'the' → logprob: -3.985248565673828
    9. ' at' → logprob: -4.110248565673828
    10. '...' → logprob: -4.110248565673828

Token 463: ' forward' (ID: 6687)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.3587333559989929
    2. ' horizontal' → logprob: -1.2337334156036377
    3. ' walking' → logprob: -6.358733177185059
    4. 'vertical' → logprob: -6.358733177185059
    5. 'main' → logprob: -7.233733177185059
    6. 'walking' → logprob: -7.233733177185059
    7. 'the' → logprob: -7.358733177185059
    8. 'moving' → logprob: -7.608733177185059
    9. '#' → logprob: -7.733733177185059
    10. ' horizont' → logprob: -7.858733177185059

Token 464: ' walking' (ID: 15015)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15375375747680664
    2. '   ' → logprob: -3.0287537574768066
    3. ':' → logprob: -3.2787537574768066
    4. '        
' → logprob: -3.9037537574768066
    5. '
' → logprob: -4.528753757476807
    6. ')' → logprob: -5.153753757476807
    7. '<|end|>' → logprob: -5.403753757476807
    8. ' ' → logprob: -6.028753757476807
    9. ',' → logprob: -6.153753757476807
    10. '    
' → logprob: -6.778753757476807

Token 466: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2555594742298126
    2. 'main' → logprob: -1.8805594444274902
    3. ' horizontal' → logprob: -3.1305594444274902
    4. 'horizontal' → logprob: -4.00555944442749
    5. ' the' → logprob: -5.75555944442749
    6. ' passages' → logprob: -5.75555944442749
    7. 'the' → logprob: -6.50555944442749
    8. ' intersections' → logprob: -6.63055944442749
    9. ' shelves' → logprob: -7.13055944442749
    10. 's' → logprob: -8.380559921264648

Token 467: ' passages' (ID: 69047)
  Prédit: ' passages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passages' → logprob: -0.07544717937707901
    2. 'pass' → logprob: -2.8254470825195312
    3. '_pass' → logprob: -4.575447082519531
    4. ' pass' → logprob: -6.450447082519531
    5. ' passage' → logprob: -7.075447082519531
    6. '   ' → logprob: -7.950447082519531
    7. '_' → logprob: -8.450447082519531
    8. ' ' → logprob: -10.450447082519531
    9. ' _' → logprob: -10.700447082519531
    10. '    ' → logprob: -12.325447082519531

Token 468: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6424808502197266
    2. '
' → logprob: -1.8924808502197266
    3. '<|end|>' → logprob: -2.0174808502197266
    4. '        
' → logprob: -2.3924808502197266
    5. '   ' → logprob: -3.7674808502197266
    6. ',' → logprob: -4.392480850219727
    7. ')' → logprob: -4.517480850219727
    8. ':' → logprob: -4.517480850219727
    9. '<|end|>' → logprob: -4.767480850219727
    10. '        

' → logprob: -5.267480850219727

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11483871191740036
    2. '<|end|>' → logprob: -2.6148386001586914
    3. '        
' → logprob: -4.239838600158691
    4. '<|end|>' → logprob: -5.239838600158691
    5. '\n' → logprob: -5.489838600158691
    6. '   ' → logprob: -5.614838600158691
    7. '\' → logprob: -6.614838600158691
    8. '
' → logprob: -6.739838600158691
    9. '        ' → logprob: -7.239838600158691
    10. ',' → logprob: -7.614838600158691

Token 470: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13687600195407867
    2. '<|end|>' → logprob: -2.761876106262207
    3. '   ' → logprob: -3.761876106262207
    4. '        
' → logprob: -4.136876106262207
    5. ')' → logprob: -5.511876106262207
    6. '        ' → logprob: -5.636876106262207
    7. '<|end|>' → logprob: -6.136876106262207
    8. ',' → logprob: -6.261876106262207
    9. '    ' → logprob: -6.636876106262207
    10. '_' → logprob: -6.636876106262207

Token 471: ' Vertical' (ID: 58623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22869253158569336
    2. '
' → logprob: -2.9786925315856934
    3. '   ' → logprob: -3.3536925315856934
    4. '        
' → logprob: -3.6036925315856934
    5. ' ' → logprob: -3.8536925315856934
    6. '<|end|>' → logprob: -3.8536925315856934
    7. '        ' → logprob: -4.353692531585693
    8. ' 
' → logprob: -4.853692531585693
    9. '    ' → logprob: -5.478692531585693
    10. '#' → logprob: -5.853692531585693

Token 472: ' movement' (ID: 12772)
  Prédit: ' movement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movement' → logprob: -0.26559051871299744
    2. '_' → logprob: -2.1405904293060303
    3. 'movement' → logprob: -3.8905904293060303
    4. '<|end|>' → logprob: -4.140590667724609
    5. ' ' → logprob: -4.265590667724609
    6. '_moves' → logprob: -4.390590667724609
    7. '_move' → logprob: -4.390590667724609
    8. ' _' → logprob: -4.515590667724609
    9. ' moves' → logprob: -4.640590667724609
    10. ' movements' → logprob: -5.390590667724609

Token 473: ' allowed' (ID: 9279)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.14129133522510529
    2. ' =' → logprob: -2.516291379928589
    3. ' on' → logprob: -4.51629114151001
    4. ' not' → logprob: -4.76629114151001
    5. '   ' → logprob: -4.89129114151001
    6. '=' → logprob: -5.76629114151001
    7. '<|end|>' → logprob: -5.76629114151001
    8. ' at' → logprob: -5.89129114151001
    9. ',' → logprob: -6.39129114151001
    10. 'not' → logprob: -6.76629114151001

Token 474: ' only' (ID: 1606)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.14705771207809448
    2. 'at' → logprob: -2.2720577716827393
    3. ' between' → logprob: -4.27205753326416
    4. ' on' → logprob: -4.64705753326416
    5. 'between' → logprob: -5.39705753326416
    6. 'on' → logprob: -6.14705753326416
    7. ' via' → logprob: -6.64705753326416
    8. ' through' → logprob: -7.39705753326416
    9. ' ' → logprob: -7.89705753326416
    10. 'through' → logprob: -8.27205753326416

Token 476: ' intersections' (ID: 143513)
  Prédit: ' middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' middle' → logprob: -0.9417486190795898
    2. 's' → logprob: -1.8167486190795898
    3. ' shelf' → logprob: -1.9417486190795898
    4. ' (' → logprob: -2.44174861907959
    5. ' shelves' → logprob: -2.44174861907959
    6. 'middle' → logprob: -3.06674861907959
    7. '(' → logprob: -3.31674861907959
    8. '(s' → logprob: -4.31674861907959
    9. ' positions' → logprob: -4.69174861907959
    10. ' midd' → logprob: -5.44174861907959

Token 477: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4179535210132599
    2. '   ' → logprob: -2.0429534912109375
    3. ':' → logprob: -2.7929534912109375
    4. '<|end|>' → logprob: -3.0429534912109375
    5. ',' → logprob: -3.4179534912109375
    6. '        
' → logprob: -4.0429534912109375
    7. '
' → logprob: -4.4179534912109375
    8. ')' → logprob: -5.0429534912109375
    9. '.' → logprob: -5.1679534912109375
    10. '(' → logprob: -5.6679534912109375

Token 478: ' shelves' (ID: 52049)
  Prédit: ' shelves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelves' → logprob: -0.8880583643913269
    2. ' middle' → logprob: -1.6380584239959717
    3. 's' → logprob: -1.8880584239959717
    4. ' shelf' → logprob: -2.7630584239959717
    5. 'middle' → logprob: -2.7630584239959717
    6. ' midd' → logprob: -3.0130584239959717
    7. 'midd' → logprob: -3.6380584239959717
    8. ' at' → logprob: -4.013058185577393
    9. ' between' → logprob: -5.888058185577393
    10. 'between' → logprob: -6.013058185577393

Token 479: ' middle' (ID: 10006)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9379405379295349
    2. '   ' → logprob: -1.0629405975341797
    3. ':' → logprob: -2.5629405975341797
    4. '<|end|>' → logprob: -2.5629405975341797
    5. '
' → logprob: -3.0629405975341797
    6. '        
' → logprob: -4.43794059753418
    7. ' ' → logprob: -4.68794059753418
    8. '<|end|>' → logprob: -5.06294059753418
    9. '    
' → logprob: -5.43794059753418
    10. ')' → logprob: -5.43794059753418

Token 480: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.795811116695404
    2. '   ' → logprob: -1.4208111763000488
    3. '<|end|>' → logprob: -2.170811176300049
    4. '
' → logprob: -2.295811176300049
    5. ':' → logprob: -2.920811176300049
    6. '        
' → logprob: -4.545811176300049
    7. ')' → logprob: -5.045811176300049
    8. '<|end|>' → logprob: -5.045811176300049
    9. ',' → logprob: -5.670811176300049
    10. '    
' → logprob: -5.920811176300049

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37020644545555115
    2. '<|end|>' → logprob: -1.4952064752578735
    3. '   ' → logprob: -3.370206356048584
    4. '        
' → logprob: -4.495206356048584
    5. ' ' → logprob: -4.620206356048584
    6. '<|end|>' → logprob: -5.370206356048584
    7. '    ' → logprob: -5.495206356048584
    8. '        ' → logprob: -5.620206356048584
    9. ' 
' → logprob: -5.995206356048584
    10. '\' → logprob: -6.120206356048584

Token 482: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18179838359355927
    2. '<|end|>' → logprob: -2.0567984580993652
    3. '   ' → logprob: -4.306798458099365
    4. '        
' → logprob: -4.806798458099365
    5. '<|end|>' → logprob: -5.431798458099365
    6. '
' → logprob: -5.806798458099365
    7. '        ' → logprob: -5.931798458099365
    8. '    ' → logprob: -7.056798458099365
    9. ' ' → logprob: -7.056798458099365
    10. '[' → logprob: -7.556798458099365

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3691708743572235
    2. '<|end|>' → logprob: -1.744170904159546
    3. '   ' → logprob: -2.994170904159546
    4. '        
' → logprob: -3.619170904159546
    5. '<|end|>' → logprob: -4.244170665740967
    6. '    
' → logprob: -4.869170665740967
    7. '    ' → logprob: -5.119170665740967
    8. '
' → logprob: -5.369170665740967
    9. ' ' → logprob: -5.494170665740967
    10. ' 
' → logprob: -5.619170665740967

Token 484: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16105452179908752
    2. '
' → logprob: -2.7860546112060547
    3. '<|end|>' → logprob: -3.7860546112060547
    4. '        
' → logprob: -3.9110546112060547
    5. '        ' → logprob: -4.286054611206055
    6. '   ' → logprob: -4.786054611206055
    7. ' ' → logprob: -5.661054611206055
    8. ' 
' → logprob: -5.911054611206055
    9. '    ' → logprob: -5.911054611206055
    10. '        
        
' → logprob: -6.161054611206055

Token 485: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18392568826675415
    2. '   ' → logprob: -2.4339256286621094
    3. '#' → logprob: -3.8089256286621094
    4. 'def' → logprob: -4.433925628662109
    5. '
' → logprob: -4.558925628662109
    6. '        
' → logprob: -4.808925628662109
    7. 'dp' → logprob: -5.558925628662109
    8. 'for' → logprob: -5.808925628662109
    9. 'import' → logprob: -6.058925628662109
    10. ' 
' → logprob: -6.183925628662109

Token 486: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 487: ' problem' (ID: 4792)
  Prédit: ' vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.5639711022377014
    2. '       ' → logprob: -2.5639710426330566
    3. ' she' → logprob: -2.5639710426330566
    4. ' next' → logprob: -3.5639710426330566
    5. ' there' → logprob: -3.6889710426330566
    6. ' ' → logprob: -3.8139710426330566
    7. '    ' → logprob: -3.8139710426330566
    8. '        ' → logprob: -3.9389710426330566
    9. '#' → logprob: -3.9389710426330566
    10. ' ' → logprob: -4.063971042633057

Token 488: ' states' (ID: 9407)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' she' (ID: 1770)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.2938195765018463
    2. 'that' → logprob: -2.7938196659088135
    3. ' vertical' → logprob: -3.1688196659088135
    4. ' the' → logprob: -3.7938196659088135
    5. 'def' → logprob: -3.9188196659088135
    6. ' she' → logprob: -4.168819427490234
    7. ':' → logprob: -4.293819427490234
    8. '#' → logprob: -4.418819427490234
    9. ' only' → logprob: -4.668819427490234
    10. '...' → logprob: -5.168819427490234

Token 490: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4368453025817871
    2. ' ' → logprob: -2.436845302581787
    3. '<|end|>' → logprob: -2.686845302581787
    4. ' =' → logprob: -3.186845302581787
    5. '.' → logprob: -3.436845302581787
    6. ' is' → logprob: -3.436845302581787
    7. ' cannot' → logprob: -4.311845302581787
    8. ' has' → logprob: -4.436845302581787
    9. ')' → logprob: -4.686845302581787
    10. '_' → logprob: -4.686845302581787

Token 491: ' only' (ID: 1606)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.014674392528831959
    2. ' only' → logprob: -4.389674186706543
    3. 'move' → logprob: -6.764674186706543
    4. ' can' → logprob: -8.014674186706543
    5. ' go' → logprob: -9.014674186706543
    6. '
' → logprob: -9.389674186706543
    7. '_move' → logprob: -9.389674186706543
    8. ' not' → logprob: -9.514674186706543
    9. 'n't' → logprob: -10.014674186706543
    10. '	move' → logprob: -10.139674186706543

Token 492: ' stop' (ID: 5666)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.04893558472394943
    2. 'move' → logprob: -3.423935651779175
    3. ' walk' → logprob: -4.923935413360596
    4. ' go' → logprob: -5.048935413360596
    5. 'walk' → logprob: -7.423935413360596
    6. ' continue' → logprob: -8.673935890197754
    7. 'go' → logprob: -8.798935890197754
    8. ' ' → logprob: -9.798935890197754
    9. '   ' → logprob: -9.798935890197754
    10. '
' → logprob: -9.923935890197754

Token 493: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.12302089482545853
    2. '_' → logprob: -3.123020887374878
    3. '<|end|>' → logprob: -3.998020887374878
    4. 'at' → logprob: -5.123021125793457
    5. '   ' → logprob: -5.123021125793457
    6. ' ' → logprob: -5.248021125793457
    7. '=' → logprob: -5.373021125793457
    8. ' here' → logprob: -5.623021125793457
    9. ' _' → logprob: -5.623021125793457
    10. ' =' → logprob: -5.748021125793457

Token 494: ' intersections' (ID: 143513)
  Prédit: ' intersections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersections' → logprob: -0.1817055493593216
    2. 'inter' → logprob: -3.0567054748535156
    3. ' positions' → logprob: -3.5567054748535156
    4. ' intersection' → logprob: -3.8067054748535156
    5. 'intersection' → logprob: -3.9317054748535156
    6. ' main' → logprob: -3.9317054748535156
    7. 'positions' → logprob: -4.556705474853516
    8. ' (' → logprob: -5.556705474853516
    9. ' middle' → logprob: -5.931705474853516
    10. 'main' → logprob: -6.056705474853516

Token 495: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: ' shelf' (ID: 40978)
  Prédit: ' middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' middle' → logprob: -0.9879040718078613
    2. 'middle' → logprob: -1.2379040718078613
    3. ' shelves' → logprob: -1.7379040718078613
    4. 's' → logprob: -2.2379040718078613
    5. ' shelf' → logprob: -3.4879040718078613
    6. 'midd' → logprob: -4.487904071807861
    7. ' midd' → logprob: -5.362904071807861
    8. 'mid' → logprob: -6.237904071807861
    9. '#' → logprob: -6.737904071807861
    10. '   ' → logprob: -7.237904071807861

Token 497: ' midd' (ID: 27220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.780163049697876
    2. 's' → logprob: -0.905163049697876
    3. '_middle' → logprob: -3.155163049697876
    4. 'middle' → logprob: -3.780163049697876
    5. ' _' → logprob: -3.905163049697876
    6. '_s' → logprob: -4.905162811279297
    7. ' s' → logprob: -5.030162811279297
    8. ' middle' → logprob: -5.030162811279297
    9. '   ' → logprob: -5.030162811279297
    10. ' ' → logprob: -5.280162811279297

Token 498: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0003241414960939437
    2. 'les' → logprob: -8.125324249267578
    3. 'd' → logprob: -10.750324249267578
    4. 'l' → logprob: -12.625324249267578
    5. 'points' → logprob: -13.250324249267578
    6. 'ile' → logprob: -14.750324249267578
    7. 'positions' → logprob: -15.000324249267578
    8. '=' → logprob: -16.125324249267578
    9. 'lename' → logprob: -16.375324249267578
    10. '.' → logprob: -16.500324249267578

Token 499: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11957121640443802
    2. '   ' → logprob: -3.4945712089538574
    3. '
' → logprob: -3.8695712089538574
    4. '        
' → logprob: -3.9945712089538574
    5. ':' → logprob: -4.244571208953857
    6. ',' → logprob: -4.369571208953857
    7. '<|end|>' → logprob: -4.994571208953857
    8. ')' → logprob: -5.869571208953857
    9. '    
' → logprob: -6.744571208953857
    10. '```' → logprob: -7.619571208953857

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17952249944210052
    2. '<|end|>' → logprob: -2.4295225143432617
    3. '   ' → logprob: -3.1795225143432617
    4. '        
' → logprob: -4.429522514343262
    5. ' ' → logprob: -5.429522514343262
    6. '    ' → logprob: -5.929522514343262
    7. '<|end|>' → logprob: -5.929522514343262
    8. '        ' → logprob: -6.054522514343262
    9. '\' → logprob: -6.429522514343262
    10. ')' → logprob: -6.554522514343262

Token 501: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054331906139850616
    2. '   ' → logprob: -3.4293320178985596
    3. '<|end|>' → logprob: -4.9293317794799805
    4. '        
' → logprob: -5.5543317794799805
    5. ',' → logprob: -6.0543317794799805
    6. '    
' → logprob: -7.0543317794799805
    7. '<|end|>' → logprob: -7.1793317794799805
    8. '           ' → logprob: -7.3043317794799805
    9. '```' → logprob: -7.3043317794799805
    10. '.' → logprob: -7.3043317794799805

Token 502: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15974780917167664
    2. '   ' → logprob: -2.034747838973999
    3. '
' → logprob: -5.40974760055542
    4. 'Next' → logprob: -6.40974760055542
    5. '<|end|>' → logprob: -6.40974760055542
    6. '        
' → logprob: -6.53474760055542
    7. '```' → logprob: -6.53474760055542
    8. '    
' → logprob: -7.03474760055542
    9. 'def' → logprob: -7.53474760055542
    10. '<|end|>' → logprob: -7.65974760055542

Token 503: ' vertical' (ID: 17679)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.4673277139663696
    2. ' problem' → logprob: -1.7173277139663696
    3. '#' → logprob: -1.8423277139663696
    4. ' rest' → logprob: -2.09232759475708
    5. ' next' → logprob: -2.59232759475708
    6. ' vertical' → logprob: -2.96732759475708
    7. 'vertical' → logprob: -3.34232759475708
    8. ' remaining' → logprob: -3.96732759475708
    9. 'rest' → logprob: -3.96732759475708
    10. ' best' → logprob: -4.34232759475708

Token 504: ' movement' (ID: 12772)
  Prédit: ' movement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movement' → logprob: -0.10178431868553162
    2. ' ' → logprob: -4.3517842292785645
    3. ' moves' → logprob: -4.3517842292785645
    4. ' movements' → logprob: -4.3517842292785645
    5. '   ' → logprob: -4.4767842292785645
    6. 'movement' → logprob: -4.7267842292785645
    7. '_' → logprob: -4.8517842292785645
    8. ' move' → logprob: -5.3517842292785645
    9. '_moves' → logprob: -5.4767842292785645
    10. ' and' → logprob: -5.4767842292785645

Token 505: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2670249938964844
    2. '   ' → logprob: -2.6420249938964844
    3. '<|end|>' → logprob: -2.7670249938964844
    4. ' at' → logprob: -4.017024993896484
    5. 's' → logprob: -4.142024993896484
    6. ' =' → logprob: -4.517024993896484
    7. ' can' → logprob: -4.517024993896484
    8. ' on' → logprob: -5.017024993896484
    9. '<|end|>' → logprob: -5.142024993896484
    10. ' ' → logprob: -5.142024993896484

Token 506: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5636760592460632
    2. ' not' → logprob: -1.063676118850708
    3. 'allowed' → logprob: -3.813676118850708
    4. ' only' → logprob: -4.313675880432129
    5. 'only' → logprob: -4.563675880432129
    6. 'possible' → logprob: -4.563675880432129
    7. ' allowed' → logprob: -4.688675880432129
    8. ' possible' → logprob: -5.313675880432129
    9. ' at' → logprob: -6.188675880432129
    10. ' between' → logprob: -6.438675880432129

Token 507: ' described' (ID: 13394)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.04329535737633705
    2. 'explicit' → logprob: -3.918295383453369
    3. ' allowed' → logprob: -4.043295383453369
    4. 'implemented' → logprob: -6.543295383453369
    5. 'mentioned' → logprob: -6.918295383453369
    6. '_allowed' → logprob: -7.668295383453369
    7. ' explicitly' → logprob: -7.668295383453369
    8. ' permitted' → logprob: -8.043294906616211
    9. 'possible' → logprob: -8.043294906616211
    10. 'direct' → logprob: -8.668294906616211

Token 508: ' explicitly' (ID: 45615)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07082973420619965
    2. '   ' → logprob: -3.1958296298980713
    3. ':' → logprob: -4.57082986831665
    4. '<|end|>' → logprob: -5.32082986831665
    5. '        
' → logprob: -5.44582986831665
    6. ',' → logprob: -6.32082986831665
    7. ')' → logprob: -6.57082986831665
    8. '<|end|>' → logprob: -7.07082986831665
    9. ' ' → logprob: -7.69582986831665
    10. '        ' → logprob: -7.82082986831665

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7130258083343506
    2. ' but' → logprob: -1.0880258083343506
    3. ' so' → logprob: -1.8380258083343506
    4. '   ' → logprob: -5.71302604675293
    5. '    ' → logprob: -6.46302604675293
    6. '<|end|>' → logprob: -6.46302604675293
    7. '.' → logprob: -6.83802604675293
    8. '        ' → logprob: -6.83802604675293
    9. ' ' → logprob: -6.83802604675293
    10. ' and' → logprob: -6.96302604675293

Token 511: ' #' (ID: 1069)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.11782106012105942
    2. ' but' → logprob: -2.492820978164673
    3. '       ' → logprob: -3.742820978164673
    4. '#' (adapté à ' #') → logprob: -6.117821216583252
    5. '   ' → logprob: -6.992821216583252
    6. 'but' → logprob: -7.867821216583252
    7. 'so' → logprob: -8.367820739746094
    8. ' and' → logprob: -8.492820739746094
    9. '        
' → logprob: -9.117820739746094
    10. '        ' → logprob: -9.117820739746094

Token 512: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11323679238557816
    2. '<|end|>' → logprob: -3.488236904144287
    3. ' so' → logprob: -3.988236904144287
    4. '   ' → logprob: -3.988236904144287
    5. ' but' → logprob: -4.238236904144287
    6. ' continue' → logprob: -4.363236904144287
    7. ' and' → logprob: -6.238236904144287
    8. '        ' → logprob: -6.613236904144287
    9. '<|end|>' → logprob: -6.613236904144287
    10. ' continuing' → logprob: -6.738236904144287

Token 513: ' because' (ID: 2236)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7296916246414185
    2. 'from' → logprob: -1.8546916246414185
    3. ' seems' → logprob: -2.229691505432129
    4. ' the' → logprob: -2.729691505432129
    5. ' since' → logprob: -2.854691505432129
    6. ' vertical' → logprob: -2.979691505432129
    7. ' from' → logprob: -3.104691505432129
    8. ' presumably' → logprob: -3.104691505432129
    9. ' given' → logprob: -3.354691505432129
    10. 'the' → logprob: -3.479691505432129

Token 514: ' shelves' (ID: 52049)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -1.151184320449829
    2. ' vertical' → logprob: -1.901184320449829
    3. 'the' → logprob: -2.026184320449829
    4. ' the' → logprob: -2.901184320449829
    5. 'she' → logprob: -2.901184320449829
    6. 'all' → logprob: -3.151184320449829
    7. 'there' → logprob: -3.776184320449829
    8. 'rows' → logprob: -3.901184320449829
    9. 'horizontal' → logprob: -4.02618408203125
    10. ' all' → logprob: -4.02618408203125

Token 515: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.1561606228351593
    2. 'are' → logprob: -2.281160593032837
    3. ' represent' → logprob: -4.781160831451416
    4. ' lie' → logprob: -5.156160831451416
    5. ' have' → logprob: -5.281160831451416
    6. ' rows' → logprob: -5.906160831451416
    7. ' can' → logprob: -6.031160831451416
    8. ' middle' → logprob: -6.531160831451416
    9. '#' → logprob: -6.656160831451416
    10. ' at' → logprob: -6.781160831451416

Token 516: ' stacked' (ID: 75875)
  Prédit: 'aligned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aligned' → logprob: -1.2051424980163574
    2. 'arr' → logprob: -1.3301424980163574
    3. 'adj' → logprob: -2.2051424980163574
    4. ' arranged' → logprob: -2.5801424980163574
    5. 'horizontal' → logprob: -3.2051424980163574
    6. 'in' → logprob: -3.3301424980163574
    7. 'between' → logprob: -3.5801424980163574
    8. 'stack' → logprob: -4.330142498016357
    9. ' horizontal' → logprob: -4.455142498016357
    10. ' between' → logprob: -4.580142498016357

Token 517: ' vertically' (ID: 94774)
  Prédit: ' vertically'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertically' → logprob: -0.044699959456920624
    2. ' one' → logprob: -4.4197001457214355
    3. ' in' → logprob: -4.5447001457214355
    4. ',' → logprob: -4.5447001457214355
    5. 'vert' → logprob: -5.5447001457214355
    6. '   ' → logprob: -6.5447001457214355
    7. ' between' → logprob: -6.7947001457214355
    8. ' four' → logprob: -7.2947001457214355
    9. ' above' → logprob: -7.5447001457214355
    10. ' rows' → logprob: -7.5447001457214355

Token 518: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04773136228322983
    2. '   ' → logprob: -3.547731399536133
    3. ' and' → logprob: -4.922731399536133
    4. ' at' → logprob: -5.172731399536133
    5. ',
' → logprob: -6.672731399536133
    6. ' in' → logprob: -7.297731399536133
    7. ' (' → logprob: -7.672731399536133
    8. '       ' → logprob: -7.922731399536133
    9. ' ,' → logprob: -8.047731399536133
    10. '#' → logprob: -8.047731399536133

Token 519: ' passages' (ID: 69047)
  Prédit: ' horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -2.2440428733825684
    2. '#' → logprob: -2.3690428733825684
    3. ' only' → logprob: -2.4940428733825684
    4. ' the' → logprob: -2.4940428733825684
    5. ' movement' → logprob: -2.4940428733825684
    6. 'horizontal' → logprob: -2.4940428733825684
    7. 'the' → logprob: -3.2440428733825684
    8. 'she' → logprob: -3.2440428733825684
    9. 'only' → logprob: -3.6190428733825684
    10. ' rows' → logprob: -3.7440428733825684

Token 520: ' horizontal' (ID: 25511)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.19156165421009064
    2. 'are' → logprob: -3.066561698913574
    3. ' can' → logprob: -3.566561698913574
    4. ' only' → logprob: -3.816561698913574
    5. ' go' → logprob: -4.066561698913574
    6. '   ' → logprob: -4.316561698913574
    7. ' between' → logprob: -4.691561698913574
    8. ',' → logprob: -4.816561698913574
    9. ' allow' → logprob: -5.191561698913574
    10. ' have' → logprob: -5.816561698913574

Token 521: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2964515686035156
    2. '   ' → logprob: -1.9214515686035156
    3. ' lines' → logprob: -3.5464515686035156
    4. ' edges' → logprob: -4.296451568603516
    5. '#' → logprob: -4.546451568603516
    6. 'lines' → logprob: -4.546451568603516
    7. ',
' → logprob: -4.921451568603516
    8. 'edges' → logprob: -5.046451568603516
    9. ' and' → logprob: -5.171451568603516
    10. ' only' → logprob: -5.421451568603516

Token 522: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.8361702561378479
    2. 'horizontal' → logprob: -1.8361701965332031
    3. 'books' → logprob: -2.836170196533203
    4. 's' → logprob: -2.836170196533203
    5. '#' → logprob: -3.211170196533203
    6. 'middle' → logprob: -3.336170196533203
    7. 'between' → logprob: -3.461170196533203
    8. 'adj' → logprob: -3.836170196533203
    9. ' vertical' → logprob: -3.836170196533203
    10. 'rows' → logprob: -3.961170196533203

Token 523: ',
' (ID: 412)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3055862188339233
    2. ' edges' → logprob: -1.9305862188339233
    3. ' movement' → logprob: -2.180586338043213
    4. 'edges' → logprob: -2.305586338043213
    5. 'movement' → logprob: -2.680586338043213
    6. 'moves' → logprob: -2.680586338043213
    7. ',' → logprob: -2.930586338043213
    8. '   ' → logprob: -3.180586338043213
    9. ' moves' → logprob: -3.430586338043213
    10. ' lines' → logprob: -3.805586338043213

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03758705034852028
    2. '<|end|>' → logprob: -3.5375871658325195
    3. '   ' → logprob: -5.5375871658325195
    4. '    ' → logprob: -6.9125871658325195
    5. '<|end|>' → logprob: -7.1625871658325195
    6. '        ' → logprob: -7.4125871658325195
    7. ' ' → logprob: -7.9125871658325195
    8. '           ' → logprob: -8.66258716583252
    9. '        
' → logprob: -8.91258716583252
    10. ',' → logprob: -9.16258716583252

Token 525: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3038678467273712
    2. '#' (adapté à ' #') → logprob: -1.8038678169250488
    3. '<|end|>' → logprob: -2.553867816925049
    4. '<|end|>' → logprob: -5.053867816925049
    5. ' ' → logprob: -5.928867816925049
    6. '   ' → logprob: -5.928867816925049
    7. ' and' → logprob: -6.803867816925049
    8. ' the' → logprob: -6.928867816925049
    9. ' #' → logprob: -7.178867816925049
    10. '        ' → logprob: -7.178867816925049

Token 526: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07015961408615112
    2. ' the' → logprob: -4.070159435272217
    3. ' vertical' → logprob: -4.320159435272217
    4. 'the' → logprob: -4.945159435272217
    5. ' she' → logprob: -4.945159435272217
    6. ' we' → logprob: -5.195159435272217
    7. 'she' → logprob: -5.570159435272217
    8. 'we' → logprob: -5.695159435272217
    9. ' #' → logprob: -5.820159435272217
    10. '   ' → logprob: -5.945159435272217

Token 527: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.06876782327890396
    2. ' need' → logprob: -3.943767786026001
    3. 'can' → logprob: -4.44376802444458
    4. ' assume' → logprob: -4.81876802444458
    5. ' cannot' → logprob: -5.06876802444458
    6. ' continue' → logprob: -5.19376802444458
    7. '#' → logprob: -5.56876802444458
    8. ' have' → logprob: -6.19376802444458
    9. ' must' → logprob: -6.44376802444458
    10. 'need' → logprob: -6.81876802444458

Token 528: ' represent' (ID: 5188)
  Prédit: ' assume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' assume' → logprob: -1.1978051662445068
    2. 'consider' → logprob: -1.8228051662445068
    3. 'ass' → logprob: -2.197805166244507
    4. ' model' → logprob: -2.322805166244507
    5. ' consider' → logprob: -2.697805166244507
    6. ' move' → logprob: -2.822805166244507
    7. '#' → logprob: -3.697805166244507
    8. 'continue' → logprob: -3.697805166244507
    9. '```' → logprob: -3.697805166244507
    10. 'move' → logprob: -4.072805404663086

Token 529: ' as' (ID: 472)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.30891212821006775
    2. 'the' → logprob: -2.4339120388031006
    3. '   ' → logprob: -2.8089120388031006
    4. ' a' → logprob: -3.5589120388031006
    5. ' positions' → logprob: -4.18391227722168
    6. ' vertical' → logprob: -4.30891227722168
    7. ' code' → logprob: -4.55891227722168
    8. ' movement' → logprob: -4.68391227722168
    9. ' ' → logprob: -5.18391227722168
    10. ' them' → logprob: -5.30891227722168

Token 530: ' a' (ID: 261)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.941538393497467
    2. ' a' → logprob: -1.4415383338928223
    3. 'graph' → logprob: -2.1915383338928223
    4. 'a' → logprob: -2.1915383338928223
    5. ' graph' → logprob: -3.0665383338928223
    6. ' dp' → logprob: -3.4415383338928223
    7. 'def' → logprob: -3.6915383338928223
    8. 'states' → logprob: -4.691538333892822
    9. ' an' → logprob: -5.316538333892822
    10. ' states' → logprob: -5.441538333892822

Token 531: ' grid' (ID: 10586)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.568773090839386
    2. ' graph' → logprob: -1.0687730312347412
    3. ' grid' → logprob: -2.943773031234741
    4. 'grid' → logprob: -3.693773031234741
    5. 'b' → logprob: -5.69377326965332
    6. 'def' → logprob: -5.69377326965332
    7. 'dp' → logprob: -6.31877326965332
    8. '   ' → logprob: -7.31877326965332
    9. ' layered' → logprob: -7.31877326965332
    10. '#' → logprob: -8.19377326965332

Token 532: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6877530217170715
    2. '       ' → logprob: -0.8127530217170715
    3. '[' → logprob: -3.9377529621124268
    4. '<|end|>' → logprob: -4.312753200531006
    5. ')' → logprob: -5.187753200531006
    6. ',' → logprob: -5.812753200531006
    7. '        
' → logprob: -6.312753200531006
    8. '<|end|>' → logprob: -6.687753200531006
    9. '    ' → logprob: -6.812753200531006
    10. '\' → logprob: -6.937753200531006

Token 533: ' edges' (ID: 22569)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -1.5003914833068848
    2. '4' → logprob: -1.7503914833068848
    3. ' rows' → logprob: -2.2503914833068848
    4. ' four' → logprob: -2.2503914833068848
    5. 'rows' → logprob: -2.6253914833068848
    6. 'nodes' → logprob: -2.6253914833068848
    7. ' positions' → logprob: -3.3753914833068848
    8. ' states' → logprob: -3.3753914833068848
    9. ' edges' → logprob: -3.6253914833068848
    10. ' ' → logprob: -3.7503914833068848

Token 534: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26436328887939453
    2. '       ' → logprob: -2.1393632888793945
    3. ' =' → logprob: -3.6393632888793945
    4. ',' → logprob: -4.2643632888793945
    5. '<|end|>' → logprob: -4.3893632888793945
    6. 's' → logprob: -4.6393632888793945
    7. ':' → logprob: -4.8893632888793945
    8. ')' → logprob: -5.0143632888793945
    9. '```' → logprob: -5.0143632888793945
    10. '[' → logprob: -5.5143632888793945

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03370114043354988
    2. '   ' → logprob: -4.033700942993164
    3. '    ' → logprob: -5.158700942993164
    4. '        ' → logprob: -5.158700942993164
    5. '[' → logprob: -7.408700942993164
    6. '           ' → logprob: -7.783700942993164
    7. '        
' → logprob: -7.908700942993164
    8. ')' → logprob: -8.158700942993164
    9. '...' → logprob: -8.158700942993164
    10. '<|end|>' → logprob: -8.158700942993164

Token 536: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1797730177640915
    2. '        ' → logprob: -2.3047730922698975
    3. '   ' → logprob: -3.9297730922698975
    4. '    ' → logprob: -4.179772853851318
    5. ' ' → logprob: -5.429772853851318
    6. '\n' → logprob: -5.429772853851318
    7. '<|end|>' → logprob: -5.679772853851318
    8. '\' → logprob: -6.054772853851318
    9. '        
' → logprob: -6.054772853851318
    10. '           ' → logprob: -6.179772853851318

Token 537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5752029418945312
    2. '   ' → logprob: -0.9502029418945312
    3. '<|end|>' → logprob: -3.3252029418945312
    4. '    ' → logprob: -4.700202941894531
    5. '        ' → logprob: -6.700202941894531
    6. '...' → logprob: -6.825202941894531
    7. '<|end|>' → logprob: -7.325202941894531
    8. '[' → logprob: -7.700202941894531
    9. ' ' → logprob: -8.075202941894531
    10. '           ' → logprob: -8.200202941894531

Token 538: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042642056941986084
    2. '   ' → logprob: -4.292642116546631
    3. '        ' → logprob: -4.792642116546631
    4. '<|end|>' → logprob: -4.792642116546631
    5. '    ' → logprob: -5.167642116546631
    6. '        
' → logprob: -5.792642116546631
    7. '<|end|>' → logprob: -7.792642116546631
    8. '#' (adapté à ' #') → logprob: -8.042641639709473
    9. '    
' → logprob: -8.167641639709473
    10. '           ' → logprob: -8.167641639709473

Token 539: ' Vertical' (ID: 58623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1030522584915161
    2. '   ' → logprob: -1.4780522584915161
    3. '#' → logprob: -1.7280522584915161
    4. 'for' → logprob: -2.4780521392822266
    5. ' for' → logprob: -2.7280521392822266
    6. 'def' → logprob: -3.3530521392822266
    7. '    ' → logprob: -4.478052139282227
    8. ' #' → logprob: -4.728052139282227
    9. 'import' → logprob: -5.103052139282227
    10. '<|end|>' → logprob: -5.103052139282227

Token 540: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.08148559182882309
    2. 'edges' → logprob: -3.0814855098724365
    3. ' movement' → logprob: -4.331485748291016
    4. '_edges' → logprob: -4.831485748291016
    5. ' and' → logprob: -5.581485748291016
    6. 'movement' → logprob: -6.456485748291016
    7. '   ' → logprob: -7.081485748291016
    8. ' moves' → logprob: -7.331485748291016
    9. '<|end|>' → logprob: -7.581485748291016
    10. 'moves' → logprob: -7.706485748291016

Token 541: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05394613742828369
    2. '   ' → logprob: -3.678946018218994
    3. ' between' → logprob: -4.678946018218994
    4. '#' → logprob: -4.803946018218994
    5. 'from' → logprob: -6.553946018218994
    6. '```' → logprob: -6.553946018218994
    7. ' at' → logprob: -6.803946018218994
    8. ' are' → logprob: -7.053946018218994
    9. ' =
' → logprob: -7.178946018218994
    10. '       ' → logprob: -7.178946018218994

Token 542: ' moves' (ID: 19523)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9622704386711121
    2. '#' → logprob: -1.2122704982757568
    3. 'for' → logprob: -2.212270498275757
    4. '       ' → logprob: -2.462270498275757
    5. '   ' → logprob: -3.212270498275757
    6. ' #' → logprob: -3.337270498275757
    7. ' (' → logprob: -4.337270259857178
    8. ' between' → logprob: -4.962270259857178
    9. '(' → logprob: -5.212270259857178
    10. '```' → logprob: -5.212270259857178

Token 543: ' between' (ID: 2870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8207412362098694
    2. ' between' → logprob: -0.9457412362098694
    3. '   ' → logprob: -2.1957411766052246
    4. '       ' → logprob: -4.820741176605225
    5. 'between' → logprob: -4.820741176605225
    6. ' only' → logprob: -4.945741176605225
    7. ' at' → logprob: -5.195741176605225
    8. 'down' → logprob: -5.320741176605225
    9. '=' → logprob: -5.445741176605225
    10. 'from' → logprob: -5.820741176605225

Token 544: ' rows' (ID: 13585)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.007615848444402218
    2. '(' → logprob: -5.38261604309082
    3. ' (' → logprob: -6.00761604309082
    4. 's' → logprob: -8.38261604309082
    5. ' intersections' → logprob: -9.75761604309082
    6. 'positions' → logprob: -9.88261604309082
    7. '(r' → logprob: -10.25761604309082
    8. '(rows' → logprob: -10.50761604309082
    9. 'inter' → logprob: -10.63261604309082
    10. '[row' → logprob: -10.75761604309082

Token 545: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3688955307006836
    2. '       ' → logprob: -1.8688955307006836
    3. ' at' → logprob: -2.2438955307006836
    4. ' (' → logprob: -3.6188955307006836
    5. ',' → logprob: -5.243895530700684
    6. '(' → logprob: -5.618895530700684
    7. '<|end|>' → logprob: -5.618895530700684
    8. ' =' → logprob: -6.493895530700684
    9. ' between' → logprob: -6.618895530700684
    10. '```' → logprob: -6.993895530700684

Token 546: ' same' (ID: 2684)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.242338627576828
    2. ' (' → logprob: -1.7423386573791504
    3. '(' → logprob: -3.7423386573791504
    4. '(col' → logprob: -5.11733865737915
    5. 'col' → logprob: -6.24233865737915
    6. ' row' → logprob: -6.24233865737915
    7. ' col' → logprob: -6.49233865737915
    8. ' intersections' → logprob: -6.61733865737915
    9. 'row' → logprob: -7.36733865737915
    10. 's' → logprob: -7.36733865737915

Token 547: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.9432162046432495
    2. ',' → logprob: -1.3182162046432495
    3. '(col' → logprob: -2.193216323852539
    4. ' (' → logprob: -2.693216323852539
    5. '(row' → logprob: -2.943216323852539
    6. 'column' → logprob: -3.443216323852539
    7. ' col' → logprob: -3.693216323852539
    8. '(' → logprob: -4.193216323852539
    9. 'row' → logprob: -4.193216323852539
    10. ' ,' → logprob: -5.318216323852539

Token 548: ' position' (ID: 4010)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08427684754133224
    2. '   ' → logprob: -3.7092769145965576
    3. ' =' → logprob: -4.0842766761779785
    4. ' (' → logprob: -4.3342766761779785
    5. ',' → logprob: -4.4592766761779785
    6. ' at' → logprob: -6.0842766761779785
    7. '<|end|>' → logprob: -6.4592766761779785
    8. '           ' → logprob: -6.4592766761779785
    9. '(' → logprob: -6.7092766761779785
    10. '        
' → logprob: -6.9592766761779785

Token 549: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05156785622239113
    2. '   ' → logprob: -3.301567792892456
    3. ',' → logprob: -4.926568031311035
    4. '<|end|>' → logprob: -6.676568031311035
    5. ' at' → logprob: -6.801568031311035
    6. ' (' → logprob: -6.926568031311035
    7. '        
' → logprob: -7.051568031311035
    8. '           ' → logprob: -7.801568031311035
    9. '    
' → logprob: -8.676568031311035
    10. '(' → logprob: -8.676568031311035

Token 550: 'intersection' (ID: 170255)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6254213452339172
    2. ')' → logprob: -1.2504212856292725
    3. '(row' → logprob: -2.8754212856292725
    4. '       ' → logprob: -3.0004212856292725
    5. '(' → logprob: -3.1254212856292725
    6. '(inter' → logprob: -5.375421524047852
    7. ' intersections' → logprob: -5.750421524047852
    8. ' col' → logprob: -5.750421524047852
    9. ')
' → logprob: -6.125421524047852
    10. '           ' → logprob: -6.250421524047852

Token 551: ' to' (ID: 316)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6573282480239868
    2. ')' → logprob: -0.9073282480239868
    3. ' and' → logprob: -3.2823281288146973
    4. '<|end|>' → logprob: -4.407328128814697
    5. ',' → logprob: -4.532328128814697
    6. ' )' → logprob: -5.032328128814697
    7. '   ' → logprob: -5.157328128814697
    8. 's' → logprob: -6.532328128814697
    9. '       ' → logprob: -6.782328128814697
    10. ')
' → logprob: -7.532328128814697

Token 552: ' intersection' (ID: 42002)
  Prédit: ' middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' middle' → logprob: -1.0371140241622925
    2. 'middle' → logprob: -1.2871140241622925
    3. 'intersection' → logprob: -1.6621140241622925
    4. ' intersection' → logprob: -1.9121140241622925
    5. ' shelf' → logprob: -4.162114143371582
    6. 's' → logprob: -4.787114143371582
    7. ' (' → logprob: -5.787114143371582
    8. '(s' → logprob: -6.787114143371582
    9. '(inter' → logprob: -6.787114143371582
    10. '(m' → logprob: -7.287114143371582

Token 553: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1180560439825058
    2. ',' → logprob: -2.868056058883667
    3. ')' → logprob: -3.118056058883667
    4. ' and' → logprob: -4.993055820465088
    5. '   ' → logprob: -6.618055820465088
    6. '#' → logprob: -7.243055820465088
    7. 'or' → logprob: -8.368056297302246
    8. ')
' → logprob: -8.368056297302246
    9. '       ' → logprob: -8.743056297302246
    10. '),' → logprob: -8.868056297302246

Token 554: ' middle' (ID: 10006)
  Prédit: ' middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' middle' → logprob: -0.8084738850593567
    2. 'middle' → logprob: -1.308473825454712
    3. ' shelf' → logprob: -2.308473825454712
    4. 's' → logprob: -2.558473825454712
    5. ' intersection' → logprob: -3.558473825454712
    6. 'intersection' → logprob: -3.558473825454712
    7. ' (' → logprob: -4.183474063873291
    8. '(s' → logprob: -4.308474063873291
    9. '(inter' → logprob: -4.933474063873291
    10. '(m' → logprob: -5.308474063873291

Token 555: ' to' (ID: 316)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.17313483357429504
    2. ')' → logprob: -2.1731348037719727
    3. ',' → logprob: -4.048134803771973
    4. ' )' → logprob: -4.923134803771973
    5. '   ' → logprob: -5.423134803771973
    6. ' and' → logprob: -6.173134803771973
    7. 's' → logprob: -6.298134803771973
    8. ' positions' → logprob: -6.298134803771973
    9. ' between' → logprob: -6.423134803771973
    10. ' of' → logprob: -6.423134803771973

Token 556: ' middle' (ID: 10006)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.014183718711137772
    2. ' middle' → logprob: -4.264183521270752
    3. 's' → logprob: -11.26418399810791
    4. 'mid' → logprob: -12.13918399810791
    5. 'midd' → logprob: -14.51418399810791
    6. '.middle' → logprob: -14.88918399810791
    7. '_middle' → logprob: -14.88918399810791
    8. ' shelf' → logprob: -15.26418399810791
    9. '
' → logprob: -16.014183044433594
    10. 'medium' → logprob: -16.264183044433594

Token 557: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36159375309944153
    2. '       ' → logprob: -1.7365937232971191
    3. ',' → logprob: -2.986593723297119
    4. '#' → logprob: -4.111593723297119
    5. ' or' → logprob: -4.111593723297119
    6. '   ' → logprob: -4.361593723297119
    7. '):
' → logprob: -4.736593723297119
    8. ')
' → logprob: -5.111593723297119
    9. '<|end|>' → logprob: -6.236593723297119
    10. ').' → logprob: -6.361593723297119

Token 558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0083953021094203
    2. '   ' → logprob: -5.383395195007324
    3. '        
' → logprob: -6.633395195007324
    4. '<|end|>' → logprob: -7.258395195007324
    5. '           ' → logprob: -7.633395195007324
    6. '[' → logprob: -7.758395195007324
    7. '        ' → logprob: -8.883395195007324
    8. '```' → logprob: -9.133395195007324
    9. '\n' → logprob: -9.508395195007324
    10. ',' → logprob: -9.633395195007324

Token 559: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03187622129917145
    2. '   ' → logprob: -5.031876087188721
    3. '<|end|>' → logprob: -5.281876087188721
    4. ')' → logprob: -5.656876087188721
    5. '[' → logprob: -5.781876087188721
    6. '        ' → logprob: -5.906876087188721
    7. '           ' → logprob: -6.281876087188721
    8. '        
' → logprob: -6.406876087188721
    9. '    ' → logprob: -6.781876087188721
    10. ',' → logprob: -6.781876087188721

Token 560: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012657267041504383
    2. '   ' → logprob: -5.012657165527344
    3. '<|end|>' → logprob: -6.012657165527344
    4. '#' → logprob: -6.262657165527344
    5. '        
' → logprob: -8.012657165527344
    6. '           ' → logprob: -8.137657165527344
    7. '<|end|>' → logprob: -8.387657165527344
    8. '        ' → logprob: -8.387657165527344
    9. '    ' → logprob: -9.012657165527344
    10. ' ' → logprob: -10.137657165527344

Token 561: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004782899748533964
    2. '        
' → logprob: -6.379782676696777
    3. '   ' → logprob: -7.129782676696777
    4. '           ' → logprob: -7.629782676696777
    5. '
' → logprob: -7.879782676696777
    6. '        ' → logprob: -8.004782676696777
    7. '<|end|>' → logprob: -8.379782676696777
    8. 'for' → logprob: -8.629782676696777
    9. '#' (adapté à ' #') → logprob: -9.004782676696777
    10. ' for' → logprob: -9.254782676696777

Token 562: ' At' (ID: 3604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1964801698923111
    2. '#' → logprob: -2.0714802742004395
    3. 'vertical' → logprob: -3.3214802742004395
    4. ' vertical' → logprob: -5.4464802742004395
    5. '   ' → logprob: -5.5714802742004395
    6. ' #' → logprob: -6.5714802742004395
    7. 'Vertical' → logprob: -6.5714802742004395
    8. '        
' → logprob: -6.5714802742004395
    9. '
' → logprob: -7.3214802742004395
    10. 'for' → logprob: -7.4464802742004395

Token 563: ' intersection' (ID: 42002)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6790876388549805
    2. ' each' → logprob: -2.3040876388549805
    3. ' col' → logprob: -2.4290876388549805
    4. ' intersection' → logprob: -2.4290876388549805
    5. '(' → logprob: -2.6790876388549805
    6. '(col' → logprob: -2.9290876388549805
    7. 'intersection' → logprob: -3.6790876388549805
    8. ' intersections' → logprob: -4.1790876388549805
    9. 'each' → logprob: -4.5540876388549805
    10. ' position' → logprob: -4.8040876388549805

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8038169741630554
    2. ' (' → logprob: -1.8038170337677002
    3. ' at' → logprob: -1.9288170337677002
    4. 's' → logprob: -2.3038170337677
    5. ' ,' → logprob: -3.3038170337677
    6. '   ' → logprob: -3.5538170337677
    7. ' to' → logprob: -3.8038170337677
    8. '(' → logprob: -4.053816795349121
    9. ')' → logprob: -4.928816795349121
    10. 'to' → logprob: -5.178816795349121

Token 565: ' she' (ID: 1770)
  Prédit: 'she'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'she' → logprob: -0.20206953585147858
    2. 'vertical' → logprob: -2.2020695209503174
    3. ' she' → logprob: -3.4520695209503174
    4. ' vertical' → logprob: -3.5770695209503174
    5. 'can' → logprob: -5.7020697593688965
    6. ' can' → logprob: -6.0770697593688965
    7. '#' → logprob: -6.3270697593688965
    8. 'one' → logprob: -6.7020697593688965
    9. 'She' → logprob: -7.0770697593688965
    10. ' one' → logprob: -7.8270697593688965

Token 566: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.0018540311139076948
    2. 'can' → logprob: -6.501853942871094
    3. ' may' → logprob: -8.251853942871094
    4. '   ' → logprob: -10.876853942871094
    5. '_can' → logprob: -11.126853942871094
    6. ' =' → logprob: -11.251853942871094
    7. ' ' → logprob: -11.501853942871094
    8. '```' → logprob: -12.001853942871094
    9. '	can' → logprob: -12.376853942871094
    10. ' is' → logprob: -12.501853942871094

Token 567: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.4402852952480316
    2. 'move' → logprob: -1.065285325050354
    3. ' go' → logprob: -4.6902852058410645
    4. 'go' → logprob: -6.5652852058410645
    5. '   ' → logprob: -8.440285682678223
    6. '	move' → logprob: -9.065285682678223
    7. '       ' → logprob: -9.315285682678223
    8. ' also' → logprob: -9.565285682678223
    9. ' either' → logprob: -9.815285682678223
    10. 'walk' → logprob: -10.065285682678223

Token 568: ' vertically' (ID: 94774)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.7701788544654846
    2. ' vertically' → logprob: -0.7701788544654846
    3. 'vert' → logprob: -3.02017879486084
    4. 'up' → logprob: -4.02017879486084
    5. '_vert' → logprob: -5.52017879486084
    6. ' down' → logprob: -7.52017879486084
    7. ' either' → logprob: -7.64517879486084
    8. 'Vert' → logprob: -7.64517879486084
    9. ' to' → logprob: -7.77017879486084
    10. 'down' → logprob: -8.14517879486084

Token 569: ' up' (ID: 869)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6045703291893005
    2. ' to' → logprob: -1.4795703887939453
    3. '   ' → logprob: -2.6045703887939453
    4. '       ' → logprob: -2.9795703887939453
    5. ' up' → logprob: -3.7295703887939453
    6. ' one' → logprob: -3.9795703887939453
    7. ' (' → logprob: -4.604570388793945
    8. ',' → logprob: -4.604570388793945
    9. ' either' → logprob: -4.604570388793945
    10. ' in' → logprob: -5.604570388793945

Token 570: '/down' (ID: 170878)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.13539773225784302
    2. 'or' → logprob: -2.1353976726531982
    3. '   ' → logprob: -5.385397911071777
    4. '/down' → logprob: -7.260397911071777
    5. ',' → logprob: -7.385397911071777
    6. '<|end|>' → logprob: -7.510397911071777
    7. '       ' → logprob: -7.885397911071777
    8. '_or' → logprob: -7.885397911071777
    9. '	or' → logprob: -8.135397911071777
    10. '  ' → logprob: -8.760397911071777

Token 571: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3144930601119995
    2. ' or' → logprob: -1.5644930601119995
    3. '   ' → logprob: -3.564493179321289
    4. ',' → logprob: -4.064493179321289
    5. ' at' → logprob: -5.314493179321289
    6. ' by' → logprob: -5.939493179321289
    7. '           ' → logprob: -6.064493179321289
    8. ' (' → logprob: -7.064493179321289
    9. ' to' → logprob: -7.439493179321289
    10. ' only' → logprob: -7.939493179321289

Token 572: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.18388482928276062
    2. 'cost' → logprob: -1.808884859085083
    3. '1' → logprob: -5.558884620666504
    4. '0' → logprob: -9.558884620666504
    5. '```' → logprob: -9.558884620666504
    6. ' ' → logprob: -10.308884620666504
    7. ' a' → logprob: -10.558884620666504
    8. 'a' → logprob: -11.183884620666504
    9. ' adjacent' → logprob: -11.308884620666504
    10. 'distance' → logprob: -11.558884620666504

Token 573: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5953653454780579
    2. '=' → logprob: -0.8453653454780579
    3. '1' → logprob: -3.970365285873413
    4. ' ' → logprob: -9.220365524291992
    5. '0' → logprob: -9.220365524291992
    6. '```' → logprob: -9.220365524291992
    7. ' +' → logprob: -10.845365524291992
    8. '   ' → logprob: -11.095365524291992
    9. '`' → logprob: -11.470365524291992
    10. ' or' → logprob: -11.970365524291992

Token 574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05182008817791939
    2. '=' → logprob: -3.0518200397491455
    3. '0' → logprob: -5.801820278167725
    4. ' =' → logprob: -8.801819801330566
    5. ' ' → logprob: -10.801819801330566
    6. '```' → logprob: -11.176819801330566
    7. '2' → logprob: -11.801819801330566
    8. 'or' → logprob: -12.301819801330566
    9. '   ' → logprob: -13.176819801330566
    10. ' or' → logprob: -13.551819801330566

Token 575: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6796659827232361
    2. '   ' → logprob: -0.8046659827232361
    3. '<|end|>' → logprob: -3.679666042327881
    4. '
' → logprob: -4.429666042327881
    5. ',' → logprob: -5.679666042327881
    6. '    
' → logprob: -6.679666042327881
    7. '        
' → logprob: -6.804666042327881
    8. ')' → logprob: -6.929666042327881
    9. ' at' → logprob: -8.054665565490723
    10. '           ' → logprob: -8.179665565490723

Token 576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011811988428235054
    2. '<|end|>' → logprob: -5.386812210083008
    3. '   ' → logprob: -5.761812210083008
    4. '        
' → logprob: -6.386812210083008
    5. '           ' → logprob: -7.386812210083008
    6. '
' → logprob: -8.136812210083008
    7. '```' → logprob: -8.511812210083008
    8. ',' → logprob: -9.011812210083008
    9. '<|end|>' → logprob: -9.011812210083008
    10. '    
' → logprob: -9.136812210083008

Token 577: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021844033617526293
    2. '```' → logprob: -7.3771843910217285
    3. '   ' → logprob: -7.6271843910217285
    4. '        
' → logprob: -8.252184867858887
    5. '<|end|>' → logprob: -8.627184867858887
    6. '           ' → logprob: -8.627184867858887
    7. '#' → logprob: -9.002184867858887
    8. '        ' → logprob: -9.877184867858887
    9. '(' → logprob: -10.002184867858887
    10. ' at' → logprob: -10.252184867858887

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021816655062139034
    2. '<|end|>' → logprob: -7.002181529998779
    3. '           ' → logprob: -7.877181529998779
    4. '        ' → logprob: -8.252182006835938
    5. '        
' → logprob: -8.627182006835938
    6. '   ' → logprob: -8.752182006835938
    7. '<|end|>' → logprob: -9.377182006835938
    8. '	' → logprob: -10.002182006835938
    9. '      ' → logprob: -10.627182006835938
    10. '```' → logprob: -11.002182006835938

Token 579: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00442691333591938
    2. '#' (adapté à ' #') → logprob: -5.754426956176758
    3. '           ' → logprob: -7.504426956176758
    4. '        ' → logprob: -8.629426956176758
    5. '        
' → logprob: -8.879426956176758
    6. '<|end|>' → logprob: -9.129426956176758
    7. '   ' → logprob: -9.379426956176758
    8. ' at' → logprob: -9.879426956176758
    9. '      ' → logprob: -11.129426956176758
    10. ',' → logprob: -11.254426956176758

Token 580: ' At' (ID: 3604)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3297039866447449
    2. '       ' → logprob: -1.3297040462493896
    3. 'Vertical' → logprob: -5.0797038078308105
    4. 'At' → logprob: -5.2047038078308105
    5. 'vertical' → logprob: -6.4547038078308105
    6. 'Horizontal' → logprob: -6.9547038078308105
    7. '   ' → logprob: -7.0797038078308105
    8. ' #' → logprob: -8.204704284667969
    9. '
' → logprob: -8.829704284667969
    10. '_vertical' → logprob: -8.954704284667969

Token 581: ' shelf' (ID: 40978)
  Prédit: ' middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' middle' → logprob: -0.3220888376235962
    2. 'middle' → logprob: -1.8220888376235962
    3. ' intersection' → logprob: -3.5720887184143066
    4. 's' → logprob: -3.5720887184143066
    5. ' shelf' → logprob: -3.6970887184143066
    6. 'intersection' → logprob: -3.9470887184143066
    7. ' intersections' → logprob: -5.197088718414307
    8. ' shelves' → logprob: -5.697088718414307
    9. ' midd' → logprob: -6.572088718414307
    10. 'midd' → logprob: -6.822088718414307

Token 582: ' middle' (ID: 10006)
  Prédit: ' middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' middle' → logprob: -0.15093061327934265
    2. 'middle' → logprob: -2.650930643081665
    3. ',' → logprob: -3.400930643081665
    4. ' s' → logprob: -4.650930404663086
    5. 's' → logprob: -4.775930404663086
    6. ' ' → logprob: -5.150930404663086
    7. ' midd' → logprob: -5.275930404663086
    8. ' ,' → logprob: -6.650930404663086
    9. ' positions' → logprob: -6.775930404663086
    10. '_middle' → logprob: -6.900930404663086

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033461373299360275
    2. ' (' → logprob: -4.033461570739746
    3. ' ,' → logprob: -5.033461570739746
    4. 's' → logprob: -5.033461570739746
    5. ' at' → logprob: -7.408461570739746
    6. ' s' → logprob: -7.783461570739746
    7. '(s' → logprob: -8.283461570739746
    8. ' or' → logprob: -8.283461570739746
    9. '(' → logprob: -9.033461570739746
    10. '   ' → logprob: -9.158461570739746

Token 584: ' vertical' (ID: 17679)
  Prédit: ' she'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' she' → logprob: -0.16092056035995483
    2. 'she' → logprob: -1.9109206199645996
    3. '   ' → logprob: -8.285920143127441
    4. 'She' → logprob: -8.660920143127441
    5. ' cost' → logprob: -9.160920143127441
    6. 'cost' → logprob: -10.160920143127441
    7. 'def' → logprob: -10.285920143127441
    8. '       ' → logprob: -10.785920143127441
    9. ' with' → logprob: -11.535920143127441
    10. '<|end|>' → logprob: -11.785920143127441

Token 585: ' movement' (ID: 12772)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.3182435631752014
    2. ' movement' → logprob: -1.4432435035705566
    3. '_edges' → logprob: -4.818243503570557
    4. ' cost' → logprob: -5.193243503570557
    5. ' ' → logprob: -5.318243503570557
    6. ' moves' → logprob: -5.818243503570557
    7. 'movement' → logprob: -5.943243503570557
    8. ' with' → logprob: -6.068243503570557
    9. 'edges' → logprob: -6.443243503570557
    10. '<|end|>' → logprob: -6.568243503570557

Token 586: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.3934454917907715
    2. 'cost' → logprob: -1.3934454917907715
    3. ' with' → logprob: -1.7684454917907715
    4. 'with' → logprob: -1.8934454917907715
    5. ' cost' → logprob: -3.0184454917907715
    6. ' at' → logprob: -3.0184454917907715
    7. 'is' → logprob: -3.5184454917907715
    8. ' also' → logprob: -4.0184454917907715
    9. 'also' → logprob: -4.8934454917907715
    10. 'at' → logprob: -4.8934454917907715

Token 587: ' not' (ID: 625)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.5454404354095459
    2. '1' → logprob: -1.795440435409546
    3. ' allowed' → logprob: -2.420440435409546
    4. 'possible' → logprob: -2.420440435409546
    5. 'also' → logprob: -3.170440435409546
    6. ' possible' → logprob: -4.295440673828125
    7. ' also' → logprob: -4.920440673828125
    8. '0' → logprob: -5.045440673828125
    9. ' ' → logprob: -5.420440673828125
    10. 'cost' → logprob: -7.170440673828125

Token 588: ' explicitly' (ID: 45615)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.04306165128946304
    2. ' allowed' → logprob: -3.1680617332458496
    3. '_allowed' → logprob: -10.668061256408691
    4. 'possible' → logprob: -10.918061256408691
    5. ' permitted' → logprob: -12.043061256408691
    6. 'available' → logprob: -12.293061256408691
    7. '.allowed' → logprob: -13.168061256408691
    8. 'allow' → logprob: -13.418061256408691
    9. ' possible' → logprob: -13.668061256408691
    10. 'able' → logprob: -13.793061256408691

Token 589: ' forbidden' (ID: 74435)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.022146081551909447
    2. ' allowed' → logprob: -3.897145986557007
    3. 'mentioned' → logprob: -7.397146224975586
    4. ' described' → logprob: -8.272146224975586
    5. 'defined' → logprob: -8.772146224975586
    6. '_allowed' → logprob: -8.897146224975586
    7. ' stated' → logprob: -9.397146224975586
    8. 'specified' → logprob: -9.522146224975586
    9. ' mentioned' → logprob: -9.647146224975586
    10. 'enabled' → logprob: -9.772146224975586

Token 590: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35271310806274414
    2. '       ' → logprob: -1.8527131080627441
    3. '<|end|>' → logprob: -2.602713108062744
    4. ',' → logprob: -3.852713108062744
    5. '
' → logprob: -4.602713108062744
    6. ':' → logprob: -4.977713108062744
    7. '.' → logprob: -5.352713108062744
    8. '<|end|>' → logprob: -5.727713108062744
    9. '    
' → logprob: -5.852713108062744
    10. ' at' → logprob: -5.977713108062744

Token 591: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27853167057037354
    2. ' but' → logprob: -2.028531551361084
    3. '<|end|>' → logprob: -2.528531551361084
    4. '   ' → logprob: -4.278531551361084
    5. '           ' → logprob: -5.778531551361084
    6. '        ' → logprob: -5.903531551361084
    7. '    ' → logprob: -6.278531551361084
    8. ' ' → logprob: -6.403531551361084
    9. '<|end|>' → logprob: -6.403531551361084
    10. '        
' → logprob: -7.028531551361084

Token 592: ' maybe' (ID: 10112)
  Prédit: ' she'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' she' → logprob: -0.1362287402153015
    2. ' cost' → logprob: -3.1362287998199463
    3. 'she' → logprob: -3.2612287998199463
    4. '   ' → logprob: -4.386228561401367
    5. ' yes' → logprob: -4.636228561401367
    6. ' vertical' → logprob: -4.761228561401367
    7. ' can' → logprob: -5.511228561401367
    8. 'cost' → logprob: -5.636228561401367
    9. ' ' → logprob: -6.136228561401367
    10. ' possible' → logprob: -7.011228561401367

Token 593: ' also' (ID: 1217)
  Prédit: ' she'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' she' → logprob: -0.7612953782081604
    2. 'she' → logprob: -1.3862953186035156
    3. ' vertical' → logprob: -1.7612953186035156
    4. ' yes' → logprob: -2.8862953186035156
    5. 'vertical' → logprob: -3.1362953186035156
    6. ' cost' → logprob: -5.761295318603516
    7. 'cost' → logprob: -6.261295318603516
    8. ' allowed' → logprob: -6.511295318603516
    9. ' at' → logprob: -7.136295318603516
    10. ' possible' → logprob: -7.136295318603516

Token 594: ' cost' (ID: 3097)
  Prédit: ' allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allowed' → logprob: -0.9636910557746887
    2. ' with' → logprob: -1.838690996170044
    3. '1' → logprob: -1.963690996170044
    4. 'allowed' → logprob: -2.088690996170044
    5. ' possible' → logprob: -2.213690996170044
    6. ' cost' → logprob: -3.838690996170044
    7. 'possible' → logprob: -4.088691234588623
    8. ' ' → logprob: -4.463691234588623
    9. 'cost' → logprob: -4.713691234588623
    10. ' can' → logprob: -5.088691234588623

Token 595: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1283385008573532
    2. '=' → logprob: -2.128338575363159
    3. '1' → logprob: -6.62833833694458
    4. ' ' → logprob: -9.503338813781738
    5. '0' → logprob: -12.378338813781738
    6. 's' → logprob: -12.378338813781738
    7. '   ' → logprob: -13.503338813781738
    8. '```' → logprob: -14.128338813781738
    9. ' +=' → logprob: -14.628338813781738
    10. ' is' → logprob: -15.503338813781738

Token 596: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04027624428272247
    2. '=' → logprob: -3.540276288986206
    3. ' ' → logprob: -4.665276050567627
    4. ' =' → logprob: -6.915276050567627
    5. '0' → logprob: -9.915276527404785
    6. ' is' → logprob: -12.290276527404785
    7. '```' → logprob: -12.915276527404785
    8. '   ' → logprob: -13.540276527404785
    9. 'is' → logprob: -13.665276527404785
    10. ' of' → logprob: -14.165276527404785

Token 597: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13915711641311646
    2. '   ' → logprob: -2.2641570568084717
    3. '<|end|>' → logprob: -4.639157295227051
    4. ',' → logprob: -5.264157295227051
    5. '        
' → logprob: -6.139157295227051
    6. ')' → logprob: -6.264157295227051
    7. '           ' → logprob: -6.764157295227051
    8. '    
' → logprob: -6.889157295227051
    9. '<|end|>' → logprob: -7.014157295227051
    10. '.' → logprob: -7.014157295227051

Token 598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025554319843649864
    2. '   ' → logprob: -4.525554180145264
    3. '<|end|>' → logprob: -4.900554180145264
    4. '           ' → logprob: -6.275554180145264
    5. '        
' → logprob: -6.775554180145264
    6. ',' → logprob: -7.150554180145264
    7. '.' → logprob: -7.400554180145264
    8. '```' → logprob: -7.650554180145264
    9. '<|end|>' → logprob: -8.025554656982422
    10. '\' → logprob: -8.275554656982422

Token 599: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10804186016321182
    2. '<|end|>' → logprob: -3.233041763305664
    3. '   ' → logprob: -4.483041763305664
    4. '        
' → logprob: -4.733041763305664
    5. '\' → logprob: -4.858041763305664
    6. ',' → logprob: -5.233041763305664
    7. '\n' → logprob: -5.608041763305664
    8. '
' → logprob: -5.608041763305664
    9. '.' → logprob: -5.733041763305664
    10. ')' → logprob: -5.858041763305664

Token 600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10649053007364273
    2. '<|end|>' → logprob: -2.4814906120300293
    3. '<|end|>' → logprob: -4.856490612030029
    4. '   ' → logprob: -5.606490612030029
    5. '        
' → logprob: -5.606490612030029
    6. '
' → logprob: -7.731490612030029
    7. '#' → logprob: -8.231490135192871
    8. '```' → logprob: -8.356490135192871
    9. '        ' → logprob: -8.606490135192871
    10. '           ' → logprob: -8.606490135192871

Token 601: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033714860677719116
    2. '        
' → logprob: -4.283714771270752
    3. '   ' → logprob: -5.283714771270752
    4. '<|end|>' → logprob: -5.658714771270752
    5. '        ' → logprob: -5.908714771270752
    6. '
' → logprob: -6.033714771270752
    7. '           ' → logprob: -7.033714771270752
    8. ' 
' → logprob: -7.533714771270752
    9. '    ' → logprob: -7.658714771270752
    10. ' ' → logprob: -7.908714771270752

Token 602: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03212294355034828
    2. '        ' → logprob: -4.90712308883667
    3. '
' → logprob: -5.03212308883667
    4. '   ' → logprob: -5.15712308883667
    5. '        
' → logprob: -5.40712308883667
    6. '    ' → logprob: -7.65712308883667
    7. ' vertical' → logprob: -7.65712308883667
    8. 'vertical' → logprob: -7.65712308883667
    9. 'dp' → logprob: -7.65712308883667
    10. '           ' → logprob: -7.78212308883667

Token 603: ' it's' (ID: 4275)
  Prédit: ' vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.6307254433631897
    2. 'vertical' → logprob: -0.8807254433631897
    3. 'the' → logprob: -4.130725383758545
    4. '#' → logprob: -4.505725383758545
    5. '   ' → logprob: -4.505725383758545
    6. ' the' → logprob: -5.505725383758545
    7. 'she' → logprob: -5.755725383758545
    8. '       ' → logprob: -6.755725383758545
    9. ' all' → logprob: -7.005725383758545
    10. ' ' → logprob: -7.130725383758545

Token 604: ' not' (ID: 625)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4117459058761597
    2. ' symmetric' → logprob: -2.161746025085449
    3. ' a' → logprob: -2.536746025085449
    4. 'not' → logprob: -2.786746025085449
    5. 'possible' → logprob: -3.286746025085449
    6. ' not' → logprob: -3.286746025085449
    7. 'important' → logprob: -3.661746025085449
    8. 'allowed' → logprob: -3.786746025085449
    9. 'und' → logprob: -4.161746025085449
    10. ' natural' → logprob: -4.286746025085449

Token 605: ' stated' (ID: 16969)
  Prédit: 'explicit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'explicit' → logprob: -0.23211394250392914
    2. ' explicitly' → logprob: -1.9821139574050903
    3. ' explicit' → logprob: -4.482113838195801
    4. ' described' → logprob: -4.607113838195801
    5. ' fully' → logprob: -4.732113838195801
    6. ' clear' → logprob: -4.857113838195801
    7. 'clear' → logprob: -5.232113838195801
    8. ' completely' → logprob: -5.607113838195801
    9. ' stated' → logprob: -5.857113838195801
    10. 'allowed' → logprob: -5.982113838195801

Token 606: ' forbidden' (ID: 74435)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6315298676490784
    2. ',' → logprob: -1.1315298080444336
    3. ':' → logprob: -3.8815298080444336
    4. ' ,' → logprob: -3.8815298080444336
    5. ' that' → logprob: -4.006529808044434
    6. ' ' → logprob: -4.006529808044434
    7. '<|end|>' → logprob: -4.256529808044434
    8. '_' → logprob: -4.381529808044434
    9. '       ' → logprob: -4.506529808044434
    10. '    ' → logprob: -5.006529808044434

Token 607: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21522898972034454
    2. ',' → logprob: -2.840229034423828
    3. '<|end|>' → logprob: -2.840229034423828
    4. '   ' → logprob: -2.840229034423828
    5. ':' → logprob: -4.965229034423828
    6. ')' → logprob: -5.465229034423828
    7. '<|end|>' → logprob: -5.965229034423828
    8. '.' → logprob: -7.215229034423828
    9. '        
' → logprob: -7.590229034423828
    10. '           ' → logprob: -7.715229034423828

Token 608: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6174377202987671
    2. '<|end|>' → logprob: -1.867437720298767
    3. ' continue' → logprob: -2.7424378395080566
    4. ' ' → logprob: -3.2424378395080566
    5. '   ' → logprob: -3.2424378395080566
    6. '    ' → logprob: -3.3674378395080566
    7. ',' → logprob: -3.4924378395080566
    8. ' 
' → logprob: -3.6174378395080566
    9. '        ' → logprob: -4.617437839508057
    10. ')' → logprob: -4.867437839508057

Token 609: ' assume' (ID: 19429)
  Prédit: ' assume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assume' → logprob: -0.23245376348495483
    2. ' can' → logprob: -1.6074538230895996
    3. ' continue' → logprob: -5.8574538230896
    4. ' will' → logprob: -6.7324538230896
    5. 'can' → logprob: -6.7324538230896
    6. ' consider' → logprob: -7.8574538230896
    7. ''ll' → logprob: -7.9824538230896
    8. ' should' → logprob: -8.107453346252441
    9. ' must' → logprob: -8.982453346252441
    10. ' may' → logprob: -9.107453346252441

Token 610: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.04487288370728493
    2. 'vertical' → logprob: -3.169872999191284
    3. ' yes' → logprob: -7.169872760772705
    4. '1' → logprob: -7.669872760772705
    5. ' cost' → logprob: -8.169873237609863
    6. ' she' → logprob: -9.044873237609863
    7. ' that' → logprob: -9.544873237609863
    8. ' the' → logprob: -10.419873237609863
    9. 'cost' → logprob: -10.419873237609863
    10. ' at' → logprob: -10.794873237609863

Token 611: ' edges' (ID: 22569)
  Prédit: ' movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movement' → logprob: -0.02613377757370472
    2. ' move' → logprob: -4.401134014129639
    3. ' moves' → logprob: -5.401134014129639
    4. 'movement' → logprob: -5.651134014129639
    5. '_move' → logprob: -6.151134014129639
    6. ' movements' → logprob: -6.401134014129639
    7. '_moves' → logprob: -7.526134014129639
    8. ' ' → logprob: -7.901134014129639
    9. ' edges' → logprob: -7.901134014129639
    10. 'moves' → logprob: -9.65113353729248

Token 612: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6725894212722778
    2. ' =' → logprob: -1.7975894212722778
    3. '       ' → logprob: -1.7975894212722778
    4. '<|end|>' → logprob: -3.0475893020629883
    5. ' at' → logprob: -3.1725893020629883
    6. ':' → logprob: -4.297589302062988
    7. ',' → logprob: -4.547589302062988
    8. ' between' → logprob: -4.672589302062988
    9. ')' → logprob: -5.047589302062988
    10. '=' → logprob: -5.547589302062988

Token 613: ' same' (ID: 2684)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.1297595500946045
    2. ' adjacent' → logprob: -1.8797595500946045
    3. '(' → logprob: -2.5047595500946045
    4. '(s' → logprob: -2.6297595500946045
    5. 'positions' → logprob: -2.7547595500946045
    6. ' shelf' → logprob: -3.0047595500946045
    7. '(row' → logprob: -3.1297595500946045
    8. '(m' → logprob: -3.2547595500946045
    9. ' positions' → logprob: -3.5047595500946045
    10. ' (' → logprob: -3.6297595500946045

Token 614: ' col' (ID: 996)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6486151814460754
    2. ' row' → logprob: -0.8986151814460754
    3. '(row' → logprob: -3.0236151218414307
    4. 'col' → logprob: -4.52361536026001
    5. 'position' → logprob: -5.39861536026001
    6. ' (' → logprob: -6.14861536026001
    7. ' col' → logprob: -7.14861536026001
    8. ' position' → logprob: -7.64861536026001
    9. 'positions' → logprob: -7.64861536026001
    10. 'column' → logprob: -7.77361536026001

Token 615: ' intersection' (ID: 42002)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07953526824712753
    2. ' positions' → logprob: -3.3295352458953857
    3. 'positions' → logprob: -3.8295352458953857
    4. ' ,' → logprob: -4.704535484313965
    5. ' and' → logprob: -5.829535484313965
    6. '   ' → logprob: -5.954535484313965
    7. '       ' → logprob: -6.204535484313965
    8. '    ' → logprob: -7.704535484313965
    9. ' position' → logprob: -8.079535484313965
    10. ' #' → logprob: -8.204535484313965

Token 616: ' rows' (ID: 13585)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13938041031360626
    2. '<|end|>' → logprob: -2.51438045501709
    3. ',' → logprob: -3.63938045501709
    4. ')' → logprob: -4.38938045501709
    5. ' and' → logprob: -5.88938045501709
    6. ' or' → logprob: -6.01438045501709
    7. ' ,' → logprob: -6.51438045501709
    8. '   ' → logprob: -7.01438045501709
    9. ' s' → logprob: -7.26438045501709
    10. '_' → logprob: -7.38938045501709

Token 617: ' exist' (ID: 4310)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46478867530822754
    2. '       ' → logprob: -1.0897886753082275
    3. ',' → logprob: -3.9647886753082275
    4. ' and' → logprob: -5.714788436889648
    5. '<|end|>' → logprob: -6.089788436889648
    6. ' =' → logprob: -6.339788436889648
    7. '	' → logprob: -6.339788436889648
    8. '```' → logprob: -6.464788436889648
    9. 's' → logprob: -7.089788436889648
    10. ')' → logprob: -7.339788436889648

Token 618: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.642718493938446
    2. '   ' → logprob: -1.1427185535430908
    3. '<|end|>' → logprob: -2.892718553543091
    4. ',' → logprob: -3.267718553543091
    5. ':' → logprob: -3.767718553543091
    6. ')' → logprob: -4.142718315124512
    7. '<|end|>' → logprob: -5.392718315124512
    8. '.' → logprob: -5.392718315124512
    9. '        
' → logprob: -6.267718315124512
    10. ' and' → logprob: -6.392718315124512

Token 619: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0003956416912842542
    2. ' cost' → logprob: -8.375395774841309
    3. '1' → logprob: -8.750395774841309
    4. 'weight' → logprob: -12.375395774841309
    5. 'token' → logprob: -14.625395774841309
    6. 'distance' → logprob: -14.750395774841309
    7. 'a' → logprob: -15.125395774841309
    8. '(cost' → logprob: -15.125395774841309
    9. '```' → logprob: -15.500395774841309
    10. 'code' → logprob: -16.000394821166992

Token 620: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002422779070911929
    2. ' ' → logprob: -8.375242233276367
    3. '=' → logprob: -11.750242233276367
    4. '```' → logprob: -12.750242233276367
    5. ' =' → logprob: -14.500242233276367
    6. '   ' → logprob: -15.750242233276367
    7. '
' → logprob: -15.875242233276367
    8. '`' → logprob: -16.500242233276367
    9. '``' → logprob: -17.750242233276367
    10. '{' → logprob: -18.250242233276367

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -15.750000953674316
    4. '
' → logprob: -16.875
    5. '   ' → logprob: -17.875
    6. '`' → logprob: -18.75
    7. '0' → logprob: -19.75
    8. '2' → logprob: -19.9375
    9. '=' → logprob: -20.0
    10. '

' → logprob: -20.125

Token 622: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20027178525924683
    2. '   ' → logprob: -2.0752718448638916
    3. ',' → logprob: -3.7002718448638916
    4. ')' → logprob: -4.5752716064453125
    5. '<|end|>' → logprob: -4.5752716064453125
    6. ':' → logprob: -5.3252716064453125
    7. '.' → logprob: -6.9502716064453125
    8. '\n' → logprob: -7.5752716064453125
    9. '        
' → logprob: -7.5752716064453125
    10. '<|end|>' → logprob: -7.7002716064453125

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0894293561577797
    2. '<|end|>' → logprob: -3.3394293785095215
    3. '        
' → logprob: -3.8394293785095215
    4. '   ' → logprob: -4.4644293785095215
    5. ',' → logprob: -6.2144293785095215
    6. '<|end|>' → logprob: -6.3394293785095215
    7. '\n' → logprob: -6.4644293785095215
    8. '
' → logprob: -6.8394293785095215
    9. '           ' → logprob: -6.9644293785095215
    10. '```' → logprob: -6.9644293785095215

Token 624: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0115702198818326
    2. '   ' → logprob: -5.386570453643799
    3. '        
' → logprob: -5.511570453643799
    4. '        ' → logprob: -7.761570453643799
    5. '```' → logprob: -8.01156997680664
    6. '           ' → logprob: -8.13656997680664
    7. '
' → logprob: -8.51156997680664
    8. 'def' → logprob: -8.51156997680664
    9. '<|end|>' → logprob: -8.51156997680664
    10. '    
' → logprob: -8.63656997680664

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011110781691968441
    2. '        
' → logprob: -5.386110782623291
    3. '
' → logprob: -5.761110782623291
    4. '   ' → logprob: -6.011110782623291
    5. '```' → logprob: -8.636110305786133
    6. '        

' → logprob: -9.011110305786133
    7. '    
' → logprob: -9.261110305786133
    8. '#' → logprob: -9.511110305786133
    9. '        
        
' → logprob: -9.761110305786133
    10. 'import' → logprob: -9.886110305786133

Token 626: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021320316940546036
    2. 'dp' → logprob: -4.271320343017578
    3. '        
' → logprob: -6.271320343017578
    4. 'distance' → logprob: -6.646320343017578
    5. ' dp' → logprob: -6.896320343017578
    6. '   ' → logprob: -7.646320343017578
    7. '#' (adapté à ' #') → logprob: -7.771320343017578
    8. 'dist' → logprob: -8.271320343017578
    9. 'vertical' → logprob: -8.771320343017578
    10. '
' → logprob: -8.896320343017578

Token 627: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04889323562383652
    2. '   ' → logprob: -3.6738932132720947
    3. 'dp' → logprob: -4.298893451690674
    4. '        ' → logprob: -6.673893451690674
    5. '        
' → logprob: -6.798893451690674
    6. 'for' → logprob: -6.923893451690674
    7. 'def' → logprob: -7.173893451690674
    8. ' for' → logprob: -7.423893451690674
    9. ' dp' → logprob: -7.548893451690674
    10. '           ' → logprob: -7.923893451690674

Token 628: ' model' (ID: 2359)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.916301429271698
    2. ' for' → logprob: -2.2913014888763428
    3. '   ' → logprob: -2.5413014888763428
    4. '#' → logprob: -2.6663014888763428
    5. ' positions' → logprob: -2.7913014888763428
    6. ' #' → logprob: -3.0413014888763428
    7. 'def' → logprob: -3.2913014888763428
    8. ' dp' → logprob: -3.4163014888763428
    9. 'dp' → logprob: -4.041301250457764
    10. ' vertical' → logprob: -4.041301250457764

Token 629: ' the' (ID: 290)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3544231951236725
    2. '   ' → logprob: -1.60442316532135
    3. ':' → logprob: -3.1044232845306396
    4. '=' → logprob: -3.9794232845306396
    5. '       ' → logprob: -4.1044230461120605
    6. '[' → logprob: -5.7294230461120605
    7. '_' → logprob: -5.8544230461120605
    8. ' ' → logprob: -6.2294230461120605
    9. 'def' → logprob: -6.7294230461120605
    10. '    ' → logprob: -6.8544230461120605

Token 630: ' grid' (ID: 10586)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.592094898223877
    2. ' graph' → logprob: -1.467094898223877
    3. ' next' → logprob: -2.717094898223877
    4. ' code' → logprob: -3.217094898223877
    5. '   ' → logprob: -3.467094898223877
    6. 'next' → logprob: -3.467094898223877
    7. 'positions' → logprob: -4.967094898223877
    8. 'code' → logprob: -5.217094898223877
    9. 'vertical' → logprob: -5.342094898223877
    10. 'grid' → logprob: -5.592094898223877

Token 631: ' nodes' (ID: 15749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13967342674732208
    2. ':' → logprob: -3.1396734714508057
    3. '   ' → logprob: -3.2646734714508057
    4. '<|end|>' → logprob: -3.8896734714508057
    5. '        ' → logprob: -5.014673233032227
    6. '        
' → logprob: -5.264673233032227
    7. '    ' → logprob: -5.514673233032227
    8. '<|end|>' → logprob: -6.264673233032227
    9. '```' → logprob: -6.514673233032227
    10. ',' → logprob: -6.889673233032227

Token 632: ' as' (ID: 472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6894930005073547
    2. ' =' → logprob: -1.31449294090271
    3. '   ' → logprob: -2.06449294090271
    4. ',' → logprob: -3.56449294090271
    5. '=' → logprob: -3.81449294090271
    6. '       ' → logprob: -4.314493179321289
    7. ' as' → logprob: -4.814493179321289
    8. ' and' → logprob: -5.314493179321289
    9. ' with' → logprob: -5.689493179321289
    10. '<|end|>' → logprob: -5.814493179321289

Token 633: ':
' (ID: 734)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6959713697433472
    2. '(' → logprob: -2.1959714889526367
    3. ' positions' → logprob: -2.6959714889526367
    4. 'nodes' → logprob: -2.6959714889526367
    5. ' nodes' → logprob: -3.0709714889526367
    6. 'points' → logprob: -3.3209714889526367
    7. '[
' → logprob: -3.6959714889526367
    8. ' points' → logprob: -3.8209714889526367
    9. 'a' → logprob: -4.195971488952637
    10. ' (' → logprob: -4.320971488952637

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40283024311065674
    2. '   ' → logprob: -1.2778302431106567
    3. '    ' → logprob: -3.652830123901367
    4. '```' → logprob: -4.652830123901367
    5. '        ' → logprob: -4.902830123901367
    6. '#' → logprob: -6.402830123901367
    7. '`' → logprob: -6.652830123901367
    8. '(' → logprob: -6.652830123901367
    9. '[' → logprob: -6.902830123901367
    10. ' ' → logprob: -7.527830123901367

Token 635: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017224008217453957
    2. '#' (adapté à ' #') → logprob: -5.392223834991455
    3. '        ' → logprob: -5.642223834991455
    4. '   ' → logprob: -5.892223834991455
    5. '(' → logprob: -6.267223834991455
    6. ' (' → logprob: -7.017223834991455
    7. '           ' → logprob: -7.267223834991455
    8. '    ' → logprob: -7.642223834991455
    9. 'tokens' → logprob: -7.642223834991455
    10. '```' → logprob: -8.142224311828613

Token 636: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3936717212200165
    2. '   ' → logprob: -2.268671751022339
    3. '    ' → logprob: -3.143671751022339
    4. '        ' → logprob: -3.268671751022339
    5. 'positions' → logprob: -4.14367151260376
    6. '[' → logprob: -4.26867151260376
    7. ' (' → logprob: -4.39367151260376
    8. ' nodes' → logprob: -4.51867151260376
    9. '```' → logprob: -4.51867151260376
    10. '(' → logprob: -4.76867151260376

Token 637: ' each' (ID: 2454)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.1335509568452835
    2. 'row' → logprob: -2.1335508823394775
    3. ' each' → logprob: -6.008551120758057
    4. ' col' → logprob: -6.258551120758057
    5. 'each' → logprob: -7.258551120758057
    6. 'col' → logprob: -8.008550643920898
    7. ' rows' → logprob: -8.133550643920898
    8. '(row' → logprob: -8.383550643920898
    9. ' node' → logprob: -9.133550643920898
    10. ' (' → logprob: -9.133550643920898

Token 638: ' col' (ID: 996)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.48341652750968933
    2. 'row' → logprob: -0.9834165573120117
    3. 'col' → logprob: -5.358416557312012
    4. '(row' → logprob: -6.233416557312012
    5. ' col' → logprob: -6.608416557312012
    6. ' (' → logprob: -7.108416557312012
    7. 'position' → logprob: -9.358416557312012
    8. '   ' → logprob: -10.108416557312012
    9. ' position' → logprob: -10.233416557312012
    10. '```' → logprob: -10.233416557312012

Token 639: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027636246755719185
    2. '```' → logprob: -4.5276360511779785
    3. '       ' → logprob: -5.6526360511779785
    4. '_,' → logprob: -6.0276360511779785
    5. ' ,' → logprob: -6.7776360511779785
    6. '+' → logprob: -6.7776360511779785
    7. ')' → logprob: -6.9026360511779785
    8. ':' → logprob: -7.0276360511779785
    9. '_' → logprob: -7.0276360511779785
    10. '0' → logprob: -7.0276360511779785

Token 640: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9421144127845764
    2. ')' → logprob: -1.3171143531799316
    3. '0' → logprob: -2.0671143531799316
    4. ' ,' → logprob: -2.6921143531799316
    5. ' (' → logprob: -2.8171143531799316
    6. ' ' → logprob: -3.4421143531799316
    7. 'row' → logprob: -3.6921143531799316
    8. '   ' → logprob: -5.192114353179932
    9. ' row' → logprob: -5.192114353179932
    10. '),' → logprob: -5.692114353179932

Token 641: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5608322024345398
    2. '..' → logprob: -1.0608322620391846
    3. '...' → logprob: -3.4358322620391846
    4. ' to' → logprob: -3.6858322620391846
    5. ')' → logprob: -4.5608320236206055
    6. '   ' → logprob: -5.4358320236206055
    7. '       ' → logprob: -6.3108320236206055
    8. '
' → logprob: -6.4358320236206055
    9. 'to' → logprob: -6.6858320236206055
    10. ',
' → logprob: -6.9358320236206055

Token 642: ' N' (ID: 478)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.030759340152144432
    2. '4' → logprob: -3.655759334564209
    3. 'N' → logprob: -5.530759334564209
    4. ' ' → logprob: -8.030759811401367
    5. '   ' → logprob: -9.155759811401367
    6. ' N' → logprob: -10.030759811401367
    7. '  ' → logprob: -12.780759811401367
    8. ')' → logprob: -13.155759811401367
    9. '       ' → logprob: -13.280759811401367
    10. '    ' → logprob: -13.530759811401367

Token 643: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24767722189426422
    2. '):
' → logprob: -2.6226773262023926
    3. '),' → logprob: -2.8726773262023926
    4. ')' → logprob: -2.9976773262023926
    5. '+' → logprob: -4.122677326202393
    6. ',' → logprob: -4.247677326202393
    7. '```' → logprob: -5.997677326202393
    8. '   ' → logprob: -6.122677326202393
    9. '*' → logprob: -6.247677326202393
    10. '):

' → logprob: -7.122677326202393

Token 644: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6224955320358276
    2. '       ' → logprob: -0.8724955320358276
    3. ':' → logprob: -4.122495651245117
    4. '   ' → logprob: -4.372495651245117
    5. '#' → logprob: -4.872495651245117
    6. '```' → logprob: -5.997495651245117
    7. ')' → logprob: -6.747495651245117
    8. '<|end|>' → logprob: -6.872495651245117
    9. '):' → logprob: -7.497495651245117
    10. ' ,' → logprob: -7.622495651245117

Token 645: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6851672530174255
    2. '       ' → logprob: -0.8101672530174255
    3. ',' → logprob: -3.1851673126220703
    4. '   ' → logprob: -5.06016731262207
    5. '           ' → logprob: -7.18516731262207
    6. '```' → logprob: -7.68516731262207
    7. '<|end|>' → logprob: -7.81016731262207
    8. ':' → logprob: -7.81016731262207
    9. ' #' → logprob: -8.43516731262207
    10. ' ' → logprob: -8.56016731262207

Token 646: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23447613418102264
    2. '       ' → logprob: -2.484476089477539
    3. ' for' → logprob: -2.734476089477539
    4. 'for' → logprob: -3.109476089477539
    5. '```' → logprob: -5.109476089477539
    6. '   ' → logprob: -6.109476089477539
    7. ',' → logprob: -6.484476089477539
    8. '           ' → logprob: -6.734476089477539
    9. ' #' → logprob: -6.859476089477539
    10. '        ' → logprob: -6.984476089477539

Token 647: ' each' (ID: 2454)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.27149131894111633
    2. 'row' → logprob: -1.771491289138794
    3. 'each' → logprob: -3.271491289138794
    4. ' each' → logprob: -3.521491289138794
    5. 'for' → logprob: -9.521491050720215
    6. ' for' → logprob: -10.271491050720215
    7. '(row' → logprob: -11.646491050720215
    8. ' ' → logprob: -11.896491050720215
    9. 'Each' → logprob: -12.146491050720215
    10. '   ' → logprob: -12.271491050720215

Token 648: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.4287254810333252
    2. 'row' → logprob: -1.0537254810333252
    3. 'layer' → logprob: -12.303725242614746
    4. '(row' → logprob: -12.303725242614746
    5. ' ' → logprob: -12.928725242614746
    6. ' layer' → logprob: -13.178725242614746
    7. '   ' → logprob: -13.178725242614746
    8. '```' → logprob: -13.428725242614746
    9. '	row' → logprob: -13.678725242614746
    10. 'position' → logprob: -14.303725242614746

Token 649: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.058547791093587875
    2. ' in' → logprob: -4.8085479736328125
    3. '       ' → logprob: -4.9335479736328125
    4. ' ,' → logprob: -5.0585479736328125
    5. ' (' → logprob: -5.1835479736328125
    6. '```' → logprob: -5.3085479736328125
    7. ':' → logprob: -5.5585479736328125
    8. '=' → logprob: -5.6835479736328125
    9. ' =' → logprob: -5.6835479736328125
    10. ',row' → logprob: -6.0585479736328125

Token 650: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06756184995174408
    2. '4' → logprob: -3.1925618648529053
    3. ' ' → logprob: -3.8175618648529053
    4. ')' → logprob: -6.817561626434326
    5. '   ' → logprob: -8.067562103271484
    6. ',' → logprob: -8.442562103271484
    7. 'range' → logprob: -8.442562103271484
    8. ' ,' → logprob: -9.317562103271484
    9. '<|end|>' → logprob: -9.442562103271484
    10. ' range' → logprob: -9.692562103271484

Token 651: ' to' (ID: 316)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.06257198750972748
    2. '...' → logprob: -2.9375720024108887
    3. ',' → logprob: -5.562572002410889
    4. ')' → logprob: -6.812572002410889
    5. ' to' → logprob: -7.812572002410889
    6. '<|end|>' → logprob: -8.06257152557373
    7. '+' → logprob: -8.18757152557373
    8. '.' → logprob: -8.43757152557373
    9. '```' → logprob: -8.56257152557373
    10. '   ' → logprob: -8.56257152557373

Token 652: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04888062924146652
    2. '4' → logprob: -3.0488805770874023
    3. ' ' → logprob: -8.173880577087402
    4. '   ' → logprob: -12.548880577087402
    5. '
' → logprob: -13.048880577087402
    6. '1' → logprob: -13.298880577087402
    7. '```' → logprob: -13.673880577087402
    8. '5' → logprob: -14.361380577087402
    9. '  ' → logprob: -15.111380577087402
    10. ')' → logprob: -15.298880577087402

Token 653: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011059731245040894
    2. '4' → logprob: -4.511059761047363
    3. '1' → logprob: -12.636059761047363
    4. ' ' → logprob: -13.136059761047363
    5. '```' → logprob: -13.386059761047363
    6. '   ' → logprob: -14.011059761047363
    7. '5' → logprob: -14.698559761047363
    8. '0' → logprob: -14.698559761047363
    9. '
' → logprob: -14.948559761047363
    10. 's' → logprob: -15.323559761047363

Token 654: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4395616948604584
    2. '):
' → logprob: -2.314561605453491
    3. ',' → logprob: -2.439561605453491
    4. '):' → logprob: -2.439561605453491
    5. '   ' → logprob: -3.439561605453491
    6. ')' → logprob: -3.439561605453491
    7. '```' → logprob: -4.81456184387207
    8. ':' → logprob: -6.18956184387207
    9. '           ' → logprob: -6.31456184387207
    10. '),' → logprob: -6.31456184387207

Token 655: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046411797404289246
    2. '<|end|>' → logprob: -3.7964117527008057
    3. ',' → logprob: -4.546411991119385
    4. '   ' → logprob: -5.046411991119385
    5. ')' → logprob: -6.671411991119385
    6. '           ' → logprob: -7.171411991119385
    7. '<|end|>' → logprob: -7.296411991119385
    8. '        
' → logprob: -7.671411991119385
    9. '        ' → logprob: -7.671411991119385
    10. '[' → logprob: -8.046411514282227

Token 656: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05540788173675537
    2. '<|end|>' → logprob: -3.555408000946045
    3. ',' → logprob: -4.430408000946045
    4. '   ' → logprob: -5.555408000946045
    5. ')' → logprob: -5.805408000946045
    6. '           ' → logprob: -6.930408000946045
    7. '<|end|>' → logprob: -6.930408000946045
    8. '        
' → logprob: -7.180408000946045
    9. '#' (adapté à ' #') → logprob: -7.430408000946045
    10. '```' → logprob: -7.680408000946045

Token 657: ' nodes' (ID: 15749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045402709394693375
    2. '#' → logprob: -4.295402526855469
    3. ',' → logprob: -5.295402526855469
    4. '   ' → logprob: -5.420402526855469
    5. '        
' → logprob: -5.420402526855469
    6. '```' → logprob: -5.545402526855469
    7. '           ' → logprob: -5.920402526855469
    8. '<|end|>' → logprob: -6.420402526855469
    9. '
' → logprob: -6.545402526855469
    10. '        ' → logprob: -6.795402526855469

Token 658: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36447492241859436
    2. '```' → logprob: -2.2394750118255615
    3. ':' → logprob: -3.2394750118255615
    4. '   ' → logprob: -3.4894750118255615
    5. ',' → logprob: -3.4894750118255615
    6. '       ' → logprob: -3.6144750118255615
    7. '=' → logprob: -4.114474773406982
    8. ')' → logprob: -4.239474773406982
    9. '_' → logprob: -4.489474773406982
    10. '<|end|>' → logprob: -5.239474773406982

Token 659: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7624561190605164
    2. '(' → logprob: -1.6374561786651611
    3. ' (' → logprob: -1.8874561786651611
    4. ',' → logprob: -2.762456178665161
    5. '        ' → logprob: -3.137456178665161
    6. '           ' → logprob: -4.387455940246582
    7. ':' → logprob: -4.637455940246582
    8. '(row' → logprob: -4.637455940246582
    9. '[' → logprob: -4.762455940246582
    10. '<|end|>' → logprob: -4.887455940246582

Token 660: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3095238506793976
    2. '(' → logprob: -2.434523820877075
    3. '        ' → logprob: -2.559523820877075
    4. ' (' → logprob: -3.309523820877075
    5. '[' → logprob: -4.559524059295654
    6. ',' → logprob: -4.559524059295654
    7. '           ' → logprob: -4.934524059295654
    8. '	' → logprob: -5.434524059295654
    9. '	       ' → logprob: -5.934524059295654
    10. ' ' → logprob: -6.059524059295654

Token 661: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5156327486038208
    2. ' (' → logprob: -2.2656326293945312
    3. '(' → logprob: -2.3906326293945312
    4. '   ' → logprob: -3.6406326293945312
    5. ''' → logprob: -3.8906326293945312
    6. '"' → logprob: -3.8906326293945312
    7. '           ' → logprob: -4.140632629394531
    8. '[' → logprob: -4.140632629394531
    9. '        ' → logprob: -4.140632629394531
    10. '`' → logprob: -4.265632629394531

Token 662: ' intersection' (ID: 42002)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3135432302951813
    2. '(inter' → logprob: -2.0635433197021484
    3. '('' → logprob: -2.6885433197021484
    4. ' (' → logprob: -4.313543319702148
    5. 'for' → logprob: -4.313543319702148
    6. '(row' → logprob: -4.938543319702148
    7. '[
' → logprob: -5.063543319702148
    8. '("' → logprob: -5.188543319702148
    9. '(i' → logprob: -5.563543319702148
    10. 'inter' → logprob: -5.813543319702148

Token 663: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21147480607032776
    2. '   ' → logprob: -3.086474895477295
    3. '```' → logprob: -3.211474895477295
    4. ')' → logprob: -3.461474895477295
    5. ',' → logprob: -3.836474895477295
    6. '<|end|>' → logprob: -4.586474895477295
    7. 's' → logprob: -4.711474895477295
    8. '       ' → logprob: -5.586474895477295
    9. ':' → logprob: -5.586474895477295
    10. '=' → logprob: -5.586474895477295

Token 664: 'r' (ID: 81)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0980247259140015
    2. 'row' → logprob: -1.3480247259140015
    3. '(row' → logprob: -1.5980247259140015
    4. ',row' → logprob: -2.598024845123291
    5. ' (' → logprob: -3.098024845123291
    6. 'r' → logprob: -3.223024845123291
    7. ' ,' → logprob: -4.348024845123291
    8. '(' → logprob: -4.973024845123291
    9. ')' → logprob: -5.348024845123291
    10. 'i' → logprob: -5.473024845123291

Token 665: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014197825454175472
    2. ')' → logprob: -4.764197826385498
    3. '_,' → logprob: -7.014197826385498
    4. ',_' → logprob: -7.014197826385498
    5. ' ,' → logprob: -7.514197826385498
    6. '_inter' → logprob: -7.514197826385498
    7. '```' → logprob: -7.889197826385498
    8. '_' → logprob: -7.889197826385498
    9. 'ow' → logprob: -8.26419734954834
    10. ',r' → logprob: -8.38919734954834

Token 666: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029889913275837898
    2. ',' → logprob: -3.7798898220062256
    3. ')_' → logprob: -6.279890060424805
    4. '),' → logprob: -6.529890060424805
    5. '):' → logprob: -6.904890060424805
    6. '):
' → logprob: -7.904890060424805
    7. '```' → logprob: -8.154890060424805
    8. '_' → logprob: -8.404890060424805
    9. ')=' → logprob: -8.654890060424805
    10. ')
' → logprob: -8.904890060424805

Token 667: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1088677644729614
    2. '       ' → logprob: -1.1088677644729614
    3. '<|end|>' → logprob: -2.358867645263672
    4. ',' → logprob: -2.733867645263672
    5. ':' → logprob: -2.858867645263672
    6. ')' → logprob: -3.483867645263672
    7. '```' → logprob: -3.733867645263672
    8. '   ' → logprob: -4.483867645263672
    9. ' =' → logprob: -4.983867645263672
    10. '\n' → logprob: -5.108867645263672

Token 668: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29287615418434143
    2. ',' → logprob: -2.2928762435913086
    3. ')' → logprob: -2.7928762435913086
    4. '   ' → logprob: -4.042876243591309
    5. '```' → logprob: -4.042876243591309
    6. '#' → logprob: -4.542876243591309
    7. '           ' → logprob: -4.542876243591309
    8. ':' → logprob: -5.042876243591309
    9. '<|end|>' → logprob: -5.542876243591309
    10. '
' → logprob: -5.667876243591309

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14381806552410126
    2. '<|end|>' → logprob: -2.3938181400299072
    3. '#' → logprob: -3.7688181400299072
    4. ')' → logprob: -5.268817901611328
    5. '```' → logprob: -5.518817901611328
    6. '        ' → logprob: -5.768817901611328
    7. ',' → logprob: -6.393817901611328
    8. '...' → logprob: -6.768817901611328
    9. '   ' → logprob: -6.893817901611328
    10. '           ' → logprob: -7.143817901611328

Token 670: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12321484088897705
    2. '#' (adapté à ' #') → logprob: -2.2482147216796875
    3. '```' → logprob: -4.9982147216796875
    4. '           ' → logprob: -6.6232147216796875
    5. '   ' → logprob: -6.8732147216796875
    6. ',' → logprob: -7.6232147216796875
    7. '        ' → logprob: -8.873214721679688
    8. ')' → logprob: -9.248214721679688
    9. '``' → logprob: -9.498214721679688
    10. ' ' → logprob: -9.998214721679688

Token 671: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02503650076687336
    2. '#' → logprob: -4.525036334991455
    3. '```' → logprob: -5.525036334991455
    4. '           ' → logprob: -6.025036334991455
    5. '   ' → logprob: -6.275036334991455
    6. '        ' → logprob: -6.650036334991455
    7. '        
' → logprob: -6.900036334991455
    8. ',' → logprob: -7.025036334991455
    9. '`' → logprob: -7.650036334991455
    10. ')' → logprob: -8.025036811828613

Token 672: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.05401899293065071
    2. ' each' → logprob: -3.679018974304199
    3. 'col' → logprob: -4.304018974304199
    4. 'c' → logprob: -4.554018974304199
    5. 'r' → logprob: -6.429018974304199
    6. 'row' → logprob: -7.679018974304199
    7. ' col' → logprob: -7.929018974304199
    8. '(r' → logprob: -8.4290189743042
    9. ' c' → logprob: -9.4290189743042
    10. '(' → logprob: -9.4290189743042

Token 673: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.5870653390884399
    2. 'row' → logprob: -1.21206533908844
    3. 'r' → logprob: -2.4620652198791504
    4. 'c' → logprob: -3.5870652198791504
    5. ' row' → logprob: -3.8370652198791504
    6. ' col' → logprob: -4.83706521987915
    7. ' c' → logprob: -6.71206521987915
    8. '```' → logprob: -7.08706521987915
    9. ' r' → logprob: -7.33706521987915
    10. 'column' → logprob: -7.46206521987915

Token 674: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10959988087415695
    2. ' (' → logprob: -2.7345998287200928
    3. ',r' → logprob: -3.9845998287200928
    4. '(r' → logprob: -4.984600067138672
    5. ' ,' → logprob: -5.109600067138672
    6. '+' → logprob: -6.359600067138672
    7. ',c' → logprob: -6.734600067138672
    8. '```' → logprob: -6.984600067138672
    9. '(' → logprob: -7.359600067138672
    10. '       ' → logprob: -7.484600067138672

Token 675: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5352556109428406
    2. 'c' → logprob: -0.9102556109428406
    3. '0' → logprob: -5.285255432128906
    4. ' c' → logprob: -5.535255432128906
    5. ' r' → logprob: -6.285255432128906
    6. ',' → logprob: -7.785255432128906
    7. '   ' → logprob: -7.910255432128906
    8. ' ' → logprob: -9.535255432128906
    9. '4' → logprob: -9.535255432128906
    10. 'range' → logprob: -9.660255432128906

Token 676: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1035730391740799
    2. '+' → logprob: -2.6035730838775635
    3. ')' → logprob: -4.228572845458984
    4. ',
' → logprob: -5.978572845458984
    5. '.' → logprob: -6.478572845458984
    6. '   ' → logprob: -6.603572845458984
    7. '```' → logprob: -6.853572845458984
    8. '..' → logprob: -7.353572845458984
    9. ' ,' → logprob: -7.478572845458984
    10. '
' → logprob: -7.478572845458984

Token 677: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8127021789550781
    2. '3' → logprob: -0.9377021789550781
    3. '1' → logprob: -2.187702178955078
    4. '4' → logprob: -3.937702178955078
    5. '.' → logprob: -4.437702178955078
    6. '0' → logprob: -5.062702178955078
    7. 'r' → logprob: -5.312702178955078
    8. ' N' → logprob: -5.312702178955078
    9. '(N' → logprob: -6.437702178955078
    10. ' ' → logprob: -6.562702178955078

Token 678: '-' (ID: 12)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5653552412986755
    2. ')' → logprob: -1.6903553009033203
    3. '):
' → logprob: -2.5653553009033203
    4. ',' → logprob: -2.8153553009033203
    5. '+' → logprob: -2.8153553009033203
    6. '
' → logprob: -4.56535530090332
    7. '),' → logprob: -4.81535530090332
    8. '-' → logprob: -5.06535530090332
    9. '#' → logprob: -5.19035530090332
    10. '   ' → logprob: -5.44035530090332

Token 679: '1' (ID: 16)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04688839614391327
    2. '1' → logprob: -3.2968883514404297
    3. '0' → logprob: -4.79688835144043
    4. '```' → logprob: -8.04688835144043
    5. '   ' → logprob: -9.29688835144043
    6. '``' → logprob: -9.67188835144043
    7. '       ' → logprob: -10.92188835144043
    8. ')' → logprob: -11.29688835144043
    9. ' ' → logprob: -11.54688835144043
    10. ' .' → logprob: -11.67188835144043

Token 680: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49666857719421387
    2. '       ' → logprob: -1.3716685771942139
    3. ')' → logprob: -2.871668577194214
    4. '```' → logprob: -4.246668815612793
    5. ',
' → logprob: -4.621668815612793
    6. '):
' → logprob: -4.621668815612793
    7. '#' → logprob: -4.621668815612793
    8. ')
' → logprob: -4.746668815612793
    9. '   ' → logprob: -4.871668815612793
    10. '
' → logprob: -4.871668815612793

Token 681: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12975412607192993
    2. '       ' → logprob: -2.254754066467285
    3. ',' → logprob: -4.629754066467285
    4. '```' → logprob: -5.504754066467285
    5. '   ' → logprob: -6.754754066467285
    6. ' #' → logprob: -8.004754066467285
    7. '[' → logprob: -8.254754066467285
    8. '           ' → logprob: -8.379754066467285
    9. '        
' → logprob: -8.629754066467285
    10. '``' → logprob: -9.254754066467285

Token 682: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.0017674085684120655
    2. '       ' → logprob: -6.376767635345459
    3. ' #' → logprob: -10.1267671585083
    4. '#
' → logprob: -11.8767671585083
    5. '   ' → logprob: -12.1267671585083
    6. '           ' → logprob: -13.0017671585083
    7. '```' → logprob: -13.5017671585083
    8. '        ' → logprob: -13.6267671585083
    9. ' ' → logprob: -13.6267671585083
    10. '[' → logprob: -13.7517671585083

Token 683: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.007979103364050388
    2. '       ' → logprob: -5.382978916168213
    3. '   ' → logprob: -6.257978916168213
    4. '```' → logprob: -7.507978916168213
    5. 'for' → logprob: -7.632978916168213
    6. '`' → logprob: -9.382979393005371
    7. 'For' → logprob: -9.632979393005371
    8. 'middle' → logprob: -10.257979393005371
    9. ' ' → logprob: -10.382979393005371
    10. ' #' → logprob: -10.382979393005371

Token 684: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.22846375405788422
    2. ' each' → logprob: -1.6034637689590454
    3. 'row' → logprob: -6.728463649749756
    4. ' row' → logprob: -7.228463649749756
    5. 'col' → logprob: -7.603463649749756
    6. 'r' → logprob: -8.728464126586914
    7. 'c' → logprob: -9.478464126586914
    8. '(row' → logprob: -9.603464126586914
    9. 'intersection' → logprob: -9.853464126586914
    10. ' col' → logprob: -9.978464126586914

Token 685: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.3657633662223816
    2. ' row' → logprob: -1.2407634258270264
    3. 'r' → logprob: -4.115763187408447
    4. ' r' → logprob: -7.490763187408447
    5. '(row' → logprob: -8.615763664245605
    6. ' (' → logprob: -9.990763664245605
    7. 'col' → logprob: -11.240763664245605
    8. '```' → logprob: -11.240763664245605
    9. ' ' → logprob: -11.365763664245605
    10. '(' → logprob: -12.240763664245605

Token 686: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04674506187438965
    2. '(r' → logprob: -3.1717450618743896
    3. '(' → logprob: -6.171745300292969
    4. ',' → logprob: -6.671745300292969
    5. '   ' → logprob: -9.046745300292969
    6. ' ,' → logprob: -9.546745300292969
    7. ',r' → logprob: -9.546745300292969
    8. '(row' → logprob: -10.046745300292969
    9. ' ' → logprob: -10.421745300292969
    10. ' =' → logprob: -11.046745300292969

Token 687: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1338992714881897
    2. ' ' → logprob: -2.133899211883545
    3. '4' → logprob: -5.883899211883545
    4. ' (' → logprob: -7.008899211883545
    5. '(' → logprob: -7.133899211883545
    6. ',' → logprob: -7.508899211883545
    7. '   ' → logprob: -7.633899211883545
    8. 'range' → logprob: -8.383899688720703
    9. ')' → logprob: -8.508899688720703
    10. '1' → logprob: -8.633899688720703

Token 688: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.60857093334198
    2. ' in' → logprob: -1.60857093334198
    3. '4' → logprob: -2.3585710525512695
    4. '+' → logprob: -2.6085710525512695
    5. '..' → logprob: -3.3585710525512695
    6. 'in' → logprob: -4.3585710525512695
    7. ')' → logprob: -4.3585710525512695
    8. ' ' → logprob: -5.2335710525512695
    9. '...' → logprob: -5.2335710525512695
    10. ' to' → logprob: -5.3585710525512695

Token 689: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.03630215674638748
    2. '3' → logprob: -3.411302089691162
    3. ' ' → logprob: -6.036302089691162
    4. '0' → logprob: -8.66130256652832
    5. '1' → logprob: -9.91130256652832
    6. '   ' → logprob: -10.53630256652832
    7. '  ' → logprob: -12.41130256652832
    8. '```' → logprob: -12.41130256652832
    9. 'range' → logprob: -13.53630256652832
    10. ')' → logprob: -13.78630256652832

Token 690: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.027545450255274773
    2. '3' → logprob: -3.65254545211792
    3. '1' → logprob: -6.90254545211792
    4. ' ' → logprob: -9.152544975280762
    5. '0' → logprob: -10.027544975280762
    6. '```' → logprob: -10.402544975280762
    7. '   ' → logprob: -10.527544975280762
    8. '5' → logprob: -11.402544975280762
    9. 's' → logprob: -12.152544975280762
    10. '`' → logprob: -12.402544975280762

Token 691: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0665111541748047
    2. '       ' → logprob: -1.3165111541748047
    3. '):
' → logprob: -2.3165111541748047
    4. '```' → logprob: -2.3165111541748047
    5. '   ' → logprob: -3.1915111541748047
    6. ')' → logprob: -3.4415111541748047
    7. '           ' → logprob: -3.4415111541748047
    8. '
' → logprob: -3.8165111541748047
    9. ':
' → logprob: -4.066511154174805
    10. ')
' → logprob: -4.441511154174805

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16991610825061798
    2. '```' → logprob: -2.5449161529541016
    3. ',' → logprob: -3.6699161529541016
    4. '           ' → logprob: -4.169916152954102
    5. '        
' → logprob: -4.919916152954102
    6. ':' → logprob: -4.919916152954102
    7. '`' → logprob: -5.419916152954102
    8. '   ' → logprob: -5.669916152954102
    9. '#' → logprob: -5.669916152954102
    10. '[' → logprob: -6.169916152954102

Token 693: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.165191188454628
    2. ',' → logprob: -3.290191173553467
    3. '           ' → logprob: -3.540191173553467
    4. '#' (adapté à ' #') → logprob: -3.540191173553467
    5. '   ' → logprob: -4.665191173553467
    6. '```' → logprob: -4.665191173553467
    7. '        
' → logprob: -4.790191173553467
    8. '[' → logprob: -5.165191173553467
    9. ':' → logprob: -5.290191173553467
    10. '_' → logprob: -6.165191173553467

Token 694: ' nodes' (ID: 15749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5124565958976746
    2. '   ' → logprob: -1.0124566555023193
    3. '#' → logprob: -4.63745641708374
    4. 'tokens' → logprob: -5.13745641708374
    5. 's' → logprob: -5.38745641708374
    6. '[' → logprob: -5.88745641708374
    7. 'middle' → logprob: -6.26245641708374
    8. '	s' → logprob: -6.38745641708374
    9. '           ' → logprob: -6.63745641708374
    10. '<|end|>' → logprob: -6.76245641708374

Token 695: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8390674591064453
    2. '```' → logprob: -1.5890674591064453
    3. ' =' → logprob: -2.4640674591064453
    4. '=' → logprob: -2.7140674591064453
    5. '[
' → logprob: -3.3390674591064453
    6. '[' → logprob: -3.4640674591064453
    7. ' (' → logprob: -3.4640674591064453
    8. '       ' → logprob: -3.5890674591064453
    9. '   ' → logprob: -3.7140674591064453
    10. ' :' → logprob: -4.589067459106445

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7154675126075745
    2. '   ' → logprob: -0.9654675126075745
    3. '#' → logprob: -3.0904674530029297
    4. '(' → logprob: -3.5904674530029297
    5. '           ' → logprob: -4.09046745300293
    6. '```' → logprob: -4.96546745300293
    7. '[' → logprob: -5.34046745300293
    8. ' ' → logprob: -5.59046745300293
    9. ':' → logprob: -5.71546745300293
    10. '`' → logprob: -5.84046745300293

Token 697: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.052229881286621
    2. ' (' → logprob: -1.427229881286621
    3. ' =' → logprob: -2.302229881286621
    4. '       ' → logprob: -2.677229881286621
    5. '   ' → logprob: -3.302229881286621
    6. '[' → logprob: -3.302229881286621
    7. ' at' → logprob: -3.552229881286621
    8. ':' → logprob: -3.677229881286621
    9. '           ' → logprob: -4.052229881286621
    10. '=' → logprob: -4.427229881286621

Token 698: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2863372564315796
    2. '    ' → logprob: -2.411337375640869
    3. ' ' → logprob: -2.911337375640869
    4. '#' → logprob: -3.286337375640869
    5. '  ' → logprob: -3.786337375640869
    6. '`' → logprob: -4.036337375640869
    7. '"' → logprob: -5.161337375640869
    8. ''' → logprob: -5.286337375640869
    9. '
' → logprob: -5.911337375640869
    10. '```' → logprob: -5.911337375640869

Token 699: ' middle' (ID: 10006)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9288778901100159
    2. ' shelf' → logprob: -0.9288778901100159
    3. 'middle' (adapté à ' middle') → logprob: -1.678877830505371
    4. ' middle' → logprob: -4.178877830505371
    5. '   ' → logprob: -5.428877830505371
    6. 'mid' → logprob: -6.053877830505371
    7. ' ' → logprob: -7.678877830505371
    8. '  ' → logprob: -7.928877830505371
    9. 'midd' → logprob: -9.053877830505371
    10. '`s' → logprob: -9.303877830505371

Token 700: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10063567757606506
    2. '_' → logprob: -3.3506357669830322
    3. '   ' → logprob: -3.4756357669830322
    4. '        
' → logprob: -5.350635528564453
    5. ')' → logprob: -5.475635528564453
    6. '           ' → logprob: -5.600635528564453
    7. '```' → logprob: -5.975635528564453
    8. '
' → logprob: -6.100635528564453
    9. ' =' → logprob: -6.350635528564453
    10. '        ' → logprob: -6.850635528564453

Token 701: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001075918786227703
    2. '(r' → logprob: -7.376075744628906
    3. 'row' → logprob: -8.376075744628906
    4. ' r' → logprob: -9.126075744628906
    5. '(row' → logprob: -10.376075744628906
    6. ' (' → logprob: -11.126075744628906
    7. ',' → logprob: -11.251075744628906
    8. ',r' → logprob: -11.251075744628906
    9. '   ' → logprob: -11.376075744628906
    10. '[r' → logprob: -12.001075744628906

Token 702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030398383736610413
    2. ',c' → logprob: -3.530398368835449
    3. ',col' → logprob: -8.03039836883545
    4. ' ,' → logprob: -8.65539836883545
    5. ',column' → logprob: -9.90539836883545
    6. ',row' → logprob: -10.78039836883545
    7. '   ' → logprob: -11.28039836883545
    8. ',b' → logprob: -12.03039836883545
    9. ',r' → logprob: -12.28039836883545
    10. ',n' → logprob: -12.28039836883545

Token 703: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43790948390960693
    2. 'col' → logprob: -1.312909483909607
    3. ' col' → logprob: -2.9379096031188965
    4. ' c' → logprob: -3.4379096031188965
    5. '   ' → logprob: -8.437909126281738
    6. ' ' → logprob: -9.312909126281738
    7. '    ' → logprob: -10.562909126281738
    8. 'cols' → logprob: -11.062909126281738
    9. '  ' → logprob: -11.187909126281738
    10. 'colm' → logprob: -11.312909126281738

Token 704: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001145218382589519
    2. ' +' → logprob: -6.876145362854004
    3. ')' → logprob: -9.626145362854004
    4. ')+' → logprob: -10.501145362854004
    5. '```' → logprob: -11.876145362854004
    6. ',' → logprob: -12.126145362854004
    7. '   ' → logprob: -12.751145362854004
    8. '+)' → logprob: -14.001145362854004
    9. ' ' → logprob: -14.626145362854004
    10. '  ' → logprob: -14.626145362854004

Token 705: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.37501335144043
    3. '   ' → logprob: -13.87501335144043
    4. '.' → logprob: -14.75001335144043
    5. '           ' → logprob: -16.12501335144043
    6. '```' → logprob: -16.62501335144043
    7. '  ' → logprob: -17.25001335144043
    8. '     ' → logprob: -17.37501335144043
    9. '    ' → logprob: -17.50001335144043
    10. '05' → logprob: -18.12501335144043

Token 706: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -14.875
    3. '```' → logprob: -17.625
    4. ' .' → logprob: -17.875
    5. '   ' → logprob: -18.75
    6. '5' → logprob: -19.0
    7. '​.' → logprob: -19.375
    8. ').' → logprob: -19.375
    9. '0' → logprob: -20.0
    10. '.)' → logprob: -20.0

Token 707: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.875001907348633
    3. '```' → logprob: -14.375001907348633
    4. '`' → logprob: -16.500001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '.' → logprob: -16.625001907348633
    7. '0' → logprob: -17.125001907348633
    8. ''' → logprob: -17.125001907348633
    9. '５' → logprob: -17.375001907348633
    10. ' five' → logprob: -17.625001907348633

Token 708: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028529210248962045
    2. ')
' → logprob: -8.500285148620605
    3. '       ' → logprob: -10.625285148620605
    4. '   ' → logprob: -11.125285148620605
    5. ')`' → logprob: -11.750285148620605
    6. '```' → logprob: -11.750285148620605
    7. '),' → logprob: -12.375285148620605
    8. ' )' → logprob: -12.375285148620605
    9. '`)' → logprob: -12.875285148620605
    10. '):' → logprob: -13.000285148620605

Token 709: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049639586359262466
    2. '```' → logprob: -3.6746397018432617
    3. '        
' → logprob: -4.299639701843262
    4. '
' → logprob: -5.549639701843262
    5. '   ' → logprob: -6.174639701843262
    6. '`' → logprob: -7.549639701843262
    7. '        

' → logprob: -8.174639701843262
    8. '        ' → logprob: -8.299639701843262
    9. 'def' → logprob: -8.299639701843262
    10. '        
        
' → logprob: -8.299639701843262

Token 710: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19979599118232727
    2. '        
' → logprob: -2.449795961380005
    3. '   ' → logprob: -3.074795961380005
    4. '
' → logprob: -3.949795961380005
    5. 'import' → logprob: -4.699796199798584
    6. '    
' → logprob: -5.074796199798584
    7. 'from' → logprob: -5.199796199798584
    8. '```' → logprob: -6.574796199798584
    9. '        
        
' → logprob: -6.949796199798584
    10. '        ' → logprob: -7.074796199798584

Token 711: ' Moves' (ID: 115685)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20194533467292786
    2. '       ' → logprob: -2.0769453048706055
    3. 'dist' → logprob: -4.2019453048706055
    4. 'INF' → logprob: -4.4519453048706055
    5. '   ' → logprob: -5.0769453048706055
    6. 'from' → logprob: -5.2019453048706055
    7. 'def' → logprob: -5.5769453048706055
    8. '#' → logprob: -5.5769453048706055
    9. 'visited' → logprob: -5.9519453048706055
    10. 'distance' → logprob: -6.2019453048706055

Token 712: ' allowed' (ID: 9279)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5880894660949707
    2. '   ' → logprob: -1.4630894660949707
    3. '       ' → logprob: -2.2130894660949707
    4. '=' → logprob: -3.2130894660949707
    5. '#' → logprob: -3.7130894660949707
    6. ' on' → logprob: -4.963089466094971
    7. '```' → logprob: -4.963089466094971
    8. 'from' → logprob: -5.588089466094971
    9. '
' → logprob: -5.838089466094971
    10. 'for' → logprob: -6.088089466094971

Token 713: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6140644550323486
    2. '=' → logprob: -1.8640644550323486
    3. ':
' → logprob: -2.1140644550323486
    4. ':' → logprob: -2.3640644550323486
    5. ' are' → logprob: -3.6140644550323486
    6. ' on' → logprob: -3.7390644550323486
    7. '   ' → logprob: -4.4890642166137695
    8. '```' → logprob: -4.7390642166137695
    9. '#' → logprob: -5.6140642166137695
    10. '       ' → logprob: -5.7390642166137695

Token 714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03624594211578369
    2. '#' → logprob: -3.411245822906494
    3. '   ' → logprob: -6.286245822906494
    4. ' #' → logprob: -8.161246299743652
    5. '           ' → logprob: -8.411246299743652
    6. '```' → logprob: -9.786246299743652
    7. '        ' → logprob: -10.786246299743652
    8. ' (' → logprob: -11.036246299743652
    9. '#
' → logprob: -11.286246299743652
    10. '        
' → logprob: -11.286246299743652

Token 715: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.31728795170783997
    2. '       ' → logprob: -1.3172879219055176
    3. ' #' → logprob: -6.192287921905518
    4. '   ' → logprob: -6.317287921905518
    5. '#
' → logprob: -10.442288398742676
    6. '[
' → logprob: -10.692288398742676
    7. '           ' → logprob: -10.942288398742676
    8. '-' → logprob: -11.192288398742676
    9. '`' → logprob: -11.317288398742676
    10. '```' → logprob: -11.317288398742676

Token 716: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0026242893654853106
    2. '       ' → logprob: -7.12762451171875
    3. '   ' → logprob: -7.25262451171875
    4. '-' → logprob: -7.25262451171875
    5. ' #' → logprob: -8.25262451171875
    6. 'from' → logprob: -9.37762451171875
    7. '
' → logprob: -11.62762451171875
    8. '#
' → logprob: -12.25262451171875
    9. '"' → logprob: -12.37762451171875
    10. ' -' → logprob: -12.50262451171875

Token 717: ' intersection' (ID: 42002)
  Prédit: 'Horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Horizontal' → logprob: -1.175248146057129
    2. ' horizontal' → logprob: -1.550248146057129
    3. 'horizontal' → logprob: -2.175248146057129
    4. ' (' → logprob: -2.550248146057129
    5. '-' → logprob: -2.675248146057129
    6. '#' → logprob: -2.800248146057129
    7. 'from' → logprob: -3.425248146057129
    8. ' Horizontal' → logprob: -3.425248146057129
    9. '(' → logprob: -4.175248146057129
    10. 'intersection' → logprob: -4.425248146057129

Token 718: '(r' (ID: 4729)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.48026394844055176
    2. ' (' → logprob: -1.3552639484405518
    3. ' ->' → logprob: -2.6052639484405518
    4. '(r' → logprob: -4.605263710021973
    5. ' ' → logprob: -4.730263710021973
    6. '   ' → logprob: -5.105263710021973
    7. ',' → logprob: -5.105263710021973
    8. ' at' → logprob: -5.230263710021973
    9. 'to' → logprob: -5.605263710021973
    10. ' from' → logprob: -6.105263710021973

Token 719: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002675418509170413
    2. ',c' → logprob: -6.502675533294678
    3. ',r' → logprob: -7.752675533294678
    4. ' ,' → logprob: -7.877675533294678
    5. '+' → logprob: -8.62767505645752
    6. '   ' → logprob: -9.00267505645752
    7. ',
' → logprob: -10.75267505645752
    8. ')' → logprob: -12.12767505645752
    9. ' +' → logprob: -12.37767505645752
    10. '	' → logprob: -12.75267505645752

Token 720: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3851549029350281
    2. ')' → logprob: -1.2601549625396729
    3. ',r' → logprob: -4.260154724121094
    4. ' to' → logprob: -5.010154724121094
    5. ' ->' → logprob: -5.760154724121094
    6. '   ' → logprob: -6.135154724121094
    7. ')->' → logprob: -6.385154724121094
    8. ' ,' → logprob: -6.510154724121094
    9. '+' → logprob: -6.885154724121094
    10. '-' → logprob: -7.010154724121094

Token 721: ' <' (ID: 464)
  Prédit: ' ->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.03979016840457916
    2. ',' → logprob: -4.789790153503418
    3. ' to' → logprob: -4.789790153503418
    4. '->' → logprob: -5.039790153503418
    5. '-' → logprob: -5.789790153503418
    6. ')' → logprob: -5.914790153503418
    7. '   ' → logprob: -6.164790153503418
    8. '       ' → logprob: -6.789790153503418
    9. ' -->' → logprob: -6.789790153503418
    10. '(r' → logprob: -7.039790153503418

Token 722: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.0160920862108469
    2. ' ->' → logprob: -4.641092300415039
    3. '-->' → logprob: -5.641092300415039
    4. '-' → logprob: -6.391092300415039
    5. '=>' → logprob: -7.641092300415039
    6. '--' → logprob: -8.141092300415039
    7. '==' → logprob: -9.516092300415039
    8. ' -' → logprob: -9.766092300415039
    9. '→' → logprob: -9.766092300415039
    10. ' -->' → logprob: -10.516092300415039

Token 723: ' middle' (ID: 10006)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.900407075881958
    2. 'middle' → logprob: -1.025407075881958
    3. ' middle' → logprob: -2.150407075881958
    4. ' intersection' → logprob: -2.275407075881958
    5. ' (' → logprob: -4.900406837463379
    6. '(r' → logprob: -5.400406837463379
    7. '(inter' → logprob: -6.525406837463379
    8. 'inter' → logprob: -7.025406837463379
    9. '(' → logprob: -7.900406837463379
    10. ' ' → logprob: -8.025406837463379

Token 724: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.03336119279265404
    2. ' (' → logprob: -3.6583611965179443
    3. '(' → logprob: -5.408360958099365
    4. '```' → logprob: -6.283360958099365
    5. '       ' → logprob: -8.283361434936523
    6. ')' → logprob: -8.783361434936523
    7. ',' → logprob: -9.533361434936523
    8. '`' → logprob: -10.033361434936523
    9. ',r' → logprob: -10.658361434936523
    10. '_' → logprob: -10.783361434936523

Token 725: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5249190330505371
    2. ',c' → logprob: -0.8999190330505371
    3. ',r' → logprob: -7.024919033050537
    4. ',(' → logprob: -7.274919033050537
    5. ' ,' → logprob: -9.774919509887695
    6. ',next' → logprob: -10.774919509887695
    7. '   ' → logprob: -11.274919509887695
    8. ',s' → logprob: -11.649919509887695
    9. ',b' → logprob: -11.899919509887695
    10. '(c' → logprob: -12.024919509887695

Token 726: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0031879288144409657
    2. ' c' → logprob: -5.753188133239746
    3. ')c' → logprob: -11.878188133239746
    4. ',c' → logprob: -13.753188133239746
    5. ',' → logprob: -14.628188133239746
    6. ')' → logprob: -15.003188133239746
    7. ' ' → logprob: -15.378188133239746
    8. '`' → logprob: -15.378188133239746
    9. '	c' → logprob: -15.753188133239746
    10. ' ' → logprob: -15.878188133239746

Token 727: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005784121458418667
    2. ')' → logprob: -7.8755784034729
    3. '+)' → logprob: -9.250578880310059
    4. ' +' → logprob: -9.500578880310059
    5. ')+' → logprob: -11.875578880310059
    6. '.' → logprob: -12.375578880310059
    7. '```' → logprob: -12.375578880310059
    8. '   ' → logprob: -13.000578880310059
    9. '+')' → logprob: -13.375578880310059
    10. '+
' → logprob: -13.375578880310059

Token 728: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.791440293658525e-05
    2. ' ' → logprob: -9.625078201293945
    3. '.' → logprob: -11.750078201293945
    4. '   ' → logprob: -13.250078201293945
    5. ')' → logprob: -14.125078201293945
    6. '1' → logprob: -14.125078201293945
    7. '  ' → logprob: -15.750078201293945
    8. '```' → logprob: -15.750078201293945
    9. '     ' → logprob: -16.125078201293945
    10. '    ' → logprob: -16.500078201293945

Token 729: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0021662020590156317
    2. '0' → logprob: -6.627166271209717
    3. '5' → logprob: -7.377166271209717
    4. ')' → logprob: -8.502165794372559
    5. '```' → logprob: -12.252165794372559
    6. '   ' → logprob: -12.752165794372559
    7. ' .' → logprob: -13.502165794372559
    8. ' ' → logprob: -14.002165794372559
    9. '1' → logprob: -14.752165794372559
    10. '.)' → logprob: -15.502165794372559

Token 730: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.625007629394531
    3. ')' → logprob: -13.375007629394531
    4. '```' → logprob: -13.375007629394531
    5. '0' → logprob: -14.500007629394531
    6. '   ' → logprob: -14.625007629394531
    7. '
' → logprob: -16.00000762939453
    8. '  ' → logprob: -17.00000762939453
    9. '`' → logprob: -17.00000762939453
    10. '.' → logprob: -17.50000762939453

Token 731: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00445456663146615
    2. ')
' → logprob: -5.629454612731934
    3. '),' → logprob: -8.129454612731934
    4. '       ' → logprob: -8.254454612731934
    5. '   ' → logprob: -8.879454612731934
    6. ' )' → logprob: -9.754454612731934
    7. ')\' → logprob: -11.129454612731934
    8. '")' → logprob: -11.629454612731934
    9. '     ' → logprob: -11.754454612731934
    10. '')' → logprob: -11.879454612731934

Token 732: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1357828825712204
    2. ')' → logprob: -3.2607829570770264
    3. ' =' → logprob: -3.8857829570770264
    4. '<|end|>' → logprob: -4.260782718658447
    5. '   ' → logprob: -4.385782718658447
    6. ' (' → logprob: -4.760782718658447
    7. ',' → logprob: -5.010782718658447
    8. ':' → logprob: -5.260782718658447
    9. '           ' → logprob: -5.760782718658447
    10. '        ' → logprob: -5.760782718658447

Token 733: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.657612681388855
    2. ' =' → logprob: -0.907612681388855
    3. ' ' → logprob: -3.6576128005981445
    4. '0' → logprob: -3.6576128005981445
    5. '1' → logprob: -3.7826128005981445
    6. '```' → logprob: -6.0326128005981445
    7. '`' → logprob: -7.1576128005981445
    8. '   ' → logprob: -7.7826128005981445
    9. '``' → logprob: -9.657612800598145
    10. ' `' → logprob: -9.782612800598145

Token 734: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4881879400927573e-05
    2. '.' → logprob: -10.625035285949707
    3. ' ' → logprob: -11.875035285949707
    4. '=' → logprob: -13.125035285949707
    5. '1' → logprob: -13.500035285949707
    6. ' =' → logprob: -16.75003433227539
    7. '```' → logprob: -17.00003433227539
    8. '   ' → logprob: -17.87503433227539
    9. ' .' → logprob: -18.12503433227539
    10. '+' → logprob: -18.37503433227539

Token 735: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.049755782238208e-05
    2. ')' → logprob: -11.12505054473877
    3. ' ' → logprob: -11.50005054473877
    4. '   ' → logprob: -12.37505054473877
    5. '    ' → logprob: -12.37505054473877
    6. '0' → logprob: -12.50005054473877
    7. ' .' → logprob: -12.87505054473877
    8. '.
' → logprob: -13.37505054473877
    9. '  ' → logprob: -14.12505054473877
    10. ',' → logprob: -14.25005054473877

Token 736: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.000000953674316
    3. '```' → logprob: -16.0
    4. ' ' → logprob: -17.25
    5. '0' → logprob: -17.375
    6. '   ' → logprob: -17.75
    7. '`' → logprob: -17.875
    8. ')' → logprob: -18.0
    9. ''' → logprob: -18.25
    10. '=' → logprob: -18.75

Token 737: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014432617463171482
    2. ',' → logprob: -5.264432430267334
    3. '   ' → logprob: -5.639432430267334
    4. '
' → logprob: -6.514432430267334
    5. '           ' → logprob: -6.889432430267334
    6. ',
' → logprob: -6.889432430267334
    7. '```' → logprob: -6.889432430267334
    8. '        
' → logprob: -8.014432907104492
    9. ')' → logprob: -8.889432907104492
    10. '        ' → logprob: -9.264432907104492

Token 738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10619213432073593
    2. '#' → logprob: -2.356192111968994
    3. '```' → logprob: -5.731192111968994
    4. '   ' → logprob: -6.606192111968994
    5. ',' → logprob: -7.856192111968994
    6. '           ' → logprob: -8.231192588806152
    7. '        ' → logprob: -8.481192588806152
    8. '`' → logprob: -8.856192588806152
    9. ')' → logprob: -8.981192588806152
    10. '``' → logprob: -9.731192588806152

Token 739: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.08188745379447937
    2. '       ' → logprob: -2.5818874835968018
    3. '   ' → logprob: -7.206887245178223
    4. '```' → logprob: -7.206887245178223
    5. '-' → logprob: -7.831887245178223
    6. ',' → logprob: -8.081887245178223
    7. ' #' → logprob: -8.206887245178223
    8. '#
' → logprob: -9.206887245178223
    9. ' ' → logprob: -9.456887245178223
    10. '           ' → logprob: -9.581887245178223

Token 740: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20649424195289612
    2. '       ' → logprob: -1.7064942121505737
    3. '```' → logprob: -6.206494331359863
    4. '   ' → logprob: -6.831494331359863
    5. ',' → logprob: -7.206494331359863
    6. '-' → logprob: -8.081494331359863
    7. ' #' → logprob: -8.706494331359863
    8. '<|end|>' → logprob: -8.831494331359863
    9. '           ' → logprob: -8.956494331359863
    10. '        ' → logprob: -9.331494331359863

Token 741: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.05251822620630264
    2. 'middle' → logprob: -3.052518129348755
    3. ' intersection' → logprob: -5.802518367767334
    4. ' middle' → logprob: -7.177518367767334
    5. '   ' → logprob: -10.302517890930176
    6. 'horizontal' → logprob: -10.552517890930176
    7. 'inter' → logprob: -10.927517890930176
    8. 'vertical' → logprob: -11.427517890930176
    9. ' ' → logprob: -11.552517890930176
    10. '```' → logprob: -12.052517890930176

Token 742: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0049194470047950745
    2. ' (' → logprob: -5.504919528961182
    3. '(' → logprob: -7.129919528961182
    4. '   ' → logprob: -10.504919052124023
    5. ',r' → logprob: -12.629919052124023
    6. 'r' → logprob: -13.129919052124023
    7. ',' → logprob: -13.254919052124023
    8. '(row' → logprob: -13.504919052124023
    9. '```' → logprob: -13.754919052124023
    10. '`' → logprob: -13.879919052124023

Token 743: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5880167484283447
    2. ',c' → logprob: -0.8380167484283447
    3. ',r' → logprob: -4.463016510009766
    4. ',(' → logprob: -8.713016510009766
    5. ' ,' → logprob: -9.963016510009766
    6. '   ' → logprob: -9.963016510009766
    7. ',n' → logprob: -10.088016510009766
    8. ',s' → logprob: -10.713016510009766
    9. '`,`' → logprob: -11.088016510009766
    10. ',next' → logprob: -11.088016510009766

Token 744: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06057434156537056
    2. ',' → logprob: -2.9355742931365967
    3. '+' → logprob: -5.685574531555176
    4. ',r' → logprob: -7.060574531555176
    5. '   ' → logprob: -7.435574531555176
    6. ' ,' → logprob: -7.935574531555176
    7. ')<' → logprob: -9.435574531555176
    8. ',c' → logprob: -9.935574531555176
    9. ' +' → logprob: -9.935574531555176
    10. ' )' → logprob: -10.060574531555176

Token 745: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07045195996761322
    2. '<' → logprob: -2.9454519748687744
    3. '(r' → logprob: -4.820451736450195
    4. '+' → logprob: -6.195451736450195
    5. '   ' → logprob: -6.570451736450195
    6. ' (' → logprob: -7.195451736450195
    7. ' ' → logprob: -7.570451736450195
    8. '```' → logprob: -7.820451736450195
    9. ',r' → logprob: -7.945451736450195
    10. ',' → logprob: -8.320451736450195

Token 746: '->' (ID: 609)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0100696086883545
    2. '->' → logprob: -1.2600696086883545
    3. '<' → logprob: -1.6350696086883545
    4. '+' → logprob: -2.0100696086883545
    5. '-' → logprob: -4.260069847106934
    6. '0' → logprob: -6.385069847106934
    7. ' <' → logprob: -6.760069847106934
    8. ')' → logprob: -6.760069847106934
    9. ' ->' → logprob: -7.010069847106934
    10. '<-' → logprob: -7.635069847106934

Token 747: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.3611547350883484
    2. 'middle' → logprob: -1.7361547946929932
    3. ' intersection' → logprob: -2.486154794692993
    4. ' middle' → logprob: -3.236154794692993
    5. 'inter' → logprob: -5.736154556274414
    6. '(r' → logprob: -7.361154556274414
    7. '(inter' → logprob: -8.236154556274414
    8. ' (' → logprob: -9.611154556274414
    9. 'r' → logprob: -9.986154556274414
    10. ' ' → logprob: -10.111154556274414

Token 748: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.04066959768533707
    2. ' (' → logprob: -3.2906696796417236
    3. ',' → logprob: -6.7906694412231445
    4. '+' → logprob: -7.6656694412231445
    5. '```' → logprob: -8.290669441223145
    6. '   ' → logprob: -8.415669441223145
    7. '(' → logprob: -8.665669441223145
    8. ',r' → logprob: -9.165669441223145
    9. 'r' → logprob: -9.790669441223145
    10. '       ' → logprob: -9.790669441223145

Token 749: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.387522429227829
    2. ',' → logprob: -1.1375224590301514
    3. '   ' → logprob: -7.887522220611572
    4. ',(' → logprob: -9.38752269744873
    5. ',r' → logprob: -9.51252269744873
    6. ' ,' → logprob: -9.63752269744873
    7. ' ' → logprob: -11.51252269744873
    8. ',next' → logprob: -12.13752269744873
    9. ')' → logprob: -12.38752269744873
    10. '       ' → logprob: -12.88752269744873

Token 750: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.3199920178740285e-05
    2. ' +' → logprob: -11.250022888183594
    3. ')+' → logprob: -12.125022888183594
    4. ')' → logprob: -12.375022888183594
    5. '+)' → logprob: -15.500022888183594
    6. '   ' → logprob: -15.750022888183594
    7. '1' → logprob: -16.125022888183594
    8. '+
' → logprob: -16.875022888183594
    9. '()+' → logprob: -18.000022888183594
    10. '```' → logprob: -18.125022888183594

Token 751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.816591434879228e-05
    2. '+' → logprob: -9.37508773803711
    3. ')' → logprob: -13.50008773803711
    4. '0' → logprob: -13.87508773803711
    5. '```' → logprob: -14.25008773803711
    6. ' ' → logprob: -16.12508773803711
    7. '.' → logprob: -16.75008773803711
    8. ' +' → logprob: -17.50008773803711
    9. '+)' → logprob: -17.62508773803711
    10. '   ' → logprob: -17.62508773803711

Token 752: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000830355507787317
    2. '0' → logprob: -7.750830173492432
    3. '```' → logprob: -8.75083065032959
    4. '   ' → logprob: -10.50083065032959
    5. ' )' → logprob: -10.50083065032959
    6. ')
' → logprob: -10.62583065032959
    7. '(r' → logprob: -10.87583065032959
    8. '1' → logprob: -11.00083065032959
    9. '       ' → logprob: -11.12583065032959
    10. '`)' → logprob: -11.50083065032959

Token 753: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4512360990047455
    2. ' (' → logprob: -2.3262360095977783
    3. '(cost' → logprob: -2.9512360095977783
    4. '(r' → logprob: -3.0762360095977783
    5. ' cost' → logprob: -3.4512360095977783
    6. ')' → logprob: -3.4512360095977783
    7. '   ' → logprob: -4.076236248016357
    8. '(' → logprob: -4.576236248016357
    9. '        ' → logprob: -4.701236248016357
    10. '[' → logprob: -4.701236248016357

Token 754: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014596164226532
    2. ' ' → logprob: -1.7014596462249756
    3. '```' → logprob: -10.451459884643555
    4. '=' → logprob: -11.701459884643555
    5. ' =' → logprob: -12.451459884643555
    6. '`' → logprob: -12.826459884643555
    7. '0' → logprob: -13.951459884643555
    8. '+' → logprob: -14.701459884643555
    9. ' ' → logprob: -14.701459884643555
    10. ' +' → logprob: -15.076459884643555

Token 755: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -17.000001907348633
    4. '0' → logprob: -18.375001907348633
    5. '+' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.750001907348633
    7. '=' → logprob: -18.875001907348633
    8. '
' → logprob: -19.250001907348633
    9. '`' → logprob: -20.125001907348633
    10. '-' → logprob: -20.500001907348633

Token 756: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06302326917648315
    2. ')' → logprob: -3.813023328781128
    3. ',' → logprob: -4.563023090362549
    4. '<|end|>' → logprob: -5.188023090362549
    5. '```' → logprob: -5.188023090362549
    6. '   ' → logprob: -5.438023090362549
    7. '        
' → logprob: -5.688023090362549
    8. '
' → logprob: -5.938023090362549
    9. '#' → logprob: -6.313023090362549
    10. '        ' → logprob: -6.563023090362549

Token 757: 'only' (ID: 7393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01154912356287241
    2. ')
' → logprob: -5.13654899597168
    3. ' )' → logprob: -5.88654899597168
    4. '
' → logprob: -7.76154899597168
    5. ',' → logprob: -8.13654899597168
    6. '#' → logprob: -8.13654899597168
    7. '0' → logprob: -8.38654899597168
    8. '   ' → logprob: -8.51154899597168
    9. '```' → logprob: -8.51154899597168
    10. ' (' → logprob: -8.63654899597168

Token 758: ' forward' (ID: 6687)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7746092081069946
    2. ' forward' → logprob: -1.5246092081069946
    3. 'forward' → logprob: -2.024609088897705
    4. ' right' → logprob: -2.649609088897705
    5. 'right' → logprob: -3.149609088897705
    6. '->' → logprob: -3.899609088897705
    7. ' ->' → logprob: -4.649609088897705
    8. ' )' → logprob: -5.024609088897705
    9. '+' → logprob: -5.274609088897705
    10. 'r' → logprob: -5.524609088897705

Token 759: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023021509405225515
    2. ')
' → logprob: -7.377302169799805
    3. ' )' → logprob: -7.627302169799805
    4. '   ' → logprob: -8.252302169799805
    5. '       ' → logprob: -8.502302169799805
    6. ' on' → logprob: -8.752302169799805
    7. '(r' → logprob: -9.002302169799805
    8. ',' → logprob: -9.377302169799805
    9. '),' → logprob: -10.127302169799805
    10. ' for' → logprob: -10.252302169799805

Token 760: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5386682748794556
    2. '#' → logprob: -1.0386682748794556
    3. '```' → logprob: -3.538668155670166
    4. '   ' → logprob: -4.038668155670166
    5. ',' → logprob: -5.163668155670166
    6. ')' → logprob: -6.038668155670166
    7. '<|end|>' → logprob: -6.788668155670166
    8. '`' → logprob: -6.913668155670166
    9. '\' → logprob: -7.288668155670166
    10. '``' → logprob: -7.413668155670166

Token 761: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023866787552833557
    2. '#' (adapté à ' #') → logprob: -4.023866653442383
    3. '   ' → logprob: -6.148866653442383
    4. '           ' → logprob: -7.148866653442383
    5. ',' → logprob: -7.398866653442383
    6. ')' → logprob: -7.523866653442383
    7. '```' → logprob: -8.148866653442383
    8. '        
' → logprob: -8.398866653442383
    9. '        ' → logprob: -8.648866653442383
    10. ' ' → logprob: -8.898866653442383

Token 762: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24419955909252167
    2. '#' → logprob: -1.619199514389038
    3. '-' → logprob: -4.744199752807617
    4. '```' → logprob: -5.744199752807617
    5. '   ' → logprob: -6.244199752807617
    6. '           ' → logprob: -6.619199752807617
    7. ',' → logprob: -7.494199752807617
    8. ')' → logprob: -7.744199752807617
    9. '        ' → logprob: -8.244199752807617
    10. ' #' → logprob: -8.244199752807617

Token 763: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.3346668779850006
    2. ' intersection' → logprob: -1.5846668481826782
    3. ' middle' → logprob: -3.3346669673919678
    4. 'middle' → logprob: -3.3346669673919678
    5. 'vertical' → logprob: -5.459666728973389
    6. ' vertical' → logprob: -5.959666728973389
    7. '   ' → logprob: -7.584666728973389
    8. 'inter' → logprob: -8.084667205810547
    9. ' ' → logprob: -9.084667205810547
    10. 's' → logprob: -9.209667205810547

Token 764: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.004787884186953306
    2. '(' → logprob: -5.379787921905518
    3. ' (' → logprob: -8.87978744506836
    4. ',' → logprob: -11.50478744506836
    5. ',r' → logprob: -11.62978744506836
    6. '```' → logprob: -12.62978744506836
    7. '   ' → logprob: -12.87978744506836
    8. '(row' → logprob: -13.75478744506836
    9. '[r' → logprob: -14.25478744506836
    10. 'r' → logprob: -14.37978744506836

Token 765: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.4331827759742737
    2. ',' → logprob: -1.433182716369629
    3. ',r' → logprob: -2.183182716369629
    4. ',s' → logprob: -9.683182716369629
    5. ' ,' → logprob: -10.183182716369629
    6. '+' → logprob: -10.183182716369629
    7. '   ' → logprob: -10.308182716369629
    8. ',row' → logprob: -10.308182716369629
    9. ',n' → logprob: -10.933182716369629
    10. ',i' → logprob: -11.183182716369629

Token 766: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020200232043862343
    2. ',r' → logprob: -4.395200252532959
    3. ',' → logprob: -5.145200252532959
    4. '(r' → logprob: -7.020200252532959
    5. ')<' → logprob: -8.1451997756958
    6. '+' → logprob: -8.7701997756958
    7. '   ' → logprob: -8.8951997756958
    8. '```' → logprob: -9.2701997756958
    9. 'r' → logprob: -10.0201997756958
    10. ' <' → logprob: -10.1451997756958

Token 767: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.13226218521595
    2. '<' → logprob: -2.1322622299194336
    3. '(r' → logprob: -6.382262229919434
    4. '```' → logprob: -6.882262229919434
    5. ' !=' → logprob: -8.132262229919434
    6. '   ' → logprob: -8.257262229919434
    7. ' ==' → logprob: -8.632262229919434
    8. ')' → logprob: -8.882262229919434
    9. '+' → logprob: -9.007262229919434
    10. ' ' → logprob: -9.007262229919434

Token 768: '->' (ID: 609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08055787533521652
    2. '1' → logprob: -2.9555578231811523
    3. 'c' → logprob: -4.830557823181152
    4. '(r' → logprob: -5.455557823181152
    5. '_' → logprob: -5.955557823181152
    6. '(c' → logprob: -6.080557823181152
    7. 'r' → logprob: -6.330557823181152
    8. ' ' → logprob: -6.330557823181152
    9. '-' → logprob: -7.080557823181152
    10. '(' → logprob: -7.080557823181152

Token 769: ' intersection' (ID: 42002)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.24115735292434692
    2. 'intersection' → logprob: -1.7411572933197021
    3. ' middle' → logprob: -3.366157293319702
    4. ' intersection' → logprob: -5.491157531738281
    5. 'inter' → logprob: -9.741157531738281
    6. '   ' → logprob: -9.866157531738281
    7. '(m' → logprob: -9.991157531738281
    8. ' (' → logprob: -10.241157531738281
    9. ' ' → logprob: -10.741157531738281
    10. '(s' → logprob: -11.241157531738281

Token 770: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0007921205251477659
    2. '+' → logprob: -7.375792026519775
    3. ' (' → logprob: -9.250792503356934
    4. '(' → logprob: -10.125792503356934
    5. ',' → logprob: -11.500792503356934
    6. '   ' → logprob: -12.000792503356934
    7. ',r' → logprob: -12.375792503356934
    8. '```' → logprob: -12.625792503356934
    9. ' +' → logprob: -13.250792503356934
    10. ',(' → logprob: -13.750792503356934

Token 771: '+' (ID: 10)
  Prédit: ',r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.0955585241317749
    2. '+' → logprob: -3.2205586433410645
    3. ',c' → logprob: -3.3455586433410645
    4. ',' → logprob: -4.3455586433410645
    5. ',(' → logprob: -6.4705586433410645
    6. '(r' → logprob: -6.8455586433410645
    7. 'r' → logprob: -8.720558166503906
    8. '```' → logprob: -10.845558166503906
    9. ',row' → logprob: -10.845558166503906
    10. '+r' → logprob: -10.845558166503906

Token 772: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -15.125000953674316
    3. '+' → logprob: -15.625000953674316
    4. ',' → logprob: -15.750000953674316
    5. '   ' → logprob: -15.750000953674316
    6. ' ' → logprob: -16.000001907348633
    7. '
' → logprob: -16.125001907348633
    8. '```' → logprob: -16.375001907348633
    9. '``' → logprob: -18.500001907348633
    10. '0' → logprob: -18.625001907348633

Token 773: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.32283052802085876
    2. ',' → logprob: -1.9478305578231812
    3. ')' → logprob: -2.0728304386138916
    4. ',r' → logprob: -5.197830677032471
    5. '(c' → logprob: -7.322830677032471
    6. '   ' → logprob: -7.572830677032471
    7. ',(' → logprob: -7.947830677032471
    8. ')c' → logprob: -8.697830200195312
    9. ')
' → logprob: -9.822830200195312
    10. '(r' → logprob: -9.947830200195312

Token 774: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11370813101530075
    2. '+' → logprob: -2.238708019256592
    3. '   ' → logprob: -7.863708019256592
    4. ')+' → logprob: -8.11370849609375
    5. '+)' → logprob: -9.48870849609375
    6. '```' → logprob: -10.11370849609375
    7. ' +' → logprob: -10.23870849609375
    8. '`)' → logprob: -11.98870849609375
    9. '-' → logprob: -12.11370849609375
    10. ')
' → logprob: -12.23870849609375

Token 775: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.15881270170211792
    2. ' with' → logprob: -2.9088127613067627
    3. ' (' → logprob: -3.5338127613067627
    4. '   ' → logprob: -4.658812522888184
    5. '       ' → logprob: -4.783812522888184
    6. '(r' → logprob: -5.033812522888184
    7. '(cost' → logprob: -5.033812522888184
    8. 'cost' → logprob: -5.158812522888184
    9. '[r' → logprob: -5.408812522888184
    10. ')' → logprob: -5.408812522888184

Token 776: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931554675102234
    2. ' ' → logprob: -0.6931554675102234
    3. ' =' → logprob: -13.068155288696289
    4. '```' → logprob: -13.068155288696289
    5. '=' → logprob: -13.193155288696289
    6. '0' → logprob: -13.943155288696289
    7. ' +' → logprob: -14.943155288696289
    8. '+' → logprob: -15.318155288696289
    9. ' ' → logprob: -15.318155288696289
    10. '`' → logprob: -15.693155288696289

Token 777: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017024369444698095
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -16.2517032623291
    4. '```' → logprob: -17.2517032623291
    5. '
' → logprob: -17.3767032623291
    6. '0' → logprob: -17.6267032623291
    7. '+' → logprob: -18.6267032623291
    8. '=' → logprob: -19.0017032623291
    9. '`' → logprob: -20.0017032623291
    10. '           ' → logprob: -20.0017032623291

Token 778: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2388685792684555
    2. '   ' → logprob: -2.238868474960327
    3. ':' → logprob: -3.113868474960327
    4. '```' → logprob: -3.863868474960327
    5. '[' → logprob: -5.113868713378906
    6. '
' → logprob: -5.113868713378906
    7. ')' → logprob: -5.113868713378906
    8. ',' → logprob: -5.488868713378906
    9. '<|end|>' → logprob: -5.613868713378906
    10. '        
' → logprob: -6.363868713378906

Token 779: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06493563205003738
    2. 'c' → logprob: -3.1899356842041016
    3. ' r' → logprob: -3.9399356842041016
    4. ' c' → logprob: -6.689935684204102
    5. '   ' → logprob: -7.314935684204102
    6. '(r' → logprob: -8.939935684204102
    7. 'row' → logprob: -9.314935684204102
    8. '0' → logprob: -9.689935684204102
    9. ' ' → logprob: -11.439935684204102
    10. '(c' → logprob: -11.814935684204102

Token 780: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003834517439827323
    2. 'c' → logprob: -6.1288347244262695
    3. ' r' → logprob: -6.5038347244262695
    4. '(r' → logprob: -9.37883472442627
    5. '   ' → logprob: -10.75383472442627
    6. '0' → logprob: -10.75383472442627
    7. 'row' → logprob: -11.62883472442627
    8. ' c' → logprob: -11.75383472442627
    9. ' ' → logprob: -13.50383472442627
    10. '(c' → logprob: -13.87883472442627

Token 781: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6271467208862305
    2. ' <=' → logprob: -0.8771467208862305
    3. ' <' → logprob: -3.3771467208862305
    4. '<' → logprob: -5.1271467208862305
    5. '+' → logprob: -5.3771467208862305
    6. '<n' → logprob: -6.8771467208862305
    7. ',' → logprob: -7.1271467208862305
    8. '```' → logprob: -7.2521467208862305
    9. 'r' → logprob: -8.12714672088623
    10. '   ' → logprob: -8.25214672088623

Token 782: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00018375257786829025
    2. ' r' → logprob: -8.625184059143066
    3. '   ' → logprob: -13.250184059143066
    4. 'c' → logprob: -13.500184059143066
    5. 'row' → logprob: -14.500184059143066
    6. '(r' → logprob: -15.125184059143066
    7. '+' → logprob: -16.12518310546875
    8. '  ' → logprob: -17.25018310546875
    9. '```' → logprob: -17.50018310546875
    10. '+r' → logprob: -17.62518310546875

Token 783: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2879317104816437
    2. '<=' → logprob: -1.6629316806793213
    3. '<' → logprob: -2.9129316806793213
    4. ' <=' → logprob: -5.5379319190979
    5. ' +' → logprob: -7.6629319190979
    6. '<n' → logprob: -7.7879319190979
    7. '```' → logprob: -7.7879319190979
    8. ' <' → logprob: -7.9129319190979
    9. '<len' → logprob: -8.662931442260742
    10. 'r' → logprob: -10.162931442260742

Token 784: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02025245502591133
    2. '=' → logprob: -4.270252227783203
    3. '+' → logprob: -5.270252227783203
    4. '<=' → logprob: -7.895252227783203
    5. ' ' → logprob: -8.145252227783203
    6. '<' → logprob: -8.895252227783203
    7. '4' → logprob: -10.020252227783203
    8. 'r' → logprob: -11.395252227783203
    9. '```' → logprob: -11.520252227783203
    10. '   ' → logprob: -11.520252227783203

Token 785: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.48497238755226135
    2. '<=' → logprob: -1.109972357749939
    3. ' <' → logprob: -3.7349724769592285
    4. ' <=' → logprob: -4.2349724769592285
    5. '```' → logprob: -5.6099724769592285
    6. ' and' → logprob: -6.2349724769592285
    7. '<len' → logprob: -6.3599724769592285
    8. '<n' → logprob: -6.4849724769592285
    9. 'and' → logprob: -6.6099724769592285
    10. '<c' → logprob: -6.6099724769592285

Token 786: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.875003814697266
    4. '  ' → logprob: -18.875003814697266
    5. '4' → logprob: -19.375003814697266
    6. '```' → logprob: -19.500003814697266
    7. '
' → logprob: -19.875003814697266
    8. '    ' → logprob: -20.375003814697266
    9. '       ' → logprob: -20.500003814697266
    10. '     ' → logprob: -21.000003814697266

Token 787: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -19.375
    4. '```' → logprob: -19.5
    5. '4' → logprob: -20.625
    6. '
' → logprob: -21.75
    7. '۳' → logprob: -22.5
    8. '  ' → logprob: -22.5
    9. '``' → logprob: -22.625
    10. '' → logprob: -22.625

Token 788: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12651169300079346
    2. '        
' → logprob: -3.376511573791504
    3. '
' → logprob: -3.751511573791504
    4. '   ' → logprob: -4.126511573791504
    5. ')' → logprob: -4.501511573791504
    6. ',' → logprob: -4.501511573791504
    7. '<|end|>' → logprob: -4.751511573791504
    8. '    
' → logprob: -5.876511573791504
    9. '<|end|>' → logprob: -6.751511573791504
    10. '           ' → logprob: -6.876511573791504

Token 789: 'vertical' (ID: 29475)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13774244487285614
    2. '1' → logprob: -3.137742519378662
    3. 'True' → logprob: -3.137742519378662
    4. ' and' → logprob: -4.387742519378662
    5. ' True' → logprob: -4.512742519378662
    6. 'r' → logprob: -5.387742519378662
    7. '       ' → logprob: -6.012742519378662
    8. ',' → logprob: -6.512742519378662
    9. 'and' → logprob: -6.512742519378662
    10. '   ' → logprob: -6.762742519378662

Token 790: ' movement' (ID: 12772)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2788158357143402
    2. '+' → logprob: -2.653815746307373
    3. 'edge' → logprob: -2.778815746307373
    4. ')
' → logprob: -4.028815746307373
    5. ' movement' → logprob: -4.153815746307373
    6. 'movement' → logprob: -4.403815746307373
    7. ',' → logprob: -4.528815746307373
    8. 'move' → logprob: -4.653815746307373
    9. ' edge' → logprob: -4.778815746307373
    10. ' move' → logprob: -4.903815746307373

Token 791: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.672431230545044
    2. ')' → logprob: -1.047431230545044
    3. '(r' → logprob: -3.172431230545044
    4. '```' → logprob: -3.547431230545044
    5. '   ' → logprob: -3.922431230545044
    6. ',' → logprob: -4.547430992126465
    7. ' and' → logprob: -4.672430992126465
    8. '           ' → logprob: -5.422430992126465
    9. '[r' → logprob: -5.922430992126465
    10. '+' → logprob: -5.922430992126465

Token 792: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14435310661792755
    2. '#' → logprob: -2.144353151321411
    3. ',' → logprob: -5.394352912902832
    4. ')' → logprob: -5.769352912902832
    5. '   ' → logprob: -5.769352912902832
    6. '<|end|>' → logprob: -6.019352912902832
    7. '           ' → logprob: -6.644352912902832
    8. '```' → logprob: -7.019352912902832
    9. '        
' → logprob: -8.394352912902832
    10. '\' → logprob: -8.394352912902832

Token 793: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017237838357686996
    2. '#' (adapté à ' #') → logprob: -4.767237663269043
    3. ')' → logprob: -6.017237663269043
    4. ',' → logprob: -6.517237663269043
    5. '   ' → logprob: -6.517237663269043
    6. '<|end|>' → logprob: -7.017237663269043
    7. '           ' → logprob: -7.392237663269043
    8. '        
' → logprob: -7.642237663269043
    9. '\' → logprob: -8.767237663269043
    10. '```' → logprob: -8.767237663269043

Token 794: ' Similar' (ID: 50901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004254219587892294
    2. '#' → logprob: -6.379254341125488
    3. '           ' → logprob: -7.129254341125488
    4. '```' → logprob: -7.379254341125488
    5. '   ' → logprob: -8.004254341125488
    6. '        
' → logprob: -8.254254341125488
    7. ',' → logprob: -8.879254341125488
    8. ')' → logprob: -9.629254341125488
    9. '        ' → logprob: -10.129254341125488
    10. '               ' → logprob: -10.254254341125488

Token 795: ' vertical' (ID: 17679)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3125066757202148
    2. '       ' → logprob: -1.4375066757202148
    3. '   ' → logprob: -1.6875066757202148
    4. '```' → logprob: -1.6875066757202148
    5. '           ' → logprob: -3.562506675720215
    6. '
' → logprob: -4.062506675720215
    7. 'moves' → logprob: -4.187506675720215
    8. 'def' → logprob: -4.187506675720215
    9. 'for' → logprob: -5.062506675720215
    10. '(r' → logprob: -5.187506675720215

Token 796: ' at' (ID: 540)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.09613215923309326
    2. '(' → logprob: -3.846132278442383
    3. 'movement' → logprob: -4.221132278442383
    4. 'moves' → logprob: -4.346132278442383
    5. '   ' → logprob: -4.471132278442383
    6. '#' → logprob: -5.221132278442383
    7. 'edges' → logprob: -5.346132278442383
    8. ' (' → logprob: -5.471132278442383
    9. 'mov' → logprob: -5.471132278442383
    10. '
' → logprob: -5.846132278442383

Token 797: ' intersection' (ID: 42002)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.6847411394119263
    2. 'intersection' → logprob: -1.0597411394119263
    3. ' middle' → logprob: -2.6847410202026367
    4. '(r' → logprob: -3.0597410202026367
    5. ' intersection' → logprob: -4.309741020202637
    6. ' (' → logprob: -5.184741020202637
    7. '(m' → logprob: -5.559741020202637
    8. 's' → logprob: -5.809741020202637
    9. '(s' → logprob: -5.809741020202637
    10. '   ' → logprob: -6.559741020202637

Token 798: ' up' (ID: 869)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06602772325277328
    2. '   ' → logprob: -3.4410276412963867
    3. '        
' → logprob: -4.691027641296387
    4. '```' → logprob: -4.816027641296387
    5. ')' → logprob: -5.691027641296387
    6. '
' → logprob: -6.316027641296387
    7. '<|end|>' → logprob: -6.316027641296387
    8. '    
' → logprob: -7.191027641296387
    9. '           ' → logprob: -7.316027641296387
    10. '_' → logprob: -7.316027641296387

Token 799: '/down' (ID: 170878)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48594799637794495
    2. '   ' → logprob: -1.1109479665756226
    3. ')' → logprob: -4.110948085784912
    4. '
' → logprob: -5.360948085784912
    5. '(r' → logprob: -5.360948085784912
    6. '	' → logprob: -5.485948085784912
    7. '_' → logprob: -5.610948085784912
    8. '```' → logprob: -5.610948085784912
    9. ',' → logprob: -5.735948085784912
    10. '<|end|>' → logprob: -6.360948085784912

Token 800: ' allowed' (ID: 9279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1777714341878891
    2. '
' → logprob: -2.6777713298797607
    3. '        
' → logprob: -3.1777713298797607
    4. '   ' → logprob: -3.6777713298797607
    5. ',' → logprob: -5.42777156829834
    6. '```' → logprob: -5.55277156829834
    7. ':' → logprob: -5.80277156829834
    8. '_' → logprob: -6.17777156829834
    9. ')' → logprob: -6.17777156829834
    10. '    
' → logprob: -6.67777156829834

Token 801: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0677671730518341
    2. '        
' → logprob: -3.5677671432495117
    3. '   ' → logprob: -4.067767143249512
    4. '
' → logprob: -5.442767143249512
    5. '<|end|>' → logprob: -5.442767143249512
    6. '```' → logprob: -5.692767143249512
    7. '    
' → logprob: -6.942767143249512
    8. '        
        
' → logprob: -7.067767143249512
    9. ',' → logprob: -7.192767143249512
    10. '<|end|>' → logprob: -7.317767143249512

Token 802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08883323520421982
    2. '        
' → logprob: -2.9638333320617676
    3. '   ' → logprob: -4.463833332061768
    4. '<|end|>' → logprob: -4.713833332061768
    5. '    
' → logprob: -5.713833332061768
    6. '
' → logprob: -6.338833332061768
    7. '        
        
' → logprob: -6.588833332061768
    8. '```' → logprob: -6.963833332061768
    9. '<|end|>' → logprob: -6.963833332061768
    10. '           ' → logprob: -7.713833332061768

Token 803: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03795231506228447
    2. '
' → logprob: -3.537952423095703
    3. '        
' → logprob: -5.537952423095703
    4. '   ' → logprob: -6.412952423095703
    5. '```' → logprob: -7.287952423095703
    6. 'from' → logprob: -8.037952423095703
    7. 'import' → logprob: -8.037952423095703
    8. 'def' → logprob: -8.537952423095703
    9. '           ' → logprob: -8.662952423095703
    10. '#' (adapté à ' #') → logprob: -9.412952423095703

Token 804: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4192731976509094
    2. 'dp' → logprob: -1.1692731380462646
    3. 'from' → logprob: -4.544273376464844
    4. '#' → logprob: -5.544273376464844
    5. 'def' → logprob: -5.669273376464844
    6. '   ' → logprob: -6.169273376464844
    7. 'import' → logprob: -6.169273376464844
    8. 'dist' → logprob: -6.419273376464844
    9. ' dp' → logprob: -6.669273376464844
    10. 'DP' → logprob: -6.794273376464844

Token 805: ' want' (ID: 1682)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12482621520757675
    2. 'can' → logprob: -2.749826192855835
    3. ' can' → logprob: -2.999826192855835
    4. '
' → logprob: -7.249826431274414
    5. ' #' → logprob: -7.874826431274414
    6. 'continue' → logprob: -8.374826431274414
    7. ' continue' → logprob: -8.499826431274414
    8. '=' → logprob: -8.624826431274414
    9. '```' → logprob: -8.749826431274414
    10. 'need' → logprob: -8.874826431274414

Token 806: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5245963931083679
    2. ' to' → logprob: -0.8995963931083679
    3. '       ' → logprob: -7.024596214294434
    4. '```' → logprob: -8.649596214294434
    5. 'def' → logprob: -9.399596214294434
    6. '   ' → logprob: -9.524596214294434
    7. '`' → logprob: -9.774596214294434
    8. '        ' → logprob: -10.274596214294434
    9. '_to' → logprob: -10.399596214294434
    10. '
' → logprob: -11.274596214294434

Token 807: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.044406160712242126
    2. 'compute' → logprob: -4.294405937194824
    3. 'min' → logprob: -4.544405937194824
    4. 'collect' → logprob: -5.544405937194824
    5. 'build' → logprob: -5.794405937194824
    6. ' find' → logprob: -5.919405937194824
    7. 'visit' → logprob: -6.669405937194824
    8. 'calculate' → logprob: -6.669405937194824
    9. 'process' → logprob: -6.919405937194824
    10. 'enumer' → logprob: -7.169405937194824

Token 808: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.8245809078216553
    2. ' the' → logprob: -1.1995809078216553
    3. 'the' → logprob: -3.0745809078216553
    4. ' shortest' → logprob: -3.4495809078216553
    5. ' a' → logprob: -3.5745809078216553
    6. ' paths' → logprob: -3.6995809078216553
    7. ' next' → logprob: -3.6995809078216553
    8. '"' → logprob: -3.9495809078216553
    9. '`' → logprob: -4.199581146240234
    10. 'minimal' → logprob: -4.324581146240234

Token 809: ' cost' (ID: 3097)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.13975189626216888
    2. ' cost' → logprob: -3.13975191116333
    3. '_total' → logprob: -3.26475191116333
    4. 'cost' → logprob: -4.26475191116333
    5. '_' → logprob: -4.38975191116333
    6. ' _' → logprob: -4.88975191116333
    7. '_path' → logprob: -5.01475191116333
    8. ' total' → logprob: -5.88975191116333
    9. '_distance' → logprob: -5.88975191116333
    10. ' path' → logprob: -7.51475191116333

Token 810: ' path' (ID: 3104)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7963545322418213
    2. '   ' → logprob: -1.0463545322418213
    3. '_' → logprob: -2.9213545322418213
    4. ',' → logprob: -3.2963545322418213
    5. ' ' → logprob: -4.546354293823242
    6. ':' → logprob: -4.796354293823242
    7. ' _' → logprob: -4.921354293823242
    8. '```' → logprob: -4.921354293823242
    9. ' =' → logprob: -5.046354293823242
    10. '[' → logprob: -5.171354293823242

Token 811: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7463141679763794
    2. ' from' → logprob: -1.4963141679763794
    3. 'from' → logprob: -2.24631404876709
    4. '       ' → logprob: -2.87131404876709
    5. ':' → logprob: -3.62131404876709
    6. ' to' → logprob: -3.87131404876709
    7. ' that' → logprob: -4.12131404876709
    8. '```' → logprob: -4.12131404876709
    9. ' +' → logprob: -5.12131404876709
    10. ' ' → logprob: -5.12131404876709

Token 812: ' start' (ID: 1604)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07912474125623703
    2. ' (' → logprob: -2.579124689102173
    3. 'intersection' → logprob: -9.204124450683594
    4. 'start' → logprob: -9.454124450683594
    5. 'position' → logprob: -10.704124450683594
    6. ' intersection' → logprob: -11.329124450683594
    7. ' start' → logprob: -11.579124450683594
    8. ' position' → logprob: -12.579124450683594
    9. '`' → logprob: -12.704124450683594
    10. '0' → logprob: -13.204124450683594

Token 813: ' =' (ID: 314)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9799686074256897
    2. '(' → logprob: -1.354968547821045
    3. ' =' → logprob: -1.729968547821045
    4. ' to' → logprob: -2.979968547821045
    5. '   ' → logprob: -3.229968547821045
    6. '```' → logprob: -3.354968547821045
    7. ' at' → logprob: -3.604968547821045
    8. ' ' → logprob: -4.479968547821045
    9. '=' → logprob: -5.229968547821045
    10. ',' → logprob: -5.854968547821045

Token 814: ' intersection' (ID: 42002)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006717743817716837
    2. ' (' → logprob: -5.006717681884766
    3. '`' → logprob: -13.756717681884766
    4. '0' → logprob: -14.631717681884766
    5. '   ' → logprob: -14.881717681884766
    6. ' ' → logprob: -16.131717681884766
    7. '```' → logprob: -16.131717681884766
    8. ' `(' → logprob: -16.631717681884766
    9. 'intersection' → logprob: -16.631717681884766
    10. '``' → logprob: -18.131717681884766

Token 815: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004410651978105307
    2. ' (' → logprob: -5.504410743713379
    3. 'at' → logprob: -9.004410743713379
    4. ' at' → logprob: -9.754410743713379
    5. '`' → logprob: -9.879410743713379
    6. '```' → logprob: -10.004410743713379
    7. '0' → logprob: -11.254410743713379
    8. '(
' → logprob: -11.379410743713379
    9. ',' → logprob: -11.629410743713379
    10. '   ' → logprob: -12.129410743713379

Token 816: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035119339008815587
    2. '(' → logprob: -8.250350952148438
    3. ',' → logprob: -9.375350952148438
    4. ' ' → logprob: -13.750350952148438
    5. ')' → logprob: -13.875350952148438
    6. ' (' → logprob: -14.125350952148438
    7. '   ' → logprob: -14.375350952148438
    8. '```' → logprob: -14.375350952148438
    9. '`' → logprob: -14.750350952148438
    10. '4' → logprob: -15.125350952148438

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015681622608099133
    2. '(' → logprob: -9.87515640258789
    3. '0' → logprob: -10.12515640258789
    4. ' ,' → logprob: -10.25015640258789
    5. '```' → logprob: -11.75015640258789
    6. '   ' → logprob: -12.00015640258789
    7. ')' → logprob: -12.25015640258789
    8. '`,' → logprob: -12.62515640258789
    9. ',
' → logprob: -13.00015640258789
    10. ',(' → logprob: -13.37515640258789

Token 818: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.5649528298527e-05
    2. ',' → logprob: -9.625075340270996
    3. ' ' → logprob: -11.625075340270996
    4. '```' → logprob: -14.750075340270996
    5. ' ,' → logprob: -16.375076293945312
    6. ',
' → logprob: -16.750076293945312
    7. '   ' → logprob: -17.500076293945312
    8. ')' → logprob: -17.750076293945312
    9. '`' → logprob: -17.875076293945312
    10. '``' → logprob: -18.000076293945312

Token 819: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36369141936302185
    2. ')' → logprob: -1.2386914491653442
    3. '(' → logprob: -4.363691329956055
    4. '```' → logprob: -7.238691329956055
    5. ' (' → logprob: -7.738691329956055
    6. '   ' → logprob: -8.113691329956055
    7. ' to' → logprob: -8.863691329956055
    8. ',(' → logprob: -8.988691329956055
    9. ' ,' → logprob: -9.113691329956055
    10. ',)' → logprob: -9.363691329956055

Token 820: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5182583928108215
    2. '   ' → logprob: -1.0182583332061768
    3. ' to' → logprob: -4.143258571624756
    4. ',' → logprob: -4.268258571624756
    5. '```' → logprob: -5.768258571624756
    6. ')' → logprob: -6.018258571624756
    7. '(' → logprob: -6.268258571624756
    8. '    ' → logprob: -6.643258571624756
    9. '        ' → logprob: -7.393258571624756
    10. '           ' → logprob: -7.393258571624756

Token 821: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.656276285648346
    2. '       ' → logprob: -1.1562762260437012
    3. '   ' → logprob: -2.406276226043701
    4. ' to' → logprob: -2.906276226043701
    5. '(' → logprob: -4.656276226043701
    6. ')' → logprob: -5.281276226043701
    7. '```' → logprob: -6.656276226043701
    8. '           ' → logprob: -7.031276226043701
    9. ',
' → logprob: -7.156276226043701
    10. ' ,' → logprob: -7.406276226043701

Token 822: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41965338587760925
    2. '   ' → logprob: -2.2946534156799316
    3. ' to' → logprob: -2.2946534156799316
    4. ',' → logprob: -2.5446534156799316
    5. '(' → logprob: -4.044653415679932
    6. 'to' → logprob: -4.419653415679932
    7. '#' → logprob: -4.419653415679932
    8. ')' → logprob: -4.669653415679932
    9. '           ' → logprob: -6.044653415679932
    10. ' ' → logprob: -6.294653415679932

Token 823: ' end' (ID: 1268)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.16105970740318298
    2. ' intersection' → logprob: -1.9110597372055054
    3. '(' → logprob: -7.411059856414795
    4. ' (' → logprob: -8.536059379577637
    5. '```' → logprob: -12.161059379577637
    6. ' ' → logprob: -12.161059379577637
    7. 'inter' → logprob: -12.286059379577637
    8. '   ' → logprob: -12.411059379577637
    9. '(inter' → logprob: -12.911059379577637
    10. '
' → logprob: -13.036059379577637

Token 824: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015158834867179394
    2. ',' → logprob: -4.640158653259277
    3. ' (' → logprob: -5.890158653259277
    4. '```' → logprob: -6.515158653259277
    5. '=' → logprob: -7.890158653259277
    6. '   ' → logprob: -8.140158653259277
    7. ',(' → logprob: -9.140158653259277
    8. '       ' → logprob: -9.640158653259277
    9. '`' → logprob: -9.640158653259277
    10. '``' → logprob: -9.640158653259277

Token 825: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.02198386937379837
    2. ' intersection' → logprob: -4.146984100341797
    3. '(' → logprob: -5.271984100341797
    4. ' (' → logprob: -7.146984100341797
    5. '```' → logprob: -12.271984100341797
    6. 'inter' → logprob: -13.396984100341797
    7. '`' → logprob: -13.521984100341797
    8. '(inter' → logprob: -14.021984100341797
    9. '``' → logprob: -14.646984100341797
    10. ' ' → logprob: -14.896984100341797

Token 826: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.688212614681106e-05
    2. ' (' → logprob: -11.000017166137695
    3. '```' → logprob: -16.000017166137695
    4. '`' → logprob: -18.250017166137695
    5. '   ' → logprob: -18.500017166137695
    6. '``' → logprob: -19.500017166137695
    7. '4' → logprob: -19.750017166137695
    8. '0' → logprob: -20.500017166137695
    9. ')' → logprob: -20.750017166137695
    10. '3' → logprob: -20.875017166137695

Token 827: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -12.000007629394531
    3. ' ' → logprob: -13.500007629394531
    4. '```' → logprob: -15.750007629394531
    5. ' (' → logprob: -16.25000762939453
    6. '   ' → logprob: -17.25000762939453
    7. '``' → logprob: -17.62500762939453
    8. ',' → logprob: -17.62500762939453
    9. ')' → logprob: -18.12500762939453
    10. '`' → logprob: -18.25000762939453

Token 828: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07894189655780792
    2. ',N' → logprob: -2.578941822052002
    3. ',(' → logprob: -11.20394229888916
    4. ',n' → logprob: -11.32894229888916
    5. ' ,' → logprob: -11.32894229888916
    6. '   ' → logprob: -12.20394229888916
    7. ',
' → logprob: -13.20394229888916
    8. '`,' → logprob: -13.57894229888916
    9. '```' → logprob: -13.82894229888916
    10. ',int' → logprob: -14.07894229888916

Token 829: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015092701651155949
    2. ')
' → logprob: -7.126509189605713
    3. '```' → logprob: -8.126509666442871
    4. ')`' → logprob: -9.001509666442871
    5. '+' → logprob: -9.251509666442871
    6. '   ' → logprob: -10.126509666442871
    7. '-' → logprob: -10.501509666442871
    8. '`)' → logprob: -10.751509666442871
    9. '``' → logprob: -11.251509666442871
    10. '))' → logprob: -11.251509666442871

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5625987648963928
    2. '
' → logprob: -1.687598705291748
    3. '        
' → logprob: -2.312598705291748
    4. '<|end|>' → logprob: -2.812598705291748
    5. '   ' → logprob: -3.562598705291748
    6. '    
' → logprob: -4.312598705291748
    7. '<|end|>' → logprob: -4.562598705291748
    8. '```' → logprob: -4.812598705291748
    9. '        
        
' → logprob: -5.187598705291748
    10. '        

' → logprob: -6.187598705291748

Token 831: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2785510718822479
    2. '
' → logprob: -1.9035511016845703
    3. '        
' → logprob: -3.4035511016845703
    4. '   ' → logprob: -4.02855110168457
    5. '```' → logprob: -4.15355110168457
    6. '<|end|>' → logprob: -5.52855110168457
    7. '    
' → logprob: -5.90355110168457
    8. ',' → logprob: -6.02855110168457
    9. '        

' → logprob: -6.15355110168457
    10. '\' → logprob: -6.40355110168457

Token 832: ' passing' (ID: 21178)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28766727447509766
    2. '   ' → logprob: -2.2876672744750977
    3. '
' → logprob: -2.5376672744750977
    4. '        
' → logprob: -3.7876672744750977
    5. '```' → logprob: -4.037667274475098
    6. '    
' → logprob: -5.287667274475098
    7. '\' → logprob: -5.662667274475098
    8. ',' → logprob: -5.912667274475098
    9. ':' → logprob: -6.162667274475098
    10. ')' → logprob: -6.287667274475098

Token 833: ' through' (ID: 1819)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.056877393275499344
    2. ' through' → logprob: -2.931877374649048
    3. 'at' → logprob: -6.931877613067627
    4. 'all' → logprob: -7.306877613067627
    5. '(' → logprob: -9.181877136230469
    6. '#' → logprob: -10.056877136230469
    7. ' all' → logprob: -10.681877136230469
    8. ' at' → logprob: -10.806877136230469
    9. '```' → logprob: -10.806877136230469
    10. '`' → logprob: -10.806877136230469

Token 834: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.33083608746528625
    2. ' all' → logprob: -1.8308360576629639
    3. 'positions' → logprob: -3.705836057662964
    4. ' shelves' → logprob: -3.955836057662964
    5. ' middle' → logprob: -4.205836296081543
    6. 's' → logprob: -4.330836296081543
    7. 'the' → logprob: -4.580836296081543
    8. ' positions' → logprob: -4.580836296081543
    9. 'middle' → logprob: -4.580836296081543
    10. ' shelf' → logprob: -5.580836296081543

Token 835: ' shelf' (ID: 40978)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -1.0551687479019165
    2. 's' → logprob: -1.5551687479019165
    3. 'positions' → logprob: -1.8051687479019165
    4. '(' → logprob: -2.430168628692627
    5. '(required' → logprob: -2.805168628692627
    6. 'books' → logprob: -3.805168628692627
    7. ' required' → logprob: -3.930168628692627
    8. 'needed' → logprob: -4.430168628692627
    9. '(r' → logprob: -4.555168628692627
    10. ' (' → logprob: -4.805168628692627

Token 836: ' midd' (ID: 27220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2893431186676025
    2. '       ' → logprob: -1.6643431186676025
    3. '```' → logprob: -1.6643431186676025
    4. '_' → logprob: -2.6643431186676025
    5. ')' → logprob: -3.1643431186676025
    6. '[' → logprob: -3.1643431186676025
    7. '_middle' → logprob: -3.2893431186676025
    8. 'es' → logprob: -3.9143431186676025
    9. '[r' → logprob: -4.164342880249023
    10. '_s' → logprob: -4.289342880249023

Token 837: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.04948144406080246
    2. 'les' → logprob: -3.0494813919067383
    3. 'e' → logprob: -7.424481391906738
    4. 'es' → logprob: -8.424481391906738
    5. '(' → logprob: -9.924481391906738
    6. 'l' → logprob: -12.049481391906738
    7. '(e' → logprob: -12.549481391906738
    8. ')' → logprob: -12.799481391906738
    9. '0' → logprob: -13.299481391906738
    10. 'ile' → logprob: -13.674481391906738

Token 838: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23662491142749786
    2. ',' → logprob: -3.1116249561309814
    3. '   ' → logprob: -3.1116249561309814
    4. ':' → logprob: -3.1116249561309814
    5. '        
' → logprob: -4.236624717712402
    6. '```' → logprob: -4.736624717712402
    7. '.' → logprob: -4.861624717712402
    8. '_' → logprob: -5.111624717712402
    9. ')' → logprob: -5.236624717712402
    10. '`' → logprob: -5.236624717712402

Token 839: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.0013128553982824087
    2. '`' → logprob: -7.376312732696533
    3. ' books' → logprob: -8.126313209533691
    4. '```' → logprob: -8.751313209533691
    5. 's' → logprob: -9.126313209533691
    6. '
' → logprob: -10.501313209533691
    7. 'book' → logprob: -10.751313209533691
    8. '`s' → logprob: -10.876313209533691
    9. 'she' → logprob: -11.376313209533691
    10. 'the' → logprob: -11.626313209533691

Token 840: ' exist' (ID: 4310)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.6089581847190857
    2. '       ' → logprob: -1.6089582443237305
    3. '```' → logprob: -2.4839582443237305
    4. '[' → logprob: -2.9839582443237305
    5. '_' → logprob: -3.1089582443237305
    6. '   ' → logprob: -4.2339582443237305
    7. ':' → logprob: -4.4839582443237305
    8. ',' → logprob: -4.6089582443237305
    9. '(r' → logprob: -4.8589582443237305
    10. '`' → logprob: -5.9839582443237305

Token 841: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6822341084480286
    2. ':' → logprob: -1.1822340488433838
    3. '   ' → logprob: -2.307234048843384
    4. '```' → logprob: -3.807234048843384
    5. '
' → logprob: -4.182234287261963
    6. ',' → logprob: -4.307234287261963
    7. '        
' → logprob: -4.932234287261963
    8. ':
' → logprob: -5.307234287261963
    9. 'def' → logprob: -6.057234287261963
    10. '):' → logprob: -6.057234287261963

Token 842: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06051207706332207
    2. '        
' → logprob: -3.560512065887451
    3. '   ' → logprob: -4.310512065887451
    4. '
' → logprob: -4.810512065887451
    5. '```' → logprob: -6.560512065887451
    6. '        
        
' → logprob: -7.060512065887451
    7. '    
' → logprob: -7.685512065887451
    8. '#' → logprob: -7.685512065887451
    9. '        ' → logprob: -7.685512065887451
    10. ',' → logprob: -7.935512065887451

Token 843: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4415501058101654
    2. 'targets' → logprob: -2.1915500164031982
    3. '        
' → logprob: -3.1915500164031982
    4. 'required' → logprob: -3.5665500164031982
    5. '#' (adapté à ' #') → logprob: -3.5665500164031982
    6. '   ' → logprob: -3.6915500164031982
    7. 'from' → logprob: -3.9415500164031982
    8. 'import' → logprob: -4.316550254821777
    9. 'positions' → logprob: -4.691550254821777
    10. '`' → logprob: -4.691550254821777

Token 844: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0277007818222046
    2. 'from' → logprob: -1.0277007818222046
    3. 'dp' → logprob: -1.5277007818222046
    4. 'import' → logprob: -3.902700901031494
    5. '#' → logprob: -4.152700901031494
    6. 'required' → logprob: -5.277700901031494
    7. 'positions' → logprob: -5.402700901031494
    8. 'N' → logprob: -6.027700901031494
    9. 'points' → logprob: -6.027700901031494
    10. 'needed' → logprob: -6.277700901031494

Token 845: ' best' (ID: 1636)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.4858702421188354
    2. ' problem' → logprob: -2.110870361328125
    3. ' best' → logprob: -2.360870361328125
    4. 'problem' → logprob: -2.360870361328125
    5. 'best' → logprob: -2.985870361328125
    6. 's' → logprob: -2.985870361328125
    7. 'positions' → logprob: -3.110870361328125
    8. ' code' → logprob: -3.360870361328125
    9. 'next' → logprob: -3.485870361328125
    10. '#' → logprob: -4.110870361328125

Token 846: ' way' (ID: 2006)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6720082759857178
    2. ' guess' → logprob: -1.9220082759857178
    3. ' approach' → logprob: -2.4220082759857178
    4. '_guess' → logprob: -2.4220082759857178
    5. ' next' → logprob: -3.2970082759857178
    6. ' possible' → logprob: -3.5470082759857178
    7. ' _' → logprob: -4.047008514404297
    8. '```' → logprob: -4.172008514404297
    9. '_possible' → logprob: -4.672008514404297
    10. '_next' → logprob: -4.922008514404297

Token 847: ' is' (ID: 382)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8104755878448486
    2. ' is' → logprob: -1.4354755878448486
    3. '```' → logprob: -1.9354755878448486
    4. ' =' → logprob: -2.1854755878448486
    5. '       ' → logprob: -4.4354753494262695
    6. '   ' → logprob: -4.6854753494262695
    7. 'to' → logprob: -5.0604753494262695
    8. ':' → logprob: -5.1854753494262695
    9. ' would' → logprob: -5.9354753494262695
    10. '=' → logprob: -6.0604753494262695

Token 848: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6212162971496582
    2. 'to' → logprob: -0.8712162971496582
    3. '       ' → logprob: -3.996216297149658
    4. 'dp' → logprob: -4.871216297149658
    5. '#' → logprob: -5.371216297149658
    6. ' dp' → logprob: -5.496216297149658
    7. 'def' → logprob: -5.621216297149658
    8. ' dynamic' → logprob: -6.121216297149658
    9. '   ' → logprob: -6.621216297149658
    10. 'dynamic' → logprob: -7.371216297149658

Token 849: ' find' (ID: 1646)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.32615575194358826
    2. 'dp' → logprob: -2.951155662536621
    3. 'solve' → logprob: -3.326155662536621
    4. 'consider' → logprob: -3.951155662536621
    5. 'find' → logprob: -4.076155662536621
    6. 'enumer' → logprob: -4.076155662536621
    7. 'try' → logprob: -4.076155662536621
    8. '#' → logprob: -4.201155662536621
    9. 'split' → logprob: -4.451155662536621
    10. 'compute' → logprob: -4.826155662536621

Token 850: ' minimal' (ID: 19957)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -1.4292222261428833
    2. 'dp' → logprob: -1.8042222261428833
    3. 'the' → logprob: -1.9292222261428833
    4. ' minimal' → logprob: -2.1792221069335938
    5. 'all' → logprob: -2.4292221069335938
    6. 'minimal' → logprob: -2.4292221069335938
    7. 'a' → logprob: -2.8042221069335938
    8. 'minimum' → logprob: -4.304222106933594
    9. ' all' → logprob: -4.429222106933594
    10. '```' → logprob: -4.679222106933594

Token 851: ' path' (ID: 3104)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.6676948070526123
    2. ' cost' → logprob: -1.1676948070526123
    3. ' _' → logprob: -2.4176948070526123
    4. '_' → logprob: -3.9176948070526123
    5. 'cost' → logprob: -3.9176948070526123
    6. ' path' → logprob: -4.167695045471191
    7. '_path' → logprob: -4.667695045471191
    8. '_distance' → logprob: -5.167695045471191
    9. ' distance' → logprob: -6.292695045471191
    10. '`' → logprob: -6.417695045471191

Token 852: ' visiting' (ID: 18798)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0403180122375488
    2. ' =' → logprob: -2.165318012237549
    3. '<|end|>' → logprob: -2.790318012237549
    4. '```' → logprob: -3.040318012237549
    5. ' from' → logprob: -3.165318012237549
    6. ')' → logprob: -3.290318012237549
    7. ' ' → logprob: -3.415318012237549
    8. ' to' → logprob: -3.665318012237549
    9. '   ' → logprob: -3.665318012237549
    10. '`' → logprob: -3.915318012237549

Token 853: ' required' (ID: 3759)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.10347199440002441
    2. ' all' → logprob: -2.3534719944000244
    3. '```' → logprob: -6.103471755981445
    4. 'each' → logprob: -8.478471755981445
    5. '``' → logprob: -8.478471755981445
    6. '`' → logprob: -9.353471755981445
    7. 'the' → logprob: -9.353471755981445
    8. 'every' → logprob: -9.478471755981445
    9. '   ' → logprob: -9.853471755981445
    10. 'next' → logprob: -10.228471755981445

Token 854: ' nodes' (ID: 15749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.248455286026001
    2. '_nodes' → logprob: -1.248455286026001
    3. '_s' → logprob: -2.748455286026001
    4. '_positions' → logprob: -2.873455286026001
    5. 's' → logprob: -3.123455286026001
    6. '_token' → logprob: -3.248455286026001
    7. ' nodes' → logprob: -3.248455286026001
    8. '_points' → logprob: -3.498455286026001
    9. '_tokens' → logprob: -3.873455286026001
    10. 'nodes' → logprob: -3.873455286026001

Token 855: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23332877457141876
    2. '   ' → logprob: -2.4833288192749023
    3. '        
' → logprob: -3.3583288192749023
    4. '
' → logprob: -3.6083288192749023
    5. ',' → logprob: -4.358328819274902
    6. ':' → logprob: -4.733328819274902
    7. '```' → logprob: -4.983328819274902
    8. '_' → logprob: -5.358328819274902
    9. '<|end|>' → logprob: -5.608328819274902
    10. ':
' → logprob: -5.858328819274902

Token 856: 'all' (ID: 586)
  Prédit: ' shelf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -1.4686567783355713
    2. 's' → logprob: -1.8436567783355713
    3. ' shelves' → logprob: -2.2186567783355713
    4. ')' → logprob: -2.3436567783355713
    5. ' middle' → logprob: -2.8436567783355713
    6. 'all' → logprob: -2.9686567783355713
    7. ' required' → logprob: -2.9686567783355713
    8. ' all' → logprob: -3.0936567783355713
    9. ' nodes' → logprob: -3.2186567783355713
    10. 'middle' → logprob: -3.8436567783355713

Token 857: ' shelf' (ID: 40978)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.8767527341842651
    2. ' shelf' → logprob: -2.0017528533935547
    3. 's' → logprob: -2.2517528533935547
    4. ' shelves' → logprob: -2.5017528533935547
    5. '_required' → logprob: -3.0017528533935547
    6. '_' → logprob: -3.2517528533935547
    7. ' required' → logprob: -3.6267528533935547
    8. 'midd' → logprob: -3.8767528533935547
    9. '_m' → logprob: -4.126752853393555
    10. 'required' → logprob: -4.126752853393555

Token 858: ' midd' (ID: 27220)
  Prédit: 'midd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'midd' → logprob: -0.9498183131217957
    2. 's' → logprob: -1.0748183727264404
    3. ' midd' → logprob: -1.8248183727264404
    4. '_' → logprob: -3.3248183727264404
    5. ')' → logprob: -4.074818134307861
    6. ' s' → logprob: -4.574818134307861
    7. '_middle' → logprob: -4.574818134307861
    8. ' ' → logprob: -4.699818134307861
    9. ' _' → logprob: -5.574818134307861
    10. '   ' → logprob: -5.574818134307861

Token 859: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.18175585567951202
    2. 'es' → logprob: -1.8067559003829956
    3. 'le' → logprob: -7.056756019592285
    4. ')' → logprob: -8.556756019592285
    5. '   ' → logprob: -8.681756019592285
    6. '(' → logprob: -8.931756019592285
    7. '#' → logprob: -9.681756019592285
    8. '[' → logprob: -9.681756019592285
    9. '_' → logprob: -9.931756019592285
    10. 'e' → logprob: -9.931756019592285

Token 860: ' with' (ID: 483)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.14874267578125
    2. ')' → logprob: -1.27374267578125
    3. ',' → logprob: -1.89874267578125
    4. '(r' → logprob: -2.89874267578125
    5. '```' → logprob: -3.02374267578125
    6. '       ' → logprob: -3.27374267578125
    7. '(s' → logprob: -4.02374267578125
    8. '[r' → logprob: -4.39874267578125
    9. '(' → logprob: -4.64874267578125
    10. '_' → logprob: -4.77374267578125

Token 861: ' books' (ID: 7187)
  Prédit: ' Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.5132557153701782
    2. 'Y' → logprob: -1.0132557153701782
    3. ' books' → logprob: -3.8882555961608887
    4. 'books' → logprob: -4.888255596160889
    5. '`' → logprob: -5.513255596160889
    6. '```' → logprob: -5.638255596160889
    7. ' ' → logprob: -8.138256072998047
    8. ' a' → logprob: -8.263256072998047
    9. ' required' → logprob: -8.388256072998047
    10. 'book' → logprob: -8.388256072998047

Token 862: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47332504391670227
    2. ',' → logprob: -1.9733250141143799
    3. 's' → logprob: -2.47332501411438
    4. '       ' → logprob: -3.84832501411438
    5. '```' → logprob: -3.84832501411438
    6. '_' → logprob: -4.098325252532959
    7. '   ' → logprob: -4.223325252532959
    8. '[r' → logprob: -4.473325252532959
    9. '[' → logprob: -4.598325252532959
    10. '(s' → logprob: -4.848325252532959

Token 863: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18023602664470673
    2. '        
' → logprob: -2.6802361011505127
    3. '
' → logprob: -2.9302361011505127
    4. '<|end|>' → logprob: -4.430235862731934
    5. '   ' → logprob: -5.055235862731934
    6. ',' → logprob: -5.055235862731934
    7. '```' → logprob: -5.930235862731934
    8. '        ' → logprob: -6.555235862731934
    9. '        
        
' → logprob: -6.680235862731934
    10. ':' → logprob: -6.805235862731934

Token 864: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043264877051115036
    2. '        
' → logprob: -3.918264865875244
    3. '
' → logprob: -4.793264865875244
    4. '   ' → logprob: -5.293264865875244
    5. ',' → logprob: -6.668264865875244
    6. '```' → logprob: -6.793264865875244
    7. '<|end|>' → logprob: -7.043264865875244
    8. '\' → logprob: -7.543264865875244
    9. '#' (adapté à ' #') → logprob: -7.668264865875244
    10. '        
        
' → logprob: -7.668264865875244

Token 865: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07135124504566193
    2. '   ' → logprob: -4.071351051330566
    3. '#' → logprob: -4.321351051330566
    4. '        
' → logprob: -4.321351051330566
    5. '
' → logprob: -5.196351051330566
    6. '<|end|>' → logprob: -6.071351051330566
    7. 'from' → logprob: -6.196351051330566
    8. '```' → logprob: -6.446351051330566
    9. 'def' → logprob: -7.071351051330566
    10. '`' → logprob: -7.071351051330566

Token 866: ' N' (ID: 478)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.0128251314163208
    2. ' K' → logprob: -1.8878251314163208
    3. 'K' → logprob: -2.3878250122070312
    4. 'len' → logprob: -2.3878250122070312
    5. ' required' → logprob: -2.6378250122070312
    6. ' the' → logprob: -3.0128250122070312
    7. 'the' → logprob: -3.3878250122070312
    8. 'required' → logprob: -3.5128250122070312
    9. ' N' → logprob: -4.137825012207031
    10. ' all' → logprob: -4.262825012207031

Token 867: ' can' (ID: 665)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8110737204551697
    2. '=' → logprob: -1.1860737800598145
    3. ' =' → logprob: -2.1860737800598145
    4. ')' → logprob: -2.9360737800598145
    5. ' <=' → logprob: -3.5610737800598145
    6. '<=' → logprob: -4.3110737800598145
    7. '   ' → logprob: -4.5610737800598145
    8. '
' → logprob: -5.4360737800598145
    9. '==' → logprob: -5.5610737800598145
    10. ' +' → logprob: -5.8110737800598145

Token 868: ' be' (ID: 413)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.2334588766098022
    2. ' be' → logprob: -1.2334588766098022
    3. ' <=' → logprob: -1.9834588766098022
    4. '<=' → logprob: -1.9834588766098022
    5. ' >' → logprob: -2.858458995819092
    6. '=' → logprob: -3.108458995819092
    7. ' up' → logprob: -4.358458995819092
    8. 'be' → logprob: -4.733458995819092
    9. '```' → logprob: -5.858458995819092
    10. '   ' → logprob: -5.858458995819092

Token 869: ' large' (ID: 4410)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.6579831838607788
    2. ' large' → logprob: -1.1579831838607788
    3. '10' → logprob: -3.2829833030700684
    4. 'up' → logprob: -3.5329833030700684
    5. '```' → logprob: -3.9079833030700684
    6. 'very' → logprob: -4.157983303070068
    7. ' very' → logprob: -4.157983303070068
    8. '1' → logprob: -4.782983303070068
    9. ' up' → logprob: -4.907983303070068
    10. '100' → logprob: -5.032983303070068

Token 870: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4186808466911316
    2. ':' → logprob: -1.7936809062957764
    3. ',' → logprob: -2.2936809062957764
    4. ':
' → logprob: -3.6686809062957764
    5. '   ' → logprob: -4.668680667877197
    6. '```' → logprob: -4.793680667877197
    7. '
' → logprob: -4.918680667877197
    8. '        
' → logprob: -5.043680667877197
    9. ' and' → logprob: -5.918680667877197
    10. '<|end|>' → logprob: -6.043680667877197

Token 871: ' no' (ID: 860)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06156659126281738
    2. ' continue' → logprob: -4.561566352844238
    3. ' ...' → logprob: -4.811566352844238
    4. '   ' → logprob: -5.061566352844238
    5. '        ' → logprob: -5.061566352844238
    6. '        
' → logprob: -5.186566352844238
    7. '...' → logprob: -5.561566352844238
    8. ' ' → logprob: -5.811566352844238
    9. ' if' → logprob: -6.686566352844238
    10. '```' → logprob: -6.811566352844238

Token 872: ' T' (ID: 353)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0611497163772583
    2. 'def' → logprob: -1.4361497163772583
    3. '       ' → logprob: -1.9361497163772583
    4. '   ' → logprob: -2.0611495971679688
    5. ' longer' → logprob: -3.1861495971679688
    6. '
' → logprob: -3.9361495971679688
    7. 'import' → logprob: -4.561149597167969
    8. ' more' → logprob: -4.811149597167969
    9. ')' → logprob: -5.311149597167969
    10. 'dp' → logprob: -5.561149597167969

Token 873: 'SP' (ID: 6657)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9925402998924255
    2. '_' → logprob: -1.4925403594970703
    3. 'ab' → logprob: -1.4925403594970703
    4. '   ' → logprob: -2.4925403594970703
    5. '       ' → logprob: -4.11754035949707
    6. '[' → logprob: -4.61754035949707
    7. ' ' → logprob: -4.86754035949707
    8. '    ' → logprob: -4.99254035949707
    9. '    
' → logprob: -5.24254035949707
    10. ' _' → logprob: -5.24254035949707

Token 874: ' approach' (ID: 7139)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10111825913190842
    2. '        
' → logprob: -2.601118326187134
    3. '
' → logprob: -5.226118087768555
    4. '   ' → logprob: -5.476118087768555
    5. '        
        
' → logprob: -6.226118087768555
    6. '        ' → logprob: -6.601118087768555
    7. '<|end|>' → logprob: -6.601118087768555
    8. '_' → logprob: -6.976118087768555
    9. '        

' → logprob: -7.101118087768555
    10. ',' → logprob: -7.101118087768555

Token 875: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32266026735305786
    2. '
' → logprob: -2.072660207748413
    3. '        
' → logprob: -2.447660207748413
    4. ':' → logprob: -4.072660446166992
    5. '   ' → logprob: -4.072660446166992
    6. ',' → logprob: -5.197660446166992
    7. '```' → logprob: -5.197660446166992
    8. '    
' → logprob: -5.947660446166992
    9. ':
' → logprob: -6.447660446166992
    10. '\' → logprob: -6.697660446166992

Token 876: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17147177457809448
    2. '        
' → logprob: -2.1714718341827393
    3. '   ' → logprob: -4.42147159576416
    4. '
' → logprob: -4.79647159576416
    5. '        
        
' → logprob: -5.17147159576416
    6. '        ' → logprob: -5.29647159576416
    7. '<|end|>' → logprob: -6.17147159576416
    8. '        

' → logprob: -6.29647159576416
    9. ',' → logprob: -6.54647159576416
    10. '    
' → logprob: -6.92147159576416

Token 877: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3461499810218811
    2. '
' → logprob: -1.3461499214172363
    3. '        
' → logprob: -3.7211499214172363
    4. '   ' → logprob: -5.846149921417236
    5. '```' → logprob: -6.721149921417236
    6. '        
        
' → logprob: -7.346149921417236
    7. '    
' → logprob: -7.971149921417236
    8. '        

' → logprob: -7.971149921417236
    9. '        ' → logprob: -8.096150398254395
    10. '#' → logprob: -8.471150398254395

Token 878: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07575663924217224
    2. '        
' → logprob: -3.075756549835205
    3. '
' → logprob: -4.200756549835205
    4. '   ' → logprob: -5.575756549835205
    5. '#' (adapté à ' #') → logprob: -5.825756549835205
    6. '```' → logprob: -6.825756549835205
    7. '    
' → logprob: -7.200756549835205
    8. '        
        
' → logprob: -7.575756549835205
    9. 'dp' → logprob: -8.200757026672363
    10. '  
' → logprob: -8.325757026672363

Token 879: ' Note' (ID: 12225)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19512656331062317
    2. '#' → logprob: -2.195126533508301
    3. 'dp' → logprob: -3.445126533508301
    4. 'def' → logprob: -4.945126533508301
    5. 'import' → logprob: -5.320126533508301
    6. 'from' → logprob: -5.445126533508301
    7. 'INF' → logprob: -5.695126533508301
    8. '   ' → logprob: -5.820126533508301
    9. ' #' → logprob: -5.820126533508301
    10. '        
' → logprob: -5.945126533508301

Token 880: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21573899686336517
    2. '   ' → logprob: -1.9657390117645264
    3. 'def' → logprob: -3.9657390117645264
    4. 's' → logprob: -5.840738773345947
    5. 'import' → logprob: -5.840738773345947
    6. '    ' → logprob: -6.215738773345947
    7. ',' → logprob: -6.340738773345947
    8. '#' → logprob: -6.340738773345947
    9. '(s' → logprob: -6.340738773345947
    10. '```' → logprob: -6.340738773345947

Token 881: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4469192922115326
    2. 'dp' → logprob: -2.3219192028045654
    3. ' dp' → logprob: -2.8219192028045654
    4. '#' → logprob: -3.0719192028045654
    5. ' #' → logprob: -3.0719192028045654
    6. '   ' → logprob: -4.0719194412231445
    7. ' prev' → logprob: -4.3219194412231445
    8. '
' → logprob: -4.3219194412231445
    9. '        
' → logprob: -4.5719194412231445
    10. 'def' → logprob: -4.9469194412231445

Token 882: ' forward' (ID: 6687)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.7254693508148193
    2. 'vertical' → logprob: -2.1004693508148193
    3. 'the' → logprob: -2.2254693508148193
    4. ' vertical' → logprob: -2.3504693508148193
    5. 'books' → logprob: -2.9754693508148193
    6. '   ' → logprob: -3.1004693508148193
    7. ' all' → logprob: -3.2254693508148193
    8. 'she' → logprob: -3.2254693508148193
    9. ' movement' → logprob: -3.4754693508148193
    10. ' moving' → logprob: -3.7254693508148193

Token 883: ' walking' (ID: 15015)
  Prédit: ' walking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' walking' → logprob: -0.09754837304353714
    2. ' movement' → logprob: -2.847548484802246
    3. ' on' → logprob: -3.972548484802246
    4. '_' → logprob: -4.972548484802246
    5. ' moving' → logprob: -6.347548484802246
    6. ' direction' → logprob: -6.722548484802246
    7. '   ' → logprob: -6.847548484802246
    8. '-moving' → logprob: -7.097548484802246
    9. ' ' → logprob: -7.347548484802246
    10. 'movement' → logprob: -7.597548484802246

Token 884: ' only' (ID: 1606)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4422619640827179
    2. ' on' → logprob: -1.4422619342803955
    3. 'is' → logprob: -2.3172619342803955
    4. 'on' → logprob: -4.567262172698975
    5. ' only' → logprob: -5.192262172698975
    6. 'only' → logprob: -6.942262172698975
    7. ' was' → logprob: -7.192262172698975
    8. ' (' → logprob: -7.317262172698975
    9. ' ' → logprob: -7.442262172698975
    10. ')' → logprob: -8.067261695861816

Token 885: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5500867962837219
    2. ' is' → logprob: -1.6750867366790771
    3. 'on' → logprob: -2.425086736679077
    4. ',' → logprob: -3.675086736679077
    5. '<|end|>' → logprob: -3.800086736679077
    6. 'is' → logprob: -3.925086736679077
    7. '   ' → logprob: -4.175086975097656
    8. ' only' → logprob: -4.550086975097656
    9. '<|end|>' → logprob: -4.925086975097656
    10. ')' → logprob: -5.425086975097656

Token 886: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.503346860408783
    2. ' main' → logprob: -1.1283469200134277
    3. 'horizontal' → logprob: -3.5033469200134277
    4. ' intersections' → logprob: -4.003346920013428
    5. 'intersection' → logprob: -4.753346920013428
    6. 'inter' → logprob: -5.003346920013428
    7. ' horizontal' → logprob: -5.003346920013428
    8. ' intersection' → logprob: -7.128346920013428
    9. 'the' → logprob: -8.00334644317627
    10. ' the' → logprob: -9.62834644317627

Token 887: ' passages' (ID: 69047)
  Prédit: ' passages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passages' → logprob: -0.4554678499698639
    2. 'pass' → logprob: -1.5804678201675415
    3. '_pass' → logprob: -1.9554678201675415
    4. ' ' → logprob: -4.455467700958252
    5. '   ' → logprob: -5.580467700958252
    6. '_' → logprob: -6.955467700958252
    7. ' pass' → logprob: -7.205467700958252
    8. ' passage' → logprob: -7.705467700958252
    9. ' _' → logprob: -8.20546817779541
    10. ' ' → logprob: -8.70546817779541

Token 888: ',
' (ID: 412)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5090368390083313
    2. ' only' → logprob: -1.5090367794036865
    3. '(r' → logprob: -2.5090367794036865
    4. ',' → logprob: -3.6340367794036865
    5. ' on' → logprob: -3.6340367794036865
    6. '   ' → logprob: -4.384037017822266
    7. ' (' → logprob: -5.134037017822266
    8. 'is' → logprob: -5.259037017822266
    9. 'only' → logprob: -5.384037017822266
    10. ' must' → logprob: -5.759037017822266

Token 889: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05590255558490753
    2. '#' → logprob: -3.5559024810791016
    3. '        
' → logprob: -4.430902481079102
    4. ' and' → logprob: -5.805902481079102
    5. '   ' → logprob: -5.930902481079102
    6. ',' → logprob: -6.555902481079102
    7. '
' → logprob: -7.055902481079102
    8. ' but' → logprob: -7.180902481079102
    9. '           ' → logprob: -7.680902481079102
    10. '        ' → logprob: -7.930902481079102

Token 890: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3175257444381714
    2. '       ' → logprob: -1.3175257444381714
    3. '   ' → logprob: -6.067525863647461
    4. '        
' → logprob: -7.817525863647461
    5. 'for' → logprob: -8.317525863647461
    6. ' #' → logprob: -8.567525863647461
    7. ' and' → logprob: -8.567525863647461
    8. '           ' → logprob: -8.942525863647461
    9. 'and' → logprob: -9.192525863647461
    10. '
' → logprob: -9.192525863647461

Token 891: ' horizontal' (ID: 25511)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11627302318811417
    2. '       ' → logprob: -2.4912729263305664
    3. ' #' → logprob: -4.491272926330566
    4. '   ' → logprob: -5.616272926330566
    5. 'for' → logprob: -5.866272926330566
    6. ' for' → logprob: -5.991272926330566
    7. '
' → logprob: -6.991272926330566
    8. ' the' → logprob: -6.991272926330566
    9. 'the' → logprob: -7.116272926330566
    10. '        
' → logprob: -7.241272926330566

Token 892: ' movement' (ID: 12772)
  Prédit: ' movement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movement' → logprob: -0.14327435195446014
    2. ' walking' → logprob: -3.0182743072509766
    3. ' movements' → logprob: -3.5182743072509766
    4. 'movement' → logprob: -3.7682743072509766
    5. ' moves' → logprob: -4.018274307250977
    6. ' edges' → logprob: -5.393274307250977
    7. 'moves' → logprob: -6.268274307250977
    8. '   ' → logprob: -6.393274307250977
    9. ' ' → logprob: -6.768274307250977
    10. 'walking' → logprob: -7.143274307250977

Token 893: ' only' (ID: 1606)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6467972993850708
    2. ' only' → logprob: -1.3967972993850708
    3. ' is' → logprob: -2.6467971801757812
    4. 'only' → logprob: -3.0217971801757812
    5. 'on' → logprob: -3.1467971801757812
    6. 's' → logprob: -3.5217971801757812
    7. 'is' → logprob: -4.521797180175781
    8. '   ' → logprob: -5.021797180175781
    9. ' can' → logprob: -5.271797180175781
    10. 'from' → logprob: -5.521797180175781

Token 894: ' allowed' (ID: 9279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.240144968032837
    2. '       ' → logprob: -2.115144968032837
    3. ' =' → logprob: -2.365144968032837
    4. ')' → logprob: -2.490144968032837
    5. '<|end|>' → logprob: -2.490144968032837
    6. '
' → logprob: -2.990144968032837
    7. '=' → logprob: -3.115144968032837
    8. '<|end|>' → logprob: -3.490144968032837
    9. 'def' → logprob: -3.740144968032837
    10. ' on' → logprob: -3.990144968032837

Token 895: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0749648809432983
    2. '_' → logprob: -1.6999648809432983
    3. '   ' → logprob: -1.6999648809432983
    4. ')' → logprob: -3.199965000152588
    5. '        
' → logprob: -3.199965000152588
    6. '<|end|>' → logprob: -3.199965000152588
    7. ',' → logprob: -3.324965000152588
    8. '
' → logprob: -3.574965000152588
    9. ' ' → logprob: -4.324965000152588
    10. '=' → logprob: -4.449965000152588

Token 896: '->' (ID: 609)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.19548742473125458
    2. 'to' → logprob: -2.1954874992370605
    3. 'wards' → logprob: -3.3204874992370605
    4. ' ' → logprob: -4.4454874992370605
    5. '_to' → logprob: -4.8204874992370605
    6. 'ward' → logprob: -5.9454874992370605
    7. '_' → logprob: -6.4454874992370605
    8. '   ' → logprob: -6.9454874992370605
    9. ',' → logprob: -7.1954874992370605
    10. '-to' → logprob: -7.3204874992370605

Token 897: 'right' (ID: 2460)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6484459042549133
    2. 'right' → logprob: -1.7734458446502686
    3. ' to' → logprob: -1.8984458446502686
    4. ' right' → logprob: -2.1484458446502686
    5. '>' → logprob: -3.6484458446502686
    6. '->' → logprob: -4.648446083068848
    7. '=' → logprob: -6.648446083068848
    8. '_to' → logprob: -7.273446083068848
    9. '+' → logprob: -7.648446083068848
    10. 'rightarrow' → logprob: -7.773446083068848

Token 898: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14684560894966125
    2. '        
' → logprob: -2.771845579147339
    3. '
' → logprob: -3.021845579147339
    4. '   ' → logprob: -4.521845817565918
    5. '```' → logprob: -6.021845817565918
    6. ',' → logprob: -6.146845817565918
    7. '    
' → logprob: -6.646845817565918
    8. '        ' → logprob: -6.771845817565918
    9. '_' → logprob: -7.021845817565918
    10. '<|end|>' → logprob: -7.146845817565918

Token 899: ' intersections' (ID: 143513)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.5114611983299255
    2. 'main' → logprob: -2.0114612579345703
    3. ' intersections' → logprob: -2.5114612579345703
    4. 'inter' → logprob: -3.0114612579345703
    5. ' main' → logprob: -3.1364612579345703
    6. ' intersection' → logprob: -3.2614612579345703
    7. 'the' → logprob: -3.3864612579345703
    8. 'row' → logprob: -5.38646125793457
    9. 'same' → logprob: -5.76146125793457
    10. ' the' → logprob: -5.76146125793457

Token 900: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18787696957588196
    2. '
' → logprob: -2.0628769397735596
    3. '        
' → logprob: -3.8128769397735596
    4. '   ' → logprob: -4.312877178192139
    5. '```' → logprob: -6.312877178192139
    6. ':' → logprob: -6.562877178192139
    7. ',' → logprob: -6.687877178192139
    8. '    
' → logprob: -7.312877178192139
    9. '           ' → logprob: -7.812877178192139
    10. '        
        
' → logprob: -8.18787670135498

Token 901: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14655345678329468
    2. '<|end|>' → logprob: -2.6465535163879395
    3. '        
' → logprob: -3.5215535163879395
    4. '<|end|>' → logprob: -4.5215535163879395
    5. '
' → logprob: -4.7715535163879395
    6. '   ' → logprob: -5.7715535163879395
    7. ',' → logprob: -6.0215535163879395
    8. ' and' → logprob: -6.1465535163879395
    9. '```' → logprob: -6.2715535163879395
    10. '        
        
' → logprob: -6.5215535163879395

Token 902: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060993991792201996
    2. '
' → logprob: -3.8109939098358154
    3. '        
' → logprob: -3.8109939098358154
    4. 'dp' → logprob: -4.9359941482543945
    5. '   ' → logprob: -5.8109941482543945
    6. '```' → logprob: -7.1859941482543945
    7. 'def' → logprob: -7.9359941482543945
    8. '    
' → logprob: -8.435994148254395
    9. 'distance' → logprob: -8.435994148254395
    10. '#' (adapté à ' #') → logprob: -8.560994148254395

Token 903: ' Plan' (ID: 10867)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.039005931466817856
    2. '       ' → logprob: -4.414005756378174
    3. 'from' → logprob: -4.914005756378174
    4. '#' → logprob: -5.789005756378174
    5. 'pos' → logprob: -5.789005756378174
    6. 'visited' → logprob: -6.164005756378174
    7. 'DP' → logprob: -6.289005756378174
    8. '   ' → logprob: -6.539005756378174
    9. 'INF' → logprob: -6.664005756378174
    10. 'dist' → logprob: -6.664005756378174

Token 904: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2991224527359009
    2. '
' → logprob: -2.5491223335266113
    3. '   ' → logprob: -2.5491223335266113
    4. '        
' → logprob: -2.9241223335266113
    5. '    
' → logprob: -4.424122333526611
    6. ' 
' → logprob: -5.049122333526611
    7. ' =' → logprob: -5.049122333526611
    8. ':' → logprob: -5.299122333526611
    9. '        

' → logprob: -5.299122333526611
    10. ':
' → logprob: -6.424122333526611

Token 905: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06352043151855469
    2. '   ' → logprob: -2.8135204315185547
    3. '
' → logprob: -6.813520431518555
    4. '    
' → logprob: -8.813520431518555
    5. '        
' → logprob: -8.938520431518555
    6. '    ' → logprob: -9.313520431518555
    7. '```' → logprob: -10.313520431518555
    8. '           ' → logprob: -11.313520431518555
    9. '     ' → logprob: -11.813520431518555
    10. '#' → logprob: -11.813520431518555

Token 906: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10177064687013626
    2. ' dp' → logprob: -3.2267706394195557
    3. 'dp' → logprob: -3.6017706394195557
    4. '       ' → logprob: -3.6017706394195557
    5. ' for' → logprob: -6.851770877838135
    6. ' DP' → logprob: -7.476770877838135
    7. 'for' → logprob: -7.851770877838135
    8. 'DP' → logprob: -9.351770401000977
    9. '    ' → logprob: -9.601770401000977
    10. ' prev' → logprob: -10.226770401000977

Token 907: ' Since' (ID: 12265)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30981361865997314
    2. ' dp' → logprob: -1.8098136186599731
    3. '   ' → logprob: -3.3098134994506836
    4. ' for' → logprob: -3.9348134994506836
    5. 'for' → logprob: -4.309813499450684
    6. ' prev' → logprob: -4.684813499450684
    7. 'prev' → logprob: -5.059813499450684
    8. '       ' → logprob: -5.434813499450684
    9. ' DP' → logprob: -6.434813499450684
    10. 'DP' → logprob: -6.934813499450684

Token 908: ' shelves' (ID: 52049)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.4104001522064209
    2. 'N' → logprob: -1.910400152206421
    3. ' col' → logprob: -2.035400152206421
    4. ' the' → logprob: -4.285400390625
    5. '   ' → logprob: -4.410400390625
    6. 'col' → logprob: -4.785400390625
    7. ' she' → logprob: -5.160400390625
    8. 'the' → logprob: -5.910400390625
    9. ' for' → logprob: -6.410400390625
    10. 'she' → logprob: -6.410400390625

Token 909: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.2720234990119934
    2. '   ' → logprob: -2.6470234394073486
    3. '[' → logprob: -3.2720234394073486
    4. ' =' → logprob: -4.022023677825928
    5. 's' → logprob: -4.147023677825928
    6. ' (' → logprob: -4.147023677825928
    7. '[r' → logprob: -4.647023677825928
    8. ' s' → logprob: -4.772023677825928
    9. ' at' → logprob: -4.897023677825928
    10. '       ' → logprob: -5.022023677825928

Token 910: ' divided' (ID: 28261)
  Prédit: ' arranged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arranged' → logprob: -0.5895045399665833
    2. '   ' → logprob: -2.2145044803619385
    3. ' numbered' → logprob: -2.2145044803619385
    4. 'arr' → logprob: -2.8395044803619385
    5. ' linear' → logprob: -3.9645044803619385
    6. 'linear' → logprob: -3.9645044803619385
    7. 'stack' → logprob: -4.214504718780518
    8. ' ' → logprob: -4.964504718780518
    9. 'number' → logprob: -4.964504718780518
    10. '       ' → logprob: -5.089504718780518

Token 911: ' in' (ID: 306)
  Prédit: 'into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'into' → logprob: -0.8713977932929993
    2. ' into' → logprob: -0.9963977932929993
    3. '   ' → logprob: -1.9963977336883545
    4. ' by' → logprob: -3.7463977336883545
    5. 'by' → logprob: -3.9963977336883545
    6. '```' → logprob: -4.746397972106934
    7. 'in' → logprob: -5.121397972106934
    8. '       ' → logprob: -5.121397972106934
    9. ' in' → logprob: -5.746397972106934
    10. 'int' → logprob: -6.246397972106934

Token 912: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.5660619735717773
    2. '4' → logprob: -1.6910619735717773
    3. ' N' → logprob: -2.5660619735717773
    4. ' ' → logprob: -2.6910619735717773
    5. 'columns' → logprob: -2.6910619735717773
    6. ' columns' → logprob: -2.9410619735717773
    7. '   ' → logprob: -3.3160619735717773
    8. '0' → logprob: -3.4410619735717773
    9. 'col' → logprob: -3.6910619735717773
    10. ' parts' → logprob: -3.6910619735717773

Token 913: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2481307983398438
    2. 'columns' → logprob: -1.4981307983398438
    3. 'N' → logprob: -2.2481307983398438
    4. 'quarters' → logprob: -2.7481307983398438
    5. 'cols' → logprob: -2.8731307983398438
    6. 'col' → logprob: -3.1231307983398438
    7. '0' → logprob: -3.1231307983398438
    8. 'four' → logprob: -3.3731307983398438
    9. 'half' → logprob: -3.4981307983398438
    10. 's' → logprob: -3.4981307983398438

Token 914: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.033773522824048996
    2. '   ' → logprob: -4.783773422241211
    3. 'rows' → logprob: -4.783773422241211
    4. ' lines' → logprob: -5.158773422241211
    5. ' layers' → logprob: -5.658773422241211
    6. '
' → logprob: -6.158773422241211
    7. ' ' → logprob: -6.658773422241211
    8. '	rows' → logprob: -7.408773422241211
    9. ',' → logprob: -8.033773422241211
    10. ' levels' → logprob: -8.158773422241211

Token 915: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.519287109375
    2. '       ' → logprob: -1.894287109375
    3. ',' → logprob: -2.144287109375
    4. ' and' → logprob: -2.644287109375
    5. ':' → logprob: -4.519287109375
    6. '[' → logprob: -4.644287109375
    7. '
' → logprob: -5.269287109375
    8. '```' → logprob: -5.394287109375
    9. ' (' → logprob: -5.519287109375
    10. ':
' → logprob: -5.519287109375

Token 916: ' N' (ID: 478)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.873060941696167
    2. 'cols' → logprob: -1.623060941696167
    3. '4' → logprob: -1.748060941696167
    4. ' columns' → logprob: -2.373060941696167
    5. 'N' → logprob: -3.248060941696167
    6. ' cols' → logprob: -3.748060941696167
    7. ' ' → logprob: -4.248061180114746
    8. ' N' → logprob: -4.248061180114746
    9. '   ' → logprob: -4.498061180114746
    10. 'col' → logprob: -5.498061180114746

Token 917: ' columns' (ID: 15697)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3276575207710266
    2. ' columns' → logprob: -2.702657461166382
    3. 'columns' → logprob: -2.702657461166382
    4. '   ' → logprob: -3.202657461166382
    5. '```' → logprob: -4.202657699584961
    6. ' +' → logprob: -4.327657699584961
    7. '
' → logprob: -4.452657699584961
    8. ')' → logprob: -4.577657699584961
    9. '-' → logprob: -4.577657699584961
    10. '=' → logprob: -4.952657699584961

Token 918: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8413251638412476
    2. ',' → logprob: -1.3413251638412476
    3. '   ' → logprob: -1.4663251638412476
    4. '
' → logprob: -3.591325283050537
    5. ':' → logprob: -4.966325283050537
    6. '<|end|>' → logprob: -4.966325283050537
    7. ' =' → logprob: -5.341325283050537
    8. '+' → logprob: -5.466325283050537
    9. '```' → logprob: -5.841325283050537
    10. ' and' → logprob: -5.841325283050537

Token 919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026414142921566963
    2. '#' → logprob: -6.877641201019287
    3. '        
' → logprob: -7.127641201019287
    4. '   ' → logprob: -7.502641201019287
    5. '           ' → logprob: -9.252641677856445
    6. ',' → logprob: -10.627641677856445
    7. '
' → logprob: -11.127641677856445
    8. '```' → logprob: -11.127641677856445
    9. '        
        
' → logprob: -11.502641677856445
    10. '        ' → logprob: -11.627641677856445

Token 920: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38976651430130005
    2. '#' (adapté à ' #') → logprob: -1.1397664546966553
    3. '   ' → logprob: -6.014766693115234
    4. ' ' → logprob: -9.014766693115234
    5. '        
' → logprob: -9.264766693115234
    6. '           ' → logprob: -9.389766693115234
    7. ' #' → logprob: -9.889766693115234
    8. 'for' → logprob: -10.764766693115234
    9. '```' → logprob: -10.889766693115234
    10. '
' → logprob: -11.264766693115234

Token 921: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.729179859161377
    2. '#' → logprob: -1.854179859161377
    3. 'for' → logprob: -1.854179859161377
    4. '   ' → logprob: -2.229179859161377
    5. ' for' → logprob: -2.604179859161377
    6. ' #' → logprob: -4.854179859161377
    7. '
' → logprob: -5.354179859161377
    8. 'prev' → logprob: -5.979179859161377
    9. ' ' → logprob: -6.479179859161377
    10. '        
' → logprob: -6.729179859161377

Token 922: ' movement' (ID: 12772)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1526944637298584
    2. ' the' → logprob: -1.7776944637298584
    3. '#' → logprob: -2.2776944637298584
    4. ' for' → logprob: -2.5276944637298584
    5. '       ' → logprob: -2.7776944637298584
    6. 'the' → logprob: -2.9026944637298584
    7. 'for' → logprob: -3.1526944637298584
    8. ' we' → logprob: -3.1526944637298584
    9. ' there' → logprob: -3.7776944637298584
    10. ' #' → logprob: -4.0276947021484375

Token 923: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2254021167755127
    2. ' =' → logprob: -1.6004021167755127
    3. ' is' → logprob: -1.8504021167755127
    4. ' on' → logprob: -1.9754021167755127
    5. ' can' → logprob: -2.9754021167755127
    6. ' allowed' → logprob: -2.9754021167755127
    7. '=' → logprob: -3.9754021167755127
    8. ' between' → logprob: -4.100401878356934
    9. 'allowed' → logprob: -4.100401878356934
    10. ' only' → logprob: -4.850401878356934

Token 924: ' forward' (ID: 6687)
  Prédit: ' allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allowed' → logprob: -0.1788002997636795
    2. 'allowed' → logprob: -2.178800344467163
    3. ' is' → logprob: -4.678800106048584
    4. ' forward' → logprob: -4.803800106048584
    5. ' =' → logprob: -5.303800106048584
    6. '   ' → logprob: -5.428800106048584
    7. ' on' → logprob: -5.428800106048584
    8. ' right' → logprob: -5.553800106048584
    9. '_allowed' → logprob: -5.553800106048584
    10. '=' → logprob: -6.178800106048584

Token 925: ' horizontally' (ID: 113653)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.24367976188659668
    2. '   ' → logprob: -2.7436797618865967
    3. 'on' → logprob: -3.1186797618865967
    4. ',' → logprob: -3.4936797618865967
    5. ' and' → logprob: -4.118680000305176
    6. '       ' → logprob: -4.368680000305176
    7. ' (' → logprob: -4.368680000305176
    8. '(r' → logprob: -4.993680000305176
    9. ')' → logprob: -5.118680000305176
    10. ' in' → logprob: -5.368680000305176

Token 926: ' (' (ID: 350)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4974290430545807
    2. ' and' → logprob: -2.372429132461548
    3. ',' → logprob: -2.622429132461548
    4. '   ' → logprob: -2.747429132461548
    5. 'from' → logprob: -3.372429132461548
    6. 'on' → logprob: -3.747429132461548
    7. 'and' → logprob: -3.872429132461548
    8. '(r' → logprob: -3.997429132461548
    9. ' (' → logprob: -4.247428894042969
    10. ' only' → logprob: -4.247428894042969

Token 927: 'from' (ID: 2845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5989576578140259
    2. ' on' → logprob: -2.0989575386047363
    3. 'on' → logprob: -2.4739575386047363
    4. 'col' → logprob: -2.5989575386047363
    5. '   ' → logprob: -2.9739575386047363
    6. 'from' → logprob: -3.2239575386047363
    7. ' col' → logprob: -4.723957538604736
    8. '+' → logprob: -5.098957538604736
    9. ' from' → logprob: -5.223957538604736
    10. '1' → logprob: -5.348957538604736

Token 928: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.16404421627521515
    2. 'intersection' → logprob: -3.664044141769409
    3. ' col' → logprob: -3.789044141769409
    4. '0' → logprob: -3.789044141769409
    5. 'c' → logprob: -3.914044141769409
    6. 'r' → logprob: -4.039044380187988
    7. ' (' → logprob: -4.414044380187988
    8. 'row' → logprob: -4.914044380187988
    9. 'column' → logprob: -5.164044380187988
    10. '(' → logprob: -5.414044380187988

Token 929: ' to' (ID: 316)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3294331431388855
    2. ' +' → logprob: -1.8294332027435303
    3. '=' → logprob: -2.4544332027435303
    4. '+=' → logprob: -4.829432964324951
    5. ' +=' → logprob: -4.954432964324951
    6. ' to' → logprob: -5.079432964324951
    7. ')' → logprob: -5.329432964324951
    8. ' =' → logprob: -6.704432964324951
    9. '```' → logprob: -6.704432964324951
    10. ' <=' → logprob: -7.204432964324951

Token 930: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0788949653506279
    2. ' col' → logprob: -2.578894853591919
    3. 'c' → logprob: -12.95389461517334
    4. '```' → logprob: -14.32889461517334
    5. '	col' → logprob: -14.45389461517334
    6. 'colm' → logprob: -15.07889461517334
    7. '_col' → logprob: -15.20389461517334
    8. '(col' → logprob: -15.57889461517334
    9. '   ' → logprob: -15.70389461517334
    10. '`' → logprob: -15.70389461517334

Token 931: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004624868277460337
    2. ' +' → logprob: -5.379624843597412
    3. '1' → logprob: -13.75462532043457
    4. '+
' → logprob: -13.87962532043457
    5. '```' → logprob: -13.87962532043457
    6. '   ' → logprob: -14.25462532043457
    7. ')+' → logprob: -15.25462532043457
    8. '+i' → logprob: -15.75462532043457
    9. '++' → logprob: -15.87962532043457
    10. ')' → logprob: -16.37962532043457

Token 932: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -18.5
    5. ')' → logprob: -19.375
    6. '
' → logprob: -19.625
    7. '=' → logprob: -21.0
    8. '`' → logprob: -21.75
    9. '``' → logprob: -22.125
    10. ',' → logprob: -22.5

Token 933: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08679082244634628
    2. '       ' → logprob: -3.8367908000946045
    3. '   ' → logprob: -4.086791038513184
    4. '):
' → logprob: -4.086791038513184
    5. ',' → logprob: -4.711791038513184
    6. ' )' → logprob: -5.586791038513184
    7. ' on' → logprob: -6.086791038513184
    8. '```' → logprob: -6.086791038513184
    9. '+' → logprob: -6.461791038513184
    10. '),' → logprob: -6.711791038513184

Token 934: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018219824880361557
    2. '#' → logprob: -4.143219947814941
    3. '   ' → logprob: -7.518219947814941
    4. '           ' → logprob: -7.643219947814941
    5. ',' → logprob: -8.018219947814941
    6. ' and' → logprob: -8.143219947814941
    7. '```' → logprob: -8.518219947814941
    8. 'and' → logprob: -8.893219947814941
    9. '        
' → logprob: -9.768219947814941
    10. ' ' → logprob: -10.518219947814941

Token 935: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.16154088079929352
    2. '       ' → logprob: -1.9115408658981323
    3. '           ' → logprob: -7.286540985107422
    4. '   ' → logprob: -8.161540985107422
    5. 'and' → logprob: -9.161540985107422
    6. '        
' → logprob: -9.411540985107422
    7. ' #' → logprob: -10.411540985107422
    8. '```' → logprob: -10.536540985107422
    9. ' and' → logprob: -10.661540985107422
    10. ' ' → logprob: -10.786540985107422

Token 936: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2995968461036682
    2. '       ' → logprob: -1.4245967864990234
    3. '   ' → logprob: -4.299596786499023
    4. ' #' → logprob: -5.799596786499023
    5. 'for' → logprob: -7.674596786499023
    6. '
' → logprob: -8.424596786499023
    7. 'dp' → logprob: -8.424596786499023
    8. '        
' → logprob: -9.049596786499023
    9. ' for' → logprob: -9.174596786499023
    10. ' ' → logprob: -9.799596786499023

Token 937: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.5787741541862488
    2. ' vertical' → logprob: -0.8287741541862488
    3. '#' → logprob: -6.0787739753723145
    4. '   ' → logprob: -7.7037739753723145
    5. ' #' → logprob: -10.828774452209473
    6. 'she' → logprob: -11.703774452209473
    7. 'vert' → logprob: -11.703774452209473
    8. 'Vertical' → logprob: -12.203774452209473
    9. ' ' → logprob: -12.328774452209473
    10. '
' → logprob: -12.453774452209473

Token 938: ' movement' (ID: 12772)
  Prédit: ' movement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movement' → logprob: -0.04710005596280098
    2. 'movement' → logprob: -4.047100067138672
    3. ' movements' → logprob: -4.547100067138672
    4. ' moves' → logprob: -4.672100067138672
    5. '_move' → logprob: -6.047100067138672
    6. ' move' → logprob: -6.047100067138672
    7. '_' → logprob: -6.672100067138672
    8. '_moves' → logprob: -6.797100067138672
    9. 'moves' → logprob: -7.297100067138672
    10. ' ' → logprob: -8.297100067138672

Token 939: ' between' (ID: 2870)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.4900657832622528
    2. 'only' → logprob: -1.7400658130645752
    3. ' is' → logprob: -1.8650658130645752
    4. ' between' → logprob: -3.990065813064575
    5. 'is' → logprob: -4.740065574645996
    6. 'allowed' → logprob: -4.990065574645996
    7. '   ' → logprob: -4.990065574645996
    8. ' allowed' → logprob: -5.490065574645996
    9. ' at' → logprob: -5.615065574645996
    10. 'between' → logprob: -5.990065574645996

Token 940: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.15210643410682678
    2. ' rows' → logprob: -2.777106523513794
    3. ' intersections' → logprob: -3.902106523513794
    4. 'inter' → logprob: -4.152106285095215
    5. 'intersection' → logprob: -4.277106285095215
    6. 'adj' → logprob: -4.277106285095215
    7. 'row' → logprob: -4.652106285095215
    8. ' adjacent' → logprob: -5.652106285095215
    9. ' intersection' → logprob: -6.652106285095215
    10. ' row' → logprob: -7.902106285095215

Token 941: ' allowed' (ID: 9279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7268027663230896
    2. ' at' → logprob: -1.1018028259277344
    3. '=' → logprob: -3.3518028259277344
    4. ',' → logprob: -3.4768028259277344
    5. ' is' → logprob: -3.7268028259277344
    6. '       ' → logprob: -3.7268028259277344
    7. ' =' → logprob: -3.9768028259277344
    8. 'at' → logprob: -3.9768028259277344
    9. ' and' → logprob: -5.476802825927734
    10. ' only' → logprob: -5.601802825927734

Token 942: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4303409457206726
    2. ' at' → logprob: -1.5553410053253174
    3. ',' → logprob: -2.4303410053253174
    4. '```' → logprob: -4.555340766906738
    5. 'at' → logprob: -4.805340766906738
    6. '   ' → logprob: -5.055340766906738
    7. '        
' → logprob: -5.430340766906738
    8. ' (' → logprob: -5.680340766906738
    9. '[' → logprob: -6.180340766906738
    10. ' in' → logprob: -6.305340766906738

Token 943: ' each' (ID: 2454)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.22844962775707245
    2. 'inter' → logprob: -2.478449583053589
    3. ' intersections' → logprob: -2.978449583053589
    4. ' intersection' → logprob: -3.978449583053589
    5. 'same' → logprob: -4.228449821472168
    6. 'middle' → logprob: -4.353449821472168
    7. 'each' → logprob: -4.603449821472168
    8. 'the' → logprob: -5.353449821472168
    9. 's' → logprob: -6.478449821472168
    10. ' same' → logprob: -6.603449821472168

Token 944: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.4863812029361725
    2. ' col' → logprob: -1.36138117313385
    3. ' column' → logprob: -2.7363812923431396
    4. 'column' → logprob: -3.2363812923431396
    5. ' intersection' → logprob: -4.7363810539245605
    6. 'intersection' → logprob: -5.3613810539245605
    7. '   ' → logprob: -5.6113810539245605
    8. 'position' → logprob: -5.6113810539245605
    9. ' position' → logprob: -6.2363810539245605
    10. ' shelf' → logprob: -7.7363810539245605

Token 945: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6130837798118591
    2. ',' → logprob: -1.113083839416504
    3. ':' → logprob: -3.113083839416504
    4. '   ' → logprob: -3.863083839416504
    5. ' (' → logprob: -4.238083839416504
    6. '        
' → logprob: -4.613083839416504
    7. '=' → logprob: -4.738083839416504
    8. '
' → logprob: -4.988083839416504
    9. ' and' → logprob: -5.363083839416504
    10. ':
' → logprob: -5.863083839416504

Token 946: ' cost' (ID: 3097)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.4884328842163086
    2. 'cost' → logprob: -1.4884328842163086
    3. ' intersections' → logprob: -2.6134328842163086
    4. ' cost' → logprob: -3.3634328842163086
    5. ' intersection' → logprob: -3.7384328842163086
    6. 'inter' → logprob: -3.8634328842163086
    7. 'middle' → logprob: -6.238432884216309
    8. 's' → logprob: -6.738432884216309
    9. '0' → logprob: -6.863432884216309
    10. 'no' → logprob: -7.238432884216309

Token 947: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07020018249750137
    2. ' ' → logprob: -2.695200204849243
    3. '=' → logprob: -8.695199966430664
    4. ' =' → logprob: -9.570199966430664
    5. '   ' → logprob: -11.195199966430664
    6. '```' → logprob: -12.070199966430664
    7. '0' → logprob: -13.195199966430664
    8. '`' → logprob: -13.570199966430664
    9. '+' → logprob: -13.570199966430664
    10. ' ' → logprob: -14.445199966430664

Token 948: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. ' ' → logprob: -11.62501335144043
    3. '```' → logprob: -13.37501335144043
    4. '2' → logprob: -14.37501335144043
    5. '
' → logprob: -14.75001335144043
    6. '   ' → logprob: -14.87501335144043
    7. '0' → logprob: -15.12501335144043
    8. '=' → logprob: -15.50001335144043
    9. '`' → logprob: -15.75001335144043
    10. '``' → logprob: -16.06251335144043

Token 949: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0457271970808506
    2. '        
' → logprob: -4.170727252960205
    3. ',' → logprob: -4.295727252960205
    4. '
' → logprob: -5.170727252960205
    5. ' and' → logprob: -6.170727252960205
    6. '   ' → logprob: -6.170727252960205
    7. '           ' → logprob: -7.045727252960205
    8. ',
' → logprob: -7.045727252960205
    9. ':' → logprob: -7.045727252960205
    10. '<|end|>' → logprob: -7.795727252960205

Token 950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02912602759897709
    2. '#' → logprob: -3.779125928878784
    3. '        
' → logprob: -5.404126167297363
    4. '   ' → logprob: -7.904126167297363
    5. '           ' → logprob: -7.904126167297363
    6. '
' → logprob: -8.654126167297363
    7. '```' → logprob: -9.404126167297363
    8. ' and' → logprob: -9.779126167297363
    9. '    
' → logprob: -10.279126167297363
    10. 'import' → logprob: -10.279126167297363

Token 951: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06718751043081284
    2. '#' → logprob: -2.817187547683716
    3. '           ' → logprob: -6.192187309265137
    4. 'and' → logprob: -7.192187309265137
    5. ' and' → logprob: -7.317187309265137
    6. '   ' → logprob: -7.317187309265137
    7. ',' → logprob: -8.067187309265137
    8. '        
' → logprob: -9.067187309265137
    9. '        ' → logprob: -9.317187309265137
    10. '<|end|>' → logprob: -9.317187309265137

Token 952: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011515287915244699
    2. '   ' → logprob: -7.0011515617370605
    3. '        
' → logprob: -9.126151084899902
    4. 'import' → logprob: -9.751151084899902
    5. '#' → logprob: -10.876151084899902
    6. '
' → logprob: -11.251151084899902
    7. '    
' → logprob: -11.251151084899902
    8. 'def' → logprob: -12.126151084899902
    9. '           ' → logprob: -12.251151084899902
    10. '```' → logprob: -12.876151084899902

Token 953: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008208034560084343
    2. '
' → logprob: -5.25820779800415
    3. '        
' → logprob: -6.50820779800415
    4. '   ' → logprob: -7.25820779800415
    5. '#' (adapté à ' #') → logprob: -7.63320779800415
    6. '    
' → logprob: -9.508208274841309
    7. 'import' → logprob: -10.133208274841309
    8. '           ' → logprob: -10.633208274841309
    9. '```' → logprob: -10.633208274841309
    10. '     ' → logprob: -11.008208274841309

Token 954: ' The' (ID: 623)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5514019727706909
    2. '       ' → logprob: -1.176401972770691
    3. '   ' → logprob: -3.3014020919799805
    4. '#' → logprob: -3.4264020919799805
    5. 'dist' → logprob: -3.8014020919799805
    6. 'distance' → logprob: -4.4264020919799805
    7. 'def' → logprob: -5.1764020919799805
    8. 'for' → logprob: -6.4264020919799805
    9. 'prev' → logprob: -7.0514020919799805
    10. 'from' → logprob: -7.4264020919799805

Token 955: ' problem' (ID: 4792)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.195519208908081
    2. ' dp' → logprob: -1.195519208908081
    3. 'def' → logprob: -2.070519208908081
    4. '#' → logprob: -2.195519208908081
    5. ' next' → logprob: -3.195519208908081
    6. ' best' → logprob: -3.945519208908081
    7. '   ' → logprob: -4.19551944732666
    8. ' code' → logprob: -4.19551944732666
    9. ' DP' → logprob: -4.57051944732666
    10. ' def' → logprob: -5.07051944732666

Token 956: ' reduces' (ID: 38566)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3322218060493469
    2. ':' → logprob: -2.707221746444702
    3. '       ' → logprob: -2.957221746444702
    4. '<|end|>' → logprob: -3.207221746444702
    5. '```' → logprob: -3.582221746444702
    6. '#' → logprob: -3.832221746444702
    7. ' is' → logprob: -4.207221984863281
    8. 'def' → logprob: -4.332221984863281
    9. '<|end|>' → logprob: -4.582221984863281
    10. 'is' → logprob: -5.457221984863281

Token 957: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.16284722089767456
    2. ' to' → logprob: -1.9128472805023193
    3. '   ' → logprob: -6.41284704208374
    4. '       ' → logprob: -7.16284704208374
    5. '```' → logprob: -9.412847518920898
    6. ' into' → logprob: -10.537847518920898
    7. 'def' → logprob: -10.537847518920898
    8. '_to' → logprob: -10.662847518920898
    9. 'into' → logprob: -10.912847518920898
    10. '=' → logprob: -11.662847518920898

Token 958: ':
' (ID: 734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9986507892608643
    2. 'dynamic' → logprob: -1.2486507892608643
    3. 'DP' → logprob: -2.1236507892608643
    4. ' dynamic' → logprob: -2.6236507892608643
    5. 'def' → logprob: -2.7486507892608643
    6. 'finding' → logprob: -2.8736507892608643
    7. '```' → logprob: -5.123650550842285
    8. ' DP' → logprob: -5.123650550842285
    9. 'a' → logprob: -5.248650550842285
    10. ' dp' → logprob: -5.748650550842285

Token 959: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007096902118064463
    2. '#' → logprob: -8.750709533691406
    3. '   ' → logprob: -8.750709533691406
    4. '        
' → logprob: -9.250709533691406
    5. 'def' → logprob: -9.625709533691406
    6. 'import' → logprob: -9.750709533691406
    7. '```' → logprob: -9.875709533691406
    8. 'from' → logprob: -10.250709533691406
    9. '        ' → logprob: -10.750709533691406
    10. '
' → logprob: -11.125709533691406

Token 960: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028196170926094055
    2. '#' → logprob: -3.903196096420288
    3. '   ' → logprob: -6.028196334838867
    4. ' #' → logprob: -6.653196334838867
    5. '        
' → logprob: -7.528196334838867
    6. ' for' → logprob: -7.653196334838867
    7. 'def' → logprob: -7.778196334838867
    8. '    ' → logprob: -7.903196334838867
    9. '        ' → logprob: -7.903196334838867
    10. 'for' → logprob: -7.903196334838867

Token 961: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010653731413185596
    2. '   ' → logprob: -4.760653495788574
    3. '#' → logprob: -6.385653495788574
    4. '        
' → logprob: -9.010653495788574
    5. 'from' → logprob: -9.635653495788574
    6. 'import' → logprob: -9.760653495788574
    7. '    
' → logprob: -11.010653495788574
    8. 'def' → logprob: -11.385653495788574
    9. '    ' → logprob: -11.385653495788574
    10. '```' → logprob: -11.510653495788574

Token 962: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029056893661618233
    2. '#' (adapté à ' #') → logprob: -3.7790567874908447
    3. '   ' → logprob: -5.279057025909424
    4. 'for' → logprob: -8.279056549072266
    5. '```' → logprob: -8.779056549072266
    6. '        
' → logprob: -9.529056549072266
    7. 'from' → logprob: -10.029056549072266
    8. 'def' → logprob: -10.154056549072266
    9. ' #' → logprob: -10.654056549072266
    10. '           ' → logprob: -10.779056549072266

Token 963: ' At' (ID: 3604)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2293623685836792
    2. '#' → logprob: -2.2293624877929688
    3. 'from' → logprob: -3.4793624877929688
    4. '   ' → logprob: -4.354362487792969
    5. 'for' → logprob: -4.354362487792969
    6. '       ' → logprob: -4.854362487792969
    7. ' dp' → logprob: -5.104362487792969
    8. 'prev' → logprob: -5.104362487792969
    9. 'DP' → logprob: -5.479362487792969
    10. 'import' → logprob: -5.479362487792969

Token 964: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.09210380911827087
    2. ' each' → logprob: -2.5921037197113037
    3. 'col' → logprob: -4.592103958129883
    4. 'column' → logprob: -6.092103958129883
    5. ' col' → logprob: -8.467103958129883
    6. 'position' → logprob: -8.717103958129883
    7. ' column' → logprob: -8.967103958129883
    8. 'for' → logprob: -9.592103958129883
    9. 'the' → logprob: -10.967103958129883
    10. ' position' → logprob: -10.967103958129883

Token 965: ' column' (ID: 6000)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.9275203943252563
    2. ' column' → logprob: -1.1775203943252563
    3. 'col' → logprob: -1.5525203943252563
    4. 'column' → logprob: -2.552520275115967
    5. '   ' → logprob: -5.427520275115967
    6. ' step' → logprob: -6.677520275115967
    7. ' position' → logprob: -8.427520751953125
    8. ' ' → logprob: -8.802520751953125
    9. ' vertical' → logprob: -8.802520751953125
    10. 'position' → logprob: -9.052520751953125

Token 966: ' c' (ID: 274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32126379013061523
    2. ' ,' → logprob: -1.8212637901306152
    3. ':' → logprob: -3.1962637901306152
    4. '   ' → logprob: -3.3212637901306152
    5. ' (' → logprob: -4.321263790130615
    6. ' in' → logprob: -4.821263790130615
    7. ' =' → logprob: -5.446263790130615
    8. ' :' → logprob: -5.696263790130615
    9. ' ' → logprob: -6.446263790130615
    10. '    ' → logprob: -7.321263790130615

Token 967: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6123160719871521
    2. ',' → logprob: -1.3623161315917969
    3. '   ' → logprob: -3.112316131591797
    4. ' =' → logprob: -3.112316131591797
    5. ':
' → logprob: -3.737316131591797
    6. ' :' → logprob: -4.112316131591797
    7. '+' → logprob: -4.362316131591797
    8. ' +' → logprob: -4.487316131591797
    9. '):' → logprob: -4.862316131591797
    10. '
' → logprob: -4.987316131591797

Token 968: '0' (ID: 15)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6896147727966309
    2. ' =' → logprob: -2.564614772796631
    3. '):' → logprob: -2.564614772796631
    4. ')' → logprob: -2.939614772796631
    5. '=' → logprob: -2.939614772796631
    6. '0' → logprob: -3.064614772796631
    7. '   ' → logprob: -3.189614772796631
    8. '),' → logprob: -3.314614772796631
    9. '):
' → logprob: -3.689614772796631
    10. ',' → logprob: -3.939614772796631

Token 969: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.8806067705154419
    2. '...' → logprob: -1.630606770515442
    3. ',' → logprob: -2.1306066513061523
    4. ' to' → logprob: -2.3806066513061523
    5. '
' → logprob: -2.7556066513061523
    6. ')' → logprob: -3.6306066513061523
    7. '   ' → logprob: -4.005606651306152
    8. 'to' → logprob: -4.505606651306152
    9. ' ...' → logprob: -4.755606651306152
    10. ' ' → logprob: -4.880606651306152

Token 970: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006137107033282518
    2. ' N' → logprob: -5.256136894226074
    3. '1' → logprob: -7.506136894226074
    4. '4' → logprob: -8.506136894226074
    5. ' ' → logprob: -10.006136894226074
    6. ')' → logprob: -10.256136894226074
    7. '   ' → logprob: -10.631136894226074
    8. 'c' → logprob: -11.006136894226074
    9. '`' → logprob: -12.256136894226074
    10. '```' → logprob: -12.506136894226074

Token 971: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6307255625724792
    2. '):
' → logprob: -0.8807255625724792
    3. '+' → logprob: -4.005725383758545
    4. ')' → logprob: -4.255725383758545
    5. '   ' → logprob: -4.630725383758545
    6. '-' → logprob: -5.255725383758545
    7. '       ' → logprob: -6.630725383758545
    8. '),' → logprob: -6.755725383758545
    9. '):

' → logprob: -6.880725383758545
    10. '
' → logprob: -7.755725383758545

Token 972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026657404378056526
    2. '        
' → logprob: -4.901657581329346
    3. '    ' → logprob: -5.026657581329346
    4. '        ' → logprob: -5.151657581329346
    5. '   ' → logprob: -5.526657581329346
    6. ',' → logprob: -7.401657581329346
    7. '           ' → logprob: -8.026657104492188
    8. '<|end|>' → logprob: -8.526657104492188
    9. '      ' → logprob: -8.776657104492188
    10. '    
' → logprob: -8.776657104492188

Token 973: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010780507698655128
    2. '   ' → logprob: -5.635780334472656
    3. '        
' → logprob: -6.010780334472656
    4. '    ' → logprob: -6.385780334472656
    5. '        ' → logprob: -6.760780334472656
    6. '           ' → logprob: -7.635780334472656
    7. ' for' → logprob: -8.010780334472656
    8. ',' → logprob: -8.760780334472656
    9. '     ' → logprob: -9.010780334472656
    10. '      ' → logprob: -9.260780334472656

Token 974: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0333402082324028
    2. '   ' → logprob: -4.158339977264404
    3. ' for' → logprob: -5.658339977264404
    4. '        
' → logprob: -5.783339977264404
    5. '    ' → logprob: -6.033339977264404
    6. '        ' → logprob: -6.783339977264404
    7. 'for' → logprob: -6.908339977264404
    8. '
' → logprob: -7.533339977264404
    9. 'dp' → logprob: -7.533339977264404
    10. ' dp' → logprob: -7.533339977264404

Token 975: ' She' (ID: 3627)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6025088429450989
    2. 'dp' → logprob: -1.977508783340454
    3. 'for' → logprob: -2.977508783340454
    4. ' #' → logprob: -2.977508783340454
    5. '       ' → logprob: -3.352508783340454
    6. '   ' → logprob: -3.352508783340454
    7. ' dp' → logprob: -3.602508783340454
    8. ' best' → logprob: -3.852508783340454
    9. ' for' → logprob: -3.977508783340454
    10. 'best' → logprob: -4.352509021759033

Token 976: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4489996135234833
    2. ' can' → logprob: -1.4489996433258057
    3. '   ' → logprob: -2.3239996433258057
    4. ' must' → logprob: -5.073999404907227
    5. ' ' → logprob: -5.698999404907227
    6. '=' → logprob: -5.698999404907227
    7. '    ' → logprob: -6.073999404907227
    8. ',' → logprob: -6.073999404907227
    9. '       ' → logprob: -6.198999404907227
    10. ' +=' → logprob: -6.823999404907227

Token 977: ' move' (ID: 5275)
  Prédit: 'stand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stand' → logprob: -1.1328383684158325
    2. ' stand' → logprob: -1.2578383684158325
    3. ' be' → logprob: -2.382838249206543
    4. 'move' → logprob: -2.632838249206543
    5. 'choose' → logprob: -2.757838249206543
    6. 'stay' → logprob: -2.882838249206543
    7. 'be' → logprob: -3.257838249206543
    8. ' move' → logprob: -3.507838249206543
    9. ' stay' → logprob: -4.132838249206543
    10. ' choose' → logprob: -5.507838249206543

Token 978: ' vertically' (ID: 94774)
  Prédit: 'vert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vert' → logprob: -0.7120354175567627
    2. ' vertically' → logprob: -1.2120354175567627
    3. ' up' → logprob: -2.3370354175567627
    4. 'up' → logprob: -2.7120354175567627
    5. ' only' → logprob: -4.087035179138184
    6. ' between' → logprob: -4.837035179138184
    7. '   ' → logprob: -5.087035179138184
    8. 'only' → logprob: -5.212035179138184
    9. 'between' → logprob: -5.962035179138184
    10. '_vert' → logprob: -6.462035179138184

Token 979: ' along' (ID: 4251)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.6039625406265259
    2. 'between' → logprob: -2.2289624214172363
    3. ' up' → logprob: -2.3539624214172363
    4. '   ' → logprob: -2.7289624214172363
    5. ' to' → logprob: -2.7289624214172363
    6. 'to' → logprob: -4.103962421417236
    7. ' among' → logprob: -4.353962421417236
    8. 'up' → logprob: -4.353962421417236
    9. ' (' → logprob: -4.478962421417236
    10. '       ' → logprob: -4.603962421417236

Token 980: ' intersections' (ID: 143513)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.9656745791435242
    2. ' the' → logprob: -1.340674638748169
    3. 'rows' → logprob: -1.340674638748169
    4. 'the' → logprob: -2.465674638748169
    5. 'row' → logprob: -6.21567440032959
    6. 'r' → logprob: -6.84067440032959
    7. '   ' → logprob: -6.84067440032959
    8. ' each' → logprob: -6.96567440032959
    9. 'range' → logprob: -7.09067440032959
    10. ' row' → logprob: -7.34067440032959

Token 981: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.155683159828186
    2. '   ' → logprob: -1.655683159828186
    3. ',' → logprob: -2.1556830406188965
    4. ' (' → logprob: -2.6556830406188965
    5. ' for' → logprob: -2.7806830406188965
    6. ' to' → logprob: -3.0306830406188965
    7. ' at' → logprob: -3.2806830406188965
    8. ' and' → logprob: -3.7806830406188965
    9. 'for' → logprob: -3.9056830406188965
    10. '<|end|>' → logprob: -3.9056830406188965

Token 982: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.014461515471339226
    2. ' rows' → logprob: -4.764461517333984
    3. '0' → logprob: -5.389461517333984
    4. 'row' → logprob: -8.139461517333984
    5. '```' → logprob: -8.264461517333984
    6. 'the' → logprob: -8.639461517333984
    7. 'r' → logprob: -9.014461517333984
    8. 'adj' → logprob: -9.264461517333984
    9. 'different' → logprob: -9.389461517333984
    10. '[' → logprob: -9.639461517333984

Token 983: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38167479634284973
    2. ',' → logprob: -2.2566747665405273
    3. '<|end|>' → logprob: -2.6316747665405273
    4. ' at' → logprob: -2.8816747665405273
    5. '   ' → logprob: -3.3816747665405273
    6. ' to' → logprob: -5.006674766540527
    7. '<|end|>' → logprob: -5.006674766540527
    8. ' and' → logprob: -5.131674766540527
    9. ' for' → logprob: -5.256674766540527
    10. ' (' → logprob: -5.506674766540527

Token 984: 'cost' (ID: 33457)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12962649762630463
    2. 'range' → logprob: -2.879626512527466
    3. ' ' → logprob: -4.004626274108887
    4. '   ' → logprob: -4.379626274108887
    5. 'for' → logprob: -4.504626274108887
    6. '4' → logprob: -5.254626274108887
    7. ' range' → logprob: -5.504626274108887
    8. 'r' → logprob: -5.629626274108887
    9. ' for' → logprob: -5.879626274108887
    10. 'rows' → logprob: -6.129626274108887

Token 985: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6588752865791321
    2. ' ' → logprob: -0.7838752865791321
    3. ' =' → logprob: -4.533875465393066
    4. '=' → logprob: -4.908875465393066
    5. '   ' → logprob: -5.158875465393066
    6. ' +' → logprob: -7.033875465393066
    7. '+' → logprob: -8.283875465393066
    8. ' +=' → logprob: -8.283875465393066
    9. 's' → logprob: -9.033875465393066
    10. ' of' → logprob: -9.533875465393066

Token 986: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012849947670474648
    2. '4' → logprob: -7.501285076141357
    3. '=' → logprob: -8.6262845993042
    4. '
' → logprob: -9.1262845993042
    5. '0' → logprob: -9.5012845993042
    6. 'abs' → logprob: -9.5012845993042
    7. '```' → logprob: -9.7512845993042
    8. ' ' → logprob: -9.8762845993042
    9. 'for' → logprob: -10.0012845993042
    10. 'r' → logprob: -10.1262845993042

Token 987: ' each' (ID: 2454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2184227555990219
    2. '       ' → logprob: -2.7184226512908936
    3. '   ' → logprob: -2.8434226512908936
    4. ',' → logprob: -3.0934226512908936
    5. ' for' → logprob: -5.093422889709473
    6. ' at' → logprob: -5.968422889709473
    7. '    ' → logprob: -6.218422889709473
    8. ' and' → logprob: -6.218422889709473
    9. 'for' → logprob: -6.218422889709473
    10. ' )' → logprob: -6.468422889709473

Token 988: ' step' (ID: 5983)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0974512100219727
    2. ' line' → logprob: -1.4724512100219727
    3. 'line' → logprob: -2.2224512100219727
    4. 'row' → logprob: -2.5974512100219727
    5. ' step' → logprob: -3.3474512100219727
    6. 'step' → logprob: -3.4724512100219727
    7. '   ' → logprob: -3.8474512100219727
    8. 'move' → logprob: -3.8474512100219727
    9. ' move' → logprob: -3.9724512100219727
    10. 'increment' → logprob: -4.347451210021973

Token 989: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5607563257217407
    2. '       ' → logprob: -1.0607563257217407
    3. ',' → logprob: -3.185756206512451
    4. '   ' → logprob: -4.185756206512451
    5. ' at' → logprob: -5.185756206512451
    6. '.' → logprob: -5.810756206512451
    7. ' for' → logprob: -5.935756206512451
    8. '),' → logprob: -6.185756206512451
    9. '           ' → logprob: -6.310756206512451
    10. '...' → logprob: -6.685756206512451

Token 990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00514267710968852
    2. '           ' → logprob: -6.630142688751221
    3. ',' → logprob: -6.755142688751221
    4. '   ' → logprob: -6.755142688751221
    5. '#' → logprob: -7.755142688751221
    6. '<|end|>' → logprob: -8.255142211914062
    7. ')' → logprob: -8.505142211914062
    8. ' and' → logprob: -8.755142211914062
    9. '        ' → logprob: -9.505142211914062
    10. '        
' → logprob: -9.880142211914062

Token 991: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03946271166205406
    2. '           ' → logprob: -4.289462566375732
    3. ',' → logprob: -4.914462566375732
    4. '   ' → logprob: -5.664462566375732
    5. ' and' → logprob: -5.664462566375732
    6. ')' → logprob: -5.789462566375732
    7. '               ' → logprob: -6.914462566375732
    8. '        
' → logprob: -6.914462566375732
    9. '<|end|>' → logprob: -7.164462566375732
    10. '#' → logprob: -7.289462566375732

Token 992: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001011015148833394
    2. '<|end|>' → logprob: -7.876010894775391
    3. '           ' → logprob: -8.50101089477539
    4. '   ' → logprob: -8.75101089477539
    5. '        ' → logprob: -9.25101089477539
    6. '<|end|>' → logprob: -10.00101089477539
    7. '	' → logprob: -10.75101089477539
    8. '        
' → logprob: -11.00101089477539
    9. '#' → logprob: -11.37601089477539
    10. '```' → logprob: -11.50101089477539

Token 993: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003384103300049901
    2. '#' (adapté à ' #') → logprob: -6.253384113311768
    3. '   ' → logprob: -7.003384113311768
    4. '        
' → logprob: -8.00338363647461
    5. '           ' → logprob: -9.75338363647461
    6. '        ' → logprob: -10.12838363647461
    7. 'for' → logprob: -10.87838363647461
    8. 'import' → logprob: -11.25338363647461
    9. '```' → logprob: -11.50338363647461
    10. '      ' → logprob: -11.87838363647461

Token 994: ' Moving' (ID: 52443)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13197650015354156
    2. 'for' → logprob: -2.88197660446167
    3. '   ' → logprob: -3.25697660446167
    4. '#' → logprob: -4.00697660446167
    5. ' for' → logprob: -5.38197660446167
    6. '        
' → logprob: -6.88197660446167
    7. 'For' → logprob: -7.38197660446167
    8. '           ' → logprob: -7.38197660446167
    9. 'def' → logprob: -7.50697660446167
    10. '        ' → logprob: -7.50697660446167

Token 995: ' from' (ID: 591)
  Prédit: 'vert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vert' → logprob: -0.46374237537384033
    2. ' vertically' → logprob: -2.088742256164551
    3. 'h' → logprob: -2.213742256164551
    4. ' horizontally' → logprob: -3.213742256164551
    5. ' forward' → logprob: -3.588742256164551
    6. 'forward' → logprob: -3.963742256164551
    7. 'right' → logprob: -4.088742256164551
    8. '   ' → logprob: -4.588742256164551
    9. 'from' → logprob: -5.213742256164551
    10. ' on' → logprob: -5.338742256164551

Token 996: ' col' (ID: 996)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.0054905833676457405
    2. ' intersection' → logprob: -5.505490779876709
    3. 'col' → logprob: -7.255490779876709
    4. '(c' → logprob: -8.25549030303955
    5. '(r' → logprob: -8.75549030303955
    6. 'inter' → logprob: -9.50549030303955
    7. 'column' → logprob: -10.13049030303955
    8. 'row' → logprob: -10.38049030303955
    9. ' (' → logprob: -10.38049030303955
    10. '(' → logprob: -10.38049030303955

Token 997: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.49261802434921265
    2. ' to' → logprob: -1.2426180839538574
    3. 'to' → logprob: -3.1176180839538574
    4. '+' → logprob: -3.3676180839538574
    5. ' c' → logprob: -4.617618083953857
    6. '   ' → logprob: -5.367618083953857
    7. '_to' → logprob: -5.992618083953857
    8. '=' → logprob: -6.617618083953857
    9. ' +' → logprob: -6.867618083953857
    10. ' ' → logprob: -7.617618083953857

Token 998: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03843607380986214
    2. 'to' → logprob: -3.2884361743927
    3. ' ' → logprob: -7.913435935974121
    4. '   ' → logprob: -11.288435935974121
    5. '+' → logprob: -11.788435935974121
    6. '	to' → logprob: -13.163435935974121
    7. '  ' → logprob: -13.538435935974121
    8. ' (' → logprob: -13.663435935974121
    9. '    ' → logprob: -14.413435935974121
    10. ')' → logprob: -14.413435935974121

Token 999: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14333859086036682
    2. 'col' → logprob: -2.018338680267334
    3. ' c' → logprob: -8.143338203430176
    4. ' col' → logprob: -8.643338203430176
    5. 'intersection' → logprob: -8.893338203430176
    6. '```' → logprob: -11.268338203430176
    7. 'inter' → logprob: -11.643338203430176
    8. 'column' → logprob: -11.768338203430176
    9. 'cation' → logprob: -11.768338203430176
    10. '   ' → logprob: -12.018338203430176

Token 1000: '+' (ID: 10)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5817161202430725
    2. '+' → logprob: -0.8317161202430725
    3. ' c' → logprob: -5.331716060638428
    4. '+c' → logprob: -7.581716060638428
    5. '```' → logprob: -8.956716537475586
    6. ' +' → logprob: -9.081716537475586
    7. '   ' → logprob: -9.331716537475586
    8. ' ' → logprob: -10.331716537475586
    9. '1' → logprob: -11.081716537475586
    10. '++' → logprob: -11.706716537475586

Token 1001: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -16.000011444091797
    4. '+' → logprob: -18.375011444091797
    5. '   ' → logprob: -18.500011444091797
    6. '
' → logprob: -18.625011444091797
    7. '  ' → logprob: -19.875011444091797
    8. '`' → logprob: -20.125011444091797
    9. ')' → logprob: -20.375011444091797
    10. '0' → logprob: -20.375011444091797

Token 1002: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7999511957168579
    2. ' at' → logprob: -1.424951195716858
    3. ' (' → logprob: -2.0499510765075684
    4. '(r' → logprob: -2.1749510765075684
    5. ':' → logprob: -4.549951076507568
    6. ',' → logprob: -4.549951076507568
    7. '   ' → logprob: -4.674951076507568
    8. ':
' → logprob: -4.674951076507568
    9. ')' → logprob: -5.299951076507568
    10. '(' → logprob: -5.299951076507568

Token 1003: ' same' (ID: 2684)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.3833559453487396
    2. ' intersection' → logprob: -1.258355975151062
    3. ' intersections' → logprob: -3.7583558559417725
    4. 'the' → logprob: -5.633356094360352
    5. ' the' → logprob: -5.883356094360352
    6. 'inter' → logprob: -6.633356094360352
    7. ' same' → logprob: -6.633356094360352
    8. 'same' → logprob: -6.883356094360352
    9. 'row' → logprob: -8.008356094360352
    10. '   ' → logprob: -9.008356094360352

Token 1004: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.3166072368621826
    2. ' row' → logprob: -1.8166072368621826
    3. ',' → logprob: -3.4416072368621826
    4. '(row' → logprob: -3.6916072368621826
    5. '   ' → logprob: -3.8166072368621826
    6. '```' → logprob: -4.941607475280762
    7. '_row' → logprob: -5.066607475280762
    8. ' ,' → logprob: -5.191607475280762
    9. ',row' → logprob: -5.816607475280762
    10. ' ' → logprob: -6.816607475280762

Token 1005: ' cost' (ID: 3097)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.747266411781311
    2. '(r' → logprob: -2.1222662925720215
    3. '(' → logprob: -2.2472662925720215
    4. ')' → logprob: -2.6222662925720215
    5. ',' → logprob: -2.9972662925720215
    6. '       ' → logprob: -3.2472662925720215
    7. ' cost' → logprob: -3.4972662925720215
    8. '(cost' → logprob: -3.4972662925720215
    9. '   ' → logprob: -3.9972662925720215
    10. ' +' → logprob: -4.6222662925720215

Token 1006: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4932260513305664
    2. ' =' → logprob: -1.3682260513305664
    3. '=' → logprob: -2.2432260513305664
    4. ' ' → logprob: -3.6182260513305664
    5. '   ' → logprob: -6.493226051330566
    6. '```' → logprob: -8.493226051330566
    7. '    ' → logprob: -9.868226051330566
    8. '`' → logprob: -10.618226051330566
    9. 's' → logprob: -11.993226051330566
    10. ' +' → logprob: -12.118226051330566

Token 1007: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10164531320333481
    2. '=' → logprob: -2.4766452312469482
    3. ' =' → logprob: -4.601645469665527
    4. ' ' → logprob: -5.976645469665527
    5. '   ' → logprob: -10.351645469665527
    6. '```' → logprob: -11.351645469665527
    7. '+' → logprob: -13.476645469665527
    8. ')' → logprob: -13.726645469665527
    9. ' +=' → logprob: -13.851645469665527
    10. '`' → logprob: -13.976645469665527

Token 1008: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06297367066144943
    2. '<|end|>' → logprob: -4.187973499298096
    3. '        
' → logprob: -4.312973499298096
    4. '
' → logprob: -4.687973499298096
    5. ',' → logprob: -4.937973499298096
    6. '           ' → logprob: -5.437973499298096
    7. '<|end|>' → logprob: -5.812973499298096
    8. ')' → logprob: -6.312973499298096
    9. '   ' → logprob: -6.812973499298096
    10. '        ' → logprob: -7.062973499298096

Token 1009: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011068337596952915
    2. '#' → logprob: -5.761068344116211
    3. '        
' → logprob: -6.136068344116211
    4. ',' → logprob: -6.136068344116211
    5. '<|end|>' → logprob: -7.011068344116211
    6. '           ' → logprob: -7.261068344116211
    7. '```' → logprob: -7.511068344116211
    8. '   ' → logprob: -7.761068344116211
    9. '<|end|>' → logprob: -9.011068344116211
    10. ' and' → logprob: -9.636068344116211

Token 1010: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011742481961846352
    2. ',' → logprob: -5.38674259185791
    3. '        
' → logprob: -6.13674259185791
    4. '           ' → logprob: -6.51174259185791
    5. '#' → logprob: -7.51174259185791
    6. '        ' → logprob: -7.63674259185791
    7. '
' → logprob: -7.76174259185791
    8. '   ' → logprob: -7.76174259185791
    9. '```' → logprob: -8.38674259185791
    10. '<|end|>' → logprob: -8.38674259185791

Token 1011: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007575631141662598
    2. '#' → logprob: -5.007575511932373
    3. '        
' → logprob: -7.757575511932373
    4. '   ' → logprob: -8.757575988769531
    5. '           ' → logprob: -9.007575988769531
    6. '#
' → logprob: -10.382575988769531
    7. '        ' → logprob: -10.632575988769531
    8. '      ' → logprob: -10.882575988769531
    9. '     ' → logprob: -11.882575988769531
    10. '```' → logprob: -11.882575988769531

Token 1012: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06436918675899506
    2. '#' (adapté à ' #') → logprob: -2.8143692016601562
    3. '
' → logprob: -7.064369201660156
    4. '        
' → logprob: -7.314369201660156
    5. '   ' → logprob: -7.939369201660156
    6. '#
' → logprob: -8.689369201660156
    7. 'for' → logprob: -8.814369201660156
    8. 'import' → logprob: -9.564369201660156
    9. '           ' → logprob: -10.689369201660156
    10. '```' → logprob: -10.939369201660156

Token 1013: ' To' (ID: 2514)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7112193703651428
    2. 'dp' → logprob: -0.9612193703651428
    3. 'dist' → logprob: -3.211219310760498
    4. '       ' → logprob: -3.211219310760498
    5. 'import' → logprob: -4.211219310760498
    6. '   ' → logprob: -5.336219310760498
    7. 'prev' → logprob: -5.586219310760498
    8. 'cost' → logprob: -5.711219310760498
    9. 'At' → logprob: -5.961219310760498
    10. 'vertical' → logprob: -6.086219310760498

Token 1014: ' put' (ID: 3006)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.9363676905632019
    2. 'continue' → logprob: -1.8113677501678467
    3. 'complete' → logprob: -2.0613677501678467
    4. 'put' → logprob: -2.4363677501678467
    5. 'move' → logprob: -2.5613677501678467
    6. ' complete' → logprob: -3.9363677501678467
    7. ' solve' → logprob: -4.186367511749268
    8. ' move' → logprob: -4.186367511749268
    9. 'reach' → logprob: -4.311367511749268
    10. 'col' → logprob: -4.436367511749268

Token 1015: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25986650586128235
    2. 'all' → logprob: -2.25986647605896
    3. ' a' → logprob: -3.00986647605896
    4. 'books' → logprob: -3.63486647605896
    5. 'book' → logprob: -3.63486647605896
    6. ' all' → logprob: -4.509866714477539
    7. ' book' → logprob: -5.259866714477539
    8. ' books' → logprob: -5.384866714477539
    9. 'the' → logprob: -7.009866714477539
    10. ' the' → logprob: -8.384866714477539

Token 1016: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.09015464037656784
    2. ' book' → logprob: -2.4651546478271484
    3. 's' → logprob: -7.840154647827148
    4. 'll' → logprob: -8.215154647827148
    5. '_book' → logprob: -8.715154647827148
    6. '(book' → logprob: -9.465154647827148
    7. ' shelf' → logprob: -9.965154647827148
    8. '#' → logprob: -10.465154647827148
    9. 'b' → logprob: -10.840154647827148
    10. 'books' → logprob: -10.840154647827148

Token 1017: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.21044686436653137
    2. ',' → logprob: -2.960446834564209
    3. 'at' → logprob: -2.960446834564209
    4. 's' → logprob: -3.210446834564209
    5. ' s' → logprob: -3.335446834564209
    6. ' on' → logprob: -5.585446834564209
    7. ' ,' → logprob: -6.335446834564209
    8. '   ' → logprob: -6.960446834564209
    9. 'on' → logprob: -7.085446834564209
    10. '(s' → logprob: -7.460446834564209

Token 1018: ' shelf' (ID: 40978)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5237055420875549
    2. 'middle' → logprob: -1.5237054824829102
    3. ' middle' → logprob: -2.77370548248291
    4. ' (' → logprob: -2.77370548248291
    5. 's' → logprob: -3.89870548248291
    6. 'the' → logprob: -4.64870548248291
    7. ' shelf' → logprob: -4.89870548248291
    8. 'position' → logprob: -5.27370548248291
    9. ' the' → logprob: -5.39870548248291
    10. '(row' → logprob: -5.39870548248291

Token 1019: ' s' (ID: 265)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.4173673093318939
    2. ' (' → logprob: -1.6673673391342163
    3. 's' → logprob: -2.1673672199249268
    4. '(' → logprob: -4.667367458343506
    5. 'r' → logprob: -4.917367458343506
    6. ' s' → logprob: -5.042367458343506
    7. '_' → logprob: -6.167367458343506
    8. '(s' → logprob: -6.292367458343506
    9. 'middle' → logprob: -6.542367458343506
    10. '[r' → logprob: -6.667367458343506

Token 1020: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5710609555244446
    2. '=' → logprob: -1.6960608959197998
    3. ' s' → logprob: -2.8210608959198
    4. 's' → logprob: -3.3210608959198
    5. ',' → logprob: -3.5710608959198
    6. ' (' → logprob: -3.9460608959198
    7. '[' → logprob: -4.196061134338379
    8. ')' → logprob: -4.196061134338379
    9. '<|end|>' → logprob: -4.571061134338379
    10. '+' → logprob: -4.821061134338379

Token 1021: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.3117222785949707
    2. ' (' → logprob: -1.5617222785949707
    3. '(row' → logprob: -1.5617222785949707
    4. 'r' → logprob: -2.1867222785949707
    5. 'row' → logprob: -2.9367222785949707
    6. '((' → logprob: -3.5617222785949707
    7. '(' → logprob: -3.5617222785949707
    8. '(s' → logprob: -3.9367222785949707
    9. 's' → logprob: -4.186722278594971
    10. ' r' → logprob: -4.686722278594971

Token 1022: 'r' (ID: 81)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.655846893787384
    2. '(row' → logprob: -1.1558468341827393
    3. 'r' → logprob: -2.1558468341827393
    4. '(r' → logprob: -3.4058468341827393
    5. 's' → logprob: -5.905847072601318
    6. ')' → logprob: -5.905847072601318
    7. '((' → logprob: -6.155847072601318
    8. ' (' → logprob: -6.155847072601318
    9. '(s' → logprob: -6.405847072601318
    10. '0' → logprob: -6.655847072601318

Token 1023: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027067875489592552
    2. ' ,' → logprob: -4.6520676612854
    3. '*' → logprob: -5.1520676612854
    4. ' *' → logprob: -5.6520676612854
    5. 's' → logprob: -5.7770676612854
    6. ',s' → logprob: -6.7770676612854
    7. ',c' → logprob: -7.0270676612854
    8. ' s' → logprob: -8.027068138122559
    9. ')' → logprob: -8.027068138122559
    10. '0' → logprob: -8.402068138122559

Token 1024: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1105286031961441
    2. ' c' → logprob: -2.9855287075042725
    3. 'col' → logprob: -4.235528469085693
    4. '_' → logprob: -4.485528469085693
    5. '0' → logprob: -4.860528469085693
    6. ' col' → logprob: -4.985528469085693
    7. 's' → logprob: -5.860528469085693
    8. 'N' → logprob: -5.860528469085693
    9. 'r' → logprob: -6.735528469085693
    10. ' s' → logprob: -6.860528469085693

Token 1025: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5995485186576843
    2. ')+' → logprob: -1.599548578262329
    3. '+' → logprob: -1.724548578262329
    4. ',' → logprob: -2.724548578262329
    5. '),' → logprob: -6.47454833984375
    6. ' +' → logprob: -6.59954833984375
    7. '```' → logprob: -7.84954833984375
    8. 's' → logprob: -8.09954833984375
    9. '//' → logprob: -8.59954833984375
    10. ')+(' → logprob: -8.72454833984375

Token 1026: ' she' (ID: 1770)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.497955083847046
    2. 'r' → logprob: -1.872955083847046
    3. ' s' → logprob: -2.247955083847046
    4. ' r' → logprob: -2.247955083847046
    5. 'c' → logprob: -2.497955083847046
    6. '0' → logprob: -2.997955083847046
    7. ' c' → logprob: -3.122955083847046
    8. '(r' → logprob: -3.247955083847046
    9. '<|end|>' → logprob: -3.372955083847046
    10. '#' → logprob: -3.497955083847046

Token 1027: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -1.2199817895889282
    2. 'must' → logprob: -1.4699817895889282
    3. '<|end|>' → logprob: -2.2199816703796387
    4. '#' → logprob: -2.8449816703796387
    5. ' needs' → logprob: -2.9699816703796387
    6. 's' → logprob: -2.9699816703796387
    7. '<|end|>' → logprob: -2.9699816703796387
    8. ')' → logprob: -3.5949816703796387
    9. 'needs' → logprob: -3.7199816703796387
    10. '=' → logprob: -3.9699816703796387

Token 1028: ' stop' (ID: 5666)
  Prédit: 'stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stop' → logprob: -0.5280492305755615
    2. ' stop' → logprob: -1.2780492305755615
    3. ' move' → logprob: -3.4030492305755615
    4. ' visit' → logprob: -3.9030492305755615
    5. ' be' → logprob: -4.028049468994141
    6. 'visit' → logprob: -4.403049468994141
    7. ' go' → logprob: -4.528049468994141
    8. 'move' → logprob: -4.528049468994141
    9. '       ' → logprob: -5.653049468994141
    10. 'pass' → logprob: -5.653049468994141

Token 1029: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.21471582353115082
    2. 'at' → logprob: -1.964715838432312
    3. '=' → logprob: -3.5897157192230225
    4. ' =' → logprob: -4.839715957641602
    5. '_at' → logprob: -5.089715957641602
    6. '   ' → logprob: -5.839715957641602
    7. ' (' → logprob: -6.214715957641602
    8. '_' → logprob: -6.339715957641602
    9. '(' → logprob: -7.214715957641602
    10. '(r' → logprob: -7.464715957641602

Token 1030: ' middle' (ID: 10006)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5177357196807861
    2. ' (' → logprob: -1.0177357196807861
    3. ' middle' → logprob: -3.892735719680786
    4. 'middle' → logprob: -4.392735481262207
    5. '(' → logprob: -5.392735481262207
    6. '(s' → logprob: -6.642735481262207
    7. '`' → logprob: -7.267735481262207
    8. '(c' → logprob: -7.767735481262207
    9. ''' → logprob: -7.767735481262207
    10. 's' → logprob: -8.267735481262207

Token 1031: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.07028229534626007
    2. ' (' → logprob: -3.070282220840454
    3. '(' → logprob: -4.070282459259033
    4. '(row' → logprob: -6.945282459259033
    5. ',' → logprob: -7.070282459259033
    6. ')' → logprob: -7.570282459259033
    7. '   ' → logprob: -7.820282459259033
    8. '       ' → logprob: -7.820282459259033
    9. '```' → logprob: -7.820282459259033
    10. 's' → logprob: -8.195281982421875

Token 1032: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026581778656691313
    2. ',c' → logprob: -6.252658367156982
    3. ' ,' → logprob: -8.252657890319824
    4. ',r' → logprob: -8.627657890319824
    5. '',' → logprob: -10.002657890319824
    6. '`,' → logprob: -10.127657890319824
    7. ',s' → logprob: -10.252657890319824
    8. ',",' → logprob: -11.127657890319824
    9. ',n' → logprob: -11.502657890319824
    10. '','' → logprob: -11.502657890319824

Token 1033: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08897021412849426
    2. ' c' → logprob: -2.463970184326172
    3. 'r' → logprob: -11.338970184326172
    4. ' ' → logprob: -11.838970184326172
    5. ' r' → logprob: -12.588970184326172
    6. ',c' → logprob: -13.088970184326172
    7. '   ' → logprob: -13.963970184326172
    8. '```' → logprob: -14.213970184326172
    9. ')c' → logprob: -14.213970184326172
    10. ',' → logprob: -14.338970184326172

Token 1034: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.102680633077398e-05
    2. ' +' → logprob: -9.625090599060059
    3. ')' → logprob: -10.875090599060059
    4. ')+' → logprob: -13.375090599060059
    5. '```' → logprob: -13.625090599060059
    6. '+.' → logprob: -14.000090599060059
    7. '+
' → logprob: -14.500090599060059
    8. '+)' → logprob: -14.625090599060059
    9. '.' → logprob: -14.750090599060059
    10. 's' → logprob: -15.750090599060059

Token 1035: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022893207147717476
    2. '.' → logprob: -3.897893190383911
    3. '5' → logprob: -6.14789342880249
    4. '+' → logprob: -8.522892951965332
    5. '```' → logprob: -12.022892951965332
    6. ' ' → logprob: -12.772892951965332
    7. '   ' → logprob: -13.647892951965332
    8. ' .' → logprob: -14.897892951965332
    9. '05' → logprob: -15.272892951965332
    10. '+.' → logprob: -15.397892951965332

Token 1036: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.0219828002154827e-05
    2. ')' → logprob: -10.875020027160645
    3. '5' → logprob: -14.875020027160645
    4. '<|end|>' → logprob: -15.500020027160645
    5. '.
' → logprob: -15.625020027160645
    6. '0' → logprob: -16.12502098083496
    7. '.)' → logprob: -16.87502098083496
    8. ' .' → logprob: -16.87502098083496
    9. '   ' → logprob: -16.87502098083496
    10. '```' → logprob: -17.37502098083496

Token 1037: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.125000953674316
    3. '0' → logprob: -16.000001907348633
    4. ' ' → logprob: -16.375001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '.' → logprob: -18.000001907348633
    7. '50' → logprob: -18.562501907348633
    8. '``' → logprob: -18.937501907348633
    9. '500' → logprob: -19.125001907348633
    10. ',' → logprob: -19.250001907348633

Token 1038: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007051641005091369
    2. ')
' → logprob: -7.375705242156982
    3. ')`' → logprob: -10.125704765319824
    4. '),' → logprob: -12.250704765319824
    5. ')

' → logprob: -12.375704765319824
    6. '       ' → logprob: -12.375704765319824
    7. ')
' → logprob: -12.500704765319824
    8. ' )' → logprob: -12.750704765319824
    9. '')' → logprob: -12.875704765319824
    10. '))' → logprob: -13.000704765319824

Token 1039: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004604099318385124
    2. '        
' → logprob: -6.629603862762451
    3. '           ' → logprob: -6.879603862762451
    4. '#' → logprob: -7.004603862762451
    5. '<|end|>' → logprob: -7.754603862762451
    6. ',' → logprob: -8.00460433959961
    7. '<|end|>' → logprob: -9.00460433959961
    8. '
' → logprob: -9.25460433959961
    9. '        ' → logprob: -9.62960433959961
    10. '   ' → logprob: -9.75460433959961

Token 1040: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01658123917877674
    2. '           ' → logprob: -5.641581058502197
    3. ',' → logprob: -5.766581058502197
    4. '        
' → logprob: -5.766581058502197
    5. '<|end|>' → logprob: -5.766581058502197
    6. '.' → logprob: -7.266581058502197
    7. '<|end|>' → logprob: -7.641581058502197
    8. '
' → logprob: -7.766581058502197
    9. ')' → logprob: -7.766581058502197
    10. '               ' → logprob: -8.266581535339355

Token 1041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005841302336193621
    2. '        
' → logprob: -7.875584125518799
    3. '           ' → logprob: -10.000584602355957
    4. '   ' → logprob: -10.250584602355957
    5. '```' → logprob: -10.750584602355957
    6. '
' → logprob: -10.875584602355957
    7. '#' → logprob: -10.875584602355957
    8. '<|end|>' → logprob: -11.625584602355957
    9. 'import' → logprob: -12.000584602355957
    10. '        ' → logprob: -12.500584602355957

Token 1042: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08536981046199799
    2. '#' (adapté à ' #') → logprob: -3.460369825363159
    3. 'dp' → logprob: -3.460369825363159
    4. ' dp' → logprob: -5.83536958694458
    5. 'distance' → logprob: -6.08536958694458
    6. 'cost' → logprob: -6.08536958694458
    7. '        
' → logprob: -6.46036958694458
    8. 'for' → logprob: -6.58536958694458
    9. 'prev' → logprob: -6.96036958694458
    10. 'dist' → logprob: -7.21036958694458

Token 1043: ' She' (ID: 3627)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9844528436660767
    2. 'dp' → logprob: -0.9844528436660767
    3. '       ' → logprob: -1.6094528436660767
    4. 'from' → logprob: -3.734452724456787
    5. 'visited' → logprob: -5.109452724456787
    6. 'DP' → logprob: -5.609452724456787
    7. 'required' → logprob: -5.984452724456787
    8. 'def' → logprob: -6.109452724456787
    9. 'positions' → logprob: -6.234452724456787
    10. 'dist' → logprob: -6.484452724456787

Token 1044: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.15016363561153412
    2. ' must' → logprob: -2.5251636505126953
    3. ' =' → logprob: -3.6501636505126953
    4. '=' → logprob: -4.650163650512695
    5. 'must' → logprob: -5.150163650512695
    6. ')' → logprob: -5.900163650512695
    7. ' has' → logprob: -5.900163650512695
    8. ' may' → logprob: -6.150163650512695
    9. '   ' → logprob: -6.275163650512695
    10. 'can' → logprob: -6.400163650512695

Token 1045: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.5132638812065125
    2. 'move' → logprob: -1.0132639408111572
    3. ' go' → logprob: -3.8882639408111572
    4. 'go' → logprob: -4.763263702392578
    5. 'stop' → logprob: -5.888263702392578
    6. ' stop' → logprob: -6.513263702392578
    7. ' only' → logprob: -7.513263702392578
    8. ' first' → logprob: -7.638263702392578
    9. '   ' → logprob: -7.888263702392578
    10. ' always' → logprob: -8.263263702392578

Token 1046: ' at' (ID: 540)
  Prédit: ' vertically'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vertically' → logprob: -0.7015745043754578
    2. 'vert' → logprob: -0.8265745043754578
    3. 'down' → logprob: -4.576574325561523
    4. ' down' → logprob: -4.701574325561523
    5. ' horizontally' → logprob: -4.701574325561523
    6. ' on' → logprob: -5.201574325561523
    7. '   ' → logprob: -5.201574325561523
    8. '_vert' → logprob: -5.576574325561523
    9. ' up' → logprob: -5.701574325561523
    10. 'up' → logprob: -6.201574325561523

Token 1047: ' middle' (ID: 10006)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.8167397975921631
    2. ' intersection' → logprob: -0.9417397975921631
    3. ' intersections' → logprob: -3.066739797592163
    4. ' middle' → logprob: -3.191739797592163
    5. ' (' → logprob: -4.066740036010742
    6. ' each' → logprob: -4.191740036010742
    7. 'middle' → logprob: -4.691740036010742
    8. ' row' → logprob: -5.066740036010742
    9. 'each' → logprob: -5.316740036010742
    10. '(' → logprob: -5.441740036010742

Token 1048: ' nodes' (ID: 15749)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21723024547100067
    2. '(r' → logprob: -1.967230200767517
    3. ' (' → logprob: -3.4672303199768066
    4. 's' → logprob: -4.217230319976807
    5. ',' → logprob: -4.967230319976807
    6. ',r' → logprob: -7.217230319976807
    7. ')' → logprob: -7.467230319976807
    8. '   ' → logprob: -8.217229843139648
    9. '```' → logprob: -8.342229843139648
    10. ',(' → logprob: -8.592229843139648

Token 1049: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12038301676511765
    2. '
' → logprob: -3.1203830242156982
    3. '   ' → logprob: -3.6203830242156982
    4. '```' → logprob: -4.120382785797119
    5. '        
' → logprob: -4.745382785797119
    6. ' for' → logprob: -5.495382785797119
    7. '`' → logprob: -6.120382785797119
    8. 'def' → logprob: -6.495382785797119
    9. ',' → logprob: -7.120382785797119
    10. ':
' → logprob: -7.370382785797119

Token 1050: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16805562376976013
    2. '   ' → logprob: -2.293055534362793
    3. '        
' → logprob: -4.793055534362793
    4. ')' → logprob: -5.043055534362793
    5. '(r' → logprob: -5.293055534362793
    6. ':' → logprob: -5.793055534362793
    7. ',' → logprob: -5.918055534362793
    8. ' ' → logprob: -6.043055534362793
    9. '        ' → logprob: -6.168055534362793
    10. ':
' → logprob: -6.418055534362793

Token 1051: ' intersections' (ID: 143513)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.0419273376464844
    2. 'middle' → logprob: -1.6669273376464844
    3. 'rows' → logprob: -2.0419273376464844
    4. 'adj' → logprob: -2.5419273376464844
    5. 'same' → logprob: -2.7919273376464844
    6. 'the' → logprob: -3.1669273376464844
    7. 'row' → logprob: -3.5419273376464844
    8. 'intersection' → logprob: -3.6669273376464844
    9. 'r' → logprob: -3.9169273376464844
    10. 'inter' → logprob: -4.541927337646484

Token 1052: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06063055247068405
    2. '   ' → logprob: -3.4356305599212646
    3. '
' → logprob: -4.5606303215026855
    4. '        
' → logprob: -5.4356303215026855
    5. '```' → logprob: -5.6856303215026855
    6. 'def' → logprob: -6.6856303215026855
    7. 'for' → logprob: -7.0606303215026855
    8. ' for' → logprob: -7.1856303215026855
    9. ':
' → logprob: -7.4356303215026855
    10. '           ' → logprob: -7.5606303215026855

Token 1053: ' put' (ID: 3006)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.2972472608089447
    2. ' middle' → logprob: -2.1722471714019775
    3. 'the' → logprob: -3.1722471714019775
    4. 'next' → logprob: -4.047247409820557
    5. 'their' → logprob: -4.297247409820557
    6. ' the' → logprob: -4.547247409820557
    7. 'adj' → logprob: -4.797247409820557
    8. 'm' → logprob: -4.797247409820557
    9. ' adjacent' → logprob: -5.172247409820557
    10. ' next' → logprob: -5.422247409820557

Token 1054: ' books' (ID: 7187)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.030750203877687454
    2. ' a' → logprob: -4.030750274658203
    3. ' (' → logprob: -5.155750274658203
    4. 'a' → logprob: -6.030750274658203
    5. '    ' → logprob: -7.030750274658203
    6. '(' → logprob: -7.405750274658203
    7. 'down' → logprob: -7.905750274658203
    8. ' books' → logprob: -8.030750274658203
    9. 'r' → logprob: -8.155750274658203
    10. '   ' → logprob: -8.280750274658203

Token 1055: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02453761175274849
    2. '   ' → logprob: -4.774537563323975
    3. '```' → logprob: -5.149537563323975
    4. '
' → logprob: -5.899537563323975
    5. ' for' → logprob: -6.024537563323975
    6. '        
' → logprob: -6.774537563323975
    7. '           ' → logprob: -6.899537563323975
    8. 'for' → logprob: -7.274537563323975
    9. 'def' → logprob: -7.524537563323975
    10. ',' → logprob: -8.899538040161133

Token 1056: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08660925924777985
    2. ' but' → logprob: -3.586609363555908
    3. ' and' → logprob: -3.961609363555908
    4. '           ' → logprob: -4.711609363555908
    5. '#' → logprob: -5.336609363555908
    6. 'and' → logprob: -5.461609363555908
    7. ' not' → logprob: -5.461609363555908
    8. '   ' → logprob: -5.461609363555908
    9. 'but' → logprob: -6.211609363555908
    10. ',' → logprob: -6.711609363555908

Token 1057: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.575719952583313
    2. ' and' → logprob: -1.825719952583313
    3. ' but' → logprob: -2.2007198333740234
    4. 'and' → logprob: -2.7007198333740234
    5. '#' (adapté à ' #') → logprob: -3.4507198333740234
    6. 'but' → logprob: -3.9507198333740234
    7. ' or' → logprob: -4.200719833374023
    8. ' not' → logprob: -4.825719833374023
    9. '           ' → logprob: -5.575719833374023
    10. ' so' → logprob: -5.575719833374023

Token 1058: ' cost' (ID: 3097)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6108600497245789
    2. '       ' → logprob: -0.8608600497245789
    3. ' and' → logprob: -4.6108598709106445
    4. '```' → logprob: -4.6108598709106445
    5. 'and' → logprob: -5.2358598709106445
    6. '           ' → logprob: -5.6108598709106445
    7. '   ' → logprob: -6.3608598709106445
    8. ' ' → logprob: -7.6108598709106445
    9. '               ' → logprob: -7.9858598709106445
    10. ' but' → logprob: -8.360859870910645

Token 1059: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06252887099981308
    2. '=' → logprob: -3.4375288486480713
    3. ' ' → logprob: -4.18752908706665
    4. '1' → logprob: -5.06252908706665
    5. ' +=' → logprob: -5.43752908706665
    6. '0' → logprob: -7.18752908706665
    7. 's' → logprob: -8.062528610229492
    8. ')' → logprob: -8.312528610229492
    9. ' +' → logprob: -8.312528610229492
    10. '   ' → logprob: -8.812528610229492

Token 1060: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1136887073516846
    2. '=' → logprob: -1.3636887073516846
    3. ' ' → logprob: -1.6136887073516846
    4. '1' → logprob: -1.9886887073516846
    5. ' =' → logprob: -2.7386887073516846
    6. '```' → logprob: -5.6136884689331055
    7. ' +=' → logprob: -5.7386884689331055
    8. '+=' → logprob: -6.1136884689331055
    9. ' is' → logprob: -6.6136884689331055
    10. '+' → logprob: -7.3636884689331055

Token 1061: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11608050018548965
    2. '
' → logprob: -3.1160805225372314
    3. '```' → logprob: -3.3660805225372314
    4. '        
' → logprob: -4.491080284118652
    5. 'r' → logprob: -6.116080284118652
    6. '`' → logprob: -6.491080284118652
    7. '   ' → logprob: -6.741080284118652
    8. 'prev' → logprob: -6.991080284118652
    9. '``' → logprob: -6.991080284118652
    10. ' for' → logprob: -7.241080284118652

Token 1062: '5' (ID: 20)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07125178724527359
    2. '```' → logprob: -3.44625186920166
    3. '   ' → logprob: -4.32125186920166
    4. '
' → logprob: -4.32125186920166
    5. '        
' → logprob: -5.69625186920166
    6. 'def' → logprob: -6.32125186920166
    7. '``' → logprob: -7.07125186920166
    8. '`' → logprob: -7.07125186920166
    9. '           ' → logprob: -7.32125186920166
    10. '`
' → logprob: -7.82125186920166

Token 1063: ' step' (ID: 5983)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05974317714571953
    2. '
' → logprob: -3.5597431659698486
    3. '   ' → logprob: -4.934743404388428
    4. '        
' → logprob: -4.934743404388428
    5. '```' → logprob: -5.309743404388428
    6. 'def' → logprob: -5.434743404388428
    7. 'import' → logprob: -6.559743404388428
    8. '#' → logprob: -7.184743404388428
    9. 'from' → logprob: -7.559743404388428
    10. 'dp' → logprob: -7.684743404388428

Token 1064: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15944638848304749
    2. '
' → logprob: -2.2844464778900146
    3. '        
' → logprob: -4.0344462394714355
    4. 'dp' → logprob: -4.6594462394714355
    5. '```' → logprob: -5.2844462394714355
    6. '   ' → logprob: -6.1594462394714355
    7. 'def' → logprob: -6.6594462394714355
    8. 'import' → logprob: -6.9094462394714355
    9. 'dist' → logprob: -7.1594462394714355
    10. '#' → logprob: -7.2844462394714355

Token 1065: '/from' (ID: 194031)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.5549140572547913
    2. ' middle' → logprob: -1.8049139976501465
    3. ' go' → logprob: -2.4299139976501465
    4. 'move' → logprob: -2.5549139976501465
    5. ' move' → logprob: -3.5549139976501465
    6. 'go' → logprob: -3.9299139976501465
    7. 'next' → logprob: -4.0549139976501465
    8. 'reach' → logprob: -4.6799139976501465
    9. ' reach' → logprob: -4.9299139976501465
    10. ' next' → logprob: -6.0549139976501465

Token 1066: ' middle' (ID: 10006)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22884103655815125
    2. 'dp' → logprob: -2.3538410663604736
    3. '#' → logprob: -3.9788410663604736
    4. '```' → logprob: -3.9788410663604736
    5. 'def' → logprob: -4.6038408279418945
    6. 'distance' → logprob: -4.8538408279418945
    7. 'dist' → logprob: -4.9788408279418945
    8. 'prev' → logprob: -5.4788408279418945
    9. 'import' → logprob: -5.4788408279418945
    10. '
' → logprob: -5.6038408279418945

Token 1067: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011703246273100376
    2. '
' → logprob: -5.511703014373779
    3. '```' → logprob: -5.636703014373779
    4. '        
' → logprob: -6.511703014373779
    5. '   ' → logprob: -7.011703014373779
    6. 'def' → logprob: -8.011703491210938
    7. 'dp' → logprob: -8.261703491210938
    8. '#' → logprob: -8.261703491210938
    9. '           ' → logprob: -8.761703491210938
    10. 'from' → logprob: -9.011703491210938

Token 1068: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0055580441839993
    2. '        
' → logprob: -5.880558013916016
    3. '
' → logprob: -6.630558013916016
    4. '```' → logprob: -7.130558013916016
    5. '   ' → logprob: -8.505558013916016
    6. 'def' → logprob: -8.880558013916016
    7. '#' → logprob: -10.005558013916016
    8. 'import' → logprob: -10.380558013916016
    9. '           ' → logprob: -10.505558013916016
    10. '<|end|>' → logprob: -10.755558013916016

Token 1069: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0168639924377203
    2. '        
' → logprob: -5.141863822937012
    3. '
' → logprob: -5.266863822937012
    4. '   ' → logprob: -5.641863822937012
    5. 'dp' → logprob: -7.516863822937012
    6. '```' → logprob: -7.766863822937012
    7. 'import' → logprob: -8.141863822937012
    8. '    
' → logprob: -8.516863822937012
    9. 'def' → logprob: -8.766863822937012
    10. 'from' → logprob: -9.141863822937012

Token 1070: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3839166760444641
    2. 'dp' → logprob: -1.2589166164398193
    3. 'dist' → logprob: -4.633916854858398
    4. '#' → logprob: -5.008916854858398
    5. 'INF' → logprob: -5.633916854858398
    6. ' dp' → logprob: -6.008916854858398
    7. 'from' → logprob: -6.133916854858398
    8. '   ' → logprob: -6.133916854858398
    9. 'def' → logprob: -6.383916854858398
    10. 'DP' → logprob: -6.758916854858398

Token 1071: ' to' (ID: 316)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1846715211868286
    2. ' dp' → logprob: -2.559671401977539
    3. '#' → logprob: -2.934671401977539
    4. '   ' → logprob: -4.059671401977539
    5. 'dist' → logprob: -5.559671401977539
    6. '       ' → logprob: -5.934671401977539
    7. 'DP' → logprob: -6.184671401977539
    8. ' dist' → logprob: -6.309671401977539
    9. 'INF' → logprob: -6.309671401977539
    10. ' #' → logprob: -6.434671401977539

Token 1072: ' put' (ID: 3006)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.7356762886047363
    2. ' complete' → logprob: -1.3606762886047363
    3. 'continue' → logprob: -2.8606762886047363
    4. 'solve' → logprob: -3.1106762886047363
    5. 'go' → logprob: -3.8606762886047363
    6. 'move' → logprob: -4.235676288604736
    7. '#' → logprob: -4.485676288604736
    8. ' continue' → logprob: -4.485676288604736
    9. 'put' → logprob: -4.485676288604736
    10. ' move' → logprob: -4.735676288604736

Token 1073: ' required' (ID: 3759)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6467902660369873
    2. ' a' → logprob: -1.3967902660369873
    3. 'books' → logprob: -2.5217902660369873
    4. 'all' → logprob: -3.0217902660369873
    5. ' all' → logprob: -3.3967902660369873
    6. ' books' → logprob: -4.146790504455566
    7. 'book' → logprob: -4.271790504455566
    8. ' book' → logprob: -4.771790504455566
    9. 'each' → logprob: -4.896790504455566
    10. 'the' → logprob: -5.271790504455566

Token 1074: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.708785891532898
    2. '_books' → logprob: -1.083785891532898
    3. ' books' → logprob: -2.5837860107421875
    4. '_book' → logprob: -3.3337860107421875
    5. 's' → logprob: -4.0837860107421875
    6. 'book' → logprob: -4.4587860107421875
    7. '_s' → logprob: -4.5837860107421875
    8. '_' → logprob: -5.2087860107421875
    9. '   ' → logprob: -5.9587860107421875
    10. ' at' → logprob: -6.0837860107421875

Token 1075: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4072650969028473
    2. '       ' → logprob: -2.2822651863098145
    3. ' at' → logprob: -2.4072651863098145
    4. '```' → logprob: -3.4072651863098145
    5. ':' → logprob: -3.5322651863098145
    6. '(r' → logprob: -3.7822651863098145
    7. '[r' → logprob: -4.6572651863098145
    8. ':
' → logprob: -4.9072651863098145
    9. '(s' → logprob: -5.2822651863098145
    10. '   ' → logprob: -5.4072651863098145

Token 1076: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.528807520866394
    2. ' she' → logprob: -2.5288076400756836
    3. 'for' → logprob: -2.6538076400756836
    4. ' for' → logprob: -2.7788076400756836
    5. '#' → logprob: -2.9038076400756836
    6. 'dp' → logprob: -3.7788076400756836
    7. 'she' → logprob: -3.9038076400756836
    8. ' dp' → logprob: -4.778807640075684
    9. 'current' → logprob: -4.778807640075684
    10. 'positions' → logprob: -4.903807640075684

Token 1077: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.5226469039916992
    2. ' each' → logprob: -1.5226469039916992
    3. 'col' → logprob: -2.897646903991699
    4. 'column' → logprob: -3.022646903991699
    5. 'least' → logprob: -3.647646903991699
    6. ' column' → logprob: -3.772646903991699
    7. ' least' → logprob: -4.522646903991699
    8. ' col' → logprob: -4.647646903991699
    9. 'c' → logprob: -5.022646903991699
    10. 'middle' → logprob: -5.897646903991699

Token 1078: ' column' (ID: 6000)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7320129871368408
    2. 'col' → logprob: -1.4820129871368408
    3. ' c' → logprob: -2.232012987136841
    4. 'column' → logprob: -2.607012987136841
    5. ' col' → logprob: -2.732012987136841
    6. ' column' → logprob: -3.107012987136841
    7. '   ' → logprob: -7.732012748718262
    8. '```' → logprob: -9.482012748718262
    9. ' step' → logprob: -9.732012748718262
    10. '       ' → logprob: -9.857012748718262

Token 1079: ' c' (ID: 274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1970165967941284
    2. ' c' → logprob: -2.072016716003418
    3. '```' → logprob: -2.322016716003418
    4. '_' → logprob: -2.447016716003418
    5. '        
' → logprob: -2.447016716003418
    6. '       ' → logprob: -2.697016716003418
    7. 'c' → logprob: -3.072016716003418
    8. 'r' → logprob: -3.197016716003418
    9. ' =' → logprob: -4.322016716003418
    10. '`' → logprob: -4.572016716003418

Token 1080: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4096035659313202
    2. '```' → logprob: -2.1596035957336426
    3. '       ' → logprob: -2.4096035957336426
    4. ':' → logprob: -3.0346035957336426
    5. ':
' → logprob: -4.034603595733643
    6. '[r' → logprob: -5.159603595733643
    7. '
' → logprob: -5.284603595733643
    8. ' where' → logprob: -5.284603595733643
    9. '`' → logprob: -5.409603595733643
    10. ' if' → logprob: -5.659603595733643

Token 1081: ' some' (ID: 1236)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4796200394630432
    2. 'rows' → logprob: -2.7296199798583984
    3. 'needed' → logprob: -2.7296199798583984
    4. 'required' → logprob: -3.3546199798583984
    5. '#' → logprob: -3.3546199798583984
    6. ' rows' → logprob: -3.7296199798583984
    7. ' needed' → logprob: -3.9796199798583984
    8. 'row' → logprob: -4.604619979858398
    9. 'import' → logprob: -4.604619979858398
    10. 'we' → logprob: -4.604619979858398

Token 1082: ' set' (ID: 920)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.40436413884162903
    2. ' rows' → logprob: -1.1543641090393066
    3. 'row' → logprob: -5.779364109039307
    4. ' row' → logprob: -5.904364109039307
    5. ' shelves' → logprob: -6.154364109039307
    6. 'r' → logprob: -6.279364109039307
    7. ' of' → logprob: -6.404364109039307
    8. 'books' → logprob: -6.529364109039307
    9. 'positions' → logprob: -7.154364109039307
    10. ' books' → logprob: -7.279364109039307

Token 1083: ' of' (ID: 328)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.1312443017959595
    2. '[r' → logprob: -1.7562443017959595
    3. 'of' → logprob: -2.00624418258667
    4. '_of' → logprob: -2.38124418258667
    5. '       ' → logprob: -2.88124418258667
    6. ' of' → logprob: -3.00624418258667
    7. '[' → logprob: -3.13124418258667
    8. '_' → logprob: -3.13124418258667
    9. '```' → logprob: -3.88124418258667
    10. '_r' → logprob: -4.38124418258667

Token 1084: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.08035371452569962
    2. ' rows' → logprob: -2.5803537368774414
    3. 'row' → logprob: -7.080353736877441
    4. 'r' → logprob: -8.330353736877441
    5. 'books' → logprob: -9.455353736877441
    6. 'required' → logprob: -9.955353736877441
    7. '```' → logprob: -10.080353736877441
    8. 's' → logprob: -10.580353736877441
    9. '	rows' → logprob: -10.580353736877441
    10. 'positions' → logprob: -10.705353736877441

Token 1085: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0414588451385498
    2. '       ' → logprob: -1.4164588451385498
    3. '_' → logprob: -2.04145884513855
    4. '```' → logprob: -2.29145884513855
    5. ',' → logprob: -3.04145884513855
    6. '[' → logprob: -3.29145884513855
    7. '   ' → logprob: -3.79145884513855
    8. ' =' → logprob: -3.91645884513855
    9. ':
' → logprob: -4.541459083557129
    10. ' :' → logprob: -5.791459083557129

Token 1086: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8244706392288208
    2. 'with' → logprob: -1.1994706392288208
    3. ' with' → logprob: -2.3244705200195312
    4. 'needed' → logprob: -3.6994705200195312
    5. ':' → logprob: -3.8244705200195312
    6. '{' → logprob: -4.074470520019531
    7. 's' → logprob: -4.324470520019531
    8. '[' → logprob: -4.699470520019531
    9. 'required' → logprob: -4.824470520019531
    10. '):' → logprob: -5.074470520019531

Token 1087: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12186503410339355
    2. ')' → logprob: -4.121865272521973
    3. ':' → logprob: -4.121865272521973
    4. '```' → logprob: -4.246865272521973
    5. '...' → logprob: -4.496865272521973
    6. ' ,' → logprob: -4.871865272521973
    7. '       ' → logprob: -4.871865272521973
    8. ' in' → logprob: -4.996865272521973
    9. ',
' → logprob: -5.371865272521973
    10. '   ' → logprob: -5.621865272521973

Token 1088: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00389770301990211
    2. ')' → logprob: -5.878897666931152
    3. '```' → logprob: -7.378897666931152
    4. '=' → logprob: -8.878897666931152
    5. '   ' → logprob: -9.628897666931152
    6. '`)' → logprob: -10.253897666931152
    7. ' ' → logprob: -10.378897666931152
    8. '``' → logprob: -10.503897666931152
    9. '...' → logprob: -10.628897666931152
    10. '4' → logprob: -10.753897666931152

Token 1089: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27713075280189514
    2. '```' → logprob: -2.6521308422088623
    3. '       ' → logprob: -3.4021308422088623
    4. ':' → logprob: -3.4021308422088623
    5. '):' → logprob: -3.6521308422088623
    6. '):
' → logprob: -4.277130603790283
    7. '[' → logprob: -4.277130603790283
    8. ',' → logprob: -5.152130603790283
    9. ':
' → logprob: -5.277130603790283
    10. ' must' → logprob: -5.277130603790283

Token 1090: ' will' (ID: 738)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1732197999954224
    2. ':' → logprob: -1.2982197999954224
    3. '       ' → logprob: -1.2982197999954224
    4. '[]' → logprob: -2.798219680786133
    5. '[' → logprob: -3.923219680786133
    6. ':
' → logprob: -4.173219680786133
    7. ',' → logprob: -4.798219680786133
    8. ' =' → logprob: -5.173219680786133
    9. '``' → logprob: -5.423219680786133
    10. '        
' → logprob: -5.548219680786133

Token 1091: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.370866060256958
    2. 'be' → logprob: -1.495866060256958
    3. '=' → logprob: -3.495866060256958
    4. '```' → logprob: -3.745866060256958
    5. ' be' → logprob: -4.620865821838379
    6. ' have' → logprob: -4.870865821838379
    7. 'need' → logprob: -5.245865821838379
    8. '_have' → logprob: -6.370865821838379
    9. '
' → logprob: -6.870865821838379
    10. ' =' → logprob: -7.120865821838379

Token 1092: ' shelves' (ID: 52049)
  Prédit: ' Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.34984898567199707
    2. 'Y' → logprob: -1.724848985671997
    3. ' books' → logprob: -2.849848985671997
    4. 'books' → logprob: -2.974848985671997
    5. '```' → logprob: -6.349848747253418
    6. ' True' → logprob: -6.474848747253418
    7. ' ' → logprob: -7.099848747253418
    8. '`' → logprob: -7.099848747253418
    9. ' y' → logprob: -7.349848747253418
    10. 'book' → logprob: -7.599848747253418

Token 1093: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.0428377389907837
    2. '```' → logprob: -2.167837619781494
    3. '       ' → logprob: -2.292837619781494
    4. '[' → logprob: -2.292837619781494
    5. ' with' → logprob: -2.417837619781494
    6. '[r' → logprob: -2.542837619781494
    7. 's' → logprob: -2.917837619781494
    8. '_with' → logprob: -3.667837619781494
    9. '_' → logprob: -4.292837619781494
    10. '`' → logprob: -4.917837619781494

Token 1094: ' books' (ID: 7187)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.5593189597129822
    2. ' Y' → logprob: -1.309319019317627
    3. 'books' → logprob: -2.309319019317627
    4. ' books' → logprob: -3.059319019317627
    5. '```' → logprob: -5.934319019317627
    6. ''' → logprob: -6.059319019317627
    7. '`' → logprob: -6.309319019317627
    8. 'book' → logprob: -7.434319019317627
    9. '"' → logprob: -7.434319019317627
    10. ' ' → logprob: -7.559319019317627

Token 1095: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17025147378444672
    2. '        
' → logprob: -2.1702513694763184
    3. '```' → logprob: -4.420251369476318
    4. ':' → logprob: -4.670251369476318
    5. '_' → logprob: -5.920251369476318
    6. 's' → logprob: -6.045251369476318
    7. '`' → logprob: -6.170251369476318
    8. ',' → logprob: -6.295251369476318
    9. ':
' → logprob: -6.420251369476318
    10. '``' → logprob: -6.670251369476318

Token 1096: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048517752438783646
    2. '        
' → logprob: -3.4235177040100098
    3. '```' → logprob: -4.79851770401001
    4. ',' → logprob: -7.04851770401001
    5. '           ' → logprob: -7.54851770401001
    6. '
' → logprob: -7.54851770401001
    7. '``' → logprob: -7.54851770401001
    8. '`
' → logprob: -7.67351770401001
    9. '   ' → logprob: -7.67351770401001
    10. '`' → logprob: -7.67351770401001

Token 1097: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2168848216533661
    2. '        
' → logprob: -2.4668848514556885
    3. '```' → logprob: -2.7168848514556885
    4. '
' → logprob: -4.466884613037109
    5. '`
' → logprob: -5.091884613037109
    6. ',' → logprob: -5.091884613037109
    7. '``' → logprob: -5.216884613037109
    8. '`' → logprob: -5.966884613037109
    9. '           ' → logprob: -7.091884613037109
    10. 'empty' → logprob: -7.341884613037109

Token 1098: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013254113495349884
    2. '        
' → logprob: -5.388254165649414
    3. '```' → logprob: -6.388254165649414
    4. '#' → logprob: -6.638254165649414
    5. 'from' → logprob: -6.763254165649414
    6. 'columns' → logprob: -6.763254165649414
    7. 'dp' → logprob: -7.388254165649414
    8. 'cols' → logprob: -7.638254165649414
    9. '
' → logprob: -8.513254165649414
    10. ',' → logprob: -8.638254165649414

Token 1099: ' put' (ID: 3006)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -1.373650312423706
    2. 'c' → logprob: -1.623650312423706
    3. 'place' → logprob: -2.123650312423706
    4. 'process' → logprob: -2.123650312423706
    5. ' c' → logprob: -2.248650312423706
    6. 'continue' → logprob: -2.998650312423706
    7. 'each' → logprob: -3.748650312423706
    8. ' process' → logprob: -3.873650312423706
    9. 'complete' → logprob: -4.248650550842285
    10. 'solve' → logprob: -4.373650550842285

Token 1100: ' those' (ID: 2617)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.7676971554756165
    2. 'books' → logprob: -2.0176970958709717
    3. ' at' → logprob: -2.5176970958709717
    4. 's' → logprob: -3.0176970958709717
    5. ' each' → logprob: -3.0176970958709717
    6. 'c' → logprob: -3.2676970958709717
    7. 'them' → logprob: -3.7676970958709717
    8. 'a' → logprob: -4.017697334289551
    9. 'the' → logprob: -4.142697334289551
    10. 'all' → logprob: -4.142697334289551

Token 1101: ',' (ID: 11)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -1.3220748901367188
    2. '_rows' → logprob: -1.5720748901367188
    3. ' rows' → logprob: -1.8220748901367188
    4. ' at' → logprob: -2.5720748901367188
    5. '_books' → logprob: -2.5720748901367188
    6. 's' → logprob: -2.9470748901367188
    7. 'books' → logprob: -2.9470748901367188
    8. ' books' → logprob: -3.5720748901367188
    9. '_s' → logprob: -3.8220748901367188
    10. '_' → logprob: -4.447074890136719

Token 1102: ' she' (ID: 1770)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9522591233253479
    2. ' at' → logprob: -1.2022590637207031
    3. 'rows' → logprob: -2.202259063720703
    4. ' rows' → logprob: -2.827259063720703
    5. 'at' → logprob: -3.577259063720703
    6. 'for' → logprob: -3.827259063720703
    7. ' for' → logprob: -3.952259063720703
    8. '#' → logprob: -4.577259063720703
    9. '```' → logprob: -4.577259063720703
    10. 'columns' → logprob: -4.952259063720703

Token 1103: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -1.0262298583984375
    2. ' =' → logprob: -1.6512298583984375
    3. 'must' → logprob: -1.7762298583984375
    4. '_' → logprob: -2.7762298583984375
    5. 's' → logprob: -3.5262298583984375
    6. ' will' → logprob: -3.5262298583984375
    7. '=' → logprob: -3.7762298583984375
    8. '_w' → logprob: -4.1512298583984375
    9. '_m' → logprob: -4.2762298583984375
    10. '_s' → logprob: -4.2762298583984375

Token 1104: ' at' (ID: 540)
  Prédit: ' visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visit' → logprob: -1.0901525020599365
    2. 'visit' → logprob: -1.2151525020599365
    3. ' go' → logprob: -2.2151525020599365
    4. ' move' → logprob: -2.3401525020599365
    5. ' stop' → logprob: -3.0901525020599365
    6. 'stop' → logprob: -3.0901525020599365
    7. 'move' → logprob: -3.7151525020599365
    8. 'go' → logprob: -3.9651525020599365
    9. '       ' → logprob: -4.715152740478516
    10. ' be' → logprob: -5.340152740478516

Token 1105: ' that' (ID: 484)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.4093073308467865
    2. ' least' → logprob: -1.2843073606491089
    3. 'each' → logprob: -4.159307479858398
    4. 'c' → logprob: -4.409307479858398
    5. 'column' → logprob: -5.034307479858398
    6. ' middle' → logprob: -5.409307479858398
    7. 'middle' → logprob: -5.409307479858398
    8. ' each' → logprob: -5.784307479858398
    9. ' column' → logprob: -5.784307479858398
    10. ' ' → logprob: -6.159307479858398

Token 1106: ' column' (ID: 6000)
  Prédit: ' column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' column' → logprob: -0.9966888427734375
    2. ' c' → logprob: -1.2466888427734375
    3. 'c' → logprob: -1.8716888427734375
    4. 'column' → logprob: -2.2466888427734375
    5. ' col' → logprob: -3.1216888427734375
    6. 'col' → logprob: -3.2466888427734375
    7. ' ' → logprob: -7.7466888427734375
    8. '   ' → logprob: -9.496688842773438
    9. '_column' → logprob: -10.121688842773438
    10. '```' → logprob: -10.121688842773438

Token 1107: ' stop' (ID: 5666)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2243831306695938
    2. ' ,' → logprob: -2.2243831157684326
    3. '```' → logprob: -3.0993831157684326
    4. '       ' → logprob: -3.7243831157684326
    5. ' c' → logprob: -5.974383354187012
    6. '[' → logprob: -6.099383354187012
    7. '        
' → logprob: -6.224383354187012
    8. '`' → logprob: -6.349383354187012
    9. ' _' → logprob: -6.724383354187012
    10. ' ' → logprob: -6.724383354187012

Token 1108: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.924876868724823
    2. 'at' → logprob: -1.0498769283294678
    3. ' at' → logprob: -2.5498769283294678
    4. '```' → logprob: -2.9248769283294678
    5. '   ' → logprob: -3.9248769283294678
    6. '           ' → logprob: -3.9248769283294678
    7. '[' → logprob: -4.049876689910889
    8. ',' → logprob: -4.299876689910889
    9. '_at' → logprob: -4.299876689910889
    10. '=' → logprob: -5.174876689910889

Token 1109: ' middle' (ID: 10006)
  Prédit: ' those'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' those' → logprob: -1.199406385421753
    2. ' least' → logprob: -1.699406385421753
    3. ' that' → logprob: -1.824406385421753
    4. ' rows' → logprob: -2.574406385421753
    5. ' the' → logprob: -2.699406385421753
    6. 'that' → logprob: -2.949406385421753
    7. 'those' → logprob: -3.074406385421753
    8. 'least' → logprob: -3.449406385421753
    9. 'rows' → logprob: -3.699406385421753
    10. 'the' → logprob: -4.324406623840332

Token 1110: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1593060493469238
    2. '(' → logprob: -1.2843060493469238
    3. '(r' → logprob: -1.4093060493469238
    4. '_s' → logprob: -3.534306049346924
    5. '_positions' → logprob: -3.534306049346924
    6. ' (' → logprob: -3.659306049346924
    7. '```' → logprob: -3.784306049346924
    8. '_' → logprob: -4.409306049346924
    9. '`' → logprob: -4.784306049346924
    10. '(s' → logprob: -5.159306049346924

Token 1111: ' shelf' (ID: 40978)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.4567962884902954
    2. 's' → logprob: -2.331796169281006
    3. ' that' → logprob: -2.581796169281006
    4. 'c' → logprob: -2.706796169281006
    5. 'the' → logprob: -2.956796169281006
    6. 'row' → logprob: -3.081796169281006
    7. 'r' → logprob: -3.956796169281006
    8. ' c' → logprob: -6.581796169281006
    9. ' row' → logprob: -6.581796169281006
    10. 'books' → logprob: -6.706796169281006

Token 1112: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2304813414812088
    2. '        
' → logprob: -1.7304813861846924
    3. '
' → logprob: -3.8554813861846924
    4. '```' → logprob: -6.730481147766113
    5. ',' → logprob: -6.855481147766113
    6. 's' → logprob: -7.105481147766113
    7. '           ' → logprob: -7.480481147766113
    8. '
        
' → logprob: -7.730481147766113
    9. '    
' → logprob: -7.855481147766113
    10. '`' → logprob: -8.105481147766113

Token 1113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01297115720808506
    2. '        
' → logprob: -4.512970924377441
    3. ',' → logprob: -7.762970924377441
    4. '```' → logprob: -7.762970924377441
    5. '#' → logprob: -8.137970924377441
    6. '
' → logprob: -8.887970924377441
    7. '           ' → logprob: -9.137970924377441
    8. '_' → logprob: -9.512970924377441
    9. '`' → logprob: -9.762970924377441
    10. '   ' → logprob: -9.887970924377441

Token 1114: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010992640629410744
    2. '        
' → logprob: -4.760992527008057
    3. '#' → logprob: -6.885992527008057
    4. '```' → logprob: -7.385992527008057
    5. ',' → logprob: -8.135993003845215
    6. '           ' → logprob: -9.010993003845215
    7. '`' → logprob: -9.385993003845215
    8. '
' → logprob: -10.260993003845215
    9. '   ' → logprob: -10.385993003845215
    10. '        ' → logprob: -10.760993003845215

Token 1115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015598179015796632
    2. '        
' → logprob: -9.50015640258789
    3. '#' → logprob: -9.87515640258789
    4. '   ' → logprob: -11.25015640258789
    5. '           ' → logprob: -12.12515640258789
    6. '```' → logprob: -12.25015640258789
    7. 'from' → logprob: -13.12515640258789
    8. 'import' → logprob: -13.25015640258789
    9. '        ' → logprob: -15.00015640258789
    10. '      ' → logprob: -15.37515640258789

Token 1116: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009105765260756016
    2. '```' → logprob: -5.759105682373047
    3. '#' (adapté à ' #') → logprob: -6.009105682373047
    4. '        
' → logprob: -6.134105682373047
    5. '
' → logprob: -7.509105682373047
    6. '   ' → logprob: -8.884105682373047
    7. 'from' → logprob: -9.509105682373047
    8. '           ' → logprob: -9.509105682373047
    9. 'for' → logprob: -9.634105682373047
    10. '`' → logprob: -9.634105682373047

Token 1117: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4439121186733246
    2. 'dp' → logprob: -1.193912148475647
    3. '#' → logprob: -3.9439120292663574
    4. 'from' → logprob: -4.943912029266357
    5. 'rows' → logprob: -5.568912029266357
    6. 'required' → logprob: -5.693912029266357
    7. '   ' → logprob: -5.943912029266357
    8. 'columns' → logprob: -6.068912029266357
    9. 'visited' → logprob: -6.068912029266357
    10. 'for' → logprob: -6.318912029266357

Token 1118: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2883565425872803
    2. 'dp' → logprob: -1.2883565425872803
    3. '   ' → logprob: -1.9133565425872803
    4. 'for' → logprob: -2.5383565425872803
    5. '       ' → logprob: -3.0383565425872803
    6. 'rows' → logprob: -3.2883565425872803
    7. 'required' → logprob: -3.9133565425872803
    8. 'needed' → logprob: -3.9133565425872803
    9. 'cols' → logprob: -4.163356781005859
    10. 'need' → logprob: -4.413356781005859

Token 1119: ' minimal' (ID: 19957)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8241576552391052
    2. '#' → logprob: -1.94915771484375
    3. 'rows' → logprob: -2.57415771484375
    4. 'prev' → logprob: -2.69915771484375
    5. 'required' → logprob: -2.82415771484375
    6. ' dp' → logprob: -3.32415771484375
    7. 'for' → logprob: -3.69915771484375
    8. '   ' → logprob: -4.07415771484375
    9. 'needed' → logprob: -4.19915771484375
    10. ' required' → logprob: -4.69915771484375

Token 1120: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5549230575561523
    2. ' cost' → logprob: -1.4299230575561523
    3. '_cost' → logprob: -2.1799230575561523
    4. '_' → logprob: -4.054923057556152
    5. ' ' → logprob: -4.929923057556152
    6. ' _' → logprob: -5.179923057556152
    7. '   ' → logprob: -5.304923057556152
    8. ' #' → logprob: -6.054923057556152
    9. '
' → logprob: -6.054923057556152
    10. 'steps' → logprob: -6.179923057556152

Token 1121: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9201491475105286
    2. '       ' → logprob: -1.7951490879058838
    3. '   ' → logprob: -2.295149087905884
    4. ' at' → logprob: -2.545149087905884
    5. '=' → logprob: -3.045149087905884
    6. '```' → logprob: -3.545149087905884
    7. ' for' → logprob: -3.920149087905884
    8. ' +=' → logprob: -4.295149326324463
    9. 'for' → logprob: -4.420149326324463
    10. '[' → logprob: -4.545149326324463

Token 1122: ':
' (ID: 734)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6133135557174683
    2. '       ' → logprob: -1.6133135557174683
    3. '```' → logprob: -1.9883135557174683
    4. ' N' → logprob: -2.363313674926758
    5. '   ' → logprob: -2.488313674926758
    6. '"' → logprob: -2.488313674926758
    7. '``' → logprob: -3.238313674926758
    8. '`' → logprob: -3.238313674926758
    9. ' (' → logprob: -3.363313674926758
    10. '1' → logprob: -3.363313674926758

Token 1123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009268058463931084
    2. '"' → logprob: -5.884268283843994
    3. '   ' → logprob: -6.759268283843994
    4. '```' → logprob: -6.759268283843994
    5. '        ' → logprob: -7.384268283843994
    6. '        
' → logprob: -7.509268283843994
    7. '(' → logprob: -7.634268283843994
    8. ''' → logprob: -8.134267807006836
    9. ' (' → logprob: -8.509267807006836
    10. '           ' → logprob: -8.509267807006836

Token 1124: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027232738211750984
    2. '"' → logprob: -5.152232646942139
    3. '```' → logprob: -5.527232646942139
    4. '        
' → logprob: -6.277232646942139
    5. '           ' → logprob: -6.402232646942139
    6. '0' → logprob: -6.527232646942139
    7. '   ' → logprob: -6.527232646942139
    8. '        ' → logprob: -7.027232646942139
    9. '1' → logprob: -7.152232646942139
    10. ' +' → logprob: -7.277232646942139

Token 1125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000517886015586555
    2. '   ' → logprob: -8.375517845153809
    3. '"' → logprob: -9.375517845153809
    4. '```' → logprob: -9.750517845153809
    5. '           ' → logprob: -10.625517845153809
    6. '#' → logprob: -10.625517845153809
    7. '`' → logprob: -11.000517845153809
    8. '        ' → logprob: -11.000517845153809
    9. '        
' → logprob: -11.250517845153809
    10. '(' → logprob: -11.250517845153809

Token 1126: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019994596019387245
    2. '   ' → logprob: -4.644994735717773
    3. '"' → logprob: -6.144994735717773
    4. 'for' → logprob: -6.144994735717773
    5. '#' (adapté à ' #') → logprob: -6.394994735717773
    6. '(' → logprob: -7.269994735717773
    7. '```' → logprob: -7.269994735717773
    8. ' for' → logprob: -7.644994735717773
    9. '0' → logprob: -8.019994735717773
    10. '1' → logprob: -8.269994735717773

Token 1127: ' Walking' (ID: 49024)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5127458572387695
    2. 'prev' → logprob: -2.5127458572387695
    3. 'cost' → logprob: -2.7627458572387695
    4. '   ' → logprob: -3.0127458572387695
    5. 'for' → logprob: -3.6377458572387695
    6. '```' → logprob: -3.7627458572387695
    7. '       ' → logprob: -3.8877458572387695
    8. 'ans' → logprob: -4.2627458572387695
    9. '#' → logprob: -4.2627458572387695
    10. '``' → logprob: -4.3877458572387695

Token 1128: ' from' (ID: 591)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.246740460395813
    2. 'from' → logprob: -1.746740460395813
    3. ' on' → logprob: -2.1217403411865234
    4. ' =' → logprob: -2.8717403411865234
    5. '   ' → logprob: -2.9967403411865234
    6. '`' → logprob: -3.1217403411865234
    7. '(r' → logprob: -3.1217403411865234
    8. '(' → logprob: -3.3717403411865234
    9. '_on' → logprob: -3.4967403411865234
    10. 'on' → logprob: -3.6217403411865234

Token 1129: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24391601979732513
    2. 'col' → logprob: -1.8689160346984863
    3. 'c' → logprob: -3.4939160346984863
    4. 'column' → logprob: -3.7439160346984863
    5. ' col' → logprob: -6.493916034698486
    6. '```' → logprob: -6.618916034698486
    7. '(' → logprob: -6.743916034698486
    8. ' ' → logprob: -6.868916034698486
    9. ' column' → logprob: -7.368916034698486
    10. ' c' → logprob: -7.618916034698486

Token 1130: ' intersection' (ID: 42002)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7418566346168518
    2. '   ' → logprob: -2.116856575012207
    3. ' (' → logprob: -2.491856575012207
    4. '```' → logprob: -2.616856575012207
    5. '_' → logprob: -2.866856575012207
    6. ',' → logprob: -3.116856575012207
    7. '`' → logprob: -3.741856575012207
    8. ' =' → logprob: -3.866856575012207
    9. '       ' → logprob: -4.241856575012207
    10. ' ' → logprob: -4.241856575012207

Token 1131: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00390967633575201
    2. ' (' → logprob: -6.003909587860107
    3. ',' → logprob: -7.503909587860107
    4. '`' → logprob: -8.503910064697266
    5. '```' → logprob: -9.003910064697266
    6. '+' → logprob: -9.378910064697266
    7. '0' → logprob: -9.378910064697266
    8. '   ' → logprob: -9.378910064697266
    9. '[' → logprob: -9.503910064697266
    10. '
' → logprob: -9.628910064697266

Token 1132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007071906002238393
    2. ',' → logprob: -7.750707149505615
    3. ' ' → logprob: -9.125707626342773
    4. '(' → logprob: -9.500707626342773
    5. '   ' → logprob: -10.875707626342773
    6. ')' → logprob: -11.125707626342773
    7. '4' → logprob: -11.500707626342773
    8. '```' → logprob: -11.500707626342773
    9. ' ,' → logprob: -11.500707626342773
    10. '1' → logprob: -11.875707626342773

Token 1133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000343210413120687
    2. ' ,' → logprob: -8.500343322753906
    3. '0' → logprob: -9.750343322753906
    4. ')' → logprob: -10.500343322753906
    5. '   ' → logprob: -10.625343322753906
    6. '```' → logprob: -11.375343322753906
    7. ',
' → logprob: -12.625343322753906
    8. '(' → logprob: -13.000343322753906
    9. '),(' → logprob: -13.125343322753906
    10. '),' → logprob: -13.250343322753906

Token 1134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.350386295001954e-05
    2. ',' → logprob: -9.750073432922363
    3. ')' → logprob: -11.500073432922363
    4. ' ' → logprob: -12.500073432922363
    5. '   ' → logprob: -15.125073432922363
    6. '```' → logprob: -15.375073432922363
    7. '1' → logprob: -15.875073432922363
    8. '<|end|>' → logprob: -16.00007438659668
    9. 'c' → logprob: -16.25007438659668
    10. '),' → logprob: -16.37507438659668

Token 1135: '),
' (ID: 2313)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4317365288734436
    2. ')' → logprob: -1.3067364692687988
    3. ' to' → logprob: -2.931736469268799
    4. ' ,' → logprob: -4.431736469268799
    5. ' )' → logprob: -6.056736469268799
    6. 'to' → logprob: -6.056736469268799
    7. '(' → logprob: -6.056736469268799
    8. '   ' → logprob: -6.556736469268799
    9. ')+' → logprob: -6.931736469268799
    10. ' ->' → logprob: -7.056736469268799

Token 1136: '       ' (ID: 309)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.48782452940940857
    2. '       ' → logprob: -1.112824559211731
    3. 'to' → logprob: -3.2378244400024414
    4. '   ' → logprob: -5.112824440002441
    5. '```' → logprob: -6.112824440002441
    6. ',' → logprob: -6.362824440002441
    7. '        ' → logprob: -6.612824440002441
    8. '           ' → logprob: -6.737824440002441
    9. '        
' → logprob: -7.112824440002441
    10. '    ' → logprob: -7.362824440002441

Token 1137: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04407074302434921
    2. ' to' → logprob: -3.6690707206726074
    3. 'to' → logprob: -5.169070720672607
    4. '   ' → logprob: -5.669070720672607
    5. '           ' → logprob: -6.044070720672607
    6. '        ' → logprob: -6.544070720672607
    7. '```' → logprob: -7.044070720672607
    8. '        
' → logprob: -7.169070720672607
    9. ',' → logprob: -7.544070720672607
    10. '"' → logprob: -7.669070720672607

Token 1138: ' For' (ID: 2214)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.41325968503952026
    2. '       ' → logprob: -2.288259744644165
    3. '   ' → logprob: -2.413259744644165
    4. 'to' → logprob: -2.538259744644165
    5. ' (' → logprob: -4.288259506225586
    6. ' ' → logprob: -4.663259506225586
    7. ' col' → logprob: -5.038259506225586
    8. '    ' → logprob: -5.413259506225586
    9. '           ' → logprob: -5.538259506225586
    10. '0' → logprob: -5.663259506225586

Token 1139: ' each' (ID: 2454)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0480363555252552
    2. 'c' → logprob: -3.5480363368988037
    3. ' col' → logprob: -4.173036575317383
    4. '   ' → logprob: -6.423036575317383
    5. 'col' → logprob: -7.173036575317383
    6. ' ' → logprob: -9.673036575317383
    7. ' column' → logprob: -9.923036575317383
    8. '       ' → logprob: -10.673036575317383
    9. ' each' → logprob: -10.673036575317383
    10. '_c' → logprob: -10.673036575317383

Token 1140: ' column' (ID: 6000)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6637517213821411
    2. 'c' → logprob: -1.2887517213821411
    3. ' column' → logprob: -2.4137516021728516
    4. 'col' → logprob: -3.1637516021728516
    5. 'column' → logprob: -3.2887516021728516
    6. ' col' → logprob: -3.2887516021728516
    7. '   ' → logprob: -6.038751602172852
    8. ' ' → logprob: -8.538751602172852
    9. '       ' → logprob: -9.413751602172852
    10. ' step' → logprob: -9.538751602172852

Token 1141: ' from' (ID: 591)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.9235938191413879
    2. '       ' → logprob: -1.5485937595367432
    3. '```' → logprob: -2.173593759536743
    4. 'c' → logprob: -2.673593759536743
    5. '
' → logprob: -3.173593759536743
    6. ' (' → logprob: -3.423593759536743
    7. '        
' → logprob: -3.673593759536743
    8. ' 
' → logprob: -3.798593759536743
    9. ',' → logprob: -4.048593997955322
    10. '`' → logprob: -4.423593997955322

Token 1142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01287676952779293
    2. 'c' → logprob: -5.137876987457275
    3. '1' → logprob: -5.137876987457275
    4. ' ' → logprob: -7.262876987457275
    5. ' c' → logprob: -8.387876510620117
    6. '   ' → logprob: -10.012876510620117
    7. 'range' → logprob: -10.637876510620117
    8. '```' → logprob: -11.012876510620117
    9. 'col' → logprob: -11.387876510620117
    10. '`' → logprob: -11.637876510620117

Token 1143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000820230518002063
    2. 'c' → logprob: -7.625820159912109
    3. '1' → logprob: -8.50082015991211
    4. '```' → logprob: -10.37582015991211
    5. 'range' → logprob: -10.50082015991211
    6. ' ' → logprob: -10.75082015991211
    7. '   ' → logprob: -11.12582015991211
    8. 'col' → logprob: -11.12582015991211
    9. '
' → logprob: -12.12582015991211
    10. ' c' → logprob: -13.12582015991211

Token 1144: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24823901057243347
    2. '   ' → logprob: -1.8732390403747559
    3. ',' → logprob: -3.873239040374756
    4. 'to' → logprob: -3.873239040374756
    5. '+' → logprob: -4.248239040374756
    6. '```' → logprob: -5.748239040374756
    7. '       ' → logprob: -6.373239040374756
    8. ' +' → logprob: -6.373239040374756
    9. ':' → logprob: -7.123239040374756
    10. ' ' → logprob: -7.748239040374756

Token 1145: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004739126190543175
    2. ' N' → logprob: -5.379739284515381
    3. '   ' → logprob: -9.754738807678223
    4. 'c' → logprob: -10.254738807678223
    5. '4' → logprob: -11.879738807678223
    6. '```' → logprob: -12.379738807678223
    7. ' c' → logprob: -12.504738807678223
    8. '1' → logprob: -12.879738807678223
    9. ' ' → logprob: -13.004738807678223
    10. '
' → logprob: -13.254738807678223

Token 1146: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8983575701713562
    2. '+' → logprob: -1.148357629776001
    3. ':
' → logprob: -2.148357629776001
    4. ',' → logprob: -3.023357629776001
    5. '```' → logprob: -3.273357629776001
    6. '       ' → logprob: -3.898357629776001
    7. '   ' → logprob: -4.148357391357422
    8. '
' → logprob: -4.523357391357422
    9. ' +' → logprob: -4.648357391357422
    10. '-' → logprob: -5.398357391357422

Token 1147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010616567305987701
    2. '0' → logprob: -9.875105857849121
    3. '4' → logprob: -10.375105857849121
    4. '```' → logprob: -11.375105857849121
    5. ' ' → logprob: -12.500105857849121
    6. '3' → logprob: -12.625105857849121
    7. '
' → logprob: -13.375105857849121
    8. ')' → logprob: -14.000105857849121
    9. '+' → logprob: -14.125105857849121
    10. '   ' → logprob: -14.875105857849121

Token 1148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5384759306907654
    2. ',' → logprob: -2.03847599029541
    3. '       ' → logprob: -2.16347599029541
    4. '```' → logprob: -2.53847599029541
    5. ':
' → logprob: -2.66347599029541
    6. '   ' → logprob: -5.03847599029541
    7. ' :' → logprob: -5.41347599029541
    8. ' (' → logprob: -6.78847599029541
    9. '
' → logprob: -6.78847599029541
    10. '           ' → logprob: -6.91347599029541

Token 1149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04154300317168236
    2. '           ' → logprob: -3.5415430068969727
    3. ',' → logprob: -5.791543006896973
    4. '```' → logprob: -6.041543006896973
    5. '        
' → logprob: -6.541543006896973
    6. '   ' → logprob: -6.916543006896973
    7. '        ' → logprob: -6.916543006896973
    8. ' (' → logprob: -7.041543006896973
    9. ':' → logprob: -8.291543006896973
    10. ':
' → logprob: -8.541543006896973

Token 1150: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037183742970228195
    2. '           ' → logprob: -3.5371837615966797
    3. '
' → logprob: -6.41218376159668
    4. '        
' → logprob: -6.53718376159668
    5. '   ' → logprob: -6.78718376159668
    6. ',' → logprob: -6.78718376159668
    7. '```' → logprob: -7.16218376159668
    8. '        ' → logprob: -7.41218376159668
    9. '               ' → logprob: -9.41218376159668
    10. '    ' → logprob: -9.91218376159668

Token 1151: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02598162554204464
    2. '           ' → logprob: -4.900981426239014
    3. '```' → logprob: -4.900981426239014
    4. '        ' → logprob: -5.650981426239014
    5. '        
' → logprob: -6.150981426239014
    6. '   ' → logprob: -6.650981426239014
    7. ',' → logprob: -6.900981426239014
    8. ' ' → logprob: -7.900981426239014
    9. ' ' → logprob: -7.900981426239014
    10. ' (' → logprob: -8.025981903076172

Token 1152: ' Move' (ID: 25485)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10785127431154251
    2. ' rows' → logprob: -2.982851266860962
    3. '   ' → logprob: -4.107851505279541
    4. '           ' → logprob: -4.982851505279541
    5. 'rows' → logprob: -5.232851505279541
    6. '```' → logprob: -5.357851505279541
    7. ' for' → logprob: -6.357851505279541
    8. ' #' → logprob: -6.482851505279541
    9. ' ' → logprob: -6.482851505279541
    10. ' ' → logprob: -6.857851505279541

Token 1153: ' in' (ID: 306)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5719336867332458
    2. ' from' → logprob: -2.5719337463378906
    3. 'from' → logprob: -2.6969337463378906
    4. ' ' → logprob: -2.8219337463378906
    5. '(' → logprob: -2.9469337463378906
    6. ' on' → logprob: -3.0719337463378906
    7. '   ' → logprob: -3.6969337463378906
    8. ' to' → logprob: -3.6969337463378906
    9. ' =' → logprob: -4.196933746337891
    10. 'r' → logprob: -4.446933746337891

Token 1154: ' current' (ID: 2208)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.4786380529403687
    2. 'row' → logprob: -1.6036380529403687
    3. 'the' → logprob: -1.7286380529403687
    4. 'range' → logprob: -1.8536380529403687
    5. ' row' → logprob: -2.603638172149658
    6. ' range' → logprob: -2.853638172149658
    7. 'col' → logprob: -3.853638172149658
    8. '   ' → logprob: -3.978638172149658
    9. '```' → logprob: -3.978638172149658
    10. ' col' → logprob: -4.853638172149658

Token 1155: ' column' (ID: 6000)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -1.1425259113311768
    2. ' ,' → logprob: -1.6425259113311768
    3. ' _' → logprob: -2.7675259113311768
    4. '_row' → logprob: -2.7675259113311768
    5. 'row' → logprob: -2.8925259113311768
    6. ' ' → logprob: -2.8925259113311768
    7. ',' → logprob: -3.0175259113311768
    8. ' column' → logprob: -3.1425259113311768
    9. '_col' → logprob: -3.3925259113311768
    10. '   ' → logprob: -3.6425259113311768

Token 1156: ' intersection' (ID: 42002)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.48296037316322327
    2. '   ' → logprob: -2.7329604625701904
    3. '       ' → logprob: -2.9829604625701904
    4. ',' → logprob: -3.2329604625701904
    5. '```' → logprob: -3.6079604625701904
    6. '\t' → logprob: -3.7329604625701904
    7. '[' → logprob: -3.8579604625701904
    8. '(r' → logprob: -3.9829604625701904
    9. ' to' → logprob: -4.107960224151611
    10. '        
' → logprob: -4.482960224151611

Token 1157: ' rows' (ID: 13585)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5498858690261841
    2. '(' → logprob: -2.1748857498168945
    3. '   ' → logprob: -2.5498857498168945
    4. '(r' → logprob: -2.7998857498168945
    5. ' (' → logprob: -3.2998857498168945
    6. '```' → logprob: -3.4248857498168945
    7. '[' → logprob: -3.6748857498168945
    8. '	' → logprob: -4.5498857498168945
    9. ',' → logprob: -4.6748857498168945
    10. '[r' → logprob: -4.9248857498168945

Token 1158: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45121052861213684
    2. '[' → logprob: -2.4512104988098145
    3. '```' → logprob: -2.5762104988098145
    4. '[r' → logprob: -3.3262104988098145
    5. '`' → logprob: -3.9512104988098145
    6. ',' → logprob: -3.9512104988098145
    7. '   ' → logprob: -4.0762104988098145
    8. ':' → logprob: -4.2012104988098145
    9. 's' → logprob: -4.5762104988098145
    10. '``' → logprob: -4.7012104988098145

Token 1159: ' visits' (ID: 29425)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cover' → logprob: -2.138092279434204
    2. ' find' → logprob: -2.263092279434204
    3. 'put' → logprob: -2.388092279434204
    4. 'find' → logprob: -2.513092279434204
    5. 'cover' → logprob: -2.513092279434204
    6. '```' → logprob: -2.888092279434204
    7. 'complete' → logprob: -3.138092279434204
    8. 'next' → logprob: -3.263092279434204
    9. ' the' → logprob: -3.263092279434204
    10. '0' → logprob: -3.263092279434204

Token 1160: ' all' (ID: 722)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6873728632926941
    2. '[' → logprob: -1.1873729228973389
    3. '       ' → logprob: -3.062372922897339
    4. '```' → logprob: -3.187372922897339
    5. '   ' → logprob: -3.687372922897339
    6. ' ' → logprob: -4.68737268447876
    7. '[r' → logprob: -4.81237268447876
    8. '[current' → logprob: -5.06237268447876
    9. '`' → logprob: -5.56237268447876
    10. ' _' → logprob: -5.68737268447876

Token 1161: ' required' (ID: 3759)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.08829154819250107
    2. 'required' → logprob: -3.088291645050049
    3. 'needed' → logprob: -4.463291645050049
    4. ' rows' → logprob: -4.588291645050049
    5. 'r' → logprob: -5.338291645050049
    6. 'books' → logprob: -6.213291645050049
    7. '```' → logprob: -6.338291645050049
    8. ' required' → logprob: -6.463291645050049
    9. 'necessary' → logprob: -6.838291645050049
    10. 's' → logprob: -7.463291645050049

Token 1162: ' midd' (ID: 27220)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.6348978877067566
    2. '_rows' → logprob: -1.0098979473114014
    3. ' rows' → logprob: -3.3848979473114014
    4. '_inter' → logprob: -4.009897708892822
    5. '   ' → logprob: -4.259897708892822
    6. 'positions' → logprob: -4.884897708892822
    7. '_positions' → logprob: -5.134897708892822
    8. '_s' → logprob: -5.634897708892822
    9. '       ' → logprob: -5.759897708892822
    10. 's' → logprob: -6.259897708892822

Token 1163: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0033723425585776567
    2. 'd' → logprob: -6.2533721923828125
    3. 'les' → logprob: -7.1283721923828125
    4. '(' → logprob: -7.7533721923828125
    5. 'l' → logprob: -9.378372192382812
    6. '(r' → logprob: -9.753372192382812
    7. '(le' → logprob: -11.128372192382812
    8. ',' → logprob: -12.253372192382812
    9. '0' → logprob: -12.628372192382812
    10. 'points' → logprob: -12.628372192382812

Token 1164: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3591114282608032
    2. '   ' → logprob: -2.1091113090515137
    3. '```' → logprob: -2.9841113090515137
    4. '[' → logprob: -3.2341113090515137
    5. '_' → logprob: -3.9841113090515137
    6. '[r' → logprob: -4.109111309051514
    7. ':' → logprob: -4.359111309051514
    8. '``' → logprob: -4.609111309051514
    9. '           ' → logprob: -5.734111309051514
    10. ',' → logprob: -5.859111309051514

Token 1165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10990763455629349
    2. '```' → logprob: -3.484907627105713
    3. '[' → logprob: -4.359907627105713
    4. '_' → logprob: -4.484907627105713
    5. '   ' → logprob: -4.609907627105713
    6. '        
' → logprob: -4.734907627105713
    7. '`' → logprob: -4.859907627105713
    8. ':' → logprob: -5.234907627105713
    9. ',' → logprob: -5.859907627105713
    10. '[]' → logprob: -5.984907627105713

Token 1166: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01696608029305935
    2. '        
' → logprob: -5.266965866088867
    3. '```' → logprob: -5.641965866088867
    4. '           ' → logprob: -6.141965866088867
    5. '   ' → logprob: -6.891965866088867
    6. '`' → logprob: -6.891965866088867
    7. ',' → logprob: -7.266965866088867
    8. '(' → logprob: -7.891965866088867
    9. '        ' → logprob: -8.266965866088867
    10. '[' → logprob: -8.391965866088867

Token 1167: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006449731532484293
    2. '```' → logprob: -5.2564496994018555
    3. '           ' → logprob: -7.2564496994018555
    4. '`' → logprob: -8.631449699401855
    5. '        
' → logprob: -9.631449699401855
    6. '   ' → logprob: -9.756449699401855
    7. ',' → logprob: -9.756449699401855
    8. '``' → logprob: -10.006449699401855
    9. '        ' → logprob: -10.756449699401855
    10. '
' → logprob: -11.756449699401855

Token 1168: ' Put' (ID: 16924)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0290366318076849
    2. '   ' → logprob: -5.029036521911621
    3. '           ' → logprob: -5.029036521911621
    4. '```' → logprob: -5.279036521911621
    5. '        
' → logprob: -6.154036521911621
    6. '`' → logprob: -6.779036521911621
    7. '
' → logprob: -7.029036521911621
    8. '#' → logprob: -7.279036521911621
    9. ' ' → logprob: -7.404036521911621
    10. '        ' → logprob: -7.404036521911621

Token 1169: ' books' (ID: 7187)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.49077439308166504
    2. ' the' → logprob: -2.615774393081665
    3. 'books' → logprob: -2.740774393081665
    4. '       ' → logprob: -3.240774393081665
    5. ' books' → logprob: -3.490774393081665
    6. ' all' → logprob: -3.740774393081665
    7. '   ' → logprob: -4.115774154663086
    8. ' a' → logprob: -4.365774154663086
    9. '        ' → logprob: -4.365774154663086
    10. 'the' → logprob: -4.490774154663086

Token 1170: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22611525654792786
    2. '```' → logprob: -2.1011152267456055
    3. '``' → logprob: -4.3511152267456055
    4. ':' → logprob: -4.8511152267456055
    5. '`' → logprob: -4.8511152267456055
    6. '[' → logprob: -4.8511152267456055
    7. '[r' → logprob: -4.9761152267456055
    8. '        
' → logprob: -5.1011152267456055
    9. ',' → logprob: -5.4761152267456055
    10. '           ' → logprob: -5.6011152267456055

Token 1171: ' these' (ID: 1879)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.944844126701355
    2. ' middle' → logprob: -1.944844126701355
    3. 'middle' → logprob: -2.0698442459106445
    4. 'that' → logprob: -2.1948442459106445
    5. 'current' → logprob: -2.3198442459106445
    6. ' that' → logprob: -2.4448442459106445
    7. ' required' → logprob: -3.3198442459106445
    8. 'those' → logprob: -3.4448442459106445
    9. ' those' → logprob: -3.5698442459106445
    10. 'the' → logprob: -3.5698442459106445

Token 1172: ' midd' (ID: 27220)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.7029069662094116
    2. '[r' → logprob: -1.9529069662094116
    3. '_rows' → logprob: -2.077907085418701
    4. 's' → logprob: -2.077907085418701
    5. ' rows' → logprob: -2.202907085418701
    6. '_' → logprob: -2.702907085418701
    7. '(r' → logprob: -3.452907085418701
    8. 'rows' → logprob: -3.577907085418701
    9. ' (' → logprob: -3.702907085418701
    10. ' shelves' → logprob: -3.702907085418701

Token 1173: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.30673083662986755
    2. 'd' → logprob: -1.55673086643219
    3. 'le' → logprob: -3.3067307472229004
    4. '(' → logprob: -5.1817307472229
    5. 'idd' → logprob: -6.1817307472229
    6. '_' → logprob: -7.1817307472229
    7. '0' → logprob: -7.3067307472229
    8. '#' → logprob: -7.3067307472229
    9. 's' → logprob: -7.4317307472229
    10. ',' → logprob: -7.5567307472229

Token 1174: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23787587881088257
    2. ',' → logprob: -3.2378759384155273
    3. '[r' → logprob: -3.2378759384155273
    4. '```' → logprob: -3.2378759384155273
    5. ':' → logprob: -3.9878759384155273
    6. '[' → logprob: -4.112875938415527
    7. '   ' → logprob: -4.737875938415527
    8. '        
' → logprob: -4.987875938415527
    9. '
' → logprob: -5.237875938415527
    10. ':
' → logprob: -5.737875938415527

Token 1175: 'cost' (ID: 33457)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3698827028274536
    2. 'r' → logprob: -2.244882583618164
    3. ' rows' → logprob: -3.119882583618164
    4. ' )' → logprob: -4.244882583618164
    5. '(r' → logprob: -4.369882583618164
    6. '),' → logprob: -4.494882583618164
    7. ')
' → logprob: -4.494882583618164
    8. ' at' → logprob: -4.619882583618164
    9. 'rows' → logprob: -4.619882583618164
    10. ' r' → logprob: -4.744882583618164

Token 1176: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1028287410736084
    2. ' +' → logprob: -1.3528287410736084
    3. ' =' → logprob: -1.8528287410736084
    4. '1' → logprob: -2.2278287410736084
    5. '0' → logprob: -2.7278287410736084
    6. ' +=' → logprob: -3.2278287410736084
    7. '=' → logprob: -3.9778287410736084
    8. '+' → logprob: -4.3528289794921875
    9. ')' → logprob: -6.3528289794921875
    10. '```' → logprob: -6.4778289794921875

Token 1177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.442179411649704
    2. ' ' → logprob: -1.3171794414520264
    3. '1' → logprob: -3.3171794414520264
    4. '=' → logprob: -3.9421794414520264
    5. ' =' → logprob: -4.192179203033447
    6. '+' → logprob: -5.567179203033447
    7. '```' → logprob: -5.567179203033447
    8. ' +' → logprob: -5.692179203033447
    9. ')' → logprob: -6.067179203033447
    10. ' +=' → logprob: -7.067179203033447

Token 1178: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11044374108314514
    2. ')' → logprob: -2.4854438304901123
    3. ' )' → logprob: -4.735443592071533
    4. ' +' → logprob: -5.110443592071533
    5. ' .' → logprob: -5.985443592071533
    6. '+' → logprob: -6.735443592071533
    7. ' ' → logprob: -7.110443592071533
    8. '       ' → logprob: -7.235443592071533
    9. '   ' → logprob: -8.360444068908691
    10. '),' → logprob: -9.360444068908691

Token 1179: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4569509029388428
    2. ')' → logprob: -1.5819509029388428
    3. '.' → logprob: -2.3319509029388428
    4. '0' → logprob: -3.3319509029388428
    5. '       ' → logprob: -5.081951141357422
    6. ')
' → logprob: -5.206951141357422
    7. '   ' → logprob: -5.456951141357422
    8. '```' → logprob: -5.831951141357422
    9. 'def' → logprob: -6.581951141357422
    10. ' ' → logprob: -7.456951141357422

Token 1180: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2011563926935196
    2. ')' → logprob: -2.2011563777923584
    3. ' )' → logprob: -3.4511563777923584
    4. ' *' → logprob: -4.2011566162109375
    5. '+' → logprob: -4.8261566162109375
    6. ',' → logprob: -4.8261566162109375
    7. ' ,' → logprob: -5.9511566162109375
    8. ' step' → logprob: -6.4511566162109375
    9. '*' → logprob: -6.5761566162109375
    10. '
' → logprob: -7.7011566162109375

Token 1181: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01265114825218916
    2. ' ' → logprob: -4.387650966644287
    3. '1' → logprob: -9.762651443481445
    4. '
' → logprob: -11.262651443481445
    5. '   ' → logprob: -11.512651443481445
    6. ' ' → logprob: -11.512651443481445
    7. '```' → logprob: -11.762651443481445
    8. 'cost' → logprob: -12.512651443481445
    9. ')' → logprob: -12.575151443481445
    10. ' (' → logprob: -12.700151443481445

Token 1182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013511877041310072
    2. '1' → logprob: -7.126351356506348
    3. ' ' → logprob: -7.751351356506348
    4. '```' → logprob: -10.376351356506348
    5. '   ' → logprob: -11.001351356506348
    6. '(' → logprob: -11.251351356506348
    7. '
' → logprob: -11.688851356506348
    8. ' ' → logprob: -12.563851356506348
    9. '       ' → logprob: -12.626351356506348
    10. '``' → logprob: -12.626351356506348

Token 1183: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001463299704482779
    2. ')' → logprob: -9.62514591217041
    3. '+' → logprob: -10.00014591217041
    4. ' +' → logprob: -11.50014591217041
    5. '0' → logprob: -11.75014591217041
    6. '*' → logprob: -12.50014591217041
    7. '5' → logprob: -12.87514591217041
    8. ' .' → logprob: -13.25014591217041
    9. '#' → logprob: -13.37514591217041
    10. ',' → logprob: -13.87514591217041

Token 1184: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.895480277715251e-06
    2. '.' → logprob: -13.125008583068848
    3. '```' → logprob: -13.625008583068848
    4. '   ' → logprob: -13.875008583068848
    5. ' ' → logprob: -14.000008583068848
    6. '0' → logprob: -14.312508583068848
    7. ')' → logprob: -14.750008583068848
    8. '25' → logprob: -14.875008583068848
    9. '       ' → logprob: -15.437508583068848
    10. '+' → logprob: -15.437508583068848

Token 1185: ' per' (ID: 777)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029822465032339096
    2. ' +' → logprob: -4.77982234954834
    3. ')
' → logprob: -4.77982234954834
    4. '+' → logprob: -5.02982234954834
    5. ' )' → logprob: -6.52982234954834
    6. '   ' → logprob: -7.27982234954834
    7. ')+' → logprob: -7.27982234954834
    8. '*' → logprob: -7.65482234954834
    9. '```' → logprob: -7.65482234954834
    10. '       ' → logprob: -7.77982234954834

Token 1186: ' shelf' (ID: 40978)
  Prédit: ' required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' required' → logprob: -1.0385996103286743
    2. ' shelf' → logprob: -1.9135996103286743
    3. 'required' → logprob: -2.1635994911193848
    4. 's' → logprob: -2.5385994911193848
    5. 'row' → logprob: -2.5385994911193848
    6. 'middle' → logprob: -2.7885994911193848
    7. 'book' → logprob: -3.4135994911193848
    8. ' row' → logprob: -3.6635994911193848
    9. ' book' → logprob: -3.6635994911193848
    10. ' middle' → logprob: -4.038599491119385

Token 1187: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3577846884727478
    2. '   ' → logprob: -2.6077847480773926
    3. '```' → logprob: -3.1077847480773926
    4. '[r' → logprob: -3.3577847480773926
    5. '
' → logprob: -3.4827847480773926
    6. ')' → logprob: -4.107784748077393
    7. ' +' → logprob: -4.357784748077393
    8. '(r' → logprob: -4.857784748077393
    9. '[' → logprob: -4.982784748077393
    10. '_' → logprob: -4.982784748077393

Token 1188: ' going' (ID: 2966)
  Prédit: ' visiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visiting' → logprob: -1.8513212203979492
    2. 'vis' → logprob: -2.101321220397949
    3. 'each' → logprob: -2.226321220397949
    4. ' each' → logprob: -2.851321220397949
    5. 's' → logprob: -2.976321220397949
    6. ' stopping' → logprob: -3.226321220397949
    7. 'middle' → logprob: -3.476321220397949
    8. 'visit' → logprob: -3.601321220397949
    9. 'put' → logprob: -3.601321220397949
    10. 'the' → logprob: -3.726321220397949

Token 1189: ' to' (ID: 316)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17007490992546082
    2. 'and' → logprob: -2.170074939727783
    3. ' to' → logprob: -4.045074939727783
    4. 'to' → logprob: -5.045074939727783
    5. ' +' → logprob: -5.795074939727783
    6. '   ' → logprob: -5.795074939727783
    7. 'from' → logprob: -6.170074939727783
    8. ' in' → logprob: -6.420074939727783
    9. ' on' → logprob: -6.670074939727783
    10. 'on' → logprob: -7.170074939727783

Token 1190: ' and' (ID: 326)
  Prédit: ' middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' middle' → logprob: -1.0162514448165894
    2. 'middle' → logprob: -1.0162514448165894
    3. ' and' → logprob: -2.016251564025879
    4. 'and' → logprob: -2.391251564025879
    5. ' shelf' → logprob: -3.391251564025879
    6. 's' → logprob: -5.016251564025879
    7. 'the' → logprob: -5.516251564025879
    8. ' the' → logprob: -5.891251564025879
    9. ' midd' → logprob: -6.891251564025879
    10. 'midd' → logprob: -7.266251564025879

Token 1191: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17797668278217316
    2. 'coming' → logprob: -2.177976608276367
    3. 'return' → logprob: -3.302976608276367
    4. 'back' → logprob: -4.552976608276367
    5. 'fro' → logprob: -6.677976608276367
    6. ' from' → logprob: -7.302976608276367
    7. '```' → logprob: -9.052976608276367
    8. '0' → logprob: -9.427976608276367
    9. ' coming' → logprob: -9.552976608276367
    10. ' back' → logprob: -9.677976608276367

Token 1192: ' middle' (ID: 10006)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.7427705526351929
    2. ' middle' → logprob: -1.8677705526351929
    3. 'the' → logprob: -2.7427706718444824
    4. ')' → logprob: -2.9927706718444824
    5. ' the' → logprob: -2.9927706718444824
    6. 's' → logprob: -3.7427706718444824
    7. '`' → logprob: -3.7427706718444824
    8. '   ' → logprob: -3.8677706718444824
    9. '_' → logprob: -3.9927706718444824
    10. '```' → logprob: -4.242770671844482

Token 1193: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10256579518318176
    2. '[r' → logprob: -3.8525657653808594
    3. ',' → logprob: -4.227565765380859
    4. '        
' → logprob: -4.602565765380859
    5. '(r' → logprob: -4.727565765380859
    6. '   ' → logprob: -4.977565765380859
    7. ':' → logprob: -5.602565765380859
    8. '[' → logprob: -5.727565765380859
    9. '```' → logprob: -5.727565765380859
    10. '_' → logprob: -5.727565765380859

Token 1194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12244825065135956
    2. '
' → logprob: -3.247448205947876
    3. '   ' → logprob: -3.497448205947876
    4. '```' → logprob: -4.122448444366455
    5. '        
' → logprob: -5.372448444366455
    6. ',' → logprob: -5.497448444366455
    7. '`' → logprob: -6.122448444366455
    8. ':' → logprob: -6.122448444366455
    9. ' +' → logprob: -6.622448444366455
    10. '(' → logprob: -6.747448444366455

Token 1195: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029948914423584938
    2. '```' → logprob: -5.154948711395264
    3. '           ' → logprob: -5.404948711395264
    4. ' +' → logprob: -5.654948711395264
    5. '   ' → logprob: -6.154948711395264
    6. ',' → logprob: -6.279948711395264
    7. '        
' → logprob: -6.279948711395264
    8. '\' → logprob: -6.404948711395264
    9. '+' → logprob: -7.029948711395264
    10. '(' → logprob: -7.154948711395264

Token 1196: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05252331867814064
    2. '```' → logprob: -4.427523136138916
    3. '        
' → logprob: -5.052523136138916
    4. '           ' → logprob: -5.052523136138916
    5. '`' → logprob: -5.677523136138916
    6. '   ' → logprob: -6.052523136138916
    7. ' +' → logprob: -6.052523136138916
    8. '"' → logprob: -6.302523136138916
    9. ',' → logprob: -6.302523136138916
    10. ''' → logprob: -6.552523136138916

Token 1197: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04213428124785423
    2. '           ' → logprob: -3.6671342849731445
    3. '   ' → logprob: -5.1671342849731445
    4. '        
' → logprob: -6.6671342849731445
    5. ' ' → logprob: -6.9171342849731445
    6. '"' → logprob: -6.9171342849731445
    7. '```' → logprob: -6.9171342849731445
    8. ' +' → logprob: -7.1671342849731445
    9. '               ' → logprob: -7.6671342849731445
    10. '`' → logprob: -7.6671342849731445

Token 1198: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.18928702175617218
    2. '   ' → logprob: -2.689286947250366
    3. 'move' → logprob: -2.939286947250366
    4. ' go' → logprob: -3.689286947250366
    5. ' walk' → logprob: -5.064287185668945
    6. ' ' → logprob: -5.189287185668945
    7. 'go' → logprob: -5.439287185668945
    8. '#' → logprob: -6.064287185668945
    9. ' ' → logprob: -6.064287185668945
    10. 'walk' → logprob: -6.439287185668945

Token 1199: ' right' (ID: 1849)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6896679997444153
    2. ' to' → logprob: -1.9396679401397705
    3. 'to' → logprob: -2.1896679401397705
    4. '   ' → logprob: -3.0646679401397705
    5. ' from' → logprob: -3.0646679401397705
    6. ' on' → logprob: -3.4396679401397705
    7. '```' → logprob: -3.8146679401397705
    8. 'on' → logprob: -4.18966817855835
    9. 'c' → logprob: -4.43966817855835
    10. ' ' → logprob: -4.56466817855835

Token 1200: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019254541024565697
    2. '        
' → logprob: -5.894254684448242
    3. '   ' → logprob: -6.019254684448242
    4. '           ' → logprob: -6.144254684448242
    5. '`' → logprob: -6.519254684448242
    6. '        ' → logprob: -6.644254684448242
    7. '```' → logprob: -6.769254684448242
    8. '[' → logprob: -6.769254684448242
    9. ':' → logprob: -6.894254684448242
    10. '_' → logprob: -7.269254684448242

Token 1201: ' next' (ID: 2613)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -1.0441523790359497
    2. '(r' → logprob: -1.5441523790359497
    3. '(c' → logprob: -2.04415225982666
    4. ' (' → logprob: -2.29415225982666
    5. 'next' → logprob: -2.41915225982666
    6. 'c' → logprob: -3.04415225982666
    7. '(' → logprob: -4.16915225982666
    8. ' next' → logprob: -4.29415225982666
    9. ' intersection' → logprob: -4.41915225982666
    10. '(row' → logprob: -5.04415225982666

Token 1202: ' column' (ID: 6000)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1992146223783493
    2. '   ' → logprob: -2.5742146968841553
    3. '[' → logprob: -3.1992146968841553
    4. '_' → logprob: -4.324214458465576
    5. '[r' → logprob: -4.449214458465576
    6. '```' → logprob: -5.074214458465576
    7. ' _' → logprob: -5.324214458465576
    8. '
' → logprob: -6.199214458465576
    9. '        
' → logprob: -6.324214458465576
    10. '`' → logprob: -6.324214458465576

Token 1203: ' intersections' (ID: 143513)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049683596938848495
    2. '
' → logprob: -4.549683570861816
    3. '        
' → logprob: -4.674683570861816
    4. '   ' → logprob: -5.549683570861816
    5. ':' → logprob: -5.674683570861816
    6. '`' → logprob: -5.799683570861816
    7. '```' → logprob: -6.174683570861816
    8. '_' → logprob: -6.174683570861816
    9. '           ' → logprob: -6.299683570861816
    10. '[' → logprob: -6.674683570861816

Token 1204: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08812662959098816
    2. '
' → logprob: -3.3381266593933105
    3. '        
' → logprob: -4.7131266593933105
    4. '```' → logprob: -4.9631266593933105
    5. '_' → logprob: -5.2131266593933105
    6. '   ' → logprob: -5.3381266593933105
    7. '`' → logprob: -5.4631266593933105
    8. ':' → logprob: -5.5881266593933105
    9. ' _' → logprob: -5.8381266593933105
    10. '[' → logprob: -6.7131266593933105

Token 1205: 'cost' (ID: 33457)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7368287444114685
    2. '1' → logprob: -0.9868287444114685
    3. 'r' → logprob: -2.6118288040161133
    4. '(' → logprob: -3.9868288040161133
    5. ' (' → logprob: -4.736828804016113
    6. '4' → logprob: -4.986828804016113
    7. '(r' → logprob: -5.236828804016113
    8. ',' → logprob: -5.486828804016113
    9. 'c' → logprob: -5.486828804016113
    10. '```' → logprob: -5.486828804016113

Token 1206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1555199921131134
    2. ' ' → logprob: -2.405519962310791
    3. ' =' → logprob: -3.780519962310791
    4. '=' → logprob: -4.280519962310791
    5. ' +' → logprob: -4.530519962310791
    6. '   ' → logprob: -6.280519962310791
    7. '+' → logprob: -6.280519962310791
    8. '```' → logprob: -6.905519962310791
    9. '4' → logprob: -7.405519962310791
    10. '`' → logprob: -7.530519962310791

Token 1207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026533082127571106
    2. ' ' → logprob: -3.6515331268310547
    3. '+' → logprob: -9.401533126831055
    4. ' +' → logprob: -9.651533126831055
    5. '`' → logprob: -10.651533126831055
    6. '```' → logprob: -10.651533126831055
    7. '4' → logprob: -10.776533126831055
    8. '=' → logprob: -11.776533126831055
    9. ' =' → logprob: -12.901533126831055
    10. '   ' → logprob: -13.276533126831055

Token 1208: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27772530913352966
    2. '   ' → logprob: -2.2777252197265625
    3. '
' → logprob: -3.7777252197265625
    4. '[' → logprob: -3.7777252197265625
    5. ':' → logprob: -3.9027252197265625
    6. ')' → logprob: -3.9027252197265625
    7. '```' → logprob: -4.5277252197265625
    8. ',' → logprob: -4.6527252197265625
    9. ':
' → logprob: -5.6527252197265625
    10. '):' → logprob: -5.6527252197265625

Token 1209: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06634683161973953
    2. '
' → logprob: -3.8163468837738037
    3. '        
' → logprob: -4.316346645355225
    4. '`' → logprob: -5.566346645355225
    5. ':' → logprob: -5.816346645355225
    6. ':
' → logprob: -5.816346645355225
    7. '```' → logprob: -5.816346645355225
    8. '           ' → logprob: -6.191346645355225
    9. ',' → logprob: -6.316346645355225
    10. '"' → logprob: -6.316346645355225

Token 1210: ' some' (ID: 1236)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.601892352104187
    2. ' the' → logprob: -0.976892352104187
    3. 'same' → logprob: -3.1018924713134766
    4. ' same' → logprob: -3.6018924713134766
    5. ' that' → logprob: -6.851892471313477
    6. 'that' → logprob: -7.351892471313477
    7. 'current' → logprob: -7.601892471313477
    8. '   ' → logprob: -7.726892471313477
    9. ' current' → logprob: -7.976892471313477
    10. ' row' → logprob: -8.601892471313477

Token 1211: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.640164852142334
    2. ' row' → logprob: -0.765164852142334
    3. '(row' → logprob: -5.765164852142334
    4. '   ' → logprob: -5.890164852142334
    5. '#' → logprob: -8.015165328979492
    6. '```' → logprob: -8.265165328979492
    7. ' ' → logprob: -8.765165328979492
    8. '_row' → logprob: -9.390165328979492
    9. ' line' → logprob: -9.515165328979492
    10. '
' → logprob: -9.515165328979492

Token 1212: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1542244702577591
    2. '
' → logprob: -2.904224395751953
    3. '        
' → logprob: -3.529224395751953
    4. ':' → logprob: -4.279224395751953
    5. '   ' → logprob: -5.029224395751953
    6. ',' → logprob: -5.529224395751953
    7. ':
' → logprob: -5.779224395751953
    8. '           ' → logprob: -5.904224395751953
    9. '[' → logprob: -6.029224395751953
    10. ' 
' → logprob: -6.279224395751953

Token 1213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1474861204624176
    2. '        
' → logprob: -2.7724862098693848
    3. '
' → logprob: -3.3974862098693848
    4. '```' → logprob: -5.147486209869385
    5. '`
' → logprob: -5.397486209869385
    6. '   ' → logprob: -5.397486209869385
    7. '`' → logprob: -5.647486209869385
    8. '           ' → logprob: -5.772486209869385
    9. ' 
' → logprob: -6.147486209869385
    10. '    
' → logprob: -6.147486209869385

Token 1214: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13838407397270203
    2. '
' → logprob: -2.5133841037750244
    3. '        
' → logprob: -4.138383865356445
    4. '```' → logprob: -4.888383865356445
    5. '`
' → logprob: -5.513383865356445
    6. '   ' → logprob: -5.513383865356445
    7. ',' → logprob: -5.888383865356445
    8. '`' → logprob: -6.138383865356445
    9. '           ' → logprob: -6.388383865356445
    10. '``' → logprob: -7.013383865356445

Token 1215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006202511489391327
    2. '        
' → logprob: -6.006202697753906
    3. '
' → logprob: -6.506202697753906
    4. '   ' → logprob: -7.006202697753906
    5. '           ' → logprob: -7.881202697753906
    6. '```' → logprob: -8.131202697753906
    7. '`' → logprob: -9.256202697753906
    8. '    
' → logprob: -9.506202697753906
    9. '`
' → logprob: -9.881202697753906
    10. '        
        
' → logprob: -10.006202697753906

Token 1216: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051724545657634735
    2. '
' → logprob: -3.176724433898926
    3. '        
' → logprob: -5.301724433898926
    4. '           ' → logprob: -6.801724433898926
    5. '   ' → logprob: -7.426724433898926
    6. '```' → logprob: -7.551724433898926
    7. '        ' → logprob: -8.051724433898926
    8. ',' → logprob: -8.551724433898926
    9. '`' → logprob: -9.301724433898926
    10. '`
' → logprob: -9.676724433898926

Token 1217: ' Finally' (ID: 23568)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11070715636014938
    2. '
' → logprob: -3.2357070446014404
    3. '        
' → logprob: -3.2357070446014404
    4. '```' → logprob: -4.8607072830200195
    5. '`
' → logprob: -5.4857072830200195
    6. '`' → logprob: -5.6107072830200195
    7. '           ' → logprob: -6.2357072830200195
    8. '    
' → logprob: -6.6107072830200195
    9. '   ' → logprob: -6.6107072830200195
    10. '``' → logprob: -6.9857072830200195

Token 1218: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05621914938092232
    2. '   ' → logprob: -3.6812191009521484
    3. '```' → logprob: -3.8062191009521484
    4. '
' → logprob: -6.431219100952148
    5. '`' → logprob: -7.181219100952148
    6. ':' → logprob: -7.181219100952148
    7. '           ' → logprob: -7.681219100952148
    8. ' for' → logprob: -8.181219100952148
    9. ' to' → logprob: -8.181219100952148
    10. ' next' → logprob: -8.181219100952148

Token 1219: ' reach' (ID: 7627)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3353127241134644
    2. '       ' → logprob: -1.7103127241134644
    3. ' move' → logprob: -2.085312843322754
    4. ' #' → logprob: -2.335312843322754
    5. '```' → logprob: -2.335312843322754
    6. ' she' → logprob: -2.835312843322754
    7. '#' → logprob: -3.585312843322754
    8. ' row' → logprob: -3.710312843322754
    9. ' ' → logprob: -4.210312843322754
    10. 'row' → logprob: -4.210312843322754

Token 1220: ' intersection' (ID: 42002)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.409329891204834
    2. 'intersection' → logprob: -1.534329891204834
    3. ' (' → logprob: -2.409329891204834
    4. ' intersection' → logprob: -3.534329891204834
    5. 'the' → logprob: -7.409329891204834
    6. '   ' → logprob: -8.159330368041992
    7. ' the' → logprob: -8.284330368041992
    8. 'end' → logprob: -10.659330368041992
    9. ' ' → logprob: -11.159330368041992
    10. 'inter' → logprob: -11.284330368041992

Token 1221: '(' (ID: 7)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048185866326093674
    2. '[' → logprob: -4.4231858253479
    3. '   ' → logprob: -4.5481858253479
    4. '        
' → logprob: -5.4231858253479
    5. ':' → logprob: -5.6731858253479
    6. '           ' → logprob: -6.2981858253479
    7. '[r' → logprob: -6.4231858253479
    8. ''' → logprob: -6.7981858253479
    9. '```' → logprob: -6.7981858253479
    10. '        ' → logprob: -7.1731858253479

Token 1222: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.007651584688574076
    2. '(' → logprob: -4.8826518058776855
    3. ',' → logprob: -10.882651329040527
    4. ' (' → logprob: -11.132651329040527
    5. '```' → logprob: -12.007651329040527
    6. '   ' → logprob: -12.507651329040527
    7. '``' → logprob: -13.882651329040527
    8. '`' → logprob: -14.632651329040527
    9. '
' → logprob: -15.132651329040527
    10. ' ' → logprob: -15.632651329040527

Token 1223: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16177049279212952
    2. ',N' → logprob: -1.9117704629898071
    3. '```' → logprob: -7.661770343780518
    4. '(' → logprob: -8.036770820617676
    5. '+' → logprob: -8.036770820617676
    6. ',(' → logprob: -9.161770820617676
    7. ')' → logprob: -9.536770820617676
    8. ',n' → logprob: -9.911770820617676
    9. ' ,' → logprob: -10.161770820617676
    10. '   ' → logprob: -10.411770820617676

Token 1224: ')

' (ID: 1029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6704182028770447
    2. '       ' → logprob: -1.4204182624816895
    3. '```' → logprob: -2.1704182624816895
    4. ')' → logprob: -2.9204182624816895
    5. ':' → logprob: -4.2954182624816895
    6. '[' → logprob: -4.4204182624816895
    7. '``' → logprob: -4.4204182624816895
    8. ')
' → logprob: -4.9204182624816895
    9. '[r' → logprob: -4.9204182624816895
    10. '):
' → logprob: -5.4204182624816895

Token 1225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21744519472122192
    2. '
' → logprob: -1.8424451351165771
    3. '        
' → logprob: -3.717445135116577
    4. '```' → logprob: -5.717445373535156
    5. '   ' → logprob: -6.092445373535156
    6. '`
' → logprob: -6.467445373535156
    7. '    
' → logprob: -6.967445373535156
    8. ',' → logprob: -7.217445373535156
    9. '``' → logprob: -7.717445373535156
    10. '`' → logprob: -7.842445373535156

Token 1226: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21530771255493164
    2. '
' → logprob: -1.8403077125549316
    3. '        
' → logprob: -4.215307712554932
    4. '```' → logprob: -4.715307712554932
    5. '`
' → logprob: -5.215307712554932
    6. '   ' → logprob: -6.715307712554932
    7. '`' → logprob: -6.840307712554932
    8. '``' → logprob: -6.965307712554932
    9. '    
' → logprob: -7.715307712554932
    10. '  
' → logprob: -8.215307235717773

Token 1227: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05413531884551048
    2. '
' → logprob: -3.304135322570801
    3. '        
' → logprob: -4.929135322570801
    4. '   ' → logprob: -5.304135322570801
    5. '```' → logprob: -7.554135322570801
    6. 'dp' → logprob: -7.679135322570801
    7. '    
' → logprob: -7.679135322570801
    8. ' rows' → logprob: -7.929135322570801
    9. '`
' → logprob: -8.3041353225708
    10. 'rows' → logprob: -8.4291353225708

Token 1228: ' vertical' (ID: 17679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48600903153419495
    2. '   ' → logprob: -1.2360090017318726
    3. '        
' → logprob: -4.361009120941162
    4. '
' → logprob: -4.736009120941162
    5. '    ' → logprob: -4.986009120941162
    6. '```' → logprob: -5.111009120941162
    7. ' ' → logprob: -5.236009120941162
    8. '    
' → logprob: -5.361009120941162
    9. 'prev' → logprob: -5.611009120941162
    10. '           ' → logprob: -5.861009120941162

Token 1229: ' movement' (ID: 12772)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5760263800621033
    2. '_moves' → logprob: -1.701026439666748
    3. '   ' → logprob: -2.326026439666748
    4. '_move' → logprob: -2.451026439666748
    5. '_
' → logprob: -3.951026439666748
    6. ' movements' → logprob: -4.826026439666748
    7. ' ' → logprob: -4.951026439666748
    8. '       ' → logprob: -5.201026439666748
    9. 'moves' → logprob: -5.451026439666748
    10. '_mov' → logprob: -6.076026439666748

Token 1230: ' on' (ID: 402)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.9859628081321716
    2. '(r' → logprob: -1.7359628677368164
    3. '       ' → logprob: -1.8609628677368164
    4. '   ' → logprob: -1.9859628677368164
    5. '```' → logprob: -3.3609628677368164
    6. '=' → logprob: -3.7359628677368164
    7. ' at' → logprob: -3.7359628677368164
    8. ' =' → logprob: -3.9859628677368164
    9. '[' → logprob: -4.235962867736816
    10. ' is' → logprob: -5.110962867736816

Token 1231: ' intersections' (ID: 143513)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0839732885360718
    2. ' each' → logprob: -1.7089732885360718
    3. 'the' → logprob: -1.8339732885360718
    4. 'each' → logprob: -1.8339732885360718
    5. ' intersections' → logprob: -3.7089734077453613
    6. 'col' → logprob: -3.7089734077453613
    7. '   ' → logprob: -3.8339734077453613
    8. ' at' → logprob: -4.208973407745361
    9. 'row' → logprob: -4.583973407745361
    10. ' col' → logprob: -4.708973407745361

Token 1232: ' costs' (ID: 8959)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1250613927841187
    2. '(r' → logprob: -1.5000613927841187
    3. '   ' → logprob: -1.7500613927841187
    4. '[r' → logprob: -2.125061511993408
    5. '```' → logprob: -3.125061511993408
    6. '[' → logprob: -4.000061511993408
    7. ' =' → logprob: -4.000061511993408
    8. ' (' → logprob: -4.375061511993408
    9. ')' → logprob: -4.625061511993408
    10. ' is' → logprob: -4.750061511993408

Token 1233: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08064496517181396
    2. ' ' → logprob: -2.5806450843811035
    3. '   ' → logprob: -7.3306450843811035
    4. ' =' → logprob: -7.5806450843811035
    5. '=' → logprob: -8.205644607543945
    6. '4' → logprob: -8.830644607543945
    7. ' at' → logprob: -10.455644607543945
    8. '```' → logprob: -10.580644607543945
    9. '    ' → logprob: -10.705644607543945
    10. ' +' → logprob: -10.955644607543945

Token 1234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020425561524461955
    2. ' ' → logprob: -8.625204086303711
    3. '   ' → logprob: -11.250204086303711
    4. '```' → logprob: -12.125204086303711
    5. '=' → logprob: -13.000204086303711
    6. '
' → logprob: -13.750204086303711
    7. '`' → logprob: -13.875204086303711
    8. '0' → logprob: -14.000204086303711
    9. '``' → logprob: -15.375204086303711
    10. ' =' → logprob: -15.625204086303711

Token 1235: ' per' (ID: 777)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7484320998191833
    2. '       ' → logprob: -0.8734320998191833
    3. '        
' → logprob: -2.748432159423828
    4. '   ' → logprob: -5.248432159423828
    5. '```' → logprob: -5.248432159423828
    6. ',' → logprob: -5.373432159423828
    7. '[' → logprob: -5.498432159423828
    8. ':' → logprob: -5.873432159423828
    9. ':
' → logprob: -5.998432159423828
    10. '    
' → logprob: -6.123432159423828

Token 1236: ' row' (ID: 5225)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.15141771733760834
    2. 'row' → logprob: -2.0264177322387695
    3. 'line' → logprob: -6.0264177322387695
    4. '1' → logprob: -6.6514177322387695
    5. 'unit' → logprob: -6.6514177322387695
    6. 'move' → logprob: -7.0264177322387695
    7. ' step' → logprob: -7.1514177322387695
    8. '
' → logprob: -7.6514177322387695
    9. '```' → logprob: -8.02641773223877
    10. 'vertical' → logprob: -8.40141773223877

Token 1237: ' visited' (ID: 18416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05771637707948685
    2. '[' → logprob: -4.182716369628906
    3. '   ' → logprob: -4.182716369628906
    4. '        
' → logprob: -5.182716369628906
    5. ':' → logprob: -5.432716369628906
    6. '_' → logprob: -5.807716369628906
    7. '```' → logprob: -5.932716369628906
    8. '           ' → logprob: -6.682716369628906
    9. '[]' → logprob: -7.057716369628906
    10. '        ' → logprob: -7.182716369628906

Token 1238: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16021843254566193
    2. '   ' → logprob: -2.7852184772491455
    3. '[' → logprob: -4.160218238830566
    4. '        
' → logprob: -4.160218238830566
    5. ':' → logprob: -4.660218238830566
    6. '
' → logprob: -5.035218238830566
    7. '`' → logprob: -5.785218238830566
    8. ',' → logprob: -6.035218238830566
    9. ' _' → logprob: -6.285218238830566
    10. '_' → logprob: -6.285218238830566

Token 1239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00840641837567091
    2. ',' → logprob: -6.383406639099121
    3. '           ' → logprob: -6.633406639099121
    4. '   ' → logprob: -6.633406639099121
    5. '        
' → logprob: -6.758406639099121
    6. '```' → logprob: -7.508406639099121
    7. ' and' → logprob: -7.758406639099121
    8. '        ' → logprob: -8.383406639099121
    9. '
' → logprob: -8.633406639099121
    10. '`' → logprob: -9.008406639099121

Token 1240: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019488386809825897
    2. '
' → logprob: -5.269488334655762
    3. '        
' → logprob: -5.519488334655762
    4. '           ' → logprob: -5.644488334655762
    5. '   ' → logprob: -5.894488334655762
    6. '        ' → logprob: -6.394488334655762
    7. '#' (adapté à ' #') → logprob: -8.269488334655762
    8. '"' → logprob: -8.394488334655762
    9. ' ' → logprob: -8.769488334655762
    10. '    ' → logprob: -8.769488334655762

Token 1241: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020092038437724113
    2. '   ' → logprob: -5.020092010498047
    3. '           ' → logprob: -5.395092010498047
    4. '        ' → logprob: -6.020092010498047
    5. '        
' → logprob: -7.270092010498047
    6. ',' → logprob: -7.270092010498047
    7. '    ' → logprob: -7.645092010498047
    8. 'r' → logprob: -7.895092010498047
    9. ' ' → logprob: -7.895092010498047
    10. '```' → logprob: -8.145092010498047

Token 1242: ' visit' (ID: 4030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0107742547988892
    2. 'continue' → logprob: -1.7607742547988892
    3. ' move' → logprob: -2.2607741355895996
    4. ' continue' → logprob: -2.3857741355895996
    5. 'move' → logprob: -2.8857741355895996
    6. '       ' → logprob: -3.0107741355895996
    7. '
' → logprob: -3.5107741355895996
    8. ' ' → logprob: -3.5107741355895996
    9. 'go' → logprob: -4.0107741355896
    10. '#' → logprob: -4.6357741355896

Token 1243: ' all' (ID: 722)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.3154962062835693
    2. ' the' → logprob: -1.4404962062835693
    3. 'each' → logprob: -2.0654962062835693
    4. '   ' → logprob: -2.3154962062835693
    5. ' each' → logprob: -3.3154962062835693
    6. ' ' → logprob: -3.4404962062835693
    7. '       ' → logprob: -3.5654962062835693
    8. '`' → logprob: -3.5654962062835693
    9. '4' → logprob: -3.8154962062835693
    10. '```' → logprob: -4.315496444702148

Token 1244: ' required' (ID: 3759)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.6909555196762085
    2. ' rows' → logprob: -1.0659555196762085
    3. '   ' → logprob: -2.690955638885498
    4. '4' → logprob: -3.315955638885498
    5. '       ' → logprob: -3.940955638885498
    6. ' four' → logprob: -4.690955638885498
    7. ' ' → logprob: -5.440955638885498
    8. 'columns' → logprob: -6.065955638885498
    9. 'cols' → logprob: -6.565955638885498
    10. 'r' → logprob: -6.690955638885498

Token 1245: ' books' (ID: 7187)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.5424887537956238
    2. 'rows' → logprob: -1.2924888134002686
    3. '   ' → logprob: -2.4174888134002686
    4. '_rows' → logprob: -3.6674888134002686
    5. ' ' → logprob: -5.1674885749816895
    6. '       ' → logprob: -5.2924885749816895
    7. '_' → logprob: -5.6674885749816895
    8. '_inter' → logprob: -6.1674885749816895
    9. '_s' → logprob: -6.6674885749816895
    10. '  ' → logprob: -6.7924885749816895

Token 1246: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.671737551689148
    2. ' at' → logprob: -1.671737551689148
    3. ',' → logprob: -1.796737551689148
    4. '       ' → logprob: -1.796737551689148
    5. '_' → logprob: -2.4217376708984375
    6. '```' → logprob: -3.2967376708984375
    7. '[' → logprob: -3.4217376708984375
    8. ':' → logprob: -4.4217376708984375
    9. ' (' → logprob: -4.5467376708984375
    10. '(r' → logprob: -4.7967376708984375

Token 1247: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7647908926010132
    2. 'vertical' → logprob: -2.5147910118103027
    3. 'current' → logprob: -2.7647910118103027
    4. 'column' → logprob: -3.0147910118103027
    5. 'each' → logprob: -3.1397910118103027
    6. 'row' → logprob: -3.3897910118103027
    7. 'rows' → logprob: -3.3897910118103027
    8. ' the' → logprob: -3.3897910118103027
    9. 'col' → logprob: -3.6397910118103027
    10. 'that' → logprob: -3.6397910118103027

Token 1248: ' column' (ID: 6000)
  Prédit: ' column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' column' → logprob: -0.22153334319591522
    2. 'column' → logprob: -2.0965332984924316
    3. ' col' → logprob: -3.4715332984924316
    4. 'col' → logprob: -3.7215332984924316
    5. '
' → logprob: -5.096533298492432
    6. ' row' → logprob: -5.721533298492432
    7. '   ' → logprob: -6.096533298492432
    8. ' ' → logprob: -6.471533298492432
    9. ' current' → logprob: -7.346533298492432
    10. ' ' → logprob: -7.471533298492432

Token 1249: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1304336041212082
    2. '[' → logprob: -3.8804335594177246
    3. '        ' → logprob: -4.005433559417725
    4. '[r' → logprob: -4.255433559417725
    5. ',' → logprob: -4.380433559417725
    6. '   ' → logprob: -4.755433559417725
    7. '(r' → logprob: -4.880433559417725
    8. '```' → logprob: -5.005433559417725
    9. ':' → logprob: -5.130433559417725
    10. '        
' → logprob: -5.130433559417725

Token 1250: ' best' (ID: 1636)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0966128259897232
    2. ' we' → logprob: -4.096612930297852
    3. '```' → logprob: -4.596612930297852
    4. '   ' → logprob: -4.721612930297852
    5. '           ' → logprob: -4.971612930297852
    6. '        ' → logprob: -4.971612930297852
    7. '        
' → logprob: -5.096612930297852
    8. 'we' → logprob: -5.221612930297852
    9. '#' → logprob: -5.346612930297852
    10. '"' → logprob: -6.221612930297852

Token 1251: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46682342886924744
    2. '       ' → logprob: -2.5918233394622803
    3. '_cost' → logprob: -2.7168233394622803
    4. ' to' → logprob: -2.9668233394622803
    5. '_row' → logprob: -3.7168233394622803
    6. 'cost' → logprob: -4.216823577880859
    7. 'possible' → logprob: -4.341823577880859
    8. 'row' → logprob: -4.341823577880859
    9. '_possible' → logprob: -4.341823577880859
    10. ' cost' → logprob: -4.466823577880859

Token 1252: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46295198798179626
    2. 'to' → logprob: -1.9629520177841187
    3. '```' → logprob: -2.462951898574829
    4. ' to' → logprob: -3.212951898574829
    5. '   ' → logprob: -3.337951898574829
    6. 'min' → logprob: -4.337952136993408
    7. 'move' → logprob: -4.337952136993408
    8. 'go' → logprob: -5.087952136993408
    9. 'find' → logprob: -5.337952136993408
    10. '           ' → logprob: -5.337952136993408

Token 1253: ' walk' (ID: 5229)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.3220963478088379
    2. 'move' → logprob: -2.072096347808838
    3. 'visit' → logprob: -2.197096347808838
    4. 'min' → logprob: -4.947096347808838
    5. 'sort' → logprob: -4.947096347808838
    6. 'find' → logprob: -5.322096347808838
    7. '#' → logprob: -5.447096347808838
    8. 'dp' → logprob: -5.947096347808838
    9. '   ' → logprob: -6.322096347808838
    10. 'cover' → logprob: -6.697096347808838

Token 1254: ' minimal' (ID: 19957)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.12611433863639832
    2. 'vert' → logprob: -3.0011143684387207
    3. ' down' → logprob: -3.2511143684387207
    4. ' downward' → logprob: -5.126114368438721
    5. '       ' → logprob: -5.251114368438721
    6. ' vertically' → logprob: -5.376114368438721
    7. '```' → logprob: -5.751114368438721
    8. '   ' → logprob: -6.251114368438721
    9. 'to' → logprob: -6.751114368438721
    10. 'up' → logprob: -6.876114368438721

Token 1255: ' vertical' (ID: 17679)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.5354073643684387
    2. 'up' → logprob: -1.785407304763794
    3. 'distance' → logprob: -2.160407304763794
    4. '```' → logprob: -3.410407304763794
    5. '`' → logprob: -3.535407304763794
    6. 'vertical' → logprob: -3.910407304763794
    7. '   ' → logprob: -4.785407543182373
    8. '``' → logprob: -5.160407543182373
    9. '_down' → logprob: -5.660407543182373
    10. ' down' → logprob: -5.660407543182373

Token 1256: ' path' (ID: 3104)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29743048548698425
    2. '       ' → logprob: -2.6724305152893066
    3. '_down' → logprob: -3.2974305152893066
    4. '_distance' → logprob: -3.5474305152893066
    5. 'distance' → logprob: -4.047430515289307
    6. '    ' → logprob: -4.297430515289307
    7. 'down' → logprob: -4.297430515289307
    8. ' ' → logprob: -4.547430515289307
    9. '_' → logprob: -4.922430515289307
    10. '```' → logprob: -4.922430515289307

Token 1257: ' covering' (ID: 24878)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07594536989927292
    2. '        
' → logprob: -3.4509453773498535
    3. '`' → logprob: -4.9509453773498535
    4. '   ' → logprob: -5.0759453773498535
    5. '        ' → logprob: -5.4509453773498535
    6. '[' → logprob: -5.8259453773498535
    7. '_' → logprob: -6.0759453773498535
    8. '           ' → logprob: -6.2009453773498535
    9. '```' → logprob: -6.4509453773498535
    10. '"' → logprob: -6.5759453773498535

Token 1258: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8637059330940247
    2. 'the' → logprob: -0.9887059330940247
    3. ' all' → logprob: -2.23870587348938
    4. ' the' → logprob: -2.61370587348938
    5. 'rows' → logprob: -4.613706111907959
    6. 'that' → logprob: -5.738706111907959
    7. '       ' → logprob: -5.863706111907959
    8. '   ' → logprob: -5.988706111907959
    9. ' rows' → logprob: -6.988706111907959
    10. '```' → logprob: -7.238706111907959

Token 1259: ' rows' (ID: 13585)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11149527877569199
    2. '        ' → logprob: -3.98649525642395
    3. '_' → logprob: -4.361495494842529
    4. '   ' → logprob: -4.486495494842529
    5. '        
' → logprob: -4.736495494842529
    6. '`' → logprob: -4.986495494842529
    7. ' _' → logprob: -5.111495494842529
    8. '"' → logprob: -5.611495494842529
    9. '           ' → logprob: -5.611495494842529
    10. '```' → logprob: -5.611495494842529

Token 1260: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02043548971414566
    2. '        
' → logprob: -5.395435333251953
    3. ':' → logprob: -5.895435333251953
    4. '```' → logprob: -6.270435333251953
    5. '           ' → logprob: -6.395435333251953
    6. ',' → logprob: -6.395435333251953
    7. '`' → logprob: -6.645435333251953
    8. '
' → logprob: -6.770435333251953
    9. '   ' → logprob: -7.145435333251953
    10. '        ' → logprob: -7.395435333251953

Token 1261: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.10409335792064667
    2. ' books' → logprob: -3.479093313217163
    3. 'required' → logprob: -3.479093313217163
    4. ' required' → logprob: -4.354093551635742
    5. 'Y' → logprob: -4.729093551635742
    6. 'book' → logprob: -4.854093551635742
    7. ' Y' → logprob: -5.854093551635742
    8. 'needed' → logprob: -6.604093551635742
    9. ' needed' → logprob: -7.479093551635742
    10. ' ' → logprob: -7.854093551635742

Token 1262: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09520003944635391
    2. '
' → logprob: -2.7202000617980957
    3. '        
' → logprob: -4.220200061798096
    4. '   ' → logprob: -5.720200061798096
    5. '```' → logprob: -6.845200061798096
    6. '    
' → logprob: -7.595200061798096
    7. ',' → logprob: -7.595200061798096
    8. '           ' → logprob: -7.595200061798096
    9. '`' → logprob: -7.595200061798096
    10. '`
' → logprob: -7.720200061798096

Token 1263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013463013805449009
    2. '
' → logprob: -5.138463020324707
    3. '        
' → logprob: -5.888463020324707
    4. '   ' → logprob: -6.013463020324707
    5. '        ' → logprob: -7.763463020324707
    6. '           ' → logprob: -7.888463020324707
    7. '```' → logprob: -8.138463020324707
    8. ',' → logprob: -8.513463020324707
    9. '#' → logprob: -9.263463020324707
    10. '`' → logprob: -9.513463020324707

Token 1264: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13803958892822266
    2. '
' → logprob: -2.5130395889282227
    3. '        
' → logprob: -4.013039588928223
    4. '```' → logprob: -4.388039588928223
    5. '`
' → logprob: -5.013039588928223
    6. '`' → logprob: -6.013039588928223
    7. '``' → logprob: -6.388039588928223
    8. '   ' → logprob: -6.388039588928223
    9. '    
' → logprob: -7.263039588928223
    10. '#' (adapté à ' #') → logprob: -7.388039588928223

Token 1265: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026493964716792107
    2. '
' → logprob: -4.026494026184082
    3. '        
' → logprob: -5.776494026184082
    4. '```' → logprob: -6.151494026184082
    5. '   ' → logprob: -6.276494026184082
    6. 'from' → logprob: -8.526494026184082
    7. '           ' → logprob: -8.651494026184082
    8. 'dp' → logprob: -8.776494026184082
    9. '    
' → logprob: -9.151494026184082
    10. '``' → logprob: -9.276494026184082

Token 1266: ' at' (ID: 540)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6773194670677185
    2. 'rows' → logprob: -1.9273195266723633
    3. '   ' → logprob: -2.6773195266723633
    4. 'from' → logprob: -2.8023195266723633
    5. '       ' → logprob: -3.3023195266723633
    6. 'required' → logprob: -3.4273195266723633
    7. 'for' → logprob: -3.6773195266723633
    8. 'visited' → logprob: -3.8023195266723633
    9. 'needed' → logprob: -4.177319526672363
    10. 'dp' → logprob: -4.177319526672363

Token 1267: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.21591326594352722
    2. ' each' → logprob: -1.7159132957458496
    3. 'least' → logprob: -5.46591329574585
    4. 'column' → logprob: -5.59091329574585
    5. 'c' → logprob: -6.34091329574585
    6. 'col' → logprob: -6.59091329574585
    7. ' least' → logprob: -6.84091329574585
    8. ' column' → logprob: -7.59091329574585
    9. '#' → logprob: -7.71591329574585
    10. 'the' → logprob: -8.215912818908691

Token 1268: ' column' (ID: 6000)
  Prédit: 'column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -0.293170690536499
    2. ' column' → logprob: -1.918170690536499
    3. 'c' → logprob: -3.043170690536499
    4. ' c' → logprob: -3.168170690536499
    5. 'col' → logprob: -4.543170928955078
    6. '   ' → logprob: -5.543170928955078
    7. ' col' → logprob: -6.543170928955078
    8. ' step' → logprob: -7.418170928955078
    9. ' ' → logprob: -7.668170928955078
    10. '       ' → logprob: -9.168170928955078

Token 1269: ' c' (ID: 274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3642171621322632
    2. ' c' → logprob: -1.7392171621322632
    3. ' ,' → logprob: -2.6142172813415527
    4. '```' → logprob: -4.239217281341553
    5. 'c' → logprob: -4.364217281341553
    6. '       ' → logprob: -5.239217281341553
    7. ' _' → logprob: -5.739217281341553
    8. ',c' → logprob: -5.989217281341553
    9. '_' → logprob: -6.114217281341553
    10. ' ' → logprob: -6.239217281341553

Token 1270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6728203296661377
    2. '       ' → logprob: -0.9228203296661377
    3. ':' → logprob: -3.1728203296661377
    4. '   ' → logprob: -4.172820091247559
    5. ' ,' → logprob: -5.547820091247559
    6. ' she' → logprob: -5.672820091247559
    7. '_' → logprob: -6.047820091247559
    8. ' =' → logprob: -6.297820091247559
    9. ' (' → logprob: -6.547820091247559
    10. ' :' → logprob: -6.547820091247559

Token 1271: ' find' (ID: 1646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055409688502550125
    2. ' rows' → logprob: -3.9304096698760986
    3. '#' → logprob: -4.805409908294678
    4. '   ' → logprob: -5.055409908294678
    5. 'rows' → logprob: -5.305409908294678
    6. ' #' → logprob: -6.305409908294678
    7. ' required' → logprob: -6.305409908294678
    8. 'required' → logprob: -6.555409908294678
    9. ' we' → logprob: -6.930409908294678
    10. ' she' → logprob: -7.180409908294678

Token 1272: ' minimal' (ID: 19957)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.6592099070549011
    2. 'the' → logprob: -1.534209966659546
    3. ' rows' → logprob: -2.409209966659546
    4. ' the' → logprob: -2.534209966659546
    5. 'required' → logprob: -3.534209966659546
    6. ' required' → logprob: -4.534209728240967
    7. '```' → logprob: -4.534209728240967
    8. ' min' → logprob: -5.159209728240967
    9. 'positions' → logprob: -5.159209728240967
    10. '   ' → logprob: -5.284209728240967

Token 1273: ' cost' (ID: 3097)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.314073771238327
    2. 'rows' → logprob: -2.1890738010406494
    3. 'cost' → logprob: -2.4390738010406494
    4. ' vertical' → logprob: -4.18907356262207
    5. '_rows' → logprob: -4.43907356262207
    6. '_vertical' → logprob: -4.93907356262207
    7. '```' → logprob: -5.31407356262207
    8. '   ' → logprob: -5.31407356262207
    9. '#' → logprob: -5.68907356262207
    10. 'dist' → logprob: -5.93907356262207

Token 1274: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2189297676086426
    2. '[' → logprob: -1.4689297676086426
    3. '   ' → logprob: -2.2189297676086426
    4. '       ' → logprob: -2.2189297676086426
    5. '_' → logprob: -3.4689297676086426
    6. '`' → logprob: -4.093929767608643
    7. '_row' → logprob: -4.093929767608643
    8. '[r' → logprob: -4.218929767608643
    9. '_to' → logprob: -4.343929767608643
    10. '_r' → logprob: -4.468929767608643

Token 1275: ' cover' (ID: 4321)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.6814887523651123
    2. 'visit' → logprob: -1.0564887523651123
    3. ' cover' → logprob: -2.0564887523651123
    4. ' visit' → logprob: -4.556488990783691
    5. 'reach' → logprob: -5.931488990783691
    6. 'vertical' → logprob: -6.681488990783691
    7. 'go' → logprob: -6.806488990783691
    8. '   ' → logprob: -7.556488990783691
    9. 'move' → logprob: -7.681488990783691
    10. ' reach' → logprob: -7.931488990783691

Token 1276: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.584082305431366
    2. 'rows' → logprob: -1.3340823650360107
    3. 'the' → logprob: -2.7090823650360107
    4. ' all' → logprob: -2.8340823650360107
    5. ' rows' → logprob: -4.209082126617432
    6. 'required' → logprob: -4.959082126617432
    7. '{' → logprob: -5.084082126617432
    8. '   ' → logprob: -5.209082126617432
    9. ' the' → logprob: -5.584082126617432
    10. '[' → logprob: -5.959082126617432

Token 1277: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.2112686038017273
    2. 'required' → logprob: -2.086268663406372
    3. ' rows' → logprob: -3.836268663406372
    4. 'books' → logprob: -4.211268424987793
    5. ' required' → logprob: -4.336268424987793
    6. 'positions' → logprob: -4.961268424987793
    7. 'needed' → logprob: -6.086268424987793
    8. '_rows' → logprob: -6.211268424987793
    9. 'book' → logprob: -6.836268424987793
    10. '_required' → logprob: -7.336268424987793

Token 1278: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1237510442733765
    2. '   ' → logprob: -1.6237510442733765
    3. '```' → logprob: -1.6237510442733765
    4. '[' → logprob: -2.248751163482666
    5. '[r' → logprob: -3.373751163482666
    6. ',' → logprob: -3.498751163482666
    7. '_' → logprob: -3.623751163482666
    8. ' _' → logprob: -4.373751163482666
    9. ' +' → logprob: -4.873751163482666
    10. ')' → logprob: -4.873751163482666

Token 1279: ' books' (ID: 7187)
  Prédit: ' books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' books' → logprob: -0.7540767788887024
    2. 'books' → logprob: -0.8790767788887024
    3. ' Y' → logprob: -2.6290767192840576
    4. 'Y' → logprob: -3.8790767192840576
    5. 'book' → logprob: -5.129076957702637
    6. ' book' → logprob: -5.379076957702637
    7. ' required' → logprob: -6.004076957702637
    8. 'required' → logprob: -6.504076957702637
    9. '_books' → logprob: -6.504076957702637
    10. ' ' → logprob: -6.629076957702637

Token 1280: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13008251786231995
    2. ':' → logprob: -3.630082607269287
    3. '[' → logprob: -4.255082607269287
    4. '   ' → logprob: -4.505082607269287
    5. '```' → logprob: -4.505082607269287
    6. ',' → logprob: -4.755082607269287
    7. '`' → logprob: -4.880082607269287
    8. '"' → logprob: -4.880082607269287
    9. ':
' → logprob: -5.005082607269287
    10. '           ' → logprob: -5.255082607269287

Token 1281: ' column' (ID: 6000)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07919159531593323
    2. ' c' → logprob: -3.3291916847229004
    3. 'column' → logprob: -4.0791916847229
    4. 'that' → logprob: -4.2041916847229
    5. ' that' → logprob: -6.4541916847229
    6. 'current' → logprob: -6.5791916847229
    7. ' column' → logprob: -6.5791916847229
    8. 'col' → logprob: -6.7041916847229
    9. '```' → logprob: -7.0791916847229
    10. 'this' → logprob: -7.4541916847229

Token 1282: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6508240699768066
    2. '```' → logprob: -2.4008240699768066
    3. '   ' → logprob: -2.5258240699768066
    4. '_' → logprob: -2.9008240699768066
    5. '[' → logprob: -3.0258240699768066
    6. ' _' → logprob: -3.2758240699768066
    7. ',' → logprob: -4.025824069976807
    8. '
' → logprob: -4.150824069976807
    9. '`' → logprob: -4.150824069976807
    10. ' +' → logprob: -4.400824069976807

Token 1283: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07618742436170578
    2. ':' → logprob: -4.451187610626221
    3. '```' → logprob: -4.576187610626221
    4. '[' → logprob: -4.826187610626221
    5. ',' → logprob: -4.826187610626221
    6. '_' → logprob: -5.076187610626221
    7. '`' → logprob: -5.076187610626221
    8. '           ' → logprob: -5.826187610626221
    9. '   ' → logprob: -5.951187610626221
    10. ':
' → logprob: -6.076187610626221

Token 1284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04216422513127327
    2. '```' → logprob: -4.417164325714111
    3. '        
' → logprob: -5.042164325714111
    4. ' rows' → logprob: -5.167164325714111
    5. '`' → logprob: -6.167164325714111
    6. '#' → logprob: -6.167164325714111
    7. 'rows' → logprob: -6.292164325714111
    8. '
' → logprob: -6.292164325714111
    9. '``' → logprob: -6.792164325714111
    10. '`
' → logprob: -7.042164325714111

Token 1285: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01901666820049286
    2. '#' (adapté à ' #') → logprob: -5.019016742706299
    3. 'rows' → logprob: -5.894016742706299
    4. ' rows' → logprob: -6.269016742706299
    5. '```' → logprob: -6.394016742706299
    6. '
' → logprob: -6.394016742706299
    7. '        
' → logprob: -6.894016742706299
    8. ',' → logprob: -7.519016742706299
    9. '           ' → logprob: -7.644016742706299
    10. '`' → logprob: -8.14401626586914

Token 1286: ' That' (ID: 4569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2909223735332489
    2. 'rows' → logprob: -2.2909224033355713
    3. '#' → logprob: -2.5409224033355713
    4. '```' → logprob: -3.6659224033355713
    5. 'if' → logprob: -4.415922164916992
    6. ' rows' → logprob: -5.040922164916992
    7. '``' → logprob: -5.665922164916992
    8. 'cols' → logprob: -5.665922164916992
    9. '
' → logprob: -5.790922164916992
    10. ' if' → logprob: -5.915922164916992

Token 1287: ' means' (ID: 4748)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5294830799102783
    2. ' is' → logprob: -2.0294830799102783
    3. 's' → logprob: -2.9044830799102783
    4. '#' → logprob: -3.1544830799102783
    5. '=' → logprob: -3.2794830799102783
    6. '   ' → logprob: -4.029482841491699
    7. ' can' → logprob: -4.154482841491699
    8. ' s' → logprob: -4.529482841491699
    9. '
' → logprob: -4.529482841491699
    10. ' #' → logprob: -4.654482841491699

Token 1288: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8592046499252319
    2. 'rows' → logprob: -1.734204649925232
    3. '#' → logprob: -2.4842047691345215
    4. ' rows' → logprob: -3.1092047691345215
    5. '```' → logprob: -3.4842047691345215
    6. 'all' → logprob: -3.6092047691345215
    7. 'for' → logprob: -3.8592047691345215
    8. 'the' → logprob: -4.1092047691345215
    9. ' at' → logprob: -4.1092047691345215
    10. 'we' → logprob: -4.2342047691345215

Token 1289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39874187111854553
    2. '#' → logprob: -1.1487418413162231
    3. ' #' → logprob: -5.773741722106934
    4. '           ' → logprob: -5.773741722106934
    5. '```' → logprob: -6.148741722106934
    6. 'r' → logprob: -7.648741722106934
    7. '        ' → logprob: -7.898741722106934
    8. '   ' → logprob: -7.898741722106934
    9. ',' → logprob: -8.398741722106934
    10. '[' → logprob: -8.648741722106934

Token 1290: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6098515391349792
    2. '#' (adapté à ' #') → logprob: -0.8598515391349792
    3. ' #' → logprob: -3.859851598739624
    4. ' if' → logprob: -6.359851360321045
    5. ' rows' → logprob: -6.359851360321045
    6. 'rows' → logprob: -6.609851360321045
    7. ' for' → logprob: -6.734851360321045
    8. 'for' → logprob: -6.859851360321045
    9. 'if' → logprob: -7.109851360321045
    10. '```' → logprob: -7.234851360321045

Token 1291: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30398520827293396
    2. '       ' → logprob: -1.5539852380752563
    3. 'rows' → logprob: -3.428985118865967
    4. 'if' → logprob: -5.053985118865967
    5. '```' → logprob: -6.553985118865967
    6. 'for' → logprob: -6.803985118865967
    7. 'visited' → logprob: -7.303985118865967
    8. 'needed' → logprob: -7.303985118865967
    9. 'all' → logprob: -7.428985118865967
    10. 'required' → logprob: -7.428985118865967

Token 1292: ' Start' (ID: 7972)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -1.2066830396652222
    2. '#' → logprob: -1.5816830396652222
    3. 'all' → logprob: -3.0816831588745117
    4. 'min' → logprob: -3.4566831588745117
    5. 'If' → logprob: -3.4566831588745117
    6. 'len' → logprob: -3.7066831588745117
    7. 'if' → logprob: -3.7066831588745117
    8. 'For' → logprob: -3.8316831588745117
    9. '       ' → logprob: -3.9566831588745117
    10. 'max' → logprob: -3.9566831588745117

Token 1293: ' at' (ID: 540)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1947137117385864
    2. '(r' → logprob: -1.8197137117385864
    3. '_' → logprob: -2.194713592529297
    4. ' at' → logprob: -2.319713592529297
    5. 'at' → logprob: -3.069713592529297
    6. ' =' → logprob: -3.694713592529297
    7. '=' → logprob: -3.944713592529297
    8. 'row' → logprob: -3.944713592529297
    9. '_r' → logprob: -3.944713592529297
    10. 'r' → logprob: -4.069713592529297

Token 1294: ' some' (ID: 1236)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8276986479759216
    2. 'row' → logprob: -2.5776987075805664
    3. ' current' → logprob: -2.5776987075805664
    4. 'any' → logprob: -2.5776987075805664
    5. 'each' → logprob: -2.9526987075805664
    6. 'r' → logprob: -3.0776987075805664
    7. 'the' → logprob: -3.0776987075805664
    8. '0' → logprob: -3.2026987075805664
    9. 'some' → logprob: -3.4526987075805664
    10. 'previous' → logprob: -4.327698707580566

Token 1295: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.726165771484375
    2. ' row' → logprob: -0.726165771484375
    3. ' intersection' → logprob: -4.101165771484375
    4. 'intersection' → logprob: -4.351165771484375
    5. '(row' → logprob: -7.351165771484375
    6. ' position' → logprob: -7.601165771484375
    7. 'position' → logprob: -7.726165771484375
    8. ' (' → logprob: -8.226165771484375
    9. 'r' → logprob: -8.851165771484375
    10. '_row' → logprob: -8.851165771484375

Token 1296: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.189980387687683
    2. ':' → logprob: -1.689980387687683
    3. '       ' → logprob: -1.939980387687683
    4. ',' → logprob: -2.1899805068969727
    5. ' :' → logprob: -2.5649805068969727
    6. '```' → logprob: -3.3149805068969727
    7. '_' → logprob: -3.8149805068969727
    8. '[' → logprob: -3.8149805068969727
    9. '(s' → logprob: -4.564980506896973
    10. '   ' → logprob: -4.564980506896973

Token 1297: ' column' (ID: 6000)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7753005623817444
    2. ' c' → logprob: -0.9003005623817444
    3. ' current' → logprob: -3.0253005027770996
    4. ' column' → logprob: -3.9003005027770996
    5. 'current' → logprob: -4.2753005027771
    6. 'column' → logprob: -4.5253005027771
    7. ' that' → logprob: -4.5253005027771
    8. 'col' → logprob: -4.9003005027771
    9. ' col' → logprob: -5.0253005027771
    10. ' the' → logprob: -5.6503005027771

Token 1298: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2323765754699707
    2. 'c' → logprob: -1.6073765754699707
    3. '```' → logprob: -5.857376575469971
    4. ' ' → logprob: -6.482376575469971
    5. '0' → logprob: -6.982376575469971
    6. ' ' → logprob: -7.732376575469971
    7. '	c' → logprob: -8.232376098632812
    8. '`' → logprob: -8.732376098632812
    9. '   ' → logprob: -9.357376098632812
    10. '	' → logprob: -9.357376098632812

Token 1299: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23091816902160645
    2. '[' → logprob: -3.4809181690216064
    3. '   ' → logprob: -3.9809181690216064
    4. ',' → logprob: -4.105917930603027
    5. '_' → logprob: -4.105917930603027
    6. ' =' → logprob: -4.105917930603027
    7. '        ' → logprob: -4.105917930603027
    8. ':' → logprob: -4.355917930603027
    9. '           ' → logprob: -4.480917930603027
    10. '```' → logprob: -4.730917930603027

Token 1300: 'the' (ID: 3086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31588178873062134
    2. ' )' → logprob: -2.3158817291259766
    3. ',' → logprob: -3.0658817291259766
    4. '0' → logprob: -4.065881729125977
    5. '),' → logprob: -4.190881729125977
    6. 'def' → logprob: -4.690881729125977
    7. '#' → logprob: -4.690881729125977
    8. ' ,' → logprob: -4.815881729125977
    9. '):
' → logprob: -4.815881729125977
    10. ' (' → logprob: -4.940881729125977

Token 1301: ' row' (ID: 5225)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.10561738163232803
    2. 'current' → logprob: -3.4806172847747803
    3. ' next' → logprob: -3.9806172847747803
    4. ' best' → logprob: -3.9806172847747803
    5. ' previous' → logprob: -5.730617523193359
    6. ' space' → logprob: -6.105617523193359
    7. ')' → logprob: -6.355617523193359
    8. ' selected' → logprob: -6.480617523193359
    9. ' first' → logprob: -6.855617523193359
    10. '#' → logprob: -6.855617523193359

Token 1302: ' chosen' (ID: 16180)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7530644536018372
    2. '=' → logprob: -2.7530643939971924
    3. '_' → logprob: -2.8780643939971924
    4. ' =' → logprob: -3.0030643939971924
    5. ' at' → logprob: -3.3780643939971924
    6. '       ' → logprob: -3.6280643939971924
    7. ' +' → logprob: -3.6280643939971924
    8. ' _' → logprob: -3.6280643939971924
    9. ' with' → logprob: -3.8780643939971924
    10. '+' → logprob: -3.8780643939971924

Token 1303: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09463292360305786
    2. '_' → logprob: -3.594632863998413
    3. '=' → logprob: -4.719633102416992
    4. ' +' → logprob: -4.969633102416992
    5. ' at' → logprob: -5.219633102416992
    6. '+' → logprob: -5.344633102416992
    7. ',' → logprob: -5.469633102416992
    8. '```' → logprob: -5.594633102416992
    9. ' )' → logprob: -5.594633102416992
    10. ' =' → logprob: -5.719633102416992

Token 1304: ' previous' (ID: 5880)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9725149869918823
    2. 'the' → logprob: -1.2225149869918823
    3. ' current' → logprob: -2.847515106201172
    4. 'current' → logprob: -2.972515106201172
    5. ' dp' → logprob: -3.097515106201172
    6. 'previous' → logprob: -3.097515106201172
    7. ' previous' → logprob: -3.222515106201172
    8. 'dp' → logprob: -3.972515106201172
    9. '#' → logprob: -4.347515106201172
    10. 'prev' → logprob: -5.097515106201172

Token 1305: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -1.5376337766647339
    2. '_move' → logprob: -1.9126337766647339
    3. ' position' → logprob: -2.4126338958740234
    4. ' movement' → logprob: -2.9126338958740234
    5. ' move' → logprob: -2.9126338958740234
    6. '_' → logprob: -2.9126338958740234
    7. '_step' → logprob: -3.0376338958740234
    8. ' ' → logprob: -3.0376338958740234
    9. 'position' → logprob: -3.1626338958740234
    10. ' _' → logprob: -3.1626338958740234

Token 1306: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48435866832733154
    2. ',' → logprob: -2.234358787536621
    3. '       ' → logprob: -2.984358787536621
    4. '```' → logprob: -2.984358787536621
    5. '+' → logprob: -3.109358787536621
    6. '   ' → logprob: -4.109358787536621
    7. '_' → logprob: -4.109358787536621
    8. ' +' → logprob: -4.359358787536621
    9. ' ,' → logprob: -4.609358787536621
    10. '[' → logprob: -4.734358787536621

Token 1307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0495348758995533
    2. '#' → logprob: -3.799534797668457
    3. ',' → logprob: -4.424534797668457
    4. '           ' → logprob: -6.174534797668457
    5. '```' → logprob: -6.299534797668457
    6. ' #' → logprob: -6.424534797668457
    7. ')' → logprob: -6.799534797668457
    8. '_' → logprob: -6.924534797668457
    9. ' +' → logprob: -7.174534797668457
    10. '   ' → logprob: -7.299534797668457

Token 1308: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028761576861143112
    2. '#' (adapté à ' #') → logprob: -3.653761625289917
    3. '           ' → logprob: -6.903761386871338
    4. ' #' → logprob: -7.403761386871338
    5. ',' → logprob: -7.778761386871338
    6. '   ' → logprob: -9.153761863708496
    7. ')' → logprob: -9.403761863708496
    8. ' ' → logprob: -9.903761863708496
    9. '```' → logprob: -10.028761863708496
    10. '        ' → logprob: -10.153761863708496

Token 1309: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.401913046836853
    2. '       ' → logprob: -1.151913046836853
    3. ' #' → logprob: -4.776913166046143
    4. '           ' → logprob: -6.026913166046143
    5. '        ' → logprob: -7.026913166046143
    6. ',' → logprob: -7.526913166046143
    7. '```' → logprob: -7.526913166046143
    8. ' ' → logprob: -7.776913166046143
    9. '-' → logprob: -8.026912689208984
    10. '   ' → logprob: -8.401912689208984

Token 1310: ' visit' (ID: 4030)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.582222044467926
    2. '#' → logprob: -2.0822219848632812
    3. 'Move' → logprob: -2.5822219848632812
    4. 'for' → logprob: -3.2072219848632812
    5. 'For' → logprob: -3.3322219848632812
    6. 'Find' → logprob: -3.8322219848632812
    7. '       ' → logprob: -3.9572219848632812
    8. 'move' → logprob: -3.9572219848632812
    9. 'End' → logprob: -4.082221984863281
    10. '   ' → logprob: -5.082221984863281

Token 1311: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5768701434135437
    2. 'all' → logprob: -0.8268701434135437
    3. '   ' → logprob: -8.07686996459961
    4. ' ' → logprob: -8.95186996459961
    5. ' at' → logprob: -9.45186996459961
    6. ' the' → logprob: -9.70186996459961
    7. 'the' → logprob: -9.82686996459961
    8. 'rows' → logprob: -9.82686996459961
    9. 'at' → logprob: -10.45186996459961
    10. '```' → logprob: -10.45186996459961

Token 1312: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.8828891515731812
    2. ' rows' → logprob: -1.0078891515731812
    3. ' required' → logprob: -2.0078892707824707
    4. 'required' → logprob: -2.5078892707824707
    5. ' needed' → logprob: -6.757889270782471
    6. 'books' → logprob: -6.757889270782471
    7. 'needed' → logprob: -7.007889270782471
    8. 'book' → logprob: -7.882889270782471
    9. ' books' → logprob: -8.257888793945312
    10. 'req' → logprob: -8.632888793945312

Token 1313: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.801790714263916
    2. '```' → logprob: -1.551790714263916
    3. '_' → logprob: -2.426790714263916
    4. ' _' → logprob: -2.551790714263916
    5. '[' → logprob: -3.676790714263916
    6. ' +' → logprob: -3.926790714263916
    7. ',' → logprob: -4.176790714263916
    8. '[r' → logprob: -4.426790714263916
    9. ' =' → logprob: -4.551790714263916
    10. '           ' → logprob: -4.676790714263916

Token 1314: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.23555727303028107
    2. ' have' → logprob: -1.9855573177337646
    3. 'need' → logprob: -3.1105573177337646
    4. ' need' → logprob: -4.7355570793151855
    5. 'contain' → logprob: -5.3605570793151855
    6. 'c' → logprob: -5.8605570793151855
    7. 'require' → logprob: -6.1105570793151855
    8. 'must' → logprob: -6.2355570793151855
    9. ' contain' → logprob: -6.4855570793151855
    10. ' c' → logprob: -6.9855570793151855

Token 1315: ' books' (ID: 7187)
  Prédit: ' books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' books' → logprob: -0.741403341293335
    2. 'books' → logprob: -0.741403341293335
    3. ' required' → logprob: -3.741403341293335
    4. ' book' → logprob: -5.116403579711914
    5. 'book' → logprob: -5.366403579711914
    6. ' a' → logprob: -5.491403579711914
    7. 'required' → logprob: -5.991403579711914
    8. 'a' → logprob: -5.991403579711914
    9. ' shelves' → logprob: -7.116403579711914
    10. ' at' → logprob: -7.741403579711914

Token 1316: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34116241335868835
    2. ' =' → logprob: -2.5911624431610107
    3. '[' → logprob: -3.2161624431610107
    4. ' _' → logprob: -3.3411624431610107
    5. '_' → logprob: -3.4661624431610107
    6. '   ' → logprob: -3.7161624431610107
    7. '`' → logprob: -4.716162204742432
    8. '	' → logprob: -4.841162204742432
    9. ',' → logprob: -4.966162204742432
    10. '```' → logprob: -5.091162204742432

Token 1317: 'put' (ID: 772)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3397170901298523
    2. ',' → logprob: -2.589717149734497
    3. ' at' → logprob: -3.214717149734497
    4. '       ' → logprob: -3.714717149734497
    5. ' with' → logprob: -3.714717149734497
    6. ' (' → logprob: -4.089716911315918
    7. 'with' → logprob: -4.589716911315918
    8. ' in' → logprob: -4.714716911315918
    9. ' )' → logprob: -4.839716911315918
    10. '),' → logprob: -4.964716911315918

Token 1318: ' books' (ID: 7187)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9181296825408936
    2. '   ' → logprob: -1.9181296825408936
    3. ' a' → logprob: -2.9181296825408936
    4. ' books' → logprob: -2.9181296825408936
    5. ' _' → logprob: -3.0431296825408936
    6. ' at' → logprob: -3.1681296825408936
    7. ' the' → logprob: -3.2931296825408936
    8. ' ' → logprob: -3.5431296825408936
    9. 'books' → logprob: -3.5431296825408936
    10. ' them' → logprob: -3.9181296825408936

Token 1319: ' in' (ID: 306)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5564695596694946
    2. 's' → logprob: -1.5564695596694946
    3. ')' → logprob: -2.431469440460205
    4. ',' → logprob: -3.181469440460205
    5. 'at' → logprob: -3.681469440460205
    6. '       ' → logprob: -3.931469440460205
    7. '(s' → logprob: -4.681469440460205
    8. ' s' → logprob: -5.556469440460205
    9. '```' → logprob: -5.681469440460205
    10. ' in' → logprob: -5.681469440460205

Token 1320: ' their' (ID: 1043)
  Prédit: ' middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' middle' → logprob: -1.5383919477462769
    2. ' midd' → logprob: -2.1633920669555664
    3. 'middle' → logprob: -2.2883920669555664
    4. ' shelves' → logprob: -2.2883920669555664
    5. 'midd' → logprob: -2.4133920669555664
    6. 's' → logprob: -2.6633920669555664
    7. 'that' → logprob: -2.7883920669555664
    8. ' that' → logprob: -2.9133920669555664
    9. '   ' → logprob: -4.038392066955566
    10. 'c' → logprob: -4.038392066955566

Token 1321: ' middle' (ID: 10006)
  Prédit: ' shelves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelves' → logprob: -1.2659724950790405
    2. ' shelf' → logprob: -1.6409724950790405
    3. ' middle' → logprob: -1.8909724950790405
    4. 'middle' → logprob: -2.01597261428833
    5. 's' → logprob: -2.14097261428833
    6. 'midd' → logprob: -2.89097261428833
    7. ' midd' → logprob: -3.14097261428833
    8. 'm' → logprob: -5.26597261428833
    9. ')' → logprob: -5.64097261428833
    10. ' ' → logprob: -6.39097261428833

Token 1322: ')
' (ID: 446)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.1600792407989502
    2. ')' → logprob: -1.4100792407989502
    3. 's' → logprob: -1.5350792407989502
    4. ',' → logprob: -2.53507924079895
    5. ' (' → logprob: -3.41007924079895
    6. '(s' → logprob: -3.91007924079895
    7. '```' → logprob: -3.91007924079895
    8. '[r' → logprob: -4.160079002380371
    9. '(' → logprob: -4.535079002380371
    10. '       ' → logprob: -4.660079002380371

Token 1323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023284148424863815
    2. ',' → logprob: -4.898283958435059
    3. '           ' → logprob: -6.148283958435059
    4. '```' → logprob: -6.148283958435059
    5. '_' → logprob: -6.273283958435059
    6. '#' → logprob: -6.648283958435059
    7. '        ' → logprob: -6.773283958435059
    8. ' _' → logprob: -6.898283958435059
    9. '   ' → logprob: -7.148283958435059
    10. ' (' → logprob: -7.273283958435059

Token 1324: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008890974335372448
    2. '#' (adapté à ' #') → logprob: -5.6338911056518555
    3. '           ' → logprob: -6.7588911056518555
    4. ',' → logprob: -6.7588911056518555
    5. '```' → logprob: -7.1338911056518555
    6. '   ' → logprob: -7.6338911056518555
    7. '        ' → logprob: -7.6338911056518555
    8. ' ' → logprob: -9.008891105651855
    9. ' (' → logprob: -9.133891105651855
    10. '\' → logprob: -9.258891105651855

Token 1325: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025922849774360657
    2. '        ' → logprob: -4.900922775268555
    3. '           ' → logprob: -5.400922775268555
    4. '```' → logprob: -5.775922775268555
    5. ',' → logprob: -5.900922775268555
    6. '[' → logprob: -6.400922775268555
    7. '   ' → logprob: -7.275922775268555
    8. ' ' → logprob: -7.650922775268555
    9. '\' → logprob: -7.900922775268555
    10. ' +' → logprob: -8.025922775268555

Token 1326: ' end' (ID: 1268)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.33456748723983765
    2. 'return' → logprob: -2.3345675468444824
    3. 'move' → logprob: -2.8345675468444824
    4. 'end' → logprob: -2.9595675468444824
    5. 'Then' → logprob: -4.334567546844482
    6. 'visit' → logprob: -4.334567546844482
    7. 'finish' → logprob: -4.584567546844482
    8. '   ' → logprob: -4.709567546844482
    9. 'go' → logprob: -4.959567546844482
    10. 'find' → logprob: -6.084567546844482

Token 1327: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5130464434623718
    2. ' =' → logprob: -2.2630465030670166
    3. '_row' → logprob: -2.8880465030670166
    4. '   ' → logprob: -3.0130465030670166
    5. 'row' → logprob: -3.1380465030670166
    6. 'at' → logprob: -3.3880465030670166
    7. '_' → logprob: -3.6380465030670166
    8. 's' → logprob: -4.6380462646484375
    9. '_at' → logprob: -4.7630462646484375
    10. '=' → logprob: -4.8880462646484375

Token 1328: ' some' (ID: 1236)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'some' → logprob: -0.015571360476315022
    2. ' some' → logprob: -4.515571594238281
    3. 'any' → logprob: -5.640571594238281
    4. 'a' → logprob: -7.765571594238281
    5. 'the' → logprob: -9.140571594238281
    6. ' any' → logprob: -9.265571594238281
    7. 'another' → logprob: -9.265571594238281
    8. 'column' → logprob: -10.265571594238281
    9. 'each' → logprob: -10.515571594238281
    10. 'next' → logprob: -10.765571594238281

Token 1329: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6936642527580261
    2. ' row' → logprob: -0.6936642527580261
    3. '```' → logprob: -8.44366455078125
    4. '(row' → logprob: -9.19366455078125
    5. '_row' → logprob: -9.56866455078125
    6. ' ' → logprob: -10.06866455078125
    7. '   ' → logprob: -10.56866455078125
    8. '#' → logprob: -11.31866455078125
    9. '
' → logprob: -11.81866455078125
    10. '       ' → logprob: -12.56866455078125

Token 1330: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24747489392757416
    2. '_' → logprob: -3.6224749088287354
    3. '   ' → logprob: -3.6224749088287354
    4. ' _' → logprob: -3.8724749088287354
    5. ' =' → logprob: -4.122474670410156
    6. '```' → logprob: -4.122474670410156
    7. '        
' → logprob: -4.247474670410156
    8. ',' → logprob: -4.247474670410156
    9. '        ' → logprob: -4.497474670410156
    10. '[' → logprob: -4.622474670410156

Token 1331: ' column' (ID: 6000)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8156728744506836
    2. 'column' → logprob: -0.8156728744506836
    3. ' column' → logprob: -3.0656728744506836
    4. ' c' → logprob: -3.1906728744506836
    5. 'col' → logprob: -4.440672874450684
    6. '```' → logprob: -4.815672874450684
    7. '   ' → logprob: -5.315672874450684
    8. '    ' → logprob: -7.815672874450684
    9. ' col' → logprob: -7.940672874450684
    10. ' ' → logprob: -8.065672874450684

Token 1332: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.038098860532045364
    2. ' c' → logprob: -3.2880988121032715
    3. '```' → logprob: -10.28809928894043
    4. '   ' → logprob: -11.66309928894043
    5. ' (' → logprob: -12.53809928894043
    6. '_c' → logprob: -13.03809928894043
    7. '`' → logprob: -13.28809928894043
    8. '+' → logprob: -13.66309928894043
    9. '(c' → logprob: -14.16309928894043
    10. ' ' → logprob: -14.16309928894043

Token 1333: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06653667986392975
    2. '        
' → logprob: -4.066536903381348
    3. '
' → logprob: -4.191536903381348
    4. '        ' → logprob: -5.441536903381348
    5. ' _' → logprob: -5.566536903381348
    6. '           ' → logprob: -5.566536903381348
    7. '_' → logprob: -5.691536903381348
    8. '```' → logprob: -5.691536903381348
    9. ',' → logprob: -6.191536903381348
    10. '   ' → logprob: -6.441536903381348

Token 1334: ' move' (ID: 5275)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6860789656639099
    2. 'move' → logprob: -1.3110790252685547
    3. 'go' → logprob: -1.8110790252685547
    4. ' move' → logprob: -3.3110790252685547
    5. ' continue' → logprob: -4.436079025268555
    6. ' go' → logprob: -4.936079025268555
    7. 'next' → logprob: -6.061079025268555
    8. '   ' → logprob: -6.811079025268555
    9. 'walk' → logprob: -6.936079025268555
    10. 'pro' → logprob: -7.186079025268555

Token 1335: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.2926799058914185
    2. ' to' → logprob: -1.5426799058914185
    3. ' on' → logprob: -1.7926799058914185
    4. 'right' → logprob: -2.167679786682129
    5. 'on' → logprob: -2.917679786682129
    6. ' right' → logprob: -3.167679786682129
    7. ' next' → logprob: -3.792679786682129
    8. ')' → logprob: -3.917679786682129
    9. ' =' → logprob: -4.292679786682129
    10. '`' → logprob: -4.542679786682129

Token 1336: ' next' (ID: 2613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6175277829170227
    2. '_' → logprob: -2.242527723312378
    3. '    ' → logprob: -2.617527723312378
    4. '   ' → logprob: -2.742527723312378
    5. ' ' → logprob: -2.867527723312378
    6. '        ' → logprob: -3.492527723312378
    7. '`' → logprob: -3.992527723312378
    8. '```' → logprob: -3.992527723312378
    9. ')' → logprob: -4.117527961730957
    10. ' _' → logprob: -4.242527961730957

Token 1337: ' column' (ID: 6000)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8429457545280457
    2. '       ' → logprob: -0.9679457545280457
    3. '   ' → logprob: -2.3429458141326904
    4. ' _' → logprob: -3.7179458141326904
    5. '    ' → logprob: -3.9679458141326904
    6. ')' → logprob: -4.717945575714111
    7. '[' → logprob: -5.217945575714111
    8. '        ' → logprob: -5.217945575714111
    9. '_
' → logprob: -5.217945575714111
    10. ' ' → logprob: -5.467945575714111

Token 1338: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07923147082328796
    2. '
' → logprob: -3.8292315006256104
    3. '        
' → logprob: -3.8292315006256104
    4. ' _' → logprob: -5.579231262207031
    5. '_' → logprob: -5.579231262207031
    6. '   ' → logprob: -5.704231262207031
    7. ',' → logprob: -6.079231262207031
    8. '           ' → logprob: -6.204231262207031
    9. '```' → logprob: -6.329231262207031
    10. '        ' → logprob: -6.579231262207031

Token 1339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0280014481395483
    2. '        
' → logprob: -4.153001308441162
    3. '
' → logprob: -5.528001308441162
    4. '        ' → logprob: -6.403001308441162
    5. '   ' → logprob: -6.778001308441162
    6. '           ' → logprob: -6.903001308441162
    7. ',' → logprob: -7.403001308441162
    8. '_' → logprob: -7.903001308441162
    9. '<|end|>' → logprob: -8.27800178527832
    10. '        
        
' → logprob: -8.65300178527832

Token 1340: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15949203073978424
    2. '
' → logprob: -2.659492015838623
    3. '        
' → logprob: -3.159492015838623
    4. '   ' → logprob: -4.659492015838623
    5. '        ' → logprob: -5.284492015838623
    6. ' 
' → logprob: -5.534492015838623
    7. '    
' → logprob: -6.409492015838623
    8. ' dp' → logprob: -6.534492015838623
    9. '```' → logprob: -6.659492015838623
    10. '    ' → logprob: -6.659492015838623

Token 1341: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20903293788433075
    2. 'dp' → logprob: -2.3340330123901367
    3. ' dp' → logprob: -3.3340330123901367
    4. '
' → logprob: -3.5840330123901367
    5. '   ' → logprob: -4.584033012390137
    6. '        
' → logprob: -5.084033012390137
    7. 'from' → logprob: -6.334033012390137
    8. 'DP' → logprob: -7.084033012390137
    9. '```' → logprob: -7.209033012390137
    10. '           ' → logprob: -7.209033012390137

Token 1342: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.13657155632972717
    2. '#' → logprob: -3.1365716457366943
    3. ' =' → logprob: -4.386571407318115
    4. 'can' → logprob: -4.386571407318115
    5. '_' → logprob: -4.511571407318115
    6. ' will' → logprob: -5.011571407318115
    7. ' must' → logprob: -5.011571407318115
    8. ' need' → logprob: -5.136571407318115
    9. '   ' → logprob: -5.386571407318115
    10. ' ' → logprob: -5.386571407318115

Token 1343: ' do' (ID: 621)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.17239566147327423
    2. 'use' → logprob: -3.297395706176758
    3. 'represent' → logprob: -3.922395706176758
    4. 'def' → logprob: -4.172395706176758
    5. 'solve' → logprob: -4.547395706176758
    6. 'consider' → logprob: -4.547395706176758
    7. 'define' → logprob: -4.672395706176758
    8. ' pre' → logprob: -4.672395706176758
    9. 'implement' → logprob: -4.922395706176758
    10. 'compute' → logprob: -5.047395706176758

Token 1344: ' DP' (ID: 51992)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24199062585830688
    2. '```' → logprob: -3.491990566253662
    3. '       ' → logprob: -3.616990566253662
    4. ' the' → logprob: -3.991990566253662
    5. 'the' → logprob: -4.116990566253662
    6. 'prev' → logprob: -4.116990566253662
    7. 'dp' → logprob: -4.241990566253662
    8. ' dp' → logprob: -4.366990566253662
    9. ' this' → logprob: -4.741990566253662
    10. 'this' → logprob: -4.991990566253662

Token 1345: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12430714070796967
    2. '
' → logprob: -3.249307155609131
    3. '   ' → logprob: -3.499307155609131
    4. '```' → logprob: -4.499307155609131
    5. '        
' → logprob: -5.249307155609131
    6. 'dp' → logprob: -5.624307155609131
    7. '`
' → logprob: -5.999307155609131
    8. 'from' → logprob: -5.999307155609131
    9. '`' → logprob: -5.999307155609131
    10. '``' → logprob: -6.124307155609131

Token 1346: ' columns' (ID: 15697)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3465920686721802
    2. 'columns' → logprob: -1.4715920686721802
    3. 'rows' → logprob: -1.7215920686721802
    4. 'N' → logprob: -2.2215919494628906
    5. 'range' → logprob: -2.5965919494628906
    6. 'cols' → logprob: -3.2215919494628906
    7. 'col' → logprob: -3.7215919494628906
    8. '(' → logprob: -4.471591949462891
    9. '4' → logprob: -4.471591949462891
    10. '   ' → logprob: -4.596591949462891

Token 1347: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18348494172096252
    2. '
' → logprob: -2.6834850311279297
    3. '   ' → logprob: -2.8084850311279297
    4. 'dp' → logprob: -5.05848503112793
    5. '```' → logprob: -5.05848503112793
    6. '        
' → logprob: -5.43348503112793
    7. '`' → logprob: -5.80848503112793
    8. '`
' → logprob: -6.30848503112793
    9. ',' → logprob: -6.30848503112793
    10. '           ' → logprob: -6.55848503112793

Token 1348: ' possible' (ID: 4149)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.021615279838442802
    2. ' rows' → logprob: -3.8966152667999268
    3. '   ' → logprob: -8.521615028381348
    4. 'books' → logprob: -8.896615028381348
    5. '4' → logprob: -9.021615028381348
    6. '       ' → logprob: -9.146615028381348
    7. 'states' → logprob: -9.521615028381348
    8. ' ' → logprob: -9.646615028381348
    9. '#' → logprob: -10.021615028381348
    10. 's' → logprob: -10.021615028381348

Token 1349: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.10854143649339676
    2. 'row' → logprob: -2.608541488647461
    3. 'positions' → logprob: -4.233541488647461
    4. ' rows' → logprob: -4.983541488647461
    5. '_rows' → logprob: -5.733541488647461
    6. '_row' → logprob: -6.233541488647461
    7. ' row' → logprob: -6.733541488647461
    8. 'current' → logprob: -7.483541488647461
    9. ' positions' → logprob: -8.358541488647461
    10. '   ' → logprob: -8.608541488647461

Token 1350: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6621689200401306
    2. '```' → logprob: -2.1621689796447754
    3. '[' → logprob: -2.6621689796447754
    4. '``' → logprob: -3.2871689796447754
    5. '_' → logprob: -3.4121689796447754
    6. '
' → logprob: -3.7871689796447754
    7. '       ' → logprob: -3.7871689796447754
    8. '`' → logprob: -3.9121689796447754
    9. '    ' → logprob: -4.162168979644775
    10. ' _' → logprob: -4.162168979644775

Token 1351: ' intersection' (ID: 42002)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.9547475576400757
    2. 'column' → logprob: -1.5797475576400757
    3. 'each' → logprob: -1.9547475576400757
    4. 'the' → logprob: -2.0797476768493652
    5. 'c' → logprob: -2.2047476768493652
    6. 'previous' → logprob: -4.704747676849365
    7. '   ' → logprob: -4.829747676849365
    8. 'col' → logprob: -5.704747676849365
    9. 'position' → logprob: -6.329747676849365
    10. 'end' → logprob: -6.454747676849365

Token 1352: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2808619737625122
    2. '       ' → logprob: -1.6558619737625122
    3. '```' → logprob: -4.530861854553223
    4. '[' → logprob: -4.655861854553223
    5. '_' → logprob: -4.905861854553223
    6. '    ' → logprob: -5.780861854553223
    7. '`' → logprob: -6.030861854553223
    8. '
' → logprob: -6.155861854553223
    9. ' _' → logprob: -6.155861854553223
    10. ',' → logprob: -6.155861854553223

Token 1353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02598697319626808
    2. '   ' → logprob: -4.150987148284912
    3. '           ' → logprob: -6.400987148284912
    4. '        ' → logprob: -6.650987148284912
    5. '```' → logprob: -6.775987148284912
    6. ',' → logprob: -7.025987148284912
    7. '    ' → logprob: -7.150987148284912
    8. '
' → logprob: -7.400987148284912
    9. ' ' → logprob: -7.650987148284912
    10. '`' → logprob: -7.775987148284912

Token 1354: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055323969572782516
    2. 'dp' → logprob: -3.930324077606201
    3. '   ' → logprob: -4.055324077606201
    4. '
' → logprob: -5.680324077606201
    5. ' dp' → logprob: -5.680324077606201
    6. '```' → logprob: -6.055324077606201
    7. '           ' → logprob: -6.805324077606201
    8. '        ' → logprob: -7.055324077606201
    9. 'from' → logprob: -7.180324077606201
    10. '        
' → logprob: -7.180324077606201

Token 1355: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07436934858560562
    2. '   ' → logprob: -3.074369430541992
    3. 'dp' → logprob: -4.574369430541992
    4. '```' → logprob: -5.449369430541992
    5. '           ' → logprob: -6.074369430541992
    6. '`' → logprob: -6.199369430541992
    7. 'from' → logprob: -6.824369430541992
    8. ' dp' → logprob: -7.074369430541992
    9. 'for' → logprob: -7.324369430541992
    10. '4' → logprob: -7.574369430541992

Token 1356: '[c' (ID: 22840)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12922661006450653
    2. '[' → logprob: -2.7542266845703125
    3. '```' → logprob: -3.7542266845703125
    4. '=' → logprob: -4.1292266845703125
    5. '   ' → logprob: -4.6292266845703125
    6. ' ' → logprob: -6.1292266845703125
    7. '\[' → logprob: -6.7542266845703125
    8. '_' → logprob: -6.7542266845703125
    9. '\' → logprob: -7.2542266845703125
    10. ' [' → logprob: -7.6292266845703125

Token 1357: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02797525003552437
    2. ']' → logprob: -3.65297532081604
    3. '[c' → logprob: -6.527975082397461
    4. '+' → logprob: -9.527975082397461
    5. ']
' → logprob: -10.527975082397461
    6. ',' → logprob: -11.027975082397461
    7. '   ' → logprob: -11.152975082397461
    8. '```' → logprob: -11.152975082397461
    9. ']=' → logprob: -11.277975082397461
    10. 'dp' → logprob: -11.527975082397461

Token 1358: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6249890923500061
    2. '4' → logprob: -0.9999890923500061
    3. 'row' → logprob: -2.7499890327453613
    4. '0' → logprob: -4.624989032745361
    5. ']' → logprob: -4.874989032745361
    6. '][' → logprob: -4.999989032745361
    7. 'c' → logprob: -5.124989032745361
    8. '3' → logprob: -7.624989032745361
    9. 's' → logprob: -8.12498950958252
    10. 'rows' → logprob: -8.49998950958252

Token 1359: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5873353481292725
    2. '][' → logprob: -0.8373353481292725
    3. '[c' → logprob: -4.587335586547852
    4. ']=' → logprob: -7.837335586547852
    5. '[r' → logprob: -8.712335586547852
    6. ']
' → logprob: -9.087335586547852
    7. '][]' → logprob: -9.212335586547852
    8. '```' → logprob: -9.837335586547852
    9. 'c' → logprob: -9.962335586547852
    10. '   ' → logprob: -10.212335586547852

Token 1360: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0106223821640015
    2. '[c' → logprob: -1.1356223821640015
    3. '=' → logprob: -2.010622501373291
    4. '[r' → logprob: -2.760622501373291
    5. '][' → logprob: -3.135622501373291
    6. '```' → logprob: -4.135622501373291
    7. ']' → logprob: -4.135622501373291
    8. ' =' → logprob: -4.635622501373291
    9. '+' → logprob: -4.635622501373291
    10. '\[' → logprob: -5.260622501373291

Token 1361: ' minimal' (ID: 19957)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7356786131858826
    2. '[' → logprob: -1.1106786727905273
    3. 'float' → logprob: -2.2356786727905273
    4. '{' → logprob: -3.1106786727905273
    5. '{}' → logprob: -3.6106786727905273
    6. ' [' → logprob: -5.235678672790527
    7. 'inf' → logprob: -6.235678672790527
    8. '[c' → logprob: -7.360678672790527
    9. 'min' → logprob: -7.610678672790527
    10. '   ' → logprob: -7.735678672790527

Token 1362: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7474084496498108
    2. '_cost' → logprob: -1.497408390045166
    3. ' cost' → logprob: -2.372408390045166
    4. '[c' → logprob: -3.247408390045166
    5. '_dp' → logprob: -3.247408390045166
    6. 'dp' → logprob: -3.622408390045166
    7. '```' → logprob: -4.247408390045166
    8. '[' → logprob: -4.372408390045166
    9. '_' → logprob: -4.372408390045166
    10. '`' → logprob: -4.372408390045166

Token 1363: ' to' (ID: 316)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.842126727104187
    2. '[' → logprob: -0.967126727104187
    3. '```' → logprob: -2.5921268463134766
    4. '[r' → logprob: -3.2171268463134766
    5. '[
' → logprob: -3.5921268463134766
    6. '   ' → logprob: -4.592126846313477
    7. '_' → logprob: -4.967126846313477
    8. '][' → logprob: -5.217126846313477
    9. '`' → logprob: -5.217126846313477
    10. ']' → logprob: -5.842126846313477

Token 1364: ' be' (ID: 413)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.5941759943962097
    2. ' reach' → logprob: -2.4691760540008545
    3. 'move' → logprob: -2.4691760540008545
    4. ' be' → logprob: -2.8441760540008545
    5. 'be' → logprob: -2.9691760540008545
    6. ' move' → logprob: -3.0941760540008545
    7. '[c' → logprob: -3.4691760540008545
    8. '   ' → logprob: -4.219175815582275
    9. 'get' → logprob: -4.344175815582275
    10. 'put' → logprob: -4.344175815582275

Token 1365: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.13765956461429596
    2. 'at' → logprob: -2.1376595497131348
    3. '[c' → logprob: -5.137659549713135
    4. '   ' → logprob: -5.762659549713135
    5. '_at' → logprob: -7.637659549713135
    6. '       ' → logprob: -8.512660026550293
    7. ' [' → logprob: -8.762660026550293
    8. 'c' → logprob: -9.012660026550293
    9. ' c' → logprob: -9.262660026550293
    10. ' in' → logprob: -9.262660026550293

Token 1366: ' intersection' (ID: 42002)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.042907603085041046
    2. 'column' → logprob: -3.79290771484375
    3. '[c' → logprob: -4.04290771484375
    4. ' c' → logprob: -6.79290771484375
    5. '   ' → logprob: -8.29290771484375
    6. ' column' → logprob: -8.41790771484375
    7. '```' → logprob: -9.16790771484375
    8. '`' → logprob: -9.16790771484375
    9. 'col' → logprob: -10.41790771484375
    10. 'current' → logprob: -10.54290771484375

Token 1367: ' (' (ID: 350)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0032784834038466215
    2. '[' → logprob: -6.1282782554626465
    3. '[
' → logprob: -8.128278732299805
    4. ' [' → logprob: -8.128278732299805
    5. '```' → logprob: -8.503278732299805
    6. '   ' → logprob: -8.753278732299805
    7. '\[' → logprob: -9.878278732299805
    8. '`' → logprob: -10.878278732299805
    9. ' ' → logprob: -11.503278732299805
    10. '
' → logprob: -11.753278732299805

Token 1368: 'r' (ID: 81)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3527083396911621
    2. '[c' → logprob: -1.352708339691162
    3. ')[' → logprob: -3.977708339691162
    4. '][' → logprob: -4.852708339691162
    5. ')' → logprob: -5.227708339691162
    6. ')c' → logprob: -5.352708339691162
    7. '   ' → logprob: -7.102708339691162
    8. '```' → logprob: -8.35270881652832
    9. ',' → logprob: -8.72770881652832
    10. '\[' → logprob: -9.10270881652832

Token 1369: ',c' (ID: 22261)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4571477174758911
    2. ')[' → logprob: -1.4571477174758911
    3. '[c' → logprob: -3.0821475982666016
    4. ')][' → logprob: -3.5821475982666016
    5. ',' → logprob: -3.7071475982666016
    6. '   ' → logprob: -4.332147598266602
    7. ')' → logprob: -4.457147598266602
    8. 'c' → logprob: -5.832147598266602
    9. ',c' → logprob: -5.957147598266602
    10. '       ' → logprob: -6.957147598266602

Token 1370: ')' (ID: 8)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2556972801685333
    2. ']' → logprob: -1.505697250366211
    3. ')' → logprob: -6.630697250366211
    4. ']
' → logprob: -7.755697250366211
    5. '])' → logprob: -7.755697250366211
    6. '       ' → logprob: -8.005697250366211
    7. ')][' → logprob: -8.380697250366211
    8. '   ' → logprob: -8.380697250366211
    9. ')]' → logprob: -8.630697250366211
    10. '+' → logprob: -8.880697250366211

Token 1371: ' after' (ID: 1934)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9892699718475342
    2. '       ' → logprob: -1.7392699718475342
    3. '   ' → logprob: -1.8642699718475342
    4. '```' → logprob: -1.9892699718475342
    5. '][' → logprob: -2.864269971847534
    6. '[
' → logprob: -3.364269971847534
    7. ']' → logprob: -4.239270210266113
    8. '[r' → logprob: -4.614270210266113
    9. '[]' → logprob: -4.739270210266113
    10. '``' → logprob: -5.364270210266113

Token 1372: ' handling' (ID: 17491)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.36799246072769165
    2. 'vis' → logprob: -1.3679924011230469
    3. 'placing' → logprob: -3.492992401123047
    4. '   ' → logprob: -4.992992401123047
    5. 'processing' → logprob: -5.742992401123047
    6. 'visited' → logprob: -5.867992401123047
    7. 'having' → logprob: -5.992992401123047
    8. '```' → logprob: -6.367992401123047
    9. '       ' → logprob: -6.492992401123047
    10. 'cover' → logprob: -6.742992401123047

Token 1373: ' column' (ID: 6000)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.05727136507630348
    2. 'the' → logprob: -3.8072714805603027
    3. 'books' → logprob: -5.182271480560303
    4. '`' → logprob: -5.307271480560303
    5. '```' → logprob: -5.307271480560303
    6. 'all' → logprob: -5.432271480560303
    7. '   ' → logprob: -5.932271480560303
    8. '[' → logprob: -6.182271480560303
    9. ' the' → logprob: -6.432271480560303
    10. 'c' → logprob: -7.057271480560303

Token 1374: ' c' (ID: 274)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2783379852771759
    2. '[c' → logprob: -2.7783379554748535
    3. ']' → logprob: -3.0283379554748535
    4. '`' → logprob: -3.6533379554748535
    5. '```' → logprob: -3.9033379554748535
    6. '
' → logprob: -4.1533379554748535
    7. '       ' → logprob: -4.4033379554748535
    8. '+' → logprob: -4.7783379554748535
    9. ' =' → logprob: -5.0283379554748535
    10. '[
' → logprob: -5.1533379554748535

Token 1375: '

' (ID: 279)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7953716516494751
    2. ']' → logprob: -1.170371651649475
    3. '[' → logprob: -2.5453715324401855
    4. '       ' → logprob: -3.2953715324401855
    5. '   ' → logprob: -3.4203715324401855
    6. '```' → logprob: -3.9203715324401855
    7. '
' → logprob: -4.5453715324401855
    8. ']
' → logprob: -4.5453715324401855
    9. '[
' → logprob: -4.7953715324401855
    10. '[c' → logprob: -5.1703715324401855

Token 1376: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5128021240234375
    2. '[' → logprob: -1.7628021240234375
    3. '```' → logprob: -2.0128021240234375
    4. '][' → logprob: -2.1378021240234375
    5. '       ' → logprob: -2.2628021240234375
    6. '[
' → logprob: -2.6378021240234375
    7. ']' → logprob: -2.7628021240234375
    8. '
' → logprob: -3.3878021240234375
    9. ',' → logprob: -4.2628021240234375
    10. '`' → logprob: -4.3878021240234375

Token 1377: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5095456838607788
    2. '   ' → logprob: -1.1345456838607788
    3. 'dp' → logprob: -3.1345458030700684
    4. '
' → logprob: -5.009545803070068
    5. ' dp' → logprob: -5.134545803070068
    6. '```' → logprob: -5.259545803070068
    7. '	' → logprob: -6.634545803070068
    8. '    ' → logprob: -6.759545803070068
    9. '        
' → logprob: -6.884545803070068
    10. ' for' → logprob: -7.009545803070068

Token 1378: ' Initialization' (ID: 95511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7681500315666199
    2. '       ' → logprob: -1.0181500911712646
    3. 'dp' → logprob: -2.1431500911712646
    4. '
' → logprob: -4.5181498527526855
    5. ' dp' → logprob: -4.5181498527526855
    6. '```' → logprob: -4.5181498527526855
    7. 'from' → logprob: -5.0181498527526855
    8. ' for' → logprob: -5.3931498527526855
    9. 'import' → logprob: -5.8931498527526855
    10. 'for' → logprob: -5.8931498527526855

Token 1379: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.030615877360105515
    2. '   ' → logprob: -3.53061580657959
    3. 'import' → logprob: -7.28061580657959
    4. ' dp' → logprob: -9.65561580657959
    5. 'INF' → logprob: -10.03061580657959
    6. ' =' → logprob: -10.90561580657959
    7. '```' → logprob: -10.90561580657959
    8. 'from' → logprob: -11.28061580657959
    9. '
' → logprob: -11.65561580657959
    10. '=' → logprob: -12.65561580657959

Token 1380: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009590806439518929
    2. '   ' → logprob: -5.2595906257629395
    3. 'import' → logprob: -5.5095906257629395
    4. 'from' → logprob: -8.759591102600098
    5. 'INF' → logprob: -9.509591102600098
    6. '```' → logprob: -10.134591102600098
    7. ' dp' → logprob: -10.634591102600098
    8. '``' → logprob: -13.384591102600098
    9. 'inf' → logprob: -13.884591102600098
    10. '`' → logprob: -14.009591102600098

Token 1381: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03009224124252796
    2. ' =' → logprob: -3.530092239379883
    3. '[' → logprob: -9.155092239379883
    4. '=[' → logprob: -9.280092239379883
    5. '0' → logprob: -9.780092239379883
    6. '=[[' → logprob: -9.905092239379883
    7. '   ' → logprob: -10.655092239379883
    8. '```' → logprob: -12.155092239379883
    9. '=
' → logprob: -13.030092239379883
    10. ' ' → logprob: -14.155092239379883

Token 1382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5029246211051941
    2. ' =' → logprob: -1.6279246807098389
    3. '=' → logprob: -1.8779246807098389
    4. '[' → logprob: -3.252924680709839
    5. 'c' → logprob: -5.37792444229126
    6. ']' → logprob: -7.62792444229126
    7. '```' → logprob: -7.62792444229126
    8. '=[' → logprob: -7.87792444229126
    9. '   ' → logprob: -8.502924919128418
    10. '][' → logprob: -8.752924919128418

Token 1383: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12576402723789215
    2. '][' → logprob: -3.0007641315460205
    3. ' =' → logprob: -3.0007641315460205
    4. '=' → logprob: -5.000763893127441
    5. '```' → logprob: -5.125763893127441
    6. ']' → logprob: -5.750763893127441
    7. '   ' → logprob: -6.250763893127441
    8. '=[' → logprob: -8.625763893127441
    9. ']=' → logprob: -9.625763893127441
    10. '       ' → logprob: -9.750763893127441

Token 1384: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0215102881193161
    2. '4' → logprob: -4.271510124206543
    3. ']' → logprob: -5.896510124206543
    4. 'r' → logprob: -5.896510124206543
    5. '][' → logprob: -7.646510124206543
    6. '[' → logprob: -7.771510124206543
    7. 'i' → logprob: -7.896510124206543
    8. '(' → logprob: -8.896510124206543
    9. 's' → logprob: -9.646510124206543
    10. '-' → logprob: -9.771510124206543

Token 1385: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10953962057828903
    2. '][' → logprob: -2.48453950881958
    3. ']=' → logprob: -4.60953950881958
    4. '[' → logprob: -4.73453950881958
    5. '   ' → logprob: -7.23453950881958
    6. '=' → logprob: -7.85953950881958
    7. ' =' → logprob: -8.609539985656738
    8. '```' → logprob: -9.609539985656738
    9. 'def' → logprob: -9.734539985656738
    10. '       ' → logprob: -10.109539985656738

Token 1386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5776541233062744
    2. ' =' → logprob: -0.8276541233062744
    3. '   ' → logprob: -7.077653884887695
    4. '[' → logprob: -8.077653884887695
    5. '```' → logprob: -8.327653884887695
    6. '=[' → logprob: -8.577653884887695
    7. ']' → logprob: -10.327653884887695
    8. 'dp' → logprob: -10.702653884887695
    9. '       ' → logprob: -11.202653884887695
    10. '={' → logprob: -11.452653884887695

Token 1387: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.500003814697266
    4. '```' → logprob: -16.750003814697266
    5. '{' → logprob: -17.625003814697266
    6. '1' → logprob: -17.750003814697266
    7. '`' → logprob: -18.625003814697266
    8. '.' → logprob: -18.875003814697266
    9. '    ' → logprob: -19.000003814697266
    10. '  ' → logprob: -19.000003814697266

Token 1388: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -16.25
    4. '   ' → logprob: -17.375
    5. '{' → logprob: -17.625
    6. '.' → logprob: -17.75
    7. '[' → logprob: -18.0
    8. '
' → logprob: -18.125
    9. '1' → logprob: -18.375
    10. '=' → logprob: -19.25

Token 1389: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7502371072769165
    2. '
' → logprob: -0.8752371072769165
    3. '   ' → logprob: -3.000236988067627
    4. '```' → logprob: -3.375236988067627
    5. ',' → logprob: -4.125236988067627
    6. 'else' → logprob: -5.625236988067627
    7. ' else' → logprob: -6.000236988067627
    8. '<|end|>' → logprob: -7.000236988067627
    9. '0' → logprob: -7.625236988067627
    10. '           ' → logprob: -7.875236988067627

Token 1390: 'start' (ID: 5236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1976001113653183
    2. '0' → logprob: -2.5726001262664795
    3. '
' → logprob: -3.4476001262664795
    4. '),' → logprob: -3.5726001262664795
    5. ',' → logprob: -3.8226001262664795
    6. ')
' → logprob: -4.5725998878479
    7. '```' → logprob: -5.3225998878479
    8. 'def' → logprob: -6.0725998878479
    9. ';' → logprob: -7.1975998878479
    10. ');' → logprob: -7.9475998878479

Token 1391: ' at' (ID: 540)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7813965082168579
    2. ']' → logprob: -1.406396508216858
    3. ')' → logprob: -1.656396508216858
    4. '   ' → logprob: -3.2813963890075684
    5. '       ' → logprob: -4.156396389007568
    6. '[' → logprob: -4.281396389007568
    7. ',' → logprob: -4.531396389007568
    8. '][' → logprob: -4.531396389007568
    9. ')
' → logprob: -5.406396389007568
    10. '```' → logprob: -5.656396389007568

Token 1392: ' intersection' (ID: 42002)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0894327312707901
    2. '(' → logprob: -2.589432716369629
    3. 'intersection' → logprob: -4.589432716369629
    4. ' (' → logprob: -9.464432716369629
    5. ')' → logprob: -9.589432716369629
    6. 'inter' → logprob: -9.964432716369629
    7. '```' → logprob: -10.214432716369629
    8. ' ' → logprob: -10.964432716369629
    9. ']' → logprob: -11.464432716369629
    10. '   ' → logprob: -11.464432716369629

Token 1393: '(' (ID: 7)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0573582649230957
    2. '][' → logprob: -1.5573582649230957
    3. '(' → logprob: -1.9323582649230957
    4. '   ' → logprob: -2.1823582649230957
    5. '0' → logprob: -2.6823582649230957
    6. '```' → logprob: -3.0573582649230957
    7. ']' → logprob: -3.6823582649230957
    8. ' (' → logprob: -4.182358264923096
    9. ')' → logprob: -4.932358264923096
    10. '
' → logprob: -5.182358264923096

Token 1394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012679706560447812
    2. ',' → logprob: -7.626267910003662
    3. ')' → logprob: -7.751267910003662
    4. '(' → logprob: -8.37626838684082
    5. ' ' → logprob: -9.87626838684082
    6. '   ' → logprob: -10.62626838684082
    7. '),' → logprob: -11.00126838684082
    8. ' (' → logprob: -11.87626838684082
    9. ' ,' → logprob: -12.12626838684082
    10. '```' → logprob: -13.25126838684082

Token 1395: ',' (ID: 11)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.11757715791463852
    2. ',' → logprob: -2.367577075958252
    3. '][' → logprob: -4.367577075958252
    4. ')]' → logprob: -5.992577075958252
    5. '   ' → logprob: -7.242577075958252
    6. ')' → logprob: -7.367577075958252
    7. ')[' → logprob: -7.867577075958252
    8. '```' → logprob: -10.24257755279541
    9. '       ' → logprob: -10.36757755279541
    10. ')])' → logprob: -10.36757755279541

Token 1396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4285862057004124e-05
    2. ' ' → logprob: -10.50003433227539
    3. ')' → logprob: -12.12503433227539
    4. '   ' → logprob: -14.50003433227539
    5. '```' → logprob: -15.00003433227539
    6. ',' → logprob: -15.62503433227539
    7. ' )' → logprob: -16.37503433227539
    8. '
' → logprob: -17.00003433227539
    9. '  ' → logprob: -17.62503433227539
    10. '),' → logprob: -18.25003433227539

Token 1397: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14789150655269623
    2. ')
' → logprob: -2.1478915214538574
    3. '   ' → logprob: -4.772891521453857
    4. '),' → logprob: -5.647891521453857
    5. '
' → logprob: -5.897891521453857
    6. ']' → logprob: -6.022891521453857
    7. ')]' → logprob: -6.772891521453857
    8. '       ' → logprob: -7.272891521453857
    9. '])' → logprob: -7.647891521453857
    10. '```' → logprob: -7.897891521453857

Token 1398: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6026397347450256
    2. 'dp' → logprob: -0.9776397347450256
    3. '       ' → logprob: -2.602639675140381
    4. ' dp' → logprob: -6.352639675140381
    5. '
' → logprob: -8.602640151977539
    6. 'import' → logprob: -8.602640151977539
    7. '	dp' → logprob: -9.727640151977539
    8. ',' → logprob: -9.977640151977539
    9. '0' → logprob: -10.227640151977539
    10. 'else' → logprob: -10.477640151977539

Token 1399: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18700484931468964
    2. 'dp' → logprob: -1.937004804611206
    3. '   ' → logprob: -3.812004804611206
    4. ' dp' → logprob: -6.562005043029785
    5. '
' → logprob: -6.687005043029785
    6. ',' → logprob: -7.312005043029785
    7. '```' → logprob: -7.687005043029785
    8. '           ' → logprob: -8.687005043029785
    9. 'import' → logprob: -9.187005043029785
    10. 'from' → logprob: -10.062005043029785

Token 1400: ' others' (ID: 5036)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2295350283384323
    2. '   ' → logprob: -1.9795349836349487
    3. 'dp' → logprob: -3.2295351028442383
    4. '
' → logprob: -4.729535102844238
    5. 'for' → logprob: -5.104535102844238
    6. ' for' → logprob: -5.354535102844238
    7. ' dp' → logprob: -5.854535102844238
    8. '```' → logprob: -5.979535102844238
    9. 'import' → logprob: -7.604535102844238
    10. 'from' → logprob: -7.854535102844238

Token 1401: ' dp' (ID: 21546)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40376830101013184
    2. ' =' → logprob: -1.1537683010101318
    3. '[' → logprob: -4.778768539428711
    4. '```' → logprob: -5.403768539428711
    5. '=[' → logprob: -6.403768539428711
    6. '   ' → logprob: -7.153768539428711
    7. '       ' → logprob: -7.778768539428711
    8. '={' → logprob: -8.653768539428711
    9. ')' → logprob: -8.778768539428711
    10. ']' → logprob: -9.153768539428711

Token 1402: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24166986346244812
    2. '=' → logprob: -1.7416698932647705
    3. '[' → logprob: -3.4916698932647705
    4. '=[' → logprob: -5.491669654846191
    5. '```' → logprob: -5.866669654846191
    6. '=[[' → logprob: -6.616669654846191
    7. '   ' → logprob: -8.116669654846191
    8. '       ' → logprob: -9.741669654846191
    9. '
' → logprob: -10.116669654846191
    10. '=[]' → logprob: -10.491669654846191

Token 1403: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20446911454200745
    2. '[' → logprob: -2.7044692039489746
    3. '0' → logprob: -2.9544692039489746
    4. ' =' → logprob: -3.0794692039489746
    5. '```' → logprob: -5.579469203948975
    6. '=[' → logprob: -5.829469203948975
    7. ']' → logprob: -5.829469203948975
    8. 'c' → logprob: -5.954469203948975
    9. '   ' → logprob: -6.704469203948975
    10. '[c' → logprob: -6.829469203948975

Token 1404: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07417988777160645
    2. ']' → logprob: -2.8241798877716064
    3. '[' → logprob: -5.449179649353027
    4. '```' → logprob: -6.324179649353027
    5. ' =' → logprob: -6.574179649353027
    6. '[r' → logprob: -6.699179649353027
    7. '=' → logprob: -6.699179649353027
    8. ']=' → logprob: -7.574179649353027
    9. '   ' → logprob: -7.824179649353027
    10. '       ' → logprob: -8.449179649353027

Token 1405: 'r' (ID: 81)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02575475350022316
    2. 'inf' → logprob: -4.400754928588867
    3. '{' → logprob: -5.650754928588867
    4. '1' → logprob: -6.025754928588867
    5. '4' → logprob: -6.775754928588867
    6. '10' → logprob: -6.900754928588867
    7. '=' → logprob: -6.900754928588867
    8. '```' → logprob: -7.525754928588867
    9. '=float' → logprob: -7.650754928588867
    10. '[' → logprob: -7.775754928588867

Token 1406: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09198018163442612
    2. '][' → logprob: -2.966980218887329
    3. ']=' → logprob: -4.21697998046875
    4. '[' → logprob: -4.59197998046875
    5. '[r' → logprob: -4.84197998046875
    6. '=' → logprob: -6.21697998046875
    7. 'r' → logprob: -7.96697998046875
    8. '   ' → logprob: -8.21697998046875
    9. ' =' → logprob: -8.21697998046875
    10. '```' → logprob: -8.34197998046875

Token 1407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.524316132068634
    2. ' =' → logprob: -0.899316132068634
    3. '=[' → logprob: -7.649316310882568
    4. ']' → logprob: -8.77431583404541
    5. '[' → logprob: -8.77431583404541
    6. '```' → logprob: -9.14931583404541
    7. '       ' → logprob: -9.27431583404541
    8. ']=' → logprob: -10.14931583404541
    9. '   ' → logprob: -10.39931583404541
    10. '={' → logprob: -10.52431583404541

Token 1408: ' INF' (ID: 69196)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006802406162023544
    2. ' float' → logprob: -5.006802558898926
    3. 'inf' → logprob: -10.381802558898926
    4. '10' → logprob: -10.756802558898926
    5. '   ' → logprob: -10.881802558898926
    6. '1' → logprob: -11.381802558898926
    7. 'INF' → logprob: -14.256802558898926
    8. '
' → logprob: -14.256802558898926
    9. '    ' → logprob: -14.506802558898926
    10. ' ' → logprob: -14.756802558898926

Token 1409: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5912788510322571
    2. '   ' → logprob: -1.7162787914276123
    3. '       ' → logprob: -2.2162787914276123
    4. '\n' → logprob: -3.0912787914276123
    5. '```' → logprob: -3.4662787914276123
    6. '    
' → logprob: -3.7162787914276123
    7. ' 
' → logprob: -4.466279029846191
    8. '        
' → logprob: -4.466279029846191
    9. '    ' → logprob: -5.716279029846191
    10. ',' → logprob: -5.716279029846191

Token 1410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08203539252281189
    2. '
' → logprob: -3.3320353031158447
    3. '   ' → logprob: -3.5820353031158447
    4. '```' → logprob: -4.582035541534424
    5. '\n' → logprob: -6.707035541534424
    6. '`
' → logprob: -7.332035541534424
    7. '`' → logprob: -7.457035541534424
    8. '        
' → logprob: -7.832035541534424
    9. '    
' → logprob: -8.207035064697266
    10. '           ' → logprob: -8.207035064697266

Token 1411: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011804328300058842
    2. '   ' → logprob: -5.136804103851318
    3. '
' → logprob: -6.011804103851318
    4. '```' → logprob: -6.886804103851318
    5. '        
' → logprob: -7.636804103851318
    6. 'for' → logprob: -7.761804103851318
    7. '           ' → logprob: -8.261804580688477
    8. 'rows' → logprob: -8.386804580688477
    9. ' for' → logprob: -9.136804580688477
    10. '`' → logprob: -9.261804580688477

Token 1412: ' Transition' (ID: 63887)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3606376051902771
    2. '   ' → logprob: -1.4856376647949219
    3. 'dp' → logprob: -3.985637664794922
    4. 'for' → logprob: -4.235637664794922
    5. '
' → logprob: -4.360637664794922
    6. '```' → logprob: -4.485637664794922
    7. ' for' → logprob: -4.985637664794922
    8. 'INF' → logprob: -5.485637664794922
    9. 'from' → logprob: -5.985637664794922
    10. 'import' → logprob: -6.360637664794922

Token 1413: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47446122765541077
    2. '       ' → logprob: -2.224461317062378
    3. '   ' → logprob: -2.974461317062378
    4. '=' → logprob: -3.099461317062378
    5. '[' → logprob: -3.099461317062378
    6. ':' → logprob: -3.224461317062378
    7. ']' → logprob: -4.099461078643799
    8. ',' → logprob: -4.599461078643799
    9. '[
' → logprob: -4.724461078643799
    10. 'for' → logprob: -4.849461078643799

Token 1414: ' dp' (ID: 21546)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06901106238365173
    2. 'range' → logprob: -3.3190109729766846
    3. ' c' → logprob: -4.069011211395264
    4. 'column' → logprob: -6.069011211395264
    5. 'previous' → logprob: -6.319011211395264
    6. '```' → logprob: -6.444011211395264
    7. 'dp' → logprob: -6.569011211395264
    8. ' range' → logprob: -6.694011211395264
    9. 'prev' → logprob: -6.819011211395264
    10. 'col' → logprob: -6.819011211395264

Token 1415: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00013083349040243775
    2. 'c' → logprob: -10.000130653381348
    3. '```' → logprob: -10.500130653381348
    4. '[' → logprob: -11.375130653381348
    5. '       ' → logprob: -11.500130653381348
    6. '\[' → logprob: -11.875130653381348
    7. '   ' → logprob: -12.000130653381348
    8. '[i' → logprob: -12.750130653381348
    9. '=c' → logprob: -13.000130653381348
    10. ']' → logprob: -13.125130653381348

Token 1416: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.23580770194530487
    2. '+' → logprob: -1.6108076572418213
    3. ']' → logprob: -4.7358078956604
    4. '-' → logprob: -7.2358078956604
    5. ' +' → logprob: -7.6108078956604
    6. '```' → logprob: -9.360807418823242
    7. '][]' → logprob: -9.860807418823242
    8. '+r' → logprob: -10.110807418823242
    9. '   ' → logprob: -10.360807418823242
    10. '+c' → logprob: -10.860807418823242

Token 1417: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0020299924071878195
    2. 'c' → logprob: -6.627029895782471
    3. '+' → logprob: -8.252030372619629
    4. ']' → logprob: -8.877030372619629
    5. '1' → logprob: -10.002030372619629
    6. '][' → logprob: -10.002030372619629
    7. 'dp' → logprob: -10.127030372619629
    8. '
' → logprob: -10.377030372619629
    9. 'prev' → logprob: -10.627030372619629
    10. '```' → logprob: -10.877030372619629

Token 1418: '1' (ID: 16)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5803386569023132
    2. '+' → logprob: -1.330338716506958
    3. ']' → logprob: -1.955338716506958
    4. '']' → logprob: -4.580338478088379
    5. ''][' → logprob: -4.580338478088379
    6. '_next' → logprob: -5.705338478088379
    7. '-' → logprob: -5.955338478088379
    8. ' +' → logprob: -6.330338478088379
    9. '1' → logprob: -7.205338478088379
    10. '   ' → logprob: -7.205338478088379

Token 1419: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012796267867088318
    2. ']' → logprob: -4.387796401977539
    3. '][]' → logprob: -9.762796401977539
    4. ']:
' → logprob: -9.887796401977539
    5. '   ' → logprob: -10.262796401977539
    6. ']][' → logprob: -10.387796401977539
    7. ']
' → logprob: -10.762796401977539
    8. '+' → logprob: -11.137796401977539
    9. ' ][' → logprob: -11.137796401977539
    10. '       ' → logprob: -11.512796401977539

Token 1420: ' to' (ID: 316)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.31568509340286255
    2. '[r' → logprob: -1.9406850337982178
    3. '[' → logprob: -3.4406850337982178
    4. '```' → logprob: -3.6906850337982178
    5. ']' → logprob: -4.940685272216797
    6. ':' → logprob: -4.940685272216797
    7. '       ' → logprob: -5.065685272216797
    8. '
' → logprob: -5.065685272216797
    9. '+' → logprob: -5.190685272216797
    10. ' =' → logprob: -5.440685272216797

Token 1421: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.035120926797389984
    2. ' dp' → logprob: -3.910120964050293
    3. 'c' → logprob: -4.910120964050293
    4. '[c' → logprob: -5.035120964050293
    5. '```' → logprob: -8.910120964050293
    6. '   ' → logprob: -8.910120964050293
    7. '`' → logprob: -9.160120964050293
    8. ' c' → logprob: -9.285120964050293
    9. '_dp' → logprob: -10.785120964050293
    10. ' [' → logprob: -11.035120964050293

Token 1422: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0003501242317724973
    2. 'c' → logprob: -8.250349998474121
    3. '[' → logprob: -10.500349998474121
    4. '][' → logprob: -11.500349998474121
    5. '```' → logprob: -11.500349998474121
    6. ' [' → logprob: -11.625349998474121
    7. '[
' → logprob: -12.000349998474121
    8. '1' → logprob: -12.375349998474121
    9. '
' → logprob: -12.625349998474121
    10. '`' → logprob: -12.750349998474121

Token 1423: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07090547680854797
    2. '+' → logprob: -2.6959054470062256
    3. ' +' → logprob: -8.070905685424805
    4. ']' → logprob: -8.070905685424805
    5. '   ' → logprob: -8.820905685424805
    6. '1' → logprob: -9.695905685424805
    7. ' ][' → logprob: -9.945905685424805
    8. ' ' → logprob: -10.820905685424805
    9. '       ' → logprob: -11.195905685424805
    10. ''][' → logprob: -11.445905685424805

Token 1424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04305148497223854
    2. 'r' → logprob: -3.7930514812469482
    3. '+' → logprob: -4.168051719665527
    4. '][' → logprob: -5.543051719665527
    5. '```' → logprob: -9.543051719665527
    6. ''][' → logprob: -10.293051719665527
    7. ']' → logprob: -10.418051719665527
    8. '   ' → logprob: -11.043051719665527
    9. ' ' → logprob: -11.918051719665527
    10. '`' → logprob: -11.918051719665527

Token 1425: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007856834563426673
    2. ']' → logprob: -7.250785827636719
    3. '   ' → logprob: -10.500785827636719
    4. '[r' → logprob: -12.000785827636719
    5. ' ][' → logprob: -12.125785827636719
    6. '```' → logprob: -12.125785827636719
    7. ']
' → logprob: -12.250785827636719
    8. '][]' → logprob: -12.375785827636719
    9. ''][' → logprob: -12.875785827636719
    10. 'r' → logprob: -13.000785827636719

Token 1426: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3425219549390022e-05
    2. '][' → logprob: -12.12501335144043
    3. '```' → logprob: -13.00001335144043
    4. '
' → logprob: -13.50001335144043
    5. ']' → logprob: -13.62501335144043
    6. ' r' → logprob: -13.75001335144043
    7. '   ' → logprob: -14.00001335144043
    8. '[r' → logprob: -15.00001335144043
    9. '_r' → logprob: -15.37501335144043
    10. '`' → logprob: -15.75001335144043

Token 1427: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0850897878408432
    2. '][' → logprob: -2.710089683532715
    3. ']' → logprob: -5.085089683532715
    4. '2' → logprob: -5.085089683532715
    5. '```' → logprob: -6.460089683532715
    6. '+' → logprob: -7.710089683532715
    7. 'r' → logprob: -8.960089683532715
    8. '``' → logprob: -9.085089683532715
    9. '   ' → logprob: -9.835089683532715
    10. '][]' → logprob: -9.960089683532715

Token 1428: ']:
' (ID: 22152)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3887988030910492
    2. ']' → logprob: -1.1387988328933716
    3. '[r' → logprob: -7.888798713684082
    4. '```' → logprob: -7.888798713684082
    5. '       ' → logprob: -8.013798713684082
    6. ']
' → logprob: -8.263798713684082
    7. '][]' → logprob: -8.763798713684082
    8. '   ' → logprob: -9.513798713684082
    9. ']+' → logprob: -9.638798713684082
    10. '[c' → logprob: -9.763798713684082

Token 1429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9716702699661255
    2. '           ' → logprob: -0.9716702699661255
    3. '               ' → logprob: -2.596670150756836
    4. '```' → logprob: -3.596670150756836
    5. ' +' → logprob: -3.721670150756836
    6. '                   ' → logprob: -4.096670150756836
    7. ' for' → logprob: -4.221670150756836
    8. '`' → logprob: -4.346670150756836
    9. ' =' → logprob: -4.346670150756836
    10. '                       ' → logprob: -4.471670150756836

Token 1430: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4344615936279297
    2. ' =' → logprob: -1.4344615936279297
    3. '           ' → logprob: -1.6844615936279297
    4. ' +' → logprob: -3.0594615936279297
    5. '               ' → logprob: -3.1844615936279297
    6. ':
' → logprob: -3.3094615936279297
    7. '```' → logprob: -3.4344615936279297
    8. ' for' → logprob: -3.5594615936279297
    9. '[' → logprob: -3.6844615936279297
    10. ':' → logprob: -3.6844615936279297

Token 1431: ' At' (ID: 3604)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4857532978057861
    2. ' (' → logprob: -1.4857532978057861
    3. ' for' → logprob: -2.110753297805786
    4. ' #' → logprob: -2.860753297805786
    5. '(' → logprob: -3.360753297805786
    6. '```' → logprob: -3.485753297805786
    7. '`' → logprob: -3.610753297805786
    8. 'for' → logprob: -3.735753297805786
    9. ' r' → logprob: -4.110753059387207
    10. '               ' → logprob: -4.110753059387207

Token 1432: ' column' (ID: 6000)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.545232892036438
    2. 'column' → logprob: -1.170232892036438
    3. 'least' → logprob: -3.2952327728271484
    4. ' c' → logprob: -3.7952327728271484
    5. 'each' → logprob: -3.9202327728271484
    6. ' column' → logprob: -4.170232772827148
    7. ' least' → logprob: -5.420232772827148
    8. 'current' → logprob: -5.795232772827148
    9. ' each' → logprob: -6.170232772827148
    10. 'col' → logprob: -7.045232772827148

Token 1433: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026585321873426437
    2. ' c' → logprob: -3.651585340499878
    3. '_c' → logprob: -9.276585578918457
    4. '```' → logprob: -9.526585578918457
    5. '[c' → logprob: -10.026585578918457
    6. '`' → logprob: -11.026585578918457
    7. '   ' → logprob: -11.151585578918457
    8. '_' → logprob: -11.401585578918457
    9. '
' → logprob: -11.901585578918457
    10. ' _' → logprob: -12.901585578918457

Token 1434: ',' (ID: 11)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.40477633476257324
    2. '       ' → logprob: -2.7797763347625732
    3. '[r' → logprob: -2.7797763347625732
    4. '
' → logprob: -3.1547763347625732
    5. ']' → logprob: -3.4047763347625732
    6. '```' → logprob: -3.6547763347625732
    7. '[' → logprob: -3.7797763347625732
    8. ':' → logprob: -4.029776573181152
    9. ',' → logprob: -4.404776573181152
    10. '#' → logprob: -4.529776573181152

Token 1435: ' must' (ID: 2804)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.8977695107460022
    2. 'r' → logprob: -1.1477694511413574
    3. ' for' → logprob: -1.8977694511413574
    4. 'for' → logprob: -3.5227694511413574
    5. '[r' → logprob: -4.272769451141357
    6. '#' → logprob: -4.272769451141357
    7. ' continue' → logprob: -4.772769451141357
    8. ' calculate' → logprob: -4.772769451141357
    9. ' we' → logprob: -4.897769451141357
    10. '[' → logprob: -5.272769451141357

Token 1436: ' visit' (ID: 4030)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.15289615094661713
    2. 'handle' → logprob: -3.0278961658477783
    3. 'cover' → logprob: -3.1528961658477783
    4. ' visit' → logprob: -3.2778961658477783
    5. ' cover' → logprob: -5.402895927429199
    6. ' handle' → logprob: -6.277895927429199
    7. 'stop' → logprob: -6.402895927429199
    8. 'move' → logprob: -7.402895927429199
    9. 'have' → logprob: -7.527895927429199
    10. '   ' → logprob: -7.652895927429199

Token 1437: ' all' (ID: 722)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06782253831624985
    2. 'all' → logprob: -3.3178224563598633
    3. '[r' → logprob: -3.6928224563598633
    4. ' all' → logprob: -6.942822456359863
    5. 'rows' → logprob: -7.317822456359863
    6. '[c' → logprob: -7.692822456359863
    7. '`' → logprob: -7.817822456359863
    8. 'required' → logprob: -8.192822456359863
    9. 'c' → logprob: -8.192822456359863
    10. '```' → logprob: -8.192822456359863

Token 1438: ' book' (ID: 2392)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1288079172372818
    2. 'rows' → logprob: -2.37880802154541
    3. '_r' → logprob: -5.00380802154541
    4. '[r' → logprob: -5.12880802154541
    5. 'required' → logprob: -5.37880802154541
    6. '_rows' → logprob: -5.62880802154541
    7. '```' → logprob: -6.50380802154541
    8. 'books' → logprob: -7.00380802154541
    9. ' rows' → logprob: -7.37880802154541
    10. '_books' → logprob: -7.50380802154541

Token 1439: ' rows' (ID: 13585)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06673385947942734
    2. 'rows' → logprob: -3.6917338371276855
    3. '_rows' → logprob: -4.5667338371276855
    4. '       ' → logprob: -5.0667338371276855
    5. '][' → logprob: -5.3167338371276855
    6. '```' → logprob: -5.6917338371276855
    7. ']' → logprob: -6.0667338371276855
    8. '_s' → logprob: -6.3167338371276855
    9. '   ' → logprob: -6.3167338371276855
    10. 'r' → logprob: -6.8167338371276855

Token 1440: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1922883987426758
    2. '       ' → logprob: -1.3172883987426758
    3. '[c' → logprob: -1.6922883987426758
    4. '][' → logprob: -2.442288398742676
    5. '[r' → logprob: -3.192288398742676
    6. ']' → logprob: -3.442288398742676
    7. ':' → logprob: -4.192288398742676
    8. '   ' → logprob: -4.192288398742676
    9. '```' → logprob: -4.567288398742676
    10. '[
' → logprob: -4.692288398742676

Token 1441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43235722184181213
    2. '```' → logprob: -2.6823573112487793
    3. '           ' → logprob: -3.0573573112487793
    4. 'r' → logprob: -3.0573573112487793
    5. '[' → logprob: -3.5573573112487793
    6. ' for' → logprob: -4.057357311248779
    7. '[r' → logprob: -4.057357311248779
    8. ',' → logprob: -4.057357311248779
    9. ' (' → logprob: -4.682357311248779
    10. '               ' → logprob: -4.807357311248779

Token 1442: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4860367476940155
    2. '#' (adapté à ' #') → logprob: -2.986036777496338
    3. '           ' → logprob: -3.111036777496338
    4. 'r' → logprob: -3.361036777496338
    5. ',' → logprob: -3.486036777496338
    6. ' +' → logprob: -3.486036777496338
    7. ' (' → logprob: -3.611036777496338
    8. '[' → logprob: -3.986036777496338
    9. ' for' → logprob: -3.986036777496338
    10. ' r' → logprob: -4.236036777496338

Token 1443: ' -' (ID: 533)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.518692135810852
    2. '       ' → logprob: -1.518692135810852
    3. ' r' → logprob: -2.5186920166015625
    4. '#' → logprob: -2.6436920166015625
    5. ' (' → logprob: -2.8936920166015625
    6. ' #' → logprob: -3.0186920166015625
    7. '```' → logprob: -3.0186920166015625
    8. '[' → logprob: -3.3936920166015625
    9. '`' → logprob: -3.5186920166015625
    10. '[r' → logprob: -3.6436920166015625

Token 1444: ' Cost' (ID: 18328)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1963769495487213
    2. ' r' → logprob: -2.3213770389556885
    3. 'rows' → logprob: -3.5713770389556885
    4. ' rows' → logprob: -4.821376800537109
    5. '`' → logprob: -5.946376800537109
    6. 'len' → logprob: -6.196376800537109
    7. 'row' → logprob: -6.321376800537109
    8. '
' → logprob: -6.321376800537109
    9. ''' → logprob: -6.446376800537109
    10. '       ' → logprob: -6.571376800537109

Token 1445: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15976954996585846
    2. '=' → logprob: -2.4097695350646973
    3. 'from' → logprob: -4.284769535064697
    4. ' +' → logprob: -4.784769535064697
    5. '`' → logprob: -4.909769535064697
    6. '1' → logprob: -5.284769535064697
    7. ' +=' → logprob: -5.534769535064697
    8. ' from' → logprob: -5.784769535064697
    9. '+' → logprob: -6.159769535064697
    10. '[r' → logprob: -6.159769535064697

Token 1446: ' vertically' (ID: 94774)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.18469054996967316
    2. 'cover' → logprob: -2.684690475463867
    3. 'move' → logprob: -2.684690475463867
    4. 'go' → logprob: -4.184690475463867
    5. ' visit' → logprob: -5.684690475463867
    6. ' move' → logprob: -6.059690475463867
    7. '
' → logprob: -6.309690475463867
    8. 'vertical' → logprob: -6.559690475463867
    9. 'handle' → logprob: -6.559690475463867
    10. ' cover' → logprob: -6.559690475463867

Token 1447: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.03279007226228714
    2. ' move' → logprob: -3.532790184020996
    3. 'r' → logprob: -6.657790184020996
    4. '_move' → logprob: -6.657790184020996
    5. '   ' → logprob: -8.907790184020996
    6. ' ' → logprob: -9.407790184020996
    7. 'go' → logprob: -9.907790184020996
    8. ' r' → logprob: -10.282790184020996
    9. '       ' → logprob: -10.907790184020996
    10. '[r' → logprob: -11.032790184020996

Token 1448: ' from' (ID: 591)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.17993474006652832
    2. '[r' → logprob: -2.3049347400665283
    3. 'from' → logprob: -2.9299347400665283
    4. '   ' → logprob: -6.304934501647949
    5. 'up' → logprob: -6.429934501647949
    6. '       ' → logprob: -6.804934501647949
    7. '           ' → logprob: -7.054934501647949
    8. '+' → logprob: -7.179934501647949
    9. ' from' → logprob: -7.179934501647949
    10. 'down' → logprob: -7.429934501647949

Token 1449: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008648726157844067
    2. ' r' → logprob: -4.883648872375488
    3. '```' → logprob: -7.633648872375488
    4. '`' → logprob: -8.758648872375488
    5. 'previous' → logprob: -9.758648872375488
    6. '   ' → logprob: -9.883648872375488
    7. 'the' → logprob: -10.133648872375488
    8. 'current' → logprob: -10.133648872375488
    9. ' the' → logprob: -10.383648872375488
    10. ' previous' → logprob: -10.383648872375488

Token 1450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037478472222574055
    2. '```' → logprob: -9.625374794006348
    3. '`' → logprob: -10.125374794006348
    4. ',' → logprob: -10.125374794006348
    5. '2' → logprob: -10.250374794006348
    6. ']' → logprob: -11.000374794006348
    7. '``' → logprob: -11.000374794006348
    8. '
' → logprob: -11.000374794006348
    9. 'o' → logprob: -11.125374794006348
    10. 'e' → logprob: -11.250374794006348

Token 1451: ' to' (ID: 316)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0246268510818481
    2. ' to' → logprob: -1.0246268510818481
    3. 'to' → logprob: -1.5246268510818481
    4. ' +' → logprob: -3.8996267318725586
    5. 'down' → logprob: -5.024626731872559
    6. '```' → logprob: -5.024626731872559
    7. 'up' → logprob: -5.149626731872559
    8. '`' → logprob: -5.524626731872559
    9. 'r' → logprob: -5.899626731872559
    10. '
' → logprob: -6.024626731872559

Token 1452: ' cover' (ID: 4321)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7227240204811096
    2. 'r' → logprob: -0.8477240204811096
    3. 'the' → logprob: -2.972723960876465
    4. 'rows' → logprob: -4.347723960876465
    5. ' min' → logprob: -5.097723960876465
    6. 'all' → logprob: -5.847723960876465
    7. 'any' → logprob: -6.097723960876465
    8. 'each' → logprob: -6.222723960876465
    9. 'lowest' → logprob: -6.472723960876465
    10. ' the' → logprob: -6.847723960876465

Token 1453: ' all' (ID: 722)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01827121526002884
    2. 'all' → logprob: -4.268271446228027
    3. 'the' → logprob: -6.768271446228027
    4. 'rows' → logprob: -7.018271446228027
    5. ' all' → logprob: -7.643271446228027
    6. ' r' → logprob: -7.768271446228027
    7. '   ' → logprob: -8.518271446228027
    8. 'row' → logprob: -8.768271446228027
    9. '           ' → logprob: -9.393271446228027
    10. 'each' → logprob: -9.518271446228027

Token 1454: ' book' (ID: 2392)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.029132040217518806
    2. 'rows' → logprob: -4.154131889343262
    3. '```' → logprob: -5.779131889343262
    4. '[r' → logprob: -6.279131889343262
    5. '_r' → logprob: -6.404131889343262
    6. '   ' → logprob: -6.404131889343262
    7. '_rows' → logprob: -7.279131889343262
    8. ' r' → logprob: -7.654131889343262
    9. ']' → logprob: -7.779131889343262
    10. '_' → logprob: -7.904131889343262

Token 1455: ' rows' (ID: 13585)
  Prédit: '_rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.1437385529279709
    2. 's' → logprob: -2.2687385082244873
    3. 'rows' → logprob: -4.018738746643066
    4. '[' → logprob: -5.768738746643066
    5. '_s' → logprob: -6.268738746643066
    6. '_r' → logprob: -6.393738746643066
    7. ']' → logprob: -7.018738746643066
    8. '   ' → logprob: -7.143738746643066
    9. '`' → logprob: -7.643738746643066
    10. 'r' → logprob: -7.768738746643066

Token 1456: ' at' (ID: 540)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5924411416053772
    2. '[c' → logprob: -2.4674410820007324
    3. '   ' → logprob: -2.7174410820007324
    4. '       ' → logprob: -2.8424410820007324
    5. '[r' → logprob: -2.8424410820007324
    6. ']' → logprob: -3.2174410820007324
    7. '```' → logprob: -3.2174410820007324
    8. '[
' → logprob: -3.4674410820007324
    9. '][' → logprob: -4.092441082000732
    10. ':' → logprob: -4.217441082000732

Token 1457: ' col' (ID: 996)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.013577342964708805
    2. ' c' → logprob: -5.013577461242676
    3. '```' → logprob: -5.263577461242676
    4. 'column' → logprob: -7.388577461242676
    5. 'col' → logprob: -8.138577461242676
    6. 'r' → logprob: -8.138577461242676
    7. ',' → logprob: -9.388577461242676
    8. ' column' → logprob: -9.638577461242676
    9. '``' → logprob: -9.638577461242676
    10. 'current' → logprob: -10.263577461242676

Token 1458: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8841832280158997
    2. '+' → logprob: -2.009183168411255
    3. ' +' → logprob: -2.384183168411255
    4. '][' → logprob: -2.384183168411255
    5. ']' → logprob: -2.759183168411255
    6. '`' → logprob: -2.884183168411255
    7. '```' → logprob: -3.259183168411255
    8. ',' → logprob: -3.759183168411255
    9. ' c' → logprob: -4.009183406829834
    10. 'r' → logprob: -4.509183406829834

Token 1459: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5182528495788574
    2. ']' → logprob: -2.1432528495788574
    3. '```' → logprob: -2.2682528495788574
    4. '[c' → logprob: -2.3932528495788574
    5. '[r' → logprob: -2.3932528495788574
    6. '][' → logprob: -2.6432528495788574
    7. '   ' → logprob: -2.7682528495788574
    8. '[
' → logprob: -3.1432528495788574
    9. '
' → logprob: -3.3932528495788574
    10. '       ' → logprob: -3.5182528495788574

Token 1460: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4945812225341797
    2. 'return' → logprob: -1.2445812225341797
    3. ' end' → logprob: -3.6195812225341797
    4. 'r' → logprob: -3.8695812225341797
    5. 'then' → logprob: -3.9945812225341797
    6. ' return' → logprob: -4.11958122253418
    7. 'go' → logprob: -5.36958122253418
    8. 'visit' → logprob: -5.49458122253418
    9. ' then' → logprob: -5.61958122253418
    10. 'finally' → logprob: -6.61958122253418

Token 1461: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6138829588890076
    2. '[r' → logprob: -1.3638830184936523
    3. '=' → logprob: -2.7388830184936523
    4. 'r' → logprob: -3.1138830184936523
    5. 'up' → logprob: -3.8638830184936523
    6. '=r' → logprob: -4.613883018493652
    7. '`' → logprob: -4.738883018493652
    8. '_at' → logprob: -4.988883018493652
    9. '```' → logprob: -4.988883018493652
    10. '       ' → logprob: -5.363883018493652

Token 1462: ' temp' (ID: 5484)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004042306449264288
    2. 'row' → logprob: -6.254042148590088
    3. ' r' → logprob: -6.504042148590088
    4. '```' → logprob: -7.754042148590088
    5. ' row' → logprob: -9.379042625427246
    6. 'the' → logprob: -10.754042625427246
    7. '`' → logprob: -11.254042625427246
    8. 'position' → logprob: -11.504042625427246
    9. '
' → logprob: -11.504042625427246
    10. 'any' → logprob: -11.629042625427246

Token 1463: ' row' (ID: 5225)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21621763706207275
    2. 'row' → logprob: -2.841217517852783
    3. '_row' → logprob: -2.966217517852783
    4. ' r' → logprob: -3.466217517852783
    5. '   ' → logprob: -4.341217517852783
    6. '_r' → logprob: -4.466217517852783
    7. ' row' → logprob: -4.716217517852783
    8. '       ' → logprob: -5.091217517852783
    9. '[r' → logprob: -5.841217517852783
    10. '[' → logprob: -6.716217517852783

Token 1464: ' r' (ID: 428)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.6439625024795532
    2. '2' → logprob: -1.7689625024795532
    3. ' =' → logprob: -2.2689623832702637
    4. '_' → logprob: -2.3939623832702637
    5. '```' → logprob: -2.5189623832702637
    6. '1' → logprob: -2.6439623832702637
    7. '+' → logprob: -3.2689623832702637
    8. '[c' → logprob: -3.6439623832702637
    9. ')' → logprob: -3.7689623832702637
    10. ' +' → logprob: -3.8939623832702637

Token 1465: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3092251718044281
    2. '2' → logprob: -1.4342252016067505
    3. ']' → logprob: -5.184225082397461
    4. 'ow' → logprob: -5.434225082397461
    5. '```' → logprob: -5.559225082397461
    6. 'ight' → logprob: -5.809225082397461
    7. '[' → logprob: -6.559225082397461
    8. '   ' → logprob: -6.809225082397461
    9. '][' → logprob: -6.934225082397461
    10. '_' → logprob: -6.934225082397461

Token 1466: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2470496892929077
    2. ']' → logprob: -1.3720496892929077
    3. '       ' → logprob: -2.9970498085021973
    4. '[' → logprob: -2.9970498085021973
    5. '_' → logprob: -3.1220498085021973
    6. '][' → logprob: -3.3720498085021973
    7. ' +' → logprob: -3.4970498085021973
    8. '[r' → logprob: -3.4970498085021973
    9. '   ' → logprob: -3.6220498085021973
    10. '2' → logprob: -3.6220498085021973

Token 1467: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7239894866943359
    2. '       ' → logprob: -2.098989486694336
    3. ' +' → logprob: -2.598989486694336
    4. '+' → logprob: -3.473989486694336
    5. '[r' → logprob: -3.598989486694336
    6. '`' → logprob: -3.598989486694336
    7. '][' → logprob: -3.848989486694336
    8. ' for' → logprob: -3.973989486694336
    9. '
' → logprob: -3.973989486694336
    10. ',' → logprob: -3.973989486694336

Token 1468: ' #' (ID: 1069)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8804376125335693
    2. '+' → logprob: -2.0054376125335693
    3. '       ' → logprob: -2.7554376125335693
    4. ',' → logprob: -3.0054376125335693
    5. '[r' → logprob: -3.1304376125335693
    6. '#' (adapté à ' #') → logprob: -3.2554376125335693
    7. '[' → logprob: -3.3804376125335693
    8. '```' → logprob: -3.6304376125335693
    9. '=' → logprob: -3.8804376125335693
    10. 'r' → logprob: -4.255437850952148

Token 1469: '  ' (ID: 256)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4376709461212158
    2. '```' → logprob: -1.8126709461212158
    3. '[r' → logprob: -2.062670946121216
    4. '[' → logprob: -2.562670946121216
    5. '`' → logprob: -3.062670946121216
    6. '[
' → logprob: -3.187670946121216
    7. ',' → logprob: -3.312670946121216
    8. ''' → logprob: -3.312670946121216
    9. '_' → logprob: -3.687670946121216
    10. 'r' → logprob: -3.937670946121216

Token 1470: ' plus' (ID: 2932)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4815051555633545
    2. '=' → logprob: -2.2315051555633545
    3. '[r' → logprob: -2.8565051555633545
    4. ':' → logprob: -2.9815051555633545
    5. '#' → logprob: -2.9815051555633545
    6. '[' → logprob: -3.2315051555633545
    7. ',' → logprob: -3.2315051555633545
    8. ' +' → logprob: -3.3565051555633545
    9. '\' → logprob: -3.3565051555633545
    10. '[
' → logprob: -3.3565051555633545

Token 1471: ' cost' (ID: 3097)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3843383193016052
    2. ' abs' → logprob: -1.75933837890625
    3. '1' → logprob: -3.13433837890625
    4. '(abs' → logprob: -3.88433837890625
    5. ' (' → logprob: -4.38433837890625
    6. '(' → logprob: -4.75933837890625
    7. 'cost' → logprob: -4.75933837890625
    8. '2' → logprob: -5.00933837890625
    9. 'dp' → logprob: -5.13433837890625
    10. 'the' → logprob: -5.38433837890625

Token 1472: ' of' (ID: 328)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24096964299678802
    2. 'to' → logprob: -2.115969657897949
    3. ' of' → logprob: -2.865969657897949
    4. '=' → logprob: -4.865969657897949
    5. '   ' → logprob: -4.865969657897949
    6. ' =' → logprob: -5.490969657897949
    7. ' for' → logprob: -5.865969657897949
    8. 'from' → logprob: -6.115969657897949
    9. 'of' → logprob: -6.115969657897949
    10. 'r' → logprob: -6.490969657897949

Token 1473: ' putting' (ID: 16019)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.4656514525413513
    2. 'vertical' → logprob: -1.215651512145996
    3. 'cover' → logprob: -3.965651512145996
    4. 'put' → logprob: -4.590651512145996
    5. 'vert' → logprob: -4.590651512145996
    6. ' vertical' → logprob: -4.715651512145996
    7. ' visiting' → logprob: -4.965651512145996
    8. 'horizontal' → logprob: -5.590651512145996
    9. 'handling' → logprob: -5.965651512145996
    10. 'going' → logprob: -6.090651512145996

Token 1474: ' books' (ID: 7187)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2351652383804321
    2. 'the' → logprob: -1.6101652383804321
    3. 'books' → logprob: -1.8601652383804321
    4. 'all' → logprob: -2.3601651191711426
    5. ' all' → logprob: -2.8601651191711426
    6. ' the' → logprob: -3.1101651191711426
    7. ' r' → logprob: -3.1101651191711426
    8. '`' → logprob: -3.7351651191711426
    9. ' books' → logprob: -3.9851651191711426
    10. '   ' → logprob: -4.610165119171143

Token 1475: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6684277057647705
    2. ']' → logprob: -2.1684277057647705
    3. '][' → logprob: -2.2934277057647705
    4. '[c' → logprob: -3.1684277057647705
    5. '[' → logprob: -3.5434277057647705
    6. '```' → logprob: -3.6684277057647705
    7. '   ' → logprob: -3.9184277057647705
    8. '[r' → logprob: -4.168427467346191
    9. '
' → logprob: -4.293427467346191
    10. ')' → logprob: -4.418427467346191

Token 1476: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23965618014335632
    2. 'r' → logprob: -2.8646562099456787
    3. 'len' → logprob: -3.6146562099456787
    4. ')' → logprob: -3.8646562099456787
    5. '0' → logprob: -3.9896562099456787
    6. 'rows' → logprob: -4.3646559715271
    7. '=' → logprob: -4.4896559715271
    8. '+' → logprob: -4.7396559715271
    9. 'all' → logprob: -4.7396559715271
    10. 'books' → logprob: -4.7396559715271

Token 1477: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00011677479778882116
    2. ' .' → logprob: -9.875116348266602
    3. ')' → logprob: -10.125116348266602
    4. '
' → logprob: -12.125116348266602
    5. '+' → logprob: -12.875116348266602
    6. '               ' → logprob: -13.000116348266602
    7. ' +' → logprob: -13.250116348266602
    8. '#' → logprob: -13.250116348266602
    9. '   ' → logprob: -13.750116348266602
    10. '           ' → logprob: -13.875116348266602

Token 1478: '5' (ID: 20)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024855269584804773
    2. '5' → logprob: -6.002485752105713
    3. ' .' → logprob: -12.627485275268555
    4. ')' → logprob: -13.252485275268555
    5. '0' → logprob: -13.502485275268555
    6. '#' → logprob: -13.752485275268555
    7. ' ' → logprob: -14.252485275268555
    8. '```' → logprob: -15.252485275268555
    9. ',' → logprob: -15.377485275268555
    10. '+' → logprob: -15.627485275268555

Token 1479: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7496302127838135
    2. ' *' → logprob: -1.4996302127838135
    3. '*' → logprob: -1.7496302127838135
    4. '+' → logprob: -2.2496302127838135
    5. ')' → logprob: -3.8746302127838135
    6. ')+' → logprob: -6.374629974365234
    7. ' )' → logprob: -6.999629974365234
    8. '),' → logprob: -7.374629974365234
    9. '*(' → logprob: -7.999629974365234
    10. ')*' → logprob: -9.249629974365234

Token 1480: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018358182162046432
    2. '2' → logprob: -4.26835823059082
    3. ' (' → logprob: -5.64335823059082
    4. '(number' → logprob: -8.64335823059082
    5. '((' → logprob: -9.14335823059082
    6. 'number' → logprob: -9.26835823059082
    7. '(len' → logprob: -10.26835823059082
    8. '*' → logprob: -10.64335823059082
    9. '   ' → logprob: -10.64335823059082
    10. '*(' → logprob: -10.76835823059082

Token 1481: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16268320381641388
    2. '2' → logprob: -1.9126832485198975
    3. ' (' → logprob: -6.912683010101318
    4. '(number' → logprob: -7.412683010101318
    5. 'number' → logprob: -7.912683010101318
    6. '(len' → logprob: -8.162683486938477
    7. '((' → logprob: -10.162683486938477
    8. ' ' → logprob: -11.037683486938477
    9. 'len' → logprob: -11.162683486938477
    10. '#' → logprob: -11.287683486938477

Token 1482: ' per' (ID: 777)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11656874418258667
    2. '*' → logprob: -2.3665688037872314
    3. ')' → logprob: -4.241568565368652
    4. ' per' → logprob: -7.866568565368652
    5. ' )' → logprob: -7.991568565368652
    6. '*(' → logprob: -7.991568565368652
    7. 'per' → logprob: -8.616568565368652
    8. ' for' → logprob: -9.116568565368652
    9. '*)' → logprob: -9.241568565368652
    10. ')*' → logprob: -9.366568565368652

Token 1483: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -1.321049690246582
    2. 'row' → logprob: -1.571049690246582
    3. 's' → logprob: -1.946049690246582
    4. ' shelf' → logprob: -1.946049690246582
    5. ' row' → logprob: -2.571049690246582
    6. ' required' → logprob: -2.946049690246582
    7. ' book' → logprob: -3.196049690246582
    8. 'required' → logprob: -3.571049690246582
    9. 'r' → logprob: -4.446049690246582
    10. 'books' → logprob: -5.071049690246582

Token 1484: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6460798978805542
    2. 's' → logprob: -1.0210798978805542
    3. ')
' → logprob: -3.6460800170898438
    4. 'rows' → logprob: -4.396080017089844
    5. ']' → logprob: -4.521080017089844
    6. '_rows' → logprob: -4.646080017089844
    7. '[s' → logprob: -5.271080017089844
    8. '       ' → logprob: -5.396080017089844
    9. '])' → logprob: -5.646080017089844
    10. '")' → logprob: -5.771080017089844

Token 1485: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.409454584121704
    2. '[' → logprob: -1.909454584121704
    3. '[
' → logprob: -1.909454584121704
    4. ']' → logprob: -2.034454584121704
    5. '   ' → logprob: -2.034454584121704
    6. '][' → logprob: -3.284454584121704
    7. ' =' → logprob: -3.534454584121704
    8. '[c' → logprob: -3.534454584121704
    9. '```' → logprob: -4.284454345703125
    10. '[r' → logprob: -4.659454345703125

Token 1486: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.30210861563682556
    2. '2' → logprob: -2.1771085262298584
    3. '(len' → logprob: -2.4271085262298584
    4. '(' → logprob: -3.4271085262298584
    5. ' len' → logprob: -4.4271087646484375
    6. ' (' → logprob: -5.6771087646484375
    7. 'rows' → logprob: -5.8021087646484375
    8. ' ' → logprob: -6.5521087646484375
    9. '(s' → logprob: -7.4271087646484375
    10. 'books' → logprob: -7.4271087646484375

Token 1487: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07958459109067917
    2. 'len' → logprob: -2.7045845985412598
    3. '(' → logprob: -5.32958459854126
    4. '(len' → logprob: -5.95458459854126
    5. ' ' → logprob: -6.95458459854126
    6. ' len' → logprob: -7.70458459854126
    7. 'books' → logprob: -8.954584121704102
    8. ' (' → logprob: -8.954584121704102
    9. '4' → logprob: -9.204584121704102
    10. '0' → logprob: -9.704584121704102

Token 1488: ' per' (ID: 777)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33034271001815796
    2. '][' → logprob: -2.4553427696228027
    3. '+' → logprob: -2.7053427696228027
    4. ')' → logprob: -3.8303427696228027
    5. '[
' → logprob: -4.080342769622803
    6. ' +' → logprob: -4.330342769622803
    7. '[' → logprob: -4.330342769622803
    8. ' ]' → logprob: -4.705342769622803
    9. '[r' → logprob: -4.705342769622803
    10. '   ' → logprob: -4.830342769622803

Token 1489: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -1.1020374298095703
    2. ' book' → logprob: -1.2270374298095703
    3. ' row' → logprob: -1.9770374298095703
    4. 'row' → logprob: -2.2270374298095703
    5. ' shelf' → logprob: -3.1020374298095703
    6. 's' → logprob: -3.2270374298095703
    7. ' required' → logprob: -4.10203742980957
    8. 'r' → logprob: -4.60203742980957
    9. 'required' → logprob: -5.47703742980957
    10. ' r' → logprob: -5.97703742980957

Token 1490: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.917057991027832
    2. ']' → logprob: -1.667057991027832
    3. '][' → logprob: -2.542057991027832
    4. '   ' → logprob: -2.917057991027832
    5. '
' → logprob: -3.042057991027832
    6. '[' → logprob: -3.167057991027832
    7. '[
' → logprob: -3.542057991027832
    8. '[r' → logprob: -3.917057991027832
    9. '[c' → logprob: -4.167057991027832
    10. ' =' → logprob: -4.417057991027832

Token 1491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18233785033226013
    2. '   ' → logprob: -2.807337760925293
    3. '           ' → logprob: -4.182337760925293
    4. ' +' → logprob: -4.432337760925293
    5. ')' → logprob: -4.557337760925293
    6. '
' → logprob: -4.557337760925293
    7. '[' → logprob: -4.932337760925293
    8. '[
' → logprob: -4.932337760925293
    9. '```' → logprob: -5.057337760925293
    10. '+' → logprob: -5.307337760925293

Token 1492: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0507601723074913
    2. '           ' → logprob: -4.175760269165039
    3. '#' → logprob: -4.300760269165039
    4. '\' → logprob: -5.425760269165039
    5. '   ' → logprob: -6.300760269165039
    6. ' +' → logprob: -6.300760269165039
    7. '(' → logprob: -6.550760269165039
    8. '[' → logprob: -6.675760269165039
    9. ',' → logprob: -6.675760269165039
    10. '        ' → logprob: -6.925760269165039

Token 1493: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.642446756362915
    2. '       ' → logprob: -0.767446756362915
    3. '           ' → logprob: -5.642446517944336
    4. ' +' → logprob: -7.267446517944336
    5. '   ' → logprob: -7.517446517944336
    6. ',' → logprob: -7.517446517944336
    7. '#
' → logprob: -7.517446517944336
    8. ' #' → logprob: -7.642446517944336
    9. '_' → logprob: -7.892446517944336
    10. '\' → logprob: -8.142446517944336

Token 1494: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03944414108991623
    2. '           ' → logprob: -3.7894442081451416
    3. '#' (adapté à ' #') → logprob: -5.5394439697265625
    4. '   ' → logprob: -6.5394439697265625
    5. ',' → logprob: -6.6644439697265625
    6. '        ' → logprob: -6.7894439697265625
    7. '               ' → logprob: -6.7894439697265625
    8. ' +' → logprob: -7.0394439697265625
    9. ')' → logprob: -7.6644439697265625
    10. '```' → logprob: -7.6644439697265625

Token 1495: ' vertical' (ID: 17679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15709446370601654
    2. '           ' → logprob: -3.9070944786071777
    3. '"' → logprob: -4.157094478607178
    4. '\' → logprob: -4.157094478607178
    5. '   ' → logprob: -4.657094478607178
    6. ',' → logprob: -4.782094478607178
    7. 'r' → logprob: -4.907094478607178
    8. '\n' → logprob: -4.907094478607178
    9. '#' → logprob: -5.032094478607178
    10. ' for' → logprob: -5.407094478607178

Token 1496: ' path' (ID: 3104)
  Prédit: 'movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'movement' → logprob: -0.25645875930786133
    2. '_moves' → logprob: -2.8814587593078613
    3. '_move' → logprob: -3.1314587593078613
    4. 'move' → logprob: -3.3814587593078613
    5. 'moves' → logprob: -3.3814587593078613
    6. ' movement' → logprob: -3.6314587593078613
    7. 'distance' → logprob: -5.006458759307861
    8. '_m' → logprob: -5.381458759307861
    9. 'cost' → logprob: -5.381458759307861
    10. 'mov' → logprob: -6.381458759307861

Token 1497: ' to' (ID: 316)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.0013624429702759
    2. 'from' → logprob: -1.8763624429702759
    3. ' from' → logprob: -2.0013623237609863
    4. 's' → logprob: -2.8763623237609863
    5. '(r' → logprob: -2.8763623237609863
    6. ' =' → logprob: -3.1263623237609863
    7. '[' → logprob: -3.8763623237609863
    8. 'r' → logprob: -3.8763623237609863
    9. ' (' → logprob: -4.001362323760986
    10. ' between' → logprob: -4.376362323760986

Token 1498: ' cover' (ID: 4321)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.3542705774307251
    2. ' cover' → logprob: -1.354270577430725
    3. 'visit' → logprob: -3.7292704582214355
    4. 'r' → logprob: -4.9792704582214355
    5. '_cover' → logprob: -5.9792704582214355
    6. 'rows' → logprob: -6.4792704582214355
    7. ' visit' → logprob: -7.1042704582214355
    8. 'vertical' → logprob: -7.3542704582214355
    9. 'all' → logprob: -8.104270935058594
    10. ' rows' → logprob: -8.354270935058594

Token 1499: ' rows' (ID: 13585)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.010408878326416
    2. 'from' → logprob: -1.260408878326416
    3. 's' → logprob: -1.760408878326416
    4. '[r' → logprob: -2.260408878326416
    5. ' from' → logprob: -4.010408878326416
    6. ' r' → logprob: -4.010408878326416
    7. '(r' → logprob: -4.510408878326416
    8. ' ' → logprob: -5.510408878326416
    9. '   ' → logprob: -6.010408878326416
    10. '[' → logprob: -6.010408878326416

Token 1500: ' with' (ID: 483)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.5127543807029724
    2. '[' → logprob: -2.887754440307617
    3. ' =' → logprob: -3.012754440307617
    4. '```' → logprob: -3.137754440307617
    5. '[r' → logprob: -3.262754440307617
    6. '[
' → logprob: -3.387754440307617
    7. '   ' → logprob: -3.387754440307617
    8. '=' → logprob: -3.762754440307617
    9. '
' → logprob: -3.762754440307617
    10. '       ' → logprob: -4.137754440307617

Token 1501: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.006438249256461859
    2. 'book' → logprob: -5.506438255310059
    3. 'Y' → logprob: -6.631438255310059
    4. ' books' → logprob: -7.131438255310059
    5. ' Y' → logprob: -10.131438255310059
    6. '```' → logprob: -10.256438255310059
    7. '
' → logprob: -10.506438255310059
    8. 'b' → logprob: -10.756438255310059
    9. 's' → logprob: -10.881438255310059
    10. '`' → logprob: -11.506438255310059

Token 1502: ' at' (ID: 540)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6412420272827148
    2. ']' → logprob: -1.8912420272827148
    3. '[c' → logprob: -1.8912420272827148
    4. '][' → logprob: -2.141242027282715
    5. '[r' → logprob: -2.391242027282715
    6. '       ' → logprob: -2.391242027282715
    7. '   ' → logprob: -3.016242027282715
    8. '```' → logprob: -3.141242027282715
    9. ',' → logprob: -3.891242027282715
    10. '[
' → logprob: -4.391242027282715

Token 1503: ' col' (ID: 996)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13164936006069183
    2. ' c' → logprob: -2.3816492557525635
    3. 'col' → logprob: -3.6316492557525635
    4. ' col' → logprob: -5.881649494171143
    5. 'column' → logprob: -7.131649494171143
    6. '```' → logprob: -7.381649494171143
    7. ' column' → logprob: -8.631649017333984
    8. 'current' → logprob: -10.381649017333984
    9. '`' → logprob: -11.506649017333984
    10. '``' → logprob: -11.756649017333984

Token 1504: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.814964771270752
    2. 'c' → logprob: -1.189964771270752
    3. '```' → logprob: -2.314964771270752
    4. '+' → logprob: -2.814964771270752
    5. ')' → logprob: -3.439964771270752
    6. ' +' → logprob: -4.189964771270752
    7. ']' → logprob: -4.689964771270752
    8. ',' → logprob: -4.939964771270752
    9. '
' → logprob: -5.439964771270752
    10. '`' → logprob: -5.564964771270752

Token 1505: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6527489423751831
    2. '   ' → logprob: -2.4027490615844727
    3. '][' → logprob: -2.6527490615844727
    4. '[' → logprob: -3.0277490615844727
    5. ']' → logprob: -3.0277490615844727
    6. '[r' → logprob: -3.6527490615844727
    7. ',' → logprob: -3.7777490615844727
    8. '
' → logprob: -3.7777490615844727
    9. ' =' → logprob: -3.9027490615844727
    10. '[c' → logprob: -4.152749061584473

Token 1506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5087268352508545
    2. ' +' → logprob: -2.3837268352508545
    3. '#' → logprob: -2.6337268352508545
    4. '           ' → logprob: -3.2587268352508545
    5. ',' → logprob: -3.5087268352508545
    6. '+' → logprob: -3.7587268352508545
    7. 'r' → logprob: -4.008727073669434
    8. ' r' → logprob: -4.633727073669434
    9. ' (' → logprob: -4.633727073669434
    10. '[
' → logprob: -4.633727073669434

Token 1507: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8072238564491272
    2. '#' → logprob: -1.9322237968444824
    3. ' +' → logprob: -2.3072237968444824
    4. '           ' → logprob: -2.9322237968444824
    5. 'r' → logprob: -3.5572237968444824
    6. ' r' → logprob: -3.8072237968444824
    7. ' (' → logprob: -4.057223796844482
    8. '"' → logprob: -4.057223796844482
    9. '+' → logprob: -4.307223796844482
    10. ',' → logprob: -4.432223796844482

Token 1508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5802884697914124
    2. '#' → logprob: -0.9552884697914124
    3. '           ' → logprob: -3.9552884101867676
    4. ',' → logprob: -5.455288410186768
    5. ' #' → logprob: -5.705288410186768
    6. ' =' → logprob: -5.830288410186768
    7. 's' → logprob: -6.205288410186768
    8. ' +' → logprob: -6.205288410186768
    9. ' (' → logprob: -6.455288410186768
    10. '=' → logprob: -6.580288410186768

Token 1509: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.34354907274246216
    2. '       ' → logprob: -1.5935490131378174
    3. ' #' → logprob: -3.8435490131378174
    4. 'r' → logprob: -4.4685492515563965
    5. '1' → logprob: -5.2185492515563965
    6. ':' → logprob: -5.4685492515563965
    7. ' (' → logprob: -5.4685492515563965
    8. '           ' → logprob: -5.5935492515563965
    9. 's' → logprob: -5.8435492515563965
    10. '[' → logprob: -5.9685492515563965

Token 1510: ' As' (ID: 1877)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6809176206588745
    2. '#' → logprob: -2.305917739868164
    3. ':
' → logprob: -3.055917739868164
    4. ':' → logprob: -3.305917739868164
    5. '```' → logprob: -3.680917739868164
    6. 'r' → logprob: -3.805917739868164
    7. ',' → logprob: -3.930917739868164
    8. '           ' → logprob: -3.930917739868164
    9. '   ' → logprob: -4.055917739868164
    10. '\' → logprob: -4.180917739868164

Token 1511: ' vertical' (ID: 17679)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.9759784936904907
    2. 's' → logprob: -1.6009784936904907
    3. '#' → logprob: -2.100978374481201
    4. ' follows' → logprob: -2.975978374481201
    5. ' at' → logprob: -3.850978374481201
    6. ' the' → logprob: -4.350978374481201
    7. 'n' → logprob: -4.350978374481201
    8. 'f' → logprob: -4.600978374481201
    9. '
' → logprob: -4.600978374481201
    10. ' s' → logprob: -4.600978374481201

Token 1512: ' movement' (ID: 12772)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.6398110389709473
    2. '_move' → logprob: -1.6398110389709473
    3. '_' → logprob: -3.1398110389709473
    4. '_moves' → logprob: -3.1398110389709473
    5. 'movement' → logprob: -3.3898110389709473
    6. '_distance' → logprob: -3.5148110389709473
    7. 'path' → logprob: -3.6398110389709473
    8. ' movement' → logprob: -3.7648110389709473
    9. '_m' → logprob: -4.639811038970947
    10. '_
' → logprob: -4.764811038970947

Token 1513: ' costs' (ID: 8959)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.8762471675872803
    2. '[' → logprob: -1.7512471675872803
    3. '(r' → logprob: -2.8762471675872803
    4. '[c' → logprob: -3.2512471675872803
    5. 's' → logprob: -3.3762471675872803
    6. '```' → logprob: -3.5012471675872803
    7. '+' → logprob: -3.5012471675872803
    8. ' is' → logprob: -3.8762471675872803
    9. '[
' → logprob: -4.001247406005859
    10. ':' → logprob: -4.126247406005859

Token 1514: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03242131695151329
    2. ' ' → logprob: -3.532421350479126
    3. '=' → logprob: -6.407421112060547
    4. ' =' → logprob: -7.032421112060547
    5. 'r' → logprob: -10.282421112060547
    6. '```' → logprob: -11.157421112060547
    7. '   ' → logprob: -11.407421112060547
    8. 's' → logprob: -11.657421112060547
    9. '+' → logprob: -11.782421112060547
    10. '
' → logprob: -12.032421112060547

Token 1515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007293514790944755
    2. ' ' → logprob: -8.37572956085205
    3. '=' → logprob: -9.37572956085205
    4. '```' → logprob: -9.37572956085205
    5. '   ' → logprob: -9.62572956085205
    6. '+' → logprob: -10.00072956085205
    7. '0' → logprob: -10.12572956085205
    8. '
' → logprob: -10.50072956085205
    9. 'r' → logprob: -10.50072956085205
    10. '`' → logprob: -10.75072956085205

Token 1516: ' per' (ID: 777)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.7207765579223633
    2. '[' → logprob: -2.0957765579223633
    3. ')' → logprob: -2.5957765579223633
    4. '   ' → logprob: -2.7207765579223633
    5. '+' → logprob: -3.2207765579223633
    6. ' ' → logprob: -3.3457765579223633
    7. '=' → logprob: -3.8457765579223633
    8. ',' → logprob: -3.8457765579223633
    9. '*' → logprob: -4.345776557922363
    10. ']' → logprob: -4.470776557922363

Token 1517: ' step' (ID: 5983)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.9098015427589417
    2. 'step' → logprob: -0.9098015427589417
    3. ')' → logprob: -2.659801483154297
    4. '+' → logprob: -3.784801483154297
    5. ' ' → logprob: -4.034801483154297
    6. '```' → logprob: -4.284801483154297
    7. ' step' → logprob: -4.409801483154297
    8. '
' → logprob: -4.534801483154297
    9. '   ' → logprob: -5.034801483154297
    10. '1' → logprob: -5.034801483154297

Token 1518: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9307824969291687
    2. '[r' → logprob: -1.0557825565338135
    3. '[' → logprob: -2.5557825565338135
    4. ']' → logprob: -3.4307825565338135
    5. '       ' → logprob: -3.8057825565338135
    6. ')' → logprob: -4.305782318115234
    7. ':' → logprob: -4.305782318115234
    8. ',' → logprob: -4.555782318115234
    9. '[
' → logprob: -4.680782318115234
    10. ' +' → logprob: -4.805782318115234

Token 1519: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6993542313575745
    2. ',' → logprob: -1.1993541717529297
    3. ')' → logprob: -3.5743541717529297
    4. ' and' → logprob: -3.6993541717529297
    5. '+' → logprob: -3.9493541717529297
    6. 'r' → logprob: -4.07435417175293
    7. ',
' → logprob: -4.57435417175293
    8. 'the' → logprob: -4.82435417175293
    9. ' #' → logprob: -4.94935417175293
    10. ' the' → logprob: -4.94935417175293

Token 1520: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3846806287765503
    2. '#' (adapté à ' #') → logprob: -1.6346806287765503
    3. ')' → logprob: -1.8846806287765503
    4. '       ' → logprob: -2.38468074798584
    5. ' r' → logprob: -2.88468074798584
    6. ',' → logprob: -3.00968074798584
    7. '
' → logprob: -3.63468074798584
    8. '+' → logprob: -3.88468074798584
    9. '   ' → logprob: -4.00968074798584
    10. ':' → logprob: -4.38468074798584

Token 1521: ' minimal' (ID: 19957)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16392774879932404
    2. '       ' → logprob: -3.7889277935028076
    3. ' #' → logprob: -4.0389275550842285
    4. 'max' → logprob: -4.0389275550842285
    5. ' min' → logprob: -4.2889275550842285
    6. 'min' → logprob: -4.2889275550842285
    7. 'r' → logprob: -4.5389275550842285
    8. ' max' → logprob: -5.0389275550842285
    9. 'from' → logprob: -5.2889275550842285
    10. '```' → logprob: -6.0389275550842285

Token 1522: ' path' (ID: 3104)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -1.2607378959655762
    2. 'cost' → logprob: -2.135737895965576
    3. '_path' → logprob: -2.385737895965576
    4. 'path' → logprob: -2.635737895965576
    5. '`' → logprob: -2.760737895965576
    6. 'distance' → logprob: -2.760737895965576
    7. '_cost' → logprob: -3.510737895965576
    8. '_' → logprob: -3.635737895965576
    9. '```' → logprob: -3.885737895965576
    10. 'up' → logprob: -4.010737895965576

Token 1523: ' covering' (ID: 24878)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.315185546875
    2. '[r' → logprob: -1.315185546875
    3. 'from' → logprob: -2.065185546875
    4. ' to' → logprob: -2.440185546875
    5. ' =' → logprob: -3.065185546875
    6. ' from' → logprob: -3.440185546875
    7. ' is' → logprob: -3.815185546875
    8. 'to' → logprob: -4.065185546875
    9. '`' → logprob: -4.065185546875
    10. '[' → logprob: -4.690185546875

Token 1524: ' rows' (ID: 13585)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6995251774787903
    2. ' all' → logprob: -1.4495251178741455
    3. 'the' → logprob: -2.0745251178741455
    4. ' the' → logprob: -2.8245251178741455
    5. 'rows' → logprob: -2.8245251178741455
    6. ' rows' → logprob: -4.949525356292725
    7. 'r' → logprob: -5.074525356292725
    8. '[' → logprob: -6.074525356292725
    9. '```' → logprob: -6.824525356292725
    10. 'from' → logprob: -7.199525356292725

Token 1525: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4481348991394043
    2. '[' → logprob: -1.6981348991394043
    3. '[r' → logprob: -2.1981348991394043
    4. 's' → logprob: -2.6981348991394043
    5. '```' → logprob: -3.0731348991394043
    6. '+' → logprob: -3.0731348991394043
    7. '   ' → logprob: -3.1981348991394043
    8. '[
' → logprob: -3.3231348991394043
    9. ']' → logprob: -3.4481348991394043
    10. '       ' → logprob: -3.4481348991394043

Token 1526: ' minimal' (ID: 19957)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03623213618993759
    2. '(max' → logprob: -4.536231994628906
    3. 'min' → logprob: -5.036231994628906
    4. ' max' → logprob: -5.036231994628906
    5. 'abs' → logprob: -5.161231994628906
    6. '1' → logprob: -6.036231994628906
    7. 'the' → logprob: -7.161231994628906
    8. '```' → logprob: -8.286231994628906
    9. '(abs' → logprob: -8.411231994628906
    10. '(min' → logprob: -8.536231994628906

Token 1527: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -1.9643064737319946
    2. 'vertical' → logprob: -2.339306354522705
    3. 'r' → logprob: -2.839306354522705
    4. ' path' → logprob: -2.964306354522705
    5. ' row' → logprob: -2.964306354522705
    6. 'row' → logprob: -3.089306354522705
    7. 'distance' → logprob: -3.089306354522705
    8. 'span' → logprob: -3.214306354522705
    9. ' up' → logprob: -3.339306354522705
    10. 'range' → logprob: -3.464306354522705

Token 1528: ' path' (ID: 3104)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.8895620703697205
    2. '_path' → logprob: -1.3895621299743652
    3. 'distance' → logprob: -1.7645621299743652
    4. '_move' → logprob: -3.5145621299743652
    5. '_step' → logprob: -3.8895621299743652
    6. ' distance' → logprob: -3.8895621299743652
    7. 'path' → logprob: -4.139562129974365
    8. '_dist' → logprob: -4.389562129974365
    9. ' path' → logprob: -4.389562129974365
    10. '_steps' → logprob: -5.014562129974365

Token 1529: ' starting' (ID: 8601)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4523027837276459
    2. '[
' → logprob: -1.9523028135299683
    3. '[c' → logprob: -2.4523026943206787
    4. ']' → logprob: -3.7023026943206787
    5. '   ' → logprob: -3.9523026943206787
    6. '[r' → logprob: -4.077302932739258
    7. '```' → logprob: -4.077302932739258
    8. '       ' → logprob: -4.327302932739258
    9. '_' → logprob: -4.702302932739258
    10. '][' → logprob: -5.077302932739258

Token 1530: ' at' (ID: 540)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6268758773803711
    2. 'at' → logprob: -1.001875877380371
    3. ' at' → logprob: -2.751875877380371
    4. ' from' → logprob: -4.376875877380371
    5. '_' → logprob: -5.501875877380371
    6. 'between' → logprob: -5.751875877380371
    7. '(r' → logprob: -6.501875877380371
    8. ')' → logprob: -6.626875877380371
    9. '```' → logprob: -6.626875877380371
    10. ',' → logprob: -6.751875877380371

Token 1531: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0028223509434610605
    2. ' r' → logprob: -6.502822399139404
    3. '```' → logprob: -7.752822399139404
    4. 'the' → logprob: -8.252821922302246
    5. 'min' → logprob: -8.502821922302246
    6. '`' → logprob: -9.252821922302246
    7. 'row' → logprob: -9.502821922302246
    8. 'current' → logprob: -10.252821922302246
    9. ' the' → logprob: -10.377821922302246
    10. 'a' → logprob: -10.877821922302246

Token 1532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5272909998893738
    2. ']' → logprob: -2.1522910594940186
    3. 'ow' → logprob: -3.2772910594940186
    4. '][' → logprob: -3.4022910594940186
    5. ')' → logprob: -3.5272910594940186
    6. '+' → logprob: -3.5272910594940186
    7. ' +' → logprob: -3.9022910594940186
    8. '_' → logprob: -4.0272908210754395
    9. '[' → logprob: -4.0272908210754395
    10. '   ' → logprob: -4.1522908210754395

Token 1533: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5698524713516235
    2. '[r' → logprob: -2.319852352142334
    3. '[
' → logprob: -2.569852352142334
    4. '[c' → logprob: -2.569852352142334
    5. '   ' → logprob: -2.944852352142334
    6. '][' → logprob: -3.569852352142334
    7. '       ' → logprob: -3.819852352142334
    8. '+' → logprob: -3.944852352142334
    9. '```' → logprob: -4.569852352142334
    10. ' +' → logprob: -4.569852352142334

Token 1534: ' visiting' (ID: 18798)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.575823187828064
    2. ' visiting' → logprob: -1.825823187828064
    3. ' finishing' → logprob: -2.8258233070373535
    4. 'going' → logprob: -2.8258233070373535
    5. ' ending' → logprob: -2.8258233070373535
    6. ' going' → logprob: -3.3258233070373535
    7. ' covering' → logprob: -4.0758233070373535
    8. 'cover' → logprob: -4.3258233070373535
    9. ' moving' → logprob: -4.7008233070373535
    10. ' stopping' → logprob: -4.9508233070373535

Token 1535: ' all' (ID: 722)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5026392340660095
    2. 'all' → logprob: -1.5026392936706543
    3. 'r' → logprob: -2.7526392936706543
    4. 'the' → logprob: -3.2526392936706543
    5. ' all' → logprob: -3.6276392936706543
    6. ' min' → logprob: -4.252639293670654
    7. 'rows' → logprob: -4.252639293670654
    8. '```' → logprob: -5.252639293670654
    9. 'max' → logprob: -6.002639293670654
    10. ' the' → logprob: -6.002639293670654

Token 1536: ' book' (ID: 2392)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3054339587688446
    2. 'rows' → logprob: -1.555433988571167
    3. ']' → logprob: -5.055433750152588
    4. '```' → logprob: -5.055433750152588
    5. '_rows' → logprob: -5.180433750152588
    6. 'required' → logprob: -5.305433750152588
    7. 'book' → logprob: -5.680433750152588
    8. '
' → logprob: -5.805433750152588
    9. '_needed' → logprob: -6.055433750152588
    10. 'needed' → logprob: -6.305433750152588

Token 1537: ' rows' (ID: 13585)
  Prédit: '_rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.11834593862295151
    2. 's' → logprob: -2.6183459758758545
    3. '_' → logprob: -4.868345737457275
    4. ']' → logprob: -4.868345737457275
    5. 'rows' → logprob: -5.118345737457275
    6. '_s' → logprob: -5.493345737457275
    7. '```' → logprob: -5.493345737457275
    8. ')' → logprob: -6.618345737457275
    9. '   ' → logprob: -6.868345737457275
    10. '
' → logprob: -7.368345737457275

Token 1538: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7755285501480103
    2. '[
' → logprob: -1.6505285501480103
    3. ']' → logprob: -2.6505284309387207
    4. '       ' → logprob: -2.9005284309387207
    5. '_' → logprob: -3.0255284309387207
    6. '```' → logprob: -3.2755284309387207
    7. '[r' → logprob: -3.4005284309387207
    8. '_
' → logprob: -4.525528430938721
    9. '[c' → logprob: -4.650528430938721
    10. '   ' → logprob: -4.650528430938721

Token 1539: ' end' (ID: 1268)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.914848804473877
    2. 'min' → logprob: -1.414848804473877
    3. 'cover' → logprob: -1.414848804473877
    4. 'visit' → logprob: -2.789848804473877
    5. 'c' → logprob: -4.664848804473877
    6. 'reach' → logprob: -4.914848804473877
    7. '
' → logprob: -5.414848804473877
    8. ' cover' → logprob: -5.539848804473877
    9. '_cover' → logprob: -5.664848804473877
    10. ' min' → logprob: -5.914848804473877

Token 1540: ' at' (ID: 540)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20148088037967682
    2. '[c' → logprob: -2.2014808654785156
    3. ']' → logprob: -4.201480865478516
    4. '[
' → logprob: -4.201480865478516
    5. '_' → logprob: -4.701480865478516
    6. '```' → logprob: -5.076480865478516
    7. '   ' → logprob: -5.326480865478516
    8. '\[' → logprob: -5.326480865478516
    9. '[r' → logprob: -6.076480865478516
    10. '       ' → logprob: -6.326480865478516

Token 1541: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002278838539496064
    2. ' r' → logprob: -7.002278804779053
    3. '```' → logprob: -7.002278804779053
    4. 'min' → logprob: -8.877279281616211
    5. 'the' → logprob: -9.127279281616211
    6. 'max' → logprob: -10.252279281616211
    7. '
' → logprob: -10.377279281616211
    8. 'some' → logprob: -10.502279281616211
    9. 'minimal' → logprob: -11.252279281616211
    10. 'least' → logprob: -11.252279281616211

Token 1542: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.040946781635284424
    2. '3' → logprob: -4.540946960449219
    3. '``' → logprob: -5.415946960449219
    4. '```' → logprob: -5.540946960449219
    5. '1' → logprob: -5.665946960449219
    6. '[
' → logprob: -5.790946960449219
    7. ')' → logprob: -5.915946960449219
    8. '[' → logprob: -6.040946960449219
    9. ']' → logprob: -6.165946960449219
    10. ')
' → logprob: -6.790946960449219

Token 1543: '.

' (ID: 364)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2015966176986694
    2. '       ' → logprob: -1.3265966176986694
    3. '[
' → logprob: -2.076596736907959
    4. '   ' → logprob: -2.701596736907959
    5. ':' → logprob: -3.076596736907959
    6. ']' → logprob: -3.201596736907959
    7. '```' → logprob: -3.576596736907959
    8. '[r' → logprob: -3.951596736907959
    9. ',' → logprob: -4.201596736907959
    10. '
' → logprob: -4.326596736907959

Token 1544: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4210073947906494
    2. '       ' → logprob: -1.6710073947906494
    3. '[' → logprob: -2.2960073947906494
    4. ',' → logprob: -2.5460073947906494
    5. '\' → logprob: -3.0460073947906494
    6. '
' → logprob: -3.5460073947906494
    7. '+' → logprob: -3.6710073947906494
    8. '[
' → logprob: -3.6710073947906494
    9. '<|end|>' → logprob: -3.6710073947906494
    10. '.' → logprob: -3.7960073947906494

Token 1545: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4956859052181244
    2. '[' → logprob: -2.6206858158111572
    3. ',' → logprob: -3.1206858158111572
    4. ':' → logprob: -3.3706858158111572
    5. '   ' → logprob: -3.3706858158111572
    6. '[
' → logprob: -3.4956858158111572
    7. '[r' → logprob: -3.9956858158111572
    8. ']' → logprob: -3.9956858158111572
    9. '\' → logprob: -4.120686054229736
    10. '
' → logprob: -4.120686054229736

Token 1546: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25840216875076294
    2. '\n' → logprob: -3.133402109146118
    3. '"' → logprob: -3.633402109146118
    4. '
' → logprob: -3.633402109146118
    5. '           ' → logprob: -3.883402109146118
    6. '   ' → logprob: -4.633402347564697
    7. '"\' → logprob: -4.633402347564697
    8. '\' → logprob: -4.758402347564697
    9. '        
' → logprob: -4.883402347564697
    10. '               ' → logprob: -5.008402347564697

Token 1547: ' rows' (ID: 13585)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1421208381652832
    2. '4' → logprob: -1.5171208381652832
    3. 'r' → logprob: -1.6421208381652832
    4. ' c' → logprob: -2.892120838165283
    5. 'N' → logprob: -3.267120838165283
    6. ' N' → logprob: -3.892120838165283
    7. ' the' → logprob: -4.142120838165283
    8. 'len' → logprob: -4.267120838165283
    9. 'book' → logprob: -4.267120838165283
    10. ' r' → logprob: -4.642120838165283

Token 1548: ' are' (ID: 553)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.108081579208374
    2. 's' → logprob: -1.608081579208374
    3. '[' → logprob: -1.858081579208374
    4. ']' → logprob: -1.983081579208374
    5. '[r' → logprob: -3.358081579208374
    6. '```' → logprob: -3.733081579208374
    7. '_' → logprob: -4.233081817626953
    8. ' +' → logprob: -4.358081817626953
    9. ':' → logprob: -4.608081817626953
    10. ')' → logprob: -4.608081817626953

Token 1549: ' line' (ID: 2543)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -1.3223556280136108
    2. '0' → logprob: -1.5723556280136108
    3. '[' → logprob: -1.9473556280136108
    4. 'a' → logprob: -2.4473557472229004
    5. ' a' → logprob: -2.9473557472229004
    6. '1' → logprob: -3.3223557472229004
    7. 'only' → logprob: -3.5723557472229004
    8. ' ' → logprob: -3.6973557472229004
    9. 'linear' → logprob: -3.6973557472229004
    10. '{' → logprob: -4.1973557472229

Token 1550: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.351932168006897
    2. '[' → logprob: -2.6019320487976074
    3. '       ' → logprob: -2.8519320487976074
    4. '   ' → logprob: -3.6019320487976074
    5. 'ar' → logprob: -3.7269320487976074
    6. '```' → logprob: -3.7269320487976074
    7. ' ' → logprob: -3.9769320487976074
    8. 'arly' → logprob: -4.476932048797607
    9. '      ' → logprob: -4.601932048797607
    10. '0' → logprob: -4.726932048797607

Token 1551: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3430616855621338
    2. 'ar' → logprob: -1.8430616855621338
    3. '[' → logprob: -2.218061685562134
    4. '       ' → logprob: -2.218061685562134
    5. ' ' → logprob: -2.593061685562134
    6. '   ' → logprob: -2.843061685562134
    7. '[
' → logprob: -3.218061685562134
    8. '"' → logprob: -3.843061685562134
    9. ' =' → logprob: -3.968061685562134
    10. '      ' → logprob: -4.218061447143555

Token 1552: '..' (ID: 485)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9173797965049744
    2. '4' → logprob: -1.7923798561096191
    3. '[' → logprob: -1.7923798561096191
    4. '       ' → logprob: -2.917379856109619
    5. '[
' → logprob: -3.292379856109619
    6. '][' → logprob: -3.542379856109619
    7. ',' → logprob: -3.917379856109619
    8. '0' → logprob: -4.042379856109619
    9. '   ' → logprob: -4.167379856109619
    10. '```' → logprob: -4.417379856109619

Token 1553: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005387356504797935
    2. '4' → logprob: -7.8755388259887695
    3. '```' → logprob: -9.87553882598877
    4. 'N' → logprob: -10.25053882598877
    5. '...' → logprob: -10.62553882598877
    6. ' ' → logprob: -11.25053882598877
    7. '   ' → logprob: -11.37553882598877
    8. '..' → logprob: -12.12553882598877
    9. '
' → logprob: -12.62553882598877
    10. '``' → logprob: -12.75053882598877

Token 1554: ',
' (ID: 412)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5579607486724854
    2. '[' → logprob: -1.8079607486724854
    3. '[r' → logprob: -3.0579607486724854
    4. ']
' → logprob: -3.4329607486724854
    5. '```' → logprob: -3.8079607486724854
    6. '   ' → logprob: -3.8079607486724854
    7. '       ' → logprob: -3.9329607486724854
    8. '4' → logprob: -4.182960510253906
    9. ':' → logprob: -4.182960510253906
    10. ',' → logprob: -4.432960510253906

Token 1555: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3575137853622437
    2. '       ' → logprob: -1.7325137853622437
    3. '[r' → logprob: -2.107513904571533
    4. ':' → logprob: -2.232513904571533
    5. ',' → logprob: -2.232513904571533
    6. '#' → logprob: -3.357513904571533
    7. '0' → logprob: -3.482513904571533
    8. ':
' → logprob: -3.607513904571533
    9. '
' → logprob: -3.732513904571533
    10. '4' → logprob: -4.357513904571533

Token 1556: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.39482787251472473
    2. '       ' → logprob: -1.6448278427124023
    3. '0' → logprob: -3.7698278427124023
    4. 'r' → logprob: -4.394827842712402
    5. ':
' → logprob: -4.644827842712402
    6. ':' → logprob: -4.769827842712402
    7. '[' → logprob: -4.769827842712402
    8. ',' → logprob: -4.769827842712402
    9. '
' → logprob: -4.894827842712402
    10. ' r' → logprob: -5.019827842712402

Token 1557: ' minimal' (ID: 19957)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2107490301132202
    2. ' r' → logprob: -2.2107491493225098
    3. '[' → logprob: -2.4607491493225098
    4. '[
' → logprob: -2.8357491493225098
    5. 'r' → logprob: -2.9607491493225098
    6. '0' → logprob: -2.9607491493225098
    7. ' for' → logprob: -3.5857491493225098
    8. ']' → logprob: -3.5857491493225098
    9. ',' → logprob: -3.5857491493225098
    10. '4' → logprob: -3.7107491493225098

Token 1558: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -1.1759856939315796
    2. 'path' → logprob: -1.3009856939315796
    3. ' path' → logprob: -1.8009856939315796
    4. ' vertical' → logprob: -2.925985813140869
    5. 'distance' → logprob: -3.300985813140869
    6. 'cost' → logprob: -3.300985813140869
    7. '_path' → logprob: -3.800985813140869
    8. 'def' → logprob: -4.175985813140869
    9. 'r' → logprob: -4.550985813140869
    10. 'row' → logprob: -4.800985813140869

Token 1559: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.6461588144302368
    2. 'path' → logprob: -1.1461588144302368
    3. ' path' → logprob: -2.2711586952209473
    4. 'distance' → logprob: -4.521158695220947
    5. '_move' → logprob: -4.896158695220947
    6. ' movement' → logprob: -5.021158695220947
    7. '_distance' → logprob: -5.521158695220947
    8. 'movement' → logprob: -5.521158695220947
    9. 'cost' → logprob: -6.021158695220947
    10. ' _' → logprob: -6.271158695220947

Token 1560: ' visiting' (ID: 18798)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.906833827495575
    2. '[r' → logprob: -1.4068338871002197
    3. ' =' → logprob: -2.4068338871002197
    4. '   ' → logprob: -3.0318338871002197
    5. '```' → logprob: -3.6568338871002197
    6. ' [' → logprob: -3.6568338871002197
    7. '[
' → logprob: -3.7818338871002197
    8. ']' → logprob: -4.031833648681641
    9. '[c' → logprob: -4.156833648681641
    10. '(r' → logprob: -4.156833648681641

Token 1561: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7494877576828003
    2. ' all' → logprob: -1.1244877576828003
    3. 'r' → logprob: -1.8744877576828003
    4. 'the' → logprob: -4.24948787689209
    5. 'rows' → logprob: -4.87448787689209
    6. ' the' → logprob: -4.87448787689209
    7. ' r' → logprob: -5.12448787689209
    8. '```' → logprob: -6.12448787689209
    9. ' rows' → logprob: -6.37448787689209
    10. '`' → logprob: -6.74948787689209

Token 1562: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.3167552947998047
    2. 'book' → logprob: -1.8167552947998047
    3. '4' → logprob: -3.9417552947998047
    4. 'r' → logprob: -3.9417552947998047
    5. '[' → logprob: -4.441755294799805
    6. '0' → logprob: -4.691755294799805
    7. ' rows' → logprob: -4.816755294799805
    8. 'possible' → logprob: -4.816755294799805
    9. 'required' → logprob: -4.941755294799805
    10. 'books' → logprob: -5.691755294799805

Token 1563: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18966221809387207
    2. '[r' → logprob: -3.064662218093872
    3. '[
' → logprob: -3.564662218093872
    4. ']' → logprob: -3.689662218093872
    5. '][' → logprob: -4.314661979675293
    6. '[c' → logprob: -4.314661979675293
    7. '       ' → logprob: -4.814661979675293
    8. '   ' → logprob: -4.814661979675293
    9. '```' → logprob: -4.814661979675293
    10. '+' → logprob: -5.189661979675293

Token 1564: ' set' (ID: 920)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.918410062789917
    2. 'range' → logprob: -1.418410062789917
    3. '[' → logprob: -2.293410062789917
    4. 'the' → logprob: -2.293410062789917
    5. 'book' → logprob: -3.168410062789917
    6. 'set' → logprob: -3.793410062789917
    7. 'books' → logprob: -4.293410301208496
    8. 'a' → logprob: -4.418410301208496
    9. 'order' → logprob: -4.418410301208496
    10. 'subset' → logprob: -4.793410301208496

Token 1565: ' S' (ID: 336)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31205952167510986
    2. ']' → logprob: -2.8120594024658203
    3. '[
' → logprob: -3.3120594024658203
    4. '[r' → logprob: -3.3120594024658203
    5. '0' → logprob: -3.9370594024658203
    6. '   ' → logprob: -4.31205940246582
    7. '```' → logprob: -4.31205940246582
    8. ' [' → logprob: -4.43705940246582
    9. '_' → logprob: -4.56205940246582
    10. '4' → logprob: -4.68705940246582

Token 1566: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2978808581829071
    2. '[c' → logprob: -2.6728808879852295
    3. '[
' → logprob: -3.2978808879852295
    4. '```' → logprob: -3.4228808879852295
    5. '[r' → logprob: -3.4228808879852295
    6. ']' → logprob: -3.6728808879852295
    7. '   ' → logprob: -4.54788064956665
    8. '][' → logprob: -4.79788064956665
    9. '`' → logprob: -5.04788064956665
    10. '\[' → logprob: -5.54788064956665

Token 1567: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.26698967814445496
    2. 'book' → logprob: -2.1419897079467773
    3. 'required' → logprob: -2.7669897079467773
    4. 'books' → logprob: -4.016989707946777
    5. '{' → logprob: -4.266989707946777
    6. ' rows' → logprob: -4.516989707946777
    7. 'S' → logprob: -6.141989707946777
    8. 'needed' → logprob: -6.516989707946777
    9. ' required' → logprob: -6.641989707946777
    10. 'r' → logprob: -7.016989707946777

Token 1568: ' with' (ID: 483)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15936192870140076
    2. '[c' → logprob: -3.6593618392944336
    3. '[
' → logprob: -3.6593618392944336
    4. '```' → logprob: -3.9093618392944336
    5. '[r' → logprob: -4.034361839294434
    6. ' =' → logprob: -4.284361839294434
    7. '   ' → logprob: -4.409361839294434
    8. '=' → logprob: -5.159361839294434
    9. '_' → logprob: -5.659361839294434
    10. '
' → logprob: -5.909361839294434

Token 1569: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.005423481110483408
    2. 'book' → logprob: -6.380423545837402
    3. ' books' → logprob: -6.505423545837402
    4. 'Y' → logprob: -6.630423545837402
    5. '```' → logprob: -8.130423545837402
    6. '
' → logprob: -9.380423545837402
    7. 'required' → logprob: -9.505423545837402
    8. 'b' → logprob: -9.630423545837402
    9. '   ' → logprob: -9.630423545837402
    10. ' Y' → logprob: -9.630423545837402

Token 1570: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2087535560131073
    2. '[c' → logprob: -2.3337535858154297
    3. '[
' → logprob: -3.0837535858154297
    4. '```' → logprob: -4.45875358581543
    5. '[r' → logprob: -4.70875358581543
    6. ']' → logprob: -5.33375358581543
    7. '   ' → logprob: -5.58375358581543
    8. '       ' → logprob: -5.58375358581543
    9. '][' → logprob: -5.95875358581543
    10. '\[' → logprob: -6.33375358581543

Token 1571: ':
' (ID: 734)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.25118911266326904
    2. 'max' → logprob: -2.0011892318725586
    3. '```' → logprob: -3.6261892318725586
    4. '   ' → logprob: -4.876189231872559
    5. ' min' → logprob: -5.251189231872559
    6. 'range' → logprob: -5.376189231872559
    7. '`' → logprob: -5.501189231872559
    8. '1' → logprob: -5.751189231872559
    9. 'the' → logprob: -5.751189231872559
    10. '``' → logprob: -5.751189231872559

Token 1572: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -2.6859774589538574
    2. ' r' → logprob: -2.6859774589538574
    3. '0' → logprob: -2.8109774589538574
    4. '[' → logprob: -2.8109774589538574
    5. '       ' → logprob: -2.8109774589538574
    6. ' ' → logprob: -2.9359774589538574
    7. '`' → logprob: -3.1859774589538574
    8. '"' → logprob: -3.1859774589538574
    9. 'r' → logprob: -3.1859774589538574
    10. ' min' → logprob: -3.1859774589538574

Token 1573: ' #
' (ID: 21888)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.916445791721344
    2. '       ' → logprob: -1.5414457321166992
    3. ' #' → logprob: -2.541445732116699
    4. ' r' → logprob: -3.041445732116699
    5. ' min' → logprob: -3.166445732116699
    6. '```' → logprob: -3.916445732116699
    7. 'r' → logprob: -4.291445732116699
    8. '`' → logprob: -4.416445732116699
    9. '"' → logprob: -4.541445732116699
    10. ' s' → logprob: -4.541445732116699

Token 1574: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5544823408126831
    2. '       ' → logprob: -1.804482340812683
    3. ' #' → logprob: -2.8044824600219727
    4. 'r' → logprob: -3.9294824600219727
    5. ' (' → logprob: -4.054482460021973
    6. ' ' → logprob: -4.054482460021973
    7. '4' → logprob: -4.179482460021973
    8. ' r' → logprob: -4.304482460021973
    9. ' s' → logprob: -4.679482460021973
    10. '1' → logprob: -4.804482460021973

Token 1575: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7638944387435913
    2. '       ' → logprob: -2.013894557952881
    3. 'r' → logprob: -3.513894557952881
    4. '"' → logprob: -3.638894557952881
    5. '[' → logprob: -3.638894557952881
    6. '4' → logprob: -3.763894557952881
    7. ' #' → logprob: -3.763894557952881
    8. '\' → logprob: -4.013894557952881
    9. '[
' → logprob: -4.138894557952881
    10. '   ' → logprob: -4.263894557952881

Token 1576: ' The' (ID: 623)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.17855779826641083
    2. '#' → logprob: -2.678557872772217
    3. 'max' → logprob: -3.303557872772217
    4. 'l' → logprob: -4.678557872772217
    5. '```' → logprob: -4.678557872772217
    6. 'def' → logprob: -5.553557872772217
    7. 'low' → logprob: -5.553557872772217
    8. '``' → logprob: -5.678557872772217
    9. 'if' → logprob: -5.928557872772217
    10. 'L' → logprob: -6.053557872772217

Token 1577: ' vertical' (ID: 17679)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.6321961879730225
    2. 'best' → logprob: -2.0071961879730225
    3. 'minimal' → logprob: -2.2571961879730225
    4. ' best' → logprob: -2.5071961879730225
    5. 'minimum' → logprob: -3.7571961879730225
    6. 'max' → logprob: -4.132196426391602
    7. 'min' → logprob: -4.257196426391602
    8. '#' → logprob: -4.632196426391602
    9. '
' → logprob: -4.632196426391602
    10. ' next' → logprob: -5.007196426391602

Token 1578: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7783001661300659
    2. 'distance' → logprob: -1.403300166130066
    3. 'range' → logprob: -2.4033002853393555
    4. ' path' → logprob: -3.4033002853393555
    5. '```' → logprob: -3.7783002853393555
    6. '_path' → logprob: -3.9033002853393555
    7. 'movement' → logprob: -4.2783002853393555
    8. 'span' → logprob: -4.6533002853393555
    9. 'positions' → logprob: -4.6533002853393555
    10. '`' → logprob: -5.0283002853393555

Token 1579: ' must' (ID: 2804)
  Prédit: ' covering'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' covering' → logprob: -0.9221447706222534
    2. ' is' → logprob: -2.172144889831543
    3. ' length' → logprob: -2.922144889831543
    4. ' =' → logprob: -3.047144889831543
    5. '[' → logprob: -3.047144889831543
    6. ' covers' → logprob: -3.297144889831543
    7. 's' → logprob: -3.297144889831543
    8. 'length' → logprob: -3.297144889831543
    9. '`' → logprob: -4.047144889831543
    10. ' that' → logprob: -4.297144889831543

Token 1580: ' start' (ID: 1604)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.173429936170578
    2. 'visit' → logprob: -2.4234299659729004
    3. 'start' → logprob: -3.6734299659729004
    4. 'include' → logprob: -4.0484299659729
    5. 'be' → logprob: -4.9234299659729
    6. ' cover' → logprob: -5.0484299659729
    7. 'go' → logprob: -5.4234299659729
    8. 'pass' → logprob: -5.6734299659729
    9. '#' → logprob: -6.6734299659729
    10. 'connect' → logprob: -7.2984299659729

Token 1581: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.8670746088027954
    2. '=' → logprob: -1.3670746088027954
    3. ' at' → logprob: -1.6170746088027954
    4. 'from' → logprob: -2.492074489593506
    5. ' =' → logprob: -3.867074489593506
    6. ' from' → logprob: -4.992074489593506
    7. 'and' → logprob: -5.867074489593506
    8. 'either' → logprob: -6.117074489593506
    9. 'r' → logprob: -6.492074489593506
    10. '   ' → logprob: -6.617074489593506

Token 1582: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.33305084705352783
    2. 'min' → logprob: -1.4580508470535278
    3. 'the' → logprob: -3.7080507278442383
    4. ' min' → logprob: -4.833050727844238
    5. 'max' → logprob: -5.083050727844238
    6. ' the' → logprob: -5.583050727844238
    7. ' r' → logprob: -6.333050727844238
    8. 'minimum' → logprob: -6.458050727844238
    9. '```' → logprob: -7.208050727844238
    10. '`' → logprob: -7.583050727844238

Token 1583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03026585839688778
    2. 'ange' → logprob: -4.155265808105469
    3. 'ow' → logprob: -6.280265808105469
    4. 'o' → logprob: -6.405265808105469
    5. 'a' → logprob: -6.655265808105469
    6. ')' → logprob: -6.655265808105469
    7. ',' → logprob: -6.905265808105469
    8. 'i' → logprob: -6.905265808105469
    9. '3' → logprob: -6.905265808105469
    10. '_' → logprob: -7.030265808105469

Token 1584: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.923639178276062
    2. ',' → logprob: -2.1736392974853516
    3. '[
' → logprob: -2.1736392974853516
    4. '+' → logprob: -2.9236392974853516
    5. '```' → logprob: -3.0486392974853516
    6. '[r' → logprob: -3.6736392974853516
    7. '1' → logprob: -3.7986392974853516
    8. ',
' → logprob: -3.9236392974853516
    9. '_' → logprob: -3.9236392974853516
    10. ')' → logprob: -4.048639297485352

Token 1585: ' visit' (ID: 4030)
  Prédit: ' go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' go' → logprob: -1.3505020141601562
    2. ' end' → logprob: -1.4755020141601562
    3. 'end' → logprob: -1.9755020141601562
    4. ' visit' → logprob: -2.1005020141601562
    5. ' and' → logprob: -3.4755020141601562
    6. ' be' → logprob: -3.6005020141601562
    7. 'visit' → logprob: -3.6005020141601562
    8. ',' → logprob: -3.7255020141601562
    9. ' continue' → logprob: -3.9755020141601562
    10. 'go' → logprob: -3.9755020141601562

Token 1586: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3606676459312439
    2. 'r' → logprob: -2.1106677055358887
    3. 'the' → logprob: -2.6106677055358887
    4. 'min' → logprob: -2.9856677055358887
    5. 'rows' → logprob: -3.8606677055358887
    6. ' all' → logprob: -4.235667705535889
    7. '```' → logprob: -4.985667705535889
    8. 'max' → logprob: -5.985667705535889
    9. 'S' → logprob: -6.110667705535889
    10. 'minimal' → logprob: -6.360667705535889

Token 1587: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.12151999026536942
    2. 'r' → logprob: -3.2465200424194336
    3. 'book' → logprob: -3.4965200424194336
    4. 'required' → logprob: -4.121520042419434
    5. 'points' → logprob: -4.746520042419434
    6. ' rows' → logprob: -5.246520042419434
    7. 'needed' → logprob: -5.746520042419434
    8. 'row' → logprob: -5.996520042419434
    9. 'positions' → logprob: -6.246520042419434
    10. 'books' → logprob: -6.496520042419434

Token 1588: ' in' (ID: 306)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1650078296661377
    2. '```' → logprob: -1.9150078296661377
    3. ' +' → logprob: -2.5400078296661377
    4. ',' → logprob: -2.5400078296661377
    5. 'r' → logprob: -2.7900078296661377
    6. ' with' → logprob: -2.9150078296661377
    7. ' in' → logprob: -2.9150078296661377
    8. '2' → logprob: -3.4150078296661377
    9. 'with' → logprob: -3.4150078296661377
    10. 'in' → logprob: -4.165007591247559

Token 1589: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0009632694418542087
    2. ' S' → logprob: -7.50096321105957
    3. '{' → logprob: -9.62596321105957
    4. '   ' → logprob: -9.62596321105957
    5. 'the' → logprob: -9.75096321105957
    6. '`' → logprob: -9.87596321105957
    7. 'set' → logprob: -10.50096321105957
    8. 'sorted' → logprob: -10.62596321105957
    9. 'book' → logprob: -11.00096321105957
    10. 'r' → logprob: -11.12596321105957

Token 1590: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44459813833236694
    2. '[r' → logprob: -2.1945981979370117
    3. '```' → logprob: -2.4445981979370117
    4. '[
' → logprob: -2.9445981979370117
    5. '[c' → logprob: -3.3195981979370117
    6. '``' → logprob: -4.819598197937012
    7. '
' → logprob: -4.819598197937012
    8. '_' → logprob: -4.944598197937012
    9. '`' → logprob: -5.069598197937012
    10. '   ' → logprob: -5.069598197937012

Token 1591: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7597631812095642
    2. 'and' → logprob: -1.384763240814209
    3. '       ' → logprob: -2.634763240814209
    4. 'r' → logprob: -2.634763240814209
    5. 'end' → logprob: -3.384763240814209
    6. '#' → logprob: -3.759763240814209
    7. ',' → logprob: -4.384763240814209
    8. ' r' → logprob: -4.509763240814209
    9. ' end' → logprob: -5.009763240814209
    10. 'cover' → logprob: -5.259763240814209

Token 1592: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.004882431123405695
    2. ' end' → logprob: -5.379882335662842
    3. 'finish' → logprob: -8.5048828125
    4. ' ' → logprob: -11.1298828125
    5. '   ' → logprob: -11.2548828125
    6. '
' → logprob: -12.0048828125
    7. '       ' → logprob: -12.5048828125
    8. '#' → logprob: -13.1298828125
    9. 'then' → logprob: -13.2548828125
    10. 'continue' → logprob: -13.2548828125

Token 1593: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5315499901771545
    2. 'at' → logprob: -0.9065499901771545
    3. '_at' → logprob: -5.40654993057251
    4. '_' → logprob: -6.65654993057251
    5. 'r' → logprob: -6.90654993057251
    6. 'At' → logprob: -7.90654993057251
    7. '(r' → logprob: -8.656550407409668
    8. ',' → logprob: -8.906550407409668
    9. '_r' → logprob: -9.156550407409668
    10. ' ' → logprob: -9.281550407409668

Token 1594: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00025966696557588875
    2. ' r' → logprob: -9.125259399414062
    3. 'some' → logprob: -9.375259399414062
    4. '```' → logprob: -10.750259399414062
    5. 'any' → logprob: -11.125259399414062
    6. 'a' → logprob: -11.875259399414062
    7. 'either' → logprob: -12.125259399414062
    8. 'the' → logprob: -12.625259399414062
    9. '
' → logprob: -12.625259399414062
    10. '   ' → logprob: -13.250259399414062

Token 1595: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8016054630279541
    2. '[' → logprob: -1.676605463027954
    3. ']' → logprob: -2.051605463027954
    4. '2' → logprob: -2.176605463027954
    5. '3' → logprob: -3.051605463027954
    6. '[
' → logprob: -3.426605463027954
    7. '][' → logprob: -4.551605224609375
    8. '```' → logprob: -4.551605224609375
    9. '+' → logprob: -5.676605224609375
    10. '[c' → logprob: -5.801605224609375

Token 1596: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7627343535423279
    2. '[
' → logprob: -1.0127344131469727
    3. '[r' → logprob: -3.2627344131469727
    4. '       ' → logprob: -3.3877344131469727
    5. '```' → logprob: -3.8877344131469727
    6. '   ' → logprob: -4.262734413146973
    7. '`' → logprob: -4.637734413146973
    8. '_' → logprob: -5.262734413146973
    9. ',' → logprob: -5.387734413146973
    10. '\' → logprob: -5.387734413146973

Token 1597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06236637011170387
    2. '
' → logprob: -4.812366485595703
    3. '           ' → logprob: -4.812366485595703
    4. ':
' → logprob: -4.937366485595703
    5. ',' → logprob: -5.062366485595703
    6. '   ' → logprob: -5.812366485595703
    7. ':' → logprob: -5.937366485595703
    8. '        ' → logprob: -6.062366485595703
    9. '\' → logprob: -6.187366485595703
    10. '#' → logprob: -6.312366485595703

Token 1598: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9436220526695251
    2. '#' → logprob: -1.06862211227417
    3. '\' → logprob: -3.31862211227417
    4. '\n' → logprob: -3.56862211227417
    5. '(
' → logprob: -3.56862211227417
    6. ',' → logprob: -3.94362211227417
    7. '(' → logprob: -4.06862211227417
    8. ' +' → logprob: -4.06862211227417
    9. '"' → logprob: -4.19362211227417
    10. '#
' (adapté à ' #
') → logprob: -4.44362211227417

Token 1599: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20684899389743805
    2. '       ' → logprob: -1.8318489789962769
    3. '#
' → logprob: -3.7068490982055664
    4. '           ' → logprob: -7.831849098205566
    5. '\' → logprob: -8.206849098205566
    6. ',' → logprob: -8.331849098205566
    7. ' #' → logprob: -8.831849098205566
    8. '```' → logprob: -8.956849098205566
    9. '...' → logprob: -9.456849098205566
    10. '   ' → logprob: -9.581849098205566

Token 1600: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15766309201717377
    2. '[' → logprob: -3.907663106918335
    3. '        ' → logprob: -3.907663106918335
    4. '"' → logprob: -4.157662868499756
    5. '           ' → logprob: -4.282662868499756
    6. ')' → logprob: -4.657662868499756
    7. ''' → logprob: -4.782662868499756
    8. '(' → logprob: -5.157662868499756
    9. ',' → logprob: -5.157662868499756
    10. '\' → logprob: -5.282662868499756

Token 1601: ' The' (ID: 623)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -2.0165960788726807
    2. '       ' → logprob: -2.2665960788726807
    3. ')' → logprob: -2.3915960788726807
    4. ''' → logprob: -2.6415960788726807
    5. ' r' → logprob: -2.6415960788726807
    6. '[' → logprob: -2.6415960788726807
    7. '[r' → logprob: -2.6415960788726807
    8. 'r' → logprob: -3.2665960788726807
    9. '```' → logprob: -3.5165960788726807
    10. '`' → logprob: -3.5165960788726807

Token 1602: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.47515109181404114
    2. ' best' → logprob: -1.8501510620117188
    3. 'best' → logprob: -2.9751510620117188
    4. ' next' → logprob: -3.1001510620117188
    5. 'minimal' → logprob: -3.3501510620117188
    6. 'vertical' → logprob: -3.8501510620117188
    7. ' vertical' → logprob: -4.350151062011719
    8. ' rows' → logprob: -4.600151062011719
    9. 'rows' → logprob: -4.975151062011719
    10. 'next' → logprob: -5.725151062011719

Token 1603: ' cost' (ID: 3097)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.20814764499664307
    2. 'distance' → logprob: -2.5831475257873535
    3. ' vertical' → logprob: -2.8331475257873535
    4. 'cost' → logprob: -4.0831475257873535
    5. 'path' → logprob: -5.0831475257873535
    6. '
' → logprob: -5.2081475257873535
    7. 'row' → logprob: -5.5831475257873535
    8. ' distance' → logprob: -5.8331475257873535
    9. '#' → logprob: -6.0831475257873535
    10. 'def' → logprob: -6.2081475257873535

Token 1604: ' vertical' (ID: 17679)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.2972413301467896
    2. ' is' → logprob: -2.0472412109375
    3. '[' → logprob: -2.6722412109375
    4. '(r' → logprob: -2.6722412109375
    5. '(' → logprob: -2.9222412109375
    6. '=' → logprob: -3.0472412109375
    7. '[r' → logprob: -3.1722412109375
    8. 'to' → logprob: -3.2972412109375
    9. ')' → logprob: -3.2972412109375
    10. ' =' → logprob: -3.4222412109375

Token 1605: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.8761783242225647
    2. '_path' → logprob: -1.12617826461792
    3. 'path' → logprob: -2.12617826461792
    4. '_' → logprob: -3.25117826461792
    5. ')' → logprob: -3.87617826461792
    6. ' _' → logprob: -4.87617826461792
    7. ' ' → logprob: -5.37617826461792
    8. '_distance' → logprob: -5.37617826461792
    9. '_move' → logprob: -5.37617826461792
    10. 'distance' → logprob: -5.50117826461792

Token 1606: ' visiting' (ID: 18798)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7107837200164795
    2. '[r' → logprob: -2.3357837200164795
    3. ' =' → logprob: -2.4607837200164795
    4. '[' → logprob: -3.0857837200164795
    5. ' from' → logprob: -3.2107837200164795
    6. 'from' → logprob: -3.2107837200164795
    7. ' to' → logprob: -3.3357837200164795
    8. '(r' → logprob: -3.5857837200164795
    9. ':
' → logprob: -4.335783958435059
    10. 's' → logprob: -4.710783958435059

Token 1607: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3238263428211212
    2. 'all' → logprob: -1.5738263130187988
    3. ' rows' → logprob: -3.573826313018799
    4. ' the' → logprob: -4.573826313018799
    5. 'rows' → logprob: -4.698826313018799
    6. 'r' → logprob: -5.073826313018799
    7. ' r' → logprob: -5.698826313018799
    8. ' S' → logprob: -6.073826313018799
    9. 'the' → logprob: -6.198826313018799
    10. ' ' → logprob: -6.448826313018799

Token 1608: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.09046416729688644
    2. 'r' → logprob: -3.5904641151428223
    3. ' rows' → logprob: -3.8404641151428223
    4. '_rows' → logprob: -4.590464115142822
    5. 'possible' → logprob: -5.465464115142822
    6. 'book' → logprob: -5.840464115142822
    7. 'nodes' → logprob: -6.465464115142822
    8. '(rows' → logprob: -6.715464115142822
    9. 'neighbors' → logprob: -6.840464115142822
    10. '[' → logprob: -6.840464115142822

Token 1609: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.772249698638916
    2. ' is' → logprob: -2.022249698638916
    3. '```' → logprob: -2.147249698638916
    4. ' visiting' → logprob: -2.272249698638916
    5. 'cover' → logprob: -2.272249698638916
    6. 'is' → logprob: -2.647249698638916
    7. '`' → logprob: -2.772249698638916
    8. ' covering' → logprob: -3.272249698638916
    9. 'r' → logprob: -3.772249698638916
    10. '``' → logprob: -3.897249698638916

Token 1610: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12216691672801971
    2. '{' → logprob: -2.622166872024536
    3. '[' → logprob: -4.497167110443115
    4. 'r' → logprob: -4.622167110443115
    5. 'the' → logprob: -5.122167110443115
    6. 'range' → logprob: -5.497167110443115
    7. 'set' → logprob: -5.497167110443115
    8. '```' → logprob: -6.622167110443115
    9. 'rows' → logprob: -6.747167110443115
    10. ' S' → logprob: -7.372167110443115

Token 1611: ' starting' (ID: 8601)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.5458294749259949
    2. '[' → logprob: -1.2958295345306396
    3. ' is' → logprob: -2.7958295345306396
    4. '[
' → logprob: -4.1708292961120605
    5. '```' → logprob: -4.6708292961120605
    6. '[c' → logprob: -4.7958292961120605
    7. ':' → logprob: -4.7958292961120605
    8. '   ' → logprob: -5.2958292961120605
    9. ',' → logprob: -5.4208292961120605
    10. '_' → logprob: -5.6708292961120605

Token 1612: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.13548332452774048
    2. 'from' → logprob: -2.1354832649230957
    3. 'and' → logprob: -5.510483264923096
    4. ',' → logprob: -6.635483264923096
    5. ' at' → logprob: -6.635483264923096
    6. '[r' → logprob: -7.635483264923096
    7. 'r' → logprob: -8.135483741760254
    8. '_at' → logprob: -8.385483741760254
    9. ',r' → logprob: -8.385483741760254
    10. '_r' → logprob: -9.385483741760254

Token 1613: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0008213033434003592
    2. ' r' → logprob: -7.125821113586426
    3. '```' → logprob: -11.625821113586426
    4. '`' → logprob: -13.875821113586426
    5. 'the' → logprob: -14.000821113586426
    6. '#' → logprob: -14.000821113586426
    7. 'a' → logprob: -14.000821113586426
    8. ',' → logprob: -14.375821113586426
    9. 'start' → logprob: -14.500821113586426
    10. '``' → logprob: -14.875821113586426

Token 1614: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027231456711888313
    2. 'ow' → logprob: -3.652231454849243
    3. 'o' → logprob: -8.027231216430664
    4. '3' → logprob: -8.027231216430664
    5. ',' → logprob: -9.777231216430664
    6. ' and' → logprob: -10.277231216430664
    7. 'and' → logprob: -10.527231216430664
    8. 'ows' → logprob: -10.527231216430664
    9. '_' → logprob: -10.777231216430664
    10. '```' → logprob: -11.027231216430664

Token 1615: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.45621052384376526
    2. 'and' → logprob: -1.7062104940414429
    3. ' is' → logprob: -2.7062106132507324
    4. ',' → logprob: -2.8312106132507324
    5. 'is' → logprob: -4.706210613250732
    6. ' =' → logprob: -4.956210613250732
    7. '```' → logprob: -4.956210613250732
    8. 'r' → logprob: -5.456210613250732
    9. ':' → logprob: -5.456210613250732
    10. '=' → logprob: -5.706210613250732

Token 1616: ' ending' (ID: 22013)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.0049103121273219585
    2. ' ending' → logprob: -5.379910469055176
    3. 'end' → logprob: -8.629910469055176
    4. 'fin' → logprob: -10.379910469055176
    5. '   ' → logprob: -10.629910469055176
    6. 'r' → logprob: -11.504910469055176
    7. '
' → logprob: -11.504910469055176
    8. '```' → logprob: -11.629910469055176
    9. ' ' → logprob: -11.754910469055176
    10. ' finishing' → logprob: -12.504910469055176

Token 1617: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.03849136084318161
    2. ' at' → logprob: -3.4134912490844727
    3. '_at' → logprob: -5.663491249084473
    4. '(r' → logprob: -7.913491249084473
    5. '```' → logprob: -8.413491249084473
    6. 'r' → logprob: -8.913491249084473
    7. '=' → logprob: -9.038491249084473
    8. '=r' → logprob: -9.163491249084473
    9. '_' → logprob: -9.788491249084473
    10. 'At' → logprob: -9.788491249084473

Token 1618: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00011605957115534693
    2. ' r' → logprob: -9.375116348266602
    3. '```' → logprob: -10.625116348266602
    4. 'the' → logprob: -13.375116348266602
    5. '``' → logprob: -13.500116348266602
    6. '   ' → logprob: -14.125116348266602
    7. '`' → logprob: -14.125116348266602
    8. '
' → logprob: -14.375116348266602
    9. 'row' → logprob: -14.875116348266602
    10. 'a' → logprob: -15.250116348266602

Token 1619: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2296747863292694
    2. '2' → logprob: -1.6046748161315918
    3. '1' → logprob: -5.604674816131592
    4. '4' → logprob: -8.229674339294434
    5. 'o' → logprob: -9.604674339294434
    6. '_' → logprob: -10.104674339294434
    7. '```' → logprob: -10.229674339294434
    8. '+' → logprob: -10.479674339294434
    9. '``' → logprob: -11.354674339294434
    10. 'e' → logprob: -11.354674339294434

Token 1620: ' will' (ID: 738)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0196349620819092
    2. '[r' → logprob: -1.7696349620819092
    3. ':' → logprob: -2.519634962081909
    4. ' =' → logprob: -3.019634962081909
    5. ' is' → logprob: -3.144634962081909
    6. '[
' → logprob: -3.269634962081909
    7. '```' → logprob: -3.269634962081909
    8. ',' → logprob: -3.519634962081909
    9. '
' → logprob: -4.019635200500488
    10. ':
' → logprob: -4.144635200500488

Token 1621: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.8903491497039795
    2. '=' → logprob: -1.0153491497039795
    3. ' be' → logprob: -2.1403491497039795
    4. ' =' → logprob: -2.2653491497039795
    5. 'equal' → logprob: -6.265349388122559
    6. '=
' → logprob: -7.265349388122559
    7. '=min' → logprob: -7.390349388122559
    8. 'cover' → logprob: -7.765349388122559
    9. ' cover' → logprob: -7.890349388122559
    10. ' equal' → logprob: -8.015349388122559

Token 1622: ':
' (ID: 734)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.46142372488975525
    2. 'max' → logprob: -1.3364237546920776
    3. 'abs' → logprob: -3.211423635482788
    4. '```' → logprob: -3.961423635482788
    5. ' min' → logprob: -4.711423873901367
    6. '0' → logprob: -5.336423873901367
    7. '(' → logprob: -5.336423873901367
    8. '   ' → logprob: -5.711423873901367
    9. '(min' → logprob: -5.836423873901367
    10. '1' → logprob: -5.961423873901367

Token 1623: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.398715853691101
    2. ' min' → logprob: -1.773715853691101
    3. ' max' → logprob: -2.5237159729003906
    4. '"' → logprob: -2.6487159729003906
    5. '`' → logprob: -2.7737159729003906
    6. 'min' → logprob: -3.0237159729003906
    7. '```' → logprob: -3.3987159729003906
    8. 'max' → logprob: -3.5237159729003906
    9. '       ' → logprob: -3.5237159729003906
    10. ' #' → logprob: -3.6487159729003906

Token 1624: ' #
' (ID: 21888)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3989180326461792
    2. 'abs' → logprob: -2.2739181518554688
    3. 'max' → logprob: -2.2739181518554688
    4. '"' → logprob: -2.6489181518554688
    5. '       ' → logprob: -2.8989181518554688
    6. 'min' → logprob: -3.1489181518554688
    7. ' max' → logprob: -3.2739181518554688
    8. ' (' → logprob: -3.3989181518554688
    9. '(
' → logprob: -3.5239181518554688
    10. '(' → logprob: -3.6489181518554688

Token 1625: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40652966499328613
    2. '       ' → logprob: -2.406529664993286
    3. ' (' → logprob: -3.656529664993286
    4. ' =' → logprob: -3.781529664993286
    5. 'max' → logprob: -3.906529664993286
    6. 'min' → logprob: -4.281529426574707
    7. ' max' → logprob: -4.406529426574707
    8. ' #' → logprob: -4.406529426574707
    9. 'r' → logprob: -4.531529426574707
    10. 'abs' → logprob: -4.531529426574707

Token 1626: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.10496974736452103
    2. '"' → logprob: -3.9799697399139404
    3. '#
' → logprob: -4.2299699783325195
    4. '       ' → logprob: -4.3549699783325195
    5. 'r' → logprob: -5.3549699783325195
    6. '(' → logprob: -5.4799699783325195
    7. 'max' → logprob: -5.4799699783325195
    8. '   ' → logprob: -5.8549699783325195
    9. ' (' → logprob: -5.8549699783325195
    10. 'min' → logprob: -5.9799699783325195

Token 1627: ' med' (ID: 1475)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6860979199409485
    2. 'max' → logprob: -1.3110978603363037
    3. '#' → logprob: -2.4360978603363037
    4. '4' → logprob: -3.6860978603363037
    5. '(min' → logprob: -4.436098098754883
    6. '"' → logprob: -4.686098098754883
    7. '`' → logprob: -4.811098098754883
    8. ' min' → logprob: -4.811098098754883
    9. 'abs' → logprob: -4.936098098754883
    10. 'r' → logprob: -5.061098098754883

Token 1628: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4754771888256073
    2. 'ian' → logprob: -1.3504772186279297
    3. 'ium' → logprob: -3.4754772186279297
    4. '=' → logprob: -4.22547721862793
    5. '```' → logprob: -4.35047721862793
    6. '
' → logprob: -4.85047721862793
    7. 'ians' → logprob: -5.10047721862793
    8. 'iane' → logprob: -5.47547721862793
    9. 'iana' → logprob: -5.97547721862793
    10. '[' → logprob: -5.97547721862793

Token 1629: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0696498304605484
    2. '(min' → logprob: -3.0696499347686768
    3. 'max' → logprob: -4.569649696350098
    4. ' min' → logprob: -6.069649696350098
    5. 'books' → logprob: -6.194649696350098
    6. '(max' → logprob: -7.069649696350098
    7. '(S' → logprob: -7.069649696350098
    8. '(s' → logprob: -7.319649696350098
    9. 'rows' → logprob: -7.819649696350098
    10. '(r' → logprob: -8.194649696350098

Token 1630: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.3828734159469604
    2. 'S' → logprob: -1.6328734159469604
    3. 'r' → logprob: -2.13287353515625
    4. '(
' → logprob: -2.63287353515625
    5. '(min' → logprob: -2.75787353515625
    6. '(rows' → logprob: -2.88287353515625
    7. 'min' → logprob: -3.25787353515625
    8. '(' → logprob: -3.63287353515625
    9. '(dp' → logprob: -3.63287353515625
    10. 'rows' → logprob: -3.75787353515625

Token 1631: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9089170694351196
    2. '_row' → logprob: -1.7839170694351196
    3. '_rows' → logprob: -3.03391695022583
    4. ' =' → logprob: -3.03391695022583
    5. 'in' → logprob: -3.28391695022583
    6. ',' → logprob: -3.40891695022583
    7. '[' → logprob: -3.53391695022583
    8. '_' → logprob: -3.53391695022583
    9. ')
' → logprob: -3.78391695022583
    10. '
' → logprob: -4.40891695022583

Token 1632: ' mid' (ID: 6959)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6638178825378418
    2. 'max' → logprob: -1.0388178825378418
    3. 'med' → logprob: -2.288817882537842
    4. ' =' → logprob: -5.163817882537842
    5. '   ' → logprob: -5.663817882537842
    6. 'mid' → logprob: -5.913817882537842
    7. '=' → logprob: -5.913817882537842
    8. '       ' → logprob: -6.038817882537842
    9. '_min' → logprob: -6.538817882537842
    10. 'median' → logprob: -6.663817882537842

Token 1633: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.005906105041504
    2. 'd' → logprob: -2.005906105041504
    3. 'ium' → logprob: -2.005906105041504
    4. 'i' → logprob: -2.130906105041504
    5. '=' → logprob: -2.505906105041504
    6. '+' → logprob: -2.755906105041504
    7. ']' → logprob: -3.005906105041504
    8. '```' → logprob: -3.505906105041504
    9. '_' → logprob: -3.630906105041504
    10. '``' → logprob: -4.130906105041504

Token 1634: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004102265927940607
    2. 'min' → logprob: -5.5041022300720215
    3. ' max' → logprob: -10.87910270690918
    4. '(max' → logprob: -12.37910270690918
    5. ' min' → logprob: -15.12910270690918
    6. '(min' → logprob: -15.87910270690918
    7. '   ' → logprob: -16.50410270690918
    8. 'r' → logprob: -17.12910270690918
    9. '0' → logprob: -17.37910270690918
    10. '=max' → logprob: -17.50410270690918

Token 1635: '(S' (ID: 6181)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4031400680541992
    2. '_' → logprob: -1.4031400680541992
    3. ']' → logprob: -2.528140068054199
    4. '(S' → logprob: -2.778140068054199
    5. '=' → logprob: -3.028140068054199
    6. ' =' → logprob: -3.153140068054199
    7. '[
' → logprob: -3.153140068054199
    8. 'r' → logprob: -3.903140068054199
    9. 'S' → logprob: -4.028140068054199
    10. '][' → logprob: -4.153140068054199

Token 1636: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1910349130630493
    2. ']' → logprob: -1.3160349130630493
    3. ')' → logprob: -2.4410347938537598
    4. '[' → logprob: -2.5660347938537598
    5. '])' → logprob: -3.3160347938537598
    6. '   ' → logprob: -3.4410347938537598
    7. '4' → logprob: -3.4410347938537598
    8. '][' → logprob: -4.31603479385376
    9. 'S' → logprob: -4.44103479385376
    10. ',' → logprob: -4.56603479385376

Token 1637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3908427953720093
    2. ' =' → logprob: -1.7658427953720093
    3. ' +' → logprob: -2.515842914581299
    4. '```' → logprob: -2.765842914581299
    5. '
' → logprob: -3.140842914581299
    6. '_' → logprob: -3.140842914581299
    7. ',' → logprob: -3.515842914581299
    8. '+' → logprob: -3.640842914581299
    9. '_min' → logprob: -3.765842914581299
    10. '``' → logprob: -3.890842914581299

Token 1638: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12775957584381104
    2. ' +' → logprob: -3.5027594566345215
    3. '`' → logprob: -4.6277594566345215
    4. ' =' → logprob: -4.6277594566345215
    5. '           ' → logprob: -4.8777594566345215
    6. '
' → logprob: -4.8777594566345215
    7. '```' → logprob: -4.8777594566345215
    8. '#' (adapté à ' #') → logprob: -5.0027594566345215
    9. ')' → logprob: -5.2527594566345215
    10. '+' → logprob: -5.3777594566345215

Token 1639: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.306930661201477
    2. 'min' → logprob: -1.556930661201477
    3. '       ' → logprob: -1.681930661201477
    4. 'med' → logprob: -2.4319305419921875
    5. ' if' → logprob: -2.9319305419921875
    6. '#' → logprob: -2.9319305419921875
    7. '+' → logprob: -3.5569305419921875
    8. '```' → logprob: -4.0569305419921875
    9. '           ' → logprob: -4.3069305419921875
    10. ' +' → logprob: -4.6819305419921875

Token 1640: ' path' (ID: 3104)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.5070992112159729
    2. 'med' → logprob: -2.382099151611328
    3. '_' → logprob: -2.632099151611328
    4. ' cost' → logprob: -2.882099151611328
    5. ' best' → logprob: -3.007099151611328
    6. ' next' → logprob: -3.882099151611328
    7. ' path' → logprob: -4.507099151611328
    8. 'cost' → logprob: -4.632099151611328
    9. ' minimum' → logprob: -4.757099151611328
    10. ' _' → logprob: -4.882099151611328

Token 1641: ' covers' (ID: 17804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5091584920883179
    2. ' can' → logprob: -2.3841586112976074
    3. ' is' → logprob: -2.8841586112976074
    4. '=' → logprob: -3.1341586112976074
    5. ' must' → logprob: -3.1341586112976074
    6. '#' → logprob: -3.6341586112976074
    7. 'cost' → logprob: -4.134158611297607
    8. ' will' → logprob: -4.384158611297607
    9. 'must' → logprob: -4.384158611297607
    10. 'from' → logprob: -4.384158611297607

Token 1642: ' from' (ID: 591)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.8848623633384705
    2. ' med' → logprob: -1.7598624229431152
    3. 'min' → logprob: -1.7598624229431152
    4. ' min' → logprob: -2.5098624229431152
    5. 'the' → logprob: -2.7598624229431152
    6. ' the' → logprob: -3.3848624229431152
    7. '[min' → logprob: -4.134862422943115
    8. 'range' → logprob: -4.759862422943115
    9. 'r' → logprob: -4.884862422943115
    10. 'median' → logprob: -5.384862422943115

Token 1643: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.13442568480968475
    2. 'min' → logprob: -2.259425640106201
    3. 'mid' → logprob: -4.259425640106201
    4. 'r' → logprob: -5.384425640106201
    5. ' med' → logprob: -7.259425640106201
    6. '```' → logprob: -7.509425640106201
    7. '`' → logprob: -8.25942611694336
    8. 'm' → logprob: -8.25942611694336
    9. 'median' → logprob: -8.38442611694336
    10. ' min' → logprob: -8.63442611694336

Token 1644: ' to' (ID: 316)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -1.2496856451034546
    2. ',' → logprob: -1.6246856451034546
    3. 'r' → logprob: -1.8746856451034546
    4. 'imum' → logprob: -2.999685764312744
    5. ' to' → logprob: -3.124685764312744
    6. '=' → logprob: -3.249685764312744
    7. 'to' → logprob: -3.624685764312744
    8. 'in' → logprob: -3.624685764312744
    9. 'm' → logprob: -3.749685764312744
    10. ' =' → logprob: -3.874685764312744

Token 1645: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.040381357073783875
    2. 'max' → logprob: -3.41538143157959
    3. 'min' → logprob: -5.04038143157959
    4. 'med' → logprob: -9.04038143157959
    5. ' mid' → logprob: -9.29038143157959
    6. 'r' → logprob: -11.29038143157959
    7. ' max' → logprob: -12.29038143157959
    8. '   ' → logprob: -12.29038143157959
    9. ' min' → logprob: -13.41538143157959
    10. '0' → logprob: -13.41538143157959

Token 1646: ' inclusive' (ID: 29482)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5003243684768677
    2. '       ' → logprob: -1.6253243684768677
    3. '   ' → logprob: -1.8753243684768677
    4. '[r' → logprob: -2.125324249267578
    5. '[c' → logprob: -2.875324249267578
    6. ']' → logprob: -3.125324249267578
    7. '```' → logprob: -3.250324249267578
    8. ' +' → logprob: -3.625324249267578
    9. ':' → logprob: -4.000324249267578
    10. ')' → logprob: -4.125324249267578

Token 1647: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9819254279136658
    2. '[r' → logprob: -1.3569254875183105
    3. '       ' → logprob: -2.2319254875183105
    4. '   ' → logprob: -2.6069254875183105
    5. '[c' → logprob: -3.2319254875183105
    6. ':' → logprob: -3.2319254875183105
    7. '```' → logprob: -3.9819254875183105
    8. '
' → logprob: -4.3569254875183105
    9. ':
' → logprob: -4.6069254875183105
    10. '[
' → logprob: -4.6069254875183105

Token 1648: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.322998285293579
    2. ' +' → logprob: -1.822998285293579
    3. '       ' → logprob: -1.822998285293579
    4. ' if' → logprob: -1.947998285293579
    5. ',' → logprob: -2.697998285293579
    6. '+' → logprob: -3.197998285293579
    7. ' =' → logprob: -3.322998285293579
    8. '_' → logprob: -3.697998285293579
    9. '```' → logprob: -4.572998046875
    10. ')' → logprob: -4.697998046875

Token 1649: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7446617484092712
    2. '#' → logprob: -1.744661808013916
    3. '+' → logprob: -2.369661808013916
    4. ' +' → logprob: -2.994661808013916
    5. ' if' → logprob: -2.994661808013916
    6. ',' → logprob: -3.619661808013916
    7. '
' → logprob: -3.869661808013916
    8. '```' → logprob: -4.244661808013916
    9. ':
' → logprob: -4.619661808013916
    10. ' =' → logprob: -4.619661808013916

Token 1650: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39270809292793274
    2. '#' → logprob: -1.1427080631256104
    3. '           ' → logprob: -6.8927083015441895
    4. '
' → logprob: -6.8927083015441895
    5. '+' → logprob: -7.2677083015441895
    6. '#
' → logprob: -7.2677083015441895
    7. ' +' → logprob: -7.8927083015441895
    8. '```' → logprob: -8.017707824707031
    9. ',' → logprob: -8.142707824707031
    10. ' #' → logprob: -8.892707824707031

Token 1651: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.394883930683136
    2. '       ' → logprob: -1.1448838710784912
    3. '#
' → logprob: -5.39488410949707
    4. '           ' → logprob: -6.76988410949707
    5. ' #' → logprob: -7.26988410949707
    6. ',' → logprob: -8.51988410949707
    7. '```' → logprob: -8.76988410949707
    8. '``' → logprob: -8.89488410949707
    9. '`' → logprob: -9.14488410949707
    10. '"""
' → logprob: -9.14488410949707

Token 1652: ' vertical' (ID: 17679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29198721051216125
    2. ' if' → logprob: -3.791987180709839
    3. '`' → logprob: -3.916987180709839
    4. '"' → logprob: -4.041987419128418
    5. '   ' → logprob: -4.041987419128418
    6. '           ' → logprob: -4.416987419128418
    7. 'r' → logprob: -4.416987419128418
    8. ':' → logprob: -4.541987419128418
    9. '\' → logprob: -4.541987419128418
    10. ''' → logprob: -4.541987419128418

Token 1653: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4761672616004944
    2. 'path' → logprob: -1.8511672019958496
    3. 'movement' → logprob: -2.4761672019958496
    4. '_path' → logprob: -3.1011672019958496
    5. 'cost' → logprob: -3.6011672019958496
    6. '_distance' → logprob: -4.10116720199585
    7. 'range' → logprob: -4.22616720199585
    8. ' movement' → logprob: -5.47616720199585
    9. 'move' → logprob: -5.47616720199585
    10. '_cost' → logprob: -5.72616720199585

Token 1654: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08419696986675262
    2. ' =' → logprob: -2.5841970443725586
    3. 'from' → logprob: -6.584197044372559
    4. 'between' → logprob: -6.959197044372559
    5. 'r' → logprob: -7.584197044372559
    6. 's' → logprob: -7.584197044372559
    7. '   ' → logprob: -8.334197044372559
    8. '+' → logprob: -8.459197044372559
    9. '1' → logprob: -8.834197044372559
    10. 'cost' → logprob: -8.959197044372559

Token 1655: ' abs' (ID: 8443)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7340148687362671
    2. 'mid' → logprob: -0.9840148687362671
    3. ' max' → logprob: -2.7340149879455566
    4. 'abs' → logprob: -3.1090149879455566
    5. '(max' → logprob: -4.234014987945557
    6. ' mid' → logprob: -4.859014987945557
    7. ' abs' → logprob: -5.234014987945557
    8. '(mid' → logprob: -5.484014987945557
    9. ' (' → logprob: -6.484014987945557
    10. '(' → logprob: -6.859014987945557

Token 1656: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.017468981444835663
    2. '(m' → logprob: -4.3924689292907715
    3. 'r' → logprob: -5.3924689292907715
    4. '(' → logprob: -8.39246940612793
    5. 'med' → logprob: -10.14246940612793
    6. '(mid' → logprob: -10.14246940612793
    7. '(row' → logprob: -11.01746940612793
    8. '(c' → logprob: -11.14246940612793
    9. '(s' → logprob: -12.14246940612793
    10. '(v' → logprob: -12.39246940612793

Token 1657: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21703366935253143
    2. ')' → logprob: -2.842033624649048
    3. '-' → logprob: -3.592033624649048
    4. '+' → logprob: -3.717033624649048
    5. ' -' → logprob: -3.842033624649048
    6. 'c' → logprob: -4.217033863067627
    7. 'r' → logprob: -4.842033863067627
    8. ',' → logprob: -5.467033863067627
    9. ' +' → logprob: -5.592033863067627
    10. 's' → logprob: -5.842033863067627

Token 1658: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8285894393920898
    2. '-' → logprob: -1.4535894393920898
    3. ')' → logprob: -1.5785894393920898
    4. '-r' → logprob: -2.32858943939209
    5. ')+' → logprob: -4.57858943939209
    6. '-m' → logprob: -5.45358943939209
    7. ',' → logprob: -6.20358943939209
    8. 'r' → logprob: -6.32858943939209
    9. '1' → logprob: -6.57858943939209
    10. '(r' → logprob: -6.57858943939209

Token 1659: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.18110987544059753
    2. 'min' → logprob: -1.80610990524292
    3. 'mid' → logprob: -7.30610990524292
    4. 'max' → logprob: -7.93110990524292
    5. ' med' → logprob: -9.306109428405762
    6. '   ' → logprob: -9.806109428405762
    7. 'median' → logprob: -10.306109428405762
    8. '(min' → logprob: -10.556109428405762
    9. 'm' → logprob: -10.806109428405762
    10. ' min' → logprob: -11.056109428405762

Token 1660: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016470780596137047
    2. ')+' → logprob: -5.016470909118652
    3. '[' → logprob: -6.516470909118652
    4. ')
' → logprob: -6.766470909118652
    5. '+' → logprob: -7.016470909118652
    6. ' +' → logprob: -7.141470909118652
    7. '),' → logprob: -7.391470909118652
    8. '       ' → logprob: -7.516470909118652
    9. '   ' → logprob: -7.766470909118652
    10. 'S' → logprob: -8.016470909118652

Token 1661: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7497981786727905
    2. '       ' → logprob: -1.6247981786727905
    3. ')' → logprob: -2.24979829788208
    4. '+' → logprob: -2.87479829788208
    5. '   ' → logprob: -3.12479829788208
    6. ' if' → logprob: -3.99979829788208
    7. ' and' → logprob: -4.37479829788208
    8. ',' → logprob: -4.62479829788208
    9. '
' → logprob: -4.74979829788208
    10. ' +
' → logprob: -4.87479829788208

Token 1662: ' (' (ID: 350)
  Prédit: '(mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.2938009202480316
    2. '(max' → logprob: -1.668800950050354
    3. '(abs' → logprob: -3.7938008308410645
    4. ' (' → logprob: -4.2938008308410645
    5. '(min' → logprob: -4.5438008308410645
    6. 'abs' → logprob: -4.9188008308410645
    7. 'max' → logprob: -5.0438008308410645
    8. '(m' → logprob: -5.7938008308410645
    9. 'mid' → logprob: -6.2938008308410645
    10. '((' → logprob: -8.418801307678223

Token 1663: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.4005749523639679
    2. '(mid' → logprob: -1.1505749225616455
    3. 'max' → logprob: -5.275575160980225
    4. 'abs' → logprob: -5.525575160980225
    5. '(max' → logprob: -6.525575160980225
    6. '(m' → logprob: -6.775575160980225
    7. '(abs' → logprob: -6.900575160980225
    8. ' (' → logprob: -8.150574684143066
    9. ' mid' → logprob: -8.775574684143066
    10. '(min' → logprob: -9.025574684143066

Token 1664: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20153291523456573
    2. '-' → logprob: -1.7015329599380493
    3. 'med' → logprob: -9.701533317565918
    4. '-med' → logprob: -10.826533317565918
    5. ' ' → logprob: -11.326533317565918
    6. '   ' → logprob: -11.576533317565918
    7. ')' → logprob: -11.576533317565918
    8. ' med' → logprob: -12.326533317565918
    9. '-m' → logprob: -14.951533317565918
    10. '+' → logprob: -14.951533317565918

Token 1665: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -3.650518920039758e-06
    2. ' med' → logprob: -13.375003814697266
    3. 'min' → logprob: -13.625003814697266
    4. 'met' → logprob: -14.875003814697266
    5. ')' → logprob: -16.000003814697266
    6. '```' → logprob: -16.500003814697266
    7. '   ' → logprob: -16.750003814697266
    8. '=' → logprob: -17.000003814697266
    9. '
' → logprob: -17.250003814697266
    10. 'men' → logprob: -17.625003814697266

Token 1666: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000742207164876163
    2. ')+' → logprob: -7.750742435455322
    3. ')
' → logprob: -8.875741958618164
    4. '+' → logprob: -10.125741958618164
    5. '```' → logprob: -10.375741958618164
    6. '   ' → logprob: -10.375741958618164
    7. '       ' → logprob: -11.125741958618164
    8. ' +' → logprob: -11.500741958618164
    9. ' )' → logprob: -11.750741958618164
    10. '),' → logprob: -12.500741958618164

Token 1667: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5431498289108276
    2. '   ' → logprob: -2.168149948120117
    3. '
' → logprob: -2.668149948120117
    4. ']' → logprob: -2.793149948120117
    5. '[' → logprob: -3.918149948120117
    6. '[
' → logprob: -4.043149948120117
    7. ' +' → logprob: -4.043149948120117
    8. '][' → logprob: -4.168149948120117
    9. '```' → logprob: -4.293149948120117
    10. '           ' → logprob: -5.043149948120117

Token 1668: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00408053956925869
    2. 'max' → logprob: -5.879080772399902
    3. ' abs' → logprob: -6.879080772399902
    4. '(abs' → logprob: -9.004080772399902
    5. 'min' → logprob: -9.129080772399902
    6. '   ' → logprob: -12.629080772399902
    7. ' max' → logprob: -12.754080772399902
    8. '(max' → logprob: -12.754080772399902
    9. '
' → logprob: -14.004080772399902
    10. '       ' → logprob: -14.129080772399902

Token 1669: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0001721934968372807
    2. 'r' → logprob: -8.75017261505127
    3. '(' → logprob: -11.25017261505127
    4. ' (' → logprob: -14.62517261505127
    5. '```' → logprob: -16.250171661376953
    6. '(c' → logprob: -17.125171661376953
    7. ' r' → logprob: -17.500171661376953
    8. '(
' → logprob: -18.375171661376953
    9. '(s' → logprob: -18.625171661376953
    10. '((' → logprob: -18.625171661376953

Token 1670: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5877324342727661
    2. 'c' → logprob: -1.5877324342727661
    3. '1' → logprob: -1.7127324342727661
    4. '2' → logprob: -3.4627323150634766
    5. 'r' → logprob: -3.7127323150634766
    6. '+' → logprob: -6.462732315063477
    7. 's' → logprob: -6.837732315063477
    8. '```' → logprob: -8.837732315063477
    9. '_c' → logprob: -8.837732315063477
    10. '[' → logprob: -9.087732315063477

Token 1671: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022945398464798927
    2. ' -' → logprob: -4.272945404052734
    3. '-' → logprob: -5.647945404052734
    4. '[r' → logprob: -5.647945404052734
    5. '(r' → logprob: -7.897945404052734
    6. '[' → logprob: -8.272945404052734
    7. ' )' → logprob: -8.522945404052734
    8. 'r' → logprob: -8.647945404052734
    9. '```' → logprob: -8.647945404052734
    10. ')-' → logprob: -9.272945404052734

Token 1672: ' mid' (ID: 6959)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.044530436396598816
    2. 'mid' → logprob: -3.1695303916931152
    3. ' med' → logprob: -6.544530391693115
    4. 'min' → logprob: -10.044530868530273
    5. ' mid' → logprob: -11.044530868530273
    6. 'median' → logprob: -11.544530868530273
    7. 'medi' → logprob: -11.919530868530273
    8. 'max' → logprob: -12.544530868530273
    9. 'mad' → logprob: -12.669530868530273
    10. 'mediate' → logprob: -13.294530868530273

Token 1673: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032208492048084736
    2. ')
' → logprob: -6.253221035003662
    3. '   ' → logprob: -8.128220558166504
    4. '       ' → logprob: -8.128220558166504
    5. '+' → logprob: -8.628220558166504
    6. ')`' → logprob: -9.753220558166504
    7. '```' → logprob: -9.878220558166504
    8. '           ' → logprob: -10.003220558166504
    9. ' +' → logprob: -10.128220558166504
    10. ')+' → logprob: -10.503220558166504

Token 1674: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8492607474327087
    2. '       ' → logprob: -0.9742607474327087
    3. '   ' → logprob: -2.9742608070373535
    4. '+' → logprob: -3.4742608070373535
    5. '\n' → logprob: -3.4742608070373535
    6. ')' → logprob: -3.8492608070373535
    7. '
' → logprob: -3.9742608070373535
    8. '           ' → logprob: -4.5992608070373535
    9. ' +
' → logprob: -4.5992608070373535
    10. '+
' → logprob: -4.7242608070373535

Token 1675: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3571154773235321
    2. ' +' → logprob: -1.6071155071258545
    3. '+' → logprob: -2.8571155071258545
    4. '\n' → logprob: -3.9821155071258545
    5. '           ' → logprob: -5.107115268707275
    6. ')' → logprob: -5.357115268707275
    7. '+
' → logprob: -5.857115268707275
    8. '\' → logprob: -6.107115268707275
    9. ' +
' → logprob: -6.357115268707275
    10. '   ' → logprob: -7.232115268707275

Token 1676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7948923110961914
    2. ' +' → logprob: -1.1698923110961914
    3. '+' → logprob: -2.1698923110961914
    4. ')' → logprob: -3.2948923110961914
    5. '\' → logprob: -3.5448923110961914
    6. '           ' → logprob: -4.169892311096191
    7. '\n' → logprob: -4.669892311096191
    8. '```' → logprob: -4.919892311096191
    9. '#' → logprob: -5.044892311096191
    10. '
' → logprob: -5.794892311096191

Token 1677: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1116737648844719
    2. '           ' → logprob: -3.8616738319396973
    3. '\n' → logprob: -4.111673831939697
    4. ' +' → logprob: -4.361673831939697
    5. '#' (adapté à ' #') → logprob: -4.736673831939697
    6. '
' → logprob: -4.861673831939697
    7. '\' → logprob: -5.111673831939697
    8. '"' → logprob: -5.111673831939697
    9. '#
' → logprob: -5.486673831939697
    10. '"\' → logprob: -5.611673831939697

Token 1678: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1810738444328308
    2. '"' → logprob: -3.0560739040374756
    3. '           ' → logprob: -3.5560739040374756
    4. '\' → logprob: -4.1810736656188965
    5. '               ' → logprob: -4.8060736656188965
    6. '"\' → logprob: -4.8060736656188965
    7. '\n' → logprob: -4.8060736656188965
    8. '```' → logprob: -4.9310736656188965
    9. '[' → logprob: -5.0560736656188965
    10. ',' → logprob: -5.5560736656188965

Token 1679: ' we' (ID: 581)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.3913133144378662
    2. ' abs' → logprob: -1.7663133144378662
    3. ' not' → logprob: -2.016313314437866
    4. 'abs' → logprob: -2.391313314437866
    5. ' med' → logprob: -2.766313314437866
    6. 'r' → logprob: -3.016313314437866
    7. ' mid' → logprob: -3.016313314437866
    8. ' (' → logprob: -3.641313314437866
    9. ' S' → logprob: -3.641313314437866
    10. 'mid' → logprob: -3.641313314437866

Token 1680: ' can' (ID: 665)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.2543747425079346
    2. ' need' → logprob: -1.5043747425079346
    3. ' can' → logprob: -1.7543747425079346
    4. '#' → logprob: -2.8793747425079346
    5. 'need' → logprob: -2.8793747425079346
    6. 'continue' → logprob: -3.2543747425079346
    7. ' cannot' → logprob: -3.3793747425079346
    8. '
' → logprob: -4.0043745040893555
    9. ' must' → logprob: -4.1293745040893555
    10. ' should' → logprob: -4.1293745040893555

Token 1681: ' swap' (ID: 25489)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9610690474510193
    2. 'consider' → logprob: -1.211069107055664
    3. 'choose' → logprob: -2.336069107055664
    4. 'complete' → logprob: -3.336069107055664
    5. 'also' → logprob: -3.836069107055664
    6. '       ' → logprob: -3.961069107055664
    7. ' continue' → logprob: -3.961069107055664
    8. '#' → logprob: -4.461069107055664
    9. 'expl' → logprob: -4.586069107055664
    10. 'think' → logprob: -4.586069107055664

Token 1682: ' med' (ID: 1475)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5593338012695312
    2. '[' → logprob: -1.8093338012695312
    3. '       ' → logprob: -1.9343338012695312
    4. '[r' → logprob: -1.9343338012695312
    5. '[
' → logprob: -2.8093338012695312
    6. ']' → logprob: -3.0593338012695312
    7. '```' → logprob: -3.1843338012695312
    8. '   ' → logprob: -3.3093338012695312
    9. '(r' → logprob: -3.6843338012695312
    10. '           ' → logprob: -4.059333801269531

Token 1683: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1631646156311035
    2. '[' → logprob: -1.1631646156311035
    3. ']' → logprob: -1.1631646156311035
    4. '```' → logprob: -4.0381646156311035
    5. '[r' → logprob: -5.0381646156311035
    6. '[
' → logprob: -5.2881646156311035
    7. '_' → logprob: -5.5381646156311035
    8. '+' → logprob: -5.6631646156311035
    9. '``' → logprob: -5.7881646156311035
    10. '[c' → logprob: -6.1631646156311035

Token 1684: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00016384923947043717
    2. 'max' → logprob: -8.875164031982422
    3. ' mid' → logprob: -11.250164031982422
    4. 'min' → logprob: -11.500164031982422
    5. '(mid' → logprob: -14.875164031982422
    6. '
' → logprob: -15.625164031982422
    7. 'med' → logprob: -15.750164031982422
    8. '   ' → logprob: -16.625164031982422
    9. '[mid' → logprob: -16.875164031982422
    10. '```' → logprob: -17.875164031982422

Token 1685: ' depending' (ID: 14537)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0909947156906128
    2. '       ' → logprob: -1.4659947156906128
    3. '[' → logprob: -2.3409948348999023
    4. '           ' → logprob: -2.9659948348999023
    5. '   ' → logprob: -2.9659948348999023
    6. '[
' → logprob: -3.5909948348999023
    7. '[r' → logprob: -3.5909948348999023
    8. '```' → logprob: -3.8409948348999023
    9. ')
' → logprob: -3.9659948348999023
    10. ',' → logprob: -4.465994834899902

Token 1686: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3264833986759186
    2. '#' → logprob: -2.4514834880828857
    3. 'on' → logprob: -2.8264834880828857
    4. '       ' → logprob: -4.201483249664307
    5. '=' → logprob: -4.326483249664307
    6. ':' → logprob: -4.576483249664307
    7. ' (' → logprob: -4.576483249664307
    8. ')' → logprob: -4.701483249664307
    9. '(r' → logprob: -4.826483249664307
    10. '```' → logprob: -4.951483249664307

Token 1687: ' order' (ID: 2569)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.7803052663803101
    2. 'direction' → logprob: -1.15530526638031
    3. 'the' → logprob: -2.5303053855895996
    4. 'S' → logprob: -2.7803053855895996
    5. 'whether' → logprob: -4.4053053855896
    6. ' which' → logprob: -4.5303053855896
    7. 'positions' → logprob: -4.5303053855896
    8. 'order' → logprob: -4.7803053855896
    9. ' direction' → logprob: -5.0303053855896
    10. 'vertical' → logprob: -5.4053053855896

Token 1688: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4008634686470032
    2. ')' → logprob: -2.2758634090423584
    3. '   ' → logprob: -2.7758634090423584
    4. '[' → logprob: -3.0258634090423584
    5. '[
' → logprob: -3.2758634090423584
    6. ']' → logprob: -4.1508636474609375
    7. '           ' → logprob: -4.4008636474609375
    8. 'def' → logprob: -5.4008636474609375
    9. '\' → logprob: -5.5258636474609375
    10. '[r' → logprob: -5.6508636474609375

Token 1689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7044591903686523
    2. ' +' → logprob: -1.7044591903686523
    3. '#' → logprob: -2.4544591903686523
    4. '+' → logprob: -2.9544591903686523
    5. '           ' → logprob: -3.0794591903686523
    6. ')' → logprob: -3.9544591903686523
    7. '"' → logprob: -3.9544591903686523
    8. '`' → logprob: -4.704459190368652
    9. '\' → logprob: -4.829459190368652
    10. ''' → logprob: -4.954459190368652

Token 1690: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5223609805107117
    2. '\n' → logprob: -1.7723610401153564
    3. '"' → logprob: -3.1473610401153564
    4. ')' → logprob: -3.6473610401153564
    5. '           ' → logprob: -3.6473610401153564
    6. '\' → logprob: -3.7723610401153564
    7. ' +' → logprob: -4.522360801696777
    8. '"\' → logprob: -4.522360801696777
    9. '`' → logprob: -4.647360801696777
    10. ''' → logprob: -4.647360801696777

Token 1691: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40775418281555176
    2. '#' → logprob: -1.6577541828155518
    3. '           ' → logprob: -2.9077541828155518
    4. '```' → logprob: -4.282753944396973
    5. '+' → logprob: -4.657753944396973
    6. ')' → logprob: -4.782753944396973
    7. ' +' → logprob: -5.032753944396973
    8. '\' → logprob: -5.282753944396973
    9. '               ' → logprob: -5.407753944396973
    10. '`' → logprob: -5.657753944396973

Token 1692: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6511502265930176
    2. '#' (adapté à ' #') → logprob: -0.7761502265930176
    3. '#
' → logprob: -4.401150226593018
    4. '           ' → logprob: -6.026150226593018
    5. 'if' → logprob: -7.526150226593018
    6. '   ' → logprob: -7.901150226593018
    7. '```' → logprob: -8.15114974975586
    8. ' #' → logprob: -8.40114974975586
    9. '...' → logprob: -8.65114974975586
    10. ''''
' → logprob: -8.77614974975586

Token 1693: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07805801928043365
    2. '           ' → logprob: -3.4530580043792725
    3. ')' → logprob: -5.328058242797852
    4. '               ' → logprob: -5.328058242797852
    5. ' if' → logprob: -5.453058242797852
    6. '```' → logprob: -5.578058242797852
    7. '        ' → logprob: -5.953058242797852
    8. ',' → logprob: -5.953058242797852
    9. '
' → logprob: -6.203058242797852
    10. '   ' → logprob: -6.203058242797852

Token 1694: ' try' (ID: 2075)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6177446842193604
    2. ' continue' → logprob: -1.2427446842193604
    3. '[' → logprob: -2.8677446842193604
    4. ' need' → logprob: -3.6177446842193604
    5. ' will' → logprob: -4.242744445800781
    6. 'continue' → logprob: -4.492744445800781
    7. ' =' → logprob: -4.492744445800781
    8. 'can' → logprob: -4.617744445800781
    9. '=' → logprob: -4.742744445800781
    10. '#' → logprob: -5.367744445800781

Token 1695: ' both' (ID: 2973)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.6398934721946716
    2. 'min' → logprob: -1.7648935317993164
    3. 'both' → logprob: -2.2648935317993164
    4. 'all' → logprob: -2.3898935317993164
    5. ' med' → logprob: -3.0148935317993164
    6. ' min' → logprob: -3.8898935317993164
    7. ' all' → logprob: -4.764893531799316
    8. 'max' → logprob: -5.139893531799316
    9. ' both' → logprob: -5.514893531799316
    10. 'two' → logprob: -5.764893531799316

Token 1696: ' orders' (ID: 12528)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8245450854301453
    2. '[' → logprob: -1.32454514503479
    3. '           ' → logprob: -2.32454514503479
    4. '[
' → logprob: -2.57454514503479
    5. '               ' → logprob: -3.32454514503479
    6. ')' → logprob: -4.199544906616211
    7. ']' → logprob: -4.449544906616211
    8. '   ' → logprob: -4.949544906616211
    9. '                   ' → logprob: -5.199544906616211
    10. '```' → logprob: -5.324544906616211

Token 1697: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3085063397884369
    2. '[' → logprob: -2.4335062503814697
    3. '           ' → logprob: -2.6835062503814697
    4. '[
' → logprob: -3.3085062503814697
    5. '               ' → logprob: -4.308506488800049
    6. ':' → logprob: -4.933506488800049
    7. '```' → logprob: -5.058506488800049
    8. '                   ' → logprob: -5.558506488800049
    9. ',' → logprob: -5.558506488800049
    10. '   ' → logprob: -5.933506488800049

Token 1698: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39122021198272705
    2. ' (' → logprob: -2.6412200927734375
    3. '       ' → logprob: -2.8912200927734375
    4. '(' → logprob: -3.1412200927734375
    5. '           ' → logprob: -3.2662200927734375
    6. '"' → logprob: -4.0162200927734375
    7. 'r' → logprob: -4.2662200927734375
    8. ' #' → logprob: -4.3912200927734375
    9. ',' → logprob: -4.6412200927734375
    10. '(
' → logprob: -4.6412200927734375

Token 1699: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6070301532745361
    2. '       ' → logprob: -1.1070301532745361
    3. '(' → logprob: -3.232030153274536
    4. ' (' → logprob: -3.607030153274536
    5. '#
' → logprob: -4.232029914855957
    6. '           ' → logprob: -4.607029914855957
    7. 'for' → logprob: -5.232029914855957
    8. '(
' → logprob: -5.607029914855957
    9. ' #' → logprob: -5.732029914855957
    10. ',' → logprob: -5.982029914855957

Token 1700: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4389227628707886
    2. '       ' → logprob: -1.6889227628707886
    3. 'for' → logprob: -2.813922882080078
    4. '``' → logprob: -3.563922882080078
    5. 'if' → logprob: -3.688922882080078
    6. '```' → logprob: -4.188922882080078
    7. 'med' → logprob: -4.563922882080078
    8. '#
' → logprob: -5.188922882080078
    9. '           ' → logprob: -5.313922882080078
    10. '`' → logprob: -5.688922882080078

Token 1701: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.852573037147522
    2. 'if' → logprob: -1.977573037147522
    3. 'min' → logprob: -2.6025729179382324
    4. 'abs' → logprob: -2.7275729179382324
    5. '(min' → logprob: -2.8525729179382324
    6. '#' → logprob: -2.9775729179382324
    7. '(' → logprob: -3.4775729179382324
    8. 'max' → logprob: -3.8525729179382324
    9. 'med' → logprob: -3.9775729179382324
    10. 'dist' → logprob: -4.102572917938232

Token 1702: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7718089818954468
    2. 'abs' → logprob: -2.2718091011047363
    3. ' +' → logprob: -2.5218091011047363
    4. ')' → logprob: -2.5218091011047363
    5. '(abs' → logprob: -2.7718091011047363
    6. '=' → logprob: -3.3968091011047363
    7. '+' → logprob: -3.3968091011047363
    8. ' abs' → logprob: -3.5218091011047363
    9. ' *' → logprob: -4.271809101104736
    10. '   ' → logprob: -4.396809101104736

Token 1703: ' up' (ID: 869)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.03902313485741615
    2. 'min' → logprob: -3.6640231609344482
    3. 'abs' → logprob: -5.414022922515869
    4. 'r' → logprob: -7.039022922515869
    5. '(min' → logprob: -7.039022922515869
    6. ' med' → logprob: -7.164022922515869
    7. '   ' → logprob: -7.164022922515869
    8. 'mid' → logprob: -7.289022922515869
    9. '       ' → logprob: -7.414022922515869
    10. 'dist' → logprob: -7.664022922515869

Token 1704: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.539647102355957
    2. '(r' → logprob: -1.789647102355957
    3. '1' → logprob: -2.289647102355957
    4. ' (' → logprob: -2.414647102355957
    5. 'down' → logprob: -2.664647102355957
    6. '   ' → logprob: -3.039647102355957
    7. ' or' → logprob: -3.164647102355957
    8. ' ->' → logprob: -3.539647102355957
    9. 'r' → logprob: -3.539647102355957
    10. '(' → logprob: -3.664647102355957

Token 1705: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.07678993046283722
    2. 'min' → logprob: -3.5767898559570312
    3. ' med' → logprob: -3.7017898559570312
    4. 'mid' → logprob: -4.076789855957031
    5. 'max' → logprob: -6.326789855957031
    6. ' min' → logprob: -6.326789855957031
    7. ' mid' → logprob: -8.326789855957031
    8. '   ' → logprob: -8.826789855957031
    9. 'median' → logprob: -9.076789855957031
    10. 'r' → logprob: -9.826789855957031

Token 1706: ' first' (ID: 1577)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6375796794891357
    2. '   ' → logprob: -1.7625796794891357
    3. '       ' → logprob: -2.2625796794891357
    4. ' +' → logprob: -2.5125796794891357
    5. 'med' → logprob: -2.6375796794891357
    6. '           ' → logprob: -2.7625796794891357
    7. '+' → logprob: -3.0125796794891357
    8. ' and' → logprob: -3.1375796794891357
    9. ')' → logprob: -3.1375796794891357
    10. 'd' → logprob: -3.2625796794891357

Token 1707: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.129146695137024
    2. ' +' → logprob: -1.129146695137024
    3. ')' → logprob: -1.754146695137024
    4. '   ' → logprob: -3.1291465759277344
    5. ',' → logprob: -3.5041465759277344
    6. '+' → logprob: -3.5041465759277344
    7. '           ' → logprob: -3.7541465759277344
    8. ' and' → logprob: -4.254146575927734
    9. ':' → logprob: -4.879146575927734
    10. '1' → logprob: -5.879146575927734

Token 1708: ' down' (ID: 1917)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.447561651468277
    2. 'down' → logprob: -1.5725616216659546
    3. ' down' → logprob: -2.447561740875244
    4. ' mid' → logprob: -2.822561740875244
    5. 'max' → logprob: -6.322561740875244
    6. '   ' → logprob: -6.572561740875244
    7. '
' → logprob: -6.822561740875244
    8. 'up' → logprob: -7.572561740875244
    9. '```' → logprob: -7.822561740875244
    10. '(mid' → logprob: -8.197561264038086

Token 1709: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8131887316703796
    2. ')' → logprob: -1.3131887912750244
    3. '   ' → logprob: -2.5631887912750244
    4. '           ' → logprob: -2.8131887912750244
    5. ' +' → logprob: -2.9381887912750244
    6. ':' → logprob: -4.313188552856445
    7. ',' → logprob: -4.688188552856445
    8. ' or' → logprob: -4.938188552856445
    9. '1' → logprob: -5.063188552856445
    10. ' ' → logprob: -5.313188552856445

Token 1710: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00016599490481894463
    2. 'min' → logprob: -9.875165939331055
    3. ' mid' → logprob: -10.000165939331055
    4. 'max' → logprob: -10.250165939331055
    5. 'med' → logprob: -10.375165939331055
    6. '   ' → logprob: -13.750165939331055
    7. '
' → logprob: -14.750165939331055
    8. '(mid' → logprob: -14.875165939331055
    9. ' ' → logprob: -15.250165939331055
    10. 'abs' → logprob: -16.125165939331055

Token 1711: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46911346912384033
    2. '   ' → logprob: -2.344113349914551
    3. ')' → logprob: -2.719113349914551
    4. '1' → logprob: -3.219113349914551
    5. '           ' → logprob: -3.469113349914551
    6. ':' → logprob: -3.594113349914551
    7. ',' → logprob: -4.219113349914551
    8. ' +' → logprob: -4.344113349914551
    9. '):' → logprob: -4.469113349914551
    10. '```' → logprob: -4.594113349914551

Token 1712: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9834051728248596
    2. '           ' → logprob: -1.1084051132202148
    3. '#' → logprob: -2.358405113220215
    4. '\n' → logprob: -3.608405113220215
    5. '```' → logprob: -3.733405113220215
    6. '               ' → logprob: -4.233405113220215
    7. '[' → logprob: -4.233405113220215
    8. '(' → logprob: -4.483405113220215
    9. '[
' → logprob: -4.608405113220215
    10. '``' → logprob: -4.733405113220215

Token 1713: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6241390705108643
    2. '       ' → logprob: -1.3741390705108643
    3. '           ' → logprob: -2.6241390705108643
    4. '(' → logprob: -3.4991390705108643
    5. '1' → logprob: -4.124138832092285
    6. 'r' → logprob: -4.499138832092285
    7. ' #' → logprob: -4.749138832092285
    8. '   ' → logprob: -4.749138832092285
    9. '"' → logprob: -4.874138832092285
    10. '               ' → logprob: -5.249138832092285

Token 1714: ' cost' (ID: 3097)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2811688780784607
    2. '       ' → logprob: -2.1561689376831055
    3. ' #' → logprob: -3.4061689376831055
    4. ' (' → logprob: -3.7811689376831055
    5. '(' → logprob: -4.5311689376831055
    6. '```' → logprob: -4.6561689376831055
    7. '1' → logprob: -5.1561689376831055
    8. '   ' → logprob: -5.1561689376831055
    9. '`' → logprob: -5.2811689376831055
    10. '           ' → logprob: -5.2811689376831055

Token 1715: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6498063802719116
    2. ' =' → logprob: -0.7748063802719116
    3. ' +' → logprob: -4.899806499481201
    4. '+' → logprob: -5.399806499481201
    5. '1' → logprob: -6.274806499481201
    6. '       ' → logprob: -7.399806499481201
    7. '   ' → logprob: -7.649806499481201
    8. '```' → logprob: -7.649806499481201
    9. '(r' → logprob: -8.149806022644043
    10. 'r' → logprob: -8.274806022644043

Token 1716: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10069884359836578
    2. '=' → logprob: -2.350698947906494
    3. ' +' → logprob: -8.475698471069336
    4. '1' → logprob: -8.850698471069336
    5. '+' → logprob: -9.850698471069336
    6. '```' → logprob: -10.350698471069336
    7. ')' → logprob: -11.100698471069336
    8. '   ' → logprob: -11.850698471069336
    9. '
' → logprob: -12.225698471069336
    10. '       ' → logprob: -12.850698471069336

Token 1717: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.08189162611961365
    2. ' abs' → logprob: -2.5818915367126465
    3. '(abs' → logprob: -5.9568915367126465
    4. '   ' → logprob: -8.581892013549805
    5. 'r' → logprob: -10.331892013549805
    6. '`' → logprob: -10.456892013549805
    7. ' (' → logprob: -10.581892013549805
    8. ' ' → logprob: -10.831892013549805
    9. '1' → logprob: -10.956892013549805
    10. '(' → logprob: -11.081892013549805

Token 1718: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0011490292381495237
    2. 'r' → logprob: -7.1261491775512695
    3. '(' → logprob: -8.00114917755127
    4. ' (' → logprob: -11.87614917755127
    5. '(
' → logprob: -14.25114917755127
    6. '```' → logprob: -14.50114917755127
    7. '   ' → logprob: -15.37614917755127
    8. '`' → logprob: -15.50114917755127
    9. '+' → logprob: -15.62614917755127
    10. ' r' → logprob: -16.251148223876953

Token 1719: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.12258882028982e-05
    2. '(' → logprob: -11.25006103515625
    3. '[' → logprob: -11.25006103515625
    4. 'r' → logprob: -11.87506103515625
    5. ' ' → logprob: -12.00006103515625
    6. '(r' → logprob: -12.00006103515625
    7. ')' → logprob: -12.62506103515625
    8. ' +' → logprob: -13.25006103515625
    9. '[r' → logprob: -13.50006103515625
    10. ',' → logprob: -13.62506103515625

Token 1720: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0030487736221402884
    2. '-' → logprob: -5.878048896789551
    3. '-r' → logprob: -8.87804889678955
    4. '1' → logprob: -9.75304889678955
    5. '-med' → logprob: -10.75304889678955
    6. ')' → logprob: -11.75304889678955
    7. '-m' → logprob: -11.75304889678955
    8. ' ' → logprob: -12.87804889678955
    9. ' -
' → logprob: -13.37804889678955
    10. 'r' → logprob: -14.50304889678955

Token 1721: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.0022786001209169626
    2. 'min' → logprob: -6.502278804779053
    3. ' med' → logprob: -7.877278804779053
    4. 'S' → logprob: -8.002278327941895
    5. ' S' → logprob: -11.627278327941895
    6. '   ' → logprob: -11.752278327941895
    7. 's' → logprob: -12.127278327941895
    8. 'median' → logprob: -12.127278327941895
    9. 'medi' → logprob: -12.377278327941895
    10. 'm' → logprob: -12.752278327941895

Token 1722: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00376101303845644
    2. ')+' → logprob: -5.628760814666748
    3. '1' → logprob: -10.253761291503906
    4. '```' → logprob: -10.378761291503906
    5. ')
' → logprob: -10.628761291503906
    6. ' )' → logprob: -10.753761291503906
    7. '+' → logprob: -10.878761291503906
    8. ' +' → logprob: -12.503761291503906
    9. '   ' → logprob: -12.628761291503906
    10. '       ' → logprob: -12.878761291503906

Token 1723: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3625567555427551
    2. '+' → logprob: -1.3625566959381104
    3. ')' → logprob: -3.3625566959381104
    4. ')+' → logprob: -5.9875569343566895
    5. '1' → logprob: -6.1125569343566895
    6. '+
' → logprob: -6.1125569343566895
    7. '       ' → logprob: -6.3625569343566895
    8. '-' → logprob: -6.9875569343566895
    9. ' +
' → logprob: -6.9875569343566895
    10. '```' → logprob: -6.9875569343566895

Token 1724: ' (' (ID: 350)
  Prédit: '(mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.003120079403743148
    2. 'mid' → logprob: -6.878119945526123
    3. ' (' → logprob: -7.003119945526123
    4. '(min' → logprob: -7.753119945526123
    5. '(m' → logprob: -8.128120422363281
    6. '(r' → logprob: -8.753120422363281
    7. '(abs' → logprob: -9.253120422363281
    8. 'abs' → logprob: -9.878120422363281
    9. '(' → logprob: -10.253120422363281
    10. '(max' → logprob: -10.378120422363281

Token 1725: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.005015059374272823
    2. '(mid' → logprob: -5.380014896392822
    3. 'abs' → logprob: -9.00501537322998
    4. 'max' → logprob: -9.00501537322998
    5. 'min' → logprob: -9.88001537322998
    6. 'med' → logprob: -10.63001537322998
    7. '   ' → logprob: -10.63001537322998
    8. ' mid' → logprob: -11.13001537322998
    9. '(m' → logprob: -11.38001537322998
    10. 'r' → logprob: -12.13001537322998

Token 1726: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12695373594760895
    2. '-' → logprob: -2.1269538402557373
    3. ')' → logprob: -11.501954078674316
    4. '-med' → logprob: -11.501954078674316
    5. '-r' → logprob: -13.626954078674316
    6. ' ' → logprob: -13.626954078674316
    7. 'med' → logprob: -13.751954078674316
    8. '-min' → logprob: -14.876954078674316
    9. '-medi' → logprob: -15.126954078674316
    10. '```' → logprob: -15.251954078674316

Token 1727: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -7.941850526549388e-06
    2. ' med' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.25000762939453
    4. 'medi' → logprob: -18.50000762939453
    5. 'met' → logprob: -19.25000762939453
    6. 'mediate' → logprob: -19.75000762939453
    7. 'median' → logprob: -20.00000762939453
    8. 'mad' → logprob: -20.75000762939453
    9. 'min' → logprob: -20.75000762939453
    10. '_med' → logprob: -20.87500762939453

Token 1728: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013535681646317244
    2. ')+' → logprob: -6.751353740692139
    3. '+' → logprob: -9.37635326385498
    4. ')
' → logprob: -10.00135326385498
    5. '```' → logprob: -10.50135326385498
    6. ' +' → logprob: -11.50135326385498
    7. ' )' → logprob: -12.25135326385498
    8. ')*' → logprob: -13.25135326385498
    9. '   ' → logprob: -13.25135326385498
    10. '       ' → logprob: -13.50135326385498

Token 1729: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5598090887069702
    2. ' +' → logprob: -2.0598092079162598
    3. '+
' → logprob: -2.1848092079162598
    4. '
' → logprob: -2.4348092079162598
    5. '       ' → logprob: -3.0598092079162598
    6. '-' → logprob: -3.9348092079162598
    7. '```' → logprob: -4.80980920791626
    8. '\n' → logprob: -5.18480920791626
    9. ')' → logprob: -5.55980920791626
    10. '   ' → logprob: -5.80980920791626

Token 1730: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04304669052362442
    2. ' abs' → logprob: -3.168046712875366
    3. '(abs' → logprob: -10.043046951293945
    4. '```' → logprob: -13.918046951293945
    5. '   ' → logprob: -14.293046951293945
    6. '+' → logprob: -14.793046951293945
    7. '
' → logprob: -14.918046951293945
    8. 'r' → logprob: -14.918046951293945
    9. ' (' → logprob: -15.668046951293945
    10. ' +' → logprob: -15.668046951293945

Token 1731: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.004107373300939798
    2. 'r' → logprob: -5.504107475280762
    3. '(' → logprob: -10.504107475280762
    4. '(
' → logprob: -14.379107475280762
    5. '```' → logprob: -14.754107475280762
    6. ' (' → logprob: -14.879107475280762
    7. ' r' → logprob: -16.629106521606445
    8. '   ' → logprob: -17.629106521606445
    9. '[r' → logprob: -18.254106521606445
    10. '	r' → logprob: -18.504106521606445

Token 1732: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.009250100702047348
    2. 'r' → logprob: -4.759250164031982
    3. '2' → logprob: -7.884250164031982
    4. '1' → logprob: -8.759249687194824
    5. '(r' → logprob: -10.384249687194824
    6. 's' → logprob: -10.384249687194824
    7. '```' → logprob: -11.384249687194824
    8. '[r' → logprob: -12.259249687194824
    9. '_r' → logprob: -12.509249687194824
    10. 'c' → logprob: -13.009249687194824

Token 1733: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006737035233527422
    2. '-' → logprob: -5.006737232208252
    3. '-med' → logprob: -11.006736755371094
    4. ' ' → logprob: -13.631736755371094
    5. ' ' → logprob: -14.006736755371094
    6. ' med' → logprob: -14.256736755371094
    7. '[' → logprob: -14.256736755371094
    8. 'med' → logprob: -14.381736755371094
    9. '-m' → logprob: -14.631736755371094
    10. ')' → logprob: -15.756736755371094

Token 1734: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.030459553003311157
    2. 'med' → logprob: -3.5304596424102783
    3. ' mid' → logprob: -7.905459403991699
    4. 'r' → logprob: -8.1554594039917
    5. ' med' → logprob: -10.4054594039917
    6. 'median' → logprob: -11.9054594039917
    7. 'min' → logprob: -12.2804594039917
    8. '(mid' → logprob: -13.1554594039917
    9. '[mid' → logprob: -13.4054594039917
    10. 'm' → logprob: -13.5304594039917

Token 1735: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.22673016786575317
    2. ')' → logprob: -1.6017301082611084
    3. '```' → logprob: -7.8517303466796875
    4. ')
' → logprob: -8.101730346679688
    5. '   ' → logprob: -8.476730346679688
    6. '``' → logprob: -9.226730346679688
    7. ')\' → logprob: -9.351730346679688
    8. '       ' → logprob: -9.726730346679688
    9. ')

' → logprob: -10.101730346679688
    10. '+' → logprob: -10.101730346679688

Token 1736: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5711508989334106
    2. '
' → logprob: -1.6961508989334106
    3. '       ' → logprob: -1.9461508989334106
    4. ' +' → logprob: -4.071150779724121
    5. '```' → logprob: -4.196150779724121
    6. '`
' → logprob: -4.446150779724121
    7. '1' → logprob: -4.571150779724121
    8. '``' → logprob: -4.571150779724121
    9. '   ' → logprob: -5.071150779724121
    10. '#' → logprob: -5.071150779724121

Token 1737: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.209621548652649
    2. '#' (adapté à ' #') → logprob: -1.709621548652649
    3. '\n' → logprob: -1.834621548652649
    4. '```' → logprob: -2.2096214294433594
    5. '``' → logprob: -2.3346214294433594
    6. '
' → logprob: -2.8346214294433594
    7. ' +' → logprob: -3.5846214294433594
    8. '   ' → logprob: -4.709621429443359
    9. '`
' → logprob: -4.834621429443359
    10. '1' → logprob: -4.834621429443359

Token 1738: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32545706629753113
    2. '``' → logprob: -2.4504570960998535
    3. '```' → logprob: -2.5754570960998535
    4. '   ' → logprob: -3.2004570960998535
    5. 'cost' → logprob: -4.0754570960998535
    6. '\n' → logprob: -4.2004570960998535
    7. '
' → logprob: -4.4504570960998535
    8. '#' → logprob: -4.9504570960998535
    9. '           ' → logprob: -4.9504570960998535
    10. ',' → logprob: -5.0754570960998535

Token 1739: '2' (ID: 17)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.4123038053512573
    2. '       ' → logprob: -1.5373038053512573
    3. '#' → logprob: -1.7873038053512573
    4. '```' → logprob: -2.037303924560547
    5. '   ' → logprob: -2.412303924560547
    6. '``' → logprob: -3.412303924560547
    7. '1' → logprob: -3.537303924560547
    8. '
' → logprob: -3.662303924560547
    9. '+' → logprob: -3.787303924560547
    10. 'r' → logprob: -4.412303924560547

Token 1740: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21100540459156036
    2. 'abs' → logprob: -1.961005449295044
    3. ' =' → logprob: -3.961005449295044
    4. '=' → logprob: -4.586005210876465
    5. '(abs' → logprob: -4.711005210876465
    6. 'cost' → logprob: -5.336005210876465
    7. '   ' → logprob: -6.086005210876465
    8. ' (' → logprob: -6.711005210876465
    9. ' abs' → logprob: -7.211005210876465
    10. '```' → logprob: -7.836005210876465

Token 1741: ' up' (ID: 869)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -9.710618905955926e-05
    2. '
' → logprob: -10.375097274780273
    3. 'mid' → logprob: -10.750097274780273
    4. 'cost' → logprob: -10.875097274780273
    5. '(abs' → logprob: -11.375097274780273
    6. ' abs' → logprob: -11.375097274780273
    7. '   ' → logprob: -13.750097274780273
    8. '```' → logprob: -14.500097274780273
    9. '       ' → logprob: -15.625097274780273
    10. 'min' → logprob: -16.250097274780273

Token 1742: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.8145636916160583
    2. '(r' → logprob: -0.8145636916160583
    3. 'down' → logprob: -3.064563751220703
    4. '   ' → logprob: -3.689563751220703
    5. ')' → logprob: -4.689563751220703
    6. ' to' → logprob: -4.939563751220703
    7. 'r' → logprob: -5.564563751220703
    8. 'mid' → logprob: -5.564563751220703
    9. '(' → logprob: -5.814563751220703
    10. '       ' → logprob: -5.939563751220703

Token 1743: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.09037771075963974
    2. 'med' → logprob: -2.5903778076171875
    3. 'min' → logprob: -5.3403778076171875
    4. 'max' → logprob: -5.7153778076171875
    5. 'abs' → logprob: -6.2153778076171875
    6. ' mid' → logprob: -7.4653778076171875
    7. '   ' → logprob: -8.340377807617188
    8. ' ' → logprob: -8.465377807617188
    9. 'r' → logprob: -9.090377807617188
    10. ' med' → logprob: -9.840377807617188

Token 1744: ' first' (ID: 1577)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4164822101593018
    2. '```' → logprob: -1.6664822101593018
    3. ' +' → logprob: -2.0414822101593018
    4. ' =' → logprob: -2.4164822101593018
    5. '``' → logprob: -2.5414822101593018
    6. '+' → logprob: -2.7914822101593018
    7. ')' → logprob: -2.9164822101593018
    8. ',' → logprob: -3.1664822101593018
    9. '   ' → logprob: -3.5414822101593018
    10. 'cost' → logprob: -3.5414822101593018

Token 1745: ' then' (ID: 1815)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4829275608062744
    2. ' +' → logprob: -1.4829275608062744
    3. 'cost' → logprob: -2.1079275608062744
    4. '```' → logprob: -2.2329275608062744
    5. '=' → logprob: -2.9829275608062744
    6. '+' → logprob: -3.1079275608062744
    7. '       ' → logprob: -3.2329275608062744
    8. '   ' → logprob: -3.4829275608062744
    9. '#' → logprob: -3.6079275608062744
    10. ')' → logprob: -3.9829275608062744

Token 1746: ' down' (ID: 1917)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.05802711099386215
    2. ' med' → logprob: -3.1830270290374756
    3. 'abs' → logprob: -4.683027267456055
    4. ' abs' → logprob: -6.058027267456055
    5. '(' → logprob: -6.558027267456055
    6. 'min' → logprob: -7.308027267456055
    7. ' (' → logprob: -7.933027267456055
    8. ' ' → logprob: -8.308027267456055
    9. '(abs' → logprob: -8.558027267456055
    10. '   ' → logprob: -9.183027267456055

Token 1747: ' to' (ID: 316)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.4975680112838745
    2. '```' → logprob: -1.9975680112838745
    3. ' (' → logprob: -2.247568130493164
    4. '(' → logprob: -2.997568130493164
    5. ')' → logprob: -4.122568130493164
    6. '``' → logprob: -4.372568130493164
    7. '<|end|>' → logprob: -4.372568130493164
    8. ' med' → logprob: -5.122568130493164
    9. ' =' → logprob: -5.622568130493164
    10. '(mid' → logprob: -5.622568130493164

Token 1748: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.0004926258116029203
    2. ' med' → logprob: -7.625492572784424
    3. '
' → logprob: -13.375493049621582
    4. ' ' → logprob: -13.375493049621582
    5. 'min' → logprob: -14.125493049621582
    6. '   ' → logprob: -14.875493049621582
    7. 'max' → logprob: -16.125492095947266
    8. 'median' → logprob: -16.125492095947266
    9. '```' → logprob: -16.750492095947266
    10. '     ' → logprob: -16.875492095947266

Token 1749: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7634658813476562
    2. '
' → logprob: -1.8884658813476562
    3. '```' → logprob: -2.0134658813476562
    4. '[
' → logprob: -3.1384658813476562
    5. '``' → logprob: -3.6384658813476562
    6. '           ' → logprob: -3.6384658813476562
    7. '   ' → logprob: -3.7634658813476562
    8. 'cost' → logprob: -3.8884658813476562
    9. ',' → logprob: -4.138465881347656
    10. '#' → logprob: -4.138465881347656

Token 1750: '       ' (ID: 309)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5167380571365356
    2. '#' → logprob: -1.7667380571365356
    3. '       ' → logprob: -2.766737937927246
    4. '```' → logprob: -2.891737937927246
    5. '
' → logprob: -3.516737937927246
    6. '``' → logprob: -4.016737937927246
    7. ' cost' → logprob: -4.266737937927246
    8. '\n' → logprob: -4.266737937927246
    9. '(cost' → logprob: -4.391737937927246
    10. '           ' → logprob: -4.891737937927246

Token 1751: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5747514367103577
    2. '#' (adapté à ' #') → logprob: -2.074751377105713
    3. '```' → logprob: -2.199751377105713
    4. '``' → logprob: -2.574751377105713
    5. '
' → logprob: -3.324751377105713
    6. '       ' → logprob: -4.074751377105713
    7. '(cost' → logprob: -4.324751377105713
    8. '`
' → logprob: -4.574751377105713
    9. ' cost' → logprob: -5.074751377105713
    10. '   ' → logprob: -5.449751377105713

Token 1752: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.20865574479103088
    2. '```' → logprob: -2.458655834197998
    3. '       ' → logprob: -3.458655834197998
    4. '``' → logprob: -3.833655834197998
    5. '(cost' → logprob: -4.083655834197998
    6. 'r' → logprob: -4.833655834197998
    7. '   ' → logprob: -4.958655834197998
    8. '
' → logprob: -5.583655834197998
    9. '#' → logprob: -5.708655834197998
    10. '           ' → logprob: -6.333655834197998

Token 1753: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14863401651382446
    2. '1' → logprob: -2.2736339569091797
    3. '```' → logprob: -4.39863395690918
    4. '[
' → logprob: -4.89863395690918
    5. '+' → logprob: -5.39863395690918
    6. '[' → logprob: -5.52363395690918
    7. '+=' → logprob: -6.14863395690918
    8. '=' → logprob: -6.64863395690918
    9. ')' → logprob: -7.02363395690918
    10. '{' → logprob: -8.02363395690918

Token 1754: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25218018889427185
    2. '=' → logprob: -1.5021802186965942
    3. '```' → logprob: -9.002180099487305
    4. ')' → logprob: -10.252180099487305
    5. '   ' → logprob: -10.627180099487305
    6. ',' → logprob: -11.502180099487305
    7. ' ' → logprob: -11.627180099487305
    8. '#' → logprob: -12.002180099487305
    9. '=
' → logprob: -12.127180099487305
    10. '    ' → logprob: -12.127180099487305

Token 1755: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00013917774776928127
    2. ' abs' → logprob: -9.000139236450195
    3. '(abs' → logprob: -11.375139236450195
    4. '   ' → logprob: -13.000139236450195
    5. '```' → logprob: -14.000139236450195
    6. '
' → logprob: -14.500139236450195
    7. '       ' → logprob: -16.125139236450195
    8. 'r' → logprob: -16.375139236450195
    9. 'mid' → logprob: -16.625139236450195
    10. '``' → logprob: -16.750139236450195

Token 1756: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.12210594862699509
    2. 'r' → logprob: -2.247105836868286
    3. '(mid' → logprob: -4.747106075286865
    4. 'mid' → logprob: -8.122105598449707
    5. '(' → logprob: -8.497105598449707
    6. '(
' → logprob: -10.497105598449707
    7. '(m' → logprob: -11.372105598449707
    8. '(min' → logprob: -12.372105598449707
    9. ' (' → logprob: -12.372105598449707
    10. ' r' → logprob: -12.497105598449707

Token 1757: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4622690975666046
    2. '1' → logprob: -1.0872690677642822
    3. 'r' → logprob: -3.9622690677642822
    4. '2' → logprob: -4.712269306182861
    5. '+' → logprob: -6.087269306182861
    6. '   ' → logprob: -6.712269306182861
    7. 'c' → logprob: -7.712269306182861
    8. 'mid' → logprob: -8.087268829345703
    9. ' +' → logprob: -8.712268829345703
    10. '```' → logprob: -8.837268829345703

Token 1758: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0027133345138281584
    2. '-' → logprob: -6.002713203430176
    3. '-mid' → logprob: -8.627713203430176
    4. '-r' → logprob: -11.127713203430176
    5. ' +' → logprob: -11.377713203430176
    6. '-m' → logprob: -12.252713203430176
    7. '+' → logprob: -12.252713203430176
    8. ' ' → logprob: -12.502713203430176
    9. ')' → logprob: -13.002713203430176
    10. '```' → logprob: -13.127713203430176

Token 1759: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.003675848012790084
    2. ' mid' → logprob: -6.128675937652588
    3. 'med' → logprob: -7.253675937652588
    4. 'max' → logprob: -7.878675937652588
    5. 'min' → logprob: -8.25367546081543
    6. 'r' → logprob: -9.50367546081543
    7. ' med' → logprob: -11.37867546081543
    8. 'm' → logprob: -11.50367546081543
    9. 'median' → logprob: -11.50367546081543
    10. 'abs' → logprob: -12.00367546081543

Token 1760: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032652919180691242
    2. ')+' → logprob: -5.878265380859375
    3. '```' → logprob: -8.878265380859375
    4. '+' → logprob: -9.378265380859375
    5. '-' → logprob: -9.503265380859375
    6. ' )' → logprob: -9.628265380859375
    7. '[' → logprob: -10.003265380859375
    8. ' +' → logprob: -11.003265380859375
    9. ' -' → logprob: -11.753265380859375
    10. '+)' → logprob: -12.753265380859375

Token 1761: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6108394265174866
    2. ')' → logprob: -0.9858394265174866
    3. '+' → logprob: -3.110839366912842
    4. '```' → logprob: -4.735839366912842
    5. '<|end|>' → logprob: -4.985839366912842
    6. '2' → logprob: -5.360839366912842
    7. ' -' → logprob: -5.485839366912842
    8. '-' → logprob: -5.860839366912842
    9. ' ' → logprob: -6.235839366912842
    10. '[' → logprob: -6.485839366912842

Token 1762: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9935144782066345
    2. '(mid' → logprob: -0.9935144782066345
    3. '(m' → logprob: -1.8685145378112793
    4. '(' → logprob: -2.7435145378112793
    5. '(min' → logprob: -3.8685145378112793
    6. '(abs' → logprob: -4.868514537811279
    7. 'abs' → logprob: -4.993514537811279
    8. ' abs' → logprob: -5.993514537811279
    9. 'mid' → logprob: -6.368514537811279
    10. ' mid' → logprob: -8.118514060974121

Token 1763: 'mid' (ID: 23430)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.4914166033267975
    2. 'min' → logprob: -1.241416573524475
    3. 'mid' → logprob: -2.4914166927337646
    4. 'max' → logprob: -4.8664164543151855
    5. 'abs' → logprob: -5.3664164543151855
    6. '(min' → logprob: -5.9914164543151855
    7. 'r' → logprob: -7.4914164543151855
    8. '(' → logprob: -8.241416931152344
    9. '(mid' → logprob: -8.616416931152344
    10. '(m' → logprob: -8.741416931152344

Token 1764: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08900588005781174
    2. '-' → logprob: -2.464005947113037
    3. ')' → logprob: -10.714005470275879
    4. ' ' → logprob: -11.464005470275879
    5. '   ' → logprob: -11.589005470275879
    6. '```' → logprob: -11.714005470275879
    7. 'med' → logprob: -12.339005470275879
    8. '<|end|>' → logprob: -13.089005470275879
    9. '    ' → logprob: -13.214005470275879
    10. '       ' → logprob: -13.964005470275879

Token 1765: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -2.7848862373502925e-05
    2. ' med' → logprob: -10.500027656555176
    3. 'min' → logprob: -15.500027656555176
    4. 'medi' → logprob: -16.875028610229492
    5. 'median' → logprob: -17.125028610229492
    6. '1' → logprob: -17.500028610229492
    7. '_med' → logprob: -17.625028610229492
    8. 'met' → logprob: -18.375028610229492
    9. '0' → logprob: -18.500028610229492
    10. 'mediate' → logprob: -18.750028610229492

Token 1766: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009679184295237064
    2. '```' → logprob: -7.875967979431152
    3. ')+' → logprob: -8.125967979431152
    4. ')*' → logprob: -8.625967979431152
    5. '[' → logprob: -10.125967979431152
    6. ')
' → logprob: -10.250967979431152
    7. '0' → logprob: -11.875967979431152
    8. '``' → logprob: -11.875967979431152
    9. '+' → logprob: -12.500967979431152
    10. ')[' → logprob: -13.000967979431152

Token 1767: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7184520959854126
    2. ' +' → logprob: -1.3434520959854126
    3. 'abs' → logprob: -1.9684520959854126
    4. '+' → logprob: -3.593451976776123
    5. '```' → logprob: -4.218451976776123
    6. '       ' → logprob: -4.593451976776123
    7. '   ' → logprob: -4.843451976776123
    8. ')
' → logprob: -5.343451976776123
    9. '+
' → logprob: -5.468451976776123
    10. ' abs' → logprob: -5.468451976776123

Token 1768: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.06196925416588783
    2. ' abs' → logprob: -2.81196928024292
    3. '(abs' → logprob: -13.936968803405762
    4. '```' → logprob: -14.186968803405762
    5. '.abs' → logprob: -17.811969757080078
    6. '0' → logprob: -18.186969757080078
    7. '_abs' → logprob: -18.436969757080078
    8. '``' → logprob: -18.811969757080078
    9. '`' → logprob: -19.936969757080078
    10. '+' → logprob: -19.936969757080078

Token 1769: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.001327499165199697
    2. 'r' → logprob: -6.7513275146484375
    3. '(' → logprob: -9.251327514648438
    4. ' (' → logprob: -9.751327514648438
    5. '```' → logprob: -14.126327514648438
    6. '(
' → logprob: -14.501327514648438
    7. ' r' → logprob: -14.626327514648438
    8. ')' → logprob: -14.751327514648438
    9. '1' → logprob: -15.251327514648438
    10. '​' → logprob: -16.251327514648438

Token 1770: '3' (ID: 18)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2645600438117981
    2. '3' → logprob: -1.6395599842071533
    3. 'med' → logprob: -3.5145599842071533
    4. 'c' → logprob: -5.139560222625732
    5. '1' → logprob: -6.639560222625732
    6. 'm' → logprob: -7.639560222625732
    7. '```' → logprob: -8.139559745788574
    8. 'mid' → logprob: -8.514559745788574
    9. ' r' → logprob: -9.514559745788574
    10. ')' → logprob: -9.514559745788574

Token 1771: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026346398517489433
    2. '-' → logprob: -3.651346445083618
    3. '```' → logprob: -10.651346206665039
    4. ' ' → logprob: -12.026346206665039
    5. 'r' → logprob: -12.776346206665039
    6. '[' → logprob: -12.901346206665039
    7. 'mid' → logprob: -13.401346206665039
    8. ')' → logprob: -13.651346206665039
    9. '[mid' → logprob: -13.651346206665039
    10. '-mid' → logprob: -13.776346206665039

Token 1772: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.0008583390736021101
    2. ' med' → logprob: -7.125858306884766
    3. 'r' → logprob: -10.125858306884766
    4. 'median' → logprob: -12.500858306884766
    5. 'medi' → logprob: -12.625858306884766
    6. ' r' → logprob: -13.125858306884766
    7. 'm' → logprob: -13.750858306884766
    8. ' ' → logprob: -14.500858306884766
    9. '
' → logprob: -14.625858306884766
    10. ' ' → logprob: -14.625858306884766

Token 1773: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09825076907873154
    2. ')
' → logprob: -2.4732508659362793
    3. '   ' → logprob: -5.598250865936279
    4. '       ' → logprob: -6.223250865936279
    5. '```' → logprob: -6.973250865936279
    6. ')\' → logprob: -7.473250865936279
    7. '+' → logprob: -7.723250865936279
    8. '2' → logprob: -7.973250865936279
    9. '``' → logprob: -8.348250389099121
    10. '           ' → logprob: -8.473250389099121

Token 1774: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11927775293588638
    2. '\n' → logprob: -2.8692777156829834
    3. '```' → logprob: -4.2442779541015625
    4. '#' → logprob: -4.9942779541015625
    5. '\' → logprob: -4.9942779541015625
    6. '
' → logprob: -5.4942779541015625
    7. '   ' → logprob: -5.9942779541015625
    8. ' +' → logprob: -6.3692779541015625
    9. ')' → logprob: -6.3692779541015625
    10. '           ' → logprob: -6.4942779541015625

Token 1775: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20711755752563477
    2. '\n' → logprob: -2.0821175575256348
    3. ' +' → logprob: -4.207117557525635
    4. '```' → logprob: -4.832117557525635
    5. '
' → logprob: -5.082117557525635
    6. '           ' → logprob: -5.207117557525635
    7. '+
' → logprob: -5.582117557525635
    8. '+' → logprob: -5.707117557525635
    9. '   ' → logprob: -5.707117557525635
    10. '\' → logprob: -5.832117557525635

Token 1776: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1926630437374115
    2. '#' → logprob: -1.8176630735397339
    3. '#
' → logprob: -5.067663192749023
    4. '```' → logprob: -5.317663192749023
    5. '           ' → logprob: -7.817663192749023
    6. '``' → logprob: -8.067663192749023
    7. '
' → logprob: -8.817663192749023
    8. '\' → logprob: -9.192663192749023
    9. '   ' → logprob: -9.317663192749023
    10. ' +' → logprob: -9.442663192749023

Token 1777: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12386993318796158
    2. '#' (adapté à ' #') → logprob: -2.4988698959350586
    3. '           ' → logprob: -4.498869895935059
    4. '
' → logprob: -4.998869895935059
    5. '#
' → logprob: -5.498869895935059
    6. 'for' → logprob: -6.373869895935059
    7. '```' → logprob: -6.373869895935059
    8. ' +' → logprob: -6.998869895935059
    9. '   ' → logprob: -6.998869895935059
    10. '               ' → logprob: -7.123869895935059

Token 1778: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05268380045890808
    2. '           ' → logprob: -4.5526838302612305
    3. 'for' → logprob: -5.4276838302612305
    4. '   ' → logprob: -5.5526838302612305
    5. ')' → logprob: -5.8026838302612305
    6. '
' → logprob: -5.8026838302612305
    7. ' for' → logprob: -5.9276838302612305
    8. '\n' → logprob: -5.9276838302612305
    9. ' if' → logprob: -6.0526838302612305
    10. 'if' → logprob: -6.1776838302612305

Token 1779: ' vertical' (ID: 17679)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.03898816183209419
    2. ')' → logprob: -4.66398811340332
    3. '_cost' → logprob: -4.66398811340332
    4. '=' → logprob: -5.28898811340332
    5. '(cost' → logprob: -5.53898811340332
    6. ' =' → logprob: -6.41398811340332
    7. '(
' → logprob: -6.41398811340332
    8. '_' → logprob: -7.53898811340332
    9. '```' → logprob: -7.53898811340332
    10. 'dp' → logprob: -7.66398811340332

Token 1780: ' cost' (ID: 3097)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.7531841993331909
    2. 'path' → logprob: -1.628184199333191
    3. '_cost' → logprob: -2.1281843185424805
    4. 'cost' → logprob: -2.3781843185424805
    5. ' path' → logprob: -3.8781843185424805
    6. '_distance' → logprob: -4.1281843185424805
    7. 'distance' → logprob: -4.1281843185424805
    8. ')' → logprob: -4.5031843185424805
    9. '_' → logprob: -4.5031843185424805
    10. ' +' → logprob: -4.6281843185424805

Token 1781: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3071119785308838
    2. ' +' → logprob: -2.057111978530884
    3. '   ' → logprob: -2.182111978530884
    4. ' if' → logprob: -2.307111978530884
    5. '
' → logprob: -2.682111978530884
    6. ' =' → logprob: -3.182111978530884
    7. '[c' → logprob: -3.307111978530884
    8. ')' → logprob: -3.682111978530884
    9. '           ' → logprob: -3.807111978530884
    10. '[' → logprob: -3.807111978530884

Token 1782: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0008197537390515208
    2. '```' → logprob: -7.375819683074951
    3. ' min' → logprob: -8.87582015991211
    4. '``' → logprob: -10.62582015991211
    5. 'max' → logprob: -11.12582015991211
    6. '`' → logprob: -12.00082015991211
    7. '(min' → logprob: -12.62582015991211
    8. '   ' → logprob: -13.12582015991211
    9. '
' → logprob: -13.62582015991211
    10. '=min' → logprob: -14.12582015991211

Token 1783: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.03805067762732506
    2. 'cost' → logprob: -3.788050651550293
    3. '(abs' → logprob: -5.038050651550293
    4. '(
' → logprob: -5.538050651550293
    5. '(' → logprob: -6.163050651550293
    6. 'abs' → logprob: -6.288050651550293
    7. '```' → logprob: -9.663050651550293
    8. '1' → logprob: -9.663050651550293
    9. '
' → logprob: -10.163050651550293
    10. ' cost' → logprob: -10.788050651550293

Token 1784: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022580904886126518
    2. '(' → logprob: -4.522581100463867
    3. '(cost' → logprob: -5.397581100463867
    4. '(
' → logprob: -5.647581100463867
    5. '2' → logprob: -7.147581100463867
    6. '```' → logprob: -7.647581100463867
    7. ')' → logprob: -8.147581100463867
    8. '(min' → logprob: -8.397581100463867
    9. '
' → logprob: -8.647581100463867
    10. 's' → logprob: -8.772581100463867

Token 1785: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001000059419311583
    2. ' ,' → logprob: -7.750999927520752
    3. ',
' → logprob: -8.50100040435791
    4. '```' → logprob: -9.25100040435791
    5. '1' → logprob: -9.75100040435791
    6. '       ' → logprob: -9.75100040435791
    7. ',min' → logprob: -10.37600040435791
    8. ')' → logprob: -11.00100040435791
    9. '   ' → logprob: -11.12600040435791
    10. '2' → logprob: -11.25100040435791

Token 1786: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.000566137779969722
    2. ' cost' → logprob: -7.500566005706787
    3. 'code' → logprob: -12.250566482543945
    4. '```' → logprob: -12.625566482543945
    5. '       ' → logprob: -13.375566482543945
    6. '   ' → logprob: -13.375566482543945
    7. ')' → logprob: -14.125566482543945
    8. '(cost' → logprob: -14.625566482543945
    9. '
' → logprob: -15.125566482543945
    10. '``' → logprob: -15.250566482543945

Token 1787: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001317871210630983
    2. '1' → logprob: -10.250131607055664
    3. '```' → logprob: -10.875131607055664
    4. ',' → logprob: -11.125131607055664
    5. '``' → logprob: -11.125131607055664
    6. '3' → logprob: -11.375131607055664
    7. ')' → logprob: -11.500131607055664
    8. '
' → logprob: -12.000131607055664
    9. '+' → logprob: -12.875131607055664
    10. ' ' → logprob: -13.000131607055664

Token 1788: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6128959059715271
    2. '       ' → logprob: -1.2378959655761719
    3. ' +' → logprob: -2.237895965576172
    4. '+' → logprob: -3.487895965576172
    5. '
' → logprob: -4.737895965576172
    6. '```' → logprob: -4.862895965576172
    7. ')
' → logprob: -5.237895965576172
    8. '   ' → logprob: -5.237895965576172
    9. '+
' → logprob: -7.487895965576172
    10. ',' → logprob: -7.737895965576172

Token 1789: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04854342341423035
    2. ' +' → logprob: -3.7985434532165527
    3. '
' → logprob: -5.423543453216553
    4. '```' → logprob: -5.673543453216553
    5. ')' → logprob: -5.798543453216553
    6. '+' → logprob: -5.923543453216553
    7. '           ' → logprob: -6.298543453216553
    8. ',' → logprob: -6.798543453216553
    9. 'def' → logprob: -6.923543453216553
    10. '   ' → logprob: -6.923543453216553

Token 1790: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051921945065259933
    2. '
' → logprob: -3.801921844482422
    3. '```' → logprob: -5.301921844482422
    4. 'import' → logprob: -5.926921844482422
    5. '   ' → logprob: -6.051921844482422
    6. 'def' → logprob: -6.301921844482422
    7. '        
' → logprob: -6.301921844482422
    8. '\' → logprob: -6.426921844482422
    9. 'if' → logprob: -6.551921844482422
    10. '           ' → logprob: -6.551921844482422

Token 1791: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014382093213498592
    2. '
' → logprob: -5.5143818855285645
    3. '           ' → logprob: -5.8893818855285645
    4. '<|end|>' → logprob: -6.7643818855285645
    5. ',' → logprob: -7.0143818855285645
    6. ')' → logprob: -7.1393818855285645
    7. '[' → logprob: -7.6393818855285645
    8. '        
' → logprob: -7.6393818855285645
    9. '<|end|>' → logprob: -7.7643818855285645
    10. '\' → logprob: -8.014382362365723

Token 1792: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06590785831212997
    2. 'if' → logprob: -2.9409079551696777
    3. ' if' → logprob: -5.690907955169678
    4. '
' → logprob: -6.440907955169678
    5. 'for' → logprob: -6.565907955169678
    6. '   ' → logprob: -6.690907955169678
    7. '           ' → logprob: -6.690907955169678
    8. 'import' → logprob: -7.940907955169678
    9. 'def' → logprob: -8.19090747833252
    10. '#' (adapté à ' #') → logprob: -8.31590747833252

Token 1793: ' Adding' (ID: 60461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5702755451202393
    2. '   ' → logprob: -1.4452755451202393
    3. '
' → logprob: -2.6952755451202393
    4. '```' → logprob: -3.6952755451202393
    5. 'import' → logprob: -3.9452755451202393
    6. 'for' → logprob: -4.19527530670166
    7. 'dp' → logprob: -4.44527530670166
    8. ' for' → logprob: -4.69527530670166
    9. '`' → logprob: -4.82027530670166
    10. 'if' → logprob: -4.94527530670166

Token 1794: ' putting' (ID: 16019)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8143690824508667
    2. 'len' → logprob: -1.5643690824508667
    3. ' ' → logprob: -2.3143692016601562
    4. ' len' → logprob: -2.9393692016601562
    5. 'number' → logprob: -2.9393692016601562
    6. ' number' → logprob: -3.3143692016601562
    7. 'num' → logprob: -3.3143692016601562
    8. 'books' → logprob: -3.8143692016601562
    9. '   ' → logprob: -4.814369201660156
    10. '(' → logprob: -5.314369201660156

Token 1795: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.3922835886478424
    2. ' books' → logprob: -1.64228355884552
    3. ' all' → logprob: -3.8922836780548096
    4. 'all' → logprob: -4.1422834396362305
    5. '_books' → logprob: -4.1422834396362305
    6. '1' → logprob: -4.2672834396362305
    7. '       ' → logprob: -4.7672834396362305
    8. 's' → logprob: -4.7672834396362305
    9. ' ' → logprob: -5.1422834396362305
    10. '   ' → logprob: -5.1422834396362305

Token 1796: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2349978685379028
    2. '
' → logprob: -1.4849978685379028
    3. '   ' → logprob: -2.1099977493286133
    4. ' =' → logprob: -2.2349977493286133
    5. '```' → logprob: -2.6099977493286133
    6. '[c' → logprob: -3.6099977493286133
    7. 'def' → logprob: -3.9849977493286133
    8. ']' → logprob: -4.359997749328613
    9. '][' → logprob: -4.484997749328613
    10. ')
' → logprob: -4.734997749328613

Token 1797: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1756066232919693
    2. '       ' → logprob: -2.1756067276000977
    3. '   ' → logprob: -4.175606727600098
    4. '```' → logprob: -5.050606727600098
    5. '\n' → logprob: -5.300606727600098
    6. '        
' → logprob: -5.800606727600098
    7. '

' → logprob: -6.300606727600098
    8. '
' → logprob: -6.425606727600098
    9. ':' → logprob: -6.425606727600098
    10. '[' → logprob: -6.675606727600098

Token 1798: ' number' (ID: 2086)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.282893419265747
    2. ' len' → logprob: -2.157893419265747
    3. ' rows' → logprob: -2.282893419265747
    4. '1' → logprob: -2.407893419265747
    5. 'rows' → logprob: -2.657893419265747
    6. ' +' → logprob: -2.782893419265747
    7. '+' → logprob: -3.407893419265747
    8. '       ' → logprob: -3.657893419265747
    9. 'len' → logprob: -3.782893419265747
    10. '   ' → logprob: -3.907893419265747

Token 1799: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.2274280786514282
    2. '+' → logprob: -2.1024279594421387
    3. '*' → logprob: -2.4774279594421387
    4. ')' → logprob: -2.6024279594421387
    5. ' *' → logprob: -2.7274279594421387
    6. ' of' → logprob: -2.8524279594421387
    7. '_of' → logprob: -2.9774279594421387
    8. ' +' → logprob: -3.1024279594421387
    9. '[' → logprob: -3.2274279594421387
    10. '   ' → logprob: -3.9774279594421387

Token 1800: ' books' (ID: 7187)
  Prédit: ' books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' books' → logprob: -0.5195549726486206
    2. 'books' → logprob: -1.5195549726486206
    3. ' rows' → logprob: -2.14455509185791
    4. 'rows' → logprob: -3.39455509185791
    5. ' required' → logprob: -4.01955509185791
    6. ' ' → logprob: -4.89455509185791
    7. 'required' → logprob: -5.76955509185791
    8. '_books' → logprob: -6.89455509185791
    9. '_rows' → logprob: -7.01955509185791
    10. ' s' → logprob: -7.39455509185791

Token 1801: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7225056290626526
    2. '   ' → logprob: -1.2225055694580078
    3. '
' → logprob: -2.347505569458008
    4. ' =' → logprob: -4.222505569458008
    5. '```' → logprob: -4.222505569458008
    6. '[' → logprob: -4.597505569458008
    7. '        
' → logprob: -4.722505569458008
    8. '\n' → logprob: -4.847505569458008
    9. '`
' → logprob: -5.222505569458008
    10. ']' → logprob: -5.222505569458008

Token 1802: ' col' (ID: 996)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06442809104919434
    2. ' c' → logprob: -2.8144280910491943
    3. 'col' → logprob: -6.314428329467773
    4. ' col' → logprob: -8.064428329467773
    5. 'current' → logprob: -9.064428329467773
    6. '```' → logprob: -9.064428329467773
    7. 'column' → logprob: -10.189428329467773
    8. ' current' → logprob: -10.439428329467773
    9. ' column' → logprob: -12.064428329467773
    10. '+' → logprob: -12.689428329467773

Token 1803: ' c' (ID: 274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6470858454704285
    2. '       ' → logprob: -1.8970859050750732
    3. ']' → logprob: -2.6470859050750732
    4. '   ' → logprob: -2.6470859050750732
    5. ')' → logprob: -2.8970859050750732
    6. ')
' → logprob: -3.6470859050750732
    7. '][' → logprob: -4.022085666656494
    8. '           ' → logprob: -4.397085666656494
    9. ']
' → logprob: -4.647085666656494
    10. ' +' → logprob: -5.147085666656494

Token 1804: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7263254523277283
    2. '
' → logprob: -1.226325511932373
    3. '   ' → logprob: -1.976325511932373
    4. '        
' → logprob: -3.851325511932373
    5. ' =' → logprob: -4.101325511932373
    6. '    
' → logprob: -4.726325511932373
    7. '```' → logprob: -5.226325511932373
    8. '

' → logprob: -5.851325511932373
    9. '`
' → logprob: -5.851325511932373
    10. ' 
' → logprob: -6.101325511932373

Token 1805: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29515859484672546
    2. ' +' → logprob: -2.420158624649048
    3. '
' → logprob: -4.045158386230469
    4. '   ' → logprob: -4.045158386230469
    5. ' *' → logprob: -4.045158386230469
    6. ' =' → logprob: -4.170158386230469
    7. '```' → logprob: -4.420158386230469
    8. '           ' → logprob: -4.795158386230469
    9. ')' → logprob: -4.920158386230469
    10. ',' → logprob: -5.045158386230469

Token 1806: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05931301414966583
    2. '
' → logprob: -3.4343130588531494
    3. '        
' → logprob: -4.93431282043457
    4. '```' → logprob: -5.68431282043457
    5. '           ' → logprob: -5.80931282043457
    6. ',' → logprob: -6.55931282043457
    7. ')' → logprob: -7.05931282043457
    8. ' +' → logprob: -7.18431282043457
    9. '   ' → logprob: -7.18431282043457
    10. '\n' → logprob: -7.30931282043457

Token 1807: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00823783129453659
    2. '
' → logprob: -5.883237838745117
    3. '           ' → logprob: -6.633237838745117
    4. '        
' → logprob: -6.633237838745117
    5. '   ' → logprob: -7.508237838745117
    6. 'import' → logprob: -8.008237838745117
    7. 'def' → logprob: -8.133237838745117
    8. ',' → logprob: -8.883237838745117
    9. ')' → logprob: -8.883237838745117
    10. '#' → logprob: -8.883237838745117

Token 1808: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00752889784052968
    2. '           ' → logprob: -5.757528781890869
    3. '
' → logprob: -6.507528781890869
    4. '   ' → logprob: -7.507528781890869
    5. '        
' → logprob: -8.007529258728027
    6. '```' → logprob: -8.007529258728027
    7. ',' → logprob: -8.257529258728027
    8. 'for' → logprob: -8.382529258728027
    9. ' for' → logprob: -8.507529258728027
    10. '\' → logprob: -8.882529258728027

Token 1809: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03368350490927696
    2. '           ' → logprob: -5.2836833000183105
    3. '   ' → logprob: -5.2836833000183105
    4. '
' → logprob: -5.4086833000183105
    5. '\n' → logprob: -5.7836833000183105
    6. '        ' → logprob: -6.5336833000183105
    7. '```' → logprob: -6.5336833000183105
    8. '[' → logprob: -6.9086833000183105
    9. '        
' → logprob: -6.9086833000183105
    10. '"\' → logprob: -6.9086833000183105

Token 1810: ' moving' (ID: 10067)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28103435039520264
    2. ' for' → logprob: -1.7810343503952026
    3. '       ' → logprob: -3.531034469604492
    4. 'dp' → logprob: -4.281034469604492
    5. 'range' → logprob: -5.156034469604492
    6. 'prev' → logprob: -5.531034469604492
    7. '
' → logprob: -5.781034469604492
    8. ' dp' → logprob: -5.781034469604492
    9. '           ' → logprob: -6.031034469604492
    10. ' range' → logprob: -6.156034469604492

Token 1811: ' horizontally' (ID: 113653)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.13006283342838287
    2. ' right' → logprob: -2.3800628185272217
    3. 'from' → logprob: -4.505063056945801
    4. 'r' → logprob: -5.505063056945801
    5. ' from' → logprob: -5.505063056945801
    6. ' to' → logprob: -5.630063056945801
    7. 'to' → logprob: -5.630063056945801
    8. '   ' → logprob: -6.755063056945801
    9. '1' → logprob: -8.1300630569458
    10. ')' → logprob: -8.1300630569458

Token 1812: ' from' (ID: 591)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.47954636812210083
    2. '[' → logprob: -2.229546308517456
    3. '   ' → logprob: -2.354546308517456
    4. '[
' → logprob: -2.854546308517456
    5. '       ' → logprob: -3.229546308517456
    6. '\n' → logprob: -4.479546546936035
    7. '```' → logprob: -4.729546546936035
    8. ']' → logprob: -4.729546546936035
    9. '][' → logprob: -5.354546546936035
    10. ')
' → logprob: -5.729546546936035

Token 1813: ' col' (ID: 996)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06093668192625046
    2. 'c' → logprob: -2.935936689376831
    3. '(r' → logprob: -6.060936450958252
    4. 'intersection' → logprob: -6.810936450958252
    5. '(c' → logprob: -7.185936450958252
    6. ' r' → logprob: -7.685936450958252
    7. 'temp' → logprob: -7.810936450958252
    8. 'current' → logprob: -8.18593692779541
    9. '   ' → logprob: -8.56093692779541
    10. ' c' → logprob: -9.18593692779541

Token 1814: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13837379217147827
    2. ' c' → logprob: -2.138373851776123
    3. '+' → logprob: -4.763373851776123
    4. ' +' → logprob: -6.138373851776123
    5. '   ' → logprob: -8.638373374938965
    6. '+c' → logprob: -8.763373374938965
    7. ' ' → logprob: -9.763373374938965
    8. '_c' → logprob: -10.263373374938965
    9. '	c' → logprob: -10.263373374938965
    10. '    ' → logprob: -10.388373374938965

Token 1815: ' intersection' (ID: 42002)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1474170982837677
    2. '[c' → logprob: -3.2724170684814453
    3. '][' → logprob: -3.8974170684814453
    4. ' +' → logprob: -4.022417068481445
    5. '[' → logprob: -4.397417068481445
    6. ']' → logprob: -4.772417068481445
    7. '```' → logprob: -5.272417068481445
    8. '[
' → logprob: -5.272417068481445
    9. ')' → logprob: -5.397417068481445
    10. '       ' → logprob: -5.522417068481445

Token 1816: ' r' (ID: 428)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.8841751217842102
    2. '[' → logprob: -1.3841750621795654
    3. '[
' → logprob: -2.3841750621795654
    4. '   ' → logprob: -2.5091750621795654
    5. '```' → logprob: -3.6341750621795654
    6. ' +' → logprob: -3.8841750621795654
    7. '+' → logprob: -4.0091753005981445
    8. '       ' → logprob: -4.1341753005981445
    9. ')' → logprob: -4.2591753005981445
    10. '`' → logprob: -4.2591753005981445

Token 1817: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19369930028915405
    2. '2' → logprob: -2.318699359893799
    3. ',' → logprob: -3.568699359893799
    4. '+' → logprob: -4.318699359893799
    5. 'ow' → logprob: -4.568699359893799
    6. ']' → logprob: -5.318699359893799
    7. '```' → logprob: -5.318699359893799
    8. '[' → logprob: -5.568699359893799
    9. 'o' → logprob: -5.693699359893799
    10. '   ' → logprob: -6.693699359893799

Token 1818: ' to' (ID: 316)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.9860156178474426
    2. ']' → logprob: -1.4860155582427979
    3. '[c' → logprob: -2.236015558242798
    4. '+' → logprob: -2.736015558242798
    5. '[
' → logprob: -3.111015558242798
    6. '[' → logprob: -3.361015558242798
    7. '[r' → logprob: -3.486015558242798
    8. '       ' → logprob: -4.236015796661377
    9. ')' → logprob: -4.236015796661377
    10. '   ' → logprob: -4.861015796661377

Token 1819: ' col' (ID: 996)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0026387954130768776
    2. 'intersection' → logprob: -6.377638816833496
    3. ' r' → logprob: -7.877638816833496
    4. 'c' → logprob: -8.502638816833496
    5. 'col' → logprob: -8.877638816833496
    6. ' intersection' → logprob: -9.752638816833496
    7. 'row' → logprob: -9.752638816833496
    8. 'next' → logprob: -10.377638816833496
    9. 'the' → logprob: -10.627638816833496
    10. 'inter' → logprob: -11.377638816833496

Token 1820: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026375776156783104
    2. ' c' → logprob: -3.6513757705688477
    3. '+' → logprob: -10.526375770568848
    4. '   ' → logprob: -11.276375770568848
    5. ' ' → logprob: -11.776375770568848
    6. '3' → logprob: -12.276375770568848
    7. '`' → logprob: -12.651375770568848
    8. ' +' → logprob: -12.651375770568848
    9. '	c' → logprob: -13.026375770568848
    10. ')c' → logprob: -13.151375770568848

Token 1821: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0018641414353623986
    2. 'r' → logprob: -7.126863956451416
    3. ' +' → logprob: -7.376863956451416
    4. '1' → logprob: -8.626864433288574
    5. '+r' → logprob: -8.876864433288574
    6. '```' → logprob: -9.626864433288574
    7. '+
' → logprob: -11.501864433288574
    8. '3' → logprob: -11.626864433288574
    9. '++' → logprob: -11.751864433288574
    10. '   ' → logprob: -12.126864433288574

Token 1822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.141186450899113e-05
    2. '0' → logprob: -11.875020980834961
    3. '3' → logprob: -12.000020980834961
    4. '+' → logprob: -12.625020980834961
    5. '   ' → logprob: -13.250020980834961
    6. ' ' → logprob: -13.375020980834961
    7. '.' → logprob: -14.625020980834961
    8. 'r' → logprob: -15.000020980834961
    9. '```' → logprob: -15.000020980834961
    10. '  ' → logprob: -15.875020980834961

Token 1823: ' intersection' (ID: 42002)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.489669919013977
    2. '   ' → logprob: -1.864669919013977
    3. '[
' → logprob: -2.1146697998046875
    4. '       ' → logprob: -2.2396697998046875
    5. '[c' → logprob: -2.4896697998046875
    6. '[' → logprob: -2.7396697998046875
    7. '][' → logprob: -3.2396697998046875
    8. ')' → logprob: -3.3646697998046875
    9. '```' → logprob: -3.8646697998046875
    10. '
' → logprob: -3.8646697998046875

Token 1824: ' r' (ID: 428)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.2410505712032318
    2. '[' → logprob: -1.7410506010055542
    3. '(r' → logprob: -4.616050720214844
    4. '[
' → logprob: -4.866050720214844
    5. '   ' → logprob: -5.116050720214844
    6. '(' → logprob: -5.866050720214844
    7. 'r' → logprob: -5.991050720214844
    8. '```' → logprob: -6.366050720214844
    9. '	' → logprob: -6.741050720214844
    10. '       ' → logprob: -6.991050720214844

Token 1825: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.869017852295656e-06
    2. '2' → logprob: -12.250006675720215
    3. '_' → logprob: -14.250006675720215
    4. '1' → logprob: -14.750006675720215
    5. '+' → logprob: -14.750006675720215
    6. '```' → logprob: -14.750006675720215
    7. '   ' → logprob: -16.62500762939453
    8. '``' → logprob: -17.50000762939453
    9. ' ' → logprob: -17.62500762939453
    10. '4' → logprob: -17.87500762939453

Token 1826: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9307452440261841
    2. '
' → logprob: -1.680745244026184
    3. '   ' → logprob: -2.3057451248168945
    4. '[
' → logprob: -2.4307451248168945
    5. '[' → logprob: -2.9307451248168945
    6. '```' → logprob: -3.5557451248168945
    7. '][' → logprob: -3.8057451248168945
    8. ' =' → logprob: -3.8057451248168945
    9. '[c' → logprob: -4.0557451248168945
    10. ']' → logprob: -4.1807451248168945

Token 1827: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11724419891834259
    2. '=' → logprob: -2.992244243621826
    3. ' =' → logprob: -2.992244243621826
    4. ' ' → logprob: -4.617244243621826
    5. '```' → logprob: -8.742243766784668
    6. '   ' → logprob: -9.617243766784668
    7. '0' → logprob: -9.742243766784668
    8. ' +' → logprob: -10.617243766784668
    9. '`' → logprob: -10.617243766784668
    10. '``' → logprob: -11.367243766784668

Token 1828: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020699729793705046
    2. ' ' → logprob: -8.50020694732666
    3. '   ' → logprob: -13.37520694732666
    4. '+' → logprob: -13.75020694732666
    5. '```' → logprob: -15.25020694732666
    6. '
' → logprob: -15.37520694732666
    7. 'abs' → logprob: -15.62520694732666
    8. ' +' → logprob: -16.500207901000977
    9. '`' → logprob: -17.000207901000977
    10. '    ' → logprob: -17.125207901000977

Token 1829: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5487009882926941
    2. '[' → logprob: -1.6737010478973389
    3. '[
' → logprob: -2.673701047897339
    4. '   ' → logprob: -3.173701047897339
    5. '\' → logprob: -3.923701047897339
    6. '\n' → logprob: -4.17370080947876
    7. '[c' → logprob: -4.29870080947876
    8. '
' → logprob: -4.92370080947876
    9. '```' → logprob: -4.92370080947876
    10. ':' → logprob: -5.17370080947876

Token 1830: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0038885537069290876
    2. 'abs' → logprob: -5.8788886070251465
    3. ' r' → logprob: -7.0038886070251465
    4. ' abs' → logprob: -9.253888130187988
    5. '   ' → logprob: -10.378888130187988
    6. '(r' → logprob: -10.628888130187988
    7. '(abs' → logprob: -12.003888130187988
    8. '1' → logprob: -12.878888130187988
    9. '  ' → logprob: -13.003888130187988
    10. '|' → logprob: -13.128888130187988

Token 1831: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.029845017939805984
    2. '2' → logprob: -3.5298449993133545
    3. '==' → logprob: -10.029845237731934
    4. '_' → logprob: -10.529845237731934
    5. '1' → logprob: -11.904845237731934
    6. '```' → logprob: -12.779845237731934
    7. '``' → logprob: -13.154845237731934
    8. 'r' → logprob: -13.154845237731934
    9. ' ==' → logprob: -13.154845237731934
    10. 'e' → logprob: -14.279845237731934

Token 1832: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8588613271713257
    2. '][' → logprob: -1.9838613271713257
    3. ']' → logprob: -2.1088614463806152
    4. '[r' → logprob: -2.2338614463806152
    5. '[' → logprob: -2.9838614463806152
    6. '```' → logprob: -3.7338614463806152
    7. ')' → logprob: -3.9838614463806152
    8. '
' → logprob: -4.358861446380615
    9. '=' → logprob: -4.483861446380615
    10. '[
' → logprob: -4.608861446380615

Token 1833: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003361774142831564
    2. ' r' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.250336647033691
    4. '	r' → logprob: -16.625335693359375
    5. '    ' → logprob: -18.125335693359375
    6. '       ' → logprob: -18.500335693359375
    7. '  ' → logprob: -18.750335693359375
    8. ' ' → logprob: -18.750335693359375
    9. '     ' → logprob: -19.250335693359375
    10. '_r' → logprob: -19.750335693359375

Token 1834: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.852005124092102
    2. ']' → logprob: -1.852005124092102
    3. '[
' → logprob: -2.3520050048828125
    4. '_
' → logprob: -3.2270050048828125
    5. '[r' → logprob: -3.3520050048828125
    6. '_' → logprob: -3.4770050048828125
    7. '\n' → logprob: -3.8520050048828125
    8. '```' → logprob: -3.8520050048828125
    9. 'r' → logprob: -3.9770050048828125
    10. ')
' → logprob: -3.9770050048828125

Token 1835: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0631626844406128
    2. '[c' → logprob: -2.4381628036499023
    3. ')
' → logprob: -2.5631628036499023
    4. '[' → logprob: -2.5631628036499023
    5. '[
' → logprob: -2.6881628036499023
    6. '   ' → logprob: -2.6881628036499023
    7. ']' → logprob: -2.9381628036499023
    8. '\n' → logprob: -3.1881628036499023
    9. ':
' → logprob: -3.8131628036499023
    10. '       ' → logprob: -3.8131628036499023

Token 1836: ' infinite' (ID: 48413)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.32168611884117126
    2. 'abs' → logprob: -1.3216861486434937
    3. '1' → logprob: -5.696686267852783
    4. '(abs' → logprob: -6.446686267852783
    5. ' ' → logprob: -6.571686267852783
    6. ' (' → logprob: -7.196686267852783
    7. '0' → logprob: -7.446686267852783
    8. '   ' → logprob: -8.071685791015625
    9. '"' → logprob: -9.821685791015625
    10. '  ' → logprob: -10.071685791015625

Token 1837: '
' (ID: 198)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.9916052222251892
    2. '[' → logprob: -2.116605281829834
    3. '```' → logprob: -2.116605281829834
    4. '\n' → logprob: -2.241605281829834
    5. '[
' → logprob: -2.491605281829834
    6. '
' → logprob: -2.866605281829834
    7. '   ' → logprob: -2.991605281829834
    8. ']' → logprob: -3.991605281829834
    9. '       ' → logprob: -4.491605281829834
    10. '``' → logprob: -4.491605281829834

Token 1838: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6662887930870056
    2. '[
' → logprob: -1.9162888526916504
    3. '[c' → logprob: -2.5412888526916504
    4. '```' → logprob: -2.6662888526916504
    5. '   ' → logprob: -2.9162888526916504
    6. '       ' → logprob: -3.1662888526916504
    7. '\n' → logprob: -3.9162888526916504
    8. '[r' → logprob: -4.16628885269165
    9. '
' → logprob: -4.29128885269165
    10. '``' → logprob: -4.79128885269165

Token 1839: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.463383674621582
    2. ':' → logprob: -1.588383674621582
    3. '[' → logprob: -1.963383674621582
    4. '   ' → logprob: -2.338383674621582
    5. '\n' → logprob: -2.838383674621582
    6. '```' → logprob: -3.088383674621582
    7. ']' → logprob: -3.213383674621582
    8. ':
' → logprob: -3.213383674621582
    9. '[r' → logprob: -3.838383674621582
    10. '[
' → logprob: -4.213383674621582

Token 1840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31087425351142883
    2. ':' → logprob: -2.0608742237091064
    3. ':
' → logprob: -3.6858742237091064
    4. '   ' → logprob: -3.8108742237091064
    5. '           ' → logprob: -4.1858744621276855
    6. ' if' → logprob: -4.1858744621276855
    7. '\n' → logprob: -4.8108744621276855
    8. '[' → logprob: -4.8108744621276855
    9. '[
' → logprob: -5.1858744621276855
    10. ')' → logprob: -5.4358744621276855

Token 1841: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07163812220096588
    2. '   ' → logprob: -3.9466381072998047
    3. '[' → logprob: -4.696638107299805
    4. '           ' → logprob: -4.821638107299805
    5. '\' → logprob: -5.821638107299805
    6. '        ' → logprob: -5.946638107299805
    7. '[
' → logprob: -6.071638107299805
    8. '               ' → logprob: -6.196638107299805
    9. '	' → logprob: -6.446638107299805
    10. '1' → logprob: -6.446638107299805

Token 1842: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06698182970285416
    2. '   ' → logprob: -3.441981792449951
    3. '
' → logprob: -5.066981792449951
    4. '\n' → logprob: -5.566981792449951
    5. '        
' → logprob: -5.816981792449951
    6. '           ' → logprob: -5.816981792449951
    7. '[' → logprob: -6.191981792449951
    8. '    ' → logprob: -6.316981792449951
    9. '[
' → logprob: -6.316981792449951
    10. '        ' → logprob: -6.816981792449951

Token 1843: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.2764139771461487
    2. ' horizontal' → logprob: -1.526413917541504
    3. 'r' → logprob: -4.776413917541504
    4. 'vertical' → logprob: -5.651413917541504
    5. 'she' → logprob: -6.401413917541504
    6. 'the' → logprob: -6.401413917541504
    7. ' at' → logprob: -6.526413917541504
    8. 'only' → logprob: -6.651413917541504
    9. ' only' → logprob: -6.776413917541504
    10. 'moving' → logprob: -7.401413917541504

Token 1844: ' move' (ID: 5275)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.61481773853302
    2. '(' → logprob: -2.1148176193237305
    3. ' movement' → logprob: -2.3648176193237305
    4. 'movement' → logprob: -2.8648176193237305
    5. ')' → logprob: -3.1148176193237305
    6. ' (' → logprob: -3.2398176193237305
    7. ' ' → logprob: -3.8648176193237305
    8. '_' → logprob: -4.2398176193237305
    9. '_move' → logprob: -4.2398176193237305
    10. ' move' → logprob: -4.4898176193237305

Token 1845: ' allowed' (ID: 9279)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7655178308486938
    2. ' is' → logprob: -1.7655178308486938
    3. '(r' → logprob: -2.5155177116394043
    4. ' from' → logprob: -2.6405177116394043
    5. ' (' → logprob: -3.0155177116394043
    6. ' must' → logprob: -3.2655177116394043
    7. '(' → logprob: -3.8905177116394043
    8. ' s' → logprob: -4.015517711639404
    9. '=' → logprob: -4.265517711639404
    10. 'from' → logprob: -4.390517711639404

Token 1846: ' only' (ID: 1606)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.544047474861145
    2. '[r' → logprob: -1.044047474861145
    3. ']' → logprob: -4.2940473556518555
    4. '   ' → logprob: -4.5440473556518555
    5. '[
' → logprob: -4.5440473556518555
    6. '[c' → logprob: -4.7940473556518555
    7. ')' → logprob: -4.9190473556518555
    8. '```' → logprob: -5.4190473556518555
    9. '       ' → logprob: -5.7940473556518555
    10. '_' → logprob: -6.1690473556518555

Token 1847: ' forward' (ID: 6687)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5705264806747437
    2. ' to' → logprob: -2.070526599884033
    3. 'on' → logprob: -2.320526599884033
    4. 'from' → logprob: -2.945526599884033
    5. 'if' → logprob: -3.195526599884033
    6. ' on' → logprob: -3.195526599884033
    7. ' if' → logprob: -3.570526599884033
    8. 'r' → logprob: -3.945526599884033
    9. 'between' → logprob: -5.070526599884033
    10. ' from' → logprob: -5.195526599884033

Token 1848: ' along' (ID: 4251)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.6517066955566406
    2. '[' → logprob: -1.5267066955566406
    3. '```' → logprob: -2.9017066955566406
    4. ']' → logprob: -2.9017066955566406
    5. '   ' → logprob: -3.1517066955566406
    6. '[c' → logprob: -3.9017066955566406
    7. '][' → logprob: -3.9017066955566406
    8. ':' → logprob: -4.151706695556641
    9. '       ' → logprob: -4.401706695556641
    10. '[
' → logprob: -4.526706695556641

Token 1849: ' main' (ID: 2758)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.7521533966064453
    2. 'r' → logprob: -1.7521533966064453
    3. 'the' → logprob: -1.8771533966064453
    4. ' the' → logprob: -2.7521533966064453
    5. ' row' → logprob: -2.8771533966064453
    6. 'rows' → logprob: -3.7521533966064453
    7. 'same' → logprob: -3.8771533966064453
    8. 'intersection' → logprob: -3.8771533966064453
    9. ' rows' → logprob: -5.252153396606445
    10. ' same' → logprob: -5.377153396606445

Token 1850: ' passages' (ID: 69047)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.4407961964607239
    2. '_pass' → logprob: -1.440796136856079
    3. ' passages' → logprob: -2.315796136856079
    4. '   ' → logprob: -4.940796375274658
    5. '_' → logprob: -5.190796375274658
    6. ' passage' → logprob: -6.190796375274658
    7. ' pass' → logprob: -6.815796375274658
    8. ' _' → logprob: -7.065796375274658
    9. ' ' → logprob: -7.565796375274658
    10. '_p' → logprob: -7.815796375274658

Token 1851: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45478272438049316
    2. '       ' → logprob: -2.329782724380493
    3. '[c' → logprob: -2.829782724380493
    4. '   ' → logprob: -2.954782724380493
    5. '[r' → logprob: -2.954782724380493
    6. '[
' → logprob: -3.204782724380493
    7. '][' → logprob: -3.954782724380493
    8. ':' → logprob: -4.204782485961914
    9. ']' → logprob: -4.579782485961914
    10. ':
' → logprob: -5.079782485961914

Token 1852: '       ' (ID: 309)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.105615496635437
    2. '   ' → logprob: -1.730615496635437
    3. '       ' → logprob: -1.855615496635437
    4. '[' → logprob: -2.2306156158447266
    5. ' if' → logprob: -3.6056156158447266
    6. ':
' → logprob: -3.6056156158447266
    7. 'r' → logprob: -3.8556156158447266
    8. '(r' → logprob: -4.105615615844727
    9. ' (' → logprob: -4.355615615844727
    10. '[
' → logprob: -4.355615615844727

Token 1853: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.013728618621826
    2. '       ' → logprob: -2.138728618621826
    3. ':
' → logprob: -2.138728618621826
    4. ':' → logprob: -2.388728618621826
    5. ')' → logprob: -2.513728618621826
    6. ' if' → logprob: -2.763728618621826
    7. 'r' → logprob: -3.138728618621826
    8. ' (' → logprob: -3.263728618621826
    9. '=' → logprob: -3.513728618621826
    10. '.' → logprob: -3.513728618621826

Token 1854: ' on' (ID: 402)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1658122539520264
    2. ' if' → logprob: -1.6658122539520264
    3. '[r' → logprob: -2.1658122539520264
    4. '[' → logprob: -2.7908122539520264
    5. '   ' → logprob: -3.2908122539520264
    6. ':
' → logprob: -3.5408122539520264
    7. '#' → logprob: -3.6658122539520264
    8. 'if' → logprob: -3.7908122539520264
    9. ':' → logprob: -4.1658124923706055
    10. ' r' → logprob: -4.1658124923706055

Token 1855: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.9394780993461609
    2. 'r' → logprob: -1.3144781589508057
    3. 'the' → logprob: -1.6894781589508057
    4. 'row' → logprob: -2.1894781589508057
    5. ' the' → logprob: -4.189477920532227
    6. ' same' → logprob: -4.689477920532227
    7. ' row' → logprob: -4.939477920532227
    8. 'each' → logprob: -5.689477920532227
    9. 'intersection' → logprob: -6.064477920532227
    10. ' r' → logprob: -6.064477920532227

Token 1856: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.9642958045005798
    2. 'row' → logprob: -1.3392958641052246
    3. '_row' → logprob: -1.4642958641052246
    4. '_' → logprob: -2.7142958641052246
    5. ' _' → logprob: -4.089295864105225
    6. '   ' → logprob: -4.714295864105225
    7. ' ' → logprob: -5.089295864105225
    8. ' line' → logprob: -5.714295864105225
    9. '```' → logprob: -5.714295864105225
    10. '_r' → logprob: -5.964295864105225

Token 1857: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8930572271347046
    2. '[' → logprob: -1.5180572271347046
    3. '   ' → logprob: -2.143057346343994
    4. '[
' → logprob: -2.393057346343994
    5. ':
' → logprob: -3.393057346343994
    6. ':' → logprob: -3.643057346343994
    7. '[r' → logprob: -4.143057346343994
    8. '
' → logprob: -4.268057346343994
    9. '][' → logprob: -4.393057346343994
    10. '```' → logprob: -4.768057346343994

Token 1858: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9116976261138916
    2. '[' → logprob: -1.6616976261138916
    3. '[
' → logprob: -2.1616976261138916
    4. ':
' → logprob: -2.6616976261138916
    5. '   ' → logprob: -2.9116976261138916
    6. ':' → logprob: -3.0366976261138916
    7. '[r' → logprob: -3.4116976261138916
    8. '
' → logprob: -3.9116976261138916
    9. '[c' → logprob: -4.5366973876953125
    10. '```' → logprob: -4.6616973876953125

Token 1859: 'move' (ID: 16366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7621893286705017
    2. 'r' → logprob: -0.7621893286705017
    3. ')
' → logprob: -4.5121893882751465
    4. ',' → logprob: -4.7621893882751465
    5. '1' → logprob: -4.8871893882751465
    6. '),' → logprob: -5.0121893882751465
    7. '):
' → logprob: -5.2621893882751465
    8. '=' → logprob: -5.5121893882751465
    9. ' r' → logprob: -5.8871893882751465
    10. ' )' → logprob: -6.0121893882751465

Token 1860: ' from' (ID: 591)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.2818145751953125
    2. 'r' → logprob: -1.6568145751953125
    3. '=' → logprob: -1.9068145751953125
    4. ' =' → logprob: -2.5318145751953125
    5. ' (' → logprob: -2.5318145751953125
    6. 'from' → logprob: -3.5318145751953125
    7. ')' → logprob: -3.5318145751953125
    8. '(' → logprob: -3.5318145751953125
    9. ' from' → logprob: -3.9068145751953125
    10. ' ' → logprob: -3.9068145751953125

Token 1861: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.029976794496178627
    2. 'c' → logprob: -3.9049768447875977
    3. ' r' → logprob: -5.779976844787598
    4. '(r' → logprob: -6.029976844787598
    5. 'col' → logprob: -6.654976844787598
    6. 'intersection' → logprob: -6.904976844787598
    7. '(c' → logprob: -7.654976844787598
    8. ' c' → logprob: -7.904976844787598
    9. ' (' → logprob: -8.654976844787598
    10. 'row' → logprob: -8.779976844787598

Token 1862: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003769303730223328
    2. ' r' → logprob: -8.75037670135498
    3. ')' → logprob: -9.75037670135498
    4. ',' → logprob: -10.00037670135498
    5. '   ' → logprob: -10.25037670135498
    6. '),' → logprob: -11.00037670135498
    7. ',r' → logprob: -11.87537670135498
    8. 'c' → logprob: -12.25037670135498
    9. '_r' → logprob: -12.50037670135498
    10. ' ' → logprob: -12.62537670135498

Token 1863: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6013665199279785
    2. ',c' → logprob: -1.2263665199279785
    3. ',r' → logprob: -1.8513665199279785
    4. ' ,' → logprob: -7.8513665199279785
    5. '+' → logprob: -8.35136604309082
    6. 'r' → logprob: -8.85136604309082
    7. ',i' → logprob: -9.10136604309082
    8. 'c' → logprob: -9.10136604309082
    9. '2' → logprob: -9.47636604309082
    10. '3' → logprob: -9.47636604309082

Token 1864: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006957544246688485
    2. ' c' → logprob: -8.375696182250977
    3. '   ' → logprob: -8.750696182250977
    4. ',' → logprob: -9.125696182250977
    5. ',c' → logprob: -9.375696182250977
    6. ')c' → logprob: -9.875696182250977
    7. ')' → logprob: -10.875696182250977
    8. '	c' → logprob: -10.875696182250977
    9. '    ' → logprob: -12.625696182250977
    10. 'r' → logprob: -12.875696182250977

Token 1865: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11505930870771408
    2. ')' → logprob: -2.2400593757629395
    3. ' +' → logprob: -6.7400593757629395
    4. ',' → logprob: -8.365058898925781
    5. '   ' → logprob: -8.365058898925781
    6. ')+' → logprob: -8.740058898925781
    7. '),' → logprob: -9.615058898925781
    8. ' to' → logprob: -9.740058898925781
    9. ' ' → logprob: -9.740058898925781
    10. ' )' → logprob: -9.990058898925781

Token 1866: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520524263381958
    2. ' to' → logprob: -2.2520523071289062
    3. '+' → logprob: -2.7520523071289062
    4. ',' → logprob: -3.1270523071289062
    5. 'to' → logprob: -5.252052307128906
    6. ' )' → logprob: -6.752052307128906
    7. ' ,' → logprob: -7.252052307128906
    8. '   ' → logprob: -7.377052307128906
    9. ',r' → logprob: -8.127052307128906
    10. ' ->' → logprob: -8.252052307128906

Token 1867: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39468640089035034
    2. '(r' → logprob: -1.1446864604949951
    3. ' (' → logprob: -4.894686222076416
    4. ' r' → logprob: -8.269686698913574
    5. ')' → logprob: -11.394686698913574
    6. '(' → logprob: -11.394686698913574
    7. '   ' → logprob: -12.144686698913574
    8. '```' → logprob: -12.644686698913574
    9. ' ' → logprob: -13.394686698913574
    10. '(
' → logprob: -13.769686698913574

Token 1868: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.407366916188039e-05
    2. ' r' → logprob: -9.875054359436035
    3. '   ' → logprob: -13.500054359436035
    4. ' ' → logprob: -15.375054359436035
    5. '(r' → logprob: -15.375054359436035
    6. ')' → logprob: -15.875054359436035
    7. '	r' → logprob: -16.25005340576172
    8. '  ' → logprob: -16.75005340576172
    9. '    ' → logprob: -16.87505340576172
    10. '```' → logprob: -16.87505340576172

Token 1869: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19970735907554626
    2. '+' → logprob: -1.9497073888778687
    3. ',c' → logprob: -3.324707269668579
    4. ' ,' → logprob: -6.949707508087158
    5. '   ' → logprob: -7.199707508087158
    6. ' +' → logprob: -7.574707508087158
    7. 'c' → logprob: -8.94970703125
    8. ',r' → logprob: -9.19970703125
    9. ')' → logprob: -9.94970703125
    10. ' ' → logprob: -10.07470703125

Token 1870: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015252141747623682
    2. ' c' → logprob: -6.501525402069092
    3. '   ' → logprob: -11.126524925231934
    4. '+' → logprob: -12.876524925231934
    5. ' ' → logprob: -13.001524925231934
    6. '  ' → logprob: -14.501524925231934
    7. ')' → logprob: -14.626524925231934
    8. '	c' → logprob: -14.626524925231934
    9. ')c' → logprob: -14.626524925231934
    10. '    ' → logprob: -15.251524925231934

Token 1871: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00019305046589579433
    2. ' +' → logprob: -9.125192642211914
    3. ')' → logprob: -9.750192642211914
    4. '1' → logprob: -11.500192642211914
    5. ')+' → logprob: -11.625192642211914
    6. '   ' → logprob: -12.875192642211914
    7. '+)' → logprob: -13.375192642211914
    8. '+
' → logprob: -14.125192642211914
    9. '+r' → logprob: -14.500192642211914
    10. 'r' → logprob: -15.250192642211914

Token 1872: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.839121826691553e-05
    2. '+' → logprob: -9.500078201293945
    3. ' ' → logprob: -13.500078201293945
    4. '```' → logprob: -13.750078201293945
    5. '   ' → logprob: -14.875078201293945
    6. ')' → logprob: -15.250078201293945
    7. '`' → logprob: -16.750078201293945
    8. '0' → logprob: -17.187578201293945
    9. '``' → logprob: -17.312578201293945
    10. '
' → logprob: -17.437578201293945

Token 1873: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029479898512363434
    2. '))' → logprob: -6.127947807312012
    3. ')
' → logprob: -7.877947807312012
    4. ')\' → logprob: -9.502947807312012
    5. '):' → logprob: -9.877947807312012
    6. '   ' → logprob: -9.877947807312012
    7. ')`' → logprob: -10.002947807312012
    8. '):
' → logprob: -10.127947807312012
    9. '))
' → logprob: -10.877947807312012
    10. ' )' → logprob: -11.002947807312012

Token 1874: ' cost' (ID: 3097)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5180330872535706
    2. '[
' → logprob: -2.018033027648926
    3. '[c' → logprob: -2.268033027648926
    4. '       ' → logprob: -2.518033027648926
    5. '[r' → logprob: -3.393033027648926
    6. '   ' → logprob: -4.143033027648926
    7. ':' → logprob: -4.268033027648926
    8. '][' → logprob: -5.143033027648926
    9. ':
' → logprob: -5.768033027648926
    10. ']' → logprob: -5.893033027648926

Token 1875: ' ' (ID: 220)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.7860709428787231
    2. '=' → logprob: -2.1610708236694336
    3. ']' → logprob: -2.1610708236694336
    4. '[' → logprob: -2.2860708236694336
    5. '   ' → logprob: -2.7860708236694336
    6. ')' → logprob: -2.7860708236694336
    7. '1' → logprob: -3.5360708236694336
    8. ' =' → logprob: -4.411070823669434
    9. '[
' → logprob: -5.161070823669434
    10. '```' → logprob: -5.161070823669434

Token 1876: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011802680790424347
    2. ' ' → logprob: -4.886802673339844
    3. '=' → logprob: -5.511802673339844
    4. ' =' → logprob: -8.886802673339844
    5. '==' → logprob: -12.136802673339844
    6. '```' → logprob: -13.136802673339844
    7. '   ' → logprob: -13.636802673339844
    8. '+' → logprob: -14.511802673339844
    9. ' ==' → logprob: -14.636802673339844
    10. '`' → logprob: -15.136802673339844

Token 1877: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9590238928794861
    2. '   ' → logprob: -1.5840239524841309
    3. '[' → logprob: -2.084023952484131
    4. '
' → logprob: -2.584023952484131
    5. ':' → logprob: -3.209023952484131
    6. ':
' → logprob: -3.334023952484131
    7. '[
' → logprob: -3.334023952484131
    8. '```' → logprob: -3.959023952484131
    9. '][' → logprob: -4.459023952484131
    10. ']' → logprob: -4.584023952484131

Token 1878: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30292144417762756
    2. '   ' → logprob: -2.9279215335845947
    3. '
' → logprob: -3.0529215335845947
    4. ':' → logprob: -3.8029215335845947
    5. '\n' → logprob: -3.9279215335845947
    6. '[' → logprob: -4.052921295166016
    7. ':
' → logprob: -4.427921295166016
    8. '[
' → logprob: -4.552921295166016
    9. '```' → logprob: -4.802921295166016
    10. '\' → logprob: -4.927921295166016

Token 1879: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1305069476366043
    2. '
' → logprob: -3.130506992340088
    3. '[
' → logprob: -4.255506992340088
    4. ':
' → logprob: -4.380506992340088
    5. '\n' → logprob: -4.505506992340088
    6. '   ' → logprob: -4.505506992340088
    7. ':' → logprob: -5.255506992340088
    8. '[r' → logprob: -5.380506992340088
    9. '[' → logprob: -5.755506992340088
    10. ',' → logprob: -5.880506992340088

Token 1880: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025717807933688164
    2. '   ' → logprob: -5.150717735290527
    3. '           ' → logprob: -5.150717735290527
    4. ':
' → logprob: -5.775717735290527
    5. ':' → logprob: -6.775717735290527
    6. ',' → logprob: -6.900717735290527
    7. 'r' → logprob: -7.275717735290527
    8. '               ' → logprob: -7.400717735290527
    9. ')' → logprob: -7.525717735290527
    10. '\' → logprob: -7.650717735290527

Token 1881: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03045538440346718
    2. '           ' → logprob: -5.030455589294434
    3. '        
' → logprob: -5.655455589294434
    4. '	' → logprob: -5.905455589294434
    5. '   ' → logprob: -5.905455589294434
    6. '        ' → logprob: -6.030455589294434
    7. '\' → logprob: -6.655455589294434
    8. 'r' → logprob: -6.780455589294434
    9. '               ' → logprob: -6.905455589294434
    10. '[' → logprob: -7.030455589294434

Token 1882: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07487339526414871
    2. '
' → logprob: -3.574873447418213
    3. '   ' → logprob: -4.074873447418213
    4. '        
' → logprob: -5.699873447418213
    5. '\n' → logprob: -5.824873447418213
    6. '           ' → logprob: -6.324873447418213
    7. '\' → logprob: -6.324873447418213
    8. '```' → logprob: -6.324873447418213
    9. ']' → logprob: -6.449873447418213
    10. '[' → logprob: -6.574873447418213

Token 1883: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.292507141828537
    2. ' for' → logprob: -2.1675071716308594
    3. 'r' → logprob: -2.4175071716308594
    4. 'if' → logprob: -3.7925071716308594
    5. '       ' → logprob: -5.042507171630859
    6. '   ' → logprob: -5.167507171630859
    7. ' if' → logprob: -5.417507171630859
    8. ' ' → logprob: -6.167507171630859
    9. ' r' → logprob: -6.167507171630859
    10. '           ' → logprob: -7.042507171630859

Token 1884: ' transition' (ID: 14463)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.000320565392030403
    2. '[' → logprob: -9.125320434570312
    3. '[r' → logprob: -9.125320434570312
    4. '```' → logprob: -10.375320434570312
    5. '[
' → logprob: -11.500320434570312
    6. '   ' → logprob: -11.500320434570312
    7. ' =' → logprob: -11.625320434570312
    8. ']' → logprob: -11.750320434570312
    9. '\[' → logprob: -11.750320434570312
    10. 'c' → logprob: -12.125320434570312

Token 1885: ' only' (ID: 1606)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.34250038862228394
    2. '[' → logprob: -1.7175004482269287
    3. '[
' → logprob: -2.5925004482269287
    4. '       ' → logprob: -4.09250020980835
    5. '   ' → logprob: -5.46750020980835
    6. '[r' → logprob: -5.59250020980835
    7. '```' → logprob: -5.84250020980835
    8. ' =' → logprob: -6.09250020980835
    9. '           ' → logprob: -6.84250020980835
    10. '][' → logprob: -7.34250020980835

Token 1886: ' possible' (ID: 4149)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42769113183021545
    2. '[c' → logprob: -1.552691102027893
    3. '[r' → logprob: -2.0526912212371826
    4. '[
' → logprob: -5.8026909828186035
    5. '   ' → logprob: -7.1776909828186035
    6. ' [' → logprob: -7.5526909828186035
    7. '       ' → logprob: -7.5526909828186035
    8. '```' → logprob: -7.5526909828186035
    9. ']' → logprob: -7.6776909828186035
    10. '=' → logprob: -7.6776909828186035

Token 1887: ' if' (ID: 538)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.792534351348877
    2. '[c' → logprob: -1.042534351348877
    3. '[
' → logprob: -1.917534351348877
    4. '[r' → logprob: -3.667534351348877
    5. '][' → logprob: -5.542534351348877
    6. '```' → logprob: -5.667534351348877
    7. '   ' → logprob: -5.917534351348877
    8. ']' → logprob: -5.917534351348877
    9. '       ' → logprob: -5.917534351348877
    10. '+' → logprob: -6.042534351348877

Token 1888: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.44312788406387e-05
    2. ' r' → logprob: -10.000054359436035
    3. '   ' → logprob: -11.750054359436035
    4. '```' → logprob: -15.000054359436035
    5. '       ' → logprob: -15.625054359436035
    6. '(r' → logprob: -15.875054359436035
    7. '    ' → logprob: -15.875054359436035
    8. '           ' → logprob: -16.50005531311035
    9. '     ' → logprob: -16.62505531311035
    10. '[r' → logprob: -17.12505531311035

Token 1889: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5872206687927246
    2. '2' → logprob: -0.8372206687927246
    3. 'r' → logprob: -5.087220668792725
    4. '==' → logprob: -5.837220668792725
    5. '1' → logprob: -7.462220668792725
    6. ' ==' → logprob: -7.462220668792725
    7. '+' → logprob: -8.462221145629883
    8. '_' → logprob: -8.712221145629883
    9. 's' → logprob: -9.212221145629883
    10. '=r' → logprob: -9.212221145629883

Token 1890: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0682271420955658
    2. ' ==' → logprob: -2.8182270526885986
    3. '=' → logprob: -5.318227291107178
    4. '[' → logprob: -7.818227291107178
    5. '[r' → logprob: -8.44322681427002
    6. '==
' → logprob: -8.44322681427002
    7. '<=' → logprob: -8.94322681427002
    8. '=r' → logprob: -9.44322681427002
    9. '```' → logprob: -9.56822681427002
    10. ')' → logprob: -9.94322681427002

Token 1891: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.729906196298543e-06
    2. ' r' → logprob: -11.750009536743164
    3. '   ' → logprob: -13.875009536743164
    4. 'dp' → logprob: -14.500009536743164
    5. '    ' → logprob: -16.875009536743164
    6. '       ' → logprob: -17.125009536743164
    7. '     ' → logprob: -17.500009536743164
    8. '           ' → logprob: -17.500009536743164
    9. ' ' → logprob: -18.000009536743164
    10. '#' → logprob: -18.375009536743164

Token 1892: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0513648986816406
    2. ']' → logprob: -1.1763648986816406
    3. '[' → logprob: -2.8013648986816406
    4. '[
' → logprob: -3.0513648986816406
    5. '][' → logprob: -3.1763648986816406
    6. ']
' → logprob: -3.1763648986816406
    7. '[r' → logprob: -3.5513648986816406
    8. ':
' → logprob: -3.9263648986816406
    9. '_
' → logprob: -4.426364898681641
    10. '+' → logprob: -4.426364898681641

Token 1893: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3232569396495819
    2. '   ' → logprob: -2.8232569694519043
    3. ':' → logprob: -3.0732569694519043
    4. '[' → logprob: -3.3232569694519043
    5. '[r' → logprob: -3.4482569694519043
    6. '           ' → logprob: -3.9482569694519043
    7. '][' → logprob: -4.073256969451904
    8. ']' → logprob: -4.323256969451904
    9. ':
' → logprob: -4.948256969451904
    10. '```' → logprob: -5.073256969451904

Token 1894: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2123301774263382
    2. '   ' → logprob: -2.2123301029205322
    3. '\n' → logprob: -3.2123301029205322
    4. ':' → logprob: -4.837330341339111
    5. '           ' → logprob: -5.587330341339111
    6. '[' → logprob: -5.587330341339111
    7. '\' → logprob: -5.712330341339111
    8. '    ' → logprob: -5.962330341339111
    9. '```' → logprob: -5.962330341339111
    10. '[
' → logprob: -6.212330341339111

Token 1895: ' let's' (ID: 35717)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.7653851509094238
    2. '       ' → logprob: -1.8903851509094238
    3. '               ' → logprob: -2.515385150909424
    4. 'r' → logprob: -2.640385150909424
    5. '        ' → logprob: -2.640385150909424
    6. '                               ' → logprob: -3.015385150909424
    7. '                ' → logprob: -3.015385150909424
    8. '            ' → logprob: -3.515385150909424
    9. '    ' → logprob: -3.765385150909424
    10. '                           ' → logprob: -3.890385150909424

Token 1896: ' rename' (ID: 62295)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.03400019183754921
    2. 'complete' → logprob: -5.034000396728516
    3. 'consider' → logprob: -5.159000396728516
    4. 'write' → logprob: -5.284000396728516
    5. 'replace' → logprob: -6.284000396728516
    6. 'add' → logprob: -6.284000396728516
    7. ' continue' → logprob: -6.659000396728516
    8. '       ' → logprob: -6.909000396728516
    9. 'expand' → logprob: -6.909000396728516
    10. 'fill' → logprob: -7.034000396728516

Token 1897: ' r' (ID: 428)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9857883453369141
    2. '[r' → logprob: -1.235788345336914
    3. '[c' → logprob: -1.360788345336914
    4. ']' → logprob: -3.235788345336914
    5. '[
' → logprob: -4.235788345336914
    6. '   ' → logprob: -4.735788345336914
    7. '][' → logprob: -5.110788345336914
    8. '       ' → logprob: -5.860788345336914
    9. ':' → logprob: -6.735788345336914
    10. ')' → logprob: -6.860788345336914

Token 1898: '3' (ID: 18)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.8368021845817566
    2. ']' → logprob: -0.9618021845817566
    3. '][' → logprob: -2.8368022441864014
    4. '[r' → logprob: -3.2118022441864014
    5. '[
' → logprob: -3.7118022441864014
    6. '[' → logprob: -3.8368022441864014
    7. '2' → logprob: -4.836802005767822
    8. '   ' → logprob: -5.336802005767822
    9. '```' → logprob: -5.586802005767822
    10. ']
' → logprob: -5.836802005767822

Token 1899: ' to' (ID: 316)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.19702880084514618
    2. '[' → logprob: -3.072028875350952
    3. ']' → logprob: -3.197028875350952
    4. '][' → logprob: -3.572028875350952
    5. ':' → logprob: -3.697028875350952
    6. '   ' → logprob: -4.822028636932373
    7. '[c' → logprob: -5.322028636932373
    8. ':
' → logprob: -5.572028636932373
    9. '       ' → logprob: -5.697028636932373
    10. '=' → logprob: -6.322028636932373

Token 1900: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00038443657103925943
    2. ' r' → logprob: -7.875384330749512
    3. '`' → logprob: -13.125384330749512
    4. '   ' → logprob: -14.125384330749512
    5. '=r' → logprob: -14.500384330749512
    6. '```' → logprob: -15.750384330749512
    7. '           ' → logprob: -16.250385284423828
    8. '_r' → logprob: -16.250385284423828
    9. 'next' → logprob: -16.375385284423828
    10. '       ' → logprob: -16.500385284423828

Token 1901: '2' (ID: 17)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.6288017630577087
    2. ']' → logprob: -1.6288018226623535
    3. '   ' → logprob: -2.7538018226623535
    4. '][' → logprob: -3.1288018226623535
    5. ':' → logprob: -3.6288018226623535
    6. '
' → logprob: -4.0038018226623535
    7. '[' → logprob: -4.1288018226623535
    8. '       ' → logprob: -4.1288018226623535
    9. ']
' → logprob: -4.2538018226623535
    10. ':
' → logprob: -4.2538018226623535

Token 1902: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.958838701248169
    2. '[' → logprob: -1.083838701248169
    3. '   ' → logprob: -2.458838701248169
    4. ':' → logprob: -2.833838701248169
    5. '[
' → logprob: -3.208838701248169
    6. ':
' → logprob: -3.958838701248169
    7. '][' → logprob: -4.33383846282959
    8. ']' → logprob: -4.33383846282959
    9. '[c' → logprob: -4.58383846282959
    10. '```' → logprob: -4.83383846282959

Token 1903: ' intersection' (ID: 42002)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7642800807952881
    2. ':' → logprob: -1.014280080795288
    3. ':
' → logprob: -2.764280080795288
    4. '[' → logprob: -3.389280080795288
    5. '   ' → logprob: -4.014280319213867
    6. '[
' → logprob: -4.389280319213867
    7. '\n' → logprob: -4.639280319213867
    8. '
' → logprob: -5.014280319213867
    9. '```' → logprob: -5.764280319213867
    10. '[r' → logprob: -5.764280319213867

Token 1904: ' at' (ID: 540)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.058213233947754
    2. '       ' → logprob: -1.683213233947754
    3. '[' → logprob: -1.808213233947754
    4. '[r' → logprob: -1.933213233947754
    5. '[
' → logprob: -2.808213233947754
    6. '   ' → logprob: -3.308213233947754
    7. '```' → logprob: -4.058213233947754
    8. ':' → logprob: -4.683213233947754
    9. '][' → logprob: -4.808213233947754
    10. ':
' → logprob: -5.183213233947754

Token 1905: ' col' (ID: 996)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.016332292929291725
    2. 'col' → logprob: -4.766332149505615
    3. 'r' → logprob: -5.141332149505615
    4. ' c' → logprob: -6.891332149505615
    5. 'column' → logprob: -8.141332626342773
    6. ' col' → logprob: -8.766332626342773
    7. '   ' → logprob: -9.266332626342773
    8. '```' → logprob: -9.891332626342773
    9. '(c' → logprob: -10.516332626342773
    10. 'current' → logprob: -10.891332626342773

Token 1906: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2353828251361847
    2. ' c' → logprob: -1.9853827953338623
    3. '+' → logprob: -2.7353827953338623
    4. ' +' → logprob: -5.985383033752441
    5. '	c' → logprob: -6.110383033752441
    6. '_c' → logprob: -7.610383033752441
    7. ' =' → logprob: -7.985383033752441
    8. ' ' → logprob: -8.235383033752441
    9. '=' → logprob: -8.360383033752441
    10. ' +=' → logprob: -8.485383033752441

Token 1907: '+' (ID: 10)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5387575626373291
    2. '[' → logprob: -1.538757562637329
    3. ':' → logprob: -2.538757562637329
    4. '   ' → logprob: -3.663757562637329
    5. '[r' → logprob: -4.03875732421875
    6. ':
' → logprob: -4.16375732421875
    7. '           ' → logprob: -4.78875732421875
    8. '][' → logprob: -4.91375732421875
    9. '[
' → logprob: -5.03875732421875
    10. '```' → logprob: -5.28875732421875

Token 1908: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001983829541131854
    2. '+' → logprob: -6.251983642578125
    3. ' ' → logprob: -10.876983642578125
    4. ' +' → logprob: -11.251983642578125
    5. '```' → logprob: -11.626983642578125
    6. '   ' → logprob: -11.751983642578125
    7. '2' → logprob: -13.251983642578125
    8. '`' → logprob: -14.189483642578125
    9. '       ' → logprob: -14.814483642578125
    10. '``' → logprob: -14.939483642578125

Token 1909: '.

' (ID: 364)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31254884600639343
    2. '[
' → logprob: -2.062548875808716
    3. '   ' → logprob: -3.312548875808716
    4. '[r' → logprob: -3.312548875808716
    5. '[c' → logprob: -3.937548875808716
    6. ':' → logprob: -4.312548637390137
    7. '```' → logprob: -4.562548637390137
    8. '       ' → logprob: -5.312548637390137
    9. '0' → logprob: -6.187548637390137
    10. '\' → logprob: -6.312548637390137

Token 1910: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02469160407781601
    2. '\n' → logprob: -4.899691581726074
    3. '   ' → logprob: -5.274691581726074
    4. '
' → logprob: -5.649691581726074
    5. '           ' → logprob: -5.774691581726074
    6. '\' → logprob: -6.899691581726074
    7. '        
' → logprob: -7.274691581726074
    8. '```' → logprob: -7.774691581726074
    9. '[' → logprob: -7.899691581726074
    10. '        ' → logprob: -7.899691581726074

Token 1911: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017071910202503204
    2. '           ' → logprob: -5.142071723937988
    3. ':' → logprob: -5.892071723937988
    4. '   ' → logprob: -6.392071723937988
    5. ',' → logprob: -7.142071723937988
    6. '               ' → logprob: -7.267071723937988
    7. '\' → logprob: -7.267071723937988
    8. '[' → logprob: -7.517071723937988
    9. '        ' → logprob: -7.642071723937988
    10. ' for' → logprob: -8.017071723937988

Token 1912: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011026601307094097
    2. '   ' → logprob: -5.386026382446289
    3. '           ' → logprob: -6.136026382446289
    4. '        ' → logprob: -7.386026382446289
    5. ' for' → logprob: -7.511026382446289
    6. '    ' → logprob: -8.011026382446289
    7. '4' → logprob: -8.136026382446289
    8. '\' → logprob: -8.136026382446289
    9. '[' → logprob: -8.136026382446289
    10. '        
' → logprob: -8.261026382446289

Token 1913: ':
' (ID: 734)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3697529733181
    2. 'for' → logprob: -2.244752883911133
    3. '       ' → logprob: -2.744752883911133
    4. '   ' → logprob: -2.869752883911133
    5. ' N' → logprob: -2.994752883911133
    6. ' ' → logprob: -4.869752883911133
    7. ' range' → logprob: -5.244752883911133
    8. '    ' → logprob: -5.869752883911133
    9. 'N' → logprob: -5.994752883911133
    10. '
' → logprob: -6.244752883911133

Token 1914: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004460147116333246
    2. '           ' → logprob: -6.004460334777832
    3. '   ' → logprob: -6.879460334777832
    4. ' for' → logprob: -8.629460334777832
    5. '        ' → logprob: -8.754460334777832
    6. '1' → logprob: -9.504460334777832
    7. '               ' → logprob: -9.629460334777832
    8. 'for' → logprob: -9.754460334777832
    9. '    ' → logprob: -9.879460334777832
    10. '#' → logprob: -10.254460334777832

Token 1915: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03920803591609001
    2. ' for' → logprob: -4.164207935333252
    3. 'for' → logprob: -4.164207935333252
    4. '           ' → logprob: -6.039207935333252
    5. '   ' → logprob: -6.289207935333252
    6. '#' (adapté à ' #') → logprob: -6.539207935333252
    7. '
' → logprob: -7.914207935333252
    8. '1' → logprob: -8.16420841217041
    9. '        ' → logprob: -8.53920841217041
    10. ' (' → logprob: -8.91420841217041

Token 1916: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3022688627243042
    2. '   ' → logprob: -1.5522688627243042
    3. 'for' → logprob: -1.6772688627243042
    4. ' for' → logprob: -1.8022688627243042
    5. 'N' → logprob: -3.1772689819335938
    6. ' N' → logprob: -3.4272689819335938
    7. '
' → logprob: -4.052268981933594
    8. '0' → logprob: -4.427268981933594
    9. ' ' → logprob: -4.927268981933594
    10. '1' → logprob: -5.052268981933594

Token 1917: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0006621609791181982
    2. ' =' → logprob: -7.625662326812744
    3. '[' → logprob: -10.125661849975586
    4. 'c' → logprob: -10.500661849975586
    5. '```' → logprob: -10.625661849975586
    6. '=' → logprob: -10.750661849975586
    7. '_next' → logprob: -11.125661849975586
    8. '   ' → logprob: -11.625661849975586
    9. '=c' → logprob: -12.000661849975586
    10. '[next' → logprob: -12.125661849975586

Token 1918: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.019092576578259468
    2. '+' → logprob: -4.019092559814453
    3. ']' → logprob: -7.394092559814453
    4. '   ' → logprob: -8.894092559814453
    5. ' +' → logprob: -9.144092559814453
    6. ' ][' → logprob: -10.519092559814453
    7. '[' → logprob: -12.019092559814453
    8. '1' → logprob: -12.269092559814453
    9. '[r' → logprob: -12.269092559814453
    10. '][]' → logprob: -12.269092559814453

Token 1919: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14738212525844574
    2. '+' → logprob: -2.3973820209503174
    3. '][' → logprob: -3.1473820209503174
    4. ']' → logprob: -7.0223822593688965
    5. '   ' → logprob: -7.0223822593688965
    6. ' ][' → logprob: -7.1473822593688965
    7. ' +' → logprob: -8.522381782531738
    8. ' ' → logprob: -9.022381782531738
    9. '```' → logprob: -9.897381782531738
    10. '
' → logprob: -10.772381782531738

Token 1920: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010662743588909507
    2. ']' → logprob: -7.001066207885742
    3. ' ][' → logprob: -10.126066207885742
    4. '   ' → logprob: -10.126066207885742
    5. '[r' → logprob: -10.126066207885742
    6. '[' → logprob: -11.251066207885742
    7. '][]' → logprob: -12.876066207885742
    8. ' ' → logprob: -13.001066207885742
    9. '```' → logprob: -13.126066207885742
    10. ']
' → logprob: -13.376066207885742

Token 1921: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00016194197814911604
    2. '0' → logprob: -9.750162124633789
    3. ' r' → logprob: -10.000162124633789
    4. ']' → logprob: -11.125162124633789
    5. 'row' → logprob: -11.250162124633789
    6. 'i' → logprob: -11.500162124633789
    7. '   ' → logprob: -12.000162124633789
    8. '
' → logprob: -13.375162124633789
    9. '```' → logprob: -13.500162124633789
    10. 'j' → logprob: -13.750162124633789

Token 1922: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021456200629472733
    2. ']' → logprob: -6.377145767211914
    3. '+' → logprob: -8.127145767211914
    4. '][' → logprob: -9.252145767211914
    5. '   ' → logprob: -10.502145767211914
    6. ']+' → logprob: -11.252145767211914
    7. ' +' → logprob: -13.002145767211914
    8. ' ' → logprob: -13.377145767211914
    9. 'r' → logprob: -13.752145767211914
    10. '1' → logprob: -14.127145767211914

Token 1923: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010453128488734365
    2. ']=' → logprob: -7.251045227050781
    3. '=' → logprob: -8.251045227050781
    4. '][' → logprob: -10.751045227050781
    5. ' =' → logprob: -10.876045227050781
    6. ' ]' → logprob: -10.876045227050781
    7. ']+=' → logprob: -12.251045227050781
    8. '   ' → logprob: -13.001045227050781
    9. ']+' → logprob: -13.126045227050781
    10. ']
' → logprob: -13.251045227050781

Token 1924: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062211014330387115
    2. ' =' → logprob: -2.812211036682129
    3. '       ' → logprob: -9.937211036682129
    4. '=
' → logprob: -10.187211036682129
    5. '```' → logprob: -10.687211036682129
    6. '+=' → logprob: -10.812211036682129
    7. ' +=' → logprob: -10.812211036682129
    8. '[' → logprob: -10.937211036682129
    9. '   ' → logprob: -11.062211036682129
    10. ']' → logprob: -11.437211036682129

Token 1925: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05255136638879776
    2. 'dp' → logprob: -3.42755126953125
    3. ' min' → logprob: -4.05255126953125
    4. '   ' → logprob: -7.55255126953125
    5. ' dp' → logprob: -8.05255126953125
    6. 'float' → logprob: -8.67755126953125
    7. 'inf' → logprob: -9.05255126953125
    8. 'max' → logprob: -9.92755126953125
    9. 'INF' → logprob: -10.30255126953125
    10. '\' → logprob: -10.92755126953125

Token 1926: ' over' (ID: 1072)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.8546326756477356
    2. '(
' → logprob: -1.1046326160430908
    3. 'dp' → logprob: -1.8546326160430908
    4. '(' → logprob: -2.729632616043091
    5. '[
' → logprob: -5.10463285446167
    6. ' (' → logprob: -5.85463285446167
    7. '       ' → logprob: -6.35463285446167
    8. '   ' → logprob: -6.47963285446167
    9. ' dp' → logprob: -6.47963285446167
    10. '{
' → logprob: -6.47963285446167

Token 1927: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009244420798495412
    2. 'dp' → logprob: -7.125924587249756
    3. ' r' → logprob: -10.250924110412598
    4. '   ' → logprob: -10.500924110412598
    5. 'range' → logprob: -10.625924110412598
    6. '0' → logprob: -11.750924110412598
    7. 'prev' → logprob: -12.375924110412598
    8. 'all' → logprob: -12.625924110412598
    9. '[r' → logprob: -12.625924110412598
    10. '       ' → logprob: -12.875924110412598

Token 1928: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7050955891609192
    2. '[' → logprob: -2.2050955295562744
    3. '[
' → logprob: -2.4550955295562744
    4. '[c' → logprob: -3.2050955295562744
    5. '```' → logprob: -3.5800955295562744
    6. '_' → logprob: -3.5800955295562744
    7. 'r' → logprob: -3.8300955295562744
    8. 'c' → logprob: -3.9550955295562744
    9. ']' → logprob: -3.9550955295562744
    10. '][' → logprob: -4.0800957679748535

Token 1929: ' dp' (ID: 21546)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.9406419396400452
    2. ']' → logprob: -1.8156418800354004
    3. '[c' → logprob: -2.0656418800354004
    4. '[
' → logprob: -2.0656418800354004
    5. '[' → logprob: -2.6906418800354004
    6. '```' → logprob: -3.0656418800354004
    7. '[r' → logprob: -3.8156418800354004
    8. '       ' → logprob: -5.0656418800354
    9. ')' → logprob: -5.1906418800354
    10. '   ' → logprob: -5.3156418800354

Token 1930: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.5928495486150496e-05
    2. '[' → logprob: -12.250016212463379
    3. ' [' → logprob: -12.625016212463379
    4. 'c' → logprob: -13.000016212463379
    5. '   ' → logprob: -13.125016212463379
    6. '[
' → logprob: -13.500016212463379
    7. '```' → logprob: -14.125016212463379
    8. '       ' → logprob: -14.375016212463379
    9. '
' → logprob: -15.375016212463379
    10. '\[' → logprob: -15.750016212463379

Token 1931: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.6220874190330505
    2. '+' → logprob: -1.1220874786376953
    3. '][' → logprob: -2.1220874786376953
    4. ']' → logprob: -4.247087478637695
    5. ']+' → logprob: -6.872087478637695
    6. '[' → logprob: -6.997087478637695
    7. '   ' → logprob: -7.872087478637695
    8. ' +' → logprob: -8.122087478637695
    9. '+c' → logprob: -8.122087478637695
    10. 'c' → logprob: -8.497087478637695

Token 1932: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019511326681822538
    2. ']' → logprob: -6.751951217651367
    3. '][' → logprob: -7.501951217651367
    4. 'c' → logprob: -9.751951217651367
    5. '   ' → logprob: -9.751951217651367
    6. ' r' → logprob: -11.001951217651367
    7. '1' → logprob: -11.376951217651367
    8. '[r' → logprob: -11.376951217651367
    9. ']
' → logprob: -11.751951217651367
    10. '+' → logprob: -11.751951217651367

Token 1933: '1' (ID: 16)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6596451997756958
    2. '1' → logprob: -1.1596451997756958
    3. '2' → logprob: -2.0346450805664062
    4. ']' → logprob: -4.034645080566406
    5. '+' → logprob: -4.159645080566406
    6. '[' → logprob: -5.659645080566406
    7. '[r' → logprob: -8.034645080566406
    8. '[
' → logprob: -8.159645080566406
    9. '   ' → logprob: -8.159645080566406
    10. '```' → logprob: -8.534645080566406

Token 1934: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.38736996054649353
    2. '[r' → logprob: -1.387369990348816
    3. ']' → logprob: -3.5123698711395264
    4. '[' → logprob: -4.3873701095581055
    5. '[
' → logprob: -4.6373701095581055
    6. '       ' → logprob: -4.8873701095581055
    7. ' +' → logprob: -6.3873701095581055
    8. '           ' → logprob: -6.3873701095581055
    9. '+' → logprob: -6.6373701095581055
    10. '   ' → logprob: -6.6373701095581055

Token 1935: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8968677520751953
    2. '[c' → logprob: -1.3968677520751953
    3. '[r' → logprob: -1.8968677520751953
    4. '[
' → logprob: -2.2718677520751953
    5. '       ' → logprob: -4.021867752075195
    6. '   ' → logprob: -4.271867752075195
    7. '```' → logprob: -4.271867752075195
    8. ']' → logprob: -4.646867752075195
    9. ':' → logprob: -5.021867752075195
    10. '][' → logprob: -5.396867752075195

Token 1936: ' vertical' (ID: 17679)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.13098642230033875
    2. ' abs' → logprob: -2.380986452102661
    3. '(abs' → logprob: -3.630986452102661
    4. 'min' → logprob: -6.755986213684082
    5. 'vertical' → logprob: -7.255986213684082
    6. ' (' → logprob: -7.380986213684082
    7. '(' → logprob: -7.505986213684082
    8. '(min' → logprob: -8.130986213684082
    9. ' min' → logprob: -9.255986213684082
    10. '1' → logprob: -9.755986213684082

Token 1937: '_path' (ID: 5558)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.0749993324279785
    2. '_cost' → logprob: -1.3249993324279785
    3. '_path' → logprob: -1.8249993324279785
    4. 'distance' → logprob: -3.1999993324279785
    5. 'path' → logprob: -3.4499993324279785
    6. '_move' → logprob: -3.8249993324279785
    7. '_distance' → logprob: -3.8249993324279785
    8. ' cost' → logprob: -4.1999993324279785
    9. ' +' → logprob: -4.3249993324279785
    10. '   ' → logprob: -4.3249993324279785

Token 1938: '_cost' (ID: 36820)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.6283948421478271
    2. '[
' → logprob: -1.1283948421478271
    3. '[' → logprob: -2.628394842147827
    4. '_' → logprob: -4.378395080566406
    5. ']' → logprob: -4.503395080566406
    6. '
' → logprob: -4.878395080566406
    7. '   ' → logprob: -5.128395080566406
    8. ' =' → logprob: -5.128395080566406
    9. '=' → logprob: -5.378395080566406
    10. '\[' → logprob: -6.128395080566406

Token 1939: '(r' (ID: 4729)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.5891460180282593
    2. '[
' → logprob: -1.5891460180282593
    3. '[' → logprob: -1.7141460180282593
    4. ']' → logprob: -4.589146137237549
    5. '_' → logprob: -4.839146137237549
    6. '+' → logprob: -4.839146137237549
    7. '=' → logprob: -5.214146137237549
    8. '   ' → logprob: -5.464146137237549
    9. '```' → logprob: -5.589146137237549
    10. '][' → logprob: -5.964146137237549

Token 1940: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20030036568641663
    2. '2' → logprob: -1.8253003358840942
    3. '+' → logprob: -4.200300216674805
    4. ',' → logprob: -6.325300216674805
    5. ')' → logprob: -6.700300216674805
    6. '[' → logprob: -7.075300216674805
    7. ']' → logprob: -8.575300216674805
    8. 'r' → logprob: -8.575300216674805
    9. '[r' → logprob: -8.950300216674805
    10. '[
' → logprob: -9.450300216674805

Token 1941: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29863592982292175
    2. ',r' → logprob: -2.048635959625244
    3. '][' → logprob: -2.548635959625244
    4. ')[' → logprob: -3.923635959625244
    5. ')' → logprob: -4.298635959625244
    6. '[r' → logprob: -4.673635959625244
    7. ' ,' → logprob: -6.048635959625244
    8. ']' → logprob: -6.923635959625244
    9. ')+' → logprob: -7.298635959625244
    10. ',
' → logprob: -7.423635959625244

Token 1942: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.030955184251070023
    2. 'S' → logprob: -4.5309553146362305
    3. 'rows' → logprob: -4.5309553146362305
    4. '...' → logprob: -6.0309553146362305
    5. 'required' → logprob: -6.4059553146362305
    6. ' r' → logprob: -7.4059553146362305
    7. 'cols' → logprob: -7.7809553146362305
    8. '[' → logprob: -7.9059553146362305
    9. '[r' → logprob: -7.9059553146362305
    10. 'books' → logprob: -8.03095531463623

Token 1943: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008444105042144656
    2. 'r' → logprob: -8.25084400177002
    3. 'rows' → logprob: -8.75084400177002
    4. 'o' → logprob: -9.50084400177002
    5. 's' → logprob: -9.87584400177002
    6. 'b' → logprob: -10.00084400177002
    7. '[' → logprob: -10.62584400177002
    8. ',' → logprob: -10.75084400177002
    9. 'c' → logprob: -10.75084400177002
    10. 'books' → logprob: -11.12584400177002

Token 1944: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13159701228141785
    2. ')+' → logprob: -2.5065970420837402
    3. ',' → logprob: -4.50659704208374
    4. '[r' → logprob: -4.50659704208374
    5. ']' → logprob: -5.00659704208374
    6. '+' → logprob: -5.63159704208374
    7. ']+' → logprob: -5.75659704208374
    8. '       ' → logprob: -6.63159704208374
    9. '           ' → logprob: -6.75659704208374
    10. ' +' → logprob: -7.13159704208374

Token 1945: ' rows' (ID: 13585)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.28191614151000977
    2. 'books' → logprob: -2.0319161415100098
    3. 'rows' → logprob: -3.1569161415100098
    4. 'book' → logprob: -3.1569161415100098
    5. 'cols' → logprob: -5.03191614151001
    6. ' S' → logprob: -5.28191614151001
    7. 'set' → logprob: -5.53191614151001
    8. 'required' → logprob: -5.78191614151001
    9. 's' → logprob: -6.28191614151001
    10. 'columns' → logprob: -6.53191614151001

Token 1946: '_with' (ID: 14161)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.7903918623924255
    2. '_with' → logprob: -0.7903918623924255
    3. ')' → logprob: -2.9153919219970703
    4. ' with' → logprob: -4.66539192199707
    5. ']' → logprob: -5.29039192199707
    6. '       ' → logprob: -5.79039192199707
    7. 's' → logprob: -6.16539192199707
    8. '[' → logprob: -6.29039192199707
    9. '   ' → logprob: -6.41539192199707
    10. '_' → logprob: -6.41539192199707

Token 1947: '_books' (ID: 176077)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.003555408213287592
    2. 'book' → logprob: -6.6285552978515625
    3. ' books' → logprob: -7.2535552978515625
    4. '   ' → logprob: -7.3785552978515625
    5. '_books' → logprob: -8.253555297851562
    6. 'Y' → logprob: -9.128555297851562
    7. 'b' → logprob: -9.378555297851562
    8. '       ' → logprob: -9.628555297851562
    9. ' ' → logprob: -9.753555297851562
    10. '```' → logprob: -10.003555297851562

Token 1948: '_c' (ID: 1303)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.1720669269561768
    2. '[c' → logprob: -1.4220669269561768
    3. ')' → logprob: -1.5470669269561768
    4. 'at' → logprob: -2.2970669269561768
    5. '   ' → logprob: -3.7970669269561768
    6. ']' → logprob: -3.9220669269561768
    7. ' at' → logprob: -3.9220669269561768
    8. ',' → logprob: -4.047066688537598
    9. '[' → logprob: -4.797066688537598
    10. '       ' → logprob: -4.797066688537598

Token 1949: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7863971590995789
    2. ']' → logprob: -1.4113972187042236
    3. '])' → logprob: -1.4113972187042236
    4. '       ' → logprob: -4.4113969802856445
    5. ')]' → logprob: -5.0363969802856445
    6. '])
' → logprob: -5.1613969802856445
    7. '],' → logprob: -5.2863969802856445
    8. '   ' → logprob: -5.5363969802856445
    9. ')
' → logprob: -6.0363969802856445
    10. 's' → logprob: -6.0363969802856445

Token 1950: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20544233918190002
    2. '   ' → logprob: -2.330442428588867
    3. '[' → logprob: -3.705442428588867
    4. ' =' → logprob: -4.455442428588867
    5. ':' → logprob: -4.705442428588867
    6. '           ' → logprob: -5.080442428588867
    7. '
' → logprob: -5.580442428588867
    8. '        
' → logprob: -5.955442428588867
    9. '\' → logprob: -6.080442428588867
    10. ':
' → logprob: -6.080442428588867

Token 1951: ' num' (ID: 2269)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.7813551425933838
    2. 'number' → logprob: -1.5313551425933838
    3. ' (' → logprob: -2.281355142593384
    4. '1' → logprob: -2.906355142593384
    5. '(' → logprob: -3.031355142593384
    6. 'num' → logprob: -3.656355142593384
    7. ' ' → logprob: -3.781355142593384
    8. '(number' → logprob: -3.906355142593384
    9. 'books' → logprob: -4.906354904174805
    10. '   ' → logprob: -5.031354904174805

Token 1952: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.09591848403215408
    2. '_' → logprob: -3.2209184169769287
    3. '_rows' → logprob: -3.5959184169769287
    4. '_r' → logprob: -4.970918655395508
    5. '       ' → logprob: -5.720918655395508
    6. '[r' → logprob: -6.095918655395508
    7. 'Books' → logprob: -6.720918655395508
    8. '_book' → logprob: -6.845918655395508
    9. ' _' → logprob: -7.220918655395508
    10. '[_' → logprob: -7.220918655395508

Token 1953: '_c' (ID: 1303)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1044076681137085
    2. '[c' → logprob: -1.8544076681137085
    3. '       ' → logprob: -2.229407787322998
    4. '[
' → logprob: -2.479407787322998
    5. '   ' → logprob: -2.854407787322998
    6. ']' → logprob: -2.854407787322998
    7. '[' → logprob: -3.229407787322998
    8. '][' → logprob: -3.354407787322998
    9. ' =' → logprob: -3.604407787322998
    10. '```' → logprob: -4.229407787322998

Token 1954: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.469958633184433
    2. '       ' → logprob: -1.0949586629867554
    3. ':
' → logprob: -5.344958782196045
    4. '[' → logprob: -5.719958782196045
    5. '        
' → logprob: -5.719958782196045
    6. '   ' → logprob: -5.719958782196045
    7. ' +' → logprob: -5.969958782196045
    8. ':' → logprob: -6.094958782196045
    9. '][' → logprob: -6.219958782196045
    10. '```' → logprob: -6.344958782196045

Token 1955: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006370236515067518
    2. ' ' → logprob: -7.500637054443359
    3. '   ' → logprob: -10.00063705444336
    4. ' (' → logprob: -11.87563705444336
    5. '
' → logprob: -12.25063705444336
    6. '4' → logprob: -12.37563705444336
    7. '+' → logprob: -12.50063705444336
    8. '(' → logprob: -12.62563705444336
    9. '```' → logprob: -12.62563705444336
    10. ' +' → logprob: -13.00063705444336

Token 1956: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. 'N' → logprob: -11.625024795532227
    3. '(' → logprob: -12.125024795532227
    4. ' ' → logprob: -12.625024795532227
    5. '4' → logprob: -12.625024795532227
    6. '+' → logprob: -13.500024795532227
    7. '   ' → logprob: -13.875024795532227
    8. '
' → logprob: -14.875024795532227
    9. '(N' → logprob: -15.250024795532227
    10. ' (' → logprob: -15.500024795532227

Token 1957: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24428781867027283
    2. '
' → logprob: -2.7442877292633057
    3. '   ' → logprob: -3.1192877292633057
    4. '\' → logprob: -3.9942877292633057
    5. ':' → logprob: -4.244287967681885
    6. '\n' → logprob: -4.244287967681885
    7. '        
' → logprob: -4.619287967681885
    8. '[' → logprob: -4.619287967681885
    9. ':
' → logprob: -4.869287967681885
    10. '    
' → logprob: -5.119287967681885

Token 1958: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5704295039176941
    2. '
' → logprob: -1.0704295635223389
    3. '   ' → logprob: -3.195429563522339
    4. '[' → logprob: -4.69542932510376
    5. '        
' → logprob: -5.19542932510376
    6. '```' → logprob: -5.57042932510376
    7. ':' → logprob: -5.82042932510376
    8. ']' → logprob: -5.82042932510376
    9. '][' → logprob: -5.94542932510376
    10. '    
' → logprob: -5.94542932510376

Token 1959: ' INF' (ID: 69196)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14452509582042694
    2. '   ' → logprob: -2.5195250511169434
    3. '
' → logprob: -3.1445250511169434
    4. '        
' → logprob: -6.519525051116943
    5. '\' → logprob: -6.769525051116943
    6. '    
' → logprob: -6.894525051116943
    7. '\n' → logprob: -6.894525051116943
    8. '```' → logprob: -7.019525051116943
    9. 'for' → logprob: -7.144525051116943
    10. '4' → logprob: -7.644525051116943

Token 1960: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14291025698184967
    2. '=' → logprob: -2.0179102420806885
    3. ')' → logprob: -9.26791000366211
    4. '```' → logprob: -9.76791000366211
    5. '   ' → logprob: -10.14291000366211
    6. '=
' → logprob: -11.01791000366211
    7. ' =
' → logprob: -11.39291000366211
    8. ',' → logprob: -12.39291000366211
    9. '
' → logprob: -12.51791000366211
    10. '=int' → logprob: -13.89291000366211

Token 1961: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.8444881536415778e-05
    2. 'int' → logprob: -11.125028610229492
    3. 'float' → logprob: -11.750028610229492
    4. ' ' → logprob: -12.500028610229492
    5. '1' → logprob: -13.250028610229492
    6. '100' → logprob: -15.750028610229492
    7. '   ' → logprob: -16.500028610229492
    8. '           ' → logprob: -18.875028610229492
    9. '999' → logprob: -19.375028610229492
    10. '       ' → logprob: -19.875028610229492

Token 1962: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011091921478509903
    2. 'float' → logprob: -4.511091709136963
    3. 'int' → logprob: -10.261092185974121
    4. '1' → logprob: -11.636092185974121
    5. '100' → logprob: -15.886092185974121
    6. ' float' → logprob: -16.386091232299805
    7. ' ' → logprob: -16.636091232299805
    8. '2' → logprob: -19.136091232299805
    9. '200' → logprob: -19.386091232299805
    10. '999' → logprob: -19.511091232299805

Token 1963: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7993524074554443
    2. '6' → logprob: -1.2993524074554443
    3. '9' → logprob: -1.2993524074554443
    4. '7' → logprob: -5.924352645874023
    5. '5' → logprob: -6.674352645874023
    6. '3' → logprob: -7.924352645874023
    7. '000' → logprob: -8.174352645874023
    8. '0' → logprob: -9.049352645874023
    9. '```' → logprob: -9.799352645874023
    10. '4' → logprob: -9.924352645874023

Token 1964: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0024931374937295914
    2. '15' → logprob: -6.377492904663086
    3. '18' → logprob: -7.252492904663086
    4. '12' → logprob: -9.627492904663086
    5. '6' → logprob: -12.252492904663086
    6. '10' → logprob: -12.627492904663086
    7. '14' → logprob: -12.877492904663086
    8. '7' → logprob: -13.002492904663086
    9. '13' → logprob: -13.502492904663086
    10. '16' → logprob: -13.752492904663086

Token 1965: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21990130841732025
    2. '   ' → logprob: -1.8449013233184814
    3. '       ' → logprob: -4.344901084899902
    4. 'dp' → logprob: -4.469901084899902
    5. '    
' → logprob: -5.219901084899902
    6. 'def' → logprob: -5.594901084899902
    7. '<|end|>' → logprob: -6.594901084899902
    8. '        
' → logprob: -6.719901084899902
    9. '```' → logprob: -7.844901084899902
    10. ')' → logprob: -7.969901084899902

Token 1966: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3680388629436493
    2. '
' → logprob: -1.6180388927459717
    3. '   ' → logprob: -2.4930388927459717
    4. 'dp' → logprob: -3.8680388927459717
    5. '        
' → logprob: -5.993038654327393
    6. '```' → logprob: -6.368038654327393
    7. '    
' → logprob: -7.493038654327393
    8. ' dp' → logprob: -7.993038654327393
    9. 'def' → logprob: -8.61803913116455
    10. '           ' → logprob: -9.11803913116455

Token 1967: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06476356834173203
    2. '       ' → logprob: -2.8147635459899902
    3. '   ' → logprob: -6.56476354598999
    4. ' dp' → logprob: -7.56476354598999
    5. '
' → logprob: -8.189764022827148
    6. 'rows' → logprob: -8.689764022827148
    7. '```' → logprob: -9.564764022827148
    8. 'books' → logprob: -9.814764022827148
    9. 'for' → logprob: -10.064764022827148
    10. 'book' → logprob: -10.189764022827148

Token 1968: ' Extract' (ID: 39239)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1235758364200592
    2. '       ' → logprob: -2.2485759258270264
    3. '   ' → logprob: -5.248575687408447
    4. ' dp' → logprob: -5.873575687408447
    5. '
' → logprob: -6.998575687408447
    6. 'rows' → logprob: -7.248575687408447
    7. 'DP' → logprob: -8.248576164245605
    8. 'book' → logprob: -9.373576164245605
    9. 'books' → logprob: -9.623576164245605
    10. 'cost' → logprob: -9.748576164245605

Token 1969: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.5607648491859436
    2. '       ' → logprob: -1.8107647895812988
    3. ' rows' → logprob: -1.9357647895812988
    4. 'books' → logprob: -2.935764789581299
    5. '   ' → logprob: -4.185764789581299
    6. '```' → logprob: -4.435764789581299
    7. ' books' → logprob: -4.560764789581299
    8. 'required' → logprob: -5.560764789581299
    9. 'book' → logprob: -5.685764789581299
    10. ' required' → logprob: -6.060764789581299

Token 1970: ' with' (ID: 483)
  Prédit: '_with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.17751652002334595
    2. ' =' → logprob: -2.177516460418701
    3. 'with' → logprob: -3.927516460418701
    4. '=' → logprob: -4.552516460418701
    5. 's' → logprob: -4.927516460418701
    6. '_to' → logprob: -6.177516460418701
    7. '_books' → logprob: -6.677516460418701
    8. '_needed' → logprob: -6.802516460418701
    9. '_set' → logprob: -6.927516460418701
    10. '_book' → logprob: -7.177516460418701

Token 1971: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.019026724621653557
    2. '_books' → logprob: -4.644026756286621
    3. ' books' → logprob: -4.894026756286621
    4. 'Y' → logprob: -7.394026756286621
    5. 'book' → logprob: -7.769026756286621
    6. '_' → logprob: -9.019026756286621
    7. '_book' → logprob: -9.144026756286621
    8. '```' → logprob: -9.144026756286621
    9. ' ' → logprob: -9.519026756286621
    10. ' at' → logprob: -10.019026756286621

Token 1972: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4057154953479767
    2. 'rows' → logprob: -1.6557154655456543
    3. '       ' → logprob: -2.9057154655456543
    4. '=' → logprob: -3.6557154655456543
    5. '   ' → logprob: -4.905715465545654
    6. '_rows' → logprob: -5.030715465545654
    7. ' rows' → logprob: -5.030715465545654
    8. 'at' → logprob: -5.280715465545654
    9. '
' → logprob: -5.405715465545654
    10. 'books' → logprob: -5.655715465545654

Token 1973: ' each' (ID: 2454)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003182467306032777
    2. 'col' → logprob: -6.253182411193848
    3. ' c' → logprob: -7.878182411193848
    4. 'current' → logprob: -8.128182411193848
    5. 'each' → logprob: -8.378182411193848
    6. 'column' → logprob: -8.503182411193848
    7. '       ' → logprob: -10.753182411193848
    8. '```' → logprob: -10.878182411193848
    9. 'columns' → logprob: -11.128182411193848
    10. '   ' → logprob: -11.128182411193848

Token 1974: ' column' (ID: 6000)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6000879406929016
    2. ' c' → logprob: -1.1000878810882568
    3. ' column' → logprob: -3.100087881088257
    4. 'column' → logprob: -3.350087881088257
    5. 'col' → logprob: -3.725087881088257
    6. ' col' → logprob: -5.225088119506836
    7. ' ' → logprob: -5.475088119506836
    8. '   ' → logprob: -6.725088119506836
    9. '```' → logprob: -7.225088119506836
    10. ')' → logprob: -7.975088119506836

Token 1975: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5361365675926208
    2. '_rows' → logprob: -2.5361366271972656
    3. 'rows' → logprob: -2.7861366271972656
    4. '       ' → logprob: -2.7861366271972656
    5. '
' → logprob: -3.2861366271972656
    6. '_col' → logprob: -3.4111366271972656
    7. '_' → logprob: -3.7861366271972656
    8. '_books' → logprob: -3.7861366271972656
    9. '_cols' → logprob: -3.9111366271972656
    10. '=' → logprob: -4.286136627197266

Token 1976: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2085818350315094
    2. 'rows' → logprob: -1.958581805229187
    3. ' rows' → logprob: -3.8335819244384766
    4. 'cols' → logprob: -4.833581924438477
    5. 'columns' → logprob: -5.583581924438477
    6. 'books' → logprob: -5.833581924438477
    7. ' cols' → logprob: -5.958581924438477
    8. 'book' → logprob: -6.083581924438477
    9. '```' → logprob: -6.458581924438477
    10. ' columns' → logprob: -7.333581924438477

Token 1977: ' rows' (ID: 13585)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9851944446563721
    2. 'rows' (adapté à ' rows') → logprob: -1.110194444656372
    3. 'cols' → logprob: -2.110194444656372
    4. ' rows' → logprob: -2.985194444656372
    5. 'columns' → logprob: -3.235194444656372
    6. 'books' → logprob: -3.985194444656372
    7. ' cols' → logprob: -4.110194206237793
    8. 'col' → logprob: -4.235194206237793
    9. 'book' → logprob: -4.360194206237793
    10. ' columns' → logprob: -4.985194206237793

Token 1978: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.042598988860845566
    2. ' =' → logprob: -4.292599201202393
    3. '_at' → logprob: -4.417599201202393
    4. '_per' → logprob: -4.917599201202393
    5. '_c' → logprob: -6.167599201202393
    6. 's' → logprob: -6.417599201202393
    7. '=' → logprob: -6.542599201202393
    8. '_in' → logprob: -6.917599201202393
    9. 'with' → logprob: -7.292599201202393
    10. '_set' → logprob: -7.792599201202393

Token 1979: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.20157970488071442
    2. 'books' → logprob: -1.7015796899795532
    3. '_book' → logprob: -10.326580047607422
    4. ' books' → logprob: -10.451580047607422
    5. '```' → logprob: -10.576580047607422
    6. '_' → logprob: -10.826580047607422
    7. 'book' → logprob: -10.951580047607422
    8. 'Books' → logprob: -11.576580047607422
    9. '   ' → logprob: -12.326580047607422
    10. 's' → logprob: -12.451580047607422

Token 1980: '_cols' (ID: 60927)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4605453312397003
    2. '=' → logprob: -1.085545301437378
    3. '_c' → logprob: -4.585545539855957
    4. '[c' → logprob: -4.835545539855957
    5. '[' → logprob: -5.335545539855957
    6. '_' → logprob: -5.960545539855957
    7. '=[' → logprob: -6.460545539855957
    8. '   ' → logprob: -6.710545539855957
    9. '_at' → logprob: -7.835545539855957
    10. '_per' → logprob: -7.960545539855957

Token 1981: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2815217673778534
    2. ' =' → logprob: -1.4065217971801758
    3. '   ' → logprob: -8.531521797180176
    4. '=[]' → logprob: -10.281521797180176
    5. '[' → logprob: -10.781521797180176
    6. '=[' → logprob: -10.906521797180176
    7. 's' → logprob: -11.156521797180176
    8. '       ' → logprob: -11.156521797180176
    9. '=[]
' → logprob: -11.281521797180176
    10. ' ' → logprob: -11.781521797180176

Token 1982: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0023921828251332045
    2. ' [[]' → logprob: -6.252392292022705
    3. ' [' → logprob: -7.752392292022705
    4. '[[' → logprob: -11.002391815185547
    5. '[]' → logprob: -11.502391815185547
    6. '   ' → logprob: -12.377391815185547
    7. '[]
' → logprob: -14.127391815185547
    8. '{' → logprob: -14.627391815185547
    9. '[
' → logprob: -14.627391815185547
    10. '{}' → logprob: -15.502391815185547

Token 1983: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20591594278812408
    2. ']' → logprob: -2.080915927886963
    3. '       ' → logprob: -3.455915927886963
    4. ' for' → logprob: -4.330915927886963
    5. ']
' → logprob: -5.080915927886963
    6. '()' → logprob: -5.705915927886963
    7. ',' → logprob: -6.330915927886963
    8. '()]' → logprob: -6.580915927886963
    9. ')' → logprob: -7.455915927886963
    10. '   ' → logprob: -7.705915927886963

Token 1984: ' _' (ID: 1175)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.40337398648262024
    2. 'range' → logprob: -1.5283739566802979
    3. '(N' → logprob: -2.903373956680298
    4. 'c' → logprob: -4.278374195098877
    5. '   ' → logprob: -4.528374195098877
    6. ' range' → logprob: -4.653374195098877
    7. '       ' → logprob: -4.903374195098877
    8. ']' → logprob: -5.778374195098877
    9. '_N' → logprob: -6.278374195098877
    10. '(' → logprob: -6.403374195098877

Token 1985: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010665638372302055
    2. ' range' → logprob: -4.635665416717529
    3. 'in' → logprob: -8.010665893554688
    4. 'N' → logprob: -8.260665893554688
    5. '=' → logprob: -8.385665893554688
    6. '(range' → logprob: -10.385665893554688
    7. ' in' → logprob: -11.385665893554688
    8. '   ' → logprob: -11.510665893554688
    9. '_range' → logprob: -11.760665893554688
    10. ']' → logprob: -11.885665893554688

Token 1986: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006575515493750572
    2. ' range' → logprob: -5.131575584411621
    3. 'N' → logprob: -7.381575584411621
    4. '(range' → logprob: -11.006575584411621
    5. '(N' → logprob: -13.006575584411621
    6. '_range' → logprob: -14.006575584411621
    7. '       ' → logprob: -14.131575584411621
    8. ')' → logprob: -14.381575584411621
    9. '_N' → logprob: -14.381575584411621
    10. '   ' → logprob: -14.881575584411621

Token 1987: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00026968008023686707
    2. '(N' → logprob: -8.250269889831543
    3. '   ' → logprob: -12.500269889831543
    4. '       ' → logprob: -12.750269889831543
    5. ' N' → logprob: -14.000269889831543
    6. '           ' → logprob: -14.500269889831543
    7. '4' → logprob: -15.000269889831543
    8. ' (' → logprob: -16.750268936157227
    9. '
' → logprob: -17.500268936157227
    10. '(' → logprob: -17.625268936157227

Token 1988: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.08674480766057968
    2. ')]' → logprob: -2.586744785308838
    3. '       ' → logprob: -5.086744785308838
    4. ')]
' → logprob: -6.961744785308838
    5. ')]

' → logprob: -8.211745262145996
    6. '   ' → logprob: -8.711745262145996
    7. ']' → logprob: -9.086745262145996
    8. ']
' → logprob: -10.086745262145996
    9. ']]
' → logprob: -10.461745262145996
    10. ')][' → logprob: -11.086745262145996

Token 1989: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.400177001953125
    2. 'for' → logprob: -1.150177001953125
    3. ' for' → logprob: -4.400177001953125
    4. '```' → logprob: -8.400177001953125
    5. 'books' → logprob: -8.900177001953125
    6. 'book' → logprob: -9.025177001953125
    7. '           ' → logprob: -9.025177001953125
    8. '
' → logprob: -9.525177001953125
    9. '   ' → logprob: -9.525177001953125
    10. 'row' → logprob: -10.150177001953125

Token 1990: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1177472472190857
    2. '       ' → logprob: -2.2427473068237305
    3. ' for' → logprob: -5.6177473068237305
    4. '```' → logprob: -6.8677473068237305
    5. 'index' → logprob: -10.11774730682373
    6. 'i' → logprob: -10.24274730682373
    7. 'book' → logprob: -10.36774730682373
    8. '``' → logprob: -10.49274730682373
    9. 'idx' → logprob: -10.61774730682373
    10. 'books' → logprob: -10.99274730682373

Token 1991: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5437741279602051
    2. ' i' → logprob: -1.418774127960205
    3. ' c' → logprob: -2.543774127960205
    4. 'c' → logprob: -2.668774127960205
    5. 's' → logprob: -4.043774127960205
    6. ' s' → logprob: -4.668774127960205
    7. ' idx' → logprob: -7.418774127960205
    8. 'r' → logprob: -7.793774127960205
    9. 'idx' → logprob: -7.793774127960205
    10. ' col' → logprob: -8.168773651123047

Token 1992: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.254630982875824
    2. ' in' → logprob: -1.5046310424804688
    3. ',' → logprob: -6.379631042480469
    4. 's' → logprob: -7.879631042480469
    5. '```' → logprob: -8.504631042480469
    6. '_in' → logprob: -9.129631042480469
    7. ')' → logprob: -9.379631042480469
    8. 'n' → logprob: -9.629631042480469
    9. ' ,' → logprob: -10.379631042480469
    10. 'i' → logprob: -10.504631042480469

Token 1993: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048598386347293854
    2. ' range' → logprob: -3.048598289489746
    3. '0' → logprob: -12.048598289489746
    4. 'r' → logprob: -13.673598289489746
    5. ' ' → logprob: -14.298598289489746
    6. 'in' → logprob: -14.673598289489746
    7. '_' → logprob: -14.673598289489746
    8. '(range' → logprob: -14.798598289489746
    9. '```' → logprob: -14.923598289489746
    10. 'i' → logprob: -15.048598289489746

Token 1994: '(' (ID: 7)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00018458699923940003
    2. '4' → logprob: -9.750185012817383
    3. ' N' → logprob: -9.750185012817383
    4. '0' → logprob: -9.875185012817383
    5. '(N' → logprob: -12.000185012817383
    6. 's' → logprob: -12.500185012817383
    7. '   ' → logprob: -12.625185012817383
    8. '(' → logprob: -13.500185012817383
    9. '       ' → logprob: -14.500185012817383
    10. ' ' → logprob: -15.000185012817383

Token 1995: '4' (ID: 19)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0003196154139004648
    2. '4' → logprob: -8.250319480895996
    3. '0' → logprob: -9.875319480895996
    4. '   ' → logprob: -13.000319480895996
    5. 's' → logprob: -13.250319480895996
    6. ' N' → logprob: -14.000319480895996
    7. 'books' → logprob: -14.250319480895996
    8. '1' → logprob: -15.000319480895996
    9. '       ' → logprob: -15.125319480895996
    10. '(' → logprob: -15.250319480895996

Token 1996: ' *' (ID: 425)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07926099002361298
    2. '):' → logprob: -3.204261064529419
    3. '*N' → logprob: -4.20426082611084
    4. '*' → logprob: -4.45426082611084
    5. ' *' → logprob: -5.32926082611084
    6. '*r' → logprob: -7.20426082611084
    7. '*s' → logprob: -7.32926082611084
    8. '*c' → logprob: -7.70426082611084
    9. '   ' → logprob: -7.70426082611084
    10. '       ' → logprob: -7.82926082611084

Token 1997: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0003729966701939702
    2. ' N' → logprob: -8.250372886657715
    3. 's' → logprob: -9.250372886657715
    4. '   ' → logprob: -11.750372886657715
    5. ' s' → logprob: -13.500372886657715
    6. ')' → logprob: -13.625372886657715
    7. '0' → logprob: -13.625372886657715
    8. '```' → logprob: -13.625372886657715
    9. '       ' → logprob: -14.375372886657715
    10. '
' → logprob: -15.250372886657715

Token 1998: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03276827186346054
    2. '):' → logprob: -3.6577682495117188
    3. '//' → logprob: -5.532768249511719
    4. '       ' → logprob: -6.407768249511719
    5. ' //' → logprob: -8.532768249511719
    6. '   ' → logprob: -9.032768249511719
    7. ':' → logprob: -9.282768249511719
    8. '           ' → logprob: -9.657768249511719
    9. ':
' → logprob: -10.282768249511719
    10. ',' → logprob: -10.282768249511719

Token 1999: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00806590635329485
    2. ' if' → logprob: -5.258065700531006
    3. 'if' → logprob: -6.258065700531006
    4. '       ' → logprob: -7.883065700531006
    5. '```' → logprob: -8.133066177368164
    6. '   ' → logprob: -8.758066177368164
    7. ',' → logprob: -11.258066177368164
    8. '	       ' → logprob: -11.383066177368164
    9. '	   ' → logprob: -11.883066177368164
    10. '<|end|>' → logprob: -12.258066177368164

Token 2000: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.487586110830307
    2. ' if' → logprob: -1.1125861406326294
    3. '           ' → logprob: -2.98758602142334
    4. '       ' → logprob: -5.23758602142334
    5. '   ' → logprob: -6.98758602142334
    6. '```' → logprob: -8.61258602142334
    7. '               ' → logprob: -8.98758602142334
    8. '	if' → logprob: -10.11258602142334
    9. ' ' → logprob: -10.11258602142334
    10. '{' → logprob: -11.36258602142334

Token 2001: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.08917980641126633
    2. ' books' → logprob: -2.464179754257202
    3. '   ' → logprob: -8.839179992675781
    4. '           ' → logprob: -9.839179992675781
    5. 'book' → logprob: -11.089179992675781
    6. '       ' → logprob: -11.464179992675781
    7. 's' → logprob: -12.589179992675781
    8. '```' → logprob: -12.964179992675781
    9. 'b' → logprob: -13.339179992675781
    10. '    ' → logprob: -13.589179992675781

Token 2002: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.003958478569984436
    2. '[' → logprob: -6.128958702087402
    3. '==' → logprob: -6.753958702087402
    4. 's' → logprob: -8.628958702087402
    5. ' ==' → logprob: -8.753958702087402
    6. '[
' → logprob: -9.753958702087402
    7. '```' → logprob: -10.128958702087402
    8. ' [' → logprob: -10.128958702087402
    9. '           ' → logprob: -11.003958702087402
    10. '   ' → logprob: -11.003958702087402

Token 2003: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07632063329219818
    2. ']==' → logprob: -2.8263206481933594
    3. ']=='' → logprob: -4.326320648193359
    4. '==' → logprob: -7.701320648193359
    5. '[' → logprob: -8.70132064819336
    6. '[s' → logprob: -8.70132064819336
    7. ' ==' → logprob: -9.70132064819336
    8. ']=="' → logprob: -10.07632064819336
    9. '=='' → logprob: -10.20132064819336
    10. ' ]' → logprob: -10.95132064819336

Token 2004: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7131338715553284
    2. '==' → logprob: -0.8381338715553284
    3. '=='' → logprob: -2.5881338119506836
    4. '[' → logprob: -6.713133811950684
    5. ' =='' → logprob: -7.963133811950684
    6. '=="' → logprob: -8.213133811950684
    7. '=' → logprob: -9.088133811950684
    8. '==
' → logprob: -9.588133811950684
    9. ']==' → logprob: -9.713133811950684
    10. ']' → logprob: -10.213133811950684

Token 2005: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.20603168499656e-05
    2. ' '' → logprob: -10.250061988830566
    3. 'Y' → logprob: -10.875061988830566
    4. '"' → logprob: -12.125061988830566
    5. '`' → logprob: -14.125061988830566
    6. '   ' → logprob: -14.500061988830566
    7. ''S' → logprob: -14.750061988830566
    8. '
' → logprob: -15.625061988830566
    9. '('' → logprob: -16.000062942504883
    10. ''y' → logprob: -16.875062942504883

Token 2006: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0010355490958318114
    2. ''' → logprob: -6.876035690307617
    3. ' Y' → logprob: -13.501035690307617
    4. '1' → logprob: -14.126035690307617
    5. '"' → logprob: -15.751035690307617
    6. ''y' → logprob: -16.001035690307617
    7. '`' → logprob: -16.751035690307617
    8. '
' → logprob: -16.751035690307617
    9. '	Y' → logprob: -17.001035690307617
    10. 'y' → logprob: -17.001035690307617

Token 2007: '':
' (ID: 7669)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -1.3476359844207764
    2. '':
' → logprob: -1.4726359844207764
    3. '']:
' → logprob: -1.4726359844207764
    4. ':
' → logprob: -2.0976359844207764
    5. ']' → logprob: -2.4726359844207764
    6. '           ' → logprob: -3.9726359844207764
    7. '']' → logprob: -4.2226362228393555
    8. ''):
' → logprob: -4.5976362228393555
    9. '):
' → logprob: -4.7226362228393555
    10. ':' → logprob: -4.9726362228393555

Token 2008: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13373930752277374
    2. '           ' → logprob: -2.5087392330169678
    3. ' and' → logprob: -4.508739471435547
    4. ' rows' → logprob: -4.758739471435547
    5. 'rows' → logprob: -5.883739471435547
    6. ',' → logprob: -6.008739471435547
    7. ' if' → logprob: -6.133739471435547
    8. ':
' → logprob: -6.133739471435547
    9. ' col' → logprob: -6.508739471435547
    10. '   ' → logprob: -6.508739471435547

Token 2009: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.09744618088006973
    2. ' r' → logprob: -2.7224462032318115
    3. 'row' → logprob: -4.347445964813232
    4. ' row' → logprob: -4.722445964813232
    5. '           ' → logprob: -5.597445964813232
    6. 'c' → logprob: -7.347445964813232
    7. ' c' → logprob: -7.597445964813232
    8. '               ' → logprob: -8.34744644165039
    9. '```' → logprob: -9.84744644165039
    10. '   ' → logprob: -10.34744644165039

Token 2010: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4991272985935211
    2. '=' → logprob: -0.9991272687911987
    3. 'ow' → logprob: -3.9991273880004883
    4. '=s' → logprob: -5.624127388000488
    5. 'ows' → logprob: -6.749127388000488
    6. '=(' → logprob: -7.749127388000488
    7. '           ' → logprob: -8.374127388000488
    8. '   ' → logprob: -8.374127388000488
    9. '       ' → logprob: -8.874127388000488
    10. ',' → logprob: -9.249127388000488

Token 2011: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0031337514519691467
    2. ' s' → logprob: -6.128133773803711
    3. '(s' → logprob: -7.003133773803711
    4. ' (' → logprob: -10.378133773803711
    5. '   ' → logprob: -12.128133773803711
    6. '(' → logprob: -13.628133773803711
    7. '((' → logprob: -15.503133773803711
    8. '           ' → logprob: -15.503133773803711
    9. '       ' → logprob: -15.878133773803711
    10. '`s' → logprob: -15.878133773803711

Token 2012: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5399857759475708
    2. '//' → logprob: -0.9149857759475708
    3. ' %' → logprob: -5.539985656738281
    4. '#' → logprob: -5.664985656738281
    5. '%' → logprob: -5.664985656738281
    6. '           ' → logprob: -5.914985656738281
    7. ')' → logprob: -7.289985656738281
    8. '       ' → logprob: -7.414985656738281
    9. '   ' → logprob: -7.664985656738281
    10. ' ' → logprob: -8.039985656738281

Token 2013: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.750436007976532e-05
    2. '   ' → logprob: -11.12503719329834
    3. ' N' → logprob: -11.25003719329834
    4. '           ' → logprob: -12.37503719329834
    5. '(N' → logprob: -13.12503719329834
    6. '       ' → logprob: -13.50003719329834
    7. '               ' → logprob: -13.87503719329834
    8. '                   ' → logprob: -14.25003719329834
    9. '(' → logprob: -16.250038146972656
    10. ' ' → logprob: -16.375038146972656

Token 2014: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8881791830062866
    2. ',' → logprob: -1.1381791830062866
    3. '           ' → logprob: -1.8881791830062866
    4. '               ' → logprob: -2.763179302215576
    5. ',c' → logprob: -3.763179302215576
    6. ' c' → logprob: -5.138179302215576
    7. 'c' → logprob: -5.388179302215576
    8. '       ' → logprob: -5.763179302215576
    9. '```' → logprob: -6.013179302215576
    10. ' col' → logprob: -6.138179302215576

Token 2015: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9962196946144104
    2. '           ' → logprob: -1.4962196350097656
    3. 'c' → logprob: -1.9962196350097656
    4. ' c' → logprob: -2.6212196350097656
    5. 's' → logprob: -2.9962196350097656
    6. '               ' → logprob: -3.3712196350097656
    7. ',c' → logprob: -3.6212196350097656
    8. ' s' → logprob: -4.371219635009766
    9. ' col' → logprob: -4.371219635009766
    10. '%' → logprob: -4.371219635009766

Token 2016: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.003479500999674201
    2. ' c' → logprob: -5.753479480743408
    3. 's' → logprob: -8.378479957580566
    4. '       ' → logprob: -10.753479957580566
    5. 'col' → logprob: -10.878479957580566
    6. '           ' → logprob: -11.753479957580566
    7. '```' → logprob: -11.878479957580566
    8. '   ' → logprob: -12.128479957580566
    9. ' s' → logprob: -12.253479957580566
    10. '               ' → logprob: -14.003479957580566

Token 2017: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.659529447555542
    2. ' =' → logprob: -0.784529447555542
    3. 'c' → logprob: -3.909529447555542
    4. ' c' → logprob: -5.284529685974121
    5. 's' → logprob: -7.284529685974121
    6. ' s' → logprob: -8.284529685974121
    7. '=c' → logprob: -8.534529685974121
    8. ' ' → logprob: -9.784529685974121
    9. ')' → logprob: -10.159529685974121
    10. '=s' → logprob: -10.284529685974121

Token 2018: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002201047958806157
    2. ' s' → logprob: -6.127201080322266
    3. '(s' → logprob: -11.252201080322266
    4. '   ' → logprob: -13.377201080322266
    5. '`s' → logprob: -14.252201080322266
    6. ' (' → logprob: -15.127201080322266
    7. ''s' → logprob: -16.377201080322266
    8. ' ' → logprob: -16.502201080322266
    9. '{s' → logprob: -17.002201080322266
    10. '           ' → logprob: -17.252201080322266

Token 2019: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20429478585720062
    2. '%' → logprob: -1.7042948007583618
    3. '%c' → logprob: -6.204294681549072
    4. '%s' → logprob: -7.954294681549072
    5. ' c' → logprob: -9.32929515838623
    6. 'c' → logprob: -9.32929515838623
    7. 's' → logprob: -10.07929515838623
    8. '=' → logprob: -10.07929515838623
    9. ')' → logprob: -10.20429515838623
    10. '```' → logprob: -10.70429515838623

Token 2020: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.627176768844947e-05
    2. ' N' → logprob: -9.250096321105957
    3. 'n' → logprob: -16.87509536743164
    4. '(N' → logprob: -17.50009536743164
    5. '   ' → logprob: -17.62509536743164
    6. '                   ' → logprob: -17.75009536743164
    7. '           ' → logprob: -17.87509536743164
    8. '```' → logprob: -18.75009536743164
    9. '               ' → logprob: -18.87509536743164
    10. '       ' → logprob: -19.50009536743164

Token 2021: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1304931342601776
    2. 'rows' → logprob: -2.5054931640625
    3. ' rows' → logprob: -3.3804931640625
    4. '
' → logprob: -6.2554931640625
    5. ',' → logprob: -7.0054931640625
    6. '```' → logprob: -7.1304931640625
    7. '                   ' → logprob: -7.2554931640625
    8. '(rows' → logprob: -7.5054931640625
    9. '           ' → logprob: -7.6304931640625
    10. '       ' → logprob: -8.3804931640625

Token 2022: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00024132427643053234
    2. '           ' → logprob: -8.62524127960205
    3. '                   ' → logprob: -11.00024127960205
    4. 'rows' → logprob: -11.00024127960205
    5. '       ' → logprob: -11.12524127960205
    6. ' rows' → logprob: -12.25024127960205
    7. '   ' → logprob: -13.00024127960205
    8. '                       ' → logprob: -13.37524127960205
    9. '```' → logprob: -13.62524127960205
    10. '
' → logprob: -13.87524127960205

Token 2023: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' (adapté à ' rows') → logprob: -0.19841422140598297
    2. ' rows' → logprob: -1.8234142065048218
    3. '               ' → logprob: -4.073414325714111
    4. '                   ' → logprob: -7.073414325714111
    5. '           ' → logprob: -8.323413848876953
    6. '	rows' → logprob: -8.948413848876953
    7. '   ' → logprob: -9.448413848876953
    8. '```' → logprob: -9.823413848876953
    9. '                       ' → logprob: -10.198413848876953
    10. '(rows' → logprob: -10.573413848876953

Token 2024: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.00046796895912848413
    2. 'with' → logprob: -8.000468254089355
    3. '               ' → logprob: -10.125468254089355
    4. ' =' → logprob: -11.125468254089355
    5. '```' → logprob: -11.250468254089355
    6. '           ' → logprob: -11.375468254089355
    7. '=' → logprob: -11.500468254089355
    8. ')' → logprob: -11.875468254089355
    9. 's' → logprob: -12.000468254089355
    10. '                   ' → logprob: -12.375468254089355

Token 2025: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.003195066237822175
    2. 'books' → logprob: -5.753195285797119
    3. '```' → logprob: -12.378194808959961
    4. '_book' → logprob: -12.378194808959961
    5. '_' → logprob: -13.503194808959961
    6. '_with' → logprob: -13.878194808959961
    7. '_cols' → logprob: -14.003194808959961
    8. '\' → logprob: -14.003194808959961
    9. ' books' → logprob: -14.378194808959961
    10. '_rows' → logprob: -14.503194808959961

Token 2026: '_cols' (ID: 60927)
  Prédit: '_cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cols' → logprob: -0.0002249933750135824
    2. '[_' → logprob: -9.625225067138672
    3. '_rows' → logprob: -10.125225067138672
    4. 'cols' → logprob: -10.250225067138672
    5. '[c' → logprob: -10.500225067138672
    6. '_columns' → logprob: -11.000225067138672
    7. '\' → logprob: -11.375225067138672
    8. '```' → logprob: -12.125225067138672
    9. '_chars' → logprob: -12.750225067138672
    10. '[' → logprob: -12.875225067138672

Token 2027: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.2200749754119897e-06
    2. '\[' → logprob: -14.125001907348633
    3. '```' → logprob: -14.250001907348633
    4. '[' → logprob: -15.375001907348633
    5. 'c' → logprob: -15.625001907348633
    6. '
' → logprob: -16.250001907348633
    7. '[col' → logprob: -16.875001907348633
    8. ' [' → logprob: -17.000001907348633
    9. '   ' → logprob: -17.000001907348633
    10. '`' → logprob: -17.125001907348633

Token 2028: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.029797932133078575
    2. '.append' → logprob: -3.6547980308532715
    3. ').' → logprob: -5.9047980308532715
    4. 'append' → logprob: -7.7797980308532715
    5. '           ' → logprob: -9.404797554016113
    6. ']' → logprob: -9.904797554016113
    7. ''].' → logprob: -10.279797554016113
    8. ')].' → logprob: -10.279797554016113
    9. '.' → logprob: -10.529797554016113
    10. '()].' → logprob: -10.779797554016113

Token 2029: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -8.41866585687967e-06
    2. '.append' → logprob: -11.750008583068848
    3. ' append' → logprob: -14.750008583068848
    4. '_append' → logprob: -16.37500762939453
    5. '	append' → logprob: -17.25000762939453
    6. 'appen' → logprob: -18.00000762939453
    7. 'Append' → logprob: -19.12500762939453
    8. 'app' → logprob: -20.87500762939453
    9. 'add' → logprob: -21.50000762939453
    10. '
' → logprob: -21.87500762939453

Token 2030: '(r' (ID: 4729)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014566783793270588
    2. '(r' → logprob: -4.264566898345947
    3. ' r' → logprob: -7.889566898345947
    4. 's' → logprob: -11.639566421508789
    5. '(' → logprob: -11.639566421508789
    6. ' (' → logprob: -12.389566421508789
    7. '(s' → logprob: -12.764566421508789
    8. '_r' → logprob: -14.264566421508789
    9. '```' → logprob: -14.889566421508789
    10. '(
' → logprob: -14.889566421508789

Token 2031: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006982576451264322
    2. '       ' → logprob: -8.25069808959961
    3. ')]' → logprob: -9.00069808959961
    4. '])' → logprob: -9.12569808959961
    5. ')
' → logprob: -9.50069808959961
    6. '           ' → logprob: -9.75069808959961
    7. ']' → logprob: -10.25069808959961
    8. '               ' → logprob: -11.37569808959961
    9. ' )' → logprob: -11.75069808959961
    10. ')])' → logprob: -12.00069808959961

Token 2032: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053285613656044006
    2. '
' → logprob: -3.053285598754883
    3. 'dp' → logprob: -5.928285598754883
    4. '   ' → logprob: -7.178285598754883
    5. '        
' → logprob: -7.428285598754883
    6. '```' → logprob: -7.678285598754883
    7. 'import' → logprob: -9.928285598754883
    8. '    
' → logprob: -9.928285598754883
    9. 'from' → logprob: -10.303285598754883
    10. '           ' → logprob: -11.053285598754883

Token 2033: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.2575851380825043
    2. '       ' → logprob: -1.5075851678848267
    3. '
' → logprob: -5.507585048675537
    4. '   ' → logprob: -6.882585048675537
    5. 'import' → logprob: -8.507585525512695
    6. ' dp' → logprob: -9.132585525512695
    7. '```' → logprob: -9.632585525512695
    8. '        
' → logprob: -9.757585525512695
    9. 'from' → logprob: -9.882585525512695
    10. 'DP' → logprob: -10.382585525512695

Token 2034: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006099864258430898
    2. '=' → logprob: -7.500609874725342
    3. '=[' → logprob: -10.3756103515625
    4. '[' → logprob: -11.6256103515625
    5. '   ' → logprob: -11.6256103515625
    6. ' =[' → logprob: -12.7506103515625
    7. '    ' → logprob: -14.0006103515625
    8. ')' → logprob: -14.2506103515625
    9. ']' → logprob: -14.2506103515625
    10. '<|end|>' → logprob: -14.7506103515625

Token 2035: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018510786816477776
    2. '[[' → logprob: -4.018510818481445
    3. ' [' → logprob: -8.018510818481445
    4. ' [[' → logprob: -11.018510818481445
    5. '   ' → logprob: -12.393510818481445
    6. '[in' → logprob: -12.643510818481445
    7. '[I' → logprob: -12.768510818481445
    8. '[int' → logprob: -13.268510818481445
    9. '[N' → logprob: -14.393510818481445
    10. '[min' → logprob: -15.143510818481445

Token 2036: 'INF' (ID: 64358)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.894790981779806e-05
    2. ' [' → logprob: -10.125048637390137
    3. 'INF' → logprob: -11.875048637390137
    4. '[I' → logprob: -14.250048637390137
    5. '   ' → logprob: -14.500048637390137
    6. ']' → logprob: -15.250048637390137
    7. '{' → logprob: -15.375048637390137
    8. '[in' → logprob: -16.750049591064453
    9. '
' → logprob: -16.875049591064453
    10. '][' → logprob: -17.000049591064453

Token 2037: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05658567324280739
    2. ' for' → logprob: -3.8065857887268066
    3. '[' → logprob: -4.556585788726807
    4. ']*' → logprob: -4.556585788726807
    5. 'for' → logprob: -5.306585788726807
    6. ',' → logprob: -5.931585788726807
    7. '][' → logprob: -6.056585788726807
    8. ' ]' → logprob: -6.931585788726807
    9. '[]' → logprob: -8.556585311889648
    10. '   ' → logprob: -8.681585311889648

Token 2038: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.751434862613678
    2. 'for' → logprob: -1.3764348030090332
    3. ' for' → logprob: -2.626434803009033
    4. ']' → logprob: -2.626434803009033
    5. ',' → logprob: -2.751434803009033
    6. '   ' → logprob: -3.751434803009033
    7. '(' → logprob: -4.626434803009033
    8. '[N' → logprob: -4.751434803009033
    9. ' *' → logprob: -5.751434803009033
    10. '][' → logprob: -5.751434803009033

Token 2039: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3225947618484497
    2. '(' → logprob: -1.3225947618484497
    3. ' (' → logprob: -5.69759464263916
    4. '(N' → logprob: -5.82259464263916
    5. '5' → logprob: -5.94759464263916
    6. ' ' → logprob: -8.57259464263916
    7. '   ' → logprob: -9.57259464263916
    8. 'N' → logprob: -9.94759464263916
    9. '```' → logprob: -10.94759464263916
    10. '(M' → logprob: -12.32259464263916

Token 2040: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.20355795323848724
    2. '(' → logprob: -1.8285579681396484
    3. '(N' → logprob: -4.328557968139648
    4. '5' → logprob: -4.703557968139648
    5. 'N' → logprob: -7.078557968139648
    6. ' (' → logprob: -7.953557968139648
    7. ' ' → logprob: -10.078557968139648
    8. '(
' → logprob: -11.828557968139648
    9. '(M' → logprob: -11.953557968139648
    10. '   ' → logprob: -12.203557968139648

Token 2041: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2042: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00010545044642640278
    2. '   ' → logprob: -9.875105857849121
    3. '       ' → logprob: -10.250105857849121
    4. 'for' → logprob: -11.625105857849121
    5. 'if' → logprob: -12.250105857849121
    6. ' dp' → logprob: -12.750105857849121
    7. '0' → logprob: -14.000105857849121
    8. '	dp' → logprob: -14.500105857849121
    9. '```' → logprob: -15.625105857849121
    10. '[' → logprob: -16.250104904174805

Token 2043: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.2664456789934775e-06
    2. 'if' → logprob: -14.625000953674316
    3. 'for' → logprob: -14.750000953674316
    4. 'import' → logprob: -16.250001907348633
    5. ' dp' → logprob: -16.750001907348633
    6. '       ' → logprob: -17.125001907348633
    7. '0' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.375001907348633
    9. 'prev' → logprob: -17.875001907348633
    10. '
' → logprob: -19.500001907348633

Token 2044: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022916549642104656
    2. '=' → logprob: -8.875228881835938
    3. ' =' → logprob: -10.250228881835938
    4. '<|end|>' → logprob: -10.875228881835938
    5. '=[' → logprob: -11.375228881835938
    6. '```' → logprob: -11.500228881835938
    7. '][' → logprob: -13.125228881835938
    8. '[
' → logprob: -13.250228881835938
    9. '\[' → logprob: -13.500228881835938
    10. '<|end|>' → logprob: -13.500228881835938

Token 2045: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03410641849040985
    2. '4' → logprob: -3.409106492996216
    3. ']' → logprob: -7.909106254577637
    4. '(' → logprob: -10.659106254577637
    5. '[' → logprob: -10.659106254577637
    6. ' ' → logprob: -11.034106254577637
    7. '=' → logprob: -11.284106254577637
    8. '1' → logprob: -12.659106254577637
    9. '][' → logprob: -12.909106254577637
    10. '
' → logprob: -13.034106254577637

Token 2046: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011732018319889903
    2. ']=' → logprob: -7.62617301940918
    3. '=' → logprob: -8.00117301940918
    4. '[' → logprob: -8.62617301940918
    5. '()]' → logprob: -9.75117301940918
    6. ' ]' → logprob: -10.25117301940918
    7. ']+=' → logprob: -11.12617301940918
    8. '0' → logprob: -11.37617301940918
    9. '```' → logprob: -11.37617301940918
    10. ' =' → logprob: -11.87617301940918

Token 2047: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008677207864820957
    2. ' =' → logprob: -4.758677005767822
    3. ']' → logprob: -10.50867748260498
    4. '<|end|>' → logprob: -11.63367748260498
    5. '[' → logprob: -11.75867748260498
    6. ')' → logprob: -11.75867748260498
    7. ']=' → logprob: -12.13367748260498
    8. '0' → logprob: -13.00867748260498
    9. ')=' → logprob: -13.88367748260498
    10. '=
' → logprob: -14.75867748260498

Token 2048: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -21.125
    4. '00' → logprob: -22.5
    5. '۰' → logprob: -22.875
    6. '000' → logprob: -23.375
    7. '=' → logprob: -23.5
    8. '```' → logprob: -24.75
    9. '    ' → logprob: -25.5
    10. '(' → logprob: -25.875

Token 2049: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. '   ' → logprob: -21.5
    4. '۰' → logprob: -21.75
    5. '00' → logprob: -22.75
    6. '```' → logprob: -23.0
    7. '000' → logprob: -23.25
    8. '=' → logprob: -23.875
    9. '1' → logprob: -24.25
    10. '０' → logprob: -24.75

Token 2050: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6030881404876709
    2. '   ' → logprob: -1.228088140487671
    3. '       ' → logprob: -2.478088140487671
    4. ' for' → logprob: -2.603088140487671
    5. '
' → logprob: -7.35308837890625
    6. '	for' → logprob: -7.85308837890625
    7. '        
' → logprob: -7.85308837890625
    8. '    
' → logprob: -7.97808837890625
    9. '<|end|>' → logprob: -8.72808837890625
    10. '```' → logprob: -10.10308837890625

Token 2051: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5486608743667603
    2. '
' → logprob: -2.1736607551574707
    3. 'for' → logprob: -2.1736607551574707
    4. ' for' → logprob: -2.5486607551574707
    5. '       ' → logprob: -2.6736607551574707
    6. '<|end|>' → logprob: -3.1736607551574707
    7. '<|end|>' → logprob: -6.423660755157471
    8. '	for' → logprob: -6.423660755157471
    9. '    
' → logprob: -7.173660755157471
    10. '        
' → logprob: -7.673660755157471

Token 2052: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06917060166597366
    2. ' for' → logprob: -2.9441707134246826
    3. '   ' → logprob: -4.3191704750061035
    4. '
' → logprob: -8.194170951843262
    5. '0' → logprob: -8.819170951843262
    6. 'def' → logprob: -9.194170951843262
    7. '```' → logprob: -9.444170951843262
    8. '	for' → logprob: -9.694170951843262
    9. 'import' → logprob: -10.194170951843262
    10. 'For' → logprob: -10.194170951843262

Token 2053: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4723493754863739
    2. '   ' → logprob: -1.2223494052886963
    3. '<|end|>' → logprob: -3.3473494052886963
    4. '
' → logprob: -3.9723494052886963
    5. ' for' → logprob: -4.472349166870117
    6. 'for' → logprob: -4.597349166870117
    7. '        
' → logprob: -6.472349166870117
    8. '<|end|>' → logprob: -6.722349166870117
    9. '	for' → logprob: -6.847349166870117
    10. '    
' → logprob: -6.972349166870117

Token 2054: ' intersection' (ID: 42002)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002882721892092377
    2. 'intersection' → logprob: -8.750288009643555
    3. ' ' → logprob: -9.000288009643555
    4. '(' → logprob: -13.000288009643555
    5. 'row' → logprob: -13.125288009643555
    6. ' intersection' → logprob: -13.250288009643555
    7. '   ' → logprob: -15.750288009643555
    8. '```' → logprob: -15.875288009643555
    9. ' (' → logprob: -16.750288009643555
    10. '
' → logprob: -18.000288009643555

Token 2055: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0068992376327515
    2. '0' → logprob: -1.5068992376327515
    3. ' for' → logprob: -1.7568992376327515
    4. '   ' → logprob: -2.256899356842041
    5. '[' → logprob: -2.631899356842041
    6. '
' → logprob: -3.506899356842041
    7. '(' → logprob: -5.256899356842041
    8. '<|end|>' → logprob: -5.381899356842041
    9. ' ' → logprob: -5.506899356842041
    10. ')' → logprob: -5.881899356842041

Token 2056: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.2500057220459
    4. '   ' → logprob: -16.5000057220459
    5. ',' → logprob: -17.0000057220459
    6. '(' → logprob: -17.1250057220459
    7. ')' → logprob: -17.7500057220459
    8. '`' → logprob: -18.0000057220459
    9. '
' → logprob: -18.6250057220459
    10. '       ' → logprob: -19.2500057220459

Token 2057: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008323782822117209
    2. ' ,' → logprob: -7.250832557678223
    3. '0' → logprob: -9.875832557678223
    4. '   ' → logprob: -10.250832557678223
    5. ')' → logprob: -10.625832557678223
    6. '```' → logprob: -12.500832557678223
    7. ',
' → logprob: -12.750832557678223
    8. ' ' → logprob: -13.875832557678223
    9. '
' → logprob: -14.500832557678223
    10. '       ' → logprob: -14.750832557678223

Token 2058: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.992775888647884e-05
    2. ' ' → logprob: -9.625069618225098
    3. ')' → logprob: -13.250069618225098
    4. ',' → logprob: -13.375069618225098
    5. '```' → logprob: -15.250069618225098
    6. '
' → logprob: -16.250070571899414
    7. '   ' → logprob: -16.625070571899414
    8. 'c' → logprob: -17.000070571899414
    9. 'col' → logprob: -17.375070571899414
    10. '  ' → logprob: -17.875070571899414

Token 2059: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008723655715584755
    2. '<|end|>' → logprob: -4.883723735809326
    3. '   ' → logprob: -7.258723735809326
    4. '<|end|>' → logprob: -8.758723258972168
    5. ')
' → logprob: -9.508723258972168
    6. '
' → logprob: -9.633723258972168
    7. '       ' → logprob: -9.758723258972168
    8. ' )' → logprob: -11.008723258972168
    9. '```' → logprob: -12.008723258972168
    10. '...' → logprob: -12.258723258972168

Token 2060: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6400280594825745
    2. '   ' → logprob: -1.5150279998779297
    3. ' for' → logprob: -1.7650279998779297
    4. '       ' → logprob: -2.5150279998779297
    5. '```' → logprob: -7.26502799987793
    6. '
' → logprob: -9.64002799987793
    7. '	for' → logprob: -9.89002799987793
    8. 'import' → logprob: -11.01502799987793
    9. '        
' → logprob: -11.14002799987793
    10. '    
' → logprob: -11.89002799987793

Token 2061: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011311669368296862
    2. ' for' → logprob: -7.376131057739258
    3. '       ' → logprob: -8.501131057739258
    4. '   ' → logprob: -8.751131057739258
    5. 'from' → logprob: -9.126131057739258
    6. 'def' → logprob: -11.376131057739258
    7. '```' → logprob: -11.501131057739258
    8. 'import' → logprob: -11.751131057739258
    9. '
' → logprob: -12.626131057739258
    10. '	for' → logprob: -13.876131057739258

Token 2062: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07899520546197891
    2. ' c' → logprob: -2.5789952278137207
    3. '_c' → logprob: -9.703994750976562
    4. 'col' → logprob: -10.578994750976562
    5. '   ' → logprob: -11.453994750976562
    6. '_' → logprob: -13.078994750976562
    7. '```' → logprob: -13.078994750976562
    8. ' col' → logprob: -13.453994750976562
    9. ' _' → logprob: -13.578994750976562
    10. '_col' → logprob: -14.328994750976562

Token 2063: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008772100321948528
    2. 'in' → logprob: -4.758771896362305
    3. '[' → logprob: -10.008771896362305
    4. '_in' → logprob: -10.758771896362305
    5. '```' → logprob: -10.758771896362305
    6. '   ' → logprob: -11.508771896362305
    7. '[c' → logprob: -11.758771896362305
    8. ',' → logprob: -11.883771896362305
    9. 'c' → logprob: -12.008771896362305
    10. ' ' → logprob: -12.133771896362305

Token 2064: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014741450548172
    2. ' range' → logprob: -1.7014741897583008
    3. '0' → logprob: -9.8264741897583
    4. 'N' → logprob: -12.7014741897583
    5. ' in' → logprob: -13.7014741897583
    6. 'in' → logprob: -13.9514741897583
    7. '_' → logprob: -14.2014741897583
    8. '   ' → logprob: -14.9514741897583
    9. '_range' → logprob: -15.0764741897583
    10. '(range' → logprob: -15.4514741897583

Token 2065: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00641716318204999
    2. '(N' → logprob: -5.381417274475098
    3. ' N' → logprob: -6.631417274475098
    4. '   ' → logprob: -8.631417274475098
    5. '(' → logprob: -9.256417274475098
    6. '1' → logprob: -9.506417274475098
    7. '0' → logprob: -10.256417274475098
    8. ' (' → logprob: -10.381417274475098
    9. '       ' → logprob: -10.881417274475098
    10. ' range' → logprob: -11.006417274475098

Token 2066: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13456659018993378
    2. '):' → logprob: -2.13456654548645
    3. '+' → logprob: -5.009566783905029
    4. '   ' → logprob: -7.884566783905029
    5. '       ' → logprob: -8.384566307067871
    6. ' +' → logprob: -8.509566307067871
    7. ')' → logprob: -10.384566307067871
    8. ' ):
' → logprob: -11.009566307067871
    9. ':' → logprob: -11.134566307067871
    10. '):
' → logprob: -11.634566307067871

Token 2067: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7474280595779419
    2. '           ' → logprob: -1.122428059577942
    3. '       ' → logprob: -1.747428059577942
    4. '	   ' → logprob: -4.122427940368652
    5. '	       ' → logprob: -5.997427940368652
    6. ' for' → logprob: -6.247427940368652
    7. '```' → logprob: -6.622427940368652
    8. ' rows' → logprob: -6.997427940368652
    9. ' next' → logprob: -7.497427940368652
    10. ' new' → logprob: -7.622427940368652

Token 2068: ' next' (ID: 2613)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.9643480777740479
    2. 'next' (adapté à ' next') → logprob: -0.9643480777740479
    3. 'new' → logprob: -2.214348077774048
    4. '           ' → logprob: -2.214348077774048
    5. ' nd' → logprob: -4.964347839355469
    6. ' next' → logprob: -5.464347839355469
    7. '   ' → logprob: -5.714347839355469
    8. 'dp' → logprob: -6.214347839355469
    9. ' new' → logprob: -7.089347839355469
    10. '       ' → logprob: -7.214347839355469

Token 2069: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0010401944164186716
    2. 'dp' → logprob: -6.876039981842041
    3. 'DP' → logprob: -12.5010404586792
    4. '   ' → logprob: -13.6260404586792
    5. 'Dp' → logprob: -14.2510404586792
    6. ' =' → logprob: -14.6260404586792
    7. '_DP' → logprob: -15.2510404586792
    8. '(dp' → logprob: -15.6260404586792
    9. '	dp' → logprob: -15.6260404586792
    10. '       ' → logprob: -16.001039505004883

Token 2070: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03813788667321205
    2. '=' → logprob: -3.288137912750244
    3. '[' → logprob: -10.038137435913086
    4. '=[' → logprob: -10.163137435913086
    5. ' =[' → logprob: -12.288137435913086
    6. '=[]' → logprob: -13.413137435913086
    7. ')' → logprob: -13.413137435913086
    8. '   ' → logprob: -13.413137435913086
    9. '```' → logprob: -13.663137435913086
    10. '<|end|>' → logprob: -13.663137435913086

Token 2071: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011703446507453918
    2. ' [' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.126171112060547
    4. '[N' → logprob: -19.251171112060547
    5. '[I' → logprob: -19.626171112060547
    6. '[MAX' → logprob: -20.001171112060547
    7. '[in' → logprob: -20.126171112060547
    8. ' ' → logprob: -20.751171112060547
    9. 'INF' → logprob: -21.251171112060547
    10. '[min' → logprob: -21.376171112060547

Token 2072: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: 0.0
    2. ' INF' → logprob: -18.5
    3. '[' → logprob: -19.75
    4. '_INF' → logprob: -20.0
    5. 'INT' → logprob: -20.375
    6. 'float' → logprob: -20.5
    7. 'inf' → logprob: -20.5
    8. 'IN' → logprob: -20.75
    9. '-INF' → logprob: -22.0
    10. '10' → logprob: -22.5

Token 2073: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007178967818617821
    2. ']*' → logprob: -5.632178783416748
    3. ' for' → logprob: -6.257178783416748
    4. ' ]' → logprob: -7.382178783416748
    5. '   ' → logprob: -8.257179260253906
    6. 'for' → logprob: -8.382179260253906
    7. ' *' → logprob: -8.382179260253906
    8. ')' → logprob: -9.257179260253906
    9. '*' → logprob: -9.882179260253906
    10. '    ' → logprob: -10.132179260253906

Token 2074: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46193286776542664
    2. 'for' → logprob: -1.086932897567749
    3. '[' → logprob: -4.58693265914917
    4. '           ' → logprob: -4.83693265914917
    5. '       ' → logprob: -5.08693265914917
    6. ']' → logprob: -5.96193265914917
    7. '        ' → logprob: -6.46193265914917
    8. '            ' → logprob: -7.46193265914917
    9. '<|end|>' → logprob: -7.58693265914917
    10. '               ' → logprob: -7.58693265914917

Token 2075: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.25
    4. '   ' → logprob: -17.875
    5. '
' → logprob: -19.5
    6. '۴' → logprob: -19.625
    7. '' → logprob: -20.0
    8. '৪' → logprob: -20.75
    9. '४' → logprob: -21.0
    10. '<|end|>' → logprob: -21.125

Token 2076: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -17.25
    4. '```' → logprob: -17.5
    5. '۴' → logprob: -18.1875
    6. '৪' → logprob: -18.5625
    7. '' → logprob: -18.6875
    8. '४' → logprob: -19.0
    9. '
' → logprob: -19.4375
    10. '(' → logprob: -19.75

Token 2077: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047603268176317215
    2. 'for' → logprob: -3.9226033687591553
    3. ' for' → logprob: -4.047603130340576
    4. '	       ' → logprob: -6.047603130340576
    5. '<|end|>' → logprob: -6.172603130340576
    6. '       ' → logprob: -6.672603130340576
    7. '   ' → logprob: -6.922603130340576
    8. '		' → logprob: -7.172603130340576
    9. '	for' → logprob: -7.672603130340576
    10. '	   ' → logprob: -8.297603607177734

Token 2078: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004442581906914711
    2. 'for' → logprob: -5.6294426918029785
    3. '   ' → logprob: -7.5044426918029785
    4. '       ' → logprob: -8.62944221496582
    5. ' for' → logprob: -9.12944221496582
    6. '```' → logprob: -13.37944221496582
    7. '	       ' → logprob: -14.50444221496582
    8. ' ' → logprob: -14.50444221496582
    9. '               ' → logprob: -14.87944221496582
    10. '		' → logprob: -14.87944221496582

Token 2079: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3919336497783661
    2. '           ' → logprob: -1.1419336795806885
    3. ' for' → logprob: -6.016933441162109
    4. '   ' → logprob: -7.016933441162109
    5. 'rows' → logprob: -7.016933441162109
    6. '       ' → logprob: -7.391933441162109
    7. 'book' → logprob: -10.01693344116211
    8. 'books' → logprob: -10.01693344116211
    9. '```' → logprob: -10.14193344116211
    10. 'num' → logprob: -10.51693344116211

Token 2080: '_rows' (ID: 26013)
  Prédit: 'ooks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ooks' → logprob: -0.06645336002111435
    2. '       ' → logprob: -3.691453456878662
    3. 'ook' → logprob: -3.816453456878662
    4. '           ' → logprob: -5.191453456878662
    5. ' =' → logprob: -5.316453456878662
    6. '=' → logprob: -6.566453456878662
    7. '_rows' → logprob: -6.941453456878662
    8. 'count' → logprob: -7.191453456878662
    9. '_num' → logprob: -7.441453456878662
    10. 'num' → logprob: -7.441453456878662

Token 2081: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22570468485355377
    2. ' =' → logprob: -1.6007046699523926
    3. '=c' → logprob: -9.47570514678955
    4. 's' → logprob: -9.47570514678955
    5. '_c' → logprob: -10.85070514678955
    6. '=[]' → logprob: -10.97570514678955
    7. '       ' → logprob: -11.35070514678955
    8. '           ' → logprob: -11.60070514678955
    9. '```' → logprob: -11.60070514678955
    10. '_with' → logprob: -11.85070514678955

Token 2082: ' sorted' (ID: 20099)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.0048142229206860065
    2. 'set' → logprob: -5.754814147949219
    3. ' rows' → logprob: -7.004814147949219
    4. 'sorted' → logprob: -7.254814147949219
    5. ' set' → logprob: -12.129814147949219
    6. '[' → logprob: -12.504814147949219
    7. 'list' → logprob: -12.879814147949219
    8. '[]' → logprob: -13.379814147949219
    9. '(rows' → logprob: -13.379814147949219
    10. '{' → logprob: -13.629814147949219

Token 2083: '(rows' (ID: 69648)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.003183182328939438
    2. '(rows' → logprob: -5.753183364868164
    3. ' rows' → logprob: -12.628183364868164
    4. 'set' → logprob: -14.378183364868164
    5. '	rows' → logprob: -14.753183364868164
    6. 'row' → logprob: -15.003183364868164
    7. '[' → logprob: -15.128183364868164
    8. 'list' → logprob: -16.003183364868164
    9. '(' → logprob: -16.128183364868164
    10. 'books' → logprob: -16.378183364868164

Token 2084: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.004214331973344088
    2. 'with' → logprob: -6.129214286804199
    3. '[c' → logprob: -6.754214286804199
    4. 'c' → logprob: -8.2542142868042
    5. '(c' → logprob: -8.5042142868042
    6. ')' → logprob: -9.0042142868042
    7. '           ' → logprob: -9.6292142868042
    8. 'b' → logprob: -10.2542142868042
    9. '       ' → logprob: -10.3792142868042
    10. '```' → logprob: -11.1292142868042

Token 2085: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.04875745624303818
    2. 'books' → logprob: -3.048757553100586
    3. 'c' → logprob: -9.173757553100586
    4. 'ooks' → logprob: -10.798757553100586
    5. '[c' → logprob: -11.048757553100586
    6. 'Books' → logprob: -11.423757553100586
    7. '```' → logprob: -12.673757553100586
    8. 'with' → logprob: -12.673757553100586
    9. 'b' → logprob: -13.423757553100586
    10. '   ' → logprob: -13.673757553100586

Token 2086: '_cols' (ID: 60927)
  Prédit: '_cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cols' → logprob: -0.006981526035815477
    2. '[c' → logprob: -5.631981372833252
    3. '_c' → logprob: -6.381981372833252
    4. 'cols' → logprob: -7.006981372833252
    5. '[_' → logprob: -8.25698184967041
    6. ')' → logprob: -9.25698184967041
    7. 'c' → logprob: -9.63198184967041
    8. '[
' → logprob: -9.63198184967041
    9. 'Cols' → logprob: -10.13198184967041
    10. '[' → logprob: -10.38198184967041

Token 2087: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0028895139694213867
    2. 'c' → logprob: -5.877889633178711
    3. '(c' → logprob: -9.877889633178711
    4. ')' → logprob: -11.377889633178711
    5. ')c' → logprob: -11.627889633178711
    6. '[
' → logprob: -12.002889633178711
    7. '```' → logprob: -13.752889633178711
    8. '
' → logprob: -14.252889633178711
    9. '   ' → logprob: -14.252889633178711
    10. ')[' → logprob: -14.252889633178711

Token 2088: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.11447612941265106
    2. '])' → logprob: -2.239476203918457
    3. '           ' → logprob: -7.489476203918457
    4. '])

' → logprob: -7.739476203918457
    5. '       ' → logprob: -7.864476203918457
    6. ')
' → logprob: -8.489476203918457
    7. ')' → logprob: -11.114476203918457
    8. '   ' → logprob: -11.614476203918457
    9. ' ])
' → logprob: -11.614476203918457
    10. ']
' → logprob: -12.489476203918457

Token 2089: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004597439547069371
    2. 'for' → logprob: -8.875459671020508
    3. '       ' → logprob: -9.125459671020508
    4. ' for' → logprob: -9.250459671020508
    5. '   ' → logprob: -10.375459671020508
    6. '```' → logprob: -10.625459671020508
    7. '<|end|>' → logprob: -11.125459671020508
    8. '               ' → logprob: -11.500459671020508
    9. '[' → logprob: -12.125459671020508
    10. '		' → logprob: -12.250459671020508

Token 2090: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2721026837825775
    2. 'if' (adapté à ' if') → logprob: -1.8971027135849
    3. '           ' → logprob: -2.5221025943756104
    4. 'num' → logprob: -5.2721028327941895
    5. '       ' → logprob: -6.6471028327941895
    6. 'book' → logprob: -7.3971028327941895
    7. 'min' → logprob: -8.397102355957031
    8. ' for' → logprob: -8.772102355957031
    9. '               ' → logprob: -8.897102355957031
    10. '   ' → logprob: -9.022102355957031

Token 2091: ' not' (ID: 625)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6688761711120605
    2. 'not' → logprob: -1.1688761711120605
    3. 'len' → logprob: -2.1688761711120605
    4. ' not' → logprob: -2.7938761711120605
    5. ' len' → logprob: -7.1688761711120605
    6. ' b' → logprob: -7.7938761711120605
    7. '           ' → logprob: -8.793876647949219
    8. '       ' → logprob: -9.418876647949219
    9. '   ' → logprob: -9.918876647949219
    10. '(len' → logprob: -11.043876647949219

Token 2092: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019293478690087795
    2. ' b' → logprob: -6.25192928314209
    3. 'rows' → logprob: -14.50192928314209
    4. '_b' → logprob: -16.126930236816406
    5. ' ' → logprob: -17.001930236816406
    6. '   ' → logprob: -17.126930236816406
    7. ' rows' → logprob: -17.251930236816406
    8. 'books' → logprob: -17.751930236816406
    9. '
' → logprob: -18.251930236816406
    10. '	b' → logprob: -18.251930236816406

Token 2093: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -2.9875325708417222e-05
    2. 'rows' → logprob: -10.625029563903809
    3. '_' → logprob: -13.500029563903809
    4. '```' → logprob: -14.375029563903809
    5. '_ROWS' → logprob: -14.750029563903809
    6. '       ' → logprob: -15.250029563903809
    7. '_r' → logprob: -15.500029563903809
    8. '_lines' → logprob: -15.500029563903809
    9. '   ' → logprob: -15.625029563903809
    10. '\' → logprob: -15.750029563903809

Token 2094: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09291441738605499
    2. ':
' → logprob: -2.467914342880249
    3. '==' → logprob: -6.092914581298828
    4. '[' → logprob: -6.967914581298828
    5. 'continue' → logprob: -8.592914581298828
    6. '           ' → logprob: -8.842914581298828
    7. '):' → logprob: -8.842914581298828
    8. ' ==' → logprob: -9.092914581298828
    9. '       ' → logprob: -10.592914581298828
    10. '):
' → logprob: -10.717914581298828

Token 2095: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007562845014035702
    2. '           ' → logprob: -6.007562637329102
    3. ' for' → logprob: -6.382562637329102
    4. ' continue' → logprob: -6.507562637329102
    5. 'continue' → logprob: -7.007562637329102
    6. 'for' → logprob: -7.757562637329102
    7. '```' → logprob: -8.882562637329102
    8. '                   ' → logprob: -9.257562637329102
    9. '   ' → logprob: -10.007562637329102
    10. ',' → logprob: -10.132562637329102

Token 2096: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6747049689292908
    2. 'for' → logprob: -1.1747050285339355
    3. '           ' → logprob: -1.7997050285339355
    4. '               ' → logprob: -4.2997050285339355
    5. 'continue' → logprob: -7.4247050285339355
    6. '   ' → logprob: -7.6747050285339355
    7. '```' → logprob: -7.7997050285339355
    8. ' next' → logprob: -8.174704551696777
    9. 'next' → logprob: -8.174704551696777
    10. ' continue' → logprob: -8.424704551696777

Token 2097: ' no' (ID: 860)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6466189622879028
    2. ' for' → logprob: -1.0216189622879028
    3. 'next' → logprob: -3.1466188430786133
    4. '           ' → logprob: -3.3966188430786133
    5. ' next' → logprob: -3.6466188430786133
    6. '               ' → logprob: -4.771618843078613
    7. 'dp' → logprob: -6.521618843078613
    8. '```' → logprob: -6.646618843078613
    9. '#' → logprob: -7.021618843078613
    10. 'continue' → logprob: -8.146618843078613

Token 2098: ' books' (ID: 7187)
  Prédit: ' change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.6509342193603516
    2. ' changes' → logprob: -1.6509342193603516
    3. 'change' → logprob: -2.2759342193603516
    4. ' movement' → logprob: -3.1509342193603516
    5. ' action' → logprob: -3.7759342193603516
    6. '           ' → logprob: -4.025934219360352
    7. ' c' → logprob: -4.525934219360352
    8. ' cost' → logprob: -4.775934219360352
    9. ' code' → logprob: -4.900934219360352
    10. '               ' → logprob: -4.900934219360352

Token 2099: ' at' (ID: 540)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9686183333396912
    2. '           ' → logprob: -1.343618392944336
    3. ':
' → logprob: -1.468618392944336
    4. ' for' → logprob: -2.718618392944336
    5. ' at' → logprob: -3.218618392944336
    6. ',' → logprob: -4.718618392944336
    7. '               ' → logprob: -4.843618392944336
    8. 'for' → logprob: -5.843618392944336
    9. ' to' → logprob: -7.968618392944336
    10. '):
' → logprob: -7.968618392944336

Token 2100: ' this' (ID: 495)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.39334836602211
    2. ' all' → logprob: -1.7683483362197876
    3. 'all' → logprob: -2.643348455429077
    4. ' c' → logprob: -2.643348455429077
    5. 'column' → logprob: -5.018348217010498
    6. ' column' → logprob: -6.518348217010498
    7. 'col' → logprob: -7.018348217010498
    8. '               ' → logprob: -7.518348217010498
    9. ' col' → logprob: -7.768348217010498
    10. ')' → logprob: -8.018348693847656

Token 2101: ' column' (ID: 6000)
  Prédit: ' column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' column' → logprob: -0.32441115379333496
    2. ' c' → logprob: -2.199411153793335
    3. 'column' → logprob: -2.199411153793335
    4. 'c' → logprob: -3.324411153793335
    5. ' col' → logprob: -4.574411392211914
    6. 'col' → logprob: -4.949411392211914
    7. ' ' → logprob: -7.574411392211914
    8. '               ' → logprob: -7.699411392211914
    9. '           ' → logprob: -7.949411392211914
    10. ':
' → logprob: -8.824411392211914

Token 2102: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.059025492519140244
    2. ' for' → logprob: -3.559025526046753
    3. '               ' → logprob: -4.184025287628174
    4. '
' → logprob: -4.684025287628174
    5. ':
' → logprob: -6.559025287628174
    6. 'for' → logprob: -6.934025287628174
    7. ',' → logprob: -7.309025287628174
    8. '   ' → logprob: -7.809025287628174
    9. '       ' → logprob: -8.559025764465332
    10. '            
' → logprob: -9.059025764465332

Token 2103: ' just' (ID: 1327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03201869875192642
    2. ' for' → logprob: -4.032018661499023
    3. '           ' → logprob: -4.532018661499023
    4. '#' → logprob: -6.407018661499023
    5. '               ' → logprob: -6.907018661499023
    6. 'next' → logprob: -8.282018661499023
    7. '   ' → logprob: -10.282018661499023
    8. '```' → logprob: -10.907018661499023
    9. 'dp' → logprob: -11.532018661499023
    10. '                   ' → logprob: -11.657018661499023

Token 2104: ' move' (ID: 5275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15944719314575195
    2. ' for' → logprob: -2.284447193145752
    3. 'next' → logprob: -4.159447193145752
    4. ' next' → logprob: -5.034447193145752
    5. 'copy' → logprob: -5.159447193145752
    6. '           ' → logprob: -5.284447193145752
    7. '               ' → logprob: -5.409447193145752
    8. '
' → logprob: -6.534447193145752
    9. '   ' → logprob: -6.909447193145752
    10. '#' → logprob: -7.034447193145752

Token 2105: ' horizontally' (ID: 113653)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.4005138874053955
    2. 'right' → logprob: -1.5255138874053955
    3. ' to' → logprob: -2.1505138874053955
    4. 'r' → logprob: -2.4005138874053955
    5. '           ' → logprob: -2.9005138874053955
    6. '               ' → logprob: -3.1505138874053955
    7. 'for' → logprob: -3.2755138874053955
    8. 'next' → logprob: -3.7755138874053955
    9. 'from' → logprob: -3.9005138874053955
    10. ' right' → logprob: -3.9005138874053955

Token 2106: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27394407987594604
    2. '
' → logprob: -2.148944139480591
    3. ' for' → logprob: -3.023944139480591
    4. ' to' → logprob: -3.398944139480591
    5. '               ' → logprob: -4.523943901062012
    6. '   ' → logprob: -5.273943901062012
    7. 'for' → logprob: -5.398943901062012
    8. ':
' → logprob: -5.773943901062012
    9. ' from' → logprob: -6.148943901062012
    10. '            
' → logprob: -6.148943901062012

Token 2107: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.02417018823325634
    2. ' next' → logprob: -4.399170398712158
    3. 'each' → logprob: -6.149170398712158
    4. 'the' → logprob: -6.149170398712158
    5. 'all' → logprob: -6.524170398712158
    6. '[next' → logprob: -6.649170398712158
    7. 'r' → logprob: -6.774170398712158
    8. '[' → logprob: -7.399170398712158
    9. 'same' → logprob: -7.399170398712158
    10. 'row' → logprob: -7.899170398712158

Token 2108: ' column' (ID: 6000)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1568357944488525
    2. ' if' → logprob: -1.1568357944488525
    3. 'if' → logprob: -1.5318357944488525
    4. '               ' → logprob: -3.6568357944488525
    5. '   ' → logprob: -3.7818357944488525
    6. 'c' → logprob: -3.9068357944488525
    7. 'column' → logprob: -3.9068357944488525
    8. 'col' → logprob: -4.281835556030273
    9. '       ' → logprob: -4.781835556030273
    10. '```' → logprob: -5.281835556030273

Token 2109: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09819553792476654
    2. '               ' → logprob: -2.5981955528259277
    3. ' for' → logprob: -4.348195552825928
    4. '
' → logprob: -5.848195552825928
    5. ':
' → logprob: -7.098195552825928
    6. '   ' → logprob: -7.473195552825928
    7. 'for' → logprob: -7.473195552825928
    8. ',' → logprob: -7.723195552825928
    9. ':' → logprob: -8.72319507598877
    10. '       ' → logprob: -9.09819507598877

Token 2110: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011756503954529762
    2. '           ' → logprob: -4.886756420135498
    3. '                   ' → logprob: -6.261756420135498
    4. ' for' → logprob: -7.636756420135498
    5. '```' → logprob: -7.636756420135498
    6. ':
' → logprob: -7.761756420135498
    7. ' next' → logprob: -8.886756896972656
    8. ' continue' → logprob: -9.011756896972656
    9. '
' → logprob: -9.136756896972656
    10. 'for' → logprob: -9.386756896972656

Token 2111: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7196735739707947
    2. ' for' → logprob: -1.3446736335754395
    3. '           ' → logprob: -1.7196736335754395
    4. '               ' → logprob: -2.8446736335754395
    5. 'next' → logprob: -5.5946736335754395
    6. 'continue' → logprob: -5.5946736335754395
    7. 'if' → logprob: -5.9696736335754395
    8. ' next' → logprob: -6.5946736335754395
    9. ' if' → logprob: -6.9696736335754395
    10. ' continue' → logprob: -6.9696736335754395

Token 2112: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018150994554162025
    2. ' r' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.64315128326416
    4. 'row' → logprob: -15.14315128326416
    5. 'prev' → logprob: -15.51815128326416
    6. '```' → logprob: -16.143150329589844
    7. '	r' → logprob: -17.018150329589844
    8. ' ' → logprob: -17.143150329589844
    9. 'nr' → logprob: -17.518150329589844
    10. ' prev' → logprob: -17.768150329589844

Token 2113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28178125619888306
    2. 'in' → logprob: -1.4067811965942383
    3. '_in' → logprob: -7.781781196594238
    4. '	in' → logprob: -9.281781196594238
    5. '```' → logprob: -10.656781196594238
    6. '1' → logprob: -10.906781196594238
    7. ' ' → logprob: -11.406781196594238
    8. ')' → logprob: -11.531781196594238
    9. '2' → logprob: -11.906781196594238
    10. ']' → logprob: -12.156781196594238

Token 2114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038045622408390045
    2. ' range' → logprob: -3.288045644760132
    3. '   ' → logprob: -13.538045883178711
    4. '0' → logprob: -13.663045883178711
    5. '[' → logprob: -13.788045883178711
    6. '
' → logprob: -15.413045883178711
    7. ' ' → logprob: -15.663045883178711
    8. '(range' → logprob: -16.28804588317871
    9. '    ' → logprob: -16.91304588317871
    10. '  ' → logprob: -16.91304588317871

Token 2115: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.762356209335849e-05
    2. '1' → logprob: -10.37503719329834
    3. ' ' → logprob: -13.37503719329834
    4. '0' → logprob: -13.50003719329834
    5. '   ' → logprob: -13.50003719329834
    6. '           ' → logprob: -13.87503719329834
    7. '(' → logprob: -14.37503719329834
    8. '               ' → logprob: -15.25003719329834
    9. '```' → logprob: -16.125038146972656
    10. '       ' → logprob: -16.875038146972656

Token 2116: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '   ' → logprob: -17.75
    3. '0' → logprob: -18.875
    4. '
' → logprob: -19.625
    5. '1' → logprob: -20.75
    6. '```' → logprob: -20.75
    7. ')' → logprob: -21.0
    8. ' ' → logprob: -21.25
    9. '' → logprob: -21.375
    10. '           ' → logprob: -22.0

Token 2117: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0005427849246188998
    2. '):' → logprob: -7.625542640686035
    3. '           ' → logprob: -11.500542640686035
    4. '               ' → logprob: -11.875542640686035
    5. '):
' → logprob: -11.875542640686035
    6. ':
' → logprob: -11.875542640686035
    7. '```' → logprob: -12.000542640686035
    8. ' ):
' → logprob: -12.625542640686035
    9. '):

' → logprob: -12.750542640686035
    10. ']:
' → logprob: -12.750542640686035

Token 2118: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09208140522241592
    2. '                   ' → logprob: -2.592081308364868
    3. '                       ' → logprob: -4.842081546783447
    4. '```' → logprob: -6.842081546783447
    5. '		           ' → logprob: -7.217081546783447
    6. '	           ' → logprob: -7.342081546783447
    7. '	               ' → logprob: -7.717081546783447
    8. '			       ' → logprob: -7.967081546783447
    9. ' next' → logprob: -8.217081069946289
    10. '                           ' → logprob: -8.342081069946289

Token 2119: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9613199830055237
    2. 'next' → logprob: -1.586319923400879
    3. ' next' → logprob: -1.961319923400879
    4. ' if' → logprob: -1.961319923400879
    5. 'if' (adapté à ' if') → logprob: -2.211319923400879
    6. '                   ' → logprob: -4.086319923400879
    7. 'for' → logprob: -6.461319923400879
    8. ' for' → logprob: -6.711319923400879
    9. '```' → logprob: -7.211319923400879
    10. '                           ' → logprob: -7.961319923400879

Token 2120: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6341263651847839
    2. 'dp' → logprob: -0.7591263651847839
    3. '                   ' → logprob: -7.38412618637085
    4. 'r' → logprob: -8.634126663208008
    5. '(dp' → logprob: -8.759126663208008
    6. '               ' → logprob: -9.384126663208008
    7. ' r' → logprob: -9.384126663208008
    8. '                    ' → logprob: -9.509126663208008
    9. '           ' → logprob: -9.759126663208008
    10. '_dp' → logprob: -10.134126663208008

Token 2121: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00011343709047650918
    2. '[' → logprob: -10.250113487243652
    3. '```' → logprob: -10.500113487243652
    4. ' [' → logprob: -10.625113487243652
    5. '                   ' → logprob: -11.625113487243652
    6. 'r' → logprob: -12.875113487243652
    7. '[v' → logprob: -13.125113487243652
    8. '[c' → logprob: -13.625113487243652
    9. '][' → logprob: -13.875113487243652
    10. '   ' → logprob: -13.875113487243652

Token 2122: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9423960447311401
    2. ']' → logprob: -1.0673960447311401
    3. '==' → logprob: -2.4423961639404297
    4. ']==' → logprob: -2.4423961639404297
    5. ' !=' → logprob: -2.9423961639404297
    6. ']+' → logprob: -4.94239616394043
    7. ' +' → logprob: -5.19239616394043
    8. '!=' → logprob: -5.19239616394043
    9. '+' → logprob: -5.31739616394043
    10. ']!=' → logprob: -5.44239616394043

Token 2123: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.28024372458457947
    2. ' !=' → logprob: -1.7802437543869019
    3. '==' → logprob: -3.0302436351776123
    4. ' is' → logprob: -3.9052436351776123
    5. ' ==' → logprob: -5.280243873596191
    6. '+' → logprob: -6.905243873596191
    7. 'is' → logprob: -7.655243873596191
    8. '<=' → logprob: -8.155243873596191
    9. '```' → logprob: -9.030243873596191
    10. ' +' → logprob: -9.905243873596191

Token 2124: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.638516366481781
    2. '0' → logprob: -0.888516366481781
    3. '<' → logprob: -3.138516426086426
    4. '!=' → logprob: -4.888516426086426
    5. '1' → logprob: -5.763516426086426
    6. 'not' → logprob: -6.638516426086426
    7. 'r' → logprob: -7.263516426086426
    8. 'dp' → logprob: -7.388516426086426
    9. ' INF' → logprob: -7.763516426086426
    10. '<!' → logprob: -7.888516426086426

Token 2125: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09812422096729279
    2. ' and' → logprob: -2.9731242656707764
    3. '                           ' → logprob: -3.9731242656707764
    4. ':
' → logprob: -5.098124027252197
    5. '                               ' → logprob: -5.223124027252197
    6. ':' → logprob: -5.723124027252197
    7. '                   ' → logprob: -6.098124027252197
    8. '):
' → logprob: -6.973124027252197
    9. '<|end|>' → logprob: -6.973124027252197
    10. '               ' → logprob: -7.098124027252197

Token 2126: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0020130984485149384
    2. '                           ' → logprob: -6.877013206481934
    3. '```' → logprob: -8.252013206481934
    4. '                   ' → logprob: -8.627013206481934
    5. ' next' → logprob: -8.752013206481934
    6. '                               ' → logprob: -9.752013206481934
    7. ':
' → logprob: -10.002013206481934
    8. ',' → logprob: -10.002013206481934
    9. '                        ' → logprob: -10.002013206481934
    10. ' continue' → logprob: -10.502013206481934

Token 2127: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.8237659335136414
    2. '                       ' → logprob: -0.9487659335136414
    3. ' continue' → logprob: -1.8237659931182861
    4. '```' → logprob: -5.323765754699707
    5. '                               ' → logprob: -5.573765754699707
    6. '                           ' → logprob: -5.948765754699707
    7. '                   ' → logprob: -6.948765754699707
    8. '               ' → logprob: -8.948765754699707
    9. '	continue' → logprob: -10.073765754699707
    10. '   ' → logprob: -10.073765754699707

Token 2128: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05410505086183548
    2. '                       ' → logprob: -3.054105043411255
    3. '
' → logprob: -5.804105281829834
    4. '```' → logprob: -6.554105281829834
    5. '               ' → logprob: -7.679105281829834
    6. '       ' → logprob: -8.679104804992676
    7. '           ' → logprob: -9.304104804992676
    8. ' for' → logprob: -9.554104804992676
    9. 'for' → logprob: -9.679104804992676
    10. ':
' → logprob: -10.429104804992676

Token 2129: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015633558854460716
    2. '                       ' → logprob: -4.890633583068848
    3. '               ' → logprob: -5.390633583068848
    4. '       ' → logprob: -6.515633583068848
    5. '           ' → logprob: -7.390633583068848
    6. '```' → logprob: -7.515633583068848
    7. ' for' → logprob: -7.765633583068848
    8. 'for' → logprob: -8.640633583068848
    9. '   ' → logprob: -10.015633583068848
    10. '                    ' → logprob: -10.640633583068848

Token 2130: ' #' (ID: 1069)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.38386714458465576
    2. '                       ' → logprob: -2.3838672637939453
    3. ' for' → logprob: -2.5088672637939453
    4. '                   ' → logprob: -2.6338672637939453
    5. 'next' → logprob: -2.7588672637939453
    6. 'for' → logprob: -5.383867263793945
    7. '               ' → logprob: -5.758867263793945
    8. '```' → logprob: -7.508867263793945
    9. ' if' → logprob: -8.008867263793945
    10. '           ' → logprob: -8.008867263793945

Token 2131: ' move' (ID: 5275)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2611062526702881
    2. ' next' → logprob: -1.636106252670288
    3. '                   ' → logprob: -4.761106491088867
    4. 'if' → logprob: -4.886106491088867
    5. 'for' → logprob: -4.886106491088867
    6. ' if' → logprob: -5.386106491088867
    7. ' for' → logprob: -6.011106491088867
    8. '   ' → logprob: -6.886106491088867
    9. '                       ' → logprob: -7.136106491088867
    10. 'cost' → logprob: -7.261106491088867

Token 2132: ' horizontally' (ID: 113653)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.042520735412836075
    2. '                   ' → logprob: -3.917520761489868
    3. ' r' → logprob: -4.542520523071289
    4. 'from' → logprob: -6.167520523071289
    5. '[r' → logprob: -6.167520523071289
    6. ' from' → logprob: -7.042520523071289
    7. '               ' → logprob: -7.167520523071289
    8. '                       ' → logprob: -7.292520523071289
    9. '(r' → logprob: -7.417520523071289
    10. 'right' → logprob: -7.667520523071289

Token 2133: ' on' (ID: 402)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.7712258100509644
    2. ' if' → logprob: -1.7712258100509644
    3. ' =' → logprob: -2.271225929260254
    4. '                   ' → logprob: -2.271225929260254
    5. ' r' → logprob: -2.396225929260254
    6. 'r' → logprob: -2.646225929260254
    7. '(r' → logprob: -2.646225929260254
    8. ' (' → logprob: -3.146225929260254
    9. 'if' → logprob: -3.271225929260254
    10. 'to' → logprob: -3.896225929260254

Token 2134: ' same' (ID: 2684)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.013111169449985027
    2. 'same' → logprob: -5.013111114501953
    3. ' r' → logprob: -6.013111114501953
    4. 'the' → logprob: -6.138111114501953
    5. ' same' → logprob: -7.388111114501953
    6. 'row' → logprob: -7.388111114501953
    7. ' the' → logprob: -8.763111114501953
    8. '```' → logprob: -9.388111114501953
    9. '[r' → logprob: -9.763111114501953
    10. 'intersection' → logprob: -10.138111114501953

Token 2135: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.5475878715515137
    2. 'row' → logprob: -1.0475878715515137
    3. 'r' → logprob: -2.7975878715515137
    4. '_row' → logprob: -5.672587871551514
    5. ' r' → logprob: -5.922587871551514
    6. ' line' → logprob: -6.547587871551514
    7. '_r' → logprob: -7.172587871551514
    8. ' ' → logprob: -7.422587871551514
    9. '   ' → logprob: -8.047588348388672
    10. 'line' → logprob: -8.547588348388672

Token 2136: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1774410605430603
    2. ' r' → logprob: -2.677441120147705
    3. ' next' → logprob: -3.302441120147705
    4. 'r' → logprob: -4.052441120147705
    5. ' for' → logprob: -5.177441120147705
    6. ' if' → logprob: -5.302441120147705
    7. '                       ' → logprob: -5.302441120147705
    8. 'next' → logprob: -5.427441120147705
    9. ' =' → logprob: -5.802441120147705
    10. ' dp' → logprob: -6.052441120147705

Token 2137: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11408290266990662
    2. '                       ' → logprob: -2.7390828132629395
    3. 'r' → logprob: -3.9890828132629395
    4. ' (' → logprob: -5.2390828132629395
    5. ' r' → logprob: -5.4890828132629395
    6. '(r' → logprob: -5.7390828132629395
    7. ' for' → logprob: -6.3640828132629395
    8. '                    ' → logprob: -6.4890828132629395
    9. '                           ' → logprob: -6.7390828132629395
    10. 'for' → logprob: -6.7390828132629395

Token 2138: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7109310626983643
    2. ' next' → logprob: -0.9609310626983643
    3. 'if' → logprob: -2.8359310626983643
    4. ' if' → logprob: -2.9609310626983643
    5. '                   ' → logprob: -4.335930824279785
    6. '                       ' → logprob: -7.210930824279785
    7. 'for' → logprob: -7.835930824279785
    8. ' for' → logprob: -8.085930824279785
    9. '```' → logprob: -8.460930824279785
    10. '   ' → logprob: -8.585930824279785

Token 2139: ' cost' (ID: 3097)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.20909368991851807
    2. ' next' → logprob: -2.0840935707092285
    3. 'if' → logprob: -2.9590935707092285
    4. ' if' → logprob: -4.5840935707092285
    5. '                   ' → logprob: -7.2090935707092285
    6. 'for' → logprob: -7.9590935707092285
    7. '```' → logprob: -8.084094047546387
    8. '                       ' → logprob: -8.959094047546387
    9. '``' → logprob: -9.334094047546387
    10. 'r' → logprob: -9.459094047546387

Token 2140: ' horizontal' (ID: 25511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8809791207313538
    2. ' =' → logprob: -1.005979061126709
    3. '+' → logprob: -2.005979061126709
    4. ' +' → logprob: -2.880979061126709
    5. '                   ' → logprob: -3.755979061126709
    6. '1' → logprob: -5.880979061126709
    7. ' +=' → logprob: -6.880979061126709
    8. '```' → logprob: -7.755979061126709
    9. '+=' → logprob: -8.005979537963867
    10. '=r' → logprob: -8.505979537963867

Token 2141: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1493192911148071
    2. '1' → logprob: -1.3993192911148071
    3. ' +' → logprob: -1.5243192911148071
    4. '=' → logprob: -2.5243191719055176
    5. ' =' → logprob: -2.5243191719055176
    6. ' ' → logprob: -3.5243191719055176
    7. '                   ' → logprob: -4.649319171905518
    8. 'r' → logprob: -5.149319171905518
    9. ' +=' → logprob: -6.024319171905518
    10. '```' → logprob: -6.149319171905518

Token 2142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0181527491658926
    2. ' ' → logprob: -4.018152713775635
    3. '+' → logprob: -13.893153190612793
    4. ' +' → logprob: -14.268153190612793
    5. ' ' → logprob: -15.018153190612793
    6. '                   ' → logprob: -15.268153190612793
    7. '```' → logprob: -15.768153190612793
    8. '   ' → logprob: -15.768153190612793
    9. '               ' → logprob: -16.018152236938477
    10. '           ' → logprob: -16.893152236938477

Token 2143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.625001907348633
    4. '
' → logprob: -16.125001907348633
    5. '+' → logprob: -16.125001907348633
    6. '```' → logprob: -17.375001907348633
    7. '       ' → logprob: -17.875001907348633
    8. '0' → logprob: -18.750001907348633
    9. ' ' → logprob: -18.875001907348633
    10. '           ' → logprob: -19.000001907348633

Token 2144: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.061922863125801086
    2. '               ' → logprob: -4.436923027038574
    3. '
' → logprob: -5.061923027038574
    4. ' +' → logprob: -5.061923027038574
    5. '+' → logprob: -5.186923027038574
    6. '```' → logprob: -5.186923027038574
    7. '                       ' → logprob: -5.686923027038574
    8. '<|end|>' → logprob: -5.811923027038574
    9. '           ' → logprob: -6.061923027038574
    10. ')' → logprob: -6.186923027038574

Token 2145: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001205350155942142
    2. '                       ' → logprob: -7.2512054443359375
    3. '               ' → logprob: -9.001205444335938
    4. 'for' → logprob: -9.001205444335938
    5. ' for' → logprob: -9.876205444335938
    6. '```' → logprob: -9.876205444335938
    7. '           ' → logprob: -10.001205444335938
    8. '                    ' → logprob: -10.751205444335938
    9. '                    
' → logprob: -11.001205444335938
    10. '       ' → logprob: -11.126205444335938

Token 2146: ' next' (ID: 2613)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8752930164337158
    2. 'next' (adapté à ' next') → logprob: -1.2502930164337158
    3. ' next' → logprob: -2.000293016433716
    4. '                       ' → logprob: -2.500293016433716
    5. 'for' → logprob: -3.875293016433716
    6. ' for' → logprob: -4.000292778015137
    7. ' if' → logprob: -4.500292778015137
    8. '```' → logprob: -4.875292778015137
    9. 'if' → logprob: -5.000292778015137
    10. '
' → logprob: -5.250292778015137

Token 2147: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -3.702754474943504e-05
    2. 'dp' → logprob: -11.62503719329834
    3. '   ' → logprob: -11.87503719329834
    4. '```' → logprob: -12.00003719329834
    5. '[' → logprob: -12.12503719329834
    6. '
' → logprob: -12.37503719329834
    7. '_DP' → logprob: -14.00003719329834
    8. '\' → logprob: -14.25003719329834
    9. '[_' → logprob: -14.50003719329834
    10. '[
' → logprob: -14.62503719329834

Token 2148: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.001421664608642459
    2. '[' → logprob: -6.6264214515686035
    3. '```' → logprob: -10.001421928405762
    4. '=' → logprob: -11.251421928405762
    5. ' =' → logprob: -11.501421928405762
    6. ' [' → logprob: -12.501421928405762
    7. '[:]' → logprob: -12.751421928405762
    8. '[
' → logprob: -13.126421928405762
    9. '   ' → logprob: -13.126421928405762
    10. '[token' → logprob: -13.751421928405762

Token 2149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2502385377883911
    2. ' =' → logprob: -2.3752384185791016
    3. '=' → logprob: -2.8752384185791016
    4. ' +=' → logprob: -4.250238418579102
    5. '[r' → logprob: -4.500238418579102
    6. '           ' → logprob: -4.625238418579102
    7. ']+=' → logprob: -5.125238418579102
    8. '+=' → logprob: -5.375238418579102
    9. '+' → logprob: -5.375238418579102
    10. '[' → logprob: -5.750238418579102

Token 2150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.099570631980896
    2. '+=' → logprob: -2.5995707511901855
    3. ' =' → logprob: -4.4745707511901855
    4. ' +=' → logprob: -4.9745707511901855
    5. '[' → logprob: -6.8495707511901855
    6. '+' → logprob: -7.8495707511901855
    7. '```' → logprob: -8.724570274353027
    8. '[next' → logprob: -9.474570274353027
    9. '           ' → logprob: -9.724570274353027
    10. ')' → logprob: -9.974570274353027

Token 2151: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3326849341392517
    2. 'dp' → logprob: -1.9576849937438965
    3. ' min' → logprob: -2.0826849937438965
    4. ' dp' → logprob: -4.0826849937438965
    5. '1' → logprob: -8.457684516906738
    6. 'max' → logprob: -9.332684516906738
    7. '   ' → logprob: -11.582684516906738
    8. '```' → logprob: -11.582684516906738
    9. ' ' → logprob: -12.082684516906738
    10. ' max' → logprob: -12.207684516906738

Token 2152: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.47576338052749634
    2. '(' → logprob: -1.2257633209228516
    3. '(
' → logprob: -3.1007633209228516
    4. '(dp' → logprob: -3.2257633209228516
    5. 'next' → logprob: -8.850763320922852
    6. 'dp' → logprob: -9.975763320922852
    7. ' (' → logprob: -9.975763320922852
    8. '(

' → logprob: -11.100763320922852
    9. '(prev' → logprob: -11.725763320922852
    10. ' (
' → logprob: -11.850763320922852

Token 2153: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.006844787858426571
    2. '[next' → logprob: -5.381844997406006
    3. '(next' → logprob: -7.131844997406006
    4. '_next' → logprob: -8.006844520568848
    5. '[' → logprob: -8.631844520568848
    6. '(dp' → logprob: -8.881844520568848
    7. '[
' → logprob: -8.881844520568848
    8. ' next' → logprob: -9.381844520568848
    9. 'next' → logprob: -9.381844520568848
    10. '```' → logprob: -9.506844520568848

Token 2154: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00015908108616713434
    2. ',' → logprob: -9.12515926361084
    3. 'r' → logprob: -11.37515926361084
    4. '[' → logprob: -11.62515926361084
    5. '[
' → logprob: -11.62515926361084
    6. ',r' → logprob: -12.12515926361084
    7. '[next' → logprob: -12.12515926361084
    8. ' [' → logprob: -12.25015926361084
    9. '   ' → logprob: -13.87515926361084
    10. '(r' → logprob: -13.87515926361084

Token 2155: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26705557107925415
    2. ' +' → logprob: -1.8920555114746094
    3. '+' → logprob: -2.8920555114746094
    4. ' ,' → logprob: -3.7670555114746094
    5. ',
' → logprob: -5.767055511474609
    6. ',r' → logprob: -7.642055511474609
    7. ' ,
' → logprob: -8.39205551147461
    8. '```' → logprob: -8.64205551147461
    9. '+r' → logprob: -9.01705551147461
    10. 'r' → logprob: -9.01705551147461

Token 2156: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00013047587708570063
    2. ' dp' → logprob: -9.000130653381348
    3. '                   ' → logprob: -12.500130653381348
    4. '               ' → logprob: -13.625130653381348
    5. '                           ' → logprob: -14.000130653381348
    6. '                       ' → logprob: -14.625130653381348
    7. '           ' → logprob: -14.875130653381348
    8. '```' → logprob: -16.25012969970703
    9. '                               ' → logprob: -16.37512969970703
    10. '   ' → logprob: -16.50012969970703

Token 2157: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.2471589798224159e-05
    2. 'r' → logprob: -11.500012397766113
    3. '```' → logprob: -14.375012397766113
    4. '[' → logprob: -14.625012397766113
    5. '[
' → logprob: -15.125012397766113
    6. '   ' → logprob: -15.250012397766113
    7. ' [' → logprob: -15.500012397766113
    8. '                   ' → logprob: -16.12501335144043
    9. ' r' → logprob: -16.12501335144043
    10. ')' → logprob: -16.50001335144043

Token 2158: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1340370923280716
    2. ']' → logprob: -2.8840370178222656
    3. '+' → logprob: -3.1340370178222656
    4. '[r' → logprob: -3.8840370178222656
    5. ']+' → logprob: -5.509037017822266
    6. '+r' → logprob: -6.884037017822266
    7. ' ]' → logprob: -8.759037017822266
    8. '   ' → logprob: -10.134037017822266
    9. '           ' → logprob: -10.509037017822266
    10. '                   ' → logprob: -10.634037017822266

Token 2159: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.126943439245224
    2. '+' → logprob: -2.126943349838257
    3. ')' → logprob: -12.251943588256836
    4. '```' → logprob: -12.626943588256836
    5. '   ' → logprob: -13.751943588256836
    6. '                   ' → logprob: -13.876943588256836
    7. '           ' → logprob: -14.001943588256836
    8. ')+' → logprob: -14.376943588256836
    9. ' ' → logprob: -14.626943588256836
    10. '               ' → logprob: -14.626943588256836

Token 2160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015117661096155643
    2. ' ' → logprob: -6.501511573791504
    3. '   ' → logprob: -12.626511573791504
    4. '```' → logprob: -13.251511573791504
    5. '           ' → logprob: -13.626511573791504
    6. '               ' → logprob: -14.626511573791504
    7. '       ' → logprob: -14.751511573791504
    8. '                   ' → logprob: -14.751511573791504
    9. '`' → logprob: -15.376511573791504
    10. '                       ' → logprob: -15.501511573791504

Token 2161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.00000286102295
    3. '0' → logprob: -15.12500286102295
    4. '   ' → logprob: -15.25000286102295
    5. '```' → logprob: -15.50000286102295
    6. '
' → logprob: -16.375003814697266
    7. '           ' → logprob: -18.437503814697266
    8. '+' → logprob: -18.437503814697266
    9. '`' → logprob: -18.687503814697266
    10. '       ' → logprob: -18.812503814697266

Token 2162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013281520456075668
    2. '           ' → logprob: -4.638281345367432
    3. ')
' → logprob: -6.138281345367432
    4. '                   ' → logprob: -7.388281345367432
    5. '               ' → logprob: -7.513281345367432
    6. ' )' → logprob: -9.51328182220459
    7. '+' → logprob: -10.13828182220459
    8. '```' → logprob: -10.26328182220459
    9. '                       ' → logprob: -11.13828182220459
    10. ' +' → logprob: -12.01328182220459

Token 2163: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02216648869216442
    2. '       ' → logprob: -5.0221662521362305
    3. 'continue' → logprob: -5.2721662521362305
    4. '```' → logprob: -6.0221662521362305
    5. '		' → logprob: -6.1471662521362305
    6. '<|end|>' → logprob: -6.5221662521362305
    7. '	       ' → logprob: -7.2721662521362305
    8. ')' → logprob: -7.2721662521362305
    9. '               ' → logprob: -7.7721662521362305
    10. ' continue' → logprob: -8.14716625213623

Token 2164: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07398217916488647
    2. 'else' (adapté à ' else') → logprob: -2.6989822387695312
    3. '       ' → logprob: -6.198982238769531
    4. ' else' → logprob: -6.323982238769531
    5. 'continue' → logprob: -9.198982238769531
    6. '		' → logprob: -10.073982238769531
    7. '```' → logprob: -10.823982238769531
    8. '	       ' → logprob: -11.198982238769531
    9. '               ' → logprob: -11.573982238769531
    10. 'elif' → logprob: -12.198982238769531

Token 2165: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6602372527122498
    2. ':' → logprob: -1.1602373123168945
    3. '           ' → logprob: -2.2852373123168945
    4. '               ' → logprob: -2.7852373123168945
    5. ' for' → logprob: -5.6602373123168945
    6. ',' → logprob: -7.6602373123168945
    7. '[' → logprob: -7.6602373123168945
    8. '{' → logprob: -8.160237312316895
    9. '                   ' → logprob: -8.285237312316895
    10. ' :' → logprob: -8.785237312316895

Token 2166: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5824379324913025
    2. '           ' → logprob: -0.8324379324913025
    3. '```' → logprob: -5.457437992095947
    4. 'for' → logprob: -6.332437992095947
    5. ' for' → logprob: -7.957437992095947
    6. '                   ' → logprob: -10.457437515258789
    7. '   ' → logprob: -10.582437515258789
    8. '``' → logprob: -11.332437515258789
    9. '       ' → logprob: -12.207437515258789
    10. '		' → logprob: -13.082437515258789

Token 2167: ' med' (ID: 1475)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06129676103591919
    2. '               ' → logprob: -2.9362967014312744
    3. ' for' → logprob: -5.4362969398498535
    4. '           ' → logprob: -6.4362969398498535
    5. '                   ' → logprob: -8.311296463012695
    6. '```' → logprob: -9.311296463012695
    7. '   ' → logprob: -9.936296463012695
    8. 'from' → logprob: -10.186296463012695
    9. '#' → logprob: -12.811296463012695
    10. ' ' → logprob: -13.311296463012695

Token 2168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11404833197593689
    2. '=' → logprob: -2.2390482425689697
    3. '=min' → logprob: -6.989048480987549
    4. ',' → logprob: -8.48904800415039
    5. '=row' → logprob: -10.61404800415039
    6. '=int' → logprob: -11.61404800415039
    7. '=r' → logprob: -11.61404800415039
    8. '   ' → logprob: -11.61404800415039
    9. '=max' → logprob: -11.86404800415039
    10. ')' → logprob: -12.36404800415039

Token 2169: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005673298146575689
    2. 'min' → logprob: -7.750567436218262
    3. ' b' → logprob: -9.125567436218262
    4. '0' → logprob: -10.750567436218262
    5. ' min' → logprob: -12.375567436218262
    6. '   ' → logprob: -13.625567436218262
    7. '           ' → logprob: -14.750567436218262
    8. ' ' → logprob: -14.875567436218262
    9. '       ' → logprob: -16.750566482543945
    10. '
' → logprob: -17.375566482543945

Token 2170: '_rows' (ID: 26013)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.022618293762207
    2. '[' → logprob: -1.647618293762207
    3. 'b' → logprob: -1.772618293762207
    4. '0' → logprob: -1.772618293762207
    5. '=' → logprob: -2.897618293762207
    6. '[b' → logprob: -4.522618293762207
    7. '_rows' → logprob: -4.897618293762207
    8. ' =' → logprob: -5.022618293762207
    9. 'min' → logprob: -5.022618293762207
    10. '   ' → logprob: -5.522618293762207

Token 2171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000122608442325145
    2. ' =' → logprob: -9.875123023986816
    3. '0' → logprob: -10.250123023986816
    4. '=' → logprob: -11.125123023986816
    5. '               ' → logprob: -12.250123023986816
    6. '```' → logprob: -12.500123023986816
    7. 'min' → logprob: -13.125123023986816
    8. '                   ' → logprob: -13.250123023986816
    9. '           ' → logprob: -14.000123023986816
    10. '
' → logprob: -14.000123023986816

Token 2172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.9875325708417222e-05
    2. '[' → logprob: -11.375029563903809
    3. '```' → logprob: -12.000029563903809
    4. ' ' → logprob: -12.125029563903809
    5. '   ' → logprob: -14.125029563903809
    6. '           ' → logprob: -14.250029563903809
    7. '``' → logprob: -14.250029563903809
    8. ':' → logprob: -14.500029563903809
    9. '-' → logprob: -14.875029563903809
    10. '.' → logprob: -15.000029563903809

Token 2173: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5938743352890015
    2. ']
' → logprob: -0.9688743352890015
    3. '               ' → logprob: -3.343874454498291
    4. '```' → logprob: -4.343874454498291
    5. '                   ' → logprob: -5.468874454498291
    6. '
' → logprob: -5.593874454498291
    7. '-' → logprob: -5.843874454498291
    8. '           ' → logprob: -6.343874454498291
    9. '       ' → logprob: -6.343874454498291
    10. '],' → logprob: -6.718874454498291

Token 2174: '               ' (ID: 506)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.03915359079837799
    2. '               ' → logprob: -3.664153575897217
    3. ' mid' → logprob: -4.914153575897217
    4. '           ' → logprob: -6.164153575897217
    5. 'max' → logprob: -6.664153575897217
    6. 'min' → logprob: -7.539153575897217
    7. '       ' → logprob: -7.664153575897217
    8. '```' → logprob: -8.039154052734375
    9. '+' → logprob: -8.289154052734375
    10. '                   ' → logprob: -8.789154052734375

Token 2175: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.0019799028523266315
    2. 'max' → logprob: -6.376979827880859
    3. '   ' → logprob: -9.00197982788086
    4. ' mid' → logprob: -9.12697982788086
    5. 'end' → logprob: -11.37697982788086
    6. 'high' → logprob: -11.75197982788086
    7. 'med' → logprob: -12.00197982788086
    8. '       ' → logprob: -12.50197982788086
    9. 'last' → logprob: -13.25197982788086
    10. 'mx' → logprob: -13.37697982788086

Token 2176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3873634338378906
    2. '=' → logprob: -1.1373634338378906
    3. '=b' → logprob: -8.26236343383789
    4. 'b' → logprob: -8.38736343383789
    5. '   ' → logprob: -13.13736343383789
    6. ' ' → logprob: -14.13736343383789
    7. 'r' → logprob: -14.26236343383789
    8. '           ' → logprob: -14.51236343383789
    9. '       ' → logprob: -14.88736343383789
    10. ')' → logprob: -15.38736343383789

Token 2177: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007101670489646494
    2. ' b' → logprob: -7.2507100105285645
    3. '```' → logprob: -16.250709533691406
    4. '           ' → logprob: -16.875709533691406
    5. '	b' → logprob: -17.625709533691406
    6. ' ' → logprob: -17.875709533691406
    7. '               ' → logprob: -18.000709533691406
    8. '   ' → logprob: -18.375709533691406
    9. '[b' → logprob: -18.750709533691406
    10. '          ' → logprob: -18.750709533691406

Token 2178: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.0001487140398239717
    2. 'b' → logprob: -8.87514877319336
    3. 'rows' → logprob: -12.50014877319336
    4. 'r' → logprob: -13.87514877319336
    5. 'Rows' → logprob: -14.00014877319336
    6. 'ROWS' → logprob: -14.37514877319336
    7. '_cols' → logprob: -14.37514877319336
    8. '_ROWS' → logprob: -14.50014877319336
    9. '[b' → logprob: -14.75014877319336
    10. '_b' → logprob: -15.25014877319336

Token 2179: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.027169739827513695
    2. '-' → logprob: -3.652169704437256
    3. '[' → logprob: -7.902169704437256
    4. '[len' → logprob: -7.902169704437256
    5. 'len' → logprob: -9.527170181274414
    6. '   ' → logprob: -11.152170181274414
    7. '```' → logprob: -11.152170181274414
    8. '
' → logprob: -11.527170181274414
    9. '-l' → logprob: -12.777170181274414
    10. ' -' → logprob: -12.777170181274414

Token 2180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.75
    3. ']' → logprob: -17.0
    4. '
' → logprob: -17.5
    5. '-' → logprob: -17.625
    6. ' ' → logprob: -18.375
    7. '```' → logprob: -18.5
    8. ']
' → logprob: -20.0
    9. '``' → logprob: -20.25
    10. '3' → logprob: -20.375

Token 2181: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.404545396566391
    2. ']' → logprob: -1.1545454263687134
    3. '               ' → logprob: -4.404545307159424
    4. '           ' → logprob: -6.529545307159424
    5. '```' → logprob: -6.779545307159424
    6. '+' → logprob: -7.029545307159424
    7. ']:
' → logprob: -7.654545307159424
    8. ']+' → logprob: -7.904545307159424
    9. ' +' → logprob: -8.529545783996582
    10. '                   ' → logprob: -8.654545783996582

Token 2182: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14178018271923065
    2. 'for' → logprob: -2.391780138015747
    3. '```' → logprob: -3.391780138015747
    4. ' for' → logprob: -5.266780376434326
    5. '                   ' → logprob: -6.891780376434326
    6. '           ' → logprob: -7.266780376434326
    7. '``' → logprob: -9.266779899597168
    8. '   ' → logprob: -10.391779899597168
    9. '       ' → logprob: -11.266779899597168
    10. '+' → logprob: -11.391779899597168

Token 2183: ' num' (ID: 2269)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2341436892747879
    2. '               ' → logprob: -1.6091437339782715
    3. ' for' → logprob: -4.8591437339782715
    4. '           ' → logprob: -7.9841437339782715
    5. '                   ' → logprob: -8.359143257141113
    6. '```' → logprob: -8.609143257141113
    7. 'num' (adapté à ' num') → logprob: -9.984143257141113
    8. 'cost' → logprob: -10.234143257141113
    9. '   ' → logprob: -10.609143257141113
    10. 'from' → logprob: -10.609143257141113

Token 2184: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.03512599691748619
    2. '_tokens' → logprob: -3.535125970840454
    3. 'books' → logprob: -5.535126209259033
    4. '```' → logprob: -7.785126209259033
    5. 'tokens' → logprob: -8.410125732421875
    6. '_rows' → logprob: -8.660125732421875
    7. 'Books' → logprob: -9.285125732421875
    8. '           ' → logprob: -9.660125732421875
    9. '_' → logprob: -9.910125732421875
    10. '=' → logprob: -9.910125732421875

Token 2185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4289684295654297
    2. ' =' → logprob: -1.0539684295654297
    3. '=len' → logprob: -8.92896842956543
    4. '=num' → logprob: -9.80396842956543
    5. '```' → logprob: -10.55396842956543
    6. ')' → logprob: -11.30396842956543
    7. '=c' → logprob: -11.42896842956543
    8. '           ' → logprob: -12.30396842956543
    9. '   ' → logprob: -12.80396842956543
    10. '+=' → logprob: -12.92896842956543

Token 2186: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07926604896783829
    2. ' len' → logprob: -2.57926607131958
    3. 'rows' → logprob: -8.329265594482422
    4. ' rows' → logprob: -9.579265594482422
    5. 'books' → logprob: -11.204265594482422
    6. '(len' → logprob: -11.454265594482422
    7. '           ' → logprob: -11.579265594482422
    8. 'b' → logprob: -11.704265594482422
    9. '0' → logprob: -12.329265594482422
    10. '4' → logprob: -12.579265594482422

Token 2187: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.034255500882864
    2. '(b' → logprob: -4.034255504608154
    3. 'rows' → logprob: -4.909255504608154
    4. 'books' → logprob: -5.409255504608154
    5. '(rows' → logprob: -6.034255504608154
    6. ' b' → logprob: -7.659255504608154
    7. '[' → logprob: -8.159255027770996
    8. '[b' → logprob: -8.659255027770996
    9. '(' → logprob: -8.784255027770996
    10. '(
' → logprob: -9.034255027770996

Token 2188: '_rows' (ID: 26013)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.29122620820999146
    2. '_b' → logprob: -2.5412261486053467
    3. '(b' → logprob: -2.7912261486053467
    4. '_books' → logprob: -3.1662261486053467
    5. '_rows' → logprob: -3.4162261486053467
    6. 'rows' → logprob: -3.6662261486053467
    7. '[b' → logprob: -5.166226387023926
    8. ' b' → logprob: -6.666226387023926
    9. 'books' → logprob: -6.666226387023926
    10. '(rows' → logprob: -7.041226387023926

Token 2189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6634727716445923
    2. ')
' → logprob: -0.9134727716445923
    3. '               ' → logprob: -2.6634726524353027
    4. '           ' → logprob: -5.288472652435303
    5. '):
' → logprob: -5.788472652435303
    6. '
' → logprob: -5.913472652435303
    7. '+' → logprob: -6.788472652435303
    8. '                   ' → logprob: -7.663472652435303
    9. ' +' → logprob: -7.788472652435303
    10. '       ' → logprob: -8.288473129272461

Token 2190: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023397235199809074
    2. '           ' → logprob: -4.023397445678711
    3. 'for' → logprob: -5.898397445678711
    4. '                   ' → logprob: -6.648397445678711
    5. '```' → logprob: -7.398397445678711
    6. ' for' → logprob: -7.773397445678711
    7. '       ' → logprob: -9.398397445678711
    8. '   ' → logprob: -10.023397445678711
    9. '                       ' → logprob: -11.273397445678711
    10. '              ' → logprob: -13.023397445678711

Token 2191: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3746229410171509
    2. '           ' → logprob: -1.8746229410171509
    3. 'for' (adapté à ' for') → logprob: -1.8746229410171509
    4. ' for' → logprob: -5.249622821807861
    5. '                   ' → logprob: -7.999622821807861
    6. '```' → logprob: -11.24962329864502
    7. '       ' → logprob: -11.37462329864502
    8. '   ' → logprob: -12.12462329864502
    9. '                       ' → logprob: -13.49962329864502
    10. '
' → logprob: -13.62462329864502

Token 2192: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014354946091771126
    2. ' r' → logprob: -4.264355182647705
    3. 'prev' → logprob: -8.764354705810547
    4. ' prev' → logprob: -10.889354705810547
    5. 'dp' → logprob: -12.014354705810547
    6. 'from' → logprob: -12.639354705810547
    7. '   ' → logprob: -13.139354705810547
    8. '```' → logprob: -14.014354705810547
    9. ' dp' → logprob: -14.639354705810547
    10. 'p' → logprob: -14.764354705810547

Token 2193: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06055449694395065
    2. 'in' → logprob: -2.9355545043945312
    3. '1' → logprob: -5.185554504394531
    4. '[' → logprob: -10.935554504394531
    5. '_in' → logprob: -11.435554504394531
    6. '0' → logprob: -11.685554504394531
    7. '2' → logprob: -12.685554504394531
    8. ' ' → logprob: -12.685554504394531
    9. '```' → logprob: -12.685554504394531
    10. '	in' → logprob: -12.935554504394531

Token 2194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006739169359207153
    2. 'in' → logprob: -5.006739139556885
    3. '```' → logprob: -11.756739616394043
    4. '	in' → logprob: -12.131739616394043
    5. '_in' → logprob: -13.631739616394043
    6. ' ' → logprob: -13.631739616394043
    7. 'r' → logprob: -13.631739616394043
    8. 'In' → logprob: -13.881739616394043
    9. '   ' → logprob: -14.006739616394043
    10. '0' → logprob: -14.256739616394043

Token 2195: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023166877508629113
    2. ' range' → logprob: -8.375231742858887
    3. '0' → logprob: -14.000231742858887
    4. '   ' → logprob: -16.37523078918457
    5. '
' → logprob: -17.00023078918457
    6. '[' → logprob: -17.25023078918457
    7. '(range' → logprob: -17.37523078918457
    8. ' ' → logprob: -19.00023078918457
    9. '```' → logprob: -19.00023078918457
    10. 'r' → logprob: -19.50023078918457

Token 2196: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0005606581107713282
    2. '(' → logprob: -7.500560760498047
    3. ' ' → logprob: -12.375560760498047
    4. '               ' → logprob: -13.625560760498047
    5. '   ' → logprob: -14.125560760498047
    6. '```' → logprob: -14.375560760498047
    7. '                   ' → logprob: -14.750560760498047
    8. '           ' → logprob: -15.750560760498047
    9. ' (' → logprob: -15.875560760498047
    10. ')' → logprob: -17.000560760498047

Token 2197: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ')' → logprob: -17.0
    3. '```' → logprob: -17.75
    4. '0' → logprob: -18.0
    5. '   ' → logprob: -18.375
    6. '
' → logprob: -19.375
    7. '' → logprob: -19.5
    8. ' ' → logprob: -19.625
    9. '           ' → logprob: -19.875
    10. '               ' → logprob: -20.125

Token 2198: '):' (ID: 3127)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6194797158241272
    2. '):
' → logprob: -0.8694797158241272
    3. ':' → logprob: -4.244479656219482
    4. '           ' → logprob: -4.619479656219482
    5. '                   ' → logprob: -4.744479656219482
    6. '               ' → logprob: -4.994479656219482
    7. '                       ' → logprob: -7.244479656219482
    8. '       ' → logprob: -7.619479656219482
    9. '):' → logprob: -7.744479656219482
    10. '```' → logprob: -7.744479656219482

Token 2199: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02849467284977436
    2. ' for' → logprob: -3.7784945964813232
    3. '		           ' → logprob: -6.778494834899902
    4. '                       ' → logprob: -6.903494834899902
    5. '               ' → logprob: -7.278494834899902
    6. '   ' → logprob: -7.528494834899902
    7. '				' → logprob: -8.153494834899902
    8. '           ' → logprob: -8.278494834899902
    9. 'for' → logprob: -8.278494834899902
    10. '	               ' → logprob: -8.528494834899902

Token 2200: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5734696984291077
    2. '                   ' → logprob: -1.698469638824463
    3. ' for' → logprob: -2.198469638824463
    4. '   ' → logprob: -2.823469638824463
    5. '               ' → logprob: -3.073469638824463
    6. 'if' → logprob: -4.323469638824463
    7. '                       ' → logprob: -4.448469638824463
    8. ' if' → logprob: -4.948469638824463
    9. '           ' → logprob: -5.698469638824463
    10. '```' → logprob: -7.198469638824463

Token 2201: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.254377543926239
    2. '4' → logprob: -2.004377603530884
    3. ' for' → logprob: -2.629377603530884
    4. 'r' → logprob: -4.504377365112305
    5. 'range' → logprob: -5.754377365112305
    6. '                   ' → logprob: -7.254377365112305
    7. ' ' → logprob: -7.379377365112305
    8. ' r' → logprob: -7.504377365112305
    9. ' range' → logprob: -7.754377365112305
    10. '   ' → logprob: -7.754377365112305

Token 2202: ' row' (ID: 5225)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8511669039726257
    2. 'for' → logprob: -1.2261669635772705
    3. ' in' → logprob: -1.8511669635772705
    4. '                   ' → logprob: -3.6011669635772705
    5. 'r' → logprob: -3.6011669635772705
    6. 'in' → logprob: -3.8511669635772705
    7. '               ' → logprob: -4.226166725158691
    8. '           ' → logprob: -4.726166725158691
    9. '):
' → logprob: -5.476166725158691
    10. ':' → logprob: -5.976166725158691

Token 2203: ' at' (ID: 540)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5864747762680054
    2. ' for' → logprob: -1.0864747762680054
    3. 'for' → logprob: -2.586474895477295
    4. ':
' → logprob: -4.586474895477295
    5. '                       ' → logprob: -4.961474895477295
    6. '               ' → logprob: -5.586474895477295
    7. ':' → logprob: -5.711474895477295
    8. '```' → logprob: -5.961474895477295
    9. '           ' → logprob: -6.961474895477295
    10. '   ' → logprob: -7.211474895477295

Token 2204: ' col' (ID: 996)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0022601638920605183
    2. 'col' → logprob: -6.752260208129883
    3. 'current' → logprob: -8.002260208129883
    4. '4' → logprob: -8.377260208129883
    5. '```' → logprob: -9.252260208129883
    6. ' c' → logprob: -9.377260208129883
    7. 'column' → logprob: -9.377260208129883
    8. '           ' → logprob: -9.627260208129883
    9. ')' → logprob: -10.377260208129883
    10. '                   ' → logprob: -10.502260208129883

Token 2205: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05488701909780502
    2. '```' → logprob: -3.679887056350708
    3. '+' → logprob: -4.429886817932129
    4. '           ' → logprob: -5.554886817932129
    5. '=' → logprob: -6.054886817932129
    6. 'r' → logprob: -6.304886817932129
    7. '1' → logprob: -6.304886817932129
    8. ')' → logprob: -6.554886817932129
    9. '):
' → logprob: -6.929886817932129
    10. ':' → logprob: -7.679886817932129

Token 2206: ' intersection' (ID: 42002)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7850678563117981
    2. '                   ' → logprob: -1.5350677967071533
    3. 'for' → logprob: -2.2850677967071533
    4. '           ' → logprob: -2.4100677967071533
    5. ':' → logprob: -3.0350677967071533
    6. '               ' → logprob: -3.9100677967071533
    7. '```' → logprob: -4.160068035125732
    8. '<|end|>' → logprob: -4.160068035125732
    9. ':
' → logprob: -4.535068035125732
    10. '                       ' → logprob: -4.535068035125732

Token 2207: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.691150963306427
    2. ' for' → logprob: -0.816150963306427
    3. '               ' → logprob: -3.8161509037017822
    4. '           ' → logprob: -4.316151142120361
    5. '   ' → logprob: -4.566151142120361
    6. 'for' → logprob: -5.816151142120361
    7. '                       ' → logprob: -6.191151142120361
    8. '       ' → logprob: -6.316151142120361
    9. '<|end|>' → logprob: -6.441151142120361
    10. '<|end|>' → logprob: -7.816151142120361

Token 2208: '                   ' (ID: 699)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0996862649917603
    2. '                   ' → logprob: -1.3496862649917603
    3. 'for' → logprob: -1.4746862649917603
    4. '           ' → logprob: -2.3496861457824707
    5. '               ' → logprob: -3.2246861457824707
    6. '```' → logprob: -3.5996861457824707
    7. '       ' → logprob: -4.474686145782471
    8. '   ' → logprob: -5.724686145782471
    9. '                       ' → logprob: -6.724686145782471
    10. '	for' → logprob: -8.849686622619629

Token 2209: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5584477186203003
    2. ' for' → logprob: -1.0584477186203003
    3. '                   ' → logprob: -2.68344783782959
    4. '                       ' → logprob: -4.43344783782959
    5. '               ' → logprob: -8.43344783782959
    6. '   ' → logprob: -9.30844783782959
    7. '           ' → logprob: -9.30844783782959
    8. '```' → logprob: -9.30844783782959
    9. 'if' (adapté à ' if') → logprob: -9.68344783782959
    10. '       ' → logprob: -10.18344783782959

Token 2210: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003582263889256865
    2. ' dp' → logprob: -8.000358581542969
    3. '                   ' → logprob: -10.750358581542969
    4. '(dp' → logprob: -14.750358581542969
    5. '               ' → logprob: -15.250358581542969
    6. '           ' → logprob: -15.750358581542969
    7. '                       ' → logprob: -15.875358581542969
    8. '                           ' → logprob: -16.25035858154297
    9. '	dp' → logprob: -16.25035858154297
    10. '   ' → logprob: -17.37535858154297

Token 2211: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00029029499273747206
    2. '                   ' → logprob: -9.125289916992188
    3. 'r' → logprob: -9.500289916992188
    4. '```' → logprob: -10.000289916992188
    5. '[' → logprob: -10.375289916992188
    6. '[
' → logprob: -11.875289916992188
    7. '1' → logprob: -12.375289916992188
    8. '               ' → logprob: -12.625289916992188
    9. '   ' → logprob: -12.875289916992188
    10. ']' → logprob: -13.500289916992188

Token 2212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23523923754692078
    2. '[r' → logprob: -1.6102392673492432
    3. 'r' → logprob: -5.360239028930664
    4. ']' → logprob: -5.485239028930664
    5. '][' → logprob: -7.485239028930664
    6. '                   ' → logprob: -9.110239028930664
    7. '```' → logprob: -9.110239028930664
    8. ']==' → logprob: -10.110239028930664
    9. '[' → logprob: -10.610239028930664
    10. '[
' → logprob: -11.110239028930664

Token 2213: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3178522288799286
    2. '[r' → logprob: -2.192852258682251
    3. ' ==' → logprob: -2.567852258682251
    4. '==' → logprob: -3.067852258682251
    5. ']==' → logprob: -3.317852258682251
    6. '```' → logprob: -7.817852020263672
    7. '[' → logprob: -8.567852020263672
    8. '                   ' → logprob: -9.067852020263672
    9. ' !=' → logprob: -9.442852020263672
    10. '][' → logprob: -9.442852020263672

Token 2214: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.44018808007240295
    2. ' ==' → logprob: -1.1901880502700806
    3. '[' → logprob: -3.31518816947937
    4. ' !=' → logprob: -4.940187931060791
    5. '!=' → logprob: -5.065187931060791
    6. '```' → logprob: -7.190187931060791
    7. ']==' → logprob: -8.19018840789795
    8. '==
' → logprob: -8.44018840789795
    9. '[
' → logprob: -8.69018840789795
    10. '[i' → logprob: -9.44018840789795

Token 2215: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -4.513339445111342e-05
    2. ' INF' → logprob: -10.625044822692871
    3. 'IN' → logprob: -11.250044822692871
    4. '_INF' → logprob: -12.750044822692871
    5. '0' → logprob: -13.500044822692871
    6. '
' → logprob: -14.000044822692871
    7. '10' → logprob: -14.250044822692871
    8. 'inf' → logprob: -15.000044822692871
    9. '[' → logprob: -15.125044822692871
    10. '1' → logprob: -15.250044822692871

Token 2216: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.039004094898700714
    2. ':
' → logprob: -3.53900408744812
    3. ':' → logprob: -5.539004325866699
    4. '```' → logprob: -6.539004325866699
    5. '                   ' → logprob: -6.914004325866699
    6. '                           ' → logprob: -7.164004325866699
    7. '                               ' → logprob: -7.414004325866699
    8. ' :' → logprob: -7.914004325866699
    9. ' :
' → logprob: -8.2890043258667
    10. '):
' → logprob: -8.5390043258667

Token 2217: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0008090290939435363
    2. '```' → logprob: -7.500809192657471
    3. '	                   ' → logprob: -9.625808715820312
    4. '                           ' → logprob: -9.750808715820312
    5. '                               ' → logprob: -10.625808715820312
    6. '                   ' → logprob: -10.625808715820312
    7. '					' → logprob: -10.750808715820312
    8. '			           ' → logprob: -12.000808715820312
    9. '                        ' → logprob: -12.000808715820312
    10. '                        
' → logprob: -12.125808715820312

Token 2218: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3069148659706116
    2. 'continue' (adapté à ' continue') → logprob: -1.6819148063659668
    3. '                       ' → logprob: -2.931914806365967
    4. '                               ' → logprob: -4.306914806365967
    5. '                           ' → logprob: -5.056914806365967
    6. '```' → logprob: -6.056914806365967
    7. '                   ' → logprob: -7.181914806365967
    8. ' for' → logprob: -8.056915283203125
    9. '	continue' → logprob: -8.056915283203125
    10. '               ' → logprob: -8.556915283203125

Token 2219: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003884750185534358
    2. '                       ' → logprob: -5.753884792327881
    3. '				' → logprob: -8.878884315490723
    4. '```' → logprob: -8.878884315490723
    5. ' for' → logprob: -9.128884315490723
    6. '	               ' → logprob: -9.753884315490723
    7. '		           ' → logprob: -9.878884315490723
    8. '               ' → logprob: -10.003884315490723
    9. '	                   ' → logprob: -10.378884315490723
    10. '			       ' → logprob: -10.753884315490723

Token 2220: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04227679222822189
    2. '                       ' → logprob: -3.6672768592834473
    3. '```' → logprob: -5.042276859283447
    4. 'for' → logprob: -6.292276859283447
    5. '				' → logprob: -6.542276859283447
    6. ' for' → logprob: -6.542276859283447
    7. '               ' → logprob: -7.167276859283447
    8. '	               ' → logprob: -7.292276859283447
    9. '	                   ' → logprob: -7.292276859283447
    10. '		           ' → logprob: -7.667276859283447

Token 2221: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07259485870599747
    2. 'for' (adapté à ' for') → logprob: -2.9475948810577393
    3. ' for' → logprob: -4.32259464263916
    4. '                       ' → logprob: -5.69759464263916
    5. '               ' → logprob: -7.82259464263916
    6. '```' → logprob: -7.94759464263916
    7. 'r' → logprob: -9.69759464263916
    8. '           ' → logprob: -10.19759464263916
    9. '   ' → logprob: -10.32259464263916
    10. '       ' → logprob: -11.69759464263916

Token 2222: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005236837547272444
    2. ' r' → logprob: -5.255236625671387
    3. '```' → logprob: -13.255236625671387
    4. '                   ' → logprob: -14.505236625671387
    5. '   ' → logprob: -14.880236625671387
    6. '`' → logprob: -15.880236625671387
    7. '	r' → logprob: -16.630237579345703
    8. '                           ' → logprob: -17.005237579345703
    9. '                       ' → logprob: -17.130237579345703
    10. '               ' → logprob: -17.255237579345703

Token 2223: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.027911502867937088
    2. ' in' → logprob: -4.15291166305542
    3. 'in' → logprob: -4.52791166305542
    4. '1' → logprob: -7.02791166305542
    5. '```' → logprob: -9.527911186218262
    6. ')' → logprob: -11.402911186218262
    7. '0' → logprob: -11.777911186218262
    8. ' ' → logprob: -11.777911186218262
    9. '3' → logprob: -12.652911186218262
    10. '``' → logprob: -13.277911186218262

Token 2224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009770612232387066
    2. 'in' → logprob: -4.634770393371582
    3. '	in' → logprob: -12.509770393371582
    4. '<|end|>' → logprob: -12.634770393371582
    5. '[' → logprob: -13.009770393371582
    6. ' ' → logprob: -13.884770393371582
    7. '<|end|>' → logprob: -14.134770393371582
    8. '_in' → logprob: -14.509770393371582
    9. '```' → logprob: -14.509770393371582
    10. '[in' → logprob: -14.759770393371582

Token 2225: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052373106591403484
    2. ' range' → logprob: -5.255237102508545
    3. '4' → logprob: -12.755237579345703
    4. '(range' → logprob: -14.380237579345703
    5. '   ' → logprob: -17.005237579345703
    6. '[' → logprob: -17.755237579345703
    7. '	range' → logprob: -18.130237579345703
    8. ' ' → logprob: -18.880237579345703
    9. '(' → logprob: -19.130237579345703
    10. '
' → logprob: -19.130237579345703

Token 2226: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.023403992876410484
    2. '(' → logprob: -3.7734038829803467
    3. 'range' → logprob: -8.773404121398926
    4. ' range' → logprob: -13.023404121398926
    5. '   ' → logprob: -14.898404121398926
    6. '```' → logprob: -15.148404121398926
    7. '(range' → logprob: -15.523404121398926
    8. ' ' → logprob: -15.898404121398926
    9. '=' → logprob: -16.02340316772461
    10. '0' → logprob: -16.64840316772461

Token 2227: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -8.180258191714529e-06
    2. 'range' → logprob: -11.750008583068848
    3. '(' → logprob: -15.750008583068848
    4. ' range' → logprob: -17.00000762939453
    5. ' ' → logprob: -17.75000762939453
    6. '   ' → logprob: -17.75000762939453
    7. '0' → logprob: -17.75000762939453
    8. 'r' → logprob: -18.12500762939453
    9. '```' → logprob: -18.62500762939453
    10. 'for' → logprob: -18.87500762939453

Token 2228: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04365967586636543
    2. '                       ' → logprob: -3.4186596870422363
    3. '                   ' → logprob: -5.418659687042236
    4. ':
' → logprob: -5.918659687042236
    5. '):' → logprob: -6.293659687042236
    6. ']:
' → logprob: -8.543659210205078
    7. '                               ' → logprob: -8.918659210205078
    8. '```' → logprob: -8.918659210205078
    9. ':' → logprob: -9.168659210205078
    10. '               ' → logprob: -9.668659210205078

Token 2229: ' ' (ID: 220)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006328437011688948
    2. '                               ' → logprob: -6.006328582763672
    3. '                           ' → logprob: -6.381328582763672
    4. '```' → logprob: -7.756328582763672
    5. '                   ' → logprob: -8.006328582763672
    6. ' if' → logprob: -8.256328582763672
    7. '                        
' → logprob: -8.631328582763672
    8. '                        ' → logprob: -8.756328582763672
    9. 'if' → logprob: -9.256328582763672
    10. '
' → logprob: -9.506328582763672

Token 2230: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.19986863434314728
    2. 'if' → logprob: -1.9498686790466309
    3. ' if' → logprob: -4.449868679046631
    4. '                               ' → logprob: -4.574868679046631
    5. '```' → logprob: -5.824868679046631
    6. '                           ' → logprob: -6.199868679046631
    7. 'next' → logprob: -6.324868679046631
    8. '                   ' → logprob: -6.449868679046631
    9. '[' → logprob: -6.824868679046631
    10. '#' → logprob: -6.949868679046631

Token 2231: ' end' (ID: 1268)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2448301464319229
    2. ' if' → logprob: -2.2448301315307617
    3. '                       ' → logprob: -2.6198301315307617
    4. '#' → logprob: -3.8698301315307617
    5. 'next' → logprob: -5.619830131530762
    6. '                   ' → logprob: -5.869830131530762
    7. '                           ' → logprob: -5.994830131530762
    8. '                               ' → logprob: -6.244830131530762
    9. '   ' → logprob: -6.244830131530762
    10. ' next' → logprob: -6.744830131530762

Token 2232: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6841939687728882
    2. ' at' → logprob: -1.3091939687728882
    3. ' row' → logprob: -2.4341940879821777
    4. 'at' → logprob: -3.1841940879821777
    5. '(row' → logprob: -3.6841940879821777
    6. '```' → logprob: -4.684194087982178
    7. 'position' → logprob: -4.809194087982178
    8. '                   ' → logprob: -5.059194087982178
    9. '           ' → logprob: -5.184194087982178
    10. ')' → logprob: -5.184194087982178

Token 2233: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.6614722609519958
    2. 'at' → logprob: -1.6614723205566406
    3. '```' → logprob: -1.9114723205566406
    4. ')' → logprob: -3.4114723205566406
    5. ':' → logprob: -3.9114723205566406
    6. '):
' → logprob: -4.036472320556641
    7. '                   ' → logprob: -4.161472320556641
    8. ':
' → logprob: -4.786472320556641
    9. '                       ' → logprob: -4.911472320556641
    10. '):' → logprob: -5.161472320556641

Token 2234: ' col' (ID: 996)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0050420984625816345
    2. ' c' → logprob: -5.63004207611084
    3. 'col' → logprob: -6.75504207611084
    4. '4' → logprob: -10.00504207611084
    5. '(c' → logprob: -10.50504207611084
    6. ' col' → logprob: -10.50504207611084
    7. '```' → logprob: -10.63004207611084
    8. '                   ' → logprob: -10.75504207611084
    9. '   ' → logprob: -10.88004207611084
    10. 'r' → logprob: -11.00504207611084

Token 2235: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008808538550511003
    2. ' c' → logprob: -7.625880718231201
    3. '```' → logprob: -8.00088119506836
    4. '                   ' → logprob: -11.25088119506836
    5. '2' → logprob: -11.37588119506836
    6. '   ' → logprob: -12.37588119506836
    7. '`' → logprob: -12.50088119506836
    8. '{' → logprob: -12.62588119506836
    9. '(c' → logprob: -12.75088119506836
    10. '           ' → logprob: -12.87588119506836

Token 2236: ' intersection' (ID: 42002)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06520885229110718
    2. ' +' → logprob: -2.940208911895752
    3. '```' → logprob: -4.815208911895752
    4. '                   ' → logprob: -8.190208435058594
    5. '   ' → logprob: -8.190208435058594
    6. '           ' → logprob: -8.440208435058594
    7. '+c' → logprob: -8.940208435058594
    8. ':' → logprob: -9.065208435058594
    9. 'c' → logprob: -9.190208435058594
    10. '       ' → logprob: -9.190208435058594

Token 2237: ' (' (ID: 350)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0077748484909534454
    2. ':
' → logprob: -5.757774829864502
    3. ':' → logprob: -6.632774829864502
    4. '```' → logprob: -7.007774829864502
    5. '                           ' → logprob: -7.507774829864502
    6. '):
' → logprob: -7.882774829864502
    7. '                   ' → logprob: -7.882774829864502
    8. '                               ' → logprob: -8.38277530670166
    9. '<|end|>' → logprob: -8.38277530670166
    10. ',' → logprob: -8.88277530670166

Token 2238: 'must' (ID: 46036)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.48667600750923157
    2. '                       ' → logprob: -2.486675977706909
    3. 'r' → logprob: -2.611675977706909
    4. '):' → logprob: -2.986675977706909
    5. '                               ' → logprob: -3.361675977706909
    6. ')' → logprob: -3.486675977706909
    7. ' r' → logprob: -3.486675977706909
    8. '                           ' → logprob: -3.861675977706909
    9. '                   ' → logprob: -4.236676216125488
    10. ' ' → logprob: -4.361676216125488

Token 2239: ' match' (ID: 3981)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0715431347489357
    2. ' ==' → logprob: -2.9465432167053223
    3. 'be' → logprob: -4.446543216705322
    4. ' be' → logprob: -5.946543216705322
    5. ')' → logprob: -7.446543216705322
    6. ')==' → logprob: -7.821543216705322
    7. ']==' → logprob: -7.821543216705322
    8. '```' → logprob: -7.821543216705322
    9. 'continue' → logprob: -8.946542739868164
    10. 'equal' → logprob: -9.071542739868164

Token 2240: ' next' (ID: 2613)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0008423840627074242
    2. ' r' → logprob: -7.375842571258545
    3. '                   ' → logprob: -9.125842094421387
    4. '```' → logprob: -10.000842094421387
    5. '                           ' → logprob: -11.000842094421387
    6. ')' → logprob: -11.875842094421387
    7. '                               ' → logprob: -12.000842094421387
    8. '                       ' → logprob: -12.125842094421387
    9. '               ' → logprob: -12.250842094421387
    10. '   ' → logprob: -12.500842094421387

Token 2241: ' col' (ID: 996)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8814269304275513
    2. 'column' → logprob: -1.3814269304275513
    3. 'col' → logprob: -2.6314268112182617
    4. ')' → logprob: -3.3814268112182617
    5. '_r' → logprob: -3.5064268112182617
    6. '_' → logprob: -3.7564268112182617
    7. 'r' → logprob: -3.7564268112182617
    8. '   ' → logprob: -4.006426811218262
    9. ' column' → logprob: -4.006426811218262
    10. '_col' → logprob: -4.006426811218262

Token 2242: ' start' (ID: 1604)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6168026328086853
    2. '```' → logprob: -2.24180269241333
    3. ')]' → logprob: -2.49180269241333
    4. 'r' → logprob: -2.86680269241333
    5. ']' → logprob: -2.86680269241333
    6. '+' → logprob: -3.36680269241333
    7. ',' → logprob: -3.36680269241333
    8. '):' → logprob: -4.36680269241333
    9. '                   ' → logprob: -4.61680269241333
    10. ']+' → logprob: -4.74180269241333

Token 2243: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6500550508499146
    2. 'r' → logprob: -1.4000550508499146
    3. '```' → logprob: -2.650054931640625
    4. '):' → logprob: -3.525054931640625
    5. '):
' → logprob: -3.900054931640625
    6. '                   ' → logprob: -4.150054931640625
    7. ')]' → logprob: -4.150054931640625
    8. 'position' → logprob: -4.275054931640625
    9. '+' → logprob: -4.400054931640625
    10. 'row' → logprob: -4.650054931640625

Token 2244: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03767406940460205
    2. '                               ' → logprob: -3.9126739501953125
    3. '```' → logprob: -4.5376739501953125
    4. '                           ' → logprob: -5.4126739501953125
    5. '                   ' → logprob: -7.4126739501953125
    6. 'cost' → logprob: -8.412673950195312
    7. '                                   ' → logprob: -8.787673950195312
    8. 'if' → logprob: -9.037673950195312
    9. '   ' → logprob: -9.287673950195312
    10. '``' → logprob: -9.287673950195312

Token 2245: ' #' (ID: 1069)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2374730408191681
    2. 'cost' → logprob: -2.3624730110168457
    3. '                           ' → logprob: -3.4874730110168457
    4. ' abs' → logprob: -3.4874730110168457
    5. 'if' → logprob: -4.237473011016846
    6. ' if' → logprob: -4.487473011016846
    7. '                               ' → logprob: -4.612473011016846
    8. ' cost' → logprob: -4.862473011016846
    9. '   ' → logprob: -5.487473011016846
    10. '```' → logprob: -5.987473011016846

Token 2246: ' two' (ID: 1920)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6549397706985474
    2. 'vertical' → logprob: -1.0299397706985474
    3. 'vert' → logprob: -2.529939651489258
    4. 'up' → logprob: -4.404939651489258
    5. 'v' → logprob: -4.779939651489258
    6. 'for' → logprob: -5.029939651489258
    7. 'if' → logprob: -5.154939651489258
    8. 'dist' → logprob: -5.279939651489258
    9. '           ' → logprob: -6.904939651489258
    10. '               ' → logprob: -7.154939651489258

Token 2247: ' possible' (ID: 4149)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7839670777320862
    2. 'abs' → logprob: -1.0339670181274414
    3. 'r' → logprob: -3.2839670181274414
    4. 'dist' → logprob: -3.4089670181274414
    5. '_cost' → logprob: -3.5339670181274414
    6. ')' → logprob: -3.6589670181274414
    7. '                       ' → logprob: -4.533967018127441
    8. '                               ' → logprob: -5.033967018127441
    9. '```' → logprob: -5.158967018127441
    10. ' =' → logprob: -5.658967018127441

Token 2248: ' vertical' (ID: 17679)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.15134619176387787
    2. 'ways' → logprob: -3.401346206665039
    3. 'vertical' → logprob: -3.401346206665039
    4. 'orders' → logprob: -3.526346206665039
    5. '                       ' → logprob: -4.276346206665039
    6. 'paths' → logprob: -4.776346206665039
    7. '#' → logprob: -5.401346206665039
    8. 'options' → logprob: -5.776346206665039
    9. '_cost' → logprob: -5.901346206665039
    10. '                               ' → logprob: -6.401346206665039

Token 2249: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.7622268199920654
    2. 'dist' → logprob: -1.1372268199920654
    3. 'moves' → logprob: -2.8872268199920654
    4. 'cost' → logprob: -3.0122268199920654
    5. 'paths' → logprob: -3.3872268199920654
    6. '_cost' → logprob: -3.5122268199920654
    7. 'path' → logprob: -4.0122270584106445
    8. '_dist' → logprob: -4.7622270584106445
    9. '                       ' → logprob: -4.7622270584106445
    10. 'mov' → logprob: -6.1372270584106445

Token 2250: ' costs' (ID: 8959)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.10062887519598007
    2. '                       ' → logprob: -2.8506288528442383
    3. '1' → logprob: -3.8506288528442383
    4. '                           ' → logprob: -5.225628852844238
    5. '_cost' → logprob: -5.475628852844238
    6. 'r' → logprob: -6.475628852844238
    7. '                   ' → logprob: -6.725628852844238
    8. '                               ' → logprob: -7.475628852844238
    9. 'abs' → logprob: -7.725628852844238
    10. 'dist' → logprob: -7.850628852844238

Token 2251: '
' (ID: 198)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3629411458969116
    2. '                       ' → logprob: -1.7379411458969116
    3. '                           ' → logprob: -2.362941265106201
    4. ' cost' → logprob: -3.987941265106201
    5. '```' → logprob: -5.112941265106201
    6. '                               ' → logprob: -5.987941265106201
    7. '1' → logprob: -6.112941265106201
    8. '                   ' → logprob: -7.112941265106201
    9. '(cost' → logprob: -7.112941265106201
    10. '
' → logprob: -7.487941265106201

Token 2252: '                       ' (ID: 968)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7805572748184204
    2. '                           ' → logprob: -1.1555572748184204
    3. '                       ' → logprob: -1.7805572748184204
    4. '                               ' → logprob: -3.280557155609131
    5. '```' → logprob: -4.280557155609131
    6. ' cost' → logprob: -5.655557155609131
    7. '``' → logprob: -7.280557155609131
    8. '                                   ' → logprob: -7.780557155609131
    9. '                   ' → logprob: -7.905557155609131
    10. '#' → logprob: -8.030557632446289

Token 2253: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.03995799645781517
    2. 'abs' → logprob: -3.6649580001831055
    3. ' cost' → logprob: -5.2899580001831055
    4. '                       ' → logprob: -5.4149580001831055
    5. '                           ' → logprob: -6.6649580001831055
    6. '                               ' → logprob: -7.2899580001831055
    7. '```' → logprob: -7.6649580001831055
    8. 'c' → logprob: -7.9149580001831055
    9. '
' → logprob: -8.289958000183105
    10. '``' → logprob: -8.914958000183105

Token 2254: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5376593470573425
    2. ' =' → logprob: -1.0376594066619873
    3. '1' → logprob: -2.7876594066619873
    4. '```' → logprob: -10.787659645080566
    5. '                   ' → logprob: -12.037659645080566
    6. '=
' → logprob: -12.287659645080566
    7. '                       ' → logprob: -13.537659645080566
    8. '=min' → logprob: -14.412659645080566
    9. ')' → logprob: -14.537659645080566
    10. '
' → logprob: -14.662659645080566

Token 2255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141783356666565
    2. '=' → logprob: -1.7014178037643433
    3. '                   ' → logprob: -12.701417922973633
    4. '                       ' → logprob: -13.701417922973633
    5. '           ' → logprob: -15.951417922973633
    6. '               ' → logprob: -16.701417922973633
    7. '   ' → logprob: -16.951417922973633
    8. '                    ' → logprob: -17.076417922973633
    9. '                           ' → logprob: -17.076417922973633
    10. ')' → logprob: -17.326417922973633

Token 2256: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.038056403398513794
    2. ' abs' → logprob: -3.2880563735961914
    3. '(abs' → logprob: -11.288056373596191
    4. '   ' → logprob: -13.288056373596191
    5. 'dp' → logprob: -15.163056373596191
    6. '       ' → logprob: -16.163057327270508
    7. '           ' → logprob: -16.163057327270508
    8. ' ' → logprob: -16.288057327270508
    9. '  ' → logprob: -17.163057327270508
    10. '.abs' → logprob: -17.288057327270508

Token 2257: '(r' (ID: 4729)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3138146996498108
    2. '(r' → logprob: -1.313814640045166
    3. 'dp' → logprob: -7.688814640045166
    4. '[r' → logprob: -10.063815116882324
    5. '(dp' → logprob: -10.063815116882324
    6. ' r' → logprob: -12.938815116882324
    7. '```' → logprob: -13.688815116882324
    8. '(' → logprob: -13.938815116882324
    9. '           ' → logprob: -14.188815116882324
    10. '               ' → logprob: -14.313815116882324

Token 2258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004456852038856596
    2. 'r' → logprob: -7.87544584274292
    3. '[r' → logprob: -9.750445365905762
    4. '[' → logprob: -13.000445365905762
    5. '(r' → logprob: -13.375445365905762
    6. '```' → logprob: -13.750445365905762
    7. '2' → logprob: -14.250445365905762
    8. 's' → logprob: -15.000445365905762
    9. '``' → logprob: -15.500445365905762
    10. '   ' → logprob: -15.875445365905762

Token 2259: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2519502341747284
    2. ' -' → logprob: -1.5019502639770508
    3. '-cost' → logprob: -11.00195026397705
    4. '-med' → logprob: -13.00195026397705
    5. '-r' → logprob: -13.75195026397705
    6. '-m' → logprob: -14.00195026397705
    7. ')' → logprob: -17.126949310302734
    8. '-medi' → logprob: -17.126949310302734
    9. '```' → logprob: -17.251949310302734
    10. '           ' → logprob: -17.751949310302734

Token 2260: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.003177952254191041
    2. ' med' → logprob: -5.753178119659424
    3. 'medi' → logprob: -16.378177642822266
    4. '   ' → logprob: -16.628177642822266
    5. 'mediate' → logprob: -17.253177642822266
    6. '       ' → logprob: -18.003177642822266
    7. '           ' → logprob: -18.253177642822266
    8. '```' → logprob: -18.253177642822266
    9. ' мед' → logprob: -18.753177642822266
    10. 'Med' → logprob: -19.128177642822266

Token 2261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019090480054728687
    2. ')+' → logprob: -8.625190734863281
    3. '```' → logprob: -12.500190734863281
    4. '``' → logprob: -12.750190734863281
    5. '[' → logprob: -14.250190734863281
    6. ')
' → logprob: -14.625190734863281
    7. ' )' → logprob: -14.625190734863281
    8. '`)' → logprob: -14.750190734863281
    9. '                       ' → logprob: -15.125190734863281
    10. ')-' → logprob: -15.250190734863281

Token 2262: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2024008333683014
    2. '+' → logprob: -1.702400803565979
    3. '```' → logprob: -7.2024006843566895
    4. '                       ' → logprob: -8.702401161193848
    5. ')' → logprob: -10.202401161193848
    6. ')+' → logprob: -11.202401161193848
    7. '``' → logprob: -11.702401161193848
    8. '                        ' → logprob: -12.327401161193848
    9. '
' → logprob: -12.827401161193848
    10. '                               ' → logprob: -13.827401161193848

Token 2263: ' (' (ID: 350)
  Prédit: '(mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.05492798984050751
    2. ' (' → logprob: -3.0549280643463135
    3. '(m' → logprob: -5.304927825927734
    4. 'abs' → logprob: -7.804927825927734
    5. '(abs' → logprob: -7.804927825927734
    6. 'mid' → logprob: -7.929927825927734
    7. ' mid' → logprob: -9.554927825927734
    8. ' abs' → logprob: -10.179927825927734
    9. '(min' → logprob: -10.679927825927734
    10. '[mid' → logprob: -11.179927825927734

Token 2264: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0059916055761277676
    2. '(mid' → logprob: -5.255991458892822
    3. 'med' → logprob: -7.255991458892822
    4. ' mid' → logprob: -10.38099193572998
    5. '[mid' → logprob: -11.13099193572998
    6. '(m' → logprob: -13.00599193572998
    7. '   ' → logprob: -14.00599193572998
    8. ' (' → logprob: -14.50599193572998
    9. 'min' → logprob: -14.63099193572998
    10. 'midt' → logprob: -14.88099193572998

Token 2265: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048591457307338715
    2. '-' → logprob: -3.048591375350952
    3. ')' → logprob: -12.548591613769531
    4. ' ' → logprob: -15.923591613769531
    5. '```' → logprob: -16.04859161376953
    6. ' ' → logprob: -16.79859161376953
    7. '   ' → logprob: -17.04859161376953
    8. '-r' → logprob: -17.79859161376953
    9. '``' → logprob: -18.04859161376953
    10. 'med' → logprob: -18.17359161376953

Token 2266: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -6.635164754698053e-05
    2. ' med' → logprob: -9.625066757202148
    3. 'medi' → logprob: -16.00006675720215
    4. '_med' → logprob: -16.37506675720215
    5. '   ' → logprob: -17.12506675720215
    6. 'Med' → logprob: -17.87506675720215
    7. 'mediate' → logprob: -18.00006675720215
    8. '0' → logprob: -19.12506675720215
    9. '-med' → logprob: -19.25006675720215
    10. '```' → logprob: -19.25006675720215

Token 2267: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8828707804204896e-05
    2. ')+' → logprob: -10.000048637390137
    3. '```' → logprob: -13.500048637390137
    4. '+' → logprob: -14.250048637390137
    5. ' )' → logprob: -14.625048637390137
    6. '                       ' → logprob: -15.125048637390137
    7. ')
' → logprob: -15.375048637390137
    8. '')' → logprob: -16.875049591064453
    9. '")' → logprob: -17.125049591064453
    10. ' +' → logprob: -17.250049591064453

Token 2268: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2609063684940338
    2. '+' → logprob: -1.6359063386917114
    3. '                       ' → logprob: -4.010906219482422
    4. '```' → logprob: -4.635906219482422
    5. ')' → logprob: -5.135906219482422
    6. '                           ' → logprob: -8.885906219482422
    7. '-' → logprob: -9.010906219482422
    8. '                        ' → logprob: -9.135906219482422
    9. '+
' → logprob: -9.135906219482422
    10. '<|end|>' → logprob: -9.135906219482422

Token 2269: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.001503313542343676
    2. ' abs' → logprob: -6.5015034675598145
    3. '(abs' → logprob: -13.876502990722656
    4. '```' → logprob: -17.376502990722656
    5. '.abs' → logprob: -18.376502990722656
    6. '_abs' → logprob: -20.126502990722656
    7. 'Abs' → logprob: -20.126502990722656
    8. '   ' → logprob: -20.376502990722656
    9. '
' → logprob: -20.751502990722656
    10. '``' → logprob: -21.376502990722656

Token 2270: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.2200749754119897e-06
    2. 'r' → logprob: -13.500001907348633
    3. '(' → logprob: -14.375001907348633
    4. ' (' → logprob: -15.625001907348633
    5. '```' → logprob: -18.500001907348633
    6. '(
' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.375001907348633
    8. 'def' → logprob: -20.125001907348633
    9. '(abs' → logprob: -20.250001907348633
    10. '       ' → logprob: -20.250001907348633

Token 2271: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02642163261771202
    2. 'r' → logprob: -3.651421546936035
    3. '(r' → logprob: -9.901421546936035
    4. '```' → logprob: -10.151421546936035
    5. '[r' → logprob: -11.026421546936035
    6. '1' → logprob: -11.776421546936035
    7. 'user' → logprob: -13.401421546936035
    8. '₂' → logprob: -13.776421546936035
    9. ' r' → logprob: -14.401421546936035
    10. '``' → logprob: -14.776421546936035

Token 2272: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.388051301240921
    2. '-' → logprob: -1.1380512714385986
    3. '-r' → logprob: -6.763051509857178
    4. '[' → logprob: -12.01305103302002
    5. 'r' → logprob: -12.76305103302002
    6. '[r' → logprob: -12.76305103302002
    7. ')' → logprob: -13.01305103302002
    8. '-m' → logprob: -13.13805103302002
    9. '(r' → logprob: -13.13805103302002
    10. '-med' → logprob: -13.38805103302002

Token 2273: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.000561969296541065
    2. ' mid' → logprob: -7.5005621910095215
    3. 'med' → logprob: -12.000561714172363
    4. 'r' → logprob: -13.875561714172363
    5. ' ' → logprob: -14.875561714172363
    6. '(mid' → logprob: -14.875561714172363
    7. '[mid' → logprob: -15.125561714172363
    8. '   ' → logprob: -15.375561714172363
    9. 'm' → logprob: -15.500561714172363
    10. 'min' → logprob: -16.25056266784668

Token 2274: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014629051089286804
    2. ')
' → logprob: -4.764628887176514
    3. '                       ' → logprob: -5.139628887176514
    4. '+' → logprob: -9.889629364013672
    5. ')+' → logprob: -10.014629364013672
    6. '                   ' → logprob: -11.139629364013672
    7. '```' → logprob: -12.014629364013672
    8. ' +' → logprob: -12.014629364013672
    9. '           ' → logprob: -13.014629364013672
    10. '                           ' → logprob: -13.389629364013672

Token 2275: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09903309494256973
    2. '```' → logprob: -2.7240331172943115
    3. 'cost' → logprob: -4.474032878875732
    4. '``' → logprob: -5.849032878875732
    5. '                   ' → logprob: -6.099032878875732
    6. '                        
' → logprob: -6.224032878875732
    7. ')' → logprob: -6.599032878875732
    8. '
' → logprob: -7.099032878875732
    9. '                           ' → logprob: -7.099032878875732
    10. ' cost' → logprob: -7.099032878875732

Token 2276: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.5633747577667236
    2. '                       ' → logprob: -1.0633747577667236
    3. ' cost' → logprob: -2.5633747577667236
    4. '```' → logprob: -5.8133745193481445
    5. '                           ' → logprob: -6.1883745193481445
    6. '                   ' → logprob: -7.4383745193481445
    7. ')' → logprob: -7.4383745193481445
    8. '                        ' → logprob: -7.9383745193481445
    9. '``' → logprob: -8.063374519348145
    10. ',' → logprob: -8.188374519348145

Token 2277: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001692911726422608
    2. '=' → logprob: -7.001692771911621
    3. ' =' → logprob: -7.626692771911621
    4. '1' → logprob: -8.501692771911621
    5. '[' → logprob: -10.251692771911621
    6. ':' → logprob: -11.626692771911621
    7. '```' → logprob: -11.626692771911621
    8. ')' → logprob: -11.876692771911621
    9. '                       ' → logprob: -12.376692771911621
    10. 'r' → logprob: -12.501692771911621

Token 2278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196846812963486
    2. '=' → logprob: -2.8119685649871826
    3. '                       ' → logprob: -14.436968803405762
    4. '                   ' → logprob: -16.061967849731445
    5. ')' → logprob: -16.061967849731445
    6. '```' → logprob: -17.061967849731445
    7. '=min' → logprob: -17.061967849731445
    8. '=int' → logprob: -17.686967849731445
    9. '   ' → logprob: -18.061967849731445
    10. '           ' → logprob: -18.311967849731445

Token 2279: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0005545823951251805
    2. ' abs' → logprob: -7.50055456161499
    3. '(abs' → logprob: -13.625555038452148
    4. '       ' → logprob: -15.250555038452148
    5. '           ' → logprob: -16.50055503845215
    6. '   ' → logprob: -17.50055503845215
    7. '.abs' → logprob: -18.00055503845215
    8. '               ' → logprob: -18.62555503845215
    9. '        ' → logprob: -18.75055503845215
    10. 'min' → logprob: -19.37555503845215

Token 2280: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -4.1080467781284824e-05
    2. 'r' → logprob: -10.125041007995605
    3. ' (' → logprob: -14.000041007995605
    4. '(' → logprob: -16.500041961669922
    5. '[r' → logprob: -19.000041961669922
    6. '(
' → logprob: -19.125041961669922
    7. '   ' → logprob: -19.125041961669922
    8. ' r' → logprob: -19.500041961669922
    9. '```' → logprob: -20.250041961669922
    10. '((' → logprob: -20.500041961669922

Token 2281: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.041425660252571106
    2. '2' → logprob: -3.7914257049560547
    3. '1' → logprob: -4.041425704956055
    4. '(r' → logprob: -7.916425704956055
    5. '[r' → logprob: -9.916425704956055
    6. ' r' → logprob: -11.166425704956055
    7. '```' → logprob: -12.541425704956055
    8. '$r' → logprob: -13.291425704956055
    9. '_r' → logprob: -13.728925704956055
    10. '{' → logprob: -13.853925704956055

Token 2282: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804585337638855
    2. '-' → logprob: -3.288045883178711
    3. '-r' → logprob: -12.538045883178711
    4. ' ' → logprob: -14.413045883178711
    5. '[' → logprob: -16.41304588317871
    6. '-m' → logprob: -17.16304588317871
    7. '   ' → logprob: -17.53804588317871
    8. 'r' → logprob: -17.53804588317871
    9. ' ' → logprob: -17.91304588317871
    10. '-user' → logprob: -18.03804588317871

Token 2283: ' mid' (ID: 6959)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.07354147732257843
    2. 'mid' → logprob: -2.6985414028167725
    3. ' med' → logprob: -5.698541641235352
    4. ' mid' → logprob: -9.073541641235352
    5. 'b' → logprob: -9.698541641235352
    6. 'median' → logprob: -10.948541641235352
    7. 'min' → logprob: -11.448541641235352
    8. ' ' → logprob: -11.448541641235352
    9. 'm' → logprob: -12.073541641235352
    10. '   ' → logprob: -12.323541641235352

Token 2284: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7640910148620605
    2. ' -' → logprob: -1.0140910148620605
    3. '-' → logprob: -1.7640910148620605
    4. 'r' → logprob: -10.264091491699219
    5. '-)' → logprob: -10.639091491699219
    6. '```' → logprob: -10.639091491699219
    7. ')-' → logprob: -11.014091491699219
    8. '-r' → logprob: -11.139091491699219
    9. ')+' → logprob: -11.139091491699219
    10. '[' → logprob: -12.514091491699219

Token 2285: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06772930175065994
    2. '+' → logprob: -2.8177292346954346
    3. ' -' → logprob: -5.317729473114014
    4. '-' → logprob: -7.567729473114014
    5. ')' → logprob: -8.317728996276855
    6. '```' → logprob: -10.442728996276855
    7. '[' → logprob: -10.817728996276855
    8. ' ' → logprob: -11.817728996276855
    9. '+r' → logprob: -11.942728996276855
    10. ')+' → logprob: -12.067728996276855

Token 2286: ' (' (ID: 350)
  Prédit: '(mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.008170319721102715
    2. '(m' → logprob: -5.883170127868652
    3. '(abs' → logprob: -5.883170127868652
    4. ' (' → logprob: -6.008170127868652
    5. 'abs' → logprob: -9.883170127868652
    6. '(min' → logprob: -10.508170127868652
    7. '[mid' → logprob: -11.258170127868652
    8. '(r' → logprob: -11.883170127868652
    9. 'mid' → logprob: -12.758170127868652
    10. '(cost' → logprob: -14.383170127868652

Token 2287: 'mid' (ID: 23430)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.011028140783309937
    2. 'r' → logprob: -5.386028289794922
    3. 'mid' → logprob: -5.386028289794922
    4. 'abs' → logprob: -6.386028289794922
    5. 'min' → logprob: -9.386028289794922
    6. ' med' → logprob: -11.386028289794922
    7. 'b' → logprob: -11.636028289794922
    8. 'median' → logprob: -12.636028289794922
    9. '(r' → logprob: -13.136028289794922
    10. '   ' → logprob: -13.136028289794922

Token 2288: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06999702006578445
    2. '-' → logprob: -2.6949970722198486
    3. '-med' → logprob: -10.56999683380127
    4. '```' → logprob: -10.81999683380127
    5. ' ' → logprob: -12.81999683380127
    6. '-r' → logprob: -12.94499683380127
    7. '-user' → logprob: -13.19499683380127
    8. ')' → logprob: -13.56999683380127
    9. '-m' → logprob: -13.94499683380127
    10. '[' → logprob: -14.06999683380127

Token 2289: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -2.15310683415737e-05
    2. ' med' → logprob: -10.750021934509277
    3. 'medi' → logprob: -17.50002098083496
    4. '_med' → logprob: -17.62502098083496
    5. '```' → logprob: -17.75002098083496
    6. '   ' → logprob: -18.50002098083496
    7. 'medical' → logprob: -19.12502098083496
    8. 'median' → logprob: -19.62502098083496
    9. '-med' → logprob: -19.75002098083496
    10. 'mediate' → logprob: -20.25002098083496

Token 2290: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02065959945321083
    2. ' +' → logprob: -4.020659446716309
    3. '+' → logprob: -6.645659446716309
    4. ')+' → logprob: -6.770659446716309
    5. ' )' → logprob: -10.395659446716309
    6. '```' → logprob: -11.145659446716309
    7. ']' → logprob: -11.645659446716309
    8. '+)' → logprob: -14.145659446716309
    9. '[' → logprob: -14.270659446716309
    10. ']+' → logprob: -14.395659446716309

Token 2291: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014169031754136086
    2. '+' → logprob: -4.264169216156006
    3. '```' → logprob: -12.639168739318848
    4. '                       ' → logprob: -13.264168739318848
    5. '<|end|>' → logprob: -15.889168739318848
    6. ')' → logprob: -16.514169692993164
    7. ' ' → logprob: -16.889169692993164
    8. '                        ' → logprob: -16.889169692993164
    9. '                           ' → logprob: -17.764169692993164
    10. ' +
' → logprob: -17.764169692993164

Token 2292: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.10020699352025986
    2. ' abs' → logprob: -2.3502070903778076
    3. '(abs' → logprob: -15.100207328796387
    4. '```' → logprob: -18.60020637512207
    5. '.abs' → logprob: -19.60020637512207
    6. '_abs' → logprob: -20.35020637512207
    7. '   ' → logprob: -20.60020637512207
    8. '       ' → logprob: -20.85020637512207
    9. '           ' → logprob: -21.22520637512207
    10. 'Abs' → logprob: -21.35020637512207

Token 2293: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -3.128163257315464e-07
    2. 'r' → logprob: -15.875
    3. ' (' → logprob: -16.625
    4. '(
' → logprob: -18.0
    5. '(' → logprob: -18.125
    6. '   ' → logprob: -18.5
    7. '[r' → logprob: -20.125
    8. '```' → logprob: -20.375
    9. '       ' → logprob: -20.875
    10. '           ' → logprob: -21.25

Token 2294: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.015341044403612614
    2. '2' → logprob: -4.265341281890869
    3. '(r' → logprob: -6.765341281890869
    4. '[r' → logprob: -11.390340805053711
    5. '```' → logprob: -12.515340805053711
    6. ' r' → logprob: -12.640340805053711
    7. '{' → logprob: -13.390340805053711
    8. '_r' → logprob: -14.015340805053711
    9. '1' → logprob: -14.390340805053711
    10. '$r' → logprob: -14.640340805053711

Token 2295: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759397745132446
    2. ' -' → logprob: -0.8259397745132446
    3. '[' → logprob: -15.075940132141113
    4. '-med' → logprob: -16.075939178466797
    5. ' ' → logprob: -17.450939178466797
    6. 'med' → logprob: -17.700939178466797
    7. ' med' → logprob: -17.700939178466797
    8. ' ' → logprob: -18.325939178466797
    9. '```' → logprob: -18.825939178466797
    10. '−' → logprob: -19.575939178466797

Token 2296: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.0024758970830589533
    2. ' med' → logprob: -6.002475738525391
    3. ' ' → logprob: -16.12747573852539
    4. '   ' → logprob: -16.87747573852539
    5. 'b' → logprob: -17.50247573852539
    6. ' ' → logprob: -18.00247573852539
    7. '  ' → logprob: -18.00247573852539
    8. '
' → logprob: -18.00247573852539
    9. '0' → logprob: -18.12747573852539
    10. '     ' → logprob: -18.37747573852539

Token 2297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011984802782535553
    2. ')
' → logprob: -5.011984825134277
    3. '                       ' → logprob: -5.261984825134277
    4. '```' → logprob: -10.511984825134277
    5. '<|end|>' → logprob: -12.136984825134277
    6. ']' → logprob: -12.386984825134277
    7. ')+' → logprob: -12.386984825134277
    8. ')**' → logprob: -12.511984825134277
    9. '):
' → logprob: -13.261984825134277
    10. '),' → logprob: -13.386984825134277

Token 2298: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03459940105676651
    2. 'if' → logprob: -4.284599304199219
    3. ' if' → logprob: -4.659599304199219
    4. 'cost' → logprob: -4.784599304199219
    5. '                           ' → logprob: -7.284599304199219
    6. ' cost' → logprob: -7.284599304199219
    7. '                   ' → logprob: -8.534599304199219
    8. '                               ' → logprob: -8.659599304199219
    9. '
' → logprob: -8.784599304199219
    10. '                        
' → logprob: -9.159599304199219

Token 2299: ' vertical' (ID: 17679)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00920486357063055
    2. 'min' → logprob: -5.634204864501953
    3. 'if' → logprob: -5.884204864501953
    4. ' cost' → logprob: -6.884204864501953
    5. '                       ' → logprob: -7.884204864501953
    6. 'cur' → logprob: -8.384204864501953
    7. 'res' → logprob: -8.509204864501953
    8. 'val' → logprob: -8.509204864501953
    9. 'best' → logprob: -8.634204864501953
    10. 'curr' → logprob: -8.884204864501953

Token 2300: ' =' (ID: 314)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.18001219630241394
    2. '_path' → logprob: -1.8050122261047363
    3. '_distance' → logprob: -9.680011749267578
    4. '```' → logprob: -9.805011749267578
    5. '_' → logprob: -9.930011749267578
    6. 'cost' → logprob: -10.430011749267578
    7. '_paths' → logprob: -10.805011749267578
    8. '_move' → logprob: -11.555011749267578
    9. '\' → logprob: -12.180011749267578
    10. '}_' → logprob: -12.305011749267578

Token 2301: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.018150877207517624
    2. ' min' → logprob: -4.018150806427002
    3. '(min' → logprob: -14.64315128326416
    4. 'vertical' → logprob: -15.64315128326416
    5. '	min' → logprob: -16.518150329589844
    6. '0' → logprob: -17.018150329589844
    7. '   ' → logprob: -17.643150329589844
    8. '[min' → logprob: -17.768150329589844
    9. '                           ' → logprob: -17.893150329589844
    10. ' vertical' → logprob: -17.893150329589844

Token 2302: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.01828373782336712
    2. 'cost' → logprob: -4.018283843994141
    3. '(abs' → logprob: -9.64328384399414
    4. '(vertical' → logprob: -10.51828384399414
    5. '(' → logprob: -11.26828384399414
    6. 'vertical' → logprob: -11.26828384399414
    7. '1' → logprob: -12.26828384399414
    8. 'abs' → logprob: -12.51828384399414
    9. ' cost' → logprob: -12.64328384399414
    10. '(
' → logprob: -12.76828384399414

Token 2303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002028251619776711
    2. '[' → logprob: -9.500203132629395
    3. '[r' → logprob: -10.125203132629395
    4. '2' → logprob: -10.625203132629395
    5. '```' → logprob: -11.000203132629395
    6. '(r' → logprob: -11.000203132629395
    7. '                       ' → logprob: -12.125203132629395
    8. '                   ' → logprob: -12.500203132629395
    9. ')' → logprob: -12.750203132629395
    10. '           ' → logprob: -13.125203132629395

Token 2304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017261108150705695
    2. ' ,' → logprob: -6.376726150512695
    3. ',
' → logprob: -11.751726150512695
    4. ',min' → logprob: -13.126726150512695
    5. ',r' → logprob: -13.376726150512695
    6. '```' → logprob: -13.876726150512695
    7. 'vertical' → logprob: -13.876726150512695
    8. '           ' → logprob: -13.876726150512695
    9. ' +' → logprob: -14.001726150512695
    10. ',v' → logprob: -14.001726150512695

Token 2305: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.02340492233633995
    2. ' cost' → logprob: -3.773404836654663
    3. 'vertical' → logprob: -8.898405075073242
    4. ' vertical' → logprob: -11.398405075073242
    5. '(cost' → logprob: -11.398405075073242
    6. '```' → logprob: -16.148405075073242
    7. '
' → logprob: -16.273405075073242
    8. '_cost' → logprob: -16.273405075073242
    9. ' ' → logprob: -17.648405075073242
    10. '0' → logprob: -17.773405075073242

Token 2306: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001589618914294988
    2. 'cost' → logprob: -8.87515926361084
    3. '```' → logprob: -11.25015926361084
    4. '_cost' → logprob: -13.87515926361084
    5. '₂' → logprob: -13.87515926361084
    6. '(cost' → logprob: -14.00015926361084
    7. '``' → logprob: -14.25015926361084
    8. '1' → logprob: -14.25015926361084
    9. '[' → logprob: -14.87515926361084
    10. '{' → logprob: -15.25015926361084

Token 2307: ')
' (ID: 446)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11294061690568924
    2. ')' → logprob: -2.612940549850464
    3. '+' → logprob: -3.487940549850464
    4. '                       ' → logprob: -6.237940788269043
    5. ')+' → logprob: -7.862940788269043
    6. '<|end|>' → logprob: -8.737940788269043
    7. '```' → logprob: -8.737940788269043
    8. ' +
' → logprob: -9.737940788269043
    9. ')
' → logprob: -10.237940788269043
    10. '                           ' → logprob: -10.862940788269043

Token 2308: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.014008945785462856
    2. ' next' → logprob: -5.26400899887085
    3. '
' → logprob: -5.88900899887085
    4. ' +' → logprob: -5.88900899887085
    5. '+' → logprob: -6.76400899887085
    6. '                   ' → logprob: -7.76400899887085
    7. 'next' → logprob: -7.76400899887085
    8. '                           ' → logprob: -8.264008522033691
    9. '               ' → logprob: -8.764008522033691
    10. '```' → logprob: -8.889008522033691

Token 2309: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5784502625465393
    2. 'next' → logprob: -1.5784502029418945
    3. 'cost' → logprob: -2.0784502029418945
    4. 'dp' → logprob: -3.7034502029418945
    5. ' total' → logprob: -3.8284502029418945
    6. '                       ' → logprob: -4.3284502029418945
    7. 'vertical' → logprob: -4.3284502029418945
    8. 'temp' → logprob: -4.3284502029418945
    9. ' next' → logprob: -5.0784502029418945
    10. 'new' → logprob: -5.4534502029418945

Token 2310: ' plus' (ID: 2932)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2775505781173706
    2. 'total' → logprob: -1.5275505781173706
    3. 'cost' → logprob: -4.77755069732666
    4. 'vertical' → logprob: -5.02755069732666
    5. 'dp' → logprob: -5.77755069732666
    6. 'new' → logprob: -5.90255069732666
    7. 'temp' → logprob: -6.27755069732666
    8. 'tmp' → logprob: -7.52755069732666
    9. ' next' → logprob: -7.52755069732666
    10. 'val' → logprob: -8.02755069732666

Token 2311: ' putting' (ID: 16019)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.633098304271698
    2. ' num' → logprob: -0.758098304271698
    3. ' vertical' → logprob: -8.758098602294922
    4. '1' → logprob: -9.008098602294922
    5. '(num' → logprob: -9.883098602294922
    6. ' ' → logprob: -10.258098602294922
    7. 'vertical' → logprob: -10.383098602294922
    8. '   ' → logprob: -10.758098602294922
    9. ' number' → logprob: -10.883098602294922
    10. '                       ' → logprob: -11.258098602294922

Token 2312: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.5954151153564453
    2. ' books' → logprob: -0.8454151153564453
    3. ' vertical' → logprob: -4.470415115356445
    4. 'vertical' → logprob: -5.345415115356445
    5. '_books' → logprob: -6.095415115356445
    6. '```' → logprob: -9.345415115356445
    7. ' ' → logprob: -9.595415115356445
    8. '                       ' → logprob: -9.845415115356445
    9. 'rows' → logprob: -9.845415115356445
    10. '1' → logprob: -9.970415115356445

Token 2313: ' cost' (ID: 3097)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11560880392789841
    2. '+' → logprob: -2.2406086921691895
    3. ' =' → logprob: -6.8656086921691895
    4. '                       ' → logprob: -6.9906086921691895
    5. '=' → logprob: -8.615609169006348
    6. '                   ' → logprob: -9.115609169006348
    7. ' +=' → logprob: -9.240609169006348
    8. '```' → logprob: -9.240609169006348
    9. 'vertical' → logprob: -9.490609169006348
    10. ',' → logprob: -9.990609169006348

Token 2314: ' =' (ID: 314)
  Prédit: ' vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.75174480676651
    2. ' +' → logprob: -1.1267447471618652
    3. 'vertical' → logprob: -2.3767447471618652
    4. '+' → logprob: -3.0017447471618652
    5. '                       ' → logprob: -3.7517447471618652
    6. ' num' → logprob: -3.8767447471618652
    7. ' =' → logprob: -5.001744747161865
    8. 'num' → logprob: -5.001744747161865
    9. ' +=' → logprob: -6.501744747161865
    10. '                   ' → logprob: -8.001745223999023

Token 2315: ' ' (ID: 220)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.018150178715586662
    2. ' num' → logprob: -4.018150329589844
    3. '(num' → logprob: -16.518150329589844
    4. '	num' → logprob: -16.893150329589844
    5. '[num' → logprob: -17.518150329589844
    6. '```' → logprob: -17.518150329589844
    7. '$num' → logprob: -17.643150329589844
    8. '=num' → logprob: -18.643150329589844
    9. '                   ' → logprob: -19.143150329589844
    10. '                               ' → logprob: -19.393150329589844

Token 2316: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.001170460251159966
    2. ' num' → logprob: -6.751170635223389
    3. '(num' → logprob: -16.126171112060547
    4. '[num' → logprob: -16.876171112060547
    5. '$num' → logprob: -17.126171112060547
    6. '1' → logprob: -17.251171112060547
    7. '```' → logprob: -17.251171112060547
    8. '	num' → logprob: -18.001171112060547
    9. '=num' → logprob: -18.376171112060547
    10. '`' → logprob: -19.001171112060547

Token 2317: ' per' (ID: 777)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.479880690574646
    2. ' *' → logprob: -1.229880690574646
    3. '+' → logprob: -3.1048808097839355
    4. '*' → logprob: -4.1048808097839355
    5. '<|end|>' → logprob: -4.3548808097839355
    6. ')' → logprob: -4.4798808097839355
    7. '                       ' → logprob: -7.4798808097839355
    8. 'per' → logprob: -7.9798808097839355
    9. '                               ' → logprob: -8.354880332946777
    10. ' per' → logprob: -8.604880332946777

Token 2318: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -1.0634840726852417
    2. ' book' → logprob: -1.1884840726852417
    3. ' ' → logprob: -2.5634841918945312
    4. '_book' → logprob: -2.5634841918945312
    5. ')' → logprob: -2.6884841918945312
    6. ' books' → logprob: -3.5634841918945312
    7. 'token' → logprob: -3.8134841918945312
    8. '_books' → logprob: -4.188484191894531
    9. ' )' → logprob: -4.313484191894531
    10. 'books' → logprob: -4.438484191894531

Token 2319: ' (' (ID: 350)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.43716031312942505
    2. ' +' → logprob: -1.4371602535247803
    3. 'vertical' → logprob: -3.1871602535247803
    4. '+' → logprob: -3.3121602535247803
    5. ' vertical' → logprob: -3.8121602535247803
    6. ',' → logprob: -5.312160491943359
    7. ' next' → logprob: -5.687160491943359
    8. '
' → logprob: -6.562160491943359
    9. '```' → logprob: -7.062160491943359
    10. '                   ' → logprob: -7.562160491943359

Token 2320: '0' (ID: 15)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.08874215930700302
    2. ' num' → logprob: -2.963742256164551
    3. '*num' → logprob: -3.588742256164551
    4. ')' → logprob: -5.588742256164551
    5. ' *' → logprob: -7.588742256164551
    6. '```' → logprob: -7.838742256164551
    7. '(num' → logprob: -8.08874225616455
    8. '*' → logprob: -8.08874225616455
    9. ' +' → logprob: -9.21374225616455
    10. '+' → logprob: -9.46374225616455

Token 2321: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010045044124126434
    2. '*' → logprob: -5.260045051574707
    3. ' *' → logprob: -5.510045051574707
    4. ')' → logprob: -8.010045051574707
    5. ' .' → logprob: -8.260045051574707
    6. '#' → logprob: -10.135045051574707
    7. '                               ' → logprob: -10.760045051574707
    8. '```' → logprob: -11.385045051574707
    9. 'for' → logprob: -11.885045051574707
    10. '[' → logprob: -11.885045051574707

Token 2322: '5' (ID: 20)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02055496536195278
    2. '5' → logprob: -3.895555019378662
    3. ' .' → logprob: -11.645554542541504
    4. '#' → logprob: -13.770554542541504
    5. '```' → logprob: -14.020554542541504
    6. ' ' → logprob: -14.020554542541504
    7. ')' → logprob: -14.895554542541504
    8. '0' → logprob: -15.520554542541504
    9. '+' → logprob: -15.770554542541504
    10. '                   ' → logprob: -15.895554542541504

Token 2323: ' to' (ID: 316)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1603887379169464
    2. '*' → logprob: -1.910388708114624
    3. ')' → logprob: -8.785388946533203
    4. ')*' → logprob: -12.785388946533203
    5. ' ' → logprob: -12.910388946533203
    6. '<|end|>' → logprob: -13.910388946533203
    7. ' ' → logprob: -14.160388946533203
    8. '**' → logprob: -14.410388946533203
    9. ' **' → logprob: -14.410388946533203
    10. '*object' → logprob: -14.660388946533203

Token 2324: ' middle' (ID: 10006)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.030619345605373383
    2. 'middle' → logprob: -5.280619144439697
    3. 'visit' → logprob: -5.530619144439697
    4. ' go' → logprob: -5.530619144439697
    5. 'reach' → logprob: -5.780619144439697
    6. 'enter' → logprob: -5.905619144439697
    7. 'move' → logprob: -6.030619144439697
    8. 'come' → logprob: -6.030619144439697
    9. 'get' → logprob: -6.155619144439697
    10. 'put' → logprob: -6.405619144439697

Token 2325: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.427453875541687
    2. '+' → logprob: -1.677453875541687
    3. ')' → logprob: -2.6774539947509766
    4. ' and' → logprob: -2.9274539947509766
    5. ',' → logprob: -3.4274539947509766
    6. 'and' → logprob: -6.302453994750977
    7. ' ,' → logprob: -6.677453994750977
    8. ' )' → logprob: -7.302453994750977
    9. '0' → logprob: -8.052453994750977
    10. '(r' → logprob: -8.177453994750977

Token 2326: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004467862192541361
    2. ' ' → logprob: -5.504467964172363
    3. '1' → logprob: -8.004467964172363
    4. '```' → logprob: -11.254467964172363
    5. '+' → logprob: -11.379467964172363
    6. '.' → logprob: -11.629467964172363
    7. '
' → logprob: -12.879467964172363
    8. '#' → logprob: -13.004467964172363
    9. '   ' → logprob: -13.254467964172363
    10. ' +' → logprob: -13.254467964172363

Token 2327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002205828350270167
    2. '1' → logprob: -8.87522029876709
    3. ' ' → logprob: -9.87522029876709
    4. '.' → logprob: -10.87522029876709
    5. ')' → logprob: -13.50022029876709
    6. 'return' → logprob: -13.87522029876709
    7. '   ' → logprob: -13.87522029876709
    8. '```' → logprob: -13.87522029876709
    9. ',' → logprob: -14.00022029876709
    10. '+' → logprob: -14.00022029876709

Token 2328: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.043493278324604034
    2. '*' → logprob: -3.2934932708740234
    3. ' *' → logprob: -5.293493270874023
    4. ')' → logprob: -8.418493270874023
    5. ' .' → logprob: -9.293493270874023
    6. '+' → logprob: -10.418493270874023
    7. ' ' → logprob: -11.293493270874023
    8. ' +' → logprob: -11.418493270874023
    9. '0' → logprob: -11.668493270874023
    10. ',' → logprob: -11.793493270874023

Token 2329: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.6240566083070007e-06
    2. '                   ' → logprob: -15.125001907348633
    3. '.' → logprob: -15.625001907348633
    4. ' ' → logprob: -15.812501907348633
    5. '۵' → logprob: -16.375001907348633
    6. '                       ' → logprob: -16.625001907348633
    7. ')' → logprob: -16.687501907348633
    8. '   ' → logprob: -16.937501907348633
    9. '               ' → logprob: -16.937501907348633
    10. '+' → logprob: -17.062501907348633

Token 2330: ' back' (ID: 1602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6911700367927551
    2. '*' → logprob: -0.9411700367927551
    3. ' per' → logprob: -3.3161699771881104
    4. ' to' → logprob: -3.4411699771881104
    5. 'per' → logprob: -4.1911702156066895
    6. 'to' → logprob: -4.3161702156066895
    7. ' for' → logprob: -5.3161702156066895
    8. ')' → logprob: -5.8161702156066895
    9. 'for' → logprob: -5.8161702156066895
    10. '```' → logprob: -7.9411702156066895

Token 2331: ')
' (ID: 446)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6286553740501404
    2. ')' → logprob: -1.3786554336547852
    3. 'to' → logprob: -2.253655433654785
    4. ' per' → logprob: -2.503655433654785
    5. 'per' → logprob: -4.128655433654785
    6. '                       ' → logprob: -5.878655433654785
    7. ' for' → logprob: -6.128655433654785
    8. '                           ' → logprob: -6.378655433654785
    9. ' +' → logprob: -6.753655433654785
    10. 'for' → logprob: -7.628655433654785

Token 2332: '                       ' (ID: 968)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1894637942314148
    2. '                       ' → logprob: -1.9394638538360596
    3. '+' → logprob: -3.5644638538360596
    4. ',' → logprob: -9.18946361541748
    5. '                           ' → logprob: -9.68946361541748
    6. '```' → logprob: -9.93946361541748
    7. 'vertical' → logprob: -10.06446361541748
    8. '                               ' → logprob: -10.31446361541748
    9. ' vertical' → logprob: -10.43946361541748
    10. '           ' → logprob: -10.56446361541748

Token 2333: ' total' (ID: 3609)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.5811617970466614
    2. ' vertical' → logprob: -2.0811617374420166
    3. 'total' (adapté à ' total') → logprob: -2.2061617374420166
    4. 'cost' → logprob: -2.4561617374420166
    5. 'next' → logprob: -3.0811617374420166
    6. ' total' → logprob: -3.4561617374420166
    7. ' next' → logprob: -3.8311617374420166
    8. '                       ' → logprob: -4.706161975860596
    9. ' cost' → logprob: -4.706161975860596
    10. '   ' → logprob: -7.706161975860596

Token 2334: '_col' (ID: 7255)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7836419343948364
    2. '_cost' → logprob: -0.9086419343948364
    3. '=' → logprob: -3.033641815185547
    4. 'cost' → logprob: -3.658641815185547
    5. '_vertical' → logprob: -3.908641815185547
    6. 'vertical' → logprob: -4.283641815185547
    7. '+' → logprob: -4.783641815185547
    8. '_total' → logprob: -4.908641815185547
    9. ' +' → logprob: -4.908641815185547
    10. '           ' → logprob: -6.408641815185547

Token 2335: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0459895096719265
    2. ' =' → logprob: -4.045989513397217
    3. 'cost' → logprob: -4.920989513397217
    4. '[c' → logprob: -5.045989513397217
    5. '`' → logprob: -6.170989513397217
    6. '```' → logprob: -6.170989513397217
    7. 's' → logprob: -6.170989513397217
    8. '           ' → logprob: -6.545989513397217
    9. '       ' → logprob: -7.420989513397217
    10. '[_' → logprob: -7.545989513397217

Token 2336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23277807235717773
    2. '=' → logprob: -1.6077780723571777
    3. ' +' → logprob: -5.357778072357178
    4. '+' → logprob: -6.857778072357178
    5. ' +=' → logprob: -7.357778072357178
    6. '[c' → logprob: -7.857778072357178
    7. '[r' → logprob: -8.482778549194336
    8. '[' → logprob: -9.482778549194336
    9. ']' → logprob: -9.857778549194336
    10. ')' → logprob: -9.857778549194336

Token 2337: ' vertical' (ID: 17679)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11542559415102005
    2. ' dp' → logprob: -2.2404255867004395
    3. 'vertical' → logprob: -6.2404255867004395
    4. ' vertical' → logprob: -7.4904255867004395
    5. '                       ' → logprob: -10.115426063537598
    6. '   ' → logprob: -11.490426063537598
    7. '                           ' → logprob: -11.615426063537598
    8. '                               ' → logprob: -12.365426063537598
    9. '	dp' → logprob: -12.490426063537598
    10. '                   ' → logprob: -12.615426063537598

Token 2338: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889319956302643
    2. '+' → logprob: -2.5788931846618652
    3. ' ' → logprob: -13.953893661499023
    4. '*' → logprob: -14.453893661499023
    5. ' ' → logprob: -14.828893661499023
    6. '                       ' → logprob: -14.828893661499023
    7. ')' → logprob: -15.453893661499023
    8. '<|end|>' → logprob: -15.828893661499023
    9. ' *' → logprob: -15.953893661499023
    10. ')+' → logprob: -16.203893661499023

Token 2339: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00033558503491804004
    2. ' num' → logprob: -8.000335693359375
    3. '[num' → logprob: -16.875335693359375
    4. '(num' → logprob: -17.000335693359375
    5. '1' → logprob: -17.625335693359375
    6. '```' → logprob: -18.250335693359375
    7. '	num' → logprob: -19.000335693359375
    8. '$num' → logprob: -19.250335693359375
    9. '                   ' → logprob: -19.375335693359375
    10. '   ' → logprob: -20.375335693359375

Token 2340: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -1.2948405128554441e-05
    2. '_book' → logprob: -12.00001335144043
    3. '```' → logprob: -13.25001335144043
    4. ' _' → logprob: -13.37501335144043
    5. '\' → logprob: -14.37501335144043
    6. ')_' → logprob: -14.62501335144043
    7. '_' → logprob: -15.00001335144043
    8. '       ' → logprob: -15.87501335144043
    9. '           ' → logprob: -15.87501335144043
    10. '_courses' → logprob: -15.87501335144043

Token 2341: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11986300349235535
    2. '+' → logprob: -2.2448630332946777
    3. '<|end|>' → logprob: -5.619863033294678
    4. '                       ' → logprob: -6.619863033294678
    5. ')' → logprob: -6.869863033294678
    6. '                           ' → logprob: -8.74486255645752
    7. '*' → logprob: -8.86986255645752
    8. ' *' → logprob: -8.86986255645752
    9. '<|end|>' → logprob: -8.86986255645752
    10. '           ' → logprob: -9.74486255645752

Token 2342: '                       ' (ID: 968)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2655373215675354
    2. '                       ' → logprob: -1.6405372619628906
    3. '+' → logprob: -3.2655372619628906
    4. '```' → logprob: -7.265537261962891
    5. '                           ' → logprob: -9.39053726196289
    6. '
' → logprob: -9.39053726196289
    7. '(next' → logprob: -10.14053726196289
    8. '                        
' → logprob: -10.26553726196289
    9. '[next' → logprob: -10.76553726196289
    10. 'next' → logprob: -10.89053726196289

Token 2343: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.142505943775177
    2. 'next' → logprob: -2.6425058841705322
    3. ' next' → logprob: -3.7675058841705322
    4. 'if' → logprob: -3.8925058841705322
    5. ' if' → logprob: -4.142506122589111
    6. '                           ' → logprob: -7.267506122589111
    7. '                               ' → logprob: -7.892506122589111
    8. '
' → logprob: -8.642505645751953
    9. '                   ' → logprob: -8.642505645751953
    10. '```' → logprob: -8.642505645751953

Token 2344: ' plus' (ID: 2932)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3457610011100769
    2. 'if' → logprob: -2.0957610607147217
    3. '                       ' → logprob: -2.4707610607147217
    4. 'next' → logprob: -2.4707610607147217
    5. '                           ' → logprob: -9.4707612991333
    6. '                   ' → logprob: -9.7207612991333
    7. ' total' → logprob: -10.0957612991333
    8. '                               ' → logprob: -10.3457612991333
    9. ' if' → logprob: -10.5957612991333
    10. '               ' → logprob: -11.2207612991333

Token 2345: ' horizontal' (ID: 25511)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11289140582084656
    2. ' ' → logprob: -2.237891435623169
    3. '                       ' → logprob: -10.86289119720459
    4. ' (' → logprob: -11.48789119720459
    5. ' +' → logprob: -11.86289119720459
    6. '                   ' → logprob: -12.11289119720459
    7. '+' → logprob: -12.23789119720459
    8. '                               ' → logprob: -12.36289119720459
    9. ' ' → logprob: -12.48789119720459
    10. '```' → logprob: -12.73789119720459

Token 2346: ' move' (ID: 5275)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1438751518726349
    2. '+' → logprob: -2.2688751220703125
    3. '                       ' → logprob: -5.1438751220703125
    4. '                   ' → logprob: -5.3938751220703125
    5. '_cost' → logprob: -5.8938751220703125
    6. ')' → logprob: -6.0188751220703125
    7. '                           ' → logprob: -6.3938751220703125
    8. '           ' → logprob: -6.5188751220703125
    9. ' =' → logprob: -6.7688751220703125
    10. '               ' → logprob: -7.0188751220703125

Token 2347: ' to' (ID: 316)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1599901020526886
    2. '+' → logprob: -2.284990072250366
    3. '                       ' → logprob: -3.159990072250366
    4. ' =' → logprob: -6.284990310668945
    5. '[r' → logprob: -7.534990310668945
    6. '=' → logprob: -7.784990310668945
    7. '+r' → logprob: -8.534990310668945
    8. '                           ' → logprob: -9.159990310668945
    9. ' +=' → logprob: -9.659990310668945
    10. '1' → logprob: -9.659990310668945

Token 2348: ' next' (ID: 2613)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.012968921102583408
    2. 'next' → logprob: -5.012969017028809
    3. ' r' → logprob: -5.512969017028809
    4. ' next' → logprob: -6.387969017028809
    5. '1' → logprob: -8.137969017028809
    6. '```' → logprob: -10.637969017028809
    7. 'the' → logprob: -10.887969017028809
    8. ' (' → logprob: -10.887969017028809
    9. ' ' → logprob: -11.012969017028809
    10. 'move' → logprob: -11.137969017028809

Token 2349: ' col' (ID: 996)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.556692123413086
    2. '_dp' → logprob: -1.556692123413086
    3. '2' → logprob: -2.181692123413086
    4. '_col' → logprob: -2.181692123413086
    5. '+' → logprob: -2.556692123413086
    6. ' row' → logprob: -2.681692123413086
    7. 'row' → logprob: -3.306692123413086
    8. ' +' → logprob: -3.431692123413086
    9. 'r' → logprob: -3.806692123413086
    10. '_r' → logprob: -4.056692123413086

Token 2350: ' on' (ID: 402)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28354912996292114
    2. '+' → logprob: -2.0335490703582764
    3. '                       ' → logprob: -2.1585490703582764
    4. '1' → logprob: -8.658549308776855
    5. '+r' → logprob: -8.908549308776855
    6. '                           ' → logprob: -9.783549308776855
    7. '                   ' → logprob: -10.408549308776855
    8. '[r' → logprob: -10.783549308776855
    9. ' +
' → logprob: -10.908549308776855
    10. '                        
' → logprob: -11.658549308776855

Token 2351: ' same' (ID: 2684)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.724902868270874
    2. 'same' → logprob: -0.724902868270874
    3. ' same' → logprob: -4.099903106689453
    4. ' r' → logprob: -4.849903106689453
    5. 'the' → logprob: -5.099903106689453
    6. ' the' → logprob: -7.849903106689453
    7. 'row' → logprob: -8.599903106689453
    8. 'next' → logprob: -9.349903106689453
    9. '   ' → logprob: -10.599903106689453
    10. '_same' → logprob: -11.599903106689453

Token 2352: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.06744986027479172
    2. 'r' → logprob: -3.6924498081207275
    3. ' r' → logprob: -3.8174498081207275
    4. 'row' → logprob: -4.067450046539307
    5. '_row' → logprob: -7.317450046539307
    6. ' ' → logprob: -8.317449569702148
    7. '_r' → logprob: -8.567449569702148
    8. '   ' → logprob: -10.817449569702148
    9. ' line' → logprob: -11.067449569702148
    10. '[r' → logprob: -11.317449569702148

Token 2353: ' r' (ID: 428)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5650295615196228
    2. 'if' → logprob: -1.4400296211242676
    3. ' if' → logprob: -2.0650296211242676
    4. 'next' → logprob: -3.5650296211242676
    5. ' +' → logprob: -4.815029621124268
    6. '[next' → logprob: -4.940029621124268
    7. '+' → logprob: -5.065029621124268
    8. 'total' → logprob: -5.190029621124268
    9. 'r' → logprob: -5.565029621124268
    10. ' next' → logprob: -5.940029621124268

Token 2354: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0802738870552275e-05
    2. '                   ' → logprob: -12.37501049041748
    3. ' ' → logprob: -13.00001049041748
    4. '   ' → logprob: -13.50001049041748
    5. '```' → logprob: -14.62501049041748
    6. '               ' → logprob: -14.75001049041748
    7. '           ' → logprob: -14.87501049041748
    8. '                       ' → logprob: -15.12501049041748
    9. '                    ' → logprob: -15.62501049041748
    10. ' +' → logprob: -15.62501049041748

Token 2355: ' cost' (ID: 3097)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5594707131385803
    2. '                       ' → logprob: -1.4344706535339355
    3. '+' → logprob: -1.6844706535339355
    4. 'if' → logprob: -6.0594706535339355
    5. ' if' → logprob: -6.6844706535339355
    6. 'next' → logprob: -7.9344706535339355
    7. '                           ' → logprob: -8.309471130371094
    8. ' next' → logprob: -8.684471130371094
    9. '[next' → logprob: -9.809471130371094
    10. '(next' → logprob: -10.309471130371094

Token 2356: ' ' (ID: 220)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8745185136795044
    2. '1' → logprob: -1.1245185136795044
    3. '+' → logprob: -1.3745185136795044
    4. ' ' → logprob: -5.749518394470215
    5. '=' → logprob: -6.624518394470215
    6. ' =' → logprob: -8.249518394470215
    7. '```' → logprob: -8.749518394470215
    8. '`' → logprob: -9.374518394470215
    9. '                       ' → logprob: -10.374518394470215
    10. ' +=' → logprob: -10.499518394470215

Token 2357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00541102746501565
    2. '+' → logprob: -5.630411148071289
    3. ' ' → logprob: -6.630411148071289
    4. ' +' → logprob: -7.755411148071289
    5. '=' → logprob: -9.880411148071289
    6. ' =' → logprob: -12.630411148071289
    7. '```' → logprob: -13.380411148071289
    8. '   ' → logprob: -14.130411148071289
    9. '+=' → logprob: -14.130411148071289
    10. ' +=' → logprob: -14.255411148071289

Token 2358: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7972288727760315
    2. '                       ' → logprob: -1.0472288131713867
    3. '+' → logprob: -2.4222288131713867
    4. ' next' → logprob: -2.5472288131713867
    5. 'next' → logprob: -4.297228813171387
    6. ' total' → logprob: -5.047228813171387
    7. 'total' → logprob: -5.547228813171387
    8. ' if' → logprob: -5.797228813171387
    9. '                           ' → logprob: -7.047228813171387
    10. '(next' → logprob: -7.172228813171387

Token 2359: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0068981824442744255
    2. 'next' → logprob: -5.756898403167725
    3. ' next' → logprob: -5.756898403167725
    4. '                           ' → logprob: -8.756897926330566
    5. 'total' → logprob: -9.381897926330566
    6. '(next' → logprob: -9.631897926330566
    7. '                        
' → logprob: -10.131897926330566
    8. '+' → logprob: -10.631897926330566
    9. '                               ' → logprob: -10.631897926330566
    10. ' if' → logprob: -10.756897926330566

Token 2360: ' total' (ID: 3609)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.662038266658783
    2. 'next' → logprob: -0.787038266658783
    3. '                       ' → logprob: -4.162038326263428
    4. 'total' (adapté à ' total') → logprob: -5.037038326263428
    5. ' total' → logprob: -5.912038326263428
    6. ' if' → logprob: -6.412038326263428
    7. '(next' → logprob: -7.537038326263428
    8. 'if' → logprob: -7.537038326263428
    9. '                           ' → logprob: -7.912038326263428
    10. '                               ' → logprob: -8.03703784942627

Token 2361: '_cost' (ID: 36820)
  Prédit: '_col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0033602239564061165
    2. '_dp' → logprob: -5.753360271453857
    3. '_cost' → logprob: -9.7533597946167
    4. '[col' → logprob: -11.0033597946167
    5. '_cols' → logprob: -11.2533597946167
    6. '           ' → logprob: -11.3783597946167
    7. '[_' → logprob: -11.3783597946167
    8. 'col' → logprob: -11.6283597946167
    9. '```' → logprob: -12.2533597946167
    10. '_column' → logprob: -12.2533597946167

Token 2362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6433104872703552
    2. '=' → logprob: -0.7683104872703552
    3. '+' → logprob: -5.393310546875
    4. ' +' → logprob: -5.393310546875
    5. '[r' → logprob: -7.393310546875
    6. '                       ' → logprob: -8.393310546875
    7. '                   ' → logprob: -8.518310546875
    8. ' +=' → logprob: -9.393310546875
    9. '           ' → logprob: -9.393310546875
    10. '                           ' → logprob: -9.768310546875

Token 2363: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002488022670149803
    2. ' dp' → logprob: -6.002488136291504
    3. 'total' → logprob: -12.752488136291504
    4. '           ' → logprob: -13.002488136291504
    5. 'next' → logprob: -13.002488136291504
    6. '                       ' → logprob: -13.627488136291504
    7. '                   ' → logprob: -13.877488136291504
    8. '                           ' → logprob: -14.002488136291504
    9. '               ' → logprob: -14.502488136291504
    10. '	dp' → logprob: -15.252488136291504

Token 2364: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0020930420141667128
    2. 'r' → logprob: -6.2520928382873535
    3. '[' → logprob: -9.877093315124512
    4. '[c' → logprob: -10.627093315124512
    5. '                   ' → logprob: -10.877093315124512
    6. ' r' → logprob: -11.502093315124512
    7. '           ' → logprob: -11.627093315124512
    8. ' [' → logprob: -12.252093315124512
    9. '```' → logprob: -12.252093315124512
    10. '_r' → logprob: -12.502093315124512

Token 2365: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03542323783040047
    2. '[r' → logprob: -3.4104232788085938
    3. '[c' → logprob: -6.910423278808594
    4. 'r' → logprob: -8.535423278808594
    5. '[' → logprob: -8.535423278808594
    6. ']' → logprob: -8.910423278808594
    7. '1' → logprob: -9.535423278808594
    8. '```' → logprob: -9.660423278808594
    9. '][' → logprob: -10.160423278808594
    10. '   ' → logprob: -11.410423278808594

Token 2366: ']' (ID: 60)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0003943304473068565
    2. '[' → logprob: -9.250393867492676
    3. ' +' → logprob: -9.250393867492676
    4. '][' → logprob: -9.750393867492676
    5. '+' → logprob: -9.875393867492676
    6. ']' → logprob: -10.250393867492676
    7. '+r' → logprob: -10.250393867492676
    8. 'r' → logprob: -12.500393867492676
    9. '   ' → logprob: -13.000393867492676
    10. ']+' → logprob: -13.125393867492676

Token 2367: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.33271294832229614
    2. '+' → logprob: -1.3327128887176514
    3. '+r' → logprob: -4.0827131271362305
    4. '[r' → logprob: -6.0827131271362305
    5. '                           ' → logprob: -10.20771312713623
    6. '                       ' → logprob: -10.83271312713623
    7. '[' → logprob: -11.08271312713623
    8. '                               ' → logprob: -11.70771312713623
    9. '```' → logprob: -11.70771312713623
    10. '                                   ' → logprob: -12.33271312713623

Token 2368: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.003987096715718508
    2. ' total' → logprob: -5.7539873123168945
    3. 'vertical' → logprob: -7.1289873123168945
    4. ' vertical' → logprob: -12.253987312316895
    5. '   ' → logprob: -14.378987312316895
    6. '(total' → logprob: -14.628987312316895
    7. '                       ' → logprob: -14.878987312316895
    8. '                   ' → logprob: -15.003987312316895
    9. '           ' → logprob: -15.003987312316895
    10. '               ' → logprob: -15.753987312316895

Token 2369: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.5788659453392029
    2. '_cost' → logprob: -0.8288659453392029
    3. '2' → logprob: -6.203866004943848
    4. '_' → logprob: -8.203866004943848
    5. '```' → logprob: -8.328866004943848
    6. 'col' → logprob: -8.828866004943848
    7. 'cost' → logprob: -9.328866004943848
    8. '_column' → logprob: -10.703866004943848
    9. '`' → logprob: -11.203866004943848
    10. '_code' → logprob: -11.453866004943848

Token 2370: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.6827647686004639
    2. '2' → logprob: -0.8077647686004639
    3. '       ' → logprob: -4.307765007019043
    4. '_cols' → logprob: -4.932765007019043
    5. '_rows' → logprob: -5.057765007019043
    6. '+' → logprob: -5.432765007019043
    7. '_col' → logprob: -5.432765007019043
    8. ']' → logprob: -6.057765007019043
    9. '```' → logprob: -6.557765007019043
    10. ']_' → logprob: -6.682765007019043

Token 2371: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03808876872062683
    2. '+' → logprob: -3.288088798522949
    3. '                       ' → logprob: -10.91308879852295
    4. ' if' → logprob: -11.28808879852295
    5. '                           ' → logprob: -12.91308879852295
    6. '```' → logprob: -13.16308879852295
    7. '+r' → logprob: -13.41308879852295
    8. '                               ' → logprob: -13.41308879852295
    9. '<|end|>' → logprob: -13.41308879852295
    10. 'if' → logprob: -13.66308879852295

Token 2372: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048054322600365
    2. ' ' → logprob: -4.511047840118408
    3. '```' → logprob: -15.761048316955566
    4. '   ' → logprob: -17.26104736328125
    5. ' ' → logprob: -18.63604736328125
    6. '2' → logprob: -18.76104736328125
    7. '`' → logprob: -19.13604736328125
    8. '<|end|>' → logprob: -20.01104736328125
    9. '  ' → logprob: -20.38604736328125
    10. '0' → logprob: -20.38604736328125

Token 2373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -19.0
    4. '   ' → logprob: -20.875
    5. '
' → logprob: -21.0
    6. '۱' → logprob: -23.0
    7. '+' → logprob: -23.375
    8. '`' → logprob: -23.75
    9. '  ' → logprob: -24.375
    10. '(' → logprob: -24.5

Token 2374: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.15951326489448547
    2. ' if' → logprob: -3.159513235092163
    3. '                           ' → logprob: -3.659513235092163
    4. '
' → logprob: -3.784513235092163
    5. '[next' → logprob: -4.034513473510742
    6. 'if' → logprob: -4.909513473510742
    7. ')' → logprob: -5.159513473510742
    8. '                   ' → logprob: -5.659513473510742
    9. '                               ' → logprob: -5.784513473510742
    10. ' next' → logprob: -5.909513473510742

Token 2375: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00907268188893795
    2. '                           ' → logprob: -5.134072780609131
    3. ' if' → logprob: -7.134072780609131
    4. 'if' → logprob: -7.259072780609131
    5. '                               ' → logprob: -7.384072780609131
    6. '                   ' → logprob: -8.134072303771973
    7. '
' → logprob: -8.759072303771973
    8. '               ' → logprob: -9.259072303771973
    9. 'next' → logprob: -9.634072303771973
    10. '           ' → logprob: -9.759072303771973

Token 2376: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22593829035758972
    2. ' if' → logprob: -1.975938320159912
    3. '                           ' → logprob: -3.350938320159912
    4. '                       ' → logprob: -4.225938320159912
    5. '                               ' → logprob: -4.975938320159912
    6. 'next' → logprob: -5.350938320159912
    7. '                                   ' → logprob: -7.100938320159912
    8. '```' → logprob: -7.725938320159912
    9. '                                           ' → logprob: -8.475937843322754
    10. ' next' → logprob: -8.850937843322754

Token 2377: ' next' (ID: 2613)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.056017760187387466
    2. 'next' → logprob: -3.4310178756713867
    3. ' total' → logprob: -3.9310178756713867
    4. ' next' → logprob: -6.056017875671387
    5. '                           ' → logprob: -9.806017875671387
    6. '                       ' → logprob: -9.931017875671387
    7. '                               ' → logprob: -11.306017875671387
    8. '                   ' → logprob: -11.931017875671387
    9. '           ' → logprob: -12.056017875671387
    10. '(total' → logprob: -12.056017875671387

Token 2378: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -2.1054253011243418e-05
    2. 'dp' → logprob: -10.875020980834961
    3. '```' → logprob: -14.375020980834961
    4. '	dp' → logprob: -15.125020980834961
    5. '
' → logprob: -15.125020980834961
    6. '   ' → logprob: -16.00002098083496
    7. '[' → logprob: -16.00002098083496
    8. '\' → logprob: -16.50002098083496
    9. '_dt' → logprob: -16.87502098083496
    10. '_df' → logprob: -17.12502098083496

Token 2379: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.625005722045898
    3. '[t' → logprob: -14.750005722045898
    4. '                           ' → logprob: -15.000005722045898
    5. '                       ' → logprob: -15.250005722045898
    6. '[s' → logprob: -15.375005722045898
    7. 'r' → logprob: -15.500005722045898
    8. '[token' → logprob: -15.875005722045898
    9. '```' → logprob: -16.1250057220459
    10. '                               ' → logprob: -16.6250057220459

Token 2380: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3507966697216034
    2. '2' → logprob: -1.2257966995239258
    3. '[r' → logprob: -6.100796699523926
    4. '```' → logprob: -10.100796699523926
    5. '                       ' → logprob: -11.725796699523926
    6. '                           ' → logprob: -11.975796699523926
    7. '                   ' → logprob: -11.975796699523926
    8. '_r' → logprob: -12.100796699523926
    9. '[' → logprob: -12.225796699523926
    10. ' r' → logprob: -12.475796699523926

Token 2381: ']' (ID: 60)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.033454690128564835
    2. '[' → logprob: -4.158454895019531
    3. ']' → logprob: -4.408454895019531
    4. '[next' → logprob: -6.658454895019531
    5. '[token' → logprob: -7.033454895019531
    6. '```' → logprob: -7.033454895019531
    7. ']>' → logprob: -7.908454895019531
    8. '                           ' → logprob: -8.408454895019531
    9. ']=' → logprob: -8.408454895019531
    10. '                       ' → logprob: -8.908454895019531

Token 2382: ' >' (ID: 1424)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05256584286689758
    2. ' =' → logprob: -3.802565813064575
    3. '[next' → logprob: -4.427566051483154
    4. '[' → logprob: -5.302566051483154
    5. '>' → logprob: -5.302566051483154
    6. '=min' → logprob: -5.802566051483154
    7. '[min' → logprob: -6.052566051483154
    8. ' >' → logprob: -7.677566051483154
    9. '                           ' → logprob: -7.802566051483154
    10. '                       ' → logprob: -8.677565574645996

Token 2383: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.005235767923295498
    2. ' total' → logprob: -5.25523567199707
    3. '(total' → logprob: -14.25523567199707
    4. '   ' → logprob: -14.88023567199707
    5. 'dp' → logprob: -15.13023567199707
    6. '                           ' → logprob: -15.63023567199707
    7. '                       ' → logprob: -15.75523567199707
    8. '                               ' → logprob: -16.50523567199707
    9. '$total' → logprob: -16.75523567199707
    10. '	total' → logprob: -16.88023567199707

Token 2384: '_cost' (ID: 36820)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.04802669584751129
    2. '_cost' → logprob: -3.2980268001556396
    3. '[r' → logprob: -4.7980265617370605
    4. 'dp' → logprob: -6.5480265617370605
    5. 'cost' → logprob: -9.298027038574219
    6. '[' → logprob: -10.548027038574219
    7. ' dp' → logprob: -10.548027038574219
    8. '```' → logprob: -10.798027038574219
    9. ')' → logprob: -11.798027038574219
    10. '   ' → logprob: -11.923027038574219

Token 2385: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.12672491371631622
    2. '                       ' → logprob: -3.5017249584198
    3. '                               ' → logprob: -3.8767249584198
    4. '[next' → logprob: -3.8767249584198
    5. ':
' → logprob: -4.126724720001221
    6. '=' → logprob: -4.501724720001221
    7. ':' → logprob: -4.876724720001221
    8. ' =' → logprob: -5.001724720001221
    9. '[' → logprob: -5.876724720001221
    10. '           ' → logprob: -7.876724720001221

Token 2386: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.16603709757328033
    2. '                               ' → logprob: -2.166037082672119
    3. ' next' → logprob: -4.541037082672119
    4. 'next' → logprob: -4.666037082672119
    5. '                       ' → logprob: -4.916037082672119
    6. '                                   ' → logprob: -5.416037082672119
    7. '[next' → logprob: -5.416037082672119
    8. '                   ' → logprob: -7.916037082672119
    9. '(next' → logprob: -8.041037559509277
    10. '=' → logprob: -8.166037559509277

Token 2387: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.0005823421524837613
    2. ' next' → logprob: -7.500582218170166
    3. '                           ' → logprob: -10.750582695007324
    4. '                               ' → logprob: -12.500582695007324
    5. '[next' → logprob: -12.875582695007324
    6. '(next' → logprob: -14.000582695007324
    7. '	next' → logprob: -15.375582695007324
    8. '.next' → logprob: -15.500582695007324
    9. ',next' → logprob: -15.750582695007324
    10. '                       ' → logprob: -16.500581741333008

Token 2388: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -9.9728669738397e-05
    2. 'dp' → logprob: -9.250100135803223
    3. '```' → logprob: -13.000100135803223
    4. '	dp' → logprob: -14.375100135803223
    5. 'Dp' → logprob: -15.750100135803223
    6. '``' → logprob: -16.750099182128906
    7. '           ' → logprob: -16.875099182128906
    8. '                   ' → logprob: -17.000099182128906
    9. 'DP' → logprob: -17.125099182128906
    10. '               ' → logprob: -17.125099182128906

Token 2389: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.1269593983888626
    2. '[next' → logprob: -2.1269593238830566
    3. '[n' → logprob: -11.001959800720215
    4. '[' → logprob: -11.751959800720215
    5. 'next' → logprob: -12.251959800720215
    6. '=' → logprob: -14.876959800720215
    7. '
' → logprob: -15.126959800720215
    8. '\[' → logprob: -15.126959800720215
    9. '[t' → logprob: -15.251959800720215
    10. '```' → logprob: -15.376959800720215

Token 2390: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. '[r' → logprob: -12.87500286102295
    3. '[' → logprob: -15.50000286102295
    4. '₂' → logprob: -15.87500286102295
    5. '```' → logprob: -16.250003814697266
    6. '   ' → logprob: -16.375003814697266
    7. '                           ' → logprob: -17.625003814697266
    8. '                   ' → logprob: -18.000003814697266
    9. 'r' → logprob: -18.125003814697266
    10. '                       ' → logprob: -18.250003814697266

Token 2391: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269616037607193
    2. ' =' → logprob: -2.1269617080688477
    3. '                           ' → logprob: -11.001961708068848
    4. ']' → logprob: -12.001961708068848
    5. '=
' → logprob: -12.626961708068848
    6. '[next' → logprob: -12.751961708068848
    7. ']=' → logprob: -12.876961708068848
    8. '                               ' → logprob: -14.501961708068848
    9. '=r' → logprob: -14.626961708068848
    10. ' =
' → logprob: -15.126961708068848

Token 2392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234832875430584
    2. ' =' → logprob: -5.255234718322754
    3. '                           ' → logprob: -14.630234718322754
    4. '=
' → logprob: -15.255234718322754
    5. '[' → logprob: -16.50523567199707
    6. ']=' → logprob: -16.88023567199707
    7. '=

' → logprob: -16.88023567199707
    8. '＝' → logprob: -17.13023567199707
    9. '=True' → logprob: -17.25523567199707
    10. '                               ' → logprob: -17.63023567199707

Token 2393: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.008614926598966122
    2. ' total' → logprob: -4.758615016937256
    3. '                           ' → logprob: -15.383614540100098
    4. '                               ' → logprob: -16.508615493774414
    5. '   ' → logprob: -17.258615493774414
    6. '	total' → logprob: -17.758615493774414
    7. '(total' → logprob: -17.883615493774414
    8. '$total' → logprob: -18.008615493774414
    9. '                                   ' → logprob: -18.383615493774414
    10. '                       ' → logprob: -19.633615493774414

Token 2394: '_cost' (ID: 36820)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.41895610094070435
    2. '_cost' → logprob: -1.1689560413360596
    3. '_col' → logprob: -3.6689560413360596
    4. 'dp' → logprob: -5.543956279754639
    5. '[r' → logprob: -6.543956279754639
    6. 'cost' → logprob: -8.04395580291748
    7. '2' → logprob: -8.91895580291748
    8. '[col' → logprob: -9.66895580291748
    9. 'Dp' → logprob: -10.29395580291748
    10. '[c' → logprob: -10.79395580291748

Token 2395: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09411321580410004
    2. '
' → logprob: -2.4691131114959717
    3. '       ' → logprob: -6.094113349914551
    4. '<|end|>' → logprob: -7.094113349914551
    5. '               ' → logprob: -7.344113349914551
    6. '[' → logprob: -8.59411334991455
    7. '    
' → logprob: -8.59411334991455
    8. '            
' → logprob: -8.84411334991455
    9. '```' → logprob: -8.84411334991455
    10. '          ' → logprob: -9.21911334991455

Token 2396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01375194825232029
    2. '       ' → logprob: -4.763751983642578
    3. '```' → logprob: -5.888751983642578
    4. '               ' → logprob: -6.888751983642578
    5. '<|end|>' → logprob: -7.888751983642578
    6. '[' → logprob: -8.388751983642578
    7. '                           ' → logprob: -8.888751983642578
    8. '   ' → logprob: -9.013751983642578
    9. '          ' → logprob: -9.138751983642578
    10. '
' → logprob: -10.013751983642578

Token 2397: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.1353081911802292
    2. '           ' → logprob: -2.135308265686035
    3. '       ' → logprob: -5.010308265686035
    4. ' dp' → logprob: -6.635308265686035
    5. '   ' → logprob: -8.135308265686035
    6. '	dp' → logprob: -10.010308265686035
    7. '_dp' → logprob: -11.760308265686035
    8. '               ' → logprob: -12.010308265686035
    9. '(dp' → logprob: -12.260308265686035
    10. ' ' → logprob: -13.635308265686035

Token 2398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05753744766116142
    2. ' =' → logprob: -2.93253755569458
    3. '[:]' → logprob: -6.43253755569458
    4. '[' → logprob: -7.43253755569458
    5. '[next' → logprob: -9.182537078857422
    6. ',' → logprob: -9.432537078857422
    7. '=
' → logprob: -9.932537078857422
    8. '```' → logprob: -10.182537078857422
    9. '   ' → logprob: -10.432537078857422
    10. '[c' → logprob: -10.807537078857422

Token 2399: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -7.636475493200123e-05
    2. ' next' → logprob: -9.500076293945312
    3. '[next' → logprob: -13.500076293945312
    4. 'dp' → logprob: -16.625076293945312
    5. '(next' → logprob: -17.875076293945312
    6. '.next' → logprob: -19.625076293945312
    7. '	next' → logprob: -20.250076293945312
    8. '_next' → logprob: -21.125076293945312
    9. '```' → logprob: -21.375076293945312
    10. '`' → logprob: -21.875076293945312

Token 2400: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -4.246537173457909e-06
    2. 'dp' → logprob: -12.500003814697266
    3. '```' → logprob: -15.875003814697266
    4. '	dp' → logprob: -16.875003814697266
    5. '[' → logprob: -17.125003814697266
    6. '_dt' → logprob: -17.375003814697266
    7. '_dc' → logprob: -17.500003814697266
    8. '`' → logprob: -17.875003814697266
    9. '(dp' → logprob: -17.875003814697266
    10. '[_' → logprob: -18.250003814697266

Token 2401: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31998422741889954
    2. '
' → logprob: -1.9449841976165771
    3. 'print' → logprob: -2.069984197616577
    4. '       ' → logprob: -6.194984436035156
    5. '    
' → logprob: -6.694984436035156
    6. '```' → logprob: -7.569984436035156
    7. 'return' → logprob: -8.194984436035156
    8. ' print' → logprob: -8.819984436035156
    9. 'result' → logprob: -9.194984436035156
    10. 'continue' → logprob: -9.694984436035156

Token 2402: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5249601006507874
    2. '   ' → logprob: -1.0249600410461426
    3. '
' → logprob: -3.2749600410461426
    4. '```' → logprob: -4.649960041046143
    5. ' print' → logprob: -6.774960041046143
    6. '       ' → logprob: -7.649960041046143
    7. '    
' → logprob: -8.1499605178833
    8. '``' → logprob: -9.2749605178833
    9. 'result' → logprob: -9.3999605178833
    10. '`' → logprob: -10.2749605178833

Token 2403: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00046856500557623804
    2. '   ' → logprob: -8.125468254089355
    3. 'return' → logprob: -9.500468254089355
    4. '       ' → logprob: -10.125468254089355
    5. '```' → logprob: -10.625468254089355
    6. 'answer' → logprob: -11.125468254089355
    7. ' print' → logprob: -12.125468254089355
    8. '
' → logprob: -12.625468254089355
    9. '``' → logprob: -13.000468254089355
    10. 'result' → logprob: -13.125468254089355

Token 2404: ' end' (ID: 1268)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020913768094033003
    2. 'answer' → logprob: -6.877091407775879
    3. 'ans' → logprob: -7.627091407775879
    4. 'result' → logprob: -8.002091407775879
    5. 'res' → logprob: -8.752091407775879
    6. 'return' → logprob: -10.377091407775879
    7. '       ' → logprob: -11.127091407775879
    8. 'import' → logprob: -11.502091407775879
    9. '   ' → logprob: -11.627091407775879
    10. '```' → logprob: -11.752091407775879

Token 2405: ' position' (ID: 4010)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018599730683490634
    2. '
' → logprob: -7.50186014175415
    3. 'import' → logprob: -7.87686014175415
    4. '   ' → logprob: -8.251859664916992
    5. ' print' → logprob: -8.251859664916992
    6. '       ' → logprob: -8.751859664916992
    7. '```' → logprob: -8.751859664916992
    8. '`' → logprob: -10.251859664916992
    9. 'answer' → logprob: -10.876859664916992
    10. '``' → logprob: -11.876859664916992

Token 2406: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12571609020233154
    2. 'print' → logprob: -2.500716209411621
    3. ' =' → logprob: -4.625716209411621
    4. 'cost' → logprob: -5.000716209411621
    5. 'answer' → logprob: -5.625716209411621
    6. '   ' → logprob: -5.625716209411621
    7. 'dp' → logprob: -5.750716209411621
    8. '       ' → logprob: -6.000716209411621
    9. 'min' → logprob: -6.250716209411621
    10. 'result' → logprob: -6.625716209411621

Token 2407: ' intersection' (ID: 42002)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10181758552789688
    2. '[' → logprob: -3.1018176078796387
    3. '3' → logprob: -3.2268176078796387
    4. '(' → logprob: -4.851817607879639
    5. '       ' → logprob: -5.726817607879639
    6. ' dp' → logprob: -7.476817607879639
    7. '   ' → logprob: -8.22681713104248
    8. '(dp' → logprob: -9.10181713104248
    9. 'intersection' → logprob: -10.35181713104248
    10. ' (' → logprob: -10.85181713104248

Token 2408: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20472490787506104
    2. '(' → logprob: -1.704724907875061
    3. '3' → logprob: -6.7047247886657715
    4. '```' → logprob: -7.4547247886657715
    5. '   ' → logprob: -7.5797247886657715
    6. '       ' → logprob: -8.07972526550293
    7. ' (' → logprob: -8.45472526550293
    8. ' =' → logprob: -8.70472526550293
    9. '=' → logprob: -9.20472526550293
    10. '
' → logprob: -10.32972526550293

Token 2409: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '   ' → logprob: -15.875000953674316
    5. ')' → logprob: -17.625
    6. '```' → logprob: -17.75
    7. '[' → logprob: -19.125
    8. '       ' → logprob: -19.5
    9. '۳' → logprob: -19.875
    10. '`' → logprob: -19.875

Token 2410: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11781639605760574
    2. ',N' → logprob: -2.24281644821167
    3. ',[' → logprob: -6.24281644821167
    4. '][' → logprob: -6.61781644821167
    5. ' ,' → logprob: -7.49281644821167
    6. '[N' → logprob: -7.99281644821167
    7. ')[' → logprob: -8.492815971374512
    8. '   ' → logprob: -8.742815971374512
    9. '       ' → logprob: -8.992815971374512
    10. ',n' → logprob: -9.492815971374512

Token 2411: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7271990776062012
    2. ')' → logprob: -1.1021990776062012
    3. '       ' → logprob: -2.352199077606201
    4. ']
' → logprob: -3.602199077606201
    5. '][' → logprob: -3.852199077606201
    6. ']' → logprob: -3.852199077606201
    7. '[' → logprob: -4.477199077606201
    8. ')[' → logprob: -5.477199077606201
    9. '   ' → logprob: -7.477199077606201
    10. '])
' → logprob: -7.602199077606201

Token 2412: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010677202604711056
    2. '       ' → logprob: -5.260677337646484
    3. '   ' → logprob: -5.635677337646484
    4. '```' → logprob: -6.385677337646484
    5. 'return' → logprob: -9.885677337646484
    6. ' print' → logprob: -9.885677337646484
    7. '``' → logprob: -10.135677337646484
    8. 'answer' → logprob: -11.385677337646484
    9. '
' → logprob: -11.885677337646484
    10. '`' → logprob: -12.135677337646484

Token 2413: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00020950057660229504
    2. '       ' → logprob: -8.75020980834961
    3. 'return' → logprob: -10.87520980834961
    4. '   ' → logprob: -11.00020980834961
    5. '```' → logprob: -11.62520980834961
    6. '
' → logprob: -12.37520980834961
    7. ' print' → logprob: -13.50020980834961
    8. '``' → logprob: -14.62520980834961
    9. 'result' → logprob: -15.50020980834961
    10. 'answer' → logprob: -15.87520980834961

Token 2414: '(int' (ID: 2742)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.5797638893127441
    2. '(int' → logprob: -0.8297638893127441
    3. 'dp' → logprob: -6.079763889312744
    4. 'int' → logprob: -6.829763889312744
    5. '(round' → logprob: -7.829763889312744
    6. '(' → logprob: -10.454763412475586
    7. 'round' → logprob: -12.579763412475586
    8. '(f' → logprob: -12.954763412475586
    9. '(abs' → logprob: -13.204763412475586
    10. '("%.' → logprob: -13.454763412475586

Token 2415: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.004636961035430431
    2. 'dp' → logprob: -5.379636764526367
    3. '(' → logprob: -11.504636764526367
    4. ' dp' → logprob: -13.004636764526367
    5. ')' → logprob: -13.504636764526367
    6. ' (' → logprob: -13.879636764526367
    7. '(round' → logprob: -14.254636764526367
    8. ')(' → logprob: -14.504636764526367
    9. '	dp' → logprob: -15.629636764526367
    10. '(min' → logprob: -15.754636764526367

Token 2416: '[' (ID: 58)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1602245420217514
    2. '[' → logprob: -1.9102245569229126
    3. ')[' → logprob: -16.03522491455078
    4. ')' → logprob: -16.28522491455078
    5. '```' → logprob: -16.41022491455078
    6. '   ' → logprob: -17.28522491455078
    7. '\[' → logprob: -17.41022491455078
    8. ' [' → logprob: -17.41022491455078
    9. '(' → logprob: -17.66022491455078
    10. '[
' → logprob: -18.28522491455078

Token 2417: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '
' → logprob: -19.5
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -20.0
    5. '۳' → logprob: -20.25
    6. '３' → logprob: -20.75
    7. ' ' → logprob: -21.125
    8. '[' → logprob: -21.25
    9. '৩' → logprob: -22.5
    10. '३' → logprob: -22.625

Token 2418: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.008483375422656536
    2. '[' → logprob: -4.883483409881592
    3. '])' → logprob: -7.383483409881592
    4. ']' → logprob: -8.883482933044434
    5. ']))
' → logprob: -9.508482933044434
    6. '))' → logprob: -11.008482933044434
    7. '3' → logprob: -12.258482933044434
    8. ')])' → logprob: -12.633482933044434
    9. '][' → logprob: -12.758482933044434
    10. ')))' → logprob: -12.883482933044434


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2416
Tokens correctement prédits (1ère position, stricte): 654
Tokens correctement prédits (1ère position, avec adaptation): 685
Tokens correctement prédits (top 10): 1495
Précision stricte (1ère position): 27.07%
Précision adaptée (1ère position): 28.35%
Précision (top 10): 61.88%
================================================================================
