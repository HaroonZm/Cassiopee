================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

MAX = 10**6
prime = [True]*(MAX+1)
prime[0] = prime[1] = False
for i in range(2,int(MAX**0.5)+1):
    if prime[i]:
        for j in range(i*i, MAX+1, i):
            prime[j] = False

for line in sys.stdin:
    n = int(line)
    if n == 0:
        break
    count = 0
    for p in range(2, n//2+1):
        if prime[p] and prime[n - p]:
            count += 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'MAX' (ID: 21911)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09435722231864929
    2. '_LENGTH' → logprob: -3.2193572521209717
    3. '_SIZE' → logprob: -3.4693572521209717
    4. '_LINE' → logprob: -5.344357013702393
    5. '_SPACE' → logprob: -6.219357013702393
    6. ' _' → logprob: -6.344357013702393
    7. '_DEPTH' → logprob: -6.469357013702393
    8. '_VALUE' → logprob: -6.844357013702393
    9. '_LEN' → logprob: -7.094357013702393
    10. '_TOKEN' → logprob: -7.219357013702393

Token 5: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003546497318893671
    2. '100' → logprob: -5.878546714782715
    3. '10' → logprob: -7.253546714782715
    4. ' sys' → logprob: -10.878546714782715
    5. '256' → logprob: -12.878546714782715
    6. '20' → logprob: -12.878546714782715
    7. '999' → logprob: -13.253546714782715
    8. '  ' → logprob: -13.503546714782715
    9. '102' → logprob: -13.628546714782715
    10. '255' → logprob: -13.878546714782715

Token 6: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03941996023058891
    2. '10' → logprob: -3.2894198894500732
    3. ' ' → logprob: -7.289420127868652
    4. '999' → logprob: -8.289420127868652
    5. 'sys' → logprob: -8.664420127868652
    6. '2' → logprob: -9.414420127868652
    7. '255' → logprob: -9.789420127868652
    8. '102' → logprob: -10.164420127868652
    9. '256' → logprob: -10.414420127868652
    10. 'int' → logprob: -11.039420127868652

Token 7: '**' (ID: 410)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6216472387313843
    2. '\n' → logprob: -1.3716472387313843
    3. '\' → logprob: -2.371647357940674
    4. '```' → logprob: -3.371647357940674
    5. '_' → logprob: -3.746647357940674
    6. '' → logprob: -3.996647357940674
    7. '*' → logprob: -4.246647357940674
    8. '
' → logprob: -5.496647357940674
    9. '**' → logprob: -5.621647357940674
    10. '#' → logprob: -5.746647357940674

Token 8: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00922140572220087
    2. '6' → logprob: -4.75922155380249
    3. '7' → logprob: -7.50922155380249
    4. '8' → logprob: -9.884221076965332
    5. ' ' → logprob: -11.884221076965332
    6. '5' → logprob: -14.259221076965332
    7. '3' → logprob: -15.759221076965332
    8. '```' → logprob: -17.25922203063965
    9. '10' → logprob: -17.63422203063965
    10. '4' → logprob: -19.25922203063965

Token 9: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7296261787414551
    2. '\n' → logprob: -0.8546261787414551
    3. '+' → logprob: -3.479626178741455
    4. '' → logprob: -4.104626178741455
    5. '
' → logprob: -4.479626178741455
    6. '*' → logprob: -4.604626178741455
    7. '\' → logprob: -4.979626178741455
    8. '```' → logprob: -5.479626178741455
    9. ' 
' → logprob: -6.104626178741455
    10. '#' → logprob: -6.104626178741455

Token 10: 'prime' (ID: 46441)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17900553345680237
    2. '\n' → logprob: -2.3040056228637695
    3. '\' → logprob: -3.8040056228637695
    4. '
' → logprob: -4.1790056228637695
    5. '_' → logprob: -4.8040056228637695
    6. '' → logprob: -5.1790056228637695
    7. '

' → logprob: -6.1790056228637695
    8. '```' → logprob: -6.1790056228637695
    9. ',' → logprob: -6.4290056228637695
    10. 'def' → logprob: -6.9290056228637695

Token 11: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009395699598826468
    2. '_s' → logprob: -7.12593936920166
    3. '_' → logprob: -9.25093936920166
    4. ' =' → logprob: -11.00093936920166
    5. ' s' → logprob: -11.62593936920166
    6. '_list' → logprob: -12.62593936920166
    7. '=' → logprob: -13.62593936920166
    8. ''s' → logprob: -13.75093936920166
    9. '_numbers' → logprob: -13.87593936920166
    10. '```' → logprob: -14.00093936920166

Token 12: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5782444477081299
    2. ' [' → logprob: -0.8282444477081299
    3. '[]' → logprob: -6.578244209289551
    4. ' []' → logprob: -7.078244209289551
    5. '[s' → logprob: -10.70324420928955
    6. '[int' → logprob: -11.07824420928955
    7. ' ' → logprob: -12.07824420928955
    8. '[a' → logprob: -12.57824420928955
    9. '[n' → logprob: -12.70324420928955
    10. '[p' → logprob: -12.70324420928955

Token 13: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.06734700500965118
    2. ' True' → logprob: -2.8173470497131348
    3. 'False' → logprob: -5.317347049713135
    4. '1' → logprob: -8.317346572875977
    5. '0' → logprob: -9.192346572875977
    6. ' False' → logprob: -9.692346572875977
    7. ']' → logprob: -10.317346572875977
    8. '(True' → logprob: -11.067346572875977
    9. ' ' → logprob: -13.817346572875977
    10. ' ]' → logprob: -15.067346572875977

Token 14: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5029256343841553
    2. ',' → logprob: -1.7529256343841553
    3. '[' → logprob: -2.0029256343841553
    4. ' for' → logprob: -2.5029256343841553
    5. ']*' → logprob: -5.877925872802734
    6. ' ]' → logprob: -7.127925872802734
    7. 'for' → logprob: -7.127925872802734
    8. ' ' → logprob: -8.252925872802734
    9. '[]' → logprob: -9.252925872802734
    10. '(' → logprob: -9.252925872802734

Token 15: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -2.2603901015827432e-05
    2. '(MAX' → logprob: -10.875022888183594
    3. ' MAX' → logprob: -12.875022888183594
    4. '10' → logprob: -14.000022888183594
    5. 'max' → logprob: -15.875022888183594
    6. '(' → logprob: -16.375022888183594
    7. 'Max' → logprob: -17.625022888183594
    8. '100' → logprob: -17.750022888183594
    9. '_MAX' → logprob: -17.750022888183594
    10. 'M' → logprob: -17.875022888183594

Token 16: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0043771942146122456
    2. ')' → logprob: -5.629377365112305
    3. ' +' → logprob: -7.254377365112305
    4. '+)' → logprob: -10.254377365112305
    5. ' )' → logprob: -10.879377365112305
    6. ')+' → logprob: -12.004377365112305
    7. ' ' → logprob: -12.629377365112305
    8. '```' → logprob: -13.129377365112305
    9. '-' → logprob: -13.379377365112305
    10. '1' → logprob: -14.254377365112305

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028982185176573694
    2. ' ' → logprob: -8.250289916992188
    3. '0' → logprob: -10.500289916992188
    4. '2' → logprob: -14.750289916992188
    5. '7' → logprob: -15.375289916992188
    6. '  ' → logprob: -16.000289916992188
    7. '5' → logprob: -16.625289916992188
    8. '6' → logprob: -16.625289916992188
    9. '   ' → logprob: -17.125289916992188
    10. '10' → logprob: -17.625289916992188

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.868328920158092e-05
    2. ')
' → logprob: -11.000028610229492
    3. ' )' → logprob: -11.500028610229492
    4. ')

' → logprob: -14.125028610229492
    5. ')
' → logprob: -15.375028610229492
    6. '[' → logprob: -15.750028610229492
    7. ')#' → logprob: -16.125028610229492
    8. '')' → logprob: -16.625028610229492
    9. ']' → logprob: -16.625028610229492
    10. '`)' → logprob: -16.750028610229492

Token 19: 'prime' (ID: 46441)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36040791869163513
    2. 'prime' → logprob: -2.360407829284668
    3. '\n' → logprob: -2.610407829284668
    4. 'for' → logprob: -2.735407829284668
    5. ' 
' → logprob: -3.485407829284668
    6. '
' → logprob: -4.860407829284668
    7. '  
' → logprob: -5.110407829284668
    8. '' → logprob: -5.235407829284668
    9. ' for' → logprob: -5.360407829284668
    10. ' ' → logprob: -5.360407829284668

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038944309926591814
    2. '[:]' → logprob: -8.625389099121094
    3. '\[' → logprob: -8.750389099121094
    4. '[...]' → logprob: -11.000389099121094
    5. '[]' → logprob: -11.125389099121094
    6. '<|end|>' → logprob: -11.875389099121094
    7. '```' → logprob: -12.875389099121094
    8. ']' → logprob: -13.250389099121094
    9. '[
' → logprob: -13.500389099121094
    10. ' ' → logprob: -14.000389099121094

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16104823350906372
    2. '2' → logprob: -1.911048173904419
    3. ' ' → logprob: -7.161048412322998
    4. '1' → logprob: -10.03604793548584
    5. '   ' → logprob: -14.03604793548584
    6. ':' → logprob: -14.28604793548584
    7. '3' → logprob: -14.28604793548584
    8. '  ' → logprob: -14.78604793548584
    9. '-' → logprob: -15.16104793548584
    10. '```' → logprob: -15.66104793548584

Token 22: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03321463242173195
    2. ' ]' → logprob: -4.158214569091797
    3. '=' → logprob: -4.408214569091797
    4. ' =' → logprob: -5.533214569091797
    5. ']=' → logprob: -7.283214569091797
    6. ' ' → logprob: -8.658214569091797
    7. ']==' → logprob: -11.533214569091797
    8. ')' → logprob: -11.658214569091797
    9. ',' → logprob: -11.783214569091797
    10. ' ==' → logprob: -12.783214569091797

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024981439113617
    2. '=' → logprob: -1.9102498292922974
    3. ' ==' → logprob: -11.285249710083008
    4. ' =
' → logprob: -12.785249710083008
    5. ',' → logprob: -12.910249710083008
    6. '=False' → logprob: -13.035249710083008
    7. ' ' → logprob: -13.285249710083008
    8. '==' → logprob: -13.410249710083008
    9. ' =
' → logprob: -14.035249710083008
    10. '=True' → logprob: -14.660249710083008

Token 24: ' prime' (ID: 9197)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02975083328783512
    2. ' False' → logprob: -3.5297508239746094
    3. 'F' → logprob: -16.40475082397461
    4. 'prime' → logprob: -16.52975082397461
    5. ' ' → logprob: -17.02975082397461
    6. '=False' → logprob: -17.02975082397461
    7. '(False' → logprob: -17.40475082397461
    8. '.False' → logprob: -18.02975082397461
    9. '0' → logprob: -18.15475082397461
    10. '[' → logprob: -18.27975082397461

Token 25: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. 'False' → logprob: -13.12500286102295
    3. '1' → logprob: -15.25000286102295
    4. '```' → logprob: -16.000001907348633
    5. ' =' → logprob: -16.250001907348633
    6. '[
' → logprob: -17.250001907348633
    7. '=False' → logprob: -17.500001907348633
    8. ' [' → logprob: -17.625001907348633
    9. '=' → logprob: -17.750001907348633
    10. 'false' → logprob: -18.500001907348633

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016241880075540394
    2. ' ' → logprob: -8.750162124633789
    3. 'False' → logprob: -12.500162124633789
    4. '  ' → logprob: -17.00016212463379
    5. ' False' → logprob: -17.00016212463379
    6. '<|end|>' → logprob: -17.25016212463379
    7. '0' → logprob: -18.00016212463379
    8. 'True' → logprob: -18.12516212463379
    9. '۱' → logprob: -18.25016212463379
    10. '```' → logprob: -18.37516212463379

Token 27: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01682402938604355
    2. ' =' → logprob: -4.766824245452881
    3. '=' → logprob: -4.891824245452881
    4. ']=' → logprob: -7.891824245452881
    5. ' ]' → logprob: -8.516823768615723
    6. ')' → logprob: -9.891823768615723
    7. ' ' → logprob: -10.641823768615723
    8. 'False' → logprob: -11.516823768615723
    9. '=False' → logprob: -12.266823768615723
    10. '[' → logprob: -13.141823768615723

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12699982523918152
    2. '=' → logprob: -2.126999855041504
    3. '=False' → logprob: -9.751999855041504
    4. 'False' → logprob: -11.251999855041504
    5. ' False' → logprob: -14.626999855041504
    6. '=True' → logprob: -17.126998901367188
    7. ' ' → logprob: -17.751998901367188
    8. '＝' → logprob: -18.251998901367188
    9. '=

' → logprob: -18.626998901367188
    10. ')' → logprob: -18.751998901367188

Token 29: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5759394764900208
    2. 'False' → logprob: -0.8259394764900208
    3. '(False' → logprob: -17.700939178466797
    4. ' ' → logprob: -17.825939178466797
    5. '=False' → logprob: -18.575939178466797
    6. '.False' → logprob: -19.825939178466797
    7. '_false' → logprob: -20.075939178466797
    8. 'F' → logprob: -20.450939178466797
    9. ' false' → logprob: -21.200939178466797
    10. '0' → logprob: -21.825939178466797

Token 30: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26223453879356384
    2. '
' → logprob: -1.5122345685958862
    3. ' for' → logprob: -4.887234687805176
    4. '
' → logprob: -6.887234687805176
    5. '```' → logprob: -7.512234687805176
    6. '\n' → logprob: -7.637234687805176
    7. '

' → logprob: -7.637234687805176
    8. '' → logprob: -10.137234687805176
    9. 'def' → logprob: -10.387234687805176
    10. ' 
' → logprob: -10.512234687805176

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022964231902733445
    2. ' for' → logprob: -8.500229835510254
    3. '
' → logprob: -11.250229835510254
    4. 'i' → logprob: -12.500229835510254
    5. '```' → logprob: -12.625229835510254
    6. 'import' → logprob: -13.000229835510254
    7. '\n' → logprob: -13.750229835510254
    8. '
' → logprob: -14.000229835510254
    9. 'def' → logprob: -14.250229835510254
    10. '' → logprob: -14.875229835510254

Token 32: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.388650506734848
    2. ' i' → logprob: -1.1386505365371704
    3. ' _' → logprob: -6.763650417327881
    4. '  ' → logprob: -7.763650417327881
    5. 'i' → logprob: -8.888650894165039
    6. '_' → logprob: -10.888650894165039
    7. ' space' → logprob: -11.763650894165039
    8. ' p' → logprob: -12.138650894165039
    9. ' range' → logprob: -12.513650894165039
    10. ' (' → logprob: -12.513650894165039

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003519414458423853
    2. 'in' → logprob: -6.003519535064697
    3. ' ' → logprob: -6.878519535064697
    4. '  ' → logprob: -12.503519058227539
    5. ' i' → logprob: -13.128519058227539
    6. '	in' → logprob: -13.378519058227539
    7. '2' → logprob: -13.753519058227539
    8. 'n' → logprob: -13.878519058227539
    9. '1' → logprob: -14.003519058227539
    10. 'range' → logprob: -14.128519058227539

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014374220743775368
    2. 'range' → logprob: -4.264374256134033
    3. ' ' → logprob: -8.514373779296875
    4. '2' → logprob: -11.889373779296875
    5. '(range' → logprob: -13.389373779296875
    6. '	range' → logprob: -13.889373779296875
    7. ' xrange' → logprob: -14.764373779296875
    8. '  ' → logprob: -15.889373779296875
    9. ' in' → logprob: -16.514373779296875
    10. '(' → logprob: -17.014373779296875

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008622690802440047
    2. ' ' → logprob: -7.375862121582031
    3. '2' → logprob: -8.875862121582031
    4. ' (' → logprob: -9.250862121582031
    5. '(
' → logprob: -17.25086212158203
    6. '```' → logprob: -17.87586212158203
    7. '  ' → logprob: -19.37586212158203
    8. '[' → logprob: -19.50086212158203
    9. '	' → logprob: -19.75086212158203
    10. '\(' → logprob: -20.00086212158203

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -17.127185821533203
    4. '  ' → logprob: -17.752185821533203
    5. '	' → logprob: -18.627185821533203
    6. '２' → logprob: -19.002185821533203
    7. '(' → logprob: -19.502185821533203
    8. ')' → logprob: -19.502185821533203
    9. '۲' → logprob: -19.627185821533203
    10. '```' → logprob: -19.752185821533203

Token 37: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01857842691242695
    2. ' ,' → logprob: -4.39357852935791
    3. ' )' → logprob: -5.89357852935791
    4. ')' → logprob: -5.89357852935791
    5. ' ' → logprob: -7.64357852935791
    6. ',)' → logprob: -11.39357852935791
    7. ' in' → logprob: -11.76857852935791
    8. '+' → logprob: -12.26857852935791
    9. ' to' → logprob: -12.26857852935791
    10. '2' → logprob: -12.51857852935791

Token 38: '(MAX' (ID: 129209)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3142906725406647
    2. '(MAX' → logprob: -1.3142906427383423
    3. '((' → logprob: -7.564290523529053
    4. '(s' → logprob: -8.314291000366211
    5. ' (' → logprob: -9.189291000366211
    6. '(i' → logprob: -10.189291000366211
    7. '(M' → logprob: -10.189291000366211
    8. '(len' → logprob: -10.814291000366211
    9. '(max' → logprob: -10.939291000366211
    10. '(
' → logprob: -11.064291000366211

Token 39: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0031188949942588806
    2. '(' → logprob: -6.378118991851807
    3. ' **' → logprob: -7.253118991851807
    4. '*' → logprob: -8.753118515014648
    5. ''s' → logprob: -9.003118515014648
    6. '0' → logprob: -9.128118515014648
    7. '.sqrt' → logprob: -9.628118515014648
    8. '1' → logprob: -9.753118515014648
    9. ' ' → logprob: -10.503118515014648
    10. '.' → logprob: -10.753118515014648

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019460011390037835
    2. '.' → logprob: -8.625194549560547
    3. ' ' → logprob: -11.125194549560547
    4. ' .' → logprob: -15.875194549560547
    5. '(' → logprob: -16.625194549560547
    6. ' ' → logprob: -20.500194549560547
    7. '```' → logprob: -21.375194549560547
    8. '50' → logprob: -21.500194549560547
    9. '2' → logprob: -21.750194549560547
    10. '  ' → logprob: -22.125194549560547

Token 41: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.246537173457909e-06
    2. '0' → logprob: -13.625003814697266
    3. '5' → logprob: -13.625003814697266
    4. ' .' → logprob: -15.000003814697266
    5. '```' → logprob: -15.000003814697266
    6. '50' → logprob: -15.375003814697266
    7. '1' → logprob: -16.000003814697266
    8. '`.' → logprob: -16.000003814697266
    9. '2' → logprob: -16.125003814697266
    10. ''.' → logprob: -16.812503814697266

Token 42: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.491498531133402e-06
    2. '```' → logprob: -12.500009536743164
    3. '.' → logprob: -13.312509536743164
    4. '``' → logprob: -14.437509536743164
    5. '0' → logprob: -14.562509536743164
    6. '25' → logprob: -15.125009536743164
    7. '4' → logprob: -15.125009536743164
    8. 'five' → logprob: -15.750009536743164
    9. '   ' → logprob: -15.937509536743164
    10. '**' → logprob: -16.062509536743164

Token 43: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.2499140053987503
    2. '+' → logprob: -1.6249140501022339
    3. ')' → logprob: -4.124914169311523
    4. '()+' → logprob: -4.999914169311523
    5. '(' → logprob: -7.499914169311523
    6. ' +' → logprob: -7.499914169311523
    7. '}+' → logprob: -9.749914169311523
    8. '()' → logprob: -9.874914169311523
    9. ']+' → logprob: -10.999914169311523
    10. ')+(' → logprob: -11.249914169311523

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003178306156769395
    2. ' ' → logprob: -5.753178119659424
    3. '2' → logprob: -15.128178596496582
    4. '```' → logprob: -16.003177642822266
    5. ' ' → logprob: -16.628177642822266
    6. '(' → logprob: -16.878177642822266
    7. '  ' → logprob: -17.003177642822266
    8. ')' → logprob: -17.378177642822266
    9. '   ' → logprob: -17.815677642822266
    10. '' → logprob: -18.503177642822266

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10086039453744888
    2. ':' → logprob: -2.350860357284546
    3. ')' → logprob: -7.475860595703125
    4. ' ):' → logprob: -10.350860595703125
    5. '):
' → logprob: -10.350860595703125
    6. ':)' → logprob: -11.600860595703125
    7. ' :' → logprob: -12.850860595703125
    8. ',' → logprob: -12.975860595703125
    9. ':**' → logprob: -12.975860595703125
    10. '}:' → logprob: -13.850860595703125

Token 46: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23823769390583038
    2. '   ' → logprob: -1.863237738609314
    3. ' ' → logprob: -3.2382376194000244
    4. ' :' → logprob: -4.9882378578186035
    5. ' if' → logprob: -5.6132378578186035
    6. '    ' → logprob: -5.7382378578186035
    7. '  ' → logprob: -6.4882378578186035
    8. ':
' → logprob: -6.8632378578186035
    9. '<|end|>' → logprob: -7.1132378578186035
    10. ' :
' → logprob: -8.613237380981445

Token 47: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03025706857442856
    2. '<|end|>' → logprob: -4.155257225036621
    3. ' if' → logprob: -4.530257225036621
    4. '    ' → logprob: -6.780257225036621
    5. '  ' → logprob: -7.155257225036621
    6. ' 
' → logprob: -7.655257225036621
    7. '   ' → logprob: -7.655257225036621
    8. 'if' (adapté à ' if') → logprob: -8.530257225036621
    9. '<|end|>' → logprob: -10.280257225036621
    10. ' ,' → logprob: -10.280257225036621

Token 48: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.003647353034466505
    2. 'prime' → logprob: -5.628647327423096
    3. ' ' → logprob: -10.628647804260254
    4. ' ' → logprob: -10.753647804260254
    5. ' primes' → logprob: -14.253647804260254
    6. '  ' → logprob: -15.003647804260254
    7. '_prime' → logprob: -15.503647804260254
    8. ' not' → logprob: -15.503647804260254
    9. ' Prime' → logprob: -16.253646850585938
    10. ' space' → logprob: -16.503646850585938

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029756972566246986
    2. '[' → logprob: -3.529757022857666
    3. '[I' → logprob: -13.154756546020508
    4. '```' → logprob: -13.279756546020508
    5. '\[' → logprob: -13.654756546020508
    6. '[ip' → logprob: -14.779756546020508
    7. '[...]' → logprob: -15.529756546020508
    8. '[j' → logprob: -15.654756546020508
    9. '[u' → logprob: -16.654756546020508
    10. '[ii' → logprob: -16.654756546020508

Token 50: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1879422813653946
    2. ']' → logprob: -1.8129422664642334
    3. ':' → logprob: -5.1879425048828125
    4. '):' → logprob: -6.8129425048828125
    5. ']==' → logprob: -6.8129425048828125
    6. '[' → logprob: -8.937942504882812
    7. ']=' → logprob: -8.937942504882812
    8. ']):' → logprob: -10.687942504882812
    9. ':]' → logprob: -10.687942504882812
    10. ' ]' → logprob: -10.937942504882812

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39786747097969055
    2. '   ' → logprob: -2.022867441177368
    3. '    ' → logprob: -2.022867441177368
    4. ':' → logprob: -3.022867441177368
    5. ' ' → logprob: -5.147867679595947
    6. '     ' → logprob: -6.147867679595947
    7. ' for' → logprob: -6.647867679595947
    8. '    
' → logprob: -7.147867679595947
    9. '  ' → logprob: -7.397867679595947
    10. '<|end|>' → logprob: -7.522867679595947

Token 52: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01967787928879261
    2. 'for' (adapté à ' for') → logprob: -5.144678115844727
    3. '   ' → logprob: -5.269678115844727
    4. ' ' → logprob: -5.269678115844727
    5. '    ' → logprob: -6.019678115844727
    6. ' j' → logprob: -7.519678115844727
    7. '  ' → logprob: -9.644678115844727
    8. ' ' → logprob: -9.894678115844727
    9. ' i' → logprob: -10.019678115844727
    10. '       ' → logprob: -10.144678115844727

Token 53: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.47409453988075256
    2. ' j' → logprob: -0.9740945100784302
    3. ' ' → logprob: -11.22409439086914
    4. '	j' → logprob: -12.97409439086914
    5. '   ' → logprob: -13.97409439086914
    6. '    ' → logprob: -15.47409439086914
    7. '```' → logprob: -15.59909439086914
    8. ' range' → logprob: -15.72409439086914
    9. 'range' → logprob: -16.22409439086914
    10. '`' → logprob: -16.72409439086914

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06286722421646118
    2. 'in' → logprob: -2.8128671646118164
    3. ' i' → logprob: -7.312867164611816
    4. ' ' → logprob: -9.437867164611816
    5. '=i' → logprob: -9.937867164611816
    6. ' =' → logprob: -10.937867164611816
    7. '    ' → logprob: -10.937867164611816
    8. '	in' → logprob: -10.937867164611816
    9. 'i' → logprob: -11.062867164611816
    10. '=' → logprob: -11.062867164611816

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324839122593403
    2. ' range' → logprob: -3.7732484340667725
    3. '   ' → logprob: -13.398248672485352
    4. 'i' → logprob: -14.148248672485352
    5. '(range' → logprob: -15.273248672485352
    6. ' i' → logprob: -15.648248672485352
    7. ' ' → logprob: -15.898248672485352
    8. '	range' → logprob: -16.39824867248535
    9. '    ' → logprob: -17.14824867248535
    10. '  ' → logprob: -17.52324867248535

Token 56: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0018059646245092154
    2. 'i' → logprob: -6.751805782318115
    3. '(' → logprob: -7.626805782318115
    4. ' i' → logprob: -8.876806259155273
    5. ' (' → logprob: -11.876806259155273
    6. '	i' → logprob: -13.876806259155273
    7. ')' → logprob: -15.751806259155273
    8. '   ' → logprob: -15.876806259155273
    9. '*i' → logprob: -16.126806259155273
    10. '(
' → logprob: -16.751806259155273

Token 57: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0013569057919085026
    2. 'i' → logprob: -6.751357078552246
    3. '*' → logprob: -8.626357078552246
    4. '2' → logprob: -11.876357078552246
    5. ' *' → logprob: -15.376357078552246
    6. '**' → logprob: -15.876357078552246
    7. '```' → logprob: -16.50135612487793
    8. '*j' → logprob: -17.37635612487793
    9. ' i' → logprob: -18.25135612487793
    10. '*=' → logprob: -19.00135612487793

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002802855451591313
    2. ' ,' → logprob: -8.250280380249023
    3. '(MAX' → logprob: -11.500280380249023
    4. 'MAX' → logprob: -12.250280380249023
    5. ',max' → logprob: -13.125280380249023
    6. ' MAX' → logprob: -14.500280380249023
    7. ',
' → logprob: -14.875280380249023
    8. ',len' → logprob: -15.250280380249023
    9. '[MAX' → logprob: -15.375280380249023
    10. '   ' → logprob: -15.750280380249023

Token 59: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0067234220914542675
    2. ' MAX' → logprob: -5.006723403930664
    3. '(MAX' → logprob: -11.756723403930664
    4. '   ' → logprob: -15.756723403930664
    5. '/MAX' → logprob: -17.756723403930664
    6. '_MAX' → logprob: -17.881723403930664
    7. ' ' → logprob: -18.381723403930664
    8. 'max' → logprob: -18.631723403930664
    9. '[MAX' → logprob: -18.631723403930664
    10. '    ' → logprob: -18.881723403930664

Token 60: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.054500666621607e-06
    2. ' +' → logprob: -12.75000286102295
    3. '+
' → logprob: -16.625003814697266
    4. '```' → logprob: -18.125003814697266
    5. '+i' → logprob: -18.625003814697266
    6. '1' → logprob: -18.875003814697266
    7. '+,' → logprob: -19.375003814697266
    8. ',' → logprob: -19.875003814697266
    9. '+j' → logprob: -20.000003814697266
    10. '＋' → logprob: -20.375003814697266

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '+' → logprob: -16.375
    4. '```' → logprob: -17.875
    5. ',' → logprob: -18.125
    6. '   ' → logprob: -18.625
    7. 'i' → logprob: -20.875
    8. '１' → logprob: -21.0
    9. ',i' → logprob: -21.5
    10. '  ' → logprob: -21.5

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20159147679805756
    2. ',i' → logprob: -1.7015914916992188
    3. ' ,' → logprob: -8.826591491699219
    4. ' i' → logprob: -11.076591491699219
    5. 'i' → logprob: -11.451591491699219
    6. ',j' → logprob: -13.451591491699219
    7. '   ' → logprob: -13.451591491699219
    8. ':i' → logprob: -13.951591491699219
    9. '(i' → logprob: -14.451591491699219
    10. '```' → logprob: -15.826591491699219

Token 63: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061970602720975876
    2. ' i' → logprob: -2.8119707107543945
    3. '	i' → logprob: -13.061970710754395
    4. '   ' → logprob: -15.061970710754395
    5. ')i' → logprob: -15.436970710754395
    6. ' ' → logprob: -15.811970710754395
    7. ')' → logprob: -16.061969757080078
    8. '*i' → logprob: -18.061969757080078
    9. '  ' → logprob: -18.436969757080078
    10. '_i' → logprob: -19.186969757080078

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00025311444187536836
    2. ')' → logprob: -8.750252723693848
    3. '):
' → logprob: -9.500252723693848
    4. ' ):' → logprob: -11.500252723693848
    5. ':' → logprob: -11.750252723693848
    6. ',' → logprob: -14.500252723693848
    7. ']:' → logprob: -14.875252723693848
    8. '):
' → logprob: -15.375252723693848
    9. ')：' → logprob: -16.375253677368164
    10. '}:' → logprob: -16.625253677368164

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019614169374108315
    2. ' prime' → logprob: -4.019614219665527
    3. 'prime' → logprob: -6.644614219665527
    4. '               ' → logprob: -9.144614219665527
    5. ' ' → logprob: -11.394614219665527
    6. '       ' → logprob: -12.019614219665527
    7. '          ' → logprob: -12.019614219665527
    8. '            
' → logprob: -12.144614219665527
    9. '            ' → logprob: -12.269614219665527
    10. '                   ' → logprob: -12.394614219665527

Token 66: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' (adapté à ' prime') → logprob: -0.029968589544296265
    2. ' prime' → logprob: -3.529968500137329
    3. '           ' → logprob: -8.90496826171875
    4. '               ' → logprob: -9.90496826171875
    5. '   ' → logprob: -11.40496826171875
    6. 'prim' → logprob: -12.02996826171875
    7. '_prime' → logprob: -12.40496826171875
    8. 'pr' → logprob: -12.40496826171875
    9. ' ' → logprob: -13.02996826171875
    10. '                   ' → logprob: -13.77996826171875

Token 67: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.860340752406046e-05
    2. '[' → logprob: -9.7500581741333
    3. '[i' → logprob: -16.000059127807617
    4. ' [' → logprob: -17.500059127807617
    5. '\[' → logprob: -17.750059127807617
    6. '[J' → logprob: -17.875059127807617
    7. '[js' → logprob: -18.125059127807617
    8. '```' → logprob: -18.250059127807617
    9. '[...]' → logprob: -19.375059127807617
    10. ''[' → logprob: -20.500059127807617

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001951945130713284
    2. ']=' → logprob: -6.251952171325684
    3. ' ]' → logprob: -11.251952171325684
    4. '=' → logprob: -11.501952171325684
    5. ')' → logprob: -16.626951217651367
    6. ' =' → logprob: -16.751951217651367
    7. ']==' → logprob: -17.126951217651367
    8. '=False' → logprob: -18.376951217651367
    9. ']
' → logprob: -19.001951217651367
    10. ']

' → logprob: -19.626951217651367

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10025358200073242
    2. ' =' → logprob: -2.3502535820007324
    3. '=False' → logprob: -9.97525405883789
    4. '=True' → logprob: -14.97525405883789
    5. '＝' → logprob: -17.22525405883789
    6. ']=' → logprob: -17.60025405883789
    7. 'False' → logprob: -17.72525405883789
    8. ']' → logprob: -18.35025405883789
    9. '=

' → logprob: -18.35025405883789
    10. '=false' → logprob: -18.60025405883789

Token 70: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.029750484973192215
    2. ' False' → logprob: -3.5297505855560303
    3. '(False' → logprob: -18.40475082397461
    4. '=False' → logprob: -20.02975082397461
    5. '.False' → logprob: -21.15475082397461
    6. 'F' → logprob: -21.77975082397461
    7. '_false' → logprob: -22.77975082397461
    8. ' ' → logprob: -23.27975082397461
    9. ' ' → logprob: -23.77975082397461
    10. 'Falsy' → logprob: -23.90475082397461

Token 71: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39458712935447693
    2. '\n' → logprob: -2.5195870399475098
    3. '<|end|>' → logprob: -2.6445870399475098
    4. '#' → logprob: -2.8945870399475098
    5. 'def' → logprob: -3.3945870399475098
    6. '

' → logprob: -3.5195870399475098
    7. 'n' → logprob: -4.14458703994751
    8. '
            
' → logprob: -4.51958703994751
    9. 'print' → logprob: -4.76958703994751
    10. '```' → logprob: -5.64458703994751

Token 72: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4923604428768158
    2. 'n' → logprob: -0.9923604726791382
    3. 'for' → logprob: -5.242360591888428
    4. 'print' → logprob: -5.617360591888428
    5. 'count' → logprob: -6.117360591888428
    6. 'num' → logprob: -6.367360591888428
    7. '#' → logprob: -7.242360591888428
    8. 'N' → logprob: -7.742360591888428
    9. '```' → logprob: -8.11736011505127
    10. '
' → logprob: -8.11736011505127

Token 73: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.39163118600845337
    2. ' ' → logprob: -1.1416311264038086
    3. 'i' → logprob: -5.766631126403809
    4. '  ' → logprob: -7.016631126403809
    5. ' _' → logprob: -7.766631126403809
    6. '_' → logprob: -8.516631126403809
    7. ' space' → logprob: -10.891631126403809
    8. ' num' → logprob: -11.141631126403809
    9. ' ‌' → logprob: -11.266631126403809
    10. ' n' → logprob: -11.641631126403809

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016128914430737495
    2. 'in' → logprob: -4.141129016876221
    3. ' ' → logprob: -10.516128540039062
    4. ':' → logprob: -11.141128540039062
    5. '[' → logprob: -11.266128540039062
    6. 's' → logprob: -11.891128540039062
    7. '[:]' → logprob: -12.641128540039062
    8. 'import' → logprob: -12.766128540039062
    9. '(' → logprob: -12.766128540039062
    10. '  ' → logprob: -13.016128540039062

Token 75: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1602834314107895
    2. 'sys' → logprob: -1.9102834463119507
    3. '=sys' → logprob: -9.910283088684082
    4. '(sys' → logprob: -12.285283088684082
    5. '	sys' → logprob: -12.535283088684082
    6. 's' → logprob: -14.285283088684082
    7. 'stdin' → logprob: -15.535283088684082
    8. '```' → logprob: -16.1602840423584
    9. ' ' → logprob: -16.4102840423584
    10. ' iter' → logprob: -16.5352840423584

Token 76: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0021301566157490015
    2. '.readline' → logprob: -6.877130031585693
    3. '.' → logprob: -7.002130031585693
    4. 'stdin' → logprob: -8.877130508422852
    5. '.stdout' → logprob: -10.627130508422852
    6. '.readlines' → logprob: -11.877130508422852
    7. '.argv' → logprob: -12.377130508422852
    8. '(stdin' → logprob: -12.502130508422852
    9. 'input' → logprob: -13.127130508422852
    10. '.input' → logprob: -13.252130508422852

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014578061178326607
    2. '.readline' → logprob: -4.264577865600586
    3. '.readlines' → logprob: -8.764577865600586
    4. ':
' → logprob: -9.264577865600586
    5. ' in' → logprob: -9.889577865600586
    6. '.' → logprob: -10.389577865600586
    7. ' :' → logprob: -11.389577865600586
    8. '):' → logprob: -11.514577865600586
    9. '.strip' → logprob: -11.639577865600586
    10. ' readline' → logprob: -11.639577865600586

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008729901164770126
    2. '    
' → logprob: -7.25087308883667
    3. ' line' → logprob: -9.500872611999512
    4. '```' → logprob: -11.125872611999512
    5. ' if' → logprob: -11.250872611999512
    6. ' readline' → logprob: -11.375872611999512
    7. '    ' → logprob: -11.500872611999512
    8. ' print' → logprob: -11.625872611999512
    9. ' tokens' → logprob: -12.000872611999512
    10. ' ' → logprob: -13.000872611999512

Token 79: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05641070380806923
    2. 'n' (adapté à ' n') → logprob: -2.931410789489746
    3. '   ' → logprob: -6.681410789489746
    4. ' x' → logprob: -9.056410789489746
    5. ' num' → logprob: -10.181410789489746
    6. 'x' → logprob: -10.306410789489746
    7. ' a' → logprob: -10.431410789489746
    8. 'a' → logprob: -11.431410789489746
    9. 'num' → logprob: -11.431410789489746
    10. ' number' → logprob: -11.931410789489746

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806249052286148
    2. '=' → logprob: -3.288062572479248
    3. '=int' → logprob: -11.03806209564209
    4. ' ' → logprob: -12.66306209564209
    5. ' =
' → logprob: -14.03806209564209
    6. ',' → logprob: -14.53806209564209
    7. '  ' → logprob: -15.66306209564209
    8. ')' → logprob: -16.288063049316406
    9. ' =)' → logprob: -16.788063049316406
    10. '=

' → logprob: -16.913063049316406

Token 81: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014164801687002182
    2. ' int' → logprob: -4.264164924621582
    3. '=int' → logprob: -14.764164924621582
    4. '   ' → logprob: -15.014164924621582
    5. '[int' → logprob: -15.389164924621582
    6. '(int' → logprob: -15.389164924621582
    7. 'len' → logprob: -16.264163970947266
    8. ' ' → logprob: -17.014163970947266
    9. '<int' → logprob: -17.139163970947266
    10. 'line' → logprob: -17.264163970947266

Token 82: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.061970602720975876
    2. '(' → logprob: -2.8119707107543945
    3. '(n' → logprob: -13.811970710754395
    4. 'line' → logprob: -14.311970710754395
    5. ' (' → logprob: -15.061970710754395
    6. ' line' → logprob: -15.811970710754395
    7. '(
' → logprob: -15.811970710754395
    8. '=line' → logprob: -16.061969757080078
    9. '	line' → logprob: -16.311969757080078
    10. '#line' → logprob: -16.311969757080078

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07074721902608871
    2. '.strip' → logprob: -2.695747137069702
    3. '.rstrip' → logprob: -7.195747375488281
    4. '.readline' → logprob: -10.695747375488281
    5. 'rstrip' → logprob: -11.445747375488281
    6. 'strip' → logprob: -11.820747375488281
    7. '())' → logprob: -11.820747375488281
    8. ' )' → logprob: -13.070747375488281
    9. '))' → logprob: -13.445747375488281
    10. '')' → logprob: -13.570747375488281

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009156247251667082
    2. '    
' → logprob: -7.62591552734375
    3. '    ' → logprob: -9.00091552734375
    4. ' if' → logprob: -9.12591552734375
    5. 'if' → logprob: -9.25091552734375
    6. '
' → logprob: -10.87591552734375
    7. '     
' → logprob: -11.37591552734375
    8. '   
' → logprob: -11.50091552734375
    9. '```' → logprob: -11.50091552734375
    10. ' for' → logprob: -11.75091552734375

Token 85: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6835309863090515
    2. 'for' → logprob: -1.4335310459136963
    3. ' if' → logprob: -2.1835310459136963
    4. ' for' → logprob: -3.1835310459136963
    5. 'count' → logprob: -3.3085310459136963
    6. 'found' → logprob: -3.6835310459136963
    7. '   ' → logprob: -4.183530807495117
    8. ' found' → logprob: -4.933530807495117
    9. ' count' → logprob: -5.183530807495117
    10. 'result' → logprob: -6.308530807495117

Token 86: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.012073138728737831
    2. 'n' → logprob: -5.137073040008545
    3. ' prime' → logprob: -5.262073040008545
    4. ' ' → logprob: -7.637073040008545
    5. ' not' → logprob: -8.387073516845703
    6. 'prime' → logprob: -8.887073516845703
    7. ' any' → logprob: -10.637073516845703
    8. ' primes' → logprob: -11.012073516845703
    9. '  ' → logprob: -11.387073516845703
    10. '	n' → logprob: -11.512073516845703

Token 87: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.0315886735916138
    2. ' ==' → logprob: -1.4065886735916138
    3. ' <=' → logprob: -2.031588554382324
    4. ' %' → logprob: -2.281588554382324
    5. ' <' → logprob: -2.531588554382324
    6. '%' → logprob: -3.031588554382324
    7. '==' → logprob: -4.531588554382324
    8. '>' → logprob: -4.531588554382324
    9. ' >=' → logprob: -5.031588554382324
    10. ' ' → logprob: -5.656588554382324

Token 88: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38687264919281006
    2. '0' → logprob: -1.13687264919281
    3. ' ' → logprob: -14.511872291564941
    4. ' -' → logprob: -14.886872291564941
    5. '  ' → logprob: -15.636872291564941
    6. '-' → logprob: -16.011873245239258
    7. '_' → logprob: -16.074373245239258
    8. '1' → logprob: -16.449373245239258
    9. '=' → logprob: -17.136873245239258
    10. '۰' → logprob: -17.261873245239258

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011786778923124075
    2. ' ' → logprob: -6.751178741455078
    3. '-' → logprob: -11.876178741455078
    4. ' -' → logprob: -14.376178741455078
    5. '   ' → logprob: -15.563678741455078
    6. '1' → logprob: -15.813678741455078
    7. '  ' → logprob: -16.438678741455078
    8. '```' → logprob: -16.438678741455078
    9. '۰' → logprob: -16.563678741455078
    10. '_' → logprob: -17.063678741455078

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003318403847515583
    2. ':
' → logprob: -5.8783183097839355
    3. ' :' → logprob: -8.128318786621094
    4. '   ' → logprob: -8.503318786621094
    5. ' :
' → logprob: -11.753318786621094
    6. '       ' → logprob: -12.628318786621094
    7. ':return' → logprob: -13.253318786621094
    8. '    ' → logprob: -13.878318786621094
    9. '  ' → logprob: -15.003318786621094
    10. ' ' → logprob: -15.128318786621094

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002158146962756291
    2. '   ' → logprob: -8.500215530395508
    3. '    ' → logprob: -12.875215530395508
    4. ' break' → logprob: -13.125215530395508
    5. '	' → logprob: -13.625215530395508
    6. ' ' → logprob: -13.875215530395508
    7. '     ' → logprob: -13.875215530395508
    8. '	break' → logprob: -14.250215530395508
    9. '	   ' → logprob: -14.500215530395508
    10. '      ' → logprob: -14.750215530395508

Token 92: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.4240894019603729
    2. 'break' (adapté à ' break') → logprob: -1.7990894317626953
    3. '   ' → logprob: -2.2990894317626953
    4. '       ' → logprob: -2.5490894317626953
    5. '	break' → logprob: -6.424089431762695
    6. '           ' → logprob: -10.799089431762695
    7. '```' → logprob: -11.799089431762695
    8. ' ' → logprob: -11.924089431762695
    9. '_break' → logprob: -12.174089431762695
    10. 'b' → logprob: -12.549089431762695

Token 93: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4452010989189148
    2. '    
' → logprob: -1.4452011585235596
    3. '<|end|>' → logprob: -2.8202011585235596
    4. '
' → logprob: -3.6952011585235596
    5. '  
' → logprob: -4.3202009201049805
    6. ' 
' → logprob: -4.9452009201049805
    7. '   
' → logprob: -5.1952009201049805
    8. '<|end|>' → logprob: -5.3202009201049805
    9. '    ' → logprob: -5.9452009201049805
    10. ' ' → logprob: -7.1952009201049805

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14842624962329865
    2. '    
' → logprob: -2.0234262943267822
    3. ' 
' → logprob: -6.773426055908203
    4. '    ' → logprob: -6.773426055908203
    5. '
' → logprob: -7.023426055908203
    6. '<|end|>' → logprob: -7.273426055908203
    7. '   
' → logprob: -7.648426055908203
    8. '     
' → logprob: -7.648426055908203
    9. '\n' → logprob: -8.898426055908203
    10. 'print' → logprob: -9.023426055908203

Token 95: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34833285212516785
    2. ' for' → logprob: -2.2233328819274902
    3. '    
' → logprob: -2.4733328819274902
    4. '    ' → logprob: -3.5983328819274902
    5. 'for' → logprob: -3.8483328819274902
    6. ' 
' → logprob: -4.34833288192749
    7. '   
' → logprob: -4.47333288192749
    8. ' found' → logprob: -4.59833288192749
    9. 'count' (adapté à ' count') → logprob: -5.34833288192749
    10. '     
' → logprob: -5.59833288192749

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028526538982987404
    2. '=' → logprob: -3.778526544570923
    3. ' ' → logprob: -5.278526306152344
    4. '(' → logprob: -9.528526306152344
    5. ',' → logprob: -10.403526306152344
    6. ' +=' → logprob: -11.028526306152344
    7. '  ' → logprob: -11.528526306152344
    8. '_' → logprob: -11.903526306152344
    9. '    ' → logprob: -12.028526306152344
    10. ')' → logprob: -12.278526306152344

Token 97: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0380566380918026
    2. ' ' → logprob: -3.2880566120147705
    3. '1' → logprob: -12.413056373596191
    4. 'sum' → logprob: -12.413056373596191
    5. ' sum' → logprob: -13.038056373596191
    6. 'prime' → logprob: -13.163056373596191
    7. ' prime' → logprob: -13.913056373596191
    8. '2' → logprob: -14.788056373596191
    9. '   ' → logprob: -15.163056373596191
    10. ' ' → logprob: -15.163056373596191

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031067515374161303
    2. ' ' → logprob: -8.125310897827148
    3. 'sum' → logprob: -11.625310897827148
    4. '1' → logprob: -12.875310897827148
    5. '2' → logprob: -13.625310897827148
    6. 'prime' → logprob: -14.000310897827148
    7. ' sum' → logprob: -15.375310897827148
    8. '[' → logprob: -15.625310897827148
    9. '   ' → logprob: -15.750310897827148
    10. '3' → logprob: -16.43781089782715

Token 99: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4311296343803406
    2. '<|end|>' → logprob: -1.0561296939849854
    3. '<|end|>' → logprob: -6.806129455566406
    4. '    ' → logprob: -7.806129455566406
    5. ' 
' → logprob: -8.181129455566406
    6. '  ' → logprob: -8.431129455566406
    7. ' for' → logprob: -8.806129455566406
    8. '   ' → logprob: -9.056129455566406
    9. ' ,' → logprob: -10.931129455566406
    10. '    
' → logprob: -11.306129455566406

Token 100: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2502145767211914
    2. '<|end|>' → logprob: -2.1252145767211914
    3. '   ' → logprob: -2.8752145767211914
    4. '    ' → logprob: -3.3752145767211914
    5. ' 
' → logprob: -5.375214576721191
    6. ' for' → logprob: -6.000214576721191
    7. '    
' → logprob: -6.750214576721191
    8. '  ' → logprob: -7.000214576721191
    9. '<|end|>' → logprob: -7.125214576721191
    10. '     
' → logprob: -7.750214576721191

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760596990585327
    2. 'for' (adapté à ' for') → logprob: -0.8260596990585327
    3. '   ' → logprob: -9.826059341430664
    4. ' i' → logprob: -10.576059341430664
    5. '    ' → logprob: -11.326059341430664
    6. ' ' → logprob: -11.451059341430664
    7. 'i' → logprob: -11.826059341430664
    8. '```' → logprob: -12.701059341430664
    9. '<|end|>' → logprob: -13.326059341430664
    10. '  ' → logprob: -14.076059341430664

Token 102: ' p' (ID: 275)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1479591727256775
    2. 'i' → logprob: -2.0229592323303223
    3. ' num' → logprob: -6.397959232330322
    4. ' p' → logprob: -6.522959232330322
    5. ' x' → logprob: -7.022959232330322
    6. 'x' → logprob: -8.022958755493164
    7. 'p' → logprob: -8.522958755493164
    8. 'a' → logprob: -8.772958755493164
    9. 'num' → logprob: -8.772958755493164
    10. ' ' → logprob: -9.397958755493164

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005262930411845446
    2. 'in' → logprob: -5.255262851715088
    3. ' ' → logprob: -11.130263328552246
    4. '  ' → logprob: -12.755263328552246
    5. 'i' → logprob: -13.005263328552246
    6. 'range' → logprob: -13.005263328552246
    7. ' i' → logprob: -13.130263328552246
    8. '   ' → logprob: -13.380263328552246
    9. 'p' → logprob: -13.880263328552246
    10. 'n' → logprob: -14.880263328552246

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008684655651450157
    2. ' range' → logprob: -4.7586846351623535
    3. '[' → logprob: -10.258685111999512
    4. '(range' → logprob: -11.008685111999512
    5. '	range' → logprob: -12.258685111999512
    6. 'r' → logprob: -12.633685111999512
    7. '[i' → logprob: -12.633685111999512
    8. ' ' → logprob: -13.258685111999512
    9. '   ' → logprob: -13.383685111999512
    10. '[r' → logprob: -13.633685111999512

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05913740396499634
    2. '(n' → logprob: -3.0591373443603516
    3. '2' → logprob: -4.559137344360352
    4. 'n' → logprob: -11.434137344360352
    5. ' (' → logprob: -12.559137344360352
    6. '(max' → logprob: -12.684137344360352
    7. '(len' → logprob: -13.309137344360352
    8. '[n' → logprob: -13.809137344360352
    9. '((' → logprob: -13.934137344360352
    10. ' ' → logprob: -14.309137344360352

Token 106: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009866109117865562
    2. 'n' → logprob: -4.634866237640381
    3. ' ' → logprob: -9.384865760803223
    4. ' n' → logprob: -11.634865760803223
    5. '(' → logprob: -12.634865760803223
    6. '3' → logprob: -12.759865760803223
    7. '(n' → logprob: -12.884865760803223
    8. '1' → logprob: -12.884865760803223
    9. '   ' → logprob: -13.009865760803223
    10. 'max' → logprob: -13.509865760803223

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2206031233072281
    2. ',n' → logprob: -1.720603108406067
    3. ' ,' → logprob: -3.9706032276153564
    4. 'n' → logprob: -8.970602989196777
    5. '   ' → logprob: -11.845602989196777
    6. ',len' → logprob: -12.595602989196777
    7. ' n' → logprob: -13.595602989196777
    8. ',(' → logprob: -13.720602989196777
    9. ',p' → logprob: -13.845602989196777
    10. ',max' → logprob: -13.970602989196777

Token 108: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004156568902544677
    2. '(n' → logprob: -8.250415802001953
    3. ' n' → logprob: -9.125415802001953
    4. '   ' → logprob: -10.500415802001953
    5. '(' → logprob: -11.250415802001953
    6. '	n' → logprob: -12.875415802001953
    7. ' (' → logprob: -13.375415802001953
    8. ' ' → logprob: -15.125415802001953
    9. 'len' → logprob: -16.125415802001953
    10. '
' → logprob: -16.375415802001953

Token 109: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0028280578553676605
    2. ' //' → logprob: -5.877828121185303
    3. '):' → logprob: -11.127827644348145
    4. '):
' → logprob: -12.002827644348145
    5. '   ' → logprob: -14.127827644348145
    6. ' ' → logprob: -14.627827644348145
    7. '
' → logprob: -15.002827644348145
    8. '+' → logprob: -15.002827644348145
    9. ')' → logprob: -16.12782859802246
    10. '

' → logprob: -16.37782859802246

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.250036239624023
    3. '1' → logprob: -14.000036239624023
    4. '```' → logprob: -16.000036239624023
    5. '   ' → logprob: -17.250036239624023
    6. ')' → logprob: -17.375036239624023
    7. '

' → logprob: -18.125036239624023
    8. '
' → logprob: -18.750036239624023
    9. '`' → logprob: -19.312536239624023
    10. '２' → logprob: -19.437536239624023

Token 111: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06197004392743111
    2. ' +' → logprob: -2.8119699954986572
    3. ' ' → logprob: -13.811969757080078
    4. ')+' → logprob: -14.311969757080078
    5. '   ' → logprob: -15.186969757080078
    6. '```' → logprob: -15.686969757080078
    7. '＋' → logprob: -16.061969757080078
    8. ')' → logprob: -16.186969757080078
    9. '+n' → logprob: -16.686969757080078
    10. '1' → logprob: -17.061969757080078

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8444881536415778e-05
    2. ' ' → logprob: -10.500028610229492
    3. '2' → logprob: -14.250028610229492
    4. '   ' → logprob: -15.625028610229492
    5. '+' → logprob: -16.875028610229492
    6. '  ' → logprob: -17.125028610229492
    7. '```' → logprob: -17.250028610229492
    8. ')' → logprob: -18.062528610229492
    9. '

' → logprob: -19.125028610229492
    10. '    ' → logprob: -19.125028610229492

Token 113: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11450909078121185
    2. '):' → logprob: -2.239509105682373
    3. '):
' → logprob: -6.989509105682373
    4. ' ):
' → logprob: -7.614509105682373
    5. '   ' → logprob: -8.739508628845215
    6. ')' → logprob: -9.989508628845215
    7. ':' → logprob: -10.489508628845215
    8. ' ):' → logprob: -11.114508628845215
    9. ':
' → logprob: -11.864508628845215
    10. '):

' → logprob: -12.614508628845215

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017108784522861242
    2. '<|end|>' → logprob: -6.626710891723633
    3. '   ' → logprob: -8.626710891723633
    4. ' ' → logprob: -9.251710891723633
    5. '    ' → logprob: -10.126710891723633
    6. ' if' → logprob: -10.876710891723633
    7. '        
' → logprob: -10.876710891723633
    8. '      ' → logprob: -11.876710891723633
    9. '<|end|>' → logprob: -12.251710891723633
    10. '    
' → logprob: -12.376710891723633

Token 115: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.471174031496048
    2. '       ' → logprob: -1.2211740016937256
    3. 'if' (adapté à ' if') → logprob: -2.5961740016937256
    4. '   ' → logprob: -5.596174240112305
    5. ' ' → logprob: -6.471174240112305
    6. '    ' → logprob: -7.221174240112305
    7. '<|end|>' → logprob: -8.971174240112305
    8. '     ' → logprob: -10.596174240112305
    9. '	if' → logprob: -10.596174240112305
    10. '```' → logprob: -10.721174240112305

Token 116: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.03817460685968399
    2. 'prime' → logprob: -3.288174629211426
    3. ' p' → logprob: -9.163174629211426
    4. 'p' → logprob: -11.788174629211426
    5. ' ' → logprob: -12.163174629211426
    6. ' ' → logprob: -12.163174629211426
    7. ' primes' → logprob: -13.163174629211426
    8. '_prime' → logprob: -13.163174629211426
    9. '   ' → logprob: -13.663174629211426
    10. 'pr' → logprob: -13.913174629211426

Token 117: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.15441757265944e-05
    2. '[' → logprob: -10.875031471252441
    3. 'p' → logprob: -12.000031471252441
    4. '[n' → logprob: -12.125031471252441
    5. '   ' → logprob: -15.000031471252441
    6. ' [' → logprob: -15.375031471252441
    7. '[i' → logprob: -16.375032424926758
    8. '[m' → logprob: -16.500032424926758
    9. '[s' → logprob: -16.625032424926758
    10. '```' → logprob: -17.250032424926758

Token 118: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1002078503370285
    2. 'and' → logprob: -2.350207805633545
    3. ' ' → logprob: -14.100208282470703
    4. '    ' → logprob: -15.350208282470703
    5. '	and' → logprob: -15.850208282470703
    6. '   ' → logprob: -17.100208282470703
    7. '```' → logprob: -17.350208282470703
    8. 'a' → logprob: -17.475208282470703
    9. '        ' → logprob: -18.225208282470703
    10. ')' → logprob: -18.225208282470703

Token 119: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5759401321411133
    2. ' and' → logprob: -0.8259401321411133
    3. ' ' → logprob: -14.950940132141113
    4. '	and' → logprob: -15.825940132141113
    5. '==' → logprob: -16.950939178466797
    6. ' ' → logprob: -17.200939178466797
    7. '    ' → logprob: -17.325939178466797
    8. 'a' → logprob: -17.450939178466797
    9. '   ' → logprob: -17.575939178466797
    10. ' a' → logprob: -17.825939178466797

Token 120: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.2812199890613556
    2. 'prime' → logprob: -1.4062199592590332
    3. '   ' → logprob: -10.281220436096191
    4. ' ' → logprob: -11.281220436096191
    5. '  ' → logprob: -11.281220436096191
    6. '    ' → logprob: -12.156220436096191
    7. '_prime' → logprob: -13.406220436096191
    8. ' primes' → logprob: -13.906220436096191
    9. 'pr' → logprob: -14.906220436096191
    10. '
' → logprob: -15.156220436096191

Token 121: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0067225913517177105
    2. '[' → logprob: -5.006722450256348
    3. ' [' → logprob: -12.756722450256348
    4. '[
' → logprob: -13.256722450256348
    5. 'n' → logprob: -14.006722450256348
    6. '```' → logprob: -14.881722450256348
    7. '[N' → logprob: -15.506722450256348
    8. '[p' → logprob: -15.631722450256348
    9. '   ' → logprob: -15.756722450256348
    10. ' ' → logprob: -15.881722450256348

Token 122: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6381941437721252
    2. ' -' → logprob: -1.1381940841674805
    3. '-p' → logprob: -1.8881940841674805
    4. ' ' → logprob: -11.63819408416748
    5. '   ' → logprob: -14.13819408416748
    6. 'p' → logprob: -14.26319408416748
    7. ' p' → logprob: -14.38819408416748
    8. '[p' → logprob: -14.88819408416748
    9. '```' → logprob: -15.26319408416748
    10. '
' → logprob: -15.38819408416748

Token 123: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.438573680294212e-06
    2. ' p' → logprob: -12.125005722045898
    3. ' ' → logprob: -20.2500057220459
    4. '   ' → logprob: -21.2500057220459
    5. '	p' → logprob: -21.3750057220459
    6. '<p' → logprob: -23.0000057220459
    7. '  ' → logprob: -23.6250057220459
    8. '[p' → logprob: -24.2500057220459
    9. ''p' → logprob: -24.6250057220459
    10. '```' → logprob: -24.7500057220459

Token 124: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0011100899428129196
    2. ']' → logprob: -7.126110076904297
    3. ']:
' → logprob: -8.126110076904297
    4. ' ]' → logprob: -12.751110076904297
    5. ']:
' → logprob: -13.001110076904297
    6. ']:

' → logprob: -13.501110076904297
    7. ':' → logprob: -14.001110076904297
    8. '']:' → logprob: -14.001110076904297
    9. '"]:' → logprob: -14.126110076904297
    10. ']>' → logprob: -15.876110076904297

Token 125: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004478066228330135
    2. '           ' → logprob: -5.5044779777526855
    3. '               ' → logprob: -8.629478454589844
    4. ':
' → logprob: -9.004478454589844
    5. '
' → logprob: -9.879478454589844
    6. ':' → logprob: -11.254478454589844
    7. '   ' → logprob: -11.754478454589844
    8. '<|end|>' → logprob: -12.129478454589844
    9. '```' → logprob: -12.629478454589844
    10. '        
' → logprob: -12.754478454589844

Token 126: ' count' (ID: 3605)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16598983108997345
    2. '       ' → logprob: -2.040989875793457
    3. 'count' (adapté à ' count') → logprob: -4.290989875793457
    4. ' count' → logprob: -4.915989875793457
    5. '           ' → logprob: -6.290989875793457
    6. '   ' → logprob: -9.165989875793457
    7. '	count' → logprob: -10.790989875793457
    8. '              ' → logprob: -11.790989875793457
    9. '
' → logprob: -12.165989875793457
    10. '      ' → logprob: -12.540989875793457

Token 127: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38732174038887024
    2. ' +=' → logprob: -1.1373217105865479
    3. '+' → logprob: -7.762321949005127
    4. ']+=' → logprob: -11.762321472167969
    5. '<|end|>' → logprob: -12.512321472167969
    6. '=' → logprob: -12.512321472167969
    7. '   ' → logprob: -13.262321472167969
    8. '++' → logprob: -13.262321472167969
    9. '```' → logprob: -13.887321472167969
    10. '.' → logprob: -14.137321472167969

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.500009536743164
    4. '```' → logprob: -19.625009536743164
    5. ' ' → logprob: -21.125009536743164
    6. '１' → logprob: -21.250009536743164
    7. '           ' → logprob: -21.250009536743164
    8. '  ' → logprob: -21.375009536743164
    9. '۱' → logprob: -22.062509536743164
    10. '	' → logprob: -22.500009536743164

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -19.125
    5. '<|end|>' → logprob: -19.75
    6. '۱' → logprob: -20.0
    7. '１' → logprob: -20.1875
    8. '
' → logprob: -20.875
    9. '१' → logprob: -21.3125
    10. '2' → logprob: -21.4375

Token 130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0764201432466507
    2. 'print' → logprob: -3.2014200687408447
    3. '
' → logprob: -3.4514200687408447
    4. '    
' → logprob: -7.451420307159424
    5. ' print' → logprob: -7.951420307159424
    6. '<|end|>' → logprob: -9.576419830322266
    7. '```' → logprob: -9.576419830322266
    8. '	print' → logprob: -10.076419830322266
    9. '  
' → logprob: -10.451419830322266
    10. '
' → logprob: -12.076419830322266

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47508326172828674
    2. 'print' → logprob: -0.9750832319259644
    3. ' print' → logprob: -7.100083351135254
    4. '
' → logprob: -8.725083351135254
    5. '```' → logprob: -11.100083351135254
    6. '
' → logprob: -13.600083351135254
    7. '	print' → logprob: -14.225083351135254
    8. '    
' → logprob: -14.850083351135254
    9. '       ' → logprob: -15.600083351135254
    10. '

' → logprob: -15.975083351135254

Token 132: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.981667537620524e-06
    2. ' print' → logprob: -13.500001907348633
    3. '```' → logprob: -14.500001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '	print' → logprob: -20.000001907348633
    6. '``' → logprob: -20.125001907348633
    7. '#print' → logprob: -20.750001907348633
    8. 'printf' → logprob: -21.125001907348633
    9. '`' → logprob: -21.500001907348633
    10. 'Print' → logprob: -22.750001907348633

Token 133: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0019294669618830085
    2. '(' → logprob: -6.25192928314209
    3. '(c' → logprob: -15.37692928314209
    4. '(cnt' → logprob: -15.37692928314209
    5. 'count' → logprob: -15.75192928314209
    6. '(f' → logprob: -15.75192928314209
    7. ' (' → logprob: -16.626930236816406
    8. '()' → logprob: -16.626930236816406
    9. '((' → logprob: -17.126930236816406
    10. '(
' → logprob: -18.001930236816406

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -16.25
    4. ')`' → logprob: -18.125
    5. '))' → logprob: -18.875
    6. '`)' → logprob: -20.75
    7. '())' → logprob: -20.875
    8. '()' → logprob: -21.0
    9. '）' → logprob: -21.125
    10. '```' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 132
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 79
Tokens correctement prédits (top 10): 121
Précision stricte (1ère position): 57.58%
Précision adaptée (1ère position): 59.85%
Précision (top 10): 91.67%
================================================================================
