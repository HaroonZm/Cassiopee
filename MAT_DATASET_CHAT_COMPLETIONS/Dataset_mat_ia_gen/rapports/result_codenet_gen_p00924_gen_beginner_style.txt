================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, M = map(int, input().split())
initial = list(map(int, input().split()))
p = list(map(int, input().split()))

def build_target(p, start_bit):
    target = []
    bit = start_bit
    for length in p:
        target += [bit] * length
        bit = 1 - bit
    return target

def count_swaps(initial, target):
    swaps = 0
    arr = initial[:]
    for i in range(len(arr)):
        if arr[i] != target[i]:
            # find where the correct bit is in arr after position i
            j = i + 1
            while j < len(arr) and arr[j] != target[i]:
                j += 1
            # bubble it to position i
            while j > i:
                arr[j], arr[j-1] = arr[j-1], arr[j]
                swaps += 1
                j -= 1
    return swaps

# try both possible starting bits
bit0 = initial[0]
target1 = build_target(p, 0)
target2 = build_target(p, 1)

# check which target is possible (same counts of bits)
from collections import Counter
count_initial = Counter(initial)
count_target1 = Counter(target1)
count_target2 = Counter(target2)

res = -1

if count_initial == count_target1:
    res = count_swaps(initial, target1)
if count_initial == count_target2:
    s = count_swaps(initial, target2)
    if res == -1 or s < res:
        res = s

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' M' (ID: 391)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.058637168258428574
    2. ',' → logprob: -3.1836371421813965
    3. ' =' → logprob: -4.1836371421813965
    4. ';' → logprob: -9.433637619018555
    5. '[' → logprob: -10.183637619018555
    6. '```' → logprob: -10.433637619018555
    7. ')' → logprob: -10.558637619018555
    8. '=
' → logprob: -10.808637619018555
    9. '.' → logprob: -11.058637619018555
    10. '#' → logprob: -11.183637619018555

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3559213876724243
    2. ' input' → logprob: -2.3559212684631348
    3. ' ' → logprob: -2.4809212684631348
    4. 'map' → logprob: -2.6059212684631348
    5. 'input' → logprob: -3.3559212684631348
    6. '10' → logprob: -4.730921268463135
    7. ' int' → logprob: -6.605921268463135
    8. ' list' → logprob: -6.980921268463135
    9. 'int' → logprob: -7.855921268463135
    10. '0' → logprob: -8.230921745300293

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07995420694351196
    2. '<|end|>' → logprob: -3.704954147338867
    3. '(lambda' → logprob: -3.829954147338867
    4. '(int' → logprob: -4.079954147338867
    5. '```' → logprob: -5.204954147338867
    6. '(str' → logprob: -5.954954147338867
    7. '<|end|>' → logprob: -6.704954147338867
    8. ')' → logprob: -7.829954147338867
    9. '()' → logprob: -8.267454147338867
    10. '(user' → logprob: -8.267454147338867

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10287677496671677
    2. '(' → logprob: -2.977876663208008
    3. ')' → logprob: -3.102876663208008
    4. '(int' → logprob: -7.352876663208008
    5. 'input' → logprob: -7.727876663208008
    6. '(user' → logprob: -8.977876663208008
    7. '(str' → logprob: -9.102876663208008
    8. '```' → logprob: -9.477876663208008
    9. ')(' → logprob: -9.852876663208008
    10. '<input' → logprob: -9.977876663208008

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06198427081108093
    2. ' input' → logprob: -2.8119843006134033
    3. '(input' → logprob: -11.061984062194824
    4. ',input' → logprob: -14.561984062194824
    5. ')' → logprob: -15.311984062194824
    6. '=input' → logprob: -16.68698501586914
    7. '```' → logprob: -16.81198501586914
    8. '	input' → logprob: -17.43698501586914
    9. '<input' → logprob: -17.43698501586914
    10. '[input' → logprob: -17.68698501586914

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.46696680784225464
    2. '()' → logprob: -1.2169668674468994
    3. '(' → logprob: -3.8419668674468994
    4. '('' → logprob: -4.34196662902832
    5. '().' → logprob: -4.34196662902832
    6. ')' → logprob: -4.46696662902832
    7. '`()' → logprob: -4.84196662902832
    8. '(""))' → logprob: -6.46696662902832
    9. '());' → logprob: -6.59196662902832
    10. '()))' → logprob: -6.71696662902832

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019783570896834135
    2. 'strip' → logprob: -6.251978397369385
    3. ')' → logprob: -10.876977920532227
    4. 'rstrip' → logprob: -11.126977920532227
    5. 'read' → logprob: -11.376977920532227
    6. ' split' → logprob: -12.501977920532227
    7. 'spl' → logprob: -14.876977920532227
    8. '(split' → logprob: -15.626977920532227
    9. 'startswith' → logprob: -15.751977920532227
    10. 'replace' → logprob: -16.001977920532227

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011635853908956051
    2. '())' → logprob: -4.761635780334473
    3. '))' → logprob: -6.011635780334473
    4. '()' → logprob: -8.136635780334473
    5. '`)' → logprob: -8.636635780334473
    6. '(' → logprob: -9.761635780334473
    7. '()))' → logprob: -11.886635780334473
    8. '')' → logprob: -12.136635780334473
    9. ')`' → logprob: -12.261635780334473
    10. '>)' → logprob: -12.761635780334473

Token 11: 'initial' (ID: 17493)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7968246936798096
    2. 'for' → logprob: -1.2968246936798096
    3. 'a' → logprob: -2.5468246936798096
    4. '#' → logprob: -3.5468246936798096
    5. '`' → logprob: -3.5468246936798096
    6. '```' → logprob: -3.5468246936798096
    7. '\' → logprob: -3.9218246936798096
    8. 'x' → logprob: -4.5468244552612305
    9. ' ' → logprob: -4.5468244552612305
    10. 's' → logprob: -4.9218244552612305

Token 12: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10015662759542465
    2. '_positions' → logprob: -2.850156545639038
    3. '_state' → logprob: -4.100156784057617
    4. '_position' → logprob: -4.725156784057617
    5. '_array' → logprob: -5.600156784057617
    6. '_pos' → logprob: -6.225156784057617
    7. '_values' → logprob: -6.475156784057617
    8. '_value' → logprob: -6.725156784057617
    9. '_states' → logprob: -7.725156784057617
    10. '_energy' → logprob: -8.225156784057617

Token 13: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06303870677947998
    2. ' list' → logprob: -3.6880388259887695
    3. 'input' → logprob: -3.8130388259887695
    4. '[input' → logprob: -5.1880388259887695
    5. '[]' → logprob: -5.5630388259887695
    6. '[' → logprob: -6.5630388259887695
    7. '[int' → logprob: -6.6880388259887695
    8. ' input' → logprob: -7.3130388259887695
    9. '[list' → logprob: -7.3130388259887695
    10. ' []' → logprob: -8.56303882598877

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003986027557402849
    2. '(range' → logprob: -6.50398588180542
    3. '```' → logprob: -7.75398588180542
    4. '`' → logprob: -7.87898588180542
    5. '((' → logprob: -8.003986358642578
    6. ' (' → logprob: -8.628986358642578
    7. '(initial' → logprob: -9.128986358642578
    8. '("("' → logprob: -9.253986358642578
    9. '(input' → logprob: -9.378986358642578
    10. '(_' → logprob: -9.503986358642578

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06226545572280884
    2. '(' → logprob: -2.812265396118164
    3. '(str' → logprob: -8.437265396118164
    4. '(input' → logprob: -10.437265396118164
    5. ')' → logprob: -11.312265396118164
    6. '(float' → logprob: -11.812265396118164
    7. '<int' → logprob: -11.937265396118164
    8. 'int' → logprob: -12.187265396118164
    9. '(
' → logprob: -12.562265396118164
    10. '[int' → logprob: -12.812265396118164

Token 16: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09825627505779266
    2. ',input' → logprob: -2.7232563495635986
    3. ',' → logprob: -3.7232563495635986
    4. '(' → logprob: -5.5982561111450195
    5. '=input' → logprob: -10.72325611114502
    6. 'input' → logprob: -10.97325611114502
    7. ' ,' → logprob: -11.84825611114502
    8. ' (' → logprob: -12.72325611114502
    9. '```' → logprob: -12.84825611114502
    10. '(),' → logprob: -12.97325611114502

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740866422653198
    2. ' input' → logprob: -0.9740866422653198
    3. '(input' → logprob: -12.47408676147461
    4. ',input' → logprob: -12.97408676147461
    5. '=input' → logprob: -13.84908676147461
    6. '	input' → logprob: -13.97408676147461
    7. ')' → logprob: -14.72408676147461
    8. '_input' → logprob: -14.84908676147461
    9. '<input' → logprob: -14.84908676147461
    10. '[input' → logprob: -15.59908676147461

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1527692824602127
    2. '()' → logprob: -2.1527693271636963
    3. '(' → logprob: -4.152769088745117
    4. '()))' → logprob: -5.652769088745117
    5. '())' → logprob: -5.777769088745117
    6. '()).' → logprob: -7.152769088745117
    7. '(.' → logprob: -7.152769088745117
    8. '()));' → logprob: -7.652769088745117
    9. '());' → logprob: -8.527769088745117
    10. '()),' → logprob: -8.527769088745117

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.961759259458631e-06
    2. 'strip' → logprob: -12.250004768371582
    3. '(split' → logprob: -16.1250057220459
    4. ' split' → logprob: -17.0000057220459
    5. 'rstrip' → logprob: -17.0000057220459
    6. 'spl' → logprob: -19.1250057220459
    7. '.split' → logprob: -19.6250057220459
    8. ')' → logprob: -19.8750057220459
    9. 'plit' → logprob: -20.2500057220459
    10. '_split' → logprob: -20.3750057220459

Token 20: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.755402684211731
    2. ')' → logprob: -0.880402684211731
    3. '()))' → logprob: -2.7554025650024414
    4. '(' → logprob: -3.2554025650024414
    5. '())' → logprob: -4.380402565002441
    6. '()' → logprob: -7.130402565002441
    7. ')))' → logprob: -10.005402565002441
    8. '),' → logprob: -12.130402565002441
    9. ''))' → logprob: -12.130402565002441
    10. '(
' → logprob: -12.380402565002441

Token 21: 'p' (ID: 79)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2094920873641968
    2. 'counts' → logprob: -1.7094920873641968
    3. 'dp' → logprob: -1.9594920873641968
    4. 'count' → logprob: -2.2094922065734863
    5. 'c' → logprob: -2.9594922065734863
    6. 'a' → logprob: -3.7094922065734863
    7. 'for' → logprob: -3.7094922065734863
    8. 's' → logprob: -3.8344922065734863
    9. 'd' → logprob: -3.8344922065734863
    10. 'target' → logprob: -4.334492206573486

Token 22: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5626211762428284
    2. 'ermut' → logprob: -2.0626211166381836
    3. 'os' → logprob: -2.3126211166381836
    4. 'refix' → logprob: -2.9376211166381836
    5. 'er' → logprob: -3.1876211166381836
    6. 'erm' → logprob: -3.8126211166381836
    7. 'osition' → logprob: -4.687621116638184
    8. 'ref' → logprob: -5.062621116638184
    9. 'o' → logprob: -5.312621116638184
    10. '_' → logprob: -5.562621116638184

Token 23: ' list' (ID: 1562)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.2825374603271484
    2. '[]' → logprob: -1.5325374603271484
    3. '0' → logprob: -1.6575374603271484
    4. ' [' → logprob: -2.2825374603271484
    5. ' []' → logprob: -2.6575374603271484
    6. '[' → logprob: -2.6575374603271484
    7. ' ' → logprob: -3.5325374603271484
    8. 'list' → logprob: -4.407537460327148
    9. ' initial' → logprob: -4.532537460327148
    10. '1' → logprob: -5.032537460327148

Token 24: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006083175539970398
    2. '(p' → logprob: -8.875608444213867
    3. '.' → logprob: -9.125608444213867
    4. ')' → logprob: -9.625608444213867
    5. '('' → logprob: -10.125608444213867
    6. '((' → logprob: -10.250608444213867
    7. ' (' → logprob: -10.500608444213867
    8. ''' → logprob: -10.500608444213867
    9. '("("' → logprob: -10.625608444213867
    10. '[' → logprob: -10.875608444213867

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0054537164978682995
    2. '(' → logprob: -5.255453586578369
    3. ' (' → logprob: -9.505454063415527
    4. ')(' → logprob: -10.005454063415527
    5. '(str' → logprob: -10.255454063415527
    6. '```' → logprob: -11.380454063415527
    7. '<int' → logprob: -11.505454063415527
    8. '=int' → logprob: -12.005454063415527
    9. '(uint' → logprob: -12.255454063415527
    10. '[int' → logprob: -12.630454063415527

Token 26: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2134121656417847
    2. ',' → logprob: -1.2134121656417847
    3. '(input' → logprob: -1.4634121656417847
    4. ',input' → logprob: -1.9634121656417847
    5. '(int' → logprob: -3.838412284851074
    6. ',int' → logprob: -4.713412284851074
    7. ' ,' → logprob: -6.588412284851074
    8. ',(' → logprob: -7.713412284851074
    9. '```' → logprob: -7.963412284851074
    10. ' (' → logprob: -8.213412284851074

Token 27: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47414734959602356
    2. 'input' → logprob: -0.9741473197937012
    3. 'int' → logprob: -9.72414779663086
    4. ' int' → logprob: -12.34914779663086
    5. '(input' → logprob: -12.34914779663086
    6. ' initial' → logprob: -14.59914779663086
    7. 'initial' → logprob: -14.97414779663086
    8. ' ' → logprob: -15.34914779663086
    9. 'list' → logprob: -15.34914779663086
    10. ',input' → logprob: -15.59914779663086

Token 28: '().' (ID: 1454)
  Prédit: '(.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(.' → logprob: -0.3721235990524292
    2. '().' → logprob: -1.2471235990524292
    3. '(' → logprob: -4.247123718261719
    4. '.' → logprob: -4.872123718261719
    5. '()' → logprob: -7.747123718261719
    6. '(int' → logprob: -7.872123718261719
    7. ' .' → logprob: -8.247123718261719
    8. '```' → logprob: -8.622123718261719
    9. '('').' → logprob: -10.622123718261719
    10. '('.' → logprob: -10.747123718261719

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. ')' → logprob: -15.250000953674316
    3. 'spl' → logprob: -15.250000953674316
    4. ' split' → logprob: -15.500000953674316
    5. '(split' → logprob: -16.375
    6. 'strip' → logprob: -16.75
    7. 's' → logprob: -17.375
    8. 'plit' → logprob: -18.5
    9. '```' → logprob: -18.75
    10. 'rstrip' → logprob: -19.0

Token 30: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -1.1430283784866333
    2. ')' → logprob: -1.2680283784866333
    3. '())' → logprob: -1.5180283784866333
    4. '))' → logprob: -1.7680283784866333
    5. '()' → logprob: -4.643028259277344
    6. '(' → logprob: -8.268028259277344
    7. '()))
' → logprob: -11.268028259277344
    8. ' ())' → logprob: -11.893028259277344
    9. '()));' → logprob: -12.268028259277344
    10. ')))' → logprob: -12.393028259277344

Token 31: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.847241997718811
    2. 'd' → logprob: -1.972241997718811
    3. '#' → logprob: -2.7222418785095215
    4. '
' → logprob: -2.9722418785095215
    5. 'r' → logprob: -3.2222418785095215
    6. '[' → logprob: -3.2222418785095215
    7. ')' → logprob: -3.3472418785095215
    8. 'i' → logprob: -3.4722418785095215
    9. 'a' → logprob: -3.5972418785095215
    10. 'f' → logprob: -3.9722418785095215

Token 32: ' build' (ID: 3024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21226797997951508
    2. '_' → logprob: -1.7122679948806763
    3. ' space' → logprob: -5.962267875671387
    4. ' p' → logprob: -6.837267875671387
    5. ' process' → logprob: -6.837267875671387
    6. ' _' → logprob: -7.087267875671387
    7. ' solve' → logprob: -7.087267875671387
    8. '_space' → logprob: -7.462267875671387
    9. ' ▁' → logprob: -7.962267875671387
    10. ' ' → logprob: -8.212267875671387

Token 33: '_target' (ID: 24705)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17022785544395447
    2. '_tree' → logprob: -2.5452277660369873
    3. '(' → logprob: -2.6702277660369873
    4. '(_' → logprob: -6.045228004455566
    5. '_(' → logprob: -6.670228004455566
    6. '_array' → logprob: -6.795228004455566
    7. '_segment' → logprob: -6.920228004455566
    8. ' _' → logprob: -7.295228004455566
    9. '_stack' → logprob: -8.045228004455566
    10. '_heap' → logprob: -8.295228004455566

Token 34: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2807024419307709
    2. '_array' → logprob: -2.4057023525238037
    3. '_target' → logprob: -2.5307023525238037
    4. '_' → logprob: -4.530702590942383
    5. '_list' → logprob: -4.530702590942383
    6. '(p' → logprob: -4.780702590942383
    7. '_state' → logprob: -4.905702590942383
    8. '_map' → logprob: -5.655702590942383
    9. '_mask' → logprob: -6.155702590942383
    10. 's' → logprob: -6.280702590942383

Token 35: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18865899741649628
    2. ')' → logprob: -1.9386589527130127
    3. ',' → logprob: -4.313659191131592
    4. ')):' → logprob: -4.938659191131592
    5. '[' → logprob: -5.563659191131592
    6. '(p' → logprob: -6.688659191131592
    7. '))' → logprob: -7.188659191131592
    8. ',p' → logprob: -7.938659191131592
    9. '[p' → logprob: -8.063658714294434
    10. '(' → logprob: -8.563658714294434

Token 36: ' start' (ID: 1604)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6864113807678223
    2. ' N' → logprob: -0.8114113807678223
    3. ' M' → logprob: -4.186411380767822
    4. 'p' → logprob: -5.061411380767822
    5. ' p' → logprob: -5.061411380767822
    6. ' n' → logprob: -5.186411380767822
    7. 'M' → logprob: -5.186411380767822
    8. 'n' → logprob: -5.436411380767822
    9. ' initial' → logprob: -5.436411380767822
    10. 'initial' → logprob: -5.686411380767822

Token 37: '_bit' (ID: 39574)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16760045289993286
    2. ',' → logprob: -2.167600393295288
    3. ')' → logprob: -3.917600393295288
    4. '=' → logprob: -5.042600631713867
    5. '_idx' → logprob: -5.792600631713867
    6. ')):' → logprob: -5.917600631713867
    7. '_index' → logprob: -6.167600631713867
    8. ':' → logprob: -6.542600631713867
    9. ' ):' → logprob: -6.667600631713867
    10. '_pos' → logprob: -7.417600631713867

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12170619517564774
    2. 's' → logprob: -3.371706247329712
    3. ',' → logprob: -3.496706247329712
    4. ')):' → logprob: -4.371706008911133
    5. ')' → logprob: -4.746706008911133
    6. '=' → logprob: -4.746706008911133
    7. ' ):' → logprob: -5.121706008911133
    8. '_index' → logprob: -5.621706008911133
    9. '):
' → logprob: -5.621706008911133
    10. '_idx' → logprob: -6.496706008911133

Token 39: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31693369150161743
    2. '   ' → logprob: -1.3169336318969727
    3. ':
' → logprob: -7.066933631896973
    4. '):' → logprob: -7.191933631896973
    5. ' :' → logprob: -7.191933631896973
    6. '[' → logprob: -8.566933631896973
    7. '```' → logprob: -8.566933631896973
    8. ',' → logprob: -8.816933631896973
    9. ' ' → logprob: -9.316933631896973
    10. 'target' → logprob: -9.816933631896973

Token 40: ' target' (ID: 3783)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.4495092630386353
    2. ' result' → logprob: -1.4495092630386353
    3. ' target' → logprob: -1.8245092630386353
    4. 'target' (adapté à ' target') → logprob: -1.9495092630386353
    5. 'result' → logprob: -2.1995091438293457
    6. '   ' → logprob: -2.4495091438293457
    7. 'res' → logprob: -4.949509143829346
    8. ' return' → logprob: -5.449509143829346
    9. ' for' → logprob: -5.949509143829346
    10. ' bit' → logprob: -6.199509143829346

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.127773717045784
    2. '=' → logprob: -2.2527737617492676
    3. '_' → logprob: -4.627773761749268
    4. ' ' → logprob: -6.502773761749268
    5. '_mask' → logprob: -6.877773761749268
    6. '[' → logprob: -6.877773761749268
    7. 's' → logprob: -7.502773761749268
    8. '   ' → logprob: -9.00277328491211
    9. '_val' → logprob: -9.12777328491211
    10. '[]' → logprob: -9.12777328491211

Token 42: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1150006502866745
    2. ' ' → logprob: -2.3650007247924805
    3. '[]' → logprob: -5.1150007247924805
    4. ' p' → logprob: -5.6150007247924805
    5. ' []' → logprob: -5.8650007247924805
    6. 'p' → logprob: -7.2400007247924805
    7. '[' → logprob: -7.7400007247924805
    8. ' [' → logprob: -8.36500072479248
    9. '[p' → logprob: -8.49000072479248
    10. ' (' → logprob: -8.86500072479248

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09619473665952682
    2. '<|end|>' → logprob: -3.2211947441101074
    3. ' for' → logprob: -3.4711947441101074
    4. 'for' → logprob: -5.471194744110107
    5. ',' → logprob: -5.596194744110107
    6. '[' → logprob: -6.096194744110107
    7. ' ' → logprob: -6.471194744110107
    8. ' =' → logprob: -6.721194744110107
    9. ')' → logprob: -6.846194744110107
    10. '    ' → logprob: -7.096194744110107

Token 44: ' bit' (ID: 3546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04821472242474556
    2. ' for' → logprob: -3.5482146739959717
    3. 'current' → logprob: -4.548214912414551
    4. 'cur' → logprob: -5.923214912414551
    5. 'xor' → logprob: -6.298214912414551
    6. '   ' → logprob: -7.048214912414551
    7. 'bit' (adapté à ' bit') → logprob: -7.298214912414551
    8. 'curr' → logprob: -7.673214912414551
    9. 'prev' → logprob: -8.04821491241455
    10. 'x' → logprob: -8.42321491241455

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0778411626815796
    2. '_' → logprob: -1.2028411626815796
    3. 's' → logprob: -1.4528411626815796
    4. '=' → logprob: -2.452841281890869
    5. '_mask' → logprob: -4.077841281890869
    6. '_val' → logprob: -4.952841281890869
    7. ' ' → logprob: -5.202841281890869
    8. '_value' → logprob: -5.952841281890869
    9. '_index' → logprob: -6.202841281890869
    10. '_count' → logprob: -7.202841281890869

Token 46: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.3553222119808197
    2. 'start' → logprob: -1.230322241783142
    3. '1' → logprob: -5.230322360992432
    4. ' ' → logprob: -6.980322360992432
    5. '0' → logprob: -8.480321884155273
    6. ' p' → logprob: -8.605321884155273
    7. ' (' → logprob: -9.980321884155273
    8. '(start' → logprob: -9.980321884155273
    9. '   ' → logprob: -10.730321884155273
    10. 'p' → logprob: -10.855321884155273

Token 47: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.00407697819173336
    2. '_' → logprob: -5.629076957702637
    3. '_bits' → logprob: -9.379076957702637
    4. ' _' → logprob: -9.629076957702637
    5. 'bit' → logprob: -10.004076957702637
    6. '```' → logprob: -10.254076957702637
    7. '_mask' → logprob: -10.629076957702637
    8. '_BIT' → logprob: -10.754076957702637
    9. ' ' → logprob: -10.879076957702637
    10. '   ' → logprob: -11.004076957702637

Token 48: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8582414984703064
    2. '=' → logprob: -1.6082415580749512
    3. ' for' → logprob: -1.8582415580749512
    4. '   ' → logprob: -3.108241558074951
    5. 'for' → logprob: -3.108241558074951
    6. '<|end|>' → logprob: -3.483241558074951
    7. ' ' → logprob: -3.608241558074951
    8. ')' → logprob: -3.608241558074951
    9. '0' → logprob: -4.733241558074951
    10. '[' → logprob: -4.983241558074951

Token 49: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48683440685272217
    2. '   ' → logprob: -1.4868344068527222
    3. 'for' → logprob: -3.1118345260620117
    4. ' ' → logprob: -3.3618345260620117
    5. ':' → logprob: -3.7368345260620117
    6. ')' → logprob: -3.9868345260620117
    7. '<|end|>' → logprob: -4.111834526062012
    8. '	for' → logprob: -5.736834526062012
    9. '\t' → logprob: -5.861834526062012
    10. '=' → logprob: -5.861834526062012

Token 50: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.287948876619339
    2. 'for' (adapté à ' for') → logprob: -1.6629488468170166
    3. '   ' → logprob: -3.0379488468170166
    4. ' ' → logprob: -5.287949085235596
    5. '	for' → logprob: -5.537949085235596
    6. '\t' → logprob: -7.162949085235596
    7. '
' → logprob: -7.662949085235596
    8. ')' → logprob: -7.662949085235596
    9. '```' → logprob: -7.662949085235596
    10. ':' → logprob: -8.037948608398438

Token 51: ' length' (ID: 5517)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.713199257850647
    2. ' p' → logprob: -0.713199257850647
    3. 'i' → logprob: -4.963199138641357
    4. ' i' → logprob: -5.463199138641357
    5. ' range' → logprob: -6.213199138641357
    6. 'range' → logprob: -6.588199138641357
    7. 'x' → logprob: -6.713199138641357
    8. ' val' → logprob: -7.463199138641357
    9. ' x' → logprob: -7.463199138641357
    10. 'v' → logprob: -7.713199138641357

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05568529665470123
    2. 'in' → logprob: -2.93068528175354
    3. ' ' → logprob: -7.805685520172119
    4. ',' → logprob: -9.305685043334961
    5. '	in' → logprob: -9.430685043334961
    6. '_in' → logprob: -9.680685043334961
    7. '  ' → logprob: -10.680685043334961
    8. ')' → logprob: -10.930685043334961
    9. ' ,' → logprob: -11.180685043334961
    10. '=' → logprob: -11.305685043334961

Token 53: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12711331248283386
    2. ' p' → logprob: -2.1271133422851562
    3. ' range' → logprob: -9.752113342285156
    4. 'range' → logprob: -10.002113342285156
    5. ' ' → logprob: -10.252113342285156
    6. 'length' → logprob: -11.502113342285156
    7. '[' → logprob: -12.064613342285156
    8. '(p' → logprob: -12.314613342285156
    9. '[p' → logprob: -12.689613342285156
    10. ')' → logprob: -12.814613342285156

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000116655595775228
    2. ':
' → logprob: -9.625116348266602
    3. '):' → logprob: -10.125116348266602
    4. ' :' → logprob: -12.500116348266602
    5. ':**' → logprob: -12.875116348266602
    6. '=' → logprob: -13.875116348266602
    7. '[' → logprob: -14.250116348266602
    8. '>:' → logprob: -15.000116348266602
    9. '+:' → logprob: -15.375116348266602
    10. '):
' → logprob: -15.375116348266602

Token 55: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10260678082704544
    2. '   ' → logprob: -2.602606773376465
    3. ':
' → logprob: -5.602606773376465
    4. ' ' → logprob: -5.727606773376465
    5. ',' → logprob: -5.977606773376465
    6. '       ' → logprob: -6.102606773376465
    7. ' =' → logprob: -6.227606773376465
    8. '+' → logprob: -6.477606773376465
    9. '[' → logprob: -6.852606773376465
    10. '):' → logprob: -6.852606773376465

Token 56: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' (adapté à ' target') → logprob: -0.35521066188812256
    2. '   ' → logprob: -1.7302106618881226
    3. ' target' → logprob: -2.605210781097412
    4. '       ' → logprob: -3.355210781097412
    5. ' for' → logprob: -4.855210781097412
    6. 'for' → logprob: -5.980210781097412
    7. 't' → logprob: -8.230210304260254
    8. 'if' → logprob: -8.230210304260254
    9. ' if' → logprob: -8.480210304260254
    10. 'current' → logprob: -8.605210304260254

Token 57: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.028841156512498856
    2. '.extend' → logprob: -4.153841018676758
    3. '.' → logprob: -4.403841018676758
    4. '+=' → logprob: -8.278841018676758
    5. '=' → logprob: -9.528841018676758
    6. 'append' → logprob: -9.778841018676758
    7. ' +=' → logprob: -10.153841018676758
    8. '+' → logprob: -10.653841018676758
    9. ' .' → logprob: -10.903841018676758
    10. '.=' → logprob: -11.278841018676758

Token 58: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23415841162204742
    2. '[p' → logprob: -2.359158515930176
    3. '[(' → logprob: -2.734158515930176
    4. ' [' → logprob: -3.984158515930176
    5. '[target' → logprob: -4.859158515930176
    6. '[list' → logprob: -4.984158515930176
    7. '[((' → logprob: -5.734158515930176
    8. '[int' → logprob: -6.359158515930176
    9. '[length' → logprob: -6.734158515930176
    10. ' [(' → logprob: -7.109158515930176

Token 59: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0037035199347883463
    2. '(bit' → logprob: -6.003703594207764
    3. '1' → logprob: -7.628703594207764
    4. ' bit' → logprob: -8.128703117370605
    5. '[' → logprob: -8.628703117370605
    6. '(' → logprob: -9.128703117370605
    7. 'int' → logprob: -9.503703117370605
    8. '0' → logprob: -11.253703117370605
    9. 'bool' → logprob: -11.253703117370605
    10. 'str' → logprob: -11.753703117370605

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020570730790495872
    2. ']*' → logprob: -3.895570755004883
    3. ' ]' → logprob: -11.270570755004883
    4. ']*(' → logprob: -11.395570755004883
    5. ']^' → logprob: -13.270570755004883
    6. ' for' → logprob: -14.270570755004883
    7. '^' → logprob: -14.645570755004883
    8. 'for' → logprob: -14.895570755004883
    9. ']<<' → logprob: -15.645570755004883
    10. '[' → logprob: -15.770570755004883

Token 61: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22601531445980072
    2. ']*' → logprob: -1.601015329360962
    3. ' for' → logprob: -8.351015090942383
    4. 'for' → logprob: -9.226015090942383
    5. '*' → logprob: -9.351015090942383
    6. ' ]' → logprob: -10.226015090942383
    7. 'length' → logprob: -10.976015090942383
    8. ' *' → logprob: -10.976015090942383
    9. ' ' → logprob: -11.226015090942383
    10. ')' → logprob: -11.351015090942383

Token 62: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.008624620735645294
    2. ' length' → logprob: -4.75862455368042
    3. '(length' → logprob: -11.508625030517578
    4. '[length' → logprob: -18.383625030517578
    5. 'leng' → logprob: -19.008625030517578
    6. 'ength' → logprob: -19.008625030517578
    7. '	length' → logprob: -19.383625030517578
    8. 'int' → logprob: -20.508625030517578
    9. ' ' → logprob: -20.633625030517578
    10. ' (' → logprob: -20.883625030517578

Token 63: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8848266005516052
    2. 'bit' → logprob: -0.8848266005516052
    3. '       ' → logprob: -2.63482666015625
    4. ' bit' → logprob: -3.38482666015625
    5. ' ' → logprob: -4.00982666015625
    6. '    
' → logprob: -4.75982666015625
    7. ',' → logprob: -4.88482666015625
    8. '```' → logprob: -5.25982666015625
    9. '[' → logprob: -5.38482666015625
    10. '
' → logprob: -5.38482666015625

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05292218178510666
    2. '   ' → logprob: -3.302922248840332
    3. 'bit' → logprob: -4.802922248840332
    4. ' bit' → logprob: -6.302922248840332
    5. ' ' → logprob: -7.052922248840332
    6. '```' → logprob: -7.302922248840332
    7. ',' → logprob: -7.552922248840332
    8. 'return' → logprob: -7.552922248840332
    9. '        
' → logprob: -7.802922248840332
    10. '`' → logprob: -8.302922248840332

Token 65: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.13113833963871002
    2. ' bit' → logprob: -2.131138324737549
    3. '   ' → logprob: -5.506138324737549
    4. '```' → logprob: -10.006138801574707
    5. '       ' → logprob: -11.131138801574707
    6. '
' → logprob: -11.256138801574707
    7. '(bit' → logprob: -11.256138801574707
    8. ' ' → logprob: -11.381138801574707
    9. '1' → logprob: -11.506138801574707
    10. '    
' → logprob: -12.131138801574707

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017304394394159317
    2. '^' → logprob: -4.267304420471191
    3. ' ^=' → logprob: -6.017304420471191
    4. ' =' → logprob: -7.267304420471191
    5. ' ' → logprob: -14.767304420471191
    6. '+=' → logprob: -14.892304420471191
    7. '*=' → logprob: -15.017304420471191
    8. '=!' → logprob: -15.392304420471191
    9. '=

' → logprob: -15.642304420471191
    10. ' ^' → logprob: -15.642304420471191

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02337149903178215
    2. ' ' → logprob: -3.773371458053589
    3. 'bit' → logprob: -9.773371696472168
    4. ' bit' → logprob: -11.023371696472168
    5. '0' → logprob: -11.148371696472168
    6. '(' → logprob: -11.648371696472168
    7. ' (' → logprob: -11.773371696472168
    8. 'not' → logprob: -11.773371696472168
    9. '(bit' → logprob: -12.648371696472168
    10. ' not' → logprob: -12.898371696472168

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004235243541188538
    2. ' ' → logprob: -8.625423431396484
    3. 'bit' → logprob: -8.625423431396484
    4. '(' → logprob: -11.125423431396484
    5. '(bit' → logprob: -11.250423431396484
    6. 'not' → logprob: -11.250423431396484
    7. '0' → logprob: -11.375423431396484
    8. '3' → logprob: -12.125423431396484
    9. ' bit' → logprob: -13.375423431396484
    10. ' (' → logprob: -13.875423431396484

Token 69: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.034114718437194824
    2. ' -' → logprob: -3.7841148376464844
    3. '-bit' → logprob: -4.534114837646484
    4. '^' → logprob: -9.909114837646484
    5. '-b' → logprob: -11.159114837646484
    6. 'bit' → logprob: -11.909114837646484
    7. ' bit' → logprob: -13.034114837646484
    8. ' ' → logprob: -14.784114837646484
    9. ' ^' → logprob: -15.409114837646484
    10. '-t' → logprob: -16.284114837646484

Token 70: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0001584850688232109
    2. ' bit' → logprob: -8.750158309936523
    3. '(bit' → logprob: -18.375158309936523
    4. 'bitr' → logprob: -18.750158309936523
    5. ' ' → logprob: -21.250158309936523
    6. '-bit' → logprob: -21.750158309936523
    7. '_bit' → logprob: -22.125158309936523
    8. 'b' → logprob: -22.375158309936523
    9. ' бит' → logprob: -22.625158309936523
    10. '.bit' → logprob: -22.625158309936523

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1018342971801758
    2. '
' → logprob: -1.3518342971801758
    3. ' ' → logprob: -1.7268342971801758
    4. ' return' → logprob: -2.101834297180176
    5. 'return' → logprob: -2.351834297180176
    6. ' 
' → logprob: -5.726834297180176
    7. ':return' → logprob: -6.101834297180176
    8. '  
' → logprob: -6.476834297180176
    9. '<|end|>' → logprob: -6.476834297180176
    10. ',' → logprob: -6.601834297180176

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19415198266506195
    2. ' return' → logprob: -1.9441519975662231
    3. 'return' → logprob: -3.8191518783569336
    4. ' ' → logprob: -4.569151878356934
    5. '	return' → logprob: -7.819151878356934
    6. ',' → logprob: -8.444151878356934
    7. '    
' → logprob: -9.069151878356934
    8. ':return' → logprob: -9.319151878356934
    9. '
' → logprob: -9.694151878356934
    10. ' 
' → logprob: -10.194151878356934

Token 73: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5519436001777649
    2. 'return' (adapté à ' return') → logprob: -1.5519435405731201
    3. '   ' → logprob: -2.05194354057312
    4. ' ' → logprob: -2.55194354057312
    5. '	return' → logprob: -6.051943778991699
    6. '
' → logprob: -6.301943778991699
    7. ' 
' → logprob: -7.801943778991699
    8. '    
' → logprob: -8.0519437789917
    9. ':return' → logprob: -8.0519437789917
    10. '  ' → logprob: -8.9269437789917

Token 74: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.006716674659401178
    2. ' target' → logprob: -5.006716728210449
    3. '[target' → logprob: -14.13171672821045
    4. '(target' → logprob: -14.88171672821045
    5. '	target' → logprob: -16.506715774536133
    6. 'targets' → logprob: -17.131715774536133
    7. 't' → logprob: -17.256715774536133
    8. ' ' → logprob: -17.756715774536133
    9. ',target' → logprob: -18.756715774536133
    10. 'tuple' → logprob: -18.881715774536133

Token 75: '

' (ID: 279)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.9007144570350647
    2. 'result' → logprob: -1.27571439743042
    3. 'current' → logprob: -2.27571439743042
    4. '<|end|>' → logprob: -3.02571439743042
    5. 't' → logprob: -3.15071439743042
    6. '#' → logprob: -3.77571439743042
    7. '
' → logprob: -4.27571439743042
    8. 'for' → logprob: -4.65071439743042
    9. 'answer' → logprob: -5.15071439743042
    10. '```' → logprob: -5.40071439743042

Token 76: 'def' (ID: 1314)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.09972309321165085
    2. 'result' → logprob: -3.3497231006622314
    3. 'current' → logprob: -3.9747231006622314
    4. 'start' → logprob: -4.724722862243652
    5. 'res' → logprob: -5.349722862243652
    6. 'answer' → logprob: -5.599722862243652
    7. 't' → logprob: -5.724722862243652
    8. 'for' → logprob: -6.099722862243652
    9. 'initial' → logprob: -6.099722862243652
    10. 'x' → logprob: -6.474722862243652

Token 77: ' count' (ID: 3605)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9049889445304871
    2. ' solve' → logprob: -1.2799890041351318
    3. ' flip' → logprob: -1.4049890041351318
    4. ' build' → logprob: -3.529989004135132
    5. ' check' → logprob: -5.154988765716553
    6. ' solution' → logprob: -5.404988765716553
    7. ' apply' → logprob: -5.404988765716553
    8. ' ' → logprob: -5.529988765716553
    9. ' find' → logprob: -6.029988765716553
    10. ' reverse' → logprob: -6.279988765716553

Token 78: '_sw' (ID: 84453)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36604776978492737
    2. '(' → logprob: -2.1160478591918945
    3. '_m' → logprob: -2.2410478591918945
    4. '_diff' → logprob: -4.3660478591918945
    5. '_matches' → logprob: -4.4910478591918945
    6. '_fl' → logprob: -4.4910478591918945
    7. '_changes' → logprob: -4.6160478591918945
    8. '_bits' → logprob: -4.7410478591918945
    9. '_d' → logprob: -4.8660478591918945
    10. '_trans' → logprob: -5.8660478591918945

Token 79: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.0022260257974267006
    2. 'ap' → logprob: -6.127225875854492
    3. 'apped' → logprob: -10.752225875854492
    4. 'apping' → logprob: -11.752225875854492
    5. 'a' → logprob: -12.752225875854492
    6. 'appings' → logprob: -13.377225875854492
    7. '_' → logprob: -13.877225875854492
    8. 'apses' → logprob: -14.127225875854492
    9. 'ап' → logprob: -14.252225875854492
    10. 'app' → logprob: -14.252225875854492

Token 80: '(initial' (ID: 63456)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.646355390548706
    2. '(target' → logprob: -0.771355390548706
    3. '(initial' → logprob: -4.771355628967285
    4. '(p' → logprob: -6.521355628967285
    5. '(t' → logprob: -6.521355628967285
    6. '(n' → logprob: -7.896355628967285
    7. ' (' → logprob: -7.896355628967285
    8. '(original' → logprob: -8.146355628967285
    9. '(a' → logprob: -8.396355628967285
    10. '(s' → logprob: -8.771355628967285

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001290454383706674
    2. ' ,' → logprob: -9.250128746032715
    3. ',target' → logprob: -10.375128746032715
    4. '):' → logprob: -14.375128746032715
    5. ' ' → logprob: -15.125128746032715
    6. ')' → logprob: -15.250128746032715
    7. '_,' → logprob: -16.25012969970703
    8. '[],' → logprob: -16.75012969970703
    9. '‌,' → logprob: -16.87512969970703
    10. ',p' → logprob: -17.37512969970703

Token 82: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.6327593922615051
    2. 'target' → logprob: -0.7577593922615051
    3. 'p' → logprob: -9.632759094238281
    4. ' p' → logprob: -9.757759094238281
    5. 't' → logprob: -12.132759094238281
    6. '   ' → logprob: -12.382759094238281
    7. 'initial' → logprob: -12.507759094238281
    8. '    ' → logprob: -12.507759094238281
    9. '	target' → logprob: -13.007759094238281
    10. ' initial' → logprob: -13.132759094238281

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007013569120317698
    2. ')' → logprob: -7.500701427459717
    3. '):
' → logprob: -9.500700950622559
    4. ',' → logprob: -10.125700950622559
    5. ' ):' → logprob: -10.750700950622559
    6. '):
' → logprob: -11.875700950622559
    7. '   ' → logprob: -13.500700950622559
    8. '(' → logprob: -14.000700950622559
    9. ' ' → logprob: -14.750700950622559
    10. ')：' → logprob: -15.000700950622559

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.620903491973877
    2. ' swaps' → logprob: -0.995903491973877
    3. ' count' → logprob: -2.870903491973877
    4. ' n' → logprob: -4.245903491973877
    5. 'count' → logprob: -4.495903491973877
    6. ' swap' → logprob: -5.370903491973877
    7. 'n' → logprob: -5.870903491973877
    8. 'swap' → logprob: -7.120903491973877
    9. ' cnt' → logprob: -7.370903491973877
    10. 'sw' → logprob: -7.495903491973877

Token 85: ' swaps' (ID: 150699)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1518527269363403
    2. 'diff' → logprob: -1.5268527269363403
    3. ' swaps' → logprob: -2.151852607727051
    4. ' count' → logprob: -2.401852607727051
    5. '   ' → logprob: -2.526852607727051
    6. 'swap' → logprob: -3.151852607727051
    7. 'cnt' → logprob: -3.776852607727051
    8. 'n' → logprob: -3.901852607727051
    9. ' diff' → logprob: -4.026852607727051
    10. 'sw' → logprob: -4.151852607727051

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023264816030859947
    2. '=' → logprob: -3.7732648849487305
    3. '   ' → logprob: -12.02326488494873
    4. ',' → logprob: -12.77326488494873
    5. '_needed' → logprob: -12.89826488494873
    6. ' ' → logprob: -13.02326488494873
    7. '  ' → logprob: -13.27326488494873
    8. '_' → logprob: -13.64826488494873
    9. '_count' → logprob: -14.27326488494873
    10. '	' → logprob: -14.77326488494873

Token 87: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004233323968946934
    2. ' ' → logprob: -5.504233360290527
    3. 'sum' → logprob: -9.004233360290527
    4. ' sum' → logprob: -11.004233360290527
    5. 'abs' → logprob: -11.629233360290527
    6. '[' → logprob: -13.379233360290527
    7. 'initial' → logprob: -13.879233360290527
    8. '  ' → logprob: -13.879233360290527
    9. ' abs' → logprob: -14.004233360290527
    10. '<|end|>' → logprob: -14.254233360290527

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003099642461165786
    2. 'sum' → logprob: -5.87809944152832
    3. 'abs' → logprob: -8.50309944152832
    4. ' ' → logprob: -10.00309944152832
    5. 'initial' → logprob: -10.62809944152832
    6. '[' → logprob: -11.50309944152832
    7. 'max' → logprob: -13.00309944152832
    8. ' sum' → logprob: -13.25309944152832
    9. 'len' → logprob: -13.37809944152832
    10. '[]' → logprob: -13.87809944152832

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0009691067971289158
    2. '<|end|>' → logprob: -7.625968933105469
    3. '
' → logprob: -8.500968933105469
    4. '   ' → logprob: -8.875968933105469
    5. '  
' → logprob: -10.000968933105469
    6. '    
' → logprob: -10.250968933105469
    7. '   
' → logprob: -11.375968933105469
    8. '<|end|>' → logprob: -11.500968933105469
    9. '\n' → logprob: -11.625968933105469
    10. ',' → logprob: -12.250968933105469

Token 90: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3082234561443329
    2. '   ' → logprob: -1.4332234859466553
    3. ' for' → logprob: -4.308223247528076
    4. '    
' → logprob: -5.808223247528076
    5. 'for' → logprob: -6.058223247528076
    6. ' i' → logprob: -6.308223247528076
    7. ',' → logprob: -7.183223247528076
    8. 'n' → logprob: -7.433223247528076
    9. '\n' → logprob: -7.433223247528076
    10. '<|end|>' → logprob: -7.558223247528076

Token 91: ' arr' (ID: 1724)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03350357338786125
    2. 'n' → logprob: -4.533503532409668
    3. ' for' → logprob: -5.033503532409668
    4. 'i' → logprob: -5.533503532409668
    5. 'diff' → logprob: -5.658503532409668
    6. 'm' → logprob: -5.658503532409668
    7. 'N' → logprob: -6.908503532409668
    8. '   ' → logprob: -7.158503532409668
    9. 'zero' → logprob: -7.408503532409668
    10. 'stack' → logprob: -8.033503532409668

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.051678698509931564
    2. '=' → logprob: -3.0516786575317383
    3. '_len' → logprob: -6.801678657531738
    4. '   ' → logprob: -7.176678657531738
    5. ' ' → logprob: -8.051678657531738
    6. '_length' → logprob: -8.551678657531738
    7. '[:]' → logprob: -9.176678657531738
    8. '=[]' → logprob: -9.551678657531738
    9. ')' → logprob: -9.926678657531738
    10. 'angement' → logprob: -10.051678657531738

Token 93: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.201457679271698
    2. ' initial' → logprob: -1.7014577388763428
    3. '[' → logprob: -11.326457977294922
    4. '	initial' → logprob: -11.451457977294922
    5. 'list' → logprob: -11.701457977294922
    6. ' list' → logprob: -12.201457977294922
    7. '(initial' → logprob: -13.326457977294922
    8. '[]' → logprob: -13.451457977294922
    9. ' ' → logprob: -13.576457977294922
    10. '[:]' → logprob: -13.951457977294922

Token 94: '[:' (ID: 7808)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.1609220951795578
    2. '.copy' → logprob: -1.9109220504760742
    3. '[:' → logprob: -7.285922050476074
    4. '.' → logprob: -11.535922050476074
    5. '[' → logprob: -13.160922050476074
    6. '[::-' → logprob: -14.660922050476074
    7. 'copy' → logprob: -16.03592300415039
    8. '[]' → logprob: -16.66092300415039
    9. '+' → logprob: -17.16092300415039
    10. ' ' → logprob: -17.28592300415039

Token 95: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08509494364261627
    2. ')' → logprob: -2.585094928741455
    3. ']
' → logprob: -5.335094928741455
    4. ')
' → logprob: -7.835094928741455
    5. '])' → logprob: -8.335095405578613
    6. ')]' → logprob: -8.335095405578613
    7. ' ]' → logprob: -8.585095405578613
    8. ']
' → logprob: -8.835095405578613
    9. ']

' → logprob: -9.460095405578613
    10. ')
' → logprob: -10.585095405578613

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7581285834312439
    2. '
' → logprob: -0.8831285834312439
    3. ' for' → logprob: -2.3831286430358887
    4. 'for' → logprob: -3.7581286430358887
    5. '    
' → logprob: -6.758128643035889
    6. '
' → logprob: -7.883128643035889
    7. ' i' → logprob: -8.63312816619873
    8. 'n' → logprob: -8.75812816619873
    9. 'i' → logprob: -9.38312816619873
    10. '  
' → logprob: -9.50812816619873

Token 97: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.29294100403785706
    2. 'n' → logprob: -1.7929409742355347
    3. ' for' → logprob: -2.667941093444824
    4. 'N' → logprob: -4.542941093444824
    5. '   ' → logprob: -5.167941093444824
    6. 'i' → logprob: -6.792941093444824
    7. ' n' → logprob: -7.667941093444824
    8. ' N' → logprob: -9.542941093444824
    9. ' ' → logprob: -10.417941093444824
    10. ' i' → logprob: -11.292941093444824

Token 98: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02991374582052231
    2. 'i' → logprob: -3.5299136638641357
    3. ' range' → logprob: -9.529913902282715
    4. 'range' → logprob: -9.904913902282715
    5. ' ' → logprob: -10.404913902282715
    6. '	i' → logprob: -12.529913902282715
    7. '_i' → logprob: -13.404913902282715
    8. ' _' → logprob: -13.529913902282715
    9. '_' → logprob: -14.154913902282715
    10. '  ' → logprob: -14.404913902282715

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0034341192804276943
    2. 'in' → logprob: -5.753434181213379
    3. ' ' → logprob: -9.003434181213379
    4. ',' → logprob: -9.128434181213379
    5. ' ,' → logprob: -11.753434181213379
    6. '  ' → logprob: -11.878434181213379
    7. 'range' → logprob: -12.753434181213379
    8. '	in' → logprob: -13.003434181213379
    9. '<|end|>' → logprob: -13.628434181213379
    10. '   ' → logprob: -14.253434181213379

Token 100: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.020589184015989304
    2. 'range' → logprob: -3.8955891132354736
    3. ' ' → logprob: -10.270588874816895
    4. '  ' → logprob: -12.270588874816895
    5. '   ' → logprob: -12.770588874816895
    6. '	range' → logprob: -13.145588874816895
    7. ' xrange' → logprob: -13.270588874816895
    8. '(range' → logprob: -14.520588874816895
    9. '```' → logprob: -15.020588874816895
    10. '    ' → logprob: -15.520588874816895

Token 101: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.04895941540598869
    2. '(N' → logprob: -3.048959493637085
    3. '(' → logprob: -7.923959255218506
    4. '(M' → logprob: -11.923959732055664
    5. '(n' → logprob: -13.048959732055664
    6. 'len' → logprob: -14.298959732055664
    7. ' len' → logprob: -15.173959732055664
    8. '(length' → logprob: -15.423959732055664
    9. ' (' → logprob: -16.673959732055664
    10. '(
' → logprob: -17.173959732055664

Token 102: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0005617309361696243
    2. '(' → logprob: -8.375561714172363
    3. 'arr' → logprob: -8.375561714172363
    4. '(initial' → logprob: -9.375561714172363
    5. ' (' → logprob: -12.125561714172363
    6. ' arr' → logprob: -12.625561714172363
    7. ')' → logprob: -13.125561714172363
    8. '	arr' → logprob: -13.250561714172363
    9. '(target' → logprob: -14.125561714172363
    10. '[arr' → logprob: -14.125561714172363

Token 103: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.5543464422225952
    2. ' -' → logprob: -2.3043465614318848
    3. ')):
' → logprob: -2.3043465614318848
    4. '):' → logprob: -2.4293465614318848
    5. ')' → logprob: -2.5543465614318848
    6. '-' → logprob: -3.1793465614318848
    7. '))' → logprob: -5.179346561431885
    8. ' ):' → logprob: -5.554346561431885
    9. '):
' → logprob: -5.679346561431885
    10. ' ' → logprob: -6.304346561431885

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14197339117527008
    2. ' for' → logprob: -2.3919734954833984
    3. ' if' → logprob: -4.266973495483398
    4. '
' → logprob: -4.766973495483398
    5. '    ' → logprob: -5.141973495483398
    6. '<|end|>' → logprob: -5.266973495483398
    7. '   ' → logprob: -6.891973495483398
    8. '        ' → logprob: -6.891973495483398
    9. ' ' → logprob: -6.891973495483398
    10. ',' → logprob: -7.266973495483398

Token 105: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4481239914894104
    2. 'if' (adapté à ' if') → logprob: -1.5731239318847656
    3. ' for' → logprob: -2.1981239318847656
    4. 'for' → logprob: -3.3231239318847656
    5. '       ' → logprob: -5.198123931884766
    6. '   ' → logprob: -7.573123931884766
    7. ' while' → logprob: -8.698123931884766
    8. '    ' → logprob: -8.823123931884766
    9. '           ' → logprob: -9.073123931884766
    10. '        ' → logprob: -9.323123931884766

Token 106: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.008632888086140156
    2. 'arr' → logprob: -4.758632659912109
    3. '	arr' → logprob: -11.13363265991211
    4. '(arr' → logprob: -13.38363265991211
    5. '    ' → logprob: -13.75863265991211
    6. '[arr' → logprob: -15.38363265991211
    7. '   ' → logprob: -15.88363265991211
    8. ' ' → logprob: -16.00863265991211
    9. '$arr' → logprob: -16.00863265991211
    10. 'i' → logprob: -16.13363265991211

Token 107: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014442270912695676
    2. '[' → logprob: -9.625144004821777
    3. ' [' → logprob: -9.875144004821777
    4. ' !=' → logprob: -10.750144004821777
    5. '```' → logprob: -13.125144004821777
    6. '!=' → logprob: -13.625144004821777
    7. ' i' → logprob: -14.375144004821777
    8. '   ' → logprob: -14.500144004821777
    9. ' ' → logprob: -15.625144004821777
    10. '[
' → logprob: -15.750144004821777

Token 108: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.11556387692689896
    2. '!=' → logprob: -2.2405638694763184
    3. ')' → logprob: -6.490563869476318
    4. ']' → logprob: -7.365563869476318
    5. ']!=' → logprob: -7.990563869476318
    6. ')!=' → logprob: -8.990564346313477
    7. ' ]' → logprob: -9.740564346313477
    8. ' )' → logprob: -10.740564346313477
    9. '```' → logprob: -11.365564346313477
    10. ' ' → logprob: -11.490564346313477

Token 109: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4740954041481018
    2. '!=' → logprob: -0.9740954041481018
    3. '==' → logprob: -11.724095344543457
    4. ' ==' → logprob: -12.474095344543457
    5. ']!=' → logprob: -13.849095344543457
    6. ' ' → logprob: -13.849095344543457
    7. '```' → logprob: -13.849095344543457
    8. '()!=' → logprob: -13.974095344543457
    9. '=' → logprob: -14.099095344543457
    10. ')!=' → logprob: -14.474095344543457

Token 110: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.6931484341621399
    2. 'target' → logprob: -0.6931484341621399
    3. '   ' → logprob: -14.818148612976074
    4. '	target' → logprob: -15.193148612976074
    5. '[target' → logprob: -15.568148612976074
    6. '(target' → logprob: -15.818148612976074
    7. 't' → logprob: -17.068147659301758
    8. ' targ' → logprob: -17.193147659301758
    9. ' ' → logprob: -17.443147659301758
    10. '_target' → logprob: -18.068147659301758

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0219828002154827e-05
    2. '[' → logprob: -11.000020027160645
    3. ' [' → logprob: -13.125020027160645
    4. '```' → logprob: -14.250020027160645
    5. '   ' → logprob: -15.125020027160645
    6. 'i' → logprob: -15.750020027160645
    7. ' i' → logprob: -16.25002098083496
    8. '[
' → logprob: -16.37502098083496
    9. '[j' → logprob: -17.00002098083496
    10. ' ' → logprob: -17.12502098083496

Token 112: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18352621793746948
    2. '):
' → logprob: -1.9335262775421143
    3. ':' → logprob: -4.308526039123535
    4. ']:' → logprob: -5.058526039123535
    5. ' ):' → logprob: -6.683526039123535
    6. ']:
' → logprob: -7.683526039123535
    7. ')' → logprob: -7.933526039123535
    8. ']):' → logprob: -7.933526039123535
    9. ' ):
' → logprob: -8.183526039123535
    10. ':
' → logprob: -8.308526039123535

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06880276650190353
    2. ' for' → logprob: -2.943802833557129
    3. 'for' → logprob: -5.068802833557129
    4. ' j' → logprob: -5.443802833557129
    5. 'j' → logprob: -6.818802833557129
    6. '       ' → logprob: -7.693802833557129
    7. ' swaps' → logprob: -7.943802833557129
    8. ',' → logprob: -8.818802833557129
    9. '
' → logprob: -8.943802833557129
    10. 'swap' → logprob: -9.068802833557129

Token 114: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25700145959854126
    2. ' j' → logprob: -1.7570013999938965
    3. 'for' → logprob: -3.6320013999938965
    4. ' for' → logprob: -4.1320013999938965
    5. '           ' → logprob: -4.8820013999938965
    6. 'swap' → logprob: -6.0070013999938965
    7. ' swap' → logprob: -7.0070013999938965
    8. '       ' → logprob: -8.882001876831055
    9. ' ' → logprob: -9.257001876831055
    10. '   ' → logprob: -9.382001876831055

Token 115: ' find' (ID: 1646)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.23973169922828674
    2. 'for' → logprob: -1.8647316694259644
    3. ' j' → logprob: -3.239731788635254
    4. 'swap' → logprob: -4.864731788635254
    5. ' for' → logprob: -5.364731788635254
    6. '#' → logprob: -5.864731788635254
    7. '   ' → logprob: -6.489731788635254
    8. '       ' → logprob: -7.739731788635254
    9. ' swap' → logprob: -7.864731788635254
    10. 'target' → logprob: -8.239731788635254

Token 116: ' where' (ID: 1919)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3074348568916321
    2. ' j' → logprob: -1.6824347972869873
    3. ' next' → logprob: -4.057435035705566
    4. ' index' → logprob: -4.307435035705566
    5. 'j' → logprob: -4.432435035705566
    6. 'the' → logprob: -4.557435035705566
    7. ' i' → logprob: -4.682435035705566
    8. ' a' → logprob: -5.182435035705566
    9. 'index' → logprob: -5.932435035705566
    10. 'i' → logprob: -6.557435035705566

Token 117: ' the' (ID: 290)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5467753410339355
    2. ' the' → logprob: -1.6717753410339355
    3. ' arr' → logprob: -2.6717753410339355
    4. '           ' → logprob: -3.1717753410339355
    5. '(arr' → logprob: -3.2967753410339355
    6. ' i' → logprob: -4.1717753410339355
    7. 'i' → logprob: -4.1717753410339355
    8. 'the' → logprob: -4.2967753410339355
    9. 'target' → logprob: -4.7967753410339355
    10. ' in' → logprob: -4.9217753410339355

Token 118: ' correct' (ID: 6145)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2769861221313477
    2. ' next' → logprob: -1.5269861221313477
    3. 'target' → logprob: -1.7769861221313477
    4. 'arr' → logprob: -2.5269861221313477
    5. 'next' → logprob: -2.9019861221313477
    6. ' target' → logprob: -3.0269861221313477
    7. 'index' → logprob: -3.4019861221313477
    8. ' i' → logprob: -3.5269861221313477
    9. ' correct' → logprob: -4.026986122131348
    10. 'swap' → logprob: -4.151986122131348

Token 119: ' bit' (ID: 3546)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.211301565170288
    2. 'element' → logprob: -1.211301565170288
    3. ' element' → logprob: -1.836301565170288
    4. ' value' → logprob: -2.336301565170288
    5. ' bit' → logprob: -2.711301565170288
    6. 'bit' → logprob: -3.211301565170288
    7. 'position' → logprob: -4.586301803588867
    8. 'index' → logprob: -4.711301803588867
    9. 'target' → logprob: -5.336301803588867
    10. 'token' → logprob: -5.461301803588867

Token 120: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04396077245473862
    2. ' should' → logprob: -4.7939605712890625
    3. 'is' → logprob: -5.0439605712890625
    4. '           ' → logprob: -5.2939605712890625
    5. '       ' → logprob: -5.5439605712890625
    6. ' i' → logprob: -5.7939605712890625
    7. ' =' → logprob: -5.9189605712890625
    8. ' in' → logprob: -6.1689605712890625
    9. '=' → logprob: -6.4189605712890625
    10. 'i' → logprob: -7.0439605712890625

Token 121: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20344756543636322
    2. ' in' → logprob: -2.4534475803375244
    3. ' for' → logprob: -2.4534475803375244
    4. 'j' → logprob: -5.203447341918945
    5. ' j' → logprob: -5.953447341918945
    6. 'for' → logprob: -6.703447341918945
    7. ' at' → logprob: -7.203447341918945
    8. ',' → logprob: -7.828447341918945
    9. ' and' → logprob: -7.953447341918945
    10. '       ' → logprob: -8.328447341918945

Token 122: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0465007945895195
    2. ' arr' → logprob: -3.7965006828308105
    3. 'range' → logprob: -4.1715006828308105
    4. ' range' → logprob: -5.5465006828308105
    5. '   ' → logprob: -6.2965006828308105
    6. 'the' → logprob: -7.0465006828308105
    7. ' the' → logprob: -7.4215006828308105
    8. '[arr' → logprob: -9.171501159667969
    9. '```' → logprob: -9.796501159667969
    10. '	arr' → logprob: -10.171501159667969

Token 123: ' after' (ID: 1934)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14446979761123657
    2. ' for' → logprob: -2.394469738006592
    3. ' in' → logprob: -3.519469738006592
    4. ',' → logprob: -5.644469738006592
    5. '<|end|>' → logprob: -6.394469738006592
    6. ' and' → logprob: -6.769469738006592
    7. 'for' → logprob: -6.894469738006592
    8. '       ' → logprob: -6.894469738006592
    9. ' j' → logprob: -7.144469738006592
    10. '               ' → logprob: -7.394469738006592

Token 124: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008772100321948528
    2. ' i' → logprob: -4.758771896362305
    3. '```' → logprob: -9.883771896362305
    4. '           ' → logprob: -10.008771896362305
    5. '   ' → logprob: -10.633771896362305
    6. '(i' → logprob: -10.883771896362305
    7. '[i' → logprob: -12.383771896362305
    8. '       ' → logprob: -12.508771896362305
    9. '`' → logprob: -12.633771896362305
    10. 'the' → logprob: -13.383771896362305

Token 125: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06218401715159416
    2. ' i' → logprob: -2.8121840953826904
    3. '           ' → logprob: -9.93718433380127
    4. '(i' → logprob: -10.06218433380127
    5. '=i' → logprob: -10.31218433380127
    6. '[i' → logprob: -10.56218433380127
    7. '```' → logprob: -10.93718433380127
    8. ',i' → logprob: -11.56218433380127
    9. '               ' → logprob: -12.18718433380127
    10. '`' → logprob: -12.31218433380127

Token 126: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41593438386917114
    2. ' for' → logprob: -1.6659343242645264
    3. ',' → logprob: -3.2909343242645264
    4. '```' → logprob: -3.4159343242645264
    5. 'j' → logprob: -4.1659345626831055
    6. ' in' → logprob: -4.5409345626831055
    7. '<|end|>' → logprob: -4.5409345626831055
    8. ':' → logprob: -4.7909345626831055
    9. '       ' → logprob: -5.0409345626831055
    10. '               ' → logprob: -5.4159345626831055

Token 127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016468495596200228
    2. '<|end|>' → logprob: -6.876646995544434
    3. '       ' → logprob: -8.501646995544434
    4. ',' → logprob: -9.251646995544434
    5. '               ' → logprob: -9.626646995544434
    6. '            
' → logprob: -9.751646995544434
    7. ' for' → logprob: -9.876646995544434
    8. '```' → logprob: -10.376646995544434
    9. '<|end|>' → logprob: -11.001646995544434
    10. ' 
' → logprob: -11.126646995544434

Token 128: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.16227483749389648
    2. ' j' → logprob: -2.2872748374938965
    3. 'for' → logprob: -3.6622748374938965
    4. ' for' → logprob: -4.0372748374938965
    5. '           ' → logprob: -5.5372748374938965
    6. 'swap' → logprob: -7.9122748374938965
    7. 'found' → logprob: -8.037275314331055
    8. ' found' → logprob: -9.287275314331055
    9. '   ' → logprob: -9.787275314331055
    10. ' swap' → logprob: -9.787275314331055

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.056564606726169586
    2. '=' → logprob: -2.9315645694732666
    3. '=i' → logprob: -6.556564807891846
    4. ' in' → logprob: -8.931564331054688
    5. ')' → logprob: -10.181564331054688
    6. ' ' → logprob: -10.681564331054688
    7. '<|end|>' → logprob: -10.681564331054688
    8. ',' → logprob: -11.806564331054688
    9. '<|end|>' → logprob: -12.056564331054688
    10. '=j' → logprob: -12.431564331054688

Token 130: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4740777015686035
    2. ' i' → logprob: -0.9740777015686035
    3. '	i' → logprob: -16.224077224731445
    4. '{i' → logprob: -16.474077224731445
    5. '[i' → logprob: -16.599077224731445
    6. ' next' → logprob: -16.599077224731445
    7. '(i' → logprob: -16.599077224731445
    8. ' ' → logprob: -16.974077224731445
    9. '   ' → logprob: -17.099077224731445
    10. ',i' → logprob: -17.974077224731445

Token 131: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011048762127757072
    2. ' +' → logprob: -4.511048793792725
    3. '+
' → logprob: -14.511048316955566
    4. '<|end|>' → logprob: -15.261048316955566
    5. '+j' → logprob: -15.761048316955566
    6. '＋' → logprob: -17.386049270629883
    7. ' +
' → logprob: -17.886049270629883
    8. '+i' → logprob: -18.011049270629883
    9. '<|end|>' → logprob: -18.011049270629883
    10. '()+' → logprob: -18.261049270629883

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.750179290771484
    4. '```' → logprob: -17.500179290771484
    5. '0' → logprob: -17.625179290771484
    6. '[' → logprob: -17.750179290771484
    7. '<|end|>' → logprob: -17.875179290771484
    8. '           ' → logprob: -18.625179290771484
    9. '
' → logprob: -18.750179290771484
    10. '+' → logprob: -18.875179290771484

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029875844484195113
    2. 'arr' → logprob: -8.375298500061035
    3. ' ' → logprob: -9.625298500061035
    4. '[arr' → logprob: -14.125298500061035
    5. '```' → logprob: -14.500298500061035
    6. '[' → logprob: -15.750298500061035
    7. '(arr' → logprob: -15.875298500061035
    8. '   ' → logprob: -16.25029945373535
    9. ' arr' → logprob: -16.25029945373535
    10. '0' → logprob: -16.25029945373535

Token 134: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5218667387962341
    2. '<|end|>' → logprob: -1.271866798400879
    3. 'while' → logprob: -2.396866798400879
    4. ' while' → logprob: -4.271866798400879
    5. '           ' → logprob: -4.396866798400879
    6. '<|end|>' → logprob: -5.021866798400879
    7. '	while' → logprob: -7.646866798400879
    8. 'While' → logprob: -7.771866798400879
    9. '            
' → logprob: -8.021866798400879
    10. '  
' → logprob: -8.521866798400879

Token 136: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.014443780295550823
    2. ' while' → logprob: -4.264443874359131
    3. '           ' → logprob: -8.889443397521973
    4. '<|end|>' → logprob: -9.264443397521973
    5. '```' → logprob: -11.014443397521973
    6. 'j' → logprob: -11.889443397521973
    7. '       ' → logprob: -11.889443397521973
    8. 'While' → logprob: -12.264443397521973
    9. '	while' → logprob: -12.514443397521973
    10. 'for' → logprob: -12.639443397521973

Token 137: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03886157646775246
    2. ' j' → logprob: -3.2888615131378174
    3. 'arr' → logprob: -7.1638617515563965
    4. ' arr' → logprob: -10.038861274719238
    5. '	j' → logprob: -14.038861274719238
    6. '```' → logprob: -15.038861274719238
    7. ' ' → logprob: -15.163861274719238
    8. '`' → logprob: -15.788861274719238
    9. '(j' → logprob: -15.788861274719238
    10. '   ' → logprob: -16.538862228393555

Token 138: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7989526391029358
    2. '<len' → logprob: -0.7989526391029358
    3. ' <' → logprob: -2.298952579498291
    4. 'len' → logprob: -11.42395305633545
    5. '<size' → logprob: -11.67395305633545
    6. '<|end|>' → logprob: -11.92395305633545
    7. ' len' → logprob: -13.29895305633545
    8. '<n' → logprob: -13.54895305633545
    9. '()<' → logprob: -13.54895305633545
    10. '<num' → logprob: -13.67395305633545

Token 139: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.868328920158092e-05
    2. ' len' → logprob: -10.500028610229492
    3. 'N' → logprob: -14.000028610229492
    4. '   ' → logprob: -15.875028610229492
    5. '(len' → logprob: -16.125028610229492
    6. '	len' → logprob: -17.875028610229492
    7. '=len' → logprob: -18.500028610229492
    8. 'n' → logprob: -18.875028610229492
    9. '<len' → logprob: -19.875028610229492
    10. ',len' → logprob: -20.375028610229492

Token 140: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0004895264864899218
    2. 'arr' → logprob: -7.625489711761475
    3. ' arr' → logprob: -13.875489234924316
    4. '<arr' → logprob: -15.500489234924316
    5. '	arr' → logprob: -15.625489234924316
    6. '[arr' → logprob: -15.875489234924316
    7. '(' → logprob: -16.500490188598633
    8. 'Arr' → logprob: -17.375490188598633
    9. '_arr' → logprob: -18.500490188598633
    10. ')' → logprob: -18.750490188598633

Token 141: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10904590040445328
    2. 'and' → logprob: -2.35904598236084
    3. ')' → logprob: -4.73404598236084
    4. ' )' → logprob: -12.48404598236084
    5. '	and' → logprob: -13.10904598236084
    6. '):
' → logprob: -13.23404598236084
    7. ' ' → logprob: -14.35904598236084
    8. ' и' → logprob: -15.10904598236084
    9. '):' → logprob: -15.35904598236084
    10. '()' → logprob: -15.85904598236084

Token 142: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692999839782715
    2. 'and' → logprob: -2.126929998397827
    3. ')' → logprob: -13.876930236816406
    4. ' ' → logprob: -14.126930236816406
    5. '	and' → logprob: -16.251930236816406
    6. '   ' → logprob: -16.751930236816406
    7. '):
' → logprob: -17.376930236816406
    8. '```' → logprob: -17.501930236816406
    9. ' и' → logprob: -17.751930236816406
    10. '
' → logprob: -18.376930236816406

Token 143: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0019337546546012163
    2. ' arr' → logprob: -6.251933574676514
    3. '(arr' → logprob: -12.251934051513672
    4. '	arr' → logprob: -15.501934051513672
    5. 'initial' → logprob: -15.876934051513672
    6. '   ' → logprob: -17.751934051513672
    7. ' (' → logprob: -18.251934051513672
    8. '$arr' → logprob: -18.626934051513672
    9. '_arr' → logprob: -18.626934051513672
    10. '[arr' → logprob: -19.001934051513672

Token 144: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2664456789934775e-06
    2. '[i' → logprob: -14.000000953674316
    3. 'j' → logprob: -15.500000953674316
    4. '```' → logprob: -16.375001907348633
    5. '[' → logprob: -16.500001907348633
    6. ' [' → logprob: -18.125001907348633
    7. '
' → logprob: -18.625001907348633
    8. '[
' → logprob: -19.125001907348633
    9. '	j' → logprob: -19.625001907348633
    10. '[q' → logprob: -20.750001907348633

Token 145: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1674267202615738
    2. ' !=' → logprob: -1.9174267053604126
    3. '==' → logprob: -5.167426586151123
    4. ']!=' → logprob: -7.417426586151123
    5. ']' → logprob: -7.667426586151123
    6. '```' → logprob: -8.792427062988281
    7. ' ==' → logprob: -8.917427062988281
    8. ')!=' → logprob: -10.542427062988281
    9. ']==' → logprob: -10.667427062988281
    10. ')' → logprob: -10.667427062988281

Token 146: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0242896918207407
    2. '==' → logprob: -3.899289608001709
    3. ' !=' → logprob: -5.649289608001709
    4. '```' → logprob: -9.399290084838867
    5. ' ==' → logprob: -9.899290084838867
    6. '=' → logprob: -9.899290084838867
    7. ']!=' → logprob: -11.274290084838867
    8. '()!=' → logprob: -12.399290084838867
    9. '!==' → logprob: -12.524290084838867
    10. ')!=' → logprob: -12.774290084838867

Token 147: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.033676933497190475
    2. ' target' → logprob: -3.408676862716675
    3. 'arr' → logprob: -10.533677101135254
    4. 'initial' → logprob: -13.533677101135254
    5. '(target' → logprob: -14.158677101135254
    6. '	target' → logprob: -14.283677101135254
    7. '
' → logprob: -14.408677101135254
    8. '   ' → logprob: -14.783677101135254
    9. '[target' → logprob: -15.533677101135254
    10. '           ' → logprob: -15.783677101135254

Token 148: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001933992956764996
    2. '[j' → logprob: -6.251934051513672
    3. '[' → logprob: -12.751934051513672
    4. '```' → logprob: -13.501934051513672
    5. 'i' → logprob: -14.876934051513672
    6. ' [' → logprob: -15.251934051513672
    7. 'j' → logprob: -16.001934051513672
    8. '[
' → logprob: -16.001934051513672
    9. '`' → logprob: -16.251934051513672
    10. '
' → logprob: -17.251934051513672

Token 149: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.7412464618682861
    2. ']:
' → logprob: -1.3662464618682861
    3. ':' → logprob: -1.8662464618682861
    4. '):
' → logprob: -2.991246461868286
    5. '):' → logprob: -3.241246461868286
    6. ':
' → logprob: -3.991246461868286
    7. ']' → logprob: -5.741246223449707
    8. ' and' → logprob: -7.366246223449707
    9. '       ' → logprob: -8.241246223449707
    10. '   ' → logprob: -8.741246223449707

Token 150: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28051507472991943
    2. ':
' → logprob: -2.030515193939209
    3. '           ' → logprob: -2.655515193939209
    4. ':' → logprob: -4.155515193939209
    5. 'j' → logprob: -4.530515193939209
    6. ' and' → logprob: -5.530515193939209
    7. '```' → logprob: -5.655515193939209
    8. '
' → logprob: -6.280515193939209
    9. '                   ' → logprob: -6.655515193939209
    10. ' j' → logprob: -6.780515193939209

Token 151: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.31566768884658813
    2. 'j' (adapté à ' j') → logprob: -1.3156676292419434
    3. '               ' → logprob: -6.315667629241943
    4. '                   ' → logprob: -8.315668106079102
    5. '	j' → logprob: -9.065668106079102
    6. '           ' → logprob: -9.565668106079102
    7. '                ' → logprob: -10.065668106079102
    8. '   ' → logprob: -10.690668106079102
    9. '```' → logprob: -10.815668106079102
    10. ' ' → logprob: -10.815668106079102

Token 152: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07169616222381592
    2. ' +=' → logprob: -3.1966962814331055
    3. '+' → logprob: -3.5716962814331055
    4. '           ' → logprob: -9.946696281433105
    5. '=' → logprob: -10.321696281433105
    6. ']+=' → logprob: -10.946696281433105
    7. ' +' → logprob: -11.196696281433105
    8. ')' → logprob: -11.321696281433105
    9. '```' → logprob: -11.446696281433105
    10. '               ' → logprob: -11.571696281433105

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '```' → logprob: -16.626502990722656
    4. '   ' → logprob: -16.751502990722656
    5. '           ' → logprob: -18.876502990722656
    6. '+' → logprob: -18.939002990722656
    7. '
' → logprob: -19.001502990722656
    8. '  ' → logprob: -19.564002990722656
    9. ' ' → logprob: -19.564002990722656
    10. '                   ' → logprob: -19.626502990722656

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -17.125003814697266
    4. '   ' → logprob: -17.375003814697266
    5. '
' → logprob: -17.562503814697266
    6. '۱' → logprob: -18.875003814697266
    7. '2' → logprob: -19.062503814697266
    8. 'j' → logprob: -19.187503814697266
    9. '１' → logprob: -19.250003814697266
    10. '  ' → logprob: -19.250003814697266

Token 155: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009965496137738228
    2. '
' → logprob: -4.759965419769287
    3. '<|end|>' → logprob: -7.009965419769287
    4. '```' → logprob: -9.134965896606445
    5. '       ' → logprob: -9.509965896606445
    6. '            
' → logprob: -9.634965896606445
    7. 'j' → logprob: -10.259965896606445
    8. ',' → logprob: -10.259965896606445
    9. '<|end|>' → logprob: -10.384965896606445
    10. '  
' → logprob: -11.259965896606445

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008079977706074715
    2. '
' → logprob: -4.883080005645752
    3. '       ' → logprob: -9.008079528808594
    4. ' if' → logprob: -9.258079528808594
    5. '            
' → logprob: -10.008079528808594
    6. 'if' → logprob: -10.258079528808594
    7. ',' → logprob: -10.383079528808594
    8. '```' → logprob: -10.508079528808594
    9. '		' → logprob: -10.633079528808594
    10. '<|end|>' → logprob: -11.008079528808594

Token 157: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9899733066558838
    2. 'arr' → logprob: -0.9899733066558838
    3. ' if' → logprob: -1.7399733066558838
    4. 'if' → logprob: -3.489973306655884
    5. ' arr' → logprob: -3.739973306655884
    6. '       ' → logprob: -4.364973068237305
    7. '[arr' → logprob: -5.364973068237305
    8. 'swap' → logprob: -5.864973068237305
    9. '<|end|>' → logprob: -5.864973068237305
    10. ' swap' → logprob: -7.489973068237305

Token 158: ' bubble' (ID: 40447)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.5788609385490417
    2. 'arr' → logprob: -1.3288609981536865
    3. ' while' → logprob: -2.5788609981536865
    4. 'while' → logprob: -2.9538609981536865
    5. '           ' → logprob: -3.7038609981536865
    6. ' if' → logprob: -4.578860759735107
    7. 'if' → logprob: -5.328860759735107
    8. '#' → logprob: -5.953860759735107
    9. ' #' → logprob: -6.328860759735107
    10. '   ' → logprob: -7.328860759735107

Token 159: ' it' (ID: 480)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.700302004814148
    2. ' sort' → logprob: -0.950302004814148
    3. '_sort' → logprob: -3.0753021240234375
    4. 'swap' → logprob: -4.4503021240234375
    5. 'j' → logprob: -4.8253021240234375
    6. '   ' → logprob: -4.8253021240234375
    7. ' j' → logprob: -5.0753021240234375
    8. '_swap' → logprob: -5.0753021240234375
    9. ' ' → logprob: -5.3253021240234375
    10. '<|end|>' → logprob: -5.4503021240234375

Token 160: ' to' (ID: 316)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.3046489357948303
    2. 'j' → logprob: -2.1796488761901855
    3. 'up' → logprob: -2.3046488761901855
    4. 'swap' → logprob: -3.9296488761901855
    5. ' j' → logprob: -4.5546488761901855
    6. 'while' → logprob: -5.3046488761901855
    7. '           ' → logprob: -6.0546488761901855
    8. ' for' → logprob: -6.5546488761901855
    9. 'for' → logprob: -6.5546488761901855
    10. '       ' → logprob: -6.5546488761901855

Token 161: ' position' (ID: 4010)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3137497901916504
    2. 'j' → logprob: -1.3137497901916504
    3. ' i' → logprob: -8.063749313354492
    4. 'i' → logprob: -8.813749313354492
    5. '    ' → logprob: -11.813749313354492
    6. '	j' → logprob: -12.188749313354492
    7. ' ' → logprob: -12.563749313354492
    8. '[j' → logprob: -13.188749313354492
    9. ' the' → logprob: -13.313749313354492
    10. '            ' → logprob: -13.813749313354492

Token 162: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.17154668271541595
    2. ' j' → logprob: -1.9215466976165771
    3. 'i' → logprob: -4.546546459197998
    4. ' i' → logprob: -7.421546459197998
    5. '	j' → logprob: -10.421546936035156
    6. '    ' → logprob: -11.546546936035156
    7. '           ' → logprob: -12.546546936035156
    8. ' ' → logprob: -12.671546936035156
    9. '<|end|>' → logprob: -13.046546936035156
    10. '   ' → logprob: -13.296546936035156

Token 163: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.309382373117842e-05
    2. '<|end|>' → logprob: -11.250033378601074
    3. ' for' → logprob: -12.250033378601074
    4. '               ' → logprob: -12.750033378601074
    5. '
' → logprob: -13.000033378601074
    6. '		' → logprob: -13.125033378601074
    7. '<|end|>' → logprob: -13.250033378601074
    8. ',' → logprob: -13.250033378601074
    9. '            
' → logprob: -13.750033378601074
    10. '       ' → logprob: -14.500033378601074

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.273621405242011e-05
    2. ' for' → logprob: -11.625032424926758
    3. '<|end|>' → logprob: -11.875032424926758
    4. '               ' → logprob: -12.125032424926758
    5. ' while' → logprob: -13.000032424926758
    6. '            
' → logprob: -13.125032424926758
    7. '		' → logprob: -13.375032424926758
    8. '	       ' → logprob: -13.875032424926758
    9. ',' → logprob: -14.000032424926758
    10. 'while' → logprob: -14.125032424926758

Token 165: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0703921914100647
    2. '           ' → logprob: -3.07039213180542
    3. ' while' → logprob: -3.94539213180542
    4. 'for' → logprob: -6.19539213180542
    5. ' for' → logprob: -9.070392608642578
    6. '               ' → logprob: -9.945392608642578
    7. '	while' → logprob: -11.945392608642578
    8. ' ' → logprob: -12.695392608642578
    9. '   ' → logprob: -12.695392608642578
    10. 'k' → logprob: -12.820392608642578

Token 166: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029752222821116447
    2. ' j' → logprob: -3.529752254486084
    3. '	j' → logprob: -13.404751777648926
    4. '$j' → logprob: -16.529752731323242
    5. '<|end|>' → logprob: -17.029752731323242
    6. '   ' → logprob: -17.279752731323242
    7. '[j' → logprob: -17.404752731323242
    8. '    ' → logprob: -17.904752731323242
    9. ':j' → logprob: -18.029752731323242
    10. ' ' → logprob: -18.279752731323242

Token 167: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06196925416588783
    2. '>' → logprob: -2.81196928024292
    3. ' ' → logprob: -14.561968803405762
    4. '-' → logprob: -15.061968803405762
    5. ' ' → logprob: -15.061968803405762
    6. ' >
' → logprob: -16.061969757080078
    7. '   ' → logprob: -16.311969757080078
    8. '```' → logprob: -16.686969757080078
    9. ' !=' → logprob: -16.936969757080078
    10. ' >
' → logprob: -17.436969757080078

Token 168: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3132660686969757
    2. 'i' → logprob: -1.3132660388946533
    3. '0' → logprob: -12.813265800476074
    4. '	i' → logprob: -13.938265800476074
    5. ' ' → logprob: -14.938265800476074
    6. '(i' → logprob: -17.06326675415039
    7. '=i' → logprob: -17.06326675415039
    8. ',i' → logprob: -17.18826675415039
    9. '```' → logprob: -17.31326675415039
    10. ')i' → logprob: -17.56326675415039

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8854118585586548
    2. '<|end|>' → logprob: -1.2604118585586548
    3. ':
' → logprob: -2.1354117393493652
    4. '):
' → logprob: -3.1354117393493652
    5. '):' → logprob: -3.2604117393493652
    6. ' ' → logprob: -3.6354117393493652
    7. '0' → logprob: -4.385411739349365
    8. '1' → logprob: -4.510411739349365
    9. ' and' → logprob: -4.635411739349365
    10. '<|end|>' → logprob: -4.635411739349365

Token 170: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04794682189822197
    2. ' arr' → logprob: -3.4229469299316406
    3. 'arr' → logprob: -4.922946929931641
    4. '<|end|>' → logprob: -5.547946929931641
    5. '           ' → logprob: -7.172946929931641
    6. '                ' → logprob: -7.797946929931641
    7. ' ' → logprob: -7.797946929931641
    8. '            ' → logprob: -8.67294692993164
    9. '[arr' → logprob: -8.67294692993164
    10. ' swap' → logprob: -8.67294692993164

Token 171: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.20170684158802032
    2. ' arr' → logprob: -1.701706886291504
    3. '               ' → logprob: -8.826706886291504
    4. '	arr' → logprob: -9.451706886291504
    5. '[arr' → logprob: -9.951706886291504
    6. '(arr' → logprob: -11.951706886291504
    7. '           ' → logprob: -12.576706886291504
    8. '$arr' → logprob: -12.701706886291504
    9. '
' → logprob: -13.076706886291504
    10. '<arr' → logprob: -13.576706886291504

Token 172: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.881560041918419e-05
    2. '[' → logprob: -10.250039100646973
    3. '[
' → logprob: -13.500039100646973
    4. ',j' → logprob: -13.875039100646973
    5. 'j' → logprob: -14.750039100646973
    6. ',' → logprob: -15.875039100646973
    7. '
' → logprob: -15.875039100646973
    8. '[js' → logprob: -16.000038146972656
    9. '][' → logprob: -16.250038146972656
    10. '[i' → logprob: -17.000038146972656

Token 173: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.19369634985923767
    2. '-' → logprob: -2.0686962604522705
    3. ']' → logprob: -3.6936962604522705
    4. ' -' → logprob: -3.9436962604522705
    5. ' ],' → logprob: -5.31869649887085
    6. ' ]' → logprob: -8.443696022033691
    7. 'swap' → logprob: -8.818696022033691
    8. '],
' → logprob: -10.193696022033691
    9. '<|end|>' → logprob: -10.318696022033691
    10. '[' → logprob: -10.943696022033691

Token 174: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.20144714415073395
    2. ' arr' → logprob: -1.7014471292495728
    3. '	arr' → logprob: -10.451447486877441
    4. '[arr' → logprob: -12.701447486877441
    5. '(arr' → logprob: -14.201447486877441
    6. '<|end|>' → logprob: -14.576447486877441
    7. '$arr' → logprob: -14.701447486877441
    8. '<arr' → logprob: -15.576447486877441
    9. ' ' → logprob: -16.826446533203125
    10. '           ' → logprob: -17.076446533203125

Token 175: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.703443770878948e-06
    2. '[
' → logprob: -12.875007629394531
    3. '[' → logprob: -13.375007629394531
    4. 'j' → logprob: -13.750007629394531
    5. '[arr' → logprob: -14.000007629394531
    6. '
' → logprob: -15.000007629394531
    7. '```' → logprob: -15.500007629394531
    8. '[user' → logprob: -15.500007629394531
    9. 'arr' → logprob: -16.00000762939453
    10. '[i' → logprob: -16.00000762939453

Token 176: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005601812736131251
    2. ' -' → logprob: -7.500560283660889
    3. '[j' → logprob: -12.00055980682373
    4. '[' → logprob: -14.00055980682373
    5. '1' → logprob: -15.25055980682373
    6. '[-' → logprob: -16.750560760498047
    7. 'j' → logprob: -16.750560760498047
    8. ']' → logprob: -17.875560760498047
    9. '```' → logprob: -18.375560760498047
    10. '−' → logprob: -19.125560760498047

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -16.75
    4. ']' → logprob: -17.0
    5. '   ' → logprob: -17.25
    6. '           ' → logprob: -17.625
    7. '<|end|>' → logprob: -17.625
    8. '0' → logprob: -18.625
    9. 'def' → logprob: -18.875
    10. '               ' → logprob: -19.375

Token 178: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8346245884895325
    2. ']' → logprob: -1.2096245288848877
    3. ' =' → logprob: -1.3346245288848877
    4. ']=' → logprob: -5.459624767303467
    5. '   ' → logprob: -10.459624290466309
    6. '<|end|>' → logprob: -10.834624290466309
    7. ' ' → logprob: -11.084624290466309
    8. '=
' → logprob: -11.459624290466309
    9. ',' → logprob: -11.459624290466309
    10. ')' → logprob: -11.584624290466309

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031797364354133606
    2. ' =' → logprob: -5.753179550170898
    3. ',' → logprob: -14.128179550170898
    4. '=
' → logprob: -14.253179550170898
    5. '<|end|>' → logprob: -15.003179550170898
    6. '=

' → logprob: -16.2531795501709
    7. '.=' → logprob: -17.1281795501709
    8. '=user' → logprob: -17.2531795501709
    9. ']=' → logprob: -17.5031795501709
    10. '=}' → logprob: -17.6281795501709

Token 180: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.048588622361421585
    2. ' arr' → logprob: -3.048588514328003
    3. '	arr' → logprob: -13.673588752746582
    4. '(arr' → logprob: -16.423587799072266
    5. '[arr' → logprob: -17.173587799072266
    6. '$arr' → logprob: -18.048587799072266
    7. '<arr' → logprob: -18.798587799072266
    8. '_arr' → logprob: -19.048587799072266
    9. '.arr' → logprob: -19.048587799072266
    10. ' ' → logprob: -19.423587799072266

Token 181: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002217748697148636
    2. '[' → logprob: -8.875222206115723
    3. 'j' → logprob: -9.625222206115723
    4. '[i' → logprob: -11.750222206115723
    5. '[
' → logprob: -12.875222206115723
    6. ',j' → logprob: -13.250222206115723
    7. '```' → logprob: -13.875222206115723
    8. ',' → logprob: -14.125222206115723
    9. ']' → logprob: -14.500222206115723
    10. '[arr' → logprob: -14.875222206115723

Token 182: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03829646483063698
    2. '[j' → logprob: -4.163296699523926
    3. ']' → logprob: -4.788296699523926
    4. 'j' → logprob: -5.288296699523926
    5. ' -' → logprob: -5.913296699523926
    6. '],' → logprob: -6.288296699523926
    7. '[' → logprob: -6.538296699523926
    8. '1' → logprob: -7.288296699523926
    9. ',' → logprob: -7.538296699523926
    10. '0' → logprob: -8.038296699523926

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -16.000003814697266
    4. '<|end|>' → logprob: -16.125003814697266
    5. '```' → logprob: -16.250003814697266
    6. '   ' → logprob: -17.500003814697266
    7. ')' → logprob: -17.875003814697266
    8. 'arr' → logprob: -18.000003814697266
    9. '2' → logprob: -18.125003814697266
    10. '...' → logprob: -18.625003814697266

Token 184: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03542254865169525
    2. '],' → logprob: -3.4104225635528564
    3. ',j' → logprob: -6.535422325134277
    4. ' ,' → logprob: -8.910422325134277
    5. 'arr' → logprob: -9.160422325134277
    6. ']' → logprob: -9.910422325134277
    7. '},' → logprob: -12.160422325134277
    8. ',
' → logprob: -12.160422325134277
    9. '[arr' → logprob: -12.160422325134277
    10. '],
' → logprob: -12.785422325134277

Token 185: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0007100477814674377
    2. ' arr' → logprob: -7.2507100105285645
    3. '	arr' → logprob: -16.000709533691406
    4. '(arr' → logprob: -17.750709533691406
    5. '[arr' → logprob: -18.375709533691406
    6. '$arr' → logprob: -19.125709533691406
    7. '.arr' → logprob: -20.000709533691406
    8. ' ' → logprob: -20.125709533691406
    9. '<arr' → logprob: -20.250709533691406
    10. '
' → logprob: -21.250709533691406

Token 186: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.001422495348379016
    2. 'j' → logprob: -6.62642240524292
    3. ']' → logprob: -10.001422882080078
    4. '][' → logprob: -10.626422882080078
    5. '[' → logprob: -11.126422882080078
    6. '[i' → logprob: -12.501422882080078
    7. '[
' → logprob: -13.001422882080078
    8. '```' → logprob: -13.001422882080078
    9. 'arr' → logprob: -13.251422882080078
    10. '	j' → logprob: -14.751422882080078

Token 187: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003385614836588502
    2. ']
' → logprob: -8.125338554382324
    3. 'j' → logprob: -10.625338554382324
    4. '[j' → logprob: -11.125338554382324
    5. ' ]' → logprob: -13.875338554382324
    6. '<|end|>' → logprob: -13.875338554382324
    7. ')' → logprob: -15.125338554382324
    8. '']' → logprob: -15.375338554382324
    9. '```' → logprob: -16.12533950805664
    10. ']

' → logprob: -16.12533950805664

Token 188: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013429726473987103
    2. 'j' → logprob: -4.888429641723633
    3. ' j' → logprob: -5.263429641723633
    4. '```' → logprob: -8.263429641723633
    5. '                
' → logprob: -8.638429641723633
    6. '                ' → logprob: -9.513429641723633
    7. '
' → logprob: -10.263429641723633
    8. '                   ' → logprob: -11.013429641723633
    9. '[j' → logprob: -11.263429641723633
    10. ' ' → logprob: -11.763429641723633

Token 189: ' swaps' (ID: 150699)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.354007363319397
    2. 'j' → logprob: -1.354007363319397
    3. ' swaps' → logprob: -3.2290072441101074
    4. ' j' → logprob: -8.479007720947266
    5. ' sw' → logprob: -9.479007720947266
    6. 'swap' → logprob: -11.229007720947266
    7. '               ' → logprob: -11.979007720947266
    8. '	sw' → logprob: -12.104007720947266
    9. 'Sw' → logprob: -12.229007720947266
    10. '
' → logprob: -12.354007720947266

Token 190: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20575854182243347
    2. '+=' → logprob: -1.7057585716247559
    3. '+' → logprob: -5.455758571624756
    4. '<|end|>' → logprob: -10.080758094787598
    5. ' +' → logprob: -11.955758094787598
    6. ']+=' → logprob: -12.080758094787598
    7. '```' → logprob: -12.455758094787598
    8. '1' → logprob: -13.830758094787598
    9. '++' → logprob: -13.955758094787598
    10. 's' → logprob: -13.955758094787598

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -19.125123977661133
    4. '```' → logprob: -19.500123977661133
    5. '  ' → logprob: -20.125123977661133
    6. '<|end|>' → logprob: -20.250123977661133
    7. '
' → logprob: -21.000123977661133
    8. '           ' → logprob: -21.750123977661133
    9. '0' → logprob: -21.750123977661133
    10. ' ' → logprob: -21.875123977661133

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.0000057220459
    4. '```' → logprob: -19.6250057220459
    5. '  ' → logprob: -21.1250057220459
    6. '
' → logprob: -21.1250057220459
    7. '<|end|>' → logprob: -21.5000057220459
    8. '-' → logprob: -22.0000057220459
    9. '           ' → logprob: -22.3750057220459
    10. '0' → logprob: -22.5000057220459

Token 193: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020067949662916362
    2. 'j' → logprob: -9.125200271606445
    3. '           ' → logprob: -9.875200271606445
    4. '                   ' → logprob: -11.375200271606445
    5. ' j' → logprob: -11.875200271606445
    6. '                
' → logprob: -12.625200271606445
    7. '              ' → logprob: -12.750200271606445
    8. '                ' → logprob: -13.000200271606445
    9. '<|end|>' → logprob: -13.000200271606445
    10. '	           ' → logprob: -13.125200271606445

Token 194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001270589418709278
    2. 'j' → logprob: -6.876270771026611
    3. '           ' → logprob: -9.126270294189453
    4. '                   ' → logprob: -9.876270294189453
    5. ' j' → logprob: -10.501270294189453
    6. '   ' → logprob: -11.126270294189453
    7. '                ' → logprob: -11.876270294189453
    8. '              ' → logprob: -12.126270294189453
    9. '       ' → logprob: -12.376270294189453
    10. '```' → logprob: -12.376270294189453

Token 195: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -2.939851037808694e-05
    2. ' j' → logprob: -10.500029563903809
    3. '               ' → logprob: -13.500029563903809
    4. '	j' → logprob: -14.875029563903809
    5. '           ' → logprob: -16.875028610229492
    6. '                   ' → logprob: -17.625028610229492
    7. '   ' → logprob: -17.875028610229492
    8. '       ' → logprob: -20.500028610229492
    9. '_j' → logprob: -20.750028610229492
    10. '[j' → logprob: -21.375028610229492

Token 196: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07901239395141602
    2. '-=' → logprob: -2.579012393951416
    3. ' -=' → logprob: -9.329011917114258
    4. '=' → logprob: -10.454011917114258
    5. '```' → logprob: -12.829011917114258
    6. '-)' → logprob: -14.829011917114258
    7. '>' → logprob: -14.829011917114258
    8. ')' → logprob: -14.829011917114258
    9. ' -' → logprob: -15.329011917114258
    10. '−' → logprob: -15.454011917114258

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.875003814697266
    4. '   ' → logprob: -19.500003814697266
    5. '<|end|>' → logprob: -20.500003814697266
    6. '
' → logprob: -21.000003814697266
    7. '           ' → logprob: -21.812503814697266
    8. '۱' → logprob: -22.000003814697266
    9. '  ' → logprob: -22.125003814697266
    10. '       ' → logprob: -22.187503814697266

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -18.875
    4. '<|end|>' → logprob: -19.25
    5. '   ' → logprob: -19.5
    6. '  ' → logprob: -21.0
    7. '۱' → logprob: -21.1875
    8. '
' → logprob: -21.375
    9. '१' → logprob: -21.5
    10. '১' → logprob: -21.8125

Token 199: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3986404836177826
    2. '   ' → logprob: -1.148640513420105
    3. 'return' → logprob: -5.1486406326293945
    4. '    
' → logprob: -5.8986406326293945
    5. ' return' → logprob: -6.7736406326293945
    6. '<|end|>' → logprob: -6.7736406326293945
    7. '	return' → logprob: -7.7736406326293945
    8. '<|end|>' → logprob: -9.273640632629395
    9. '  
' → logprob: -9.648640632629395
    10. ' 
' → logprob: -9.898640632629395

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007023795507848263
    2. ' return' → logprob: -5.382023811340332
    3. 'return' → logprob: -6.757023811340332
    4. '
' → logprob: -6.882023811340332
    5. '	return' → logprob: -8.632023811340332
    6. '    
' → logprob: -11.507023811340332
    7. '```' → logprob: -11.632023811340332
    8. '       ' → logprob: -11.632023811340332
    9. '<|end|>' → logprob: -12.757023811340332
    10. ':return' → logprob: -14.132023811340332

Token 201: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3747554421424866
    2. 'return' (adapté à ' return') → logprob: -1.3747553825378418
    3. '
' → logprob: -2.999755382537842
    4. ' return' → logprob: -4.749755382537842
    5. '	return' → logprob: -7.124755382537842
    6. '    
' → logprob: -8.374755859375
    7. '```' → logprob: -9.749755859375
    8. ' ' → logprob: -10.374755859375
    9. '<|end|>' → logprob: -10.624755859375
    10. '  
' → logprob: -11.874755859375

Token 202: ' swaps' (ID: 150699)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.01105265598744154
    2. ' swaps' → logprob: -4.51105260848999
    3. 'swap' → logprob: -12.511053085327148
    4. ' sw' → logprob: -14.761053085327148
    5. '(sw' → logprob: -15.136053085327148
    6. '   ' → logprob: -15.636053085327148
    7. '	sw' → logprob: -15.636053085327148
    8. 'Sw' → logprob: -17.01105308532715
    9. '_sw' → logprob: -17.26105308532715
    10. '
' → logprob: -18.13605308532715

Token 203: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.850534200668335
    2. 'result' → logprob: -0.850534200668335
    3. 'target' → logprob: -2.725534200668335
    4. 'possible' → logprob: -3.850534200668335
    5. 'if' → logprob: -3.975534200668335
    6. 'start' → logprob: -5.100534439086914
    7. 'best' → logprob: -5.100534439086914
    8. '

' → logprob: -5.225534439086914
    9. 'res' → logprob: -5.475534439086914
    10. 'print' → logprob: -5.600534439086914

Token 204: '#' (ID: 2)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7092419266700745
    2. 'result' → logprob: -1.5842418670654297
    3. 'ans' → logprob: -2.0842418670654297
    4. 'swap' → logprob: -2.5842418670654297
    5. 'sw' → logprob: -3.3342418670654297
    6. 'target' → logprob: -3.8342418670654297
    7. 'answer' → logprob: -4.33424186706543
    8. '#' → logprob: -4.70924186706543
    9. 'if' → logprob: -4.83424186706543
    10. 'possible' → logprob: -5.08424186706543

Token 205: ' try' (ID: 2075)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.10519791394472122
    2. 'targets' → logprob: -3.8551979064941406
    3. 'res' → logprob: -4.105197906494141
    4. 'possible' → logprob: -4.355197906494141
    5. 'ans' → logprob: -4.480197906494141
    6. 'result' → logprob: -4.605197906494141
    7. 't' → logprob: -4.855197906494141
    8. 'answer' → logprob: -5.105197906494141
    9. '#' → logprob: -5.605197906494141
    10. 'for' → logprob: -5.980197906494141

Token 206: ' both' (ID: 2973)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.16791847348213196
    2. '0' → logprob: -2.9179184436798096
    3. ':' → logprob: -3.2929184436798096
    4. 'start' → logprob: -3.9179184436798096
    5. ' both' → logprob: -4.042918682098389
    6. ':
' → logprob: -4.542918682098389
    7. '1' → logprob: -5.542918682098389
    8. 'for' → logprob: -5.542918682098389
    9. 'starting' → logprob: -6.292918682098389
    10. 'two' → logprob: -7.167918682098389

Token 207: ' possible' (ID: 4149)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08367729932069778
    2. 'start' → logprob: -2.833677291870117
    3. ' start' → logprob: -5.333677291870117
    4. ' ' → logprob: -5.708677291870117
    5. 'possible' → logprob: -6.208677291870117
    6. 'poss' → logprob: -6.583677291870117
    7. 'starts' → logprob: -6.583677291870117
    8. 'options' → logprob: -6.833677291870117
    9. 'results' → logprob: -6.833677291870117
    10. 'targets' → logprob: -6.833677291870117

Token 208: ' starting' (ID: 8601)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03170105069875717
    2. ' start' → logprob: -3.78170108795166
    3. 'target' → logprob: -5.53170108795166
    4. 'starting' → logprob: -6.03170108795166
    5. 'targets' → logprob: -6.78170108795166
    6. ' starting' → logprob: -7.65670108795166
    7. ' target' → logprob: -8.40670108795166
    8. 'starts' → logprob: -9.40670108795166
    9. ' starts' → logprob: -10.28170108795166
    10. ' targets' → logprob: -10.28170108795166

Token 209: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.002329386305063963
    2. ' bits' → logprob: -6.877329349517822
    3. 'bit' → logprob: -7.002329349517822
    4. 'points' → logprob: -8.25232982635498
    5. '_bits' → logprob: -9.12732982635498
    6. 'start' → logprob: -11.62732982635498
    7. '_bit' → logprob: -12.62732982635498
    8. ' points' → logprob: -13.25232982635498
    9. 'positions' → logprob: -13.87732982635498
    10. 'values' → logprob: -14.87732982635498

Token 210: '
' (ID: 198)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -1.0557407140731812
    2. 'results' → logprob: -1.0557407140731812
    3. '
' → logprob: -1.9307407140731812
    4. 'result' → logprob: -3.1807408332824707
    5. 'res' → logprob: -3.5557408332824707
    6. 'best' → logprob: -3.8057408332824707
    7. 'min' → logprob: -4.055740833282471
    8. 'for' → logprob: -4.555740833282471
    9. '0' → logprob: -4.805740833282471
    10. 'ans' → logprob: -4.930740833282471

Token 211: 'bit' (ID: 6516)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.32098424434661865
    2. 'result' → logprob: -2.070984363555908
    3. 'ans' → logprob: -2.570984363555908
    4. 'sw' → logprob: -3.195984363555908
    5. 'results' → logprob: -3.820984363555908
    6. 'answer' → logprob: -5.445984363555908
    7. 'swap' → logprob: -6.320984363555908
    8. 'min' → logprob: -6.945984363555908
    9. 'answers' → logprob: -7.320984363555908
    10. 'best' → logprob: -7.695984363555908

Token 212: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06826110929250717
    2. '0' → logprob: -3.56826114654541
    3. 's' → logprob: -3.69326114654541
    4. '=' → logprob: -4.44326114654541
    5. '_' → logprob: -6.81826114654541
    6. '_options' → logprob: -11.19326114654541
    7. ' in' → logprob: -12.19326114654541
    8. '_choices' → logprob: -12.56826114654541
    9. '1' → logprob: -12.69326114654541
    10. '_s' → logprob: -12.94326114654541

Token 213: ' =' (ID: 314)
  Prédit: '_sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sw' → logprob: -0.052226126194000244
    2. ' =' → logprob: -3.6772260665893555
    3. '=' → logprob: -3.9272260665893555
    4. '0' → logprob: -5.9272260665893555
    5. '_' → logprob: -6.0522260665893555
    6. '_swap' → logprob: -7.9272260665893555
    7. 'sw' → logprob: -9.302226066589355
    8. ' _' → logprob: -9.677226066589355
    9. '_results' → logprob: -9.927226066589355
    10. '_count' → logprob: -10.177226066589355

Token 214: ' initial' (ID: 4871)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.05047549307346344
    2. ' build' → logprob: -3.425475597381592
    3. 'count' → logprob: -4.175475597381592
    4. ' count' → logprob: -7.300475597381592
    5. '0' → logprob: -7.425475597381592
    6. ' ' → logprob: -10.050475120544434
    7. '1' → logprob: -13.300475120544434
    8. '  ' → logprob: -13.675475120544434
    9. '	build' → logprob: -13.925475120544434
    10. 'bit' → logprob: -14.050475120544434

Token 215: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8462314605712891
    2. ')' → logprob: -1.221231460571289
    3. '[:' → logprob: -2.596231460571289
    4. '[:]' → logprob: -2.971231460571289
    5. '.copy' → logprob: -3.471231460571289
    6. '0' → logprob: -3.846231460571289
    7. '),' → logprob: -3.971231460571289
    8. ' ,' → logprob: -4.846231460571289
    9. 'count' → logprob: -4.846231460571289
    10. '[' → logprob: -5.096231460571289

Token 216: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.875059127807617
    3. ']' → logprob: -13.062559127807617
    4. '
' → logprob: -14.687559127807617
    5. ':' → logprob: -14.875059127807617
    6. '[' → logprob: -15.000059127807617
    7. '1' → logprob: -15.000059127807617
    8. '۰' → logprob: -15.062559127807617
    9. '#' → logprob: -15.250059127807617
    10. '-' → logprob: -15.375059127807617

Token 217: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10342878103256226
    2. ']
' → logprob: -2.353428840637207
    3. ']^' → logprob: -6.478428840637207
    4. ' ]' → logprob: -7.353428840637207
    5. '^' → logprob: -7.603428840637207
    6. ']==' → logprob: -8.103428840637207
    7. ' ]
' → logprob: -8.853428840637207
    8. ']

' → logprob: -10.853428840637207
    9. ']
' → logprob: -11.228428840637207
    10. ' ^' → logprob: -11.228428840637207

Token 218: 'target' (ID: 10857)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9677231311798096
    2. ' swaps' → logprob: -1.7177231311798096
    3. '0' → logprob: -2.0927231311798096
    4. 'bit' → logprob: -2.4677231311798096
    5. 'sw' → logprob: -2.9677231311798096
    6. 'if' → logprob: -3.5927231311798096
    7. 'swap' → logprob: -3.7177231311798096
    8. 'try' → logprob: -3.8427231311798096
    9. 'for' → logprob: -4.2177228927612305
    10. ' for' → logprob: -4.2177228927612305

Token 219: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17444303631782532
    2. '_' → logprob: -2.424443006515503
    3. ' =' → logprob: -2.674443006515503
    4. '=' → logprob: -6.049443244934082
    5. '_bit' → logprob: -9.299443244934082
    6. 's' → logprob: -9.424443244934082
    7. '_=' → logprob: -10.799443244934082
    8. '_zero' → logprob: -11.174443244934082
    9. '1' → logprob: -12.424443244934082
    10. ' ' → logprob: -12.674443244934082

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018935371190309525
    2. '=' → logprob: -4.018935203552246
    3. '0' → logprob: -7.643935203552246
    4. '_' → logprob: -8.143935203552246
    5. ' ' → logprob: -11.893935203552246
    6. '1' → logprob: -12.018935203552246
    7. 's' → logprob: -14.518935203552246
    8. '_target' → logprob: -15.018935203552246
    9. '_=' → logprob: -15.268935203552246
    10. '```' → logprob: -15.768935203552246

Token 221: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.04858794063329697
    2. ' build' → logprob: -3.0485880374908447
    3. '(build' → logprob: -15.548587799072266
    4. '	build' → logprob: -15.673587799072266
    5. ' ' → logprob: -16.798587799072266
    6. '   ' → logprob: -17.923587799072266
    7. 'Build' → logprob: -17.923587799072266
    8. 'b' → logprob: -18.298587799072266
    9. '_build' → logprob: -18.298587799072266
    10. 'building' → logprob: -18.298587799072266

Token 222: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.0011718906462192535
    2. 'target' → logprob: -6.751172065734863
    3. '(target' → logprob: -13.501172065734863
    4. '(p' → logprob: -15.626172065734863
    5. ' target' → logprob: -16.251171112060547
    6. 'arget' → logprob: -18.001171112060547
    7. 'Target' → logprob: -18.251171112060547
    8. '_' → logprob: -18.501171112060547
    9. ' _' → logprob: -18.751171112060547
    10. '(_' → logprob: -18.751171112060547

Token 223: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -14.62500286102295
    4. 'p' → logprob: -16.250003814697266
    5. '(target' → logprob: -16.625003814697266
    6. '(
' → logprob: -17.250003814697266
    7. '```' → logprob: -17.625003814697266
    8. 'target' → logprob: -18.500003814697266
    9. '((' → logprob: -19.375003814697266
    10. ' ' → logprob: -19.875003814697266

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.158350151963532e-05
    2. '0' → logprob: -10.000061988830566
    3. ' ,' → logprob: -11.250061988830566
    4. '1' → logprob: -13.375061988830566
    5. '(' → logprob: -13.750061988830566
    6. ',
' → logprob: -15.000061988830566
    7. ' ' → logprob: -16.87506103515625
    8. ')' → logprob: -17.50006103515625
    9. '，' → logprob: -17.62506103515625
    10. '2' → logprob: -17.62506103515625

Token 225: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04999888688325882
    2. 'bit' → logprob: -3.0499989986419678
    3. ' ' → logprob: -7.549998760223389
    4. ' bit' → logprob: -7.674998760223389
    5. '1' → logprob: -8.299999237060547
    6. '(bit' → logprob: -9.174999237060547
    7. '(' → logprob: -10.049999237060547
    8. ' (' → logprob: -11.674999237060547
    9. '   ' → logprob: -12.049999237060547
    10. 'b' → logprob: -13.299999237060547

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04939953237771988
    2. 'bit' → logprob: -3.0493996143341064
    3. '(bit' → logprob: -8.174399375915527
    4. '1' → logprob: -8.674399375915527
    5. '(' → logprob: -8.924399375915527
    6. ' bit' → logprob: -9.049399375915527
    7. ' ' → logprob: -9.299399375915527
    8. ' (' → logprob: -12.549399375915527
    9. '   ' → logprob: -12.549399375915527
    10. 'b' → logprob: -13.924399375915527

Token 227: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3133057951927185
    2. ')' → logprob: -1.3133058547973633
    3. ')
' → logprob: -10.313305854797363
    4. ')

' → logprob: -11.813305854797363
    5. ' )
' → logprob: -12.813305854797363
    6. ' )' → logprob: -15.063305854797363
    7. ')`
' → logprob: -15.563305854797363
    8. '0' → logprob: -16.563304901123047
    9. ')#' → logprob: -17.188304901123047
    10. '
' → logprob: -17.688304901123047

Token 228: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.02511892281472683
    2. 'sw' → logprob: -4.025118827819824
    3. '
' → logprob: -5.025118827819824
    4. 'swap' → logprob: -8.775118827819824
    5. ' target' → logprob: -9.525118827819824
    6. ' swaps' → logprob: -9.650118827819824
    7. 'bit' → logprob: -10.525118827819824
    8. 'if' → logprob: -12.400118827819824
    9. '#' → logprob: -12.525118827819824
    10. '  
' → logprob: -12.525118827819824

Token 229: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4685860574245453
    2. '2' → logprob: -1.3435860872268677
    3. ' =' → logprob: -2.718585968017578
    4. '=' → logprob: -3.593585968017578
    5. '1' → logprob: -4.093585968017578
    6. '_' → logprob: -6.718585968017578
    7. ' ' → logprob: -6.968585968017578
    8. '```' → logprob: -7.718585968017578
    9. ',' → logprob: -8.343585968017578
    10. '[' → logprob: -9.468585968017578

Token 230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. '＝' → logprob: -18.443147659301758
    4. ' ' → logprob: -18.818147659301758
    5. ',' → logprob: -20.443147659301758
    6. ')' → logprob: -20.693147659301758
    7. '=}' → logprob: -20.818147659301758
    8. ' ' → logprob: -20.818147659301758
    9. ' =)' → logprob: -20.818147659301758
    10. '=

' → logprob: -21.068147659301758

Token 231: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.3133000433444977
    2. ' build' → logprob: -1.3133000135421753
    3. '1' → logprob: -10.313300132751465
    4. ' ' → logprob: -13.313300132751465
    5. '	build' → logprob: -13.813300132751465
    6. '[' → logprob: -14.313300132751465
    7. '(build' → logprob: -14.313300132751465
    8. ' buil' → logprob: -14.813300132751465
    9. 'b' → logprob: -15.438300132751465
    10. '   ' → logprob: -15.563300132751465

Token 232: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.0019286326132714748
    2. 'target' → logprob: -6.251928806304932
    3. 'Target' → logprob: -17.001928329467773
    4. '_pattern' → logprob: -17.501928329467773
    5. '(target' → logprob: -17.751928329467773
    6. 'TARGET' → logprob: -17.876928329467773
    7. ' target' → logprob: -18.876928329467773
    8. 'arget' → logprob: -19.626928329467773
    9. '_' → logprob: -19.751928329467773
    10. '_t' → logprob: -20.126928329467773

Token 233: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0017113516805693507
    2. '(' → logprob: -6.376711368560791
    3. 'p' → logprob: -11.751710891723633
    4. '(
' → logprob: -14.626710891723633
    5. ' (' → logprob: -15.126710891723633
    6. '(P' → logprob: -15.501710891723633
    7. ',' → logprob: -16.626710891723633
    8. ' p' → logprob: -16.626710891723633
    9. ' ' → logprob: -16.751710891723633
    10. '```' → logprob: -17.251710891723633

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.019237768370658e-05
    2. '1' → logprob: -9.625090599060059
    3. '(' → logprob: -11.125090599060059
    4. ' ,' → logprob: -12.375090599060059
    5. '0' → logprob: -12.625090599060059
    6. ',
' → logprob: -14.250090599060059
    7. '2' → logprob: -14.625090599060059
    8. '[' → logprob: -16.250089645385742
    9. ' ' → logprob: -16.250089645385742
    10. ')' → logprob: -16.625089645385742

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. '   ' → logprob: -18.129619598388672
    4. '0' → logprob: -19.379619598388672
    5. '１' → logprob: -20.879619598388672
    6. '  ' → logprob: -20.942119598388672
    7. '```' → logprob: -21.379619598388672
    8. '
' → logprob: -21.379619598388672
    9. 'def' → logprob: -21.442119598388672
    10. '(' → logprob: -21.629619598388672

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '0' → logprob: -18.875001907348633
    4. '```' → logprob: -19.562501907348633
    5. '   ' → logprob: -19.937501907348633
    6. '(' → logprob: -20.375001907348633
    7. 'bit' → logprob: -20.687501907348633
    8. '
' → logprob: -20.750001907348633
    9. '１' → logprob: -20.875001907348633
    10. 'def' → logprob: -21.250001907348633

Token 237: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06216911971569061
    2. ')
' → logprob: -2.812169075012207
    3. ')

' → logprob: -8.562169075012207
    4. ')
' → logprob: -11.812169075012207
    5. 'if' → logprob: -13.937169075012207
    6. 'target' → logprob: -14.687169075012207
    7. ' )' → logprob: -14.937169075012207
    8. '#' → logprob: -15.187169075012207
    9. ')`' → logprob: -15.687169075012207
    10. ')

' → logprob: -15.812169075012207

Token 238: '#' (ID: 2)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.2182822823524475
    2. 'res' → logprob: -1.9682822227478027
    3. 'ans' → logprob: -3.2182822227478027
    4. 'result' → logprob: -4.468282222747803
    5. 'answer' → logprob: -6.093282222747803
    6. 'swap' → logprob: -6.343282222747803
    7. 'if' → logprob: -7.968282222747803
    8. 's' → logprob: -8.468282699584961
    9. 'print' → logprob: -8.968282699584961
    10. 'count' → logprob: -9.468282699584961

Token 239: ' check' (ID: 2371)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.33732229471206665
    2. 'res' → logprob: -1.8373222351074219
    3. 'ans' → logprob: -3.212322235107422
    4. 'result' → logprob: -3.212322235107422
    5. 'print' → logprob: -3.587322235107422
    6. 'if' → logprob: -4.712322235107422
    7. 'answer' → logprob: -5.462322235107422
    8. 'swap' → logprob: -5.587322235107422
    9. 'count' → logprob: -6.712322235107422
    10. 's' → logprob: -8.587322235107422

Token 240: ' which' (ID: 1118)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.5104959011077881
    2. 'if' → logprob: -1.510495901107788
    3. 'res' → logprob: -2.260495901107788
    4. 'ans' → logprob: -3.135495901107788
    5. 'result' → logprob: -4.135496139526367
    6. 'swap' → logprob: -4.885496139526367
    7. 's' → logprob: -5.760496139526367
    8. 'answer' → logprob: -6.510496139526367
    9. '0' → logprob: -6.760496139526367
    10. 'count' → logprob: -7.510496139526367

Token 241: ' target' (ID: 3783)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.9023739099502563
    2. ' swaps' → logprob: -1.6523739099502563
    3. ' one' → logprob: -2.277373790740967
    4. 'target' → logprob: -2.402373790740967
    5. 'sw' → logprob: -2.527373790740967
    6. 'swap' → logprob: -3.527373790740967
    7. 'is' → logprob: -3.777373790740967
    8. ' is' → logprob: -3.902373790740967
    9. 'print' → logprob: -4.277373790740967
    10. 'bit' → logprob: -4.402373790740967

Token 242: ' is' (ID: 382)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.7689585089683533
    2. 'is' → logprob: -1.268958568572998
    3. 'if' → logprob: -1.768958568572998
    4. '_sw' → logprob: -4.268958568572998
    5. 'has' → logprob: -4.393958568572998
    6. '1' → logprob: -4.518958568572998
    7. 's' → logprob: -4.643958568572998
    8. 'target' → logprob: -5.268958568572998
    9. 'bit' → logprob: -5.393958568572998
    10. 'count' → logprob: -5.393958568572998

Token 243: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.2940984070301056
    2. 'valid' → logprob: -2.544098377227783
    3. 'better' → logprob: -2.669098377227783
    4. 'more' → logprob: -3.794098377227783
    5. 'clos' → logprob: -3.794098377227783
    6. 'reachable' → logprob: -4.544098377227783
    7. 'sm' → logprob: -4.794098377227783
    8. 'fe' → logprob: -4.794098377227783
    9. 'ach' → logprob: -4.919098377227783
    10. 'best' → logprob: -5.294098377227783

Token 244: ' (' (ID: 350)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8713439702987671
    2. 'if' → logprob: -0.9963439702987671
    3. 'res' → logprob: -1.996343970298767
    4. 'min' → logprob: -3.9963440895080566
    5. 'ans' → logprob: -4.371344089508057
    6. 'sw' → logprob: -4.621344089508057
    7. 'result' → logprob: -4.746344089508057
    8. 'def' → logprob: -5.121344089508057
    9. '
' → logprob: -5.121344089508057
    10. 'for' → logprob: -5.996344089508057

Token 245: 'same' (ID: 48581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2773357629776001
    2. 'sw' → logprob: -2.1523356437683105
    3. 'possible' → logprob: -3.5273356437683105
    4. 'for' → logprob: -3.7773356437683105
    5. 'try' → logprob: -3.9023356437683105
    6. ')' → logprob: -3.9023356437683105
    7. 'and' → logprob: -5.4023356437683105
    8. 'swap' → logprob: -5.5273356437683105
    9. 'def' → logprob: -5.6523356437683105
    10. 'res' → logprob: -5.6523356437683105

Token 246: ' counts' (ID: 28991)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5458787679672241
    2. 'as' → logprob: -1.6708787679672241
    3. 'bit' → logprob: -2.7958788871765137
    4. 'number' → logprob: -3.4208788871765137
    5. 'counts' → logprob: -3.6708788871765137
    6. 'sum' → logprob: -3.7958788871765137
    7. 'if' → logprob: -4.045878887176514
    8. 'bits' → logprob: -4.170878887176514
    9. 'or' → logprob: -4.420878887176514
    10. ' as' → logprob: -4.670878887176514

Token 247: ' of' (ID: 328)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.9672442078590393
    2. ')' → logprob: -1.2172441482543945
    3. '=' → logprob: -2.2172441482543945
    4. ' and' → logprob: -2.4672441482543945
    5. 'of' → logprob: -3.0922441482543945
    6. 'for' → logprob: -3.5922441482543945
    7. 'if' → logprob: -3.8422441482543945
    8. ' =' → logprob: -4.3422441482543945
    9. '#' → logprob: -5.2172441482543945
    10. ' of' → logprob: -5.7172441482543945

Token 248: ' bits' (ID: 18189)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012415464967489243
    2. '1' → logprob: -4.762415409088135
    3. 'target' → logprob: -6.387415409088135
    4. 'bit' → logprob: -6.762415409088135
    5. 'initial' → logprob: -7.012415409088135
    6. 'bits' → logprob: -11.137415885925293
    7. ' ' → logprob: -11.512415885925293
    8. '[' → logprob: -11.762415885925293
    9. '
' → logprob: -12.512415885925293
    10. 'sum' → logprob: -12.637415885925293

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3063167333602905
    2. ' and' → logprob: -2.18131685256958
    3. 'and' → logprob: -2.55631685256958
    4. 'count' → logprob: -4.18131685256958
    5. '0' → logprob: -4.30631685256958
    6. '#' → logprob: -4.30631685256958
    7. ' =' → logprob: -5.18131685256958
    8. 'if' → logprob: -5.18131685256958
    9. 'target' → logprob: -5.55631685256958
    10. ')
' → logprob: -5.93131685256958

Token 250: 'from' (ID: 2845)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.048741452395915985
    2. 'from' → logprob: -3.048741340637207
    3. 'count' → logprob: -9.798741340637207
    4. 'for' → logprob: -10.173741340637207
    5. 'total' → logprob: -11.173741340637207
    6. ')' → logprob: -11.423741340637207
    7. ' if' → logprob: -11.673741340637207
    8. '0' → logprob: -12.173741340637207
    9. 'counts' → logprob: -12.298741340637207
    10. 'cnt' → logprob: -12.673741340637207

Token 251: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0002614550176076591
    2. ' collections' → logprob: -8.250261306762695
    3. 'copy' → logprob: -16.375261306762695
    4. 'sys' → logprob: -17.250261306762695
    5. 'math' → logprob: -18.250261306762695
    6. 'collection' → logprob: -18.500261306762695
    7. '_' → logprob: -19.375261306762695
    8. 'collect' → logprob: -20.375261306762695
    9. 'bis' → logprob: -21.750261306762695
    10. 'operator' → logprob: -22.000261306762695

Token 252: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.002237566513940692
    2. ' import' → logprob: -6.252237796783447
    3. '.Counter' → logprob: -9.252237319946289
    4. 'port' → logprob: -9.377237319946289
    5. 'Counter' → logprob: -10.127237319946289
    6. 't' → logprob: -10.752237319946289
    7. 'ction' → logprob: -11.877237319946289
    8. 'from' → logprob: -12.002237319946289
    9. 'ort' → logprob: -12.252237319946289
    10. 'tion' → logprob: -12.252237319946289

Token 253: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.0007144584087654948
    2. ' Counter' → logprob: -7.250714302062988
    3. '.Counter' → logprob: -12.875714302062988
    4. '_counter' → logprob: -13.625714302062988
    5. 'counter' → logprob: -14.250714302062988
    6. 'deque' → logprob: -16.000715255737305
    7. 'collections' → logprob: -19.375715255737305
    8. '-counter' → logprob: -19.625715255737305
    9. '```' → logprob: -20.125715255737305
    10. ' counter' → logprob: -20.625715255737305

Token 254: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4042849838733673
    2. 'counter' → logprob: -2.154284954071045
    3. '
' → logprob: -3.029284954071045
    4. 'c' → logprob: -3.029284954071045
    5. 'initial' → logprob: -3.029284954071045
    6. 'if' → logprob: -3.404284954071045
    7. 'counts' → logprob: -3.904284954071045
    8. 'cnt' → logprob: -4.029284954071045
    9. 'diff' → logprob: -10.529285430908203
    10. 'target' → logprob: -10.654285430908203

Token 255: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.732512354850769
    2. 'counter' → logprob: -1.232512354850769
    3. 'c' → logprob: -2.1075124740600586
    4. 'if' → logprob: -2.7325124740600586
    5. 'cnt' → logprob: -3.7325124740600586
    6. 'initial' → logprob: -4.232512474060059
    7. 'counts' → logprob: -5.982512474060059
    8. '
' → logprob: -9.857512474060059
    9. 'Counter' → logprob: -10.607512474060059
    10. ' counter' → logprob: -10.857512474060059

Token 256: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.028865009546279907
    2. 's' → logprob: -4.153864860534668
    3. '_target' → logprob: -4.778864860534668
    4. 'initial' → logprob: -6.653864860534668
    5. '(initial' → logprob: -6.778864860534668
    6. '_init' → logprob: -7.153864860534668
    7. '_' → logprob: -7.403864860534668
    8. '0' → logprob: -8.778864860534668
    9. '1' → logprob: -9.653864860534668
    10. ' =' → logprob: -10.028864860534668

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869025409221649
    2. '=' → logprob: -1.1369025707244873
    3. ')' → logprob: -11.636902809143066
    4. '(' → logprob: -11.761902809143066
    5. ',' → logprob: -12.011902809143066
    6. ' ' → logprob: -12.636902809143066
    7. '_' → logprob: -13.136902809143066
    8. '(initial' → logprob: -13.386902809143066
    9. '=count' → logprob: -14.511902809143066
    10. '_initial' → logprob: -15.011902809143066

Token 258: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.003600782947614789
    2. ' Counter' → logprob: -5.628600597381592
    3. '.Counter' → logprob: -15.50360107421875
    4. 'C' → logprob: -16.00360107421875
    5. '(C' → logprob: -16.12860107421875
    6. 'Count' → logprob: -16.50360107421875
    7. 'counter' → logprob: -16.75360107421875
    8. 'Counters' → logprob: -17.12860107421875
    9. '_counter' → logprob: -17.25360107421875
    10. 'Coun' → logprob: -17.25360107421875

Token 259: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -0.0019299437990412116
    2. 'initial' → logprob: -6.251929759979248
    3. '(arr' → logprob: -14.501930236816406
    4. '(' → logprob: -15.001930236816406
    5. ' initial' → logprob: -15.501930236816406
    6. ')' → logprob: -16.501930236816406
    7. '	initial' → logprob: -16.501930236816406
    8. 'arr' → logprob: -17.376930236816406
    9. '.initial' → logprob: -17.376930236816406
    10. '_initial' → logprob: -18.001930236816406

Token 260: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12693126499652863
    2. ')' → logprob: -2.1269311904907227
    3. ')
' → logprob: -13.376931190490723
    4. ' )
' → logprob: -14.001931190490723
    5. ')

' → logprob: -14.751931190490723
    6. ')==' → logprob: -15.251931190490723
    7. '),' → logprob: -16.62693214416504
    8. ' )' → logprob: -17.62693214416504
    9. ')#' → logprob: -17.87693214416504
    10. '==' → logprob: -18.75193214416504

Token 261: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.3782830137643032e-05
    2. ' count' → logprob: -11.37501335144043
    3. '(count' → logprob: -13.62501335144043
    4. '.count' → logprob: -15.00001335144043
    5. 'counter' → logprob: -15.50001335144043
    6. '
' → logprob: -15.62501335144043
    7. '=count' → logprob: -16.37501335144043
    8. '[count' → logprob: -16.87501335144043
    9. '_count' → logprob: -17.00001335144043
    10. 'target' → logprob: -17.00001335144043

Token 262: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.018192317336797714
    2. 'target' → logprob: -4.018192291259766
    3. '_initial' → logprob: -10.643192291259766
    4. 'p' → logprob: -12.268192291259766
    5. 'count' → logprob: -12.893192291259766
    6. '_' → logprob: -12.893192291259766
    7. 't' → logprob: -12.893192291259766
    8. '_targets' → logprob: -13.643192291259766
    9. '(target' → logprob: -13.893192291259766
    10. 'initial' → logprob: -14.143192291259766

Token 263: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326353549957275
    2. ' =' → logprob: -1.3132635354995728
    3. '1' → logprob: -13.938263893127441
    4. '2' → logprob: -15.313263893127441
    5. 'target' → logprob: -15.688263893127441
    6. ' ' → logprob: -16.063262939453125
    7. ')' → logprob: -16.438262939453125
    8. '＝' → logprob: -16.688262939453125
    9. '=
' → logprob: -16.813262939453125
    10. '   ' → logprob: -17.188262939453125

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967913061380386
    2. '=' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.061967849731445
    4. ' ==' → logprob: -16.436967849731445
    5. ')' → logprob: -17.561967849731445
    6. '=count' → logprob: -18.186967849731445
    7. ',' → logprob: -18.436967849731445
    8. '.' → logprob: -18.436967849731445
    9. ' =
' → logprob: -19.061967849731445
    10. '==' → logprob: -19.061967849731445

Token 265: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.0008049834286794066
    2. ' Counter' → logprob: -7.125804901123047
    3. '(C' → logprob: -15.625804901123047
    4. '.Counter' → logprob: -15.875804901123047
    5. 'Count' → logprob: -16.875804901123047
    6. '_counter' → logprob: -17.500804901123047
    7. ' ' → logprob: -17.750804901123047
    8. 'counter' → logprob: -17.875804901123047
    9. 'Counters' → logprob: -17.875804901123047
    10. '
' → logprob: -18.000804901123047

Token 266: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.06197340786457062
    2. 'target' → logprob: -2.8119733333587646
    3. ' target' → logprob: -12.186973571777344
    4. '[target' → logprob: -14.436973571777344
    5. ',target' → logprob: -16.186973571777344
    6. '(' → logprob: -17.811973571777344
    7. '	target' → logprob: -17.811973571777344
    8. ' (' → logprob: -18.686973571777344
    9. 'arget' → logprob: -19.436973571777344
    10. '_target' → logprob: -19.811973571777344

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. '2' → logprob: -12.125005722045898
    3. 'target' → logprob: -15.250005722045898
    4. ')' → logprob: -15.875005722045898
    5. ' ' → logprob: -16.2500057220459
    6. '```' → logprob: -17.5000057220459
    7. '
' → logprob: -17.8750057220459
    8. '_' → logprob: -18.3750057220459
    9. '(' → logprob: -18.5000057220459
    10. '(target' → logprob: -18.7500057220459

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07916384935379028
    2. ')
' → logprob: -2.5791637897491455
    3. ')

' → logprob: -8.204163551330566
    4. ')
' → logprob: -15.204163551330566
    5. ' )' → logprob: -16.079164505004883
    6. ' )
' → logprob: -16.579164505004883
    7. ')#' → logprob: -16.954164505004883
    8. '),' → logprob: -17.079164505004883
    9. '<|end|>' → logprob: -17.579164505004883
    10. ')return' → logprob: -18.829164505004883

Token 269: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00106436712667346
    2. 'if' → logprob: -7.251064300537109
    3. ' count' → logprob: -8.00106430053711
    4. ' if' → logprob: -11.37606430053711
    5. '
' → logprob: -12.12606430053711
    6. '[count' → logprob: -14.50106430053711
    7. '.count' → logprob: -14.87606430053711
    8. ',' → logprob: -15.00106430053711
    9. '_count' → logprob: -15.50106430053711
    10. ',count' → logprob: -16.00106430053711

Token 270: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -1.0087516784551553e-05
    2. '_' → logprob: -11.62501049041748
    3. 'target' → logprob: -14.62501049041748
    4. '_initial' → logprob: -14.87501049041748
    5. '_
' → logprob: -16.375009536743164
    6. '_t' → logprob: -16.500009536743164
    7. '_targets' → logprob: -18.125009536743164
    8. '_count' → logprob: -18.500009536743164
    9. '
' → logprob: -18.875009536743164
    10. '_counter' → logprob: -19.125009536743164

Token 271: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.743758760625497e-05
    2. '1' → logprob: -9.500077247619629
    3. '0' → logprob: -13.125077247619629
    4. ' ' → logprob: -14.875077247619629
    5. '=' → logprob: -16.500078201293945
    6. '```' → logprob: -17.000078201293945
    7. ' =' → logprob: -17.375078201293945
    8. 'target' → logprob: -17.625078201293945
    9. 'count' → logprob: -17.750078201293945
    10. '   ' → logprob: -18.375078201293945

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022443771362305
    2. ' =' → logprob: -1.910224437713623
    3. ' ' → logprob: -15.660224914550781
    4. 'Counter' → logprob: -17.03522491455078
    5. '(' → logprob: -18.03522491455078
    6. '＝' → logprob: -18.28522491455078
    7. '=
' → logprob: -19.41022491455078
    8. '=count' → logprob: -19.66022491455078
    9. ')' → logprob: -19.78522491455078
    10. 'count' → logprob: -20.28522491455078

Token 273: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -5.836499985889532e-05
    2. ' Counter' → logprob: -9.7500581741333
    3. '.Counter' → logprob: -17.750059127807617
    4. '(C' → logprob: -19.000059127807617
    5. 'counter' → logprob: -19.250059127807617
    6. '_counter' → logprob: -19.375059127807617
    7. 'Coun' → logprob: -20.000059127807617
    8. 'Count' → logprob: -20.125059127807617
    9. 'Counters' → logprob: -20.875059127807617
    10. 'C' → logprob: -21.000059127807617

Token 274: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.3133247196674347
    2. 'target' → logprob: -1.3133246898651123
    3. '[target' → logprob: -10.063324928283691
    4. ' target' → logprob: -10.938324928283691
    5. 'counter' → logprob: -13.563324928283691
    6. 'Counter' → logprob: -14.188324928283691
    7. ',target' → logprob: -14.938324928283691
    8. '	target' → logprob: -15.688324928283691
    9. '(' → logprob: -17.188323974609375
    10. 'arget' → logprob: -17.563323974609375

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. '1' → logprob: -12.500003814697266
    3. ' ' → logprob: -15.125003814697266
    4. ')' → logprob: -17.250003814697266
    5. '```' → logprob: -17.500003814697266
    6. '   ' → logprob: -18.125003814697266
    7. 'target' → logprob: -18.562503814697266
    8. '(' → logprob: -18.750003814697266
    9. 'p' → logprob: -19.250003814697266
    10. '
' → logprob: -19.375003814697266

Token 276: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019138772040605545
    2. ')
' → logprob: -4.519138813018799
    3. 'if' → logprob: -5.519138813018799
    4. ')

' → logprob: -5.894138813018799
    5. '
' → logprob: -6.769138813018799
    6. ' if' → logprob: -9.39413833618164
    7. '

' → logprob: -10.64413833618164
    8. 'count' → logprob: -11.14413833618164
    9. '#' → logprob: -12.14413833618164
    10. ',' → logprob: -12.26913833618164

Token 277: 'res' (ID: 430)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008844660595059395
    2. 'possible' → logprob: -5.13384485244751
    3. 'ans' → logprob: -7.38384485244751
    4. '
' → logprob: -7.38384485244751
    5. 'result' → logprob: -7.63384485244751
    6. 'res' → logprob: -7.63384485244751
    7. 'valid' → logprob: -8.008844375610352
    8. 'answer' → logprob: -8.133844375610352
    9. 'min' → logprob: -10.508844375610352
    10. 'best' → logprob: -11.258844375610352

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10423096269369125
    2. '=' → logprob: -2.3542308807373047
    3. '1' → logprob: -6.104230880737305
    4. 's' → logprob: -6.479230880737305
    5. '0' → logprob: -8.354230880737305
    6. '_' → logprob: -12.354230880737305
    7. '=[]' → logprob: -12.729230880737305
    8. '```' → logprob: -13.854230880737305
    9. '=None' → logprob: -14.479230880737305
    10. 'if' → logprob: -14.479230880737305

Token 279: ' -' (ID: 533)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.16376271843910217
    2. '-' → logprob: -2.1637628078460693
    3. 'min' → logprob: -4.03876256942749
    4. '[]' → logprob: -4.91376256942749
    5. 'None' → logprob: -4.91376256942749
    6. '[]
' → logprob: -5.66376256942749
    7. '[]

' → logprob: -8.038763046264648
    8. '0' → logprob: -11.038763046264648
    9. '[min' → logprob: -11.663763046264648
    10. '10' → logprob: -11.913763046264648

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '-' → logprob: -14.750000953674316
    3. '```' → logprob: -15.875000953674316
    4. ' ' → logprob: -17.125
    5. '2' → logprob: -17.25
    6. 'float' → logprob: -17.5
    7. '``' → logprob: -18.0
    8. '(' → logprob: -18.0
    9. '   ' → logprob: -18.125
    10. '100' → logprob: -19.125

Token 281: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1604207158088684
    2. 'for' → logprob: -1.9104206562042236
    3. ' if' → logprob: -9.160420417785645
    4. ' for' → logprob: -9.535420417785645
    5. '#' → logprob: -11.410420417785645
    6. '
' → logprob: -12.285420417785645
    7. '```' → logprob: -13.285420417785645
    8. '<|end|>' → logprob: -14.035420417785645
    9. 'import' → logprob: -15.160420417785645
    10. 'If' → logprob: -15.410420417785645

Token 282: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06197104603052139
    2. 'for' → logprob: -2.8119709491729736
    3. '#' → logprob: -12.811970710754395
    4. '```' → logprob: -15.436970710754395
    5. ' if' → logprob: -15.936970710754395
    6. ' for' → logprob: -16.56197166442871
    7. 'def' → logprob: -16.68697166442871
    8. '
' → logprob: -17.18697166442871
    9. 'and' → logprob: -17.81197166442871
    10. '   ' → logprob: -18.31197166442871

Token 283: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0013340517180040479
    2. ' count' → logprob: -6.626334190368652
    3. '(count' → logprob: -12.126334190368652
    4. '   ' → logprob: -13.251334190368652
    5. ' ' → logprob: -14.376334190368652
    6. '[count' → logprob: -16.126333236694336
    7. '
' → logprob: -16.251333236694336
    8. ' (' → logprob: -16.376333236694336
    9. '	count' → logprob: -16.751333236694336
    10. '  ' → logprob: -17.251333236694336

Token 284: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.2530844807624817
    2. '_target' → logprob: -1.503084421157837
    3. 'initial' → logprob: -6.878084659576416
    4. 'target' → logprob: -9.128084182739258
    5. '_' → logprob: -11.878084182739258
    6. '1' → logprob: -13.628084182739258
    7. 'count' → logprob: -13.753084182739258
    8. '(initial' → logprob: -14.253084182739258
    9. '(target' → logprob: -14.378084182739258
    10. '[target' → logprob: -14.378084182739258

Token 285: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06197911128401756
    2. ' ==' → logprob: -2.811979055404663
    3. '==
' → logprob: -12.061979293823242
    4. '=' → logprob: -12.436979293823242
    5. ')==' → logprob: -14.186979293823242
    6. '[' → logprob: -14.686979293823242
    7. '===' → logprob: -15.561979293823242
    8. ']==' → logprob: -15.686979293823242
    9. ')' → logprob: -16.311979293823242
    10. ' ' → logprob: -16.561979293823242

Token 286: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0001242772996192798
    2. ' count' → logprob: -9.000123977661133
    3. 'counter' → logprob: -14.125123977661133
    4. '[count' → logprob: -17.125123977661133
    5. '	count' → logprob: -18.375123977661133
    6. '(count' → logprob: -18.500123977661133
    7. '<count' → logprob: -18.750123977661133
    8. '=count' → logprob: -19.000123977661133
    9. '
' → logprob: -19.500123977661133
    10. '$count' → logprob: -19.750123977661133

Token 287: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.001611866056919098
    2. 'target' → logprob: -6.501611709594727
    3. 'count' → logprob: -9.501611709594727
    4. '_counter' → logprob: -11.001611709594727
    5. '_count' → logprob: -11.001611709594727
    6. '_' → logprob: -14.876611709594727
    7. '(target' → logprob: -15.376611709594727
    8. 'counter' → logprob: -15.501611709594727
    9. '[target' → logprob: -15.626611709594727
    10. '1' → logprob: -16.251611709594727

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015741224342491478
    2. '0' → logprob: -9.875157356262207
    3. ':' → logprob: -9.875157356262207
    4. 's' → logprob: -10.750157356262207
    5. '   ' → logprob: -11.125157356262207
    6. ' ' → logprob: -11.875157356262207
    7. ':
' → logprob: -12.375157356262207
    8. '2' → logprob: -13.125157356262207
    9. '```' → logprob: -13.625157356262207
    10. '{
' → logprob: -13.875157356262207

Token 289: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38719549775123596
    2. ':' → logprob: -1.1371954679489136
    3. ' and' → logprob: -8.512195587158203
    4. '   ' → logprob: -9.637195587158203
    5. ' or' → logprob: -10.887195587158203
    6. '):
' → logprob: -11.012195587158203
    7. ':
' → logprob: -11.012195587158203
    8. ' :
' → logprob: -13.137195587158203
    9. ':

' → logprob: -13.387195587158203
    10. 'and' → logprob: -13.387195587158203

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0099234813824296
    2. 'res' → logprob: -4.884923458099365
    3. ' res' → logprob: -6.134923458099365
    4. ' swaps' → logprob: -9.634923934936523
    5. '
' → logprob: -10.884923934936523
    6. '	res' → logprob: -11.134923934936523
    7. '```' → logprob: -11.134923934936523
    8. '    
' → logprob: -11.384923934936523
    9. ' ' → logprob: -12.009923934936523
    10. ':
' → logprob: -12.384923934936523

Token 291: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.2887301445007324
    2. 'sw' → logprob: -1.7887301445007324
    3. '   ' → logprob: -2.5387301445007324
    4. 'swap' → logprob: -6.788730144500732
    5. 'temp' → logprob: -6.913730144500732
    6. 'tmp' → logprob: -7.288730144500732
    7. 's' → logprob: -7.288730144500732
    8. ' swaps' → logprob: -7.288730144500732
    9. ' res' → logprob: -8.53873062133789
    10. '    
' → logprob: -10.03873062133789

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01416350994259119
    2. '=' → logprob: -4.264163494110107
    3. '   ' → logprob: -18.764163970947266
    4. '＝' → logprob: -19.764163970947266
    5. '=res' → logprob: -19.764163970947266
    6. '  ' → logprob: -19.889163970947266
    7. ' ' → logprob: -20.139163970947266
    8. '=int' → logprob: -20.264163970947266
    9. '=count' → logprob: -20.264163970947266
    10. 's' → logprob: -20.389163970947266

Token 293: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0016251911874860525
    2. 'min' → logprob: -7.126625061035156
    3. ' count' → logprob: -7.126625061035156
    4. ' min' → logprob: -11.126625061035156
    5. '   ' → logprob: -13.126625061035156
    6. 'max' → logprob: -15.501625061035156
    7. '	count' → logprob: -17.501625061035156
    8. ' ' → logprob: -18.251625061035156
    9. '(count' → logprob: -18.251625061035156
    10. '  ' → logprob: -18.501625061035156

Token 294: '_sw' (ID: 84453)
  Prédit: '_sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sw' → logprob: -3.214019307051785e-05
    2. 'sw' → logprob: -10.375032424926758
    3. 'count' → logprob: -15.250032424926758
    4. 'Sw' → logprob: -16.125032424926758
    5. 'swap' → logprob: -16.250032424926758
    6. ' swaps' → logprob: -16.250032424926758
    7. '_swap' → logprob: -16.375032424926758
    8. '```' → logprob: -16.625032424926758
    9. '   ' → logprob: -17.125032424926758
    10. '_sn' → logprob: -17.250032424926758

Token 295: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -2.2200749754119897e-06
    2. 'ap' → logprob: -14.000001907348633
    3. 'ps' → logprob: -14.625001907348633
    4. 'a' → logprob: -15.750001907348633
    5. '[' → logprob: -15.875001907348633
    6. '
' → logprob: -16.500001907348633
    7. '#' → logprob: -16.625001907348633
    8. '   ' → logprob: -16.750001907348633
    9. '```' → logprob: -16.875001907348633
    10. '=' → logprob: -17.000001907348633

Token 296: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -1.4021237802808173e-05
    2. '(' → logprob: -11.250014305114746
    3. '(original' → logprob: -14.625014305114746
    4. ' (' → logprob: -15.375014305114746
    5. '```' → logprob: -16.50001335144043
    6. '(
' → logprob: -17.00001335144043
    7. '(previous' → logprob: -17.37501335144043
    8. '(in' → logprob: -17.62501335144043
    9. '(existing' → logprob: -17.62501335144043
    10. '(final' → logprob: -18.37501335144043

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004742831224575639
    2. ',target' → logprob: -7.875474452972412
    3. '(target' → logprob: -10.000473976135254
    4. ' ,' → logprob: -10.000473976135254
    5. '(' → logprob: -13.000473976135254
    6. 'target' → logprob: -14.250473976135254
    7. ',
' → logprob: -15.625473976135254
    8. ')' → logprob: -16.50047492980957
    9. '[target' → logprob: -17.00047492980957
    10. '   ' → logprob: -17.12547492980957

Token 298: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0001234428636962548
    2. ' target' → logprob: -9.000123023986816
    3. '[target' → logprob: -19.375123977661133
    4. '(target' → logprob: -20.125123977661133
    5. '	target' → logprob: -21.500123977661133
    6. '
' → logprob: -21.625123977661133
    7. 'arget' → logprob: -21.875123977661133
    8. ',target' → logprob: -22.875123977661133
    9. '   ' → logprob: -23.875123977661133
    10. ')' → logprob: -24.000123977661133

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ')' → logprob: -16.75
    3. '
' → logprob: -17.0
    4. '```' → logprob: -17.25
    5. ' ' → logprob: -18.0
    6. 'target' → logprob: -18.0
    7. '_' → logprob: -19.25
    8. '１' → logprob: -19.25
    9. '`' → logprob: -19.375
    10. '2' → logprob: -19.5625

Token 300: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007179115782491863
    2. ')
' → logprob: -7.250718116760254
    3. ' )' → logprob: -12.000718116760254
    4. ')

' → logprob: -14.000718116760254
    5. '   ' → logprob: -14.500718116760254
    6. ')#' → logprob: -16.625717163085938
    7. '
' → logprob: -16.750717163085938
    8. ')
' → logprob: -16.750717163085938
    9. ')**' → logprob: -17.250717163085938
    10. 'elif' → logprob: -17.500717163085938

Token 301: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008643409237265587
    2. 'elif' → logprob: -4.758643627166748
    3. '
' → logprob: -10.75864315032959
    4. '```' → logprob: -12.25864315032959
    5. 'i' → logprob: -13.50864315032959
    6. ' if' → logprob: -14.25864315032959
    7. 'else' → logprob: -15.00864315032959
    8. 'el' → logprob: -16.258644104003906
    9. 'endif' → logprob: -16.258644104003906
    10. 'If' → logprob: -16.258644104003906

Token 302: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.011001373641192913
    2. 'count' → logprob: -5.0110015869140625
    3. ' res' → logprob: -5.5110015869140625
    4. ' ' → logprob: -8.511001586914062
    5. ' (' → logprob: -11.011001586914062
    6. 'res' → logprob: -11.636001586914062
    7. '(count' → logprob: -12.261001586914062
    8. ' ' → logprob: -13.636001586914062
    9. ' bit' → logprob: -14.011001586914062
    10. '[count' → logprob: -15.636001586914062

Token 303: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -7.465036105713807e-06
    2. 'initial' → logprob: -12.750007629394531
    3. '_res' → logprob: -13.250007629394531
    4. '_' → logprob: -13.500007629394531
    5. '_target' → logprob: -14.125007629394531
    6. 'Initial' → logprob: -16.50000762939453
    7. '_init' → logprob: -16.62500762939453
    8. '_INITIAL' → logprob: -16.62500762939453
    9. '_final' → logprob: -17.00000762939453
    10. ' _' → logprob: -17.87500762939453

Token 304: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04300376772880554
    2. '==' → logprob: -3.168003797531128
    3. ' !=' → logprob: -13.168004035949707
    4. ' ' → logprob: -13.918004035949707
    5. '=' → logprob: -14.543004035949707
    6. '==
' → logprob: -14.543004035949707
    7. ' ==
' → logprob: -14.918004035949707
    8. '!=' → logprob: -15.168004035949707
    9. ' =' → logprob: -16.91800308227539
    10. ' in' → logprob: -17.41800308227539

Token 305: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16024038195610046
    2. ' count' → logprob: -1.9102404117584229
    3. 'counter' → logprob: -11.160240173339844
    4. ' counter' → logprob: -13.410240173339844
    5. '[count' → logprob: -15.410240173339844
    6. ' ' → logprob: -15.785240173339844
    7. 'Counter' → logprob: -16.535240173339844
    8. '	count' → logprob: -17.285240173339844
    9. 'Count' → logprob: -17.535240173339844
    10. '(count' → logprob: -18.035240173339844

Token 306: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.01815485768020153
    2. 'target' → logprob: -4.018154621124268
    3. '2' → logprob: -12.893155097961426
    4. 'count' → logprob: -14.143155097961426
    5. '_counter' → logprob: -14.518155097961426
    6. 'arget' → logprob: -15.143155097961426
    7. ' target' → logprob: -15.393155097961426
    8. '_t' → logprob: -15.643155097961426
    9. 't' → logprob: -15.643155097961426
    10. '_' → logprob: -16.01815414428711

Token 307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. 'target' → logprob: -13.250001907348633
    3. '_target' → logprob: -15.125001907348633
    4. '1' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '
' → logprob: -17.875001907348633
    7. '```' → logprob: -18.125001907348633
    8. '_' → logprob: -18.375001907348633
    9. ' ' → logprob: -18.500001907348633
    10. 'arget' → logprob: -18.625001907348633

Token 308: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000513952283654362
    2. '!=' → logprob: -8.125514030456543
    3. ':
' → logprob: -9.625514030456543
    4. ' !=' → logprob: -9.750514030456543
    5. ' and' → logprob: -10.375514030456543
    6. '==' → logprob: -10.625514030456543
    7. ' :' → logprob: -11.000514030456543
    8. ' ==' → logprob: -11.625514030456543
    9. '   ' → logprob: -12.250514030456543
    10. 'and' → logprob: -12.875514030456543

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013845302164554596
    2. ' res' → logprob: -4.513845443725586
    3. 'res' → logprob: -5.888845443725586
    4. '	res' → logprob: -11.388845443725586
    5. ':' → logprob: -12.513845443725586
    6. ':
' → logprob: -12.888845443725586
    7. '
' → logprob: -13.513845443725586
    8. '    
' → logprob: -13.638845443725586
    9. '       ' → logprob: -14.388845443725586
    10. '=' → logprob: -14.638845443725586

Token 310: ' s' (ID: 265)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.33073270320892334
    2. ' res' → logprob: -2.580732822418213
    3. '   ' → logprob: -3.080732822418213
    4. 'swap' → logprob: -3.080732822418213
    5. 'temp' → logprob: -3.455732822418213
    6. 'sw' → logprob: -3.455732822418213
    7. 'tmp' → logprob: -3.955732822418213
    8. ' swaps' → logprob: -5.080732822418213
    9. ' temp' → logprob: -5.455732822418213
    10. 'val' → logprob: -5.455732822418213

Token 311: ' =' (ID: 314)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.012306439690291882
    2. ' =' → logprob: -4.887306213378906
    3. '=' → logprob: -5.637306213378906
    4. 'wap' → logprob: -7.012306213378906
    5. '=w' → logprob: -9.762306213378906
    6. '_' → logprob: -10.012306213378906
    7. 'ub' → logprob: -10.887306213378906
    8. '2' → logprob: -11.137306213378906
    9. 'wp' → logprob: -11.262306213378906
    10. 'wa' → logprob: -11.387306213378906

Token 312: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -7.493430894101039e-05
    2. ' count' → logprob: -9.500075340270996
    3. '   ' → logprob: -20.25007438659668
    4. '	count' → logprob: -21.25007438659668
    5. ' ' → logprob: -22.50007438659668
    6. '[count' → logprob: -24.37507438659668
    7. '  ' → logprob: -24.37507438659668
    8. '(count' → logprob: -24.37507438659668
    9. '=count' → logprob: -24.75007438659668
    10. '.count' → logprob: -24.87507438659668

Token 313: '_sw' (ID: 84453)
  Prédit: '_sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sw' → logprob: -1.259079363080673e-05
    2. 'sw' → logprob: -11.375012397766113
    3. 'count' → logprob: -14.375012397766113
    4. 'Sw' → logprob: -15.625012397766113
    5. ' swaps' → logprob: -16.50001335144043
    6. '	sw' → logprob: -17.12501335144043
    7. '_swap' → logprob: -17.50001335144043
    8. '-sw' → logprob: -17.62501335144043
    9. 'swap' → logprob: -17.87501335144043
    10. '(sw' → logprob: -18.12501335144043

Token 314: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -7.896309739408025e-07
    2. 'a' → logprob: -14.750000953674316
    3. '
' → logprob: -16.125
    4. 'ap' → logprob: -16.75
    5. '   ' → logprob: -17.125
    6. '#' → logprob: -18.375
    7. '[' → logprob: -18.375
    8. '"' → logprob: -18.625
    9. '

' → logprob: -18.625
    10. 'amps' → logprob: -18.75

Token 315: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.125006675720215
    3. 'initial' → logprob: -14.375006675720215
    4. ' (' → logprob: -16.5000057220459
    5. '(original' → logprob: -17.0000057220459
    6. ' initial' → logprob: -17.6250057220459
    7. '(existing' → logprob: -17.6250057220459
    8. '```' → logprob: -18.0000057220459
    9. '	initial' → logprob: -18.1250057220459
    10. '(input' → logprob: -18.5000057220459

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037013778928667307
    2. '(initial' → logprob: -5.628701210021973
    3. '(' → logprob: -9.253701210021973
    4. 'initial' → logprob: -13.128701210021973
    5. ')' → logprob: -13.378701210021973
    6. ' ,' → logprob: -13.628701210021973
    7. '=' → logprob: -14.628701210021973
    8. ' (' → logprob: -16.25370216369629
    9. ',
' → logprob: -16.62870216369629
    10. '),' → logprob: -16.75370216369629

Token 317: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0017250381642952561
    2. 'initial' → logprob: -6.751725196838379
    3. ' target' → logprob: -7.501725196838379
    4. ' initial' → logprob: -13.126725196838379
    5. '(target' → logprob: -15.501725196838379
    6. ',target' → logprob: -16.126724243164062
    7. 'p' → logprob: -16.251724243164062
    8. '   ' → logprob: -16.876724243164062
    9. '[target' → logprob: -17.376724243164062
    10. '	target' → logprob: -17.751724243164062

Token 318: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1398757123970427e-05
    2. 'target' → logprob: -12.000011444091797
    3. 'arget' → logprob: -12.250011444091797
    4. '_target' → logprob: -15.125011444091797
    5. '   ' → logprob: -16.625011444091797
    6. '
' → logprob: -17.500011444091797
    7. '```' → logprob: -17.625011444091797
    8. '       ' → logprob: -18.625011444091797
    9. '_' → logprob: -19.000011444091797
    10. ' ' → logprob: -19.000011444091797

Token 319: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14386864006519318
    2. ' if' → logprob: -2.2688686847686768
    3. 'if' → logprob: -4.143868446350098
    4. '
' → logprob: -4.268868446350098
    5. ')' → logprob: -7.768868446350098
    6. ')
' → logprob: -8.768868446350098
    7. ' ' → logprob: -9.893868446350098
    8. '	if' → logprob: -10.768868446350098
    9. '  ' → logprob: -10.893868446350098
    10. 'res' → logprob: -11.393868446350098

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010769657790660858
    2. 'if' → logprob: -5.010769844055176
    3. ' if' → logprob: -5.510769844055176
    4. '```' → logprob: -13.385769844055176
    5. '
' → logprob: -13.510769844055176
    6. ',' → logprob: -16.76076889038086
    7. '       ' → logprob: -17.01076889038086
    8. '    
' → logprob: -17.13576889038086
    9. '	if' → logprob: -17.88576889038086
    10. '``' → logprob: -18.01076889038086

Token 321: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.4617256056226324e-05
    2. '   ' → logprob: -11.250014305114746
    3. 'res' → logprob: -14.000014305114746
    4. ' if' → logprob: -14.250014305114746
    5. '
' → logprob: -18.375015258789062
    6. '    
' → logprob: -20.625015258789062
    7. '	if' → logprob: -21.000015258789062
    8. 'If' → logprob: -22.625015258789062
    9. '```' → logprob: -22.875015258789062
    10. '  ' → logprob: -23.375015258789062

Token 322: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.10022887587547302
    2. 'res' → logprob: -2.350228786468506
    3. ' s' → logprob: -11.350229263305664
    4. '(res' → logprob: -12.350229263305664
    5. 's' → logprob: -12.975229263305664
    6. ' (' → logprob: -13.225229263305664
    7. '
' → logprob: -14.100229263305664
    8. ' ' → logprob: -14.975229263305664
    9. ' ' → logprob: -15.350229263305664
    10. '_res' → logprob: -16.100229263305664

Token 323: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16988351941108704
    2. '==-' → logprob: -2.1698834896087646
    3. ' ==' → logprob: -3.1698834896087646
    4. '=' → logprob: -10.794883728027344
    5. '==
' → logprob: -11.669883728027344
    6. '```' → logprob: -12.544883728027344
    7. '===' → logprob: -12.669883728027344
    8. '!=' → logprob: -14.169883728027344
    9. 'is' → logprob: -15.294883728027344
    10. '<' → logprob: -15.669883728027344

Token 324: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.836499985889532e-05
    2. ' -' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.250059127807617
    4. ' ' → logprob: -19.625059127807617
    5. '  ' → logprob: -20.875059127807617
    6. '-
' → logprob: -21.125059127807617
    7. '−' → logprob: -21.250059127807617
    8. '```' → logprob: -21.375059127807617
    9. '\-' → logprob: -22.125059127807617
    10. '-
' → logprob: -23.375059127807617

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -19.8125
    4. '   ' → logprob: -19.875
    5. ' -' → logprob: -20.375
    6. '１' → logprob: -20.8125
    7. '-' → logprob: -21.4375
    8. '  ' → logprob: -21.5625
    9. '"' → logprob: -22.0625
    10. '১' → logprob: -22.1875

Token 326: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008655226789414883
    2. 'or' → logprob: -4.758655071258545
    3. '   ' → logprob: -10.258655548095703
    4. '    ' → logprob: -13.258655548095703
    5. '       ' → logprob: -13.258655548095703
    6. ' ' → logprob: -14.133655548095703
    7. '	or' → logprob: -14.383655548095703
    8. '  ' → logprob: -15.133655548095703
    9. '```' → logprob: -15.383655548095703
    10. '      ' → logprob: -16.758655548095703

Token 327: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759442448616028
    2. ' s' → logprob: -0.8259442448616028
    3. '   ' → logprob: -12.450943946838379
    4. 'res' → logprob: -14.700943946838379
    5. '    ' → logprob: -14.950943946838379
    6. '<s' → logprob: -16.575944900512695
    7. '	s' → logprob: -17.325944900512695
    8. '  ' → logprob: -17.575944900512695
    9. ' ' → logprob: -17.950944900512695
    10. '_s' → logprob: -18.075944900512695

Token 328: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20249848067760468
    2. ' <' → logprob: -1.702498435974121
    3. '<s' → logprob: -6.827498435974121
    4. ' s' → logprob: -14.577498435974121
    5. 's' → logprob: -15.077498435974121
    6. '<int' → logprob: -16.577499389648438
    7. '<size' → logprob: -16.702499389648438
    8. ' ' → logprob: -16.952499389648438
    9. '<n' → logprob: -17.202499389648438
    10. '<m' → logprob: -17.327499389648438

Token 329: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0007099286303855479
    2. ' res' → logprob: -7.2507100105285645
    3. '	res' → logprob: -18.875709533691406
    4. '
' → logprob: -19.000709533691406
    5. '```' → logprob: -19.625709533691406
    6. '   ' → logprob: -20.000709533691406
    7. 'r' → logprob: -20.250709533691406
    8. 's' → logprob: -20.375709533691406
    9. '_res' → logprob: -20.625709533691406
    10. ' ' → logprob: -21.125709533691406

Token 330: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10507235676050186
    2. ':' → logprob: -2.355072259902954
    3. '       ' → logprob: -5.355072498321533
    4. '):
' → logprob: -9.355072021484375
    5. '   ' → logprob: -10.355072021484375
    6. ':
' → logprob: -12.480072021484375
    7. ' :
' → logprob: -12.730072021484375
    8. '):' → logprob: -13.355072021484375
    9. 'res' → logprob: -13.730072021484375
    10. ':

' → logprob: -14.605072021484375

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00654945895075798
    2. 'res' → logprob: -5.50654935836792
    3. ' res' → logprob: -6.00654935836792
    4. '   ' → logprob: -12.631549835205078
    5. '
' → logprob: -13.756549835205078
    6. '	res' → logprob: -14.631549835205078
    7. ',res' → logprob: -15.631549835205078
    8. '      ' → logprob: -15.631549835205078
    9. '           ' → logprob: -16.006549835205078
    10. '     ' → logprob: -16.631549835205078

Token 332: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0005670914542861283
    2. ' res' → logprob: -7.5005669593811035
    3. '       ' → logprob: -11.250567436218262
    4. '           ' → logprob: -14.250567436218262
    5. '   ' → logprob: -14.750567436218262
    6. '	res' → logprob: -18.250566482543945
    7. '_res' → logprob: -20.750566482543945
    8. '               ' → logprob: -21.125566482543945
    9. '$res' → logprob: -22.375566482543945
    10. '
' → logprob: -22.500566482543945

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192946195602417
    2. '=' → logprob: -1.501929521560669
    3. '=res' → logprob: -15.87692928314209
    4. '＝' → logprob: -16.126930236816406
    5. '=s' → logprob: -16.626930236816406
    6. ' =
' → logprob: -16.876930236816406
    7. '=
' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.876930236816406
    9. '=

' → logprob: -18.251930236816406
    10. '   ' → logprob: -18.251930236816406

Token 334: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01416350994259119
    2. ' s' → logprob: -4.264163494110107
    3. '   ' → logprob: -17.764163970947266
    4. '	s' → logprob: -19.889163970947266
    5. '       ' → logprob: -20.014163970947266
    6. ' ' → logprob: -20.264163970947266
    7. '_s' → logprob: -20.264163970947266
    8. '```' → logprob: -20.639163970947266
    9. '    ' → logprob: -21.139163970947266
    10. '
' → logprob: -21.389163970947266

Token 335: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.5954712075181305e-05
    2. '
' → logprob: -10.250036239624023
    3. '```' → logprob: -14.625036239624023
    4. ' print' → logprob: -16.500036239624023
    5. '  
' → logprob: -17.125036239624023
    6. '    
' → logprob: -17.500036239624023
    7. '

' → logprob: -18.750036239624023
    8. '        
' → logprob: -18.875036239624023
    9. '``' → logprob: -18.875036239624023
    10. 'if' → logprob: -19.750036239624023

Token 336: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.8889261304575484e-06
    2. '```' → logprob: -12.500003814697266
    3. '
' → logprob: -16.375003814697266
    4. '``' → logprob: -16.875003814697266
    5. ' print' → logprob: -17.750003814697266
    6. '  
' → logprob: -21.125003814697266
    7. '#print' → logprob: -21.375003814697266
    8. 'if' → logprob: -21.625003814697266
    9. '    
' → logprob: -21.750003814697266
    10. '	print' → logprob: -22.750003814697266

Token 337: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. 'res' → logprob: -15.875017166137695
    4. ' (' → logprob: -17.375017166137695
    5. '(
' → logprob: -18.875017166137695
    6. '(result' → logprob: -19.125017166137695
    7. '(r' → logprob: -19.375017166137695
    8. '(re' → logprob: -19.375017166137695
    9. ',res' → logprob: -20.125017166137695
    10. '	res' → logprob: -20.375017166137695

Token 338: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.250000953674316
    3. ')`' → logprob: -18.25
    4. ')
' → logprob: -18.375
    5. '))' → logprob: -19.75
    6. '())' → logprob: -20.0
    7. '')' → logprob: -20.25
    8. '),' → logprob: -20.375
    9. ')#' → logprob: -21.0
    10. '```' → logprob: -21.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 336
Tokens correctement prédits (1ère position, stricte): 138
Tokens correctement prédits (1ère position, avec adaptation): 149
Tokens correctement prédits (top 10): 281
Précision stricte (1ère position): 41.07%
Précision adaptée (1ère position): 44.35%
Précision (top 10): 83.63%
================================================================================
