================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

MAX_N = 10**6

# Créer une table de crible de primes (True = premier)
is_prime = [True] * (MAX_N + 1)
is_prime[0] = False
is_prime[1] = False
for i in range(2, int(math.sqrt(MAX_N)) + 1):
    if is_prime[i]:
        for j in range(i*i, MAX_N+1, i):
            is_prime[j] = False

for line in sys.stdin:
    n = int(line)
    if n == 0:
        break
    count = 0
    for p in range(2, n//2 + 1):
        if is_prime[p] and is_prime[n - p]:
            count += 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33956411480903625
    2. '\n' → logprob: -2.339564085006714
    3. 'import' → logprob: -2.714564085006714
    4. '
' → logprob: -3.089564085006714
    5. '\' → logprob: -3.214564085006714
    6. '```' → logprob: -4.339564323425293
    7. '

' → logprob: -4.589564323425293
    8. '' → logprob: -5.714564323425293
    9. '<|end|>' → logprob: -5.839564323425293
    10. ',' → logprob: -5.839564323425293

Token 6: 'MAX' (ID: 21911)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2616374492645264
    2. '\n' → logprob: -1.2616374492645264
    3. 'import' → logprob: -1.7616374492645264
    4. '\' → logprob: -1.8866374492645264
    5. '```' → logprob: -3.0116374492645264
    6. '
' → logprob: -4.0116376876831055
    7. 'def' → logprob: -4.5116376876831055
    8. ',' → logprob: -4.7616376876831055
    9. '<|end|>' → logprob: -5.6366376876831055
    10. '

' → logprob: -5.7616376876831055

Token 7: '_N' (ID: 3080)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0024679286871105433
    2. '_SIZE' → logprob: -6.752468109130859
    3. '_SPACE' → logprob: -8.00246810913086
    4. '_VALUE' → logprob: -8.75246810913086
    5. '_LENGTH' → logprob: -8.87746810913086
    6. ' _' → logprob: -9.62746810913086
    7. '_CAP' → logprob: -9.62746810913086
    8. '_LINE' → logprob: -10.12746810913086
    9. '_MAX' → logprob: -10.50246810913086
    10. '_TOKEN' → logprob: -10.62746810913086

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6507370471954346
    2. '=' → logprob: -0.9007370471954346
    3. '_' → logprob: -2.6507370471954346
    4. ' _' → logprob: -7.9007368087768555
    5. ' ' → logprob: -8.150736808776855
    6. ')' → logprob: -8.400736808776855
    7. '_SPACE' → logprob: -8.650736808776855
    8. '_=' → logprob: -9.025736808776855
    9. ',' → logprob: -9.650736808776855
    10. ' =
' → logprob: -10.150736808776855

Token 9: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02875196747481823
    2. '100' → logprob: -3.653751850128174
    3. '10' → logprob: -6.028751850128174
    4. '500' → logprob: -11.403752326965332
    5. '1' → logprob: -11.653752326965332
    6. '20' → logprob: -12.278752326965332
    7. 'int' → logprob: -12.528752326965332
    8. '200' → logprob: -13.028752326965332
    9. ' int' → logprob: -13.153752326965332
    10. '50' → logprob: -13.153752326965332

Token 10: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.576617956161499
    2. '10' → logprob: -0.826617956161499
    3. ' ' → logprob: -7.951618194580078
    4. '500' → logprob: -8.701618194580078
    5. '1' → logprob: -9.951618194580078
    6. '200' → logprob: -10.076618194580078
    7. 'int' → logprob: -10.701618194580078
    8. '20' → logprob: -11.576618194580078
    9. '300' → logprob: -11.576618194580078
    10. '50' → logprob: -11.576618194580078

Token 11: '**' (ID: 410)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5663430690765381
    2. '\n' → logprob: -1.691343069076538
    3. '0' → logprob: -2.566343069076538
    4. '
' → logprob: -3.441343069076538
    5. '\' → logprob: -3.566343069076538
    6. '' → logprob: -3.566343069076538
    7. '```' → logprob: -4.066343307495117
    8. '#' → logprob: -4.316343307495117
    9. '**' → logprob: -4.691343307495117
    10. 'MAX' → logprob: -4.941343307495117

Token 12: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2534962594509125
    2. '6' → logprob: -1.7534962892532349
    3. '7' → logprob: -3.0034961700439453
    4. '8' → logprob: -6.878496170043945
    5. '5' → logprob: -9.253496170043945
    6. '3' → logprob: -12.253496170043945
    7. '10' → logprob: -13.128496170043945
    8. '12' → logprob: -13.378496170043945
    9. '18' → logprob: -13.503496170043945
    10. '```' → logprob: -14.003496170043945

Token 13: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03221782669425011
    2. '\n' → logprob: -4.532217979431152
    3. '

' → logprob: -5.032217979431152
    4. '
' → logprob: -5.157217979431152
    5. '\' → logprob: -5.532217979431152
    6. '' → logprob: -6.407217979431152
    7. '```' → logprob: -6.907217979431152
    8. ' 
' → logprob: -7.532217979431152
    9. 'newline' → logprob: -8.282217979431152
    10. '  
' → logprob: -8.282217979431152

Token 14: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4091265797615051
    2. '\' → logprob: -2.5341265201568604
    3. '
' → logprob: -2.5341265201568604
    4. '\n' → logprob: -2.7841265201568604
    5. 'n' → logprob: -4.1591267585754395
    6. '```' → logprob: -4.1591267585754395
    7. 'factor' → logprob: -4.6591267585754395
    8. '

' → logprob: -4.9091267585754395
    9. '`' → logprob: -5.1591267585754395
    10. '_' → logprob: -5.1591267585754395

Token 15: ' Cr' (ID: 5790)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28893858194351196
    2. ' def' → logprob: -1.4139385223388672
    3. 'factor' → logprob: -6.038938522338867
    4. 'class' → logprob: -7.038938522338867
    5. ' factorial' → logprob: -7.163938522338867
    6. ' class' → logprob: -7.913938522338867
    7. 'dp' → logprob: -8.038938522338867
    8. ' dp' → logprob: -8.413938522338867
    9. ' for' → logprob: -8.788938522338867
    10. 'Let's' → logprob: -8.788938522338867

Token 16: 'éer' (ID: 83012)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13258807361125946
    2. 'it' → logprob: -2.5075881481170654
    3. 'ime' → logprob: -3.7575881481170654
    4. 'i' → logprob: -5.757587909698486
    5. 'ite' → logprob: -6.132587909698486
    6. 'ef' → logprob: -6.382587909698486
    7. '```' → logprob: -6.507587909698486
    8. 'eam' → logprob: -6.882587909698486
    9. 'ep' → logprob: -7.007587909698486
    10. 'is' → logprob: -7.007587909698486

Token 17: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6468728184700012
    2. ' ' → logprob: -1.5218727588653564
    3. ' une' → logprob: -1.8968727588653564
    4. '_' → logprob: -3.1468727588653564
    5. 'def' → logprob: -3.6468727588653564
    6. 'une' → logprob: -4.6468729972839355
    7. 'un' → logprob: -4.8968729972839355
    8. ' def' → logprob: -5.1468729972839355
    9. ' la' → logprob: -5.2718729972839355
    10. ' des' → logprob: -5.6468729972839355

Token 18: ' table' (ID: 3293)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.41891393065452576
    2. ' fonction' → logprob: -1.6689139604568481
    3. 'f' → logprob: -2.4189138412475586
    4. ' function' → logprob: -3.6689138412475586
    5. 'function' → logprob: -4.293913841247559
    6. 'def' → logprob: -5.168913841247559
    7. 'fon' → logprob: -5.543913841247559
    8. ' ' → logprob: -5.918913841247559
    9. ' #' → logprob: -6.543913841247559
    10. ' f' → logprob: -6.668913841247559

Token 19: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.036074161529541016
    2. ' de' → logprob: -4.036074161529541
    3. '_de' → logprob: -4.536074161529541
    4. 'de' → logprob: -5.161074161529541
    5. '_des' → logprob: -7.661074161529541
    6. 'au' → logprob: -8.411073684692383
    7. '_hash' → logprob: -8.786073684692383
    8. ' des' → logprob: -8.786073684692383
    9. 'des' → logprob: -9.161073684692383
    10. '_lookup' → logprob: -9.786073684692383

Token 20: ' cr' (ID: 1769)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.5438509583473206
    2. 'fact' → logprob: -2.168850898742676
    3. ' multiplication' → logprob: -2.168850898742676
    4. ' facteurs' → logprob: -3.043850898742676
    5. 'factor' → logprob: -3.668850898742676
    6. ' fact' → logprob: -4.168850898742676
    7. '```' → logprob: -4.168850898742676
    8. 'div' → logprob: -4.418850898742676
    9. 'dp' → logprob: -4.793850898742676
    10. ' valeurs' → logprob: -5.043850898742676

Token 21: 'ible' (ID: 1430)
  Prédit: 'ép'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ép' → logprob: -0.5130243301391602
    2. 'ible' → logprob: -1.2630243301391602
    3. 'é' → logprob: -2.88802433013916
    4. 'ib' → logprob: -3.63802433013916
    5. 'ibl' → logprob: -4.26302433013916
    6. 'ibles' → logprob: -5.01302433013916
    7. 'éd' → logprob: -5.26302433013916
    8. 'éma' → logprob: -5.88802433013916
    9. 'édit' → logprob: -5.88802433013916
    10. 'ibble' → logprob: -7.01302433013916

Token 22: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20438282191753387
    2. 's' → logprob: -2.20438289642334
    3. '_s' → logprob: -3.20438289642334
    4. ' ' → logprob: -4.57938289642334
    5. '```' → logprob: -5.07938289642334
    6. 'd' → logprob: -5.70438289642334
    7. '=' → logprob: -5.82938289642334
    8. ' =' → logprob: -6.07938289642334
    9. '[' → logprob: -6.45438289642334
    10. 'e' → logprob: -6.70438289642334

Token 23: ' primes' (ID: 104042)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3605276346206665
    2. ' primes' → logprob: -1.8605276346206665
    3. 's' → logprob: -2.110527515411377
    4. 'is' → logprob: -2.360527515411377
    5. '``' → logprob: -2.610527515411377
    6. 'é' → logprob: -2.735527515411377
    7. 'pr' → logprob: -3.110527515411377
    8. '   ' → logprob: -3.610527515411377
    9. ' ' → logprob: -3.735527515411377
    10. '_' → logprob: -3.985527515411377

Token 24: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3021158277988434
    2. ' =' → logprob: -1.927115797996521
    3. ' sieve' → logprob: -3.1771159172058105
    4. '```' → logprob: -4.3021159172058105
    5. 'def' → logprob: -4.5521159172058105
    6. '_s' → logprob: -4.5521159172058105
    7. '=' → logprob: -4.9271159172058105
    8. ' primes' → logprob: -5.1771159172058105
    9. '[' → logprob: -5.5521159172058105
    10. 'pr' → logprob: -5.9271159172058105

Token 25: 'True' (ID: 4710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5409664511680603
    2. 's' → logprob: -2.290966510772705
    3. '[' → logprob: -2.415966510772705
    4. 'is' → logprob: -2.665966510772705
    5. 'pr' → logprob: -3.290966510772705
    6. 'size' → logprob: -3.540966510772705
    7. ' [' → logprob: -4.415966510772705
    8. ' )' → logprob: -4.665966510772705
    9. 'bool' → logprob: -5.040966510772705
    10. '[n' → logprob: -5.165966510772705

Token 26: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1262594610452652
    2. ',' → logprob: -2.2512595653533936
    3. ' )' → logprob: -5.6262593269348145
    4. '[' → logprob: -6.5012593269348145
    5. ' for' → logprob: -6.5012593269348145
    6. ',)' → logprob: -6.6262593269348145
    7. ' pour' → logprob: -7.0012593269348145
    8. '```' → logprob: -7.1262593269348145
    9. '=' → logprob: -7.2512593269348145
    10. 'for' → logprob: -7.6262593269348145

Token 27: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.49902984499931335
    2. 'prem' → logprob: -1.1240298748016357
    3. ' prime' → logprob: -3.3740298748016357
    4. 'prime' → logprob: -3.7490298748016357
    5. 'prima' → logprob: -6.249029636383057
    6. ' primo' → logprob: -6.749029636383057
    7. ' ' → logprob: -6.874029636383057
    8. ' premiers' → logprob: -7.249029636383057
    9. '```' → logprob: -7.374029636383057
    10. ' potentiel' → logprob: -7.624029636383057

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015044236555695534
    2. 's' → logprob: -4.515044212341309
    3. ' )' → logprob: -6.140044212341309
    4. ',' → logprob: -6.390044212341309
    5. '')' → logprob: -10.890044212341309
    6. ',)' → logprob: -10.890044212341309
    7. ' ,' → logprob: -11.140044212341309
    8. '```' → logprob: -11.265044212341309
    9. 'e' → logprob: -11.390044212341309
    10. '`)' → logprob: -11.390044212341309

Token 29: 'is' (ID: 276)
  Prédit: ' sieve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.6343430280685425
    2. 's' → logprob: -1.0093430280685425
    3. 'prime' → logprob: -2.884343147277832
    4. 'pr' → logprob: -3.384343147277832
    5. 'is' → logprob: -5.134343147277832
    6. ' is' → logprob: -5.759343147277832
    7. ' primes' → logprob: -6.009343147277832
    8. 'cr' → logprob: -7.384343147277832
    9. '_prime' → logprob: -7.509343147277832
    10. ' prime' → logprob: -7.509343147277832

Token 30: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -5.6934557505883276e-05
    2. '_' → logprob: -9.875057220458984
    3. '_p' → logprob: -12.500057220458984
    4. '_pr' → logprob: -13.750057220458984
    5. 'prime' → logprob: -15.000057220458984
    6. '```' → logprob: -16.000057220458984
    7. ' _' → logprob: -16.625057220458984
    8. '_Pr' → logprob: -16.750057220458984
    9. 'Prime' → logprob: -17.000057220458984
    10. '_prob' → logprob: -17.750057220458984

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.307375431060791
    2. '[' → logprob: -1.682375431060791
    3. '=' → logprob: -2.557375431060791
    4. '_' → logprob: -7.932375431060791
    5. '=[' → logprob: -8.182374954223633
    6. '[:]' → logprob: -8.432374954223633
    7. ' ' → logprob: -8.682374954223633
    8. 's' → logprob: -9.932374954223633
    9. ' =[' → logprob: -10.182374954223633
    10. '[]' → logprob: -10.682374954223633

Token 32: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2014242559671402
    2. ' [' → logprob: -1.701424241065979
    3. '[MAX' → logprob: -13.201424598693848
    4. '[start' → logprob: -13.701424598693848
    5. '[int' → logprob: -13.701424598693848
    6. '[class' → logprob: -14.076424598693848
    7. '[n' → logprob: -14.326424598693848
    8. '[len' → logprob: -14.451424598693848
    9. '[m' → logprob: -14.576424598693848
    10. '[num' → logprob: -14.826424598693848

Token 33: 'True' (ID: 4710)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4741916358470917
    2. 'True' → logprob: -0.9741916656494141
    3. 'False' → logprob: -9.349191665649414
    4. ' False' → logprob: -10.599191665649414
    5. '(True' → logprob: -13.099191665649414
    6. ' ' → logprob: -15.099191665649414
    7. 'Tr' → logprob: -16.224191665649414
    8. '   ' → logprob: -16.974191665649414
    9. '=True' → logprob: -16.974191665649414
    10. ' ' → logprob: -17.224191665649414

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08089842647314072
    2. ',' → logprob: -3.2058985233306885
    3. ' ]' → logprob: -4.080898284912109
    4. ' for' → logprob: -4.330898284912109
    5. '[' → logprob: -5.205898284912109
    6. ' ' → logprob: -7.830898284912109
    7. '<|end|>' → logprob: -7.830898284912109
    8. ')' → logprob: -7.955898284912109
    9. '<|end|>' → logprob: -8.83089828491211
    10. ' ,' → logprob: -8.83089828491211

Token 35: ' *' (ID: 425)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7087860703468323
    2. '[' → logprob: -0.9587860703468323
    3. '(MAX' → logprob: -2.9587860107421875
    4. ',' → logprob: -3.7087860107421875
    5. ']' → logprob: -4.2087860107421875
    6. '([' → logprob: -4.3337860107421875
    7. '[MAX' → logprob: -4.7087860107421875
    8. ' (' → logprob: -5.8337860107421875
    9. '(max' → logprob: -6.3337860107421875
    10. ' for' → logprob: -6.4587860107421875

Token 36: ' (' (ID: 350)
  Prédit: '(MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -11.125036239624023
    3. 'MAX' → logprob: -11.750036239624023
    4. '(M' → logprob: -11.875036239624023
    5. '(max' → logprob: -13.250036239624023
    6. '(Max' → logprob: -13.250036239624023
    7. ' (' → logprob: -13.750036239624023
    8. '[MAX' → logprob: -14.000036239624023
    9. '((' → logprob: -14.750036239624023
    10. '(NUM' → logprob: -15.250036239624023

Token 37: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.010793006978929043
    2. ' MAX' → logprob: -4.760793209075928
    3. '(MAX' → logprob: -6.135793209075928
    4. ' (' → logprob: -11.88579273223877
    5. '(' → logprob: -13.88579273223877
    6. ' ' → logprob: -14.13579273223877
    7. '_MAX' → logprob: -14.26079273223877
    8. 'M' → logprob: -14.51079273223877
    9. 'MA' → logprob: -14.63579273223877
    10. '[MAX' → logprob: -14.76079273223877

Token 38: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -3.082895273109898e-05
    2. '_' → logprob: -11.000030517578125
    3. '_n' → logprob: -11.375030517578125
    4. ' _' → logprob: -13.750030517578125
    5. '_MAX' → logprob: -14.125030517578125
    6. '+' → logprob: -15.500030517578125
    7. '_NUM' → logprob: -15.875030517578125
    8. '```' → logprob: -17.000030517578125
    9. '_M' → logprob: -17.250030517578125
    10. '_A' → logprob: -17.500030517578125

Token 39: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02324955351650715
    2. ' +' → logprob: -3.773249626159668
    3. ')' → logprob: -12.898249626159668
    4. '+
' → logprob: -14.648249626159668
    5. '+)' → logprob: -14.898249626159668
    6. '1' → logprob: -15.648249626159668
    7. ' +
' → logprob: -16.27324867248535
    8. ' ' → logprob: -16.27324867248535
    9. ' )' → logprob: -16.39824867248535
    10. '＋' → logprob: -16.52324867248535

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026300642639398575
    2. ' ' → logprob: -3.6513006687164307
    3. '  ' → logprob: -15.651300430297852
    4. ' ' → logprob: -16.40130043029785
    5. '```' → logprob: -16.77630043029785
    6. ')' → logprob: -16.90130043029785
    7. '0' → logprob: -16.90130043029785
    8. '   ' → logprob: -17.15130043029785
    9. ' )' → logprob: -17.71380043029785
    10. '2' → logprob: -17.77630043029785

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. ')' → logprob: -17.375158309936523
    4. '  ' → logprob: -17.500158309936523
    5. '```' → logprob: -17.500158309936523
    6. '0' → logprob: -17.625158309936523
    7. '   ' → logprob: -18.000158309936523
    8. '2' → logprob: -18.937658309936523
    9. '１' → logprob: -19.062658309936523
    10. '7' → logprob: -19.187658309936523

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.717296517104842e-05
    2. ')
' → logprob: -10.000057220458984
    3. ' )' → logprob: -11.750057220458984
    4. ')

' → logprob: -13.750057220458984
    5. ']' → logprob: -13.875057220458984
    6. '[' → logprob: -14.500057220458984
    7. '<|end|>' → logprob: -15.375057220458984
    8. ')#' → logprob: -15.500057220458984
    9. ')
' → logprob: -15.750057220458984
    10. '#' → logprob: -15.875057220458984

Token 43: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.27323484420776367
    2. '
' → logprob: -1.5232348442077637
    3. 'for' → logprob: -5.148234844207764
    4. ' 
' → logprob: -5.773234844207764
    5. '\n' → logprob: -5.898234844207764
    6. '

' → logprob: -6.148234844207764
    7. ' is' → logprob: -6.148234844207764
    8. '#' → logprob: -6.898234844207764
    9. '[' → logprob: -7.023234844207764
    10. '\' → logprob: -7.273234844207764

Token 44: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.002227098448202014
    2. '_' → logprob: -6.127227306365967
    3. ' _' → logprob: -10.627226829528809
    4. '_pr' → logprob: -12.127226829528809
    5. '_s' → logprob: -12.877226829528809
    6. ''_' → logprob: -13.627226829528809
    7. '_p' → logprob: -13.752226829528809
    8. '_prior' → logprob: -14.127226829528809
    9. '_
' → logprob: -14.252226829528809
    10. '```' → logprob: -14.377226829528809

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '\[' → logprob: -13.875001907348633
    3. '[:]' → logprob: -14.750001907348633
    4. '```' → logprob: -15.500001907348633
    5. '[...]' → logprob: -15.625001907348633
    6. '[
' → logprob: -15.875001907348633
    7. '[]' → logprob: -17.000001907348633
    8. '<|end|>' → logprob: -17.000001907348633
    9. ' [' → logprob: -17.375001907348633
    10. ' ' → logprob: -18.250001907348633

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001589618914294988
    2. ' ' → logprob: -8.75015926361084
    3. ':' → logprob: -16.000158309936523
    4. '1' → logprob: -16.125158309936523
    5. '  ' → logprob: -16.500158309936523
    6. ')' → logprob: -17.125158309936523
    7. '۰' → logprob: -17.312658309936523
    8. '   ' → logprob: -17.750158309936523
    9. '```' → logprob: -17.750158309936523
    10. '-' → logprob: -17.812658309936523

Token 47: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0040799472481012344
    2. ' ]' → logprob: -5.504079818725586
    3. ']=' → logprob: -13.629079818725586
    4. '],' → logprob: -15.504079818725586
    5. ' ' → logprob: -17.129079818725586
    6. '']' → logprob: -17.129079818725586
    7. ')' → logprob: -17.504079818725586
    8. '=' → logprob: -18.379079818725586
    9. ']==' → logprob: -18.754079818725586
    10. ' =' → logprob: -18.879079818725586

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01260560005903244
    2. '=' → logprob: -4.387605667114258
    3. ' ' → logprob: -9.512605667114258
    4. ',' → logprob: -10.887605667114258
    5. ' =
' → logprob: -13.762605667114258
    6. ']' → logprob: -14.637605667114258
    7. ' ,' → logprob: -15.012605667114258
    8. ' ==' → logprob: -15.137605667114258
    9. '<|end|>' → logprob: -15.512605667114258
    10. ' |=' → logprob: -15.637605667114258

Token 49: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.25192946195602417
    2. ' False' → logprob: -1.501929521560669
    3. 'F' → logprob: -15.75192928314209
    4. '(False' → logprob: -16.376930236816406
    5. '=False' → logprob: -16.876930236816406
    6. '.False' → logprob: -18.001930236816406
    7. ' ' → logprob: -18.126930236816406
    8. '_false' → logprob: -18.501930236816406
    9. ' F' → logprob: -19.501930236816406
    10. 'Fa' → logprob: -19.626930236816406

Token 50: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.18025481700897217
    2. '<|end|>' → logprob: -1.9302548170089722
    3. ' is' → logprob: -4.055254936218262
    4. '
' → logprob: -6.430254936218262
    5. '<|end|>' → logprob: -8.430254936218262
    6. ' 
' → logprob: -8.805254936218262
    7. '  
' → logprob: -8.805254936218262
    8. '#' → logprob: -8.805254936218262
    9. '```' → logprob: -10.180254936218262
    10. '0' → logprob: -10.430254936218262

Token 52: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -6.802049756515771e-05
    2. '_' → logprob: -9.750067710876465
    3. '._' → logprob: -13.000067710876465
    4. 'prime' → logprob: -13.125067710876465
    5. ' _' → logprob: -13.750067710876465
    6. '_pr' → logprob: -13.750067710876465
    7. '[' → logprob: -14.250067710876465
    8. '_pi' → logprob: -14.500067710876465
    9. ''_' → logprob: -14.875067710876465
    10. '_prior' → logprob: -15.250067710876465

Token 53: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[
' → logprob: -17.125
    3. '1' → logprob: -17.25
    4. ' [' → logprob: -17.375
    5. '\[' → logprob: -19.0
    6. '```' → logprob: -19.25
    7. '<|end|>' → logprob: -19.875
    8. 's' → logprob: -20.375
    9. '[...]' → logprob: -21.375
    10. '=' → logprob: -21.5

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -17.375019073486328
    4. ')' → logprob: -17.500019073486328
    5. ']' → logprob: -17.875019073486328
    6. '0' → logprob: -17.875019073486328
    7. '

' → logprob: -18.062519073486328
    8. '  ' → logprob: -18.250019073486328
    9. '۱' → logprob: -18.312519073486328
    10. ' ' → logprob: -18.375019073486328

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8832138776779175
    2. ' =' → logprob: -0.8832138776779175
    3. '=' → logprob: -1.7582138776779175
    4. ' ]' → logprob: -7.633213996887207
    5. ']=' → logprob: -8.883213996887207
    6. ')' → logprob: -9.133213996887207
    7. ' ' → logprob: -11.758213996887207
    8. '<|end|>' → logprob: -13.758213996887207
    9. '[' → logprob: -14.133213996887207
    10. ' ' → logprob: -14.508213996887207

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048170737922192
    2. '=' → logprob: -4.511048316955566
    3. '=False' → logprob: -15.136048316955566
    4. ' ' → logprob: -17.51104736328125
    5. ' =
' → logprob: -17.63604736328125
    6. '<|end|>' → logprob: -18.38604736328125
    7. ' =)' → logprob: -18.76104736328125
    8. '=True' → logprob: -18.76104736328125
    9. ' =
' → logprob: -19.51104736328125
    10. ')' → logprob: -19.63604736328125

Token 57: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07888978719711304
    2. ' False' → logprob: -2.578889846801758
    3. '(False' → logprob: -19.578889846801758
    4. '=False' → logprob: -20.078889846801758
    5. ' ' → logprob: -21.203889846801758
    6. '.False' → logprob: -21.203889846801758
    7. '_false' → logprob: -21.453889846801758
    8. 'True' → logprob: -23.203889846801758
    9. '0' → logprob: -23.328889846801758
    10. 'F' → logprob: -23.328889846801758

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6657968163490295
    2. 'for' → logprob: -0.7907968163490295
    3. ' for' → logprob: -3.5407967567443848
    4. '```' → logprob: -7.040796756744385
    5. '
' → logprob: -7.165796756744385
    6. '\n' → logprob: -7.540796756744385
    7. '#' → logprob: -7.915796756744385
    8. '

' → logprob: -8.165797233581543
    9. ' 
' → logprob: -8.290797233581543
    10. '  
' → logprob: -8.665797233581543

Token 59: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014378449879586697
    2. ' for' → logprob: -4.764378547668457
    3. '
' → logprob: -5.514378547668457
    4. '```' → logprob: -6.514378547668457
    5. '\n' → logprob: -9.014378547668457
    6. '#' → logprob: -10.014378547668457
    7. 'import' → logprob: -10.889378547668457
    8. '
' → logprob: -11.389378547668457
    9. '

' → logprob: -11.639378547668457
    10. '\' → logprob: -11.764378547668457

Token 60: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005050048232078552
    2. ' ' → logprob: -5.380050182342529
    3. 'i' → logprob: -8.380049705505371
    4. ' p' → logprob: -8.630049705505371
    5. ' _' → logprob: -11.255049705505371
    6. '	i' → logprob: -12.630049705505371
    7. '  ' → logprob: -14.255049705505371
    8. ' space' → logprob: -14.255049705505371
    9. '2' → logprob: -14.255049705505371
    10. ' range' → logprob: -14.505049705505371

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023483403027057648
    2. 'in' → logprob: -3.7734835147857666
    3. ' ' → logprob: -8.523483276367188
    4. 'n' → logprob: -11.523483276367188
    5. '=' → logprob: -12.023483276367188
    6. '2' → logprob: -12.398483276367188
    7. '  ' → logprob: -12.898483276367188
    8. 'range' → logprob: -12.898483276367188
    9. 'import' → logprob: -13.023483276367188
    10. '   ' → logprob: -13.023483276367188

Token 62: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018150994554162025
    2. 'range' → logprob: -4.018150806427002
    3. '2' → logprob: -14.64315128326416
    4. ' ' → logprob: -14.64315128326416
    5. '	range' → logprob: -15.51815128326416
    6. '  ' → logprob: -18.643150329589844
    7. '(range' → logprob: -19.143150329589844
    8. ' xrange' → logprob: -19.393150329589844
    9. '.range' → logprob: -19.393150329589844
    10. '   ' → logprob: -19.643150329589844

Token 63: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010735770774772391
    2. '2' → logprob: -9.750107765197754
    3. ' ' → logprob: -10.125107765197754
    4. ' (' → logprob: -11.625107765197754
    5. '(
' → logprob: -20.000106811523438
    6. '	' → logprob: -20.125106811523438
    7. '```' → logprob: -20.500106811523438
    8. '  ' → logprob: -21.125106811523438
    9. '   ' → logprob: -21.125106811523438
    10. '[' → logprob: -21.250106811523438

Token 64: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.875
    4. '(' → logprob: -19.625
    5. '۲' → logprob: -19.75
    6. '```' → logprob: -19.75
    7. '２' → logprob: -20.125
    8. ')' → logprob: -20.875
    9. '	' → logprob: -21.5
    10. '  ' → logprob: -21.625

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0160469189286232
    2. ' ,' → logprob: -4.14104700088501
    3. ' ' → logprob: -11.641046524047852
    4. ',int' → logprob: -13.766046524047852
    5. ')' → logprob: -14.141046524047852
    6. ' )' → logprob: -14.266046524047852
    7. ' ):' → logprob: -15.266046524047852
    8. '  ' → logprob: -15.891046524047852
    9. ' in' → logprob: -16.14104652404785
    10. ':' → logprob: -16.14104652404785

Token 66: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0380634106695652
    2. ' int' → logprob: -3.2880635261535645
    3. 'math' → logprob: -10.913063049316406
    4. '	int' → logprob: -13.288063049316406
    5. ' math' → logprob: -13.288063049316406
    6. '(int' → logprob: -15.413063049316406
    7. ' ' → logprob: -17.413063049316406
    8. '=int' → logprob: -17.788063049316406
    9. ':int' → logprob: -17.913063049316406
    10. '[int' → logprob: -18.413063049316406

Token 67: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.31730738282203674
    2. '(' → logprob: -1.3173073530197144
    3. '(MAX' → logprob: -5.567307472229004
    4. ' (' → logprob: -9.442307472229004
    5. '(s' → logprob: -9.817307472229004
    6. '(M' → logprob: -10.317307472229004
    7. '((' → logprob: -10.817307472229004
    8. '(max' → logprob: -11.067307472229004
    9. '(
' → logprob: -12.192307472229004
    10. '(Math' → logprob: -12.442307472229004

Token 68: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.2015714943408966
    2. '.' → logprob: -1.7015714645385742
    3. ' .' → logprob: -9.201571464538574
    4. '.s' → logprob: -11.076571464538574
    5. '.math' → logprob: -11.076571464538574
    6. '.is' → logprob: -11.701571464538574
    7. '.Sqrt' → logprob: -11.951571464538574
    8. 'sqrt' → logprob: -13.076571464538574
    9. '.ceil' → logprob: -13.326571464538574
    10. '(math' → logprob: -13.326571464538574

Token 69: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.06201619654893875
    2. '(' → logprob: -2.812016248703003
    3. '(
' → logprob: -11.312016487121582
    4. '((' → logprob: -11.562016487121582
    5. ' (' → logprob: -11.812016487121582
    6. 'MAX' → logprob: -12.312016487121582
    7. '(M' → logprob: -12.937016487121582
    8. '(

' → logprob: -12.937016487121582
    9. ')' → logprob: -13.062016487121582
    10. '(max' → logprob: -13.312016487121582

Token 70: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -1.2664456789934775e-06
    2. '_MAX' → logprob: -14.125000953674316
    3. 'N' → logprob: -15.125000953674316
    4. '_n' → logprob: -16.250001907348633
    5. '_' → logprob: -17.250001907348633
    6. '```' → logprob: -17.375001907348633
    7. ' ' → logprob: -18.250001907348633
    8. ' _' → logprob: -18.750001907348633
    9. '_M' → logprob: -18.750001907348633
    10. 'MAX' → logprob: -18.875001907348633

Token 71: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1753731667995453
    2. '(' → logprob: -1.9253731966018677
    3. ')+' → logprob: -4.300373077392578
    4. '(i' → logprob: -7.175373077392578
    5. ' )' → logprob: -7.800373077392578
    6. '(MAX' → logprob: -9.425373077392578
    7. '))+' → logprob: -9.800373077392578
    8. ' ' → logprob: -9.800373077392578
    9. '))' → logprob: -10.800373077392578
    10. ' (' → logprob: -11.050373077392578

Token 72: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868788182735443
    2. ' +' → logprob: -1.1368788480758667
    3. ' ' → logprob: -12.636878967285156
    4. ')+' → logprob: -13.011878967285156
    5. ')' → logprob: -13.386878967285156
    6. '()+' → logprob: -14.886878967285156
    7. ' ' → logprob: -15.761878967285156
    8. '1' → logprob: -16.636878967285156
    9. ' plus' → logprob: -17.136878967285156
    10. '()' → logprob: -17.636878967285156

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029751762747764587
    2. ' ' → logprob: -3.529751777648926
    3. ' ' → logprob: -14.404751777648926
    4. '(' → logprob: -15.529751777648926
    5. '```' → logprob: -15.904751777648926
    6. '2' → logprob: -16.02975082397461
    7. '  ' → logprob: -16.27975082397461
    8. '   ' → logprob: -16.65475082397461
    9. ')' → logprob: -17.40475082397461
    10. '۱' → logprob: -17.65475082397461

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '(' → logprob: -16.875139236450195
    4. '```' → logprob: -17.500139236450195
    5. '   ' → logprob: -18.250139236450195
    6. '  ' → logprob: -18.375139236450195
    7. ' ' → logprob: -18.875139236450195
    8. '2' → logprob: -19.125139236450195
    9. ')' → logprob: -19.750139236450195
    10. '    ' → logprob: -19.875139236450195

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12728074193000793
    2. ':' → logprob: -2.1272807121276855
    3. ')' → logprob: -8.252281188964844
    4. ' ):' → logprob: -9.877281188964844
    5. '):
' → logprob: -10.627281188964844
    6. ':)' → logprob: -11.877281188964844
    7. ' :' → logprob: -12.377281188964844
    8. ':**' → logprob: -13.377281188964844
    9. ',' → logprob: -14.252281188964844
    10. '():' → logprob: -14.377281188964844

Token 76: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06013365834951401
    2. '   ' → logprob: -3.185133695602417
    3. ' if' → logprob: -4.935133457183838
    4. ':
' → logprob: -5.810133457183838
    5. ' ' → logprob: -5.935133457183838
    6. ' :' → logprob: -6.435133457183838
    7. 'if' → logprob: -6.810133457183838
    8. '<|end|>' → logprob: -7.560133457183838
    9. '):' → logprob: -8.060133934020996
    10. '  ' → logprob: -8.435133934020996

Token 77: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5521558523178101
    2. ' ' → logprob: -1.05215585231781
    3. 'if' (adapté à ' if') → logprob: -3.1771559715270996
    4. '   ' → logprob: -4.1771559715271
    5. '    ' → logprob: -4.5521559715271
    6. '<|end|>' → logprob: -5.8021559715271
    7. ' 
' → logprob: -5.9271559715271
    8. '  ' → logprob: -6.8021559715271
    9. '    
' → logprob: -8.177155494689941
    10. '     
' → logprob: -9.552155494689941

Token 78: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0024723282549530268
    2. 'is' → logprob: -6.127472400665283
    3. ' ' → logprob: -8.252471923828125
    4. ' ' → logprob: -10.627471923828125
    5. '	is' → logprob: -13.502471923828125
    6. '  ' → logprob: -15.252471923828125
    7. ' not' → logprob: -15.252471923828125
    8. 's' → logprob: -16.002471923828125
    9. ' ' → logprob: -16.502471923828125
    10. '_is' → logprob: -16.752471923828125

Token 79: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0005124026210978627
    2. '_' → logprob: -7.625512599945068
    3. ' _' → logprob: -11.50051212310791
    4. '_pr' → logprob: -11.62551212310791
    5. ''_' → logprob: -13.00051212310791
    6. '_Pr' → logprob: -14.37551212310791
    7. '_p' → logprob: -14.50051212310791
    8. '_pi' → logprob: -14.62551212310791
    9. '_prior' → logprob: -15.37551212310791
    10. '_free' → logprob: -15.50051212310791

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014001218369230628
    2. '[' → logprob: -8.875140190124512
    3. '[I' → logprob: -16.875139236450195
    4. ' [' → logprob: -17.250139236450195
    5. '```' → logprob: -17.500139236450195
    6. '\[' → logprob: -17.875139236450195
    7. '   ' → logprob: -18.125139236450195
    8. 'i' → logprob: -18.250139236450195
    9. '[j' → logprob: -18.625139236450195
    10. '[ip' → logprob: -19.125139236450195

Token 81: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015941266901791096
    2. ' ):' → logprob: -7.126594066619873
    3. ':' → logprob: -7.876594066619873
    4. ')' → logprob: -8.126594543457031
    5. ']:' → logprob: -9.751594543457031
    6. '):
' → logprob: -10.001594543457031
    7. '=' → logprob: -13.126594543457031
    8. ' )' → logprob: -13.126594543457031
    9. ']):' → logprob: -13.376594543457031
    10. ' ' → logprob: -13.626594543457031

Token 82: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1359582245349884
    2. '       ' → logprob: -2.135958194732666
    3. '   ' → logprob: -5.260958194732666
    4. ':
' → logprob: -6.760958194732666
    5. ' for' → logprob: -6.885958194732666
    6. ' :' → logprob: -7.260958194732666
    7. 'for' → logprob: -7.760958194732666
    8. '    ' → logprob: -8.135958671569824
    9. ' :
' → logprob: -10.385958671569824
    10. ',' → logprob: -10.510958671569824

Token 83: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04395027831196785
    2. 'for' (adapté à ' for') → logprob: -3.168950319290161
    3. '   ' → logprob: -7.293950080871582
    4. ' j' → logprob: -8.668950080871582
    5. '    ' → logprob: -10.168950080871582
    6. '       ' → logprob: -10.668950080871582
    7. ' ' → logprob: -11.168950080871582
    8. ' ' → logprob: -11.793950080871582
    9. 'j' → logprob: -11.918950080871582
    10. '```' → logprob: -12.918950080871582

Token 84: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.10020732134580612
    2. 'j' → logprob: -2.3502073287963867
    3. '	j' → logprob: -14.350207328796387
    4. ' ' → logprob: -16.22520637512207
    5. ' multiple' → logprob: -18.47520637512207
    6. '*j' → logprob: -19.60020637512207
    7. ' multiples' → logprob: -19.72520637512207
    8. '_j' → logprob: -19.72520637512207
    9. '   ' → logprob: -19.85020637512207
    10. '```' → logprob: -20.35020637512207

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055255159735679626
    2. 'in' → logprob: -2.930255174636841
    3. '=' → logprob: -8.305254936218262
    4. ' =' → logprob: -9.930254936218262
    5. ' ' → logprob: -10.805254936218262
    6. ' i' → logprob: -11.055254936218262
    7. '	in' → logprob: -11.305254936218262
    8. '    ' → logprob: -11.930254936218262
    9. '=i' → logprob: -12.430254936218262
    10. '<|end|>' → logprob: -12.430254936218262

Token 86: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06699030846357346
    2. ' i' → logprob: -2.941990375518799
    3. 'range' → logprob: -4.566990375518799
    4. ' ' → logprob: -6.691990375518799
    5. 'i' → logprob: -8.44198989868164
    6. ' in' → logprob: -9.31698989868164
    7. '	range' → logprob: -9.44198989868164
    8. '   ' → logprob: -12.81698989868164
    9. ' xrange' → logprob: -12.94198989868164
    10. '(range' → logprob: -13.06698989868164

Token 87: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03925400972366333
    2. '(' → logprob: -3.2892539501190186
    3. ' i' → logprob: -7.289254188537598
    4. 'i' → logprob: -8.039254188537598
    5. ' (' → logprob: -8.539254188537598
    6. ' ' → logprob: -12.039254188537598
    7. '	i' → logprob: -12.664254188537598
    8. '(
' → logprob: -14.414254188537598
    9. '   ' → logprob: -15.539254188537598
    10. ')' → logprob: -15.539254188537598

Token 88: '*i' (ID: 51147)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6952109336853027
    2. '*i' → logprob: -0.6952109336853027
    3. ' *' → logprob: -6.195210933685303
    4. 'i' → logprob: -11.195211410522461
    5. ',' → logprob: -12.945211410522461
    6. '**' → logprob: -13.195211410522461
    7. ' ' → logprob: -13.445211410522461
    8. '*,' → logprob: -14.070211410522461
    9. '*j' → logprob: -14.195211410522461
    10. '*
' → logprob: -14.320211410522461

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010354319238103926
    2. ' ,' → logprob: -9.375103950500488
    3. ',max' → logprob: -12.125103950500488
    4. ',M' → logprob: -12.375103950500488
    5. ',len' → logprob: -12.750103950500488
    6. ',N' → logprob: -13.250103950500488
    7. ',j' → logprob: -14.000103950500488
    8. ',n' → logprob: -14.250103950500488
    9. ',num' → logprob: -14.250103950500488
    10. ',
' → logprob: -14.375103950500488

Token 90: ' MAX' (ID: 16960)
  Prédit: ' MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MAX' → logprob: -0.6932205557823181
    2. 'MAX' → logprob: -0.6932205557823181
    3. '(MAX' → logprob: -9.568220138549805
    4. '_MAX' → logprob: -13.818220138549805
    5. ' ' → logprob: -14.193220138549805
    6. '/MAX' → logprob: -14.443220138549805
    7. '   ' → logprob: -14.943220138549805
    8. ' ' → logprob: -15.818220138549805
    9. ' max' → logprob: -15.818220138549805
    10. '[MAX' → logprob: -15.943220138549805

Token 91: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -1.27099974633893e-05
    2. '+' → logprob: -11.875012397766113
    3. '_MAX' → logprob: -13.000012397766113
    4. '_' → logprob: -13.500012397766113
    5. ' _' → logprob: -14.250012397766113
    6. '```' → logprob: -14.875012397766113
    7. '_n' → logprob: -15.875012397766113
    8. '_M' → logprob: -16.00001335144043
    9. '_UN' → logprob: -16.62501335144043
    10. ' +' → logprob: -16.62501335144043

Token 92: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009132515988312662
    2. ' +' → logprob: -7.000913143157959
    3. '+
' → logprob: -13.250913619995117
    4. '
' → logprob: -16.750913619995117
    5. ' ' → logprob: -17.125913619995117
    6. '1' → logprob: -17.750913619995117
    7. '+,' → logprob: -17.750913619995117
    8. '+

' → logprob: -18.250913619995117
    9. ',' → logprob: -18.250913619995117
    10. ' ' → logprob: -18.375913619995117

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -16.375019073486328
    4. '   ' → logprob: -17.625019073486328
    5. ')' → logprob: -17.625019073486328
    6. ' ' → logprob: -18.000019073486328
    7. '  ' → logprob: -18.250019073486328
    8. '１' → logprob: -18.562519073486328
    9. '
' → logprob: -18.625019073486328
    10. '+' → logprob: -18.625019073486328

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00201999768614769
    2. ',i' → logprob: -6.252019882202148
    3. ',j' → logprob: -9.877019882202148
    4. ' ,' → logprob: -10.252019882202148
    5. ')' → logprob: -13.627019882202148
    6. ',n' → logprob: -14.377019882202148
    7. ',I' → logprob: -14.752019882202148
    8. ' i' → logprob: -15.002019882202148
    9. '```' → logprob: -15.252019882202148
    10. ',r' → logprob: -15.752019882202148

Token 95: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.313263863325119
    2. ' i' → logprob: -1.3132638931274414
    3. '	i' → logprob: -13.438263893127441
    4. ' ' → logprob: -14.688263893127441
    5. ')' → logprob: -15.813263893127441
    6. ')i' → logprob: -16.188262939453125
    7. '   ' → logprob: -17.938262939453125
    8. ' 
' → logprob: -17.938262939453125
    9. '*i' → logprob: -18.813262939453125
    10. ' ' → logprob: -19.063262939453125

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005866335122846067
    2. ')' → logprob: -7.50058650970459
    3. ' ):' → logprob: -10.87558650970459
    4. '):
' → logprob: -11.37558650970459
    5. ':' → logprob: -13.00058650970459
    6. ',' → logprob: -14.50058650970459
    7. ']:' → logprob: -16.875587463378906
    8. ' )' → logprob: -16.875587463378906
    9. ' ' → logprob: -17.000587463378906
    10. ')：' → logprob: -17.000587463378906

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019516445696353912
    2. ' is' → logprob: -4.019516468048096
    3. 'is' → logprob: -7.769516468048096
    4. '               ' → logprob: -7.769516468048096
    5. '            
' → logprob: -8.394515991210938
    6. '            ' → logprob: -9.019515991210938
    7. ' 
' → logprob: -9.769515991210938
    8. ' ' → logprob: -10.519515991210938
    9. '       ' → logprob: -11.019515991210938
    10. '          ' → logprob: -11.019515991210938

Token 98: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.5759443044662476
    2. ' is' → logprob: -0.8259443044662476
    3. ' ' → logprob: -12.950943946838379
    4. ' 
' → logprob: -13.200943946838379
    5. '	is' → logprob: -15.825943946838379
    6. ' ' → logprob: -16.200944900512695
    7. '   ' → logprob: -16.700944900512695
    8. ')' → logprob: -16.950944900512695
    9. '```' → logprob: -16.950944900512695
    10. '            
' → logprob: -17.325944900512695

Token 99: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -7.226628895296017e-06
    2. '_' → logprob: -12.125007629394531
    3. '_pr' → logprob: -14.125007629394531
    4. 'prime' → logprob: -14.250007629394531
    5. ' _' → logprob: -15.500007629394531
    6. '_prior' → logprob: -16.00000762939453
    7. '_p' → logprob: -17.37500762939453
    8. ''_' → logprob: -17.87500762939453
    9. '_Pr' → logprob: -18.50000762939453
    10. '_
' → logprob: -18.75000762939453

Token 100: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007110013975761831
    2. '[' → logprob: -7.250710964202881
    3. '[J' → logprob: -14.750711441040039
    4. '[i' → logprob: -15.125711441040039
    5. '[js' → logprob: -15.375711441040039
    6. '```' → logprob: -16.50071144104004
    7. '\[' → logprob: -16.62571144104004
    8. '[...]' → logprob: -17.62571144104004
    9. ' [' → logprob: -17.62571144104004
    10. ']' → logprob: -17.62571144104004

Token 101: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009527906076982617
    2. ' ]' → logprob: -7.00095272064209
    3. ']=' → logprob: -10.25095272064209
    4. '=' → logprob: -12.12595272064209
    5. ' =' → logprob: -14.87595272064209
    6. ')' → logprob: -16.250953674316406
    7. ' ' → logprob: -18.125953674316406
    8. '']' → logprob: -19.500953674316406
    9. ']
' → logprob: -19.750953674316406
    10. ']

' → logprob: -19.875953674316406

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740968942642212
    2. '=' → logprob: -0.9740968942642212
    3. '=False' → logprob: -10.84909725189209
    4. '=True' → logprob: -15.84909725189209
    5. 'False' → logprob: -15.84909725189209
    6. ' False' → logprob: -16.474096298217773
    7. ')' → logprob: -16.599096298217773
    8. ' ' → logprob: -16.724096298217773
    9. ']' → logprob: -17.349096298217773
    10. '[' → logprob: -17.349096298217773

Token 103: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01416350994259119
    2. ' False' → logprob: -4.264163494110107
    3. '(False' → logprob: -17.764163970947266
    4. 'F' → logprob: -19.514163970947266
    5. '=False' → logprob: -21.264163970947266
    6. '.False' → logprob: -21.514163970947266
    7. 'Fa' → logprob: -21.764163970947266
    8. 'Fal' → logprob: -22.764163970947266
    9. '_false' → logprob: -22.889163970947266
    10. 'Falsy' → logprob: -23.514163970947266

Token 104: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.041785869747400284
    2. '\n' → logprob: -3.791785955429077
    3. '<|end|>' → logprob: -4.666785717010498
    4. ' 
' → logprob: -6.041785717010498
    5. '

' → logprob: -6.291785717010498
    6. ' ' → logprob: -6.666785717010498
    7. '' → logprob: -7.041785717010498
    8. '#' → logprob: -7.416785717010498
    9. 'newline' → logprob: -7.791785717010498
    10. 'n' → logprob: -7.916785717010498

Token 105: 'for' (ID: 1938)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8862364292144775
    2. '
' → logprob: -1.1362364292144775
    3. '#' → logprob: -1.6362364292144775
    4. '\n' → logprob: -4.136236190795898
    5. '

' → logprob: -4.261236190795898
    6. 'def' → logprob: -4.261236190795898
    7. ' 
' → logprob: -5.511236190795898
    8. '  
' → logprob: -5.886236190795898
    9. 'd' → logprob: -6.011236190795898
    10. '```' → logprob: -6.261236190795898

Token 106: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03453550860285759
    2. ' i' → logprob: -3.4095354080200195
    3. ' _' → logprob: -7.7845354080200195
    4. '_' → logprob: -8.53453540802002
    5. 'i' → logprob: -8.65953540802002
    6. '  ' → logprob: -9.78453540802002
    7. ' ‌' → logprob: -11.28453540802002
    8. ' space' → logprob: -11.53453540802002
    9. ' ' → logprob: -11.90953540802002
    10. ' n' → logprob: -12.53453540802002

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02993352711200714
    2. 'in' → logprob: -3.529933452606201
    3. ' ' → logprob: -9.90493392944336
    4. ':' → logprob: -10.02993392944336
    5. '[' → logprob: -10.77993392944336
    6. 's' → logprob: -10.90493392944336
    7. ',' → logprob: -11.52993392944336
    8. '(' → logprob: -12.02993392944336
    9. ' i' → logprob: -12.15493392944336
    10. ' :' → logprob: -12.52993392944336

Token 108: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4741014838218689
    2. ' sys' → logprob: -0.9741014838218689
    3. '=sys' → logprob: -10.974101066589355
    4. '(sys' → logprob: -12.849101066589355
    5. '	sys' → logprob: -12.849101066589355
    6. 'stdin' → logprob: -14.349101066589355
    7. 's' → logprob: -14.474101066589355
    8. ' ' → logprob: -15.599101066589355
    9. '```' → logprob: -15.724101066589355
    10. 'iter' → logprob: -15.724101066589355

Token 109: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.18122334778308868
    2. '.readline' → logprob: -2.4312233924865723
    3. '.' → logprob: -2.5562233924865723
    4. '.readlines' → logprob: -9.306222915649414
    5. 'stdin' → logprob: -9.931222915649414
    6. '.stdout' → logprob: -10.181222915649414
    7. '.argv' → logprob: -11.431222915649414
    8. '(stdin' → logprob: -11.681222915649414
    9. ' .' → logprob: -12.306222915649414
    10. '._' → logprob: -12.931222915649414

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015700804069638252
    2. '.readline' → logprob: -4.390700817108154
    3. '.strip' → logprob: -6.515700817108154
    4. '.' → logprob: -6.890700817108154
    5. ':
' → logprob: -8.140700340270996
    6. '.rstrip' → logprob: -8.765700340270996
    7. ' :' → logprob: -9.015700340270996
    8. ' in' → logprob: -9.890700340270996
    9. '.readlines' → logprob: -10.390700340270996
    10. 'rstrip' → logprob: -11.765700340270996

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003924637567251921
    2. '    
' → logprob: -6.62892484664917
    3. ' readline' → logprob: -7.25392484664917
    4. ' tokens' → logprob: -8.003924369812012
    5. 'tokens' → logprob: -8.253924369812012
    6. ' line' → logprob: -8.628924369812012
    7. '.strip' → logprob: -8.753924369812012
    8. ' token' → logprob: -9.003924369812012
    9. ' n' → logprob: -9.128924369812012
    10. ' if' → logprob: -9.128924369812012

Token 112: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3206408619880676
    2. 'n' (adapté à ' n') → logprob: -1.3206408023834229
    3. '   ' → logprob: -5.320641040802002
    4. 'num' → logprob: -7.195641040802002
    5. ' number' → logprob: -7.445641040802002
    6. ' line' → logprob: -7.570641040802002
    7. ' num' → logprob: -8.195640563964844
    8. 'number' → logprob: -8.820640563964844
    9. 'line' → logprob: -9.570640563964844
    10. ' N' → logprob: -10.070640563964844

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010012589395046234
    2. '=' → logprob: -4.635012626647949
    3. ' ' → logprob: -8.38501262664795
    4. ' =
' → logprob: -10.63501262664795
    5. ',' → logprob: -13.51001262664795
    6. '=int' → logprob: -14.01001262664795
    7. ')' → logprob: -14.63501262664795
    8. '.' → logprob: -15.13501262664795
    9. ' =)' → logprob: -15.13501262664795
    10. ' ,' → logprob: -15.51001262664795

Token 114: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04858794063329697
    2. ' int' → logprob: -3.0485880374908447
    3. '=int' → logprob: -15.298587799072266
    4. '   ' → logprob: -16.298587799072266
    5. ' ' → logprob: -16.298587799072266
    6. 'len' → logprob: -16.923587799072266
    7. '(int' → logprob: -17.673587799072266
    8. 'line' → logprob: -17.673587799072266
    9. '<int' → logprob: -18.548587799072266
    10. 'in' → logprob: -18.673587799072266

Token 115: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.2014172375202179
    2. '(' → logprob: -1.7014172077178955
    3. '(n' → logprob: -13.701416969299316
    4. '(
' → logprob: -13.951416969299316
    5. ' (' → logprob: -14.076416969299316
    6. '()' → logprob: -15.701416969299316
    7. '(lines' → logprob: -15.951416969299316
    8. '[line' → logprob: -15.951416969299316
    9. '('' → logprob: -16.076417922973633
    10. 'line' → logprob: -16.201417922973633

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04921093210577965
    2. '.strip' → logprob: -3.049211025238037
    3. '.rstrip' → logprob: -7.424211025238037
    4. ' )' → logprob: -11.674210548400879
    5. '.readline' → logprob: -11.924210548400879
    6. 'strip' → logprob: -12.674210548400879
    7. 'rstrip' → logprob: -12.799210548400879
    8. ')
' → logprob: -14.174210548400879
    9. '.' → logprob: -14.299210548400879
    10. '())' → logprob: -14.424210548400879

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021123671904206276
    2. ' if' → logprob: -4.396123886108398
    3. '    
' → logprob: -5.646123886108398
    4. 'if' → logprob: -6.396123886108398
    5. ' 
' → logprob: -7.021123886108398
    6. ' ' → logprob: -7.396123886108398
    7. '    ' → logprob: -7.396123886108398
    8. '   
' → logprob: -8.146123886108398
    9. '
' → logprob: -8.396123886108398
    10. '  
' → logprob: -8.771123886108398

Token 118: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10513556748628616
    2. ' if' → logprob: -3.355135679244995
    3. 'count' → logprob: -3.355135679244995
    4. 'found' → logprob: -4.855135440826416
    5. 'for' → logprob: -5.105135440826416
    6. '   ' → logprob: -5.730135440826416
    7. 'result' → logprob: -5.855135440826416
    8. 'factor' → logprob: -6.605135440826416
    9. 'print' → logprob: -6.730135440826416
    10. 's' → logprob: -6.980135440826416

Token 119: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12651516497135162
    2. ' is' → logprob: -2.3765151500701904
    3. 'n' → logprob: -3.7515151500701904
    4. 'is' → logprob: -6.7515153884887695
    5. ' not' → logprob: -7.3765153884887695
    6. ' ' → logprob: -7.3765153884887695
    7. 'not' → logprob: -11.37651538848877
    8. '	n' → logprob: -11.50151538848877
    9. '  ' → logprob: -11.93901538848877
    10. ' ' → logprob: -12.12651538848877

Token 120: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6568811535835266
    2. ' ==' → logprob: -1.4068810939788818
    3. ' <=' → logprob: -1.9068810939788818
    4. ' <' → logprob: -3.281881093978882
    5. ' >=' → logprob: -3.656881093978882
    6. ' %' → logprob: -4.531881332397461
    7. '>' → logprob: -5.031881332397461
    8. '==' → logprob: -5.781881332397461
    9. '%' → logprob: -5.781881332397461
    10. '<=' → logprob: -7.531881332397461

Token 121: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20141470432281494
    2. '0' → logprob: -1.701414704322815
    3. ' -' → logprob: -14.201415061950684
    4. ' ' → logprob: -14.826415061950684
    5. '-' → logprob: -15.701415061950684
    6. '  ' → logprob: -17.076414108276367
    7. '   ' → logprob: -17.763914108276367
    8. '_' → logprob: -18.013914108276367
    9. '```' → logprob: -18.451414108276367
    10. '"' → logprob: -18.576414108276367

Token 122: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029995047952979803
    2. ' ' → logprob: -8.125300407409668
    3. '-' → logprob: -12.625300407409668
    4. ' -' → logprob: -15.125300407409668
    5. '```' → logprob: -16.93779945373535
    6. '1' → logprob: -17.25029945373535
    7. '  ' → logprob: -17.25029945373535
    8. '   ' → logprob: -17.43779945373535
    9. 'EOF' → logprob: -18.31279945373535
    10. '۰' → logprob: -18.43779945373535

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006819923873990774
    2. ':
' → logprob: -5.006819725036621
    3. ' :' → logprob: -9.256819725036621
    4. ' :
' → logprob: -12.256819725036621
    5. '   ' → logprob: -12.506819725036621
    6. ':return' → logprob: -14.631819725036621
    7. ':
' → logprob: -16.381820678710938
    8. ':

' → logprob: -17.256820678710938
    9. '.' → logprob: -17.506820678710938
    10. ':\' → logprob: -17.631820678710938

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013250234769657254
    2. '   ' → logprob: -9.12513256072998
    3. ' break' → logprob: -11.25013256072998
    4. '     ' → logprob: -13.00013256072998
    5. '      ' → logprob: -13.37513256072998
    6. '	break' → logprob: -13.50013256072998
    7. '    ' → logprob: -14.00013256072998
    8. '	' → logprob: -14.25013256072998
    9. ' ' → logprob: -14.37513256072998
    10. '	   ' → logprob: -14.50013256072998

Token 125: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.17353065311908722
    2. 'break' (adapté à ' break') → logprob: -1.9235306978225708
    3. '   ' → logprob: -4.423530578613281
    4. '       ' → logprob: -7.298530578613281
    5. '	break' → logprob: -7.673530578613281
    6. '
' → logprob: -9.798530578613281
    7. '    
' → logprob: -11.423530578613281
    8. ' ' → logprob: -12.673530578613281
    9. '_break' → logprob: -12.673530578613281
    10. 'b' → logprob: -12.923530578613281

Token 126: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4845033586025238
    2. '    
' → logprob: -1.1095033884048462
    3. ' 
' → logprob: -3.3595032691955566
    4. '
' → logprob: -4.609503269195557
    5. '   
' → logprob: -5.234503269195557
    6. '     
' → logprob: -6.234503269195557
    7. '  
' → logprob: -6.734503269195557
    8. '    ' → logprob: -7.734503269195557
    9. '    
    
' → logprob: -8.734503746032715
    10. ' ' → logprob: -9.359503746032715

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10117191076278687
    2. '    
' → logprob: -2.7261719703674316
    3. ' 
' → logprob: -3.7261719703674316
    4. '     
' → logprob: -6.351171970367432
    5. '
' → logprob: -6.601171970367432
    6. '   
' → logprob: -6.726171970367432
    7. 'print' → logprob: -6.851171970367432
    8. '    ' → logprob: -7.476171970367432
    9. '  
' → logprob: -8.351171493530273
    10. ' print' → logprob: -8.476171493530273

Token 128: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2827546000480652
    2. '    
' → logprob: -2.15775465965271
    3. 'print' → logprob: -3.40775465965271
    4. 'count' (adapté à ' count') → logprob: -3.90775465965271
    5. ' for' → logprob: -4.407754421234131
    6. '   
' → logprob: -4.407754421234131
    7. '
' → logprob: -4.782754421234131
    8. ' found' → logprob: -4.782754421234131
    9. ' count' → logprob: -4.907754421234131
    10. ' 
' → logprob: -4.907754421234131

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09512124210596085
    2. '=' → logprob: -2.845121145248413
    3. '_' → logprob: -3.470121145248413
    4. ' ' → logprob: -7.470121383666992
    5. '_space' → logprob: -7.720121383666992
    6. '_count' → logprob: -9.095121383666992
    7. '_tokens' → logprob: -9.845121383666992
    8. '_=' → logprob: -10.095121383666992
    9. '_spaces' → logprob: -10.345121383666992
    10. '_prime' → logprob: -10.595121383666992

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5237845778465271
    2. ' ' → logprob: -0.8987845778465271
    3. ' sum' → logprob: -7.773784637451172
    4. 'sum' → logprob: -8.648784637451172
    5. '1' → logprob: -10.148784637451172
    6. ' is' → logprob: -10.898784637451172
    7. 'is' → logprob: -13.398784637451172
    8. '2' → logprob: -13.898784637451172
    9. ' ' → logprob: -14.273784637451172
    10. ' n' → logprob: -14.711284637451172

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009785055881366134
    2. 'sum' → logprob: -7.500978469848633
    3. ' ' → logprob: -7.875978469848633
    4. ' sum' → logprob: -10.750978469848633
    5. 'is' → logprob: -11.375978469848633
    6. '1' → logprob: -12.000978469848633
    7. ' is' → logprob: -13.000978469848633
    8. '2' → logprob: -13.250978469848633
    9. 'len' → logprob: -14.750978469848633
    10. '   ' → logprob: -15.063478469848633

Token 132: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.790459930896759
    2. '   ' → logprob: -0.915459930896759
    3. '<|end|>' → logprob: -2.6654598712921143
    4. ' 
' → logprob: -3.2904598712921143
    5. '    ' → logprob: -4.290460109710693
    6. ' for' → logprob: -4.540460109710693
    7. '    
' → logprob: -5.040460109710693
    8. '  ' → logprob: -6.540460109710693
    9. '<|end|>' → logprob: -6.665460109710693
    10. ',' → logprob: -6.790460109710693

Token 133: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14207641780376434
    2. '   ' → logprob: -2.3920764923095703
    3. ' for' → logprob: -4.26707649230957
    4. ' 
' → logprob: -4.51707649230957
    5. '    ' → logprob: -4.76707649230957
    6. 'for' → logprob: -5.39207649230957
    7. '<|end|>' → logprob: -7.14207649230957
    8. '    
' → logprob: -7.26707649230957
    9. '  ' → logprob: -7.51707649230957
    10. ' ,' → logprob: -8.14207649230957

Token 134: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006767125800251961
    2. ' for' → logprob: -5.006767272949219
    3. '   ' → logprob: -10.756767272949219
    4. 'i' → logprob: -11.006767272949219
    5. 'if' → logprob: -13.006767272949219
    6. 'a' → logprob: -13.256767272949219
    7. 'result' → logprob: -13.381767272949219
    8. 'half' → logprob: -13.381767272949219
    9. 'start' → logprob: -13.881767272949219
    10. 'print' → logprob: -13.881767272949219

Token 135: ' p' (ID: 275)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.21238550543785095
    2. ' p' → logprob: -2.337385416030884
    3. 'i' → logprob: -3.087385416030884
    4. ' x' → logprob: -4.337385654449463
    5. 'p' → logprob: -4.587385654449463
    6. ' num' → logprob: -4.837385654449463
    7. ' prime' → logprob: -5.337385654449463
    8. ' a' → logprob: -5.462385654449463
    9. 'x' → logprob: -6.087385654449463
    10. 'prime' → logprob: -6.337385654449463

Token 136: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023355422541499138
    2. 'in' → logprob: -3.773355484008789
    3. ' ' → logprob: -9.898355484008789
    4. 'i' → logprob: -11.773355484008789
    5. ' i' → logprob: -11.773355484008789
    6. 'p' → logprob: -11.773355484008789
    7. ',' → logprob: -11.898355484008789
    8. '1' → logprob: -12.398355484008789
    9. 'n' → logprob: -12.648355484008789
    10. '  ' → logprob: -12.773355484008789

Token 137: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06995610892772675
    2. 'range' → logprob: -2.694956064224243
    3. '	range' → logprob: -11.944955825805664
    4. 'r' → logprob: -12.194955825805664
    5. '(range' → logprob: -12.944955825805664
    6. ' ' → logprob: -13.569955825805664
    7. ' ra' → logprob: -13.944955825805664
    8. '[' → logprob: -14.819955825805664
    9. 'rang' → logprob: -14.944955825805664
    10. 'ra' → logprob: -14.944955825805664

Token 138: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5777415633201599
    2. '(' → logprob: -0.8277415633201599
    3. '(n' → logprob: -6.452741622924805
    4. ' ' → logprob: -8.952741622924805
    5. 'n' → logprob: -10.202741622924805
    6. '   ' → logprob: -10.952741622924805
    7. '(max' → logprob: -11.327741622924805
    8. '[' → logprob: -11.827741622924805
    9. ' (' → logprob: -11.952741622924805
    10. '[n' → logprob: -13.077741622924805

Token 139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019642009865492582
    2. 'n' → logprob: -6.376964092254639
    3. ' ' → logprob: -8.376964569091797
    4. '1' → logprob: -11.001964569091797
    5. ' n' → logprob: -11.376964569091797
    6. 'max' → logprob: -13.501964569091797
    7. '   ' → logprob: -14.001964569091797
    8. '3' → logprob: -15.001964569091797
    9. '(n' → logprob: -15.126964569091797
    10. '(' → logprob: -15.751964569091797

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043282683938741684
    2. ' ,' → logprob: -3.1682827472686768
    3. ',n' → logprob: -8.418282508850098
    4. '   ' → logprob: -10.168282508850098
    5. 'n' → logprob: -11.793282508850098
    6. ',p' → logprob: -12.293282508850098
    7. '    ' → logprob: -12.543282508850098
    8. 'p' → logprob: -13.043282508850098
    9. '+' → logprob: -13.793282508850098
    10. ' n' → logprob: -14.043282508850098

Token 141: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2520821690559387
    2. ' n' → logprob: -1.502082109451294
    3. ' (' → logprob: -9.627081871032715
    4. '(n' → logprob: -9.752081871032715
    5. ' ' → logprob: -11.502081871032715
    6. '	n' → logprob: -11.877081871032715
    7. '   ' → logprob: -12.127081871032715
    8. '(' → logprob: -12.377081871032715
    9. 'len' → logprob: -14.752081871032715
    10. ' ' → logprob: -15.002081871032715

Token 142: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.07057204842567444
    2. ' //' → logprob: -2.6955721378326416
    3. ')' → logprob: -8.070571899414062
    4. '):' → logprob: -8.820571899414062
    5. '+' → logprob: -9.695571899414062
    6. ' ' → logprob: -9.945571899414062
    7. ' )' → logprob: -10.445571899414062
    8. ' ):' → logprob: -11.320571899414062
    9. ' +' → logprob: -11.445571899414062
    10. '   ' → logprob: -12.320571899414062

Token 143: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.670925358776003e-05
    2. ' ' → logprob: -9.625066757202148
    3. '1' → logprob: -14.750066757202148
    4. '   ' → logprob: -17.12506675720215
    5. 'p' → logprob: -17.43756675720215
    6. '```' → logprob: -17.62506675720215
    7. '
' → logprob: -17.87506675720215
    8. '

' → logprob: -17.93756675720215
    9. '3' → logprob: -18.18756675720215
    10. '  ' → logprob: -18.43756675720215

Token 144: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47411003708839417
    2. '+' → logprob: -0.9741100072860718
    3. ' ' → logprob: -10.474109649658203
    4. '   ' → logprob: -12.974109649658203
    5. ')' → logprob: -13.974109649658203
    6. '1' → logprob: -14.599109649658203
    7. '  ' → logprob: -15.724109649658203
    8. ')+' → logprob: -15.849109649658203
    9. ' ' → logprob: -15.974109649658203
    10. '```' → logprob: -16.099109649658203

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '2' → logprob: -15.125075340270996
    4. '   ' → logprob: -16.75007438659668
    5. '  ' → logprob: -17.87507438659668
    6. '۱' → logprob: -19.50007438659668
    7. '１' → logprob: -19.62507438659668
    8. '+' → logprob: -19.62507438659668
    9. ')' → logprob: -19.75007438659668
    10. '```' → logprob: -20.06257438659668

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '2' → logprob: -15.250036239624023
    4. '+' → logprob: -16.625036239624023
    5. '   ' → logprob: -17.250036239624023
    6. '  ' → logprob: -18.500036239624023
    7. '１' → logprob: -18.812536239624023
    8. '۱' → logprob: -18.812536239624023
    9. '

' → logprob: -19.000036239624023
    10. ')' → logprob: -19.312536239624023

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14566898345947266
    2. '):
' → logprob: -2.0206689834594727
    3. ':' → logprob: -6.020668983459473
    4. '   ' → logprob: -8.020668983459473
    5. '):
' → logprob: -9.145668983459473
    6. ')' → logprob: -10.020668983459473
    7. ' ):' → logprob: -10.770668983459473
    8. ' ):
' → logprob: -10.895668983459473
    9. ':
' → logprob: -11.145668983459473
    10. '+' → logprob: -11.520668983459473

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006662101950496435
    2. '<|end|>' → logprob: -8.250666618347168
    3. '   ' → logprob: -8.500666618347168
    4. '    ' → logprob: -9.125666618347168
    5. ' ' → logprob: -10.125666618347168
    6. ' if' → logprob: -10.875666618347168
    7. '        
' → logprob: -11.125666618347168
    8. '    
' → logprob: -12.875666618347168
    9. '<|end|>' → logprob: -12.875666618347168
    10. '      ' → logprob: -13.000666618347168

Token 149: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5473800301551819
    2. ' ' → logprob: -1.547379970550537
    3. 'if' (adapté à ' if') → logprob: -2.297379970550537
    4. '       ' → logprob: -2.672379970550537
    5. ' 
' → logprob: -3.922379970550537
    6. '   ' → logprob: -4.672379970550537
    7. '    ' → logprob: -5.547379970550537
    8. '
' → logprob: -6.047379970550537
    9. '<|end|>' → logprob: -6.547379970550537
    10. '    
' → logprob: -7.672379970550537

Token 150: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08896171301603317
    2. 'is' → logprob: -2.463961601257324
    3. ' ' → logprob: -11.838961601257324
    4. ' p' → logprob: -12.338961601257324
    5. 'p' → logprob: -12.713961601257324
    6. 'n' → logprob: -12.838961601257324
    7. '	is' → logprob: -13.088961601257324
    8. ' ' → logprob: -13.713961601257324
    9. '(is' → logprob: -15.088961601257324
    10. ' n' → logprob: -15.338961601257324

Token 151: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0009308716980740428
    2. '_' → logprob: -7.3759307861328125
    3. ' _' → logprob: -8.500930786132812
    4. '_p' → logprob: -9.375930786132812
    5. '_pr' → logprob: -12.375930786132812
    6. 'p' → logprob: -13.000930786132812
    7. 'prime' → logprob: -13.000930786132812
    8. ' p' → logprob: -13.500930786132812
    9. ' ' → logprob: -13.625930786132812
    10. ''_' → logprob: -13.750930786132812

Token 152: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -9.849109119386412e-06
    2. '[' → logprob: -11.750009536743164
    3. 'p' → logprob: -13.375009536743164
    4. ' [' → logprob: -15.250009536743164
    5. '[
' → logprob: -17.875009536743164
    6. ' p' → logprob: -18.125009536743164
    7. '[i' → logprob: -18.375009536743164
    8. '(p' → logprob: -18.375009536743164
    9. '   ' → logprob: -18.500009536743164
    10. '[m' → logprob: -18.750009536743164

Token 153: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06994332373142242
    2. 'and' → logprob: -2.694943428039551
    3. ' ' → logprob: -13.31994342803955
    4. ' a' → logprob: -13.31994342803955
    5. 'a' → logprob: -13.69494342803955
    6. '    ' → logprob: -14.19494342803955
    7. ' an' → logprob: -14.31994342803955
    8. ')' → logprob: -14.94494342803955
    9. '	and' → logprob: -15.31994342803955
    10. ']' → logprob: -15.56994342803955

Token 154: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01820121519267559
    2. 'and' → logprob: -4.0182013511657715
    3. ' ' → logprob: -10.018200874328613
    4. ' a' → logprob: -12.393200874328613
    5. '    ' → logprob: -13.768200874328613
    6. ' an' → logprob: -14.268200874328613
    7. '	and' → logprob: -15.393200874328613
    8. 'a' → logprob: -15.768200874328613
    9. ' ' → logprob: -16.14320182800293
    10. ' "' → logprob: -16.51820182800293

Token 155: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.22544515132904053
    2. 'is' → logprob: -1.6004451513290405
    3. ' ' → logprob: -10.725444793701172
    4. '   ' → logprob: -12.850444793701172
    5. '	is' → logprob: -12.850444793701172
    6. '  ' → logprob: -13.350444793701172
    7. '    ' → logprob: -14.225444793701172
    8. 'n' → logprob: -14.350444793701172
    9. '(is' → logprob: -14.850444793701172
    10. '
' → logprob: -15.475444793701172

Token 156: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -8.435139898210764e-05
    2. '_' → logprob: -10.500083923339844
    3. 'prime' → logprob: -10.625083923339844
    4. ' _' → logprob: -11.625083923339844
    5. 's' → logprob: -11.750083923339844
    6. '_pr' → logprob: -12.000083923339844
    7. '_p' → logprob: -12.125083923339844
    8. '_true' → logprob: -14.000083923339844
    9. '_max' → logprob: -14.375083923339844
    10. '_is' → logprob: -15.000083923339844

Token 157: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0010375719284638762
    2. '[' → logprob: -6.87603759765625
    3. '[
' → logprob: -13.00103759765625
    4. ' [' → logprob: -13.25103759765625
    5. '```' → logprob: -15.50103759765625
    6. ' ' → logprob: -16.12603759765625
    7. 'n' → logprob: -16.37603759765625
    8. ' n' → logprob: -16.50103759765625
    9. '(n' → logprob: -16.62603759765625
    10. '

' → logprob: -17.00103759765625

Token 158: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3236537575721741
    2. '-' → logprob: -1.3236536979675293
    3. '-p' → logprob: -4.573653697967529
    4. ' ' → logprob: -11.323654174804688
    5. ' p' → logprob: -12.573654174804688
    6. 'p' → logprob: -13.073654174804688
    7. '
' → logprob: -16.573654174804688
    8. ' ' → logprob: -16.698654174804688
    9. '	p' → logprob: -16.823654174804688
    10. '	' → logprob: -16.948654174804688

Token 159: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00020354038861114532
    2. ' p' → logprob: -8.500203132629395
    3. ' ' → logprob: -18.87520408630371
    4. '	p' → logprob: -21.25020408630371
    5. '   ' → logprob: -24.25020408630371
    6. ''p' → logprob: -24.75020408630371
    7. '  ' → logprob: -24.87520408630371
    8. ' ' → logprob: -25.00020408630371
    9. ' п' → logprob: -25.12520408630371
    10. ')p' → logprob: -25.37520408630371

Token 160: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.004383009392768145
    2. ']' → logprob: -5.754383087158203
    3. ']:
' → logprob: -6.754383087158203
    4. ']:
' → logprob: -11.004383087158203
    5. ' ]' → logprob: -11.754383087158203
    6. ':' → logprob: -11.879383087158203
    7. '"]:' → logprob: -12.629383087158203
    8. ']:

' → logprob: -13.379383087158203
    9. '']:' → logprob: -13.629383087158203
    10. '):' → logprob: -14.879383087158203

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011901067337021232
    2. '       ' → logprob: -7.251190185546875
    3. '
' → logprob: -8.251190185546875
    4. ':
' → logprob: -9.001190185546875
    5. '               ' → logprob: -10.001190185546875
    6. ':' → logprob: -11.251190185546875
    7. '	       ' → logprob: -12.001190185546875
    8. '		' → logprob: -12.126190185546875
    9. '            
' → logprob: -12.501190185546875
    10. '   ' → logprob: -12.501190185546875

Token 162: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16542702913284302
    2. '               ' → logprob: -2.7904269695281982
    3. 'count' (adapté à ' count') → logprob: -3.2904269695281982
    4. '           ' → logprob: -3.4154269695281982
    5. ' count' → logprob: -4.415427207946777
    6. '   ' → logprob: -5.040427207946777
    7. ' ' → logprob: -7.165427207946777
    8. '
' → logprob: -7.665427207946777
    9. '	count' → logprob: -7.665427207946777
    10. '	' → logprob: -8.540427207946777

Token 163: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014218277297914028
    2. '+=' → logprob: -4.264218330383301
    3. '+' → logprob: -10.1392183303833
    4. ' ' → logprob: -11.8892183303833
    5. '.' → logprob: -13.5142183303833
    6. '   ' → logprob: -13.6392183303833
    7. ']+=' → logprob: -13.8892183303833
    8. ' +' → logprob: -14.1392183303833
    9. '=' → logprob: -14.1392183303833
    10. '    ' → logprob: -14.1392183303833

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -17.251033782958984
    4. '```' → logprob: -18.126033782958984
    5. '2' → logprob: -18.751033782958984
    6. '  ' → logprob: -19.063533782958984
    7. ' ' → logprob: -19.251033782958984
    8. '<|end|>' → logprob: -19.376033782958984
    9. '１' → logprob: -19.438533782958984
    10. '۱' → logprob: -20.001033782958984

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '2' → logprob: -17.375009536743164
    4. '```' → logprob: -18.562509536743164
    5. '   ' → logprob: -18.750009536743164
    6. '１' → logprob: -18.750009536743164
    7. '۱' → logprob: -19.062509536743164
    8. '
' → logprob: -20.062509536743164
    9. '0' → logprob: -20.250009536743164
    10. '<|end|>' → logprob: -20.500009536743164

Token 166: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047541555017232895
    2. 'print' → logprob: -3.297541618347168
    3. '
' → logprob: -4.672541618347168
    4. ' print' → logprob: -9.672541618347168
    5. '    
' → logprob: -10.922541618347168
    6. '```' → logprob: -11.172541618347168
    7. '
' → logprob: -12.047541618347168
    8. '<|end|>' → logprob: -13.422541618347168
    9. '	print' → logprob: -13.672541618347168
    10. '  
' → logprob: -13.672541618347168

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09106553345918655
    2. 'print' → logprob: -2.5910656452178955
    3. '
' → logprob: -4.466065406799316
    4. ' print' → logprob: -8.216065406799316
    5. '    
' → logprob: -8.341065406799316
    6. '```' → logprob: -9.591065406799316
    7. '
' → logprob: -11.716065406799316
    8. '  
' → logprob: -11.841065406799316
    9. '	print' → logprob: -12.341065406799316
    10. '

' → logprob: -12.466065406799316

Token 168: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00046606172691099346
    2. ' print' → logprob: -7.7504658699035645
    3. '   ' → logprob: -10.250466346740723
    4. '```' → logprob: -18.250465393066406
    5. '	print' → logprob: -18.500465393066406
    6. '
' → logprob: -19.250465393066406
    7. '#print' → logprob: -20.875465393066406
    8. '.print' → logprob: -21.750465393066406
    9. ' ' → logprob: -21.750465393066406
    10. '    
' → logprob: -22.000465393066406

Token 169: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0803450271487236
    2. '(' → logprob: -2.5803449153900146
    3. '(f' → logprob: -6.705345153808594
    4. ' (' → logprob: -9.205345153808594
    5. '()' → logprob: -9.330345153808594
    6. '("' → logprob: -10.830345153808594
    7. '(c' → logprob: -11.955345153808594
    8. '('' → logprob: -12.205345153808594
    9. '((' → logprob: -12.330345153808594
    10. 'count' → logprob: -13.205345153808594

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -16.5
    4. ')`' → logprob: -17.125
    5. '))' → logprob: -17.625
    6. '`)' → logprob: -18.375
    7. '()' → logprob: -19.125
    8. '')' → logprob: -19.375
    9. '())' → logprob: -20.5
    10. '}' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 168
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 97
Tokens correctement prédits (top 10): 150
Précision stricte (1ère position): 55.36%
Précision adaptée (1ère position): 57.74%
Précision (top 10): 89.29%
================================================================================
