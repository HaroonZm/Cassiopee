================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

input=sys.stdin.readline

t=int(input())
for _ in range(t):
    n,m=map(int,input().split())
    natsume,renon=map(int,input().split())
    adj=[[] for __ in range(n+1)]
    for __ in range(m):
        a,b,c=input().split()
        a=int(a);b=int(b)
        cost=0 if c=='L' else 1
        adj[a].append((b,cost))
        adj[b].append((a,cost))

    # On graph: edges cost 1 if human door (N), 0 if cat door (L)
    # Need to find minimal re-opening cost for Natsume so that Renon can reach room 0
    # Both natsume and renon can move on open doors.
    # Once human doors opened, they remain open

    # Idea: minimal cost to connect natsume and renon paths to 0 through opened human doors

    # We'll run 0-1 BFS from natsume and from renon to all rooms to get minimal human doors opened to reach that room
    def zero_one_bfs(start):
        dist=[float('inf')]*(n+1)
        dist[start]=0
        dq=[]
        heapq.heappush(dq,(0,start))
        while dq:
            c,u=heapq.heappop(dq)
            if dist[u]<c:
                continue
            for v,w in adj[u]:
                nc=c+w
                if dist[v]>nc:
                    dist[v]=nc
                    if w==0:
                        heapq.heappush(dq,(nc,v))
                    else:
                        heapq.heappush(dq,(nc,v))
        return dist

    dist_natsume=zero_one_bfs(natsume)
    dist_renon=zero_one_bfs(renon)
    dist_goal=zero_one_bfs(0)

    # minimal sum of dist_natsume[x]+dist_renon[x]+dist_goal[x] over x in [0,n].
    # But each human door opening counted thrice, so subtract 2 * number of times human doors opened

    res=float('inf')
    for x in range(n+1):
        val=dist_natsume[x]+dist_renon[x]+dist_goal[x]
        if val<res:
            res=val
    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9385402993066236e-05
    2. '#' → logprob: -11.500019073486328
    3. '.' → logprob: -12.375019073486328
    4. '_' → logprob: -13.875019073486328
    5. '=' → logprob: -14.250019073486328
    6. 'ify' → logprob: -14.500019073486328
    7. ')' → logprob: -15.000019073486328
    8. 'i' → logprob: -15.125019073486328
    9. 'u' → logprob: -15.250019073486328
    10. 'p' → logprob: -15.500019073486328

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.500823974609375
    2. '
' → logprob: -1.500823974609375
    3. '\n' → logprob: -2.500823974609375
    4. '\' → logprob: -3.375823974609375
    5. '

' → logprob: -3.625823974609375
    6. '<|end|>' → logprob: -5.000823974609375
    7. '' → logprob: -5.375823974609375
    8. 'import' → logprob: -5.500823974609375
    9. '.
' → logprob: -5.875823974609375
    10. '.

' → logprob: -6.125823974609375

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7021071314811707
    2. 'def' → logprob: -1.7021071910858154
    3. '
' → logprob: -2.3271071910858154
    4. '\' → logprob: -3.2021071910858154
    5. '```' → logprob: -3.3271071910858154
    6. 'class' → logprob: -3.4521071910858154
    7. '\n' → logprob: -3.8271071910858154
    8. 'import' → logprob: -4.077106952667236
    9. 'from' → logprob: -4.077106952667236
    10. '' → logprob: -4.327106952667236

Token 8: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03836551308631897
    2. '.' → logprob: -3.288365602493286
    3. ')' → logprob: -8.913365364074707
    4. '```' → logprob: -10.163365364074707
    5. '(.)' → logprob: -10.788365364074707
    6. '=' → logprob: -10.788365364074707
    7. '[' → logprob: -11.163365364074707
    8. '()' → logprob: -11.163365364074707
    9. '(
' → logprob: -11.413365364074707
    10. ''' → logprob: -11.413365364074707

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.058208879083395004
    2. '.readline' → logprob: -3.43320894241333
    3. '.stdin' → logprob: -3.80820894241333
    4. ' .' → logprob: -6.43320894241333
    5. '.stdout' → logprob: -9.058208465576172
    6. '.argv' → logprob: -9.183208465576172
    7. '.input' → logprob: -9.558208465576172
    8. '.get' → logprob: -10.308208465576172
    9. '.setdefault' → logprob: -11.308208465576172
    10. '.next' → logprob: -11.433208465576172

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008416232652962208
    2. '.read' → logprob: -5.258416175842285
    3. '.' → logprob: -5.758416175842285
    4. '.readlines' → logprob: -11.508416175842285
    5. '.Read' → logprob: -12.508416175842285
    6. '.buffer' → logprob: -13.133416175842285
    7. 'read' → logprob: -13.508416175842285
    8. '```' → logprob: -13.758416175842285
    9. ' readline' → logprob: -14.508416175842285
    10. '.READ' → logprob: -14.508416175842285

Token 11: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21157534420490265
    2. '(' → logprob: -1.7115753889083862
    3. '(
' → logprob: -5.461575508117676
    4. '().' → logprob: -6.586575508117676
    5. '()
' → logprob: -6.961575508117676
    6. '
' → logprob: -7.211575508117676
    7. '<|end|>' → logprob: -7.336575508117676
    8. ')' → logprob: -7.586575508117676
    9. '()\' → logprob: -8.086575508117676
    10. '(

' → logprob: -8.461575508117676

Token 12: 't' (ID: 83)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5219913125038147
    2. 'def' → logprob: -1.27199125289917
    3. '()' → logprob: -2.27199125289917
    4. 'n' → logprob: -4.52199125289917
    5. '(n' → logprob: -4.52199125289917
    6. '(
' → logprob: -7.64699125289917
    7. 's' → logprob: -8.021991729736328
    8. 'for' → logprob: -8.896991729736328
    9. '()\' → logprob: -9.521991729736328
    10. 'd' → logprob: -9.646991729736328

Token 13: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20192614197731018
    2. ' =' → logprob: -1.7019261121749878
    3. ' ' → logprob: -7.701926231384277
    4. '=int' → logprob: -10.326926231384277
    5. ',' → logprob: -11.451926231384277
    6. '.' → logprob: -11.951926231384277
    7. '_' → logprob: -13.076926231384277
    8. 's' → logprob: -13.451926231384277
    9. ')' → logprob: -13.951926231384277
    10. ' =
' → logprob: -14.201926231384277

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004137496289331466
    2. '(input' → logprob: -8.00041389465332
    3. '(t' → logprob: -10.37541389465332
    4. '(sys' → logprob: -10.62541389465332
    5. ' (' → logprob: -12.37541389465332
    6. '()' → logprob: -12.75041389465332
    7. '(`' → logprob: -13.50041389465332
    8. '(
' → logprob: -13.75041389465332
    9. '(int' → logprob: -13.87541389465332
    10. '("("' → logprob: -13.87541389465332

Token 15: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2904525101184845
    2. '())' → logprob: -1.540452480316162
    3. ')' → logprob: -3.290452480316162
    4. '(' → logprob: -7.665452480316162
    5. '().' → logprob: -10.04045295715332
    6. '()
' → logprob: -11.16545295715332
    7. ' ())' → logprob: -11.29045295715332
    8. '())
' → logprob: -12.91545295715332
    9. '();)' → logprob: -13.04045295715332
    10. ' )' → logprob: -13.66545295715332

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5831362009048462
    2. '\n' → logprob: -0.9581362009048462
    3. '
' → logprob: -3.2081360816955566
    4. ' for' → logprob: -4.458136081695557
    5. '\' → logprob: -5.458136081695557
    6. '\r' → logprob: -7.333136081695557
    7. '' → logprob: -7.583136081695557
    8. 'n' → logprob: -8.583136558532715
    9. '```' → logprob: -8.708136558532715
    10. ' 
' → logprob: -8.833136558532715

Token 17: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016563178971409798
    2. ' i' → logprob: -4.141563415527344
    3. '  ' → logprob: -8.766563415527344
    4. ' _' → logprob: -8.891563415527344
    5. ' range' → logprob: -9.641563415527344
    6. ' ‌' → logprob: -9.891563415527344
    7. ' ' → logprob: -10.766563415527344
    8. ' space' → logprob: -10.891563415527344
    9. ' I' → logprob: -11.016563415527344
    10. '_' → logprob: -11.141563415527344

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.203794464468956
    2. 'in' → logprob: -1.7037944793701172
    3. ' ' → logprob: -6.453794479370117
    4. 'import' → logprob: -7.953794479370117
    5. '	in' → logprob: -8.828794479370117
    6. 'range' → logprob: -10.328794479370117
    7. ' i' → logprob: -10.328794479370117
    8. 'space' → logprob: -10.328794479370117
    9. '```' → logprob: -10.703794479370117
    10. 'i' → logprob: -10.953794479370117

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01251177117228508
    2. ' range' → logprob: -4.387511730194092
    3. 't' → logprob: -14.63751220703125
    4. '(range' → logprob: -14.88751220703125
    5. '	range' → logprob: -15.01251220703125
    6. 'ran' → logprob: -15.51251220703125
    7. 'rang' → logprob: -15.63751220703125
    8. 'input' → logprob: -15.76251220703125
    9. '0' → logprob: -16.38751220703125
    10. '```' → logprob: -16.51251220703125

Token 20: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07997951656579971
    2. ' (' → logprob: -2.579979419708252
    3. '(t' → logprob: -6.954979419708252
    4. '(range' → logprob: -9.45497989654541
    5. ' t' → logprob: -10.57997989654541
    6. '(n' → logprob: -11.45497989654541
    7. '(int' → logprob: -12.20497989654541
    8. ' ' → logprob: -12.82997989654541
    9. '(
' → logprob: -13.32997989654541
    10. '(len' → logprob: -13.45497989654541

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025382055900990963
    2. ':' → logprob: -6.127538204193115
    3. ')' → logprob: -8.127538681030273
    4. ' ):' → logprob: -10.627538681030273
    5. '):
' → logprob: -10.627538681030273
    6. '():' → logprob: -12.377538681030273
    7. ' :' → logprob: -14.502538681030273
    8. ':**' → logprob: -14.502538681030273
    9. ':)' → logprob: -14.627538681030273
    10. '   ' → logprob: -14.752538681030273

Token 22: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3603363633155823
    2. '   ' → logprob: -1.4853363037109375
    3. 'n' → logprob: -2.9853363037109375
    4. ' ' → logprob: -4.6103363037109375
    5. '    ' → logprob: -5.6103363037109375
    6. 'a' → logprob: -6.6103363037109375
    7. ' heap' → logprob: -6.8603363037109375
    8. ' 
' → logprob: -6.9853363037109375
    9. ' N' → logprob: -7.1103363037109375
    10. ' a' → logprob: -7.1103363037109375

Token 23: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2815926671028137
    2. 'n' (adapté à ' n') → logprob: -1.406592607498169
    3. '   ' → logprob: -8.53159236907959
    4. 'k' → logprob: -9.78159236907959
    5. '	n' → logprob: -10.65659236907959
    6. ' k' → logprob: -10.78159236907959
    7. 'num' → logprob: -10.78159236907959
    8. ' ' → logprob: -11.28159236907959
    9. ' num' → logprob: -11.40659236907959
    10. 'heap' → logprob: -11.40659236907959

Token 24: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32885491847991943
    2. '=' → logprob: -1.3288549184799194
    3. ',' → logprob: -4.328855037689209
    4. '=int' → logprob: -6.703855037689209
    5. ' ,' → logprob: -7.078855037689209
    6. ' ' → logprob: -9.32885456085205
    7. ')' → logprob: -10.20385456085205
    8. '=input' → logprob: -10.45385456085205
    9. '   ' → logprob: -11.20385456085205
    10. ' =
' → logprob: -11.45385456085205

Token 25: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12802286446094513
    2. ' =' → logprob: -2.1280229091644287
    3. ',' → logprob: -7.37802267074585
    4. '=input' → logprob: -8.128023147583008
    5. '=int' → logprob: -9.003023147583008
    6. ' ' → logprob: -11.003023147583008
    7. ' ,' → logprob: -11.253023147583008
    8. '=line' → logprob: -12.128023147583008
    9. '    ' → logprob: -12.878023147583008
    10. '=list' → logprob: -13.503023147583008

Token 26: 'map' (ID: 3726)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4741029739379883
    2. 'map' → logprob: -0.9741029739379883
    3. ' ' → logprob: -11.724102973937988
    4. 'input' → logprob: -11.724102973937988
    5. '	map' → logprob: -12.849102973937988
    6. ' input' → logprob: -13.474102973937988
    7. 'list' → logprob: -13.724102973937988
    8. '(map' → logprob: -13.974102973937988
    9. '   ' → logprob: -14.099102973937988
    10. 'm' → logprob: -14.099102973937988

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0032797870226204395
    2. '(lambda' → logprob: -6.378279685974121
    3. '(' → logprob: -7.253279685974121
    4. '(str' → logprob: -7.378279685974121
    5. '(input' → logprob: -8.503279685974121
    6. '(list' → logprob: -11.628279685974121
    7. '[int' → logprob: -11.878279685974121
    8. 'int' → logprob: -12.003279685974121
    9. '<int' → logprob: -12.628279685974121
    10. '```' → logprob: -12.878279685974121

Token 28: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.06206190586090088
    2. ',' → logprob: -2.8120617866516113
    3. ',int' → logprob: -9.56206226348877
    4. 'input' → logprob: -12.18706226348877
    5. '(input' → logprob: -12.43706226348877
    6. ',list' → logprob: -12.68706226348877
    7. ',line' → logprob: -12.68706226348877
    8. ' ,' → logprob: -12.93706226348877
    9. ',(' → logprob: -13.93706226348877
    10. ',map' → logprob: -14.31206226348877

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00033713103039190173
    2. '()' → logprob: -8.125337600708008
    3. '())' → logprob: -10.625337600708008
    4. '(' → logprob: -11.750337600708008
    5. ')' → logprob: -12.750337600708008
    6. ' ().' → logprob: -13.375337600708008
    7. '.split' → logprob: -13.500337600708008
    8. '.' → logprob: -13.875337600708008
    9. 'split' → logprob: -14.500337600708008
    10. '(),' → logprob: -15.000337600708008

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003132976416964084
    2. 'strip' → logprob: -8.250313758850098
    3. 'rstrip' → logprob: -9.875313758850098
    4. ' split' → logprob: -14.750313758850098
    5. '(split' → logprob: -15.750313758850098
    6. ')' → logprob: -17.25031280517578
    7. 'plit' → logprob: -17.25031280517578
    8. '_split' → logprob: -18.12531280517578
    9. 'spl' → logprob: -18.12531280517578
    10. '```' → logprob: -19.00031280517578

Token 31: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001831565605243668
    2. '))' → logprob: -8.87518310546875
    3. '()' → logprob: -10.62518310546875
    4. '())' → logprob: -11.75018310546875
    5. ')
' → logprob: -13.00018310546875
    6. '(' → logprob: -13.37518310546875
    7. '`)' → logprob: -13.62518310546875
    8. '')' → logprob: -13.62518310546875
    9. ' )' → logprob: -13.87518310546875
    10. ',' → logprob: -13.87518310546875

Token 32: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027804376557469368
    2. ' 
' → logprob: -4.652804374694824
    3. '
' → logprob: -5.152804374694824
    4. '<|end|>' → logprob: -5.402804374694824
    5. ')' → logprob: -6.652804374694824
    6. '\n' → logprob: -7.027804374694824
    7. '    
' → logprob: -7.027804374694824
    8. '  
' → logprob: -7.277804374694824
    9. 'newline' → logprob: -7.777804374694824
    10. ')
' → logprob: -7.777804374694824

Token 33: ' n' (ID: 297)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5518159866333008
    2. ' graph' → logprob: -0.9268159866333008
    3. '   ' → logprob: -4.926815986633301
    4. 'parent' → logprob: -6.051815986633301
    5. ' parent' → logprob: -6.301815986633301
    6. 'arr' → logprob: -6.426815986633301
    7. 'heap' → logprob: -6.551815986633301
    8. 'd' → logprob: -6.926815986633301
    9. 'g' → logprob: -6.926815986633301
    10. ' heap' → logprob: -7.051815986633301

Token 34: 'ats' (ID: 1838)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8100945949554443
    2. '-' → logprob: -2.1850945949554443
    3. 'odes' → logprob: -2.1850945949554443
    4. 'umbers' → logprob: -2.1850945949554443
    5. 'ums' → logprob: -2.8100945949554443
    6. 'um' → logprob: -3.1850945949554443
    7. '=' → logprob: -3.4350945949554443
    8. ' =' → logprob: -4.810094833374023
    9. 'ames' → logprob: -4.810094833374023
    10. 'ext' → logprob: -5.310094833374023

Token 35: 'ume' (ID: 3095)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.020193923264741898
    2. 'um' → logprob: -5.395194053649902
    3. 'ush' → logprob: -5.395194053649902
    4. '   ' → logprob: -6.270194053649902
    5. 'uki' → logprob: -6.645194053649902
    6. 'ume' → logprob: -7.520194053649902
    7. 'uji' → logprob: -7.645194053649902
    8. 'uke' → logprob: -7.770194053649902
    9. '=' → logprob: -7.770194053649902
    10. '```' → logprob: -7.895194053649902

Token 36: ',' (ID: 11)
  Prédit: '_heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.954168975353241
    2. '=' → logprob: -1.4541690349578857
    3. '_list' → logprob: -2.8291690349578857
    4. '=[]' → logprob: -3.2041690349578857
    5. '_queue' → logprob: -3.4541690349578857
    6. ' =' → logprob: -3.5791690349578857
    7. '_p' → logprob: -3.5791690349578857
    8. '_' → logprob: -3.7041690349578857
    9. 'heap' → logprob: -4.454168796539307
    10. '_times' → logprob: -4.579168796539307

Token 37: 'ren' (ID: 1687)
  Prédit: ' tak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tak' → logprob: -2.784722328186035
    2. 'tak' → logprob: -2.784722328186035
    3. 'm' → logprob: -2.909722328186035
    4. 'k' → logprob: -3.034722328186035
    5. ' mats' → logprob: -3.409722328186035
    6. 'y' → logprob: -3.409722328186035
    7. ' k' → logprob: -3.534722328186035
    8. 'a' → logprob: -3.534722328186035
    9. ' m' → logprob: -3.659722328186035
    10. ' y' → logprob: -3.722222328186035

Token 38: 'on' (ID: 263)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0460714101791382
    2. '=' → logprob: -1.4210714101791382
    3. 'ji' → logprob: -1.9210714101791382
    4. 'ge' → logprob: -2.4210715293884277
    5. 'o' → logprob: -3.4210715293884277
    6. 'a' → logprob: -3.7960715293884277
    7. ',' → logprob: -4.046071529388428
    8. 'ai' → logprob: -4.421071529388428
    9. 'eg' → logprob: -4.921071529388428
    10. 'ren' → logprob: -4.921071529388428

Token 39: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02403252013027668
    2. ' =' → logprob: -4.0240325927734375
    3. '=[]' → logprob: -6.5240325927734375
    4. '_scores' → logprob: -7.7740325927734375
    5. '=int' → logprob: -7.7740325927734375
    6. '_heap' → logprob: -7.8990325927734375
    7. '_queue' → logprob: -8.149032592773438
    8. '=[' → logprob: -8.399032592773438
    9. '=list' → logprob: -8.524032592773438
    10. ',' → logprob: -8.649032592773438

Token 40: 'map' (ID: 3726)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.3206714987754822
    2. '[]' → logprob: -1.945671558380127
    3. '[' → logprob: -2.945671558380127
    4. '0' → logprob: -2.945671558380127
    5. ' [],' → logprob: -4.695671558380127
    6. '[n' → logprob: -5.195671558380127
    7. 'list' → logprob: -5.695671558380127
    8. 'map' → logprob: -5.820671558380127
    9. 'heap' → logprob: -6.445671558380127
    10. '([],' → logprob: -7.695671558380127

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.676981345459353e-06
    2. '(str' → logprob: -13.750005722045898
    3. '[int' → logprob: -13.875005722045898
    4. '=int' → logprob: -14.000005722045898
    5. '<int' → logprob: -14.000005722045898
    6. 'int' → logprob: -14.125005722045898
    7. '(lambda' → logprob: -14.375005722045898
    8. ',int' → logprob: -15.000005722045898
    9. '(list' → logprob: -16.0000057220459
    10. '(' → logprob: -16.2500057220459

Token 42: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0007379194721579552
    2. ',' → logprob: -7.375738143920898
    3. ',int' → logprob: -9.500738143920898
    4. '(input' → logprob: -10.500738143920898
    5. ' ,' → logprob: -11.750738143920898
    6. '=input' → logprob: -14.625738143920898
    7. 'input' → logprob: -15.500738143920898
    8. ',index' → logprob: -16.3757381439209
    9. ',line' → logprob: -16.6257381439209
    10. ',list' → logprob: -16.7507381439209

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '()' → logprob: -13.25000286102295
    3. '.split' → logprob: -15.12500286102295
    4. '.' → logprob: -15.12500286102295
    5. ' ().' → logprob: -15.37500286102295
    6. ')' → logprob: -17.625001907348633
    7. '()
' → logprob: -17.875001907348633
    8. '.readline' → logprob: -18.375001907348633
    9. ' .' → logprob: -18.750001907348633
    10. '(' → logprob: -19.000001907348633

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. ' split' → logprob: -14.000001907348633
    3. 'strip' → logprob: -14.625001907348633
    4. 'rstrip' → logprob: -16.375001907348633
    5. '(split' → logprob: -16.375001907348633
    6. '().' → logprob: -16.625001907348633
    7. 'spl' → logprob: -16.875001907348633
    8. 's' → logprob: -17.125001907348633
    9. ')' → logprob: -17.875001907348633
    10. 'plit' → logprob: -17.875001907348633

Token 45: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1966736912727356
    2. ')' → logprob: -2.071673631668091
    3. '()' → logprob: -2.946673631668091
    4. '())
' → logprob: -11.321673393249512
    5. ' )' → logprob: -11.446673393249512
    6. '(' → logprob: -11.946673393249512
    7. '(),' → logprob: -12.071673393249512
    8. ' ())' → logprob: -12.696673393249512
    9. '().' → logprob: -12.946673393249512
    10. '`)' → logprob: -13.321673393249512

Token 46: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7977283596992493
    2. '   ' → logprob: -0.9227283596992493
    3. 'dist' → logprob: -3.1727283000946045
    4. 'scores' → logprob: -4.422728538513184
    5. 'points' → logprob: -4.797728538513184
    6. ' graph' → logprob: -4.797728538513184
    7. 'arr' → logprob: -4.922728538513184
    8. 'a' → logprob: -4.922728538513184
    9. 'dp' → logprob: -5.422728538513184
    10. 'heap' → logprob: -5.422728538513184

Token 47: ' adj' (ID: 20251)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.23213019967079163
    2. 'arr' → logprob: -3.357130289077759
    3. '   ' → logprob: -3.857130289077759
    4. 'scores' → logprob: -4.10713005065918
    5. 'a' → logprob: -4.48213005065918
    6. ' graph' → logprob: -4.73213005065918
    7. 'cards' → logprob: -4.73213005065918
    8. 'adj' (adapté à ' adj') → logprob: -5.10713005065918
    9. 'dist' → logprob: -5.10713005065918
    10. 'score' → logprob: -5.23213005065918

Token 48: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25150877237319946
    2. '=' → logprob: -1.7515087127685547
    3. '[' → logprob: -3.2515087127685547
    4. '=[]' → logprob: -5.126508712768555
    5. '=[' → logprob: -5.876508712768555
    6. ' =[' → logprob: -7.376508712768555
    7. '={}' → logprob: -8.876508712768555
    8. '[]' → logprob: -9.251508712768555
    9. '=[
' → logprob: -9.501508712768555
    10. '.setdefault' → logprob: -9.876508712768555

Token 49: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00027111053350381553
    2. ' []' → logprob: -8.25027084350586
    3. '[]
' → logprob: -12.12527084350586
    4. '([]' → logprob: -13.37527084350586
    5. 'list' → logprob: -13.50027084350586
    6. '[' → logprob: -14.00027084350586
    7. '[]

' → logprob: -14.87527084350586
    8. '   ' → logprob: -16.00027084350586
    9. '[]}' → logprob: -16.37527084350586
    10. '[],' → logprob: -17.87527084350586

Token 50: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8914758563041687
    2. '()' → logprob: -0.8914758563041687
    3. 'for' → logprob: -1.7664759159088135
    4. '(' → logprob: -5.266475677490234
    5. '(n' → logprob: -5.641475677490234
    6. '	for' → logprob: -9.516475677490234
    7. '(for' → logprob: -10.266475677490234
    8. ' ' → logprob: -10.391475677490234
    9. ']' → logprob: -10.391475677490234
    10. ' ()' → logprob: -10.516475677490234

Token 51: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06342265009880066
    2. 'range' → logprob: -3.563422679901123
    3. ' range' → logprob: -3.813422679901123
    4. ' _' → logprob: -5.438422679901123
    5. '(range' → logprob: -5.813422679901123
    6. ' ' → logprob: -6.563422679901123
    7. ' in' → logprob: -6.563422679901123
    8. '_range' → logprob: -8.188422203063965
    9. 'in' → logprob: -8.438422203063965
    10. 'i' → logprob: -9.563422203063965

Token 52: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.15931689739227295
    2. '(range' → logprob: -2.5343170166015625
    3. ' range' → logprob: -3.1593170166015625
    4. 'in' → logprob: -4.4093170166015625
    5. ' in' → logprob: -4.4093170166015625
    6. '_' → logprob: -7.4093170166015625
    7. 'i' → logprob: -8.159317016601562
    8. ' ' → logprob: -9.034317016601562
    9. 'a' → logprob: -9.409317016601562
    10. '(' → logprob: -10.784317016601562

Token 53: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006716436706483364
    2. ' range' → logprob: -5.006716251373291
    3. '(range' → logprob: -15.00671672821045
    4. ' ' → logprob: -15.25671672821045
    5. '   ' → logprob: -15.88171672821045
    6. '	range' → logprob: -16.381715774536133
    7. '  ' → logprob: -16.506715774536133
    8. 'rang' → logprob: -16.881715774536133
    9. 'r' → logprob: -17.131715774536133
    10. 'ran' → logprob: -17.506715774536133

Token 54: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.598092684522271e-05
    2. 'n' → logprob: -10.125056266784668
    3. '(' → logprob: -11.250056266784668
    4. '(m' → logprob: -13.500056266784668
    5. ' (' → logprob: -13.750056266784668
    6. '((' → logprob: -16.00005531311035
    7. ' n' → logprob: -16.00005531311035
    8. '	n' → logprob: -17.25005531311035
    9. '   ' → logprob: -17.37505531311035
    10. '(N' → logprob: -17.37505531311035

Token 55: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.2987729102605954e-05
    2. ')' → logprob: -10.750042915344238
    3. ' )' → logprob: -11.500042915344238
    4. '+' → logprob: -12.625042915344238
    5. ')]
' → logprob: -12.625042915344238
    6. ']' → logprob: -12.750042915344238
    7. ')])' → logprob: -15.125042915344238
    8. '   ' → logprob: -15.375042915344238
    9. ')],' → logprob: -15.500042915344238
    10. ')]

' → logprob: -15.750042915344238

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.816591434879228e-05
    2. ' ' → logprob: -9.37508773803711
    3. '2' → logprob: -13.00008773803711
    4. '0' → logprob: -15.25008773803711
    5. '7' → logprob: -15.62508773803711
    6. '   ' → logprob: -16.25008773803711
    7. 'm' → logprob: -16.62508773803711
    8. '  ' → logprob: -16.87508773803711
    9. '```' → logprob: -16.93758773803711
    10. ')' → logprob: -17.00008773803711

Token 57: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004354373668320477
    2. ']' → logprob: -8.000435829162598
    3. ')' → logprob: -9.250435829162598
    4. ')]
' → logprob: -13.625435829162598
    5. '])' → logprob: -14.375435829162598
    6. ' )' → logprob: -14.750435829162598
    7. '   ' → logprob: -15.000435829162598
    8. '])]' → logprob: -15.125435829162598
    9. ')])' → logprob: -15.625435829162598
    10. ' ]' → logprob: -15.625435829162598

Token 58: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1365395337343216
    2. ' for' → logprob: -2.2615394592285156
    3. '<|end|>' → logprob: -4.511539459228516
    4. '   ' → logprob: -4.636539459228516
    5. '
' → logprob: -6.511539459228516
    6. '	for' → logprob: -7.261539459228516
    7. ' ' → logprob: -8.511539459228516
    8. '    
' → logprob: -9.386539459228516
    9. '<|end|>' → logprob: -9.511539459228516
    10. ' 
' → logprob: -10.011539459228516

Token 59: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011257904581725597
    2. ' for' → logprob: -4.511258125305176
    3. '   ' → logprob: -9.011258125305176
    4. ' ' → logprob: -10.886258125305176
    5. ' 
' → logprob: -11.261258125305176
    6. '<|end|>' → logprob: -11.636258125305176
    7. '    
' → logprob: -11.886258125305176
    8. '	for' → logprob: -11.886258125305176
    9. '\n' → logprob: -12.011258125305176
    10. '```' → logprob: -12.136258125305176

Token 60: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3870804011821747
    2. ' _' → logprob: -1.137080430984497
    3. ' ' → logprob: -9.012080192565918
    4. ' i' → logprob: -10.512080192565918
    5. ' in' → logprob: -10.637080192565918
    6. ' range' → logprob: -11.387080192565918
    7. ' __' → logprob: -11.512080192565918
    8. '_i' → logprob: -12.387080192565918
    9. 'range' → logprob: -13.012080192565918
    10. ' m' → logprob: -13.387080192565918

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11341560631990433
    2. 'in' → logprob: -2.2384157180786133
    3. '_' → logprob: -7.613415718078613
    4. ' ' → logprob: -9.613415718078613
    5. 'range' → logprob: -11.113415718078613
    6. '  ' → logprob: -12.238415718078613
    7. ' _' → logprob: -12.363415718078613
    8. '_in' → logprob: -13.363415718078613
    9. '   ' → logprob: -13.363415718078613
    10. '	in' → logprob: -13.738415718078613

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020817816257477
    2. ' range' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.225208282470703
    4. '_' → logprob: -14.725208282470703
    5. 'r' → logprob: -15.975208282470703
    6. '	range' → logprob: -16.100208282470703
    7. '   ' → logprob: -16.475208282470703
    8. '  ' → logprob: -17.225208282470703
    9. '(range' → logprob: -17.225208282470703
    10. 'rang' → logprob: -17.600208282470703

Token 63: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.1637164789135568e-05
    2. 'm' → logprob: -11.875011444091797
    3. '(' → logprob: -12.375011444091797
    4. '   ' → logprob: -15.875011444091797
    5. ' (' → logprob: -16.125011444091797
    6. '	m' → logprob: -16.625011444091797
    7. '(M' → logprob: -17.125011444091797
    8. '(n' → logprob: -17.875011444091797
    9. ' m' → logprob: -18.750011444091797
    10. ')m' → logprob: -19.125011444091797

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002342912630410865
    2. ' ):' → logprob: -9.000234603881836
    3. ')' → logprob: -9.375234603881836
    4. ':' → logprob: -11.000234603881836
    5. '):
' → logprob: -11.875234603881836
    6. ']:' → logprob: -14.125234603881836
    7. '   ' → logprob: -14.750234603881836
    8. '():' → logprob: -15.125234603881836
    9. '):
' → logprob: -15.625234603881836
    10. ',' → logprob: -16.125234603881836

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13346374034881592
    2. ' u' → logprob: -3.0084638595581055
    3. 'u' → logprob: -3.1334638595581055
    4. '   ' → logprob: -3.6334638595581055
    5. '<|end|>' → logprob: -6.8834638595581055
    6. '    ' → logprob: -7.1334638595581055
    7. ',' → logprob: -7.6334638595581055
    8. ' ' → logprob: -7.6334638595581055
    9. '	u' → logprob: -7.6334638595581055
    10. ',u' → logprob: -7.6334638595581055

Token 66: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.13070780038833618
    2. 'a' (adapté à ' a') → logprob: -2.2557077407836914
    3. ' u' → logprob: -4.130707740783691
    4. ' a' → logprob: -7.380707740783691
    5. '   ' → logprob: -7.505707740783691
    6. 's' → logprob: -8.005707740783691
    7. 'x' → logprob: -9.380707740783691
    8. '```' → logprob: -11.130707740783691
    9. ' ' → logprob: -11.380707740783691
    10. ' s' → logprob: -12.255707740783691

Token 67: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.030253605917096138
    2. ',' → logprob: -3.5302536487579346
    3. ' ,' → logprob: -7.6552534103393555
    4. 'b' → logprob: -10.780253410339355
    5. ' b' → logprob: -12.530253410339355
    6. ',int' → logprob: -13.530253410339355
    7. ',n' → logprob: -14.155253410339355
    8. ',input' → logprob: -14.405253410339355
    9. ',d' → logprob: -15.155253410339355
    10. ',a' → logprob: -15.155253410339355

Token 68: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7663239240646362
    2. '=' → logprob: -0.7663239240646362
    3. ',c' → logprob: -3.766324043273926
    4. ',b' → logprob: -4.391324043273926
    5. ' =' → logprob: -4.766324043273926
    6. ',w' → logprob: -4.766324043273926
    7. ',a' → logprob: -4.891324043273926
    8. ' ,' → logprob: -6.141324043273926
    9. ',d' → logprob: -6.141324043273926
    10. ',input' → logprob: -6.516324043273926

Token 69: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008273418992757797
    2. ' =' → logprob: -4.883273601531982
    3. '=input' → logprob: -7.383273601531982
    4. '=sys' → logprob: -10.883273124694824
    5. '=int' → logprob: -11.383273124694824
    6. '=line' → logprob: -11.633273124694824
    7. '=`' → logprob: -13.758273124694824
    8. '=data' → logprob: -13.758273124694824
    9. '=

' → logprob: -14.133273124694824
    10. '   ' → logprob: -14.508273124694824

Token 70: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.763666947837919e-05
    2. '()' → logprob: -10.25004768371582
    3. '.split' → logprob: -12.25004768371582
    4. ' ().' → logprob: -13.12504768371582
    5. '())' → logprob: -13.37504768371582
    6. ')' → logprob: -13.75004768371582
    7. '=' → logprob: -14.37504768371582
    8. '()).' → logprob: -14.37504768371582
    9. 'split' → logprob: -14.62504768371582
    10. '.' → logprob: -14.87504768371582

Token 71: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001562119578011334
    2. 'strip' → logprob: -6.501562118530273
    3. 'rstrip' → logprob: -9.751562118530273
    4. 'spl' → logprob: -13.626562118530273
    5. '(split' → logprob: -16.126562118530273
    6. 'rs' → logprob: -16.126562118530273
    7. ' split' → logprob: -16.376562118530273
    8. 's' → logprob: -17.001562118530273
    9. 'sp' → logprob: -17.876562118530273
    10. 'plit' → logprob: -18.126562118530273

Token 72: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11376941949129105
    2. '(' → logprob: -3.23876953125
    3. ')' → logprob: -4.23876953125
    4. '<|end|>' → logprob: -4.23876953125
    5. ',' → logprob: -4.48876953125
    6. '('' → logprob: -4.86376953125
    7. '(','' → logprob: -4.86376953125
    8. '(',' → logprob: -5.98876953125
    9. '   ' → logprob: -6.23876953125
    10. '()
' → logprob: -6.36376953125

Token 73: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.49648770689964294
    2. 'a' (adapté à ' a') → logprob: -0.9964877367019653
    3. ' c' → logprob: -4.621487617492676
    4. ' ' → logprob: -5.121487617492676
    5. 'c' → logprob: -6.121487617492676
    6. '    ' → logprob: -6.996487617492676
    7. '   ' → logprob: -7.371487617492676
    8. ' 
' → logprob: -7.496487617492676
    9. ' ,' → logprob: -8.371487617492676
    10. ',' → logprob: -8.496487617492676

Token 75: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2034059762954712
    2. '=int' → logprob: -1.2034059762954712
    3. ',' → logprob: -1.4534059762954712
    4. ' =' → logprob: -1.8284059762954712
    5. ',int' → logprob: -5.578405857086182
    6. ' ,' → logprob: -6.828405857086182
    7. 'int' → logprob: -9.32840633392334
    8. ',a' → logprob: -9.82840633392334
    9. '   ' → logprob: -10.45340633392334
    10. ',b' → logprob: -10.57840633392334

Token 76: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.005235767923295498
    2. '(' → logprob: -5.25523567199707
    3. 'a' → logprob: -14.13023567199707
    4. '(
' → logprob: -14.50523567199707
    5. '()' → logprob: -15.50523567199707
    6. '(b' → logprob: -15.88023567199707
    7. '(A' → logprob: -16.13023567199707
    8. ' (' → logprob: -16.50523567199707
    9. '(c' → logprob: -17.00523567199707
    10. '('' → logprob: -17.00523567199707

Token 77: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001169033464975655
    2. ')
' → logprob: -7.251169204711914
    3. ')b' → logprob: -8.376169204711914
    4. ')c' → logprob: -8.751169204711914
    5. ' )' → logprob: -9.876169204711914
    6. '<|end|>' → logprob: -11.876169204711914
    7. '),' → logprob: -12.501169204711914
    8. ')a' → logprob: -13.376169204711914
    9. ')
' → logprob: -14.001169204711914
    10. ');' → logprob: -14.251169204711914

Token 78: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0791131854057312
    2. ' b' → logprob: -2.579113245010376
    3. ' ' → logprob: -8.829113006591797
    4. '<|end|>' → logprob: -9.954113006591797
    5. ' 
' → logprob: -11.454113006591797
    6. ' ' → logprob: -11.954113006591797
    7. '	b' → logprob: -12.329113006591797
    8. ',b' → logprob: -13.579113006591797
    9. '    ' → logprob: -13.579113006591797
    10. '   ' → logprob: -14.204113006591797

Token 79: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.005246210377663374
    2. '=' → logprob: -5.255246162414551
    3. ' =' → logprob: -11.63024616241455
    4. '=(' → logprob: -13.50524616241455
    5. '=
' → logprob: -13.88024616241455
    6. '=input' → logprob: -15.25524616241455
    7. '(int' → logprob: -15.50524616241455
    8. 'int' → logprob: -15.50524616241455
    9. '=

' → logprob: -16.380247116088867
    10. '<int' → logprob: -16.505247116088867

Token 80: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -5.6457742175552994e-05
    2. '(' → logprob: -10.250056266784668
    3. 'b' → logprob: -11.500056266784668
    4. ' (' → logprob: -12.250056266784668
    5. ')' → logprob: -13.000056266784668
    6. '<|end|>' → logprob: -13.375056266784668
    7. ')b' → logprob: -13.500056266784668
    8. ')(' → logprob: -15.500056266784668
    9. '(a' → logprob: -16.125057220458984
    10. '<|end|>' → logprob: -16.250057220458984

Token 81: ')
' (ID: 446)
  Prédit: ');'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ');' → logprob: -0.3306499719619751
    2. ')' → logprob: -1.330649971961975
    3. ')c' → logprob: -4.0806498527526855
    4. ';c' → logprob: -8.455650329589844
    5. ' );' → logprob: -10.330650329589844
    6. ';' → logprob: -10.705650329589844
    7. ')
' → logprob: -10.830650329589844
    8. ');
' → logprob: -11.455650329589844
    9. '),' → logprob: -11.955650329589844
    10. ' )' → logprob: -12.205650329589844

Token 82: '       ' (ID: 309)
  Prédit: ';c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';c' → logprob: -0.05529487133026123
    2. ';' → logprob: -3.555294990539551
    3. ' c' → logprob: -4.805294990539551
    4. 'c' → logprob: -5.055294990539551
    5. '       ' → logprob: -5.180294990539551
    6. '	c' → logprob: -5.805294990539551
    7. '   ' → logprob: -6.680294990539551
    8. ',c' → logprob: -7.555294990539551
    9. ',' → logprob: -9.80529499053955
    10. ' ' → logprob: -9.93029499053955

Token 83: ' cost' (ID: 3097)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6338534355163574
    2. 'c' → logprob: -0.7588534355163574
    3. '       ' → logprob: -7.758853435516357
    4. '<|end|>' → logprob: -8.133853912353516
    5. ' ' → logprob: -8.383853912353516
    6. '   ' → logprob: -8.883853912353516
    7. '	c' → logprob: -10.383853912353516
    8. ',c' → logprob: -10.508853912353516
    9. '  ' → logprob: -10.633853912353516
    10. ',' → logprob: -11.383853912353516

Token 84: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0794750452041626
    2. '=int' → logprob: -2.579474925994873
    3. ' =' → logprob: -7.454474925994873
    4. '=float' → logprob: -13.204475402832031
    5. '=

' → logprob: -13.329475402832031
    6. ',' → logprob: -14.579475402832031
    7. '=c' → logprob: -14.829475402832031
    8. '＝' → logprob: -14.954475402832031
    9. 's' → logprob: -15.579475402832031
    10. '=Integer' → logprob: -15.704475402832031

Token 85: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008132012444548309
    2. 'float' → logprob: -7.125813007354736
    3. ' int' → logprob: -11.750813484191895
    4. '[int' → logprob: -15.375813484191895
    5. ' float' → logprob: -16.000812530517578
    6. '<int' → logprob: -16.000812530517578
    7. '  ' → logprob: -16.250812530517578
    8. '=int' → logprob: -16.375812530517578
    9. '   ' → logprob: -16.625812530517578
    10. ':int' → logprob: -16.750812530517578

Token 86: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5234770774841309
    2. ' c' → logprob: -0.8984770774841309
    3. ' ' → logprob: -9.023477554321289
    4. 'int' → logprob: -9.523477554321289
    5. ')c' → logprob: -10.148477554321289
    6. ' int' → logprob: -10.648477554321289
    7. '(c' → logprob: -11.148477554321289
    8. ' (' → logprob: -11.398477554321289
    9. '  ' → logprob: -11.585977554321289
    10. 'a' → logprob: -11.648477554321289

Token 88: '=='' (ID: 20651)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1187761202454567
    2. ' ==' → logprob: -2.4937760829925537
    3. '[' → logprob: -3.8687760829925537
    4. '=='' → logprob: -5.618776321411133
    5. '=' → logprob: -6.368776321411133
    6. '=="' → logprob: -6.868776321411133
    7. '<|end|>' → logprob: -7.243776321411133
    8. ' ' → logprob: -7.993776321411133
    9. '.' → logprob: -8.243776321411133
    10. '.startswith' → logprob: -8.993776321411133

Token 89: 'L' (ID: 43)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.586572527885437
    2. '0' → logprob: -2.7115726470947266
    3. 'F' → logprob: -2.9615726470947266
    4. ''' → logprob: -3.3365726470947266
    5. 'I' → logprob: -3.4615726470947266
    6. 'N' → logprob: -3.9615726470947266
    7. '-' → logprob: -3.9615726470947266
    8. 'B' → logprob: -3.9615726470947266
    9. 'W' → logprob: -4.086572647094727
    10. 'S' → logprob: -4.211572647094727

Token 90: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8790335655212402
    2. ''' → logprob: -1.3790335655212402
    3. 'else' → logprob: -2.0040335655212402
    4. 'e' → logprob: -2.6290335655212402
    5. 'C' → logprob: -4.25403356552124
    6. 'o' → logprob: -4.75403356552124
    7. ' ' → logprob: -4.81653356552124
    8. 'a' → logprob: -4.87903356552124
    9. '<|end|>' → logprob: -5.19153356552124
    10. 'E' → logprob: -5.25403356552124

Token 91: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04301905632019043
    2. ' else' → logprob: -3.1680190563201904
    3. '	else' → logprob: -11.54301929473877
    4. '   ' → logprob: -12.66801929473877
    5. 'elif' → logprob: -13.54301929473877
    6. '```' → logprob: -13.54301929473877
    7. '
' → logprob: -13.91801929473877
    8. ' ' → logprob: -14.29301929473877
    9. 'lse' → logprob: -14.91801929473877
    10. 'el' → logprob: -15.04301929473877

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22846195101737976
    2. ' ' → logprob: -1.6034619808197021
    3. '100' → logprob: -6.603461742401123
    4. '10' → logprob: -7.603461742401123
    5. '2' → logprob: -7.978461742401123
    6. '3' → logprob: -9.228462219238281
    7. 'int' → logprob: -9.228462219238281
    8. '0' → logprob: -9.353462219238281
    9. '6' → logprob: -9.728462219238281
    10. '5' → logprob: -9.853462219238281

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012791648041456938
    2. '2' → logprob: -8.1262788772583
    3. 'int' → logprob: -8.3762788772583
    4. '100' → logprob: -8.3762788772583
    5. '0' → logprob: -9.0012788772583
    6. '10' → logprob: -9.3762788772583
    7. '3' → logprob: -9.7512788772583
    8. '5' → logprob: -10.1262788772583
    9. ' ' → logprob: -10.2512788772583
    10. '200' → logprob: -11.2512788772583

Token 94: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.584927499294281
    2. '
' → logprob: -0.834927499294281
    3. '   ' → logprob: -5.959927558898926
    4. '<|end|>' → logprob: -5.959927558898926
    5. '
' → logprob: -6.334927558898926
    6. '        
' → logprob: -7.584927558898926
    7. ')' → logprob: -8.209927558898926
    8. '    
' → logprob: -8.709927558898926
    9. ',' → logprob: -8.959927558898926
    10. '```' → logprob: -9.209927558898926

Token 95: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19323381781578064
    2. '       ' → logprob: -2.0682337284088135
    3. 'adj' → logprob: -3.1932337284088135
    4. ' adj' → logprob: -5.693233966827393
    5. '<|end|>' → logprob: -5.943233966827393
    6. '
' → logprob: -6.693233966827393
    7. '  ' → logprob: -8.443233489990234
    8. ' ' → logprob: -8.443233489990234
    9. 'heap' → logprob: -8.818233489990234
    10. '    
' → logprob: -9.068233489990234

Token 96: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.012633368372917175
    2. ' adj' → logprob: -4.762633323669434
    3. '   ' → logprob: -5.637633323669434
    4. '       ' → logprob: -7.887633323669434
    5. ' ' → logprob: -11.012633323669434
    6. '
' → logprob: -11.387633323669434
    7. '<|end|>' → logprob: -11.637633323669434
    8. '  ' → logprob: -11.762633323669434
    9. 'heap' → logprob: -12.262633323669434
    10. '(adj' → logprob: -12.637633323669434

Token 97: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.125001907348633
    3. 'a' → logprob: -14.625001907348633
    4. '[b' → logprob: -15.250001907348633
    5. '```' → logprob: -17.750001907348633
    6. ' [' → logprob: -18.000001907348633
    7. '[A' → logprob: -18.750001907348633
    8. '[u' → logprob: -18.750001907348633
    9. '[int' → logprob: -19.625001907348633
    10. '[c' → logprob: -19.750001907348633

Token 98: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.4736459888808895e-05
    2. ']' → logprob: -11.750014305114746
    3. '.append' → logprob: -12.625014305114746
    4. ' ].' → logprob: -13.250014305114746
    5. '.' → logprob: -14.250014305114746
    6. '   ' → logprob: -14.750014305114746
    7. '[' → logprob: -14.875014305114746
    8. '][' → logprob: -16.625015258789062
    9. ').' → logprob: -17.125015258789062
    10. '[a' → logprob: -17.250015258789062

Token 99: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.054500666621607e-06
    2. '.append' → logprob: -13.62500286102295
    3. 'app' → logprob: -14.25000286102295
    4. 'appen' → logprob: -14.62500286102295
    5. ' append' → logprob: -14.75000286102295
    6. ' ' → logprob: -15.87500286102295
    7. 'push' → logprob: -16.250003814697266
    8. '	append' → logprob: -17.750003814697266
    9. '_append' → logprob: -17.750003814697266
    10. '  ' → logprob: -18.875003814697266

Token 100: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01138567365705967
    2. '(b' → logprob: -4.511385440826416
    3. '(' → logprob: -8.011385917663574
    4. '([' → logprob: -12.386385917663574
    5. ' (' → logprob: -13.636385917663574
    6. '(B' → logprob: -15.761385917663574
    7. ' ((' → logprob: -15.886385917663574
    8. '   ' → logprob: -15.886385917663574
    9. '(a' → logprob: -16.386384963989258
    10. '(
' → logprob: -16.511384963989258

Token 101: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0008123667794279754
    2. ' b' → logprob: -7.125812530517578
    3. '   ' → logprob: -12.500812530517578
    4. ' ' → logprob: -13.000812530517578
    5. ')b' → logprob: -14.125812530517578
    6. '    ' → logprob: -15.250812530517578
    7. '  ' → logprob: -15.500812530517578
    8. '
' → logprob: -15.875812530517578
    9. ')' → logprob: -15.875812530517578
    10. '(b' → logprob: -16.000812530517578

Token 102: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4748121500015259
    2. ',c' → logprob: -0.9748121500015259
    3. ' ,' → logprob: -7.224812030792236
    4. ' cost' → logprob: -13.599812507629395
    5. '(cost' → logprob: -13.599812507629395
    6. ',
' → logprob: -14.099812507629395
    7. 'cost' → logprob: -14.224812507629395
    8. '   ' → logprob: -14.599812507629395
    9. ',const' → logprob: -15.099812507629395
    10. ',color' → logprob: -16.099811553955078

Token 103: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.00018625585653353482
    2. 'cost' → logprob: -10.0001859664917
    3. 'st' → logprob: -10.3751859664917
    4. 'os' → logprob: -10.5001859664917
    5. '))' → logprob: -10.8751859664917
    6. ' ost' → logprob: -11.5001859664917
    7. ')' → logprob: -11.8126859664917
    8. '0' → logprob: -12.3751859664917
    9. ' ' → logprob: -12.8126859664917
    10. '```' → logprob: -12.8126859664917

Token 104: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004142626188695431
    2. '))
' → logprob: -5.504142761230469
    3. ' ))' → logprob: -10.004142761230469
    4. ')' → logprob: -11.754142761230469
    5. '))

' → logprob: -12.379142761230469
    6. ',' → logprob: -13.004142761230469
    7. '))
' → logprob: -13.129142761230469
    8. ' ))
' → logprob: -14.504142761230469
    9. '));' → logprob: -14.754142761230469
    10. ' ' → logprob: -14.754142761230469

Token 105: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.038055259734392166
    2. ' adj' → logprob: -3.288055181503296
    3. '       ' → logprob: -12.288055419921875
    4. '<|end|>' → logprob: -12.288055419921875
    5. '   ' → logprob: -13.788055419921875
    6. 'a' → logprob: -14.163055419921875
    7. '(adj' → logprob: -14.413055419921875
    8. '
' → logprob: -14.913055419921875
    9. 'Adj' → logprob: -15.163055419921875
    10. '_adj' → logprob: -15.288055419921875

Token 107: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.0484450437361374e-05
    2. 'b' → logprob: -10.750040054321289
    3. '[a' → logprob: -11.375040054321289
    4. '[' → logprob: -12.250040054321289
    5. '```' → logprob: -13.875040054321289
    6. ' [' → logprob: -14.750040054321289
    7. '[c' → logprob: -15.250040054321289
    8. '   ' → logprob: -16.12504005432129
    9. '[
' → logprob: -16.75004005432129
    10. '

' → logprob: -16.75004005432129

Token 108: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.01934504136443138
    2. ').' → logprob: -4.394344806671143
    3. '.append' → logprob: -5.394344806671143
    4. '.' → logprob: -6.144344806671143
    5. '}.' → logprob: -10.1443452835083
    6. '   ' → logprob: -10.1443452835083
    7. ']' → logprob: -11.2693452835083
    8. ' ].' → logprob: -11.7693452835083
    9. '       ' → logprob: -12.1443452835083
    10. '[' → logprob: -12.5193452835083

Token 109: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.7432603272027336e-06
    2. '.append' → logprob: -13.875001907348633
    3. ' append' → logprob: -14.500001907348633
    4. 'appen' → logprob: -15.500001907348633
    5. '	append' → logprob: -16.875001907348633
    6. 'app' → logprob: -17.750001907348633
    7. 'adj' → logprob: -18.750001907348633
    8. 'Append' → logprob: -19.000001907348633
    9. '_append' → logprob: -19.875001907348633
    10. ' ' → logprob: -20.000001907348633

Token 110: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.0087516784551553e-05
    2. '(a' → logprob: -11.75001049041748
    3. ' (' → logprob: -13.50001049041748
    4. '(' → logprob: -14.87501049041748
    5. ' ((' → logprob: -15.00001049041748
    6. '   ' → logprob: -16.500009536743164
    7. '```' → logprob: -17.000009536743164
    8. '(
' → logprob: -17.375009536743164
    9. ' ' → logprob: -17.750009536743164
    10. '>((' → logprob: -18.125009536743164

Token 111: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1472419600977446e-06
    2. ' a' → logprob: -14.250000953674316
    3. ',a' → logprob: -15.000000953674316
    4. '(a' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '	a' → logprob: -18.750001907348633
    7. ')a' → logprob: -18.875001907348633
    8. '#a' → logprob: -20.500001907348633
    9. ' ' → logprob: -20.625001907348633
    10. '  ' → logprob: -20.750001907348633

Token 112: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0003362966235727072
    2. ',' → logprob: -8.000336647033691
    3. ' ,' → logprob: -14.500336647033691
    4. ' cost' → logprob: -16.375335693359375
    5. 'cost' → logprob: -16.375335693359375
    6. ',b' → logprob: -16.625335693359375
    7. ',
' → logprob: -17.750335693359375
    8. ',

' → logprob: -18.500335693359375
    9. ',t' → logprob: -18.500335693359375
    10. 'c' → logprob: -18.500335693359375

Token 113: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.002199263544753194
    2. 'cost' → logprob: -6.127199172973633
    3. '_cost' → logprob: -12.377199172973633
    4. ')' → logprob: -13.002199172973633
    5. ' cost' → logprob: -13.502199172973633
    6. 'st' → logprob: -13.752199172973633
    7. '(cost' → logprob: -14.002199172973633
    8. 'ост' → logprob: -14.627199172973633
    9. 'os' → logprob: -14.752199172973633
    10. '0' → logprob: -14.752199172973633

Token 114: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12694679200649261
    2. ')' → logprob: -2.1269466876983643
    3. '))
' → logprob: -11.126946449279785
    4. ')
' → logprob: -13.001946449279785
    5. ')))' → logprob: -13.626946449279785
    6. ')}' → logprob: -15.751946449279785
    7. '       ' → logprob: -16.0019474029541
    8. '))

' → logprob: -16.7519474029541
    9. '));' → logprob: -16.8769474029541
    10. ' ))' → logprob: -17.2519474029541

Token 115: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06024915352463722
    2. '   ' → logprob: -3.060249090194702
    3. 'import' → logprob: -5.685249328613281
    4. 'distance' → logprob: -5.810249328613281
    5. '
' → logprob: -5.935249328613281
    6. '```' → logprob: -6.685249328613281
    7. 'def' → logprob: -7.560249328613281
    8. '    
' → logprob: -8.185249328613281
    9. ' dist' → logprob: -8.435249328613281
    10. 'for' → logprob: -9.185249328613281

Token 116: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.015215897932648659
    2. 'import' → logprob: -5.015215873718262
    3. 'distance' → logprob: -5.765215873718262
    4. '   ' → logprob: -6.265215873718262
    5. 'INF' → logprob: -6.515215873718262
    6. 'def' → logprob: -8.140215873718262
    7. 'q' → logprob: -8.265215873718262
    8. 'hq' → logprob: -8.265215873718262
    9. 'd' → logprob: -8.390215873718262
    10. 'dp' → logprob: -8.515215873718262

Token 117: ' On' (ID: 2160)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06629327684640884
    2. 'import' → logprob: -3.066293239593506
    3. 'distance' → logprob: -5.316293239593506
    4. 'def' → logprob: -5.316293239593506
    5. '#' → logprob: -6.316293239593506
    6. 'heap' → logprob: -6.691293239593506
    7. 'q' → logprob: -7.316293239593506
    8. 'hq' → logprob: -7.441293239593506
    9. 'from' → logprob: -7.566293239593506
    10. 'd' → logprob: -7.566293239593506

Token 118: ' graph' (ID: 7465)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.022588012740015984
    2. 'heap' → logprob: -4.897587776184082
    3. 'd' → logprob: -5.647587776184082
    4. 'line' → logprob: -6.147587776184082
    5. 'def' → logprob: -6.272587776184082
    6. 'distance' → logprob: -6.522587776184082
    7. '   ' → logprob: -6.897587776184082
    8. 'for' → logprob: -7.022587776184082
    9. 'he' → logprob: -7.397587776184082
    10. 'es' → logprob: -7.772587776184082

Token 119: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8568387031555176
    2. 'dist' → logprob: -1.2318387031555176
    3. 'def' → logprob: -2.1068387031555176
    4. ',' → logprob: -3.2318387031555176
    5. 'distance' → logprob: -3.7318387031555176
    6. ' distances' → logprob: -3.9818387031555176
    7. 'd' → logprob: -4.106838703155518
    8. ' dist' → logprob: -4.856838703155518
    9. ' to' → logprob: -5.231838703155518
    10. 's' → logprob: -5.731838703155518

Token 120: ' edges' (ID: 22569)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11919448524713516
    2. ' dist' → logprob: -3.244194507598877
    3. 'import' → logprob: -3.369194507598877
    4. 'distance' → logprob: -4.244194507598877
    5. '   ' → logprob: -4.369194507598877
    6. 'from' → logprob: -6.369194507598877
    7. ' import' → logprob: -6.619194507598877
    8. 'def' → logprob: -6.744194507598877
    9. 'heap' → logprob: -6.869194507598877
    10. 'd' → logprob: -6.994194507598877

Token 121: ' cost' (ID: 3097)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.7313054203987122
    2. '   ' → logprob: -2.2313053607940674
    3. '=' → logprob: -2.3563053607940674
    4. 'are' → logprob: -2.4813053607940674
    5. 'have' → logprob: -2.7313053607940674
    6. ' with' → logprob: -3.2313053607940674
    7. ' =' → logprob: -3.6063053607940674
    8. ' are' → logprob: -3.9813053607940674
    9. 'that' → logprob: -4.2313055992126465
    10. ',' → logprob: -4.7313055992126465

Token 122: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06905946135520935
    2. '=' → logprob: -3.444059371948242
    3. '1' → logprob: -4.069059371948242
    4. ' ' → logprob: -5.444059371948242
    5. 'either' → logprob: -6.444059371948242
    6. 's' → logprob: -6.694059371948242
    7. 'is' → logprob: -6.694059371948242
    8. ' =' → logprob: -6.694059371948242
    9. ' is' → logprob: -6.944059371948242
    10. ',' → logprob: -7.444059371948242

Token 123: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06821534037590027
    2. 'either' → logprob: -3.4432153701782227
    3. '=' → logprob: -4.193215370178223
    4. '1' → logprob: -5.443215370178223
    5. ' ' → logprob: -5.443215370178223
    6. ' either' → logprob: -5.693215370178223
    7. '[' → logprob: -5.818215370178223
    8. 'from' → logprob: -7.568215370178223
    9. '{' → logprob: -7.693215370178223
    10. 'is' → logprob: -8.193215370178223

Token 124: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6911091804504395
    2. '   ' → logprob: -2.0661091804504395
    3. '
' → logprob: -2.5661091804504395
    4. 'def' → logprob: -2.6911091804504395
    5. 'for' → logprob: -2.9411091804504395
    6. ',' → logprob: -3.3161091804504395
    7. 'd' → logprob: -3.4411091804504395
    8. 'import' → logprob: -3.8161091804504395
    9. 'distance' → logprob: -3.8161091804504395
    10. ' for' → logprob: -4.1911091804504395

Token 125: ' human' (ID: 5396)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20753252506256104
    2. ' c' → logprob: -1.957532525062561
    3. 'adj' → logprob: -4.3325324058532715
    4. 'edge' → logprob: -5.3325324058532715
    5. 'cost' → logprob: -5.4575324058532715
    6. 'color' → logprob: -5.7075324058532715
    7. ' not' → logprob: -5.9575324058532715
    8. ' cost' → logprob: -5.9575324058532715
    9. ' the' → logprob: -6.2075324058532715
    10. 'the' → logprob: -6.3325324058532715

Token 126: ' door' (ID: 4121)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23616009950637817
    2. '
' → logprob: -2.7361600399017334
    3. 'dist' → logprob: -3.3611600399017334
    4. 'distance' → logprob: -3.3611600399017334
    5. ',' → logprob: -3.6111600399017334
    6. 'd' → logprob: -4.3611602783203125
    7. '    
' → logprob: -4.6111602783203125
    8. ')' → logprob: -5.4861602783203125
    9. '<|end|>' → logprob: -5.7361602783203125
    10. 'def' → logprob: -5.8611602783203125

Token 128: 'N' (ID: 45)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.35928165912628174
    2. ')' → logprob: -1.4842816591262817
    3. ',' → logprob: -4.109281539916992
    4. ''),' → logprob: -4.234281539916992
    5. 'else' → logprob: -4.484281539916992
    6. '')' → logprob: -5.109281539916992
    7. ''' → logprob: -5.609281539916992
    8. 'L' → logprob: -5.609281539916992
    9. ')
' → logprob: -6.109281539916992
    10. 's' → logprob: -6.359281539916992

Token 129: '),' (ID: 936)
  Prédit: 'ats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.833972692489624
    2. ')' → logprob: -1.083972692489624
    3. 'at' → logprob: -1.958972692489624
    4. '),' → logprob: -3.583972692489624
    5. 'else' → logprob: -3.958972692489624
    6. '')' → logprob: -6.146472930908203
    7. ',' → logprob: -6.646472930908203
    8. ''s' → logprob: -6.646472930908203
    9. 'ext' → logprob: -6.896472930908203
    10. 'elif' → logprob: -6.958972930908203

Token 130: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.382100224494934
    2. 'dist' → logprob: -1.507100224494934
    3. 'distance' → logprob: -1.632100224494934
    4. '#' → logprob: -1.632100224494934
    5. 'd' → logprob: -2.8821001052856445
    6. '<|end|>' → logprob: -3.1321001052856445
    7. '
' → logprob: -4.8821001052856445
    8. 'else' → logprob: -6.1321001052856445
    9. '```' → logprob: -6.1321001052856445
    10. ' #' → logprob: -6.5071001052856445

Token 131: '0' (ID: 15)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3760680854320526
    2. 'else' → logprob: -2.126068115234375
    3. '0' → logprob: -2.501068115234375
    4. '1' → logprob: -3.126068115234375
    5. '   ' → logprob: -3.751068115234375
    6. 'edges' → logprob: -4.001068115234375
    7. 'elif' → logprob: -4.501068115234375
    8. 'and' → logprob: -5.876068115234375
    9. 'cost' → logprob: -5.876068115234375
    10. 'otherwise' → logprob: -6.251068115234375

Token 132: ' if' (ID: 538)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.3821260333061218
    2. ' or' → logprob: -1.6321260929107666
    3. 'if' → logprob: -3.1321260929107666
    4. ',' → logprob: -3.8821260929107666
    5. 'for' → logprob: -4.0071258544921875
    6. 'else' → logprob: -4.3821258544921875
    7. ' if' → logprob: -4.6321258544921875
    8. '   ' → logprob: -5.5071258544921875
    9. 'elif' → logprob: -5.8821258544921875
    10. ' for' → logprob: -6.0071258544921875

Token 133: ' cat' (ID: 9059)
  Prédit: 'locked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'locked' → logprob: -1.2404760122299194
    2. 'lock' → logprob: -1.8654760122299194
    3. 'robot' → logprob: -2.240476131439209
    4. 'animal' → logprob: -2.490476131439209
    5. 'cat' → logprob: -2.865476131439209
    6. 'l' → logprob: -3.490476131439209
    7. 'lux' → logprob: -3.490476131439209
    8. 'monster' → logprob: -3.615476131439209
    9. 'light' → logprob: -3.740476131439209
    10. 'L' → logprob: -3.990476131439209

Token 134: ' door' (ID: 4121)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02887611836194992
    2. 'distance' → logprob: -4.153876304626465
    3. 'def' → logprob: -5.028876304626465
    4. 'import' → logprob: -6.028876304626465
    5. '   ' → logprob: -6.403876304626465
    6. 'd' → logprob: -7.153876304626465
    7. '
' → logprob: -7.903876304626465
    8. '#' → logprob: -8.028876304626465
    9. 'dp' → logprob: -9.153876304626465
    10. 'from' → logprob: -9.528876304626465

Token 135: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04581280052661896
    2. '   ' → logprob: -4.420812606811523
    3. 'import' → logprob: -4.670812606811523
    4. 'INF' → logprob: -4.920812606811523
    5. 'distance' → logprob: -5.170812606811523
    6. '#' → logprob: -5.670812606811523
    7. 'def' → logprob: -6.045812606811523
    8. '
' → logprob: -6.170812606811523
    9. 'inf' → logprob: -7.545812606811523
    10. 'd' → logprob: -7.920812606811523

Token 136: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.03028424270451069
    2. ''L' → logprob: -4.280284404754639
    3. 'N' → logprob: -4.405284404754639
    4. ''' → logprob: -6.905284404754639
    5. ' L' → logprob: -7.405284404754639
    6. 'C' → logprob: -7.405284404754639
    7. ''N' → logprob: -7.530284404754639
    8. ')' → logprob: -7.905284404754639
    9. ''C' → logprob: -8.78028392791748
    10. ')L' → logprob: -9.84278392791748

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017927607521414757
    2. '   ' → logprob: -4.767927646636963
    3. ')
' → logprob: -4.767927646636963
    4. ')

' → logprob: -7.517927646636963
    5. ')
' → logprob: -10.017927169799805
    6. '
' → logprob: -10.392927169799805
    7. ' )' → logprob: -10.392927169799805
    8. 'def' → logprob: -10.892927169799805
    9. '),' → logprob: -11.892927169799805
    10. ').' → logprob: -11.892927169799805

Token 138: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1347728669643402
    2. '   ' → logprob: -2.509772777557373
    3. 'import' → logprob: -3.509772777557373
    4. '
' → logprob: -5.134772777557373
    5. 'distance' → logprob: -6.009772777557373
    6. 'def' → logprob: -6.134772777557373
    7. 'INF' → logprob: -6.259772777557373
    8. '    
' → logprob: -6.884772777557373
    9. '```' → logprob: -7.884772777557373
    10. 'from' → logprob: -8.134773254394531

Token 139: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06621652096509933
    2. 'import' → logprob: -3.441216468811035
    3. 'def' → logprob: -4.191216468811035
    4. 'INF' → logprob: -4.566216468811035
    5. '   ' → logprob: -5.941216468811035
    6. 'distance' → logprob: -6.191216468811035
    7. 'from' → logprob: -7.691216468811035
    8. '#' (adapté à ' #') → logprob: -8.316216468811035
    9. 'inf' → logprob: -8.316216468811035
    10. '    
' → logprob: -8.441216468811035

Token 140: ' Need' (ID: 19792)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.28040406107902527
    2. 'def' → logprob: -1.6554040908813477
    3. 'import' → logprob: -3.7804040908813477
    4. 'INF' → logprob: -4.155404090881348
    5. '#' → logprob: -5.030404090881348
    6. 'distance' → logprob: -5.905404090881348
    7. 'from' → logprob: -6.905404090881348
    8. 'hq' → logprob: -7.405404090881348
    9. 'd' → logprob: -7.530404090881348
    10. 'q' → logprob: -7.655404090881348

Token 141: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.47729921340942383
    2. 'to' → logprob: -0.9772992134094238
    3. '   ' → logprob: -6.977299213409424
    4. 'd' → logprob: -7.352299213409424
    5. 'dist' → logprob: -7.727299213409424
    6. 'def' → logprob: -7.852299213409424
    7. ' shortest' → logprob: -8.977298736572266
    8. 'distance' → logprob: -9.102298736572266
    9. 's' → logprob: -9.227298736572266
    10. ' ' → logprob: -9.477298736572266

Token 142: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.22114822268486023
    2. 'min' → logprob: -1.9711482524871826
    3. ' find' → logprob: -2.9711482524871826
    4. 'dist' → logprob: -6.3461480140686035
    5. 'heap' → logprob: -6.7211480140686035
    6. 'go' → logprob: -6.7211480140686035
    7. ' min' → logprob: -7.0961480140686035
    8. 'print' → logprob: -7.3461480140686035
    9. 'calculate' → logprob: -7.9711480140686035
    10. 'd' → logprob: -8.346148490905762

Token 143: ' minimal' (ID: 19957)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7474663257598877
    2. ' the' → logprob: -0.8724663257598877
    3. ' shortest' → logprob: -2.8724663257598877
    4. 'minimum' → logprob: -4.122466087341309
    5. ' minimum' → logprob: -5.122466087341309
    6. 'a' → logprob: -5.372466087341309
    7. 'short' → logprob: -5.372466087341309
    8. 'min' → logprob: -5.497466087341309
    9. ' a' → logprob: -5.622466087341309
    10. ' min' → logprob: -5.747466087341309

Token 144: ' re' (ID: 322)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3467227518558502
    2. ' number' → logprob: -2.4717228412628174
    3. 'number' → logprob: -2.4717228412628174
    4. ' cost' → logprob: -3.4717228412628174
    5. 'distance' → logprob: -3.7217228412628174
    6. 'human' → logprob: -3.8467228412628174
    7. 'changes' → logprob: -4.471722602844238
    8. 'dist' → logprob: -5.596722602844238
    9. 'total' → logprob: -5.721722602844238
    10. 'cut' → logprob: -5.721722602844238

Token 145: '-opening' (ID: 144212)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -1.795749545097351
    2. 'build' → logprob: -1.920749545097351
    3. 'pair' → logprob: -2.2957496643066406
    4. 'open' → logprob: -2.5457496643066406
    5. 'moves' → logprob: -2.6707496643066406
    6. 'arr' → logprob: -2.6707496643066406
    7. 'paint' → logprob: -2.7957496643066406
    8. 'move' → logprob: -2.9207496643066406
    9. 'install' → logprob: -3.2957496643066406
    10. 'color' → logprob: -3.4207496643066406

Token 146: ' cost' (ID: 3097)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.003114853287115693
    2. 'distance' → logprob: -6.503114700317383
    3. ' dist' → logprob: -6.878114700317383
    4. 'import' → logprob: -8.628114700317383
    5. 'cost' → logprob: -9.128114700317383
    6. 'def' → logprob: -9.878114700317383
    7. 'dp' → logprob: -10.128114700317383
    8. 'd' → logprob: -10.378114700317383
    9. '#' → logprob: -10.628114700317383
    10. 'heap' → logprob: -10.878114700317383

Token 147: ' for' (ID: 395)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.015104120597243309
    2. 'import' → logprob: -4.640104293823242
    3. '   ' → logprob: -6.140104293823242
    4. '
' → logprob: -6.765104293823242
    5. 'def' → logprob: -7.390104293823242
    6. 'from' → logprob: -7.890104293823242
    7. 'distance' → logprob: -7.890104293823242
    8. 'INF' → logprob: -8.515104293823242
    9. '    
' → logprob: -9.140104293823242
    10. 'dp' → logprob: -9.640104293823242

Token 148: ' N' (ID: 478)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ren' → logprob: -0.7817497849464417
    2. 'going' → logprob: -1.9067497253417969
    3. ' going' → logprob: -3.156749725341797
    4. 'both' → logprob: -3.156749725341797
    5. 'path' → logprob: -3.281749725341797
    6. 'a' → logprob: -3.531749725341797
    7. 'paths' → logprob: -3.531749725341797
    8. 'all' → logprob: -3.906749725341797
    9. 'cat' → logprob: -4.031749725341797
    10. 're' → logprob: -4.156749725341797

Token 149: 'ats' (ID: 1838)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.036560434848070145
    2. 'import' → logprob: -3.536560535430908
    3. ' dist' → logprob: -6.161560535430908
    4. 'distance' → logprob: -6.286560535430908
    5. '   ' → logprob: -7.411560535430908
    6. 'def' → logprob: -7.911560535430908
    7. 'from' → logprob: -8.16156005859375
    8. 'd' → logprob: -8.78656005859375
    9. ')' → logprob: -8.91156005859375
    10. '
' → logprob: -9.03656005859375

Token 150: 'ume' (ID: 3095)
  Prédit: 'ume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ume' → logprob: -9.13388703338569e-06
    2. 'um' → logprob: -12.125009536743164
    3. 'u' → logprob: -13.625009536743164
    4. 'уме' → logprob: -14.500009536743164
    5. 'umes' → logprob: -14.500009536743164
    6. '   ' → logprob: -14.625009536743164
    7. ' ume' → logprob: -15.875009536743164
    8. '       ' → logprob: -16.625009536743164
    9. 'uke' → logprob: -16.750009536743164
    10. '    ' → logprob: -16.875009536743164

Token 151: ' so' (ID: 813)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11136079579591751
    2. 'import' → logprob: -2.861360788345337
    3. '   ' → logprob: -3.111360788345337
    4. 'def' → logprob: -6.986361026763916
    5. 'distance' → logprob: -6.986361026763916
    6. ' dist' → logprob: -7.361361026763916
    7. 'heap' → logprob: -8.361360549926758
    8. '
' → logprob: -8.361360549926758
    9. ' import' → logprob: -8.986360549926758
    10. 'from' → logprob: -9.361360549926758

Token 152: ' that' (ID: 484)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.31175339221954346
    2. '   ' → logprob: -1.4367533922195435
    3. ' to' → logprob: -3.561753273010254
    4. 'that' → logprob: -7.186753273010254
    5. 'the' → logprob: -8.436753273010254
    6. '  ' → logprob: -8.561753273010254
    7. 'def' → logprob: -9.061753273010254
    8. 't' → logprob: -9.936753273010254
    9. ' that' → logprob: -10.186753273010254
    10. 'a' → logprob: -10.186753273010254

Token 153: ' Ren' (ID: 17631)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.8299985527992249
    2. 'ren' → logprob: -1.82999849319458
    3. 'all' → logprob: -2.20499849319458
    4. 'N' → logprob: -2.82999849319458
    5. ' he' → logprob: -3.07999849319458
    6. 'both' → logprob: -3.20499849319458
    7. '   ' → logprob: -3.82999849319458
    8. 'n' → logprob: -3.95499849319458
    9. 'the' → logprob: -4.07999849319458
    10. ' all' → logprob: -4.32999849319458

Token 154: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0015371197368949652
    2. 'o' → logprob: -7.876537322998047
    3. ' can' → logprob: -8.501537322998047
    4. 'can' → logprob: -8.501537322998047
    5. ')' → logprob: -8.751537322998047
    6. 'on's' → logprob: -8.751537322998047
    7. '```' → logprob: -8.876537322998047
    8. '   ' → logprob: -10.251537322998047
    9. '...' → logprob: -10.751537322998047
    10. 'to' → logprob: -11.126537322998047

Token 155: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.3250797390937805
    2. ' can' → logprob: -1.5750796794891357
    3. ''s' → logprob: -4.200079917907715
    4. ' is' → logprob: -4.450079917907715
    5. 'is' → logprob: -4.700079917907715
    6. 'and' → logprob: -5.200079917907715
    7. ' and' → logprob: -5.200079917907715
    8. 's' → logprob: -5.450079917907715
    9. ')' → logprob: -5.450079917907715
    10. 'in' → logprob: -5.950079917907715

Token 156: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.14005909860134125
    2. 'visit' → logprob: -2.890058994293213
    3. ' reach' → logprob: -3.515058994293213
    4. 'pass' → logprob: -4.265058994293213
    5. 'be' → logprob: -5.140058994293213
    6. 'travel' → logprob: -5.265058994293213
    7. 'move' → logprob: -5.765058994293213
    8. '   ' → logprob: -5.765058994293213
    9. 'go' → logprob: -5.890058994293213
    10. 'get' → logprob: -6.265058994293213

Token 157: ' room' (ID: 3435)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3841082751750946
    2. 'ren' → logprob: -2.009108304977417
    3. '(n' → logprob: -2.134108304977417
    4. ' n' → logprob: -3.384108304977417
    5. 't' → logprob: -4.634108066558838
    6. '[n' → logprob: -5.134108066558838
    7. 'the' → logprob: -5.384108066558838
    8. 'from' → logprob: -6.009108066558838
    9. ' ren' → logprob: -6.009108066558838
    10. '   ' → logprob: -6.759108066558838

Token 158: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9467377662658691
    2. 'dist' → logprob: -1.1967377662658691
    3. ' dist' → logprob: -2.696737766265869
    4. 's' → logprob: -3.071737766265869
    5. 'from' → logprob: -3.196737766265869
    6. ' n' → logprob: -3.321737766265869
    7. ' from' → logprob: -3.696737766265869
    8. 'import' → logprob: -4.196737766265869
    9. 'distance' → logprob: -4.446737766265869
    10. 'd' → logprob: -4.571737766265869

Token 159: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3943195939064026
    2. 's' → logprob: -2.269319534301758
    3. 'from' → logprob: -2.519319534301758
    4. 'ren' → logprob: -2.769319534301758
    5. '(n' → logprob: -2.769319534301758
    6. '   ' → logprob: -5.519319534301758
    7. '[n' → logprob: -6.144319534301758
    8. ' from' → logprob: -6.769319534301758
    9. 'rens' → logprob: -6.769319534301758
    10. '(s' → logprob: -6.894319534301758

Token 160: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.043450482189655304
    2. 'import' → logprob: -3.4184505939483643
    3. 'def' → logprob: -5.793450355529785
    4. 'from' → logprob: -5.793450355529785
    5. 'INF' → logprob: -6.668450355529785
    6. '   ' → logprob: -7.418450355529785
    7. '```' → logprob: -7.418450355529785
    8. 'distance' → logprob: -7.793450355529785
    9. 'dp' → logprob: -8.293450355529785
    10. '#' → logprob: -9.043450355529785

Token 161: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.48342886567115784
    2. '   ' → logprob: -1.1084288358688354
    3. 'import' → logprob: -2.983428955078125
    4. '```' → logprob: -6.733428955078125
    5. 'def' → logprob: -7.983428955078125
    6. 'distance' → logprob: -8.233428955078125
    7. ' dist' → logprob: -8.233428955078125
    8. 'from' → logprob: -8.733428955078125
    9. 'dp' → logprob: -9.358428955078125
    10. ' import' → logprob: -9.858428955078125

Token 162: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06961780786514282
    2. 'import' → logprob: -3.319617748260498
    3. '   ' → logprob: -3.694617748260498
    4. '```' → logprob: -6.444617748260498
    5. 'from' → logprob: -6.569617748260498
    6. '
' → logprob: -7.194617748260498
    7. 'distance' → logprob: -7.194617748260498
    8. 'def' → logprob: -7.194617748260498
    9. '    
' → logprob: -8.319618225097656
    10. ' dist' → logprob: -8.569618225097656

Token 163: ' Both' (ID: 17659)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.010679792612791061
    2. 'import' → logprob: -5.135679721832275
    3. 'def' → logprob: -6.010679721832275
    4. 'dp' → logprob: -7.260679721832275
    5. '   ' → logprob: -7.385679721832275
    6. 'INF' → logprob: -8.135680198669434
    7. 'from' → logprob: -8.885680198669434
    8. 'distance' → logprob: -9.010680198669434
    9. '```' → logprob: -9.010680198669434
    10. 'heap' → logprob: -9.385680198669434

Token 164: ' n' (ID: 297)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14941465854644775
    2. 'distance' → logprob: -3.274414539337158
    3. 'import' → logprob: -3.899414539337158
    4. 'n' → logprob: -4.274414539337158
    5. 'd' → logprob: -4.399414539337158
    6. ' dist' → logprob: -4.649414539337158
    7. '#' → logprob: -5.274414539337158
    8. 'cost' → logprob: -5.524414539337158
    9. ' =' → logprob: -5.524414539337158
    10. 'def' → logprob: -5.774414539337158

Token 165: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.023126913234591484
    2. '   ' → logprob: -4.02312707901001
    3. 'at' → logprob: -6.39812707901001
    4. 'a' → logprob: -7.71062707901001
    5. '#' → logprob: -7.89812707901001
    6. '```' → logprob: -8.523126602172852
    7. 'def' → logprob: -8.585626602172852
    8. '    ' → logprob: -8.898126602172852
    9. '  ' → logprob: -9.085626602172852
    10. ' ' → logprob: -9.398126602172852

Token 166: 'ume' (ID: 3095)
  Prédit: 'ume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ume' → logprob: -0.0004755943373311311
    2. '   ' → logprob: -9.125475883483887
    3. 'me' → logprob: -9.500475883483887
    4. 'u' → logprob: -9.625475883483887
    5. 'ame' → logprob: -10.375475883483887
    6. 'um' → logprob: -10.625475883483887
    7. 'ime' → logprob: -10.625475883483887
    8. 'уме' → logprob: -10.625475883483887
    9. 'ome' → logprob: -11.250475883483887
    10. '    ' → logprob: -11.375475883483887

Token 167: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44677790999412537
    2. ' and' → logprob: -1.5717779397964478
    3. 'and' → logprob: -2.696777820587158
    4. '<|end|>' → logprob: -4.071777820587158
    5. '<|end|>' → logprob: -4.446777820587158
    6. ' ,' → logprob: -4.696777820587158
    7. ')' → logprob: -4.821777820587158
    8. '   ' → logprob: -5.571777820587158
    9. ''s' → logprob: -5.696777820587158
    10. '=' → logprob: -5.821777820587158

Token 168: ' ren' (ID: 5427)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ren' → logprob: -0.062220875173807144
    2. ' ren' → logprob: -2.812220811843872
    3. 'n' → logprob: -9.937220573425293
    4. '   ' → logprob: -10.562220573425293
    5. '#' → logprob: -11.187220573425293
    6. 'Ren' → logprob: -11.187220573425293
    7. 'rene' → logprob: -11.374720573425293
    8. ' ' → logprob: -11.374720573425293
    9. 'r' → logprob: -11.499720573425293
    10. '
' → logprob: -11.624720573425293

Token 169: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.00023011912708170712
    2. 'en' → logprob: -9.500229835510254
    3. 'n' → logprob: -10.250229835510254
    4. 'one' → logprob: -10.625229835510254
    5. '```' → logprob: -11.000229835510254
    6. 'a' → logprob: -11.375229835510254
    7. 's' → logprob: -11.875229835510254
    8. 'onse' → logprob: -12.000229835510254
    9. 'at' → logprob: -12.250229835510254
    10. 'o' → logprob: -12.625229835510254

Token 170: ' can' (ID: 665)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0424730777740479
    2. 'can' → logprob: -2.542473077774048
    3. 'need' → logprob: -2.667473077774048
    4. '<|end|>' → logprob: -2.917473077774048
    5. ' can' → logprob: -3.042473077774048
    6. '_' → logprob: -3.042473077774048
    7. '=' → logprob: -3.417473077774048
    8. ')' → logprob: -3.542473077774048
    9. ',' → logprob: -3.542473077774048
    10. 'd' → logprob: -3.667473077774048

Token 171: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -1.6966845989227295
    2. 'move' → logprob: -2.0716845989227295
    3. ' use' → logprob: -2.1966845989227295
    4. ' reopen' → logprob: -2.1966845989227295
    5. 'use' → logprob: -2.5716845989227295
    6. 'change' → logprob: -2.9466845989227295
    7. 'open' → logprob: -3.0716845989227295
    8. 're' → logprob: -3.3216845989227295
    9. 'pass' → logprob: -3.4466845989227295
    10. ' change' → logprob: -3.4466845989227295

Token 172: ' on' (ID: 402)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8141485452651978
    2. 'def' → logprob: -1.5641485452651978
    3. 'import' → logprob: -2.189148426055908
    4. 'from' → logprob: -3.314148426055908
    5. 'd' → logprob: -3.439148426055908
    6. ' dist' → logprob: -3.439148426055908
    7. 'distance' → logprob: -3.439148426055908
    8. ' from' → logprob: -4.314148426055908
    9. ' to' → logprob: -4.314148426055908
    10. ',' → logprob: -4.689148426055908

Token 173: ' open' (ID: 2494)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' doors' (ID: 18282)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.1526010036468506
    2. ' doors' → logprob: -1.7776010036468506
    3. 'd' → logprob: -2.0276010036468506
    4. 'doors' → logprob: -2.1526010036468506
    5. ' edges' → logprob: -2.4026010036468506
    6. 'adj' → logprob: -3.4026010036468506
    7. 'ed' → logprob: -3.7776010036468506
    8. 'spaces' → logprob: -3.9026010036468506
    9. '<|end|>' → logprob: -4.27760124206543
    10. ' ' → logprob: -4.52760124206543

Token 175: '.
' (ID: 558)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16574311256408691
    2. '   ' → logprob: -2.665743112564087
    3. 'import' → logprob: -2.790743112564087
    4. 'def' → logprob: -4.165742874145508
    5. 'INF' → logprob: -6.415742874145508
    6. 'distance' → logprob: -6.540742874145508
    7. '#' → logprob: -6.790742874145508
    8. 'from' → logprob: -7.540742874145508
    9. '
' → logprob: -7.665742874145508
    10. 'dp' → logprob: -7.790742874145508

Token 176: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1562020182609558
    2. '   ' → logprob: -2.2812020778656006
    3. 'import' → logprob: -3.7812020778656006
    4. 'distance' → logprob: -4.6562018394470215
    5. '
' → logprob: -5.6562018394470215
    6. 'def' → logprob: -6.0312018394470215
    7. '#' → logprob: -7.0312018394470215
    8. 'heap' → logprob: -7.2812018394470215
    9. ' dist' → logprob: -7.5312018394470215
    10. '    
' → logprob: -7.7812018394470215

Token 177: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1999327689409256
    2. 'import' → logprob: -2.199932813644409
    3. 'def' → logprob: -3.074932813644409
    4. '#' (adapté à ' #') → logprob: -4.94993257522583
    5. 'INF' → logprob: -5.44993257522583
    6. 'from' → logprob: -5.44993257522583
    7. '   ' → logprob: -5.44993257522583
    8. 'distance' → logprob: -6.32493257522583
    9. 'dp' → logprob: -6.57493257522583
    10. '```' → logprob: -7.57493257522583

Token 178: ' Once' (ID: 12466)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11548890173435211
    2. 'def' → logprob: -2.6154890060424805
    3. 'import' → logprob: -3.7404890060424805
    4. '#' → logprob: -5.2404890060424805
    5. 'INF' → logprob: -6.1154890060424805
    6. 'from' → logprob: -6.3654890060424805
    7. 'distance' → logprob: -6.8654890060424805
    8. '   ' → logprob: -7.2404890060424805
    9. 'dp' → logprob: -7.3654890060424805
    10. '```' → logprob: -9.11548900604248

Token 179: ' human' (ID: 5396)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5588700771331787
    2. 'adj' → logprob: -2.4338700771331787
    3. 'visited' → logprob: -2.8088700771331787
    4. 'a' → logprob: -2.8088700771331787
    5. 'the' → logprob: -2.9338700771331787
    6. 'again' → logprob: -2.9338700771331787
    7. 'you' → logprob: -3.0588700771331787
    8. 'ren' → logprob: -3.1838700771331787
    9. ' again' → logprob: -3.4338700771331787
    10. 'cost' → logprob: -3.4338700771331787

Token 180: ' doors' (ID: 18282)
  Prédit: 'door'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'door' → logprob: -0.5297043919563293
    2. ' door' → logprob: -1.7797043323516846
    3. 'doors' → logprob: -2.2797043323516846
    4. ' doors' → logprob: -2.6547043323516846
    5. ' and' → logprob: -3.7797043323516846
    6. 'and' → logprob: -4.404704570770264
    7. ' or' → logprob: -5.404704570770264
    8. 's' → logprob: -5.904704570770264
    9. ' ' → logprob: -6.029704570770264
    10. '   ' → logprob: -6.467204570770264

Token 181: ' opened' (ID: 13906)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.0649261325597763
    2. 'are' → logprob: -2.9399261474609375
    3. ' have' → logprob: -6.0649261474609375
    4. ' can' → logprob: -6.4399261474609375
    5. '<|end|>' → logprob: -6.6899261474609375
    6. ' become' → logprob: -6.9399261474609375
    7. ' reopened' → logprob: -6.9399261474609375
    8. ' or' → logprob: -7.9399261474609375
    9. ',' → logprob: -8.189926147460938
    10. 'have' → logprob: -8.314926147460938

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005091799423098564
    2. '   ' → logprob: -6.255091667175293
    3. '<|end|>' → logprob: -6.380091667175293
    4. ',
' → logprob: -8.755091667175293
    5. '.' → logprob: -9.005091667175293
    6. 'for' → logprob: -9.005091667175293
    7. ')' → logprob: -9.005091667175293
    8. '<|end|>' → logprob: -9.130091667175293
    9. ',n' → logprob: -9.255091667175293
    10. '...' → logprob: -9.630091667175293

Token 183: ' they' (ID: 1023)
  Prédit: 'they'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'they' → logprob: -1.1309999227523804
    2. '#' → logprob: -1.6309999227523804
    3. 'the' → logprob: -2.63100004196167
    4. 'both' → logprob: -3.00600004196167
    5. ' they' → logprob: -3.13100004196167
    6. 'cost' → logprob: -3.38100004196167
    7. 'adj' → logprob: -3.75600004196167
    8. 'continue' → logprob: -3.88100004196167
    9. ' both' → logprob: -4.00600004196167
    10. 'n' → logprob: -4.00600004196167

Token 184: ' remain' (ID: 12760)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.46979185938835144
    2. 'can' → logprob: -1.0947918891906738
    3. ' are' → logprob: -4.344791889190674
    4. ' become' → logprob: -4.969791889190674
    5. 'are' → logprob: -5.719791889190674
    6. ' both' → logprob: -5.844791889190674
    7. 'both' → logprob: -6.219791889190674
    8. '<|end|>' → logprob: -6.219791889190674
    9. 'remain' → logprob: -6.469791889190674
    10. '#' → logprob: -6.594791889190674

Token 185: ' open' (ID: 2494)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16506808996200562
    2. 'distance' → logprob: -2.4150681495666504
    3. '   ' → logprob: -3.2900681495666504
    4. 'visited' → logprob: -4.66506814956665
    5. 'd' → logprob: -5.29006814956665
    6. ' dist' → logprob: -5.66506814956665
    7. 'def' → logprob: -6.41506814956665
    8. ')' → logprob: -6.54006814956665
    9. ',' → logprob: -7.79006814956665
    10. ' distance' → logprob: -7.91506814956665

Token 186: '

' (ID: 279)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.059622567147016525
    2. 'def' → logprob: -3.9346225261688232
    3. 'import' → logprob: -4.059622764587402
    4. '   ' → logprob: -4.059622764587402
    5. '#' → logprob: -6.934622764587402
    6. 'distance' → logprob: -7.184622764587402
    7. 'INF' → logprob: -7.309622764587402
    8. 'from' → logprob: -7.934622764587402
    9. 'dp' → logprob: -7.934622764587402
    10. '
' → logprob: -8.184622764587402

Token 187: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0906456857919693
    2. '   ' → logprob: -3.3406457901000977
    3. '
' → logprob: -3.4656457901000977
    4. 'import' → logprob: -4.340645790100098
    5. 'distance' → logprob: -5.965645790100098
    6. '    
' → logprob: -5.965645790100098
    7. 'def' → logprob: -6.840645790100098
    8. '```' → logprob: -8.465645790100098
    9. ' dist' → logprob: -8.840645790100098
    10. 'from' → logprob: -8.840645790100098

Token 188: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02838333137333393
    2. 'def' → logprob: -4.028383255004883
    3. 'import' → logprob: -5.028383255004883
    4. '#' (adapté à ' #') → logprob: -6.653383255004883
    5. 'from' → logprob: -7.153383255004883
    6. 'INF' → logprob: -7.278383255004883
    7. 'distance' → logprob: -8.028383255004883
    8. 'dp' → logprob: -8.403383255004883
    9. 'q' → logprob: -9.903383255004883
    10. 'd' → logprob: -10.403383255004883

Token 189: ' Idea' (ID: 74190)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1415804922580719
    2. 'def' → logprob: -2.391580581665039
    3. 'import' → logprob: -3.516580581665039
    4. 'from' → logprob: -5.516580581665039
    5. 'INF' → logprob: -5.766580581665039
    6. '#' → logprob: -6.141580581665039
    7. 'distance' → logprob: -8.016580581665039
    8. '   ' → logprob: -8.516580581665039
    9. 'dp' → logprob: -8.766580581665039
    10. 'q' → logprob: -9.016580581665039

Token 190: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5853080749511719
    2. 'dist' → logprob: -1.2103080749511719
    3. 'import' → logprob: -2.710308074951172
    4. ' dist' → logprob: -3.710308074951172
    5. '#' → logprob: -3.960308074951172
    6. 'distance' → logprob: -4.460308074951172
    7. '   ' → logprob: -5.960308074951172
    8. ':
' → logprob: -5.960308074951172
    9. ' is' → logprob: -6.210308074951172
    10. ' :' → logprob: -6.210308074951172

Token 191: ' minimal' (ID: 19957)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.154135063290596
    2. 'import' → logprob: -2.40413498878479
    3. '#' → logprob: -4.029135227203369
    4. 'def' → logprob: -4.404135227203369
    5. ' dist' → logprob: -4.654135227203369
    6. 'from' → logprob: -4.779135227203369
    7. ' import' → logprob: -6.279135227203369
    8. 'distance' → logprob: -7.529135227203369
    9. 'heap' → logprob: -7.529135227203369
    10. '
' → logprob: -8.279134750366211

Token 192: ' cost' (ID: 3097)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9610151648521423
    2. 'cost' → logprob: -2.086015224456787
    3. 'distance' → logprob: -2.211015224456787
    4. ' spanning' → logprob: -2.211015224456787
    5. ' reopening' → logprob: -3.461015224456787
    6. ' dist' → logprob: -3.461015224456787
    7. 'sp' → logprob: -3.586015224456787
    8. ' distance' → logprob: -3.836015224456787
    9. ' distances' → logprob: -3.836015224456787
    10. 're' → logprob: -4.086015224456787

Token 193: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.046237215399742126
    2. 'def' → logprob: -3.9212372303009033
    3. 'import' → logprob: -4.546236991882324
    4. ' dist' → logprob: -5.421236991882324
    5. ' =' → logprob: -5.546236991882324
    6. 'distance' → logprob: -6.296236991882324
    7. '=' → logprob: -6.421236991882324
    8. 'from' → logprob: -6.921236991882324
    9. 'heap' → logprob: -7.796236991882324
    10. 'visited' → logprob: -8.671236991882324

Token 194: ' connect' (ID: 4837)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.023396886885166168
    2. ' reach' → logprob: -3.8983969688415527
    3. 'go' → logprob: -7.023396968841553
    4. 'open' → logprob: -7.398396968841553
    5. '0' → logprob: -7.773396968841553
    6. 'visit' → logprob: -8.273396492004395
    7. 'get' → logprob: -9.148396492004395
    8. 're' → logprob: -9.398396492004395
    9. 'move' → logprob: -9.398396492004395
    10. '   ' → logprob: -10.148396492004395

Token 195: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26990535855293274
    2. 'ren' → logprob: -2.6449053287506104
    3. ' all' → logprob: -3.2699053287506104
    4. ' ' → logprob: -3.2699053287506104
    5. 'all' → logprob: -3.8949053287506104
    6. 'n' → logprob: -3.8949053287506104
    7. ' n' → logprob: -4.6449055671691895
    8. 'node' → logprob: -4.7699055671691895
    9. ' node' → logprob: -5.0199055671691895
    10. 'nodes' → logprob: -5.6449055671691895

Token 196: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.0014272598782554269
    2. 'at' → logprob: -7.001427173614502
    3. '0' → logprob: -8.37642765045166
    4. 'a' → logprob: -10.00142765045166
    5. '1' → logprob: -10.12642765045166
    6. '```' → logprob: -10.50142765045166
    7. 'odes' → logprob: -10.62642765045166
    8. 'ode' → logprob: -10.87642765045166
    9. '   ' → logprob: -11.75142765045166
    10. 'n' → logprob: -11.87642765045166

Token 197: 'ume' (ID: 3095)
  Prédit: 'ume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ume' → logprob: -6.432518421206623e-05
    2. 'umes' → logprob: -10.7500638961792
    3. 'u' → logprob: -11.2500638961792
    4. 'um' → logprob: -11.3750638961792
    5. 'me' → logprob: -12.3750638961792
    6. 'уме' → logprob: -12.5000638961792
    7. '   ' → logprob: -12.6250638961792
    8. '    ' → logprob: -13.8750638961792
    9. 'ome' → logprob: -14.3750638961792
    10. 'umer' → logprob: -14.3750638961792

Token 198: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7229804992675781
    2. 'to' → logprob: -1.5979804992675781
    3. ' to' → logprob: -1.9729804992675781
    4. ' and' → logprob: -1.9729804992675781
    5. ''s' → logprob: -3.722980499267578
    6. ',' → logprob: -4.972980499267578
    7. 's' → logprob: -6.847980499267578
    8. 'room' → logprob: -7.472980499267578
    9. 'start' → logprob: -8.472980499267578
    10. ' ' → logprob: -8.847980499267578

Token 199: ' ren' (ID: 5427)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ren' → logprob: -0.025316188111901283
    2. ' ren' → logprob: -3.9003162384033203
    3. '0' → logprob: -5.52531623840332
    4. 'n' → logprob: -7.77531623840332
    5. ' ' → logprob: -8.40031623840332
    6. ' n' → logprob: -9.65031623840332
    7. 'Ren' → logprob: -11.33781623840332
    8. 'rene' → logprob: -12.52531623840332
    9. ' zero' → logprob: -12.77531623840332
    10. 'r' → logprob: -13.02531623840332

Token 200: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.00033284336677752435
    2. 'o' → logprob: -9.125332832336426
    3. 'one' → logprob: -9.250332832336426
    4. '```' → logprob: -10.625332832336426
    5. 'on's' → logprob: -11.125332832336426
    6. 'ons' → logprob: -11.125332832336426
    7. 'onse' → logprob: -11.687832832336426
    8. 'onne' → logprob: -12.187832832336426
    9. 'om' → logprob: -12.437832832336426
    10. ' on' → logprob: -12.812832832336426

Token 201: ' paths' (ID: 23373)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1556009203195572
    2. 'import' → logprob: -2.4056010246276855
    3. 'def' → logprob: -3.7806010246276855
    4. '   ' → logprob: -4.7806010246276855
    5. '#' → logprob: -4.9056010246276855
    6. 'distance' → logprob: -5.5306010246276855
    7. ' dist' → logprob: -5.6556010246276855
    8. 'from' → logprob: -5.7806010246276855
    9. '
' → logprob: -6.9056010246276855
    10. 'INF' → logprob: -7.5306010246276855

Token 202: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12741434574127197
    2. 'def' → logprob: -3.0024142265319824
    3. 'import' → logprob: -3.2524142265319824
    4. '#' → logprob: -4.127414226531982
    5. 'distance' → logprob: -5.002414226531982
    6. '   ' → logprob: -5.877414226531982
    7. 'from' → logprob: -6.252414226531982
    8. 'dp' → logprob: -7.252414226531982
    9. 'INF' → logprob: -7.502414226531982
    10. ' dist' → logprob: -7.627414226531982

Token 203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16434486210346222
    2. 'room' → logprob: -2.2893447875976562
    3. ' ' → logprob: -3.2893447875976562
    4. ' room' → logprob: -4.539344787597656
    5. 'get' → logprob: -7.664344787597656
    6. 'zero' → logprob: -8.539344787597656
    7. 'node' → logprob: -8.789344787597656
    8. 'each' → logprob: -8.914344787597656
    9. ' zero' → logprob: -9.039344787597656
    10. 'all' → logprob: -9.164344787597656

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2325849086046219
    2. 'room' → logprob: -1.6075849533081055
    3. ' room' → logprob: -5.8575849533081055
    4. ' ' → logprob: -6.2325849533081055
    5. 'node' → logprob: -6.3575849533081055
    6. 'zero' → logprob: -9.482584953308105
    7. 'all' → logprob: -9.607584953308105
    8. ' node' → logprob: -9.732584953308105
    9. 'any' → logprob: -9.857584953308105
    10. 'the' → logprob: -10.107584953308105

Token 205: ' through' (ID: 1819)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.18201902508735657
    2. 'import' → logprob: -2.807018995285034
    3. 'def' → logprob: -3.057018995285034
    4. '   ' → logprob: -3.432018995285034
    5. '#' → logprob: -4.307019233703613
    6. 'from' → logprob: -5.307019233703613
    7. 'distance' → logprob: -5.432019233703613
    8. 'dp' → logprob: -6.432019233703613
    9. ' dist' → logprob: -7.807019233703613
    10. 'heap' → logprob: -7.807019233703613

Token 206: ' opened' (ID: 13906)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2229793071746826
    2. 'cat' → logprob: -2.3479793071746826
    3. 'a' → logprob: -2.4729793071746826
    4. ' a' → logprob: -2.5979793071746826
    5. ' all' → logprob: -2.5979793071746826
    6. 'all' → logprob: -2.8479793071746826
    7. ' cat' → logprob: -2.9729793071746826
    8. ' ' → logprob: -3.0979793071746826
    9. 'the' → logprob: -3.0979793071746826
    10. ' the' → logprob: -3.4729793071746826

Token 207: ' human' (ID: 5396)
  Prédit: ' doors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doors' → logprob: -0.6413753032684326
    2. 'doors' → logprob: -2.0163753032684326
    3. ' edges' → logprob: -2.0163753032684326
    4. 'edges' → logprob: -2.1413753032684326
    5. ' human' → logprob: -4.391375541687012
    6. ' spaces' → logprob: -4.766375541687012
    7. 'spaces' → logprob: -4.891375541687012
    8. 'paths' → logprob: -5.016375541687012
    9. '_edges' → logprob: -5.266375541687012
    10. 'human' → logprob: -5.516375541687012

Token 208: ' doors' (ID: 18282)
  Prédit: ' doors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doors' → logprob: -0.6500783562660217
    2. 'doors' → logprob: -0.7750783562660217
    3. 'door' → logprob: -4.775078296661377
    4. ' door' → logprob: -5.400078296661377
    5. 'edges' → logprob: -7.150078296661377
    6. '<|end|>' → logprob: -7.150078296661377
    7. '   ' → logprob: -7.400078296661377
    8. ' ' → logprob: -7.525078296661377
    9. 'import' → logprob: -8.275078773498535
    10. 'd' → logprob: -8.275078773498535

Token 209: '

' (ID: 279)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1909593790769577
    2. 'def' → logprob: -2.1909594535827637
    3. 'import' → logprob: -3.1909594535827637
    4. 'from' → logprob: -5.190959453582764
    5. '#' → logprob: -5.315959453582764
    6. 'distance' → logprob: -5.315959453582764
    7. 'INF' → logprob: -5.565959453582764
    8. '   ' → logprob: -7.315959453582764
    9. 'dp' → logprob: -8.190958976745605
    10. '
' → logprob: -8.440958976745605

Token 210: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04012520611286163
    2. 'import' → logprob: -4.165125370025635
    3. 'def' → logprob: -4.540125370025635
    4. 'distance' → logprob: -5.040125370025635
    5. '   ' → logprob: -6.290125370025635
    6. '
' → logprob: -6.540125370025635
    7. '#' → logprob: -6.665125370025635
    8. 'from' → logprob: -6.915125370025635
    9. ' dist' → logprob: -8.540124893188477
    10. '```' → logprob: -8.540124893188477

Token 211: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2699752748012543
    2. 'def' → logprob: -1.5199753046035767
    3. 'import' → logprob: -4.644975185394287
    4. 'INF' → logprob: -5.644975185394287
    5. '#' (adapté à ' #') → logprob: -5.894975185394287
    6. 'from' → logprob: -6.769975185394287
    7. 'distance' → logprob: -7.644975185394287
    8. 'dp' → logprob: -9.144975662231445
    9. 'inf' → logprob: -10.019975662231445
    10. ' dist' → logprob: -10.019975662231445

Token 212: ' We'll' (ID: 46830)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15320762991905212
    2. 'def' → logprob: -2.278207540512085
    3. '#' → logprob: -3.528207540512085
    4. 'import' → logprob: -5.153207778930664
    5. 'distance' → logprob: -5.778207778930664
    6. 'from' → logprob: -7.778207778930664
    7. 'INF' → logprob: -8.528207778930664
    8. 'dp' → logprob: -8.528207778930664
    9. 'cost' → logprob: -8.903207778930664
    10. 'inf' → logprob: -9.778207778930664

Token 213: ' run' (ID: 2461)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.8884507417678833
    2. 'run' → logprob: -1.8884507417678833
    3. 'define' → logprob: -2.0134506225585938
    4. 'implement' → logprob: -2.3884506225585938
    5. 'd' → logprob: -3.0134506225585938
    6. ' use' → logprob: -3.5134506225585938
    7. 'def' → logprob: -3.6384506225585938
    8. 'find' → logprob: -3.7634506225585938
    9. 'dist' → logprob: -4.013450622558594
    10. ' implement' → logprob: -4.138450622558594

Token 214: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8119440078735352
    2. 'd' → logprob: -1.5619440078735352
    3. 'D' → logprob: -1.8119440078735352
    4. 'import' → logprob: -2.561944007873535
    5. ' three' → logprob: -3.811944007873535
    6. 'a' → logprob: -3.811944007873535
    7. 'three' → logprob: -4.186944007873535
    8. ' d' → logprob: -4.686944007873535
    9. ' D' → logprob: -4.811944007873535
    10. 'from' → logprob: -4.936944007873535

Token 215: '0' (ID: 15)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6969184875488281
    2. 'a' → logprob: -1.4469184875488281
    3. 'def' → logprob: -1.9469184875488281
    4. 'D' → logprob: -2.571918487548828
    5. 'three' → logprob: -4.196918487548828
    6. 'import' → logprob: -4.321918487548828
    7. ' a' → logprob: -5.446918487548828
    8. ' three' → logprob: -5.821918487548828
    9. 'two' → logprob: -5.821918487548828
    10. 'from' → logprob: -5.821918487548828

Token 216: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000332485738908872
    2. '-one' → logprob: -8.750332832336426
    3. '1' → logprob: -9.250332832336426
    4. ' -' → logprob: -9.500332832336426
    5. 'one' → logprob: -13.875332832336426
    6. '0' → logprob: -14.375332832336426
    7. '-One' → logprob: -15.000332832336426
    8. '–' → logprob: -15.625332832336426
    9. '```' → logprob: -15.750332832336426
    10. 'or' → logprob: -15.875332832336426

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48109471797943115
    2. 'one' → logprob: -0.9810947179794312
    3. '-one' → logprob: -5.606094837188721
    4. '_one' → logprob: -6.481094837188721
    5. '-' → logprob: -6.606094837188721
    6. 'One' → logprob: -8.106094360351562
    7. ' one' → logprob: -9.231094360351562
    8. '_' → logprob: -11.856094360351562
    9. '0' → logprob: -11.981094360351562
    10. '```' → logprob: -12.356094360351562

Token 218: ' BFS' (ID: 190016)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.021795982494950294
    2. 'B' → logprob: -4.146795749664307
    3. ' bfs' → logprob: -5.646795749664307
    4. ' BFS' → logprob: -6.146795749664307
    5. '_b' → logprob: -10.271796226501465
    6. 'd' → logprob: -10.646796226501465
    7. '```' → logprob: -11.771796226501465
    8. '-B' → logprob: -12.646796226501465
    9. '-b' → logprob: -13.021796226501465
    10. '-' → logprob: -13.771796226501465

Token 219: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3934386074542999
    2. 'dist' → logprob: -1.2684385776519775
    3. 'import' → logprob: -3.5184385776519775
    4. '   ' → logprob: -4.893438816070557
    5. 'def' → logprob: -5.393438816070557
    6. 'distance' → logprob: -7.268438816070557
    7. ' from' → logprob: -7.268438816070557
    8. '
' → logprob: -8.018438339233398
    9. 'for' → logprob: -8.018438339233398
    10. 'cost' → logprob: -9.393438339233398

Token 220: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3533557951450348
    2. 'ren' → logprob: -1.8533557653427124
    3. ' n' → logprob: -2.478355884552002
    4. '0' → logprob: -3.103355884552002
    5. ' ren' → logprob: -4.853355884552002
    6. '(n' → logprob: -6.103355884552002
    7. ' ' → logprob: -7.103355884552002
    8. '[n' → logprob: -7.228355884552002
    9. '(' → logprob: -8.103355407714844
    10. 'Ren' → logprob: -9.228355407714844

Token 221: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.00015085970517247915
    2. 'at' → logprob: -9.750150680541992
    3. 'a' → logprob: -10.375150680541992
    4. 'n' → logprob: -10.500150680541992
    5. 'atsu' → logprob: -11.875150680541992
    6. '```' → logprob: -12.250150680541992
    7. '###' → logprob: -12.750150680541992
    8. 'ts' → logprob: -13.375150680541992
    9. 's' → logprob: -13.625150680541992
    10. '>' → logprob: -13.937650680541992

Token 222: 'ume' (ID: 3095)
  Prédit: 'ume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ume' → logprob: -1.5570885807392187e-05
    2. 'u' → logprob: -12.250015258789062
    3. 'уме' → logprob: -12.375015258789062
    4. 'um' → logprob: -12.875015258789062
    5. 'me' → logprob: -14.000015258789062
    6. 's' → logprob: -14.375015258789062
    7. ' ume' → logprob: -15.125015258789062
    8. 'umes' → logprob: -15.375015258789062
    9. 'umele' → logprob: -15.500015258789062
    10. 'sum' → logprob: -15.875015258789062

Token 223: ' and' (ID: 326)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2771589457988739
    2. 'dist' → logprob: -1.6521589756011963
    3. 'import' → logprob: -3.9021589756011963
    4. ' from' → logprob: -3.9021589756011963
    5. '   ' → logprob: -4.777158737182617
    6. ' dist' → logprob: -7.402158737182617
    7. 'distance' → logprob: -7.902158737182617
    8. '
' → logprob: -8.652158737182617
    9. 'cost' → logprob: -9.402158737182617
    10. 'deque' → logprob: -9.902158737182617

Token 224: ' from' (ID: 591)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ren' → logprob: -0.11486230045557022
    2. 'from' → logprob: -2.6148622035980225
    3. ' ren' → logprob: -3.9898622035980225
    4. ' from' → logprob: -4.114862442016602
    5. '#' → logprob: -8.614862442016602
    6. '0' → logprob: -9.739862442016602
    7. ' ' → logprob: -9.864862442016602
    8. 'then' → logprob: -9.989862442016602
    9. ')' → logprob: -10.739862442016602
    10. ' #' → logprob: -10.739862442016602

Token 225: ' ren' (ID: 5427)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ren' → logprob: -0.007237790618091822
    2. '0' → logprob: -5.257237911224365
    3. ' ren' → logprob: -6.257237911224365
    4. ' ' → logprob: -9.507237434387207
    5. 'n' → logprob: -13.257237434387207
    6. 'rench' → logprob: -13.382237434387207
    7. 'r' → logprob: -14.194737434387207
    8. 'rene' → logprob: -14.507237434387207
    9. '```' → logprob: -14.569737434387207
    10. 'ron' → logprob: -14.757237434387207

Token 226: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.010036665014922619
    2. 'at' → logprob: -5.260036468505859
    3. 'ats' → logprob: -5.510036468505859
    4. 'atsu' → logprob: -8.13503646850586
    5. 'atse' → logprob: -9.38503646850586
    6. '```' → logprob: -9.76003646850586
    7. 'o' → logprob: -9.88503646850586
    8. 'ons' → logprob: -10.26003646850586
    9. 'n' → logprob: -10.26003646850586
    10. 'a' → logprob: -10.63503646850586

Token 227: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5100849270820618
    2. 'dist' → logprob: -1.260084867477417
    3. '   ' → logprob: -2.635084867477417
    4. 'import' → logprob: -3.635084867477417
    5. ' from' → logprob: -4.260085105895996
    6. 'distance' → logprob: -6.510085105895996
    7. ' dist' → logprob: -7.135085105895996
    8. 'def' → logprob: -7.885085105895996
    9. '
' → logprob: -8.260085105895996
    10. 'n' → logprob: -8.260085105895996

Token 228: ' all' (ID: 722)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045117538422346115
    2. 'find' → logprob: -3.9201176166534424
    3. ' find' → logprob: -4.920117378234863
    4. 'all' → logprob: -5.045117378234863
    5. 'get' → logprob: -5.045117378234863
    6. ' get' → logprob: -7.170117378234863
    7. 'room' → logprob: -7.170117378234863
    8. '[' → logprob: -7.920117378234863
    9. 'calculate' → logprob: -7.920117378234863
    10. '_' → logprob: -8.295117378234863

Token 229: ' rooms' (ID: 11348)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.32755246758461
    2. ' nodes' → logprob: -1.4525524377822876
    3. 'range' → logprob: -4.077552318572998
    4. '_nodes' → logprob: -4.952552318572998
    5. 'rooms' → logprob: -5.202552318572998
    6. '0' → logprob: -5.327552318572998
    7. 'vertices' → logprob: -5.452552318572998
    8. '
' → logprob: -6.827552318572998
    9. '   ' → logprob: -6.827552318572998
    10. ' rooms' → logprob: -7.202552318572998

Token 230: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7663059234619141
    2. '   ' → logprob: -1.266305923461914
    3. 'dist' → logprob: -1.516305923461914
    4. 'import' → logprob: -4.016305923461914
    5. 'distance' → logprob: -5.266305923461914
    6. ' from' → logprob: -5.516305923461914
    7. '
' → logprob: -5.766305923461914
    8. 'n' → logprob: -6.641305923461914
    9. 'def' → logprob: -7.516305923461914
    10. ' dist' → logprob: -7.891305923461914

Token 231: ' get' (ID: 717)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.08959394693374634
    2. 'find' → logprob: -2.9645938873291016
    3. 'get' → logprob: -4.589593887329102
    4. ' get' → logprob: -4.589593887329102
    5. 'dist' → logprob: -5.089593887329102
    6. 'calculate' → logprob: -6.214593887329102
    7. ' distances' → logprob: -7.464593887329102
    8. ' obtain' → logprob: -7.464593887329102
    9. '   ' → logprob: -7.714593887329102
    10. ' complete' → logprob: -7.839593887329102

Token 232: ' minimal' (ID: 19957)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.024067554622888565
    2. 'distance' → logprob: -4.649067401885986
    3. ' distances' → logprob: -5.024067401885986
    4. ' dist' → logprob: -5.649067401885986
    5. 'the' → logprob: -7.149067401885986
    6. '   ' → logprob: -7.274067401885986
    7. 'cost' → logprob: -7.524067401885986
    8. 'd' → logprob: -7.774067401885986
    9. ' the' → logprob: -7.899067401885986
    10. ')' → logprob: -8.399067878723145

Token 233: ' human' (ID: 5396)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004289234522730112
    2. 'cost' → logprob: -6.129289150238037
    3. '_dist' → logprob: -6.879289150238037
    4. 'distance' → logprob: -7.004289150238037
    5. ' distances' → logprob: -9.254289627075195
    6. '_cost' → logprob: -10.379289627075195
    7. '_distance' → logprob: -11.379289627075195
    8. '   ' → logprob: -11.879289627075195
    9. 'd' → logprob: -12.129289627075195
    10. ' dist' → logprob: -12.379289627075195

Token 234: ' doors' (ID: 18282)
  Prédit: 'door'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'door' → logprob: -0.1712460070848465
    2. ' door' → logprob: -2.92124605178833
    3. 'doors' → logprob: -3.29624605178833
    4. 'cost' → logprob: -3.54624605178833
    5. '   ' → logprob: -3.92124605178833
    6. ' doors' → logprob: -5.42124605178833
    7. ' cost' → logprob: -5.92124605178833
    8. '_d' → logprob: -6.29624605178833
    9. '-door' → logprob: -6.54624605178833
    10. ' ' → logprob: -6.67124605178833

Token 235: ' opened' (ID: 13906)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3290717303752899
    2. 'dist' → logprob: -1.9540717601776123
    3. ' from' → logprob: -3.4540717601776123
    4. '   ' → logprob: -3.7040717601776123
    5. 'import' → logprob: -3.7040717601776123
    6. 'for' → logprob: -4.079071521759033
    7. ' for' → logprob: -4.954071521759033
    8. 'distance' → logprob: -5.204071521759033
    9. 'deque' → logprob: -5.829071521759033
    10. 'cost' → logprob: -5.954071521759033

Token 236: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.45140016078948975
    2. 'from' → logprob: -1.0764001607894897
    3. 'import' → logprob: -4.701400279998779
    4. 'def' → logprob: -5.076400279998779
    5. 'for' → logprob: -5.826400279998779
    6. 'distance' → logprob: -5.951400279998779
    7. ' from' → logprob: -7.826400279998779
    8. '#' → logprob: -8.451399803161621
    9. '   ' → logprob: -8.451399803161621
    10. 'n' → logprob: -9.201399803161621

Token 237: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.015053287148475647
    2. '0' → logprob: -5.7650532722473145
    3. 'go' → logprob: -6.1400532722473145
    4. ' reach' → logprob: -6.1400532722473145
    5. 'visit' → logprob: -6.1400532722473145
    6. 'room' → logprob: -6.3900532722473145
    7. 'each' → logprob: -6.5150532722473145
    8. 'get' → logprob: -8.140053749084473
    9. 'rooms' → logprob: -8.390053749084473
    10. 'reachable' → logprob: -8.640053749084473

Token 238: ' that' (ID: 484)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08202968537807465
    2. 'room' → logprob: -3.8320295810699463
    3. ' each' → logprob: -4.332029819488525
    4. 'each' → logprob: -4.332029819488525
    5. ' ' → logprob: -4.457029819488525
    6. ' room' → logprob: -5.457029819488525
    7. 'them' → logprob: -6.207029819488525
    8. 'node' → logprob: -6.457029819488525
    9. ' them' → logprob: -6.457029819488525
    10. ' node' → logprob: -6.707029819488525

Token 239: ' room' (ID: 3435)
  Prédit: 'room'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'room' → logprob: -0.6921600699424744
    2. 'node' → logprob: -1.8171601295471191
    3. 'point' → logprob: -2.567160129547119
    4. ' room' → logprob: -2.567160129547119
    5. '0' → logprob: -3.317160129547119
    6. ' node' → logprob: -3.317160129547119
    7. ' line' → logprob: -3.817160129547119
    8. ' point' → logprob: -4.192160129547119
    9. '.' → logprob: -4.567160129547119
    10. ')' → logprob: -4.817160129547119

Token 240: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.26802778244018555
    2. 'dist' → logprob: -1.5180277824401855
    3. 'import' → logprob: -4.2680277824401855
    4. 'def' → logprob: -6.5180277824401855
    5. 'distance' → logprob: -8.893028259277344
    6. '
' → logprob: -9.018028259277344
    7. ' from' → logprob: -9.518028259277344
    8. '   ' → logprob: -10.018028259277344
    9. '#' → logprob: -10.393028259277344
    10. 'INF' → logprob: -10.643028259277344

Token 241: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.30826979875564575
    2. 'dist' → logprob: -1.933269739151001
    3. '   ' → logprob: -2.183269739151001
    4. 'import' → logprob: -5.18326997756958
    5. '
' → logprob: -7.18326997756958
    6. 'distance' → logprob: -7.43326997756958
    7. ' from' → logprob: -7.68326997756958
    8. '    
' → logprob: -8.808269500732422
    9. 'def' → logprob: -8.933269500732422
    10. 'for' → logprob: -9.558269500732422

Token 242: ' def' (ID: 1056)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5444796085357666
    2. 'dist' → logprob: -0.9194796085357666
    3. 'import' → logprob: -4.4194793701171875
    4. 'def' (adapté à ' def') → logprob: -4.7944793701171875
    5. 'distance' → logprob: -7.6694793701171875
    6. 'for' → logprob: -9.419479370117188
    7. '   ' → logprob: -9.544479370117188
    8. '#' → logprob: -9.669479370117188
    9. '
' → logprob: -10.419479370117188
    10. 'INF' → logprob: -11.169479370117188

Token 243: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.01984337531030178
    2. ' zero' → logprob: -4.019843578338623
    3. 'b' → logprob: -7.144843578338623
    4. '_zero' → logprob: -7.394843578338623
    5. '_' → logprob: -8.394843101501465
    6. 'd' → logprob: -10.894843101501465
    7. '0' → logprob: -10.894843101501465
    8. 'zer' → logprob: -11.644843101501465
    9. 'Zero' → logprob: -11.769843101501465
    10. ' bfs' → logprob: -12.894843101501465

Token 244: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.004953731782734394
    2. '_' → logprob: -5.629953861236572
    3. 'one' → logprob: -7.379953861236572
    4. '-' → logprob: -8.379953384399414
    5. 'One' → logprob: -8.504953384399414
    6. '1' → logprob: -8.879953384399414
    7. '-one' → logprob: -9.379953384399414
    8. '
' → logprob: -10.879953384399414
    9. ' -' → logprob: -11.254953384399414
    10. ' one' → logprob: -11.504953384399414

Token 245: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00020830852736253291
    2. '_B' → logprob: -8.875207901000977
    3. '_' → logprob: -9.625207901000977
    4. 'b' → logprob: -14.125207901000977
    5. ' bfs' → logprob: -14.250207901000977
    6. 'B' → logprob: -14.375207901000977
    7. ' _' → logprob: -15.500207901000977
    8. ' BFS' → logprob: -16.375207901000977
    9. '```' → logprob: -17.250207901000977
    10. '_d' → logprob: -17.250207901000977

Token 246: 'fs' (ID: 6469)
  Prédit: 'FS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FS' → logprob: -0.0028060602489858866
    2. 'fs' → logprob: -5.877806186676025
    3. 'F' → logprob: -14.502805709838867
    4. ' FS' → logprob: -14.877805709838867
    5. '_fs' → logprob: -15.377805709838867
    6. 'S' → logprob: -16.627805709838867
    7. 'SF' → logprob: -17.127805709838867
    8. '```' → logprob: -17.502805709838867
    9. ' fs' → logprob: -17.877805709838867
    10. '_FS' → logprob: -17.877805709838867

Token 247: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.053418297320604324
    2. '(graph' → logprob: -3.1784183979034424
    3. '(src' → logprob: -5.678418159484863
    4. '(node' → logprob: -5.803418159484863
    5. '(s' → logprob: -6.428418159484863
    6. '(source' → logprob: -6.803418159484863
    7. '(queue' → logprob: -7.803418159484863
    8. '(adj' → logprob: -8.178418159484863
    9. '(u' → logprob: -8.553418159484863
    10. '(' → logprob: -9.678418159484863

Token 248: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.639651358127594
    2. '):' → logprob: -0.764651358127594
    3. ')' → logprob: -5.514651298522949
    4. ',start' → logprob: -6.264651298522949
    5. '):
' → logprob: -7.764651298522949
    6. '(start' → logprob: -8.13965129852295
    7. ',node' → logprob: -9.38965129852295
    8. '   ' → logprob: -9.51465129852295
    9. '):
' → logprob: -9.63965129852295
    10. ',n' → logprob: -10.63965129852295

Token 249: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016632823273539543
    2. 'from' → logprob: -4.641633033752441
    3. ' from' → logprob: -5.266633033752441
    4. '	from' → logprob: -7.391633033752441
    5. ' deque' → logprob: -8.266633033752441
    6. 'deque' → logprob: -8.391633033752441
    7. ' dist' → logprob: -8.641633033752441
    8. 'dist' → logprob: -9.141633033752441
    9. 'import' → logprob: -9.391633033752441
    10. '	dist' → logprob: -9.516633033752441

Token 250: ' dist' (ID: 3601)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.015566782094538212
    2. '   ' → logprob: -4.765566825866699
    3. 'dist' (adapté à ' dist') → logprob: -5.265566825866699
    4. ' from' → logprob: -6.515566825866699
    5. '	from' → logprob: -8.8905668258667
    6. '       ' → logprob: -9.6405668258667
    7. 'deque' → logprob: -10.1405668258667
    8. '	dist' → logprob: -11.0155668258667
    9. ' dist' → logprob: -11.1405668258667
    10. 'import' → logprob: -12.8905668258667

Token 251: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7664763927459717
    2. '=' → logprob: -1.0164763927459717
    3. '=[' → logprob: -1.7664763927459717
    4. '=[]' → logprob: -6.016476631164551
    5. '={}' → logprob: -10.51647663116455
    6. '[' → logprob: -10.64147663116455
    7. '[start' → logprob: -11.14147663116455
    8. '={' → logprob: -11.89147663116455
    9. '=[]
' → logprob: -11.89147663116455
    10. ' =[' → logprob: -12.01647663116455

Token 252: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0025309526827186346
    2. '10' → logprob: -6.002531051635742
    3. 'int' → logprob: -10.002531051635742
    4. '-' → logprob: -11.877531051635742
    5. ' float' → logprob: -13.377531051635742
    6. '1' → logprob: -14.377531051635742
    7. '100' → logprob: -15.002531051635742
    8. 'sys' → logprob: -15.127531051635742
    9. '(float' → logprob: -15.627531051635742
    10. '[' → logprob: -16.377531051635742

Token 253: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00021212305000517517
    2. ''in' → logprob: -8.500211715698242
    3. '("' → logprob: -12.625211715698242
    4. ''' → logprob: -13.125211715698242
    5. ''s' → logprob: -14.000211715698242
    6. 'inf' → logprob: -14.375211715698242
    7. '(in' → logprob: -14.625211715698242
    8. '(' → logprob: -14.750211715698242
    9. '('-' → logprob: -15.500211715698242
    10. ''inc' → logprob: -16.250211715698242

Token 254: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -6.704273118884885e-07
    2. ''' → logprob: -14.750000953674316
    3. ''in' → logprob: -16.0
    4. 'in' → logprob: -17.125
    5. ' inf' → logprob: -17.25
    6. '_inf' → logprob: -17.5
    7. 'INF' → logprob: -18.0
    8. '-inf' → logprob: -18.25
    9. 'Inf' → logprob: -18.875
    10. '.inf' → logprob: -19.0

Token 255: '')' (ID: 1542)
  Prédit: '')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.003405136289075017
    2. ')]' → logprob: -5.8784050941467285
    3. ']' → logprob: -8.128405570983887
    4. '')' → logprob: -8.378405570983887
    5. ''),' → logprob: -10.628405570983887
    6. ')' → logprob: -11.128405570983887
    7. ' '' → logprob: -11.503405570983887
    8. '")]' → logprob: -11.628405570983887
    9. '')]
' → logprob: -11.878405570983887
    10. '']' → logprob: -12.878405570983887

Token 256: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1487429141998291
    2. ']*' → logprob: -2.523742914199829
    3. ' for' → logprob: -3.523742914199829
    4. 'for' → logprob: -3.648742914199829
    5. ']*(' → logprob: -6.27374267578125
    6. ')' → logprob: -8.27374267578125
    7. ')]' → logprob: -8.64874267578125
    8. '   ' → logprob: -9.14874267578125
    9. ']+' → logprob: -10.14874267578125
    10. ' ]' → logprob: -10.64874267578125

Token 257: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5048530030981055e-06
    2. 'len' → logprob: -13.750001907348633
    3. ' n' → logprob: -14.875001907348633
    4. '(n' → logprob: -17.500001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '	n' → logprob: -19.500001907348633
    7. ')n' → logprob: -20.500001907348633
    8. '
' → logprob: -20.750001907348633
    9. '(len' → logprob: -22.125001907348633
    10. '[n' → logprob: -22.500001907348633

Token 258: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8312570318812504e-05
    2. ' +' → logprob: -11.000018119812012
    3. '+
' → logprob: -13.625018119812012
    4. '+n' → logprob: -15.250018119812012
    5. '
' → logprob: -17.375019073486328
    6. '1' → logprob: -17.500019073486328
    7. ')+' → logprob: -17.625019073486328
    8. '   ' → logprob: -17.625019073486328
    9. '＋' → logprob: -18.000019073486328
    10. '```' → logprob: -18.000019073486328

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. ' ' → logprob: -11.000020027160645
    3. '+' → logprob: -13.375020027160645
    4. '   ' → logprob: -13.875020027160645
    5. '
' → logprob: -15.375020027160645
    6. '```' → logprob: -15.750020027160645
    7. ')' → logprob: -16.31252098083496
    8. '2' → logprob: -16.50002098083496
    9. '       ' → logprob: -17.06252098083496
    10. '     ' → logprob: -17.68752098083496

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03806433081626892
    2. ')
' → logprob: -3.2880642414093018
    3. ')
' → logprob: -11.038064002990723
    4. '       ' → logprob: -12.413064002990723
    5. ')

' → logprob: -14.413064002990723
    6. '   ' → logprob: -14.663064002990723
    7. '
' → logprob: -15.288064002990723
    8. '),' → logprob: -15.413064002990723
    9. ' )' → logprob: -15.663064002990723
    10. ')set' → logprob: -16.16306495666504

Token 261: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.40904632210731506
    2. ' dist' → logprob: -1.4090462923049927
    3. '       ' → logprob: -2.4090464115142822
    4. '	dist' → logprob: -6.784046173095703
    5. '   ' → logprob: -8.659046173095703
    6. ')' → logprob: -10.409046173095703
    7. '.dist' → logprob: -11.034046173095703
    8. '	' → logprob: -11.159046173095703
    9. '(dist' → logprob: -11.284046173095703
    10. '    ' → logprob: -11.409046173095703

Token 262: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.018165044486522675
    2. 'from' → logprob: -4.018165111541748
    3. '       ' → logprob: -12.01816463470459
    4. 'deque' → logprob: -12.14316463470459
    5. '   ' → logprob: -13.01816463470459
    6. 'dq' → logprob: -14.01816463470459
    7. ' dist' → logprob: -14.76816463470459
    8. 'import' → logprob: -15.76816463470459
    9. ' from' → logprob: -16.518165588378906
    10. '```' → logprob: -17.018165588378906

Token 263: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -1.9743012671824545e-05
    2. '[' → logprob: -12.250020027160645
    3. 'start' → logprob: -12.250020027160645
    4. '=start' → logprob: -12.625020027160645
    5. '=' → logprob: -13.125020027160645
    6. '[end' → logprob: -14.000020027160645
    7. ')[' → logprob: -14.125020027160645
    8. '```' → logprob: -14.125020027160645
    9. ')' → logprob: -14.500020027160645
    10. '][' → logprob: -15.250020027160645

Token 264: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.03460320457816124
    2. ']' → logprob: -3.9096031188964844
    3. ')=' → logprob: -4.409603118896484
    4. '=' → logprob: -6.784603118896484
    5. ')' → logprob: -7.409603118896484
    6. '[' → logprob: -10.659603118896484
    7. ']={' → logprob: -11.409603118896484
    8. ']=-' → logprob: -11.784603118896484
    9. ' ]' → logprob: -12.284603118896484
    10. ']=(' → logprob: -12.284603118896484

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '۰' → logprob: -21.5
    4. '０' → logprob: -23.375
    5. '   ' → logprob: -24.0
    6. '000' → logprob: -25.125
    7. '00' → logprob: -25.125
    8. '০' → logprob: -25.375
    9. '```' → logprob: -25.875
    10. '٠' → logprob: -26.5

Token 266: '
' (ID: 198)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.632287323474884
    2. 'from' → logprob: -1.2572872638702393
    3. '       ' → logprob: -2.2572872638702393
    4. '
' → logprob: -2.8822872638702393
    5. ' from' → logprob: -4.007287502288818
    6. '   ' → logprob: -6.007287502288818
    7. ' deque' → logprob: -7.257287502288818
    8. ',' → logprob: -7.382287502288818
    9. 'queue' → logprob: -7.507287502288818
    10. 'Deque' → logprob: -8.13228702545166

Token 267: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2671931982040405
    2. 'deque' → logprob: -2.01719331741333
    3. ' from' → logprob: -3.01719331741333
    4. '       ' → logprob: -3.01719331741333
    5. '   ' → logprob: -6.26719331741333
    6. '	from' → logprob: -7.14219331741333
    7. 'queue' → logprob: -8.267192840576172
    8. ' deque' → logprob: -8.392192840576172
    9. 'dq' → logprob: -9.142192840576172
    10. '
' → logprob: -9.392192840576172

Token 268: ' dq' (ID: 164235)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0007493520388379693
    2. 'dq' (adapté à ' dq') → logprob: -7.750749588012695
    3. 'deque' → logprob: -8.250749588012695
    4. 'q' → logprob: -10.250749588012695
    5. ' from' → logprob: -12.125749588012695
    6. '   ' → logprob: -12.250749588012695
    7. 'queue' → logprob: -12.250749588012695
    8. 'de' → logprob: -12.375749588012695
    9. '       ' → logprob: -13.250749588012695
    10. 'que' → logprob: -14.375749588012695

Token 269: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054977189749479294
    2. ' =' → logprob: -2.9299771785736084
    3. '.append' → logprob: -10.054977416992188
    4. 'from' → logprob: -10.804977416992188
    5. '=d' → logprob: -11.929977416992188
    6. 'deque' → logprob: -12.054977416992188
    7. '=[]' → logprob: -12.429977416992188
    8. 'import' → logprob: -13.179977416992188
    9. '=torch' → logprob: -13.304977416992188
    10. ' from' → logprob: -13.804977416992188

Token 270: '       ' (ID: 309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6792815923690796
    2. '       ' → logprob: -1.0542815923690796
    3. 'heap' → logprob: -2.679281711578369
    4. 'from' → logprob: -3.304281711578369
    5. 'dq' → logprob: -3.679281711578369
    6. 'deque' → logprob: -5.804281711578369
    7. '   ' → logprob: -5.929281711578369
    8. '(heap' → logprob: -6.304281711578369
    9. ' from' → logprob: -6.929281711578369
    10. '0' → logprob: -7.054281711578369

Token 271: ' heap' (ID: 37237)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9593900442123413
    2. 'from' → logprob: -1.3343900442123413
    3. 'heap' (adapté à ' heap') → logprob: -1.3343900442123413
    4. 'dq' → logprob: -2.584390163421631
    5. '0' → logprob: -5.459390163421631
    6. 'deque' → logprob: -5.459390163421631
    7. 'd' → logprob: -6.084390163421631
    8. 'while' → logprob: -7.209390163421631
    9. '(heap' → logprob: -7.584390163421631
    10. ' from' → logprob: -7.709390163421631

Token 272: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.857719275401905e-05
    2. 'dq' → logprob: -11.375038146972656
    3. 'heap' → logprob: -11.625038146972656
    4. 'push' → logprob: -12.250038146972656
    5. 'import' → logprob: -12.875038146972656
    6. '.append' → logprob: -13.125038146972656
    7. '```' → logprob: -13.250038146972656
    8. '[' → logprob: -13.625038146972656
    9. 'he' → logprob: -14.000038146972656
    10. '=[]' → logprob: -14.250038146972656

Token 273: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -3.690834273584187e-05
    2. '.heap' → logprob: -10.25003719329834
    3. '.' → logprob: -13.75003719329834
    4. 'he' → logprob: -15.12503719329834
    5. 'q' → logprob: -17.750036239624023
    6. '```' → logprob: -17.875036239624023
    7. ' he' → logprob: -18.000036239624023
    8. 'heap' → logprob: -18.375036239624023
    9. '.h' → logprob: -18.875036239624023
    10. '.He' → logprob: -19.500036239624023

Token 274: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.301394023466855e-05
    2. 'pp' → logprob: -9.875062942504883
    3. 'ap' → logprob: -12.500062942504883
    4. 'push' → logprob: -12.750062942504883
    5. 'q' → logprob: -12.875062942504883
    6. '```' → logprob: -13.750062942504883
    7. 'append' → logprob: -14.375062942504883
    8. 'replace' → logprob: -15.625062942504883
    9. 'qp' → logprob: -15.875062942504883
    10. 'p' → logprob: -16.250062942504883

Token 275: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.171792671084404
    2. 'push' → logprob: -2.17179274559021
    3. 'app' → logprob: -3.92179274559021
    4. 'pp' → logprob: -4.671792507171631
    5. 'p' → logprob: -4.796792507171631
    6. 'q' → logprob: -5.671792507171631
    7. 'u' → logprob: -6.796792507171631
    8. 'nd' → logprob: -8.296792984008789
    9. '```' → logprob: -8.421792984008789
    10. 'op' → logprob: -8.796792984008789

Token 276: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.250000953674316
    3. '((' → logprob: -14.875000953674316
    4. ' (' → logprob: -16.625001907348633
    5. 'import' → logprob: -17.625001907348633
    6. 'dq' → logprob: -17.875001907348633
    7. '(q' → logprob: -18.125001907348633
    8. '(
' → logprob: -20.500001907348633
    9. ',d' → logprob: -20.875001907348633
    10. '[d' → logprob: -21.000001907348633

Token 277: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.265633419388905e-05
    2. 'dq' → logprob: -10.250062942504883
    3. '(q' → logprob: -11.000062942504883
    4. '(d' → logprob: -12.000062942504883
    5. '(' → logprob: -14.125062942504883
    6. '[q' → logprob: -14.375062942504883
    7. 'Q' → logprob: -14.625062942504883
    8. 'd' → logprob: -15.375062942504883
    9. 'vq' → logprob: -15.625062942504883
    10. '	q' → logprob: -15.750062942504883

Token 278: ',(' (ID: 27243)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3495423495769501
    2. '((' → logprob: -1.2245423793792725
    3. ')' → logprob: -8.099542617797852
    4. '(d' → logprob: -8.099542617797852
    5. ' (' → logprob: -8.599542617797852
    6. ',(' → logprob: -9.474542617797852
    7. '(dist' → logprob: -9.849542617797852
    8. ',' → logprob: -10.349542617797852
    9. ')(' → logprob: -10.474542617797852
    10. '((-' → logprob: -10.474542617797852

Token 279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011803467059507966
    2. '(' → logprob: -6.751180171966553
    3. 'dist' → logprob: -12.126180648803711
    4. '(dist' → logprob: -13.001180648803711
    5. ' ' → logprob: -13.751180648803711
    6. ')' → logprob: -14.251180648803711
    7. ' (' → logprob: -15.751180648803711
    8. '
' → logprob: -16.12618064880371
    9. '   ' → logprob: -17.00118064880371
    10. '```' → logprob: -17.12618064880371

Token 280: ',start' (ID: 121128)
  Prédit: ',start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',start' → logprob: -0.5235802531242371
    2. ',' → logprob: -0.8985802531242371
    3. 'start' → logprob: -8.148580551147461
    4. ',n' → logprob: -9.648580551147461
    5. ' ,' → logprob: -10.898580551147461
    6. ')' → logprob: -11.398580551147461
    7. ',(' → logprob: -11.398580551147461
    8. '[start' → logprob: -11.398580551147461
    9. ',[' → logprob: -11.773580551147461
    10. ',d' → logprob: -11.898580551147461

Token 281: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47436293959617615
    2. ')' → logprob: -0.9743629693984985
    3. '))
' → logprob: -8.724363327026367
    4. ')
' → logprob: -9.099363327026367
    5. ')))' → logprob: -11.724363327026367
    6. '));' → logprob: -14.349363327026367
    7. '       ' → logprob: -14.474363327026367
    8. '))

' → logprob: -15.099363327026367
    9. '),' → logprob: -15.224363327026367
    10. '   ' → logprob: -15.474363327026367

Token 282: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.015611383132636547
    2. '   ' → logprob: -4.265611171722412
    3. ' while' → logprob: -6.890611171722412
    4. '	while' → logprob: -7.765611171722412
    5. 'While' → logprob: -13.26561164855957
    6. '```' → logprob: -13.51561164855957
    7. '       ' → logprob: -13.89061164855957
    8. '<|end|>' → logprob: -14.14061164855957
    9. ')' → logprob: -15.14061164855957
    10. '
' → logprob: -15.64061164855957

Token 283: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00013738969573751092
    2. '   ' → logprob: -9.375137329101562
    3. ' while' → logprob: -10.250137329101562
    4. '	while' → logprob: -11.000137329101562
    5. 'While' → logprob: -14.750137329101562
    6. 'from' → logprob: -16.750137329101562
    7. '```' → logprob: -17.000137329101562
    8. ')' → logprob: -17.125137329101562
    9. '       ' → logprob: -17.250137329101562
    10. 'import' → logprob: -18.375137329101562

Token 284: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -9.078839502763003e-05
    2. 'len' → logprob: -9.750090599060059
    3. ' dq' → logprob: -10.375090599060059
    4. 'd' → logprob: -14.250090599060059
    5. 'True' → logprob: -15.375090599060059
    6. '   ' → logprob: -15.750090599060059
    7. '
' → logprob: -16.000091552734375
    8. '```' → logprob: -17.375091552734375
    9. 'dj' → logprob: -18.000091552734375
    10. 'q' → logprob: -18.000091552734375

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03929652273654938
    2. ':
' → logprob: -3.4142966270446777
    3. ' and' → logprob: -6.539296627044678
    4. 'and' → logprob: -6.789296627044678
    5. '):' → logprob: -7.039296627044678
    6. '[' → logprob: -7.289296627044678
    7. '.pop' → logprob: -7.539296627044678
    8. '<|end|>' → logprob: -7.789296627044678
    9. '):
' → logprob: -8.91429615020752
    10. '!=' → logprob: -9.66429615020752

Token 286: '           ' (ID: 352)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.04486946016550064
    2. 'dist' → logprob: -4.044869422912598
    3. '       ' → logprob: -4.544869422912598
    4. 'c' → logprob: -4.669869422912598
    5. 'd' → logprob: -5.794869422912598
    6. ',' → logprob: -6.919869422912598
    7. '(cost' → logprob: -7.044869422912598
    8. ',c' → logprob: -8.544869422912598
    9. '_,' → logprob: -8.544869422912598
    10. '           ' → logprob: -8.794869422912598

Token 287: ' c' (ID: 274)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0487184077501297
    2. 'dist' → logprob: -3.1737184524536133
    3. 'd' → logprob: -5.423718452453613
    4. 'c' (adapté à ' c') → logprob: -7.173718452453613
    5. 'cur' → logprob: -8.548718452453613
    6. '   ' → logprob: -9.298718452453613
    7. 'curr' → logprob: -9.798718452453613
    8. 'cnt' → logprob: -9.923718452453613
    9. 'cd' → logprob: -10.548718452453613
    10. 'du' → logprob: -10.673718452453613

Token 288: ',u' (ID: 80698)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.68160480260849
    2. ',' → logprob: -0.80660480260849
    3. ',c' → logprob: -3.1816048622131348
    4. ',d' → logprob: -6.181604862213135
    5. 'cost' → logprob: -6.431604862213135
    6. ',u' → logprob: -6.806604862213135
    7. 'ur' → logprob: -7.431604862213135
    8. ',current' → logprob: -8.431604385375977
    9. ' ,' → logprob: -8.806604385375977
    10. '_cost' → logprob: -9.306604385375977

Token 289: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008292826823890209
    2. '=c' → logprob: -7.625829219818115
    3. ' =' → logprob: -8.125829696655273
    4. ',c' → logprob: -11.750829696655273
    5. '=h' → logprob: -11.750829696655273
    6. '=sys' → logprob: -12.000829696655273
    7. '=
' → logprob: -12.125829696655273
    8. '   ' → logprob: -12.875829696655273
    9. '=q' → logprob: -13.125829696655273
    10. '=d' → logprob: -13.375829696655273

Token 290: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -2.451116051815916e-05
    2. ' heap' → logprob: -10.625024795532227
    3. 'he' → logprob: -15.750024795532227
    4. '(heap' → logprob: -18.000024795532227
    5. '   ' → logprob: -18.875024795532227
    6. '.heap' → logprob: -20.000024795532227
    7. 'queue' → logprob: -20.875024795532227
    8. 'heat' → logprob: -21.000024795532227
    9. 'hq' → logprob: -21.125024795532227
    10. '```' → logprob: -21.125024795532227

Token 291: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1472419600977446e-06
    2. 'p' → logprob: -14.000000953674316
    3. 'app' → logprob: -15.750000953674316
    4. 'replace' → logprob: -16.625001907348633
    5. '[' → logprob: -17.375001907348633
    6. 'pp' → logprob: -18.250001907348633
    7. 'h' → logprob: -18.250001907348633
    8. 'j' → logprob: -18.375001907348633
    9. 'op' → logprob: -18.500001907348633
    10. 'qq' → logprob: -18.750001907348633

Token 292: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.20260703563690186
    2. 'q' → logprob: -1.7026070356369019
    3. 'he' → logprob: -6.827607154846191
    4. 'app' → logprob: -9.952607154846191
    5. 'op' → logprob: -10.577607154846191
    6. '[' → logprob: -11.202607154846191
    7. '.heap' → logprob: -11.702607154846191
    8. ' he' → logprob: -12.577607154846191
    9. 'hq' → logprob: -12.952607154846191
    10. '.pop' → logprob: -13.702607154846191

Token 293: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.149051427608356e-05
    2. 'q' → logprob: -10.250081062316895
    3. 'ap' → logprob: -10.375081062316895
    4. '[' → logprob: -12.125081062316895
    5. 'pp' → logprob: -12.375081062316895
    6. 'appe' → logprob: -13.625081062316895
    7. 'qp' → logprob: -13.875081062316895
    8. '```' → logprob: -14.125081062316895
    9. 'a' → logprob: -15.000081062316895
    10. 'p' → logprob: -15.375081062316895

Token 294: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.35070323944091797
    2. 'app' → logprob: -1.350703239440918
    3. 'pp' → logprob: -3.975703239440918
    4. 'q' → logprob: -4.725703239440918
    5. 'p' → logprob: -5.100703239440918
    6. 'ap' → logprob: -6.850703239440918
    7. 'pop' → logprob: -7.100703239440918
    8. 'ush' → logprob: -7.100703239440918
    9. '   ' → logprob: -9.600703239440918
    10. '       ' → logprob: -9.600703239440918

Token 295: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -9.610702363715973e-06
    2. 'dq' → logprob: -12.125009536743164
    3. '(q' → logprob: -12.750009536743164
    4. '(' → logprob: -14.375009536743164
    5. '(
' → logprob: -15.250009536743164
    6. 'd' → logprob: -15.375009536743164
    7. ')d' → logprob: -15.750009536743164
    8. '```' → logprob: -17.125009536743164
    9. ' (' → logprob: -18.125009536743164
    10. ',d' → logprob: -18.875009536743164

Token 296: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.749814019713085e-06
    2. '(q' → logprob: -13.125006675720215
    3. ')' → logprob: -13.625006675720215
    4. 'dq' → logprob: -13.625006675720215
    5. '
' → logprob: -14.625006675720215
    6. ')
' → logprob: -15.375006675720215
    7. ' q' → logprob: -15.500006675720215
    8. 'cq' → logprob: -16.25000762939453
    9. '_q' → logprob: -16.37500762939453
    10. 'pq' → logprob: -16.37500762939453

Token 297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931748390197754
    2. ')
' → logprob: -0.6931748390197754
    3. '           ' → logprob: -11.818174362182617
    4. ')
' → logprob: -12.318174362182617
    5. ')

' → logprob: -12.818174362182617
    6. '       ' → logprob: -12.818174362182617
    7. '   ' → logprob: -13.568174362182617
    8. ');' → logprob: -13.568174362182617
    9. ')c' → logprob: -13.943174362182617
    10. ' )
' → logprob: -14.193174362182617

Token 298: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002536782529205084
    2. 'if' → logprob: -6.877536773681641
    3. '       ' → logprob: -7.502536773681641
    4. 'for' → logprob: -7.627536773681641
    5. '   ' → logprob: -9.00253677368164
    6. ' for' → logprob: -9.50253677368164
    7. '            
' → logprob: -9.50253677368164
    8. ' if' → logprob: -9.50253677368164
    9. '```' → logprob: -10.37753677368164
    10. '	       ' → logprob: -10.62753677368164

Token 299: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48208925127983093
    2. 'if' (adapté à ' if') → logprob: -0.9820892810821533
    3. '           ' → logprob: -5.607089042663574
    4. '   ' → logprob: -5.857089042663574
    5. '       ' → logprob: -6.982089042663574
    6. ' for' → logprob: -7.857089042663574
    7. ' if' → logprob: -8.982089042663574
    8. '```' → logprob: -13.232089042663574
    9. '               ' → logprob: -13.857089042663574
    10. '	for' → logprob: -13.857089042663574

Token 300: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10254880040884018
    2. ' dist' → logprob: -2.727548837661743
    3. 'c' → logprob: -3.477548837661743
    4. ' c' → logprob: -6.727548599243164
    5. '	dist' → logprob: -12.977548599243164
    6. '(dist' → logprob: -13.227548599243164
    7. '   ' → logprob: -14.727548599243164
    8. 'd' → logprob: -14.727548599243164
    9. '	c' → logprob: -14.977548599243164
    10. ' ' → logprob: -15.727548599243164

Token 301: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.023247340694069862
    2. '[c' → logprob: -3.773247241973877
    3. '[' → logprob: -14.273247718811035
    4. 'u' → logprob: -14.523247718811035
    5. ' [' → logprob: -14.898247718811035
    6. '[v' → logprob: -15.648247718811035
    7. 'c' → logprob: -16.27324676513672
    8. '   ' → logprob: -17.89824676513672
    9. '```' → logprob: -18.14824676513672
    10. '[
' → logprob: -19.02324676513672

Token 302: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.1527903079986572
    2. ']' → logprob: -1.6527903079986572
    3. ']<' → logprob: -1.7777903079986572
    4. '<c' → logprob: -1.9027903079986572
    5. '<u' → logprob: -2.5277903079986572
    6. '[u' → logprob: -3.2777903079986572
    7. ' <' → logprob: -3.6527903079986572
    8. '[c' → logprob: -4.277790069580078
    9. '[' → logprob: -4.527790069580078
    10. '<v' → logprob: -6.527790069580078

Token 303: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.611323624383658e-05
    2. ' c' → logprob: -9.625065803527832
    3. '	c' → logprob: -18.75006675720215
    4. ')c' → logprob: -19.50006675720215
    5. '   ' → logprob: -21.00006675720215
    6. '<c' → logprob: -21.12506675720215
    7. '```' → logprob: -21.25006675720215
    8. '
' → logprob: -21.87506675720215
    9. ' ' → logprob: -22.00006675720215
    10. 'cation' → logprob: -22.00006675720215

Token 304: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34227436780929565
    2. ':
' → logprob: -1.7172744274139404
    3. '           ' → logprob: -2.4672744274139404
    4. 'continue' → logprob: -4.342274188995361
    5. '       ' → logprob: -4.467274188995361
    6. ' continue' → logprob: -7.717274188995361
    7. '               ' → logprob: -8.21727466583252
    8. '	continue' → logprob: -9.21727466583252
    9. '_continue' → logprob: -10.21727466583252
    10. '   ' → logprob: -10.34227466583252

Token 305: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38274475932121277
    2. 'continue' → logprob: -1.8827447891235352
    3. '               ' → logprob: -2.632744789123535
    4. '       ' → logprob: -2.632744789123535
    5. ' continue' → logprob: -4.007744789123535
    6. '	continue' → logprob: -5.882744789123535
    7. '	       ' → logprob: -7.757744789123535
    8. '_continue' → logprob: -7.882744789123535
    9. '   ' → logprob: -9.257744789123535
    10. '		' → logprob: -9.632744789123535

Token 306: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.13873299956321716
    2. ' continue' → logprob: -2.63873291015625
    3. '           ' → logprob: -2.88873291015625
    4. '	continue' → logprob: -6.13873291015625
    5. '       ' → logprob: -8.76373291015625
    6. '               ' → logprob: -9.88873291015625
    7. '		' → logprob: -10.26373291015625
    8. '	       ' → logprob: -11.01373291015625
    9. '_continue' → logprob: -11.38873291015625
    10. '   ' → logprob: -11.51373291015625

Token 307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3158343434333801
    2. '           ' → logprob: -2.4408342838287354
    3. ' for' → logprob: -2.5658342838287354
    4. '   ' → logprob: -2.9408342838287354
    5. 'for' → logprob: -2.9408342838287354
    6. '	for' → logprob: -8.065834045410156
    7. ')' → logprob: -8.440834045410156
    8. '<|end|>' → logprob: -8.690834045410156
    9. '```' → logprob: -8.815834045410156
    10. '	   ' → logprob: -9.565834045410156

Token 308: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3991657495498657
    2. '   ' → logprob: -1.5241657495498657
    3. '           ' → logprob: -3.149165630340576
    4. ' for' → logprob: -3.149165630340576
    5. 'for' → logprob: -3.774165630340576
    6. '<|end|>' → logprob: -7.149165630340576
    7. '	for' → logprob: -7.399165630340576
    8. '    ' → logprob: -7.899165630340576
    9. '  ' → logprob: -8.899166107177734
    10. '        
' → logprob: -9.274166107177734

Token 309: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0076828161254525185
    2. ' for' → logprob: -5.132682800292969
    3. '   ' → logprob: -6.632682800292969
    4. '           ' → logprob: -8.257682800292969
    5. '       ' → logprob: -8.882682800292969
    6. '	for' → logprob: -10.882682800292969
    7. 'from' → logprob: -11.257682800292969
    8. 'import' → logprob: -12.632682800292969
    9. ' ' → logprob: -13.632682800292969
    10. '```' → logprob: -13.632682800292969

Token 310: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00034476007567718625
    2. '(v' → logprob: -8.000345230102539
    3. 'w' → logprob: -12.375345230102539
    4. 'cost' → logprob: -13.250345230102539
    5. ' v' → logprob: -13.750345230102539
    6. 'vv' → logprob: -13.875345230102539
    7. 'nv' → logprob: -15.250345230102539
    8. '   ' → logprob: -15.500345230102539
    9. 'vx' → logprob: -15.875345230102539
    10. 'vw' → logprob: -16.00034523010254

Token 311: ',w' (ID: 49598)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.583175778388977
    2. ',w' → logprob: -0.833175778388977
    3. ',' → logprob: -4.9581756591796875
    4. ',u' → logprob: -10.083175659179688
    5. ',l' → logprob: -10.333175659179688
    6. ',d' → logprob: -10.458175659179688
    7. ',_' → logprob: -11.083175659179688
    8. ',n' → logprob: -11.458175659179688
    9. ' ,' → logprob: -11.458175659179688
    10. '_,' → logprob: -11.458175659179688

Token 312: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2532060742378235
    2. ' in' → logprob: -1.5032060146331787
    3. ')' → logprob: -6.878206253051758
    4. ',v' → logprob: -9.128206253051758
    5. ',' → logprob: -10.503206253051758
    6. 'v' → logprob: -11.003206253051758
    7. ',c' → logprob: -11.003206253051758
    8. ',in' → logprob: -11.253206253051758
    9. '_in' → logprob: -11.878206253051758
    10. '	in' → logprob: -12.003206253051758

Token 313: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0007102862582542002
    2. ' adj' → logprob: -7.250710487365723
    3. '(adj' → logprob: -14.875710487365723
    4. ' ' → logprob: -18.875709533691406
    5. '   ' → logprob: -19.000709533691406
    6. 'ad' → logprob: -19.125709533691406
    7. '    ' → logprob: -21.000709533691406
    8. '  ' → logprob: -21.125709533691406
    9. '
' → logprob: -21.375709533691406
    10. '[' → logprob: -21.375709533691406

Token 314: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.0206720617134124e-05
    2. 'u' → logprob: -11.87501049041748
    3. '(u' → logprob: -14.00001049041748
    4. '[v' → logprob: -14.12501049041748
    5. '[' → logprob: -14.62501049041748
    6. '   ' → logprob: -15.00001049041748
    7. '[a' → logprob: -15.50001049041748
    8. ',u' → logprob: -15.75001049041748
    9. '```' → logprob: -16.250009536743164
    10. '][' → logprob: -16.625009536743164

Token 315: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8974230289459229
    2. ']:
' → logprob: -1.1474230289459229
    3. ']:' → logprob: -1.8974230289459229
    4. '):' → logprob: -2.272423028945923
    5. ':' → logprob: -4.522422790527344
    6. ':
' → logprob: -5.272422790527344
    7. '           ' → logprob: -6.147422790527344
    8. '       ' → logprob: -6.272422790527344
    9. ']' → logprob: -7.522422790527344
    10. ']):
' → logprob: -8.022422790527344

Token 316: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01918742246925831
    2. '           ' → logprob: -4.1441874504089355
    3. ',' → logprob: -6.7691874504089355
    4. '       ' → logprob: -7.7691874504089355
    5. '                
' → logprob: -8.144186973571777
    6. ' if' → logprob: -8.644186973571777
    7. '<|end|>' → logprob: -8.894186973571777
    8. '```' → logprob: -9.019186973571777
    9. '            
' → logprob: -9.144186973571777
    10. 'if' → logprob: -9.394186973571777

Token 317: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' (adapté à ' nc') → logprob: -0.8007913827896118
    2. 'if' → logprob: -1.5507913827896118
    3. 'new' → logprob: -2.0507912635803223
    4. 'nd' → logprob: -2.0507912635803223
    5. ' nd' → logprob: -3.5507912635803223
    6. 'nw' → logprob: -4.175791263580322
    7. 'nv' → logprob: -4.550791263580322
    8. '               ' → logprob: -4.925791263580322
    9. 'cost' → logprob: -5.175791263580322
    10. ' if' → logprob: -5.425791263580322

Token 318: '=c' (ID: 43473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010102635249495506
    2. '=c' → logprob: -5.01010274887085
    3. ' =' → logprob: -5.76010274887085
    4. '=
' → logprob: -9.760102272033691
    5. '=v' → logprob: -9.885102272033691
    6. '=n' → logprob: -10.010102272033691
    7. '=w' → logprob: -10.135102272033691
    8. '=d' → logprob: -11.260102272033691
    9. '=int' → logprob: -11.635102272033691
    10. '=u' → logprob: -12.510102272033691

Token 319: '+w' (ID: 155687)
  Prédit: '+w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+w' → logprob: -0.03726586326956749
    2. '+' → logprob: -3.5372657775878906
    3. ' +' → logprob: -4.912265777587891
    4. '+
' → logprob: -9.91226577758789
    5. '+c' → logprob: -10.41226577758789
    6. '+n' → logprob: -10.78726577758789
    7. 'if' → logprob: -12.03726577758789
    8. '+=' → logprob: -12.03726577758789
    9. '+(' → logprob: -12.28726577758789
    10. ' if' → logprob: -12.28726577758789

Token 320: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14398662745952606
    2. 'if' → logprob: -2.393986701965332
    3. ' if' → logprob: -4.018986701965332
    4. '               ' → logprob: -4.143986701965332
    5. '
' → logprob: -5.143986701965332
    6. '           ' → logprob: -6.643986701965332
    7. ';if' → logprob: -7.018986701965332
    8. '       ' → logprob: -8.518986701965332
    9. '                   ' → logprob: -8.643986701965332
    10. 'heap' → logprob: -8.893986701965332

Token 321: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002854328602552414
    2. ' if' → logprob: -6.002854347229004
    3. 'if' → logprob: -8.252854347229004
    4. '       ' → logprob: -10.252854347229004
    5. '           ' → logprob: -10.502854347229004
    6. '<|end|>' → logprob: -11.377854347229004
    7. '	           ' → logprob: -11.752854347229004
    8. '
' → logprob: -11.877854347229004
    9. ',' → logprob: -12.002854347229004
    10. '		       ' → logprob: -12.252854347229004

Token 322: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06914601475000381
    2. ' if' → logprob: -2.819145917892456
    3. '               ' → logprob: -4.944146156311035
    4. '	if' → logprob: -11.569146156311035
    5. 'import' → logprob: -12.569146156311035
    6. '                   ' → logprob: -12.694146156311035
    7. ' ' → logprob: -12.944146156311035
    8. '           ' → logprob: -13.444146156311035
    9. 'If' → logprob: -13.944146156311035
    10. '                
' → logprob: -14.069146156311035

Token 323: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -1.1898937225341797
    2. 'nc' → logprob: -1.1898937225341797
    3. 'dist' → logprob: -1.1898937225341797
    4. ' nc' → logprob: -2.4398937225341797
    5. '_nc' → logprob: -10.68989372253418
    6. '	dist' → logprob: -11.06489372253418
    7. '.nc' → logprob: -11.56489372253418
    8. '(dist' → logprob: -12.31489372253418
    9. '   ' → logprob: -13.12739372253418
    10. ' ' → logprob: -13.50239372253418

Token 324: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.054500666621607e-06
    2. '[u' → logprob: -12.75000286102295
    3. '[n' → logprob: -16.500003814697266
    4. 'v' → logprob: -17.250003814697266
    5. '<v' → logprob: -17.375003814697266
    6. '[' → logprob: -17.875003814697266
    7. '][' → logprob: -18.125003814697266
    8. '[next' → logprob: -18.750003814697266
    9. '[node' → logprob: -19.250003814697266
    10. ' v' → logprob: -19.500003814697266

Token 325: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.004818257410079241
    2. ' >' → logprob: -5.379818439483643
    3. ']>' → logprob: -8.629817962646484
    4. ']' → logprob: -11.379817962646484
    5. '[' → logprob: -13.129817962646484
    6. '[n' → logprob: -13.504817962646484
    7. '>[' → logprob: -13.629817962646484
    8. '>
' → logprob: -14.379817962646484
    9. ')>' → logprob: -14.629817962646484
    10. '>]' → logprob: -15.004817962646484

Token 326: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.0011715330183506012
    2. ' nc' → logprob: -6.751171588897705
    3. '_nc' → logprob: -14.251171112060547
    4. '.nc' → logprob: -14.751171112060547
    5. 'n' → logprob: -16.001171112060547
    6. ' ' → logprob: -16.626171112060547
    7. '   ' → logprob: -16.751171112060547
    8. '
' → logprob: -17.501171112060547
    9. 'nd' → logprob: -17.751171112060547
    10. 'Nc' → logprob: -18.126171112060547

Token 327: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5238871574401855
    2. ':
' → logprob: -0.8988871574401855
    3. '):
' → logprob: -7.7738871574401855
    4. '):' → logprob: -9.023887634277344
    5. '=' → logprob: -9.148887634277344
    6. '           ' → logprob: -10.398887634277344
    7. ')' → logprob: -10.648887634277344
    8. '       ' → logprob: -11.523887634277344
    9. ',' → logprob: -11.648887634277344
    10. ':
' → logprob: -12.148887634277344

Token 328: '                   ' (ID: 699)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06485496461391449
    2. ' dist' → logprob: -2.939854860305786
    3. '                   ' → logprob: -4.689855098724365
    4. '                       ' → logprob: -7.689855098724365
    5. '               ' → logprob: -8.564854621887207
    6. 'nc' → logprob: -10.564854621887207
    7. '```' → logprob: -11.064854621887207
    8. 'nd' → logprob: -11.939854621887207
    9. '(dist' → logprob: -11.939854621887207
    10. '	dist' → logprob: -12.064854621887207

Token 329: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.004926327615976334
    2. ' dist' → logprob: -5.3799262046813965
    3. '                   ' → logprob: -8.754926681518555
    4. '                       ' → logprob: -8.879926681518555
    5. '	dist' → logprob: -12.379926681518555
    6. '               ' → logprob: -13.504926681518555
    7. '                    ' → logprob: -14.004926681518555
    8. 'import' → logprob: -14.754926681518555
    9. '       ' → logprob: -15.129926681518555
    10. '                           ' → logprob: -15.129926681518555

Token 330: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. '=v' → logprob: -16.5
    3. 'v' → logprob: -16.875
    4. '[u' → logprob: -18.125
    5. '=' → logprob: -18.5
    6. '<v' → logprob: -18.875
    7. '[n' → logprob: -19.25
    8. ',v' → logprob: -19.375
    9. '=[' → logprob: -19.5
    10. '[' → logprob: -19.5

Token 331: ']=' (ID: 9539)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.002055692719295621
    2. ']=' → logprob: -6.377055644989014
    3. '=v' → logprob: -8.502056121826172
    4. '[u' → logprob: -10.002056121826172
    5. ']' → logprob: -10.377056121826172
    6. '=' → logprob: -10.502056121826172
    7. 'v' → logprob: -11.002056121826172
    8. ')=' → logprob: -11.377056121826172
    9. '<v' → logprob: -12.752056121826172
    10. '][' → logprob: -13.252056121826172

Token 332: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -3.8889261304575484e-06
    2. ' nc' → logprob: -12.500003814697266
    3. '_nc' → logprob: -17.250003814697266
    4. '.nc' → logprob: -19.625003814697266
    5. 'n' → logprob: -21.000003814697266
    6. 'Nc' → logprob: -22.750003814697266
    7. 'mc' → logprob: -23.875003814697266
    8. '
' → logprob: -23.875003814697266
    9. 'npc' → logprob: -24.000003814697266
    10. '   ' → logprob: -24.750003814697266

Token 333: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008719172910787165
    2. 'heap' → logprob: -7.1258721351623535
    3. ' heap' → logprob: -11.125871658325195
    4. '               ' → logprob: -11.125871658325195
    5. '				' → logprob: -11.500871658325195
    6. ',' → logprob: -11.625871658325195
    7. '                  ' → logprob: -12.000871658325195
    8. '           ' → logprob: -12.500871658325195
    9. '                       ' → logprob: -13.375871658325195
    10. '(heap' → logprob: -13.500871658325195

Token 334: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1802559196949005
    2. 'heap' → logprob: -1.8052558898925781
    3. '               ' → logprob: -8.555255889892578
    4. ' heap' → logprob: -9.680255889892578
    5. 'import' → logprob: -9.930255889892578
    6. 'he' → logprob: -10.180255889892578
    7. '                  ' → logprob: -10.555255889892578
    8. '                       ' → logprob: -10.555255889892578
    9. '				' → logprob: -10.680255889892578
    10. 'if' → logprob: -11.055255889892578

Token 335: ' if' (ID: 538)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.38781505823135376
    2. 'if' (adapté à ' if') → logprob: -1.137814998626709
    3. '(heap' → logprob: -8.512815475463867
    4. '                   ' → logprob: -8.887815475463867
    5. '   ' → logprob: -9.387815475463867
    6. '```' → logprob: -9.387815475463867
    7. '                           ' → logprob: -9.512815475463867
    8. ' if' → logprob: -9.512815475463867
    9. ' heap' → logprob: -9.637815475463867
    10. '                       ' → logprob: -9.887815475463867

Token 336: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0011918948730453849
    2. ' w' → logprob: -6.751192092895508
    3. 'nc' → logprob: -11.126192092895508
    4. '0' → logprob: -12.751192092895508
    5. 'wc' → logprob: -14.251192092895508
    6. 'heap' → logprob: -14.376192092895508
    7. 'q' → logprob: -14.876192092895508
    8. 'dq' → logprob: -14.876192092895508
    9. ' ' → logprob: -15.126192092895508
    10. 'c' → logprob: -15.376192092895508

Token 337: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07254397869110107
    2. '0' → logprob: -2.8225440979003906
    3. ' ==' → logprob: -4.572544097900391
    4. '=' → logprob: -9.07254409790039
    5. ')==' → logprob: -10.19754409790039
    6. ' ' → logprob: -11.19754409790039
    7. ']==' → logprob: -11.44754409790039
    8. ')' → logprob: -12.44754409790039
    9. '==
' → logprob: -13.07254409790039
    10. '()==' → logprob: -13.19754409790039

Token 338: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. '1' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.125004768371582
    4. '۰' → logprob: -18.875003814697266
    5. '-' → logprob: -19.125003814697266
    6. '=' → logprob: -20.125003814697266
    7. '   ' → logprob: -20.250003814697266
    8. '
' → logprob: -20.625003814697266
    9. '```' → logprob: -20.750003814697266
    10. ')' → logprob: -21.125003814697266

Token 339: ':
' (ID: 734)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3797749876976013
    2. ':
' → logprob: -1.879775047302246
    3. ':' → logprob: -2.129775047302246
    4. '):
' → logprob: -4.254775047302246
    5. '(heap' → logprob: -4.754775047302246
    6. ' heap' → logprob: -4.879775047302246
    7. ')' → logprob: -5.129775047302246
    8. '):' → logprob: -5.879775047302246
    9. 'he' → logprob: -6.004775047302246
    10. ',' → logprob: -7.004775047302246

Token 340: '                       ' (ID: 968)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.05360858514904976
    2. '                   ' → logprob: -3.9286086559295654
    3. '                       ' → logprob: -4.303608417510986
    4. 'dq' → logprob: -4.428608417510986
    5. ' heap' → logprob: -5.053608417510986
    6. 'import' → logprob: -8.678608894348145
    7. 'he' → logprob: -9.053608894348145
    8. 'deque' → logprob: -9.678608894348145
    9. '(heap' → logprob: -9.678608894348145
    10. '               ' → logprob: -9.803608894348145

Token 341: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0004062434600200504
    2. 'dq' → logprob: -7.875406265258789
    3. ' heap' → logprob: -11.500406265258789
    4. 'he' → logprob: -11.750406265258789
    5. 'deque' → logprob: -13.125406265258789
    6. '   ' → logprob: -13.500406265258789
    7. 'queue' → logprob: -13.625406265258789
    8. 'hq' → logprob: -13.750406265258789
    9. '                   ' → logprob: -14.625406265258789
    10. 'import' → logprob: -14.875406265258789

Token 342: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. 'he' → logprob: -15.875000953674316
    3. '.he' → logprob: -16.125
    4. 'push' → logprob: -16.25
    5. '[' → logprob: -16.375
    6. 'dq' → logprob: -16.875
    7. '.append' → logprob: -17.125
    8. '.push' → logprob: -17.875
    9. '```' → logprob: -17.875
    10. 'qe' → logprob: -18.5

Token 343: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.08293310552835464
    2. 'q' → logprob: -2.582933187484741
    3. 'he' → logprob: -5.707932949066162
    4. 'push' → logprob: -7.332932949066162
    5. 'app' → logprob: -10.83293342590332
    6. 'ush' → logprob: -11.20793342590332
    7. '.push' → logprob: -11.58293342590332
    8. '```' → logprob: -12.08293342590332
    9. '_he' → logprob: -12.45793342590332
    10. '.heap' → logprob: -13.08293342590332

Token 344: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.018822258338332176
    2. 'q' → logprob: -4.018822193145752
    3. 'pp' → logprob: -8.14382266998291
    4. 'push' → logprob: -8.39382266998291
    5. '[' → logprob: -10.51882266998291
    6. 'ush' → logprob: -10.51882266998291
    7. 'ap' → logprob: -10.64382266998291
    8. 'p' → logprob: -10.76882266998291
    9. 'he' → logprob: -10.76882266998291
    10. '.he' → logprob: -10.89382266998291

Token 345: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00014370749704539776
    2. 'push' → logprob: -9.250144004821777
    3. 'uf' → logprob: -10.750144004821777
    4. 'app' → logprob: -12.000144004821777
    5. 'pp' → logprob: -12.125144004821777
    6. 'op' → logprob: -12.250144004821777
    7. 'uff' → logprob: -13.000144004821777
    8. 'p' → logprob: -13.375144004821777
    9. 'le' → logprob: -13.500144004821777
    10. 'q' → logprob: -13.750144004821777

Token 346: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.018154975026845932
    2. 'dq' → logprob: -4.018155097961426
    3. '(' → logprob: -12.768155097961426
    4. 'd' → logprob: -13.393155097961426
    5. ' dq' → logprob: -15.893155097961426
    6. '[d' → logprob: -16.14315414428711
    7. '```' → logprob: -16.76815414428711
    8. 'pq' → logprob: -16.89315414428711
    9. ',d' → logprob: -17.01815414428711
    10. '((' → logprob: -17.14315414428711

Token 347: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005662598647177219
    2. 'ist' → logprob: -5.255662441253662
    3. 'dq' → logprob: -8.75566291809082
    4. '(d' → logprob: -9.88066291809082
    5. '(q' → logprob: -10.13066291809082
    6. '(dist' → logprob: -10.13066291809082
    7. 'cq' → logprob: -10.13066291809082
    8. 'c' → logprob: -10.75566291809082
    9. 'dist' → logprob: -10.88066291809082
    10. 'st' → logprob: -11.13066291809082

Token 348: ',(' (ID: 27243)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0638432428240776
    2. 'left' → logprob: -3.438843250274658
    3. '((' → logprob: -3.563843250274658
    4. '(' → logprob: -7.563843250274658
    5. '(v' → logprob: -8.0638427734375
    6. 'front' → logprob: -9.0638427734375
    7. ',(' → logprob: -9.1888427734375
    8. '(n' → logprob: -9.4388427734375
    9. '(q' → logprob: -9.4388427734375
    10. ')' → logprob: -10.0638427734375

Token 349: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -6.957014556974173e-05
    2. 'dist' → logprob: -10.375069618225098
    3. ' nc' → logprob: -11.000069618225098
    4. '0' → logprob: -11.500069618225098
    5. 'c' → logprob: -12.375069618225098
    6. 'n' → logprob: -13.750069618225098
    7. '   ' → logprob: -13.875069618225098
    8. '
' → logprob: -13.875069618225098
    9. 'nd' → logprob: -14.250069618225098
    10. '(n' → logprob: -14.875069618225098

Token 350: ',v' (ID: 30680)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.15921808779239655
    2. ',v' → logprob: -2.1592180728912354
    3. '))
' → logprob: -3.9092180728912354
    4. ',' → logprob: -4.6592183113098145
    5. '(v' → logprob: -7.7842183113098145
    6. 'v' → logprob: -8.159217834472656
    7. '(' → logprob: -8.159217834472656
    8. ')' → logprob: -8.284217834472656
    9. ',n' → logprob: -8.659217834472656
    10. ' ))' → logprob: -9.034217834472656

Token 351: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.3873388171195984
    2. '))' → logprob: -1.1373388767242432
    3. '))

' → logprob: -8.762338638305664
    4. ' ))
' → logprob: -9.012338638305664
    5. '))
' → logprob: -9.512338638305664
    6. ' ))' → logprob: -9.887338638305664
    7. ')' → logprob: -10.512338638305664
    8. ',' → logprob: -11.887338638305664
    9. ')
' → logprob: -12.012338638305664
    10. '0' → logprob: -12.012338638305664

Token 352: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7659041285514832
    2. 'else' → logprob: -1.015904188156128
    3. ' else' → logprob: -1.765904188156128
    4. '
' → logprob: -7.640903949737549
    5. '<|end|>' → logprob: -7.640903949737549
    6. '```' → logprob: -8.140904426574707
    7. '               ' → logprob: -8.390904426574707
    8. '                       ' → logprob: -9.140904426574707
    9. '           ' → logprob: -9.515904426574707
    10. ')' → logprob: -9.515904426574707

Token 353: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.29407963156700134
    2. ' else' → logprob: -1.4190796613693237
    3. '                   ' → logprob: -5.294079780578613
    4. 'heap' → logprob: -5.294079780578613
    5. '```' → logprob: -6.919079780578613
    6. ' heap' → logprob: -7.919079780578613
    7. 'dist' → logprob: -8.044079780578613
    8. '
' → logprob: -8.419079780578613
    9. ')' → logprob: -8.669079780578613
    10. '                       ' → logprob: -8.919079780578613

Token 354: ':
' (ID: 734)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.23203028738498688
    2. '                       ' → logprob: -1.6070302724838257
    3. ' heap' → logprob: -5.607030391693115
    4. '                   ' → logprob: -6.232030391693115
    5. 'deque' → logprob: -8.732029914855957
    6. '(heap' → logprob: -8.732029914855957
    7. '               ' → logprob: -8.857029914855957
    8. '                           ' → logprob: -8.982029914855957
    9. '                      ' → logprob: -9.732029914855957
    10. '       ' → logprob: -9.857029914855957

Token 355: '                       ' (ID: 968)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00654543936252594
    2. '                   ' → logprob: -5.756545543670654
    3. '                       ' → logprob: -6.381545543670654
    4. ' heap' → logprob: -7.381545543670654
    5. 'dq' → logprob: -7.506545543670654
    6. '               ' → logprob: -8.506545066833496
    7. 'deque' → logprob: -9.631545066833496
    8. 'he' → logprob: -10.381545066833496
    9. '   ' → logprob: -10.506545066833496
    10. '           ' → logprob: -10.506545066833496

Token 356: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.011507405899465084
    2. 'dq' → logprob: -4.886507511138916
    3. 'dist' → logprob: -6.136507511138916
    4. ' heap' → logprob: -6.636507511138916
    5. '   ' → logprob: -9.011507034301758
    6. 'he' → logprob: -9.636507034301758
    7. 'd' → logprob: -10.386507034301758
    8. 'deque' → logprob: -10.761507034301758
    9. '               ' → logprob: -11.136507034301758
    10. '                   ' → logprob: -11.136507034301758

Token 357: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0280383548888494e-06
    2. 'push' → logprob: -14.375000953674316
    3. 'dq' → logprob: -15.625000953674316
    4. 'p' → logprob: -16.000001907348633
    5. 'queue' → logprob: -16.250001907348633
    6. 'he' → logprob: -17.250001907348633
    7. 'heap' → logprob: -17.875001907348633
    8. '.push' → logprob: -18.000001907348633
    9. 'qe' → logprob: -18.125001907348633
    10. '[' → logprob: -18.125001907348633

Token 358: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.13466817140579224
    2. 'he' → logprob: -2.3846681118011475
    3. 'q' → logprob: -3.7596681118011475
    4. 'push' → logprob: -4.634668350219727
    5. '.push' → logprob: -7.759668350219727
    6. 'heap' → logprob: -9.009668350219727
    7. 'ush' → logprob: -9.134668350219727
    8. '.heap' → logprob: -9.134668350219727
    9. '_he' → logprob: -9.759668350219727
    10. '_push' → logprob: -10.759668350219727

Token 359: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.5094070477061905e-05
    2. 'ap' → logprob: -11.875015258789062
    3. 'q' → logprob: -12.125015258789062
    4. 'pp' → logprob: -13.750015258789062
    5. '[' → logprob: -14.625015258789062
    6. '```' → logprob: -15.375015258789062
    7. 'qp' → logprob: -15.375015258789062
    8. 'append' → logprob: -15.625015258789062
    9. 'push' → logprob: -16.375015258789062
    10. '(app' → logprob: -16.750015258789062

Token 360: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0329655222594738
    2. 'ap' → logprob: -4.532965660095215
    3. 'op' → logprob: -4.657965660095215
    4. 'app' → logprob: -4.782965660095215
    5. 'p' → logprob: -6.282965660095215
    6. 'q' → logprob: -6.657965660095215
    7. 'push' → logprob: -8.157965660095215
    8. 'ul' → logprob: -9.407965660095215
    9. 'eep' → logprob: -9.532965660095215
    10. 'he' → logprob: -9.532965660095215

Token 361: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.320199877838604e-07
    2. 'd' → logprob: -15.5
    3. '(' → logprob: -16.625
    4. '(heap' → logprob: -16.625
    5. '```' → logprob: -17.5
    6. 'import' → logprob: -17.875
    7. 'heap' → logprob: -18.125
    8. '()' → logprob: -19.125
    9. '[d' → logprob: -19.25
    10. ',d' → logprob: -19.25

Token 362: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0004418743774294853
    2. 'c' → logprob: -8.125441551208496
    3. 'd' → logprob: -10.375441551208496
    4. '(q' → logprob: -10.375441551208496
    5. 'dq' → logprob: -10.375441551208496
    6. 'cq' → logprob: -11.000441551208496
    7. '(d' → logprob: -11.375441551208496
    8. 'pq' → logprob: -11.625441551208496
    9. '[q' → logprob: -12.625441551208496
    10. 'f' → logprob: -13.500441551208496

Token 363: ',(' (ID: 27243)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -9.491498531133402e-06
    2. ',d' → logprob: -12.125009536743164
    3. '((' → logprob: -14.375009536743164
    4. '(heap' → logprob: -14.500009536743164
    5. ')' → logprob: -14.625009536743164
    6. '(' → logprob: -14.875009536743164
    7. ',(' → logprob: -15.125009536743164
    8. '```' → logprob: -15.250009536743164
    9. ' (' → logprob: -15.500009536743164
    10. ',' → logprob: -15.500009536743164

Token 364: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.5762423872947693
    2. '(n' → logprob: -0.8262423872947693
    3. ' nc' → logprob: -8.701242446899414
    4. ' (' → logprob: -9.201242446899414
    5. ')' → logprob: -12.326242446899414
    6. 'c' → logprob: -12.326242446899414
    7. 'n' → logprob: -12.451242446899414
    8. '0' → logprob: -12.576242446899414
    9. ' ' → logprob: -12.701242446899414
    10. '(c' → logprob: -13.076242446899414

Token 365: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.005276091862469912
    2. ',d' → logprob: -5.630276203155518
    3. ',w' → logprob: -7.130276203155518
    4. ',q' → logprob: -7.880276203155518
    5. ',(' → logprob: -8.25527572631836
    6. ',' → logprob: -8.63027572631836
    7. ',x' → logprob: -10.75527572631836
    8. ',n' → logprob: -11.13027572631836
    9. ',u' → logprob: -12.38027572631836
    10. ',k' → logprob: -12.63027572631836

Token 366: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0028116481844335794
    2. ')' → logprob: -6.002811431884766
    3. '))
' → logprob: -8.127811431884766
    4. ')))' → logprob: -11.252811431884766
    5. ')}' → logprob: -11.627811431884766
    6. '));' → logprob: -12.002811431884766
    7. '                       ' → logprob: -12.127811431884766
    8. ' ))' → logprob: -13.252811431884766
    9. ')
' → logprob: -13.752811431884766
    10. '))

' → logprob: -14.002811431884766

Token 367: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6995432376861572
    2. '       ' → logprob: -1.5745432376861572
    3. '<|end|>' → logprob: -1.6995432376861572
    4. 'return' (adapté à ' return') → logprob: -3.3245432376861572
    5. ')' → logprob: -3.9495432376861572
    6. '    ' → logprob: -4.199542999267578
    7. '```' → logprob: -5.199542999267578
    8. '        ' → logprob: -5.324542999267578
    9. '<|end|>' → logprob: -5.699542999267578
    10. ':return' → logprob: -5.699542999267578

Token 369: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.054500666621607e-06
    2. ' dist' → logprob: -12.75000286102295
    3. '(dist' → logprob: -16.000003814697266
    4. '[' → logprob: -20.375003814697266
    5. '	dist' → logprob: -21.000003814697266
    6. 'None' → logprob: -21.375003814697266
    7. 'd' → logprob: -21.875003814697266
    8. '_dist' → logprob: -21.875003814697266
    9. '   ' → logprob: -22.000003814697266
    10. 'dest' → logprob: -22.250003814697266

Token 370: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17793628573417664
    2. 'n' → logprob: -2.552936315536499
    3. 'd' → logprob: -3.052936315536499
    4. 'dn' → logprob: -3.302936315536499
    5. 'nat' → logprob: -7.55293607711792
    6. '#' → logprob: -9.177936553955078
    7. '```' → logprob: -9.677936553955078
    8. 'from' → logprob: -9.927936553955078
    9. 'nd' → logprob: -10.052936553955078
    10. '   ' → logprob: -10.552936553955078

Token 372: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.25537756085395813
    2. 'dn' → logprob: -2.0053775310516357
    3. 'd' → logprob: -3.0053775310516357
    4. 'n' → logprob: -3.2553775310516357
    5. 'nat' → logprob: -6.505377769470215
    6. 'nd' → logprob: -8.380377769470215
    7. 'ren' → logprob: -8.755377769470215
    8. '#' → logprob: -9.005377769470215
    9. 'dna' → logprob: -9.755377769470215
    10. 'from' → logprob: -9.755377769470215

Token 373: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.004378617275506258
    2. '1' → logprob: -6.129378795623779
    3. '_from' → logprob: -7.004378795623779
    4. 'n' → logprob: -7.379378795623779
    5. '_' → logprob: -8.504378318786621
    6. '=' → logprob: -8.879378318786621
    7. 'N' → logprob: -9.379378318786621
    8. ' =' → logprob: -9.629378318786621
    9. '=n' → logprob: -9.879378318786621
    10. 'from' → logprob: -10.504378318786621

Token 374: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -3.1186566047836095e-05
    2. 'at' → logprob: -10.500031471252441
    3. 'atsu' → logprob: -13.750031471252441
    4. '_' → logprob: -14.000031471252441
    5. '```' → logprob: -14.625031471252441
    6. '[' → logprob: -15.125031471252441
    7. 'a' → logprob: -15.500031471252441
    8. 'n' → logprob: -16.125030517578125
    9. 'atse' → logprob: -16.375030517578125
    10. '@' → logprob: -16.625030517578125

Token 375: 'ume' (ID: 3095)
  Prédit: 'ume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ume' → logprob: -2.816093228830141e-06
    2. 'уме' → logprob: -14.37500286102295
    3. '_' → logprob: -14.50000286102295
    4. 'u' → logprob: -15.00000286102295
    5. '[' → logprob: -15.12500286102295
    6. ' ume' → logprob: -15.37500286102295
    7. '[]' → logprob: -15.50000286102295
    8. '   ' → logprob: -15.75000286102295
    9. '

' → logprob: -16.125001907348633
    10. '=' → logprob: -16.250001907348633

Token 376: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014410295523703098
    2. ' =' → logprob: -4.389410495758057
    3. ',' → logprob: -7.139410495758057
    4. '=[' → logprob: -7.264410495758057
    5. '=n' → logprob: -9.014410018920898
    6. '=[]' → logprob: -9.764410018920898
    7. ',n' → logprob: -10.139410018920898
    8. '=start' → logprob: -10.389410018920898
    9. '   ' → logprob: -10.639410018920898
    10. '_=' → logprob: -10.764410018920898

Token 377: 'zero' (ID: 29221)
  Prédit: 'zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -7.493430894101039e-05
    2. ' zero' → logprob: -9.500075340270996
    3. '0' → logprob: -18.75007438659668
    4. '   ' → logprob: -18.75007438659668
    5. ' ' → logprob: -20.00007438659668
    6. '-zero' → logprob: -21.12507438659668
    7. '.zero' → logprob: -21.12507438659668
    8. '  ' → logprob: -21.75007438659668
    9. '_zero' → logprob: -22.50007438659668
    10. '```' → logprob: -22.87507438659668

Token 378: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -1.5048530030981055e-06
    2. '_zero' → logprob: -14.125001907348633
    3. '_' → logprob: -15.000001907348633
    4. '_ONE' → logprob: -16.875001907348633
    5. '_code' → logprob: -17.125001907348633
    6. '_n' → logprob: -17.375001907348633
    7. '_on' → logprob: -17.500001907348633
    8. '_two' → logprob: -18.125001907348633
    9. 'One' → logprob: -18.250001907348633
    10. '_of' → logprob: -18.750001907348633

Token 379: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.512236498361744e-07
    2. 'b' → logprob: -14.625000953674316
    3. '_d' → logprob: -17.125
    4. '_' → logprob: -17.75
    5. '_B' → logprob: -18.875
    6. 'B' → logprob: -19.125
    7. '_n' → logprob: -20.0
    8. '_p' → logprob: -20.25
    9. ' bfs' → logprob: -20.25
    10. '_f' → logprob: -20.5

Token 380: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -1.1472419600977446e-06
    2. 'FS' → logprob: -14.250000953674316
    3. 's' → logprob: -15.375000953674316
    4. 'bs' → logprob: -16.125001907348633
    5. 'sf' → logprob: -16.250001907348633
    6. ' fs' → logprob: -17.375001907348633
    7. '_fs' → logprob: -17.625001907348633
    8. 'f' → logprob: -17.875001907348633
    9. 'fsi' → logprob: -20.500001907348633
    10. '(fs' → logprob: -20.500001907348633

Token 381: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.130576806142926e-05
    2. '(' → logprob: -11.125031471252441
    3. 'n' → logprob: -11.125031471252441
    4. '(t' → logprob: -14.750031471252441
    5. 't' → logprob: -15.375031471252441
    6. '(
' → logprob: -15.375031471252441
    7. ' (' → logprob: -15.375031471252441
    8. '((' → logprob: -16.000030517578125
    9. '(start' → logprob: -16.000030517578125
    10. 'start' → logprob: -16.250030517578125

Token 382: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.001677079708315432
    2. 'n' → logprob: -6.5016770362854
    3. 'at' → logprob: -9.626677513122559
    4. 'atsu' → logprob: -10.751677513122559
    5. ')' → logprob: -11.001677513122559
    6. '_n' → logprob: -11.626677513122559
    7. '```' → logprob: -11.626677513122559
    8. '_' → logprob: -11.751677513122559
    9. ')
' → logprob: -11.876677513122559
    10. 'a' → logprob: -12.001677513122559

Token 383: 'ume' (ID: 3095)
  Prédit: 'ume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ume' → logprob: -2.5776860184123507e-06
    2. 'u' → logprob: -14.00000286102295
    3. 'уме' → logprob: -14.75000286102295
    4. 'um' → logprob: -15.75000286102295
    5. '...' → logprob: -15.87500286102295
    6. '   ' → logprob: -16.000001907348633
    7. '(' → logprob: -16.125001907348633
    8. ' ume' → logprob: -16.375001907348633
    9. 'une' → logprob: -16.500001907348633
    10. '[' → logprob: -16.625001907348633

Token 384: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014198750257492
    2. ')
' → logprob: -1.7014198303222656
    3. ')
' → logprob: -12.451419830322266
    4. '   ' → logprob: -13.826419830322266
    5. ')

' → logprob: -14.201419830322266
    6. '),' → logprob: -15.826419830322266
    7. ' )' → logprob: -15.951419830322266
    8. ' )
' → logprob: -15.951419830322266
    9. ')#' → logprob: -16.076419830322266
    10. ')n' → logprob: -16.701419830322266

Token 385: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0026015799958258867
    2. '   ' → logprob: -6.002601623535156
    3. ' dist' → logprob: -9.127601623535156
    4. '	dist' → logprob: -11.127601623535156
    5. '_dist' → logprob: -13.627601623535156
    6. '.dist' → logprob: -14.627601623535156
    7. '```' → logprob: -15.127601623535156
    8. '    
' → logprob: -15.502601623535156
    9. '(dist' → logprob: -15.752601623535156
    10. '  ' → logprob: -16.252601623535156

Token 386: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -1.0445127372804563e-05
    2. ' dist' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.000009536743164
    4. '
' → logprob: -17.125009536743164
    5. '	dist' → logprob: -17.250009536743164
    6. '_dist' → logprob: -17.375009536743164
    7. 'ren' → logprob: -17.750009536743164
    8. '    
' → logprob: -18.125009536743164
    9. '.dist' → logprob: -18.375009536743164
    10. '(dist' → logprob: -19.000009536743164

Token 387: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.954393079970032e-05
    2. 'ren' → logprob: -10.375049591064453
    3. '_r' → logprob: -12.375049591064453
    4. '=' → logprob: -13.000049591064453
    5. '_=' → logprob: -13.125049591064453
    6. '=_' → logprob: -13.500049591064453
    7. '_re' → logprob: -13.625049591064453
    8. '_rem' → logprob: -14.000049591064453
    9. '_rel' → logprob: -14.375049591064453
    10. ' ren' → logprob: -14.375049591064453

Token 388: 'ren' (ID: 1687)
  Prédit: 'ren'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ren' → logprob: -7.584239938296378e-06
    2. 'n' → logprob: -12.125007629394531
    3. ' ren' → logprob: -14.125007629394531
    4. 'rench' → logprob: -15.625007629394531
    5. 'r' → logprob: -16.00000762939453
    6. 'rem' → logprob: -16.12500762939453
    7. 'en' → logprob: -16.37500762939453
    8. 'zero' → logprob: -16.37500762939453
    9. '
' → logprob: -16.50000762939453
    10. '0' → logprob: -16.50000762939453

Token 389: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.00024858469259925187
    2. 'one' → logprob: -9.500248908996582
    3. 'ume' → logprob: -9.625248908996582
    4. '_on' → logprob: -10.750248908996582
    5. '```' → logprob: -11.375248908996582
    6. '_' → logprob: -11.500248908996582
    7. 's' → logprob: -11.875248908996582
    8. 'onse' → logprob: -12.000248908996582
    9. 'dist' → logprob: -12.125248908996582
    10. '_dist' → logprob: -12.250248908996582

Token 390: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1472419600977446e-06
    2. ' =' → logprob: -14.125000953674316
    3. '=zeros' → logprob: -16.375001907348633
    4. '=sys' → logprob: -17.375001907348633
    5. '=n' → logprob: -17.500001907348633
    6. '=line' → logprob: -17.625001907348633
    7. '=edge' → logprob: -17.875001907348633
    8. '=[' → logprob: -18.000001907348633
    9. '=z' → logprob: -18.000001907348633
    10. '=no' → logprob: -18.625001907348633

Token 391: 'zero' (ID: 29221)
  Prédit: 'zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -2.165027217415627e-05
    2. ' zero' → logprob: -10.750021934509277
    3. '0' → logprob: -16.37502098083496
    4. '.zero' → logprob: -17.37502098083496
    5. '-zero' → logprob: -18.12502098083496
    6. '(' → logprob: -19.00002098083496
    7. 'zer' → logprob: -19.87502098083496
    8. '
' → logprob: -20.37502098083496
    9. 'one' → logprob: -20.37502098083496
    10. '```' → logprob: -20.37502098083496

Token 392: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.475277304649353
    2. '_b' → logprob: -0.975277304649353
    3. 'b' → logprob: -7.850277423858643
    4. 'q' → logprob: -8.475276947021484
    5. '_' → logprob: -8.600276947021484
    6. '01' → logprob: -8.850276947021484
    7. '0' → logprob: -9.850276947021484
    8. '1' → logprob: -9.975276947021484
    9. 'One' → logprob: -10.100276947021484
    10. 'one' → logprob: -10.475276947021484

Token 393: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0036794093903154135
    2. 'b' → logprob: -5.628679275512695
    3. 'B' → logprob: -10.253679275512695
    4. 'f' → logprob: -11.003679275512695
    5. '-b' → logprob: -12.503679275512695
    6. ' bfs' → logprob: -12.503679275512695
    7. '```' → logprob: -13.128679275512695
    8. '_' → logprob: -13.128679275512695
    9. '_f' → logprob: -13.378679275512695
    10. 'v' → logprob: -13.503679275512695

Token 394: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -1.1279553291387856e-05
    2. 's' → logprob: -12.125011444091797
    3. 'sf' → logprob: -12.125011444091797
    4. '_fs' → logprob: -15.750011444091797
    5. 'FS' → logprob: -16.375011444091797
    6. ' fs' → logprob: -16.750011444091797
    7. 'f' → logprob: -16.750011444091797
    8. 'bs' → logprob: -16.875011444091797
    9. 'ts' → logprob: -18.000011444091797
    10. 'ss' → logprob: -18.625011444091797

Token 395: '(' (ID: 7)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: 'ren' (ID: 1687)
  Prédit: 'ren'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ren' → logprob: -1.7432603272027336e-06
    2. ' ren' → logprob: -13.875001907348633
    3. '0' → logprob: -14.625001907348633
    4. 'r' → logprob: -16.250001907348633
    5. 'rench' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '(' → logprob: -17.625001907348633
    8. 'Ren' → logprob: -18.000001907348633
    9. 'den' → logprob: -18.375001907348633
    10. 'rem' → logprob: -18.500001907348633

Token 397: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -5.717296517104842e-05
    2. '```' → logprob: -11.125057220458984
    3. 'n' → logprob: -11.250057220458984
    4. 'o' → logprob: -12.250057220458984
    5. 'ren' → logprob: -12.250057220458984
    6. 'con' → logprob: -12.375057220458984
    7. 'on's' → logprob: -13.875057220458984
    8. 'non' → logprob: -13.875057220458984
    9. 'a' → logprob: -14.000057220458984
    10. 'ron' → logprob: -14.000057220458984

Token 398: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06200108304619789
    2. ')' → logprob: -2.8120009899139404
    3. '   ' → logprob: -10.68700122833252
    4. ')
' → logprob: -11.56200122833252
    5. ' )
' → logprob: -14.93700122833252
    6. ')

' → logprob: -15.43700122833252
    7. ')`
' → logprob: -15.56200122833252
    8. '```' → logprob: -16.687000274658203
    9. '
' → logprob: -17.437000274658203
    10. '+' → logprob: -17.562000274658203

Token 399: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001099968678317964
    2. '   ' → logprob: -7.001100063323975
    3. '0' → logprob: -8.876099586486816
    4. ' dist' → logprob: -11.376099586486816
    5. '```' → logprob: -12.001099586486816
    6. 'zero' → logprob: -12.126099586486816
    7. 'import' → logprob: -12.251099586486816
    8. 'input' → logprob: -12.376099586486816
    9. 'distance' → logprob: -12.751099586486816
    10. '	dist' → logprob: -12.876099586486816

Token 400: ' dist' (ID: 3601)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: '_goal' (ID: 101684)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013212349265813828
    2. '_zero' → logprob: -4.388212203979492
    3. '0' → logprob: -7.513212203979492
    4. '_to' → logprob: -10.138212203979492
    5. '=' → logprob: -10.763212203979492
    6. '_=' → logprob: -10.888212203979492
    7. '[' → logprob: -11.388212203979492
    8. '_room' → logprob: -11.763212203979492
    9. '_all' → logprob: -12.013212203979492
    10. '_end' → logprob: -12.513212203979492

Token 402: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001047339290380478
    2. '=[' → logprob: -7.126047134399414
    3. ' =' → logprob: -8.501047134399414
    4. '=int' → logprob: -12.001047134399414
    5. '=float' → logprob: -12.001047134399414
    6. '=zeros' → logprob: -12.251047134399414
    7. '=input' → logprob: -12.626047134399414
    8. '=z' → logprob: -12.751047134399414
    9. '=f' → logprob: -12.876047134399414
    10. '=list' → logprob: -13.126047134399414

Token 403: 'zero' (ID: 29221)
  Prédit: 'zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -2.463036435074173e-05
    2. ' zero' → logprob: -10.625024795532227
    3. '[' → logprob: -15.250024795532227
    4. '0' → logprob: -17.125024795532227
    5. '   ' → logprob: -18.125024795532227
    6. 'dist' → logprob: -18.125024795532227
    7. ' ' → logprob: -18.625024795532227
    8. '.zero' → logprob: -18.750024795532227
    9. '  ' → logprob: -19.250024795532227
    10. ' [' → logprob: -19.625024795532227

Token 404: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.002286926144734025
    2. '_' → logprob: -6.877286911010742
    3. '_goal' → logprob: -7.502286911010742
    4. 'q' → logprob: -8.502286911010742
    5. '_zero' → logprob: -9.002286911010742
    6. '_b' → logprob: -9.627286911010742
    7. '_point' → logprob: -10.002286911010742
    8. '1' → logprob: -10.127286911010742
    9. '[' → logprob: -10.127286911010742
    10. '01' → logprob: -10.252286911010742

Token 405: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0002836232597474009
    2. 'b' → logprob: -8.250283241271973
    3. 'B' → logprob: -11.250283241271973
    4. ' bfs' → logprob: -12.750283241271973
    5. 's' → logprob: -13.875283241271973
    6. '_' → logprob: -14.000283241271973
    7. '=' → logprob: -14.125283241271973
    8. '-b' → logprob: -14.375283241271973
    9. 'd' → logprob: -14.750283241271973
    10. 'dist' → logprob: -14.875283241271973

Token 406: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -1.0683535037969705e-05
    2. 's' → logprob: -11.87501049041748
    3. 'sf' → logprob: -13.00001049041748
    4. 'ts' → logprob: -14.62501049041748
    5. '_fs' → logprob: -15.25001049041748
    6. 'FS' → logprob: -15.37501049041748
    7. 'f' → logprob: -15.37501049041748
    8. ' fs' → logprob: -16.375011444091797
    9. '(fs' → logprob: -16.625011444091797
    10. 'ss' → logprob: -16.875011444091797

Token 407: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9862216504407115e-05
    2. '0' → logprob: -10.875020027160645
    3. ' (' → logprob: -14.125020027160645
    4. '((' → logprob: -16.000019073486328
    5. '(
' → logprob: -18.375019073486328
    6. '```' → logprob: -18.875019073486328
    7. 'def' → logprob: -20.500019073486328
    8. '(int' → logprob: -21.125019073486328
    9. '()' → logprob: -21.250019073486328
    10. '（' → logprob: -21.375019073486328

Token 408: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. ')' → logprob: -19.5
    4. '۰' → logprob: -19.625
    5. '```' → logprob: -19.625
    6. 'n' → logprob: -19.75
    7. '   ' → logprob: -20.125
    8. '(' → logprob: -20.25
    9. '０' → logprob: -20.5
    10. 'zero' → logprob: -21.625

Token 409: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.875001907348633
    3. '))' → logprob: -14.875001907348633
    4. ' )' → logprob: -15.375001907348633
    5. ')`' → logprob: -16.875001907348633
    6. ')[' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.875001907348633
    8. ')}' → logprob: -18.250001907348633
    9. ')...' → logprob: -18.250001907348633
    10. '),' → logprob: -18.500001907348633

Token 410: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8114652037620544
    2. 'res' → logprob: -1.1864652633666992
    3. 'answer' → logprob: -1.8114652633666992
    4. 'min' → logprob: -2.811465263366699
    5. 'result' → logprob: -3.686465263366699
    6. '   ' → logprob: -7.561465263366699
    7. 'minimum' → logprob: -8.1864652633667
    8. '```' → logprob: -8.8114652633667
    9. ' ans' → logprob: -9.0614652633667
    10. 'max' → logprob: -9.1864652633667

Token 411: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6093806028366089
    2. 'res' → logprob: -0.8593806028366089
    3. 'answer' → logprob: -3.7343807220458984
    4. 'min' → logprob: -4.984380722045898
    5. 'result' → logprob: -6.234380722045898
    6. 'print' → logprob: -9.859380722045898
    7. 'best' → logprob: -10.109380722045898
    8. 'total' → logprob: -10.734380722045898
    9. '```' → logprob: -10.984380722045898
    10. '
' → logprob: -11.359380722045898

Token 412: ' minimal' (ID: 19957)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.31461474299430847
    2. 'res' → logprob: -2.064614772796631
    3. 'min' → logprob: -2.189614772796631
    4. 'answer' → logprob: -4.314614772796631
    5. 'print' → logprob: -4.814614772796631
    6. 'best' → logprob: -6.439614772796631
    7. '   ' → logprob: -6.689614772796631
    8. 'cost' → logprob: -6.939614772796631
    9. 'result' → logprob: -7.189614772796631
    10. 'total' → logprob: -7.189614772796631

Token 413: ' sum' (ID: 4215)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3818187415599823
    2. 'res' → logprob: -1.6318187713623047
    3. 'answer' → logprob: -2.1318187713623047
    4. 'result' → logprob: -5.881818771362305
    5. 'cost' → logprob: -8.756818771362305
    6. 'total' → logprob: -9.756818771362305
    7. '_ans' → logprob: -9.881818771362305
    8. ' ans' → logprob: -10.131818771362305
    9. '```' → logprob: -11.006818771362305
    10. '_answer' → logprob: -11.006818771362305

Token 414: ' of' (ID: 328)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.011682034470140934
    2. '(dist' → logprob: -4.886682033538818
    3. ' dist' → logprob: -5.511682033538818
    4. 'cost' → logprob: -11.011682510375977
    5. '(' → logprob: -13.386682510375977
    6. '   ' → logprob: -13.511682510375977
    7. ' (' → logprob: -13.511682510375977
    8. 'door' → logprob: -13.761682510375977
    9. 'd' → logprob: -13.886682510375977
    10. 're' → logprob: -14.261682510375977

Token 416: '_n' (ID: 2170)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.503564178943634
    2. '   ' → logprob: -2.5035641193389893
    3. '_sum' → logprob: -2.5035641193389893
    4. '=' → logprob: -2.7535641193389893
    5. '_' → logprob: -3.1285641193389893
    6. '_n' → logprob: -3.5035641193389893
    7. '_min' → logprob: -3.7535641193389893
    8. 'min' → logprob: -4.378564357757568
    9. '_cost' → logprob: -4.378564357757568
    10. 'sum' → logprob: -4.503564357757568

Token 417: 'ats' (ID: 1838)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.06886197626590729
    2. '_' → logprob: -3.193861961364746
    3. 'ats' → logprob: -4.068861961364746
    4. '_goal' → logprob: -4.818861961364746
    5. 's' → logprob: -9.068861961364746
    6. '_t' → logprob: -10.318861961364746
    7. 'goal' → logprob: -10.443861961364746
    8. 'n' → logprob: -10.568861961364746
    9. 'at' → logprob: -10.568861961364746
    10. '_s' → logprob: -11.193861961364746

Token 418: 'ume' (ID: 3095)
  Prédit: 'ume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ume' → logprob: -7.941850526549388e-06
    2. 'ime' → logprob: -12.250007629394531
    3. 'u' → logprob: -14.250007629394531
    4. 'umes' → logprob: -14.625007629394531
    5. 'umer' → logprob: -15.000007629394531
    6. '_n' → logprob: -15.000007629394531
    7. 'уме' → logprob: -15.375007629394531
    8. '_' → logprob: -15.500007629394531
    9. 'ute' → logprob: -15.625007629394531
    10. 'um' → logprob: -15.750007629394531

Token 419: '[x' (ID: 17295)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.2230096459388733
    2. '[i' → logprob: -1.7230095863342285
    3. '[v' → logprob: -4.7230095863342285
    4. '[' → logprob: -4.8480095863342285
    5. '[node' → logprob: -6.3480095863342285
    6. '+' → logprob: -7.0980095863342285
    7. '[a' → logprob: -7.3480095863342285
    8. '[n' → logprob: -7.7230095863342285
    9. ',' → logprob: -8.098010063171387
    10. '[x' → logprob: -8.848010063171387

Token 420: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5233170986175537
    2. ']+' → logprob: -0.8983170986175537
    3. '+' → logprob: -9.273317337036133
    4. ' ]' → logprob: -9.773317337036133
    5. '],' → logprob: -11.273317337036133
    6. ']+=' → logprob: -11.898317337036133
    7. '+]' → logprob: -12.523317337036133
    8. '[' → logprob: -12.523317337036133
    9. ')+' → logprob: -12.773317337036133
    10. '   ' → logprob: -12.898317337036133

Token 421: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0001805377542041242
    2. ' dist' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.1251802444458
    4. '	dist' → logprob: -17.125181198120117
    5. '(dist' → logprob: -17.875181198120117
    6. '
' → logprob: -17.875181198120117
    7. '_dist' → logprob: -18.250181198120117
    8. '+' → logprob: -18.625181198120117
    9. '       ' → logprob: -19.000181198120117
    10. '.dist' → logprob: -19.000181198120117

Token 422: '_' (ID: 62)
  Prédit: '_goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_goal' → logprob: -0.004159483592957258
    2. '_' → logprob: -5.504159450531006
    3. '_n' → logprob: -9.504159927368164
    4. '_go' → logprob: -12.629159927368164
    5. 'goal' → logprob: -13.754159927368164
    6. '_x' → logprob: -13.879159927368164
    7. '(goal' → logprob: -15.129159927368164
    8. ' _' → logprob: -16.004159927368164
    9. '_cost' → logprob: -16.254159927368164
    10. 'Goal' → logprob: -16.254159927368164

Token 423: 'ren' (ID: 1687)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.1266929805278778
    2. 'ren' → logprob: -2.3766930103302
    3. 'n' → logprob: -3.8766930103302
    4. '_goal' → logprob: -5.376692771911621
    5. 'nat' → logprob: -8.001692771911621
    6. 'go' → logprob: -9.001692771911621
    7. '_n' → logprob: -9.251692771911621
    8. '0' → logprob: -9.751692771911621
    9. '_' → logprob: -10.001692771911621
    10. 'Goal' → logprob: -11.001692771911621

Token 424: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.03908297047019005
    2. '_goal' → logprob: -3.5390830039978027
    3. 'x' → logprob: -5.414083003997803
    4. 'goal' → logprob: -5.539083003997803
    5. '_n' → logprob: -8.414082527160645
    6. 'um' → logprob: -8.664082527160645
    7. 'ot' → logprob: -9.164082527160645
    8. 'n' → logprob: -9.664082527160645
    9. 'om' → logprob: -10.164082527160645
    10. 'ont' → logprob: -10.289082527160645

Token 425: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0002738522016443312
    2. '[' → logprob: -8.250273704528809
    3. '+' → logprob: -12.250273704528809
    4. 'x' → logprob: -13.625273704528809
    5. '+[' → logprob: -13.750273704528809
    6. ' [' → logprob: -14.000273704528809
    7. '```' → logprob: -14.250273704528809
    8. '+x' → logprob: -14.750273704528809
    9. '[a' → logprob: -14.875273704528809
    10. '\[' → logprob: -15.125273704528809

Token 426: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.009297938086092472
    2. '+' → logprob: -4.884297847747803
    3. ']' → logprob: -6.884297847747803
    4. '+x' → logprob: -7.634297847747803
    5. '[x' → logprob: -9.134298324584961
    6. ')+' → logprob: -9.884298324584961
    7. ']+=' → logprob: -11.884298324584961
    8. ' +' → logprob: -12.509298324584961
    9. '+]' → logprob: -12.634298324584961
    10. '[' → logprob: -12.759298324584961

Token 427: 'dist' (ID: 24126)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 428: '_goal' (ID: 101684)
  Prédit: '_goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_goal' → logprob: -4.320199877838604e-07
    2. 'goal' → logprob: -15.25
    3. '_' → logprob: -16.625
    4. '_go' → logprob: -17.0
    5. '_cost' → logprob: -18.375
    6. '(goal' → logprob: -18.875
    7. 'Goal' → logprob: -20.0
    8. ' goal' → logprob: -21.5
    9. '```' → logprob: -21.5
    10. '_g' → logprob: -21.75

Token 429: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.001514504081569612
    2. 'x' → logprob: -7.751514434814453
    3. 'for' → logprob: -8.251514434814453
    4. '[min' → logprob: -8.501514434814453
    5. '[' → logprob: -8.751514434814453
    6. '```' → logprob: -9.626514434814453
    7. ' for' → logprob: -9.876514434814453
    8. 'min' → logprob: -10.001514434814453
    9. '
' → logprob: -10.126514434814453
    10. ')' → logprob: -10.376514434814453

Token 430: ']' (ID: 60)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: ' over' (ID: 1072)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4248601496219635
    2. '   ' → logprob: -1.5498601198196411
    3. '
' → logprob: -3.1748602390289307
    4. '-min' → logprob: -3.7998602390289307
    5. '=min' → logprob: -3.9248602390289307
    6. '=' → logprob: -4.299860000610352
    7. ' =' → logprob: -4.924860000610352
    8. '_min' → logprob: -5.299860000610352
    9. 'result' → logprob: -5.424860000610352
    10. 'answer' → logprob: -5.674860000610352

Token 432: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5944215059280396
    2. 'range' → logprob: -0.8444215059280396
    3. 'all' → logprob: -4.59442138671875
    4. ' range' → logprob: -4.84442138671875
    5. ' all' → logprob: -8.59442138671875
    6. ' x' → logprob: -8.84442138671875
    7. '_' → logprob: -13.84442138671875
    8. '(range' → logprob: -14.46942138671875
    9. '0' → logprob: -14.59442138671875
    10. '```' → logprob: -14.96942138671875

Token 433: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6775161623954773
    2. 'min' → logprob: -1.427516222000122
    3. '
' → logprob: -2.052516222000122
    4. '=min' → logprob: -3.427516222000122
    5. ' =' → logprob: -3.552516222000122
    6. '=' → logprob: -3.802516222000122
    7. 'answer' → logprob: -4.302515983581543
    8. 'print' → logprob: -4.927515983581543
    9. '=
' → logprob: -5.177515983581543
    10. 'result' → logprob: -5.552515983581543

Token 434: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.5716304410016164e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -15.125035285949707
    4. '```' → logprob: -19.625036239624023
    5. '[' → logprob: -21.000036239624023
    6. '	range' → logprob: -21.625036239624023
    7. '
' → logprob: -22.250036239624023
    8. 'list' → logprob: -22.250036239624023
    9. '   ' → logprob: -22.375036239624023
    10. '`' → logprob: -22.875036239624023

Token 435: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012421364663168788
    2. '1' → logprob: -6.751242160797119
    3. ' range' → logprob: -9.751241683959961
    4. '0' → logprob: -11.251241683959961
    5. '(range' → logprob: -14.376241683959961
    6. 'n' → logprob: -17.12624168395996
    7. '
' → logprob: -17.87624168395996
    8. '   ' → logprob: -17.87624168395996
    9. '(' → logprob: -18.62624168395996
    10. '```' → logprob: -18.75124168395996

Token 436: ',n' (ID: 18103)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: '].
' (ID: 49887)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 439: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08989644050598145
    2. 'res' → logprob: -2.8398964405059814
    3. 'answer' → logprob: -3.8398964405059814
    4. 'result' → logprob: -5.464896202087402
    5. '
' → logprob: -7.339896202087402
    6. '```' → logprob: -7.589896202087402
    7. 'print' → logprob: -7.964896202087402
    8. '   ' → logprob: -8.964896202087402
    9. 'min' → logprob: -9.089896202087402
    10. ' ans' → logprob: -10.589896202087402

Token 440: ' But' (ID: 3072)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04906373843550682
    2. 'res' → logprob: -3.2990636825561523
    3. 'answer' → logprob: -4.549063682556152
    4. 'result' → logprob: -8.674063682556152
    5. '
' → logprob: -8.799063682556152
    6. 'min' → logprob: -10.799063682556152
    7. ' ans' → logprob: -10.924063682556152
    8. 'print' → logprob: -11.299063682556152
    9. '   ' → logprob: -12.549063682556152
    10. '```' → logprob: -12.799063682556152

Token 441: ' each' (ID: 2454)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12545986473560333
    2. 'for' → logprob: -2.750459909439087
    3. ' for' → logprob: -4.375459671020508
    4. '   ' → logprob: -4.500459671020508
    5. ' #' → logprob: -4.625459671020508
    6. 'min' → logprob: -5.625459671020508
    7. 'the' → logprob: -5.750459671020508
    8. 'dist' → logprob: -6.125459671020508
    9. ' minimal' → logprob: -6.500459671020508
    10. 'we' → logprob: -6.625459671020508

Token 442: ' human' (ID: 5396)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.42021554708480835
    2. 'human' → logprob: -1.6702156066894531
    3. ' dist' → logprob: -2.670215606689453
    4. ' human' → logprob: -3.170215606689453
    5. 'cost' → logprob: -4.920215606689453
    6. 'door' → logprob: -5.045215606689453
    7. '_dist' → logprob: -5.545215606689453
    8. ' of' → logprob: -5.670215606689453
    9. 'edge' → logprob: -5.920215606689453
    10. ' ' → logprob: -6.045215606689453

Token 443: ' door' (ID: 4121)
  Prédit: 'door'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'door' → logprob: -0.3184763193130493
    2. ' door' → logprob: -1.3184763193130493
    3. '_d' → logprob: -5.56847620010376
    4. '-door' → logprob: -8.318476676940918
    5. 'edge' → logprob: -8.443476676940918
    6. '_' → logprob: -8.568476676940918
    7. '-' → logprob: -8.693476676940918
    8. ' edge' → logprob: -9.068476676940918
    9. '_edge' → logprob: -9.443476676940918
    10. ' ' → logprob: -9.818476676940918

Token 444: ' opening' (ID: 12218)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8511961698532104
    2. ' cost' → logprob: -1.6011961698532104
    3. ' is' → logprob: -2.1011962890625
    4. ''s' → logprob: -3.2261962890625
    5. 'is' → logprob: -3.4761962890625
    6. 'used' → logprob: -3.6011962890625
    7. 'opened' → logprob: -3.7261962890625
    8. ' can' → logprob: -4.3511962890625
    9. 'opens' → logprob: -4.8511962890625
    10. '```' → logprob: -4.8511962890625

Token 445: ' counted' (ID: 60500)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9906522035598755
    2. ' is' → logprob: -2.115652084350586
    3. 's' → logprob: -2.615652084350586
    4. '+' → logprob: -2.740652084350586
    5. ' can' → logprob: -2.990652084350586
    6. ']' → logprob: -3.115652084350586
    7. ' for' → logprob: -3.240652084350586
    8. ' requires' → logprob: -3.240652084350586
    9. ' must' → logprob: -3.490652084350586
    10. 'import' → logprob: -3.490652084350586

Token 446: ' thr' (ID: 11622)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 447: 'ice' (ID: 603)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: ' so' (ID: 813)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 450: ' subtract' (ID: 71973)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 451: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 452: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: ' *' (ID: 425)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 454: ' number' (ID: 2086)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: ' of' (ID: 328)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 456: ' times' (ID: 4238)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 457: ' human' (ID: 5396)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: ' doors' (ID: 18282)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' opened' (ID: 13906)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 460: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 462: ' res' (ID: 694)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: '=float' (ID: 80332)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: '('' (ID: 706)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: 'inf' (ID: 22226)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: '')
' (ID: 2515)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' for' (ID: 395)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 470: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 471: ' range' (ID: 3352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: '(n' (ID: 2406)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 473: '+' (ID: 10)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: ' val' (ID: 1459)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 478: '=' (ID: 28)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 479: 'dist' (ID: 24126)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 480: '_n' (ID: 2170)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 481: 'ats' (ID: 1838)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 482: 'ume' (ID: 3095)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 483: '[x' (ID: 17295)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 484: ']+' (ID: 15344)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: 'dist' (ID: 24126)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: '_' (ID: 62)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 487: 'ren' (ID: 1687)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: 'on' (ID: 263)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: '[x' (ID: 17295)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: ']+' (ID: 15344)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 491: 'dist' (ID: 24126)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: '_goal' (ID: 101684)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: '[x' (ID: 17295)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 494: ']
' (ID: 1592)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 495: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: ' if' (ID: 538)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 497: ' val' (ID: 1459)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 498: '<' (ID: 27)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: 'res' (ID: 430)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: '           ' (ID: 352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: ' res' (ID: 694)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 503: '=' (ID: 28)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: 'val' (ID: 1105)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 505: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: ' print' (ID: 2123)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: '(res' (ID: 8331)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 507
Tokens correctement prédits (1ère position, stricte): 162
Tokens correctement prédits (1ère position, avec adaptation): 177
Tokens correctement prédits (top 10): 331
Précision stricte (1ère position): 31.95%
Précision adaptée (1ère position): 34.91%
Précision (top 10): 65.29%
================================================================================
