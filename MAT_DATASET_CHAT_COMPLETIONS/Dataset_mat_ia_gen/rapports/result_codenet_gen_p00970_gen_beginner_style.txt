================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
r, s, p = map(int, input().split())
positions = [tuple(map(int, input().split())) for _ in range(p)]

# Create the car layout: rows x (2*s + 1)
# The aisle is at position s (0-based), seats 0..s-1 on left, s+1..2s on right
width = 2 * s + 1
car = [[None for _ in range(width)] for _ in range(r)]

# Place passengers
for idx, (i, j) in enumerate(positions):
    # Convert to 0-based indices, seat positions shifted by -1
    car[i-1][j-1] = idx

steps = 0
passengers_left = p

while passengers_left > 0:
    moved = [False]*p
    new_car = [row[:] for row in car]

    # Step 1: Try passengers in seats move towards aisle or into aisle
    # Fill moves for passengers on seats, from front row to back and from left to right
    for i in range(r):
        for j in range(width):
            pid = car[i][j]
            if pid is not None and not moved[pid]:
                # If on aisle already
                if j == s:
                    continue
                # If next position towards aisle is empty
                if j < s:
                    next_j = j + 1
                else:
                    next_j = j - 1
                if car[i][next_j] is None and new_car[i][next_j] is None:
                    new_car[i][next_j] = pid
                    new_car[i][j] = None
                    moved[pid] = True

    car = [row[:] for row in new_car]

    # Step 2: Move passengers in aisle row backward if possible or exit
    # Process from back to front, so that back passengers move first
    for i in range(r-1, -1, -1):
        pid = car[i][s]
        if pid is not None and not moved[pid]:
            # If at rear row, passenger gets off
            if i == r-1:
                new_car[i][s] = None
                moved[pid] = True
                passengers_left -= 1
            else:
                # Move backward if the position is free or will be free
                if car[i+1][s] is None and new_car[i+1][s] is None:
                    new_car[i+1][s] = pid
                    new_car[i][s] = None
                    moved[pid] = True

    car = [row[:] for row in new_car]

    steps += 1

print(steps)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'r' (ID: 81)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' s' (ID: 265)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44448351860046387
    2. ' =' → logprob: -1.6944835186004639
    3. ',' → logprob: -1.8194835186004639
    4. ' ' → logprob: -5.319483757019043
    5. '[' → logprob: -6.444483757019043
    6. '.' → logprob: -6.444483757019043
    7. ')' → logprob: -6.569483757019043
    8. '(' → logprob: -7.069483757019043
    9. ':' → logprob: -7.569483757019043
    10. '+' → logprob: -8.194483757019043

Token 4: ' p' (ID: 275)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4454641044139862
    2. ' =' → logprob: -1.1954641342163086
    3. ',' → logprob: -2.9454641342163086
    4. '.' → logprob: -6.570464134216309
    5. ' ' → logprob: -6.820464134216309
    6. '_' → logprob: -7.945464134216309
    7. ':' → logprob: -8.195464134216309
    8. ')' → logprob: -8.195464134216309
    9. ';' → logprob: -8.195464134216309
    10. ' ,' → logprob: -8.570464134216309

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1710999310016632
    2. ' =' → logprob: -2.046099901199341
    3. ',' → logprob: -3.671099901199341
    4. ':' → logprob: -7.29610013961792
    5. ')' → logprob: -7.79610013961792
    6. '[' → logprob: -8.546099662780762
    7. '(' → logprob: -8.546099662780762
    8. '.' → logprob: -8.671099662780762
    9. '```' → logprob: -8.671099662780762
    10. ' ' → logprob: -8.671099662780762

Token 6: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33813098073005676
    2. ' ' → logprob: -1.4631309509277344
    3. '1' → logprob: -3.8381309509277344
    4. ' map' → logprob: -4.463130950927734
    5. 'map' → logprob: -4.963130950927734
    6. 'r' → logprob: -5.838130950927734
    7. '[' → logprob: -6.213130950927734
    8. 'input' → logprob: -6.338130950927734
    9. ' [' → logprob: -6.463130950927734
    10. ' input' → logprob: -7.088130950927734

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009673923254013062
    2. '(lambda' → logprob: -4.759674072265625
    3. '```' → logprob: -8.509674072265625
    4. '<|end|>' → logprob: -8.634674072265625
    5. '(int' → logprob: -8.759674072265625
    6. '(`' → logprob: -9.509674072265625
    7. '(user' → logprob: -9.759674072265625
    8. '(token' → logprob: -9.884674072265625
    9. '(str' → logprob: -10.134674072265625
    10. ')' → logprob: -10.384674072265625

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07012293487787247
    2. '(' → logprob: -3.4451229572296143
    3. ')' → logprob: -3.4451229572296143
    4. '(user' → logprob: -6.445122718811035
    5. '(raw' → logprob: -7.945122718811035
    6. '(str' → logprob: -8.320122718811035
    7. '(r' → logprob: -8.570122718811035
    8. 'input' → logprob: -8.695122718811035
    9. '(range' → logprob: -8.820122718811035
    10. '('' → logprob: -9.070122718811035

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31392398476600647
    2. ' input' → logprob: -1.313923954963684
    3. '(input' → logprob: -7.4389238357543945
    4. ')' → logprob: -9.688923835754395
    5. ',input' → logprob: -12.188923835754395
    6. '=input' → logprob: -13.438923835754395
    7. 'range' → logprob: -13.813923835754395
    8. '(' → logprob: -14.313923835754395
    9. '[input' → logprob: -14.438923835754395
    10. ' )' → logprob: -14.563923835754395

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36425715684890747
    2. '(' → logprob: -1.8642570972442627
    3. '())' → logprob: -2.1142570972442627
    4. '(()' → logprob: -4.864257335662842
    5. '('' → logprob: -4.989257335662842
    6. ')' → logprob: -5.364257335662842
    7. '(""))' → logprob: -6.364257335662842
    8. '("")' → logprob: -6.739257335662842
    9. '();)' → logprob: -6.989257335662842
    10. '());' → logprob: -7.239257335662842

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011891605099663138
    2. 'strip' → logprob: -6.751189231872559
    3. 'rstrip' → logprob: -11.001189231872559
    4. ' split' → logprob: -13.501189231872559
    5. '(split' → logprob: -14.751189231872559
    6. ')' → logprob: -15.751189231872559
    7. 'replace' → logprob: -16.501188278198242
    8. '```' → logprob: -16.626188278198242
    9. 'read' → logprob: -16.626188278198242
    10. 'startswith' → logprob: -17.626188278198242

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0427071675658226
    2. '())' → logprob: -3.2927072048187256
    3. '))' → logprob: -5.6677069664001465
    4. '()' → logprob: -7.2927069664001465
    5. '`)' → logprob: -7.9177069664001465
    6. '(' → logprob: -9.542707443237305
    7. '()))' → logprob: -10.417707443237305
    8. '')' → logprob: -11.667707443237305
    9. ')`' → logprob: -11.667707443237305
    10. ' )' → logprob: -12.167707443237305

Token 13: 'positions' (ID: 32297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6401017308235168
    2. '+' → logprob: -1.015101671218872
    3. 'i' → logprob: -3.640101671218872
    4. '+
' → logprob: -4.015101909637451
    5. '#' → logprob: -4.265101909637451
    6. '\n' → logprob: -4.515101909637451
    7. ',' → logprob: -4.765101909637451
    8. '*' → logprob: -5.515101909637451
    9. '\' → logprob: -5.890101909637451
    10. ' if' → logprob: -5.890101909637451

Token 14: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07144735753536224
    2. '.' → logprob: -3.4464473724365234
    3. '=' → logprob: -3.9464473724365234
    4. ')' → logprob: -5.071447372436523
    5. '_' → logprob: -5.821447372436523
    6. ' =' → logprob: -5.821447372436523
    7. '(' → logprob: -7.071447372436523
    8. '[:]' → logprob: -7.071447372436523
    9. ']' → logprob: -7.446447372436523
    10. ',' → logprob: -7.571447372436523

Token 15: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7130034565925598
    2. ' []' → logprob: -0.7130034565925598
    3. 'list' → logprob: -4.963003635406494
    4. ' [' → logprob: -5.338003635406494
    5. '[' → logprob: -5.838003635406494
    6. ' list' → logprob: -6.088003635406494
    7. 'set' → logprob: -7.088003635406494
    8. '[int' → logprob: -7.463003635406494
    9. '[input' → logprob: -7.713003635406494
    10. ' set' → logprob: -9.088003158569336

Token 16: 'tuple' (ID: 52834)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015096963383257389
    2. ']' → logprob: -5.140097141265869
    3. 'r' → logprob: -5.265097141265869
    4. '()]' → logprob: -6.515097141265869
    5. 'int' → logprob: -7.140097141265869
    6. 'False' → logprob: -8.015096664428711
    7. '(r' → logprob: -8.140096664428711
    8. '(' → logprob: -8.515096664428711
    9. '(int' → logprob: -8.640096664428711
    10. '[]' → logprob: -8.765096664428711

Token 17: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0021631100680679083
    2. '(input' → logprob: -6.502162933349609
    3. '(int' → logprob: -7.877162933349609
    4. '(' → logprob: -8.25216293334961
    5. 'map' → logprob: -11.12716293334961
    6. 'input' → logprob: -13.37716293334961
    7. '(
' → logprob: -13.62716293334961
    8. '((' → logprob: -14.62716293334961
    9. '(

' → logprob: -15.25216293334961
    10. '(list' → logprob: -15.25216293334961

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008833571337163448
    2. 'int' → logprob: -7.12588357925415
    3. '<int' → logprob: -9.875883102416992
    4. '[int' → logprob: -11.500883102416992
    5. ',int' → logprob: -11.750883102416992
    6. '=int' → logprob: -12.250883102416992
    7. '(' → logprob: -12.875883102416992
    8. ' int' → logprob: -13.875883102416992
    9. ']int' → logprob: -14.375883102416992
    10. '```' → logprob: -16.000883102416992

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03291350230574608
    2. ',input' → logprob: -4.032913684844971
    3. ',' → logprob: -4.407913684844971
    4. 'input' → logprob: -6.282913684844971
    5. '(' → logprob: -8.532913208007812
    6. ')' → logprob: -9.157913208007812
    7. '),' → logprob: -9.282913208007812
    8. '(x' → logprob: -9.782913208007812
    9. '(),' → logprob: -10.032913208007812
    10. ' input' → logprob: -10.532913208007812

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759580135345459
    2. ' input' → logprob: -0.8259580135345459
    3. ')' → logprob: -12.450958251953125
    4. '(input' → logprob: -12.825958251953125
    5. '[input' → logprob: -13.075958251953125
    6. ',input' → logprob: -13.575958251953125
    7. '=input' → logprob: -13.700958251953125
    8. ' ' → logprob: -13.825958251953125
    9. 'r' → logprob: -13.950958251953125
    10. 's' → logprob: -13.950958251953125

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.200166469876422e-06
    2. '()))' → logprob: -12.875004768371582
    3. '()' → logprob: -13.125004768371582
    4. '))' → logprob: -15.125004768371582
    5. ' ().' → logprob: -16.3750057220459
    6. ')' → logprob: -16.7500057220459
    7. '())))' → logprob: -17.3750057220459
    8. ').' → logprob: -17.3750057220459
    9. '()
' → logprob: -17.5000057220459
    10. '())).' → logprob: -17.6250057220459

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. 'strip' → logprob: -15.375
    3. ' split' → logprob: -17.375
    4. '(split' → logprob: -17.5
    5. 'spl' → logprob: -18.625
    6. 'rstrip' → logprob: -19.75
    7. 'plit' → logprob: -20.625
    8. '.split' → logprob: -20.875
    9. '_split' → logprob: -21.75
    10. ')' → logprob: -23.0

Token 23: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005251307040452957
    2. '))' → logprob: -6.005251407623291
    3. '())' → logprob: -6.630251407623291
    4. '()' → logprob: -6.630251407623291
    5. '()))
' → logprob: -9.380250930786133
    6. '())))' → logprob: -10.880250930786133
    7. '()));' → logprob: -11.630250930786133
    8. '())).' → logprob: -12.380250930786133
    9. '()))

' → logprob: -12.880250930786133
    10. '()),' → logprob: -12.880250930786133

Token 24: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007244533859193325
    2. ')]' → logprob: -5.00724458694458
    3. 'for' → logprob: -8.507244110107422
    4. ']' → logprob: -8.757244110107422
    5. ' for' → logprob: -9.382244110107422
    6. '()' → logprob: -10.257244110107422
    7. '),' → logprob: -11.257244110107422
    8. '))' → logprob: -11.757244110107422
    9. ')],' → logprob: -12.257244110107422
    10. '")' → logprob: -12.507244110107422

Token 25: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.09354450553655624
    2. '_' → logprob: -2.7185444831848145
    3. ' _' → logprob: -3.9685444831848145
    4. 'range' → logprob: -5.7185444831848145
    5. '(range' → logprob: -7.4685444831848145
    6. '_range' → logprob: -7.9685444831848145
    7. ' ' → logprob: -8.718544960021973
    8. ' xrange' → logprob: -10.843544960021973
    9. '	range' → logprob: -10.843544960021973
    10. ' i' → logprob: -11.218544960021973

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18975798785686493
    2. ' range' → logprob: -2.064758062362671
    3. 'range' → logprob: -3.189758062362671
    4. 'in' → logprob: -5.439757823944092
    5. '(range' → logprob: -8.56475830078125
    6. '_' → logprob: -9.18975830078125
    7. '(' → logprob: -9.56475830078125
    8. '	range' → logprob: -10.43975830078125
    9. '_range' → logprob: -10.68975830078125
    10. 's' → logprob: -10.81475830078125

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. '	range' → logprob: -16.376928329467773
    4. '(range' → logprob: -16.876928329467773
    5. 'r' → logprob: -18.251928329467773
    6. ')' → logprob: -19.376928329467773
    7. '```' → logprob: -19.376928329467773
    8. 'rang' → logprob: -19.376928329467773
    9. '.range' → logprob: -19.501928329467773
    10. '[' → logprob: -19.751928329467773

Token 28: '(p' (ID: 2407)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.010341581888496876
    2. '(s' → logprob: -5.260341644287109
    3. '(' → logprob: -5.385341644287109
    4. '(p' → logprob: -7.635341644287109
    5. '(n' → logprob: -10.63534164428711
    6. '(k' → logprob: -14.01034164428711
    7. '(len' → logprob: -14.63534164428711
    8. '(
' → logprob: -14.76034164428711
    9. ' (' → logprob: -14.88534164428711
    10. '(range' → logprob: -14.88534164428711

Token 29: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.810037742368877e-05
    2. ')' → logprob: -10.750038146972656
    3. ']' → logprob: -11.125038146972656
    4. ')])' → logprob: -14.625038146972656
    5. '')]' → logprob: -14.750038146972656
    6. '))' → logprob: -15.375038146972656
    7. '])]' → logprob: -15.375038146972656
    8. ' )' → logprob: -16.250038146972656
    9. ')],' → logprob: -16.375038146972656
    10. ')]
' → logprob: -16.375038146972656

Token 30: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13513106107711792
    2. 'r' → logprob: -4.010130882263184
    3. 'f' → logprob: -4.510130882263184
    4. 'result' → logprob: -4.635130882263184
    5. 'max' → logprob: -4.635130882263184
    6. 'valid' → logprob: -4.885130882263184
    7. ')' → logprob: -4.885130882263184
    8. 'c' → logprob: -5.010130882263184
    9. 'x' → logprob: -5.135130882263184
    10. ' for' → logprob: -5.260130882263184

Token 31: ' Create' (ID: 6585)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7544156312942505
    2. ' for' → logprob: -0.8794156312942505
    3. 'count' → logprob: -3.629415512084961
    4. 'result' → logprob: -4.129415512084961
    5. ' result' → logprob: -4.754415512084961
    6. '#' → logprob: -4.879415512084961
    7. ' count' → logprob: -5.379415512084961
    8. 'r' → logprob: -5.504415512084961
    9. 'possible' → logprob: -5.504415512084961
    10. 'def' → logprob: -6.004415512084961

Token 32: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5300474762916565
    2. ' an' → logprob: -1.6550474166870117
    3. 'a' → logprob: -2.4050474166870117
    4. 'positions' → logprob: -3.4050474166870117
    5. 'result' → logprob: -3.7800474166870117
    6. ' positions' → logprob: -4.905047416687012
    7. 'r' → logprob: -5.280047416687012
    8. ' result' → logprob: -5.280047416687012
    9. 'an' → logprob: -5.280047416687012
    10. 's' → logprob: -5.530047416687012

Token 33: ' car' (ID: 1669)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -1.9914377927780151
    2. ' graph' → logprob: -2.1164379119873047
    3. ' board' → logprob: -2.2414379119873047
    4. 'positions' → logprob: -2.8664379119873047
    5. ' positions' → logprob: -2.8664379119873047
    6. 'grid' → logprob: -3.2414379119873047
    7. 'graph' → logprob: -3.2414379119873047
    8. 'board' → logprob: -3.2414379119873047
    9. ' result' → logprob: -3.3664379119873047
    10. ' adjacency' → logprob: -3.3664379119873047

Token 34: ' layout' (ID: 10557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.41050049662590027
    2. '_positions' → logprob: -1.4105005264282227
    3. '_' → logprob: -2.5355005264282227
    4. '_s' → logprob: -4.785500526428223
    5. ' =' → logprob: -6.160500526428223
    6. '_car' → logprob: -6.910500526428223
    7. '_list' → logprob: -7.910500526428223
    8. 'positions' → logprob: -8.285500526428223
    9. ''s' → logprob: -8.535500526428223
    10. '_position' → logprob: -8.660500526428223

Token 35: ':' (ID: 25)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.30537721514701843
    2. ' car' → logprob: -3.055377244949341
    3. 'cars' → logprob: -3.180377244949341
    4. ' =' → logprob: -3.305377244949341
    5. 'positions' → logprob: -3.930377244949341
    6. '_' → logprob: -4.180377006530762
    7. '_car' → logprob: -4.305377006530762
    8. ' cars' → logprob: -4.430377006530762
    9. ':' → logprob: -4.430377006530762
    10. 'layout' → logprob: -4.430377006530762

Token 36: ' rows' (ID: 13585)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -1.149243712425232
    2. 'car' → logprob: -1.524243712425232
    3. ' layout' → logprob: -2.0242438316345215
    4. 'layout' → logprob: -2.8992438316345215
    5. ' grid' → logprob: -3.0242438316345215
    6. '[' → logprob: -3.2742438316345215
    7. 'cars' → logprob: -3.5242438316345215
    8. ' [' → logprob: -3.7742438316345215
    9. '[['' → logprob: -3.8992438316345215
    10. ' cars' → logprob: -3.8992438316345215

Token 37: ' x' (ID: 1215)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07333379983901978
    2. '=' → logprob: -2.698333740234375
    3. ',' → logprob: -6.198333740234375
    4. 's' → logprob: -7.698333740234375
    5. '_' → logprob: -7.823333740234375
    6. ' ' → logprob: -8.698333740234375
    7. '[' → logprob: -9.323333740234375
    8. ' ,' → logprob: -9.698333740234375
    9. '_rows' → logprob: -10.323333740234375
    10. 'rows' → logprob: -11.073333740234375

Token 38: ' (' (ID: 350)
  Prédit: 'cols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cols' → logprob: -0.1775205135345459
    2. 'columns' → logprob: -2.177520513534546
    3. ' cols' → logprob: -3.302520513534546
    4. ' columns' → logprob: -4.427520751953125
    5. 's' → logprob: -8.552520751953125
    6. 'r' → logprob: -8.802520751953125
    7. ' r' → logprob: -9.927520751953125
    8. ' s' → logprob: -10.302520751953125
    9. '[' → logprob: -10.677520751953125
    10. '[]' → logprob: -10.927520751953125

Token 39: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7313333749771118
    2. 'columns' → logprob: -1.4813333749771118
    3. 'cols' → logprob: -2.4813332557678223
    4. 's' → logprob: -2.6063332557678223
    5. ' columns' → logprob: -3.1063332557678223
    6. ' r' → logprob: -3.3563332557678223
    7. 'c' → logprob: -3.6063332557678223
    8. ' cols' → logprob: -4.856333255767822
    9. ' s' → logprob: -4.981333255767822
    10. ' ' → logprob: -5.981333255767822

Token 40: '*s' (ID: 71191)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.231774926185608
    2. ')' → logprob: -1.356774926185608
    3. '*r' → logprob: -1.606774926185608
    4. '*' → logprob: -1.856774926185608
    5. '*s' → logprob: -2.7317748069763184
    6. ' )' → logprob: -4.481774806976318
    7. 'r' → logprob: -5.231774806976318
    8. 's' → logprob: -5.856774806976318
    9. ' +' → logprob: -6.231774806976318
    10. '*c' → logprob: -6.356774806976318

Token 41: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18009305000305176
    2. '+' → logprob: -2.0550930500030518
    3. ' +' → logprob: -3.4300930500030518
    4. ' )' → logprob: -5.555092811584473
    5. '+)' → logprob: -9.305092811584473
    6. '+r' → logprob: -9.305092811584473
    7. 'r' → logprob: -9.805092811584473
    8. ' -' → logprob: -10.055092811584473
    9. '*' → logprob: -10.305092811584473
    10. '-' → logprob: -10.430092811584473

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003212649840861559
    2. ' ' → logprob: -6.1282124519348145
    3. '2' → logprob: -7.3782124519348145
    4. '3' → logprob: -8.753212928771973
    5. 'r' → logprob: -9.128212928771973
    6. 'p' → logprob: -10.253212928771973
    7. 's' → logprob: -10.503212928771973
    8. 'c' → logprob: -11.128212928771973
    9. '4' → logprob: -11.503212928771973
    10. '(' → logprob: -11.753212928771973

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001640069531276822
    2. 'c' → logprob: -7.1266398429870605
    3. 'r' → logprob: -7.8766398429870605
    4. '2' → logprob: -8.251640319824219
    5. '3' → logprob: -9.751640319824219
    6. ' ' → logprob: -9.876640319824219
    7. '(' → logprob: -11.126640319824219
    8. 'p' → logprob: -12.001640319824219
    9. 's' → logprob: -12.251640319824219
    10. '10' → logprob: -12.314140319824219

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001386189484037459
    2. ' )' → logprob: -6.6263861656188965
    3. '),' → logprob: -11.126386642456055
    4. ',' → logprob: -11.751386642456055
    5. ')
' → logprob: -11.876386642456055
    6. 'rows' → logprob: -12.001386642456055
    7. '*' → logprob: -12.751386642456055
    8. ' rows' → logprob: -13.001386642456055
    9. ')

' → logprob: -13.251386642456055
    10. '```' → logprob: -13.251386642456055

Token 45: '#' (ID: 2)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.09560652077198029
    2. 'layout' → logprob: -2.720606565475464
    3. ' car' → logprob: -4.470606327056885
    4. ' layout' → logprob: -4.720606327056885
    5. 'rows' → logprob: -5.720606327056885
    6. 'seat' → logprob: -7.595606327056885
    7. 'n' → logprob: -8.595606803894043
    8. 'row' → logprob: -8.845606803894043
    9. 'cars' → logprob: -8.845606803894043
    10. 'grid' → logprob: -9.345606803894043

Token 46: ' The' (ID: 623)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.08994068205356598
    2. ' car' → logprob: -2.9649407863616943
    3. 'layout' → logprob: -4.339940547943115
    4. ' layout' → logprob: -4.839940547943115
    5. 'seat' → logprob: -4.839940547943115
    6. 'rows' → logprob: -6.714940547943115
    7. 'se' → logprob: -6.839940547943115
    8. ' seats' → logprob: -6.839940547943115
    9. ' seat' → logprob: -7.339940547943115
    10. ' seating' → logprob: -7.714940547943115

Token 47: ' aisle' (ID: 99887)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.3796827793121338
    2. ' layout' → logprob: -2.004682779312134
    3. 'car' → logprob: -2.004682779312134
    4. ' seats' → logprob: -4.379682540893555
    5. 'layout' → logprob: -5.004682540893555
    6. ' seat' → logprob: -5.379682540893555
    7. ' rows' → logprob: -5.629682540893555
    8. ' seating' → logprob: -5.629682540893555
    9. ' cars' → logprob: -6.004682540893555
    10. '_' → logprob: -6.879682540893555

Token 48: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5272353291511536
    2. '=' → logprob: -0.9022353291511536
    3. 's' → logprob: -6.527235507965088
    4. '_' → logprob: -6.652235507965088
    5. ',' → logprob: -8.52723503112793
    6. '=[]' → logprob: -8.52723503112793
    7. '_width' → logprob: -8.65223503112793
    8. '_length' → logprob: -9.15223503112793
    9. '_space' → logprob: -9.27723503112793
    10. ' ' → logprob: -9.65223503112793

Token 49: ' at' (ID: 540)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4586591422557831
    2. ' at' → logprob: -1.8336591720581055
    3. ' ' → logprob: -2.8336591720581055
    4. ' represented' → logprob: -3.4586591720581055
    5. ' the' → logprob: -3.7086591720581055
    6. ' a' → logprob: -3.8336591720581055
    7. ''s' → logprob: -4.3336591720581055
    8. 's' → logprob: -4.4586591720581055
    9. ' located' → logprob: -4.7086591720581055
    10. '<|end|>' → logprob: -4.9586591720581055

Token 50: ' position' (ID: 4010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21086734533309937
    2. ' s' → logprob: -1.7108674049377441
    3. ' position' → logprob: -5.710867404937744
    4. ' index' → logprob: -6.085867404937744
    5. ' positions' → logprob: -6.460867404937744
    6. 'position' → logprob: -7.460867404937744
    7. 'index' → logprob: -7.710867404937744
    8. '<|end|>' → logprob: -8.335866928100586
    9. 'positions' → logprob: -8.460866928100586
    10. ' column' → logprob: -8.460866928100586

Token 51: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02449154295027256
    2. ' s' → logprob: -3.774491548538208
    3. '<|end|>' → logprob: -7.399491310119629
    4. '(s' → logprob: -7.774491310119629
    5. ' ' → logprob: -9.024491310119629
    6. 'space' → logprob: -10.649491310119629
    7. '_s' → logprob: -11.524491310119629
    8. 'spaces' → logprob: -11.649491310119629
    9. ''s' → logprob: -12.024491310119629
    10. ' in' → logprob: -12.024491310119629

Token 52: ' (' (ID: 350)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.17050744593143463
    2. 'layout' → logprob: -2.5455074310302734
    3. '#' → logprob: -3.7955074310302734
    4. 'seat' → logprob: -4.545507431030273
    5. ' layout' → logprob: -4.670507431030273
    6. ' car' → logprob: -4.920507431030273
    7. 'rows' → logprob: -5.420507431030273
    8. 'row' → logprob: -5.670507431030273
    9. 'c' → logprob: -6.295507431030273
    10. 'grid' → logprob: -6.295507431030273

Token 53: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02599707432091236
    2. 's' → logprob: -4.900997161865234
    3. ' )' → logprob: -5.150997161865234
    4. '0' → logprob: -5.650997161865234
    5. ' in' → logprob: -6.025997161865234
    6. '+' → logprob: -6.025997161865234
    7. '),' → logprob: -6.775997161865234
    8. 'in' → logprob: -7.150997161865234
    9. ',' → logprob: -7.900997161865234
    10. ' s' → logprob: -7.900997161865234

Token 54: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007142394781112671
    2. '-based' → logprob: -6.007142543792725
    3. ' )' → logprob: -6.132142543792725
    4. ',' → logprob: -7.382142543792725
    5. '#' → logprob: -7.507142543792725
    6. '+' → logprob: -8.132142066955566
    7. 'based' → logprob: -8.632142066955566
    8. '-' → logprob: -9.007142066955566
    9. '),' → logprob: -9.507142066955566
    10. ')
' → logprob: -9.507142066955566

Token 55: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025601962115615606
    2. ' )' → logprob: -6.002560138702393
    3. ')
' → logprob: -11.12756061553955
    4. 'index' → logprob: -11.37756061553955
    5. '#' → logprob: -11.62756061553955
    6. ' in' → logprob: -12.00256061553955
    7. '),' → logprob: -12.00256061553955
    8. 's' → logprob: -12.37756061553955
    9. ').' → logprob: -12.62756061553955
    10. 'in' → logprob: -12.62756061553955

Token 56: ' seats' (ID: 24992)
  Prédit: ' layout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' layout' → logprob: -1.674697995185852
    2. '#' → logprob: -1.924697995185852
    3. ' rows' → logprob: -1.924697995185852
    4. ' car' → logprob: -2.4246978759765625
    5. ' positions' → logprob: -2.5496978759765625
    6. 'car' → logprob: -2.6746978759765625
    7. ')' → logprob: -2.9246978759765625
    8. 'positions' → logprob: -3.2996978759765625
    9. 'rows' → logprob: -3.4246978759765625
    10. ' seats' → logprob: -3.9246978759765625

Token 57: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1427154541015625
    2. ' on' → logprob: -2.6427154541015625
    3. ' =' → logprob: -3.1427154541015625
    4. '[' → logprob: -5.0177154541015625
    5. 's' → logprob: -5.5177154541015625
    6. '0' → logprob: -5.8927154541015625
    7. ' at' → logprob: -6.6427154541015625
    8. 'on' → logprob: -7.2677154541015625
    9. ' to' → logprob: -7.2677154541015625
    10. ' are' → logprob: -7.3927154541015625

Token 58: '0' (ID: 15)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6004906892776489
    2. '=' → logprob: -1.225490689277649
    3. 'to' → logprob: -2.4754905700683594
    4. 'at' → logprob: -3.3504905700683594
    5. ' on' → logprob: -4.100490570068359
    6. 'are' → logprob: -4.350490570068359
    7. ' to' → logprob: -6.100490570068359
    8. '#' → logprob: -6.225490570068359
    9. ' are' → logprob: -6.600490570068359
    10. 'left' → logprob: -7.100490570068359

Token 59: '..' (ID: 485)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5742458701133728
    2. 'to' → logprob: -1.3242459297180176
    3. '-' → logprob: -2.6992459297180176
    4. ' through' → logprob: -3.5742459297180176
    5. ',' → logprob: -3.6992459297180176
    6. '..' → logprob: -4.199245929718018
    7. 's' → logprob: -4.574245929718018
    8. '...' → logprob: -4.699245929718018
    9. '<|end|>' → logprob: -5.199245929718018
    10. 'through' → logprob: -5.449245929718018

Token 60: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3907136619091034
    2. '2' → logprob: -1.3907136917114258
    3. '(' → logprob: -2.765713691711426
    4. ' ' → logprob: -5.765713691711426
    5. '(s' → logprob: -5.765713691711426
    6. ' (' → logprob: -6.140713691711426
    7. ' s' → logprob: -6.765713691711426
    8. '..' → logprob: -7.640713691711426
    9. '...' → logprob: -7.890713691711426
    10. '0' → logprob: -8.265713691711426

Token 61: '-' (ID: 12)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14414817094802856
    2. ' *' → logprob: -3.394148111343384
    3. '2' → logprob: -3.644148111343384
    4. '+' → logprob: -4.019148349761963
    5. 's' → logprob: -4.144148349761963
    6. ')' → logprob: -4.269148349761963
    7. '-' → logprob: -4.519148349761963
    8. ',' → logprob: -5.394148349761963
    9. '#' → logprob: -6.144148349761963
    10. '0' → logprob: -6.769148349761963

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002626904286444187
    2. '-' → logprob: -6.002626895904541
    3. 's' → logprob: -9.6276273727417
    4. '2' → logprob: -10.7526273727417
    5. '0' → logprob: -11.1276273727417
    6. '```' → logprob: -11.3776273727417
    7. '4' → logprob: -11.7526273727417
    8. ' ' → logprob: -12.0026273727417
    9. ' -' → logprob: -12.3776273727417
    10. '<|end|>' → logprob: -12.3776273727417

Token 63: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.419262170791626
    2. ' and' → logprob: -1.669262170791626
    3. ',' → logprob: -2.419262170791626
    4. ' to' → logprob: -3.669262170791626
    5. 's' → logprob: -4.919261932373047
    6. 'and' → logprob: -5.044261932373047
    7. ')' → logprob: -5.044261932373047
    8. 'on' → logprob: -5.544261932373047
    9. ' in' → logprob: -6.169261932373047
    10. 'to' → logprob: -6.169261932373047

Token 64: ' left' (ID: 3561)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2848561704158783
    2. ' the' → logprob: -2.034856081008911
    3. 'each' → logprob: -2.784856081008911
    4. 'left' → logprob: -3.159856081008911
    5. ' each' → logprob: -4.53485631942749
    6. ' left' → logprob: -7.03485631942749
    7. 'either' → logprob: -7.78485631942749
    8. 'both' → logprob: -9.097355842590332
    9. '```' → logprob: -9.159855842590332
    10. ' either' → logprob: -9.222355842590332

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0590636730194092
    2. '#' → logprob: -1.3090636730194092
    3. '<|end|>' → logprob: -2.059063673019409
    4. ' and' → logprob: -2.434063673019409
    5. 's' → logprob: -2.559063673019409
    6. 'and' → logprob: -3.184063673019409
    7. 'side' → logprob: -4.434063911437988
    8. ')' → logprob: -4.809063911437988
    9. '```' → logprob: -5.184063911437988
    10. 'rows' → logprob: -5.309063911437988

Token 66: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8172152638435364
    2. ' seats' → logprob: -1.0672152042388916
    3. 'se' → logprob: -2.0672152042388916
    4. ' s' → logprob: -2.8172152042388916
    5. '#' → logprob: -4.317215442657471
    6. ' and' → logprob: -5.317215442657471
    7. 'and' → logprob: -6.567215442657471
    8. 'seat' → logprob: -6.567215442657471
    9. ' #' → logprob: -6.942215442657471
    10. ',' → logprob: -6.942215442657471

Token 67: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001231657573953271
    2. ' +' → logprob: -6.751231670379639
    3. '<|end|>' → logprob: -11.12623119354248
    4. '-' → logprob: -12.00123119354248
    5. ',' → logprob: -12.12623119354248
    6. '+
' → logprob: -12.25123119354248
    7. '<|end|>' → logprob: -12.50123119354248
    8. ' and' → logprob: -13.00123119354248
    9. '.' → logprob: -13.00123119354248
    10. ')' → logprob: -13.12623119354248

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003424951864872128
    2. 's' → logprob: -8.00034236907959
    3. '+' → logprob: -13.12534236907959
    4. '<|end|>' → logprob: -13.25034236907959
    5. ' ' → logprob: -13.62534236907959
    6. '```' → logprob: -13.87534236907959
    7. '0' → logprob: -15.93784236907959
    8. ' s' → logprob: -16.187843322753906
    9. '#' → logprob: -16.437843322753906
    10. '2' → logprob: -16.562843322753906

Token 69: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04518112912774086
    2. ' to' → logprob: -4.7951812744140625
    3. '#' → logprob: -4.9201812744140625
    4. 'to' → logprob: -4.9201812744140625
    5. '<|end|>' → logprob: -5.0451812744140625
    6. 's' → logprob: -5.5451812744140625
    7. '+' → logprob: -6.4201812744140625
    8. 'and' → logprob: -6.6701812744140625
    9. '...' → logprob: -6.7951812744140625
    10. '=' → logprob: -6.9201812744140625

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000520981615409255
    2. ' ' → logprob: -8.000520706176758
    3. 's' → logprob: -8.750520706176758
    4. '(' → logprob: -11.875520706176758
    5. 'end' → logprob: -12.500520706176758
    6. '<|end|>' → logprob: -12.500520706176758
    7. '```' → logprob: -12.875520706176758
    8. '
' → logprob: -13.375520706176758
    9. '`' → logprob: -13.500520706176758
    10. '1' → logprob: -13.625520706176758

Token 71: 's' (ID: 82)
  Prédit: '*s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.0018245273968204856
    2. '*' → logprob: -7.001824378967285
    3. 's' → logprob: -7.001824378967285
    4. '*p' → logprob: -13.751824378967285
    5. ' *' → logprob: -13.876824378967285
    6. '*r' → logprob: -15.876824378967285
    7. '_s' → logprob: -16.6268253326416
    8. '<s' → logprob: -16.8768253326416
    9. '*(' → logprob: -18.3768253326416
    10. '*c' → logprob: -18.3768253326416

Token 72: ' on' (ID: 402)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003561584744602442
    2. ')' → logprob: -5.878561496734619
    3. '+r' → logprob: -8.253561973571777
    4. ' +' → logprob: -9.128561973571777
    5. 'r' → logprob: -9.253561973571777
    6. '=' → logprob: -9.503561973571777
    7. ']' → logprob: -10.003561973571777
    8. '+)' → logprob: -10.003561973571777
    9. 's' → logprob: -10.628561973571777
    10. '```' → logprob: -10.753561973571777

Token 73: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.23537038266658783
    2. ' right' → logprob: -2.360370397567749
    3. 'the' → logprob: -2.360370397567749
    4. ' the' → logprob: -4.11037015914917
    5. '2' → logprob: -5.73537015914917
    6. 'range' → logprob: -8.110370635986328
    7. 'left' → logprob: -8.360370635986328
    8. ' ' → logprob: -8.485370635986328
    9. ' range' → logprob: -9.235370635986328
    10. 'each' → logprob: -9.235370635986328

Token 74: '
' (ID: 198)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.28078439831733704
    2. 'layout' → logprob: -1.9057843685150146
    3. 'seat' → logprob: -3.4057843685150146
    4. 'se' → logprob: -3.7807843685150146
    5. '#' → logprob: -4.905784606933594
    6. 'rows' → logprob: -5.155784606933594
    7. 'cars' → logprob: -5.780784606933594
    8. 'grid' → logprob: -5.905784606933594
    9. 'row' → logprob: -6.155784606933594
    10. ')' → logprob: -6.780784606933594

Token 75: 'width' (ID: 6015)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.47492149472236633
    2. 'seat' → logprob: -1.724921464920044
    3. 'layout' → logprob: -2.099921464920044
    4. 'se' → logprob: -2.724921464920044
    5. '#' → logprob: -5.849921703338623
    6. 'rows' → logprob: -6.349921703338623
    7. 'grid' → logprob: -6.599921703338623
    8. 'cars' → logprob: -6.849921703338623
    9. '```' → logprob: -7.474921703338623
    10. 'row' → logprob: -7.599921703338623

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026304826140403748
    2. '=' → logprob: -3.6513047218322754
    3. ',' → logprob: -13.026305198669434
    4. ')' → logprob: -14.276305198669434
    5. 's' → logprob: -14.276305198669434
    6. ' ' → logprob: -14.776305198669434
    7. ' =
' → logprob: -15.026305198669434
    8. ' =)' → logprob: -15.901305198669434
    9. ' =
' → logprob: -16.776304244995117
    10. ' ' → logprob: -17.276304244995117

Token 77: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47410380840301514
    2. '2' → logprob: -0.9741038084030151
    3. '(' → logprob: -11.224103927612305
    4. ' (' → logprob: -11.349103927612305
    5. '   ' → logprob: -13.849103927612305
    6. '  ' → logprob: -14.849103927612305
    7. '`' → logprob: -16.349103927612305
    8. 's' → logprob: -16.474103927612305
    9. ' ' → logprob: -16.599103927612305
    10. '```' → logprob: -16.599103927612305

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012030890211462975
    2. '(' → logprob: -7.2512030601501465
    3. ' ' → logprob: -7.6262030601501465
    4. 's' → logprob: -12.876203536987305
    5. ' (' → logprob: -13.876203536987305
    6. '```' → logprob: -14.126203536987305
    7. '`' → logprob: -15.001203536987305
    8. '1' → logprob: -15.251203536987305
    9. '   ' → logprob: -15.626203536987305
    10. '[' → logprob: -16.438703536987305

Token 79: ' *' (ID: 425)
  Prédit: '*s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.19202828407287598
    2. '*' → logprob: -1.817028284072876
    3. ' *' → logprob: -4.442028045654297
    4. 's' → logprob: -7.817028045654297
    5. '*p' → logprob: -11.067028045654297
    6. '**' → logprob: -12.442028045654297
    7. '*r' → logprob: -12.567028045654297
    8. '```' → logprob: -13.317028045654297
    9. ' ' → logprob: -13.942028045654297
    10. '*q' → logprob: -14.317028045654297

Token 80: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024756586644798517
    2. ' s' → logprob: -6.002475738525391
    3. '<|end|>' → logprob: -18.12747573852539
    4. ' ' → logprob: -19.12747573852539
    5. '_s' → logprob: -19.25247573852539
    6. ''s' → logprob: -19.50247573852539
    7. '(s' → logprob: -19.87747573852539
    8. '	s' → logprob: -20.12747573852539
    9. '`s' → logprob: -20.25247573852539
    10. '*s' → logprob: -20.37747573852539

Token 81: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693724036216736
    2. ' +' → logprob: -2.1269371509552
    3. '1' → logprob: -12.751936912536621
    4. ' plus' → logprob: -13.126936912536621
    5. '```' → logprob: -13.501936912536621
    6. '＋' → logprob: -14.626936912536621
    7. '+r' → logprob: -14.876936912536621
    8. ' ' → logprob: -15.001936912536621
    9. 'plus' → logprob: -15.126936912536621
    10. 's' → logprob: -15.376936912536621

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -17.125051498413086
    4. '   ' → logprob: -19.125051498413086
    5. '۱' → logprob: -19.812551498413086
    6. '１' → logprob: -19.875051498413086
    7. '<|end|>' → logprob: -20.250051498413086
    8. '' → logprob: -20.375051498413086
    9. '+' → logprob: -20.375051498413086
    10. '  ' → logprob: -20.625051498413086

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -18.8750057220459
    4. '۱' → logprob: -19.2500057220459
    5. '１' → logprob: -19.6250057220459
    6. '-' → logprob: -20.0000057220459
    7. '  ' → logprob: -20.2500057220459
    8. '2' → logprob: -20.3125057220459
    9. '<|end|>' → logprob: -20.3125057220459
    10. '   ' → logprob: -20.3125057220459

Token 84: '
' (ID: 198)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6406819820404053
    2. 'seat' → logprob: -1.7656819820404053
    3. 'layout' → logprob: -1.8906819820404053
    4. 'rows' → logprob: -2.6406819820404053
    5. 'row' → logprob: -3.7656819820404053
    6. '
' → logprob: -4.140682220458984
    7. 'height' → logprob: -5.015682220458984
    8. '#' → logprob: -5.265682220458984
    9. '```' → logprob: -5.390682220458984
    10. '<|end|>' → logprob: -6.265682220458984

Token 85: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6610167622566223
    2. 'seat' → logprob: -1.5360167026519775
    3. 'layout' → logprob: -2.0360167026519775
    4. 'se' → logprob: -2.4110167026519775
    5. 'grid' → logprob: -4.036016941070557
    6. '#' → logprob: -5.036016941070557
    7. 'rows' → logprob: -5.161016941070557
    8. 'occup' → logprob: -5.661016941070557
    9. 'row' → logprob: -6.036016941070557
    10. 'arr' → logprob: -6.286016941070557

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39287349581718445
    2. '_layout' → logprob: -1.3928735256195068
    3. '_' → logprob: -3.267873525619507
    4. '=' → logprob: -3.267873525619507
    5. '[' → logprob: -9.017873764038086
    6. 'layout' → logprob: -9.517873764038086
    7. ' ' → logprob: -10.392873764038086
    8. '=[]' → logprob: -11.017873764038086
    9. '_positions' → logprob: -11.267873764038086
    10. '_map' → logprob: -11.392873764038086

Token 87: ' [[' (ID: 9237)
  Prédit: '[[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[['' → logprob: -0.3922903537750244
    2. '[' → logprob: -1.8922903537750244
    3. '[[' → logprob: -2.0172903537750244
    4. ' [['' → logprob: -3.5172903537750244
    5. ' [[' → logprob: -5.267290115356445
    6. ' [' → logprob: -5.642290115356445
    7. '[]' → logprob: -6.517290115356445
    8. ' [["' → logprob: -7.392290115356445
    9. '['' → logprob: -8.517290115356445
    10. ' []' → logprob: -10.517290115356445

Token 88: 'None' (ID: 8505)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.21358878910541534
    2. ''' → logprob: -2.2135887145996094
    3. 'False' → logprob: -3.0885887145996094
    4. '0' → logprob: -3.9635887145996094
    5. ''-' → logprob: -5.213588714599609
    6. '"' → logprob: -5.963588714599609
    7. ''*' → logprob: -6.338588714599609
    8. '".' → logprob: -6.463588714599609
    9. '"."' → logprob: -6.463588714599609
    10. 'None' → logprob: -6.713588714599609

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009919465519487858
    2. 'for' → logprob: -4.6349196434021
    3. ')' → logprob: -9.384919166564941
    4. ']' → logprob: -10.134919166564941
    5. ' ' → logprob: -10.384919166564941
    6. '	for' → logprob: -12.134919166564941
    7. ' ]' → logprob: -13.634919166564941
    8. ')]' → logprob: -14.009919166564941
    9. '<|end|>' → logprob: -15.009919166564941
    10. ',' → logprob: -15.259919166564941

Token 90: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.12752631306648254
    2. '_' → logprob: -2.12752628326416
    3. ' ' → logprob: -7.62752628326416
    4. ' range' → logprob: -9.75252628326416
    5. ' in' → logprob: -10.25252628326416
    6. '_range' → logprob: -12.00252628326416
    7. 'range' → logprob: -12.25252628326416
    8. '<|end|>' → logprob: -12.37752628326416
    9. '_in' → logprob: -14.75252628326416
    10. ' ]' → logprob: -14.87752628326416

Token 91: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006908960174769163
    2. ' range' → logprob: -5.006908893585205
    3. 'in' → logprob: -9.131909370422363
    4. ' in' → logprob: -9.381909370422363
    5. '(range' → logprob: -14.131909370422363
    6. '	range' → logprob: -15.381909370422363
    7. ' xrange' → logprob: -16.256908416748047
    8. ')' → logprob: -17.256908416748047
    9. ' ' → logprob: -17.381908416748047
    10. '-range' → logprob: -17.506908416748047

Token 92: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048587486147880554
    2. ' range' → logprob: -3.0485875606536865
    3. '(range' → logprob: -16.923587799072266
    4. ')' → logprob: -17.423587799072266
    5. '	range' → logprob: -17.548587799072266
    6. '_range' → logprob: -18.173587799072266
    7. '```' → logprob: -19.298587799072266
    8. 'Range' → logprob: -20.173587799072266
    9. 'rang' → logprob: -20.298587799072266
    10. '.range' → logprob: -20.798587799072266

Token 93: '(width' (ID: 32972)
  Prédit: '(width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(width' → logprob: -2.546478935983032e-05
    2. '(' → logprob: -10.750025749206543
    3. 'width' → logprob: -12.500025749206543
    4. ' width' → logprob: -16.750024795532227
    5. ' (' → logprob: -17.125024795532227
    6. ',width' → logprob: -17.125024795532227
    7. '	width' → logprob: -18.125024795532227
    8. '(length' → logprob: -18.750024795532227
    9. '(w' → logprob: -19.250024795532227
    10. '(depth' → logprob: -19.875024795532227

Token 94: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.641841820150148e-05
    2. ' )' → logprob: -11.00002670288086
    3. ']' → logprob: -12.25002670288086
    4. ')' → logprob: -12.50002670288086
    5. ' ]' → logprob: -13.87502670288086
    6. ')]
' → logprob: -16.87502670288086
    7. ')}' → logprob: -17.00002670288086
    8. ']]' → logprob: -17.00002670288086
    9. '])]' → logprob: -17.75002670288086
    10. '))' → logprob: -17.87502670288086

Token 95: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015672404319047928
    2. ')' → logprob: -5.015672206878662
    3. ' ]' → logprob: -5.390672206878662
    4. ')]' → logprob: -5.515672206878662
    5. ' for' → logprob: -8.14067268371582
    6. 'for' → logprob: -11.01567268371582
    7. '<|end|>' → logprob: -11.64067268371582
    8. ' )' → logprob: -12.26567268371582
    9. ' ' → logprob: -12.39067268371582
    10. '   ' → logprob: -13.26567268371582

Token 96: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06908071786165237
    2. ' _' → logprob: -2.8190808296203613
    3. '_' → logprob: -5.819080829620361
    4. 'range' → logprob: -5.944080829620361
    5. ' ' → logprob: -6.944080829620361
    6. '(range' → logprob: -8.194080352783203
    7. '_range' → logprob: -9.069080352783203
    8. ' in' → logprob: -9.319080352783203
    9. '<|end|>' → logprob: -10.819080352783203
    10. ' ' → logprob: -12.319080352783203

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10814788937568665
    2. 'in' → logprob: -2.3581478595733643
    3. 'range' → logprob: -4.858148097991943
    4. ' range' → logprob: -8.858147621154785
    5. '(range' → logprob: -13.483147621154785
    6. ' ' → logprob: -14.233147621154785
    7. '_' → logprob: -15.233147621154785
    8. 'i' → logprob: -16.2331485748291
    9. 'r' → logprob: -16.7331485748291
    10. '_range' → logprob: -16.9831485748291

Token 98: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067156096920371056
    2. ' range' → logprob: -5.006715774536133
    3. '(range' → logprob: -15.756715774536133
    4. 'r' → logprob: -16.256715774536133
    5. '	range' → logprob: -17.381715774536133
    6. '_range' → logprob: -20.006715774536133
    7. 'rang' → logprob: -20.256715774536133
    8. 'row' → logprob: -21.131715774536133
    9. ' ' → logprob: -21.256715774536133
    10. 'ran' → logprob: -21.381715774536133

Token 99: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00010092071170220152
    2. '(' → logprob: -9.625101089477539
    3. ' r' → logprob: -10.875101089477539
    4. ' (' → logprob: -11.375101089477539
    5. 'r' → logprob: -12.375101089477539
    6. '	r' → logprob: -16.37510108947754
    7. '(rows' → logprob: -16.62510108947754
    8. '(
' → logprob: -17.25010108947754
    9. '(range' → logprob: -17.50010108947754
    10. '(row' → logprob: -17.75010108947754

Token 100: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.4121114822482923e-06
    2. ')' → logprob: -13.000003814697266
    3. ']' → logprob: -13.875003814697266
    4. ')],' → logprob: -17.125003814697266
    5. '')]' → logprob: -17.750003814697266
    6. '))' → logprob: -17.875003814697266
    7. ')])' → logprob: -18.000003814697266
    8. ')}' → logprob: -18.125003814697266
    9. ' )' → logprob: -18.250003814697266
    10. ')].' → logprob: -18.250003814697266

Token 101: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11584994196891785
    2. '#' → logprob: -2.3658499717712402
    3. 'i' → logprob: -4.74084997177124
    4. ' for' → logprob: -6.99084997177124
    5. 'seat' → logprob: -7.36584997177124
    6. '<|end|>' → logprob: -7.36584997177124
    7. 'token' → logprob: -7.49084997177124
    8. 'row' → logprob: -7.61584997177124
    9. 'index' → logprob: -7.61584997177124
    10. ')' → logprob: -7.74084997177124

Token 102: ' Place' (ID: 16303)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.051691826432943344
    2. '#' → logprob: -3.926691770553589
    3. 'seat' → logprob: -4.426692008972168
    4. 'row' → logprob: -4.801692008972168
    5. 'current' → logprob: -5.801692008972168
    6. 'idx' → logprob: -6.301692008972168
    7. 'index' → logprob: -6.551692008972168
    8. 'next' → logprob: -7.551692008972168
    9. 'token' → logprob: -7.801692008972168
    10. 'pass' → logprob: -7.801692008972168

Token 103: ' passengers' (ID: 37252)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5091833472251892
    2. ' for' → logprob: -1.009183406829834
    3. '<|end|>' → logprob: -3.884183406829834
    4. 'i' → logprob: -5.134183406829834
    5. ' in' → logprob: -6.634183406829834
    6. '#' → logprob: -6.634183406829834
    7. '=' → logprob: -7.384183406829834
    8. ' ' → logprob: -7.384183406829834
    9. '<|end|>' → logprob: -7.384183406829834
    10. 'in' → logprob: -7.884183406829834

Token 105: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.0126840758603066e-05
    2. 'idx' → logprob: -10.375040054321289
    3. 'index' → logprob: -12.750040054321289
    4. 'pass' → logprob: -13.125040054321289
    5. 'i' → logprob: -13.750040054321289
    6. 'token' → logprob: -14.250040054321289
    7. ' for' → logprob: -14.250040054321289
    8. 'pos' → logprob: -14.750040054321289
    9. 'row' → logprob: -15.125040054321289
    10. 'occupied' → logprob: -15.625040054321289

Token 106: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7216992378234863
    2. 'i' → logprob: -1.8466992378234863
    3. ' pos' → logprob: -2.3466992378234863
    4. ' idx' → logprob: -2.4716992378234863
    5. ' _' → logprob: -2.7216992378234863
    6. ' row' → logprob: -3.4716992378234863
    7. '_' → logprob: -3.5966992378234863
    8. 'pos' → logprob: -4.096699237823486
    9. 'row' → logprob: -4.596699237823486
    10. 'idx' → logprob: -4.721699237823486

Token 107: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6280233860015869
    2. ',' → logprob: -0.8780233860015869
    3. 'in' → logprob: -3.003023386001587
    4. ' ,' → logprob: -7.128023147583008
    5. ' ' → logprob: -8.253023147583008
    6. ',p' → logprob: -12.003023147583008
    7. 's' → logprob: -12.128023147583008
    8. '1' → logprob: -12.253023147583008
    9. '_,' → logprob: -12.753023147583008
    10. ')' → logprob: -12.878023147583008

Token 108: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.11224814504384995
    2. ' (' → logprob: -2.362248182296753
    3. '(' → logprob: -5.237247943878174
    4. '(position' → logprob: -6.237247943878174
    5. '(row' → logprob: -6.487247943878174
    6. 'pos' → logprob: -6.987247943878174
    7. '(p' → logprob: -6.987247943878174
    8. '(r' → logprob: -8.362248420715332
    9. '(pass' → logprob: -8.612248420715332
    10. '(x' → logprob: -8.737248420715332

Token 109: 'i' (ID: 72)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.07220689207315445
    2. 'x' → logprob: -2.697206974029541
    3. 'ri' → logprob: -6.697206974029541
    4. 'seat' → logprob: -7.697206974029541
    5. 'rr' → logprob: -8.197206497192383
    6. 'r' → logprob: -10.072206497192383
    7. ' row' → logprob: -10.072206497192383
    8. 'pr' → logprob: -10.197206497192383
    9. 'pos' → logprob: -10.447206497192383
    10. '_row' → logprob: -10.447206497192383

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037740718107670546
    2. ' ,' → logprob: -8.500377655029297
    3. ',row' → logprob: -9.250377655029297
    4. '_,' → logprob: -11.000377655029297
    5. ',j' → logprob: -11.250377655029297
    6. '_row' → logprob: -11.750377655029297
    7. '_se' → logprob: -12.000377655029297
    8. 'seat' → logprob: -12.375377655029297
    9. '_pass' → logprob: -12.500377655029297
    10. 'row' → logprob: -12.625377655029297

Token 111: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1678876280784607
    2. ' j' → logprob: -1.9178876876831055
    3. 'pos' → logprob: -5.9178876876831055
    4. 'seat' → logprob: -6.4178876876831055
    5. ' seat' → logprob: -6.9178876876831055
    6. ' pos' → logprob: -7.0428876876831055
    7. 'c' → logprob: -8.417887687683105
    8. 'a' → logprob: -8.792887687683105
    9. 'p' → logprob: -9.042887687683105
    10. '_j' → logprob: -9.292887687683105

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. ' )' → logprob: -11.375011444091797
    3. ' in' → logprob: -16.250011444091797
    4. ')
' → logprob: -17.000011444091797
    5. ')`' → logprob: -17.375011444091797
    6. '),' → logprob: -17.625011444091797
    7. ',' → logprob: -17.750011444091797
    8. '`)' → logprob: -18.125011444091797
    9. '))' → logprob: -18.250011444091797
    10. 'in' → logprob: -18.250011444091797

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026372060179710388
    2. 'in' → logprob: -3.651371955871582
    3. ',' → logprob: -10.651371955871582
    4. ')' → logprob: -10.901371955871582
    5. ':' → logprob: -11.026371955871582
    6. ' ' → logprob: -12.151371955871582
    7. '.' → logprob: -13.651371955871582
    8. 's' → logprob: -14.026371955871582
    9. '<|end|>' → logprob: -14.026371955871582
    10. '_in' → logprob: -14.213871955871582

Token 114: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.04982889071106911
    2. 'enumer' → logprob: -3.0498290061950684
    3. ' positions' → logprob: -7.174829006195068
    4. 'positions' → logprob: -7.799829006195068
    5. '<|end|>' → logprob: -10.92482852935791
    6. ' in' → logprob: -11.42482852935791
    7. '```' → logprob: -11.79982852935791
    8. ' range' → logprob: -12.17482852935791
    9. ' enumer' → logprob: -12.92482852935791
    10. 'range' → logprob: -13.17482852935791

Token 115: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017712609842419624
    2. 'positions' → logprob: -4.392712593078613
    3. ' positions' → logprob: -5.267712593078613
    4. '_positions' → logprob: -10.892712593078613
    5. ' (' → logprob: -11.767712593078613
    6. ')' → logprob: -12.767712593078613
    7. '<|end|>' → logprob: -13.392712593078613
    8. '(p' → logprob: -13.767712593078613
    9. '.positions' → logprob: -14.142712593078613
    10. '(position' → logprob: -14.642712593078613

Token 116: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0013269031187519431
    2. ' positions' → logprob: -6.626327037811279
    3. 'position' → logprob: -14.751326560974121
    4. ')' → logprob: -14.876326560974121
    5. '.positions' → logprob: -17.501327514648438
    6. 'pos' → logprob: -17.876327514648438
    7. 'range' → logprob: -18.126327514648438
    8. '_positions' → logprob: -18.251327514648438
    9. '   ' → logprob: -18.501327514648438
    10. ' ' → logprob: -18.876327514648438

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006591808632947505
    2. '):
' → logprob: -7.375658988952637
    3. ':' → logprob: -10.875658988952637
    4. ')' → logprob: -12.000658988952637
    5. ' ):' → logprob: -12.000658988952637
    6. ']:' → logprob: -14.500658988952637
    7. '):
' → logprob: -15.000658988952637
    8. '}:' → logprob: -15.125658988952637
    9. '():' → logprob: -15.750658988952637
    10. ',' → logprob: -16.750659942626953

Token 118: '   ' (ID: 271)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.3225818872451782
    2. '   ' → logprob: -1.3225818872451782
    3. '	car' → logprob: -5.572581768035889
    4. 'car' → logprob: -5.697581768035889
    5. '<|end|>' → logprob: -7.322581768035889
    6. '(car' → logprob: -7.447581768035889
    7. '    
' → logprob: -7.822581768035889
    8. ',' → logprob: -9.072582244873047
    9. ' ' → logprob: -9.447582244873047
    10. '       ' → logprob: -9.697582244873047

Token 119: ' #' (ID: 1069)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.060067977756261826
    2. 'car' → logprob: -2.935067892074585
    3. '   ' → logprob: -5.310068130493164
    4. '	car' → logprob: -8.810068130493164
    5. '       ' → logprob: -10.685068130493164
    6. ' if' → logprob: -10.685068130493164
    7. '    ' → logprob: -12.310068130493164
    8. ' ' → logprob: -12.435068130493164
    9. '    
' → logprob: -12.560068130493164
    10. 'space' → logprob: -12.935068130493164

Token 120: ' Convert' (ID: 15629)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.02768031321465969
    2. 'if' → logprob: -3.9026803970336914
    3. ' car' → logprob: -5.402680397033691
    4. ' if' → logprob: -7.402680397033691
    5. 'row' → logprob: -7.402680397033691
    6. '   ' → logprob: -7.402680397033691
    7. '#' → logprob: -7.652680397033691
    8. 'pass' → logprob: -9.027680397033691
    9. ' row' → logprob: -10.277680397033691
    10. 'i' → logprob: -10.277680397033691

Token 121: ' to' (ID: 316)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.43372172117233276
    2. 'i' → logprob: -1.4337217807769775
    3. ' to' → logprob: -2.8087217807769775
    4. '(i' → logprob: -3.0587217807769775
    5. '(' → logprob: -6.308721542358398
    6. ' ' → logprob: -6.558721542358398
    7. ' (' → logprob: -6.558721542358398
    8. 'row' → logprob: -8.558721542358398
    9. 'to' → logprob: -8.683721542358398
    10. 'r' → logprob: -8.808721542358398

Token 122: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008975276723504066
    2. ' ' → logprob: -7.750897407531738
    3. ' zero' → logprob: -8.000897407531738
    4. 'zero' → logprob: -9.000897407531738
    5. 'i' → logprob: -12.375897407531738
    6. 'r' → logprob: -12.625897407531738
    7. ' i' → logprob: -15.500897407531738
    8. 'idx' → logprob: -15.625897407531738
    9. ' r' → logprob: -16.125898361206055
    10. 'index' → logprob: -16.500898361206055

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008259473368525505
    2. 'zero' → logprob: -5.008259296417236
    3. 'i' → logprob: -6.508259296417236
    4. '-' → logprob: -10.633259773254395
    5. ' zero' → logprob: -10.883259773254395
    6. 'r' → logprob: -12.633259773254395
    7. '-zero' → logprob: -13.008259773254395
    8. 'int' → logprob: -14.133259773254395
    9. ' ' → logprob: -14.383259773254395
    10. 'python' → logprob: -14.758259773254395

Token 124: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.008243509568274021
    2. '-index' → logprob: -5.008243560791016
    3. '-' → logprob: -6.633243560791016
    4. ' -' → logprob: -8.633243560791016
    5. '-base' → logprob: -10.633243560791016
    6. 'based' → logprob: -11.883243560791016
    7. '-Based' → logprob: -14.008243560791016
    8. '_based' → logprob: -15.133243560791016
    9. ' based' → logprob: -15.508243560791016
    10. '-origin' → logprob: -16.008243560791016

Token 125: ' indices' (ID: 30378)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5228263139724731
    2. '<|end|>' → logprob: -1.1478263139724731
    3. ',' → logprob: -3.6478261947631836
    4. ')' → logprob: -3.8978261947631836
    5. ' ' → logprob: -4.147826194763184
    6. ' car' → logprob: -4.522826194763184
    7. '<|end|>' → logprob: -5.272826194763184
    8. '    
' → logprob: -5.772826194763184
    9. '
' → logprob: -6.522826194763184
    10. '  ' → logprob: -6.522826194763184

Token 127: ' seat' (ID: 15512)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7719687819480896
    2. ' car' → logprob: -1.1469688415527344
    3. ' row' → logprob: -1.7719688415527344
    4. 'i' → logprob: -3.8969688415527344
    5. 'row' → logprob: -4.771968841552734
    6. ' r' → logprob: -5.021968841552734
    7. 'car' → logprob: -5.646968841552734
    8. ' seat' → logprob: -6.271968841552734
    9. '    ' → logprob: -6.396968841552734
    10. 'r' → logprob: -6.521968841552734

Token 128: ' positions' (ID: 15897)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.32996997237205505
    2. '_row' → logprob: -1.3299700021743774
    3. '_r' → logprob: -4.954969882965088
    4. 'r' → logprob: -5.704969882965088
    5. ' =' → logprob: -5.829969882965088
    6. 'row' → logprob: -6.954969882965088
    7. 's' → logprob: -7.954969882965088
    8. '_x' → logprob: -8.204970359802246
    9. '_' → logprob: -8.329970359802246
    10. '_j' → logprob: -8.454970359802246

Token 129: ' shifted' (ID: 58644)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04466655105352402
    2. '=' → logprob: -3.5446665287017822
    3. 'i' → logprob: -4.919666767120361
    4. ' i' → logprob: -5.419666767120361
    5. '_i' → logprob: -7.044666767120361
    6. '   ' → logprob: -7.294666767120361
    7. ',' → logprob: -7.919666767120361
    8. '[i' → logprob: -8.294666290283203
    9. ' ' → logprob: -8.294666290283203
    10. '=i' → logprob: -8.669666290283203

Token 130: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9662426710128784
    2. '=' → logprob: -1.0912426710128784
    3. '   ' → logprob: -1.9662426710128784
    4. 'i' → logprob: -2.841242790222168
    5. '(i' → logprob: -3.966242790222168
    6. '_i' → logprob: -4.591242790222168
    7. '[i' → logprob: -4.716242790222168
    8. ' by' → logprob: -5.341242790222168
    9. '(' → logprob: -5.466242790222168
    10. ' ' → logprob: -5.466242790222168

Token 131: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009022594429552555
    2. ' ' → logprob: -5.6340227127075195
    3. 's' → logprob: -6.7590227127075195
    4. '0' → logprob: -7.1340227127075195
    5. ' j' → logprob: -7.1340227127075195
    6. '(' → logprob: -7.3840227127075195
    7. '-' → logprob: -7.3840227127075195
    8. 'j' → logprob: -7.8840227127075195
    9. ' (' → logprob: -8.00902271270752
    10. ' s' → logprob: -8.38402271270752

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029506313148885965
    2. ' ' → logprob: -8.25029468536377
    3. '<|end|>' → logprob: -11.25029468536377
    4. 's' → logprob: -12.12529468536377
    5. 'r' → logprob: -12.62529468536377
    6. '<|end|>' → logprob: -13.62529468536377
    7. '0' → logprob: -13.81279468536377
    8. '```' → logprob: -14.00029468536377
    9. '2' → logprob: -14.18779468536377
    10. '   ' → logprob: -14.50029468536377

Token 133: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07257646322250366
    2. ',' → logprob: -3.5725765228271484
    3. '
' → logprob: -4.572576522827148
    4. '<|end|>' → logprob: -5.072576522827148
    5. ' i' → logprob: -5.322576522827148
    6. 'i' → logprob: -5.697576522827148
    7. ',i' → logprob: -5.697576522827148
    8. ')' → logprob: -5.697576522827148
    9. '(i' → logprob: -6.322576522827148
    10. '    
' → logprob: -6.697576522827148

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012492471374571323
    2. ',' → logprob: -6.012492656707764
    3. ' i' → logprob: -6.012492656707764
    4. '(i' → logprob: -6.762492656707764
    5. ')' → logprob: -7.012492656707764
    6. '[i' → logprob: -7.387492656707764
    7. '<|end|>' → logprob: -7.387492656707764
    8. ' =' → logprob: -7.512492656707764
    9. ':' → logprob: -7.637492656707764
    10. '    
' → logprob: -7.762492656707764

Token 135: ' car' (ID: 1669)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.763853132724762
    2. 'i' → logprob: -1.3888530731201172
    3. 'row' → logprob: -2.013853073120117
    4. ' row' → logprob: -2.013853073120117
    5. '   ' → logprob: -4.763853073120117
    6. ' r' → logprob: -6.513853073120117
    7. ' car' → logprob: -6.763853073120117
    8. 'r' → logprob: -6.763853073120117
    9. ' seat' → logprob: -7.013853073120117
    10. ' x' → logprob: -7.138853073120117

Token 136: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002075933152809739
    2. '[' → logprob: -8.625207901000977
    3. '[int' → logprob: -11.125207901000977
    4. '[row' → logprob: -13.000207901000977
    5. '[r' → logprob: -13.125207901000977
    6. '[idx' → logprob: -13.125207901000977
    7. '[j' → logprob: -13.625207901000977
    8. '[
' → logprob: -13.750207901000977
    9. '[I' → logprob: -13.750207901000977
    10. '][' → logprob: -14.375207901000977

Token 137: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0036089823115617037
    2. ' -' → logprob: -5.6286091804504395
    3. '[' → logprob: -12.128608703613281
    4. '<|end|>' → logprob: -13.753608703613281
    5. '][' → logprob: -14.628608703613281
    6. ']-' → logprob: -14.878608703613281
    7. ']' → logprob: -15.128608703613281
    8. ' ' → logprob: -15.378608703613281
    9. ')' → logprob: -15.753608703613281
    10. '0' → logprob: -15.878608703613281

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.625031471252441
    3. '<|end|>' → logprob: -11.875031471252441
    4. '```' → logprob: -15.875031471252441
    5. '2' → logprob: -16.937532424926758
    6. '<|end|>' → logprob: -16.937532424926758
    7. '-' → logprob: -17.000032424926758
    8. ')' → logprob: -17.062532424926758
    9. '0' → logprob: -17.437532424926758
    10. '   ' → logprob: -17.625032424926758

Token 139: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002494191285222769
    2. ']' → logprob: -8.875249862670898
    3. ' ][' → logprob: -9.250249862670898
    4. '-' → logprob: -11.875249862670898
    5. '[j' → logprob: -13.125249862670898
    6. ')][' → logprob: -13.500249862670898
    7. '[' → logprob: -13.625249862670898
    8. ']][' → logprob: -14.750249862670898
    9. '"][' → logprob: -15.125249862670898
    10. '   ' → logprob: -15.250249862670898

Token 140: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3663626305060461e-05
    2. ' j' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.00001335144043
    4. ' ' → logprob: -15.87501335144043
    5. '	j' → logprob: -16.00001335144043
    6. '  ' → logprob: -16.87501335144043
    7. '[j' → logprob: -17.12501335144043
    8. '
' → logprob: -17.75001335144043
    9. ',j' → logprob: -18.00001335144043
    10. '    ' → logprob: -18.50001335144043

Token 141: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004320996522437781
    2. ' -' → logprob: -8.000432014465332
    3. '<|end|>' → logprob: -9.375432014465332
    4. ')' → logprob: -12.000432014465332
    5. ')-' → logprob: -13.625432014465332
    6. '<|end|>' → logprob: -14.000432014465332
    7. '1' → logprob: -14.250432014465332
    8. ']-' → logprob: -14.500432014465332
    9. '0' → logprob: -14.625432014465332
    10. ']' → logprob: -14.875432014465332

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '2' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '<|end|>' → logprob: -15.000001907348633
    5. '```' → logprob: -17.500001907348633
    6. ')' → logprob: -17.625001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '-' → logprob: -18.000001907348633
    9. '0' → logprob: -18.437501907348633
    10. ']' → logprob: -18.750001907348633

Token 143: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014367755502462387
    2. '=' → logprob: -4.764367580413818
    3. ']=' → logprob: -5.389367580413818
    4. ' ]' → logprob: -7.389367580413818
    5. ' =' → logprob: -7.889367580413818
    6. ')' → logprob: -8.764368057250977
    7. ')]' → logprob: -11.264368057250977
    8. '<|end|>' → logprob: -12.889368057250977
    9. ')=' → logprob: -13.389368057250977
    10. ' ' → logprob: -14.139368057250977

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022798418998718
    2. ' =' → logprob: -1.9102280139923096
    3. ')' → logprob: -13.16022777557373
    4. ' ' → logprob: -14.28522777557373
    5. '=user' → logprob: -14.66022777557373
    6. '<|end|>' → logprob: -15.91022777557373
    7. ']' → logprob: -16.035228729248047
    8. ')=' → logprob: -16.160228729248047
    9. '=

' → logprob: -16.285228729248047
    10. ']=' → logprob: -17.035228729248047

Token 145: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2028132975101471
    2. ' idx' → logprob: -1.7028132677078247
    3. ''' → logprob: -7.202813148498535
    4. ' '' → logprob: -8.827813148498535
    5. '(idx' → logprob: -8.952813148498535
    6. ''s' → logprob: -9.202813148498535
    7. '	idx' → logprob: -9.577813148498535
    8. '"' → logprob: -10.327813148498535
    9. ' ' → logprob: -11.077813148498535
    10. 'index' → logprob: -11.202813148498535

Token 146: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: 'steps' (ID: 27176)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027718573808670044
    2. '=' → logprob: -3.6527185440063477
    3. ' ' → logprob: -7.652718544006348
    4. ',' → logprob: -7.652718544006348
    5. 's' → logprob: -9.027718544006348
    6. '.' → logprob: -9.152718544006348
    7. '_' → logprob: -9.777718544006348
    8. ')' → logprob: -10.152718544006348
    9. '(' → logprob: -10.527718544006348
    10. '[' → logprob: -10.777718544006348

Token 149: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008263969793915749
    2. ' ' → logprob: -5.883264064788818
    3. '[]' → logprob: -6.258264064788818
    4. 'r' → logprob: -6.883264064788818
    5. '[' → logprob: -7.258264064788818
    6. '1' → logprob: -7.383264064788818
    7. 'p' → logprob: -7.508264064788818
    8. '-' → logprob: -9.00826358795166
    9. '[p' → logprob: -9.13326358795166
    10. '[[' → logprob: -9.38326358795166

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017595140263438225
    2. '[]' → logprob: -4.517595291137695
    3. 'p' → logprob: -6.267595291137695
    4. '-' → logprob: -6.892595291137695
    5. '1' → logprob: -7.392595291137695
    6. 'r' → logprob: -7.642595291137695
    7. '[' → logprob: -7.642595291137695
    8. '[[' → logprob: -7.892595291137695
    9. 'deque' → logprob: -7.892595291137695
    10. '[(' → logprob: -8.017595291137695

Token 151: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04517463222146034
    2. 'while' → logprob: -3.2951745986938477
    3. ' while' → logprob: -5.545174598693848
    4. 'for' → logprob: -6.795174598693848
    5. ' 
' → logprob: -7.295174598693848
    6. '\n' → logprob: -7.670174598693848
    7. '
' → logprob: -8.420174598693848
    8. '  
' → logprob: -8.545174598693848
    9. ' for' → logprob: -8.920174598693848
    10. '

' → logprob: -8.920174598693848

Token 152: 'pass' (ID: 9948)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18815216422080994
    2. '
' → logprob: -2.1881520748138428
    3. ' while' → logprob: -3.1881520748138428
    4. 'for' → logprob: -4.313152313232422
    5. '<|end|>' → logprob: -6.313152313232422
    6. ' 
' → logprob: -6.438152313232422
    7. ' for' → logprob: -7.938152313232422
    8. 'def' → logprob: -8.313152313232422
    9. '  
' → logprob: -8.688152313232422
    10. '```' → logprob: -8.813152313232422

Token 153: 'engers' (ID: 24764)
  Prédit: 'engers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'engers' → logprob: -0.06039705500006676
    2. '<|end|>' → logprob: -3.060397148132324
    3. 'ed' → logprob: -5.435397148132324
    4. 'able' → logprob: -5.935397148132324
    5. 'enger' → logprob: -6.935397148132324
    6. 'eng' → logprob: -7.435397148132324
    7. '#' → logprob: -7.685397148132324
    8. 'agers' → logprob: -7.935397148132324
    9. 'angers' → logprob: -7.935397148132324
    10. 'ages' → logprob: -8.060397148132324

Token 154: '_left' (ID: 22189)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6542244553565979
    2. '_remaining' → logprob: -1.2792243957519531
    3. '_m' → logprob: -2.404224395751953
    4. '=' → logprob: -3.279224395751953
    5. '_left' → logprob: -3.654224395751953
    6. '_to' → logprob: -4.279224395751953
    7. '_in' → logprob: -4.529224395751953
    8. '_' → logprob: -4.654224395751953
    9. '_on' → logprob: -5.529224395751953
    10. '_se' → logprob: -6.154224395751953

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021702200174332
    2. '=' → logprob: -2.35021710395813
    3. ' ' → logprob: -11.97521686553955
    4. ',' → logprob: -13.72521686553955
    5. '_' → logprob: -13.97521686553955
    6. ' =
' → logprob: -15.10021686553955
    7. ')' → logprob: -15.22521686553955
    8. '>' → logprob: -15.22521686553955
    9. 's' → logprob: -15.35021686553955
    10. '=int' → logprob: -15.85021686553955

Token 156: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005120615474879742
    2. ' p' → logprob: -5.380120754241943
    3. 'len' → logprob: -7.630120754241943
    4. ' len' → logprob: -11.505120277404785
    5. '[p' → logprob: -13.255120277404785
    6. '   ' → logprob: -14.630120277404785
    7. 'r' → logprob: -15.005120277404785
    8. '	p' → logprob: -15.130120277404785
    9. '(p' → logprob: -15.192620277404785
    10. ' ' → logprob: -15.380120277404785

Token 157: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25857576727867126
    2. '<|end|>' → logprob: -1.5085757970809937
    3. 'while' → logprob: -5.883575916290283
    4. ' while' → logprob: -6.383575916290283
    5. ' 
' → logprob: -6.633575916290283
    6. '<|end|>' → logprob: -8.008575439453125
    7. '  
' → logprob: -9.008575439453125
    8. '\n' → logprob: -9.258575439453125
    9. '```' → logprob: -9.383575439453125
    10. '
' → logprob: -10.008575439453125

Token 158: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0018643798539415002
    2. 'def' → logprob: -7.251864433288574
    3. 'for' → logprob: -7.751864433288574
    4. '#' → logprob: -8.001864433288574
    5. ' while' → logprob: -8.751864433288574
    6. 'from' → logprob: -9.376864433288574
    7. 'queue' → logprob: -10.626864433288574
    8. '.' → logprob: -10.626864433288574
    9. '<|end|>' → logprob: -10.876864433288574
    10. '```' → logprob: -11.251864433288574

Token 159: ' passengers' (ID: 37252)
  Prédit: ' passengers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passengers' → logprob: -0.004586176946759224
    2. ' steps' → logprob: -5.629586219787598
    3. 'pass' → logprob: -7.129586219787598
    4. 'steps' → logprob: -9.504586219787598
    5. 'Passengers' → logprob: -9.754586219787598
    6. 'True' → logprob: -10.754586219787598
    7. ' True' → logprob: -10.754586219787598
    8. ' passenger' → logprob: -13.379586219787598
    9. 'p' → logprob: -13.754586219787598
    10. ' pass' → logprob: -13.879586219787598

Token 160: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -6.980854959692806e-05
    2. '_' → logprob: -10.000069618225098
    3. '>' → logprob: -10.875069618225098
    4. 'left' → logprob: -12.875069618225098
    5. '_LEFT' → logprob: -13.750069618225098
    6. '_right' → logprob: -14.750069618225098
    7. '```' → logprob: -15.250069618225098
    8. '_Left' → logprob: -15.375069618225098
    9. ' _' → logprob: -15.750069618225098
    10. ' >' → logprob: -16.250070571899414

Token 161: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1807696521282196
    2. '>' → logprob: -1.805769681930542
    3. ' and' → logprob: -7.305769443511963
    4. 'and' → logprob: -8.180769920349121
    5. ':' → logprob: -9.680769920349121
    6. '<|end|>' → logprob: -13.430769920349121
    7. ' ' → logprob: -13.680769920349121
    8. '.' → logprob: -13.805769920349121
    9. '>:' → logprob: -13.805769920349121
    10. ' !=' → logprob: -14.055769920349121

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.201422318816185
    2. ' ' → logprob: -1.7014223337173462
    3. '1' → logprob: -12.951422691345215
    4. 'r' → logprob: -13.388922691345215
    5. ' ' → logprob: -13.826422691345215
    6. 'p' → logprob: -13.888922691345215
    7. 's' → logprob: -15.201422691345215
    8. '  ' → logprob: -15.263922691345215
    9. ' r' → logprob: -15.388922691345215
    10. '>' → logprob: -15.576422691345215

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009126556105911732
    2. ' ' → logprob: -7.000912666320801
    3. '1' → logprob: -14.1259126663208
    4. 'r' → logprob: -15.8134126663208
    5. '   ' → logprob: -16.188411712646484
    6. '  ' → logprob: -16.750911712646484
    7. '```' → logprob: -16.813411712646484
    8. 'p' → logprob: -17.063411712646484
    9. ' ' → logprob: -17.250911712646484
    10. '00' → logprob: -18.000911712646484

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013536323967855424
    2. ':
' → logprob: -9.12513542175293
    3. ' :' → logprob: -10.75013542175293
    4. ',' → logprob: -13.37513542175293
    5. '<|end|>' → logprob: -13.87513542175293
    6. ':def' → logprob: -14.12513542175293
    7. ':

' → logprob: -14.50013542175293
    8. ':**' → logprob: -15.12513542175293
    9. '):' → logprob: -15.87513542175293
    10. ' and' → logprob: -16.25013542175293

Token 165: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40754666924476624
    2. 'for' → logprob: -2.2825467586517334
    3. 'pass' → logprob: -2.5325467586517334
    4. '<|end|>' → logprob: -3.0325467586517334
    5. ' pass' → logprob: -3.4075467586517334
    6. '   ' → logprob: -3.4075467586517334
    7. '    ' → logprob: -4.782546520233154
    8. '    
' → logprob: -5.157546520233154
    9. 'steps' → logprob: -5.407546520233154
    10. ' #' → logprob: -5.657546520233154

Token 166: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12735630571842194
    2. 'moves' → logprob: -3.6273562908172607
    3. 'for' → logprob: -3.8773562908172607
    4. 'next' → logprob: -4.37735652923584
    5. 'move' → logprob: -4.50235652923584
    6. 'new' → logprob: -4.62735652923584
    7. ' moved' → logprob: -4.87735652923584
    8. 'steps' → logprob: -5.12735652923584
    9. '#' → logprob: -5.75235652923584
    10. '   ' → logprob: -6.00235652923584

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04085443541407585
    2. '_pass' → logprob: -3.6658544540405273
    3. '=' → logprob: -5.040854454040527
    4. '_this' → logprob: -5.665854454040527
    5. '_' → logprob: -6.540854454040527
    6. 'Passengers' → logprob: -6.540854454040527
    7. '_any' → logprob: -7.165854454040527
    8. '_positions' → logprob: -7.415854454040527
    9. '_indices' → logprob: -10.415854454040527
    10. '_count' → logprob: -10.415854454040527

Token 168: ' [' (ID: 723)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.017866961658000946
    2. ' False' → logprob: -4.392867088317871
    3. 'True' → logprob: -5.517867088317871
    4. '[]' → logprob: -7.267867088317871
    5. '0' → logprob: -7.767867088317871
    6. ' True' → logprob: -9.017867088317871
    7. '[' → logprob: -9.892867088317871
    8. ' ' → logprob: -11.267867088317871
    9. 'set' → logprob: -11.267867088317871
    10. ' []' → logprob: -12.142867088317871

Token 169: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00017267030489165336
    2. '0' → logprob: -9.75017261505127
    3. 'True' → logprob: -9.75017261505127
    4. ' False' → logprob: -10.87517261505127
    5. '-' → logprob: -11.25017261505127
    6. '[' → logprob: -11.50017261505127
    7. 'None' → logprob: -11.62517261505127
    8. ']' → logprob: -12.50017261505127
    9. '[]' → logprob: -14.50017261505127
    10. '(False' → logprob: -14.75017261505127

Token 170: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06763816624879837
    2. ' for' → logprob: -2.8176381587982178
    3. 'for' → logprob: -5.567638397216797
    4. ' ]' → logprob: -6.567638397216797
    5. '<|end|>' → logprob: -8.442638397216797
    6. ')' → logprob: -9.317638397216797
    7. ',' → logprob: -9.817638397216797
    8. ')]' → logprob: -11.317638397216797
    9. '   ' → logprob: -11.567638397216797
    10. ' ' → logprob: -11.692638397216797

Token 171: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00013285996101330966
    2. 'r' → logprob: -9.00013256072998
    3. ' p' → logprob: -12.25013256072998
    4. 'len' → logprob: -12.75013256072998
    5. '(p' → logprob: -15.18763256072998
    6. 'pass' → logprob: -15.50013256072998
    7. '   ' → logprob: -16.187633514404297
    8. 'width' → logprob: -16.312633514404297
    9. 's' → logprob: -16.437633514404297
    10. '	p' → logprob: -16.500133514404297

Token 172: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45086783170700073
    2. '<|end|>' → logprob: -1.2008678913116455
    3. 'for' → logprob: -3.3258678913116455
    4. ' for' → logprob: -3.9508678913116455
    5. '\n' → logprob: -6.575867652893066
    6. '#' → logprob: -6.825867652893066
    7. ' 
' → logprob: -7.075867652893066
    8. '<|end|>' → logprob: -7.200867652893066
    9. 'newline' → logprob: -7.575867652893066
    10. '   ' → logprob: -7.825867652893066

Token 173: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.298185795545578
    2. ' for' → logprob: -1.4231858253479004
    3. '   ' → logprob: -4.7981858253479
    4. 'next' → logprob: -6.4231858253479
    5. '<|end|>' → logprob: -6.5481858253479
    6. 'new' → logprob: -6.6731858253479
    7. '
' → logprob: -7.0481858253479
    8. '#' → logprob: -7.4231858253479
    9. 'pass' → logprob: -7.4231858253479
    10. 'positions' → logprob: -7.6731858253479

Token 174: ' new' (ID: 620)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02934032492339611
    2. '#' → logprob: -3.7793402671813965
    3. 'next' → logprob: -6.6543402671813965
    4. 'changed' → logprob: -6.7793402671813965
    5. 'new' (adapté à ' new') → logprob: -6.9043402671813965
    6. ' for' → logprob: -6.9043402671813965
    7. 'pass' → logprob: -7.9043402671813965
    8. 'any' → logprob: -8.029340744018555
    9. 'updated' → logprob: -8.404340744018555
    10. 'found' → logprob: -9.279340744018555

Token 175: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.05138206109404564
    2. '_positions' → logprob: -3.051382064819336
    3. 'car' → logprob: -6.676382064819336
    4. '_pass' → logprob: -7.676382064819336
    5. '_' → logprob: -7.801382064819336
    6. '_pos' → logprob: -7.926382064819336
    7. '_c' → logprob: -9.426382064819336
    8. 'positions' → logprob: -9.551382064819336
    9. 'Car' → logprob: -10.051382064819336
    10. '_position' → logprob: -10.426382064819336

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519887685775757
    2. '=' → logprob: -1.5019887685775757
    3. '=[]' → logprob: -10.876988410949707
    4. '<|end|>' → logprob: -11.126988410949707
    5. '[' → logprob: -12.251988410949707
    6. ']' → logprob: -12.251988410949707
    7. ',' → logprob: -12.376988410949707
    8. ' ' → logprob: -12.876988410949707
    9. ')' → logprob: -13.126988410949707
    10. ' =[' → logprob: -13.751988410949707

Token 177: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33861908316612244
    2. '[[' → logprob: -1.3386191129684448
    3. ' [' → logprob: -4.088619232177734
    4. ' [[' → logprob: -5.213619232177734
    5. '[r' → logprob: -6.463619232177734
    6. '[array' → logprob: -8.338619232177734
    7. '[row' → logprob: -8.463619232177734
    8. '[list' → logprob: -8.588619232177734
    9. '[cell' → logprob: -9.088619232177734
    10. '[len' → logprob: -9.213619232177734

Token 178: 'row' (ID: 843)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35336875915527344
    2. '[row' → logprob: -1.3533687591552734
    3. 'row' → logprob: -3.3533687591552734
    4. '[cell' → logprob: -6.228368759155273
    5. ' [' → logprob: -6.978368759155273
    6. '[line' → logprob: -7.603368759155273
    7. 'car' → logprob: -8.728368759155273
    8. '[c' → logprob: -8.853368759155273
    9. '[col' → logprob: -9.103368759155273
    10. '[n' → logprob: -9.728368759155273

Token 179: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.02975395694375038
    2. '.copy' → logprob: -3.5297539234161377
    3. '[:' → logprob: -13.279753684997559
    4. '[' → logprob: -13.279753684997559
    5. '.' → logprob: -16.904754638671875
    6. '[]' → logprob: -17.654754638671875
    7. '[::-' → logprob: -17.654754638671875
    8. 'copy' → logprob: -18.279754638671875
    9. ' for' → logprob: -18.904754638671875
    10. '.deepcopy' → logprob: -19.279754638671875

Token 180: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0054933070205152035
    2. 'for' → logprob: -5.2554931640625
    3. ']' → logprob: -8.8804931640625
    4. ')' → logprob: -9.1304931640625
    5. '[:]' → logprob: -12.5054931640625
    6. '	for' → logprob: -12.7554931640625
    7. '<|end|>' → logprob: -13.2554931640625
    8. ' ' → logprob: -13.3804931640625
    9. '()' → logprob: -13.7554931640625
    10. '   ' → logprob: -14.3804931640625

Token 181: ' row' (ID: 5225)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.004080420359969139
    2. ' car' → logprob: -5.504080295562744
    3. 'row' → logprob: -13.629080772399902
    4. '_car' → logprob: -14.754080772399902
    5. ' row' → logprob: -15.254080772399902
    6. '(car' → logprob: -16.879079818725586
    7. '_' → logprob: -18.004079818725586
    8. '	car' → logprob: -18.379079818725586
    9. 'Car' → logprob: -19.129079818725586
    10. 'in' → logprob: -19.879079818725586

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3148111402988434
    2. 'in' → logprob: -1.314811110496521
    3. 'car' → logprob: -6.5648112297058105
    4. ' car' → logprob: -8.939810752868652
    5. '(car' → logprob: -12.064810752868652
    6. ' ' → logprob: -14.689810752868652
    7. '   ' → logprob: -15.064810752868652
    8. 'import' → logprob: -15.064810752868652
    9. '_car' → logprob: -15.314810752868652
    10. 'Car' → logprob: -15.689810752868652

Token 183: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0021853535436093807
    2. ' car' → logprob: -6.127185344696045
    3. '(car' → logprob: -15.627185821533203
    4. '	car' → logprob: -16.627185821533203
    5. 'range' → logprob: -17.752185821533203
    6. ' ' → logprob: -18.127185821533203
    7. 'c' → logprob: -19.252185821533203
    8. '   ' → logprob: -19.377185821533203
    9. '```' → logprob: -19.627185821533203
    10. 'Car' → logprob: -19.877185821533203

Token 184: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00028171599842607975
    2. ' ]' → logprob: -8.37528133392334
    3. ')]' → logprob: -11.00028133392334
    4. ']
' → logprob: -11.00028133392334
    5. ')' → logprob: -11.62528133392334
    6. ']

' → logprob: -12.12528133392334
    7. '   ' → logprob: -13.00028133392334
    8. ']
' → logprob: -15.25028133392334
    9. ' ' → logprob: -15.50028133392334
    10. '`]' → logprob: -15.50028133392334

Token 185: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22121281921863556
    2. '   ' → logprob: -2.221212863922119
    3. ' for' → logprob: -2.596212863922119
    4. '
' → logprob: -4.971212863922119
    5. '<|end|>' → logprob: -5.721212863922119
    6. '    
' → logprob: -5.846212863922119
    7. '    ' → logprob: -6.721212863922119
    8. '	for' → logprob: -8.346212387084961
    9. '#' → logprob: -8.471212387084961
    10. '  ' → logprob: -8.596212387084961

Token 186: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001049736310960725
    2. '#' (adapté à ' #') → logprob: -10.250104904174805
    3. ' for' → logprob: -10.250104904174805
    4. '   ' → logprob: -10.625104904174805
    5. 'pass' → logprob: -11.875104904174805
    6. 'changed' → logprob: -13.375104904174805
    7. 'found' → logprob: -14.500104904174805
    8. 'm' → logprob: -15.250104904174805
    9. '...' → logprob: -16.500104904174805
    10. '    
' → logprob: -17.125104904174805

Token 187: ' Step' (ID: 22291)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010210209293290973
    2. '#' → logprob: -7.001020908355713
    3. ' for' → logprob: -9.501021385192871
    4. 'pass' → logprob: -10.501021385192871
    5. 'found' → logprob: -13.251021385192871
    6. 'changed' → logprob: -13.376021385192871
    7. '   ' → logprob: -13.626021385192871
    8. 'For' → logprob: -14.751021385192871
    9. 'row' → logprob: -15.001021385192871
    10. 'rows' → logprob: -15.001021385192871

Token 188: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8759188055992126
    2. ' for' → logprob: -1.5009188652038574
    3. '1' → logprob: -1.7509188652038574
    4. 'for' → logprob: -2.7509188652038574
    5. 'pass' → logprob: -3.5009188652038574
    6. '0' → logprob: -4.125918865203857
    7. '   ' → logprob: -4.375918865203857
    8. 's' → logprob: -4.375918865203857
    9. ' through' → logprob: -4.500918865203857
    10. '#' → logprob: -4.875918865203857

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8078058958053589
    2. '0' → logprob: -1.0578058958053589
    3. 'for' → logprob: -2.4328060150146484
    4. 'r' → logprob: -3.3078060150146484
    5. 'pass' → logprob: -3.6828060150146484
    6. 'through' → logprob: -4.307806015014648
    7. '=' → logprob: -4.682806015014648
    8. 'range' → logprob: -4.807806015014648
    9. 'i' → logprob: -4.932806015014648
    10. '#' → logprob: -5.432806015014648

Token 190: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9681201577186584
    2. ' for' → logprob: -1.2181200981140137
    3. '   ' → logprob: -1.7181200981140137
    4. '#' → logprob: -2.0931200981140137
    5. ':' → logprob: -4.093120098114014
    6. ' #' → logprob: -5.968120098114014
    7. '
' → logprob: -6.593120098114014
    8. '    
' → logprob: -8.093120574951172
    9. 'pass' → logprob: -8.718120574951172
    10. ' ' → logprob: -8.843120574951172

Token 191: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03823104873299599
    2. '#' → logprob: -3.288231134414673
    3. ' for' → logprob: -8.663230895996094
    4. 'pass' → logprob: -11.788230895996094
    5. ' #' → logprob: -12.663230895996094
    6. 'For' → logprob: -12.663230895996094
    7. '   ' → logprob: -13.538230895996094
    8. 'move' → logprob: -15.163230895996094
    9. 'arr' → logprob: -15.663230895996094
    10. '	for' → logprob: -15.788230895996094

Token 192: ' passengers' (ID: 37252)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05391056090593338
    2. 'to' → logprob: -3.053910493850708
    3. ':' → logprob: -5.928910732269287
    4. 'pass' → logprob: -7.678910732269287
    5. ' for' → logprob: -7.928910732269287
    6. ' move' → logprob: -7.928910732269287
    7. ' moving' → logprob: -8.303910255432129
    8. ' ' → logprob: -8.553910255432129
    9. 'left' → logprob: -8.803910255432129
    10. '   ' → logprob: -9.053910255432129

Token 193: ' in' (ID: 306)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.20036223530769348
    2. 'to' → logprob: -2.700362205505371
    3. ' in' → logprob: -2.950362205505371
    4. '   ' → logprob: -3.450362205505371
    5. ' for' → logprob: -4.575362205505371
    6. ' on' → logprob: -4.950362205505371
    7. 'for' → logprob: -4.950362205505371
    8. 'in' → logprob: -6.575362205505371
    9. 'from' → logprob: -6.950362205505371
    10. ' at' → logprob: -7.200362205505371

Token 194: ' seats' (ID: 24992)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11705917865037918
    2. ' range' → logprob: -2.3670592308044434
    3. 're' → logprob: -4.867059230804443
    4. ' reversed' → logprob: -5.617059230804443
    5. 'reverse' → logprob: -6.242059230804443
    6. 'order' → logprob: -6.867059230804443
    7. '   ' → logprob: -7.117059230804443
    8. ' ' → logprob: -8.492058753967285
    9. ' order' → logprob: -8.867058753967285
    10. '[' → logprob: -9.117058753967285

Token 195: ' move' (ID: 5275)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.8745957016944885
    2. ':' → logprob: -1.7495956420898438
    3. 'in' → logprob: -2.3745956420898438
    4. 'to' → logprob: -2.6245956420898438
    5. 'with' → logprob: -3.1245956420898438
    6. 'left' → logprob: -3.1245956420898438
    7. 'at' → logprob: -3.2495956420898438
    8. '=' → logprob: -3.8745956420898438
    9. '   ' → logprob: -3.9995956420898438
    10. 'from' → logprob: -4.499595642089844

Token 196: ' towards' (ID: 9979)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.8265218138694763
    2. 'to' → logprob: -2.201521873474121
    3. 'left' → logprob: -2.701521873474121
    4. ' to' → logprob: -2.951521873474121
    5. 'from' → logprob: -3.076521873474121
    6. '   ' → logprob: -3.451521873474121
    7. ' toward' → logprob: -3.701521873474121
    8. ' towards' → logprob: -3.701521873474121
    9. ' into' → logprob: -3.951521873474121
    10. ' ' → logprob: -4.076521873474121

Token 197: ' aisle' (ID: 99887)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8136141896247864
    2. ' the' → logprob: -1.3136141300201416
    3. 's' → logprob: -1.4386141300201416
    4. '<|end|>' → logprob: -4.063614368438721
    5. ' s' → logprob: -4.313614368438721
    6. 'car' → logprob: -5.688614368438721
    7. '1' → logprob: -5.813614368438721
    8. '0' → logprob: -6.188614368438721
    9. '[' → logprob: -6.438614368438721
    10. '[s' → logprob: -6.563614368438721

Token 198: ' or' (ID: 503)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6960964202880859
    2. '
' → logprob: -1.071096420288086
    3. '   ' → logprob: -2.946096420288086
    4. '<|end|>' → logprob: -3.196096420288086
    5. 'for' → logprob: -3.821096420288086
    6. '    
' → logprob: -4.571096420288086
    7. '  
' → logprob: -4.946096420288086
    8. '.' → logprob: -5.071096420288086
    9. ':' → logprob: -5.946096420288086
    10. ',' → logprob: -6.071096420288086

Token 199: ' into' (ID: 1511)
  Prédit: 'stand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stand' → logprob: -0.7208536267280579
    2. 'into' → logprob: -1.845853567123413
    3. ' into' → logprob: -2.095853567123413
    4. 'stay' → logprob: -2.845853567123413
    5. ' aisle' → logprob: -3.970853567123413
    6. 'exit' → logprob: -3.970853567123413
    7. 'tow' → logprob: -3.970853567123413
    8. 'out' → logprob: -4.095853805541992
    9. ' stand' → logprob: -4.470853805541992
    10. 'down' → logprob: -4.720853805541992

Token 200: ' aisle' (ID: 99887)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7583925127983093
    2. 'car' → logprob: -0.8833925127983093
    3. ' the' → logprob: -3.008392572402954
    4. 'ais' → logprob: -3.258392572402954
    5. '[' → logprob: -4.633392333984375
    6. ' aisle' → logprob: -4.883392333984375
    7. 's' → logprob: -5.883392333984375
    8. 'new' → logprob: -6.008392333984375
    9. ' car' → logprob: -6.008392333984375
    10. ' ' → logprob: -7.633392333984375

Token 201: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.053283929824829
    2. '<|end|>' → logprob: -1.428283929824829
    3. '   ' → logprob: -1.928283929824829
    4. ' for' → logprob: -2.178283929824829
    5. 'for' → logprob: -2.178283929824829
    6. ':' → logprob: -4.55328369140625
    7. '.' → logprob: -4.92828369140625
    8. '    
' → logprob: -5.05328369140625
    9. '  
' → logprob: -5.17828369140625
    10. '<|end|>' → logprob: -5.67828369140625

Token 202: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3171217143535614
    2. ' for' → logprob: -1.3171217441558838
    3. '   ' → logprob: -5.567121505737305
    4. '	for' → logprob: -10.942121505737305
    5. '<|end|>' → logprob: -12.067121505737305
    6. '    ' → logprob: -12.567121505737305
    7. 'pass' → logprob: -13.317121505737305
    8. ' ' → logprob: -13.942121505737305
    9. '    
' → logprob: -14.567121505737305
    10. '  ' → logprob: -15.067121505737305

Token 204: ' Fill' (ID: 32680)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014288433827459812
    2. ' for' → logprob: -4.264288425445557
    3. 'm' → logprob: -9.639288902282715
    4. '   ' → logprob: -10.639288902282715
    5. 'pass' → logprob: -11.139288902282715
    6. '    ' → logprob: -12.014288902282715
    7. '#' → logprob: -12.389288902282715
    8. ' moved' → logprob: -12.639288902282715
    9. '  ' → logprob: -13.389288902282715
    10. 'found' → logprob: -13.889288902282715

Token 205: ' moves' (ID: 19523)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47454652190208435
    2. 'for' → logprob: -1.2245465517044067
    3. ' the' → logprob: -3.849546432495117
    4. 's' → logprob: -4.474546432495117
    5. ' aisle' → logprob: -4.474546432495117
    6. ' s' → logprob: -5.099546432495117
    7. 'from' → logprob: -5.349546432495117
    8. ' from' → logprob: -5.599546432495117
    9. ' ais' → logprob: -5.849546432495117
    10. '   ' → logprob: -5.849546432495117

Token 206: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1528303623199463
    2. ' for' → logprob: -2.0278303623199463
    3. '   ' → logprob: -4.902830123901367
    4. 'from' → logprob: -7.027830123901367
    5. 'in' → logprob: -7.902830123901367
    6. '=' → logprob: -8.152830123901367
    7. ' in' → logprob: -8.277830123901367
    8. '<|end|>' → logprob: -9.527830123901367
    9. 'to' → logprob: -9.652830123901367
    10. 'with' → logprob: -9.777830123901367

Token 207: ' passengers' (ID: 37252)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.14813444018363953
    2. ' i' → logprob: -2.898134469985962
    3. 'idx' → logprob: -2.898134469985962
    4. 'i' → logprob: -4.273134231567383
    5. ' range' → logprob: -5.773134231567383
    6. ' passenger' → logprob: -6.273134231567383
    7. '_' → logprob: -6.648134231567383
    8. ' _' → logprob: -6.648134231567383
    9. ' passengers' → logprob: -6.648134231567383
    10. 'pass' → logprob: -7.273134231567383

Token 208: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8385144472122192
    2. '=' → logprob: -1.5885144472122192
    3. '=[]' → logprob: -2.2135143280029297
    4. '<|end|>' → logprob: -2.4635143280029297
    5. 'for' → logprob: -2.5885143280029297
    6. ' in' → logprob: -3.9635143280029297
    7. 'in' → logprob: -4.08851432800293
    8. ' for' → logprob: -4.33851432800293
    9. ':' → logprob: -4.58851432800293
    10. '   ' → logprob: -5.46351432800293

Token 209: ' seats' (ID: 24992)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1487354189157486
    2. ' range' → logprob: -2.148735523223877
    3. 'the' → logprob: -4.648735523223877
    4. ' the' → logprob: -5.773735523223877
    5. 'se' → logprob: -6.523735523223877
    6. 'each' → logprob: -6.773735523223877
    7. 'rows' → logprob: -7.023735523223877
    8. '   ' → logprob: -7.148735523223877
    9. 'r' → logprob: -7.273735523223877
    10. 'row' → logprob: -7.523735523223877

Token 210: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.522820770740509
    2. ' for' → logprob: -1.3978207111358643
    3. '   ' → logprob: -1.8978207111358643
    4. '<|end|>' → logprob: -5.272820949554443
    5. '
' → logprob: -5.647820949554443
    6. '    
' → logprob: -7.147820949554443
    7. '  ' → logprob: -9.022820472717285
    8. '	for' → logprob: -9.147820472717285
    9. '```' → logprob: -9.397820472717285
    10. '<|end|>' → logprob: -9.897820472717285

Token 211: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043831974267959595
    2. ' for' → logprob: -3.1688320636749268
    3. 'range' → logprob: -7.793831825256348
    4. '   ' → logprob: -8.293831825256348
    5. '
' → logprob: -10.043831825256348
    6. 'pass' → logprob: -10.293831825256348
    7. ' range' → logprob: -11.293831825256348
    8. '    ' → logprob: -11.543831825256348
    9. ' in' → logprob: -12.168831825256348
    10. 'in' → logprob: -12.168831825256348

Token 212: ' front' (ID: 5567)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9527041912078857
    2. '0' → logprob: -1.2027041912078857
    3. 'range' → logprob: -1.4527041912078857
    4. ' range' → logprob: -3.4527041912078857
    5. 's' → logprob: -3.9527041912078857
    6. ' r' → logprob: -4.827704429626465
    7. 'left' → logprob: -5.077704429626465
    8. ' ' → logprob: -6.077704429626465
    9. 'right' → logprob: -6.202704429626465
    10. '1' → logprob: -6.577704429626465

Token 213: ' row' (ID: 5225)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3621295988559723
    2. ' to' → logprob: -1.48712956905365
    3. 'row' → logprob: -3.7371296882629395
    4. '=' → logprob: -4.2371296882629395
    5. 'range' → logprob: -4.6121296882629395
    6. 'rows' → logprob: -4.8621296882629395
    7. 'for' → logprob: -5.1121296882629395
    8. 'r' → logprob: -5.6121296882629395
    9. '0' → logprob: -6.1121296882629395
    10. 'of' → logprob: -6.3621296882629395

Token 214: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5120458602905273
    2. '=' → logprob: -1.6370458602905273
    3. 'to' → logprob: -2.3870458602905273
    4. 'for' → logprob: -3.0120458602905273
    5. ' for' → logprob: -3.8870458602905273
    6. ' =' → logprob: -4.637045860290527
    7. '0' → logprob: -5.012045860290527
    8. '<|end|>' → logprob: -5.387045860290527
    9. '(' → logprob: -5.637045860290527
    10. 's' → logprob: -5.637045860290527

Token 215: ' back' (ID: 1602)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5182229280471802
    2. 'back' → logprob: -1.0182229280471802
    3. ' back' → logprob: -3.2682228088378906
    4. 'rear' → logprob: -5.643222808837891
    5. ' r' → logprob: -6.643222808837891
    6. '0' → logprob: -9.14322280883789
    7. 'front' → logprob: -9.64322280883789
    8. ' rear' → logprob: -10.64322280883789
    9. 'last' → logprob: -11.01822280883789
    10. '   ' → logprob: -11.39322280883789

Token 216: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09569046646356583
    2. ' for' → logprob: -2.7206904888153076
    3. '   ' → logprob: -3.9706904888153076
    4. '
' → logprob: -5.3456902503967285
    5. 'row' → logprob: -7.5956902503967285
    6. ',' → logprob: -7.7206902503967285
    7. 'r' → logprob: -8.470690727233887
    8. 'or' → logprob: -8.595690727233887
    9. '    
' → logprob: -8.720690727233887
    10. 'rows' → logprob: -9.845690727233887

Token 217: ' from' (ID: 591)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.14787167310714722
    2. ' left' → logprob: -2.647871732711792
    3. 'for' → logprob: -3.522871732711792
    4. ' then' → logprob: -4.147871494293213
    5. ' for' → logprob: -5.022871494293213
    6. 'then' → logprob: -5.647871494293213
    7. 'from' → logprob: -5.772871494293213
    8. 'right' → logprob: -6.397871494293213
    9. 'top' → logprob: -6.522871494293213
    10. 'front' → logprob: -6.897871494293213

Token 218: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3044055998325348
    2. '0' → logprob: -1.5544055700302124
    3. ' left' → logprob: -3.554405689239502
    4. 'right' → logprob: -4.304405689239502
    5. '1' → logprob: -5.929405689239502
    6. 's' → logprob: -6.304405689239502
    7. ' ' → logprob: -7.054405689239502
    8. 'width' → logprob: -7.304405689239502
    9. 'back' → logprob: -7.304405689239502
    10. ' right' → logprob: -7.679405689239502

Token 219: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2592872083187103
    2. ' to' → logprob: -1.5092872381210327
    3. '=' → logprob: -5.259287357330322
    4. 'and' → logprob: -8.259286880493164
    5. ',' → logprob: -8.259286880493164
    6. 'side' → logprob: -8.634286880493164
    7. '<|end|>' → logprob: -8.759286880493164
    8. 'right' → logprob: -9.009286880493164
    9. 'tow' → logprob: -9.259286880493164
    10. 'most' → logprob: -9.384286880493164

Token 220: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0010391215328127146
    2. ' right' → logprob: -6.876039028167725
    3. 'ight' → logprob: -13.126039505004883
    4. 'r' → logprob: -13.626039505004883
    5. 'back' → logprob: -13.876039505004883
    6. '	right' → logprob: -14.376039505004883
    7. 'front' → logprob: -15.251039505004883
    8. '```' → logprob: -15.376039505004883
    9. ',right' → logprob: -15.626039505004883
    10. 'rightness' → logprob: -15.751039505004883

Token 221: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1243206113576889
    2. ' for' → logprob: -2.6243205070495605
    3. 'for' → logprob: -3.3743205070495605
    4. '
' → logprob: -5.2493205070495605
    5. ',' → logprob: -5.7493205070495605
    6. ':' → logprob: -7.4993205070495605
    7. '    
' → logprob: -7.7493205070495605
    8. '.' → logprob: -9.124320983886719
    9. ':
' → logprob: -9.374320983886719
    10. ',
' → logprob: -9.499320983886719

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12066864967346191
    2. 'for' → logprob: -2.495668649673462
    3. ' for' → logprob: -3.495668649673462
    4. '
' → logprob: -7.620668411254883
    5. '    
' → logprob: -8.245668411254883
    6. '	for' → logprob: -9.995668411254883
    7. '```' → logprob: -9.995668411254883
    8. ',' → logprob: -10.745668411254883
    9. '       ' → logprob: -12.120668411254883
    10. ' ' → logprob: -12.620668411254883

Token 223: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04878947511315346
    2. ' for' → logprob: -3.0487895011901855
    3. '   ' → logprob: -8.548789024353027
    4. '
' → logprob: -12.423789024353027
    5. '    
' → logprob: -13.423789024353027
    6. '	for' → logprob: -14.048789024353027
    7. 'i' → logprob: -14.423789024353027
    8. '```' → logprob: -14.548789024353027
    9. ' ' → logprob: -14.798789024353027
    10. ' 
' → logprob: -16.048789978027344

Token 224: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4822058081626892
    2. 'i' → logprob: -0.9822058081626892
    3. 'r' → logprob: -5.732205867767334
    4. ' row' → logprob: -5.982205867767334
    5. ' r' → logprob: -6.607205867767334
    6. 'row' → logprob: -6.982205867767334
    7. '   ' → logprob: -10.857205390930176
    8. ' ' → logprob: -11.607205390930176
    9. '	i' → logprob: -11.857205390930176
    10. '0' → logprob: -12.607205390930176

Token 225: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006739169359207153
    2. 'in' → logprob: -5.131739139556885
    3. ' ' → logprob: -7.256739139556885
    4. ',' → logprob: -10.506739616394043
    5. '0' → logprob: -10.756739616394043
    6. ' ,' → logprob: -10.881739616394043
    7. '	in' → logprob: -11.506739616394043
    8. 'range' → logprob: -11.756739616394043
    9. '<|end|>' → logprob: -12.756739616394043
    10. ' range' → logprob: -13.006739616394043

Token 226: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12707100808620453
    2. ' range' → logprob: -2.127070903778076
    3. '0' → logprob: -8.877071380615234
    4. '(range' → logprob: -13.752071380615234
    5. '	range' → logprob: -13.877071380615234
    6. ' ' → logprob: -14.127071380615234
    7. ')' → logprob: -15.627071380615234
    8. 'r' → logprob: -16.252071380615234
    9. ' xrange' → logprob: -16.502071380615234
    10. '   ' → logprob: -16.627071380615234

Token 227: '(r' (ID: 4729)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1274353265762329
    2. '(r' → logprob: -2.1274352073669434
    3. ' r' → logprob: -7.627435207366943
    4. '(' → logprob: -11.877435684204102
    5. '0' → logprob: -12.377435684204102
    6. '	r' → logprob: -12.752435684204102
    7. ',r' → logprob: -13.627435684204102
    8. '   ' → logprob: -14.002435684204102
    9. '[r' → logprob: -14.252435684204102
    10. '1' → logprob: -14.502435684204102

Token 228: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3138430714607239
    2. '):
' → logprob: -1.313843011856079
    3. '+' → logprob: -8.1888427734375
    4. ',' → logprob: -9.3138427734375
    5. ')' → logprob: -9.4388427734375
    6. '   ' → logprob: -9.9388427734375
    7. '):
' → logprob: -11.1888427734375
    8. '-' → logprob: -11.3138427734375
    9. '):

' → logprob: -11.3138427734375
    10. ' ):' → logprob: -11.4388427734375

Token 229: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04504382237792015
    2. '   ' → logprob: -3.545043706893921
    3. ' ' → logprob: -4.6700439453125
    4. '       ' → logprob: -5.9200439453125
    5. 'for' → logprob: -6.1700439453125
    6. '	for' → logprob: -7.9200439453125
    7. ' range' → logprob: -8.1700439453125
    8. '<|end|>' → logprob: -8.9200439453125
    9. '    ' → logprob: -9.4200439453125
    10. '  ' → logprob: -10.4200439453125

Token 230: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06307721138000488
    2. ' for' → logprob: -2.813077211380005
    3. 'range' → logprob: -7.563076972961426
    4. '0' → logprob: -7.938076972961426
    5. ' range' → logprob: -9.063076972961426
    6. '   ' → logprob: -9.688076972961426
    7. 'width' → logprob: -10.438076972961426
    8. ' ' → logprob: -10.813076972961426
    9. ' width' → logprob: -13.063076972961426
    10. '	for' → logprob: -13.938076972961426

Token 231: ' j' (ID: 441)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.16607879102230072
    2. ' width' → logprob: -1.916078805923462
    3. 'range' → logprob: -6.541078567504883
    4. '2' → logprob: -6.916078567504883
    5. '0' → logprob: -7.041078567504883
    6. ' range' → logprob: -7.166078567504883
    7. 's' → logprob: -7.666078567504883
    8. '1' → logprob: -8.041078567504883
    9. ' ' → logprob: -8.291078567504883
    10. 'w' → logprob: -8.541078567504883

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012892071157693863
    2. 'in' → logprob: -4.387892246246338
    3. ' ' → logprob: -8.88789176940918
    4. '(' → logprob: -9.51289176940918
    5. '	in' → logprob: -9.76289176940918
    6. '+' → logprob: -10.13789176940918
    7. ')' → logprob: -11.13789176940918
    8. ' (' → logprob: -11.76289176940918
    9. '=' → logprob: -12.01289176940918
    10. '0' → logprob: -12.13789176940918

Token 233: ' range' (ID: 3352)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.17186346650123596
    2. ' width' → logprob: -2.171863555908203
    3. '1' → logprob: -3.921863555908203
    4. 'range' → logprob: -4.546863555908203
    5. '0' → logprob: -4.796863555908203
    6. ' range' → logprob: -5.921863555908203
    7. ' ' → logprob: -7.046863555908203
    8. 'r' → logprob: -7.546863555908203
    9. 's' → logprob: -7.921863555908203
    10. '(width' → logprob: -8.171863555908203

Token 234: '(width' (ID: 32972)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.5511876344680786
    2. '(width' → logprob: -1.0511876344680786
    3. '(' → logprob: -3.176187515258789
    4. 's' → logprob: -3.926187515258789
    5. '(s' → logprob: -5.426187515258789
    6. '2' → logprob: -5.801187515258789
    7. '0' → logprob: -6.051187515258789
    8. ' width' → logprob: -6.176187515258789
    9. '1' → logprob: -8.051187515258789
    10. ' (' → logprob: -8.676187515258789

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04503561556339264
    2. '):
' → logprob: -3.6700356006622314
    3. '+' → logprob: -4.0450358390808105
    4. ' ):' → logprob: -8.045035362243652
    5. ' +' → logprob: -8.295035362243652
    6. ')' → logprob: -8.295035362243652
    7. '-' → logprob: -8.920035362243652
    8. '   ' → logprob: -10.545035362243652
    9. ' -' → logprob: -11.295035362243652
    10. '):

' → logprob: -11.545035362243652

Token 236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7061424851417542
    2. ' if' → logprob: -0.8311424851417542
    3. '       ' → logprob: -3.2061424255371094
    4. ':' → logprob: -4.956142425537109
    5. 'if' → logprob: -5.206142425537109
    6. '<|end|>' → logprob: -5.206142425537109
    7. ',' → logprob: -5.831142425537109
    8. '        ' → logprob: -6.206142425537109
    9. ' ' → logprob: -6.456142425537109
    10. ' :' → logprob: -6.706142425537109

Token 237: ' pid' (ID: 23462)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1611267775297165
    2. 'if' → logprob: -2.2861268520355225
    3. '           ' → logprob: -3.1611268520355225
    4. '               ' → logprob: -6.411126613616943
    5. ' token' → logprob: -6.911126613616943
    6. 'token' → logprob: -6.911126613616943
    7. 'pass' → logprob: -7.661126613616943
    8. 'pos' → logprob: -8.911127090454102
    9. '   ' → logprob: -9.286127090454102
    10. '            
' → logprob: -9.786127090454102

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05887512117624283
    2. ' =' → logprob: -3.05887508392334
    3. ' is' → logprob: -4.93387508392334
    4. 'if' → logprob: -6.05887508392334
    5. 'is' → logprob: -7.68387508392334
    6. ' if' → logprob: -9.18387508392334
    7. '!=' → logprob: -9.80887508392334
    8. 'in' → logprob: -10.80887508392334
    9. '=None' → logprob: -10.93387508392334
    10. ')' → logprob: -12.05887508392334

Token 239: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.014163863845169544
    2. ' car' → logprob: -4.264163970947266
    3. '	car' → logprob: -15.639163970947266
    4. '(car' → logprob: -16.889163970947266
    5. ' ' → logprob: -17.264163970947266
    6. '   ' → logprob: -17.264163970947266
    7. '_car' → logprob: -17.764163970947266
    8. 'c' → logprob: -18.139163970947266
    9. 'cars' → logprob: -18.264163970947266
    10. '.car' → logprob: -18.264163970947266

Token 240: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. 'i' → logprob: -13.000003814697266
    3. '[j' → logprob: -14.000003814697266
    4. '[' → logprob: -14.250003814697266
    5. ' [' → logprob: -15.625003814697266
    6. '][' → logprob: -17.500003814697266
    7. '```' → logprob: -17.625003814697266
    8. '[I' → logprob: -18.000003814697266
    9. '[
' → logprob: -18.125003814697266
    10. ' i' → logprob: -18.750003814697266

Token 241: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00029875844484195113
    2. '[i' → logprob: -9.000298500061035
    3. '[j' → logprob: -9.625298500061035
    4. ']' → logprob: -9.750298500061035
    5. ' ][' → logprob: -10.125298500061035
    6. '[' → logprob: -12.750298500061035
    7. ']][' → logprob: -13.375298500061035
    8. '   ' → logprob: -13.625298500061035
    9. ')[' → logprob: -13.625298500061035
    10. ')][' → logprob: -14.125298500061035

Token 242: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.941850526549388e-06
    2. ' j' → logprob: -11.750007629394531
    3. '	j' → logprob: -17.25000762939453
    4. '[j' → logprob: -18.00000762939453
    5. '   ' → logprob: -18.75000762939453
    6. ']' → logprob: -19.12500762939453
    7. ' ' → logprob: -19.62500762939453
    8. '```' → logprob: -20.00000762939453
    9. ')' → logprob: -20.37500762939453
    10. '$j' → logprob: -20.50000762939453

Token 243: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003017518436536193
    2. ' )' → logprob: -6.378017425537109
    3. ')
' → logprob: -7.503017425537109
    4. ' is' → logprob: -8.37801742553711
    5. ']' → logprob: -8.50301742553711
    6. 'if' → logprob: -8.87801742553711
    7. '])' → logprob: -9.50301742553711
    8. ')is' → logprob: -10.00301742553711
    9. ')]' → logprob: -11.12801742553711
    10. '）' → logprob: -11.37801742553711

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15245100855827332
    2. '<|end|>' → logprob: -2.1524510383605957
    3. ' if' → logprob: -4.152451038360596
    4. '<|end|>' → logprob: -6.152451038360596
    5. 'if' → logprob: -6.402451038360596
    6. ' is' → logprob: -6.527451038360596
    7. ' ' → logprob: -6.777451038360596
    8. '            ' → logprob: -7.652451038360596
    9. '               ' → logprob: -7.652451038360596
    10. '            
' → logprob: -7.902451038360596

Token 245: ' if' (ID: 538)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2006494104862213
    2. ' if' → logprob: -1.825649380683899
    3. 'if' (adapté à ' if') → logprob: -4.450649261474609
    4. '           ' → logprob: -5.075649261474609
    5. ' not' → logprob: -6.700649261474609
    6. ' None' → logprob: -7.700649261474609
    7. 'is' → logprob: -7.700649261474609
    8. ' !=' → logprob: -9.07564926147461
    9. ' and' → logprob: -9.32564926147461
    10. '               ' → logprob: -9.57564926147461

Token 246: ' pid' (ID: 23462)
  Prédit: 'pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.06197217106819153
    2. ' pid' → logprob: -2.811972141265869
    3. '(pid' → logprob: -12.561972618103027
    4. '   ' → logprob: -15.311972618103027
    5. ' ' → logprob: -15.561972618103027
    6. 'pi' → logprob: -16.31197166442871
    7. ' not' → logprob: -16.43697166442871
    8. 'id' → logprob: -16.56197166442871
    9. 'p' → logprob: -16.68697166442871
    10. 'pit' → logprob: -16.81197166442871

Token 247: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10022316873073578
    2. 'is' → logprob: -2.3502230644226074
    3. ')' → logprob: -11.350223541259766
    4. '!=' → logprob: -12.850223541259766
    5. 'not' → logprob: -14.975223541259766
    6. ' )' → logprob: -15.350223541259766
    7. '==' → logprob: -15.350223541259766
    8. '=' → logprob: -15.475223541259766
    9. ' not' → logprob: -15.475223541259766
    10. '	is' → logprob: -15.475223541259766

Token 248: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.052499786019325256
    2. ' not' → logprob: -3.552499771118164
    3. 'None' → logprob: -3.802499771118164
    4. ' None' → logprob: -8.677499771118164
    5. 'Not' → logprob: -12.302499771118164
    6. '0' → logprob: -14.052499771118164
    7. '	not' → logprob: -14.052499771118164
    8. 'none' → logprob: -14.677499771118164
    9. '=None' → logprob: -15.927499771118164
    10. 'n' → logprob: -16.427499771118164

Token 249: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.836499985889532e-05
    2. ' None' → logprob: -9.7500581741333
    3. '_None' → logprob: -17.125059127807617
    4. 'not' → logprob: -17.500059127807617
    5. '=None' → logprob: -18.625059127807617
    6. '(None' → logprob: -19.125059127807617
    7. '0' → logprob: -19.125059127807617
    8. '.None' → logprob: -19.250059127807617
    9. 'none' → logprob: -19.500059127807617
    10. 'N' → logprob: -20.000059127807617

Token 250: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.019937805831432343
    2. 'and' → logprob: -4.519937992095947
    3. ':' → logprob: -5.019937992095947
    4. ':
' → logprob: -6.144937992095947
    5. '               ' → logprob: -10.019937515258789
    6. '           ' → logprob: -10.019937515258789
    7. '	and' → logprob: -13.519937515258789
    8. '       ' → logprob: -13.644937515258789
    9. '                       ' → logprob: -13.644937515258789
    10. '   ' → logprob: -13.769937515258789

Token 251: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.252457618713379
    2. 'not' → logprob: -1.252457618713379
    3. 'j' → logprob: -1.377457618713379
    4. '(j' → logprob: -2.377457618713379
    5. '(not' → logprob: -3.877457618713379
    6. ' (' → logprob: -4.127457618713379
    7. ' j' → logprob: -4.252457618713379
    8. '(m' → logprob: -4.752457618713379
    9. 'car' → logprob: -5.252457618713379
    10. '(car' → logprob: -5.252457618713379

Token 252: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.012522248551249504
    2. ' moved' → logprob: -4.387522220611572
    3. ' m' → logprob: -11.76252269744873
    4. 'moving' → logprob: -13.51252269744873
    5. '	m' → logprob: -13.76252269744873
    6. '   ' → logprob: -14.01252269744873
    7. ' ' → logprob: -14.88752269744873
    8. ' moving' → logprob: -15.38752269744873
    9. 'Moved' → logprob: -15.88752269744873
    10. 'move' → logprob: -16.137521743774414

Token 253: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.534558552724775e-05
    2. '[i' → logprob: -11.625025749206543
    3. '```' → logprob: -12.375025749206543
    4. ' [' → logprob: -12.750025749206543
    5. '
' → logprob: -13.125025749206543
    6. '[j' → logprob: -13.500025749206543
    7. '[id' → logprob: -13.750025749206543
    8. '   ' → logprob: -13.750025749206543
    9. '[ip' → logprob: -14.250025749206543
    10. '[p' → logprob: -14.375025749206543

Token 254: 'pid' (ID: 19554)
  Prédit: 'pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -6.504040356958285e-05
    2. ' pid' → logprob: -9.875064849853516
    3. '(pid' → logprob: -11.875064849853516
    4. ']' → logprob: -13.125064849853516
    5. 'idx' → logprob: -13.875064849853516
    6. 'pi' → logprob: -14.000064849853516
    7. '[' → logprob: -14.125064849853516
    8. 'p' → logprob: -14.875064849853516
    9. 'id' → logprob: -15.000064849853516
    10. 'uid' → logprob: -15.375064849853516

Token 255: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.13791725039482117
    2. ']:' → logprob: -2.6379172801971436
    3. ']' → logprob: -2.8879172801971436
    4. ' ]' → logprob: -7.2629170417785645
    5. ' and' → logprob: -7.6379170417785645
    6. ']:
' → logprob: -8.762917518615723
    7. ']:

' → logprob: -8.887917518615723
    8. ':' → logprob: -10.012917518615723
    9. ':
' → logprob: -10.012917518615723
    10. 'and' → logprob: -11.137917518615723

Token 256: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06276355683803558
    2. ' if' → logprob: -3.0627634525299072
    3. ':
' → logprob: -5.687763690948486
    4. ':' → logprob: -5.812763690948486
    5. ' and' → logprob: -6.437763690948486
    6. ' ' → logprob: -6.562763690948486
    7. '           ' → logprob: -6.937763690948486
    8. '       ' → logprob: -7.312763690948486
    9. '                
' → logprob: -7.312763690948486
    10. 'if' → logprob: -7.812763690948486

Token 257: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.020045079290866852
    2. 'if' → logprob: -4.020045280456543
    3. '               ' → logprob: -7.520045280456543
    4. '                   ' → logprob: -8.145045280456543
    5. ' #' → logprob: -8.270045280456543
    6. '#' (adapté à ' #') → logprob: -8.770045280456543
    7. ' ' → logprob: -9.270045280456543
    8. '                ' → logprob: -9.395045280456543
    9. ' ' → logprob: -9.395045280456543
    10. ' next' → logprob: -9.520045280456543

Token 258: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019152803346514702
    2. '#' → logprob: -4.019152641296387
    3. ' if' → logprob: -7.644152641296387
    4. 'next' → logprob: -8.144152641296387
    5. 'target' → logprob: -8.894152641296387
    6. 'pos' → logprob: -10.144152641296387
    7. '               ' → logprob: -11.269152641296387
    8. ' #' → logprob: -11.769152641296387
    9. 'new' → logprob: -11.769152641296387
    10. '   ' → logprob: -12.519152641296387

Token 259: ' on' (ID: 402)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0329216904938221
    2. ' j' → logprob: -3.78292179107666
    3. 'car' → logprob: -4.90792179107666
    4. 'i' → logprob: -6.78292179107666
    5. ' car' → logprob: -7.78292179107666
    6. '0' → logprob: -8.78292179107666
    7. ' i' → logprob: -9.15792179107666
    8. '(j' → logprob: -9.28292179107666
    9. '   ' → logprob: -9.28292179107666
    10. ' (' → logprob: -10.03292179107666

Token 260: ' aisle' (ID: 99887)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.3321911096572876
    2. 'seat' → logprob: -1.5821911096572876
    3. 'se' → logprob: -1.8321911096572876
    4. 'j' → logprob: -2.332190990447998
    5. ' the' → logprob: -2.332190990447998
    6. ' j' → logprob: -2.957190990447998
    7. 'a' → logprob: -3.582190990447998
    8. 'i' → logprob: -3.957190990447998
    9. ' seats' → logprob: -4.332190990447998
    10. 'car' → logprob: -4.457190990447998

Token 261: ' already' (ID: 4279)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.019013619050383568
    2. 'and' → logprob: -4.019013404846191
    3. ' ==' → logprob: -8.519013404846191
    4. ':' → logprob: -8.769013404846191
    5. ' at' → logprob: -8.894013404846191
    6. '==' → logprob: -9.019013404846191
    7. ' ' → logprob: -9.519013404846191
    8. ',' → logprob: -10.394013404846191
    9. ' or' → logprob: -10.894013404846191
    10. ':
' → logprob: -11.019013404846191

Token 262: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06446642428636551
    2. 'and' → logprob: -3.0644664764404297
    3. 'j' → logprob: -5.06446647644043
    4. ' j' → logprob: -5.31446647644043
    5. ' if' → logprob: -6.56446647644043
    6. 'if' → logprob: -6.93946647644043
    7. ' or' → logprob: -7.68946647644043
    8. ' (' → logprob: -7.81446647644043
    9. '                   ' → logprob: -7.81446647644043
    10. '(j' → logprob: -8.06446647644043

Token 263: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014517797157168388
    2. 'and' → logprob: -4.889517784118652
    3. ' if' → logprob: -5.389517784118652
    4. '               ' → logprob: -6.639517784118652
    5. 'if' → logprob: -8.139517784118652
    6. ':' → logprob: -8.389517784118652
    7. '                   ' → logprob: -8.639517784118652
    8. ' j' → logprob: -9.639517784118652
    9. ',' → logprob: -10.014517784118652
    10. ' ' → logprob: -10.264517784118652

Token 264: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03849697858095169
    2. 'if' (adapté à ' if') → logprob: -3.413496971130371
    3. '               ' → logprob: -5.413496971130371
    4. '                   ' → logprob: -8.288496971130371
    5. '                ' → logprob: -9.913496971130371
    6. ' ' → logprob: -10.413496971130371
    7. '```' → logprob: -10.788496971130371
    8. ' and' → logprob: -11.788496971130371
    9. '           ' → logprob: -12.038496971130371
    10. ' ' → logprob: -12.663496971130371

Token 265: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029752571135759354
    2. ' j' → logprob: -3.529752492904663
    3. '	j' → logprob: -14.154752731323242
    4. '   ' → logprob: -14.404752731323242
    5. 'car' → logprob: -15.404752731323242
    6. ' ' → logprob: -15.529752731323242
    7. '_j' → logprob: -16.404752731323242
    8. ' ' → logprob: -16.654752731323242
    9. '$j' → logprob: -16.654752731323242
    10. '    ' → logprob: -16.779752731323242

Token 266: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47408124804496765
    2. '==' → logprob: -0.97408127784729
    3. '=' → logprob: -13.849081039428711
    4. 's' → logprob: -14.474081039428711
    5. ' ' → logprob: -14.724081039428711
    6. '==
' → logprob: -14.724081039428711
    7. '[' → logprob: -14.849081039428711
    8. '<=' → logprob: -15.099081039428711
    9. ']==' → logprob: -15.349081039428711
    10. ')' → logprob: -15.474081039428711

Token 267: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017024369444698095
    2. ' s' → logprob: -6.376702308654785
    3. 'width' → logprob: -15.251702308654785
    4. ' ' → logprob: -18.3767032623291
    5. 'r' → logprob: -18.6267032623291
    6. 'p' → logprob: -18.7517032623291
    7. '   ' → logprob: -19.2517032623291
    8. '(s' → logprob: -19.5017032623291
    9. '	s' → logprob: -19.5017032623291
    10. ' width' → logprob: -19.6267032623291

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0746699720621109
    2. ':
' → logprob: -3.1996700763702393
    3. ' and' → logprob: -3.5746700763702393
    4. ' or' → logprob: -6.44966983795166
    5. 'and' → logprob: -6.57466983795166
    6. '):' → logprob: -9.94966983795166
    7. ' :' → logprob: -10.19966983795166
    8. '):
' → logprob: -10.69966983795166
    9. ':

' → logprob: -11.07466983795166
    10. ':
' → logprob: -11.19966983795166

Token 269: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.008319616317749
    2. '                   ' → logprob: -1.508319616317749
    3. ':' → logprob: -1.633319616317749
    4. ':
' → logprob: -2.508319616317749
    5. '               ' → logprob: -2.883319616317749
    6. '                       ' → logprob: -4.008319854736328
    7. 'continue' → logprob: -4.258319854736328
    8. 'if' → logprob: -4.633319854736328
    9. ' if' → logprob: -5.133319854736328
    10. 'and' → logprob: -5.383319854736328

Token 270: ' continue' (ID: 4901)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07341665029525757
    2. 'new' → logprob: -3.3234167098999023
    3. '#' → logprob: -3.8234167098999023
    4. 'pass' → logprob: -5.198416709899902
    5. 'continue' (adapté à ' continue') → logprob: -5.323416709899902
    6. 'm' → logprob: -7.698416709899902
    7. '                   ' → logprob: -7.698416709899902
    8. '               ' → logprob: -7.948416709899902
    9. 'next' → logprob: -8.448416709899902
    10. '           ' → logprob: -8.573416709899902

Token 271: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008920984342694283
    2. '
' → logprob: -5.258921146392822
    3. '                
' → logprob: -6.383921146392822
    4. ' elif' → logprob: -7.758921146392822
    5. '                ' → logprob: -8.133920669555664
    6. 'elif' → logprob: -8.258920669555664
    7. '<|end|>' → logprob: -8.383920669555664
    8. '                   ' → logprob: -9.008920669555664
    9. ' else' → logprob: -9.133920669555664
    10. '              ' → logprob: -9.508920669555664

Token 272: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002703589154407382
    2. '
' → logprob: -6.377703666687012
    3. '                
' → logprob: -7.502703666687012
    4. '                ' → logprob: -9.502703666687012
    5. '<|end|>' → logprob: -9.627703666687012
    6. ' elif' → logprob: -9.877703666687012
    7. '                   ' → logprob: -10.127703666687012
    8. '              ' → logprob: -10.127703666687012
    9. 'elif' → logprob: -10.127703666687012
    10. ' else' → logprob: -10.502703666687012

Token 273: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16643525660037994
    2. 'else' → logprob: -3.1664352416992188
    3. 'elif' → logprob: -3.4164352416992188
    4. '#' (adapté à ' #') → logprob: -3.6664352416992188
    5. 'if' → logprob: -4.166435241699219
    6. ' else' → logprob: -4.291435241699219
    7. '                
' → logprob: -5.041435241699219
    8. ' elif' → logprob: -5.291435241699219
    9. ' if' → logprob: -5.541435241699219
    10. ' #' → logprob: -5.666435241699219

Token 274: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4721377193927765
    2. '#' → logprob: -1.472137689590454
    3. 'target' → logprob: -2.472137689590454
    4. 'dir' → logprob: -3.597137689590454
    5. 'direction' → logprob: -4.347137928009033
    6. 'next' → logprob: -5.347137928009033
    7. 'elif' → logprob: -5.597137928009033
    8. 'di' → logprob: -5.722137928009033
    9. 'dx' → logprob: -5.972137928009033
    10. 'dr' → logprob: -6.347137928009033

Token 275: ' next' (ID: 2613)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3245253562927246
    2. 'car' → logprob: -1.8245253562927246
    3. ' j' → logprob: -2.3245253562927246
    4. ' car' → logprob: -4.699525356292725
    5. '(j' → logprob: -5.949525356292725
    6. 's' → logprob: -6.449525356292725
    7. '(car' → logprob: -6.949525356292725
    8. ' (' → logprob: -6.949525356292725
    9. '   ' → logprob: -7.574525356292725
    10. '(' → logprob: -7.699525356292725

Token 276: ' position' (ID: 4010)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -1.5430153608322144
    2. '==' → logprob: -2.043015480041504
    3. '_token' → logprob: -2.543015480041504
    4. 'position' → logprob: -2.668015480041504
    5. 'j' → logprob: -2.668015480041504
    6. ' j' → logprob: -2.793015480041504
    7. ' ==' → logprob: -2.793015480041504
    8. '_j' → logprob: -2.918015480041504
    9. 'pos' → logprob: -3.043015480041504
    10. '[j' → logprob: -3.043015480041504

Token 277: ' towards' (ID: 9979)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2300371378660202
    2. ' ==' → logprob: -1.6050370931625366
    3. 'in' → logprob: -5.855037212371826
    4. ',' → logprob: -7.230037212371826
    5. ' in' → logprob: -7.855037212371826
    6. '=' → logprob: -8.605036735534668
    7. 'is' → logprob: -9.730036735534668
    8. '==
' → logprob: -9.855036735534668
    9. ']==' → logprob: -10.105036735534668
    10. 'to' → logprob: -10.355036735534668

Token 278: ' aisle' (ID: 99887)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02987186424434185
    2. ' s' → logprob: -3.529871940612793
    3. 'the' → logprob: -10.029871940612793
    4. 'j' → logprob: -10.404871940612793
    5. ' the' → logprob: -11.529871940612793
    6. '(s' → logprob: -12.279871940612793
    7. 'car' → logprob: -12.529871940612793
    8. ' aisle' → logprob: -12.529871940612793
    9. ' (' → logprob: -12.654871940612793
    10. '0' → logprob: -13.154871940612793

Token 279: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5243008732795715
    2. ' ==' → logprob: -0.8993008732795715
    3. '=' → logprob: -7.774301052093506
    4. ',' → logprob: -8.399300575256348
    5. 'if' → logprob: -9.274300575256348
    6. '                   ' → logprob: -9.399300575256348
    7. 'in' → logprob: -9.399300575256348
    8. ' =' → logprob: -9.899300575256348
    9. ' in' → logprob: -10.524300575256348
    10. '==
' → logprob: -10.649300575256348

Token 280: ' empty' (ID: 8213)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6415698528289795
    2. ' s' → logprob: -1.6415698528289795
    3. 'j' → logprob: -1.7665698528289795
    4. ' j' → logprob: -2.3915698528289795
    5. 'car' → logprob: -4.766570091247559
    6. 'None' → logprob: -5.891570091247559
    7. ' car' → logprob: -6.141570091247559
    8. ' None' → logprob: -6.766570091247559
    9. '(s' → logprob: -7.141570091247559
    10. ' (' → logprob: -8.016570091247559

Token 281: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008697065524756908
    2. 'and' → logprob: -4.758697032928467
    3. ',' → logprob: -10.008697509765625
    4. ' or' → logprob: -10.758697509765625
    5. ' ' → logprob: -12.133697509765625
    6. ':' → logprob: -12.258697509765625
    7. ' ,' → logprob: -13.133697509765625
    8. '<|end|>' → logprob: -13.508697509765625
    9. ' ' → logprob: -14.133697509765625
    10. '	and' → logprob: -15.133697509765625

Token 282: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018162818625569344
    2. 'and' → logprob: -4.018162727355957
    3. ',' → logprob: -12.393162727355957
    4. ' or' → logprob: -13.143162727355957
    5. ' ' → logprob: -13.268162727355957
    6. '                   ' → logprob: -13.643162727355957
    7. '               ' → logprob: -14.518162727355957
    8. ':' → logprob: -14.518162727355957
    9. '   ' → logprob: -14.768162727355957
    10. ' ,' → logprob: -14.893162727355957

Token 283: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14018459618091583
    2. 'if' (adapté à ' if') → logprob: -2.1401846408843994
    3. '               ' → logprob: -5.51518440246582
    4. ' elif' → logprob: -5.51518440246582
    5. ' and' → logprob: -6.51518440246582
    6. 'elif' → logprob: -6.64018440246582
    7. '                   ' → logprob: -7.51518440246582
    8. ' ' → logprob: -7.51518440246582
    9. ' =' → logprob: -8.26518440246582
    10. ' ' → logprob: -9.01518440246582

Token 284: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.24282479286193848
    2. ' j' → logprob: -2.4928247928619385
    3. '(j' → logprob: -3.1178247928619385
    4. 'car' → logprob: -3.1178247928619385
    5. ' (' → logprob: -4.367824554443359
    6. '(car' → logprob: -4.492824554443359
    7. ' car' → logprob: -4.992824554443359
    8. '(' → logprob: -5.117824554443359
    9. '(s' → logprob: -6.367824554443359
    10. '((' → logprob: -6.617824554443359

Token 285: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8660919666290283
    2. '+' → logprob: -0.9910919666290283
    3. ' +' → logprob: -2.3660919666290283
    4. '<' → logprob: -2.9910919666290283
    5. ' ==' → logprob: -3.2410919666290283
    6. ' !=' → logprob: -3.9910919666290283
    7. ' ' → logprob: -6.116091728210449
    8. '==' → logprob: -6.116091728210449
    9. '!=' → logprob: -7.241091728210449
    10. ' >' → logprob: -7.366091728210449

Token 286: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0699373260140419
    2. ' s' → logprob: -2.694937229156494
    3. ' ' → logprob: -14.819937705993652
    4. '	s' → logprob: -16.319936752319336
    5. '=' → logprob: -16.444936752319336
    6. '_s' → logprob: -16.694936752319336
    7. '   ' → logprob: -16.819936752319336
    8. '=s' → logprob: -16.819936752319336
    9. '>s' → logprob: -17.444936752319336
    10. 'width' → logprob: -17.632436752319336

Token 287: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12698249518871307
    2. 'and' → logprob: -2.1269824504852295
    3. '+' → logprob: -10.376982688903809
    4. ' ' → logprob: -11.751982688903809
    5. '           ' → logprob: -12.501982688903809
    6. '               ' → logprob: -12.751982688903809
    7. '                   ' → logprob: -13.376982688903809
    8. ':' → logprob: -13.876982688903809
    9. ' +' → logprob: -14.001982688903809
    10. ',' → logprob: -14.001982688903809

Token 288: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0035248827189207077
    2. ' ' → logprob: -6.5035247802734375
    3. 'and' → logprob: -6.6285247802734375
    4. '                   ' → logprob: -8.128524780273438
    5. ',' → logprob: -9.253524780273438
    6. '               ' → logprob: -9.378524780273438
    7. '+' → logprob: -10.003524780273438
    8. ' if' → logprob: -10.378524780273438
    9. ' +' → logprob: -10.878524780273438
    10. ' 
' → logprob: -11.003524780273438

Token 289: ' next' (ID: 2613)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18611498177051544
    2. 'if' → logprob: -1.811115026473999
    3. '                   ' → logprob: -5.68611478805542
    4. ' new' → logprob: -6.93611478805542
    5. ' next' → logprob: -7.56111478805542
    6. ' ' → logprob: -8.061115264892578
    7. '               ' → logprob: -8.436115264892578
    8. 'new' → logprob: -8.561115264892578
    9. 'next' (adapté à ' next') → logprob: -8.811115264892578
    10. '+' → logprob: -8.936115264892578

Token 290: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.21709640324115753
    2. '=' → logprob: -1.8420964479446411
    3. ' =' → logprob: -3.7170963287353516
    4. '_' → logprob: -5.217096328735352
    5. '_pos' → logprob: -5.842096328735352
    6. 'j' → logprob: -6.342096328735352
    7. ']' → logprob: -7.467096328735352
    8. '_col' → logprob: -7.842096328735352
    9. '[j' → logprob: -8.217096328735352
    10. '_idx' → logprob: -8.342096328735352

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615635335445404
    2. ' =' → logprob: -4.758615493774414
    3. '=j' → logprob: -13.883615493774414
    4. '+=' → logprob: -16.133615493774414
    5. '                   ' → logprob: -17.883615493774414
    6. '   ' → logprob: -18.133615493774414
    7. '=
' → logprob: -18.258615493774414
    8. ')' → logprob: -18.508615493774414
    9. '+' → logprob: -18.633615493774414
    10. '               ' → logprob: -19.008615493774414

Token 292: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6240566083070007e-06
    2. ' j' → logprob: -13.375001907348633
    3. '	j' → logprob: -17.375001907348633
    4. '   ' → logprob: -17.750001907348633
    5. 's' → logprob: -18.625001907348633
    6. '$j' → logprob: -19.250001907348633
    7. '                   ' → logprob: -20.250001907348633
    8. '    ' → logprob: -20.625001907348633
    9. '[j' → logprob: -20.750001907348633
    10. '_j' → logprob: -21.000001907348633

Token 293: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815556176006794
    2. ' +' → logprob: -4.018155574798584
    3. '+j' → logprob: -12.393155097961426
    4. '+=' → logprob: -14.143155097961426
    5. '                   ' → logprob: -14.768155097961426
    6. ' +=' → logprob: -16.018156051635742
    7. '                    ' → logprob: -16.893156051635742
    8. '+
' → logprob: -16.893156051635742
    9. '=' → logprob: -17.018156051635742
    10. '+i' → logprob: -17.143156051635742

Token 294: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -18.625001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '+' → logprob: -20.000001907348633
    6. '
' → logprob: -21.125001907348633
    7. '0' → logprob: -21.875001907348633
    8. '-' → logprob: -21.875001907348633
    9. '۱' → logprob: -22.062501907348633
    10. '  ' → logprob: -22.187501907348633

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -19.750001907348633
    5. '+' → logprob: -20.000001907348633
    6. '-' → logprob: -21.500001907348633
    7. '0' → logprob: -21.562501907348633
    8. '
' → logprob: -21.562501907348633
    9. '۱' → logprob: -22.125001907348633
    10. '2' → logprob: -22.312501907348633

Token 296: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5084473490715027
    2. '               ' → logprob: -1.3834474086761475
    3. '<|end|>' → logprob: -2.0084474086761475
    4. ' if' → logprob: -5.883447170257568
    5. ' ' → logprob: -6.133447170257568
    6. '           ' → logprob: -6.383447170257568
    7. '<|end|>' → logprob: -6.758447170257568
    8. ')' → logprob: -7.008447170257568
    9. '   ' → logprob: -7.133447170257568
    10. '                    
' → logprob: -7.508447170257568

Token 298: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5911425948143005
    2. '               ' → logprob: -1.3411426544189453
    3. 'else' (adapté à ' else') → logprob: -1.7161426544189453
    4. ' elif' → logprob: -6.216142654418945
    5. 'elif' → logprob: -6.466142654418945
    6. '<|end|>' → logprob: -7.466142654418945
    7. '
' → logprob: -8.466142654418945
    8. '                
' → logprob: -8.591142654418945
    9. '                   ' → logprob: -9.341142654418945
    10. '                ' → logprob: -9.341142654418945

Token 299: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5275759696960449
    2. ' =' → logprob: -1.777575969696045
    3. ':' → logprob: -2.027575969696045
    4. '=' → logprob: -3.402575969696045
    5. ':
' → logprob: -3.402575969696045
    6. '               ' → logprob: -3.652575969696045
    7. ' next' → logprob: -5.027575969696045
    8. 'next' → logprob: -6.527575969696045
    9. '           ' → logprob: -6.652575969696045
    10. '                ' → logprob: -6.652575969696045

Token 300: '                   ' (ID: 699)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2694343626499176
    2. ' next' → logprob: -1.5194343328475952
    3. 'j' → logprob: -4.394434452056885
    4. 'next' → logprob: -5.394434452056885
    5. '                   ' → logprob: -8.894433975219727
    6. '               ' → logprob: -9.269433975219727
    7. '                ' → logprob: -9.644433975219727
    8. ' ' → logprob: -10.269433975219727
    9. '                    ' → logprob: -10.269433975219727
    10. ' s' → logprob: -10.894433975219727

Token 301: ' next' (ID: 2613)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.14594583213329315
    2. ' j' → logprob: -2.6459457874298096
    3. 'next' (adapté à ' next') → logprob: -2.8959457874298096
    4. ' next' → logprob: -4.645946025848389
    5. '                   ' → logprob: -13.27094554901123
    6. '   ' → logprob: -13.39594554901123
    7. '               ' → logprob: -13.39594554901123
    8. 's' → logprob: -13.77094554901123
    9. '           ' → logprob: -14.39594554901123
    10. '    ' → logprob: -14.64594554901123

Token 302: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -3.5120287066092715e-05
    2. '_' → logprob: -11.125035285949707
    3. '_i' → logprob: -11.125035285949707
    4. 'j' → logprob: -12.750035285949707
    5. '-' → logprob: -14.125035285949707
    6. '=' → logprob: -15.125035285949707
    7. '```' → logprob: -15.250035285949707
    8. '_s' → logprob: -15.250035285949707
    9. ' _' → logprob: -15.500035285949707
    10. '                   ' → logprob: -16.37503433227539

Token 303: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132747709751129
    2. ' =' → logprob: -1.3132747411727905
    3. ' -=' → logprob: -11.938274383544922
    4. '-=' → logprob: -12.313274383544922
    5. '-' → logprob: -13.438274383544922
    6. ' ' → logprob: -16.063274383544922
    7. ' -' → logprob: -16.438274383544922
    8. '>' → logprob: -16.438274383544922
    9. 's' → logprob: -16.813274383544922
    10. '   ' → logprob: -17.188274383544922

Token 304: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0046310266479849815
    2. ' j' → logprob: -5.379631042480469
    3. 's' → logprob: -11.629631042480469
    4. '   ' → logprob: -14.004631042480469
    5. ' s' → logprob: -15.379631042480469
    6. ' ' → logprob: -15.879631042480469
    7. '	j' → logprob: -15.879631042480469
    8. '  ' → logprob: -16.62963104248047
    9. '    ' → logprob: -16.62963104248047
    10. '0' → logprob: -16.87963104248047

Token 305: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020554613322019577
    2. ' -' → logprob: -3.895554542541504
    3. '=' → logprob: -11.770554542541504
    4. '-=' → logprob: -13.520554542541504
    5. ')' → logprob: -13.645554542541504
    6. '                   ' → logprob: -14.020554542541504
    7. ' ' → logprob: -14.895554542541504
    8. ' -=' → logprob: -15.270554542541504
    9. '               ' → logprob: -15.520554542541504
    10. '           ' → logprob: -16.02055549621582

Token 306: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -20.375
    5. '۱' → logprob: -20.9375
    6. '2' → logprob: -21.0625
    7. '                   ' → logprob: -21.1875
    8. '１' → logprob: -21.5
    9. '           ' → logprob: -21.75
    10. '
' → logprob: -21.8125

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۱' → logprob: -19.3125
    4. '```' → logprob: -19.6875
    5. '   ' → logprob: -20.5
    6. '১' → logprob: -20.8125
    7. '१' → logprob: -20.9375
    8. '0' → logprob: -21.0
    9. '...' → logprob: -21.125
    10. '<|end|>' → logprob: -21.25

Token 308: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20283469557762146
    2. '<|end|>' → logprob: -1.9528347253799438
    3. '
' → logprob: -3.8278346061706543
    4. '                
' → logprob: -4.952834606170654
    5. ' if' → logprob: -5.452834606170654
    6. '<|end|>' → logprob: -6.077834606170654
    7. '           ' → logprob: -6.577834606170654
    8. '  
' → logprob: -6.827834606170654
    9. '                   ' → logprob: -7.202834606170654
    10. ' 
' → logprob: -7.327834606170654

Token 309: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6112757921218872
    2. ' if' → logprob: -1.3612757921218872
    3. 'if' (adapté à ' if') → logprob: -1.6112757921218872
    4. '                
' → logprob: -7.486275672912598
    5. '           ' → logprob: -7.736275672912598
    6. '   ' → logprob: -8.986275672912598
    7. '                   ' → logprob: -9.736275672912598
    8. '
' → logprob: -9.986275672912598
    9. '                ' → logprob: -10.611275672912598
    10. '#' → logprob: -10.736275672912598

Token 311: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.029868274927139282
    2. ' car' → logprob: -3.6548683643341064
    3. 'new' → logprob: -6.154868125915527
    4. ' new' → logprob: -7.279868125915527
    5. '0' → logprob: -7.654868125915527
    6. ' ' → logprob: -8.904868125915527
    7. 'next' → logprob: -9.529868125915527
    8. ' next' → logprob: -10.029868125915527
    9. '   ' → logprob: -12.404868125915527
    10. 'not' → logprob: -12.529868125915527

Token 312: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7954958821064793e-05
    2. '[' → logprob: -12.125018119812012
    3. '][' → logprob: -12.500018119812012
    4. 'i' → logprob: -12.625018119812012
    5. '[next' → logprob: -12.875018119812012
    6. ' [' → logprob: -14.000018119812012
    7. '[j' → logprob: -14.625018119812012
    8. '[I' → logprob: -15.000018119812012
    9. '[
' → logprob: -15.500018119812012
    10. '```' → logprob: -15.750018119812012

Token 313: '][' (ID: 2696)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.2044883519411087
    2. '][' → logprob: -1.7044883966445923
    3. '[' → logprob: -5.829488277435303
    4. ']' → logprob: -9.829488754272461
    5. ' ][' → logprob: -10.579488754272461
    6. ' [' → logprob: -11.704488754272461
    7. '[j' → logprob: -11.954488754272461
    8. '[
' → logprob: -12.204488754272461
    9. 'next' → logprob: -12.704488754272461
    10. '   ' → logprob: -12.829488754272461

Token 314: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -8.387458365177736e-05
    2. ' next' → logprob: -9.625083923339844
    3. '[next' → logprob: -11.125083923339844
    4. '(next' → logprob: -13.000083923339844
    5. '	next' → logprob: -14.250083923339844
    6. ',next' → logprob: -17.000083923339844
    7. '_next' → logprob: -17.625083923339844
    8. '
' → logprob: -17.875083923339844
    9. ']' → logprob: -18.000083923339844
    10. 'Next' → logprob: -18.250083923339844

Token 315: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -3.297462171758525e-05
    2. '_i' → logprob: -11.000033378601074
    3. 'j' → logprob: -11.875033378601074
    4. ']' → logprob: -13.000033378601074
    5. '_' → logprob: -13.125033378601074
    6. '+' → logprob: -13.875033378601074
    7. '```' → logprob: -14.375033378601074
    8. '[j' → logprob: -14.625033378601074
    9. '_]' → logprob: -14.625033378601074
    10. '[' → logprob: -14.875033378601074

Token 316: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05222227796912193
    2. ' is' → logprob: -3.67722225189209
    3. 'is' → logprob: -3.67722225189209
    4. ']==' → logprob: -8.92722225189209
    5. ')' → logprob: -9.42722225189209
    6. ' ]' → logprob: -9.67722225189209
    7. '[' → logprob: -11.17722225189209
    8. '==' → logprob: -13.05222225189209
    9. 'None' → logprob: -14.42722225189209
    10. '])' → logprob: -14.55222225189209

Token 317: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2520102560520172
    2. 'is' → logprob: -1.5020102262496948
    3. '==' → logprob: -9.877010345458984
    4. ')' → logprob: -10.752010345458984
    5. 'None' → logprob: -12.377010345458984
    6. ' None' → logprob: -13.627010345458984
    7. ']' → logprob: -13.877010345458984
    8. ')is' → logprob: -14.377010345458984
    9. ' )' → logprob: -14.502010345458984
    10. '[' → logprob: -15.252010345458984

Token 318: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01416350994259119
    2. ' None' → logprob: -4.264163494110107
    3. '(None' → logprob: -18.014163970947266
    4. '   ' → logprob: -18.764163970947266
    5. '_None' → logprob: -19.139163970947266
    6. '0' → logprob: -19.639163970947266
    7. ' ' → logprob: -19.764163970947266
    8. '=None' → logprob: -20.264163970947266
    9. 'none' → logprob: -20.514163970947266
    10. 'not' → logprob: -20.514163970947266

Token 319: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39921990036964417
    2. ' and' → logprob: -1.2742198705673218
    3. ':
' → logprob: -3.0242199897766113
    4. 'and' → logprob: -7.399219989776611
    5. ',' → logprob: -9.774219512939453
    6. '):
' → logprob: -10.149219512939453
    7. '                   ' → logprob: -10.149219512939453
    8. '               ' → logprob: -10.274219512939453
    9. '):' → logprob: -10.399219512939453
    10. '<|end|>' → logprob: -10.899219512939453

Token 320: ' new' (ID: 620)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.035862792283296585
    2. 'new' → logprob: -3.410862684249878
    3. ' not' → logprob: -6.535862922668457
    4. 'car' → logprob: -7.785862922668457
    5. 'i' → logprob: -9.160862922668457
    6. '(not' → logprob: -9.160862922668457
    7. 'm' → logprob: -10.160862922668457
    8. 'j' → logprob: -10.410862922668457
    9. ' new' → logprob: -11.660862922668457
    10. 's' → logprob: -11.910862922668457

Token 321: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.00012475410767365247
    2. 'car' → logprob: -9.00012493133545
    3. 'Car' → logprob: -14.62512493133545
    4. ' car' → logprob: -15.25012493133545
    5. '	car' → logprob: -15.50012493133545
    6. '_c' → logprob: -16.250123977661133
    7. '_pass' → logprob: -16.875123977661133
    8. '[_' → logprob: -17.125123977661133
    9. '[' → logprob: -17.125123977661133
    10. '_' → logprob: -17.375123977661133

Token 322: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. 'i' → logprob: -13.000005722045898
    3. ' [' → logprob: -13.875005722045898
    4. '[' → logprob: -14.375005722045898
    5. '][' → logprob: -14.875005722045898
    6. '[I' → logprob: -15.750005722045898
    7. '[new' → logprob: -16.0000057220459
    8. '[j' → logprob: -16.1250057220459
    9. '[next' → logprob: -16.6250057220459
    10. ')' → logprob: -16.7500057220459

Token 323: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.024468276649713516
    2. '[next' → logprob: -3.774468183517456
    3. '[' → logprob: -7.024468421936035
    4. ' ][' → logprob: -9.149468421936035
    5. ']' → logprob: -9.524468421936035
    6. '[new' → logprob: -10.024468421936035
    7. ')[' → logprob: -11.274468421936035
    8. ' [' → logprob: -11.274468421936035
    9. '[j' → logprob: -11.649468421936035
    10. '"][' → logprob: -11.774468421936035

Token 324: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0035868908744305372
    2. 'j' → logprob: -5.753586769104004
    3. ' next' → logprob: -8.253586769104004
    4. '[next' → logprob: -9.378586769104004
    5. '(next' → logprob: -10.378586769104004
    6. 'i' → logprob: -11.128586769104004
    7. '	next' → logprob: -12.378586769104004
    8. '   ' → logprob: -12.503586769104004
    9. ']' → logprob: -12.878586769104004
    10. 'new' → logprob: -13.503586769104004

Token 325: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.07233109325170517
    2. 'next' → logprob: -2.947331190109253
    3. '[next' → logprob: -4.572330951690674
    4. 'j' → logprob: -5.697330951690674
    5. '_next' → logprob: -5.947330951690674
    6. '(next' → logprob: -7.572330951690674
    7. '][' → logprob: -8.572331428527832
    8. ' next' → logprob: -9.322331428527832
    9. ',next' → logprob: -10.072331428527832
    10. '   ' → logprob: -10.322331428527832

Token 326: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11565085500478745
    2. 'is' → logprob: -2.7406508922576904
    3. ' is' → logprob: -3.1156508922576904
    4. ' ]' → logprob: -8.86565113067627
    5. ')' → logprob: -9.11565113067627
    6. ']==' → logprob: -10.24065113067627
    7. '[' → logprob: -10.61565113067627
    8. ']=' → logprob: -12.36565113067627
    9. '```' → logprob: -12.36565113067627
    10. 'None' → logprob: -12.36565113067627

Token 327: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.25196558237075806
    2. ' is' → logprob: -1.5019655227661133
    3. ')' → logprob: -10.626965522766113
    4. '==' → logprob: -12.001965522766113
    5. ']' → logprob: -13.126965522766113
    6. ' )' → logprob: -13.501965522766113
    7. '[' → logprob: -14.251965522766113
    8. ')is' → logprob: -14.251965522766113
    9. ' ' → logprob: -15.001965522766113
    10. '=' → logprob: -15.251965522766113

Token 328: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.941850526549388e-06
    2. ' None' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.87500762939453
    4. '=None' → logprob: -18.12500762939453
    5. '(None' → logprob: -19.25000762939453
    6. '_None' → logprob: -21.00000762939453
    7. 'not' → logprob: -21.25000762939453
    8. 'False' → logprob: -21.50000762939453
    9. 'True' → logprob: -21.62500762939453
    10. 'none' → logprob: -21.75000762939453

Token 329: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0064802877604961395
    2. ':
' → logprob: -5.6314802169799805
    3. ' and' → logprob: -6.2564802169799805
    4. '                   ' → logprob: -8.13148021697998
    5. '):' → logprob: -8.50648021697998
    6. '<|end|>' → logprob: -8.63148021697998
    7. '               ' → logprob: -9.25648021697998
    8. ')' → logprob: -10.38148021697998
    9. 'and' → logprob: -10.50648021697998
    10. ',' → logprob: -10.63148021697998

Token 330: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13887140154838562
    2. ':' → logprob: -2.513871431350708
    3. ':
' → logprob: -3.888871431350708
    4. '               ' → logprob: -4.388871192932129
    5. '                       ' → logprob: -4.638871192932129
    6. ',' → logprob: -6.763871192932129
    7. '                    
' → logprob: -6.763871192932129
    8. ' and' → logprob: -7.388871192932129
    9. ' :
' → logprob: -7.763871192932129
    10. '                               ' → logprob: -8.013871192932129

Token 331: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.018168555572628975
    2. '                   ' → logprob: -4.6431684494018555
    3. 'new' (adapté à ' new') → logprob: -4.8931684494018555
    4. '                       ' → logprob: -7.3931684494018555
    5. '               ' → logprob: -8.518168449401855
    6. '[new' → logprob: -10.768168449401855
    7. '       ' → logprob: -11.018168449401855
    8. ' ' → logprob: -12.143168449401855
    9. '   ' → logprob: -12.143168449401855
    10. '```' → logprob: -12.893168449401855

Token 332: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -7.896309739408025e-07
    2. 'car' → logprob: -15.125000953674316
    3. '_' → logprob: -15.625000953674316
    4. 'Car' → logprob: -15.750000953674316
    5. '_c' → logprob: -16.25
    6. ' _' → logprob: -17.375
    7. ' car' → logprob: -17.5
    8. ''_' → logprob: -18.375
    9. '	car' → logprob: -18.5
    10. ')_' → logprob: -18.625

Token 333: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '][' → logprob: -14.375000953674316
    3. '[' → logprob: -15.750000953674316
    4. ' [' → logprob: -15.875000953674316
    5. '[I' → logprob: -16.125001907348633
    6. ')[' → logprob: -16.375001907348633
    7. 'i' → logprob: -17.000001907348633
    8. '[j' → logprob: -17.875001907348633
    9. '[int' → logprob: -18.375001907348633
    10. '[row' → logprob: -18.750001907348633

Token 334: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10042200237512589
    2. '][' → logprob: -2.350421905517578
    3. '[' → logprob: -8.725421905517578
    4. ']' → logprob: -11.350421905517578
    5. '[I' → logprob: -11.350421905517578
    6. 'i' → logprob: -11.475421905517578
    7. ' [' → logprob: -12.475421905517578
    8. ')[' → logprob: -12.725421905517578
    9. ' ][' → logprob: -12.975421905517578
    10. '[][' → logprob: -13.600421905517578

Token 335: 'next' (ID: 7311)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19709762930870056
    2. 'j' → logprob: -2.1970975399017334
    3. 'next' → logprob: -2.6970975399017334
    4. 's' → logprob: -8.447097778320312
    5. '[next' → logprob: -10.072097778320312
    6. '(next' → logprob: -10.197097778320312
    7. ' next' → logprob: -10.197097778320312
    8. '   ' → logprob: -11.197097778320312
    9. ' i' → logprob: -11.447097778320312
    10. ' j' → logprob: -13.572097778320312

Token 336: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.012335642240941525
    2. '_i' → logprob: -4.762335777282715
    3. '[i' → logprob: -6.637335777282715
    4. 'j' → logprob: -6.887335777282715
    5. '][' → logprob: -6.887335777282715
    6. 'i' → logprob: -8.762335777282715
    7. '   ' → logprob: -9.762335777282715
    8. '[j' → logprob: -9.887335777282715
    9. '```' → logprob: -10.887335777282715
    10. '(i' → logprob: -11.012335777282715

Token 337: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0042601581662893295
    2. '=' → logprob: -5.879260063171387
    3. ']=' → logprob: -6.629260063171387
    4. ' =' → logprob: -9.254260063171387
    5. '[' → logprob: -10.754260063171387
    6. ' ]' → logprob: -11.379260063171387
    7. ')' → logprob: -12.629260063171387
    8. '][' → logprob: -14.754260063171387
    9. ',' → logprob: -15.129260063171387
    10. '[i' → logprob: -16.129261016845703

Token 338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023407876491547
    2. ' =' → logprob: -1.9102340936660767
    3. ']' → logprob: -11.910234451293945
    4. ',' → logprob: -13.660234451293945
    5. ']=' → logprob: -13.785234451293945
    6. '[' → logprob: -14.035234451293945
    7. '＝' → logprob: -16.785234451293945
    8. '=

' → logprob: -16.785234451293945
    9. ')' → logprob: -17.535234451293945
    10. ' ' → logprob: -17.785234451293945

Token 339: ' pid' (ID: 23462)
  Prédit: 'pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.00030805266578681767
    2. ' pid' → logprob: -8.1253080368042
    3. 'car' → logprob: -12.0003080368042
    4. 'idx' → logprob: -12.6253080368042
    5. '   ' → logprob: -14.1253080368042
    6. '(pid' → logprob: -14.2503080368042
    7. 'new' → logprob: -14.5003080368042
    8. 'p' → logprob: -16.250308990478516
    9. ' ' → logprob: -16.500308990478516
    10. ' car' → logprob: -16.875308990478516

Token 340: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01818517968058586
    2. 'new' → logprob: -4.768185138702393
    3. '
' → logprob: -5.268185138702393
    4. '                    
' → logprob: -6.893185138702393
    5. '[new' → logprob: -7.143185138702393
    6. '				' → logprob: -7.268185138702393
    7. '<|end|>' → logprob: -7.268185138702393
    8. ' new' → logprob: -8.39318561553955
    9. '		           ' → logprob: -9.01818561553955
    10. '  
' → logprob: -9.14318561553955

Token 341: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008059754967689514
    2. 'new' → logprob: -6.133059978485107
    3. '<|end|>' → logprob: -6.258059978485107
    4. '				' → logprob: -6.508059978485107
    5. ' new' → logprob: -7.383059978485107
    6. '                    
' → logprob: -7.758059978485107
    7. '[new' → logprob: -8.00805950164795
    8. '		           ' → logprob: -8.88305950164795
    9. '               ' → logprob: -9.00805950164795
    10. '                    ' → logprob: -9.38305950164795

Token 342: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.08902975916862488
    2. ' new' → logprob: -2.4640297889709473
    3. 'car' → logprob: -10.214029312133789
    4. '                   ' → logprob: -10.339029312133789
    5. '	new' → logprob: -12.464029312133789
    6. '_new' → logprob: -12.589029312133789
    7. '[new' → logprob: -12.589029312133789
    8. 'New' → logprob: -12.839029312133789
    9. ' car' → logprob: -13.464029312133789
    10. '                    
' → logprob: -13.714029312133789

Token 343: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -1.2664456789934775e-06
    2. 'car' → logprob: -13.875000953674316
    3. 'Car' → logprob: -15.750000953674316
    4. '_c' → logprob: -16.125001907348633
    5. '_code' → logprob: -18.000001907348633
    6. '_' → logprob: -18.250001907348633
    7. '	car' → logprob: -18.250001907348633
    8. ' car' → logprob: -18.375001907348633
    9. 'ocar' → logprob: -18.625001907348633
    10. '_new' → logprob: -18.625001907348633

Token 344: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. 'i' → logprob: -14.000001907348633
    3. '[' → logprob: -14.500001907348633
    4. '][' → logprob: -15.750001907348633
    5. '[I' → logprob: -16.625001907348633
    6. '[j' → logprob: -17.125001907348633
    7. '```' → logprob: -17.500001907348633
    8. '[u' → logprob: -18.375001907348633
    9. '[
' → logprob: -18.500001907348633
    10. '[int' → logprob: -18.625001907348633

Token 345: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015325936255976558
    2. '[j' → logprob: -6.501532554626465
    3. '[' → logprob: -11.126532554626465
    4. ')[' → logprob: -11.751532554626465
    5. ']' → logprob: -12.626532554626465
    6. ' ][' → logprob: -13.376532554626465
    7. '[i' → logprob: -14.501532554626465
    8. '}[' → logprob: -15.001532554626465
    9. ']][' → logprob: -15.126532554626465
    10. ''][' → logprob: -15.251532554626465

Token 346: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.054500666621607e-06
    2. ' j' → logprob: -13.25000286102295
    3. '[j' → logprob: -14.00000286102295
    4. '	j' → logprob: -15.25000286102295
    5. '   ' → logprob: -15.75000286102295
    6. '```' → logprob: -17.125003814697266
    7. ',j' → logprob: -17.125003814697266
    8. ']' → logprob: -17.375003814697266
    9. '_j' → logprob: -18.625003814697266
    10. '$j' → logprob: -18.875003814697266

Token 347: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12993983924388885
    2. '=' → logprob: -2.6299397945404053
    3. ']=' → logprob: -3.0049397945404053
    4. ' =' → logprob: -8.504940032958984
    5. ' ]' → logprob: -11.004940032958984
    6. '=None' → logprob: -12.504940032958984
    7. '[' → logprob: -13.754940032958984
    8. ')' → logprob: -14.379940032958984
    9. ']==' → logprob: -14.754940032958984
    10. '']=' → logprob: -14.754940032958984

Token 348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00043102685594931245
    2. ' =' → logprob: -7.750431060791016
    3. '=None' → logprob: -15.000431060791016
    4. ']=' → logprob: -19.000431060791016
    5. '＝' → logprob: -19.625431060791016
    6. '=

' → logprob: -19.625431060791016
    7. '.=' → logprob: -20.500431060791016
    8. '=
' → logprob: -20.625431060791016
    9. '[' → logprob: -20.750431060791016
    10. ']' → logprob: -21.000431060791016

Token 349: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.704273118884885e-07
    2. ' None' → logprob: -14.250000953674316
    3. '   ' → logprob: -21.25
    4. '(None' → logprob: -21.75
    5. '=None' → logprob: -22.125
    6. 'none' → logprob: -23.25
    7. '_None' → logprob: -23.625
    8. ',None' → logprob: -24.5
    9. '.None' → logprob: -25.0
    10. '                   ' → logprob: -25.125

Token 350: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00028088156250305474
    2. '                    
' → logprob: -8.75028133392334
    3. '				' → logprob: -10.00028133392334
    4. '
' → logprob: -10.37528133392334
    5. '               ' → logprob: -11.50028133392334
    6. '           ' → logprob: -12.12528133392334
    7. '   ' → logprob: -12.37528133392334
    8. ',' → logprob: -12.50028133392334
    9. '                    ' → logprob: -12.75028133392334
    10. '       ' → logprob: -12.87528133392334

Token 351: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0029332453850656748
    2. '                    
' → logprob: -6.002933025360107
    3. '				' → logprob: -8.877933502197266
    4. '               ' → logprob: -9.502933502197266
    5. '                    ' → logprob: -10.377933502197266
    6. ' 
' → logprob: -10.502933502197266
    7. '
' → logprob: -10.877933502197266
    8. '           ' → logprob: -10.877933502197266
    9. '   ' → logprob: -11.377933502197266
    10. '                        
' → logprob: -11.377933502197266

Token 352: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00011367550177965313
    2. ' moved' → logprob: -9.500113487243652
    3. '   ' → logprob: -10.750113487243652
    4. '                   ' → logprob: -11.000113487243652
    5. ' m' → logprob: -15.250113487243652
    6. 'moving' → logprob: -15.625113487243652
    7. '           ' → logprob: -16.62511444091797
    8. '               ' → logprob: -16.75011444091797
    9. 'moves' → logprob: -16.87511444091797
    10. '	m' → logprob: -17.37511444091797

Token 353: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -18.125
    3. '[idx' → logprob: -19.375
    4. '[p' → logprob: -19.75
    5. ' [' → logprob: -19.875
    6. '][' → logprob: -20.125
    7. '

' → logprob: -20.125
    8. '
' → logprob: -20.5
    9. '\[' → logprob: -20.625
    10. '[id' → logprob: -20.625

Token 354: 'pid' (ID: 19554)
  Prédit: 'pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -2.45848218582978e-06
    2. ' pid' → logprob: -14.00000286102295
    3. 'idx' → logprob: -14.12500286102295
    4. '[' → logprob: -14.25000286102295
    5. '(pid' → logprob: -16.375001907348633
    6. 'id' → logprob: -17.750001907348633
    7. 'uid' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.375001907348633
    9. 'pi' → logprob: -18.500001907348633
    10. 'p' → logprob: -18.875001907348633

Token 355: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20803174376487732
    2. '=' → logprob: -1.7080317735671997
    3. ']=' → logprob: -5.08303165435791
    4. '[' → logprob: -8.45803165435791
    5. ' =' → logprob: -8.83303165435791
    6. '=True' → logprob: -11.08303165435791
    7. 'True' → logprob: -11.20803165435791
    8. '[i' → logprob: -12.70803165435791
    9. '[j' → logprob: -13.70803165435791
    10. ' ]' → logprob: -13.83303165435791

Token 356: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00012368128227535635
    2. ' =' → logprob: -9.000123977661133
    3. '=True' → logprob: -15.375123977661133
    4. '[' → logprob: -17.000123977661133
    5. ']' → logprob: -19.125123977661133
    6. 'True' → logprob: -19.250123977661133
    7. ']=' → logprob: -19.500123977661133
    8. '.=' → logprob: -20.125123977661133
    9. '＝' → logprob: -21.625123977661133
    10. '=

' → logprob: -23.250123977661133

Token 357: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.935296834039036e-06
    2. ' True' → logprob: -12.75000286102295
    3. '(True' → logprob: -20.625003814697266
    4. '=True' → logprob: -21.625003814697266
    5. 'true' → logprob: -21.875003814697266
    6. '   ' → logprob: -22.375003814697266
    7. '1' → logprob: -24.250003814697266
    8. ' ' → logprob: -24.625003814697266
    9. 'TRUE' → logprob: -24.750003814697266
    10. '.True' → logprob: -25.500003814697266

Token 358: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24243676662445068
    2. '
' → logprob: -2.3674368858337402
    3. '                   ' → logprob: -2.9924368858337402
    4. '    
' → logprob: -3.2424368858337402
    5. '  
' → logprob: -4.99243688583374
    6. '<|end|>' → logprob: -4.99243688583374
    7. '\n' → logprob: -5.74243688583374
    8. '                    
' → logprob: -5.74243688583374
    9. '       ' → logprob: -5.86743688583374
    10. '               ' → logprob: -6.24243688583374

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008613395504653454
    2. '```' → logprob: -5.883613586425781
    3. '    
' → logprob: -6.258613586425781
    4. '
' → logprob: -6.258613586425781
    5. '\n' → logprob: -7.008613586425781
    6. '<|end|>' → logprob: -8.258613586425781
    7. ')' → logprob: -8.383613586425781
    8. '       ' → logprob: -8.883613586425781
    9. 'for' → logprob: -9.508613586425781
    10. '  
' → logprob: -9.633613586425781

Token 360: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005400596186518669
    2. '
' → logprob: -5.380400657653809
    3. '    
' → logprob: -7.755400657653809
    4. '#' → logprob: -8.880400657653809
    5. 'for' → logprob: -9.380400657653809
    6. '<|end|>' → logprob: -9.630400657653809
    7. '```' → logprob: -10.380400657653809
    8. '  
' → logprob: -11.255400657653809
    9. '\n' → logprob: -13.005400657653809
    10. ' for' → logprob: -13.255400657653809

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759397745132446
    2. '=' → logprob: -0.8259397745132446
    3. '[:]' → logprob: -15.325940132141113
    4. ',' → logprob: -16.825939178466797
    5. '＝' → logprob: -17.700939178466797
    6. 'new' → logprob: -17.950939178466797
    7. '[' → logprob: -18.200939178466797
    8. '=new' → logprob: -18.200939178466797
    9. '   ' → logprob: -18.950939178466797
    10. '=

' → logprob: -19.075939178466797

Token 362: ' [' (ID: 723)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.03804263845086098
    2. ' new' → logprob: -3.2880425453186035
    3. '[new' → logprob: -13.788043022155762
    4. '   ' → logprob: -15.913043022155762
    5. '[' → logprob: -16.663042068481445
    6. '	new' → logprob: -18.288042068481445
    7. 'New' → logprob: -18.538042068481445
    8. ' ' → logprob: -18.538042068481445
    9. '```' → logprob: -18.788042068481445
    10. '_new' → logprob: -19.163042068481445

Token 363: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.1637164789135568e-05
    2. ' row' → logprob: -12.125011444091797
    3. 'list' → logprob: -12.125011444091797
    4. 'new' → logprob: -14.375011444091797
    5. '[row' → logprob: -16.875011444091797
    6. 'r' → logprob: -17.000011444091797
    7. 'line' → logprob: -18.125011444091797
    8. '	row' → logprob: -18.500011444091797
    9. 'rown' → logprob: -19.375011444091797
    10. '(row' → logprob: -19.375011444091797

Token 364: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -4.320199877838604e-07
    2. '[:' → logprob: -15.0
    3. '[]' → logprob: -22.75
    4. '[...]' → logprob: -23.875
    5. ' for' → logprob: -24.25
    6. '.copy' → logprob: -24.5
    7. '[' → logprob: -24.625
    8. 'for' → logprob: -24.75
    9. '[::-' → logprob: -25.0
    10. '[:-' → logprob: -25.5

Token 365: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1602281779050827
    2. ' for' → logprob: -1.9102281332015991
    3. '   ' → logprob: -13.28522777557373
    4. ']' → logprob: -14.03522777557373
    5. ')' → logprob: -14.53522777557373
    6. 'new' → logprob: -14.91022777557373
    7. '	for' → logprob: -14.91022777557373
    8. '```' → logprob: -16.160228729248047
    9. ' ' → logprob: -16.535228729248047
    10. '       ' → logprob: -16.660228729248047

Token 366: ' row' (ID: 5225)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -4.5491004129871726e-05
    2. ' new' → logprob: -10.000045776367188
    3. '(new' → logprob: -16.500045776367188
    4. 'New' → logprob: -19.000045776367188
    5. 'car' → logprob: -19.750045776367188
    6. '_new' → logprob: -20.125045776367188
    7. '   ' → logprob: -20.250045776367188
    8. '新' → logprob: -20.625045776367188
    9. '	new' → logprob: -20.750045776367188
    10. '```' → logprob: -20.875045776367188

Token 367: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5803946852684021
    2. ' in' → logprob: -0.8303946852684021
    3. 'new' → logprob: -5.455394744873047
    4. ' new' → logprob: -9.080394744873047
    5. '(new' → logprob: -10.580394744873047
    6. '   ' → logprob: -11.205394744873047
    7. 'for' → logprob: -11.455394744873047
    8. ']' → logprob: -12.330394744873047
    9. 'car' → logprob: -13.455394744873047
    10. ')' → logprob: -14.205394744873047

Token 368: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0007113590254448354
    2. ' new' → logprob: -7.250711441040039
    3. '   ' → logprob: -14.500711441040039
    4. 'car' → logprob: -15.000711441040039
    5. 'New' → logprob: -16.00071144104004
    6. '
' → logprob: -16.37571144104004
    7. '(new' → logprob: -16.37571144104004
    8. '```' → logprob: -16.75071144104004
    9. '	new' → logprob: -17.00071144104004
    10. ' ' → logprob: -17.37571144104004

Token 369: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0031786637846380472
    2. 'car' → logprob: -5.753178596496582
    3. 'Car' → logprob: -14.378178596496582
    4. ' car' → logprob: -15.378178596496582
    5. '	car' → logprob: -16.5031795501709
    6. '_' → logprob: -16.8781795501709
    7. '_c' → logprob: -17.2531795501709
    8. '(car' → logprob: -17.2531795501709
    9. '-car' → logprob: -17.8781795501709
    10. '.car' → logprob: -18.6281795501709

Token 370: ']

' (ID: 3144)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10260399430990219
    2. ']' → logprob: -2.8526039123535156
    3. '   ' → logprob: -3.3526039123535156
    4. '
' → logprob: -5.977603912353516
    5. '

' → logprob: -6.977603912353516
    6. '    
' → logprob: -7.602603912353516
    7. '<|end|>' → logprob: -7.977603912353516
    8. ')' → logprob: -8.352603912353516
    9. ']
' → logprob: -9.102603912353516
    10. ']

' → logprob: -10.227603912353516

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8234871625900269
    2. '#' → logprob: -1.3234871625900269
    3. 'for' → logprob: -1.3234871625900269
    4. '```' → logprob: -3.5734872817993164
    5. ' for' → logprob: -7.948487281799316
    6. '<|end|>' → logprob: -9.198487281799316
    7. '
' → logprob: -9.448487281799316
    8. '``' → logprob: -10.323487281799316
    9. '    
' → logprob: -10.698487281799316
    10. ' #' → logprob: -11.198487281799316

Token 372: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.12911713123321533
    2. 'for' → logprob: -2.254117012023926
    3. '   ' → logprob: -4.129117012023926
    4. 'steps' → logprob: -11.379117012023926
    5. 'found' → logprob: -11.379117012023926
    6. ' #' → logprob: -11.629117012023926
    7. '```' → logprob: -11.754117012023926
    8. ' for' → logprob: -12.254117012023926
    9. 'pass' → logprob: -12.629117012023926
    10. 'exit' → logprob: -13.004117012023926

Token 373: ' Step' (ID: 22291)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4761119484901428
    2. 'for' → logprob: -0.9761119484901428
    3. '   ' → logprob: -6.226111888885498
    4. ' for' → logprob: -10.601112365722656
    5. ' #' → logprob: -11.851112365722656
    6. '```' → logprob: -12.601112365722656
    7. 'step' → logprob: -12.726112365722656
    8. '
' → logprob: -12.976112365722656
    9. '    
' → logprob: -13.476112365722656
    10. 'Step' → logprob: -13.851112365722656

Token 374: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9200050234794617
    2. ':' → logprob: -1.1700050830841064
    3. ' ' → logprob: -1.6700050830841064
    4. '   ' → logprob: -2.5450050830841064
    5. '2' → logprob: -4.045004844665527
    6. '_' → logprob: -5.795004844665527
    7. ' :' → logprob: -6.795004844665527
    8. '3' → logprob: -6.920004844665527
    9. '    ' → logprob: -7.920004844665527
    10. '#' → logprob: -7.920004844665527

Token 375: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007867562817409635
    2. '2' → logprob: -7.250786781311035
    3. '0' → logprob: -9.750786781311035
    4. '   ' → logprob: -11.250786781311035
    5. '#' → logprob: -12.875786781311035
    6. 'for' → logprob: -13.125786781311035
    7. '3' → logprob: -14.375786781311035
    8. ' ' → logprob: -14.875786781311035
    9. '
' → logprob: -16.87578582763672
    10. ':' → logprob: -17.37578582763672

Token 376: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7287601232528687
    2. '   ' → logprob: -0.7287601232528687
    3. ' for' → logprob: -4.353760242462158
    4. '#' → logprob: -4.478760242462158
    5. 'for' → logprob: -4.853760242462158
    6. ':
' → logprob: -6.353760242462158
    7. '
' → logprob: -6.978760242462158
    8. '```' → logprob: -9.353759765625
    9. ' #' → logprob: -9.853759765625
    10. ':#' → logprob: -10.478759765625

Token 377: ' Move' (ID: 25485)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03382999077439308
    2. '#' → logprob: -3.408829927444458
    3. ' for' → logprob: -8.783829689025879
    4. ' #' → logprob: -11.408829689025879
    5. 'For' → logprob: -12.033829689025879
    6. '   ' → logprob: -12.658829689025879
    7. '
' → logprob: -13.033829689025879
    8. 'from' → logprob: -13.283829689025879
    9. 'Move' → logprob: -13.533829689025879
    10. 'if' → logprob: -13.783829689025879

Token 378: ' passengers' (ID: 37252)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33462464809417725
    2. 'pass' → logprob: -1.8346246480941772
    3. '#' → logprob: -2.584624767303467
    4. 'forward' → logprob: -3.459624767303467
    5. 'ais' → logprob: -5.834624767303467
    6. '   ' → logprob: -6.084624767303467
    7. 'out' → logprob: -6.584624767303467
    8. 'down' → logprob: -6.584624767303467
    9. 'front' → logprob: -6.584624767303467
    10. 'from' → logprob: -6.709624767303467

Token 379: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25605031847953796
    2. '   ' → logprob: -2.2560503482818604
    3. 'from' → logprob: -2.8810503482818604
    4. 'on' → logprob: -3.2560503482818604
    5. ' in' → logprob: -4.256050109863281
    6. 'forward' → logprob: -5.756050109863281
    7. 'for' → logprob: -5.881050109863281
    8. '#' → logprob: -6.631050109863281
    9. ' on' → logprob: -6.881050109863281
    10. 'up' → logprob: -7.006050109863281

Token 380: ' aisle' (ID: 99887)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.34042519330978394
    2. 'range' → logprob: -1.3404252529144287
    3. 'the' → logprob: -4.09042501449585
    4. 'car' → logprob: -5.71542501449585
    5. '   ' → logprob: -6.34042501449585
    6. ' aisle' → logprob: -6.71542501449585
    7. '[' → logprob: -6.96542501449585
    8. ' range' → logprob: -7.09042501449585
    9. '#' → logprob: -7.59042501449585
    10. ' the' → logprob: -7.71542501449585

Token 381: ' row' (ID: 5225)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006178391631692648
    2. '   ' → logprob: -7.875617980957031
    3. ' for' → logprob: -8.375617980957031
    4. 'i' → logprob: -12.875617980957031
    5. 'from' → logprob: -13.000617980957031
    6. 'down' → logprob: -13.750617980957031
    7. '```' → logprob: -15.125617980957031
    8. 'to' → logprob: -15.625617980957031
    9. '	for' → logprob: -15.750617980957031
    10. 'forward' → logprob: -15.875617980957031

Token 382: ' backward' (ID: 58986)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052048590034246445
    2. '0' → logprob: -3.802048683166504
    3. ' for' → logprob: -4.302048683166504
    4. 's' → logprob: -4.802048683166504
    5. '=' → logprob: -6.177048683166504
    6. '   ' → logprob: -6.802048683166504
    7. 'i' → logprob: -7.052048683166504
    8. 'r' → logprob: -7.177048683166504
    9. ' =' → logprob: -8.302048683166504
    10. 'in' → logprob: -8.552048683166504

Token 383: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14616306126117706
    2. 'if' → logprob: -2.521162986755371
    3. '[r' → logprob: -4.521162986755371
    4. ' for' → logprob: -4.646162986755371
    5. 'from' → logprob: -5.521162986755371
    6. '   ' → logprob: -5.521162986755371
    7. 'r' → logprob: -5.646162986755371
    8. ' if' → logprob: -5.771162986755371
    9. 'and' → logprob: -5.896162986755371
    10. ',' → logprob: -6.146162986755371

Token 384: ' possible' (ID: 4149)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05466018244624138
    2. 'car' → logprob: -3.0546600818634033
    3. ' i' → logprob: -5.804660320281982
    4. '(i' → logprob: -6.179660320281982
    5. ' car' → logprob: -8.179659843444824
    6. 'all' → logprob: -8.804659843444824
    7. '(car' → logprob: -8.929659843444824
    8. 'r' → logprob: -9.179659843444824
    9. '   ' → logprob: -9.554659843444824
    10. '0' → logprob: -9.554659843444824

Token 385: ' or' (ID: 503)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006330899195745587
    2. 'if' → logprob: -7.875633239746094
    3. '   ' → logprob: -8.750633239746094
    4. ' for' → logprob: -9.375633239746094
    5. 'i' → logprob: -11.875633239746094
    6. '```' → logprob: -13.125633239746094
    7. '``' → logprob: -14.625633239746094
    8. 'from' → logprob: -15.750633239746094
    9. 'range' → logprob: -16.750633239746094
    10. 'next' → logprob: -17.000633239746094

Token 386: ' exit' (ID: 10654)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.2988419532775879
    2. 'down' → logprob: -1.798841953277588
    3. 'out' → logprob: -3.298841953277588
    4. ' forward' → logprob: -3.923841953277588
    5. 'stand' → logprob: -4.173841953277588
    6. 'up' → logprob: -4.798841953277588
    7. 'into' → logprob: -5.548841953277588
    8. 'exit' → logprob: -5.923841953277588
    9. 'for' → logprob: -6.048841953277588
    10. ' out' → logprob: -7.423841953277588

Token 387: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008960215374827385
    2. ' for' → logprob: -4.883960247039795
    3. 'i' → logprob: -6.758960247039795
    4. '   ' → logprob: -9.133959770202637
    5. 'if' → logprob: -10.258959770202637
    6. '0' → logprob: -10.883959770202637
    7. ' i' → logprob: -11.633959770202637
    8. 'front' → logprob: -11.883959770202637
    9. 'row' → logprob: -12.508959770202637
    10. 'r' → logprob: -13.258959770202637

Token 388: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016158436483237892
    2. 'i' → logprob: -9.750161170959473
    3. ' for' → logprob: -10.125161170959473
    4. 'front' → logprob: -10.375161170959473
    5. '0' → logprob: -11.000161170959473
    6. 'exit' → logprob: -11.625161170959473
    7. 'row' → logprob: -13.750161170959473
    8. 'first' → logprob: -13.750161170959473
    9. '   ' → logprob: -14.000161170959473
    10. 'removed' → logprob: -14.250161170959473

Token 389: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003136552404612303
    2. 'i' → logprob: -8.625313758850098
    3. 'exit' → logprob: -9.500313758850098
    4. 'front' → logprob: -10.625313758850098
    5. ' for' → logprob: -11.250313758850098
    6. 'ex' → logprob: -11.750313758850098
    7. 'row' → logprob: -12.625313758850098
    8. 'if' → logprob: -12.625313758850098
    9. 'removed' → logprob: -13.625313758850098
    10. '   ' → logprob: -14.000313758850098

Token 390: ' Process' (ID: 12482)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003118060529232025
    2. 'ex' → logprob: -6.00311803817749
    3. 'i' → logprob: -8.003118515014648
    4. 'exit' → logprob: -8.378118515014648
    5. 'front' → logprob: -10.753118515014648
    6. ' for' → logprob: -11.003118515014648
    7. 'row' → logprob: -11.753118515014648
    8. 'if' → logprob: -12.003118515014648
    9. 'new' → logprob: -12.503118515014648
    10. 'to' → logprob: -12.753118515014648

Token 391: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006351180840283632
    2. ' for' → logprob: -5.381350994110107
    3. 'i' → logprob: -6.881350994110107
    4. 'range' → logprob: -8.506351470947266
    5. 'from' → logprob: -8.631351470947266
    6. 'r' → logprob: -8.881351470947266
    7. 'pass' → logprob: -9.756351470947266
    8. '0' → logprob: -10.256351470947266
    9. 's' → logprob: -10.506351470947266
    10. 'front' → logprob: -10.631351470947266

Token 392: ' back' (ID: 1602)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.353720098733902
    2. '0' → logprob: -1.2287200689315796
    3. ' r' → logprob: -6.353720188140869
    4. 'front' → logprob: -6.353720188140869
    5. 'range' → logprob: -6.978720188140869
    6. 'i' → logprob: -7.978720188140869
    7. '(r' → logprob: -8.853719711303711
    8. ' ' → logprob: -8.978719711303711
    9. ' front' → logprob: -9.603719711303711
    10. '1' → logprob: -9.728719711303711

Token 393: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7337597012519836
    2. 'range' → logprob: -1.3587596416473389
    3. 'r' → logprob: -1.8587596416473389
    4. 'in' → logprob: -2.983759641647339
    5. 'to' → logprob: -3.108759641647339
    6. ' for' → logprob: -5.983759880065918
    7. '```' → logprob: -6.358759880065918
    8. ' range' → logprob: -6.858759880065918
    9. 'row' → logprob: -6.983759880065918
    10. ',' → logprob: -6.983759880065918

Token 394: ' front' (ID: 5567)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6694729328155518
    2. '0' → logprob: -0.9194729328155518
    3. 'r' → logprob: -2.6694729328155518
    4. ' range' → logprob: -4.294472694396973
    5. '-' → logprob: -5.419472694396973
    6. ' r' → logprob: -6.794472694396973
    7. ' ' → logprob: -7.544472694396973
    8. 'front' → logprob: -9.794472694396973
    9. '```' → logprob: -9.794472694396973
    10. ' -' → logprob: -10.544472694396973

Token 395: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006000961875542998
    2. ' for' → logprob: -7.5005998611450195
    3. 'range' → logprob: -10.62559986114502
    4. '   ' → logprob: -10.75059986114502
    5. '
' → logprob: -14.12559986114502
    6. 'i' → logprob: -14.50059986114502
    7. '```' → logprob: -16.750600814819336
    8. '    
' → logprob: -16.875600814819336
    9. 'from' → logprob: -17.250600814819336
    10. ' range' → logprob: -17.375600814819336

Token 396: ' so' (ID: 813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007872331188991666
    2. '   ' → logprob: -8.000786781311035
    3. ' for' → logprob: -8.125786781311035
    4. 'range' → logprob: -8.875786781311035
    5. 'i' → logprob: -11.250786781311035
    6. '
' → logprob: -13.625786781311035
    7. '```' → logprob: -14.375786781311035
    8. ' range' → logprob: -15.000786781311035
    9. '    ' → logprob: -15.625786781311035
    10. 'from' → logprob: -15.875786781311035

Token 397: ' that' (ID: 484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2907082736492157
    2. ' for' → logprob: -2.165708303451538
    3. 'i' → logprob: -2.290708303451538
    4. ' i' → logprob: -3.915708303451538
    5. 'range' → logprob: -4.790708065032959
    6. '   ' → logprob: -5.290708065032959
    7. ' range' → logprob: -6.790708065032959
    8. 'r' → logprob: -6.915708065032959
    9. 'True' → logprob: -8.415708541870117
    10. ' in' → logprob: -8.415708541870117

Token 398: ' back' (ID: 1602)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5308360457420349
    2. 'for' → logprob: -1.6558361053466797
    3. 'r' → logprob: -1.7808361053466797
    4. 'range' → logprob: -3.6558361053466797
    5. ' i' → logprob: -4.40583610534668
    6. ' for' → logprob: -4.78083610534668
    7. ' range' → logprob: -6.78083610534668
    8. 'pass' → logprob: -7.03083610534668
    9. 'True' → logprob: -7.03083610534668
    10. ' r' → logprob: -7.03083610534668

Token 399: ' passengers' (ID: 37252)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.47497430443763733
    2. 'rows' → logprob: -1.224974274635315
    3. 'for' → logprob: -3.8499743938446045
    4. 'r' → logprob: -4.099974155426025
    5. 'i' → logprob: -4.474974155426025
    6. 'wards' → logprob: -4.849974155426025
    7. 'to' → logprob: -5.099974155426025
    8. '```' → logprob: -5.599974155426025
    9. ' row' → logprob: -5.849974155426025
    10. ' rows' → logprob: -5.974974155426025

Token 400: ' move' (ID: 5275)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.316504955291748
    2. ' can' → logprob: -1.566504955291748
    3. 'move' → logprob: -1.941504955291748
    4. ' move' → logprob: -2.316504955291748
    5. 'in' → logprob: -2.441504955291748
    6. 'for' → logprob: -2.691504955291748
    7. ' in' → logprob: -3.566504955291748
    8. '=' → logprob: -3.816504955291748
    9. 'range' → logprob: -3.816504955291748
    10. 'start' → logprob: -4.691504955291748

Token 401: ' first' (ID: 1577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6123449802398682
    2. 'range' → logprob: -1.3623449802398682
    3. 'from' → logprob: -2.612344980239868
    4. 'back' → logprob: -3.112344980239868
    5. 'forward' → logprob: -3.487344980239868
    6. 'up' → logprob: -3.612344980239868
    7. '   ' → logprob: -4.237344741821289
    8. 'in' → logprob: -4.862344741821289
    9. 'wards' → logprob: -7.487344741821289
    10. 'i' → logprob: -7.612344741821289

Token 402: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8193366486229934e-05
    2. ' for' → logprob: -11.000018119812012
    3. '   ' → logprob: -13.500018119812012
    4. '```' → logprob: -17.125019073486328
    5. 'exit' → logprob: -19.500019073486328
    6. 'from' → logprob: -19.500019073486328
    7. '
' → logprob: -20.375019073486328
    8. '``' → logprob: -20.750019073486328
    9. 'range' → logprob: -20.875019073486328
    10. '    
' → logprob: -21.000019073486328

Token 403: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000915039679966867
    2. ' for' → logprob: -7.000915050506592
    3. '   ' → logprob: -12.625914573669434
    4. '```' → logprob: -15.625914573669434
    5. 'range' → logprob: -15.875914573669434
    6. '
' → logprob: -18.25091552734375
    7. 'i' → logprob: -18.25091552734375
    8. '	for' → logprob: -18.37591552734375
    9. 'from' → logprob: -18.75091552734375
    10. '``' → logprob: -20.00091552734375

Token 404: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001593195047462359
    2. ' for' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.25015926361084
    4. 'exit' → logprob: -15.75015926361084
    5. 'from' → logprob: -18.625160217285156
    6. ' exited' → logprob: -19.875160217285156
    7. '```' → logprob: -20.000160217285156
    8. 'm' → logprob: -20.000160217285156
    9. 'Exited' → logprob: -20.500160217285156
    10. '	for' → logprob: -21.125160217285156

Token 405: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015785404248163104
    2. ' i' → logprob: -6.501578330993652
    3. 'row' → logprob: -10.251578330993652
    4. 'x' → logprob: -11.001578330993652
    5. 'idx' → logprob: -12.126578330993652
    6. 'pos' → logprob: -12.251578330993652
    7. 'r' → logprob: -13.001578330993652
    8. '   ' → logprob: -13.001578330993652
    9. 'rev' → logprob: -13.251578330993652
    10. 'pass' → logprob: -13.626578330993652

Token 406: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00671809446066618
    2. 'in' → logprob: -5.006718158721924
    3. 'range' → logprob: -13.881717681884766
    4. '   ' → logprob: -14.381717681884766
    5. 'd' → logprob: -14.506717681884766
    6. ' ' → logprob: -15.631717681884766
    7. '```' → logprob: -16.131717681884766
    8. 'In' → logprob: -16.756717681884766
    9. '  ' → logprob: -17.006717681884766
    10. 's' → logprob: -17.006717681884766

Token 407: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018204499036073685
    2. ' range' → logprob: -4.018204689025879
    3. ' reversed' → logprob: -10.643204689025879
    4. 're' → logprob: -10.768204689025879
    5. 'r' → logprob: -11.768204689025879
    6. '   ' → logprob: -14.393204689025879
    7. ' ' → logprob: -14.643204689025879
    8. 'reverse' → logprob: -14.893204689025879
    9. 'rang' → logprob: -15.518204689025879
    10. ' r' → logprob: -15.643204689025879

Token 408: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0017897785874083638
    2. 'r' → logprob: -6.376789569854736
    3. 'range' → logprob: -10.126790046691895
    4. '(' → logprob: -10.626790046691895
    5. ' r' → logprob: -11.626790046691895
    6. '   ' → logprob: -12.001790046691895
    7. '(range' → logprob: -12.626790046691895
    8. ' range' → logprob: -13.751790046691895
    9. '
' → logprob: -13.751790046691895
    10. '(
' → logprob: -14.251790046691895

Token 409: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011055364273488522
    2. ' -' → logprob: -4.5110554695129395
    3. ',' → logprob: -12.011054992675781
    4. '   ' → logprob: -14.886054992675781
    5. ',-' → logprob: -14.886054992675781
    6. '):
' → logprob: -15.261054992675781
    7. ')' → logprob: -15.511054992675781
    8. ' ' → logprob: -16.51105499267578
    9. ' in' → logprob: -16.88605499267578
    10. ')-' → logprob: -17.26105499267578

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004633876495063305
    2. '2' → logprob: -5.379633903503418
    3. ' ' → logprob: -11.254633903503418
    4. '-' → logprob: -15.504633903503418
    5. '   ' → logprob: -15.879633903503418
    6. '
' → logprob: -16.0046329498291
    7. '```' → logprob: -16.6296329498291
    8. '0' → logprob: -16.6921329498291
    9. ',' → logprob: -17.2546329498291
    10. ' -' → logprob: -17.6921329498291

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007724810391664505
    2. '-' → logprob: -5.007724761962891
    3. ',-' → logprob: -7.507724761962891
    4. ' -' → logprob: -8.25772476196289
    5. ' ,' → logprob: -8.63272476196289
    6. '   ' → logprob: -11.25772476196289
    7. '0' → logprob: -12.63272476196289
    8. '```' → logprob: -13.13272476196289
    9. ',
' → logprob: -13.50772476196289
    10. '-,' → logprob: -14.00772476196289

Token 412: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009716100175864995
    2. ' -' → logprob: -7.000971794128418
    3. '0' → logprob: -9.750971794128418
    4. ' ' → logprob: -13.625971794128418
    5. '   ' → logprob: -14.500971794128418
    6. '
' → logprob: -17.3759708404541
    7. '  ' → logprob: -17.5009708404541
    8. ',' → logprob: -18.1259708404541
    9. '    ' → logprob: -18.6259708404541
    10. '	' → logprob: -18.6259708404541

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '   ' → logprob: -16.125
    4. '
' → logprob: -16.5
    5. '2' → logprob: -16.875
    6. '```' → logprob: -17.6875
    7. '0' → logprob: -18.375
    8. ',' → logprob: -18.6875
    9. '``' → logprob: -18.6875
    10. '１' → logprob: -18.75

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22970472276210785
    2. '-' → logprob: -1.604704737663269
    3. ' -' → logprob: -5.979704856872559
    4. ',-' → logprob: -6.854704856872559
    5. '1' → logprob: -8.104704856872559
    6. '```' → logprob: -8.854704856872559
    7. ' ,' → logprob: -9.104704856872559
    8. '   ' → logprob: -9.979704856872559
    9. '0' → logprob: -9.979704856872559
    10. ',
' → logprob: -11.479704856872559

Token 415: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028049908578395844
    2. ' -' → logprob: -5.877804756164551
    3. '   ' → logprob: -17.127805709838867
    4. '0' → logprob: -17.502805709838867
    5. ' ' → logprob: -17.502805709838867
    6. '```' → logprob: -17.502805709838867
    7. ')' → logprob: -18.502805709838867
    8. '−' → logprob: -19.002805709838867
    9. '  ' → logprob: -19.252805709838867
    10. '1' → logprob: -19.502805709838867

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. ')' → logprob: -18.375
    4. '   ' → logprob: -18.75
    5. '2' → logprob: -18.875
    6. '```' → logprob: -19.125
    7. '
' → logprob: -19.25
    8. ',' → logprob: -20.625
    9. '１' → logprob: -20.6875
    10. '۱' → logprob: -21.3125

Token 417: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3160880506038666
    2. '):
' → logprob: -1.441088080406189
    3. '-' → logprob: -3.4410879611968994
    4. ',' → logprob: -6.4410881996154785
    5. ' -' → logprob: -8.19108772277832
    6. ')' → logprob: -8.94108772277832
    7. ' ):' → logprob: -9.81608772277832
    8. '):
' → logprob: -9.94108772277832
    9. ',-' → logprob: -9.94108772277832
    10. '   ' → logprob: -10.06608772277832

Token 418: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038398560136556625
    2. '       ' → logprob: -6.25383996963501
    3. ' j' → logprob: -7.25383996963501
    4. 'j' → logprob: -7.37883996963501
    5. 'pid' → logprob: -8.503839492797852
    6. ' pid' → logprob: -8.878839492797852
    7. ' for' → logprob: -9.753839492797852
    8. '```' → logprob: -9.878839492797852
    9. '   ' → logprob: -10.128839492797852
    10. 'for' → logprob: -10.753839492797852

Token 419: ' pid' (ID: 23462)
  Prédit: 'pid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' (adapté à ' pid') → logprob: -0.4843490421772003
    2. 'if' → logprob: -1.484349012374878
    3. 'j' → logprob: -1.859349012374878
    4. 'for' → logprob: -7.609349250793457
    5. '   ' → logprob: -7.734349250793457
    6. 'seat' → logprob: -8.484349250793457
    7. 'jid' → logprob: -9.359349250793457
    8. 'pos' → logprob: -9.484349250793457
    9. ' if' → logprob: -10.484349250793457
    10. 'cell' → logprob: -10.984349250793457

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692853808403015
    2. ' =' → logprob: -2.1269285678863525
    3. ' ' → logprob: -14.876928329467773
    4. ',' → logprob: -16.001928329467773
    5. '>' → logprob: -16.876928329467773
    6. ')' → logprob: -17.376928329467773
    7. '   ' → logprob: -17.626928329467773
    8. ']' → logprob: -18.001928329467773
    9. ' car' → logprob: -18.001928329467773
    10. ' ' → logprob: -18.251928329467773

Token 421: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.07079830020666122
    2. ' car' → logprob: -2.695798397064209
    3. 'new' → logprob: -7.695798397064209
    4. ' new' → logprob: -7.820798397064209
    5. '	car' → logprob: -13.19579792022705
    6. '   ' → logprob: -13.44579792022705
    7. ' ' → logprob: -13.94579792022705
    8. '(car' → logprob: -14.69579792022705
    9. '_car' → logprob: -15.44579792022705
    10. 'c' → logprob: -15.69579792022705

Token 422: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. 'i' → logprob: -13.625001907348633
    3. '[' → logprob: -14.250001907348633
    4. '<|end|>' → logprob: -16.000001907348633
    5. '[
' → logprob: -16.500001907348633
    6. '[int' → logprob: -17.750001907348633
    7. '[s' → logprob: -18.625001907348633
    8. '
' → logprob: -19.000001907348633
    9. '[I' → logprob: -19.000001907348633
    10. 's' → logprob: -19.250001907348633

Token 423: '][' (ID: 2696)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0001502636878285557
    2. '[' → logprob: -9.500150680541992
    3. '][' → logprob: -9.875150680541992
    4. ' [' → logprob: -11.625150680541992
    5. ')[' → logprob: -11.875150680541992
    6. '   ' → logprob: -13.125150680541992
    7. '}[' → logprob: -13.375150680541992
    8. 's' → logprob: -14.000150680541992
    9. '[S' → logprob: -14.000150680541992
    10. '```' → logprob: -14.125150680541992

Token 424: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.392202976712724e-06
    2. ' s' → logprob: -12.375006675720215
    3. 'width' → logprob: -13.625006675720215
    4. '   ' → logprob: -15.625006675720215
    5. '[s' → logprob: -15.750006675720215
    6. '```' → logprob: -16.1250057220459
    7. 'p' → logprob: -17.0000057220459
    8. '`s' → logprob: -17.0000057220459
    9. '{s' → logprob: -17.1250057220459
    10. '2' → logprob: -17.2500057220459

Token 425: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008857655338943005
    2. ']
' → logprob: -4.758857727050781
    3. ')' → logprob: -8.508857727050781
    4. '])' → logprob: -10.633857727050781
    5. ' ]' → logprob: -12.008857727050781
    6. ')
' → logprob: -12.383857727050781
    7. ']
' → logprob: -12.758857727050781
    8. ')]' → logprob: -13.133857727050781
    9. ']

' → logprob: -13.508857727050781
    10. '])
' → logprob: -15.133857727050781

Token 426: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01055960077792406
    2. ' if' → logprob: -4.760559558868408
    3. '       ' → logprob: -6.260559558868408
    4. '```' → logprob: -11.635560035705566
    5. '	if' → logprob: -11.885560035705566
    6. '<|end|>' → logprob: -12.010560035705566
    7. '   ' → logprob: -12.885560035705566
    8. ')' → logprob: -13.010560035705566
    9. 'If' → logprob: -13.510560035705566
    10. '           ' → logprob: -13.760560035705566

Token 427: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004350797680672258
    2. ' if' → logprob: -7.750434875488281
    3. '       ' → logprob: -12.750434875488281
    4. '	if' → logprob: -14.125434875488281
    5. 'None' → logprob: -15.125434875488281
    6. '   ' → logprob: -15.375434875488281
    7. 'If' → logprob: -16.62543487548828
    8. '           ' → logprob: -17.87543487548828
    9. '```' → logprob: -19.62543487548828
    10. ';if' → logprob: -20.37543487548828

Token 428: ' pid' (ID: 23462)
  Prédit: 'pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.06994009763002396
    2. ' pid' → logprob: -2.6949400901794434
    3. '(pid' → logprob: -13.319940567016602
    4. '   ' → logprob: -13.694940567016602
    5. 'pit' → logprob: -15.319940567016602
    6. 'pi' → logprob: -15.444940567016602
    7. '.pid' → logprob: -16.1949405670166
    8. '_pid' → logprob: -16.4449405670166
    9. 'ped' → logprob: -16.6949405670166
    10. '
' → logprob: -16.8199405670166

Token 429: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3868977725505829
    2. ' is' → logprob: -1.1368978023529053
    3. ')' → logprob: -10.636898040771484
    4. '=' → logprob: -13.636898040771484
    5. '	is' → logprob: -14.761898040771484
    6. '!=' → logprob: -15.136898040771484
    7. ')is' → logprob: -15.761898040771484
    8. ']' → logprob: -15.886898040771484
    9. ' ' → logprob: -16.011898040771484
    10. ' )' → logprob: -16.136898040771484

Token 430: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1284678876399994
    2. ' not' → logprob: -2.1284677982330322
    3. 'None' → logprob: -6.503468036651611
    4. ' None' → logprob: -11.003467559814453
    5. 'Not' → logprob: -12.003467559814453
    6. 'none' → logprob: -12.253467559814453
    7. 'n' → logprob: -12.753467559814453
    8. '
' → logprob: -13.503467559814453
    9. '=None' → logprob: -14.003467559814453
    10. ')' → logprob: -14.253467559814453

Token 431: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.000553151941858232
    2. ' None' → logprob: -7.500553131103516
    3. 'not' → logprob: -15.625553131103516
    4. '(None' → logprob: -18.250553131103516
    5. '_None' → logprob: -18.750553131103516
    6. 'none' → logprob: -19.250553131103516
    7. '=None' → logprob: -20.000553131103516
    8. ' not' → logprob: -20.625553131103516
    9. 'Not' → logprob: -20.625553131103516
    10. '_none' → logprob: -22.125553131103516

Token 432: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.40530362725257874
    2. 'and' → logprob: -1.4053035974502563
    3. ':
' → logprob: -2.780303716659546
    4. ':' → logprob: -3.655303716659546
    5. ':

' → logprob: -10.905303955078125
    6. '=' → logprob: -11.405303955078125
    7. '):
' → logprob: -12.030303955078125
    8. ' :
' → logprob: -12.280303955078125
    9. '           ' → logprob: -12.655303955078125
    10. '       ' → logprob: -12.780303955078125

Token 433: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4307142198085785
    2. ' not' → logprob: -1.0557142496109009
    3. 'i' → logprob: -6.430714130401611
    4. ' i' → logprob: -7.930714130401611
    5. '(not' → logprob: -11.55571460723877
    6. '   ' → logprob: -11.80571460723877
    7. 'car' → logprob: -12.05571460723877
    8. '	not' → logprob: -12.68071460723877
    9. '(i' → logprob: -12.80571460723877
    10. 'm' → logprob: -13.05571460723877

Token 434: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00318163656629622
    2. ' moved' → logprob: -5.753181457519531
    3. '   ' → logprob: -13.878181457519531
    4. ' m' → logprob: -14.128181457519531
    5. '	m' → logprob: -14.128181457519531
    6. 'moving' → logprob: -15.003181457519531
    7. '           ' → logprob: -15.253181457519531
    8. ' ' → logprob: -15.753181457519531
    9. '[m' → logprob: -16.00318145751953
    10. '       ' → logprob: -16.00318145751953

Token 435: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '(pid' → logprob: -15.250000953674316
    3. ' [' → logprob: -15.375000953674316
    4. '```' → logprob: -16.375
    5. 'pid' → logprob: -16.625
    6. '
' → logprob: -17.0
    7. '

' → logprob: -17.375
    8. '[
' → logprob: -17.375
    9. '[p' → logprob: -18.0
    10. '[id' → logprob: -18.625

Token 436: 'pid' (ID: 19554)
  Prédit: 'pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.08899269253015518
    2. '[' → logprob: -2.4639925956726074
    3. '(pid' → logprob: -10.588993072509766
    4. ' pid' → logprob: -10.713993072509766
    5. '   ' → logprob: -13.713993072509766
    6. 'p' → logprob: -13.838993072509766
    7. 'id' → logprob: -14.463993072509766
    8. 'pi' → logprob: -14.588993072509766
    9. '
' → logprob: -14.963993072509766
    10. ']' → logprob: -15.463993072509766

Token 437: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.03003961220383644
    2. ']:' → logprob: -3.5300395488739014
    3. ']:

' → logprob: -8.78003978729248
    4. ']' → logprob: -9.40503978729248
    5. ']:
' → logprob: -10.90503978729248
    6. ':
' → logprob: -11.15503978729248
    7. ':' → logprob: -11.53003978729248
    8. ']:


' → logprob: -13.03003978729248
    9. ' ]' → logprob: -13.15503978729248
    10. '():
' → logprob: -13.40503978729248

Token 438: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2553545832633972
    2. ' if' → logprob: -2.130354642868042
    3. '           ' → logprob: -2.255354642868042
    4. 'next' → logprob: -7.130354404449463
    5. '       ' → logprob: -7.380354404449463
    6. '   ' → logprob: -8.630354881286621
    7. ' next' → logprob: -9.880354881286621
    8. '	if' → logprob: -10.505354881286621
    9. '```' → logprob: -11.130354881286621
    10. ' ' → logprob: -12.130354881286621

Token 439: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002966127940453589
    2. ' if' → logprob: -8.625296592712402
    3. '           ' → logprob: -9.125296592712402
    4. '#' (adapté à ' #') → logprob: -12.750296592712402
    5. 'next' → logprob: -12.875296592712402
    6. '   ' → logprob: -13.625296592712402
    7. 'can' → logprob: -14.250296592712402
    8. 'new' → logprob: -14.750296592712402
    9. '               ' → logprob: -15.750296592712402
    10. '       ' → logprob: -16.12529754638672

Token 440: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.874882430769503e-05
    2. ' if' → logprob: -10.000079154968262
    3. 'next' → logprob: -10.625079154968262
    4. '           ' → logprob: -11.875079154968262
    5. '#' → logprob: -13.625079154968262
    6. 'new' → logprob: -15.000079154968262
    7. '   ' → logprob: -15.375079154968262
    8. '               ' → logprob: -15.875079154968262
    9. 'If' → logprob: -17.000078201293945
    10. 'below' → logprob: -17.125078201293945

Token 441: ' at' (ID: 540)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001589618914294988
    2. ' i' → logprob: -8.75015926361084
    3. 'car' → logprob: -15.12515926361084
    4. '   ' → logprob: -16.375158309936523
    5. '(i' → logprob: -16.875158309936523
    6. '	i' → logprob: -17.750158309936523
    7. ' car' → logprob: -18.500158309936523
    8. '  ' → logprob: -19.000158309936523
    9. ' ' → logprob: -19.125158309936523
    10. 's' → logprob: -19.750158309936523

Token 442: ' rear' (ID: 20749)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.759229838848114
    2. 'r' → logprob: -0.759229838848114
    3. 'i' → logprob: -3.259229898452759
    4. ' r' → logprob: -4.50922966003418
    5. ' i' → logprob: -5.13422966003418
    6. ' ' → logprob: -5.38422966003418
    7. ' the' → logprob: -5.63422966003418
    8. 'the' → logprob: -8.13422966003418
    9. 'row' → logprob: -10.00922966003418
    10. ' last' → logprob: -10.63422966003418

Token 443: ' row' (ID: 5225)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3379937410354614
    2. '==' → logprob: -2.837993621826172
    3. ' i' → logprob: -3.087993621826172
    4. ' and' → logprob: -3.462993621826172
    5. ' row' → logprob: -3.712993621826172
    6. ' or' → logprob: -4.087993621826172
    7. ' ==' → logprob: -4.212993621826172
    8. ' if' → logprob: -4.587993621826172
    9. '(i' → logprob: -4.587993621826172
    10. ' of' → logprob: -4.712993621826172

Token 444: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4453745186328888
    2. ' or' → logprob: -1.9453744888305664
    3. ':' → logprob: -2.3203744888305664
    4. 'and' → logprob: -3.3203744888305664
    5. ':
' → logprob: -3.8203744888305664
    6. ' if' → logprob: -4.070374488830566
    7. ' (' → logprob: -4.445374488830566
    8. '           ' → logprob: -5.070374488830566
    9. ',' → logprob: -5.320374488830566
    10. 'if' → logprob: -5.570374488830566

Token 445: ' passenger' (ID: 39039)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.48673683404922485
    2. ' new' → logprob: -1.36173677444458
    3. 'if' → logprob: -2.23673677444458
    4. ' if' → logprob: -4.36173677444458
    5. 'car' → logprob: -4.86173677444458
    6. '   ' → logprob: -7.23673677444458
    7. '           ' → logprob: -7.61173677444458
    8. ' car' → logprob: -7.86173677444458
    9. 'pass' → logprob: -9.361737251281738
    10. '               ' → logprob: -10.611737251281738

Token 446: ' gets' (ID: 8625)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.13255351781845093
    2. 'can' → logprob: -2.6325535774230957
    3. ' exits' → logprob: -3.3825535774230957
    4. '==' → logprob: -5.007553577423096
    5. ' ==' → logprob: -5.757553577423096
    6. ' is' → logprob: -6.132553577423096
    7. ' leaves' → logprob: -6.632553577423096
    8. '=' → logprob: -6.757553577423096
    9. ' will' → logprob: -7.007553577423096
    10. ' =' → logprob: -7.632553577423096

Token 447: ' off' (ID: 1277)
  Prédit: ' off'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' off' → logprob: -0.15413056313991547
    2. 'off' → logprob: -2.154130458831787
    3. 'out' → logprob: -4.154130458831787
    4. ' out' → logprob: -4.529130458831787
    5. ' to' → logprob: -8.529130935668945
    6. 'ex' → logprob: -10.154130935668945
    7. 'removed' → logprob: -10.529130935668945
    8. 'to' → logprob: -10.779130935668945
    9. '   ' → logprob: -11.529130935668945
    10. ' on' → logprob: -11.779130935668945

Token 448: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6023767590522766
    2. '           ' → logprob: -1.4773766994476318
    3. ' if' → logprob: -2.227376699447632
    4. '
' → logprob: -3.602376699447632
    5. '                   ' → logprob: -3.602376699447632
    6. ':
' → logprob: -4.227376937866211
    7. '```' → logprob: -4.727376937866211
    8. ' at' → logprob: -4.852376937866211
    9. ':' → logprob: -5.227376937866211
    10. ' (' → logprob: -5.352376937866211

Token 449: '           ' (ID: 352)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8729298114776611
    2. '           ' → logprob: -1.2479298114776611
    3. ' new' → logprob: -2.122929811477661
    4. 'car' → logprob: -2.747929811477661
    5. '               ' → logprob: -2.997929811477661
    6. 'if' → logprob: -3.497929811477661
    7. ' if' → logprob: -4.122929573059082
    8. '                   ' → logprob: -4.872929573059082
    9. '   ' → logprob: -5.997929573059082
    10. ' car' → logprob: -6.372929573059082

Token 450: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.025151941925287247
    2. ' if' → logprob: -4.77515172958374
    3. 'new' → logprob: -5.27515172958374
    4. '           ' → logprob: -5.40015172958374
    5. 'pass' → logprob: -5.52515172958374
    6. '   ' → logprob: -6.90015172958374
    7. 'm' → logprob: -7.02515172958374
    8. ' new' → logprob: -7.65015172958374
    9. '       ' → logprob: -9.025152206420898
    10. 'car' → logprob: -9.775152206420898

Token 451: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20141616463661194
    2. 'i' → logprob: -1.7014161348342896
    3. '   ' → logprob: -13.576416015625
    4. '	i' → logprob: -13.951416015625
    5. ' ' → logprob: -15.076416015625
    6. '(i' → logprob: -15.826416015625
    7. ' ' → logprob: -15.951416015625
    8. '  ' → logprob: -16.326416015625
    9. '
' → logprob: -17.576416015625
    10. '```' → logprob: -17.826416015625

Token 452: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31330910325050354
    2. '==' → logprob: -1.3133090734481812
    3. ')' → logprob: -10.938308715820312
    4. ')==' → logprob: -11.688308715820312
    5. '=' → logprob: -11.938308715820312
    6. ']==' → logprob: -12.813308715820312
    7. '==(' → logprob: -12.813308715820312
    8. '<|end|>' → logprob: -13.188308715820312
    9. '==
' → logprob: -13.313308715820312
    10. ' ' → logprob: -13.438308715820312

Token 453: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004330532974563539
    2. ' r' → logprob: -7.750432968139648
    3. '0' → logprob: -13.000432968139648
    4. '	r' → logprob: -17.12543296813965
    5. '   ' → logprob: -17.75043296813965
    6. '(r' → logprob: -18.12543296813965
    7. ' ' → logprob: -18.50043296813965
    8. '
' → logprob: -19.62543296813965
    9. '=r' → logprob: -20.00043296813965
    10. '_r' → logprob: -20.12543296813965

Token 454: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011050650849938393
    2. ' -' → logprob: -4.511050701141357
    3. '1' → logprob: -12.8860502243042
    4. '()-' → logprob: -16.636051177978516
    5. ' ' → logprob: -16.761051177978516
    6. ''-' → logprob: -17.136051177978516
    7. '−' → logprob: -17.511051177978516
    8. '"-' → logprob: -17.761051177978516
    9. '–' → logprob: -17.886051177978516
    10. ')' → logprob: -18.261051177978516

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -16.8750057220459
    4. '```' → logprob: -17.6250057220459
    5. '   ' → logprob: -18.4375057220459
    6. '
' → logprob: -18.6875057220459
    7. 'r' → logprob: -19.3125057220459
    8. '۱' → logprob: -19.5000057220459
    9. '-' → logprob: -19.5625057220459
    10. '0' → logprob: -19.6875057220459

Token 456: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5246792435646057
    2. ':' → logprob: -0.8996792435646057
    3. '):
' → logprob: -7.274679183959961
    4. ' and' → logprob: -7.649679183959961
    5. '):' → logprob: -8.649679183959961
    6. ')' → logprob: -9.649679183959961
    7. '<|end|>' → logprob: -10.399679183959961
    8. ':

' → logprob: -10.649679183959961
    9. ' :
' → logprob: -10.774679183959961
    10. 'and' → logprob: -11.024679183959961

Token 457: '               ' (ID: 506)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.9613466858863831
    2. ' new' → logprob: -1.0863466262817383
    3. '               ' → logprob: -2.2113466262817383
    4. ' car' → logprob: -2.4613466262817383
    5. 'new' → logprob: -3.0863466262817383
    6. '                   ' → logprob: -3.5863466262817383
    7. '           ' → logprob: -5.336346626281738
    8. '                
' → logprob: -5.961346626281738
    9. '```' → logprob: -6.836346626281738
    10. '                    
' → logprob: -7.211346626281738

Token 458: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.039645012468099594
    2. 'car' → logprob: -3.289644956588745
    3. 'pass' → logprob: -7.164645195007324
    4. ' new' → logprob: -8.039645195007324
    5. '               ' → logprob: -8.164645195007324
    6. '                   ' → logprob: -9.289645195007324
    7. '           ' → logprob: -9.789645195007324
    8. '   ' → logprob: -9.789645195007324
    9. 'p' → logprob: -12.664645195007324
    10. 'cars' → logprob: -12.789645195007324

Token 459: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -7.107425062713446e-06
    2. 'Car' → logprob: -12.125006675720215
    3. '_pass' → logprob: -14.000006675720215
    4. 'car' → logprob: -14.875006675720215
    5. '_c' → logprob: -15.750006675720215
    6. '	car' → logprob: -16.25000762939453
    7. '_' → logprob: -16.50000762939453
    8. '<Car' → logprob: -17.12500762939453
    9. '-car' → logprob: -17.12500762939453
    10. ' car' → logprob: -17.75000762939453

Token 460: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10022316873073578
    2. '[r' → logprob: -2.3502230644226074
    3. '[s' → logprob: -12.225223541259766
    4. '[' → logprob: -12.350223541259766
    5. 'i' → logprob: -12.600223541259766
    6. 'r' → logprob: -12.850223541259766
    7. '][' → logprob: -14.600223541259766
    8. '[int' → logprob: -16.350223541259766
    9. '[row' → logprob: -16.475223541259766
    10. ')[' → logprob: -16.475223541259766

Token 461: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00600961409509182
    2. '[s' → logprob: -5.131009578704834
    3. '[' → logprob: -10.506010055541992
    4. '>[' → logprob: -10.756010055541992
    5. ')[' → logprob: -11.131010055541992
    6. '}[' → logprob: -12.506010055541992
    7. ' ][' → logprob: -12.631010055541992
    8. ''][' → logprob: -12.631010055541992
    9. ']' → logprob: -13.131010055541992
    10. ' [' → logprob: -13.881010055541992

Token 462: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.842555426876061e-06
    2. ' s' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.8750057220459
    4. ' ' → logprob: -19.0000057220459
    5. '    ' → logprob: -19.5000057220459
    6. '  ' → logprob: -20.0000057220459
    7. '	s' → logprob: -20.2500057220459
    8. '
' → logprob: -20.5000057220459
    9. '_s' → logprob: -21.0000057220459
    10. ''s' → logprob: -21.6250057220459

Token 463: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011904643615707755
    2. ']=' → logprob: -6.751190662384033
    3. '=' → logprob: -10.876190185546875
    4. ' ]' → logprob: -13.751190185546875
    5. ' =' → logprob: -15.626190185546875
    6. ')' → logprob: -17.376190185546875
    7. '[' → logprob: -17.626190185546875
    8. '],' → logprob: -18.251190185546875
    9. ']
' → logprob: -18.376190185546875
    10. '][' → logprob: -18.626190185546875

Token 464: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805296868085861
    2. ' =' → logprob: -3.288053035736084
    3. '=None' → logprob: -11.913052558898926
    4. ']' → logprob: -12.663052558898926
    5. ']=' → logprob: -13.413052558898926
    6. 'None' → logprob: -17.163053512573242
    7. '[' → logprob: -17.538053512573242
    8. ')' → logprob: -17.538053512573242
    9. '=

' → logprob: -18.038053512573242
    10. ')=' → logprob: -18.163053512573242

Token 465: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.2729995988775045e-06
    2. ' None' → logprob: -12.000006675720215
    3. '(None' → logprob: -21.0000057220459
    4. 'none' → logprob: -22.0000057220459
    5. '_None' → logprob: -22.1250057220459
    6. '=None' → logprob: -22.3750057220459
    7. ',None' → logprob: -23.2500057220459
    8. '.None' → logprob: -23.3750057220459
    9. '   ' → logprob: -24.3750057220459
    10. '0' → logprob: -24.6250057220459

Token 466: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005752088036388159
    2. '
' → logprob: -5.255752086639404
    3. '           ' → logprob: -8.630752563476562
    4. '                
' → logprob: -9.255752563476562
    5. '                   ' → logprob: -9.255752563476562
    6. ' passengers' → logprob: -9.880752563476562
    7. 'pass' → logprob: -10.005752563476562
    8. ',' → logprob: -10.755752563476562
    9. ',
' → logprob: -11.880752563476562
    10. '       ' → logprob: -12.505752563476562

Token 467: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0662464126944542
    2. '                   ' → logprob: -3.066246509552002
    3. '           ' → logprob: -4.816246509552002
    4. '
' → logprob: -5.566246509552002
    5. 'pass' → logprob: -5.691246509552002
    6. ' passengers' → logprob: -7.066246509552002
    7. '   ' → logprob: -7.566246509552002
    8. '       ' → logprob: -8.316246032714844
    9. '                
' → logprob: -8.691246032714844
    10. '```' → logprob: -9.191246032714844

Token 468: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.019349252805113792
    2. 'pass' → logprob: -4.144349098205566
    3. 'steps' → logprob: -6.394349098205566
    4. 'passed' → logprob: -6.519349098205566
    5. 'moves' → logprob: -9.894349098205566
    6. ' moved' → logprob: -10.644349098205566
    7. '   ' → logprob: -10.769349098205566
    8. 'moving' → logprob: -11.144349098205566
    9. '           ' → logprob: -11.269349098205566
    10. 'mov' → logprob: -11.394349098205566

Token 469: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[p' → logprob: -17.5
    3. '```' → logprob: -18.0
    4. '=' → logprob: -20.25
    5. '(pid' → logprob: -20.25
    6. '               ' → logprob: -20.375
    7. 'pid' → logprob: -20.375
    8. '   ' → logprob: -20.375
    9. '][' → logprob: -20.5
    10. ')[' → logprob: -20.75

Token 470: 'pid' (ID: 19554)
  Prédit: 'pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.0003837213444057852
    2. '[' → logprob: -7.8753838539123535
    3. ' pid' → logprob: -12.875383377075195
    4. '(pid' → logprob: -14.875383377075195
    5. 'p' → logprob: -15.375383377075195
    6. 'idx' → logprob: -15.750383377075195
    7. 'pit' → logprob: -16.875383377075195
    8. '   ' → logprob: -17.000383377075195
    9. '
' → logprob: -17.375383377075195
    10. 'id' → logprob: -17.500383377075195

Token 471: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02079201489686966
    2. ']=' → logprob: -4.270792007446289
    3. '=' → logprob: -5.020792007446289
    4. ' =' → logprob: -12.145792007446289
    5. ' ]' → logprob: -13.395792007446289
    6. '[' → logprob: -14.770792007446289
    7. '=True' → logprob: -15.895792007446289
    8. ')' → logprob: -17.27079200744629
    9. '']=' → logprob: -17.52079200744629
    10. ']
' → logprob: -17.64579200744629

Token 472: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007108822464942932
    2. ' =' → logprob: -7.250710964202881
    3. '[' → logprob: -14.375710487365723
    4. '=True' → logprob: -15.875710487365723
    5. ']' → logprob: -16.37571144104004
    6. ']=' → logprob: -17.87571144104004
    7. '   ' → logprob: -20.87571144104004
    8. '=
' → logprob: -21.50071144104004
    9. '＝' → logprob: -21.75071144104004
    10. ')' → logprob: -21.87571144104004

Token 473: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '(True' → logprob: -21.87520408630371
    4. '=True' → logprob: -23.00020408630371
    5. 'true' → logprob: -23.87520408630371
    6. 'False' → logprob: -24.37520408630371
    7. '.True' → logprob: -25.25020408630371
    8. '1' → logprob: -25.25020408630371
    9. '_true' → logprob: -25.87520408630371
    10. '[' → logprob: -26.25020408630371

Token 474: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014966767048463225
    2. ',' → logprob: -9.375149726867676
    3. '           ' → logprob: -10.875149726867676
    4. '                
' → logprob: -10.875149726867676
    5. '              ' → logprob: -11.875149726867676
    6. '                   ' → logprob: -12.250149726867676
    7. '
' → logprob: -12.625149726867676
    8. '       ' → logprob: -12.875149726867676
    9. ',
' → logprob: -13.125149726867676
    10. '```' → logprob: -13.625149726867676

Token 475: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038507189601659775
    2. 'pass' → logprob: -3.2885072231292725
    3. '           ' → logprob: -8.163507461547852
    4. ' passengers' → logprob: -9.038507461547852
    5. '   ' → logprob: -10.788507461547852
    6. '       ' → logprob: -10.788507461547852
    7. '                   ' → logprob: -11.163507461547852
    8. 'passes' → logprob: -13.163507461547852
    9. '              ' → logprob: -14.038507461547852
    10. '_pass' → logprob: -14.288507461547852

Token 476: ' passengers' (ID: 37252)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -2.0339031834737398e-05
    2. ' passengers' → logprob: -11.000020027160645
    3. '           ' → logprob: -13.125020027160645
    4. 'steps' → logprob: -13.750020027160645
    5. '               ' → logprob: -15.250020027160645
    6. 'passes' → logprob: -15.500020027160645
    7. '   ' → logprob: -17.00002098083496
    8. 'pas' → logprob: -17.12502098083496
    9. '       ' → logprob: -18.50002098083496
    10. 'Passengers' → logprob: -18.50002098083496

Token 477: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -3.8889261304575484e-06
    2. '_LEFT' → logprob: -13.750003814697266
    3. '_' → logprob: -13.875003814697266
    4. '_Left' → logprob: -14.250003814697266
    5. 'left' → logprob: -14.500003814697266
    6. 'Left' → logprob: -14.750003814697266
    7. '-=' → logprob: -16.000003814697266
    8. ' -=' → logprob: -17.000003814697266
    9. '```' → logprob: -18.125003814697266
    10. '_remaining' → logprob: -18.125003814697266

Token 478: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.016324201598763466
    2. ' -=' → logprob: -4.266324043273926
    3. '-' → logprob: -6.141324043273926
    4. '+=' → logprob: -12.766324043273926
    5. '=' → logprob: -12.891324043273926
    6. ' -' → logprob: -14.141324043273926
    7. '<|end|>' → logprob: -16.266324996948242
    8. '```' → logprob: -17.141324996948242
    9. ' +=' → logprob: -18.016324996948242
    10. '.' → logprob: -18.516324996948242

Token 479: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '<|end|>' → logprob: -21.875
    4. '```' → logprob: -22.0
    5. '   ' → logprob: -23.0
    6. '۱' → logprob: -23.25
    7. '
' → logprob: -23.5
    8. '１' → logprob: -24.75
    9. ')' → logprob: -25.75
    10. '১' → logprob: -25.875

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -21.375
    4. '۱' → logprob: -21.75
    5. '   ' → logprob: -22.0
    6. '１' → logprob: -22.875
    7. '<|end|>' → logprob: -22.9375
    8. ')' → logprob: -23.3125
    9. '१' → logprob: -23.3125
    10. '2' → logprob: -23.4375

Token 481: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5107957720756531
    2. '
' → logprob: -1.3857958316802979
    3. '<|end|>' → logprob: -3.260795831680298
    4. '   ' → logprob: -3.385795831680298
    5. '               ' → logprob: -3.635795831680298
    6. '\n' → logprob: -3.760795831680298
    7. '    
' → logprob: -4.885795593261719
    8. '       ' → logprob: -4.885795593261719
    9. '```' → logprob: -5.760795593261719
    10. 'continue' → logprob: -6.135795593261719

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00325388484634459
    2. '               ' → logprob: -6.253253936767578
    3. 'elif' → logprob: -7.503253936767578
    4. 'else' → logprob: -8.003253936767578
    5. '```' → logprob: -8.253253936767578
    6. '       ' → logprob: -9.503253936767578
    7. 'continue' → logprob: -10.003253936767578
    8. '   ' → logprob: -10.378253936767578
    9. ' elif' → logprob: -11.503253936767578
    10. ' else' → logprob: -12.003253936767578

Token 483: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2078007161617279
    2. '           ' → logprob: -2.4578006267547607
    3. '       ' → logprob: -2.8328006267547607
    4. 'elif' → logprob: -3.3328006267547607
    5. ' else' → logprob: -4.95780086517334
    6. '   ' → logprob: -8.33280086517334
    7. ' elif' → logprob: -8.83280086517334
    8. '               ' → logprob: -11.20780086517334
    9. 'continue' → logprob: -11.20780086517334
    10. '```' → logprob: -12.58280086517334

Token 484: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.584109365940094
    2. ':
' → logprob: -1.3341093063354492
    3. 'if' → logprob: -2.334109306335449
    4. '               ' → logprob: -2.834109306335449
    5. ':' → logprob: -3.834109306335449
    6. '           ' → logprob: -6.834109306335449
    7. ' and' → logprob: -8.20910930633545
    8. ',' → logprob: -9.08410930633545
    9. '   ' → logprob: -9.83410930633545
    10. '       ' → logprob: -10.70910930633545

Token 485: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5516326427459717
    2. 'if' → logprob: -0.9266326427459717
    3. 'next' → logprob: -4.801632881164551
    4. '               ' → logprob: -4.801632881164551
    5. ' next' → logprob: -4.801632881164551
    6. '           ' → logprob: -5.801632881164551
    7. '#' → logprob: -8.55163288116455
    8. ' nxt' → logprob: -10.42663288116455
    9. '   ' → logprob: -10.55163288116455
    10. '       ' → logprob: -10.67663288116455

Token 486: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014770490117371082
    2. ' if' → logprob: -4.2647705078125
    3. 'next' → logprob: -7.5147705078125
    4. ' next' → logprob: -10.6397705078125
    5. '#' (adapté à ' #') → logprob: -11.0147705078125
    6. '               ' → logprob: -11.2647705078125
    7. '   ' → logprob: -12.6397705078125
    8. '           ' → logprob: -12.7647705078125
    9. '                   ' → logprob: -13.6397705078125
    10. 'elif' → logprob: -14.3897705078125

Token 487: ' Move' (ID: 25485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002480412134900689
    2. 'next' → logprob: -6.502480506896973
    3. ' if' → logprob: -7.002480506896973
    4. 'elif' → logprob: -10.502480506896973
    5. '#' → logprob: -10.877480506896973
    6. ' next' → logprob: -11.752480506896973
    7. '               ' → logprob: -12.127480506896973
    8. '   ' → logprob: -12.502480506896973
    9. '           ' → logprob: -13.002480506896973
    10. 'If' → logprob: -14.252480506896973

Token 488: ' backward' (ID: 58986)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.1709800809621811
    2. ' new' → logprob: -2.2959799766540527
    3. 'if' → logprob: -3.2959799766540527
    4. 'car' → logprob: -4.795979976654053
    5. 'i' → logprob: -5.795979976654053
    6. '_car' → logprob: -6.420979976654053
    7. 'next' → logprob: -6.795979976654053
    8. 'down' → logprob: -6.795979976654053
    9. ' if' → logprob: -6.920979976654053
    10. '[new' → logprob: -7.295979976654053

Token 489: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4190259873867035
    2. 'if' → logprob: -1.1690260171890259
    3. ' new' → logprob: -4.044025897979736
    4. ' if' → logprob: -4.794025897979736
    5. 'i' → logprob: -5.794025897979736
    6. 'car' → logprob: -6.794025897979736
    7. '[i' → logprob: -7.794025897979736
    8. '                   ' → logprob: -8.044026374816895
    9. 'next' → logprob: -8.044026374816895
    10. '[new' → logprob: -8.294026374816895

Token 490: ' the' (ID: 290)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0011437878711149096
    2. 'new' → logprob: -7.376143932342529
    3. ' car' → logprob: -7.626143932342529
    4. ' new' → logprob: -10.626143455505371
    5. '   ' → logprob: -12.501143455505371
    6. ' ' → logprob: -14.751143455505371
    7. '(car' → logprob: -14.751143455505371
    8. '	car' → logprob: -15.251143455505371
    9. '  ' → logprob: -16.126144409179688
    10. '    ' → logprob: -16.876144409179688

Token 491: ' position' (ID: 4010)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.07578615099191666
    2. 'new' → logprob: -2.7007861137390137
    3. ' car' → logprob: -5.700786113739014
    4. ' new' → logprob: -6.075786113739014
    5. 'i' → logprob: -8.700786590576172
    6. ' i' → logprob: -11.825786590576172
    7. '   ' → logprob: -13.075786590576172
    8. '```' → logprob: -13.075786590576172
    9. 'next' → logprob: -13.200786590576172
    10. '[i' → logprob: -13.325786590576172

Token 492: ' is' (ID: 382)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47334209084510803
    2. 'car' → logprob: -1.4733420610427856
    3. '[i' → logprob: -3.098342180252075
    4. ' at' → logprob: -3.098342180252075
    5. 'at' → logprob: -4.098341941833496
    6. 'in' → logprob: -4.348341941833496
    7. 'is' → logprob: -4.598341941833496
    8. ' car' → logprob: -5.223341941833496
    9. 'new' → logprob: -5.723341941833496
    10. ' i' → logprob: -5.848341941833496

Token 493: ' free' (ID: 2240)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2419104427099228
    2. ' None' → logprob: -1.741910457611084
    3. 'car' → logprob: -3.241910457611084
    4. ' car' → logprob: -7.991910457611084
    5. 'empty' → logprob: -8.741909980773926
    6. 'none' → logprob: -10.116909980773926
    7. 'not' → logprob: -10.616909980773926
    8. ' empty' → logprob: -10.866909980773926
    9. ' not' → logprob: -11.491909980773926
    10. ' ' → logprob: -13.491909980773926

Token 494: ' or' (ID: 503)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0438051223754883
    2. ' if' → logprob: -1.2938051223754883
    3. ' and' → logprob: -1.4188051223754883
    4. 'and' → logprob: -2.0438051223754883
    5. '                   ' → logprob: -7.043805122375488
    6. '               ' → logprob: -8.043805122375488
    7. 'car' → logprob: -8.418805122375488
    8. '   ' → logprob: -8.543805122375488
    9. ' car' → logprob: -9.043805122375488
    10. '<|end|>' → logprob: -9.668805122375488

Token 495: ' will' (ID: 738)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.23370160162448883
    2. 'i' → logprob: -2.733701705932617
    3. ' car' → logprob: -2.858701705932617
    4. 'new' → logprob: -3.483701705932617
    5. ' new' → logprob: -3.858701705932617
    6. ' i' → logprob: -4.608701705932617
    7. 'pass' → logprob: -4.733701705932617
    8. '(car' → logprob: -4.983701705932617
    9. '(i' → logprob: -5.608701705932617
    10. ' (' → logprob: -7.233701705932617

Token 496: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.1023862212896347
    2. 'not' → logprob: -2.852386236190796
    3. ' be' → logprob: -3.352386236190796
    4. ' not' → logprob: -5.602385997772217
    5. 'remain' → logprob: -8.102386474609375
    6. 'None' → logprob: -9.227386474609375
    7. '	be' → logprob: -9.352386474609375
    8. '=None' → logprob: -9.602386474609375
    9. '_be' → logprob: -9.727386474609375
    10. 'continue' → logprob: -10.102386474609375

Token 497: ' free' (ID: 2240)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2636134922504425
    2. ' None' → logprob: -2.76361346244812
    3. 'free' → logprob: -3.01361346244812
    4. ' free' → logprob: -3.38861346244812
    5. 'True' → logprob: -4.013613700866699
    6. 'car' → logprob: -4.138613700866699
    7. 'empty' → logprob: -4.513613700866699
    8. 'new' → logprob: -4.513613700866699
    9. 'vac' → logprob: -5.013613700866699
    10. 'clear' → logprob: -5.638613700866699

Token 498: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9088131785392761
    2. '               ' → logprob: -1.283813238143921
    3. '   ' → logprob: -1.908813238143921
    4. ' at' → logprob: -3.408813238143921
    5. ' in' → logprob: -4.033812999725342
    6. 'in' → logprob: -4.033812999725342
    7. '<|end|>' → logprob: -4.283812999725342
    8. 'at' → logprob: -4.408812999725342
    9. ' next' → logprob: -4.783812999725342
    10. 'next' → logprob: -4.783812999725342

Token 499: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8619439005851746
    2. '               ' → logprob: -0.9869439005851746
    3. 'if' → logprob: -2.1119439601898193
    4. ' and' → logprob: -2.6119439601898193
    5. 'and' → logprob: -4.98694372177124
    6. '                   ' → logprob: -6.86194372177124
    7. '=' → logprob: -8.111944198608398
    8. '                
' → logprob: -8.111944198608398
    9. '<|end|>' → logprob: -8.486944198608398
    10. ',' → logprob: -8.736944198608398

Token 500: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0067842816933989525
    2. ' if' → logprob: -5.006784439086914
    3. '                   ' → logprob: -10.881784439086914
    4. 'new' → logprob: -11.006784439086914
    5. '               ' → logprob: -11.131784439086914
    6. 'next' → logprob: -11.256784439086914
    7. 'car' → logprob: -13.631784439086914
    8. '   ' → logprob: -13.756784439086914
    9. 'elif' → logprob: -14.131784439086914
    10. ' new' → logprob: -14.506784439086914

Token 501: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0024556764401495457
    2. ' car' → logprob: -6.377455711364746
    3. 'new' → logprob: -7.377455711364746
    4. '   ' → logprob: -9.502455711364746
    5. ' new' → logprob: -10.752455711364746
    6. 'i' → logprob: -11.377455711364746
    7. '(car' → logprob: -11.752455711364746
    8. ' ' → logprob: -12.502455711364746
    9. '    ' → logprob: -13.377455711364746
    10. '	car' → logprob: -13.502455711364746

Token 502: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. 'i' → logprob: -13.375001907348633
    3. '[' → logprob: -17.750001907348633
    4. '(i' → logprob: -18.125001907348633
    5. '[min' → logprob: -18.125001907348633
    6. '[
' → logprob: -18.750001907348633
    7. '[next' → logprob: -18.875001907348633
    8. '```' → logprob: -19.750001907348633
    9. '   ' → logprob: -20.125001907348633
    10. ')' → logprob: -20.375001907348633

Token 503: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014573395310435444
    2. ' +' → logprob: -8.87514591217041
    3. '[' → logprob: -12.50014591217041
    4. '+i' → logprob: -13.87514591217041
    5. '1' → logprob: -14.62514591217041
    6. '+s' → logprob: -15.37514591217041
    7. '   ' → logprob: -15.75014591217041
    8. '][' → logprob: -15.87514591217041
    9. '```' → logprob: -16.625144958496094
    10. '＋' → logprob: -16.750144958496094

Token 504: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.841743303695694e-05
    2. '[s' → logprob: -9.50009822845459
    3. ' s' → logprob: -11.75009822845459
    4. '][' → logprob: -12.00009822845459
    5. '1' → logprob: -12.37509822845459
    6. '
' → logprob: -13.00009822845459
    7. '[' → logprob: -13.62509822845459
    8. ' ' → logprob: -14.87509822845459
    9. '{s' → logprob: -15.12509822845459
    10. '   ' → logprob: -15.50009822845459

Token 505: '][' (ID: 2696)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.026417220011353493
    2. '][' → logprob: -3.6514172554016113
    3. '[' → logprob: -9.526416778564453
    4. ' [' → logprob: -11.151416778564453
    5. 's' → logprob: -11.776416778564453
    6. '>[' → logprob: -12.151416778564453
    7. ']' → logprob: -12.901416778564453
    8. ' ][' → logprob: -13.151416778564453
    9. ')[' → logprob: -13.276416778564453
    10. '   ' → logprob: -13.276416778564453

Token 506: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.896309739408025e-07
    2. ' s' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.75
    4. ' ' → logprob: -19.875
    5. '
' → logprob: -20.0
    6. '`s' → logprob: -20.125
    7. '  ' → logprob: -20.5
    8. '       ' → logprob: -20.75
    9. ''s' → logprob: -21.0
    10. '    ' → logprob: -21.0

Token 507: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01967448927462101
    2. 'is' → logprob: -4.519674301147461
    3. ' is' → logprob: -4.769674301147461
    4. ' ]' → logprob: -9.394674301147461
    5. ']==' → logprob: -11.269674301147461
    6. ')' → logprob: -11.644674301147461
    7. 'None' → logprob: -13.894674301147461
    8. '[' → logprob: -15.644674301147461
    9. '==' → logprob: -16.01967430114746
    10. 'Is' → logprob: -16.14467430114746

Token 508: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.07889506965875626
    2. ' is' → logprob: -2.578895092010498
    3. '==' → logprob: -12.82889461517334
    4. ')' → logprob: -13.07889461517334
    5. ')is' → logprob: -15.95389461517334
    6. 'None' → logprob: -16.328895568847656
    7. ' None' → logprob: -16.703895568847656
    8. ' )' → logprob: -16.953895568847656
    9. '	is' → logprob: -17.328895568847656
    10. ' ' → logprob: -17.328895568847656

Token 509: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006715370807796717
    2. ' None' → logprob: -5.006715297698975
    3. ' ' → logprob: -18.381715774536133
    4. '_None' → logprob: -19.256715774536133
    5. '=None' → logprob: -19.381715774536133
    6. '(None' → logprob: -19.756715774536133
    7. '   ' → logprob: -20.006715774536133
    8. ',None' → logprob: -20.881715774536133
    9. 'none' → logprob: -21.256715774536133
    10. '_none' → logprob: -21.381715774536133

Token 510: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13011381030082703
    2. 'and' → logprob: -2.1301138401031494
    3. ' or' → logprob: -5.75511360168457
    4. 'or' → logprob: -11.50511360168457
    5. '                   ' → logprob: -14.25511360168457
    6. '<|end|>' → logprob: -14.25511360168457
    7. ' ' → logprob: -14.50511360168457
    8. '                ' → logprob: -14.63011360168457
    9. ')' → logprob: -14.75511360168457
    10. '                    ' → logprob: -15.00511360168457

Token 511: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.28175652027130127
    2. ' new' → logprob: -1.4067565202713013
    3. 'not' → logprob: -7.906756401062012
    4. ' not' → logprob: -8.656756401062012
    5. 'car' → logprob: -9.906756401062012
    6. ' car' → logprob: -12.281756401062012
    7. '(new' → logprob: -12.656756401062012
    8. '   ' → logprob: -13.156756401062012
    9. ' (' → logprob: -13.656756401062012
    10. ' ' → logprob: -14.031756401062012

Token 512: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -1.7432603272027336e-06
    2. 'car' → logprob: -14.000001907348633
    3. 'Car' → logprob: -14.875001907348633
    4. '_' → logprob: -15.625001907348633
    5. '_c' → logprob: -16.000001907348633
    6. '```' → logprob: -16.500001907348633
    7. ' _' → logprob: -16.875001907348633
    8. '_new' → logprob: -17.500001907348633
    9. '[_' → logprob: -17.750001907348633
    10. '[' → logprob: -18.125001907348633

Token 513: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.375000953674316
    3. ' [' → logprob: -15.250000953674316
    4. 'i' → logprob: -16.75
    5. '```' → logprob: -17.5
    6. '[I' → logprob: -18.0
    7. '[u' → logprob: -19.25
    8. ' ' → logprob: -19.375
    9. '(i' → logprob: -19.5
    10. '[j' → logprob: -19.625

Token 514: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02150188386440277
    2. '+' → logprob: -3.8965017795562744
    3. '][' → logprob: -7.3965020179748535
    4. '+i' → logprob: -8.271501541137695
    5. '[' → logprob: -10.021501541137695
    6. '+[' → logprob: -10.771501541137695
    7. 'i' → logprob: -11.146501541137695
    8. ' [' → logprob: -12.896501541137695
    9. '[I' → logprob: -13.521501541137695
    10. '```' → logprob: -13.646501541137695

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34928762912750244
    2. '+' → logprob: -1.2242876291275024
    3. 's' → logprob: -7.474287509918213
    4. 'i' → logprob: -8.724287986755371
    5. '```' → logprob: -10.099287986755371
    6. '[' → logprob: -10.474287986755371
    7. ' ' → logprob: -11.349287986755371
    8. ' +' → logprob: -11.474287986755371
    9. '   ' → logprob: -12.099287986755371
    10. '][' → logprob: -12.474287986755371

Token 516: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.048892561346292496
    2. '[s' → logprob: -3.0488924980163574
    3. '[' → logprob: -9.173892974853516
    4. ' ][' → logprob: -9.923892974853516
    5. ']' → logprob: -10.298892974853516
    6. '   ' → logprob: -10.798892974853516
    7. '```' → logprob: -11.173892974853516
    8. 's' → logprob: -11.298892974853516
    9. '>[' → logprob: -11.673892974853516
    10. ' [' → logprob: -11.798892974853516

Token 517: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6240566083070007e-06
    2. ' s' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.875001907348633
    4. '[' → logprob: -17.250001907348633
    5. ' ' → logprob: -17.750001907348633
    6. '           ' → logprob: -18.375001907348633
    7. '  ' → logprob: -18.500001907348633
    8. '[s' → logprob: -18.500001907348633
    9. '       ' → logprob: -18.625001907348633
    10. '    ' → logprob: -18.875001907348633

Token 518: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4202556610107422
    2. 'is' → logprob: -1.1702556610107422
    3. ']' → logprob: -3.420255661010742
    4. ')' → logprob: -9.295255661010742
    5. '[' → logprob: -11.295255661010742
    6. ' ]' → logprob: -11.920255661010742
    7. ')is' → logprob: -12.045255661010742
    8. ']==' → logprob: -12.295255661010742
    9. '	is' → logprob: -13.670255661010742
    10. 'None' → logprob: -13.670255661010742

Token 519: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.12693734467029572
    2. ' is' → logprob: -2.1269373893737793
    3. '==' → logprob: -12.001936912536621
    4. '=' → logprob: -13.251936912536621
    5. '[' → logprob: -14.876936912536621
    6. 'None' → logprob: -15.376936912536621
    7. ')' → logprob: -15.626936912536621
    8. ' =' → logprob: -16.126937866210938
    9. '=None' → logprob: -16.251937866210938
    10. '=True' → logprob: -16.501937866210938

Token 520: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00029637437546625733
    2. ' None' → logprob: -8.125296592712402
    3. '=None' → logprob: -16.000295639038086
    4. 'False' → logprob: -16.875295639038086
    5. '   ' → logprob: -17.000295639038086
    6. 'none' → logprob: -17.000295639038086
    7. '(None' → logprob: -17.000295639038086
    8. 'True' → logprob: -17.250295639038086
    9. '_None' → logprob: -17.875295639038086
    10. '[' → logprob: -18.500295639038086

Token 521: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05102222412824631
    2. ':
' → logprob: -3.1760222911834717
    3. '                   ' → logprob: -5.301022052764893
    4. ' and' → logprob: -6.051022052764893
    5. '               ' → logprob: -8.30102252960205
    6. 'and' → logprob: -9.30102252960205
    7. ',' → logprob: -9.55102252960205
    8. '                       ' → logprob: -9.92602252960205
    9. '):
' → logprob: -10.17602252960205
    10. ':

' → logprob: -10.17602252960205

Token 522: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003324580378830433
    2. '                       ' → logprob: -6.253324508666992
    3. '               ' → logprob: -8.128324508666992
    4. '                    
' → logprob: -8.128324508666992
    5. '                    ' → logprob: -8.878324508666992
    6. '<|end|>' → logprob: -8.878324508666992
    7. '#' → logprob: -9.628324508666992
    8. ' new' → logprob: -9.753324508666992
    9. '                        
' → logprob: -10.003324508666992
    10. '```' → logprob: -10.003324508666992

Token 523: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.018209880217909813
    2. ' new' → logprob: -4.018209934234619
    3. '                   ' → logprob: -9.893209457397461
    4. '                       ' → logprob: -11.893209457397461
    5. '```' → logprob: -13.518209457397461
    6. '               ' → logprob: -15.018209457397461
    7. '   ' → logprob: -15.143209457397461
    8. '	new' → logprob: -15.518209457397461
    9. '[new' → logprob: -15.768209457397461
    10. '           ' → logprob: -16.51820945739746

Token 524: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -1.9361264946837764e-07
    2. 'Car' → logprob: -16.0
    3. '_c' → logprob: -16.75
    4. 'car' → logprob: -18.625
    5. '_C' → logprob: -18.625
    6. '	car' → logprob: -18.875
    7. '_' → logprob: -19.125
    8. '-car' → logprob: -19.625
    9. '<Car' → logprob: -20.0
    10. '_code' → logprob: -20.625

Token 525: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.625000953674316
    3. '][' → logprob: -16.5
    4. ' [' → logprob: -16.625
    5. '   ' → logprob: -17.125
    6. 'i' → logprob: -17.125
    7. '[ii' → logprob: -17.125
    8. '```' → logprob: -17.75
    9. '[I' → logprob: -17.875
    10. ')[' → logprob: -18.375

Token 526: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08013907074928284
    2. '+' → logprob: -3.20513916015625
    3. '][' → logprob: -3.33013916015625
    4. '[' → logprob: -7.95513916015625
    5. '   ' → logprob: -9.08013916015625
    6. '+i' → logprob: -9.70513916015625
    7. ' [' → logprob: -10.33013916015625
    8. 'i' → logprob: -10.58013916015625
    9. ' +' → logprob: -10.83013916015625
    10. '```' → logprob: -11.33013916015625

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009954140987247229
    2. 'i' → logprob: -7.500995635986328
    3. '+' → logprob: -8.500995635986328
    4. 's' → logprob: -8.500995635986328
    5. '[i' → logprob: -11.125995635986328
    6. '```' → logprob: -11.750995635986328
    7. '][' → logprob: -12.625995635986328
    8. ' ' → logprob: -12.625995635986328
    9. '[' → logprob: -12.625995635986328
    10. '   ' → logprob: -13.625995635986328

Token 528: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.74665766954422
    2. '[s' → logprob: -1.1216576099395752
    3. '[i' → logprob: -1.6216576099395752
    4. '[' → logprob: -7.246657848358154
    5. ')[' → logprob: -7.496657848358154
    6. '>[' → logprob: -7.746657848358154
    7. ' [' → logprob: -8.121657371520996
    8. '   ' → logprob: -8.621657371520996
    9. 's' → logprob: -9.246657371520996
    10. '}[' → logprob: -9.371657371520996

Token 529: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.688212614681106e-05
    2. 'i' → logprob: -11.125017166137695
    3. ' s' → logprob: -13.875017166137695
    4. '   ' → logprob: -14.625017166137695
    5. '`s' → logprob: -15.500017166137695
    6. '[s' → logprob: -15.625017166137695
    7. ''s' → logprob: -16.625017166137695
    8. '```' → logprob: -17.125017166137695
    9. '    ' → logprob: -17.500017166137695
    10. ' ' → logprob: -17.750017166137695

Token 530: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02516845427453518
    2. ']=' → logprob: -3.7751684188842773
    3. '=' → logprob: -7.025168418884277
    4. '][' → logprob: -7.150168418884277
    5. '[s' → logprob: -8.650168418884277
    6. ' ]' → logprob: -10.650168418884277
    7. '[' → logprob: -10.650168418884277
    8. '[i' → logprob: -11.525168418884277
    9. ' =' → logprob: -11.650168418884277
    10. ']==' → logprob: -13.275168418884277

Token 531: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003608505241572857
    2. ' =' → logprob: -5.628608703613281
    3. '[' → logprob: -12.253608703613281
    4. '=s' → logprob: -13.003608703613281
    5. '[s' → logprob: -13.628608703613281
    6. ']=' → logprob: -15.503608703613281
    7. '=None' → logprob: -17.00360870361328
    8. '=[' → logprob: -17.50360870361328
    9. ']' → logprob: -17.62860870361328
    10. '＝' → logprob: -18.12860870361328

Token 532: ' pid' (ID: 23462)
  Prédit: 'pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.0019301822176203132
    2. ' pid' → logprob: -6.251930236816406
    3. '(pid' → logprob: -14.501930236816406
    4. '   ' → logprob: -15.126930236816406
    5. 'car' → logprob: -15.751930236816406
    6. 'uid' → logprob: -16.251930236816406
    7. 'p' → logprob: -16.501930236816406
    8. 'pit' → logprob: -16.626930236816406
    9. 'pi' → logprob: -16.751930236816406
    10. ' ' → logprob: -17.001930236816406

Token 533: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08618621528148651
    2. '<|end|>' → logprob: -2.586186170578003
    3. '
' → logprob: -5.586186408996582
    4. '                    
' → logprob: -7.086186408996582
    5. '				' → logprob: -7.336186408996582
    6. '               ' → logprob: -7.711186408996582
    7. '<|end|>' → logprob: -8.211186408996582
    8. '                    ' → logprob: -8.336186408996582
    9. '```' → logprob: -8.336186408996582
    10. '           ' → logprob: -9.086186408996582

Token 534: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006484557408839464
    2. '<|end|>' → logprob: -5.381484508514404
    3. '```' → logprob: -7.756484508514404
    4. '                    
' → logprob: -7.756484508514404
    5. '               ' → logprob: -8.006484985351562
    6. '           ' → logprob: -9.131484985351562
    7. '				' → logprob: -9.381484985351562
    8. '                    ' → logprob: -9.506484985351562
    9. '
' → logprob: -9.756484985351562
    10. '<|end|>' → logprob: -10.006484985351562

Token 535: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.0015042672166600823
    2. ' new' → logprob: -6.501504421234131
    3. '                   ' → logprob: -13.501503944396973
    4. 'New' → logprob: -14.751503944396973
    5. '   ' → logprob: -16.50150489807129
    6. '_new' → logprob: -16.75150489807129
    7. '	new' → logprob: -16.75150489807129
    8. ' ' → logprob: -18.37650489807129
    9. '                       ' → logprob: -18.50150489807129
    10. '[new' → logprob: -18.87650489807129

Token 536: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.01105170976370573
    2. 'car' → logprob: -4.511051654815674
    3. 'Car' → logprob: -12.761052131652832
    4. ' car' → logprob: -14.761052131652832
    5. '	car' → logprob: -14.886052131652832
    6. '-car' → logprob: -15.386052131652832
    7. 'ocar' → logprob: -16.261051177978516
    8. '.car' → logprob: -17.511051177978516
    9. '_c' → logprob: -18.511051177978516
    10. 'icar' → logprob: -19.386051177978516

Token 537: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[I' → logprob: -14.625000953674316
    3. 'i' → logprob: -15.125000953674316
    4. '[' → logprob: -15.750000953674316
    5. '[new' → logprob: -17.500001907348633
    6. '```' → logprob: -17.625001907348633
    7. '[in' → logprob: -19.000001907348633
    8. '[s' → logprob: -19.250001907348633
    9. '[ip' → logprob: -19.625001907348633
    10. '[ii' → logprob: -19.625001907348633

Token 538: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03818826004862785
    2. '[i' → logprob: -3.4131882190704346
    3. '[s' → logprob: -5.788188457489014
    4. ')[' → logprob: -6.788188457489014
    5. '[' → logprob: -9.288187980651855
    6. '```' → logprob: -9.663187980651855
    7. ']' → logprob: -10.038187980651855
    8. ')][' → logprob: -10.538187980651855
    9. '+' → logprob: -11.163187980651855
    10. '[I' → logprob: -11.288187980651855

Token 539: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.45848218582978e-06
    2. ' s' → logprob: -13.00000286102295
    3. '   ' → logprob: -17.125001907348633
    4. ''s' → logprob: -17.125001907348633
    5. '[s' → logprob: -17.250001907348633
    6. '_s' → logprob: -17.625001907348633
    7. ' ' → logprob: -17.875001907348633
    8. '
' → logprob: -18.250001907348633
    9. '(s' → logprob: -18.500001907348633
    10. '`s' → logprob: -18.500001907348633

Token 540: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03974709287285805
    2. ']=' → logprob: -4.16474723815918
    3. '[s' → logprob: -4.41474723815918
    4. '=' → logprob: -4.91474723815918
    5. '][' → logprob: -5.91474723815918
    6. '[' → logprob: -7.28974723815918
    7. 's' → logprob: -7.78974723815918
    8. '<|end|>' → logprob: -9.16474723815918
    9. ')' → logprob: -11.16474723815918
    10. ' ]' → logprob: -11.28974723815918

Token 541: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000432695698691532
    2. ' =' → logprob: -7.75043249130249
    3. '=None' → logprob: -13.250432968139648
    4. ']' → logprob: -15.750432968139648
    5. ']=' → logprob: -16.00043296813965
    6. '[' → logprob: -17.25043296813965
    7. 'None' → logprob: -18.25043296813965
    8. '=False' → logprob: -19.12543296813965
    9. ' None' → logprob: -19.37543296813965
    10. '<|end|>' → logprob: -20.12543296813965

Token 542: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.836499985889532e-05
    2. ' None' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.125059127807617
    4. '=None' → logprob: -20.625059127807617
    5. '_None' → logprob: -20.750059127807617
    6. '(None' → logprob: -21.125059127807617
    7. ',None' → logprob: -21.500059127807617
    8. '.None' → logprob: -22.000059127807617
    9. 'none' → logprob: -22.125059127807617
    10. '  ' → logprob: -22.625059127807617

Token 543: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016674461076036096
    2. '               ' → logprob: -7.626667499542236
    3. '<|end|>' → logprob: -8.126667022705078
    4. 'm' → logprob: -8.751667022705078
    5. '                    ' → logprob: -8.876667022705078
    6. '				' → logprob: -8.876667022705078
    7. '           ' → logprob: -9.251667022705078
    8. '                    
' → logprob: -9.251667022705078
    9. '
' → logprob: -10.126667022705078
    10. '	               ' → logprob: -10.251667022705078

Token 544: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003609101288020611
    2. '               ' → logprob: -6.2536091804504395
    3. '           ' → logprob: -8.253608703613281
    4. 'm' → logprob: -8.378608703613281
    5. '                    ' → logprob: -8.628608703613281
    6. '				' → logprob: -8.753608703613281
    7. '<|end|>' → logprob: -8.753608703613281
    8. '   ' → logprob: -8.878608703613281
    9. '	               ' → logprob: -9.503608703613281
    10. '	m' → logprob: -9.503608703613281

Token 545: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.704273118884885e-07
    2. ' moved' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.625
    4. '                   ' → logprob: -17.75
    5. 'moving' → logprob: -18.0
    6. '           ' → logprob: -18.375
    7. 'mov' → logprob: -19.125
    8. '	m' → logprob: -19.5
    9. '               ' → logprob: -19.875
    10. ' m' → logprob: -19.875

Token 546: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[p' → logprob: -15.5
    3. '```' → logprob: -17.25
    4. '               ' → logprob: -18.25
    5. '[idx' → logprob: -18.5
    6. ' [' → logprob: -18.625
    7. '[ip' → logprob: -18.75
    8. '           ' → logprob: -18.875
    9. '(pid' → logprob: -19.0
    10. '   ' → logprob: -19.125

Token 547: 'pid' (ID: 19554)
  Prédit: 'pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.0002378673671046272
    2. '[' → logprob: -8.375237464904785
    3. 'True' → logprob: -12.625237464904785
    4. ' pid' → logprob: -13.000237464904785
    5. '(pid' → logprob: -14.250237464904785
    6. 'p' → logprob: -15.625237464904785
    7. '   ' → logprob: -15.750237464904785
    8. '.pid' → logprob: -16.1252384185791
    9. 'pit' → logprob: -16.5002384185791
    10. '           ' → logprob: -16.7502384185791

Token 548: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2557702362537384
    2. '=' → logprob: -1.505770206451416
    3. ']=' → logprob: -5.755770206451416
    4. ' =' → logprob: -7.380770206451416
    5. '[' → logprob: -10.130770683288574
    6. '=True' → logprob: -13.255770683288574
    7. ' ]' → logprob: -13.255770683288574
    8. ')' → logprob: -14.005770683288574
    9. '                   ' → logprob: -14.380770683288574
    10. '   ' → logprob: -15.255770683288574

Token 549: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003180563682690263
    2. ' =' → logprob: -5.753180503845215
    3. '[' → logprob: -13.003180503845215
    4. '=True' → logprob: -14.753180503845215
    5. ']' → logprob: -15.628180503845215
    6. ']=' → logprob: -16.75318145751953
    7. '   ' → logprob: -18.87818145751953
    8. '                   ' → logprob: -19.12818145751953
    9. '           ' → logprob: -19.25318145751953
    10. ')' → logprob: -20.12818145751953

Token 550: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.15310683415737e-05
    2. ' True' → logprob: -10.750021934509277
    3. '=True' → logprob: -20.25002098083496
    4. '(True' → logprob: -20.87502098083496
    5. 'False' → logprob: -23.00002098083496
    6. '.True' → logprob: -23.37502098083496
    7. 'true' → logprob: -24.25002098083496
    8. '_true' → logprob: -25.00002098083496
    9. '   ' → logprob: -25.50002098083496
    10. 'Yes' → logprob: -25.50002098083496

Token 551: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016620856476947665
    2. '    
' → logprob: -6.876662254333496
    3. '                   ' → logprob: -8.501662254333496
    4. 'steps' → logprob: -8.876662254333496
    5. '<|end|>' → logprob: -9.126662254333496
    6. '
' → logprob: -9.751662254333496
    7. '                    
' → logprob: -9.876662254333496
    8. ' steps' → logprob: -10.876662254333496
    9. '  
' → logprob: -11.751662254333496
    10. '       ' → logprob: -11.751662254333496

Token 552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01030866801738739
    2. 'steps' → logprob: -4.885308742523193
    3. ' steps' → logprob: -6.135308742523193
    4. '
' → logprob: -8.260308265686035
    5. '    
' → logprob: -8.385308265686035
    6. '```' → logprob: -10.135308265686035
    7. '  
' → logprob: -12.510308265686035
    8. ' 
' → logprob: -14.885308265686035
    9. '        
' → logprob: -14.885308265686035
    10. '\n' → logprob: -14.885308265686035

Token 553: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' (adapté à ' car') → logprob: -3.106736039626412e-05
    2. ' car' → logprob: -10.750031471252441
    3. '   ' → logprob: -11.625031471252441
    4. 'steps' → logprob: -15.250031471252441
    5. '```' → logprob: -15.750031471252441
    6. '
' → logprob: -16.250030517578125
    7. '    
' → logprob: -17.375030517578125
    8. '	car' → logprob: -17.750030517578125
    9. 'cars' → logprob: -18.625030517578125
    10. ' ' → logprob: -18.750030517578125

Token 554: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0040785204619169235
    2. ' =' → logprob: -5.504078388214111
    3. 'new' → logprob: -16.879077911376953
    4. '[' → logprob: -18.004077911376953
    5. '   ' → logprob: -18.754077911376953
    6. '[new' → logprob: -19.379077911376953
    7. '=new' → logprob: -19.379077911376953
    8. '=

' → logprob: -19.504077911376953
    9. '=
' → logprob: -19.879077911376953
    10. '＝' → logprob: -20.254077911376953

Token 555: ' [' (ID: 723)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.11043681204319
    2. ' [' → logprob: -2.8604369163513184
    3. '[' → logprob: -3.1104369163513184
    4. 'new' → logprob: -5.985436916351318
    5. ' new' → logprob: -8.98543643951416
    6. '[row' → logprob: -9.36043643951416
    7. '[line' → logprob: -13.23543643951416
    8. '[next' → logprob: -14.73543643951416
    9. '   ' → logprob: -14.98543643951416
    10. '[i' → logprob: -15.23543643951416

Token 556: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -7.576873758807778e-05
    2. '[row' → logprob: -9.500075340270996
    3. ' row' → logprob: -14.125075340270996
    4. '[' → logprob: -15.750075340270996
    5. 'new' → logprob: -17.125076293945312
    6. '(row' → logprob: -18.125076293945312
    7. '$row' → logprob: -19.125076293945312
    8. ' [' → logprob: -19.625076293945312
    9. '[new' → logprob: -20.250076293945312
    10. '	row' → logprob: -20.375076293945312

Token 557: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -9.615255839889869e-05
    2. '[:' → logprob: -9.250096321105957
    3. '[:-' → logprob: -17.50009536743164
    4. '[...]' → logprob: -18.00009536743164
    5. '[' → logprob: -18.12509536743164
    6. 'for' → logprob: -19.62509536743164
    7. ' [:' → logprob: -19.87509536743164
    8. '[::-' → logprob: -20.12509536743164
    9. '```' → logprob: -21.00009536743164
    10. ' for' → logprob: -21.12509536743164

Token 558: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008615754544734955
    2. ' for' → logprob: -4.758615970611572
    3. '   ' → logprob: -13.633615493774414
    4. '	for' → logprob: -18.008615493774414
    5. 'new' → logprob: -18.383615493774414
    6. '[' → logprob: -18.633615493774414
    7. ')' → logprob: -18.758615493774414
    8. '       ' → logprob: -19.133615493774414
    9. '```' → logprob: -19.258615493774414
    10. '(for' → logprob: -19.508615493774414

Token 559: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.04871897026896477
    2. 'new' → logprob: -3.0487189292907715
    3. ' row' → logprob: -9.29871940612793
    4. ' new' → logprob: -10.67371940612793
    5. 'range' → logprob: -11.04871940612793
    6. '_new' → logprob: -14.17371940612793
    7. '_' → logprob: -16.54871940612793
    8. 'line' → logprob: -17.29871940612793
    9. '_row' → logprob: -17.67371940612793
    10. 'car' → logprob: -17.67371940612793

Token 560: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.006742254365235567
    2. ' in' → logprob: -5.006742477416992
    3. 'new' → logprob: -10.756742477416992
    4. '   ' → logprob: -12.131742477416992
    5. ' ' → logprob: -16.006742477416992
    6. ' new' → logprob: -17.631742477416992
    7. '
' → logprob: -17.756742477416992
    8. '(new' → logprob: -17.881742477416992
    9. '  ' → logprob: -18.631742477416992
    10. 'i' → logprob: -18.881742477416992

Token 561: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.607391408877447e-05
    2. ' new' → logprob: -10.250036239624023
    3. 'car' → logprob: -14.500036239624023
    4. '   ' → logprob: -16.750036239624023
    5. 'range' → logprob: -17.125036239624023
    6. ' ' → logprob: -18.125036239624023
    7. '[new' → logprob: -18.250036239624023
    8. 'New' → logprob: -18.375036239624023
    9. '
' → logprob: -18.750036239624023
    10. '	new' → logprob: -18.750036239624023

Token 562: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.029775718227028847
    2. 'car' → logprob: -3.529775619506836
    3. 'new' → logprob: -10.779775619506836
    4. 'Car' → logprob: -13.404775619506836
    5. '_new' → logprob: -13.529775619506836
    6. '(car' → logprob: -14.029775619506836
    7. ' car' → logprob: -15.154775619506836
    8. '_c' → logprob: -15.904775619506836
    9. '	car' → logprob: -15.904775619506836
    10. '[' → logprob: -16.404775619506836

Token 563: ']

' (ID: 3144)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2546347379684448
    2. '   ' → logprob: -1.5046347379684448
    3. '    
' → logprob: -7.129634857177734
    4. 'steps' → logprob: -7.129634857177734
    5. ' steps' → logprob: -7.629634857177734
    6. '
' → logprob: -7.754634857177734
    7. '  
' → logprob: -9.379634857177734
    8. ']' → logprob: -10.879634857177734
    9. ' 
' → logprob: -10.879634857177734
    10. '

' → logprob: -11.004634857177734

Token 564: '   ' (ID: 271)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.2055644541978836
    2. '   ' → logprob: -1.7055644989013672
    3. '```' → logprob: -5.705564498901367
    4. '
' → logprob: -7.330564498901367
    5. ' steps' → logprob: -9.455564498901367
    6. '``' → logprob: -10.080564498901367
    7. '    
' → logprob: -10.330564498901367
    8. 'print' → logprob: -13.455564498901367
    9. '.steps' → logprob: -13.455564498901367
    10. '\
' → logprob: -14.205564498901367

Token 565: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' (adapté à ' steps') → logprob: -0.0019486293895170093
    2. '   ' → logprob: -6.251948833465576
    3. ' steps' → logprob: -11.251948356628418
    4. '```' → logprob: -12.251948356628418
    5. '
' → logprob: -13.126948356628418
    6. '``' → logprob: -15.876948356628418
    7. '    
' → logprob: -17.001949310302734
    8. '  ' → logprob: -17.376949310302734
    9. '.steps' → logprob: -19.001949310302734
    10. ' ' → logprob: -19.626949310302734

Token 566: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -8.590104698669165e-05
    2. ' +=' → logprob: -9.375085830688477
    3. '=' → logprob: -15.000085830688477
    4. ']+=' → logprob: -15.125085830688477
    5. '+' → logprob: -15.500085830688477
    6. '```' → logprob: -16.000085830688477
    7. '   ' → logprob: -16.125085830688477
    8. '+="' → logprob: -17.875085830688477
    9. '+='' → logprob: -18.750085830688477
    10. '+=(' → logprob: -19.000085830688477

Token 567: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. ' ' → logprob: -20.62507438659668
    4. '   ' → logprob: -21.00007438659668
    5. '```' → logprob: -22.75007438659668
    6. '+' → logprob: -24.12507438659668
    7. '１' → logprob: -24.75007438659668
    8. '`' → logprob: -24.75007438659668
    9. '2' → logprob: -25.37507438659668
    10. '​' → logprob: -25.50007438659668

Token 568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -22.25
    4. '１' → logprob: -22.625
    5. 'steps' → logprob: -23.0
    6. '   ' → logprob: -23.0
    7. '+' → logprob: -23.375
    8. '۱' → logprob: -23.875
    9. '
' → logprob: -24.0
    10. 's' → logprob: -24.25

Token 569: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.0536883615423e-05
    2. '
' → logprob: -9.750080108642578
    3. ' print' → logprob: -11.250080108642578
    4. '```' → logprob: -12.875080108642578
    5. 'if' → logprob: -13.000080108642578
    6. '#print' → logprob: -13.500080108642578
    7. '<|end|>' → logprob: -13.500080108642578
    8. '#' → logprob: -14.375080108642578
    9. '   ' → logprob: -15.000080108642578
    10. 'for' → logprob: -15.625080108642578

Token 570: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4140441635390744e-05
    2. ' print' → logprob: -11.250014305114746
    3. '#print' → logprob: -14.875014305114746
    4. '```' → logprob: -14.875014305114746
    5. '
' → logprob: -15.500014305114746
    6. '#' → logprob: -16.37501335144043
    7. '<|end|>' → logprob: -16.75001335144043
    8. '(print' → logprob: -17.00001335144043
    9. '.print' → logprob: -17.62501335144043
    10. 'if' → logprob: -18.37501335144043

Token 571: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. ' (' → logprob: -18.25
    3. '(f' → logprob: -19.375
    4. '((' → logprob: -19.75
    5. '()' → logprob: -19.875
    6. 'steps' → logprob: -20.5
    7. '(step' → logprob: -20.5
    8. '(
' → logprob: -21.0
    9. '('' → logprob: -21.25
    10. ' steps' → logprob: -21.75

Token 572: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: 0.0
    2. ' steps' → logprob: -17.75
    3. 'step' → logprob: -23.375
    4. ')' → logprob: -23.75
    5. 'Steps' → logprob: -24.0
    6. '.steps' → logprob: -24.125
    7. '   ' → logprob: -24.25
    8. '(' → logprob: -24.5
    9. '_steps' → logprob: -24.75
    10. 'esteps' → logprob: -25.625

Token 573: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.375
    3. '+' → logprob: -16.375
    4. ')`' → logprob: -17.375
    5. '))' → logprob: -17.875
    6. ')}' → logprob: -18.125
    7. ')
' → logprob: -19.125
    8. ')#' → logprob: -20.25
    9. '```' → logprob: -20.375
    10. '),' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 571
Tokens correctement prédits (1ère position, stricte): 198
Tokens correctement prédits (1ère position, avec adaptation): 213
Tokens correctement prédits (top 10): 448
Précision stricte (1ère position): 34.68%
Précision adaptée (1ère position): 37.30%
Précision (top 10): 78.46%
================================================================================
