================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:56:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def collatz_steps(n):
    steps = 0
    while n != 1:
        if n % 2 == 0:
            n //= 2
        else:
            n = 3 * n + 1
        steps += 1
    return steps

while True:
    n = int(input())
    if n == 0:
        break
    print(collatz_steps(n))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' coll' (ID: 6110)
  → Token d'amorce (pas de prédiction)

Token 2: 'atz' (ID: 9222)
  → Token d'amorce (pas de prédiction)

Token 3: '_steps' (ID: 52120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027089344337582588
    2. '_' → logprob: -3.6520893573760986
    3. '_(' → logprob: -8.02708911895752
    4. '(_' → logprob: -8.52708911895752
    5. '```' → logprob: -9.77708911895752
    6. '(_:' → logprob: -9.90208911895752
    7. ' (' → logprob: -10.77708911895752
    8. '(_)' → logprob: -10.90208911895752
    9. '(:' → logprob: -11.02708911895752
    10. '(n' → logprob: -11.40208911895752

Token 4: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009381395066156983
    2. '_' → logprob: -7.7509379386901855
    3. '(:' → logprob: -8.125938415527344
    4. '(_:' → logprob: -9.250938415527344
    5. '```' → logprob: -10.375938415527344
    6. '(_' → logprob: -10.875938415527344
    7. '():' → logprob: -11.500938415527344
    8. '_:' → logprob: -11.750938415527344
    9. ':' → logprob: -12.375938415527344
    10. '(
' → logprob: -12.375938415527344

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00976116769015789
    2. ')' → logprob: -5.134761333465576
    3. ':' → logprob: -5.634761333465576
    4. '```' → logprob: -8.884760856628418
    5. '):
' → logprob: -9.634760856628418
    6. '   ' → logprob: -11.634760856628418
    7. ''):' → logprob: -11.634760856628418
    8. '=' → logprob: -12.134760856628418
    9. '`:' → logprob: -12.634760856628418
    10. '[' → logprob: -12.759760856628418

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007001535966992378
    2. '():' → logprob: -6.1320013999938965
    3. '":' → logprob: -6.7570013999938965
    4. '':' → logprob: -6.7570013999938965
    5. '   ' → logprob: -7.2570013999938965
    6. '```' → logprob: -7.3820013999938965
    7. '):' → logprob: -7.7570013999938965
    8. ':
' → logprob: -8.507001876831055
    9. '`:' → logprob: -8.882001876831055
    10. '':'' → logprob: -9.382001876831055

Token 7: ' steps' (ID: 10331)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5639501810073853
    2. '   ' → logprob: -0.9389501810073853
    3. '``' → logprob: -4.438950061798096
    4. '    ' → logprob: -4.938950061798096
    5. '\' → logprob: -5.063950061798096
    6. '\n' → logprob: -5.688950061798096
    7. ' if' → logprob: -6.188950061798096
    8. '`' → logprob: -6.188950061798096
    9. '       ' → logprob: -6.688950061798096
    10. '    
' → logprob: -6.938950061798096

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3003776967525482
    2. '=' → logprob: -2.050377607345581
    3. '_' → logprob: -2.175377607345581
    4. ' +=' → logprob: -4.67537784576416
    5. ' ' → logprob: -5.42537784576416
    6. '_space' → logprob: -6.92537784576416
    7. ')' → logprob: -7.80037784576416
    8. '   ' → logprob: -8.17537784576416
    9. 'space' → logprob: -8.30037784576416
    10. '  ' → logprob: -8.42537784576416

Token 9: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5375476479530334
    2. '0' → logprob: -0.9125476479530334
    3. ' n' → logprob: -4.912547588348389
    4. '1' → logprob: -5.037547588348389
    5. 'n' → logprob: -7.662547588348389
    6. '   ' → logprob: -12.412548065185547
    7. '```' → logprob: -13.912548065185547
    8. '  ' → logprob: -15.037548065185547
    9. '[]' → logprob: -15.037548065185547
    10. '`' → logprob: -15.225048065185547

Token 10: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029875844484195113
    2. '1' → logprob: -8.375298500061035
    3. 'n' → logprob: -10.125298500061035
    4. ' ' → logprob: -10.500298500061035
    5. ' n' → logprob: -15.500298500061035
    6. '[]' → logprob: -15.875298500061035
    7. '[' → logprob: -16.50029945373535
    8. '```' → logprob: -16.50029945373535
    9. '[n' → logprob: -17.25029945373535
    10. '`' → logprob: -17.37529945373535

Token 11: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6957258582115173
    2. '\n' → logprob: -0.9457258582115173
    3. '\' → logprob: -2.695725917816162
    4. '``' → logprob: -4.320725917816162
    5. '   ' → logprob: -4.570725917816162
    6. '
' → logprob: -5.320725917816162
    7. '    
' → logprob: -5.445725917816162
    8. '`' → logprob: -6.070725917816162
    9. '  
' → logprob: -6.445725917816162
    10. '   
' → logprob: -6.570725917816162

Token 12: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3702777326107025
    2. '   ' → logprob: -1.995277762413025
    3. '\n' → logprob: -2.4952776432037354
    4. '``' → logprob: -3.7452776432037354
    5. '\' → logprob: -3.9952776432037354
    6. '    
' → logprob: -3.9952776432037354
    7. '
' → logprob: -4.1202778816223145
    8. '`' → logprob: -5.8702778816223145
    9. ' while' → logprob: -5.8702778816223145
    10. '  
' → logprob: -6.2452778816223145

Token 13: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18832942843437195
    2. ' while' → logprob: -2.1883294582366943
    3. '```' → logprob: -3.1883294582366943
    4. 'while' (adapté à ' while') → logprob: -4.688329219818115
    5. '\n' → logprob: -5.938329219818115
    6. ' if' → logprob: -6.063329219818115
    7. '    
' → logprob: -6.938329219818115
    8. '\' → logprob: -7.188329219818115
    9. 'if' → logprob: -7.438329219818115
    10. '    ' → logprob: -7.688329219818115

Token 14: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0052414643578231335
    2. 'n' → logprob: -5.255241394042969
    3. ' ' → logprob: -11.880241394042969
    4. ' not' → logprob: -15.255241394042969
    5. ' ' → logprob: -15.255241394042969
    6. '	n' → logprob: -16.00524139404297
    7. '_n' → logprob: -16.38024139404297
    8. '(n' → logprob: -17.38024139404297
    9. ')n' → logprob: -18.13024139404297
    10. '<n' → logprob: -18.25524139404297

Token 15: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.010908572934567928
    2. '>' → logprob: -4.635908603668213
    3. ' !=' → logprob: -7.385908603668213
    4. ' %' → logprob: -7.885908603668213
    5. '%' → logprob: -9.510908126831055
    6. ' ' → logprob: -10.010908126831055
    7. '<|end|>' → logprob: -11.135908126831055
    8. '```' → logprob: -12.260908126831055
    9. ' <=' → logprob: -13.010908126831055
    10. '!=' → logprob: -13.135908126831055

Token 16: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17975039780139923
    2. ' ' → logprob: -1.8047504425048828
    3. '0' → logprob: -12.804750442504883
    4. ' ' → logprob: -13.679750442504883
    5. '   ' → logprob: -13.804750442504883
    6. '```' → logprob: -15.742250442504883
    7. '' → logprob: -15.804750442504883
    8. '  ' → logprob: -15.867250442504883
    9. '=' → logprob: -16.492250442504883
    10. '	' → logprob: -17.304750442504883

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.875009536743164
    3. '0' → logprob: -13.000009536743164
    4. '```' → logprob: -17.000009536743164
    5. '' → logprob: -19.125009536743164
    6. '   ' → logprob: -19.750009536743164
    7. '`' → logprob: -20.875009536743164
    8. '2' → logprob: -20.875009536743164
    9. '=' → logprob: -21.000009536743164
    10. ' ' → logprob: -21.250009536743164

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022070204431656748
    2. ':
' → logprob: -8.50022029876709
    3. ' :' → logprob: -11.50022029876709
    4. '):' → logprob: -12.87522029876709
    5. ':\' → logprob: -13.50022029876709
    6. '':' → logprob: -13.75022029876709
    7. ':**' → logprob: -14.37522029876709
    8. '   ' → logprob: -15.25022029876709
    9. ':return' → logprob: -15.50022029876709
    10. '':'' → logprob: -15.75022029876709

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5330273509025574
    2. ':' → logprob: -1.6580274105072021
    3. ' ' → logprob: -2.408027410507202
    4. '    ' → logprob: -2.783027410507202
    5. '   ' → logprob: -3.408027410507202
    6. ':
' → logprob: -4.908027172088623
    7. '<|end|>' → logprob: -5.033027172088623
    8. ' :' → logprob: -5.283027172088623
    9. ''' → logprob: -5.783027172088623
    10. '\' → logprob: -6.283027172088623

Token 20: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3347923457622528
    2. '   ' → logprob: -2.084792375564575
    3. '\n' → logprob: -2.584792375564575
    4. '    ' → logprob: -3.459792375564575
    5. ' ' → logprob: -4.334792137145996
    6. '\' → logprob: -4.584792137145996
    7. '        ' → logprob: -5.209792137145996
    8. '<|end|>' → logprob: -5.209792137145996
    9. ' \' → logprob: -5.584792137145996
    10. ' 
' → logprob: -5.709792137145996

Token 21: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25585272908210754
    2. ' ' → logprob: -1.5058526992797852
    3. 'n' → logprob: -5.630852699279785
    4. ' (' → logprob: -8.880852699279785
    5. '(n' → logprob: -9.380852699279785
    6. '<|end|>' → logprob: -9.755852699279785
    7. '  ' → logprob: -11.255852699279785
    8. '    ' → logprob: -11.630852699279785
    9. '(' → logprob: -12.755852699279785
    10. ' ' → logprob: -12.880852699279785

Token 22: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.018351983278989792
    2. '%' → logprob: -4.018352031707764
    3. ' ' → logprob: -8.518351554870605
    4. '<|end|>' → logprob: -13.893351554870605
    5. ' ' → logprob: -14.518351554870605
    6. '  ' → logprob: -15.643351554870605
    7. ' %#' → logprob: -15.643351554870605
    8. '<|end|>' → logprob: -16.643352508544922
    9. ' &' → logprob: -17.018352508544922
    10. '   ' → logprob: -17.143352508544922

Token 23: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12692978978157043
    2. ' ' → logprob: -2.126929759979248
    3. '```' → logprob: -14.001930236816406
    4. '3' → logprob: -14.376930236816406
    5. ' ' → logprob: -16.626930236816406
    6. '  ' → logprob: -17.126930236816406
    7. '   ' → logprob: -17.564430236816406
    8. '<|end|>' → logprob: -17.564430236816406
    9. '=' → logprob: -17.626930236816406
    10. '1' → logprob: -18.064430236816406

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -14.75001049041748
    4. '3' → logprob: -16.562511444091797
    5. '=' → logprob: -17.750011444091797
    6. '   ' → logprob: -17.875011444091797
    7. '۲' → logprob: -17.937511444091797
    8. '{' → logprob: -18.062511444091797
    9. '२' → logprob: -18.062511444091797
    10. '...' → logprob: -18.375011444091797

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008241736330091953
    2. '==' → logprob: -4.883241653442383
    3. ' ' → logprob: -7.383241653442383
    4. ' =' → logprob: -12.633241653442383
    5. '=' → logprob: -12.633241653442383
    6. ':' → logprob: -13.258241653442383
    7. '0' → logprob: -13.508241653442383
    8. ' ' → logprob: -13.508241653442383
    9. ' !=' → logprob: -13.633241653442383
    10. ')==' → logprob: -14.633241653442383

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868766129016876
    2. ' ' → logprob: -1.1368765830993652
    3. '2' → logprob: -12.261877059936523
    4. '1' → logprob: -14.761877059936523
    5. '```' → logprob: -15.761877059936523
    6. '=' → logprob: -16.261877059936523
    7. '<|end|>' → logprob: -16.574377059936523
    8. '==' → logprob: -16.761877059936523
    9. ' ' → logprob: -17.199377059936523
    10. '  ' → logprob: -17.324377059936523

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009762344881892204
    2. ' ' → logprob: -4.634762287139893
    3. '2' → logprob: -12.25976276397705
    4. '1' → logprob: -13.63476276397705
    5. '```' → logprob: -16.259761810302734
    6. ' ' → logprob: -16.759761810302734
    7. '  ' → logprob: -17.009761810302734
    8. '   ' → logprob: -17.447261810302734
    9. '۰' → logprob: -17.572261810302734
    10. '==' → logprob: -18.072261810302734

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018486743792891502
    2. ' :' → logprob: -6.8768486976623535
    3. ':
' → logprob: -7.2518486976623535
    4. '):' → logprob: -9.876848220825195
    5. '       ' → logprob: -10.751848220825195
    6. '           ' → logprob: -12.001848220825195
    7. '<|end|>' → logprob: -12.251848220825195
    8. ':n' → logprob: -12.376848220825195
    9. ' :
' → logprob: -12.626848220825195
    10. ':return' → logprob: -13.001848220825195

Token 29: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10964592546224594
    2. '\' → logprob: -3.8596458435058594
    3. '       ' → logprob: -3.8596458435058594
    4. 'n' → logprob: -3.8596458435058594
    5. '\n' → logprob: -4.859645843505859
    6. ':' → logprob: -4.984645843505859
    7. ' n' → logprob: -5.109645843505859
    8. '            
' → logprob: -5.484645843505859
    9. '(n' → logprob: -6.234645843505859
    10. '        ' → logprob: -6.234645843505859

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1001378744840622
    2. 'n' (adapté à ' n') → logprob: -2.475137948989868
    3. '           ' → logprob: -4.725137710571289
    4. '               ' → logprob: -7.100137710571289
    5. '\n' → logprob: -7.475137710571289
    6. '\' → logprob: -7.850137710571289
    7. ' 
' → logprob: -8.350137710571289
    8. '       ' → logprob: -9.600137710571289
    9. ' ' → logprob: -10.100137710571289
    10. ' \' → logprob: -10.725137710571289

Token 31: ' //' (ID: 602)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04664039611816406
    2. ' /=' → logprob: -3.796640396118164
    3. ' //' → logprob: -4.296640396118164
    4. '=' → logprob: -4.796640396118164
    5. '//=' → logprob: -6.796640396118164
    6. ' ' → logprob: -9.546640396118164
    7. '//' → logprob: -10.796640396118164
    8. ' >>=' → logprob: -11.421640396118164
    9. ' /' → logprob: -11.921640396118164
    10. '/=' → logprob: -12.046640396118164

Token 32: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.896309739408025e-07
    2. '=}' → logprob: -14.875000953674316
    3. '2' → logprob: -15.125000953674316
    4. '=.' → logprob: -17.25
    5. ' =' → logprob: -17.5
    6. '=

' → logprob: -17.75
    7. '=n' → logprob: -18.5
    8. '=_' → logprob: -18.5
    9. ' ' → logprob: -18.5
    10. '4' → logprob: -18.625

Token 33: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003806257154792547
    2. ' ' → logprob: -7.875380516052246
    3. '```' → logprob: -15.250380516052246
    4. '   ' → logprob: -15.500380516052246
    5. ' ' → logprob: -17.500381469726562
    6. '۲' → logprob: -18.250381469726562
    7. '２' → logprob: -18.500381469726562
    8. '  ' → logprob: -18.750381469726562
    9. '`' → logprob: -19.000381469726562
    10. '    ' → logprob: -19.187881469726562

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.875017166137695
    4. '```' → logprob: -18.000017166137695
    5. '۲' → logprob: -18.875017166137695
    6. '  ' → logprob: -19.000017166137695
    7. '２' → logprob: -19.125017166137695
    8. ' ' → logprob: -20.125017166137695
    9. '২' → logprob: -20.250017166137695
    10. '२' → logprob: -20.375017166137695

Token 35: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6570181250572205
    2. 'else' → logprob: -0.9070181250572205
    3. '\n' → logprob: -3.2820181846618652
    4. ' else' → logprob: -3.4070181846618652
    5. '
' → logprob: -5.407018184661865
    6. '        
' → logprob: -7.532018184661865
    7. '```' → logprob: -7.532018184661865
    8. '\' → logprob: -7.782018184661865
    9. 'n' → logprob: -8.407017707824707
    10. '<|end|>' → logprob: -8.532017707824707

Token 36: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5804625153541565
    2. '       ' → logprob: -1.2054624557495117
    3. ' else' → logprob: -2.7054624557495117
    4. '
' → logprob: -3.5804624557495117
    5. '\n' → logprob: -3.7054624557495117
    6. '        
' → logprob: -4.580462455749512
    7. ' 
' → logprob: -5.330462455749512
    8. '\' → logprob: -6.330462455749512
    9. '    
' → logprob: -6.580462455749512
    10. '```' → logprob: -6.580462455749512

Token 37: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.254763126373291
    2. 'else' (adapté à ' else') → logprob: -1.504763126373291
    3. '       ' → logprob: -5.879763126373291
    4. '   ' → logprob: -11.879762649536133
    5. '        ' → logprob: -12.004762649536133
    6. '	else' → logprob: -12.129762649536133
    7. ' ' → logprob: -12.504762649536133
    8. '    ' → logprob: -12.754762649536133
    9. ' ' → logprob: -12.879762649536133
    10. '```' → logprob: -13.754762649536133

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018200397491455078
    2. ':
' → logprob: -4.018200397491455
    3. ' :' → logprob: -11.268199920654297
    4. ':n' → logprob: -11.518199920654297
    5. 'n' → logprob: -11.893199920654297
    6. '           ' → logprob: -12.018199920654297
    7. ' :
' → logprob: -12.518199920654297
    8. ' n' → logprob: -12.643199920654297
    9. ':

' → logprob: -12.893199920654297
    10. ':
' → logprob: -14.018199920654297

Token 39: '           ' (ID: 352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07083439826965332
    2. '           ' → logprob: -3.0708343982696533
    3. 'n' → logprob: -3.8208343982696533
    4. ' ' → logprob: -10.945834159851074
    5. ' ' → logprob: -10.945834159851074
    6. '       ' → logprob: -11.320834159851074
    7. '   ' → logprob: -11.820834159851074
    8. ' 
' → logprob: -12.070834159851074
    9. '            
' → logprob: -12.320834159851074
    10. '3' → logprob: -12.320834159851074

Token 40: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5760127305984497
    2. 'n' (adapté à ' n') → logprob: -0.8260127305984497
    3. '3' → logprob: -9.57601261138916
    4. '           ' → logprob: -13.57601261138916
    5. '   ' → logprob: -13.57601261138916
    6. ' ' → logprob: -14.20101261138916
    7. '       ' → logprob: -15.82601261138916
    8. '7' → logprob: -15.82601261138916
    9. '6' → logprob: -16.326013565063477
    10. '4' → logprob: -16.451013565063477

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2522435486316681
    2. ' =' → logprob: -1.5022435188293457
    3. '*' → logprob: -8.127243995666504
    4. '*=' → logprob: -11.627243995666504
    5. ' ' → logprob: -12.127243995666504
    6. ' *' → logprob: -12.627243995666504
    7. ' *=' → logprob: -14.377243995666504
    8. '3' → logprob: -14.752243995666504
    9. '＝' → logprob: -16.502243041992188
    10. '**' → logprob: -16.752243041992188

Token 42: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.17992229759693146
    2. ' ' → logprob: -1.804922342300415
    3. 'n' → logprob: -9.179922103881836
    4. ' n' → logprob: -9.554922103881836
    5. '```' → logprob: -13.804922103881836
    6. '7' → logprob: -14.804922103881836
    7. '6' → logprob: -14.804922103881836
    8. '1' → logprob: -14.804922103881836
    9. '(' → logprob: -14.992422103881836
    10. '   ' → logprob: -15.054922103881836

Token 43: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00010509284038562328
    2. 'n' → logprob: -9.375104904174805
    3. ' ' → logprob: -10.875104904174805
    4. '```' → logprob: -14.500104904174805
    5. '(' → logprob: -14.750104904174805
    6. '   ' → logprob: -16.000104904174805
    7. '1' → logprob: -17.000104904174805
    8. '7' → logprob: -17.125104904174805
    9. ' n' → logprob: -17.250104904174805
    10. '6' → logprob: -17.250104904174805

Token 44: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07532799988985062
    2. '*n' → logprob: -3.2003281116485596
    3. '*' → logprob: -3.4503281116485596
    4. 'n' → logprob: -9.95032787322998
    5. ' ' → logprob: -10.70032787322998
    6. '*x' → logprob: -13.45032787322998
    7. '*object' → logprob: -13.82532787322998
    8. ' n' → logprob: -14.32532787322998
    9. '    ' → logprob: -14.95032787322998
    10. '   ' → logprob: -14.95032787322998

Token 45: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31326204538345337
    2. ' n' → logprob: -1.3132619857788086
    3. ' ' → logprob: -15.563261985778809
    4. '```' → logprob: -16.813262939453125
    5. '	n' → logprob: -17.063262939453125
    6. ' ' → logprob: -18.188262939453125
    7. ' ```' → logprob: -18.688262939453125
    8. ')n' → logprob: -19.563262939453125
    9. '    ' → logprob: -19.938262939453125
    10. '<|end|>' → logprob: -20.188262939453125

Token 46: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12693209946155548
    2. '+' → logprob: -2.126932144165039
    3. ' ' → logprob: -12.876932144165039
    4. ' plus' → logprob: -14.501932144165039
    5. '```' → logprob: -14.751932144165039
    6. '1' → logprob: -15.001932144165039
    7. '＋' → logprob: -16.37693214416504
    8. ' +
' → logprob: -17.00193214416504
    9. 'plus' → logprob: -17.87693214416504
    10. '   ' → logprob: -18.00193214416504

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '```' → logprob: -18.633615493774414
    4. ' ' → logprob: -19.258615493774414
    5. '7' → logprob: -20.258615493774414
    6. '    ' → logprob: -20.383615493774414
    7. '  ' → logprob: -21.258615493774414
    8. '<|end|>' → logprob: -21.383615493774414
    9. '۱' → logprob: -21.571115493774414
    10. '   ' → logprob: -21.696115493774414

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -17.375003814697266
    4. '۱' → logprob: -19.750003814697266
    5. '১' → logprob: -20.375003814697266
    6. '１' → logprob: -20.375003814697266
    7. '7' → logprob: -20.687503814697266
    8. '१' → logprob: -20.875003814697266
    9. ' ' → logprob: -20.937503814697266
    10. '2' → logprob: -21.125003814697266

Token 49: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05199822783470154
    2. '        
' → logprob: -3.6769981384277344
    3. '
' → logprob: -4.551998138427734
    4. '\n' → logprob: -4.801998138427734
    5. '\' → logprob: -6.051998138427734
    6. '```' → logprob: -6.676998138427734
    7. '           ' → logprob: -7.801998138427734
    8. '    
' → logprob: -7.801998138427734
    9. '``' → logprob: -7.926998138427734
    10. '   ' → logprob: -8.176998138427734

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002029634779319167
    2. '
' → logprob: -7.3770294189453125
    3. '        
' → logprob: -7.5020294189453125
    4. '```' → logprob: -7.5020294189453125
    5. '           ' → logprob: -9.752029418945312
    6. '   ' → logprob: -9.877029418945312
    7. '``' → logprob: -10.002029418945312
    8. ' steps' → logprob: -10.377029418945312
    9. '\n' → logprob: -10.752029418945312
    10. '    
' → logprob: -10.877029418945312

Token 51: ' steps' (ID: 10331)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6385652422904968
    2. 'steps' (adapté à ' steps') → logprob: -1.1385653018951416
    3. ' steps' → logprob: -1.8885653018951416
    4. '   ' → logprob: -8.763565063476562
    5. '        
' → logprob: -9.138565063476562
    6. '```' → logprob: -9.763565063476562
    7. '
' → logprob: -11.388565063476562
    8. '``' → logprob: -11.638565063476562
    9. '_steps' → logprob: -11.763565063476562
    10. ' 
' → logprob: -12.138565063476562

Token 52: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.15705278515815735
    2. '+=' → logprob: -2.282052755355835
    3. '+' → logprob: -3.157052755355835
    4. '=' → logprob: -7.407052993774414
    5. '<|end|>' → logprob: -9.782052993774414
    6. ' +' → logprob: -10.907052993774414
    7. ' =' → logprob: -11.907052993774414
    8. '++' → logprob: -11.907052993774414
    9. '```' → logprob: -12.157052993774414
    10. ' ' → logprob: -12.907052993774414

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.751171112060547
    4. ' ' → logprob: -19.876171112060547
    5. '```' → logprob: -19.876171112060547
    6. '       ' → logprob: -22.001171112060547
    7. '  ' → logprob: -22.251171112060547
    8. '' → logprob: -22.376171112060547
    9. '۱' → logprob: -22.376171112060547
    10. '    ' → logprob: -22.376171112060547

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -21.125
    5. '۱' → logprob: -22.5
    6. '１' → logprob: -23.0
    7. '१' → logprob: -23.25
    8. '' → logprob: -23.25
    9. '১' → logprob: -23.625
    10. '`' → logprob: -23.6875

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23181267082691193
    2. '
' → logprob: -1.9818127155303955
    3. ' return' → logprob: -2.9818127155303955
    4. 'return' → logprob: -4.356812477111816
    5. '\n' → logprob: -6.106812477111816
    6. '    
' → logprob: -6.481812477111816
    7. ' ' → logprob: -7.856812477111816
    8. '	return' → logprob: -8.106812477111816
    9. '```' → logprob: -8.606812477111816
    10. '  
' → logprob: -8.731812477111816

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1832589954137802
    2. ' return' → logprob: -2.1832590103149414
    3. 'return' → logprob: -3.0582590103149414
    4. ' ' → logprob: -5.808259010314941
    5. '
' → logprob: -6.183259010314941
    6. '    
' → logprob: -6.683259010314941
    7. '	return' → logprob: -8.058259010314941
    8. '  
' → logprob: -8.433259010314941
    9. '```' → logprob: -8.558259010314941
    10. ' 
' → logprob: -8.683259010314941

Token 57: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.306905061006546
    2. '   ' → logprob: -1.5569050312042236
    3. ' return' → logprob: -2.9319050312042236
    4. ':return' → logprob: -9.806904792785645
    5. '```' → logprob: -10.056904792785645
    6. '	return' → logprob: -10.181904792785645
    7. '       ' → logprob: -11.306904792785645
    8. '    ' → logprob: -11.431904792785645
    9. ' ' → logprob: -11.681904792785645
    10. 'r' → logprob: -11.806904792785645

Token 58: ' steps' (ID: 10331)
  Prédit: ' steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.001502598519437015
    2. 'steps' → logprob: -6.501502513885498
    3. ' ' → logprob: -15.501502990722656
    4. '_steps' → logprob: -17.501502990722656
    5. ' ' → logprob: -17.626502990722656
    6. ' step' → logprob: -18.001502990722656
    7. 'Steps' → logprob: -18.751502990722656
    8. ' pasos' → logprob: -19.251502990722656
    9. ' Steps' → logprob: -19.876502990722656
    10. '.steps' → logprob: -19.876502990722656

Token 59: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: 'while' (ID: 7032)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7611851096153259
    2. '
' → logprob: -1.5111851692199707
    3. '<|end|>' → logprob: -2.1361851692199707
    4. '\n' → logprob: -2.7611851692199707
    5. '```' → logprob: -3.0111851692199707
    6. 'n' → logprob: -3.2611851692199707
    7. '' → logprob: -4.886185169219971
    8. '\' → logprob: -5.011185169219971
    9. 'newline' → logprob: -5.261185169219971
    10. ')' → logprob: -5.511185169219971

Token 61: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5143567323684692
    2. ' n' → logprob: -1.1393567323684692
    3. ' True' → logprob: -2.5143566131591797
    4. ' not' → logprob: -7.63935661315918
    5. ' space' → logprob: -7.76435661315918
    6. '  ' → logprob: -10.01435661315918
    7. ' isinstance' → logprob: -10.38935661315918
    8. ' user' → logprob: -10.38935661315918
    9. ' i' → logprob: -10.51435661315918
    10. ' (' → logprob: -10.63935661315918

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03675695136189461
    2. ' :' → logprob: -3.661756992340088
    3. '():' → logprob: -5.536756992340088
    4. '(' → logprob: -5.536756992340088
    5. '   ' → logprob: -6.411756992340088
    6. '):' → logprob: -8.78675651550293
    7. ' (' → logprob: -8.91175651550293
    8. '<|end|>' → logprob: -9.41175651550293
    9. ':
' → logprob: -9.66175651550293
    10. '  ' → logprob: -9.91175651550293

Token 63: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6640646457672119
    2. '   ' → logprob: -1.414064645767212
    3. ' 
' → logprob: -1.914064645767212
    4. '    
' → logprob: -3.539064645767212
    5. '    ' → logprob: -4.164064407348633
    6. ' n' → logprob: -4.789064407348633
    7. ' input' → logprob: -4.914064407348633
    8. 'n' → logprob: -5.414064407348633
    9. ' )' → logprob: -5.539064407348633
    10. ' (' → logprob: -5.664064407348633

Token 64: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.29091140627861023
    2. 'n' (adapté à ' n') → logprob: -2.2909114360809326
    3. ' try' → logprob: -2.4159114360809326
    4. '   ' → logprob: -3.5409114360809326
    5. ' user' → logprob: -3.9159114360809326
    6. ' inp' → logprob: -4.9159111976623535
    7. ' number' → logprob: -6.6659111976623535
    8. 'try' → logprob: -6.9159111976623535
    9. ' input' → logprob: -7.2909111976623535
    10. '    
' → logprob: -7.2909111976623535

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00103686039801687
    2. '=' → logprob: -6.876036643981934
    3. ' ' → logprob: -12.751036643981934
    4. '=int' → logprob: -15.251036643981934
    5. 'space' → logprob: -15.376036643981934
    6. 's' → logprob: -15.876036643981934
    7. '=input' → logprob: -16.25103759765625
    8. '_' → logprob: -16.37603759765625
    9. '  ' → logprob: -16.50103759765625
    10. '.' → logprob: -17.25103759765625

Token 66: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02278822660446167
    2. 'int' → logprob: -4.147788047790527
    3. ' input' → logprob: -5.022788047790527
    4. 'input' → logprob: -9.022788047790527
    5. ' ' → logprob: -10.772788047790527
    6. ' in' → logprob: -13.647788047790527
    7. '=int' → logprob: -14.397788047790527
    8. '(int' → logprob: -15.147788047790527
    9. '	int' → logprob: -15.272788047790527
    10. '  ' → logprob: -15.397788047790527

Token 67: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20143136382102966
    2. '(' → logprob: -1.701431393623352
    3. 'input' → logprob: -11.201431274414062
    4. '(
' → logprob: -13.451431274414062
    5. '()' → logprob: -13.451431274414062
    6. '=input' → logprob: -14.701431274414062
    7. '(

' → logprob: -14.701431274414062
    8. ' input' → logprob: -15.451431274414062
    9. '<input' → logprob: -15.576431274414062
    10. ' (' → logprob: -15.826431274414062

Token 68: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7127565145492554
    2. '(' → logprob: -1.8377565145492554
    3. '("("' → logprob: -2.087756633758545
    4. '("' → logprob: -2.212756633758545
    5. '('' → logprob: -2.212756633758545
    6. '(">' → logprob: -5.962756633758545
    7. '())' → logprob: -6.087756633758545
    8. '("")' → logprob: -6.712756633758545
    9. '("(' → logprob: -6.962756633758545
    10. '(""))' → logprob: -7.712756633758545

Token 69: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17570224404335022
    2. ' ' → logprob: -2.6757023334503174
    3. '<|end|>' → logprob: -2.9257023334503174
    4. 'if' → logprob: -4.300702095031738
    5. '    ' → logprob: -4.800702095031738
    6. '   ' → logprob: -4.800702095031738
    7. ' 
' → logprob: -6.050702095031738
    8. '<|end|>' → logprob: -6.300702095031738
    9. ')' → logprob: -6.425702095031738
    10. '  
' → logprob: -7.550702095031738

Token 70: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.015281639993190765
    2. ' ' → logprob: -4.640281677246094
    3. 'if' (adapté à ' if') → logprob: -5.265281677246094
    4. '    ' → logprob: -9.390281677246094
    5. ' print' → logprob: -9.765281677246094
    6. '   ' → logprob: -9.890281677246094
    7. '<|end|>' → logprob: -9.890281677246094
    8. 'print' → logprob: -10.890281677246094
    9. ' )' → logprob: -11.015281677246094
    10. ')' → logprob: -11.765281677246094

Token 71: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -8.73314929776825e-05
    2. ' not' → logprob: -9.62508773803711
    3. 'n' → logprob: -11.00008773803711
    4. ' ' → logprob: -12.37508773803711
    5. ' ' → logprob: -16.12508773803711
    6. '	n' → logprob: -16.50008773803711
    7. 'not' → logprob: -19.12508773803711
    8. '<|end|>' → logprob: -19.12508773803711
    9. ' н' → logprob: -19.37508773803711
    10. '  ' → logprob: -19.62508773803711

Token 72: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4580365717411041
    2. ' ==' → logprob: -1.0830365419387817
    3. '<=' → logprob: -4.083036422729492
    4. '==' → logprob: -4.583036422729492
    5. ' ' → logprob: -6.958036422729492
    6. ' <' → logprob: -7.208036422729492
    7. ' >' → logprob: -9.708036422729492
    8. '<|end|>' → logprob: -10.708036422729492
    9. '<' → logprob: -10.958036422729492
    10. '>' → logprob: -11.208036422729492

Token 73: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34844502806663513
    2. '0' → logprob: -1.2234450578689575
    3. ' -' → logprob: -15.848444938659668
    4. '-' → logprob: -16.098445892333984
    5. ')' → logprob: -16.473445892333984
    6. ' )' → logprob: -17.160945892333984
    7. ' ' → logprob: -17.223445892333984
    8. '  ' → logprob: -17.285945892333984
    9. '1' → logprob: -17.910945892333984
    10. '    ' → logprob: -18.035945892333984

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004851306148339063
    2. ' ' → logprob: -7.750484943389893
    3. '-' → logprob: -9.87548542022705
    4. ' -' → logprob: -13.00048542022705
    5. '   ' → logprob: -15.81298542022705
    6. '```' → logprob: -15.81298542022705
    7. '  ' → logprob: -16.000484466552734
    8. ')' → logprob: -16.062984466552734
    9. '1' → logprob: -16.062984466552734
    10. '    ' → logprob: -17.250484466552734

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022378049325197935
    2. ':
' → logprob: -6.127237796783447
    3. ' :' → logprob: -10.002238273620605
    4. '   ' → logprob: -12.252238273620605
    5. ' :
' → logprob: -13.502238273620605
    6. ':return' → logprob: -14.502238273620605
    7. '):' → logprob: -15.752238273620605
    8. ':

' → logprob: -15.877238273620605
    9. '       ' → logprob: -16.25223731994629
    10. ':
' → logprob: -16.25223731994629

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0069718137383461
    2. '   ' → logprob: -5.006971836090088
    3. ':' → logprob: -9.25697135925293
    4. ' break' → logprob: -9.63197135925293
    5. '    ' → logprob: -9.88197135925293
    6. '	break' → logprob: -11.50697135925293
    7. ' ' → logprob: -12.25697135925293
    8. '     ' → logprob: -12.38197135925293
    9. '      ' → logprob: -12.50697135925293
    10. '<|end|>' → logprob: -12.63197135925293

Token 77: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6296395063400269
    2. ' break' → logprob: -0.8796395063400269
    3. 'break' (adapté à ' break') → logprob: -3.1296396255493164
    4. '   ' → logprob: -5.254639625549316
    5. '	break' → logprob: -5.754639625549316
    6. '           ' → logprob: -9.629639625549316
    7. '_break' → logprob: -10.629639625549316
    8. '```' → logprob: -11.129639625549316
    9. ' ' → logprob: -11.504639625549316
    10. '        
' → logprob: -12.004639625549316

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17804184556007385
    2. '
' → logprob: -3.053041934967041
    3. ' print' → logprob: -3.053041934967041
    4. 'print' → logprob: -3.178041934967041
    5. '    
' → logprob: -4.303041934967041
    6. '<|end|>' → logprob: -4.803041934967041
    7. '  
' → logprob: -6.553041934967041
    8. ' 
' → logprob: -6.928041934967041
    9. '    ' → logprob: -7.553041934967041
    10. '<|end|>' → logprob: -7.678041934967041

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39178404211997986
    2. ' print' → logprob: -1.7667840719223022
    3. 'print' → logprob: -1.8917840719223022
    4. '	print' → logprob: -7.141784191131592
    5. '
' → logprob: -7.516784191131592
    6. '    
' → logprob: -7.516784191131592
    7. '<|end|>' → logprob: -8.016783714294434
    8. ',' → logprob: -10.266783714294434
    9. ' ' → logprob: -10.641783714294434
    10. '  ' → logprob: -10.641783714294434

Token 80: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.024230701848864555
    2. 'print' (adapté à ' print') → logprob: -3.774230718612671
    3. '   ' → logprob: -7.524230480194092
    4. ' 
' → logprob: -8.39923095703125
    5. '	print' → logprob: -9.89923095703125
    6. '    
' → logprob: -10.14923095703125
    7. '<|end|>' → logprob: -10.27423095703125
    8. ' ' → logprob: -10.77423095703125
    9. '
' → logprob: -10.77423095703125
    10. '```' → logprob: -11.52423095703125

Token 81: '(coll' (ID: 168219)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4749694764614105
    2. '(coll' → logprob: -0.9749695062637329
    3. '(c' → logprob: -7.474969387054443
    4. '(f' → logprob: -8.599969863891602
    5. '("' → logprob: -9.349969863891602
    6. '('' → logprob: -9.974969863891602
    7. '(col' → logprob: -12.599969863891602
    8. '()' → logprob: -13.724969863891602
    9. '(C' → logprob: -14.724969863891602
    10. ' (' → logprob: -14.974969863891602

Token 82: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -1.0280383548888494e-06
    2. 'at' → logprob: -14.250000953674316
    3. 'a' → logprob: -16.000001907348633
    4. 'atzen' → logprob: -16.750001907348633
    5. 'antz' → logprob: -18.375001907348633
    6. 'alt' → logprob: -18.500001907348633
    7. 'az' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '```' → logprob: -18.875001907348633
    10. 'atl' → logprob: -19.000001907348633

Token 83: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -1.9361264946837764e-07
    2. '_s' → logprob: -16.625
    3. '_step' → logprob: -16.625
    4. '_' → logprob: -17.5
    5. '_st' → logprob: -17.625
    6. ' _' → logprob: -17.875
    7. ')_' → logprob: -19.0
    8. '```' → logprob: -19.875
    9. '"_' → logprob: -20.125
    10. ''_' → logprob: -21.25

Token 84: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02975928969681263
    2. '(' → logprob: -3.529759407043457
    3. ')' → logprob: -12.529759407043457
    4. ' (' → logprob: -12.779759407043457
    5. '(
' → logprob: -13.279759407043457
    6. '(

' → logprob: -15.279759407043457
    7. ')(' → logprob: -15.654759407043457
    8. '((' → logprob: -16.90475845336914
    9. '()' → logprob: -17.52975845336914
    10. ' ' → logprob: -17.90475845336914

Token 85: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25193241238594055
    2. '))' → logprob: -1.5019323825836182
    3. ')))' → logprob: -13.251932144165039
    4. ' )' → logprob: -14.501932144165039
    5. ')}' → logprob: -15.376932144165039
    6. '))
' → logprob: -15.501932144165039
    7. ')
' → logprob: -15.876932144165039
    8. ')`' → logprob: -15.876932144165039
    9. '`)' → logprob: -16.37693214416504
    10. ' ))' → logprob: -16.37693214416504


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 83
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 48.19%
Précision adaptée (1ère position): 49.40%
Précision (top 10): 91.57%
================================================================================
