================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def dijkstra(graph, start, n):
    dist = [float('inf')] * (n + 1)
    dist[start] = 0
    heap = [(0, start)]
    while heap:
        cost, u = heapq.heappop(heap)
        if dist[u] < cost:
            continue
        for v, w in graph[u]:
            nd = cost + w
            if nd < dist[v]:
                dist[v] = nd
                heapq.heappush(heap, (nd, v))
    return dist

input = sys.stdin.readline
n = int(input())
m = int(input())
graph = [[] for _ in range(n+1)]
rev_graph = [[] for _ in range(n+1)]

for _ in range(m):
    line = input().strip().replace(',', ' ').split()
    a,b,c,d = map(int, line)
    graph[a].append((b,c))
    graph[b].append((a,d))

s,g,V,P = map(int, input().strip().split(','))

dist_s = dijkstra(graph, s, n)
dist_g = dijkstra(graph, g, n)

ans = V - P - (dist_s[g] + dist_g[s])
print(ans if ans >= 0 else 0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1822601556777954
    2. '\n' → logprob: -2.057260036468506
    3. '<|end|>' → logprob: -4.182260036468506
    4. '\' → logprob: -4.432260036468506
    5. 'newline' → logprob: -5.557260036468506
    6. 'import' → logprob: -6.057260036468506
    7. '<|end|>' → logprob: -6.682260036468506
    8. '```' → logprob: -7.432260036468506
    9. ';' → logprob: -7.557260036468506
    10. '' → logprob: -7.682260036468506

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0007113590254448354
    2. 'os' → logprob: -7.250711441040039
    3. ' math' → logprob: -14.250711441040039
    4. ' re' → logprob: -15.125711441040039
    5. '"os' → logprob: -15.250711441040039
    6. ' json' → logprob: -16.37571144104004
    7. '_os' → logprob: -16.37571144104004
    8. '	os' → logprob: -17.25071144104004
    9. ' io' → logprob: -18.12571144104004
    10. ' ' → logprob: -18.62571144104004

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.6405310816480778e-05
    2. '.' → logprob: -11.375016212463379
    3. '#' → logprob: -13.875016212463379
    4. '_' → logprob: -14.125016212463379
    5. '=' → logprob: -14.500016212463379
    6. 'ify' → logprob: -14.875016212463379
    7. 'queue' → logprob: -15.250016212463379
    8. 'u' → logprob: -15.375016212463379
    9. ')' → logprob: -15.625016212463379
    10. '[' → logprob: -15.625016212463379

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21790528297424316
    2. '
' → logprob: -2.467905282974243
    3. '\n' → logprob: -3.217905282974243
    4. '\' → logprob: -3.592905282974243
    5. '<|end|>' → logprob: -4.592905044555664
    6. '.
' → logprob: -4.967905044555664
    7. '

' → logprob: -4.967905044555664
    8. 'import' → logprob: -5.342905044555664
    9. '' → logprob: -5.467905044555664
    10. '```' → logprob: -5.717905044555664

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9195020794868469
    2. 'def' → logprob: -1.2945020198822021
    3. '\' → logprob: -2.419502019882202
    4. '
' → logprob: -3.169502019882202
    5. 'from' → logprob: -3.294502019882202
    6. 'import' → logprob: -3.419502019882202
    7. '' → logprob: -3.419502019882202
    8. 'class' → logprob: -3.669502019882202
    9. '```' → logprob: -3.794502019882202
    10. '\n' → logprob: -3.794502019882202

Token 8: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002923514461144805
    2. ' a' → logprob: -7.377923488616943
    3. ' find' → logprob: -7.377923488616943
    4. ' process' → logprob: -8.002923965454102
    5. ' shortest' → logprob: -8.002923965454102
    6. ' space' → logprob: -8.752923965454102
    7. ' solve' → logprob: -8.877923965454102
    8. ' d' → logprob: -9.502923965454102
    9. ' heap' → logprob: -9.627923965454102
    10. ' calculate' → logprob: -9.877923965454102

Token 9: 'ijkstra' (ID: 124290)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.19381989538669586
    2. 'ijkstra' → logprob: -1.9438198804855347
    3. 'i' → logprob: -3.943819999694824
    4. 'ij' → logprob: -4.943819999694824
    5. 'ijk' → logprob: -5.068819999694824
    6. 'ef' → logprob: -9.443819999694824
    7. '_e' → logprob: -9.943819999694824
    8. '_' → logprob: -10.568819999694824
    9. 'jik' → logprob: -10.693819999694824
    10. 'j' → logprob: -11.443819999694824

Token 10: '(graph' (ID: 51300)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008302362984977663
    2. '_' → logprob: -7.625830173492432
    3. ' (' → logprob: -8.25083065032959
    4. '```' → logprob: -11.25083065032959
    5. '<|end|>' → logprob: -12.12583065032959
    6. '(node' → logprob: -12.25083065032959
    7. '('' → logprob: -12.37583065032959
    8. '(user' → logprob: -12.50083065032959
    9. ''s' → logprob: -12.62583065032959
    10. '(
' → logprob: -12.75083065032959

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6663708686828613
    2. ')' → logprob: -0.9163708686828613
    3. '[' → logprob: -2.7913708686828613
    4. ',' → logprob: -4.041370868682861
    5. '<|end|>' → logprob: -5.541370868682861
    6. '<|end|>' → logprob: -6.791370868682861
    7. '(node' → logprob: -8.166370391845703
    8. '```' → logprob: -8.166370391845703
    9. '[node' → logprob: -8.541370391845703
    10. '.' → logprob: -8.666370391845703

Token 12: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.23878763616085052
    2. 'start' → logprob: -1.7387876510620117
    3. ' source' → logprob: -3.4887876510620117
    4. 'source' → logprob: -5.113787651062012
    5. 'src' → logprob: -9.363787651062012
    6. ' src' → logprob: -10.863787651062012
    7. ' ' → logprob: -12.113787651062012
    8. '[start' → logprob: -12.238787651062012
    9. ',start' → logprob: -12.363787651062012
    10. '```' → logprob: -12.363787651062012

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31353864073753357
    2. '):' → logprob: -1.313538670539856
    3. ')' → logprob: -8.438538551330566
    4. ' ,' → logprob: -11.313538551330566
    5. ' ):' → logprob: -11.313538551330566
    6. ':' → logprob: -11.438538551330566
    7. ',node' → logprob: -12.063538551330566
    8. ',:' → logprob: -12.688538551330566
    9. '):
' → logprob: -12.688538551330566
    10. ''):' → logprob: -13.563538551330566

Token 14: ' n' (ID: 297)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.290008306503296
    2. 'dist' → logprob: -1.415008306503296
    3. ' distances' → logprob: -1.415008306503296
    4. ' end' → logprob: -1.790008306503296
    5. 'target' → logprob: -4.165008544921875
    6. ' target' → logprob: -4.290008544921875
    7. ' goal' → logprob: -4.665008544921875
    8. 'distance' → logprob: -4.790008544921875
    9. ' dist' → logprob: -4.915008544921875
    10. 'goal' → logprob: -5.040008544921875

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001398929744027555
    2. ')' → logprob: -9.125140190124512
    3. ',' → logprob: -10.875140190124512
    4. '):
' → logprob: -11.875140190124512
    5. ' ):' → logprob: -12.750140190124512
    6. ':' → logprob: -13.375140190124512
    7. '):
' → logprob: -15.375140190124512
    8. ''):' → logprob: -16.875139236450195
    9. ')：' → logprob: -16.875139236450195
    10. '```' → logprob: -17.375139236450195

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0608225017786026
    2. 'dist' → logprob: -3.1858224868774414
    3. ' distances' → logprob: -4.435822486877441
    4. ' dist' → logprob: -5.685822486877441
    5. '```' → logprob: -6.810822486877441
    6. '	dist' → logprob: -7.435822486877441
    7. 'distance' → logprob: -7.810822486877441
    8. '_dist' → logprob: -9.060822486877441
    9. ' distance' → logprob: -9.810822486877441
    10. ':' → logprob: -10.310822486877441

Token 17: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0680142194032669
    2. ' dist' → logprob: -3.193014144897461
    3. '   ' → logprob: -3.943014144897461
    4. ' distances' → logprob: -5.318014144897461
    5. 'distance' → logprob: -8.443014144897461
    6. ' ' → logprob: -9.443014144897461
    7. ' distance' → logprob: -10.443014144897461
    8. '	dist' → logprob: -10.568014144897461
    9. '  ' → logprob: -10.943014144897461
    10. '```' → logprob: -11.443014144897461

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0810723528265953
    2. '=' → logprob: -3.0810723304748535
    3. '[' → logprob: -3.4560723304748535
    4. ' ' → logprob: -9.081072807312012
    5. ',' → logprob: -10.081072807312012
    6. '   ' → logprob: -10.081072807312012
    7. ')' → logprob: -10.331072807312012
    8. '[]' → logprob: -10.331072807312012
    9. ']' → logprob: -10.581072807312012
    10. '=[]' → logprob: -10.831072807312012

Token 19: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5901212692260742
    2. ' [' → logprob: -0.8401212692260742
    3. '{' → logprob: -4.465121269226074
    4. '[int' → logprob: -6.965121269226074
    5. '[node' → logprob: -7.715121269226074
    6. ' {' → logprob: -7.965121269226074
    7. '[n' → logprob: -8.465121269226074
    8. '[start' → logprob: -8.715121269226074
    9. '[src' → logprob: -9.465121269226074
    10. '[len' → logprob: -9.715121269226074

Token 20: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -9.794061770662665e-05
    2. ' float' → logprob: -9.25009822845459
    3. '   ' → logprob: -14.00009822845459
    4. '10' → logprob: -14.62509822845459
    5. 'sys' → logprob: -16.125097274780273
    6. ' ' → logprob: -16.375097274780273
    7. '	float' → logprob: -16.500097274780273
    8. 'int' → logprob: -16.625097274780273
    9. '(float' → logprob: -17.000097274780273
    10. '```' → logprob: -18.375097274780273

Token 21: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.868328920158092e-05
    2. '(' → logprob: -10.625028610229492
    3. '("' → logprob: -12.875028610229492
    4. ''in' → logprob: -14.500028610229492
    5. '(in' → logprob: -14.500028610229492
    6. ''' → logprob: -14.625028610229492
    7. 'inf' → logprob: -16.125028610229492
    8. ' ('' → logprob: -16.375028610229492
    9. '('+' → logprob: -16.500028610229492
    10. '(\'' → logprob: -17.750028610229492

Token 22: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -9.372294698550832e-06
    2. 'in' → logprob: -11.625009536743164
    3. 'info' → logprob: -15.250009536743164
    4. ''in' → logprob: -16.250009536743164
    5. ' inf' → logprob: -17.875009536743164
    6. 'INF' → logprob: -18.500009536743164
    7. '_inf' → logprob: -18.500009536743164
    8. ''' → logprob: -18.750009536743164
    9. 'Inf' → logprob: -19.125009536743164
    10. '-inf' → logprob: -19.500009536743164

Token 23: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.04576101899147034
    2. ')]' → logprob: -3.5457611083984375
    3. ')' → logprob: -4.5457611083984375
    4. '')' → logprob: -5.6707611083984375
    5. ']' → logprob: -6.4207611083984375
    6. ''),' → logprob: -9.045761108398438
    7. ''' → logprob: -10.670761108398438
    8. '),' → logprob: -10.670761108398438
    9. '")]' → logprob: -11.420761108398438
    10. '']' → logprob: -11.670761108398438

Token 24: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006982952356338501
    2. ' for' → logprob: -5.506982803344727
    3. ']*' → logprob: -6.381982803344727
    4. ',' → logprob: -7.506982803344727
    5. 'for' → logprob: -8.256982803344727
    6. ' ]' → logprob: -9.006982803344727
    7. '()]' → logprob: -9.631982803344727
    8. '(' → logprob: -9.631982803344727
    9. ')' → logprob: -10.006982803344727
    10. ']*(' → logprob: -10.006982803344727

Token 25: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25244757533073425
    2. ' n' → logprob: -1.5024476051330566
    3. '(n' → logprob: -7.752447605133057
    4. ' (' → logprob: -9.377447128295898
    5. '(' → logprob: -12.877447128295898
    6. '	n' → logprob: -14.002447128295898
    7. ')n' → logprob: -15.377447128295898
    8. ' ' → logprob: -15.752447128295898
    9. ' ' → logprob: -15.877447128295898
    10. '_n' → logprob: -16.0024471282959

Token 26: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008065330912359059
    2. ' n' → logprob: -7.1258063316345215
    3. '(n' → logprob: -13.75080680847168
    4. ')n' → logprob: -14.00080680847168
    5. ' (' → logprob: -16.50080680847168
    6. '	n' → logprob: -17.12580680847168
    7. '(' → logprob: -17.62580680847168
    8. ')' → logprob: -17.62580680847168
    9. '_n' → logprob: -17.62580680847168
    10. '   ' → logprob: -17.75080680847168

Token 27: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0077642048709094524
    2. '+' → logprob: -5.5077643394470215
    3. ' )' → logprob: -5.6327643394470215
    4. ' +' → logprob: -9.757763862609863
    5. ')]' → logprob: -11.257763862609863
    6. ')
' → logprob: -12.257763862609863
    7. '<|end|>' → logprob: -12.632763862609863
    8. '))' → logprob: -12.757763862609863
    9. '+)' → logprob: -12.882763862609863
    10. ']' → logprob: -12.882763862609863

Token 28: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002806656062602997
    2. ' ' → logprob: -5.877806663513184
    3. '```' → logprob: -14.377806663513184
    4. '   ' → logprob: -14.502806663513184
    5. ')' → logprob: -15.252806663513184
    6. '  ' → logprob: -15.752806663513184
    7. '0' → logprob: -16.127805709838867
    8. '2' → logprob: -16.252805709838867
    9. ' ' → logprob: -17.752805709838867
    10. '    ' → logprob: -17.940305709838867

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. ')' → logprob: -17.375030517578125
    4. '   ' → logprob: -17.625030517578125
    5. '```' → logprob: -17.625030517578125
    6. '2' → logprob: -18.375030517578125
    7. '0' → logprob: -19.250030517578125
    8. '  ' → logprob: -19.250030517578125
    9. '１' → logprob: -19.500030517578125
    10. '۱' → logprob: -19.875030517578125

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1093578804284334e-05
    2. ')
' → logprob: -10.000051498413086
    3. ' )' → logprob: -12.625051498413086
    4. '   ' → logprob: -14.125051498413086
    5. '```' → logprob: -14.750051498413086
    6. '<|end|>' → logprob: -14.875051498413086
    7. '),' → logprob: -15.375051498413086
    8. ')

' → logprob: -16.250051498413086
    9. '`)' → logprob: -16.500051498413086
    10. ' ' → logprob: -16.875051498413086

Token 31: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06803794950246811
    2. '   ' → logprob: -3.318037986755371
    3. ' dist' → logprob: -3.943037986755371
    4. '	dist' → logprob: -5.193037986755371
    5. '[' → logprob: -6.443037986755371
    6. '<|end|>' → logprob: -7.068037986755371
    7. '_dist' → logprob: -7.318037986755371
    8. '(dist' → logprob: -8.193037986755371
    9. ')' → logprob: -8.193037986755371
    10. ' ' → logprob: -8.568037986755371

Token 32: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.02642964757978916
    2. ' dist' → logprob: -3.6514296531677246
    3. '	dist' → logprob: -9.526429176330566
    4. '   ' → logprob: -10.776429176330566
    5. '_dist' → logprob: -11.151429176330566
    6. 'd' → logprob: -12.651429176330566
    7. '[' → logprob: -12.776429176330566
    8. 'Dist' → logprob: -12.776429176330566
    9. '```' → logprob: -12.776429176330566
    10. '(dist' → logprob: -13.026429176330566

Token 33: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.023254914209246635
    2. '[' → logprob: -3.773254871368408
    3. '```' → logprob: -12.523255348205566
    4. '[user' → logprob: -14.023255348205566
    5. '[end' → logprob: -14.148255348205566
    6. '[src' → logprob: -14.398255348205566
    7. '[
' → logprob: -14.398255348205566
    8. '[state' → logprob: -14.648255348205566
    9. '\[' → logprob: -14.773255348205566
    10. '[current' → logprob: -15.023255348205566

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002568760421127081
    2. ')' → logprob: -6.12756872177124
    3. ' ]' → logprob: -8.002569198608398
    4. ')]' → logprob: -10.002569198608398
    5. ']=' → logprob: -13.502569198608398
    6. ' )' → logprob: -14.127569198608398
    7. '=' → logprob: -14.502569198608398
    8. '`]' → logprob: -14.502569198608398
    9. '])' → logprob: -15.752569198608398
    10. '']' → logprob: -15.877569198608398

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859089106321335
    2. '=' → logprob: -3.048590898513794
    3. ']' → logprob: -13.423590660095215
    4. ' ' → logprob: -14.923590660095215
    5. '[' → logprob: -15.173590660095215
    6. ')' → logprob: -15.173590660095215
    7. ' =)' → logprob: -15.423590660095215
    8. '```' → logprob: -15.923590660095215
    9. ']=' → logprob: -16.04859161376953
    10. '   ' → logprob: -16.04859161376953

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '   ' → logprob: -17.375911712646484
    4. '۰' → logprob: -18.063411712646484
    5. '```' → logprob: -18.188411712646484
    6. ' ' → logprob: -18.313411712646484
    7. '  ' → logprob: -19.313411712646484
    8. '000' → logprob: -19.313411712646484
    9. '00' → logprob: -19.438411712646484
    10. '０' → logprob: -19.813411712646484

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '۰' → logprob: -21.75
    4. '```' → logprob: -22.375
    5. '   ' → logprob: -22.5
    6. '０' → logprob: -23.5
    7. '00' → logprob: -24.0
    8. '٠' → logprob: -24.0
    9. '  ' → logprob: -24.375
    10. ' ' → logprob: -24.5

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010234682820737362
    2. '\n' → logprob: -5.510234832763672
    3. '   ' → logprob: -6.010234832763672
    4. '' → logprob: -6.135234832763672
    5. '    
' → logprob: -7.760234832763672
    6. ' 
' → logprob: -8.010234832763672
    7. '\' → logprob: -8.385234832763672
    8. '  
' → logprob: -8.510234832763672
    9. 'newline' → logprob: -9.260234832763672
    10. '
' → logprob: -9.510234832763672

Token 39: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007493404671549797
    2. '\n' → logprob: -6.007493495941162
    3. '   ' → logprob: -6.007493495941162
    4. '' → logprob: -7.007493495941162
    5. '    
' → logprob: -7.132493495941162
    6. ' 
' → logprob: -8.257493019104004
    7. '  
' → logprob: -8.882493019104004
    8. 'newline' → logprob: -8.882493019104004
    9. '\' → logprob: -9.382493019104004
    10. '```' → logprob: -9.757493019104004

Token 40: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.6692278981208801
    2. 'pq' → logprob: -1.0442278385162354
    3. ' heap' → logprob: -2.6692278385162354
    4. '   ' → logprob: -3.0442278385162354
    5. 'priority' → logprob: -5.0442280769348145
    6. 'queue' → logprob: -5.1692280769348145
    7. ' pq' → logprob: -6.1692280769348145
    8. 'hq' → logprob: -6.1692280769348145
    9. '
' → logprob: -6.6692280769348145
    10. ' priority' → logprob: -8.044227600097656

Token 41: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07692349702119827
    2. '.' → logprob: -2.7019236087799072
    3. '=' → logprob: -5.951923370361328
    4. ' =' → logprob: -6.201923370361328
    5. '.push' → logprob: -7.326923370361328
    6. '.q' → logprob: -7.701923370361328
    7. ')' → logprob: -8.201923370361328
    8. ' .' → logprob: -8.576923370361328
    9. '.he' → logprob: -8.951923370361328
    10. ' ' → logprob: -9.201923370361328

Token 42: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.6591365337371826
    2. '[(' → logprob: -1.4091365337371826
    3. ' []' → logprob: -1.9091365337371826
    4. '[]' → logprob: -2.4091365337371826
    5. ' [' → logprob: -8.909136772155762
    6. '[' → logprob: -9.159136772155762
    7. ' ' → logprob: -13.784136772155762
    8. ' []
' → logprob: -13.784136772155762
    9. ' [('' → logprob: -14.034136772155762
    10. '[]}' → logprob: -14.159136772155762

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. 'start' → logprob: -11.50001335144043
    3. ' ' → logprob: -13.37501335144043
    4. 'dist' → logprob: -13.75001335144043
    5. '(start' → logprob: -14.37501335144043
    6. '(' → logprob: -16.75001335144043
    7. ')' → logprob: -17.87501335144043
    8. '(dist' → logprob: -17.87501335144043
    9. ' start' → logprob: -18.50001335144043
    10. '[start' → logprob: -18.62501335144043

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034928982495330274
    2. ',start' → logprob: -8.000349044799805
    3. ' ,' → logprob: -11.625349044799805
    4. ',user' → logprob: -13.875349044799805
    5. '<|end|>' → logprob: -13.875349044799805
    6. '‌,' → logprob: -14.125349044799805
    7. ',
' → logprob: -15.000349044799805
    8. ',end' → logprob: -15.500349044799805
    9. ',node' → logprob: -15.500349044799805
    10. ',int' → logprob: -15.625349044799805

Token 45: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06196869537234306
    2. ' start' → logprob: -2.8119688034057617
    3. ' ' → logprob: -15.436968803405762
    4. ')' → logprob: -15.436968803405762
    5. '[start' → logprob: -15.561968803405762
    6. 'star' → logprob: -15.561968803405762
    7. '(start' → logprob: -16.186967849731445
    8. '```' → logprob: -16.686967849731445
    9. '	start' → logprob: -16.936967849731445
    10. '=start' → logprob: -17.061967849731445

Token 46: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06204398348927498
    2. ')' → logprob: -2.8120439052581787
    3. ')])' → logprob: -10.062044143676758
    4. '),' → logprob: -11.062044143676758
    5. '))' → logprob: -11.687044143676758
    6. ']' → logprob: -12.562044143676758
    7. ' )' → logprob: -12.812044143676758
    8. ')
' → logprob: -14.062044143676758
    9. ')}' → logprob: -14.312044143676758
    10. ')]
' → logprob: -14.437044143676758

Token 47: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0692659243941307
    2. '   ' → logprob: -3.569265842437744
    3. '    
' → logprob: -4.194265842437744
    4. '  
' → logprob: -4.944265842437744
    5. ' 
' → logprob: -5.319265842437744
    6. '   
' → logprob: -5.819265842437744
    7. 'while' → logprob: -5.819265842437744
    8. '\n' → logprob: -6.694265842437744
    9. ' ' → logprob: -7.194265842437744
    10. ' while' → logprob: -7.194265842437744

Token 48: ' while' (ID: 2049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5378931164741516
    2. '
' → logprob: -1.5378930568695068
    3. 'while' (adapté à ' while') → logprob: -2.912893056869507
    4. ',' → logprob: -3.162893056869507
    5. '   ' → logprob: -3.412893056869507
    6. ' ' → logprob: -3.662893056869507
    7. ' while' → logprob: -4.037893295288086
    8. ',
' → logprob: -5.537893295288086
    9. '' → logprob: -5.537893295288086
    10. ' 
' → logprob: -5.662893295288086

Token 49: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.0029418058693408966
    2. 'heap' → logprob: -5.877941608428955
    3. ' ' → logprob: -9.502942085266113
    4. '(heap' → logprob: -10.002942085266113
    5. ' len' → logprob: -11.252942085266113
    6. '.heap' → logprob: -13.127942085266113
    7. ' he' → logprob: -13.752942085266113
    8. '_heap' → logprob: -15.127942085266113
    9. '   ' → logprob: -15.127942085266113
    10. '```' → logprob: -16.252941131591797

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015129582025110722
    2. '):' → logprob: -7.5015130043029785
    3. '[' → logprob: -8.25151252746582
    4. ',' → logprob: -8.25151252746582
    5. '.pop' → logprob: -8.25151252746582
    6. ':**' → logprob: -9.25151252746582
    7. '.' → logprob: -10.50151252746582
    8. ':
' → logprob: -10.87651252746582
    9. ']:' → logprob: -12.12651252746582
    10. ')' → logprob: -12.50151252746582

Token 51: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26838359236717224
    2. '       ' → logprob: -1.5183836221694946
    3. '   ' → logprob: -4.893383502960205
    4. ')' → logprob: -6.018383502960205
    5. ' ,' → logprob: -6.518383502960205
    6. ',
' → logprob: -7.018383502960205
    7. 'heap' → logprob: -7.518383502960205
    8. '(heap' → logprob: -7.893383502960205
    9. ' ' → logprob: -8.268383979797363
    10. '    ' → logprob: -8.268383979797363

Token 52: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -1.029923677444458
    2. 'd' → logprob: -1.279923677444458
    3. '0' → logprob: -2.279923677444458
    4. '   ' → logprob: -2.654923677444458
    5. '       ' → logprob: -3.029923677444458
    6. ' cost' → logprob: -3.779923677444458
    7. 'current' → logprob: -4.029923439025879
    8. 'q' → logprob: -4.154923439025879
    9. 'dist' → logprob: -4.279923439025879
    10. ' d' → logprob: -4.404923439025879

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9146995327901095e-05
    2. ' ,' → logprob: -11.000019073486328
    3. ',
' → logprob: -14.000019073486328
    4. ',c' → logprob: -15.125019073486328
    5. ',current' → logprob: -15.500019073486328
    6. '_,' → logprob: -15.750019073486328
    7. ',user' → logprob: -15.875019073486328
    8. ',node' → logprob: -15.875019073486328
    9. ',u' → logprob: -16.375019073486328
    10. ',

' → logprob: -16.500019073486328

Token 54: ' u' (ID: 337)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.2558331787586212
    2. ' u' → logprob: -1.7558331489562988
    3. 'node' → logprob: -3.255833148956299
    4. 'u' → logprob: -4.255833148956299
    5. ' v' → logprob: -9.255833625793457
    6. ' current' → logprob: -9.505833625793457
    7. ' vertex' → logprob: -10.380833625793457
    8. ' ' → logprob: -11.505833625793457
    9. 'v' → logprob: -11.505833625793457
    10. 'vertex' → logprob: -12.755833625793457

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08940189331769943
    2. '=' → logprob: -2.464401960372925
    3. ')' → logprob: -7.714401721954346
    4. ')=' → logprob: -11.964402198791504
    5. ']' → logprob: -12.214402198791504
    6. '   ' → logprob: -13.214402198791504
    7. ' ' → logprob: -13.214402198791504
    8. ',' → logprob: -15.214402198791504
    9. ' )' → logprob: -15.464402198791504
    10. ']=' → logprob: -15.714402198791504

Token 56: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.0893334224820137
    2. 'heap' → logprob: -2.4643335342407227
    3. ' he' → logprob: -8.214333534240723
    4. 'he' → logprob: -9.589333534240723
    5. ' ' → logprob: -9.964333534240723
    6. '(heap' → logprob: -12.589333534240723
    7. '.heap' → logprob: -13.839333534240723
    8. '```' → logprob: -13.964333534240723
    9. '_heap' → logprob: -14.964333534240723
    10. '   ' → logprob: -15.089333534240723

Token 57: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.015532627701759338
    2. '[' → logprob: -4.390532493591309
    3. '.' → logprob: -6.265532493591309
    4. '.pop' → logprob: -7.015532493591309
    5. 'pop' → logprob: -9.515532493591309
    6. ')' → logprob: -10.515532493591309
    7. '.he' → logprob: -10.640532493591309
    8. 'p' → logprob: -11.265532493591309
    9. '```' → logprob: -11.390532493591309
    10. ' .' → logprob: -11.515532493591309

Token 58: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.008927369490265846
    2. '.' → logprob: -4.758927345275879
    3. '.pop' → logprob: -8.383927345275879
    4. '.heap' → logprob: -10.508927345275879
    5. '.q' → logprob: -11.008927345275879
    6. '.p' → logprob: -11.133927345275879
    7. ' .' → logprob: -12.383927345275879
    8. '.dequeue' → logprob: -12.508927345275879
    9. '.n' → logprob: -12.758927345275879
    10. '.extract' → logprob: -13.258927345275879

Token 59: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.6240566083070007e-06
    2. 'pp' → logprob: -14.000001907348633
    3. 'ap' → logprob: -14.250001907348633
    4. 'a' → logprob: -17.375001907348633
    5. '```' → logprob: -18.000001907348633
    6. 'appe' → logprob: -18.750001907348633
    7. 'appen' → logprob: -18.875001907348633
    8. ' app' → logprob: -19.250001907348633
    9. 'pop' → logprob: -19.750001907348633
    10. '(app' → logprob: -19.875001907348633

Token 60: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.02340642735362053
    2. 'ush' → logprob: -3.773406505584717
    3. 'app' → logprob: -9.773406028747559
    4. 'pop' → logprob: -10.273406028747559
    5. 'p' → logprob: -10.898406028747559
    6. 'le' → logprob: -11.523406028747559
    7. 'push' → logprob: -11.523406028747559
    8. 'pp' → logprob: -11.773406028747559
    9. 'u' → logprob: -12.148406028747559
    10. 'q' → logprob: -12.148406028747559

Token 61: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.001704579102806747
    2. '(' → logprob: -6.376704692840576
    3. '(h' → logprob: -13.751704216003418
    4. '(queue' → logprob: -14.626704216003418
    5. ' (' → logprob: -15.501704216003418
    6. 'heap' → logprob: -16.251705169677734
    7. '(`' → logprob: -16.626705169677734
    8. ')' → logprob: -16.626705169677734
    9. '(graph' → logprob: -16.876705169677734
    10. '(
' → logprob: -17.001705169677734

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.0629870858974755e-05
    2. ')
' → logprob: -9.75006103515625
    3. '       ' → logprob: -14.25006103515625
    4. ')`' → logprob: -14.25006103515625
    5. ' )' → logprob: -14.87506103515625
    6. '))' → logprob: -15.25006103515625
    7. '   ' → logprob: -15.37506103515625
    8. ')
' → logprob: -16.75006103515625
    9. ')

' → logprob: -16.87506103515625
    10. '`)' → logprob: -17.25006103515625

Token 63: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.294357568025589
    2. '       ' → logprob: -1.4193575382232666
    3. '<|end|>' → logprob: -5.294357776641846
    4. '        
' → logprob: -5.419357776641846
    5. '  
' → logprob: -7.169357776641846
    6. '' → logprob: -7.294357776641846
    7. ' 
' → logprob: -7.419357776641846
    8. ')' → logprob: -8.044357299804688
    9. '    
' → logprob: -8.169357299804688
    10. '   ' → logprob: -8.294357299804688

Token 64: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.011983387172222137
    2. ' cost' → logprob: -5.011983394622803
    3. 'dist' → logprob: -5.261983394622803
    4. 'cost' → logprob: -9.886982917785645
    5. '	dist' → logprob: -11.136982917785645
    6. '(dist' → logprob: -13.636982917785645
    7. ' ' → logprob: -13.761982917785645
    8. '   ' → logprob: -14.761982917785645
    9. '    ' → logprob: -15.636982917785645
    10. '_dist' → logprob: -15.761982917785645

Token 66: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00011021859245374799
    2. '[' → logprob: -9.125110626220703
    3. 'u' → logprob: -14.500110626220703
    4. ' [' → logprob: -14.875110626220703
    5. '```' → logprob: -16.250110626220703
    6. '[
' → logprob: -16.875110626220703
    7. ' ' → logprob: -17.000110626220703
    8. '[int' → logprob: -17.250110626220703
    9. ' u' → logprob: -17.500110626220703
    10. '<u' → logprob: -17.625110626220703

Token 67: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.002770405262708664
    2. '<' → logprob: -6.12777042388916
    3. ' ' → logprob: -7.87777042388916
    4. '<u' → logprob: -9.12777042388916
    5. ')' → logprob: -10.37777042388916
    6. '  ' → logprob: -11.50277042388916
    7. ' !=' → logprob: -11.75277042388916
    8. ']' → logprob: -12.12777042388916
    9. '<int' → logprob: -12.25277042388916
    10. '   ' → logprob: -12.50277042388916

Token 68: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016840320080518723
    2. '<' → logprob: -4.14184045791626
    3. ' ' → logprob: -8.141839981079102
    4. '<u' → logprob: -8.516839981079102
    5. '<int' → logprob: -9.391839981079102
    6. ' !=' → logprob: -10.266839981079102
    7. '  ' → logprob: -10.516839981079102
    8. '<|end|>' → logprob: -10.516839981079102
    9. '   ' → logprob: -11.266839981079102
    10. '<len' → logprob: -11.266839981079102

Token 69: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.16022828221321106
    2. 'cost' → logprob: -1.9102282524108887
    3. '(cost' → logprob: -13.535228729248047
    4. '_cost' → logprob: -13.660228729248047
    5. ' ' → logprob: -14.035228729248047
    6. '-cost' → logprob: -15.410228729248047
    7. 'Cost' → logprob: -15.910228729248047
    8. '.cost' → logprob: -15.910228729248047
    9. ' coste' → logprob: -16.035228729248047
    10. ' kost' → logprob: -16.285228729248047

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002497302368283272
    2. ':
' → logprob: -6.37749719619751
    3. '       ' → logprob: -8.002497673034668
    4. ' continue' → logprob: -8.252497673034668
    5. 'continue' → logprob: -9.377497673034668
    6. '	continue' → logprob: -10.002497673034668
    7. '   ' → logprob: -10.752497673034668
    8. '_continue' → logprob: -11.627497673034668
    9. ':return' → logprob: -11.627497673034668
    10. ' continues' → logprob: -11.877497673034668

Token 71: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06441176682710648
    2. '           ' → logprob: -3.3144118785858154
    3. ' continue' → logprob: -4.064411640167236
    4. 'continue' → logprob: -5.064411640167236
    5. '
' → logprob: -6.314411640167236
    6. '	continue' → logprob: -8.189412117004395
    7. '   ' → logprob: -9.064412117004395
    8. '\n' → logprob: -9.564412117004395
    9. '	' → logprob: -9.689412117004395
    10. '_continue' → logprob: -10.189412117004395

Token 72: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.04412936791777611
    2. '       ' → logprob: -3.4191293716430664
    3. 'continue' (adapté à ' continue') → logprob: -4.669129371643066
    4. '           ' → logprob: -7.544129371643066
    5. '	continue' → logprob: -8.044129371643066
    6. '_continue' → logprob: -9.794129371643066
    7. ' 
' → logprob: -10.294129371643066
    8. '\n' → logprob: -10.669129371643066
    9. '   ' → logprob: -10.794129371643066
    10. ' continues' → logprob: -10.919129371643066

Token 73: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46679070591926575
    2. '       ' → logprob: -1.0917906761169434
    3. '        
' → logprob: -3.5917906761169434
    4. '<|end|>' → logprob: -4.966790676116943
    5. '  
' → logprob: -6.966790676116943
    6. ' 
' → logprob: -7.466790676116943
    7. '' → logprob: -7.716790676116943
    8. '\n' → logprob: -8.466791152954102
    9. '
' → logprob: -8.591791152954102
    10. '    
' → logprob: -9.216791152954102

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006907771807163954
    2. '        
' → logprob: -5.506907939910889
    3. '
' → logprob: -6.006907939910889
    4. '' → logprob: -9.63190746307373
    5. '    
' → logprob: -9.88190746307373
    6. ' 
' → logprob: -9.88190746307373
    7. '   ' → logprob: -10.00690746307373
    8. '\n' → logprob: -10.13190746307373
    9. '  
' → logprob: -10.38190746307373
    10. ' for' → logprob: -11.13190746307373

Token 75: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8815793395042419
    2. ' for' → logprob: -0.8815793395042419
    3. 'for' (adapté à ' for') → logprob: -2.6315793991088867
    4. '        
' → logprob: -3.1315793991088867
    5. '
' → logprob: -3.2565793991088867
    6. '   ' → logprob: -5.006579399108887
    7. ' 
' → logprob: -5.506579399108887
    8. '    
' → logprob: -5.506579399108887
    9. '\n' → logprob: -7.381579399108887
    10. '   
' → logprob: -7.756579399108887

Token 76: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07889397442340851
    2. ' v' → logprob: -2.5788938999176025
    3. ',' → logprob: -13.578893661499023
    4. '(v' → logprob: -13.703893661499023
    5. ',v' → logprob: -14.453893661499023
    6. '```' → logprob: -14.578893661499023
    7. '	v' → logprob: -14.828893661499023
    8. ' ' → logprob: -15.328893661499023
    9. 'u' → logprob: -16.953893661499023
    10. '   ' → logprob: -17.203893661499023

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001593195047462359
    2. ' ,' → logprob: -8.87515926361084
    3. ' in' → logprob: -11.37515926361084
    4. ',v' → logprob: -12.50015926361084
    5. '‌,' → logprob: -13.50015926361084
    6. ',c' → logprob: -14.62515926361084
    7. ',value' → logprob: -14.75015926361084
    8. '<|end|>' → logprob: -15.12515926361084
    9. ',val' → logprob: -16.000160217285156
    10. ',node' → logprob: -16.000160217285156

Token 78: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.1890629529953003
    2. ' weight' → logprob: -2.43906307220459
    3. 'w' → logprob: -2.81406307220459
    4. 'weight' → logprob: -3.68906307220459
    5. ' wt' → logprob: -10.43906307220459
    6. ' ' → logprob: -11.81406307220459
    7. ' cost' → logprob: -11.93906307220459
    8. 'wt' → logprob: -12.06406307220459
    9. '```' → logprob: -12.31406307220459
    10. '   ' → logprob: -12.43906307220459

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00604398176074028
    2. 'in' → logprob: -5.131043910980225
    3. ')' → logprob: -9.631044387817383
    4. ',' → logprob: -10.881044387817383
    5. '<|end|>' → logprob: -11.256044387817383
    6. ' ' → logprob: -11.631044387817383
    7. ' )' → logprob: -13.131044387817383
    8. '	in' → logprob: -13.631044387817383
    9. 's' → logprob: -13.881044387817383
    10. '<|end|>' → logprob: -14.006044387817383

Token 80: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.0036175278946757317
    2. 'graph' → logprob: -5.628617763519287
    3. ' ' → logprob: -11.628617286682129
    4. '	graph' → logprob: -11.753617286682129
    5. '(graph' → logprob: -14.378617286682129
    6. 'raph' → logprob: -17.378618240356445
    7. 'Graph' → logprob: -18.003618240356445
    8. '_graph' → logprob: -18.253618240356445
    9. '.graph' → logprob: -18.378618240356445
    10. ' grap' → logprob: -18.628618240356445

Token 81: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.607391408877447e-05
    2. '[' → logprob: -10.250036239624023
    3. 'u' → logprob: -15.125036239624023
    4. '[
' → logprob: -16.000036239624023
    5. ' [' → logprob: -16.750036239624023
    6. '	u' → logprob: -17.125036239624023
    7. '```' → logprob: -17.375036239624023
    8. '(u' → logprob: -17.375036239624023
    9. '.get' → logprob: -17.625036239624023
    10. '[user' → logprob: -17.750036239624023

Token 82: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10174146294593811
    2. ']:' → logprob: -2.3517415523529053
    3. ')' → logprob: -7.476741313934326
    4. ':' → logprob: -7.976741313934326
    5. ']):' → logprob: -8.226741790771484
    6. ' ):' → logprob: -8.726741790771484
    7. ']' → logprob: -8.976741790771484
    8. '):
' → logprob: -11.226741790771484
    9. '）：' → logprob: -11.476741790771484
    10. '"]:' → logprob: -11.726741790771484

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37047526240348816
    2. ':' → logprob: -1.3704752922058105
    3. '):' → logprob: -3.8704752922058105
    4. '<|end|>' → logprob: -4.2454752922058105
    5. ',' → logprob: -5.1204752922058105
    6. ')' → logprob: -5.2454752922058105
    7. '       ' → logprob: -5.4954752922058105
    8. ' :' → logprob: -6.6204752922058105
    9. '               ' → logprob: -6.9954752922058105
    10. ' ):' → logprob: -7.7454752922058105

Token 84: ' nd' (ID: 5914)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.07188399136066437
    2. ' ' → logprob: -2.8218839168548584
    3. '
' → logprob: -6.1968841552734375
    4. '  
' → logprob: -6.5718841552734375
    5. '           ' → logprob: -6.6968841552734375
    6. '            
' → logprob: -6.9468841552734375
    7. '               ' → logprob: -7.1968841552734375
    8. '   
' → logprob: -7.9468841552734375
    9. ' )' → logprob: -8.071884155273438
    10. '       ' → logprob: -8.071884155273438

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.392141193151474
    2. '=' → logprob: -1.7671412229537964
    3. 'ist' → logprob: -1.8921412229537964
    4. 'istance' → logprob: -6.767141342163086
    5. 'w' → logprob: -7.517141342163086
    6. '   ' → logprob: -8.142141342163086
    7. ' ' → logprob: -8.767141342163086
    8. 'cost' → logprob: -8.767141342163086
    9. '_cost' → logprob: -9.142141342163086
    10. ' cost' → logprob: -10.017141342163086

Token 86: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.03943817690014839
    2. 'cost' → logprob: -3.289438247680664
    3. ' dist' → logprob: -6.664438247680664
    4. 'dist' → logprob: -9.039438247680664
    5. '(cost' → logprob: -14.039438247680664
    6. ' kost' → logprob: -15.164438247680664
    7. ' ' → logprob: -15.664438247680664
    8. '_cost' → logprob: -15.789438247680664
    9. 'Cost' → logprob: -16.164438247680664
    10. '.cost' → logprob: -18.039438247680664

Token 87: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018211284652352333
    2. '+' → logprob: -4.018211364746094
    3. '+w' → logprob: -9.768211364746094
    4. ' ' → logprob: -13.643211364746094
    5. '<|end|>' → logprob: -13.643211364746094
    6. ' plus' → logprob: -14.768211364746094
    7. ' ' → logprob: -14.893211364746094
    8. '＋' → logprob: -15.518211364746094
    9. '+n' → logprob: -15.768211364746094
    10. '+h' → logprob: -16.018211364746094

Token 88: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5759448409080505
    2. 'w' → logprob: -0.8259448409080505
    3. ' ' → logprob: -12.450944900512695
    4. ' ' → logprob: -14.450944900512695
    5. 'v' → logprob: -14.950944900512695
    6. '	w' → logprob: -15.200944900512695
    7. '```' → logprob: -16.450944900512695
    8. ' v' → logprob: -16.825944900512695
    9. ''w' → logprob: -16.950944900512695
    10. ' 
' → logprob: -17.075944900512695

Token 89: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6770842671394348
    2. '<|end|>' → logprob: -1.05208420753479
    3. '
' → logprob: -2.42708420753479
    4. '       ' → logprob: -3.55208420753479
    5. '<|end|>' → logprob: -5.052084445953369
    6. ' if' → logprob: -5.427084445953369
    7. '               ' → logprob: -5.427084445953369
    8. '   ' → logprob: -6.177084445953369
    9. ')' → logprob: -6.302084445953369
    10. 'if' → logprob: -6.427084445953369

Token 91: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9438031911849976
    2. '<|end|>' → logprob: -1.3188031911849976
    3. ' 
' → logprob: -1.8188031911849976
    4. ' if' → logprob: -2.443803310394287
    5. '
' → logprob: -3.193803310394287
    6. 'if' (adapté à ' if') → logprob: -3.693803310394287
    7. '           ' → logprob: -4.318803310394287
    8. '  
' → logprob: -5.443803310394287
    9. '<|end|>' → logprob: -5.693803310394287
    10. '               ' → logprob: -6.943803310394287

Token 92: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.02988320216536522
    2. ' dist' → logprob: -3.5298831462860107
    3. 'nd' → logprob: -9.15488338470459
    4. 'dist' → logprob: -11.15488338470459
    5. '(nd' → logprob: -12.77988338470459
    6. ' ' → logprob: -12.77988338470459
    7. ' ' → logprob: -12.90488338470459
    8. '	dist' → logprob: -14.27988338470459
    9. ' ndi' → logprob: -14.52988338470459
    10. ' ndo' → logprob: -14.77988338470459

Token 93: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.002896167105063796
    2. '<' → logprob: -5.877896308898926
    3. '<|end|>' → logprob: -9.627896308898926
    4. ' ' → logprob: -11.252896308898926
    5. ' ' → logprob: -12.252896308898926
    6. '[' → logprob: -12.877896308898926
    7. ' <",' → logprob: -13.627896308898926
    8. '<int' → logprob: -14.377896308898926
    9. ')' → logprob: -15.127896308898926
    10. '<th' → logprob: -15.127896308898926

Token 94: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.05488961935043335
    2. 'dist' → logprob: -2.929889678955078
    3. '	dist' → logprob: -12.304889678955078
    4. '(dist' → logprob: -13.554889678955078
    5. ' ' → logprob: -14.679889678955078
    6. '_dist' → logprob: -15.054889678955078
    7. 'Dist' → logprob: -15.304889678955078
    8. '=' → logprob: -16.429889678955078
    9. 'd' → logprob: -16.554889678955078
    10. '```' → logprob: -16.554889678955078

Token 95: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.253090865968261e-06
    2. '[' → logprob: -11.625009536743164
    3. '[u' → logprob: -16.375009536743164
    4. 'v' → logprob: -16.500009536743164
    5. '```' → logprob: -17.875009536743164
    6. '[
' → logprob: -18.875009536743164
    7. '[w' → logprob: -19.375009536743164
    8. ' v' → logprob: -19.625009536743164
    9. '	v' → logprob: -19.750009536743164
    10. ' [' → logprob: -19.875009536743164

Token 96: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.09111353754997253
    2. '):' → logprob: -2.591113567352295
    3. ':' → logprob: -4.466113567352295
    4. ']:
' → logprob: -7.841113567352295
    5. '):
' → logprob: -9.091113090515137
    6. ']' → logprob: -9.341113090515137
    7. '}:' → logprob: -10.341113090515137
    8. ']:
' → logprob: -12.091113090515137
    9. '>:' → logprob: -12.216113090515137
    10. ':
' → logprob: -12.216113090515137

Token 97: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06893718242645264
    2. ':' → logprob: -2.818937301635742
    3. '           ' → logprob: -5.943937301635742
    4. ':
' → logprob: -6.443937301635742
    5. '<|end|>' → logprob: -7.318937301635742
    6. '):' → logprob: -7.818937301635742
    7. '):
' → logprob: -8.193937301635742
    8. ')' → logprob: -8.318937301635742
    9. ' :' → logprob: -8.318937301635742
    10. '                   ' → logprob: -8.943937301635742

Token 98: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7265540957450867
    2. '               ' → logprob: -1.1015541553497314
    3. 'dist' (adapté à ' dist') → logprob: -1.9765541553497314
    4. ' 
' → logprob: -3.6015541553497314
    5. '                
' → logprob: -5.351553916931152
    6. '                   ' → logprob: -5.476553916931152
    7. '                ' → logprob: -5.726553916931152
    8. '
' → logprob: -5.851553916931152
    9. '                    
' → logprob: -6.726553916931152
    10. '\n' → logprob: -8.101553916931152

Token 99: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.273621405242011e-05
    2. '[' → logprob: -10.375032424926758
    3. 'v' → logprob: -13.875032424926758
    4. '[val' → logprob: -16.000032424926758
    5. '[u' → logprob: -16.250032424926758
    6. '```' → logprob: -16.500032424926758
    7. '<v' → logprob: -16.625032424926758
    8. '	v' → logprob: -16.750032424926758
    9. '[var' → logprob: -18.375032424926758
    10. ' [' → logprob: -18.375032424926758

Token 100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06643740832805634
    2. ' =' → logprob: -2.9414374828338623
    3. ')' → logprob: -5.691437244415283
    4. '[v' → logprob: -5.691437244415283
    5. '=' → logprob: -6.316437244415283
    6. ' ]' → logprob: -6.441437244415283
    7. ']=' → logprob: -7.066437244415283
    8. '[' → logprob: -8.191437721252441
    9. '=v' → logprob: -8.816437721252441
    10. ' )' → logprob: -11.191437721252441

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048590321093797684
    2. '=' → logprob: -3.0485904216766357
    3. '=v' → logprob: -13.048590660095215
    4. ' =
' → logprob: -14.798590660095215
    5. '[' → logprob: -15.673590660095215
    6. '＝' → logprob: -16.7985897064209
    7. '<|end|>' → logprob: -16.9235897064209
    8. '.=' → logprob: -17.2985897064209
    9. ' =
' → logprob: -17.4235897064209
    10. ')' → logprob: -17.5485897064209

Token 102: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.004079828038811684
    2. 'nd' → logprob: -5.504079818725586
    3. '(nd' → logprob: -13.879079818725586
    4. '_nd' → logprob: -15.379079818725586
    5. ' ' → logprob: -16.754079818725586
    6. ' ndo' → logprob: -17.004079818725586
    7. ' nde' → logprob: -18.129079818725586
    8. ' ndi' → logprob: -18.754079818725586
    9. 'ndl' → logprob: -19.254079818725586
    10. ' ng' → logprob: -19.379079818725586

Token 103: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027617255691438913
    2. '                
' → logprob: -6.7527618408203125
    3. '
' → logprob: -7.8777618408203125
    4. ' heap' → logprob: -8.127761840820312
    5. 'heap' → logprob: -8.252761840820312
    6. '                ' → logprob: -8.377761840820312
    7. '<|end|>' → logprob: -9.002761840820312
    8. ',' → logprob: -9.627761840820312
    9. '			' → logprob: -9.877761840820312
    10. '           ' → logprob: -10.502761840820312

Token 104: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016706773021724075
    2. '                
' → logprob: -10.000166893005371
    3. 'heap' → logprob: -10.375166893005371
    4. ' heap' → logprob: -10.500166893005371
    5. '			' → logprob: -10.750166893005371
    6. '<|end|>' → logprob: -11.625166893005371
    7. '
' → logprob: -11.875166893005371
    8. '```' → logprob: -12.125166893005371
    9. '           ' → logprob: -12.500166893005371
    10. '              ' → logprob: -12.500166893005371

Token 105: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0007110013975761831
    2. ' heap' → logprob: -7.250710964202881
    3. '               ' → logprob: -14.000711441040039
    4. 'he' → logprob: -15.500711441040039
    5. '(heap' → logprob: -18.75071144104004
    6. '           ' → logprob: -19.12571144104004
    7. '                   ' → logprob: -20.87571144104004
    8. '   ' → logprob: -21.00071144104004
    9. '.heap' → logprob: -21.12571144104004
    10. 'heat' → logprob: -21.62571144104004

Token 106: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.339278580620885e-06
    2. 'p' → logprob: -14.000001907348633
    3. '.push' → logprob: -14.250001907348633
    4. 'push' → logprob: -15.500001907348633
    5. '.he' → logprob: -15.500001907348633
    6. '.q' → logprob: -16.125001907348633
    7. '_push' → logprob: -16.125001907348633
    8. '```' → logprob: -16.625001907348633
    9. '.append' → logprob: -17.125001907348633
    10. '.' → logprob: -18.000001907348633

Token 107: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.6286106983898208e-05
    2. '.heap' → logprob: -11.375016212463379
    3. '.' → logprob: -13.250016212463379
    4. '.push' → logprob: -13.625016212463379
    5. 'he' → logprob: -14.000016212463379
    6. ' he' → logprob: -15.250016212463379
    7. 'q' → logprob: -15.625016212463379
    8. ' .' → logprob: -16.125017166137695
    9. '.py' → logprob: -16.375017166137695
    10. '.q' → logprob: -16.500017166137695

Token 108: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.531315314830863e-06
    2. 'ap' → logprob: -13.375003814697266
    3. 'pp' → logprob: -13.500003814697266
    4. 'push' → logprob: -14.750003814697266
    5. '```' → logprob: -17.875003814697266
    6. 'p' → logprob: -18.500003814697266
    7. 'appen' → logprob: -18.625003814697266
    8. 'q' → logprob: -18.750003814697266
    9. 'append' → logprob: -19.000003814697266
    10. 'a' → logprob: -19.250003814697266

Token 109: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.688212614681106e-05
    2. 'push' → logprob: -11.000017166137695
    3. 'he' → logprob: -16.500017166137695
    4. 'app' → logprob: -16.875017166137695
    5. 'le' → logprob: -17.750017166137695
    6. 'e' → logprob: -18.125017166137695
    7. 'ap' → logprob: -18.250017166137695
    8. 'USH' → logprob: -18.500017166137695
    9. 'p' → logprob: -18.875017166137695
    10. 'l' → logprob: -18.875017166137695

Token 110: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.625003814697266
    3. '(graph' → logprob: -15.125003814697266
    4. 'heap' → logprob: -16.375003814697266
    5. ' (' → logprob: -16.500003814697266
    6. '(h' → logprob: -18.125003814697266
    7. '```' → logprob: -18.375003814697266
    8. '((' → logprob: -18.500003814697266
    9. ' heap' → logprob: -18.625003814697266
    10. '(queue' → logprob: -18.625003814697266

Token 111: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -5.6457742175552994e-05
    2. '(' → logprob: -10.000056266784668
    3. '(graph' → logprob: -12.125056266784668
    4. ')' → logprob: -13.500056266784668
    5. 'heap' → logprob: -13.625056266784668
    6. ' (' → logprob: -13.750056266784668
    7. ' heap' → logprob: -14.500056266784668
    8. ',' → logprob: -15.125056266784668
    9. '```' → logprob: -15.125056266784668
    10. ')(' → logprob: -15.375056266784668

Token 112: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8725064396858215
    2. '(nd' → logprob: -1.1225063800811768
    3. ' (' → logprob: -1.3725063800811768
    4. '(n' → logprob: -6.122506618499756
    5. '(v' → logprob: -7.247506618499756
    6. '(nt' → logprob: -9.372506141662598
    7. '(nn' → logprob: -10.122506141662598
    8. '(cost' → logprob: -11.247506141662598
    9. '(nx' → logprob: -11.247506141662598
    10. '(ns' → logprob: -11.372506141662598

Token 113: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0008417880744673312
    2. ' nd' → logprob: -7.1258416175842285
    3. '(nd' → logprob: -10.250842094421387
    4. '_nd' → logprob: -14.375842094421387
    5. 'ndl' → logprob: -14.750842094421387
    6. ')' → logprob: -15.875842094421387
    7. '```' → logprob: -16.00084114074707
    8. ' ' → logprob: -16.00084114074707
    9. 'nds' → logprob: -16.25084114074707
    10. 'n' → logprob: -16.62584114074707

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.861651490908116e-05
    2. ',v' → logprob: -9.625068664550781
    3. ' ,' → logprob: -13.000068664550781
    4. 'v' → logprob: -16.12506866455078
    5. ')' → logprob: -16.37506866455078
    6. ',
' → logprob: -16.75006866455078
    7. '<|end|>' → logprob: -18.00006866455078
    8. '‌,' → logprob: -18.25006866455078
    9. '```' → logprob: -18.87506866455078
    10. '),' → logprob: -19.12506866455078

Token 115: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004621303640305996
    2. ' v' → logprob: -5.379621505737305
    3. ')v' → logprob: -14.254621505737305
    4. '	v' → logprob: -15.004621505737305
    5. ')' → logprob: -17.754621505737305
    6. '```' → logprob: -18.379621505737305
    7. ' ' → logprob: -18.879621505737305
    8. '[v' → logprob: -19.004621505737305
    9. 'vq' → logprob: -19.254621505737305
    10. '   ' → logprob: -19.379621505737305

Token 116: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023388031870126724
    2. ')' → logprob: -3.773388147354126
    3. '))
' → logprob: -8.898387908935547
    4. ')
' → logprob: -12.898387908935547
    5. ' ))' → logprob: -13.148387908935547
    6. ')))' → logprob: -14.148387908935547
    7. ' )' → logprob: -15.523387908935547
    8. '))

' → logprob: -16.148387908935547
    9. '       ' → logprob: -16.148387908935547
    10. '   ' → logprob: -16.648387908935547

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08909191936254501
    2. '
' → logprob: -2.8390920162200928
    3. ' return' → logprob: -4.839091777801514
    4. '    
' → logprob: -4.839091777801514
    5. 'return' → logprob: -4.964091777801514
    6. '	return' → logprob: -7.089091777801514
    7. ')' → logprob: -7.589091777801514
    8. '```' → logprob: -7.589091777801514
    9. '<|end|>' → logprob: -8.214092254638672
    10. '  
' → logprob: -8.214092254638672

Token 118: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.027281226590275764
    2. ' return' → logprob: -3.7772812843322754
    3. '   ' → logprob: -5.527281284332275
    4. '
' → logprob: -10.027280807495117
    5. ' ' → logprob: -12.902280807495117
    6. '```' → logprob: -13.277280807495117
    7. '    
' → logprob: -13.652280807495117
    8. '	return' → logprob: -14.902280807495117
    9. 'dist' → logprob: -15.777280807495117
    10. 'r' → logprob: -15.902280807495117

Token 119: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12694227695465088
    2. ' dist' → logprob: -2.1269421577453613
    3. '(dist' → logprob: -11.25194263458252
    4. '	dist' → logprob: -13.87694263458252
    5. '_dist' → logprob: -15.75194263458252
    6. '[' → logprob: -17.376941680908203
    7. '.dist' → logprob: -17.376941680908203
    8. ' ' → logprob: -17.626941680908203
    9. '   ' → logprob: -17.876941680908203
    10. 'Dist' → logprob: -18.126941680908203

Token 120: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28674575686454773
    2. 'n' → logprob: -2.03674578666687
    3. '
' → logprob: -2.53674578666687
    4. 'graph' → logprob: -4.786745548248291
    5. '```' → logprob: -4.911745548248291
    6. '\n' → logprob: -5.286745548248291
    7. '(' → logprob: -5.536745548248291
    8. '

' → logprob: -5.911745548248291
    9. 'import' → logprob: -5.911745548248291
    10. '\' → logprob: -6.036745548248291

Token 122: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2485564798116684
    2. '=' → logprob: -2.12355637550354
    3. ' =' → logprob: -2.62355637550354
    4. '(' → logprob: -4.373556613922119
    5. '_' → logprob: -5.373556613922119
    6. '_data' → logprob: -5.373556613922119
    7. 's' → logprob: -6.373556613922119
    8. '_line' → logprob: -6.498556613922119
    9. '.' → logprob: -7.123556613922119
    10. '_lines' → logprob: -7.248556613922119

Token 123: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12698553502559662
    2. ' sys' → logprob: -2.126985549926758
    3. '	sys' → logprob: -10.501985549926758
    4. '=sys' → logprob: -10.876985549926758
    5. '(sys' → logprob: -11.501985549926758
    6. 'input' → logprob: -14.501985549926758
    7. 'lambda' → logprob: -15.626985549926758
    8. ' ' → logprob: -15.876985549926758
    9. '_sys' → logprob: -17.001985549926758
    10. 'stdin' → logprob: -17.376985549926758

Token 124: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1278960406780243
    2. '.stdin' → logprob: -2.1278960704803467
    3. '.readline' → logprob: -7.627895832061768
    4. '.stdout' → logprob: -8.752896308898926
    5. '<|end|>' → logprob: -9.002896308898926
    6. '.argv' → logprob: -10.377896308898926
    7. ' .' → logprob: -10.502896308898926
    8. '.​' → logprob: -10.752896308898926
    9. '.input' → logprob: -11.127896308898926
    10. '._' → logprob: -11.252896308898926

Token 125: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0010390023235231638
    2. '.' → logprob: -7.501039028167725
    3. '.read' → logprob: -7.751039028167725
    4. '.readlines' → logprob: -9.876038551330566
    5. 'read' → logprob: -12.626038551330566
    6. ' readline' → logprob: -14.751038551330566
    7. '.buffer' → logprob: -15.126038551330566
    8. '.Read' → logprob: -15.751038551330566
    9. 'reader' → logprob: -16.376039505004883
    10. '.reader' → logprob: -16.876039505004883

Token 126: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9503083229064941
    2. '()
' → logprob: -1.0753083229064941
    3. '
' → logprob: -1.3253083229064941
    4. 'n' → logprob: -5.825308322906494
    5. '()\' → logprob: -6.450308322906494
    6. 'def' → logprob: -7.325308322906494
    7. '()

' → logprob: -7.575308322906494
    8. '(
' → logprob: -8.825307846069336
    9. '(' → logprob: -9.200307846069336
    10. '
' → logprob: -9.325307846069336

Token 127: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005405236734077334
    2. 't' → logprob: -8.250540733337402
    3. 'def' → logprob: -8.875540733337402
    4. '
' → logprob: -9.125540733337402
    5. 'N' → logprob: -11.125540733337402
    6. 'num' → logprob: -12.500540733337402
    7. 'T' → logprob: -13.000540733337402
    8. ' n' → logprob: -13.000540733337402
    9. 'ndef' → logprob: -13.750540733337402
    10. 'number' → logprob: -14.125540733337402

Token 128: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018230482935905457
    2. ' ,' → logprob: -4.018230438232422
    3. ' ' → logprob: -10.893230438232422
    4. ' =' → logprob: -11.018230438232422
    5. ',m' → logprob: -11.143230438232422
    6. '=' → logprob: -11.643230438232422
    7. ',n' → logprob: -12.268230438232422
    8. ',int' → logprob: -12.393230438232422
    9. ',k' → logprob: -12.643230438232422
    10. ',num' → logprob: -13.268230438232422

Token 129: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.062103021889925
    2. 'int' → logprob: -2.812103033065796
    3. ' ' → logprob: -8.937103271484375
    4. ' map' → logprob: -12.937103271484375
    5. '10' → logprob: -14.812103271484375
    6. '	int' → logprob: -15.437103271484375
    7. 'map' → logprob: -15.562103271484375
    8. '[int' → logprob: -15.687103271484375
    9. '=int' → logprob: -15.812103271484375
    10. '5' → logprob: -15.937103271484375

Token 130: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09374445676803589
    2. '(input' → logprob: -2.9687445163726807
    3. '()' → logprob: -3.9687445163726807
    4. '('' → logprob: -3.9687445163726807
    5. 'input' → logprob: -8.468744277954102
    6. '("' → logprob: -10.093744277954102
    7. '(sys' → logprob: -10.593744277954102
    8. ' (' → logprob: -10.718744277954102
    9. ' ()' → logprob: -11.343744277954102
    10. '(
' → logprob: -12.343744277954102

Token 131: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16155539453029633
    2. '()' → logprob: -1.9115554094314575
    3. '().' → logprob: -6.661555290222168
    4. ')' → logprob: -10.536555290222168
    5. ' ())' → logprob: -11.411555290222168
    6. '()
' → logprob: -12.286555290222168
    7. '();)' → logprob: -12.536555290222168
    8. '())
' → logprob: -13.411555290222168
    9. '(' → logprob: -13.786555290222168
    10. ' ()' → logprob: -14.036555290222168

Token 132: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.56102097814437e-05
    2. 'k' → logprob: -11.125045776367188
    3. 'e' → logprob: -11.625045776367188
    4. ' m' → logprob: -12.000045776367188
    5. 's' → logprob: -12.875045776367188
    6. 'd' → logprob: -13.375045776367188
    7. 'start' → logprob: -13.375045776367188
    8. 'a' → logprob: -13.500045776367188
    9. 'r' → logprob: -13.500045776367188
    10. 'graph' → logprob: -13.625045776367188

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007828421890735626
    2. '=' → logprob: -4.882828235626221
    3. ' ' → logprob: -8.507828712463379
    4. ',' → logprob: -11.132828712463379
    5. ' =
' → logprob: -13.257828712463379
    6. '=int' → logprob: -13.382828712463379
    7. ' ,' → logprob: -13.632828712463379
    8. '  ' → logprob: -15.257828712463379
    9. ')' → logprob: -15.382828712463379
    10. ' ' → logprob: -15.382828712463379

Token 134: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20141372084617615
    2. 'int' → logprob: -1.7014137506484985
    3. '=int' → logprob: -14.951414108276367
    4. '(int' → logprob: -16.826414108276367
    5. '[int' → logprob: -18.451414108276367
    6. ' ' → logprob: -18.951414108276367
    7. '<int' → logprob: -18.951414108276367
    8. '	int' → logprob: -19.326414108276367
    9. ' n' → logprob: -19.451414108276367
    10. ',int' → logprob: -19.701414108276367

Token 135: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12903162837028503
    2. '(input' → logprob: -2.1290316581726074
    3. '(' → logprob: -7.004031658172607
    4. '())' → logprob: -7.129031658172607
    5. '()
' → logprob: -8.75403118133545
    6. '()(' → logprob: -9.25403118133545
    7. ' ()' → logprob: -10.25403118133545
    8. '().' → logprob: -11.12903118133545
    9. '()`' → logprob: -11.25403118133545
    10. '()\' → logprob: -11.25403118133545

Token 136: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1367214024066925
    2. '()' → logprob: -2.13672137260437
    3. ')' → logprob: -4.636721611022949
    4. '())
' → logprob: -10.76172161102295
    5. ' ())' → logprob: -11.01172161102295
    6. '()
' → logprob: -11.26172161102295
    7. '(' → logprob: -12.63672161102295
    8. ' ()' → logprob: -13.76172161102295
    9. ' )' → logprob: -14.76172161102295
    10. '();)' → logprob: -15.26172161102295

Token 137: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.014240960590541363
    2. ' graph' → logprob: -4.514240741729736
    3. '
' → logprob: -5.764240741729736
    4. '(graph' → logprob: -10.889241218566895
    5. '_graph' → logprob: -11.264241218566895
    6. '	graph' → logprob: -11.264241218566895
    7. ' 
' → logprob: -12.889241218566895
    8. '.graph' → logprob: -13.889241218566895
    9. 'graphs' → logprob: -14.764241218566895
    10. '```' → logprob: -14.764241218566895

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016037534922361374
    2. '=' → logprob: -4.141037464141846
    3. ' ' → logprob: -13.766037940979004
    4. ' =[' → logprob: -14.516037940979004
    5. ' =
' → logprob: -14.641037940979004
    6. '=[]' → logprob: -14.641037940979004
    7. '[' → logprob: -15.016037940979004
    8. ')' → logprob: -15.516037940979004
    9. '[]' → logprob: -16.141036987304688
    10. 's' → logprob: -16.891036987304688

Token 139: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3869331479072571
    2. ' [[]' → logprob: -1.1369330883026123
    3. '{' → logprob: -10.011933326721191
    4. ' [' → logprob: -11.136933326721191
    5. '[]' → logprob: -14.011933326721191
    6. 'default' → logprob: -14.511933326721191
    7. '{}' → logprob: -15.261933326721191
    8. ' ' → logprob: -15.261933326721191
    9. ' {' → logprob: -15.511933326721191
    10. '[[' → logprob: -15.886933326721191

Token 140: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12777864933013916
    2. 'for' → logprob: -2.1277785301208496
    3. ')' → logprob: -7.50277853012085
    4. ' ' → logprob: -9.252779006958008
    5. ']' → logprob: -10.002779006958008
    6. ',' → logprob: -10.252779006958008
    7. '
' → logprob: -10.377779006958008
    8. '	for' → logprob: -10.377779006958008
    9. ' fo' → logprob: -11.377779006958008
    10. '' → logprob: -11.377779006958008

Token 141: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03517697751522064
    2. ' range' → logprob: -3.660176992416382
    3. ' _' → logprob: -4.785176753997803
    4. 'range' → logprob: -7.910176753997803
    5. '(range' → logprob: -10.285177230834961
    6. ' i' → logprob: -10.285177230834961
    7. '_range' → logprob: -10.785177230834961
    8. ' ' → logprob: -11.035177230834961
    9. ' in' → logprob: -11.785177230834961
    10. 'i' → logprob: -13.410177230834961

Token 142: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05947689339518547
    2. 'in' → logprob: -3.309476852416992
    3. ' in' → logprob: -4.309476852416992
    4. ' range' → logprob: -4.934476852416992
    5. '(n' → logprob: -8.184476852416992
    6. '(range' → logprob: -8.684476852416992
    7. 'n' → logprob: -9.059476852416992
    8. '(' → logprob: -12.684476852416992
    9. ' ' → logprob: -13.184476852416992
    10. ' n' → logprob: -14.059476852416992

Token 143: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07890774309635162
    2. ' range' → logprob: -2.5789077281951904
    3. '(range' → logprob: -10.95390796661377
    4. 'r' → logprob: -16.203907012939453
    5. '(n' → logprob: -16.203907012939453
    6. ' ' → logprob: -16.828907012939453
    7. '	range' → logprob: -16.953907012939453
    8. 'n' → logprob: -16.953907012939453
    9. 'rang' → logprob: -17.828907012939453
    10. 'ran' → logprob: -18.203907012939453

Token 144: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -11.750008583068848
    3. 'n' → logprob: -14.625008583068848
    4. ' (' → logprob: -16.00000762939453
    5. '((' → logprob: -17.25000762939453
    6. '(m' → logprob: -19.12500762939453
    7. ' n' → logprob: -19.50000762939453
    8. '(num' → logprob: -21.00000762939453
    9. ')n' → logprob: -21.00000762939453
    10. ',n' → logprob: -21.12500762939453

Token 145: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04861347749829292
    2. ' +' → logprob: -3.0486135482788086
    3. ')]' → logprob: -10.673613548278809
    4. '+
' → logprob: -13.548613548278809
    5. ')' → logprob: -13.923613548278809
    6. ' ' → logprob: -15.673613548278809
    7. ' +
' → logprob: -15.798613548278809
    8. '+)' → logprob: -15.923613548278809
    9. ' )' → logprob: -16.673612594604492
    10. '+]' → logprob: -17.298612594604492

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001414426224073395
    2. ' ' → logprob: -8.875141143798828
    3. '0' → logprob: -14.000141143798828
    4. '   ' → logprob: -16.250141143798828
    5. '```' → logprob: -16.250141143798828
    6. ')' → logprob: -16.562641143798828
    7. '
' → logprob: -16.812641143798828
    8. '])' → logprob: -17.062641143798828
    9. '  ' → logprob: -17.187641143798828
    10. 'n' → logprob: -17.250141143798828

Token 147: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3871290981769562
    2. ')' → logprob: -1.1371290683746338
    3. ']' → logprob: -8.387128829956055
    4. '])' → logprob: -11.137128829956055
    5. ')])' → logprob: -12.012128829956055
    6. ' )' → logprob: -12.137128829956055
    7. ')
' → logprob: -13.012128829956055
    8. '))' → logprob: -14.762128829956055
    9. '）' → logprob: -14.762128829956055
    10. ')]
' → logprob: -15.012128829956055

Token 148: 'rev' (ID: 25656)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.553032628493384e-05
    2. ' for' → logprob: -9.500075340270996
    3. '
' → logprob: -14.375075340270996
    4. ' 
' → logprob: -17.750076293945312
    5. '	for' → logprob: -18.000076293945312
    6. 'i' → logprob: -19.250076293945312
    7. '```' → logprob: -19.375076293945312
    8. '  
' → logprob: -19.625076293945312
    9. 'For' → logprob: -19.875076293945312
    10. 'f' → logprob: -19.875076293945312

Token 149: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.2611067295074463
    2. 'graph' → logprob: -2.2611067295074463
    3. 'erse' → logprob: -2.5111067295074463
    4. 'raph' → logprob: -3.5111067295074463
    5. '_' → logprob: -4.886106491088867
    6. 'ers' → logprob: -6.136106491088867
    7. 'er' → logprob: -7.261106491088867
    8. 'ersion' → logprob: -7.261106491088867
    9. 'erge' → logprob: -7.261106491088867
    10. '	graph' → logprob: -7.386106491088867

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026302389800548553
    2. '=' → logprob: -3.6513023376464844
    3. '=[]' → logprob: -14.401302337646484
    4. '[' → logprob: -14.651302337646484
    5. ' ' → logprob: -15.026302337646484
    6. ' =[' → logprob: -15.151302337646484
    7. '<|end|>' → logprob: -15.901302337646484
    8. ' =
' → logprob: -16.026302337646484
    9. '＝' → logprob: -16.651302337646484
    10. ')' → logprob: -16.901302337646484

Token 151: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.014164921827614307
    2. '[' → logprob: -4.264164924621582
    3. '[]' → logprob: -14.514164924621582
    4. ' [' → logprob: -15.014164924621582
    5. ' ' → logprob: -15.264164924621582
    6. '[[' → logprob: -15.889164924621582
    7. ' []' → logprob: -17.014163970947266
    8. '[n' → logprob: -17.139163970947266
    9. '[:]' → logprob: -17.264163970947266
    10. '[['' → logprob: -17.264163970947266

Token 152: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09039849787950516
    2. 'for' → logprob: -2.4653985500335693
    3. ' (' → logprob: -6.84039831161499
    4. '(n' → logprob: -7.96539831161499
    5. '(' → logprob: -11.090398788452148
    6. ')' → logprob: -11.215398788452148
    7. '(for' → logprob: -12.090398788452148
    8. '	for' → logprob: -12.965398788452148
    9. '
' → logprob: -13.090398788452148
    10. '[n' → logprob: -14.965398788452148

Token 153: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008036693558096886
    2. ' _' → logprob: -4.8830366134643555
    3. ' range' → logprob: -8.383036613464355
    4. ' in' → logprob: -8.883036613464355
    5. ' ' → logprob: -10.758036613464355
    6. '_range' → logprob: -11.008036613464355
    7. 'range' → logprob: -11.258036613464355
    8. ' (' → logprob: -11.508036613464355
    9. '(range' → logprob: -14.883036613464355
    10. 'n' → logprob: -15.133036613464355

Token 154: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06199491396546364
    2. ' range' → logprob: -2.811995029449463
    3. '(range' → logprob: -10.561994552612305
    4. ' in' → logprob: -14.061994552612305
    5. '	range' → logprob: -15.436994552612305
    6. '_range' → logprob: -15.561994552612305
    7. 'in' → logprob: -15.811994552612305
    8. 'ange' → logprob: -16.311994552612305
    9. '.range' → logprob: -18.061994552612305
    10. '_' → logprob: -18.436994552612305

Token 155: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20158056914806366
    2. ' range' → logprob: -1.70158052444458
    3. '(range' → logprob: -8.701581001281738
    4. '	range' → logprob: -14.701581001281738
    5. '_range' → logprob: -15.076581001281738
    6. ' ' → logprob: -17.201580047607422
    7. '.range' → logprob: -17.201580047607422
    8. 'rang' → logprob: -17.326580047607422
    9. ' (' → logprob: -17.576580047607422
    10. '(' → logprob: -17.951580047607422

Token 156: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003687009448185563
    2. 'n' → logprob: -5.878686904907227
    3. ' (' → logprob: -7.128686904907227
    4. ' n' → logprob: -10.003686904907227
    5. '(' → logprob: -10.753686904907227
    6. 'range' → logprob: -11.628686904907227
    7. ' range' → logprob: -14.253686904907227
    8. '(range' → logprob: -14.378686904907227
    9. ')' → logprob: -14.628686904907227
    10. '[n' → logprob: -14.628686904907227

Token 157: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00020580526324920356
    2. ' +' → logprob: -8.500205993652344
    3. '+
' → logprob: -13.875205993652344
    4. ')+' → logprob: -15.000205993652344
    5. '()+' → logprob: -15.000205993652344
    6. ')' → logprob: -15.250205993652344
    7. ')]' → logprob: -16.000205993652344
    8. '1' → logprob: -16.000205993652344
    9. '＋' → logprob: -16.000205993652344
    10. '+)' → logprob: -16.750205993652344

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '0' → logprob: -16.6250057220459
    4. ')' → logprob: -17.1250057220459
    5. 'n' → logprob: -17.7500057220459
    6. '   ' → logprob: -17.8750057220459
    7. '```' → logprob: -18.0000057220459
    8. '<|end|>' → logprob: -18.2500057220459
    9. '  ' → logprob: -18.8750057220459
    10. '(' → logprob: -19.0000057220459

Token 159: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007858026656322181
    2. ')' → logprob: -7.625785827636719
    3. ']' → logprob: -8.125785827636719
    4. '])' → logprob: -14.000785827636719
    5. ')])' → logprob: -14.750785827636719
    6. '])]' → logprob: -15.250785827636719
    7. ')],' → logprob: -15.500785827636719
    8. '')]' → logprob: -16.50078582763672
    9. ')]
' → logprob: -16.50078582763672
    10. ' )' → logprob: -17.00078582763672

Token 160: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010593677870929241
    2. ' for' → logprob: -6.876059532165527
    3. '
' → logprob: -11.376059532165527
    4. '<|end|>' → logprob: -12.001059532165527
    5. 'n' → logprob: -13.251059532165527
    6. 'i' → logprob: -13.251059532165527
    7. '\n' → logprob: -13.626059532165527
    8. '```' → logprob: -13.626059532165527
    9. 'f' → logprob: -14.626059532165527
    10. 'r' → logprob: -14.751059532165527

Token 161: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.01815848983824253
    2. '_' → logprob: -4.018158435821533
    3. ' i' → logprob: -12.018158912658691
    4. ' ' → logprob: -13.018158912658691
    5. '_i' → logprob: -15.518158912658691
    6. ' ' → logprob: -16.393157958984375
    7. ' ‌' → logprob: -16.518157958984375
    8. ' _
' → logprob: -18.018157958984375
    9. 'i' → logprob: -18.643157958984375
    10. ' ▁' → logprob: -18.768157958984375

Token 162: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12284264713525772
    2. 'in' → logprob: -2.37284255027771
    3. ' ' → logprob: -3.87284255027771
    4. ' i' → logprob: -6.747842788696289
    5. '  ' → logprob: -9.122842788696289
    6. 'n' → logprob: -9.622842788696289
    7. 'space' → logprob: -9.622842788696289
    8. '_' → logprob: -10.122842788696289
    9. ' _' → logprob: -10.372842788696289
    10. 'i' → logprob: -10.372842788696289

Token 163: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00034988581319339573
    2. ' range' → logprob: -8.000349998474121
    3. '(range' → logprob: -11.250349998474121
    4. 'm' → logprob: -14.250349998474121
    5. '(' → logprob: -15.125349998474121
    6. '	range' → logprob: -15.500349998474121
    7. ')' → logprob: -16.125349044799805
    8. 'ange' → logprob: -16.875349044799805
    9. 'r' → logprob: -17.000349044799805
    10. 'rang' → logprob: -17.250349044799805

Token 164: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.001419995678588748
    2. 'm' → logprob: -7.126420021057129
    3. ' (' → logprob: -7.876420021057129
    4. '(' → logprob: -8.876420021057129
    5. ' m' → logprob: -9.251420021057129
    6. '	m' → logprob: -17.126419067382812
    7. '(int' → logprob: -17.251419067382812
    8. '(
' → logprob: -17.626419067382812
    9. '(M' → logprob: -17.626419067382812
    10. '_m' → logprob: -18.001419067382812

Token 165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00355124706402421
    2. ' ):' → logprob: -6.128551483154297
    3. '):
' → logprob: -7.003551483154297
    4. ')' → logprob: -8.003551483154297
    5. ':' → logprob: -9.128551483154297
    6. '():' → logprob: -12.753551483154297
    7. ' )' → logprob: -12.878551483154297
    8. ',' → logprob: -13.128551483154297
    9. ' ):
' → logprob: -13.128551483154297
    10. ']:' → logprob: -14.128551483154297

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5906497836112976
    2. ' u' → logprob: -0.8406497836112976
    3. ' ' → logprob: -5.340649604797363
    4. ' ,' → logprob: -5.965649604797363
    5. ',' → logprob: -6.215649604797363
    6. ' v' → logprob: -7.090649604797363
    7. 'u' → logprob: -7.215649604797363
    8. ' input' → logprob: -7.465649604797363
    9. ' line' → logprob: -7.715649604797363
    10. '    ' → logprob: -7.715649604797363

Token 167: ' line' (ID: 2543)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.10605663061141968
    2. ' u' → logprob: -2.6060566902160645
    3. 'a' → logprob: -3.7310566902160645
    4. 's' → logprob: -6.6060566902160645
    5. ' a' → logprob: -7.6060566902160645
    6. 'x' → logprob: -7.7310566902160645
    7. '   ' → logprob: -8.856056213378906
    8. ' s' → logprob: -9.231056213378906
    9. 'line' (adapté à ' line') → logprob: -9.606056213378906
    10. ' line' → logprob: -9.606056213378906

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17976154386997223
    2. '=' → logprob: -1.804761528968811
    3. '=line' → logprob: -11.80476188659668
    4. ' ' → logprob: -13.17976188659668
    5. '.' → logprob: -13.42976188659668
    6. 's' → logprob: -13.92976188659668
    7. '  ' → logprob: -13.92976188659668
    8. '   ' → logprob: -13.92976188659668
    9. '_' → logprob: -14.05476188659668
    10. '=input' → logprob: -14.42976188659668

Token 169: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.13361310958862305
    2. ' input' → logprob: -2.508613109588623
    3. 'list' → logprob: -3.258613109588623
    4. ' list' → logprob: -5.258613109588623
    5. 'map' → logprob: -10.633613586425781
    6. 'tuple' → logprob: -11.883613586425781
    7. 'sys' → logprob: -13.008613586425781
    8. ' tuple' → logprob: -13.008613586425781
    9. 'int' → logprob: -13.258613586425781
    10. '=input' → logprob: -13.758613586425781

Token 170: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003372502396814525
    2. '()' → logprob: -8.000337600708008
    3. ' ().' → logprob: -14.000337600708008
    4. '.strip' → logprob: -15.125337600708008
    5. '()
' → logprob: -15.250337600708008
    6. '(' → logprob: -15.250337600708008
    7. '.split' → logprob: -15.500337600708008
    8. '.' → logprob: -16.875337600708008
    9. '.rstrip' → logprob: -18.500337600708008
    10. 'split' → logprob: -18.625337600708008

Token 171: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2523595988750458
    2. 'strip' → logprob: -1.5023596286773682
    3. 'rstrip' → logprob: -7.752359390258789
    4. ' split' → logprob: -15.377359390258789
    5. '(split' → logprob: -15.377359390258789
    6. 'spl' → logprob: -15.627359390258789
    7. ' strip' → logprob: -16.75235939025879
    8. 'rs' → logprob: -17.25235939025879
    9. 'plit' → logprob: -18.00235939025879
    10. 's' → logprob: -18.37735939025879

Token 172: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0017130204942077398
    2. '()' → logprob: -6.376712799072266
    3. '()
' → logprob: -12.251712799072266
    4. '.split' → logprob: -12.751712799072266
    5. 'split' → logprob: -13.626712799072266
    6. ' ().' → logprob: -14.126712799072266
    7. '(' → logprob: -14.251712799072266
    8. '.' → logprob: -15.501712799072266
    9. '().'' → logprob: -16.251712799072266
    10. '()

' → logprob: -16.501712799072266

Token 173: 'replace' (ID: 15208)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. 'spl' → logprob: -13.875000953674316
    3. ' split' → logprob: -16.625001907348633
    4. 'sp' → logprob: -16.875001907348633
    5. '(split' → logprob: -17.375001907348633
    6. 'rstrip' → logprob: -17.875001907348633
    7. 's' → logprob: -18.625001907348633
    8. '```' → logprob: -18.875001907348633
    9. '.split' → logprob: -19.625001907348633
    10. 'plit' → logprob: -19.750001907348633

Token 174: '(',',' (ID: 88926)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4386857748031616
    2. '('\' → logprob: -1.5636857748031616
    3. '(',' → logprob: -2.313685894012451
    4. '(' → logprob: -3.188685894012451
    5. '("' → logprob: -5.563685894012451
    6. '(",' → logprob: -7.563685894012451
    7. '(','' → logprob: -7.938685894012451
    8. '("\' → logprob: -8.188685417175293
    9. '(',',' → logprob: -8.313685417175293
    10. '("("' → logprob: -8.563685417175293

Token 175: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.015991080552339554
    2. '''' → logprob: -4.2659912109375
    3. ' '')' → logprob: -6.6409912109375
    4. '"' → logprob: -8.5159912109375
    5. ' '' → logprob: -8.6409912109375
    6. ' '').' → logprob: -9.3909912109375
    7. ')' → logprob: -11.0159912109375
    8. ' ''' → logprob: -11.0159912109375
    9. ''s' → logprob: -11.6409912109375
    10. ''''' → logprob: -11.8909912109375

Token 176: ' ').' (ID: 114765)
  Prédit: ' ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ').' → logprob: -0.029039291664958
    2. '').' → logprob: -4.02903938293457
    3. ' ')' → logprob: -4.65403938293457
    4. '')' → logprob: -7.40403938293457
    5. ' '').' → logprob: -7.90403938293457
    6. ''' → logprob: -8.90403938293457
    7. ' ").' → logprob: -9.90403938293457
    8. ' ' → logprob: -10.02903938293457
    9. ' '' → logprob: -10.40403938293457
    10. ' ).' → logprob: -10.77903938293457

Token 177: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.7697225252486533e-06
    2. ' split' → logprob: -13.750003814697266
    3. 'replace' → logprob: -13.875003814697266
    4. 'spl' → logprob: -14.250003814697266
    5. 's' → logprob: -14.875003814697266
    6. 'rstrip' → logprob: -15.250003814697266
    7. '(split' → logprob: -15.500003814697266
    8. 'strip' → logprob: -15.875003814697266
    9. 'sp' → logprob: -16.625003814697266
    10. ' ' → logprob: -18.625003814697266

Token 178: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0023553103674203157
    2. '('' → logprob: -6.252355098724365
    3. '(' → logprob: -7.877355098724365
    4. '()
' → logprob: -11.127355575561523
    5. '()]' → logprob: -11.127355575561523
    6. '())' → logprob: -12.127355575561523
    7. '(',' → logprob: -13.252355575561523
    8. '()?>' → logprob: -13.502355575561523
    9. '();' → logprob: -13.627355575561523
    10. '("("' → logprob: -13.877355575561523

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13756823539733887
    2. '<|end|>' → logprob: -2.512568235397339
    3. ',' → logprob: -4.512568473815918
    4. ' ' → logprob: -4.637568473815918
    5. '  ' → logprob: -5.137568473815918
    6. ')' → logprob: -5.762568473815918
    7. ' u' → logprob: -5.887568473815918
    8. '    
' → logprob: -5.887568473815918
    9. ' v' → logprob: -6.137568473815918
    10. 'u' → logprob: -6.137568473815918

Token 180: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.022272931411862373
    2. 'a' (adapté à ' a') → logprob: -3.897272825241089
    3. 's' → logprob: -6.772273063659668
    4. ' u' → logprob: -8.522273063659668
    5. 'x' → logprob: -8.647273063659668
    6. 'from' → logprob: -9.022273063659668
    7. 'src' → logprob: -10.522273063659668
    8. 'start' → logprob: -10.647273063659668
    9. '   ' → logprob: -10.897273063659668
    10. 'f' → logprob: -11.772273063659668

Token 181: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016150731593370438
    2. ' =' → logprob: -4.766150951385498
    3. ' ,' → logprob: -5.516150951385498
    4. '=' → logprob: -5.766150951385498
    5. ',b' → logprob: -8.89115047454834
    6. ',a' → logprob: -9.01615047454834
    7. '=int' → logprob: -10.51615047454834
    8. ' ' → logprob: -11.01615047454834
    9. ',int' → logprob: -11.01615047454834
    10. ',v' → logprob: -11.14115047454834

Token 182: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7254396677017212
    2. '=' → logprob: -0.7254396677017212
    3. ' =' → logprob: -3.4754395484924316
    4. ' ,' → logprob: -8.10044002532959
    5. '=int' → logprob: -8.47544002532959
    6. ',a' → logprob: -9.35044002532959
    7. ',b' → logprob: -9.85044002532959
    8. ',int' → logprob: -9.85044002532959
    9. ' ' → logprob: -10.85044002532959
    10. ',c' → logprob: -10.97544002532959

Token 183: ',d' (ID: 26159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16031703352928162
    2. ' =' → logprob: -1.910317063331604
    3. ',' → logprob: -9.410317420959473
    4. '=int' → logprob: -11.785317420959473
    5. ' =
' → logprob: -14.285317420959473
    6. '=
' → logprob: -14.410317420959473
    7. ' ' → logprob: -14.535317420959473
    8. ')' → logprob: -15.035317420959473
    9. '=line' → logprob: -15.410317420959473
    10. '=

' → logprob: -15.535317420959473

Token 184: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11296947300434113
    2. ' =' → logprob: -2.237969398498535
    3. ',' → logprob: -9.487969398498535
    4. '=int' → logprob: -9.862969398498535
    5. '=line' → logprob: -11.487969398498535
    6. ' ' → logprob: -12.862969398498535
    7. '=
' → logprob: -13.737969398498535
    8. ',int' → logprob: -14.237969398498535
    9. '=input' → logprob: -14.612969398498535
    10. '=

' → logprob: -14.737969398498535

Token 185: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.11690998077392578
    2. 'map' → logprob: -2.366909980773926
    3. ' int' → logprob: -4.741909980773926
    4. 'int' → logprob: -4.866909980773926
    5. ' line' → logprob: -9.491909980773926
    6. 'line' → logprob: -10.366909980773926
    7. ' list' → logprob: -11.241909980773926
    8. ' ' → logprob: -11.866909980773926
    9. '(map' → logprob: -12.241909980773926
    10. '[int' → logprob: -12.241909980773926

Token 186: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0036741867661476135
    2. 'int' → logprob: -5.628674030303955
    3. '(' → logprob: -9.753674507141113
    4. ',int' → logprob: -12.378674507141113
    5. '(str' → logprob: -12.503674507141113
    6. '[int' → logprob: -12.753674507141113
    7. '<int' → logprob: -13.628674507141113
    8. '```' → logprob: -13.878674507141113
    9. ' int' → logprob: -14.128674507141113
    10. 'str' → logprob: -14.253674507141113

Token 187: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.4803837835788727
    2. ',line' → logprob: -0.9803837537765503
    3. ',' → logprob: -5.23038387298584
    4. 'line' → logprob: -7.35538387298584
    5. ')' → logprob: -8.35538387298584
    6. '[line' → logprob: -10.85538387298584
    7. '#line' → logprob: -11.23038387298584
    8. ' line' → logprob: -11.60538387298584
    9. '=line' → logprob: -11.60538387298584
    10. ')(' → logprob: -12.35538387298584

Token 188: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005938397720456123
    2. ' line' → logprob: -5.130938529968262
    3. '[line' → logprob: -12.130938529968262
    4. '(line' → logprob: -12.880938529968262
    5. '#line' → logprob: -14.380938529968262
    6. '	line' → logprob: -15.005938529968262
    7. '   ' → logprob: -15.130938529968262
    8. ' ' → logprob: -16.380937576293945
    9. 'li' → logprob: -16.505937576293945
    10. '=line' → logprob: -16.505937576293945

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001382241171086207
    2. ' )' → logprob: -9.000138282775879
    3. '[' → logprob: -11.875138282775879
    4. '[:' → logprob: -12.875138282775879
    5. ')`' → logprob: -13.750138282775879
    6. ')
' → logprob: -13.875138282775879
    7. '))' → logprob: -14.375138282775879
    8. '[])' → logprob: -14.500138282775879
    9. '`)' → logprob: -15.125138282775879
    10. '4' → logprob: -15.375138282775879

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01829485408961773
    2. '	graph' → logprob: -5.018294811248779
    3. '
' → logprob: -5.268294811248779
    4. 'graph' → logprob: -5.518294811248779
    5. ' graph' → logprob: -6.518294811248779
    6. '    
' → logprob: -7.643294811248779
    7. '<|end|>' → logprob: -8.768295288085938
    8. ',' → logprob: -9.768295288085938
    9. ')' → logprob: -10.268295288085938
    10. '(graph' → logprob: -10.768295288085938

Token 191: ' graph' (ID: 7465)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7073065042495728
    2. 'graph' (adapté à ' graph') → logprob: -0.9573065042495728
    3. '   ' → logprob: -2.707306385040283
    4. ' graph' → logprob: -2.957306385040283
    5. '	graph' → logprob: -5.957306385040283
    6. '    
' → logprob: -7.332306385040283
    7. ' if' → logprob: -8.082306861877441
    8. 'if' → logprob: -8.207306861877441
    9. ' 
' → logprob: -8.707306861877441
    10. '(graph' → logprob: -9.207306861877441

Token 192: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.452426608419046e-05
    2. '[b' → logprob: -10.37503433227539
    3. '[' → logprob: -13.62503433227539
    4. '[c' → logprob: -14.12503433227539
    5. 'a' → logprob: -14.25003433227539
    6. ' [' → logprob: -15.25003433227539
    7. '[d' → logprob: -15.50003433227539
    8. '```' → logprob: -16.00003433227539
    9. '[u' → logprob: -17.87503433227539
    10. '[s' → logprob: -18.25003433227539

Token 193: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.002605387009680271
    2. '.append' → logprob: -6.877605438232422
    3. ').' → logprob: -7.002605438232422
    4. '.' → logprob: -7.377605438232422
    5. ']' → logprob: -10.752605438232422
    6. '   ' → logprob: -12.377605438232422
    7. '`.' → logprob: -13.002605438232422
    8. '}.' → logprob: -13.377605438232422
    9. ' ].' → logprob: -13.377605438232422
    10. ',' → logprob: -13.502605438232422

Token 194: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.125
    3. ' append' → logprob: -16.125
    4. 'appen' → logprob: -17.75
    5. 'Append' → logprob: -18.375
    6. '_append' → logprob: -18.375
    7. 'push' → logprob: -18.75
    8. '	append' → logprob: -19.25
    9. 'pend' → logprob: -19.625
    10. 'app' → logprob: -19.75

Token 195: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0004413975402712822
    2. '(b' → logprob: -8.250441551208496
    3. '(' → logprob: -8.625441551208496
    4. ' (' → logprob: -14.875441551208496
    5. '[(' → logprob: -16.75044059753418
    6. '([' → logprob: -16.87544059753418
    7. ' ((' → logprob: -17.00044059753418
    8. '(B' → logprob: -17.25044059753418
    9. '(d' → logprob: -17.50044059753418
    10. '(('' → logprob: -18.12544059753418

Token 196: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00017982252757064998
    2. ' b' → logprob: -9.0001802444458
    3. 'c' → logprob: -9.8751802444458
    4. 'd' → logprob: -12.8751802444458
    5. '   ' → logprob: -13.2501802444458
    6. '	b' → logprob: -15.8751802444458
    7. ')b' → logprob: -16.125179290771484
    8. '(b' → logprob: -16.500179290771484
    9. ' ' → logprob: -16.500179290771484
    10. ' c' → logprob: -16.625179290771484

Token 197: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026657285168766975
    2. ',c' → logprob: -3.6516573429107666
    3. ' ,' → logprob: -8.151657104492188
    4. ',d' → logprob: -9.651657104492188
    5. ',
' → logprob: -13.026657104492188
    6. 'c' → logprob: -13.651657104492188
    7. ',b' → logprob: -15.526657104492188
    8. '‌,' → logprob: -16.276657104492188
    9. ',w' → logprob: -16.401657104492188
    10. 'd' → logprob: -16.526657104492188

Token 198: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010301469825208187
    2. '))
' → logprob: -5.01030158996582
    3. ',' → logprob: -6.38530158996582
    4. ',d' → logprob: -7.01030158996582
    5. ' ))' → logprob: -7.01030158996582
    6. '))

' → logprob: -10.76030158996582
    7. ' ))
' → logprob: -11.01030158996582
    8. ',))
' → logprob: -11.63530158996582
    9. '+' → logprob: -11.76030158996582
    10. ')' → logprob: -12.01030158996582

Token 199: '   ' (ID: 271)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.04655266925692558
    2. '   ' → logprob: -3.1715526580810547
    3. ' rev' → logprob: -6.171552658081055
    4. 'graph' → logprob: -6.671552658081055
    5. 'reverse' → logprob: -10.296552658081055
    6. ' graph' → logprob: -10.671552658081055
    7. '       ' → logprob: -10.921552658081055
    8. '  ' → logprob: -10.921552658081055
    9. '.rev' → logprob: -11.171552658081055
    10. ' ' → logprob: -11.296552658081055

Token 200: ' graph' (ID: 7465)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0008402384701184928
    2. ' rev' → logprob: -7.500840187072754
    3. 'graph' (adapté à ' graph') → logprob: -8.250840187072754
    4. '   ' → logprob: -11.125840187072754
    5. 'rep' → logprob: -12.625840187072754
    6. ' graph' → logprob: -13.000840187072754
    7. 're' → logprob: -13.750840187072754
    8. ' ' → logprob: -14.375840187072754
    9. '  ' → logprob: -14.375840187072754
    10. '_rev' → logprob: -14.375840187072754

Token 201: '[b' (ID: 40800)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.2356344312429428
    2. '[' → logprob: -2.2356343269348145
    3. '_rev' → logprob: -3.2356343269348145
    4. '
' → logprob: -4.6106343269348145
    5. '[a' → logprob: -5.1106343269348145
    6. 'b' → logprob: -5.1106343269348145
    7. ')' → logprob: -5.2356343269348145
    8. ']' → logprob: -5.2356343269348145
    9. '<|end|>' → logprob: -5.7356343269348145
    10. '```' → logprob: -5.8606343269348145

Token 202: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.020236214622855186
    2. ').' → logprob: -4.020236015319824
    3. '.' → logprob: -6.520236015319824
    4. '.append' → logprob: -8.270236015319824
    5. ']' → logprob: -8.395236015319824
    6. ',' → logprob: -10.645236015319824
    7. ')' → logprob: -10.770236015319824
    8. ')].' → logprob: -10.895236015319824
    9. '   ' → logprob: -11.020236015319824
    10. '[' → logprob: -11.145236015319824

Token 203: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.00027730545843951404
    2. 'appen' → logprob: -9.125277519226074
    3. '.append' → logprob: -9.875277519226074
    4. ' append' → logprob: -10.500277519226074
    5. 'rev' → logprob: -10.875277519226074
    6. 'app' → logprob: -11.250277519226074
    7. '
' → logprob: -11.875277519226074
    8. 'a' → logprob: -12.000277519226074
    9. ')' → logprob: -12.125277519226074
    10. 'ap' → logprob: -12.562777519226074

Token 204: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.843177233240567e-05
    2. '(a' → logprob: -11.125018119812012
    3. ' ((' → logprob: -13.125018119812012
    4. ' (' → logprob: -15.000018119812012
    5. 'rev' → logprob: -15.250018119812012
    6. '(' → logprob: -15.625018119812012
    7. ',' → logprob: -16.125019073486328
    8. '(re' → logprob: -16.250019073486328
    9. ')((' → logprob: -16.250019073486328
    10. 'a' → logprob: -16.375019073486328

Token 205: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0040417141281068325
    2. 'a' → logprob: -5.87904167175293
    3. '(c' → logprob: -7.25404167175293
    4. '(d' → logprob: -8.87904167175293
    5. '(' → logprob: -9.37904167175293
    6. ' (' → logprob: -9.50404167175293
    7. ',a' → logprob: -9.75404167175293
    8. 'd' → logprob: -9.87904167175293
    9. ')' → logprob: -10.37904167175293
    10. '   ' → logprob: -11.25404167175293

Token 206: ',d' (ID: 26159)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.26668158173561096
    2. ',d' → logprob: -1.7666815519332886
    3. ',' → logprob: -2.766681671142578
    4. ' ,' → logprob: -8.641681671142578
    5. ',
' → logprob: -9.516681671142578
    6. ',a' → logprob: -11.516681671142578
    7. 'c' → logprob: -11.641681671142578
    8. ',e' → logprob: -12.016681671142578
    9. ',b' → logprob: -12.266681671142578
    10. '),' → logprob: -12.891681671142578

Token 207: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00018887832993641496
    2. ')' → logprob: -8.750188827514648
    3. '))
' → logprob: -10.500188827514648
    4. ' ))' → logprob: -13.125188827514648
    5. ')))' → logprob: -14.250188827514648
    6. '))

' → logprob: -16.12518882751465
    7. ''))' → logprob: -17.12518882751465
    8. '),' → logprob: -17.50018882751465
    9. '()))' → logprob: -17.62518882751465
    10. ')
' → logprob: -18.12518882751465

Token 208: 's' (ID: 82)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7193532586097717
    2. 'x' → logprob: -1.594353199005127
    3. 'dist' → logprob: -2.219353199005127
    4. 's' → logprob: -2.344353199005127
    5. 't' → logprob: -4.219353199005127
    6. 'f' → logprob: -4.469353199005127
    7. 'k' → logprob: -4.969353199005127
    8. 'end' → logprob: -5.094353199005127
    9. 'distance' → logprob: -5.219353199005127
    10. 'source' → logprob: -5.219353199005127

Token 209: ',g' (ID: 44461)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8919937610626221
    2. ' =' → logprob: -0.8919937610626221
    3. '=' → logprob: -1.766993761062622
    4. ',' → logprob: -5.141993522644043
    5. ' ' → logprob: -5.766993522644043
    6. ' t' → logprob: -9.391993522644043
    7. 'r' → logprob: -9.391993522644043
    8. 'ource' → logprob: -9.766993522644043
    9. '=start' → logprob: -9.766993522644043
    10. '=end' → logprob: -10.516993522644043

Token 210: ',V' (ID: 81155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5043100118637085
    2. '=' → logprob: -1.1293100118637085
    3. ',' → logprob: -2.629310131072998
    4. ',s' → logprob: -8.75430965423584
    5. ' ,' → logprob: -8.87930965423584
    6. ' ' → logprob: -8.87930965423584
    7. ',t' → logprob: -10.12930965423584
    8. ',e' → logprob: -10.50430965423584
    9. ',p' → logprob: -10.87930965423584
    10. ',a' → logprob: -11.12930965423584

Token 211: ',P' (ID: 64255)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5257250666618347
    2. ' =' → logprob: -0.9007250666618347
    3. ',' → logprob: -6.0257248878479
    4. ' ' → logprob: -9.525725364685059
    5. '_' → logprob: -10.150725364685059
    6. 's' → logprob: -10.650725364685059
    7. '1' → logprob: -10.900725364685059
    8. ')' → logprob: -12.025725364685059
    9. '=input' → logprob: -12.400725364685059
    10. ' ,' → logprob: -13.025725364685059

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20478719472885132
    2. '=' → logprob: -1.704787254333496
    3. ',' → logprob: -5.829787254333496
    4. ' ' → logprob: -8.079787254333496
    5. ' ,' → logprob: -9.954787254333496
    6. ')' → logprob: -11.204787254333496
    7. '_' → logprob: -11.579787254333496
    8. ' =
' → logprob: -11.579787254333496
    9. 's' → logprob: -12.204787254333496
    10. '  ' → logprob: -12.329787254333496

Token 213: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6326883435249329
    2. 'map' → logprob: -0.7576883435249329
    3. 'input' → logprob: -11.007688522338867
    4. 'list' → logprob: -11.007688522338867
    5. ' list' → logprob: -11.132688522338867
    6. 'm' → logprob: -11.507688522338867
    7. ' input' → logprob: -11.507688522338867
    8. '	map' → logprob: -12.132688522338867
    9. ' m' → logprob: -12.382688522338867
    10. ' ' → logprob: -12.507688522338867

Token 214: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04319067299365997
    2. '(' → logprob: -3.1681907176971436
    3. '(lambda' → logprob: -8.918190956115723
    4. '(list' → logprob: -11.043190956115723
    5. '(tuple' → logprob: -11.668190956115723
    6. '(input' → logprob: -11.918190956115723
    7. '[int' → logprob: -12.043190956115723
    8. ' (' → logprob: -12.293190956115723
    9. 'int' → logprob: -12.418190956115723
    10. '<int' → logprob: -13.293190956115723

Token 215: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006673693656921387
    2. ',input' → logprob: -5.381673812866211
    3. '(' → logprob: -7.131673812866211
    4. ')' → logprob: -7.506673812866211
    5. ')(' → logprob: -8.006673812866211
    6. 'input' → logprob: -8.256673812866211
    7. '=input' → logprob: -10.506673812866211
    8. ',' → logprob: -10.631673812866211
    9. '()' → logprob: -10.756673812866211
    10. '(),' → logprob: -11.631673812866211

Token 216: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014164329506456852
    2. ' input' → logprob: -4.264164447784424
    3. '(input' → logprob: -14.639163970947266
    4. 'sys' → logprob: -15.264163970947266
    5. '	input' → logprob: -17.139163970947266
    6. '=input' → logprob: -17.264163970947266
    7. 'line' → logprob: -17.514163970947266
    8. ')' → logprob: -17.514163970947266
    9. ',input' → logprob: -17.639163970947266
    10. ' ' → logprob: -17.889163970947266

Token 217: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00544363958761096
    2. '()' → logprob: -5.255443572998047
    3. '())' → logprob: -8.505443572998047
    4. ' ().' → logprob: -12.505443572998047
    5. ')' → logprob: -13.755443572998047
    6. ' ()' → logprob: -14.505443572998047
    7. '(' → logprob: -15.005443572998047
    8. '()
' → logprob: -15.130443572998047
    9. '();)' → logprob: -15.505443572998047
    10. '().'' → logprob: -15.630443572998047

Token 218: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.038117915391922
    2. 'strip' → logprob: -3.2881178855895996
    3. 'rstrip' → logprob: -9.663118362426758
    4. ')' → logprob: -12.163118362426758
    5. '(split' → logprob: -12.788118362426758
    6. '()' → logprob: -13.163118362426758
    7. '())' → logprob: -13.663118362426758
    8. ' split' → logprob: -14.538118362426758
    9. '().' → logprob: -14.663118362426758
    10. 'plit' → logprob: -14.788118362426758

Token 219: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00806980300694704
    2. '()' → logprob: -5.25806999206543
    3. '())' → logprob: -5.88306999206543
    4. '(),' → logprob: -10.50806999206543
    5. ')' → logprob: -11.63306999206543
    6. '()
' → logprob: -12.25806999206543
    7. '()[' → logprob: -13.38306999206543
    8. '(' → logprob: -13.50806999206543
    9. '()]' → logprob: -15.13306999206543
    10. '().'' → logprob: -15.50806999206543

Token 220: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.000000953674316
    3. '(split' → logprob: -17.375
    4. ')' → logprob: -17.5
    5. 'spl' → logprob: -18.125
    6. 'strip' → logprob: -20.125
    7. '.split' → logprob: -20.25
    8. '()' → logprob: -20.25
    9. 'rstrip' → logprob: -21.0
    10. 'sp' → logprob: -21.125

Token 221: '(','' (ID: 170650)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.33068862557411194
    2. '()' → logprob: -1.5806885957717896
    3. ')' → logprob: -2.580688714981079
    4. '(),' → logprob: -11.8306884765625
    5. '(' → logprob: -12.4556884765625
    6. '())
' → logprob: -13.8306884765625
    7. '))' → logprob: -14.2056884765625
    8. '()))' → logprob: -14.3306884765625
    9. ' ())' → logprob: -14.3306884765625
    10. '()
' → logprob: -14.5806884765625

Token 222: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931557059288025
    2. '))' → logprob: -0.6931557059288025
    3. ')))' → logprob: -12.818155288696289
    4. ')
' → logprob: -13.193155288696289
    5. '))
' → logprob: -13.818155288696289
    6. '),' → logprob: -14.193155288696289
    7. ' )' → logprob: -15.443155288696289
    8. ')}' → logprob: -15.943155288696289
    9. ')\' → logprob: -15.943155288696289
    10. '):' → logprob: -15.943155288696289

Token 223: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.060296736657619476
    2. '#' → logprob: -4.310296535491943
    3. 'distance' → logprob: -4.685296535491943
    4. '
' → logprob: -4.935296535491943
    5. 'graph' → logprob: -5.185296535491943
    6. 'd' → logprob: -5.310296535491943
    7. 's' → logprob: -6.060296535491943
    8. 'result' → logprob: -6.185296535491943
    9. 'dp' → logprob: -6.685296535491943
    10. 'def' → logprob: -6.685296535491943

Token 224: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.4601612687110901
    2. ' =' → logprob: -1.9601612091064453
    3. '=' → logprob: -2.8351612091064453
    4. '_' → logprob: -3.0851612091064453
    5. '_g' → logprob: -3.4601612091064453
    6. '1' → logprob: -3.4601612091064453
    7. 's' → logprob: -3.7101612091064453
    8. '_from' → logprob: -4.710161209106445
    9. '_start' → logprob: -4.835161209106445
    10. '(' → logprob: -5.960161209106445

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25196170806884766
    2. ' =' → logprob: -1.5019617080688477
    3. ',' → logprob: -10.626961708068848
    4. '=s' → logprob: -12.501961708068848
    5. 's' → logprob: -13.126961708068848
    6. ',s' → logprob: -14.626961708068848
    7. '[' → logprob: -15.001961708068848
    8. ')' → logprob: -15.251961708068848
    9. '=
' → logprob: -15.501961708068848
    10. '=

' → logprob: -15.751961708068848

Token 226: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005530327325686812
    2. ' d' → logprob: -7.500553131103516
    3. '[d' → logprob: -17.250553131103516
    4. 'dist' → logprob: -18.000553131103516
    5. '(d' → logprob: -18.375553131103516
    6. ')d' → logprob: -18.500553131103516
    7. '	d' → logprob: -19.250553131103516
    8. '[' → logprob: -21.000553131103516
    9. '=d' → logprob: -21.000553131103516
    10. '_d' → logprob: -21.375553131103516

Token 227: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -3.976922744186595e-05
    2. 'ijk' → logprob: -10.375040054321289
    3. 'ijks' → logprob: -12.125040054321289
    4. 'ij' → logprob: -13.375040054321289
    5. '(' → logprob: -14.375040054321289
    6. '(s' → logprob: -14.875040054321289
    7. 'jik' → logprob: -15.875040054321289
    8. 'ijst' → logprob: -16.87504005432129
    9. 'ijas' → logprob: -17.00004005432129
    10. '```' → logprob: -17.37504005432129

Token 228: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.0007113590254448354
    2. '(' → logprob: -7.250711441040039
    3. '(gr' → logprob: -14.625711441040039
    4. '(Graph' → logprob: -14.750711441040039
    5. ' (' → logprob: -16.00071144104004
    6. '(g' → logprob: -16.12571144104004
    7. '(heap' → logprob: -16.25071144104004
    8. '(game' → logprob: -16.37571144104004
    9. '(grammar' → logprob: -16.37571144104004
    10. '(
' → logprob: -16.50071144104004

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01305822841823101
    2. ',s' → logprob: -4.388058185577393
    3. ' ,' → logprob: -7.513058185577393
    4. 's' → logprob: -13.76305866241455
    5. ' s' → logprob: -14.38805866241455
    6. ',S' → logprob: -15.26305866241455
    7. ',
' → logprob: -15.88805866241455
    8. ',n' → logprob: -16.263057708740234
    9. ',g' → logprob: -16.388057708740234
    10. ')' → logprob: -16.513057708740234

Token 230: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0297523383051157
    2. ' s' → logprob: -3.529752254486084
    3. ')' → logprob: -14.154752731323242
    4. '1' → logprob: -15.029752731323242
    5. ' ' → logprob: -15.154752731323242
    6. '	s' → logprob: -16.029752731323242
    7. '<|end|>' → logprob: -16.154752731323242
    8. 'S' → logprob: -16.154752731323242
    9. ')s' → logprob: -16.279752731323242
    10. '_s' → logprob: -16.404752731323242

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3009165823459625
    2. ',n' → logprob: -1.9259165525436401
    3. ')' → logprob: -2.1759166717529297
    4. ')
' → logprob: -8.17591667175293
    5. ')[' → logprob: -9.42591667175293
    6. ' ,' → logprob: -9.80091667175293
    7. '[n' → logprob: -10.17591667175293
    8. ',s' → logprob: -10.55091667175293
    9. ')n' → logprob: -10.55091667175293
    10. ',len' → logprob: -10.80091667175293

Token 232: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00014036978245712817
    2. ' n' → logprob: -8.875140190124512
    3. ')n' → logprob: -14.875140190124512
    4. '	n' → logprob: -16.000141143798828
    5. ')' → logprob: -17.750141143798828
    6. '<|end|>' → logprob: -18.500141143798828
    7. '_n' → logprob: -19.125141143798828
    8. '```' → logprob: -19.250141143798828
    9. '
' → logprob: -19.750141143798828
    10. ',n' → logprob: -20.125141143798828

Token 233: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47435462474823
    2. ')' → logprob: -0.97435462474823
    3. ')
' → logprob: -8.22435474395752
    4. ')

' → logprob: -11.84935474395752
    5. ' )
' → logprob: -13.84935474395752
    6. ')[' → logprob: -14.84935474395752
    7. ' )' → logprob: -15.34935474395752
    8. ')#' → logprob: -15.47435474395752
    9. 'dist' → logprob: -15.84935474395752
    10. ')s' → logprob: -16.349353790283203

Token 234: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.3451433409936726e-05
    2. ' dist' → logprob: -10.500033378601074
    3. 'g' → logprob: -13.875033378601074
    4. '<|end|>' → logprob: -14.000033378601074
    5. '	dist' → logprob: -14.375033378601074
    6. 'd' → logprob: -14.625033378601074
    7. 'distance' → logprob: -14.875033378601074
    8. '```' → logprob: -15.000033378601074
    9. '.dist' → logprob: -15.562533378601074
    10. 'V' → logprob: -15.687533378601074

Token 235: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.002491706982254982
    2. '_P' → logprob: -6.877491474151611
    3. '_V' → logprob: -7.377491474151611
    4. '_s' → logprob: -8.12749195098877
    5. '_p' → logprob: -8.25249195098877
    6. '_' → logprob: -8.62749195098877
    7. '_v' → logprob: -10.00249195098877
    8. '_G' → logprob: -10.75249195098877
    9. 'g' → logprob: -11.12749195098877
    10. 'P' → logprob: -12.00249195098877

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994076818227768
    2. '=' → logprob: -2.6949408054351807
    3. ',' → logprob: -12.819940567016602
    4. ' ' → logprob: -13.944940567016602
    5. ' =
' → logprob: -15.819940567016602
    6. ')' → logprob: -16.0699405670166
    7. ' ,' → logprob: -16.1949405670166
    8. ' =)' → logprob: -16.4449405670166
    9. ' ' → logprob: -16.6949405670166
    10. '_' → logprob: -16.6949405670166

Token 237: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023252584040164948
    2. ' d' → logprob: -3.773252487182617
    3. 'dist' → logprob: -12.648252487182617
    4. '(d' → logprob: -13.273252487182617
    5. '	d' → logprob: -14.648252487182617
    6. ' dist' → logprob: -14.648252487182617
    7. ')d' → logprob: -15.148252487182617
    8. '   ' → logprob: -15.273252487182617
    9. '[d' → logprob: -15.523252487182617
    10. ' ' → logprob: -15.648252487182617

Token 238: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -8.923874702304602e-05
    2. 'ijk' → logprob: -9.375089645385742
    3. 'ij' → logprob: -12.625089645385742
    4. 'ijks' → logprob: -15.000089645385742
    5. '```' → logprob: -15.375089645385742
    6. 'jik' → logprob: -15.500089645385742
    7. 'ist' → logprob: -16.125089645385742
    8. 'ijkl' → logprob: -16.375089645385742
    9. 'jk' → logprob: -17.125089645385742
    10. '[i' → logprob: -17.500089645385742

Token 239: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.018195247277617455
    2. '(re' → logprob: -4.018195152282715
    3. '(' → logprob: -10.393195152282715
    4. '(reverse' → logprob: -12.393195152282715
    5. '(gr' → logprob: -12.893195152282715
    6. '(g' → logprob: -13.018195152282715
    7. 'rev' → logprob: -13.768195152282715
    8. 'graph' → logprob: -14.018195152282715
    9. '(
' → logprob: -14.393195152282715
    10. '(r' → logprob: -14.393195152282715

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008232106338255107
    2. '(graph' → logprob: -7.625823020935059
    3. ',re' → logprob: -8.875823020935059
    4. 'graph' → logprob: -9.500823020935059
    5. ',g' → logprob: -10.125823020935059
    6. ' ,' → logprob: -10.250823020935059
    7. 'rev' → logprob: -10.875823020935059
    8. '(re' → logprob: -11.500823020935059
    9. ',
' → logprob: -12.625823020935059
    10. 'g' → logprob: -13.125823020935059

Token 241: ' g' (ID: 329)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9262120723724365
    2. 'g' → logprob: -1.0512120723724365
    3. ' graph' → logprob: -1.4262120723724365
    4. ' g' → logprob: -4.301212310791016
    5. 'rev' → logprob: -7.551212310791016
    6. '	graph' → logprob: -9.676212310791016
    7. ' rev' → logprob: -10.926212310791016
    8. '(graph' → logprob: -11.301212310791016
    9. ' ' → logprob: -11.801212310791016
    10. 'n' → logprob: -12.051212310791016

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.9728669738397e-05
    2. ',n' → logprob: -9.500100135803223
    3. ' ,' → logprob: -10.625100135803223
    4. ' graph' → logprob: -15.750100135803223
    5. ',g' → logprob: -16.000099182128906
    6. 'graph' → logprob: -16.375099182128906
    7. 'n' → logprob: -16.750099182128906
    8. ',
' → logprob: -17.750099182128906
    9. '(graph' → logprob: -17.750099182128906
    10. ')' → logprob: -18.500099182128906

Token 243: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0021857109386473894
    2. ' n' → logprob: -6.127185821533203
    3. '	n' → logprob: -15.002185821533203
    4. '<|end|>' → logprob: -16.002185821533203
    5. ' ' → logprob: -16.752185821533203
    6. ',' → logprob: -17.127185821533203
    7. ',n' → logprob: -17.377185821533203
    8. ')n' → logprob: -17.627185821533203
    9. ')' → logprob: -17.877185821533203
    10. ' ' → logprob: -18.002185821533203

Token 244: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3869011700153351
    2. ')' → logprob: -1.1369011402130127
    3. 'dist' → logprob: -10.761900901794434
    4. ')
' → logprob: -12.011900901794434
    5. ')

' → logprob: -13.636900901794434
    6. ' )
' → logprob: -14.636900901794434
    7. '
' → logprob: -15.886900901794434
    8. ' dist' → logprob: -16.13690185546875
    9. '(dist' → logprob: -16.26190185546875
    10. '#' → logprob: -16.51190185546875

Token 245: 'ans' (ID: 616)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001819408847950399
    2. 'P' → logprob: -7.501819610595703
    3. 'rev' → logprob: -7.751819610595703
    4. '#' → logprob: -8.376819610595703
    5. 'V' → logprob: -8.751819610595703
    6. 'v' → logprob: -9.376819610595703
    7. ' dist' → logprob: -9.501819610595703
    8. 'path' → logprob: -9.751819610595703
    9. 'p' → logprob: -9.876819610595703
    10. 'distance' → logprob: -10.751819610595703

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054891426116228104
    2. '=' → logprob: -2.929891347885132
    3. ',' → logprob: -12.804891586303711
    4. '_' → logprob: -13.304891586303711
    5. ' ' → logprob: -13.554891586303711
    6. '1' → logprob: -13.679891586303711
    7. ' =
' → logprob: -14.554891586303711
    8. ':' → logprob: -15.054891586303711
    9. 's' → logprob: -15.179891586303711
    10. '[' → logprob: -15.429891586303711

Token 247: ' V' (ID: 631)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8224658966064453
    2. 'float' → logprob: -1.0724658966064453
    3. 'min' → logprob: -1.5724658966064453
    4. '0' → logprob: -6.197465896606445
    5. ' min' → logprob: -6.197465896606445
    6. ' dist' → logprob: -6.197465896606445
    7. '[]' → logprob: -6.822465896606445
    8. 'max' → logprob: -6.822465896606445
    9. '[]
' → logprob: -7.322465896606445
    10. ' float' → logprob: -7.447465896606445

Token 248: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12372153252363205
    2. '-' → logprob: -3.6237215995788574
    3. ' +' → logprob: -3.6237215995788574
    4. '<|end|>' → logprob: -3.8737215995788574
    5. '*' → logprob: -4.748721599578857
    6. ' ' → logprob: -4.873721599578857
    7. '
' → logprob: -5.123721599578857
    8. ' -' → logprob: -5.498721599578857
    9. ',' → logprob: -5.623721599578857
    10. '0' → logprob: -5.998721599578857

Token 249: ' P' (ID: 398)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.13984207808971405
    2. '(dist' → logprob: -2.3898420333862305
    3. 'min' → logprob: -3.7648420333862305
    4. ' dist' → logprob: -4.5148420333862305
    5. 'max' → logprob: -6.0148420333862305
    6. '(min' → logprob: -7.0148420333862305
    7. ' min' → logprob: -7.3898420333862305
    8. ' (' → logprob: -7.6398420333862305
    9. '(max' → logprob: -9.26484203338623
    10. ' max' → logprob: -9.88984203338623

Token 250: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34884992241859436
    2. '<|end|>' → logprob: -1.473849892616272
    3. 'if' → logprob: -3.7238500118255615
    4. ' if' → logprob: -3.7238500118255615
    5. '+' → logprob: -5.723849773406982
    6. ')' → logprob: -5.848849773406982
    7. ' ' → logprob: -5.848849773406982
    8. '*' → logprob: -5.973849773406982
    9. 'for' → logprob: -6.973849773406982
    10. '.' → logprob: -7.348849773406982

Token 251: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20675697922706604
    2. 'min' → logprob: -2.206757068634033
    3. '(dist' → logprob: -3.206757068634033
    4. 'max' → logprob: -3.831757068634033
    5. ' dist' → logprob: -4.831757068634033
    6. '(min' → logprob: -5.956757068634033
    7. ' min' → logprob: -5.956757068634033
    8. '(max' → logprob: -7.706757068634033
    9. ' max' → logprob: -7.831757068634033
    10. ' (' → logprob: -8.331756591796875

Token 252: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03648779168725014
    2. 'min' → logprob: -3.4114878177642822
    3. 'max' → logprob: -6.286487579345703
    4. ' dist' → logprob: -7.536487579345703
    5. '(dist' → logprob: -8.161487579345703
    6. ' min' → logprob: -9.036487579345703
    7. '(min' → logprob: -11.786487579345703
    8. ' max' → logprob: -12.286487579345703
    9. '   ' → logprob: -12.911487579345703
    10. '	dist' → logprob: -12.911487579345703

Token 253: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -8.494741632603109e-05
    2. '_g' → logprob: -9.87508487701416
    3. 's' → logprob: -10.50008487701416
    4. '[s' → logprob: -12.62508487701416
    5. '_' → logprob: -13.75008487701416
    6. 'g' → logprob: -14.37508487701416
    7. '[g' → logprob: -14.62508487701416
    8. ')' → logprob: -16.250085830688477
    9. '[_' → logprob: -16.625085830688477
    10. '```' → logprob: -16.625085830688477

Token 254: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.0001037815964082256
    2. '[' → logprob: -9.375103950500488
    3. '[s' → logprob: -11.750103950500488
    4. '[G' → logprob: -12.125103950500488
    5. 'g' → logprob: -13.000103950500488
    6. ' [' → logprob: -13.125103950500488
    7. '
' → logprob: -15.250103950500488
    8. '[V' → logprob: -15.375103950500488
    9. ')[' → logprob: -15.875103950500488
    10. ')' → logprob: -16.500102996826172

Token 255: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.26853707432746887
    2. '+' → logprob: -1.5185370445251465
    3. ')' → logprob: -4.2685370445251465
    4. ']' → logprob: -7.0185370445251465
    5. '])' → logprob: -7.5185370445251465
    6. ' )' → logprob: -7.5185370445251465
    7. ' ' → logprob: -8.893537521362305
    8. ')]' → logprob: -9.518537521362305
    9. '))' → logprob: -10.268537521362305
    10. ')])' → logprob: -10.268537521362305

Token 256: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7826879024505615
    2. '+' → logprob: -1.2826879024505615
    3. ' +' → logprob: -1.4076879024505615
    4. '*' → logprob: -4.657688140869141
    5. ' )' → logprob: -4.907688140869141
    6. ' -' → logprob: -6.907688140869141
    7. ' *' → logprob: -7.032688140869141
    8. '-' → logprob: -7.407688140869141
    9. ' ' → logprob: -8.03268814086914
    10. ')*' → logprob: -8.65768814086914

Token 257: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.012747544795274734
    2. ' dist' → logprob: -4.387747764587402
    3. 'min' → logprob: -9.637747764587402
    4. '(dist' → logprob: -9.762747764587402
    5. '   ' → logprob: -11.012747764587402
    6. 'd' → logprob: -11.012747764587402
    7. 'max' → logprob: -11.387747764587402
    8. 'P' → logprob: -11.637747764587402
    9. '2' → logprob: -11.637747764587402
    10. ' ' → logprob: -11.887747764587402

Token 258: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.00018196819291915745
    2. '_s' → logprob: -9.250182151794434
    3. '[g' → logprob: -9.625182151794434
    4. 'g' → logprob: -11.875182151794434
    5. '_' → logprob: -12.375182151794434
    6. '_[' → logprob: -12.500182151794434
    7. '_p' → logprob: -14.250182151794434
    8. '[_' → logprob: -14.625182151794434
    9. '_v' → logprob: -14.625182151794434
    10. '_)' → logprob: -15.000182151794434

Token 259: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0007447104435414076
    2. '[' → logprob: -7.625744819641113
    3. '[g' → logprob: -9.500744819641113
    4. ')' → logprob: -9.625744819641113
    5. '[P' → logprob: -9.875744819641113
    6. '[V' → logprob: -10.250744819641113
    7. '[n' → logprob: -11.375744819641113
    8. 's' → logprob: -12.750744819641113
    9. ' [' → logprob: -13.375744819641113
    10. '[S' → logprob: -13.375744819641113

Token 260: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03711539879441261
    2. '])' → logprob: -3.4121153354644775
    3. '))' → logprob: -6.162115573883057
    4. ' )' → logprob: -7.162115573883057
    5. ')])' → logprob: -7.912115573883057
    6. ']' → logprob: -10.037115097045898
    7. ')
' → logprob: -10.287115097045898
    8. ']))' → logprob: -10.787115097045898
    9. ')]' → logprob: -10.787115097045898
    10. ')))' → logprob: -11.037115097045898

Token 261: 'print' (ID: 1598)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04959296062588692
    2. '<|end|>' → logprob: -3.799592971801758
    3. ')' → logprob: -4.299592971801758
    4. 'print' → logprob: -5.049592971801758
    5. '+' → logprob: -5.799592971801758
    6. '\n' → logprob: -6.424592971801758
    7. 'if' → logprob: -8.549592971801758
    8. '\' → logprob: -8.799592971801758
    9. '
' → logprob: -9.049592971801758
    10. '```' → logprob: -9.174592971801758

Token 262: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04873565584421158
    2. '(' → logprob: -3.0487356185913086
    3. 'ans' → logprob: -10.048735618591309
    4. '()' → logprob: -10.298735618591309
    5. '('' → logprob: -10.298735618591309
    6. '(max' → logprob: -11.423735618591309
    7. '(`' → logprob: -12.173735618591309
    8. '(
' → logprob: -12.423735618591309
    9. '(abs' → logprob: -12.548735618591309
    10. '(int' → logprob: -12.673735618591309

Token 263: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.625001907348633
    3. '))' → logprob: -15.750001907348633
    4. ')
' → logprob: -16.250001907348633
    5. ')`' → logprob: -17.375001907348633
    6. '+' → logprob: -18.125001907348633
    7. '')' → logprob: -18.875001907348633
    8. '`)' → logprob: -18.875001907348633
    9. '())' → logprob: -19.000001907348633
    10. ')#' → logprob: -19.125001907348633

Token 264: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.008800579234957695
    2. 'ans' → logprob: -4.758800506591797
    3. '(ans' → logprob: -9.008800506591797
    4. '	ans' → logprob: -9.883800506591797
    5. '>' → logprob: -11.758800506591797
    6. ' ' → logprob: -12.758800506591797
    7. ' >' → logprob: -14.008800506591797
    8. ' ' → logprob: -14.508800506591797
    9. '_ans' → logprob: -14.508800506591797
    10. '
' → logprob: -16.633800506591797

Token 265: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.006813169457018375
    2. '>=' → logprob: -5.631813049316406
    3. ' >' → logprob: -5.756813049316406
    4. ' >=' → logprob: -10.006813049316406
    5. ' ' → logprob: -14.506813049316406
    6. ' ' → logprob: -15.006813049316406
    7. '!=' → logprob: -15.756813049316406
    8. '()>' → logprob: -16.131813049316406
    9. '≥' → logprob: -16.256813049316406
    10. '&gt' → logprob: -16.381813049316406

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '۰' → logprob: -19.000036239624023
    4. '
' → logprob: -19.125036239624023
    5. ' ' → logprob: -19.500036239624023
    6. '０' → logprob: -19.750036239624023
    7. '   ' → logprob: -20.000036239624023
    8. '00' → logprob: -20.000036239624023
    9. '```' → logprob: -20.125036239624023
    10. '1' → logprob: -20.125036239624023

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. '1' → logprob: -15.500041007995605
    4. 'zero' → logprob: -16.81254005432129
    5. '۰' → logprob: -16.81254005432129
    6. '```' → logprob: -16.93754005432129
    7. '
' → logprob: -17.00004005432129
    8. '00' → logprob: -17.43754005432129
    9. '０' → logprob: -17.50004005432129
    10. '   ' → logprob: -17.56254005432129

Token 268: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6931516528129578
    2. 'else' → logprob: -0.6931516528129578
    3. ')' → logprob: -12.568151473999023
    4. ' ' → logprob: -14.818151473999023
    5. '	else' → logprob: -15.568151473999023
    6. ' )' → logprob: -15.943151473999023
    7. '```' → logprob: -16.443151473999023
    8. ' ' → logprob: -16.568151473999023
    9. '_else' → logprob: -17.443151473999023
    10. '   ' → logprob: -18.068151473999023

Token 269: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2932763397693634
    2. '0' → logprob: -1.418276309967041
    3. ' -' → logprob: -4.918276309967041
    4. ' ' → logprob: -6.168276309967041
    5. '"' → logprob: -6.418276309967041
    6. ''' → logprob: -7.793276309967041
    7. ''-' → logprob: -8.5432767868042
    8. '"-' → logprob: -8.9182767868042
    9. '   ' → logprob: -9.4807767868042
    10. ' "' → logprob: -10.1682767868042

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39450082182884216
    2. '-' → logprob: -1.2695008516311646
    3. '"' → logprob: -3.269500732421875
    4. ''' → logprob: -5.269500732421875
    5. ''-' → logprob: -7.519500732421875
    6. '"-' → logprob: -7.519500732421875
    7. ' -' → logprob: -8.769500732421875
    8. ' ' → logprob: -8.894500732421875
    9. '"No' → logprob: -10.019500732421875
    10. '-"' → logprob: -10.394500732421875

Token 271: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.750000953674316
    4. '))' → logprob: -17.000001907348633
    5. ')`' → logprob: -17.500001907348633
    6. '`)' → logprob: -19.125001907348633
    7. '())' → logprob: -19.500001907348633
    8. '）' → logprob: -20.125001907348633
    9. ')#' → logprob: -20.250001907348633
    10. '),' → logprob: -20.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 269
Tokens correctement prédits (1ère position, stricte): 138
Tokens correctement prédits (1ère position, avec adaptation): 144
Tokens correctement prédits (top 10): 243
Précision stricte (1ère position): 51.30%
Précision adaptée (1ère position): 53.53%
Précision (top 10): 90.33%
================================================================================
